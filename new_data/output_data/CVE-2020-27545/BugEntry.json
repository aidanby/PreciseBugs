{"buggy_code": ["2020-10-11  David Anderson\n    * configure.ac: Now version 20201011\n    * configure: Regenerated.\n2020-10-03  David Anderson\n    * Makefile.in,aclocal.m4,ar-lib,compile,configure,depcomp:\n      Running autoreconf on Ubuntu 20.04 caused some small\n      changes.\n    * COPYING: Corrected the references to the BSD copyright\n      to use \"two-clause BSD license\". \n2020-09-26  David Anderson\n    * configure.ac: Now version 20200926\n    * configure: Regenerated.\n2020-09-15  David Anderson\n    * configure.ac: Now version 20200915\n      Added -fno-omit-frame-pointer to the -fsanitize option set\n    * configure: Regenerated.\n2020-09-08  David Anderson\n    * configure.ac: Now version 20200908\n    * configure: Regenerated.\n2020-08-25  David Anderson\n    * configure.ac: Now version 20200825\n    * configure: Regenerated.\n2020-08-22  David Anderson\n    * configure.ac: Now version 20200822\n    * configure: Regenerated.\n2020-08-10  David Anderson\n    * configure.ac: Now version 20200810\n    * configure: Regenerated.\n2020-07-19  David Anderson\n    * configure.ac: Now version 20200719\n    * configure: Regenerated.\n2020-07-14  David Anderson\n    * configure.ac: Now version 20200714\n    * configure: Regenerated.\n2020-07-04  David Anderson\n    * configure.ac: Now version 20200703\n    * configure: Regenerated.\n2020-06-29  David Anderson\n    * configure.ac: Now version 20200629\n    * configure: Regenerated.\n2020-06-17  David Anderson\n    * configure.ac: Now version 20200617\n    * configure: Regenerated.\n2020-06-12  David Anderson\n    * configure.ac: Now version 20200612\n    * configure: Regenerated.\n2020-06-09  David Anderson\n    * configure.ac: Now version 20200601\n    * configure: Regenerated.\n2020-05-19  David Anderson\n    * configure.ac: Now version 20200519\n    * configure: Regenerated.\n2020-05-01  David Anderson\n    * configure.ac: Now version 20200501\n    * configure: Regenerated.\n2020-04-26  David Anderson\n    * configure.ac: Now version 20200426\n    * configure: Regenerated.\n2020-04-13  David Anderson\n    * configure.ac: Now version 20200423\n    * configure: Regenerated.\n2020-04-13  David Anderson\n    * configure.ac: Now version 20200412\n    * configure: Regenerated.\n2020-03-26  David Anderson\n    * configure.ac: Now version 20200327\n    * configure: Regenerated.\n2020-03-15  David Anderson\n    * configure.ac: Now version 20200315\n    * configure: Regenerated.\n2020-03-09  David Anderson\n    * configure.ac: Now version 20200307.\n    * configure: Regenerated.\n2020-02-25  David Anderson\n    * configure.ac: now 20200225\n    * configure: Regenerated.\n2020-02-15  David Anderson\n    * configure.ac: Version string now 20200215 as we now\n      deal with libelf-reading-relocation-sections.\n      (nolibelf code already did those as of 20200213\n    * configure: Regenerated.\n2020-02-13  David Anderson\n    * configure.ac: Version string now 20200213\n    * configure: Regenerated.\n2020-01-05  David Anderson\n    * configure.ac: Version string now 20200105\n    * configure: Regenerated.\n", "#! /bin/sh\n# Guess values for system-dependent variables and create Makefiles.\n# Generated by GNU Autoconf 2.69 for libdwarf 20201011.\n#\n# Report bugs to <libdwarf-list -at- linuxmail -dot- org>.\n#\n#\n# Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.\n#\n#\n# This configure script is free software; the Free Software Foundation\n# gives unlimited permission to copy, distribute and modify it.\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Use a proper internal environment variable to ensure we don't fall\n  # into an infinite loop, continuously re-executing ourselves.\n  if test x\"${_as_can_reexec}\" != xno && test \"x$CONFIG_SHELL\" != x; then\n    _as_can_reexec=no; export _as_can_reexec;\n    # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nas_fn_exit 255\n  fi\n  # We don't want this to propagate to other subprocesses.\n          { _as_can_reexec=; unset _as_can_reexec;}\nif test \"x$CONFIG_SHELL\" = x; then\n  as_bourne_compatible=\"if test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\"\n  as_required=\"as_fn_return () { (exit \\$1); }\nas_fn_success () { as_fn_return 0; }\nas_fn_failure () { as_fn_return 1; }\nas_fn_ret_success () { return 0; }\nas_fn_ret_failure () { return 1; }\n\nexitcode=0\nas_fn_success || { exitcode=1; echo as_fn_success failed.; }\nas_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }\nas_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }\nas_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }\nif ( set x; as_fn_ret_success y && test x = \\\"\\$1\\\" ); then :\n\nelse\n  exitcode=1; echo positional parameters were not saved.\nfi\ntest x\\$exitcode = x0 || exit 1\ntest -x / || exit 1\"\n  as_suggested=\"  as_lineno_1=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_1a=\\$LINENO\n  as_lineno_2=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_2a=\\$LINENO\n  eval 'test \\\"x\\$as_lineno_1'\\$as_run'\\\" != \\\"x\\$as_lineno_2'\\$as_run'\\\" &&\n  test \\\"x\\`expr \\$as_lineno_1'\\$as_run' + 1\\`\\\" = \\\"x\\$as_lineno_2'\\$as_run'\\\"' || exit 1\n\n  test -n \\\"\\${ZSH_VERSION+set}\\${BASH_VERSION+set}\\\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=\\$ECHO\\$ECHO\\$ECHO\\$ECHO\\$ECHO\n    ECHO=\\$ECHO\\$ECHO\\$ECHO\\$ECHO\\$ECHO\\$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \\\"X\\`printf %s \\$ECHO\\`\\\" = \\\"X\\$ECHO\\\" \\\\\n      || test \\\"X\\`print -r -- \\$ECHO\\`\\\" = \\\"X\\$ECHO\\\" ) || exit 1\ntest \\$(( 1 + 1 )) = 2 || exit 1\"\n  if (eval \"$as_required\") 2>/dev/null; then :\n  as_have_required=yes\nelse\n  as_have_required=no\nfi\n  if test x$as_have_required = xyes && (eval \"$as_suggested\") 2>/dev/null; then :\n\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  as_found=:\n  case $as_dir in #(\n\t /*)\n\t   for as_base in sh bash ksh sh5; do\n\t     # Try only shells that exist, to save several forks.\n\t     as_shell=$as_dir/$as_base\n\t     if { test -f \"$as_shell\" || test -f \"$as_shell.exe\"; } &&\n\t\t    { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$as_shell as_have_required=yes\n\t\t   if { $as_echo \"$as_bourne_compatible\"\"$as_suggested\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  break 2\nfi\nfi\n\t   done;;\n       esac\n  as_found=false\ndone\n$as_found || { if { test -f \"$SHELL\" || test -f \"$SHELL.exe\"; } &&\n\t      { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$SHELL\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$SHELL as_have_required=yes\nfi; }\nIFS=$as_save_IFS\n\n\n      if test \"x$CONFIG_SHELL\" != x; then :\n  export CONFIG_SHELL\n             # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\nfi\n\n    if test x$as_have_required = xno; then :\n  $as_echo \"$0: This script requires a shell more modern than all\"\n  $as_echo \"$0: the shells that I found on your system.\"\n  if test x${ZSH_VERSION+set} = xset ; then\n    $as_echo \"$0: In particular, zsh $ZSH_VERSION has bugs and should\"\n    $as_echo \"$0: be upgraded to zsh 4.3.4 or later.\"\n  else\n    $as_echo \"$0: Please tell bug-autoconf@gnu.org and libdwarf-list -at-\n$0: linuxmail -dot- org about your system, including any\n$0: error possibly output before this message. Then install\n$0: a modern shell, or manually run the script under such a\n$0: shell if you do have one.\"\n  fi\n  exit 1\nfi\nfi\nfi\nSHELL=${CONFIG_SHELL-/bin/sh}\nexport SHELL\n# Unset more variables known to interfere with behavior of common tools.\nCLICOLOR_FORCE= GREP_OPTIONS=\nunset CLICOLOR_FORCE GREP_OPTIONS\n\n## --------------------- ##\n## M4sh Shell Functions. ##\n## --------------------- ##\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\n\n  as_lineno_1=$LINENO as_lineno_1a=$LINENO\n  as_lineno_2=$LINENO as_lineno_2a=$LINENO\n  eval 'test \"x$as_lineno_1'$as_run'\" != \"x$as_lineno_2'$as_run'\" &&\n  test \"x`expr $as_lineno_1'$as_run' + 1`\" = \"x$as_lineno_2'$as_run'\"' || {\n  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)\n  sed -n '\n    p\n    /[$]LINENO/=\n  ' <$as_myself |\n    sed '\n      s/[$]LINENO.*/&-/\n      t lineno\n      b\n      :lineno\n      N\n      :loop\n      s/[$]LINENO\\([^'$as_cr_alnum'_].*\\n\\)\\(.*\\)/\\2\\1\\2/\n      t loop\n      s/-\\n.*//\n    ' >$as_me.lineno &&\n  chmod +x \"$as_me.lineno\" ||\n    { $as_echo \"$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell\" >&2; as_fn_exit 1; }\n\n  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have\n  # already done that, so ensure we don't try to do so again and fall\n  # in an infinite loop.  This has already happened in practice.\n  _as_can_reexec=no; export _as_can_reexec\n  # Don't try to exec as it changes $[0], causing all sort of problems\n  # (the dirname of $[0] is not the place where we might find the\n  # original and so on.  Autoconf is especially sensitive to this).\n  . \"./$as_me.lineno\"\n  # Exit status is that of the last command.\n  exit\n}\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\nSHELL=${CONFIG_SHELL-/bin/sh}\n\n\ntest -n \"$DJDIR\" || exec 7<&0 </dev/null\nexec 6>&1\n\n# Name of the host.\n# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,\n# so uname gets run too.\nac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`\n\n#\n# Initializations.\n#\nac_default_prefix=/usr/local\nac_clean_files=\nac_config_libobj_dir=.\nLIBOBJS=\ncross_compiling=no\nsubdirs=\nMFLAGS=\nMAKEFLAGS=\n\n# Identity of this package.\nPACKAGE_NAME='libdwarf'\nPACKAGE_TARNAME='libdwarf'\nPACKAGE_VERSION='20201011'\nPACKAGE_STRING='libdwarf 20201011'\nPACKAGE_BUGREPORT='libdwarf-list -at- linuxmail -dot- org'\nPACKAGE_URL=''\n\nac_unique_file=\"configure.ac\"\n# Factoring default headers for most tests.\nac_includes_default=\"\\\n#include <stdio.h>\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_STAT_H\n# include <sys/stat.h>\n#endif\n#ifdef STDC_HEADERS\n# include <stdlib.h>\n# include <stddef.h>\n#else\n# ifdef HAVE_STDLIB_H\n#  include <stdlib.h>\n# endif\n#endif\n#ifdef HAVE_STRING_H\n# if !defined STDC_HEADERS && defined HAVE_MEMORY_H\n#  include <memory.h>\n# endif\n# include <string.h>\n#endif\n#ifdef HAVE_STRINGS_H\n# include <strings.h>\n#endif\n#ifdef HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif\n#ifdef HAVE_STDINT_H\n# include <stdint.h>\n#endif\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\"\n\nac_subst_vars='am__EXEEXT_FALSE\nam__EXEEXT_TRUE\nLTLIBOBJS\nLIBOBJS\nALLOCA\nDWARF_CFLAGS_WARN\nDWARF_CXXFLAGS_WARN\nstruct_elf\nDWARF_LIBS\nCXXCPP\nam__fastdepCXX_FALSE\nam__fastdepCXX_TRUE\nCXXDEPMODE\nac_ct_CXX\nCXXFLAGS\nCXX\nrelease_info\nversion_info\nCPP\nLT_SYS_LIBRARY_PATH\nOTOOL64\nOTOOL\nLIPO\nNMEDIT\nDSYMUTIL\nMANIFEST_TOOL\nRANLIB\nLN_S\nNM\nac_ct_DUMPBIN\nDUMPBIN\nLD\nFGREP\nEGREP\nGREP\nSED\nLIBTOOL\nOBJDUMP\nDLLTOOL\nAS\nAM_BACKSLASH\nAM_DEFAULT_VERBOSITY\nAM_DEFAULT_V\nAM_V\nam__fastdepCC_FALSE\nam__fastdepCC_TRUE\nCCDEPMODE\nam__nodep\nAMDEPBACKSLASH\nAMDEP_FALSE\nAMDEP_TRUE\nam__include\nDEPDIR\nam__untar\nam__tar\nAMTAR\nam__leading_dot\nSET_MAKE\nAWK\nmkdir_p\nMKDIR_P\nINSTALL_STRIP_PROGRAM\nSTRIP\ninstall_sh\nMAKEINFO\nAUTOHEADER\nAUTOMAKE\nAUTOCONF\nACLOCAL\nVERSION\nPACKAGE\nCYGPATH_W\nam__isrc\nINSTALL_DATA\nINSTALL_SCRIPT\nINSTALL_PROGRAM\nOBJEXT\nEXEEXT\nac_ct_CC\nCPPFLAGS\nLDFLAGS\nCFLAGS\nCC\nac_ct_AR\nAR\nHAVE_WIN32_FALSE\nHAVE_WIN32_TRUE\nhost_os\nhost_vendor\nhost_cpu\nhost\nbuild_os\nbuild_vendor\nbuild_cpu\nbuild\ndwarf_namestable\nHAVE_DWARFEXAMPLE_FALSE\nHAVE_DWARFEXAMPLE_TRUE\nHAVE_DWARFGEN_FALSE\nHAVE_DWARFGEN_TRUE\ntarget_alias\nhost_alias\nbuild_alias\nLIBS\nECHO_T\nECHO_N\nECHO_C\nDEFS\nmandir\nlocaledir\nlibdir\npsdir\npdfdir\ndvidir\nhtmldir\ninfodir\ndocdir\noldincludedir\nincludedir\nrunstatedir\nlocalstatedir\nsharedstatedir\nsysconfdir\ndatadir\ndatarootdir\nlibexecdir\nsbindir\nbindir\nprogram_transform_name\nprefix\nexec_prefix\nPACKAGE_URL\nPACKAGE_BUGREPORT\nPACKAGE_STRING\nPACKAGE_VERSION\nPACKAGE_TARNAME\nPACKAGE_NAME\nPATH_SEPARATOR\nSHELL\nam__quote'\nac_subst_files=''\nac_user_opts='\nenable_option_checking\nenable_dwarfgen\nenable_dwarfexample\nenable_globalallocsums\nenable_sanitize\nenable_oldframecol\nenable_namestable\nenable_libelf\nenable_windowspath\nenable_wall\nenable_nonstandardprintf\nenable_havecustomlibelf\nenable_dependency_tracking\nenable_silent_rules\nenable_shared\nenable_static\nwith_pic\nenable_fast_install\nwith_aix_soname\nwith_gnu_ld\nwith_sysroot\nenable_libtool_lock\n'\n      ac_precious_vars='build_alias\nhost_alias\ntarget_alias\nCC\nCFLAGS\nLDFLAGS\nLIBS\nCPPFLAGS\nLT_SYS_LIBRARY_PATH\nCPP\nCXX\nCXXFLAGS\nCCC\nCXXCPP\nDWARF_LIBS'\n\n\n# Initialize some variables set by options.\nac_init_help=\nac_init_version=false\nac_unrecognized_opts=\nac_unrecognized_sep=\n# The variables have the same names as the options, with\n# dashes changed to underlines.\ncache_file=/dev/null\nexec_prefix=NONE\nno_create=\nno_recursion=\nprefix=NONE\nprogram_prefix=NONE\nprogram_suffix=NONE\nprogram_transform_name=s,x,x,\nsilent=\nsite=\nsrcdir=\nverbose=\nx_includes=NONE\nx_libraries=NONE\n\n# Installation directory options.\n# These are left unexpanded so users can \"make install exec_prefix=/foo\"\n# and all the variables that are supposed to be based on exec_prefix\n# by default will actually change.\n# Use braces instead of parens because sh, perl, etc. also accept them.\n# (The list follows the same order as the GNU Coding Standards.)\nbindir='${exec_prefix}/bin'\nsbindir='${exec_prefix}/sbin'\nlibexecdir='${exec_prefix}/libexec'\ndatarootdir='${prefix}/share'\ndatadir='${datarootdir}'\nsysconfdir='${prefix}/etc'\nsharedstatedir='${prefix}/com'\nlocalstatedir='${prefix}/var'\nrunstatedir='${localstatedir}/run'\nincludedir='${prefix}/include'\noldincludedir='/usr/include'\ndocdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\ninfodir='${datarootdir}/info'\nhtmldir='${docdir}'\ndvidir='${docdir}'\npdfdir='${docdir}'\npsdir='${docdir}'\nlibdir='${exec_prefix}/lib'\nlocaledir='${datarootdir}/locale'\nmandir='${datarootdir}/man'\n\nac_prev=\nac_dashdash=\nfor ac_option\ndo\n  # If the previous option needs an argument, assign it.\n  if test -n \"$ac_prev\"; then\n    eval $ac_prev=\\$ac_option\n    ac_prev=\n    continue\n  fi\n\n  case $ac_option in\n  *=?*) ac_optarg=`expr \"X$ac_option\" : '[^=]*=\\(.*\\)'` ;;\n  *=)   ac_optarg= ;;\n  *)    ac_optarg=yes ;;\n  esac\n\n  # Accept the important Cygnus configure options, so we can diagnose typos.\n\n  case $ac_dashdash$ac_option in\n  --)\n    ac_dashdash=yes ;;\n\n  -bindir | --bindir | --bindi | --bind | --bin | --bi)\n    ac_prev=bindir ;;\n  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)\n    bindir=$ac_optarg ;;\n\n  -build | --build | --buil | --bui | --bu)\n    ac_prev=build_alias ;;\n  -build=* | --build=* | --buil=* | --bui=* | --bu=*)\n    build_alias=$ac_optarg ;;\n\n  -cache-file | --cache-file | --cache-fil | --cache-fi \\\n  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)\n    ac_prev=cache_file ;;\n  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)\n    cache_file=$ac_optarg ;;\n\n  --config-cache | -C)\n    cache_file=config.cache ;;\n\n  -datadir | --datadir | --datadi | --datad)\n    ac_prev=datadir ;;\n  -datadir=* | --datadir=* | --datadi=* | --datad=*)\n    datadir=$ac_optarg ;;\n\n  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \\\n  | --dataroo | --dataro | --datar)\n    ac_prev=datarootdir ;;\n  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \\\n  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)\n    datarootdir=$ac_optarg ;;\n\n  -disable-* | --disable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*disable-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=no ;;\n\n  -docdir | --docdir | --docdi | --doc | --do)\n    ac_prev=docdir ;;\n  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)\n    docdir=$ac_optarg ;;\n\n  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)\n    ac_prev=dvidir ;;\n  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)\n    dvidir=$ac_optarg ;;\n\n  -enable-* | --enable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*enable-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=\\$ac_optarg ;;\n\n  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \\\n  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \\\n  | --exec | --exe | --ex)\n    ac_prev=exec_prefix ;;\n  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \\\n  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \\\n  | --exec=* | --exe=* | --ex=*)\n    exec_prefix=$ac_optarg ;;\n\n  -gas | --gas | --ga | --g)\n    # Obsolete; use --with-gas.\n    with_gas=yes ;;\n\n  -help | --help | --hel | --he | -h)\n    ac_init_help=long ;;\n  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)\n    ac_init_help=recursive ;;\n  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)\n    ac_init_help=short ;;\n\n  -host | --host | --hos | --ho)\n    ac_prev=host_alias ;;\n  -host=* | --host=* | --hos=* | --ho=*)\n    host_alias=$ac_optarg ;;\n\n  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)\n    ac_prev=htmldir ;;\n  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \\\n  | --ht=*)\n    htmldir=$ac_optarg ;;\n\n  -includedir | --includedir | --includedi | --included | --include \\\n  | --includ | --inclu | --incl | --inc)\n    ac_prev=includedir ;;\n  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \\\n  | --includ=* | --inclu=* | --incl=* | --inc=*)\n    includedir=$ac_optarg ;;\n\n  -infodir | --infodir | --infodi | --infod | --info | --inf)\n    ac_prev=infodir ;;\n  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)\n    infodir=$ac_optarg ;;\n\n  -libdir | --libdir | --libdi | --libd)\n    ac_prev=libdir ;;\n  -libdir=* | --libdir=* | --libdi=* | --libd=*)\n    libdir=$ac_optarg ;;\n\n  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \\\n  | --libexe | --libex | --libe)\n    ac_prev=libexecdir ;;\n  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \\\n  | --libexe=* | --libex=* | --libe=*)\n    libexecdir=$ac_optarg ;;\n\n  -localedir | --localedir | --localedi | --localed | --locale)\n    ac_prev=localedir ;;\n  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)\n    localedir=$ac_optarg ;;\n\n  -localstatedir | --localstatedir | --localstatedi | --localstated \\\n  | --localstate | --localstat | --localsta | --localst | --locals)\n    ac_prev=localstatedir ;;\n  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \\\n  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)\n    localstatedir=$ac_optarg ;;\n\n  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)\n    ac_prev=mandir ;;\n  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)\n    mandir=$ac_optarg ;;\n\n  -nfp | --nfp | --nf)\n    # Obsolete; use --without-fp.\n    with_fp=no ;;\n\n  -no-create | --no-create | --no-creat | --no-crea | --no-cre \\\n  | --no-cr | --no-c | -n)\n    no_create=yes ;;\n\n  -no-recursion | --no-recursion | --no-recursio | --no-recursi \\\n  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)\n    no_recursion=yes ;;\n\n  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \\\n  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \\\n  | --oldin | --oldi | --old | --ol | --o)\n    ac_prev=oldincludedir ;;\n  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \\\n  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \\\n  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)\n    oldincludedir=$ac_optarg ;;\n\n  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n    ac_prev=prefix ;;\n  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)\n    prefix=$ac_optarg ;;\n\n  -program-prefix | --program-prefix | --program-prefi | --program-pref \\\n  | --program-pre | --program-pr | --program-p)\n    ac_prev=program_prefix ;;\n  -program-prefix=* | --program-prefix=* | --program-prefi=* \\\n  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)\n    program_prefix=$ac_optarg ;;\n\n  -program-suffix | --program-suffix | --program-suffi | --program-suff \\\n  | --program-suf | --program-su | --program-s)\n    ac_prev=program_suffix ;;\n  -program-suffix=* | --program-suffix=* | --program-suffi=* \\\n  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)\n    program_suffix=$ac_optarg ;;\n\n  -program-transform-name | --program-transform-name \\\n  | --program-transform-nam | --program-transform-na \\\n  | --program-transform-n | --program-transform- \\\n  | --program-transform | --program-transfor \\\n  | --program-transfo | --program-transf \\\n  | --program-trans | --program-tran \\\n  | --progr-tra | --program-tr | --program-t)\n    ac_prev=program_transform_name ;;\n  -program-transform-name=* | --program-transform-name=* \\\n  | --program-transform-nam=* | --program-transform-na=* \\\n  | --program-transform-n=* | --program-transform-=* \\\n  | --program-transform=* | --program-transfor=* \\\n  | --program-transfo=* | --program-transf=* \\\n  | --program-trans=* | --program-tran=* \\\n  | --progr-tra=* | --program-tr=* | --program-t=*)\n    program_transform_name=$ac_optarg ;;\n\n  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)\n    ac_prev=pdfdir ;;\n  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)\n    pdfdir=$ac_optarg ;;\n\n  -psdir | --psdir | --psdi | --psd | --ps)\n    ac_prev=psdir ;;\n  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)\n    psdir=$ac_optarg ;;\n\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil)\n    silent=yes ;;\n\n  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n  | --runstate | --runstat | --runsta | --runst | --runs \\\n  | --run | --ru | --r)\n    ac_prev=runstatedir ;;\n  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n  | --run=* | --ru=* | --r=*)\n    runstatedir=$ac_optarg ;;\n\n  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n    ac_prev=sbindir ;;\n  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n  | --sbi=* | --sb=*)\n    sbindir=$ac_optarg ;;\n\n  -sharedstatedir | --sharedstatedir | --sharedstatedi \\\n  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \\\n  | --sharedst | --shareds | --shared | --share | --shar \\\n  | --sha | --sh)\n    ac_prev=sharedstatedir ;;\n  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \\\n  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \\\n  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \\\n  | --sha=* | --sh=*)\n    sharedstatedir=$ac_optarg ;;\n\n  -site | --site | --sit)\n    ac_prev=site ;;\n  -site=* | --site=* | --sit=*)\n    site=$ac_optarg ;;\n\n  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n    ac_prev=srcdir ;;\n  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n    srcdir=$ac_optarg ;;\n\n  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \\\n  | --syscon | --sysco | --sysc | --sys | --sy)\n    ac_prev=sysconfdir ;;\n  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \\\n  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)\n    sysconfdir=$ac_optarg ;;\n\n  -target | --target | --targe | --targ | --tar | --ta | --t)\n    ac_prev=target_alias ;;\n  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)\n    target_alias=$ac_optarg ;;\n\n  -v | -verbose | --verbose | --verbos | --verbo | --verb)\n    verbose=yes ;;\n\n  -version | --version | --versio | --versi | --vers | -V)\n    ac_init_version=: ;;\n\n  -with-* | --with-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*with-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=\\$ac_optarg ;;\n\n  -without-* | --without-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*without-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=no ;;\n\n  --x)\n    # Obsolete; use --with-x.\n    with_x=yes ;;\n\n  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \\\n  | --x-incl | --x-inc | --x-in | --x-i)\n    ac_prev=x_includes ;;\n  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \\\n  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)\n    x_includes=$ac_optarg ;;\n\n  -x-libraries | --x-libraries | --x-librarie | --x-librari \\\n  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)\n    ac_prev=x_libraries ;;\n  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \\\n  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)\n    x_libraries=$ac_optarg ;;\n\n  -*) as_fn_error $? \"unrecognized option: \\`$ac_option'\nTry \\`$0 --help' for more information\"\n    ;;\n\n  *=*)\n    ac_envvar=`expr \"x$ac_option\" : 'x\\([^=]*\\)='`\n    # Reject names that are not valid shell variable names.\n    case $ac_envvar in #(\n      '' | [0-9]* | *[!_$as_cr_alnum]* )\n      as_fn_error $? \"invalid variable name: \\`$ac_envvar'\" ;;\n    esac\n    eval $ac_envvar=\\$ac_optarg\n    export $ac_envvar ;;\n\n  *)\n    # FIXME: should be removed in autoconf 3.0.\n    $as_echo \"$as_me: WARNING: you should use --build, --host, --target\" >&2\n    expr \"x$ac_option\" : \".*[^-._$as_cr_alnum]\" >/dev/null &&\n      $as_echo \"$as_me: WARNING: invalid host type: $ac_option\" >&2\n    : \"${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}\"\n    ;;\n\n  esac\ndone\n\nif test -n \"$ac_prev\"; then\n  ac_option=--`echo $ac_prev | sed 's/_/-/g'`\n  as_fn_error $? \"missing argument to $ac_option\"\nfi\n\nif test -n \"$ac_unrecognized_opts\"; then\n  case $enable_option_checking in\n    no) ;;\n    fatal) as_fn_error $? \"unrecognized options: $ac_unrecognized_opts\" ;;\n    *)     $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2 ;;\n  esac\nfi\n\n# Check all directory arguments for consistency.\nfor ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n\t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n\t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n\t\tlibdir localedir mandir runstatedir\ndo\n  eval ac_val=\\$$ac_var\n  # Remove trailing slashes.\n  case $ac_val in\n    */ )\n      ac_val=`expr \"X$ac_val\" : 'X\\(.*[^/]\\)' \\| \"X$ac_val\" : 'X\\(.*\\)'`\n      eval $ac_var=\\$ac_val;;\n  esac\n  # Be sure to have absolute directory names.\n  case $ac_val in\n    [\\\\/$]* | ?:[\\\\/]* )  continue;;\n    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;\n  esac\n  as_fn_error $? \"expected an absolute directory name for --$ac_var: $ac_val\"\ndone\n\n# There might be people who depend on the old broken behavior: `$host'\n# used to hold the argument of --host etc.\n# FIXME: To remove some day.\nbuild=$build_alias\nhost=$host_alias\ntarget=$target_alias\n\n# FIXME: To remove some day.\nif test \"x$host_alias\" != x; then\n  if test \"x$build_alias\" = x; then\n    cross_compiling=maybe\n  elif test \"x$build_alias\" != \"x$host_alias\"; then\n    cross_compiling=yes\n  fi\nfi\n\nac_tool_prefix=\ntest -n \"$host_alias\" && ac_tool_prefix=$host_alias-\n\ntest \"$silent\" = yes && exec 6>/dev/null\n\n\nac_pwd=`pwd` && test -n \"$ac_pwd\" &&\nac_ls_di=`ls -di .` &&\nac_pwd_ls_di=`cd \"$ac_pwd\" && ls -di .` ||\n  as_fn_error $? \"working directory cannot be determined\"\ntest \"X$ac_ls_di\" = \"X$ac_pwd_ls_di\" ||\n  as_fn_error $? \"pwd does not report name of working directory\"\n\n\n# Find the source files, if location was not specified.\nif test -z \"$srcdir\"; then\n  ac_srcdir_defaulted=yes\n  # Try the directory containing this script, then the parent directory.\n  ac_confdir=`$as_dirname -- \"$as_myself\" ||\n$as_expr X\"$as_myself\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_myself\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_myself\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  srcdir=$ac_confdir\n  if test ! -r \"$srcdir/$ac_unique_file\"; then\n    srcdir=..\n  fi\nelse\n  ac_srcdir_defaulted=no\nfi\nif test ! -r \"$srcdir/$ac_unique_file\"; then\n  test \"$ac_srcdir_defaulted\" = yes && srcdir=\"$ac_confdir or ..\"\n  as_fn_error $? \"cannot find sources ($ac_unique_file) in $srcdir\"\nfi\nac_msg=\"sources are in $srcdir, but \\`cd $srcdir' does not work\"\nac_abs_confdir=`(\n\tcd \"$srcdir\" && test -r \"./$ac_unique_file\" || as_fn_error $? \"$ac_msg\"\n\tpwd)`\n# When building in place, set srcdir=.\nif test \"$ac_abs_confdir\" = \"$ac_pwd\"; then\n  srcdir=.\nfi\n# Remove unnecessary trailing slashes from srcdir.\n# Double slashes in file names in object file debugging info\n# mess up M-x gdb in Emacs.\ncase $srcdir in\n*/) srcdir=`expr \"X$srcdir\" : 'X\\(.*[^/]\\)' \\| \"X$srcdir\" : 'X\\(.*\\)'`;;\nesac\nfor ac_var in $ac_precious_vars; do\n  eval ac_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_env_${ac_var}_value=\\$${ac_var}\n  eval ac_cv_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_cv_env_${ac_var}_value=\\$${ac_var}\ndone\n\n#\n# Report the --help message.\n#\nif test \"$ac_init_help\" = \"long\"; then\n  # Omit some internal or obsolete options to make the list less imposing.\n  # This message is too long to be a string in the A/UX 3.1 sh.\n  cat <<_ACEOF\n\\`configure' configures libdwarf 20201011 to adapt to many kinds of systems.\n\nUsage: $0 [OPTION]... [VAR=VALUE]...\n\nTo assign environment variables (e.g., CC, CFLAGS...), specify them as\nVAR=VALUE.  See below for descriptions of some of the useful variables.\n\nDefaults for the options are specified in brackets.\n\nConfiguration:\n  -h, --help              display this help and exit\n      --help=short        display options specific to this package\n      --help=recursive    display the short help of all the included packages\n  -V, --version           display version information and exit\n  -q, --quiet, --silent   do not print \\`checking ...' messages\n      --cache-file=FILE   cache test results in FILE [disabled]\n  -C, --config-cache      alias for \\`--cache-file=config.cache'\n  -n, --no-create         do not create output files\n      --srcdir=DIR        find the sources in DIR [configure dir or \\`..']\n\nInstallation directories:\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [$ac_default_prefix]\n  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX\n                          [PREFIX]\n\nBy default, \\`make install' will install all the files in\n\\`$ac_default_prefix/bin', \\`$ac_default_prefix/lib' etc.  You can specify\nan installation prefix other than \\`$ac_default_prefix' using \\`--prefix',\nfor instance \\`--prefix=\\$HOME'.\n\nFor better control, use the options below.\n\nFine tuning of the installation directories:\n  --bindir=DIR            user executables [EPREFIX/bin]\n  --sbindir=DIR           system admin executables [EPREFIX/sbin]\n  --libexecdir=DIR        program executables [EPREFIX/libexec]\n  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n  --libdir=DIR            object code libraries [EPREFIX/lib]\n  --includedir=DIR        C header files [PREFIX/include]\n  --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]\n  --infodir=DIR           info documentation [DATAROOTDIR/info]\n  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/libdwarf]\n  --htmldir=DIR           html documentation [DOCDIR]\n  --dvidir=DIR            dvi documentation [DOCDIR]\n  --pdfdir=DIR            pdf documentation [DOCDIR]\n  --psdir=DIR             ps documentation [DOCDIR]\n_ACEOF\n\n  cat <<\\_ACEOF\n\nProgram names:\n  --program-prefix=PREFIX            prepend PREFIX to installed program names\n  --program-suffix=SUFFIX            append SUFFIX to installed program names\n  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names\n\nSystem types:\n  --build=BUILD     configure for building on BUILD [guessed]\n  --host=HOST       cross-compile to build programs to run on HOST [BUILD]\n_ACEOF\nfi\n\nif test -n \"$ac_init_help\"; then\n  case $ac_init_help in\n     short | recursive ) echo \"Configuration of libdwarf 20201011:\";;\n   esac\n  cat <<\\_ACEOF\n\nOptional Features:\n  --disable-option-checking  ignore unrecognized --enable/--with options\n  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n  --enable-dwarfgen       enable dwarfgen compilation [default=no]\n  --enable-dwarfexample   enable dwarfexample compilation [default=no]\n  --enable-global-alloc-sums\n                          Enables some allocation counting in dwarf_alloc.c\n                          (default is NO)\n  --enable-sanitize       enable sanitize compiler option [default=no]\n  --enable-oldframecol    enable old frame columns [default=no]\n  --enable-namestable     enable name string functions implemented as binary\n                          search (default is with C switch) [default=no]\n  --disable-libelf        disable use of libelf (default is enable)\n                          [default=yes]\n  --enable-windowspath    Detect certain Windows paths as full paths (default\n                          is NO)\n  --enable-wall           enable -Wall and other options [default=no]\n  --enable-nonstandardprintf\n                          Use a special printf format for 64bit (default is\n                          NO)\n  --enable-havecustomlibelf\n                          including a custom libelf library (default is NO)\n  --enable-dependency-tracking\n                          do not reject slow dependency extractors\n  --disable-dependency-tracking\n                          speeds up one-time build\n  --enable-silent-rules   less verbose build output (undo: \"make V=1\")\n  --disable-silent-rules  verbose build output (undo: \"make V=0\")\n  --enable-shared[=PKGS]  build shared libraries [default=no]\n  --enable-static[=PKGS]  build static libraries [default=yes]\n  --enable-fast-install[=PKGS]\n                          optimize for fast installation [default=yes]\n  --disable-libtool-lock  avoid locking (might break parallel builds)\n\nOptional Packages:\n  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use\n                          both]\n  --with-aix-soname=aix|svr4|both\n                          shared library versioning (aka \"SONAME\") variant to\n                          provide on AIX, [default=aix].\n  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the\n                          compiler's sysroot if not specified).\n\nSome influential environment variables:\n  CC          C compiler command\n  CFLAGS      C compiler flags\n  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a\n              nonstandard directory <lib dir>\n  LIBS        libraries to pass to the linker, e.g. -l<library>\n  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if\n              you have headers in a nonstandard directory <include dir>\n  LT_SYS_LIBRARY_PATH\n              User-defined run-time library search path.\n  CPP         C preprocessor\n  CXX         C++ compiler command\n  CXXFLAGS    C++ compiler flags\n  CXXCPP      C++ preprocessor\n  DWARF_LIBS  linker flags when linking libdwarf\n\nUse these variables to override the choices made by `configure' or to help\nit to find libraries and programs with nonstandard names/locations.\n\nReport bugs to <libdwarf-list -at- linuxmail -dot- org>.\n_ACEOF\nac_status=$?\nfi\n\nif test \"$ac_init_help\" = \"recursive\"; then\n  # If there are subdirs, report their specific --help.\n  for ac_dir in : $ac_subdirs_all; do test \"x$ac_dir\" = x: && continue\n    test -d \"$ac_dir\" ||\n      { cd \"$srcdir\" && ac_pwd=`pwd` && srcdir=. && test -d \"$ac_dir\"; } ||\n      continue\n    ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n    cd \"$ac_dir\" || { ac_status=$?; continue; }\n    # Check for guested configure.\n    if test -f \"$ac_srcdir/configure.gnu\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure.gnu\" --help=recursive\n    elif test -f \"$ac_srcdir/configure\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure\" --help=recursive\n    else\n      $as_echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n    fi || ac_status=$?\n    cd \"$ac_pwd\" || { ac_status=$?; break; }\n  done\nfi\n\ntest -n \"$ac_init_help\" && exit $ac_status\nif $ac_init_version; then\n  cat <<\\_ACEOF\nlibdwarf configure 20201011\ngenerated by GNU Autoconf 2.69\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis configure script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\n_ACEOF\n  exit\nfi\n\n## ------------------------ ##\n## Autoconf initialization. ##\n## ------------------------ ##\n\n# ac_fn_c_try_compile LINENO\n# --------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_compile\n\n# ac_fn_c_try_link LINENO\n# -----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_link ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest$ac_exeext\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t test -x conftest$ac_exeext\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n  # interfere with the next link command; also delete a directory that is\n  # left behind by Apple's compiler.  We do this before executing the actions.\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_link\n\n# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists and can be compiled using the include files in\n# INCLUDES, setting the cache variable VAR accordingly.\nac_fn_c_check_header_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  eval \"$3=yes\"\nelse\n  eval \"$3=no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_compile\n\n# ac_fn_c_try_cpp LINENO\n# ----------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_c_preproc_warn_flag$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_cpp\n\n# ac_fn_c_try_run LINENO\n# ----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes\n# that executables *can* be run.\nac_fn_c_try_run ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: program exited with status $ac_status\" >&5\n       $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n       ac_retval=$ac_status\nfi\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_run\n\n# ac_fn_c_check_func LINENO FUNC VAR\n# ----------------------------------\n# Tests whether FUNC exists, setting the cache variable VAR accordingly\nac_fn_c_check_func ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n/* Define $2 to an innocuous variant, in case <limits.h> declares $2.\n   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n#define $2 innocuous_$2\n\n/* System header to define __stub macros and hopefully few prototypes,\n    which can conflict with char $2 (); below.\n    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n    <limits.h> exists even on freestanding compilers.  */\n\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\n#undef $2\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar $2 ();\n/* The GNU C library defines this for functions which it implements\n    to always fail with ENOSYS.  Some functions are actually named\n    something starting with __ and the normal name is an alias.  */\n#if defined __stub_$2 || defined __stub___$2\nchoke me\n#endif\n\nint\nmain ()\n{\nreturn $2 ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  eval \"$3=yes\"\nelse\n  eval \"$3=no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_func\n\n# ac_fn_cxx_try_compile LINENO\n# ----------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_compile\n\n# ac_fn_cxx_try_cpp LINENO\n# ------------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_cpp\n\n# ac_fn_cxx_try_link LINENO\n# -------------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_link ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest$ac_exeext\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t test -x conftest$ac_exeext\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n  # interfere with the next link command; also delete a directory that is\n  # left behind by Apple's compiler.  We do this before executing the actions.\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_link\n\n# ac_fn_c_check_header_mongrel LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists, giving a warning if it cannot be compiled using\n# the include files in INCLUDES and setting the cache variable VAR\n# accordingly.\nac_fn_c_check_header_mongrel ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if eval \\${$3+:} false; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\nelse\n  # Is the header compilable?\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking $2 usability\" >&5\n$as_echo_n \"checking $2 usability... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_header_compiler=yes\nelse\n  ac_header_compiler=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler\" >&5\n$as_echo \"$ac_header_compiler\" >&6; }\n\n# Is the header present?\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking $2 presence\" >&5\n$as_echo_n \"checking $2 presence... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <$2>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  ac_header_preproc=yes\nelse\n  ac_header_preproc=no\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc\" >&5\n$as_echo \"$ac_header_preproc\" >&6; }\n\n# So?  What about this header?\ncase $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in #((\n  yes:no: )\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!\" >&5\n$as_echo \"$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result\" >&5\n$as_echo \"$as_me: WARNING: $2: proceeding with the compiler's result\" >&2;}\n    ;;\n  no:yes:* )\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled\" >&5\n$as_echo \"$as_me: WARNING: $2: present but cannot be compiled\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?\" >&5\n$as_echo \"$as_me: WARNING: $2:     check for missing prerequisite headers?\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation\" >&5\n$as_echo \"$as_me: WARNING: $2: see the Autoconf documentation\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n$as_echo \"$as_me: WARNING: $2:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result\" >&5\n$as_echo \"$as_me: WARNING: $2: proceeding with the compiler's result\" >&2;}\n( $as_echo \"## ----------------------------------------------------- ##\n## Report this to libdwarf-list -at- linuxmail -dot- org ##\n## ----------------------------------------------------- ##\"\n     ) | sed \"s/^/$as_me: WARNING:     /\" >&2\n    ;;\nesac\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  eval \"$3=\\$ac_header_compiler\"\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_mongrel\n\n# ac_fn_c_check_type LINENO TYPE VAR INCLUDES\n# -------------------------------------------\n# Tests whether TYPE exists after having included INCLUDES, setting cache\n# variable VAR accordingly.\nac_fn_c_check_type ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  eval \"$3=no\"\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nif (sizeof ($2))\n\t return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nif (sizeof (($2)))\n\t    return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  eval \"$3=yes\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_type\ncat >config.log <<_ACEOF\nThis file contains any messages produced by compilers while\nrunning configure, to aid debugging if configure makes a mistake.\n\nIt was created by libdwarf $as_me 20201011, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  $ $0 $@\n\n_ACEOF\nexec 5>>config.log\n{\ncat <<_ASUNAME\n## --------- ##\n## Platform. ##\n## --------- ##\n\nhostname = `(hostname || uname -n) 2>/dev/null | sed 1q`\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`\n\n/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`\n/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`\n/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`\n/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`\n\n_ASUNAME\n\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    $as_echo \"PATH: $as_dir\"\n  done\nIFS=$as_save_IFS\n\n} >&5\n\ncat >&5 <<_ACEOF\n\n\n## ----------- ##\n## Core tests. ##\n## ----------- ##\n\n_ACEOF\n\n\n# Keep a trace of the command line.\n# Strip out --no-create and --no-recursion so they do not pile up.\n# Strip out --silent because we don't want to record it for future runs.\n# Also quote any args containing shell meta-characters.\n# Make two passes to allow for proper duplicate-argument suppression.\nac_configure_args=\nac_configure_args0=\nac_configure_args1=\nac_must_keep_next=false\nfor ac_pass in 1 2\ndo\n  for ac_arg\n  do\n    case $ac_arg in\n    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;\n    -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n    | -silent | --silent | --silen | --sile | --sil)\n      continue ;;\n    *\\'*)\n      ac_arg=`$as_echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    case $ac_pass in\n    1) as_fn_append ac_configure_args0 \" '$ac_arg'\" ;;\n    2)\n      as_fn_append ac_configure_args1 \" '$ac_arg'\"\n      if test $ac_must_keep_next = true; then\n\tac_must_keep_next=false # Got value, back to normal.\n      else\n\tcase $ac_arg in\n\t  *=* | --config-cache | -C | -disable-* | --disable-* \\\n\t  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \\\n\t  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \\\n\t  | -with-* | --with-* | -without-* | --without-* | --x)\n\t    case \"$ac_configure_args0 \" in\n\t      \"$ac_configure_args1\"*\" '$ac_arg' \"* ) continue ;;\n\t    esac\n\t    ;;\n\t  -* ) ac_must_keep_next=true ;;\n\tesac\n      fi\n      as_fn_append ac_configure_args \" '$ac_arg'\"\n      ;;\n    esac\n  done\ndone\n{ ac_configure_args0=; unset ac_configure_args0;}\n{ ac_configure_args1=; unset ac_configure_args1;}\n\n# When interrupted or exit'd, cleanup temporary files, and complete\n# config.log.  We remove comments because anyway the quotes in there\n# would cause problems or look ugly.\n# WARNING: Use '\\'' to represent an apostrophe within the trap.\n# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.\ntrap 'exit_status=$?\n  # Save into config.log some information that might help in debugging.\n  {\n    echo\n\n    $as_echo \"## ---------------- ##\n## Cache variables. ##\n## ---------------- ##\"\n    echo\n    # The following way of writing the cache mishandles newlines in values,\n(\n  for ac_var in `(set) 2>&1 | sed -n '\\''s/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'\\''`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n  (set) 2>&1 |\n    case $as_nl`(ac_space='\\'' '\\''; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      sed -n \\\n\t\"s/'\\''/'\\''\\\\\\\\'\\'''\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\''\\\\2'\\''/p\"\n      ;; #(\n    *)\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n)\n    echo\n\n    $as_echo \"## ----------------- ##\n## Output variables. ##\n## ----------------- ##\"\n    echo\n    for ac_var in $ac_subst_vars\n    do\n      eval ac_val=\\$$ac_var\n      case $ac_val in\n      *\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n      esac\n      $as_echo \"$ac_var='\\''$ac_val'\\''\"\n    done | sort\n    echo\n\n    if test -n \"$ac_subst_files\"; then\n      $as_echo \"## ------------------- ##\n## File substitutions. ##\n## ------------------- ##\"\n      echo\n      for ac_var in $ac_subst_files\n      do\n\teval ac_val=\\$$ac_var\n\tcase $ac_val in\n\t*\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n\tesac\n\t$as_echo \"$ac_var='\\''$ac_val'\\''\"\n      done | sort\n      echo\n    fi\n\n    if test -s confdefs.h; then\n      $as_echo \"## ----------- ##\n## confdefs.h. ##\n## ----------- ##\"\n      echo\n      cat confdefs.h\n      echo\n    fi\n    test \"$ac_signal\" != 0 &&\n      $as_echo \"$as_me: caught signal $ac_signal\"\n    $as_echo \"$as_me: exit $exit_status\"\n  } >&5\n  rm -f core *.core core.conftest.* &&\n    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&\n    exit $exit_status\n' 0\nfor ac_signal in 1 2 13 15; do\n  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal\ndone\nac_signal=0\n\n# confdefs.h avoids OS command line length limits that DEFS can exceed.\nrm -f -r conftest* confdefs.h\n\n$as_echo \"/* confdefs.h */\" > confdefs.h\n\n# Predefined preprocessor variables.\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_NAME \"$PACKAGE_NAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_TARNAME \"$PACKAGE_TARNAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_VERSION \"$PACKAGE_VERSION\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_STRING \"$PACKAGE_STRING\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_BUGREPORT \"$PACKAGE_BUGREPORT\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_URL \"$PACKAGE_URL\"\n_ACEOF\n\n\n# Let the site file select an alternate cache file if it wants to.\n# Prefer an explicitly selected file to automatically selected ones.\nac_site_file1=NONE\nac_site_file2=NONE\nif test -n \"$CONFIG_SITE\"; then\n  # We do not want a PATH search for config.site.\n  case $CONFIG_SITE in #((\n    -*)  ac_site_file1=./$CONFIG_SITE;;\n    */*) ac_site_file1=$CONFIG_SITE;;\n    *)   ac_site_file1=./$CONFIG_SITE;;\n  esac\nelif test \"x$prefix\" != xNONE; then\n  ac_site_file1=$prefix/share/config.site\n  ac_site_file2=$prefix/etc/config.site\nelse\n  ac_site_file1=$ac_default_prefix/share/config.site\n  ac_site_file2=$ac_default_prefix/etc/config.site\nfi\nfor ac_site_file in \"$ac_site_file1\" \"$ac_site_file2\"\ndo\n  test \"x$ac_site_file\" = xNONE && continue\n  if test /dev/null != \"$ac_site_file\" && test -r \"$ac_site_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file\" >&5\n$as_echo \"$as_me: loading site script $ac_site_file\" >&6;}\n    sed 's/^/| /' \"$ac_site_file\" >&5\n    . \"$ac_site_file\" \\\n      || { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"failed to load site script $ac_site_file\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n  fi\ndone\n\nif test -r \"$cache_file\"; then\n  # Some versions of bash will fail to source /dev/null (special files\n  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.\n  if test /dev/null != \"$cache_file\" && test -f \"$cache_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading cache $cache_file\" >&5\n$as_echo \"$as_me: loading cache $cache_file\" >&6;}\n    case $cache_file in\n      [\\\\/]* | ?:[\\\\/]* ) . \"$cache_file\";;\n      *)                      . \"./$cache_file\";;\n    esac\n  fi\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: creating cache $cache_file\" >&5\n$as_echo \"$as_me: creating cache $cache_file\" >&6;}\n  >$cache_file\nfi\n\n# Check that the precious variables saved in the cache have kept the same\n# value.\nac_cache_corrupted=false\nfor ac_var in $ac_precious_vars; do\n  eval ac_old_set=\\$ac_cv_env_${ac_var}_set\n  eval ac_new_set=\\$ac_env_${ac_var}_set\n  eval ac_old_val=\\$ac_cv_env_${ac_var}_value\n  eval ac_new_val=\\$ac_env_${ac_var}_value\n  case $ac_old_set,$ac_new_set in\n    set,)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,set)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was not set in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was not set in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,);;\n    *)\n      if test \"x$ac_old_val\" != \"x$ac_new_val\"; then\n\t# differences in whitespace do not lead to failure.\n\tac_old_val_w=`echo x $ac_old_val`\n\tac_new_val_w=`echo x $ac_new_val`\n\tif test \"$ac_old_val_w\" != \"$ac_new_val_w\"; then\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' has changed since the previous run:\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' has changed since the previous run:\" >&2;}\n\t  ac_cache_corrupted=:\n\telse\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&5\n$as_echo \"$as_me: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&2;}\n\t  eval $ac_var=\\$ac_old_val\n\tfi\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   former value:  \\`$ac_old_val'\" >&5\n$as_echo \"$as_me:   former value:  \\`$ac_old_val'\" >&2;}\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   current value: \\`$ac_new_val'\" >&5\n$as_echo \"$as_me:   current value: \\`$ac_new_val'\" >&2;}\n      fi;;\n  esac\n  # Pass precious variables to config.status.\n  if test \"$ac_new_set\" = set; then\n    case $ac_new_val in\n    *\\'*) ac_arg=$ac_var=`$as_echo \"$ac_new_val\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    *) ac_arg=$ac_var=$ac_new_val ;;\n    esac\n    case \" $ac_configure_args \" in\n      *\" '$ac_arg' \"*) ;; # Avoid dups.  Use of quotes ensures accuracy.\n      *) as_fn_append ac_configure_args \" '$ac_arg'\" ;;\n    esac\n  fi\ndone\nif $ac_cache_corrupted; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build\" >&5\n$as_echo \"$as_me: error: changes in the environment can compromise the build\" >&2;}\n  as_fn_error $? \"run \\`make distclean' and/or \\`rm $cache_file' and start over\" \"$LINENO\" 5\nfi\n## -------------------- ##\n## Main body of script. ##\n## -------------------- ##\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\nac_config_headers=\"$ac_config_headers config.h\"\n\n\n\n\n### Additional options to configure\n\n# Check whether --enable-dwarfgen was given.\nif test \"${enable_dwarfgen+set}\" = set; then :\n  enableval=$enable_dwarfgen;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_dwarfgen=\"yes\"\nelse\n  enable_dwarfgen=\"no\"\nfi\n\nelse\n  enable_dwarfgen=\"no\"\nfi\n\n if test \"x${enable_dwarfgen}\" = \"xyes\"; then\n  HAVE_DWARFGEN_TRUE=\n  HAVE_DWARFGEN_FALSE='#'\nelse\n  HAVE_DWARFGEN_TRUE='#'\n  HAVE_DWARFGEN_FALSE=\nfi\n\n\n# Check whether --enable-dwarfexample was given.\nif test \"${enable_dwarfexample+set}\" = set; then :\n  enableval=$enable_dwarfexample;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_dwarfexample=\"yes\"\nelse\n  enable_dwarfexample=\"no\"\nfi\n\nelse\n  enable_dwarfexample=\"no\"\nfi\n\n if test \"x${enable_dwarfexample}\" = \"xyes\"; then\n  HAVE_DWARFEXAMPLE_TRUE=\n  HAVE_DWARFEXAMPLE_FALSE='#'\nelse\n  HAVE_DWARFEXAMPLE_TRUE='#'\n  HAVE_DWARFEXAMPLE_FALSE=\nfi\n\n\n### Solely for checking libdwarf allocation counts,sizes\n### Do not use without a good reason . See libdwarf/dwarf_alloc.c\n# Check whether --enable-globalallocsums was given.\nif test \"${enable_globalallocsums+set}\" = set; then :\n  enableval=$enable_globalallocsums;\n$as_echo \"#define HAVE_GLOBAL_ALLOC_SUMS 1\" >>confdefs.h\n\n           enable_globalallocsums=\"yes\"\n\nelse\n  enable_globalallocsums=\"no\"\nfi\n\n\n# Check whether --enable-sanitize was given.\nif test \"${enable_sanitize+set}\" = set; then :\n  enableval=$enable_sanitize;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_sanitize=\"yes\"\nelse\n  enable_sanitize=\"no\"\nfi\n\nelse\n  enable_sanitize=\"no\"\nfi\n\n\n# Check whether --enable-oldframecol was given.\nif test \"${enable_oldframecol+set}\" = set; then :\n  enableval=$enable_oldframecol;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_oldframecol=\"yes\"\nelse\n  enable_oldframecol=\"no\"\nfi\n\nelse\n  enable_oldframecol=\"no\"\nfi\n\n\nif test \"x${enable_oldframecol}\" = \"xyes\"; then :\n\n$as_echo \"#define HAVE_OLD_FRAME_CFA_COL 1\" >>confdefs.h\n\nfi\n\n# Check whether --enable-namestable was given.\nif test \"${enable_namestable+set}\" = set; then :\n  enableval=$enable_namestable;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_namestable=\"yes\"\nelse\n  enable_namestable=\"no\"\nfi\n\nelse\n  enable_namestable=\"no\"\nfi\n\n\n\nif test \"x${enable_namestable}\" = \"xyes\"; then :\n  dwarf_namestable=-s\n\nelse\n  dwarf_namestable=-t\n\nfi\n\n# Check whether --enable-libelf was given.\nif test \"${enable_libelf+set}\" = set; then :\n  enableval=$enable_libelf;  if test \"x${enableval}\" = \"xyes\"; then :\n  dwarf_with_libelf=\"yes\"\nelse\n  dwarf_with_libelf=\"no\"\nfi\n\nelse\n  dwarf_with_libelf=\"yes\"\nfi\n\n\n\n# Check whether --enable-windowspath was given.\nif test \"${enable_windowspath+set}\" = set; then :\n  enableval=$enable_windowspath;\n\n$as_echo \"#define HAVE_WINDOWS_PATH 1\" >>confdefs.h\n\n       enable_windowspath=\"yes\"\n\nelse\n\n     enable_windowspath=\"no\"\n\nfi\n\n\n# Check whether --enable-wall was given.\nif test \"${enable_wall+set}\" = set; then :\n  enableval=$enable_wall;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_wall=\"yes\"\nelse\n  enable_wall=\"no\"\nfi\n\nelse\n  enable_wall=\"no\"\nfi\n\n\n# Check whether --enable-nonstandardprintf was given.\nif test \"${enable_nonstandardprintf+set}\" = set; then :\n  enableval=$enable_nonstandardprintf;\n$as_echo \"#define HAVE_NONSTANDARD_PRINTF_64_FORMAT 1\" >>confdefs.h\n\n           enable_nonstandardprintf=\"yes\"\n\nelse\n  enable_nonstandardprintf=\"no\"\nfi\n\n\n# Check whether --enable-havecustomlibelf was given.\nif test \"${enable_havecustomlibelf+set}\" = set; then :\n  enableval=$enable_havecustomlibelf;\n$as_echo \"#define HAVE_CUSTOM_LIBELF 1\" >>confdefs.h\n\n           enable_havecustomlibelf=\"yes\"\n\nelse\n  enable_havecustomlibelf=\"no\"\nfi\n\n\n### Default options with respect to host\n\nac_aux_dir=\nfor ac_dir in \"$srcdir\" \"$srcdir/..\" \"$srcdir/../..\"; do\n  if test -f \"$ac_dir/install-sh\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/install-sh -c\"\n    break\n  elif test -f \"$ac_dir/install.sh\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/install.sh -c\"\n    break\n  elif test -f \"$ac_dir/shtool\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/shtool install -c\"\n    break\n  fi\ndone\nif test -z \"$ac_aux_dir\"; then\n  as_fn_error $? \"cannot find install-sh, install.sh, or shtool in \\\"$srcdir\\\" \\\"$srcdir/..\\\" \\\"$srcdir/../..\\\"\" \"$LINENO\" 5\nfi\n\n# These three variables are undocumented and unsupported,\n# and are intended to be withdrawn in a future Autoconf release.\n# They can cause serious problems if a builder's source tree is in a directory\n# whose full name contains unusual characters.\nac_config_guess=\"$SHELL $ac_aux_dir/config.guess\"  # Please don't use this var.\nac_config_sub=\"$SHELL $ac_aux_dir/config.sub\"  # Please don't use this var.\nac_configure=\"$SHELL $ac_aux_dir/configure\"  # Please don't use this var.\n\n\n# Make sure we can run config.sub.\n$SHELL \"$ac_aux_dir/config.sub\" sun4 >/dev/null 2>&1 ||\n  as_fn_error $? \"cannot run $SHELL $ac_aux_dir/config.sub\" \"$LINENO\" 5\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking build system type\" >&5\n$as_echo_n \"checking build system type... \" >&6; }\nif ${ac_cv_build+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_build_alias=$build_alias\ntest \"x$ac_build_alias\" = x &&\n  ac_build_alias=`$SHELL \"$ac_aux_dir/config.guess\"`\ntest \"x$ac_build_alias\" = x &&\n  as_fn_error $? \"cannot guess build type; you must specify one\" \"$LINENO\" 5\nac_cv_build=`$SHELL \"$ac_aux_dir/config.sub\" $ac_build_alias` ||\n  as_fn_error $? \"$SHELL $ac_aux_dir/config.sub $ac_build_alias failed\" \"$LINENO\" 5\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_build\" >&5\n$as_echo \"$ac_cv_build\" >&6; }\ncase $ac_cv_build in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical build\" \"$LINENO\" 5;;\nesac\nbuild=$ac_cv_build\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_build\nshift\nbuild_cpu=$1\nbuild_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nbuild_os=$*\nIFS=$ac_save_IFS\ncase $build_os in *\\ *) build_os=`echo \"$build_os\" | sed 's/ /-/g'`;; esac\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking host system type\" >&5\n$as_echo_n \"checking host system type... \" >&6; }\nif ${ac_cv_host+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test \"x$host_alias\" = x; then\n  ac_cv_host=$ac_cv_build\nelse\n  ac_cv_host=`$SHELL \"$ac_aux_dir/config.sub\" $host_alias` ||\n    as_fn_error $? \"$SHELL $ac_aux_dir/config.sub $host_alias failed\" \"$LINENO\" 5\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_host\" >&5\n$as_echo \"$ac_cv_host\" >&6; }\ncase $ac_cv_host in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical host\" \"$LINENO\" 5;;\nesac\nhost=$ac_cv_host\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_host\nshift\nhost_cpu=$1\nhost_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nhost_os=$*\nIFS=$ac_save_IFS\ncase $host_os in *\\ *) host_os=`echo \"$host_os\" | sed 's/ /-/g'`;; esac\n\n\n\nhave_win32=\"no\"\ncase \"$host_os\" in\n   mingw*)\n      have_win32=\"yes\"\n   ;;\nesac\n\n if test \"x${have_win32}\" = \"xyes\"; then\n  HAVE_WIN32_TRUE=\n  HAVE_WIN32_FALSE='#'\nelse\n  HAVE_WIN32_TRUE='#'\n  HAVE_WIN32_FALSE=\nfi\n\n\n\n### Checks for programs\n\n# Expand $ac_aux_dir to an absolute path.\nam_aux_dir=`cd \"$ac_aux_dir\" && pwd`\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nif test -z \"$CC\"; then\n          if test -n \"$ac_tool_prefix\"; then\n    # Extract the first word of \"${ac_tool_prefix}cc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  fi\nfi\nif test -z \"$CC\"; then\n  # Extract the first word of \"cc\", so it can be a program name with args.\nset dummy cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\n  ac_prog_rejected=no\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    if test \"$as_dir/$ac_word$ac_exec_ext\" = \"/usr/ucb/cc\"; then\n       ac_prog_rejected=yes\n       continue\n     fi\n    ac_cv_prog_CC=\"cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nif test $ac_prog_rejected = yes; then\n  # We found a bogon in the path, so make sure we never use it.\n  set dummy $ac_cv_prog_CC\n  shift\n  if test $# != 0; then\n    # We chose a different compiler from the bogus one.\n    # However, it has the same basename, so the bogon will be chosen\n    # first if we set CC to just the basename; use the full file name.\n    shift\n    ac_cv_prog_CC=\"$as_dir/$ac_word${1+' '}$@\"\n  fi\nfi\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in cl.exe\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in cl.exe\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\nfi\n\n\ntest -z \"$CC\" && { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files a.out a.out.dSYM a.exe b.out\"\n# Try to create an executable without -o first, disregard a.out.\n# It will help us diagnose broken compilers, and finding out an intuition\n# of exeext.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler works\" >&5\n$as_echo_n \"checking whether the C compiler works... \" >&6; }\nac_link_default=`$as_echo \"$ac_link\" | sed 's/ -o *conftest[^ ]*//'`\n\n# The possible output files:\nac_files=\"a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*\"\n\nac_rmfiles=\nfor ac_file in $ac_files\ndo\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    * ) ac_rmfiles=\"$ac_rmfiles $ac_file\";;\n  esac\ndone\nrm -f $ac_rmfiles\n\nif { { ac_try=\"$ac_link_default\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link_default\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.\n# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'\n# in a Makefile.  We should not override ac_cv_exeext if it was cached,\n# so that the user can short-circuit this test for compilers unknown to\n# Autoconf.\nfor ac_file in $ac_files ''\ndo\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )\n\t;;\n    [ab].out )\n\t# We found the default executable, but exeext='' is most\n\t# certainly right.\n\tbreak;;\n    *.* )\n\tif test \"${ac_cv_exeext+set}\" = set && test \"$ac_cv_exeext\" != no;\n\tthen :; else\n\t   ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\tfi\n\t# We set ac_cv_exeext here because the later test for it is not\n\t# safe: cross compilers may not add the suffix if given an `-o'\n\t# argument, so we may need to know it at that point already.\n\t# Even if this section looks crufty: it has the advantage of\n\t# actually working.\n\tbreak;;\n    * )\n\tbreak;;\n  esac\ndone\ntest \"$ac_cv_exeext\" = no && ac_cv_exeext=\n\nelse\n  ac_file=''\nfi\nif test -z \"$ac_file\"; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n$as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error 77 \"C compiler cannot create executables\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name\" >&5\n$as_echo_n \"checking for C compiler default output file name... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_file\" >&5\n$as_echo \"$ac_file\" >&6; }\nac_exeext=$ac_cv_exeext\n\nrm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of executables\" >&5\n$as_echo_n \"checking for suffix of executables... \" >&6; }\nif { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # If both `conftest.exe' and `conftest' are `present' (well, observable)\n# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will\n# work properly (i.e., refer to `conftest.exe'), while it won't with\n# `rm'.\nfor ac_file in conftest.exe conftest conftest.*; do\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    *.* ) ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\t  break;;\n    * ) break;;\n  esac\ndone\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of executables: cannot compile and link\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest conftest$ac_cv_exeext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext\" >&5\n$as_echo \"$ac_cv_exeext\" >&6; }\n\nrm -f conftest.$ac_ext\nEXEEXT=$ac_cv_exeext\nac_exeext=$EXEEXT\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdio.h>\nint\nmain ()\n{\nFILE *f = fopen (\"conftest.out\", \"w\");\n return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files=\"$ac_clean_files conftest.out\"\n# Check that the compiler produces executables we can run.  If not, either\n# the compiler is broken, or we cross compile.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling\" >&5\n$as_echo_n \"checking whether we are cross compiling... \" >&6; }\nif test \"$cross_compiling\" != yes; then\n  { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n  if { ac_try='./conftest$ac_cv_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n    cross_compiling=no\n  else\n    if test \"$cross_compiling\" = maybe; then\n\tcross_compiling=yes\n    else\n\t{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot run C compiled programs.\nIf you meant to cross compile, use \\`--host'.\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n    fi\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $cross_compiling\" >&5\n$as_echo \"$cross_compiling\" >&6; }\n\nrm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of object files\" >&5\n$as_echo_n \"checking for suffix of object files... \" >&6; }\nif ${ac_cv_objext+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nrm -f conftest.o conftest.obj\nif { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  for ac_file in conftest.o conftest.obj conftest.*; do\n  test -f \"$ac_file\" || continue;\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;\n    *) ac_cv_objext=`expr \"$ac_file\" : '.*\\.\\(.*\\)'`\n       break;;\n  esac\ndone\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of object files: cannot compile\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest.$ac_cv_objext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext\" >&5\n$as_echo \"$ac_cv_objext\" >&6; }\nOBJEXT=$ac_cv_objext\nac_objext=$OBJEXT\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C compiler... \" >&6; }\nif ${ac_cv_c_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\n$as_echo \"$ac_cv_c_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+set}\nac_save_CFLAGS=$CFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\n$as_echo_n \"checking whether $CC accepts -g... \" >&6; }\nif ${ac_cv_prog_cc_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nelse\n  CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\n$as_echo \"$ac_cv_prog_cc_g\" >&6; }\nif test \"$ac_test_CFLAGS\" = set; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89\" >&5\n$as_echo_n \"checking for $CC option to accept ISO C89... \" >&6; }\nif ${ac_cv_prog_cc_c89+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdarg.h>\n#include <stdio.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */\nstruct buf { int x; };\nFILE * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (p, i)\n     char **p;\n     int i;\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not '\\xHH' hex character constants.\n   These don't provoke an error unfortunately, instead are silently treated\n   as 'x'.  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously '\\x00'!='x' always comes out true, for an\n   array size at least.  It's necessary to write '\\x00'==0 to get something\n   that's true only with -std.  */\nint osf4_cc_array ['\\x00' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) 'x'\nint xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);\nint argc;\nchar **argv;\nint\nmain ()\n{\nreturn f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \\\n\t-Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC\n\nfi\n# AC_CACHE_VAL\ncase \"x$ac_cv_prog_cc_c89\" in\n  x)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\n$as_echo \"none needed\" >&6; } ;;\n  xno)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\n$as_echo \"unsupported\" >&6; } ;;\n  *)\n    CC=\"$CC $ac_cv_prog_cc_c89\"\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\n$as_echo \"$ac_cv_prog_cc_c89\" >&6; } ;;\nesac\nif test \"x$ac_cv_prog_cc_c89\" != xno; then :\n\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together\" >&5\n$as_echo_n \"checking whether $CC understands -c and -o together... \" >&6; }\nif ${am_cv_prog_cc_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if { echo \"$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext\" >&5\n   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o\" >&5\n$as_echo \"$am_cv_prog_cc_c_o\" >&6; }\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in ar lib \"link -lib\"\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AR\"; then\n  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AR=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAR=$ac_cv_prog_AR\nif test -n \"$AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n$as_echo \"$AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$AR\" && break\n  done\nfi\nif test -z \"$AR\"; then\n  ac_ct_AR=$AR\n  for ac_prog in ar lib \"link -lib\"\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_AR\"; then\n  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_AR=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_AR=$ac_cv_prog_ac_ct_AR\nif test -n \"$ac_ct_AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n$as_echo \"$ac_ct_AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_AR\" && break\ndone\n\n  if test \"x$ac_ct_AR\" = x; then\n    AR=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    AR=$ac_ct_AR\n  fi\nfi\n\n: ${AR=ar}\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking the archiver ($AR) interface\" >&5\n$as_echo_n \"checking the archiver ($AR) interface... \" >&6; }\nif ${am_cv_ar_interface+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n   am_cv_ar_interface=ar\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint some_variable = 0;\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  am_ar_try='$AR cru libconftest.a conftest.$ac_objext >&5'\n      { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$am_ar_try\\\"\"; } >&5\n  (eval $am_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n      if test \"$ac_status\" -eq 0; then\n        am_cv_ar_interface=ar\n      else\n        am_ar_try='$AR -NOLOGO -OUT:conftest.lib conftest.$ac_objext >&5'\n        { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$am_ar_try\\\"\"; } >&5\n  (eval $am_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n        if test \"$ac_status\" -eq 0; then\n          am_cv_ar_interface=lib\n        else\n          am_cv_ar_interface=unknown\n        fi\n      fi\n      rm -f conftest.lib libconftest.a\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_ar_interface\" >&5\n$as_echo \"$am_cv_ar_interface\" >&6; }\n\ncase $am_cv_ar_interface in\nar)\n  ;;\nlib)\n  # Microsoft lib, so override with the ar-lib wrapper script.\n  # FIXME: It is wrong to rewrite AR.\n  # But if we don't then we get into trouble of one sort or another.\n  # A longer-term fix would be to have automake use am__AR in this case,\n  # and then we could set am__AR=\"$am_aux_dir/ar-lib \\$(AR)\" or something\n  # similar.\n  AR=\"$am_aux_dir/ar-lib $AR\"\n  ;;\nunknown)\n  as_fn_error $? \"could not determine $AR interface\" \"$LINENO\" 5\n  ;;\nesac\n\n\n### We don't use dist-xz *.xz output from make dist,\n### so don't mention it.\nam__api_version='1.16'\n\n# Find a good install program.  We prefer a C program (faster),\n# so one script is as good as another.  But avoid the broken or\n# incompatible versions:\n# SysV /etc/install, /usr/sbin/install\n# SunOS /usr/etc/install\n# IRIX /sbin/install\n# AIX /bin/install\n# AmigaOS /C/install, which installs bootblocks on floppy discs\n# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag\n# AFS /usr/afsws/bin/install, which mishandles nonexistent args\n# SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n# OS/2's system install, which has a completely different semantic\n# ./install, which can be erroneously created by make from ./install.sh.\n# Reject install programs that cannot install multiple files.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install\" >&5\n$as_echo_n \"checking for a BSD-compatible install... \" >&6; }\nif test -z \"$INSTALL\"; then\nif ${ac_cv_path_install+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    # Account for people who put trailing slashes in PATH elements.\ncase $as_dir/ in #((\n  ./ | .// | /[cC]/* | \\\n  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \\\n  ?:[\\\\/]os2[\\\\/]install[\\\\/]* | ?:[\\\\/]OS2[\\\\/]INSTALL[\\\\/]* | \\\n  /usr/ucb/* ) ;;\n  *)\n    # OSF1 and SCO ODT 3.0 have their own names for install.\n    # Don't use installbsd from OSF since it installs stuff as root\n    # by default.\n    for ac_prog in ginstall scoinst install; do\n      for ac_exec_ext in '' $ac_executable_extensions; do\n\tif as_fn_executable_p \"$as_dir/$ac_prog$ac_exec_ext\"; then\n\t  if test $ac_prog = install &&\n\t    grep dspmsg \"$as_dir/$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # AIX install.  It has an incompatible calling convention.\n\t    :\n\t  elif test $ac_prog = install &&\n\t    grep pwplus \"$as_dir/$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # program-specific install script used by HP pwplus--don't use.\n\t    :\n\t  else\n\t    rm -rf conftest.one conftest.two conftest.dir\n\t    echo one > conftest.one\n\t    echo two > conftest.two\n\t    mkdir conftest.dir\n\t    if \"$as_dir/$ac_prog$ac_exec_ext\" -c conftest.one conftest.two \"`pwd`/conftest.dir\" &&\n\t      test -s conftest.one && test -s conftest.two &&\n\t      test -s conftest.dir/conftest.one &&\n\t      test -s conftest.dir/conftest.two\n\t    then\n\t      ac_cv_path_install=\"$as_dir/$ac_prog$ac_exec_ext -c\"\n\t      break 3\n\t    fi\n\t  fi\n\tfi\n      done\n    done\n    ;;\nesac\n\n  done\nIFS=$as_save_IFS\n\nrm -rf conftest.one conftest.two conftest.dir\n\nfi\n  if test \"${ac_cv_path_install+set}\" = set; then\n    INSTALL=$ac_cv_path_install\n  else\n    # As a last resort, use the slow shell script.  Don't cache a\n    # value for INSTALL within a source directory, because that will\n    # break other packages using the cache if that directory is\n    # removed, or if the value is a relative name.\n    INSTALL=$ac_install_sh\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $INSTALL\" >&5\n$as_echo \"$INSTALL\" >&6; }\n\n# Use test -z because SunOS4 sh mishandles braces in ${var-val}.\n# It thinks the first close brace ends the variable substitution.\ntest -z \"$INSTALL_PROGRAM\" && INSTALL_PROGRAM='${INSTALL}'\n\ntest -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL}'\n\ntest -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether build environment is sane\" >&5\n$as_echo_n \"checking whether build environment is sane... \" >&6; }\n# Reject unsafe characters in $srcdir or the absolute working directory\n# name.  Accept space and tab only in the latter.\nam_lf='\n'\ncase `pwd` in\n  *[\\\\\\\"\\#\\$\\&\\'\\`$am_lf]*)\n    as_fn_error $? \"unsafe absolute working directory name\" \"$LINENO\" 5;;\nesac\ncase $srcdir in\n  *[\\\\\\\"\\#\\$\\&\\'\\`$am_lf\\ \\\t]*)\n    as_fn_error $? \"unsafe srcdir value: '$srcdir'\" \"$LINENO\" 5;;\nesac\n\n# Do 'set' in a subshell so we don't clobber the current shell's\n# arguments.  Must try -L first in case configure is actually a\n# symlink; some systems play weird games with the mod time of symlinks\n# (eg FreeBSD returns the mod time of the symlink's containing\n# directory).\nif (\n   am_has_slept=no\n   for am_try in 1 2; do\n     echo \"timestamp, slept: $am_has_slept\" > conftest.file\n     set X `ls -Lt \"$srcdir/configure\" conftest.file 2> /dev/null`\n     if test \"$*\" = \"X\"; then\n\t# -L didn't work.\n\tset X `ls -t \"$srcdir/configure\" conftest.file`\n     fi\n     if test \"$*\" != \"X $srcdir/configure conftest.file\" \\\n\t&& test \"$*\" != \"X conftest.file $srcdir/configure\"; then\n\n\t# If neither matched, then we have a broken ls.  This can happen\n\t# if, for instance, CONFIG_SHELL is bash and it inherits a\n\t# broken ls alias from the environment.  This has actually\n\t# happened.  Such a system could not be considered \"sane\".\n\tas_fn_error $? \"ls -t appears to fail.  Make sure there is not a broken\n  alias in your environment\" \"$LINENO\" 5\n     fi\n     if test \"$2\" = conftest.file || test $am_try -eq 2; then\n       break\n     fi\n     # Just in case.\n     sleep 1\n     am_has_slept=yes\n   done\n   test \"$2\" = conftest.file\n   )\nthen\n   # Ok.\n   :\nelse\n   as_fn_error $? \"newly created file is older than distributed files!\nCheck your system clock\" \"$LINENO\" 5\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\n# If we didn't sleep, we still need to ensure time stamps of config.status and\n# generated files are strictly newer.\nam_sleep_pid=\nif grep 'slept: no' conftest.file >/dev/null 2>&1; then\n  ( sleep 1 ) &\n  am_sleep_pid=$!\nfi\n\nrm -f conftest.file\n\ntest \"$program_prefix\" != NONE &&\n  program_transform_name=\"s&^&$program_prefix&;$program_transform_name\"\n# Use a double $ so make ignores it.\ntest \"$program_suffix\" != NONE &&\n  program_transform_name=\"s&\\$&$program_suffix&;$program_transform_name\"\n# Double any \\ or $.\n# By default was `s,x,x', remove it if useless.\nac_script='s/[\\\\$]/&&/g;s/;s,x,x,$//'\nprogram_transform_name=`$as_echo \"$program_transform_name\" | sed \"$ac_script\"`\n\nif test x\"${MISSING+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    MISSING=\"\\${SHELL} \\\"$am_aux_dir/missing\\\"\" ;;\n  *)\n    MISSING=\"\\${SHELL} $am_aux_dir/missing\" ;;\n  esac\nfi\n# Use eval to expand $SHELL\nif eval \"$MISSING --is-lightweight\"; then\n  am_missing_run=\"$MISSING \"\nelse\n  am_missing_run=\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: 'missing' script is too old or missing\" >&5\n$as_echo \"$as_me: WARNING: 'missing' script is too old or missing\" >&2;}\nfi\n\nif test x\"${install_sh+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    install_sh=\"\\${SHELL} '$am_aux_dir/install-sh'\" ;;\n  *)\n    install_sh=\"\\${SHELL} $am_aux_dir/install-sh\"\n  esac\nfi\n\n# Installed binaries are usually stripped using 'strip' when the user\n# run \"make install-strip\".  However 'strip' might not be the right\n# tool to use in cross-compilation environments, therefore Automake\n# will honor the 'STRIP' environment variable to overrule this program.\nif test \"$cross_compiling\" != no; then\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}strip\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$STRIP\"; then\n  ac_cv_prog_STRIP=\"$STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_STRIP=\"${ac_tool_prefix}strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nSTRIP=$ac_cv_prog_STRIP\nif test -n \"$STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $STRIP\" >&5\n$as_echo \"$STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_STRIP\"; then\n  ac_ct_STRIP=$STRIP\n  # Extract the first word of \"strip\", so it can be a program name with args.\nset dummy strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_STRIP\"; then\n  ac_cv_prog_ac_ct_STRIP=\"$ac_ct_STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_STRIP=\"strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP\nif test -n \"$ac_ct_STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP\" >&5\n$as_echo \"$ac_ct_STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_STRIP\" = x; then\n    STRIP=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    STRIP=$ac_ct_STRIP\n  fi\nelse\n  STRIP=\"$ac_cv_prog_STRIP\"\nfi\n\nfi\nINSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a thread-safe mkdir -p\" >&5\n$as_echo_n \"checking for a thread-safe mkdir -p... \" >&6; }\nif test -z \"$MKDIR_P\"; then\n  if ${ac_cv_path_mkdir+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in mkdir gmkdir; do\n\t for ac_exec_ext in '' $ac_executable_extensions; do\n\t   as_fn_executable_p \"$as_dir/$ac_prog$ac_exec_ext\" || continue\n\t   case `\"$as_dir/$ac_prog$ac_exec_ext\" --version 2>&1` in #(\n\t     'mkdir (GNU coreutils) '* | \\\n\t     'mkdir (coreutils) '* | \\\n\t     'mkdir (fileutils) '4.1*)\n\t       ac_cv_path_mkdir=$as_dir/$ac_prog$ac_exec_ext\n\t       break 3;;\n\t   esac\n\t done\n       done\n  done\nIFS=$as_save_IFS\n\nfi\n\n  test -d ./--version && rmdir ./--version\n  if test \"${ac_cv_path_mkdir+set}\" = set; then\n    MKDIR_P=\"$ac_cv_path_mkdir -p\"\n  else\n    # As a last resort, use the slow shell script.  Don't cache a\n    # value for MKDIR_P within a source directory, because that will\n    # break other packages using the cache if that directory is\n    # removed, or if the value is a relative name.\n    MKDIR_P=\"$ac_install_sh -d\"\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MKDIR_P\" >&5\n$as_echo \"$MKDIR_P\" >&6; }\n\nfor ac_prog in gawk mawk nawk awk\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AWK+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AWK\"; then\n  ac_cv_prog_AWK=\"$AWK\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AWK=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAWK=$ac_cv_prog_AWK\nif test -n \"$AWK\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AWK\" >&5\n$as_echo \"$AWK\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$AWK\" && break\ndone\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \\$(MAKE)\" >&5\n$as_echo_n \"checking whether ${MAKE-make} sets \\$(MAKE)... \" >&6; }\nset x ${MAKE-make}\nac_make=`$as_echo \"$2\" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`\nif eval \\${ac_cv_prog_make_${ac_make}_set+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat >conftest.make <<\\_ACEOF\nSHELL = /bin/sh\nall:\n\t@echo '@@@%%%=$(MAKE)=@@@%%%'\n_ACEOF\n# GNU make sometimes prints \"make[1]: Entering ...\", which would confuse us.\ncase `${MAKE-make} -f conftest.make 2>/dev/null` in\n  *@@@%%%=?*=@@@%%%*)\n    eval ac_cv_prog_make_${ac_make}_set=yes;;\n  *)\n    eval ac_cv_prog_make_${ac_make}_set=no;;\nesac\nrm -f conftest.make\nfi\nif eval test \\$ac_cv_prog_make_${ac_make}_set = yes; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\n  SET_MAKE=\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n  SET_MAKE=\"MAKE=${MAKE-make}\"\nfi\n\nrm -rf .tst 2>/dev/null\nmkdir .tst 2>/dev/null\nif test -d .tst; then\n  am__leading_dot=.\nelse\n  am__leading_dot=_\nfi\nrmdir .tst 2>/dev/null\n\nDEPDIR=\"${am__leading_dot}deps\"\n\nac_config_commands=\"$ac_config_commands depfiles\"\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} supports the include directive\" >&5\n$as_echo_n \"checking whether ${MAKE-make} supports the include directive... \" >&6; }\ncat > confinc.mk << 'END'\nam__doit:\n\t@echo this is the am__doit target >confinc.out\n.PHONY: am__doit\nEND\nam__include=\"#\"\nam__quote=\n# BSD make does it like this.\necho '.include \"confinc.mk\" # ignored' > confmf.BSD\n# Other make implementations (GNU, Solaris 10, AIX) do it like this.\necho 'include confinc.mk # ignored' > confmf.GNU\n_am_result=no\nfor s in GNU BSD; do\n  { echo \"$as_me:$LINENO: ${MAKE-make} -f confmf.$s && cat confinc.out\" >&5\n   (${MAKE-make} -f confmf.$s && cat confinc.out) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }\n  case $?:`cat confinc.out 2>/dev/null` in #(\n  '0:this is the am__doit target') :\n    case $s in #(\n  BSD) :\n    am__include='.include' am__quote='\"' ;; #(\n  *) :\n    am__include='include' am__quote='' ;;\nesac ;; #(\n  *) :\n     ;;\nesac\n  if test \"$am__include\" != \"#\"; then\n    _am_result=\"yes ($s style)\"\n    break\n  fi\ndone\nrm -f confinc.* confmf.*\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${_am_result}\" >&5\n$as_echo \"${_am_result}\" >&6; }\n\n# Check whether --enable-dependency-tracking was given.\nif test \"${enable_dependency_tracking+set}\" = set; then :\n  enableval=$enable_dependency_tracking;\nfi\n\nif test \"x$enable_dependency_tracking\" != xno; then\n  am_depcomp=\"$ac_aux_dir/depcomp\"\n  AMDEPBACKSLASH='\\'\n  am__nodep='_no'\nfi\n if test \"x$enable_dependency_tracking\" != xno; then\n  AMDEP_TRUE=\n  AMDEP_FALSE='#'\nelse\n  AMDEP_TRUE='#'\n  AMDEP_FALSE=\nfi\n\n\n# Check whether --enable-silent-rules was given.\nif test \"${enable_silent_rules+set}\" = set; then :\n  enableval=$enable_silent_rules;\nfi\n\ncase $enable_silent_rules in # (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\n    *) AM_DEFAULT_VERBOSITY=1;;\nesac\nam_make=${MAKE-make}\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables\" >&5\n$as_echo_n \"checking whether $am_make supports nested variables... \" >&6; }\nif ${am_cv_make_support_nested_variables+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if $as_echo 'TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables\" >&5\n$as_echo \"$am_cv_make_support_nested_variables\" >&6; }\nif test $am_cv_make_support_nested_variables = yes; then\n    AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\nAM_BACKSLASH='\\'\n\nif test \"`cd $srcdir && pwd`\" != \"`pwd`\"; then\n  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output\n  # is not polluted with repeated \"-I.\"\n  am__isrc=' -I$(srcdir)'\n  # test to see if srcdir already configured\n  if test -f $srcdir/config.status; then\n    as_fn_error $? \"source directory already configured; run \\\"make distclean\\\" there first\" \"$LINENO\" 5\n  fi\nfi\n\n# test whether we have cygpath\nif test -z \"$CYGPATH_W\"; then\n  if (cygpath --version) >/dev/null 2>/dev/null; then\n    CYGPATH_W='cygpath -w'\n  else\n    CYGPATH_W=echo\n  fi\nfi\n\n\n# Define the identity of the package.\n PACKAGE='libdwarf'\n VERSION='20201011'\n\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE \"$PACKAGE\"\n_ACEOF\n\n\ncat >>confdefs.h <<_ACEOF\n#define VERSION \"$VERSION\"\n_ACEOF\n\n# Some tools Automake needs.\n\nACLOCAL=${ACLOCAL-\"${am_missing_run}aclocal-${am__api_version}\"}\n\n\nAUTOCONF=${AUTOCONF-\"${am_missing_run}autoconf\"}\n\n\nAUTOMAKE=${AUTOMAKE-\"${am_missing_run}automake-${am__api_version}\"}\n\n\nAUTOHEADER=${AUTOHEADER-\"${am_missing_run}autoheader\"}\n\n\nMAKEINFO=${MAKEINFO-\"${am_missing_run}makeinfo\"}\n\n# For better backward compatibility.  To be removed once Automake 1.9.x\n# dies out for good.  For more background, see:\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>\nmkdir_p='$(MKDIR_P)'\n\n# We need awk for the \"check\" target (and possibly the TAP driver).  The\n# system \"awk\" is bad on some platforms.\n# Always define AMTAR for backward compatibility.  Yes, it's still used\n# in the wild :-(  We should find a proper way to deprecate it ...\nAMTAR='$${TAR-tar}'\n\n\n# We'll loop over all known methods to create a tar archive until one works.\n_am_tools='gnutar  pax cpio none'\n\nam__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'\n\n\n\n\n\ndepcc=\"$CC\"   am_compiler_list=\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc\" >&5\n$as_echo_n \"checking dependency style of $depcc... \" >&6; }\nif ${am_cv_CC_dependencies_compiler_type+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_CC_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n 's/^#*\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n  fi\n  am__universal=false\n  case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thusly:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_CC_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_CC_dependencies_compiler_type=none\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type\" >&5\n$as_echo \"$am_cv_CC_dependencies_compiler_type\" >&6; }\nCCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type\n\n if\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_CC_dependencies_compiler_type\" = gcc3; then\n  am__fastdepCC_TRUE=\n  am__fastdepCC_FALSE='#'\nelse\n  am__fastdepCC_TRUE='#'\n  am__fastdepCC_FALSE=\nfi\n\n\n\n# POSIX will say in a future version that running \"rm -f\" with no argument\n# is OK; and we want to be able to make that assumption in our Makefile\n# recipes.  So use an aggressive probe to check that the usage we want is\n# actually supported \"in the wild\" to an acceptable degree.\n# See automake bug#10828.\n# To make any issue more visible, cause the running configure to be aborted\n# by default if the 'rm' program in use doesn't match our expectations; the\n# user can still override this though.\nif rm -f && rm -fr && rm -rf; then : OK; else\n  cat >&2 <<'END'\nOops!\n\nYour 'rm' program seems unable to run without file operands specified\non the command line, even when the '-f' option is present.  This is contrary\nto the behaviour of most rm programs out there, and not conforming with\nthe upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>\n\nPlease tell bug-automake@gnu.org about your system, including the value\nof your $PATH and any error possibly output before this message.  This\ncan help us improve future automake versions.\n\nEND\n  if test x\"$ACCEPT_INFERIOR_RM_PROGRAM\" = x\"yes\"; then\n    echo 'Configuration will proceed anyway, since you have set the' >&2\n    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to \"yes\"' >&2\n    echo >&2\n  else\n    cat >&2 <<'END'\nAborting the configuration process, to ensure you take notice of the issue.\n\nYou can download and install GNU coreutils to get an 'rm' implementation\nthat behaves properly: <https://www.gnu.org/software/coreutils/>.\n\nIf you want to complete the configuration process using your problematic\n'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM\nto \"yes\", and re-run configure.\n\nEND\n    as_fn_error $? \"Your 'rm' program is bad, sorry.\" \"$LINENO\" 5\n  fi\nfi\n\n# Check whether --enable-silent-rules was given.\nif test \"${enable_silent_rules+set}\" = set; then :\n  enableval=$enable_silent_rules;\nfi\n\ncase $enable_silent_rules in # (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\n    *) AM_DEFAULT_VERBOSITY=0;;\nesac\nam_make=${MAKE-make}\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables\" >&5\n$as_echo_n \"checking whether $am_make supports nested variables... \" >&6; }\nif ${am_cv_make_support_nested_variables+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if $as_echo 'TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables\" >&5\n$as_echo \"$am_cv_make_support_nested_variables\" >&6; }\nif test $am_cv_make_support_nested_variables = yes; then\n    AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\nAM_BACKSLASH='\\'\n\n\ncase `pwd` in\n  *\\ * | *\\\t*)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&5\n$as_echo \"$as_me: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&2;} ;;\nesac\n\n\n\nmacro_version='2.4.6'\nmacro_revision='2.4.6'\n\n\n\n\n\n\n\n\n\n\n\n\n\nltmain=$ac_aux_dir/ltmain.sh\n\n# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([\"`$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n\nECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to print strings\" >&5\n$as_echo_n \"checking how to print strings... \" >&6; }\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"\"\n}\n\ncase $ECHO in\n  printf*) { $as_echo \"$as_me:${as_lineno-$LINENO}: result: printf\" >&5\n$as_echo \"printf\" >&6; } ;;\n  print*) { $as_echo \"$as_me:${as_lineno-$LINENO}: result: print -r\" >&5\n$as_echo \"print -r\" >&6; } ;;\n  *) { $as_echo \"$as_me:${as_lineno-$LINENO}: result: cat\" >&5\n$as_echo \"cat\" >&6; } ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\n$as_echo_n \"checking for a sed that does not truncate output... \" >&6; }\nif ${ac_cv_path_SED+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n     for ac_i in 1 2 3 4 5 6 7; do\n       ac_script=\"$ac_script$as_nl$ac_script\"\n     done\n     echo \"$ac_script\" 2>/dev/null | sed 99q >conftest.sed\n     { ac_script=; unset ac_script;}\n     if test -z \"$SED\"; then\n  ac_path_SED_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_SED=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_SED\" || continue\n# Check for GNU ac_path_SED and select it if it is found.\n  # Check for GNU $ac_path_SED\ncase `\"$ac_path_SED\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo '' >> \"conftest.nl\"\n    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_SED_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_SED=\"$ac_path_SED\"\n      ac_path_SED_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_SED_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_SED\"; then\n    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_SED=$SED\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\n$as_echo \"$ac_cv_path_SED\" >&6; }\n SED=\"$ac_cv_path_SED\"\n  rm -f conftest.sed\n\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e\" >&5\n$as_echo_n \"checking for grep that handles long lines and -e... \" >&6; }\nif ${ac_cv_path_GREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$GREP\"; then\n  ac_path_GREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in grep ggrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_GREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_GREP\" || continue\n# Check for GNU ac_path_GREP and select it if it is found.\n  # Check for GNU $ac_path_GREP\ncase `\"$ac_path_GREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_GREP=\"$ac_path_GREP\" ac_path_GREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'GREP' >> \"conftest.nl\"\n    \"$ac_path_GREP\" -e 'GREP$' -e '-(cannot match)-' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_GREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_GREP=\"$ac_path_GREP\"\n      ac_path_GREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_GREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_GREP\"; then\n    as_fn_error $? \"no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_GREP=$GREP\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP\" >&5\n$as_echo \"$ac_cv_path_GREP\" >&6; }\n GREP=\"$ac_cv_path_GREP\"\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for egrep\" >&5\n$as_echo_n \"checking for egrep... \" >&6; }\nif ${ac_cv_path_EGREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1\n   then ac_cv_path_EGREP=\"$GREP -E\"\n   else\n     if test -z \"$EGREP\"; then\n  ac_path_EGREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in egrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP\" || continue\n# Check for GNU ac_path_EGREP and select it if it is found.\n  # Check for GNU $ac_path_EGREP\ncase `\"$ac_path_EGREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_EGREP=\"$ac_path_EGREP\" ac_path_EGREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'EGREP' >> \"conftest.nl\"\n    \"$ac_path_EGREP\" 'EGREP$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP=\"$ac_path_EGREP\"\n      ac_path_EGREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP\"; then\n    as_fn_error $? \"no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_EGREP=$EGREP\nfi\n\n   fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP\" >&5\n$as_echo \"$ac_cv_path_EGREP\" >&6; }\n EGREP=\"$ac_cv_path_EGREP\"\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for fgrep\" >&5\n$as_echo_n \"checking for fgrep... \" >&6; }\nif ${ac_cv_path_FGREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1\n   then ac_cv_path_FGREP=\"$GREP -F\"\n   else\n     if test -z \"$FGREP\"; then\n  ac_path_FGREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in fgrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_FGREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_FGREP\" || continue\n# Check for GNU ac_path_FGREP and select it if it is found.\n  # Check for GNU $ac_path_FGREP\ncase `\"$ac_path_FGREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_FGREP=\"$ac_path_FGREP\" ac_path_FGREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'FGREP' >> \"conftest.nl\"\n    \"$ac_path_FGREP\" FGREP < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_FGREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_FGREP=\"$ac_path_FGREP\"\n      ac_path_FGREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_FGREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_FGREP\"; then\n    as_fn_error $? \"no acceptable fgrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_FGREP=$FGREP\nfi\n\n   fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_FGREP\" >&5\n$as_echo \"$ac_cv_path_FGREP\" >&6; }\n FGREP=\"$ac_cv_path_FGREP\"\n\n\ntest -z \"$GREP\" && GREP=grep\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Check whether --with-gnu-ld was given.\nif test \"${with_gnu_ld+set}\" = set; then :\n  withval=$with_gnu_ld; test no = \"$withval\" || with_gnu_ld=yes\nelse\n  with_gnu_ld=no\nfi\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld used by $CC\" >&5\n$as_echo_n \"checking for ld used by $CC... \" >&6; }\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [\\\\/]* | ?:[\\\\/]*)\n      re_direlt='/[^/][^/]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for GNU ld\" >&5\n$as_echo_n \"checking for GNU ld... \" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for non-GNU ld\" >&5\n$as_echo_n \"checking for non-GNU ld... \" >&6; }\nfi\nif ${lt_cv_path_LD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi\nfi\n\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LD\" >&5\n$as_echo \"$LD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\ntest -z \"$LD\" && as_fn_error $? \"no acceptable ld found in \\$PATH\" \"$LINENO\" 5\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\n$as_echo_n \"checking if the linker ($LD) is GNU ld... \" >&6; }\nif ${lt_cv_prog_gnu_ld+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  # I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld\" >&5\n$as_echo \"$lt_cv_prog_gnu_ld\" >&6; }\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for BSD- or MS-compatible name lister (nm)\" >&5\n$as_echo_n \"checking for BSD- or MS-compatible name lister (nm)... \" >&6; }\nif ${lt_cv_path_NM+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_NM\" >&5\n$as_echo \"$lt_cv_path_NM\" >&6; }\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in dumpbin \"link -dump\"\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DUMPBIN+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DUMPBIN\"; then\n  ac_cv_prog_DUMPBIN=\"$DUMPBIN\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DUMPBIN=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDUMPBIN=$ac_cv_prog_DUMPBIN\nif test -n \"$DUMPBIN\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DUMPBIN\" >&5\n$as_echo \"$DUMPBIN\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$DUMPBIN\" && break\n  done\nfi\nif test -z \"$DUMPBIN\"; then\n  ac_ct_DUMPBIN=$DUMPBIN\n  for ac_prog in dumpbin \"link -dump\"\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DUMPBIN+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DUMPBIN\"; then\n  ac_cv_prog_ac_ct_DUMPBIN=\"$ac_ct_DUMPBIN\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DUMPBIN=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DUMPBIN=$ac_cv_prog_ac_ct_DUMPBIN\nif test -n \"$ac_ct_DUMPBIN\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DUMPBIN\" >&5\n$as_echo \"$ac_ct_DUMPBIN\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_DUMPBIN\" && break\ndone\n\n  if test \"x$ac_ct_DUMPBIN\" = x; then\n    DUMPBIN=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DUMPBIN=$ac_ct_DUMPBIN\n  fi\nfi\n\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking the name lister ($NM) interface\" >&5\n$as_echo_n \"checking the name lister ($NM) interface... \" >&6; }\nif ${lt_cv_nm_interface+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&5)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&5\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&5\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&5)\n  cat conftest.out >&5\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_nm_interface\" >&5\n$as_echo \"$lt_cv_nm_interface\" >&6; }\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ln -s works\" >&5\n$as_echo_n \"checking whether ln -s works... \" >&6; }\nLN_S=$as_ln_s\nif test \"$LN_S\" = \"ln -s\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no, using $LN_S\" >&5\n$as_echo \"no, using $LN_S\" >&6; }\nfi\n\n# find the maximum length of command line arguments\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking the maximum length of command line arguments\" >&5\n$as_echo_n \"checking the maximum length of command line arguments... \" >&6; }\nif ${lt_cv_sys_max_cmd_len+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n    i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[\t ]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n\nfi\n\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_sys_max_cmd_len\" >&5\n$as_echo \"$lt_cv_sys_max_cmd_len\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none\" >&5\n$as_echo \"none\" >&6; }\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n\n\n\n\n\n\n: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n\nif ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n\n\n\n\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to convert $build file names to $host format\" >&5\n$as_echo_n \"checking how to convert $build file names to $host format... \" >&6; }\nif ${lt_cv_to_host_file_cmd+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n\nfi\n\nto_host_file_cmd=$lt_cv_to_host_file_cmd\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_to_host_file_cmd\" >&5\n$as_echo \"$lt_cv_to_host_file_cmd\" >&6; }\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to convert $build file names to toolchain format\" >&5\n$as_echo_n \"checking how to convert $build file names to toolchain format... \" >&6; }\nif ${lt_cv_to_tool_file_cmd+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  #assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n\nfi\n\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_to_tool_file_cmd\" >&5\n$as_echo \"$lt_cv_to_tool_file_cmd\" >&6; }\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $LD option to reload object files\" >&5\n$as_echo_n \"checking for $LD option to reload object files... \" >&6; }\nif ${lt_cv_ld_reload_flag+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ld_reload_flag='-r'\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_reload_flag\" >&5\n$as_echo \"$lt_cv_ld_reload_flag\" >&6; }\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n\n\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}objdump\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OBJDUMP\"; then\n  ac_cv_prog_OBJDUMP=\"$OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OBJDUMP=\"${ac_tool_prefix}objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOBJDUMP=$ac_cv_prog_OBJDUMP\nif test -n \"$OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJDUMP\" >&5\n$as_echo \"$OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OBJDUMP\"; then\n  ac_ct_OBJDUMP=$OBJDUMP\n  # Extract the first word of \"objdump\", so it can be a program name with args.\nset dummy objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OBJDUMP\"; then\n  ac_cv_prog_ac_ct_OBJDUMP=\"$ac_ct_OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OBJDUMP=\"objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP\nif test -n \"$ac_ct_OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP\" >&5\n$as_echo \"$ac_ct_OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OBJDUMP\" = x; then\n    OBJDUMP=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OBJDUMP=$ac_ct_OBJDUMP\n  fi\nelse\n  OBJDUMP=\"$ac_cv_prog_OBJDUMP\"\nfi\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to recognize dependent libraries\" >&5\n$as_echo_n \"checking how to recognize dependent libraries... \" >&6; }\nif ${lt_cv_deplibs_check_method+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[4-9]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[45]*)\n  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[3-9]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]'\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9]\\.[0-9]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[3-9]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd* | netbsdelf*-gnu)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [0-9][0-9]*-bit [LM]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_deplibs_check_method\" >&5\n$as_echo \"$lt_cv_deplibs_check_method\" >&6; }\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[\\1]\\/[\\1]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}dlltool\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DLLTOOL\"; then\n  ac_cv_prog_DLLTOOL=\"$DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DLLTOOL=\"${ac_tool_prefix}dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDLLTOOL=$ac_cv_prog_DLLTOOL\nif test -n \"$DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DLLTOOL\" >&5\n$as_echo \"$DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_DLLTOOL\"; then\n  ac_ct_DLLTOOL=$DLLTOOL\n  # Extract the first word of \"dlltool\", so it can be a program name with args.\nset dummy dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DLLTOOL\"; then\n  ac_cv_prog_ac_ct_DLLTOOL=\"$ac_ct_DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DLLTOOL=\"dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL\nif test -n \"$ac_ct_DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL\" >&5\n$as_echo \"$ac_ct_DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_DLLTOOL\" = x; then\n    DLLTOOL=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DLLTOOL=$ac_ct_DLLTOOL\n  fi\nelse\n  DLLTOOL=\"$ac_cv_prog_DLLTOOL\"\nfi\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to associate runtime and link libraries\" >&5\n$as_echo_n \"checking how to associate runtime and link libraries... \" >&6; }\nif ${lt_cv_sharedlib_from_linklib_cmd+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_sharedlib_from_linklib_cmd\" >&5\n$as_echo \"$lt_cv_sharedlib_from_linklib_cmd\" >&6; }\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in ar\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AR\"; then\n  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AR=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAR=$ac_cv_prog_AR\nif test -n \"$AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n$as_echo \"$AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$AR\" && break\n  done\nfi\nif test -z \"$AR\"; then\n  ac_ct_AR=$AR\n  for ac_prog in ar\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_AR\"; then\n  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_AR=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_AR=$ac_cv_prog_ac_ct_AR\nif test -n \"$ac_ct_AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n$as_echo \"$ac_ct_AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_AR\" && break\ndone\n\n  if test \"x$ac_ct_AR\" = x; then\n    AR=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    AR=$ac_ct_AR\n  fi\nfi\n\n: ${AR=ar}\n: ${AR_FLAGS=cr}\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for archiver @FILE support\" >&5\n$as_echo_n \"checking for archiver @FILE support... \" >&6; }\nif ${lt_cv_ar_at_file+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ar_at_file=no\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&5'\n      { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$lt_ar_try\\\"\"; } >&5\n  (eval $lt_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\t{ { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$lt_ar_try\\\"\"; } >&5\n  (eval $lt_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ar_at_file\" >&5\n$as_echo \"$lt_cv_ar_at_file\" >&6; }\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}strip\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$STRIP\"; then\n  ac_cv_prog_STRIP=\"$STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_STRIP=\"${ac_tool_prefix}strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nSTRIP=$ac_cv_prog_STRIP\nif test -n \"$STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $STRIP\" >&5\n$as_echo \"$STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_STRIP\"; then\n  ac_ct_STRIP=$STRIP\n  # Extract the first word of \"strip\", so it can be a program name with args.\nset dummy strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_STRIP\"; then\n  ac_cv_prog_ac_ct_STRIP=\"$ac_ct_STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_STRIP=\"strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP\nif test -n \"$ac_ct_STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP\" >&5\n$as_echo \"$ac_ct_STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_STRIP\" = x; then\n    STRIP=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    STRIP=$ac_ct_STRIP\n  fi\nelse\n  STRIP=\"$ac_cv_prog_STRIP\"\nfi\n\ntest -z \"$STRIP\" && STRIP=:\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}ranlib\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}ranlib; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_RANLIB+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$RANLIB\"; then\n  ac_cv_prog_RANLIB=\"$RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_RANLIB=\"${ac_tool_prefix}ranlib\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nRANLIB=$ac_cv_prog_RANLIB\nif test -n \"$RANLIB\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $RANLIB\" >&5\n$as_echo \"$RANLIB\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_RANLIB\"; then\n  ac_ct_RANLIB=$RANLIB\n  # Extract the first word of \"ranlib\", so it can be a program name with args.\nset dummy ranlib; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_RANLIB+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_RANLIB\"; then\n  ac_cv_prog_ac_ct_RANLIB=\"$ac_ct_RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_RANLIB=\"ranlib\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB\nif test -n \"$ac_ct_RANLIB\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB\" >&5\n$as_echo \"$ac_ct_RANLIB\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_RANLIB\" = x; then\n    RANLIB=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    RANLIB=$ac_ct_RANLIB\n  fi\nelse\n  RANLIB=\"$ac_cv_prog_RANLIB\"\nfi\n\ntest -z \"$RANLIB\" && RANLIB=:\n\n\n\n\n\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking command to parse $NM output from $compiler object\" >&5\n$as_echo_n \"checking command to parse $NM output from $compiler object... \" >&6; }\nif ${lt_cv_sys_global_symbol_pipe+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[BCDEGRST]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([_A-Za-z][_A-Za-z0-9]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[BCDT]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[ABCDGISTW]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[ABCDEGRST]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[BCDEGRST]'\n  ;;\nosf*)\n  symcode='[BCDEGQRST]'\n  ;;\nsolaris*)\n  symcode='[BDRT]'\n  ;;\nsco3.2v5*)\n  symcode='[DT]'\n  ;;\nsysv4.2uw2*)\n  symcode='[DT]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[ABDT]'\n  ;;\nsysv4)\n  symcode='[DFNSTU]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[ABCDGIRSTW]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK '\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[\t ]\\($symcode$symcode*\\)[\t ][\t ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    $ECHO \"$as_me:$LINENO: $NM conftest.$ac_objext | $lt_cv_sys_global_symbol_pipe > $nlist\" >&5\n    if eval \"$NM\" conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist 2>&5 && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$lt_prog_compiler_no_builtin_flag\"\n\t  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_link\\\"\"; } >&5\n  (eval $ac_link) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&5\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&5\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&5\n    fi\n  else\n    echo \"$progname: failed program was:\" >&5\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n\nfi\n\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: failed\" >&5\n$as_echo \"failed\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ok\" >&5\n$as_echo \"ok\" >&6; }\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[@]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sysroot\" >&5\n$as_echo_n \"checking for sysroot... \" >&6; }\n\n# Check whether --with-sysroot was given.\nif test \"${with_sysroot+set}\" = set; then :\n  withval=$with_sysroot;\nelse\n  with_sysroot=no\nfi\n\n\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_sysroot\" >&5\n$as_echo \"$with_sysroot\" >&6; }\n   as_fn_error $? \"The sysroot must be an absolute path.\" \"$LINENO\" 5\n   ;;\nesac\n\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${lt_sysroot:-no}\" >&5\n$as_echo \"${lt_sysroot:-no}\" >&6; }\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a working dd\" >&5\n$as_echo_n \"checking for a working dd... \" >&6; }\nif ${ac_cv_path_lt_DD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nif test -z \"$lt_DD\"; then\n  ac_path_lt_DD_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in dd; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_lt_DD=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_lt_DD\" || continue\nif \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi\n      $ac_path_lt_DD_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_lt_DD\"; then\n    :\n  fi\nelse\n  ac_cv_path_lt_DD=$lt_DD\nfi\n\nrm -f conftest.i conftest2.i conftest.out\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_lt_DD\" >&5\n$as_echo \"$ac_cv_path_lt_DD\" >&6; }\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to truncate binary pipes\" >&5\n$as_echo_n \"checking how to truncate binary pipes... \" >&6; }\nif ${lt_cv_truncate_bin+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_truncate_bin\" >&5\n$as_echo \"$lt_cv_truncate_bin\" >&6; }\n\n\n\n\n\n\n\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in $*\"\"; do\n      case $cc_temp in\n        compile | *[\\\\/]compile | ccache | *[\\\\/]ccache ) ;;\n        distcc | *[\\\\/]distcc | purify | *[\\\\/]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n\n# Check whether --enable-libtool-lock was given.\nif test \"${enable_libtool_lock+set}\" = set; then :\n  enableval=$enable_libtool_lock;\nfi\n\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '#line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '#line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler needs -belf\" >&5\n$as_echo_n \"checking whether the C compiler needs -belf... \" >&6; }\nif ${lt_cv_cc_needs_belf+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  lt_cv_cc_needs_belf=yes\nelse\n  lt_cv_cc_needs_belf=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_cc_needs_belf\" >&5\n$as_echo \"$lt_cv_cc_needs_belf\" >&6; }\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}mt\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}mt; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_MANIFEST_TOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$MANIFEST_TOOL\"; then\n  ac_cv_prog_MANIFEST_TOOL=\"$MANIFEST_TOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_MANIFEST_TOOL=\"${ac_tool_prefix}mt\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nMANIFEST_TOOL=$ac_cv_prog_MANIFEST_TOOL\nif test -n \"$MANIFEST_TOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MANIFEST_TOOL\" >&5\n$as_echo \"$MANIFEST_TOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_MANIFEST_TOOL\"; then\n  ac_ct_MANIFEST_TOOL=$MANIFEST_TOOL\n  # Extract the first word of \"mt\", so it can be a program name with args.\nset dummy mt; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_MANIFEST_TOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_MANIFEST_TOOL\"; then\n  ac_cv_prog_ac_ct_MANIFEST_TOOL=\"$ac_ct_MANIFEST_TOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_MANIFEST_TOOL=\"mt\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_MANIFEST_TOOL=$ac_cv_prog_ac_ct_MANIFEST_TOOL\nif test -n \"$ac_ct_MANIFEST_TOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_MANIFEST_TOOL\" >&5\n$as_echo \"$ac_ct_MANIFEST_TOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_MANIFEST_TOOL\" = x; then\n    MANIFEST_TOOL=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    MANIFEST_TOOL=$ac_ct_MANIFEST_TOOL\n  fi\nelse\n  MANIFEST_TOOL=\"$ac_cv_prog_MANIFEST_TOOL\"\nfi\n\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $MANIFEST_TOOL is a manifest tool\" >&5\n$as_echo_n \"checking if $MANIFEST_TOOL is a manifest tool... \" >&6; }\nif ${lt_cv_path_mainfest_tool+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&5\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&5\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_mainfest_tool\" >&5\n$as_echo \"$lt_cv_path_mainfest_tool\" >&6; }\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n\n\n\n\n\n\n  case $host_os in\n    rhapsody* | darwin*)\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}dsymutil\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}dsymutil; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DSYMUTIL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DSYMUTIL\"; then\n  ac_cv_prog_DSYMUTIL=\"$DSYMUTIL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DSYMUTIL=\"${ac_tool_prefix}dsymutil\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDSYMUTIL=$ac_cv_prog_DSYMUTIL\nif test -n \"$DSYMUTIL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL\" >&5\n$as_echo \"$DSYMUTIL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_DSYMUTIL\"; then\n  ac_ct_DSYMUTIL=$DSYMUTIL\n  # Extract the first word of \"dsymutil\", so it can be a program name with args.\nset dummy dsymutil; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DSYMUTIL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DSYMUTIL\"; then\n  ac_cv_prog_ac_ct_DSYMUTIL=\"$ac_ct_DSYMUTIL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DSYMUTIL=\"dsymutil\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DSYMUTIL=$ac_cv_prog_ac_ct_DSYMUTIL\nif test -n \"$ac_ct_DSYMUTIL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DSYMUTIL\" >&5\n$as_echo \"$ac_ct_DSYMUTIL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_DSYMUTIL\" = x; then\n    DSYMUTIL=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DSYMUTIL=$ac_ct_DSYMUTIL\n  fi\nelse\n  DSYMUTIL=\"$ac_cv_prog_DSYMUTIL\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}nmedit\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}nmedit; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_NMEDIT+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$NMEDIT\"; then\n  ac_cv_prog_NMEDIT=\"$NMEDIT\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_NMEDIT=\"${ac_tool_prefix}nmedit\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nNMEDIT=$ac_cv_prog_NMEDIT\nif test -n \"$NMEDIT\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $NMEDIT\" >&5\n$as_echo \"$NMEDIT\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_NMEDIT\"; then\n  ac_ct_NMEDIT=$NMEDIT\n  # Extract the first word of \"nmedit\", so it can be a program name with args.\nset dummy nmedit; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_NMEDIT+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_NMEDIT\"; then\n  ac_cv_prog_ac_ct_NMEDIT=\"$ac_ct_NMEDIT\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_NMEDIT=\"nmedit\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_NMEDIT=$ac_cv_prog_ac_ct_NMEDIT\nif test -n \"$ac_ct_NMEDIT\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_NMEDIT\" >&5\n$as_echo \"$ac_ct_NMEDIT\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_NMEDIT\" = x; then\n    NMEDIT=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    NMEDIT=$ac_ct_NMEDIT\n  fi\nelse\n  NMEDIT=\"$ac_cv_prog_NMEDIT\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}lipo\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}lipo; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_LIPO+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$LIPO\"; then\n  ac_cv_prog_LIPO=\"$LIPO\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_LIPO=\"${ac_tool_prefix}lipo\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nLIPO=$ac_cv_prog_LIPO\nif test -n \"$LIPO\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIPO\" >&5\n$as_echo \"$LIPO\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_LIPO\"; then\n  ac_ct_LIPO=$LIPO\n  # Extract the first word of \"lipo\", so it can be a program name with args.\nset dummy lipo; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_LIPO+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_LIPO\"; then\n  ac_cv_prog_ac_ct_LIPO=\"$ac_ct_LIPO\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_LIPO=\"lipo\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_LIPO=$ac_cv_prog_ac_ct_LIPO\nif test -n \"$ac_ct_LIPO\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_LIPO\" >&5\n$as_echo \"$ac_ct_LIPO\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_LIPO\" = x; then\n    LIPO=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    LIPO=$ac_ct_LIPO\n  fi\nelse\n  LIPO=\"$ac_cv_prog_LIPO\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}otool\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}otool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OTOOL\"; then\n  ac_cv_prog_OTOOL=\"$OTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OTOOL=\"${ac_tool_prefix}otool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOTOOL=$ac_cv_prog_OTOOL\nif test -n \"$OTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OTOOL\" >&5\n$as_echo \"$OTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OTOOL\"; then\n  ac_ct_OTOOL=$OTOOL\n  # Extract the first word of \"otool\", so it can be a program name with args.\nset dummy otool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OTOOL\"; then\n  ac_cv_prog_ac_ct_OTOOL=\"$ac_ct_OTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OTOOL=\"otool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OTOOL=$ac_cv_prog_ac_ct_OTOOL\nif test -n \"$ac_ct_OTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL\" >&5\n$as_echo \"$ac_ct_OTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OTOOL\" = x; then\n    OTOOL=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OTOOL=$ac_ct_OTOOL\n  fi\nelse\n  OTOOL=\"$ac_cv_prog_OTOOL\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}otool64\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}otool64; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OTOOL64+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OTOOL64\"; then\n  ac_cv_prog_OTOOL64=\"$OTOOL64\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OTOOL64=\"${ac_tool_prefix}otool64\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOTOOL64=$ac_cv_prog_OTOOL64\nif test -n \"$OTOOL64\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OTOOL64\" >&5\n$as_echo \"$OTOOL64\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OTOOL64\"; then\n  ac_ct_OTOOL64=$OTOOL64\n  # Extract the first word of \"otool64\", so it can be a program name with args.\nset dummy otool64; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OTOOL64+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OTOOL64\"; then\n  ac_cv_prog_ac_ct_OTOOL64=\"$ac_ct_OTOOL64\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OTOOL64=\"otool64\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OTOOL64=$ac_cv_prog_ac_ct_OTOOL64\nif test -n \"$ac_ct_OTOOL64\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL64\" >&5\n$as_echo \"$ac_ct_OTOOL64\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OTOOL64\" = x; then\n    OTOOL64=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OTOOL64=$ac_ct_OTOOL64\n  fi\nelse\n  OTOOL64=\"$ac_cv_prog_OTOOL64\"\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag\" >&5\n$as_echo_n \"checking for -single_module linker flag... \" >&6; }\nif ${lt_cv_apple_cc_single_mod+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&5\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&5\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&5\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_apple_cc_single_mod\" >&5\n$as_echo \"$lt_cv_apple_cc_single_mod\" >&6; }\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag\" >&5\n$as_echo_n \"checking for -exported_symbols_list linker flag... \" >&6; }\nif ${lt_cv_ld_exported_symbols_list+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  lt_cv_ld_exported_symbols_list=yes\nelse\n  lt_cv_ld_exported_symbols_list=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\tLDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_exported_symbols_list\" >&5\n$as_echo \"$lt_cv_ld_exported_symbols_list\" >&6; }\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -force_load linker flag\" >&5\n$as_echo_n \"checking for -force_load linker flag... \" >&6; }\nif ${lt_cv_ld_force_load+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&5\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&5\n      echo \"$AR cr libconftest.a conftest.o\" >&5\n      $AR cr libconftest.a conftest.o 2>&5\n      echo \"$RANLIB libconftest.a\" >&5\n      $RANLIB libconftest.a 2>&5\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&5\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&5\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&5\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_force_load\" >&5\n$as_echo \"$lt_cv_ld_force_load\" >&6; }\n    case $host_os in\n    rhapsody* | darwin1.[012])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[91]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[012][,.]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n\n# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x$2 in\n    x)\n        ;;\n    *:)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'` \\$$1\\\"\n        ;;\n    x:*)\n        eval $1=\\\"\\$$1 `$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval $1=\\\"\\$$1\\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval $1=\\\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\$$1\\\"\n        ;;\n    *)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor\" >&5\n$as_echo_n \"checking how to run the C preprocessor... \" >&6; }\n# On Suns, sometimes $CPP names a directory.\nif test -n \"$CPP\" && test -d \"$CPP\"; then\n  CPP=\nfi\nif test -z \"$CPP\"; then\n  if ${ac_cv_prog_CPP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n      # Double quotes because CPP needs to be expanded\n    for CPP in \"$CC -E\" \"$CC -E -traditional-cpp\" \"/lib/cpp\"\n    do\n      ac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n  break\nfi\n\n    done\n    ac_cv_prog_CPP=$CPP\n\nfi\n  CPP=$ac_cv_prog_CPP\nelse\n  ac_cv_prog_CPP=$CPP\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CPP\" >&5\n$as_echo \"$CPP\" >&6; }\nac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"C preprocessor \\\"$CPP\\\" fails sanity check\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ANSI C header files\" >&5\n$as_echo_n \"checking for ANSI C header files... \" >&6; }\nif ${ac_cv_header_stdc+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdlib.h>\n#include <stdarg.h>\n#include <string.h>\n#include <float.h>\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_header_stdc=yes\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\nif test $ac_cv_header_stdc = yes; then\n  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <string.h>\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"memchr\" >/dev/null 2>&1; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f conftest*\n\nfi\n\nif test $ac_cv_header_stdc = yes; then\n  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdlib.h>\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"free\" >/dev/null 2>&1; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f conftest*\n\nfi\n\nif test $ac_cv_header_stdc = yes; then\n  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.\n  if test \"$cross_compiling\" = yes; then :\n  :\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ctype.h>\n#include <stdlib.h>\n#if ((' ' & 0x0FF) == 0x020)\n# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))\n#else\n# define ISLOWER(c) \\\n\t\t   (('a' <= (c) && (c) <= 'i') \\\n\t\t     || ('j' <= (c) && (c) <= 'r') \\\n\t\t     || ('s' <= (c) && (c) <= 'z'))\n# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))\n#endif\n\n#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))\nint\nmain ()\n{\n  int i;\n  for (i = 0; i < 256; i++)\n    if (XOR (islower (i), ISLOWER (i))\n\t|| toupper (i) != TOUPPER (i))\n      return 2;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc\" >&5\n$as_echo \"$ac_cv_header_stdc\" >&6; }\nif test $ac_cv_header_stdc = yes; then\n\n$as_echo \"#define STDC_HEADERS 1\" >>confdefs.h\n\nfi\n\n# On IRIX 5.3, sys/types and inttypes.h are conflicting.\nfor ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \\\n\t\t  inttypes.h stdint.h unistd.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_compile \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\n\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n\nfor ac_header in dlfcn.h\ndo :\n  ac_fn_c_check_header_compile \"$LINENO\" \"dlfcn.h\" \"ac_cv_header_dlfcn_h\" \"$ac_includes_default\n\"\nif test \"x$ac_cv_header_dlfcn_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_DLFCN_H 1\n_ACEOF\n\nfi\n\ndone\n\n\n\n\n\n# Set options\nenable_win32_dll=yes\n\ncase $host in\n*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}as\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}as; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AS+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AS\"; then\n  ac_cv_prog_AS=\"$AS\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AS=\"${ac_tool_prefix}as\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAS=$ac_cv_prog_AS\nif test -n \"$AS\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AS\" >&5\n$as_echo \"$AS\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_AS\"; then\n  ac_ct_AS=$AS\n  # Extract the first word of \"as\", so it can be a program name with args.\nset dummy as; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_AS+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_AS\"; then\n  ac_cv_prog_ac_ct_AS=\"$ac_ct_AS\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_AS=\"as\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_AS=$ac_cv_prog_ac_ct_AS\nif test -n \"$ac_ct_AS\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AS\" >&5\n$as_echo \"$ac_ct_AS\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_AS\" = x; then\n    AS=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    AS=$ac_ct_AS\n  fi\nelse\n  AS=\"$ac_cv_prog_AS\"\nfi\n\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}dlltool\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DLLTOOL\"; then\n  ac_cv_prog_DLLTOOL=\"$DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DLLTOOL=\"${ac_tool_prefix}dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDLLTOOL=$ac_cv_prog_DLLTOOL\nif test -n \"$DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DLLTOOL\" >&5\n$as_echo \"$DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_DLLTOOL\"; then\n  ac_ct_DLLTOOL=$DLLTOOL\n  # Extract the first word of \"dlltool\", so it can be a program name with args.\nset dummy dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DLLTOOL\"; then\n  ac_cv_prog_ac_ct_DLLTOOL=\"$ac_ct_DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DLLTOOL=\"dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL\nif test -n \"$ac_ct_DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL\" >&5\n$as_echo \"$ac_ct_DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_DLLTOOL\" = x; then\n    DLLTOOL=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DLLTOOL=$ac_ct_DLLTOOL\n  fi\nelse\n  DLLTOOL=\"$ac_cv_prog_DLLTOOL\"\nfi\n\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}objdump\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OBJDUMP\"; then\n  ac_cv_prog_OBJDUMP=\"$OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OBJDUMP=\"${ac_tool_prefix}objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOBJDUMP=$ac_cv_prog_OBJDUMP\nif test -n \"$OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJDUMP\" >&5\n$as_echo \"$OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OBJDUMP\"; then\n  ac_ct_OBJDUMP=$OBJDUMP\n  # Extract the first word of \"objdump\", so it can be a program name with args.\nset dummy objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OBJDUMP\"; then\n  ac_cv_prog_ac_ct_OBJDUMP=\"$ac_ct_OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OBJDUMP=\"objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP\nif test -n \"$ac_ct_OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP\" >&5\n$as_echo \"$ac_ct_OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OBJDUMP\" = x; then\n    OBJDUMP=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OBJDUMP=$ac_ct_OBJDUMP\n  fi\nelse\n  OBJDUMP=\"$ac_cv_prog_OBJDUMP\"\nfi\n\n  ;;\nesac\n\ntest -z \"$AS\" && AS=as\n\n\n\n\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n\n\n\n\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n\n\n\n\n# Check whether --enable-shared was given.\nif test \"${enable_shared+set}\" = set; then :\n  enableval=$enable_shared; p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  enable_shared=no\nfi\n\n\n\n\n\n\n\n# Check whether --enable-static was given.\nif test \"${enable_static+set}\" = set; then :\n  enableval=$enable_static; p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  enable_static=yes\nfi\n\n\n\n\n\n\n\n\n\n\n        enable_dlopen=no\n\n\n\n\n\n\n# Check whether --with-pic was given.\nif test \"${with_pic+set}\" = set; then :\n  withval=$with_pic; lt_p=${PACKAGE-default}\n    case $withval in\n    yes|no) pic_mode=$withval ;;\n    *)\n      pic_mode=default\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for lt_pkg in $withval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$lt_pkg\" = \"X$lt_p\"; then\n\t  pic_mode=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  pic_mode=default\nfi\n\n\n\n\n\n\n\n\n  # Check whether --enable-fast-install was given.\nif test \"${enable_fast_install+set}\" = set; then :\n  enableval=$enable_fast_install; p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  enable_fast_install=yes\nfi\n\n\n\n\n\n\n\n\n  shared_archive_member_spec=\ncase $host,$enable_shared in\npower*-*-aix[5-9]*,yes)\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking which variant of shared library versioning to provide\" >&5\n$as_echo_n \"checking which variant of shared library versioning to provide... \" >&6; }\n\n# Check whether --with-aix-soname was given.\nif test \"${with_aix_soname+set}\" = set; then :\n  withval=$with_aix_soname; case $withval in\n    aix|svr4|both)\n      ;;\n    *)\n      as_fn_error $? \"Unknown argument to --with-aix-soname\" \"$LINENO\" 5\n      ;;\n    esac\n    lt_cv_with_aix_soname=$with_aix_soname\nelse\n  if ${lt_cv_with_aix_soname+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_with_aix_soname=aix\nfi\n\n    with_aix_soname=$lt_cv_with_aix_soname\nfi\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_aix_soname\" >&5\n$as_echo \"$with_aix_soname\" >&6; }\n  if test aix != \"$with_aix_soname\"; then\n    # For the AIX way of multilib, we name the shared archive member\n    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',\n    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.\n    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,\n    # the AIX toolchain works better with OBJECT_MODE set (default 32).\n    if test 64 = \"${OBJECT_MODE-32}\"; then\n      shared_archive_member_spec=shr_64\n    else\n      shared_archive_member_spec=shr\n    fi\n  fi\n  ;;\n*)\n  with_aix_soname=aix\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for objdir\" >&5\n$as_echo_n \"checking for objdir... \" >&6; }\nif ${lt_cv_objdir+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_objdir\" >&5\n$as_echo \"$lt_cv_objdir\" >&6; }\nobjdir=$lt_cv_objdir\n\n\n\n\n\ncat >>confdefs.h <<_ACEOF\n#define LT_OBJDIR \"$lt_cv_objdir/\"\n_ACEOF\n\n\n\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\nfunc_cc_basename $compiler\ncc_basename=$func_cc_basename_result\n\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${ac_tool_prefix}file\" >&5\n$as_echo_n \"checking for ${ac_tool_prefix}file... \" >&6; }\nif ${lt_cv_path_MAGIC_CMD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $MAGIC_CMD in\n[\\\\/*] |  ?:[\\\\/]*)\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  ac_dummy=\"/usr/bin$PATH_SEPARATOR$PATH\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/${ac_tool_prefix}file\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"${ac_tool_prefix}file\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac\nfi\n\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD\" >&5\n$as_echo \"$MAGIC_CMD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n\n\n\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for file\" >&5\n$as_echo_n \"checking for file... \" >&6; }\nif ${lt_cv_path_MAGIC_CMD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $MAGIC_CMD in\n[\\\\/*] |  ?:[\\\\/]*)\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  ac_dummy=\"/usr/bin$PATH_SEPARATOR$PATH\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/file\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"file\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac\nfi\n\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD\" >&5\n$as_echo \"$MAGIC_CMD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  else\n    MAGIC_CMD=:\n  fi\nfi\n\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\n\nlt_save_CC=$CC\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\nobjext=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n\n\n\n\n\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n\nlt_prog_compiler_no_builtin_flag=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    lt_prog_compiler_no_builtin_flag=' -Xcompiler -fno-builtin' ;;\n  *)\n    lt_prog_compiler_no_builtin_flag=' -fno-builtin' ;;\n  esac\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -fno-rtti -fno-exceptions\" >&5\n$as_echo_n \"checking if $compiler supports -fno-rtti -fno-exceptions... \" >&6; }\nif ${lt_cv_prog_compiler_rtti_exceptions+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_rtti_exceptions=no\n   ac_outfile=conftest.$ac_objext\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"-fno-rtti -fno-exceptions\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_rtti_exceptions=yes\n     fi\n   fi\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_rtti_exceptions\" >&5\n$as_echo \"$lt_cv_prog_compiler_rtti_exceptions\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_rtti_exceptions\"; then\n    lt_prog_compiler_no_builtin_flag=\"$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions\"\nelse\n    :\nfi\n\nfi\n\n\n\n\n\n\n  lt_prog_compiler_wl=\nlt_prog_compiler_pic=\nlt_prog_compiler_static=\n\n\n  if test yes = \"$GCC\"; then\n    lt_prog_compiler_wl='-Wl,'\n    lt_prog_compiler_static='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\tlt_prog_compiler_static='-Bstatic'\n      fi\n      lt_prog_compiler_pic='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            lt_prog_compiler_pic='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      lt_prog_compiler_pic='-DDLL_EXPORT'\n      case $host_os in\n      os2*)\n\tlt_prog_compiler_static='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      lt_prog_compiler_pic='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      lt_prog_compiler_static=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\tlt_prog_compiler_pic='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[3-9]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      lt_prog_compiler_can_build_shared=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      lt_prog_compiler_pic='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tlt_prog_compiler_pic=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      lt_prog_compiler_pic='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      lt_prog_compiler_wl='-Xlinker '\n      if test -n \"$lt_prog_compiler_pic\"; then\n        lt_prog_compiler_pic=\"-Xcompiler $lt_prog_compiler_pic\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      lt_prog_compiler_wl='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\tlt_prog_compiler_static='-Bstatic'\n      else\n\tlt_prog_compiler_static='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      lt_prog_compiler_pic='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        lt_prog_compiler_wl='-Wl,-Wl,,'\n        lt_prog_compiler_pic='-PIC'\n        lt_prog_compiler_static='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      lt_prog_compiler_pic='-DDLL_EXPORT'\n      case $host_os in\n      os2*)\n\tlt_prog_compiler_static='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      lt_prog_compiler_wl='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\tlt_prog_compiler_pic='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      lt_prog_compiler_static='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      lt_prog_compiler_wl='-Wl,'\n      # PIC (with -KPIC) is the default.\n      lt_prog_compiler_static='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-KPIC'\n\tlt_prog_compiler_static='-static'\n        ;;\n      # flang / f18. f95 an alias for gfortran or flang on Debian\n      flang* | f18* | f95*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fPIC'\n\tlt_prog_compiler_static='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fPIC'\n\tlt_prog_compiler_static='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='--shared'\n\tlt_prog_compiler_static='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\tlt_prog_compiler_wl='-Wl,-Wl,,'\n\tlt_prog_compiler_pic='-PIC'\n\tlt_prog_compiler_static='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fPIC'\n\tlt_prog_compiler_static='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fpic'\n\tlt_prog_compiler_static='-Bstatic'\n        ;;\n      ccc*)\n        lt_prog_compiler_wl='-Wl,'\n        # All Alpha code is PIC.\n        lt_prog_compiler_static='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-qpic'\n\tlt_prog_compiler_static='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [1-7].* | *Sun*Fortran*\\ 8.[0-3]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  lt_prog_compiler_pic='-KPIC'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  lt_prog_compiler_wl=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  lt_prog_compiler_pic='-KPIC'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  lt_prog_compiler_wl='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  lt_prog_compiler_pic='-KPIC'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  lt_prog_compiler_wl='-Wl,'\n\t  ;;\n        *Intel*\\ [CF]*Compiler*)\n\t  lt_prog_compiler_wl='-Wl,'\n\t  lt_prog_compiler_pic='-fPIC'\n\t  lt_prog_compiler_static='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  lt_prog_compiler_wl='-Wl,'\n\t  lt_prog_compiler_pic='-fpic'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      lt_prog_compiler_pic='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      lt_prog_compiler_wl='-Wl,'\n      # All OSF/1 code is PIC.\n      lt_prog_compiler_static='-non_shared'\n      ;;\n\n    rdos*)\n      lt_prog_compiler_static='-non_shared'\n      ;;\n\n    solaris*)\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\tlt_prog_compiler_wl='-Qoption ld ';;\n      *)\n\tlt_prog_compiler_wl='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      lt_prog_compiler_wl='-Qoption ld '\n      lt_prog_compiler_pic='-PIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      lt_prog_compiler_wl='-Wl,'\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tlt_prog_compiler_pic='-Kconform_pic'\n\tlt_prog_compiler_static='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      lt_prog_compiler_wl='-Wl,'\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    unicos*)\n      lt_prog_compiler_wl='-Wl,'\n      lt_prog_compiler_can_build_shared=no\n      ;;\n\n    uts4*)\n      lt_prog_compiler_pic='-pic'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    *)\n      lt_prog_compiler_can_build_shared=no\n      ;;\n    esac\n  fi\n\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    lt_prog_compiler_pic=\n    ;;\n  *)\n    lt_prog_compiler_pic=\"$lt_prog_compiler_pic -DPIC\"\n    ;;\nesac\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC\" >&5\n$as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\nif ${lt_cv_prog_compiler_pic+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic=$lt_prog_compiler_pic\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic\" >&6; }\nlt_prog_compiler_pic=$lt_cv_prog_compiler_pic\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$lt_prog_compiler_pic\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic works\" >&5\n$as_echo_n \"checking if $compiler PIC flag $lt_prog_compiler_pic works... \" >&6; }\nif ${lt_cv_prog_compiler_pic_works+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic_works=no\n   ac_outfile=conftest.$ac_objext\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$lt_prog_compiler_pic -DPIC\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_pic_works=yes\n     fi\n   fi\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic_works\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_pic_works\"; then\n    case $lt_prog_compiler_pic in\n     \"\" | \" \"*) ;;\n     *) lt_prog_compiler_pic=\" $lt_prog_compiler_pic\" ;;\n     esac\nelse\n    lt_prog_compiler_pic=\n     lt_prog_compiler_can_build_shared=no\nfi\n\nfi\n\n\n\n\n\n\n\n\n\n\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$lt_prog_compiler_wl eval lt_tmp_static_flag=\\\"$lt_prog_compiler_static\\\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works\" >&5\n$as_echo_n \"checking if $compiler static flag $lt_tmp_static_flag works... \" >&6; }\nif ${lt_cv_prog_compiler_static_works+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_static_works=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $lt_tmp_static_flag\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&5\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         lt_cv_prog_compiler_static_works=yes\n       fi\n     else\n       lt_cv_prog_compiler_static_works=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works\" >&5\n$as_echo \"$lt_cv_prog_compiler_static_works\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_static_works\"; then\n    :\nelse\n    lt_prog_compiler_static=\nfi\n\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o\" >&6; }\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o\" >&6; }\n\n\n\n\nhard_links=nottested\nif test no = \"$lt_cv_prog_compiler_c_o\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links\" >&5\n$as_echo_n \"checking if we can lock with hard links... \" >&6; }\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hard_links\" >&5\n$as_echo \"$hard_links\" >&6; }\n  if test no = \"$hard_links\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&5\n$as_echo \"$as_me: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&2;}\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries\" >&5\n$as_echo_n \"checking whether the $compiler linker ($LD) supports shared libraries... \" >&6; }\n\n  runpath_var=\n  allow_undefined_flag=\n  always_export_symbols=no\n  archive_cmds=\n  archive_expsym_cmds=\n  compiler_needs_object=no\n  enable_shared_with_static_runtimes=no\n  export_dynamic_flag_spec=\n  export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  hardcode_automatic=no\n  hardcode_direct=no\n  hardcode_direct_absolute=no\n  hardcode_libdir_flag_spec=\n  hardcode_libdir_separator=\n  hardcode_minus_L=no\n  hardcode_shlibpath_var=unsupported\n  inherit_rpath=no\n  link_all_deplibs=unknown\n  module_cmds=\n  module_expsym_cmds=\n  old_archive_from_new_cmds=\n  old_archive_from_expsyms_cmds=\n  thread_safe_flag_spec=\n  whole_archive_flag_spec=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  include_expsyms=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    link_all_deplibs=no\n    ;;\n  esac\n\n  ld_shlibs=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[2-9]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [3-9]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n    export_dynamic_flag_spec='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      whole_archive_flag_spec=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      whole_archive_flag_spec=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/(^)\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [01].* | *\\ 2.[0-9].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[3-9]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\tld_shlibs=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            archive_expsym_cmds=''\n        ;;\n      m68k)\n            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            hardcode_libdir_flag_spec='-L$libdir'\n            hardcode_minus_L=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\tallow_undefined_flag=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\tarchive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,\n      # as there is no search path for DLLs.\n      hardcode_libdir_flag_spec='-L$libdir'\n      export_dynamic_flag_spec='$wl--export-all-symbols'\n      allow_undefined_flag=unsupported\n      always_export_symbols=no\n      enable_shared_with_static_runtimes=yes\n      export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1 DATA/;s/^.*[ ]__nm__\\([^ ]*\\)[ ][^ ]*/\\1 DATA/;/^I[ ]/d;/^[AITW][ ]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      exclude_expsyms='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\tarchive_expsym_cmds='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    haiku*)\n      archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      link_all_deplibs=yes\n      ;;\n\n    os2*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_minus_L=yes\n      allow_undefined_flag=unsupported\n      shrext_cmds=.dll\n      archive_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      archive_expsym_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      enable_shared_with_static_runtimes=yes\n      ;;\n\n    interix[3-9]*)\n      hardcode_direct=no\n      hardcode_shlibpath_var=no\n      hardcode_libdir_flag_spec='$wl-rpath,$libdir'\n      export_dynamic_flag_spec='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      archive_expsym_cmds='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  whole_archive_flag_spec=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[cC]* | bgxl[cC]* | mpixl[cC]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  compiler_needs_object=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  whole_archive_flag_spec='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  compiler_needs_object=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\tarchive_cmds='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          archive_expsym_cmds='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  export_dynamic_flag_spec='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'\n\t  hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n\t  archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    archive_expsym_cmds='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        ld_shlibs=no\n      fi\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\tarchive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\tarchive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\tld_shlibs=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\tarchive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [01].* | *\\ 2.[0-9].* | *\\ 2.1[0-5].*)\n\tld_shlibs=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n\t    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    ld_shlibs=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\tarchive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$ld_shlibs\"; then\n      runpath_var=\n      hardcode_libdir_flag_spec=\n      export_dynamic_flag_spec=\n      whole_archive_flag_spec=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      allow_undefined_flag=unsupported\n      always_export_symbols=yes\n      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      hardcode_minus_L=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\thardcode_direct=unsupported\n      fi\n      ;;\n\n    aix[4-9]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  export_symbols_cmds='`func_echo_all $NM | $SED -e '\\''s/B\\([^B]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && (substr(\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      archive_cmds=''\n      hardcode_direct=yes\n      hardcode_direct_absolute=yes\n      hardcode_libdir_separator=':'\n      link_all_deplibs=yes\n      file_list_spec='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\thardcode_direct=no\n\thardcode_direct_absolute=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[012]|aix4.[012].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  hardcode_direct=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  hardcode_minus_L=yes\n\t  hardcode_libdir_flag_spec='-L$libdir'\n\t  hardcode_libdir_separator=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      export_dynamic_flag_spec='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      always_export_symbols=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\tallow_undefined_flag='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath_+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath_=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath_\nfi\n\n        hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  hardcode_libdir_flag_spec='$wl-R $libdir:/usr/lib:/lib'\n\t  allow_undefined_flag=\"-z nodefs\"\n\t  archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath_+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath_=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath_\nfi\n\n\t hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  no_undefined_flag=' $wl-bernotok'\n\t  allow_undefined_flag=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    whole_archive_flag_spec='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    whole_archive_flag_spec='$convenience'\n\t  fi\n\t  archive_cmds_need_lc=yes\n\t  archive_expsym_cmds='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([, ]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    archive_expsym_cmds=\"$archive_expsym_cmds\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    archive_expsym_cmds=\"$archive_expsym_cmds\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    archive_expsym_cmds=\"$archive_expsym_cmds\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  archive_expsym_cmds=\"$archive_expsym_cmds\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            archive_expsym_cmds=''\n        ;;\n      m68k)\n            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            hardcode_libdir_flag_spec='-L$libdir'\n            hardcode_minus_L=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[45]*)\n      export_dynamic_flag_spec=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\thardcode_libdir_flag_spec=' '\n\tallow_undefined_flag=unsupported\n\talways_export_symbols=yes\n\tfile_list_spec='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\tarchive_cmds='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\tarchive_expsym_cmds='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, )='true'\n\tenable_shared_with_static_runtimes=yes\n\texclude_expsyms='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\texport_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[AITW][ ]/s/.*[ ]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\told_postinstall_cmds='chmod 644 $oldlib'\n\tpostlink_cmds='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\thardcode_libdir_flag_spec=' '\n\tallow_undefined_flag=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\tarchive_cmds='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\told_archive_from_new_cmds='true'\n\t# FIXME: Should let the user specify the lib program.\n\told_archive_cmds='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\tenable_shared_with_static_runtimes=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n\n\n  archive_cmds_need_lc=no\n  hardcode_direct=no\n  hardcode_automatic=yes\n  hardcode_shlibpath_var=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    whole_archive_flag_spec='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n\n  else\n    whole_archive_flag_spec=''\n  fi\n  link_all_deplibs=yes\n  allow_undefined_flag=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    archive_cmds=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    module_cmds=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    archive_expsym_cmds=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    module_expsym_cmds=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n\n  else\n  ld_shlibs=no\n  fi\n\n      ;;\n\n    dgux*)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_shlibpath_var=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_direct=yes\n      hardcode_minus_L=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\tarchive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      hardcode_libdir_flag_spec='$wl+b $wl$libdir'\n      hardcode_libdir_separator=:\n      hardcode_direct=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      hardcode_minus_L=yes\n      export_dynamic_flag_spec='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tarchive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\thardcode_libdir_flag_spec='$wl+b $wl$libdir'\n\thardcode_libdir_separator=:\n\thardcode_direct=yes\n\thardcode_direct_absolute=yes\n\texport_dynamic_flag_spec='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\thardcode_minus_L=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  archive_cmds='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  archive_cmds='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  archive_cmds='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $CC understands -b\" >&5\n$as_echo_n \"checking if $CC understands -b... \" >&6; }\nif ${lt_cv_prog_compiler__b+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler__b=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS -b\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&5\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         lt_cv_prog_compiler__b=yes\n       fi\n     else\n       lt_cv_prog_compiler__b=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler__b\" >&5\n$as_echo \"$lt_cv_prog_compiler__b\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler__b\"; then\n    archive_cmds='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\nelse\n    archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\nfi\n\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\thardcode_libdir_flag_spec='$wl+b $wl$libdir'\n\thardcode_libdir_separator=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  hardcode_direct=no\n\t  hardcode_shlibpath_var=no\n\t  ;;\n\t*)\n\t  hardcode_direct=yes\n\t  hardcode_direct_absolute=yes\n\t  export_dynamic_flag_spec='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  hardcode_minus_L=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $host_os linker accepts -exported_symbol\" >&5\n$as_echo_n \"checking whether the $host_os linker accepts -exported_symbol... \" >&6; }\nif ${lt_cv_irix_exported_symbol+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint foo (void) { return 0; }\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  lt_cv_irix_exported_symbol=yes\nelse\n  lt_cv_irix_exported_symbol=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n           LDFLAGS=$save_LDFLAGS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_irix_exported_symbol\" >&5\n$as_echo \"$lt_cv_irix_exported_symbol\" >&6; }\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n\tlink_all_deplibs=no\n      else\n\tarchive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\tarchive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      archive_cmds_need_lc='no'\n      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      hardcode_libdir_separator=:\n      inherit_rpath=yes\n      link_all_deplibs=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\tld_shlibs=yes\n\tarchive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\tarchive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\tarchive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    newsos6)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_direct=yes\n      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      hardcode_libdir_separator=:\n      hardcode_shlibpath_var=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\thardcode_direct=yes\n\thardcode_shlibpath_var=no\n\thardcode_direct_absolute=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  hardcode_libdir_flag_spec='$wl-rpath,$libdir'\n\t  export_dynamic_flag_spec='$wl-E'\n\telse\n\t  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  hardcode_libdir_flag_spec='$wl-rpath,$libdir'\n\tfi\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    os2*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_minus_L=yes\n      allow_undefined_flag=unsupported\n      shrext_cmds=.dll\n      archive_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      archive_expsym_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      enable_shared_with_static_runtimes=yes\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\tallow_undefined_flag=' $wl-expect_unresolved $wl\\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\tallow_undefined_flag=' -expect_unresolved \\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      archive_cmds_need_lc='no'\n      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      hardcode_libdir_separator=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\tallow_undefined_flag=' $wl-expect_unresolved $wl\\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\thardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      else\n\tallow_undefined_flag=' -expect_unresolved \\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\tarchive_expsym_cmds='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\thardcode_libdir_flag_spec='-rpath $libdir'\n      fi\n      archive_cmds_need_lc='no'\n      hardcode_libdir_separator=:\n      ;;\n\n    solaris*)\n      no_undefined_flag=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\tarchive_cmds='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  archive_cmds='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  archive_expsym_cmds='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  archive_cmds='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_shlibpath_var=no\n      case $host_os in\n      solaris2.[0-5] | solaris2.[0-5].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  whole_archive_flag_spec='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  whole_archive_flag_spec='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      link_all_deplibs=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\tarchive_cmds='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_direct=yes\n      hardcode_minus_L=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  hardcode_direct=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  reload_cmds='$CC -r -o $output$reload_objs'\n\t  hardcode_direct=no\n        ;;\n\tmotorola)\n\t  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  hardcode_direct=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      hardcode_shlibpath_var=no\n      ;;\n\n    sysv4.3*)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_shlibpath_var=no\n      export_dynamic_flag_spec='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tarchive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\thardcode_shlibpath_var=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\tld_shlibs=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)\n      no_undefined_flag='$wl-z,text'\n      archive_cmds_need_lc=no\n      hardcode_shlibpath_var=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      no_undefined_flag='$wl-z,text'\n      allow_undefined_flag='$wl-z,nodefs'\n      archive_cmds_need_lc=no\n      hardcode_shlibpath_var=no\n      hardcode_libdir_flag_spec='$wl-R,$libdir'\n      hardcode_libdir_separator=':'\n      link_all_deplibs=yes\n      export_dynamic_flag_spec='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_shlibpath_var=no\n      ;;\n\n    *)\n      ld_shlibs=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\texport_dynamic_flag_spec='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_shlibs\" >&5\n$as_echo \"$ld_shlibs\" >&6; }\ntest no = \"$ld_shlibs\" && can_build_shared=no\n\nwith_gnu_ld=$with_gnu_ld\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$archive_cmds_need_lc\" in\nx|xyes)\n  # Assume -lc should be added\n  archive_cmds_need_lc=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $archive_cmds in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in\" >&5\n$as_echo_n \"checking whether -lc should be explicitly linked in... \" >&6; }\nif ${lt_cv_archive_cmds_need_lc+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  $RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$lt_prog_compiler_wl\n\t  pic_flag=$lt_prog_compiler_pic\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$allow_undefined_flag\n\t  allow_undefined_flag=\n\t  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$archive_cmds 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1\\\"\"; } >&5\n  (eval $archive_cmds 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n\t  then\n\t    lt_cv_archive_cmds_need_lc=no\n\t  else\n\t    lt_cv_archive_cmds_need_lc=yes\n\t  fi\n\t  allow_undefined_flag=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_archive_cmds_need_lc\" >&5\n$as_echo \"$lt_cv_archive_cmds_need_lc\" >&6; }\n      archive_cmds_need_lc=$lt_cv_archive_cmds_need_lc\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics\" >&5\n$as_echo_n \"checking dynamic linker characteristics... \" >&6; }\n\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([A-Za-z]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[lt_foo]++; }\n  if (lt_freq[lt_foo] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([A-Za-z]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\n\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[4-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[01] | aix4.[01].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a(lib.so.V)'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o), lib.a(lib.so.V)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a(lib.so.V), lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([^/]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[45]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([a-zA-Z]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | $GREP ';[c-zC-Z]:/' >/dev/null; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\n\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[23].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[01]* | freebsdelf3.[01]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \\\n  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[3-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  hardcode_libdir_flag_spec='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  if ${lt_cv_shlibpath_overrides_runpath+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$lt_prog_compiler_wl\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $hardcode_libdir_flag_spec\\\"\"\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null; then :\n  lt_cv_shlibpath_overrides_runpath=yes\nfi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n\nfi\n\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\$2)); skip = 1; } { if (!skip) print \\$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsdelf*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='NetBSD ld.elf_so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $dynamic_linker\" >&5\n$as_echo \"$dynamic_linker\" >&6; }\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs\" >&5\n$as_echo_n \"checking how to hardcode library paths into programs... \" >&6; }\nhardcode_action=\nif test -n \"$hardcode_libdir_flag_spec\" ||\n   test -n \"$runpath_var\" ||\n   test yes = \"$hardcode_automatic\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$hardcode_direct\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, )\" &&\n     test no != \"$hardcode_minus_L\"; then\n    # Linking always hardcodes the temporary library directory.\n    hardcode_action=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    hardcode_action=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  hardcode_action=unsupported\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hardcode_action\" >&5\n$as_echo \"$hardcode_action\" >&6; }\n\nif test relink = \"$hardcode_action\" ||\n   test yes = \"$inherit_rpath\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n\n\n\n\n\n\n  if test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl\" >&5\n$as_echo_n \"checking for dlopen in -ldl... \" >&6; }\nif ${ac_cv_lib_dl_dlopen+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldl  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dlopen ();\nint\nmain ()\n{\nreturn dlopen ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dl_dlopen=yes\nelse\n  ac_cv_lib_dl_dlopen=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen\" >&5\n$as_echo \"$ac_cv_lib_dl_dlopen\" >&6; }\nif test \"x$ac_cv_lib_dl_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl\nelse\n\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n\nfi\n\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    ac_fn_c_check_func \"$LINENO\" \"shl_load\" \"ac_cv_func_shl_load\"\nif test \"x$ac_cv_func_shl_load\" = xyes; then :\n  lt_cv_dlopen=shl_load\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for shl_load in -ldld\" >&5\n$as_echo_n \"checking for shl_load in -ldld... \" >&6; }\nif ${ac_cv_lib_dld_shl_load+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldld  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar shl_load ();\nint\nmain ()\n{\nreturn shl_load ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dld_shl_load=yes\nelse\n  ac_cv_lib_dld_shl_load=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load\" >&5\n$as_echo \"$ac_cv_lib_dld_shl_load\" >&6; }\nif test \"x$ac_cv_lib_dld_shl_load\" = xyes; then :\n  lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld\nelse\n  ac_fn_c_check_func \"$LINENO\" \"dlopen\" \"ac_cv_func_dlopen\"\nif test \"x$ac_cv_func_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl\" >&5\n$as_echo_n \"checking for dlopen in -ldl... \" >&6; }\nif ${ac_cv_lib_dl_dlopen+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldl  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dlopen ();\nint\nmain ()\n{\nreturn dlopen ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dl_dlopen=yes\nelse\n  ac_cv_lib_dl_dlopen=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen\" >&5\n$as_echo \"$ac_cv_lib_dl_dlopen\" >&6; }\nif test \"x$ac_cv_lib_dl_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld\" >&5\n$as_echo_n \"checking for dlopen in -lsvld... \" >&6; }\nif ${ac_cv_lib_svld_dlopen+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lsvld  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dlopen ();\nint\nmain ()\n{\nreturn dlopen ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_svld_dlopen=yes\nelse\n  ac_cv_lib_svld_dlopen=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen\" >&5\n$as_echo \"$ac_cv_lib_svld_dlopen\" >&6; }\nif test \"x$ac_cv_lib_svld_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld\" >&5\n$as_echo_n \"checking for dld_link in -ldld... \" >&6; }\nif ${ac_cv_lib_dld_dld_link+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldld  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dld_link ();\nint\nmain ()\n{\nreturn dld_link ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dld_dld_link=yes\nelse\n  ac_cv_lib_dld_dld_link=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link\" >&5\n$as_echo \"$ac_cv_lib_dld_dld_link\" >&6; }\nif test \"x$ac_cv_lib_dld_dld_link\" = xyes; then :\n  lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld\nfi\n\n\nfi\n\n\nfi\n\n\nfi\n\n\nfi\n\n\nfi\n\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself\" >&5\n$as_echo_n \"checking whether a program can dlopen itself... \" >&6; }\nif ${lt_cv_dlopen_self+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  \t  if test yes = \"$cross_compiling\"; then :\n  lt_cv_dlopen_self=cross\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}\n_LT_EOF\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_link\\\"\"; } >&5\n  (eval $ac_link) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&5 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) lt_cv_dlopen_self=yes ;;\n      x$lt_dlneed_uscore) lt_cv_dlopen_self=yes ;;\n      x$lt_dlunknown|x*) lt_cv_dlopen_self=no ;;\n    esac\n  else :\n    # compilation failed\n    lt_cv_dlopen_self=no\n  fi\nfi\nrm -fr conftest*\n\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self\" >&5\n$as_echo \"$lt_cv_dlopen_self\" >&6; }\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself\" >&5\n$as_echo_n \"checking whether a statically linked program can dlopen itself... \" >&6; }\nif ${lt_cv_dlopen_self_static+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  \t  if test yes = \"$cross_compiling\"; then :\n  lt_cv_dlopen_self_static=cross\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}\n_LT_EOF\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_link\\\"\"; } >&5\n  (eval $ac_link) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&5 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) lt_cv_dlopen_self_static=yes ;;\n      x$lt_dlneed_uscore) lt_cv_dlopen_self_static=yes ;;\n      x$lt_dlunknown|x*) lt_cv_dlopen_self_static=no ;;\n    esac\n  else :\n    # compilation failed\n    lt_cv_dlopen_self_static=no\n  fi\nfi\nrm -fr conftest*\n\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self_static\" >&5\n$as_echo \"$lt_cv_dlopen_self_static\" >&6; }\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstriplib=\nold_striplib=\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible\" >&5\n$as_echo_n \"checking whether stripping libraries is possible... \" >&6; }\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\n    else\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n    fi\n    ;;\n  *)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n    ;;\n  esac\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n  # Report what library types will actually be built\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries\" >&5\n$as_echo_n \"checking if libtool supports shared libraries... \" >&6; }\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $can_build_shared\" >&5\n$as_echo \"$can_build_shared\" >&6; }\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries\" >&5\n$as_echo_n \"checking whether to build shared libraries... \" >&6; }\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[4-9]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_shared\" >&5\n$as_echo \"$enable_shared\" >&6; }\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to build static libraries\" >&5\n$as_echo_n \"checking whether to build static libraries... \" >&6; }\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_static\" >&5\n$as_echo \"$enable_static\" >&6; }\n\n\n\n\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCC=$lt_save_CC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        ac_config_commands=\"$ac_config_commands libtool\"\n\n\n\n\n# Only expand once:\n\n\n\nversion_info=\"1:0:0\"\nrelease_info=\"\"\n\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nif test -z \"$CC\"; then\n          if test -n \"$ac_tool_prefix\"; then\n    # Extract the first word of \"${ac_tool_prefix}cc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  fi\nfi\nif test -z \"$CC\"; then\n  # Extract the first word of \"cc\", so it can be a program name with args.\nset dummy cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\n  ac_prog_rejected=no\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    if test \"$as_dir/$ac_word$ac_exec_ext\" = \"/usr/ucb/cc\"; then\n       ac_prog_rejected=yes\n       continue\n     fi\n    ac_cv_prog_CC=\"cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nif test $ac_prog_rejected = yes; then\n  # We found a bogon in the path, so make sure we never use it.\n  set dummy $ac_cv_prog_CC\n  shift\n  if test $# != 0; then\n    # We chose a different compiler from the bogus one.\n    # However, it has the same basename, so the bogon will be chosen\n    # first if we set CC to just the basename; use the full file name.\n    shift\n    ac_cv_prog_CC=\"$as_dir/$ac_word${1+' '}$@\"\n  fi\nfi\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in cl.exe\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in cl.exe\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\nfi\n\n\ntest -z \"$CC\" && { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C compiler... \" >&6; }\nif ${ac_cv_c_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\n$as_echo \"$ac_cv_c_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+set}\nac_save_CFLAGS=$CFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\n$as_echo_n \"checking whether $CC accepts -g... \" >&6; }\nif ${ac_cv_prog_cc_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nelse\n  CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\n$as_echo \"$ac_cv_prog_cc_g\" >&6; }\nif test \"$ac_test_CFLAGS\" = set; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89\" >&5\n$as_echo_n \"checking for $CC option to accept ISO C89... \" >&6; }\nif ${ac_cv_prog_cc_c89+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdarg.h>\n#include <stdio.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */\nstruct buf { int x; };\nFILE * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (p, i)\n     char **p;\n     int i;\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not '\\xHH' hex character constants.\n   These don't provoke an error unfortunately, instead are silently treated\n   as 'x'.  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously '\\x00'!='x' always comes out true, for an\n   array size at least.  It's necessary to write '\\x00'==0 to get something\n   that's true only with -std.  */\nint osf4_cc_array ['\\x00' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) 'x'\nint xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);\nint argc;\nchar **argv;\nint\nmain ()\n{\nreturn f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \\\n\t-Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC\n\nfi\n# AC_CACHE_VAL\ncase \"x$ac_cv_prog_cc_c89\" in\n  x)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\n$as_echo \"none needed\" >&6; } ;;\n  xno)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\n$as_echo \"unsupported\" >&6; } ;;\n  *)\n    CC=\"$CC $ac_cv_prog_cc_c89\"\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\n$as_echo \"$ac_cv_prog_cc_c89\" >&6; } ;;\nesac\nif test \"x$ac_cv_prog_cc_c89\" != xno; then :\n\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together\" >&5\n$as_echo_n \"checking whether $CC understands -c and -o together... \" >&6; }\nif ${am_cv_prog_cc_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if { echo \"$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext\" >&5\n   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o\" >&5\n$as_echo \"$am_cv_prog_cc_c_o\" >&6; }\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\nif test -z \"$CXX\"; then\n  if test -n \"$CCC\"; then\n    CXX=$CCC\n  else\n    if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CXX\"; then\n  ac_cv_prog_CXX=\"$CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CXX=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCXX=$ac_cv_prog_CXX\nif test -n \"$CXX\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CXX\" >&5\n$as_echo \"$CXX\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CXX\" && break\n  done\nfi\nif test -z \"$CXX\"; then\n  ac_ct_CXX=$CXX\n  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CXX\"; then\n  ac_cv_prog_ac_ct_CXX=\"$ac_ct_CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CXX=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CXX=$ac_cv_prog_ac_ct_CXX\nif test -n \"$ac_ct_CXX\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CXX\" >&5\n$as_echo \"$ac_ct_CXX\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CXX\" && break\ndone\n\n  if test \"x$ac_ct_CXX\" = x; then\n    CXX=\"g++\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CXX=$ac_ct_CXX\n  fi\nfi\n\n  fi\nfi\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C++ compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C++ compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C++ compiler... \" >&6; }\nif ${ac_cv_cxx_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_cxx_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_cxx_compiler_gnu\" >&5\n$as_echo \"$ac_cv_cxx_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GXX=yes\nelse\n  GXX=\nfi\nac_test_CXXFLAGS=${CXXFLAGS+set}\nac_save_CXXFLAGS=$CXXFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CXX accepts -g\" >&5\n$as_echo_n \"checking whether $CXX accepts -g... \" >&6; }\nif ${ac_cv_prog_cxx_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_cxx_werror_flag=$ac_cxx_werror_flag\n   ac_cxx_werror_flag=yes\n   ac_cv_prog_cxx_g=no\n   CXXFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cxx_g=yes\nelse\n  CXXFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n\nelse\n  ac_cxx_werror_flag=$ac_save_cxx_werror_flag\n\t CXXFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cxx_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_cxx_werror_flag=$ac_save_cxx_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cxx_g\" >&5\n$as_echo \"$ac_cv_prog_cxx_g\" >&6; }\nif test \"$ac_test_CXXFLAGS\" = set; then\n  CXXFLAGS=$ac_save_CXXFLAGS\nelif test $ac_cv_prog_cxx_g = yes; then\n  if test \"$GXX\" = yes; then\n    CXXFLAGS=\"-g -O2\"\n  else\n    CXXFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GXX\" = yes; then\n    CXXFLAGS=\"-O2\"\n  else\n    CXXFLAGS=\n  fi\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\ndepcc=\"$CXX\"  am_compiler_list=\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc\" >&5\n$as_echo_n \"checking dependency style of $depcc... \" >&6; }\nif ${am_cv_CXX_dependencies_compiler_type+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_CXX_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n 's/^#*\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n  fi\n  am__universal=false\n  case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thusly:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_CXX_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_CXX_dependencies_compiler_type=none\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_CXX_dependencies_compiler_type\" >&5\n$as_echo \"$am_cv_CXX_dependencies_compiler_type\" >&6; }\nCXXDEPMODE=depmode=$am_cv_CXX_dependencies_compiler_type\n\n if\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_CXX_dependencies_compiler_type\" = gcc3; then\n  am__fastdepCXX_TRUE=\n  am__fastdepCXX_FALSE='#'\nelse\n  am__fastdepCXX_TRUE='#'\n  am__fastdepCXX_FALSE=\nfi\n\n\n\n\nfunc_stripname_cnf ()\n{\n  case $2 in\n  .*) func_stripname_result=`$ECHO \"$3\" | $SED \"s%^$1%%; s%\\\\\\\\$2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"$3\" | $SED \"s%^$1%%; s%$2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n\n      if test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  ac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to run the C++ preprocessor\" >&5\n$as_echo_n \"checking how to run the C++ preprocessor... \" >&6; }\nif test -z \"$CXXCPP\"; then\n  if ${ac_cv_prog_CXXCPP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n      # Double quotes because CXXCPP needs to be expanded\n    for CXXCPP in \"$CXX -E\" \"/lib/cpp\"\n    do\n      ac_preproc_ok=false\nfor ac_cxx_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n  break\nfi\n\n    done\n    ac_cv_prog_CXXCPP=$CXXCPP\n\nfi\n  CXXCPP=$ac_cv_prog_CXXCPP\nelse\n  ac_cv_prog_CXXCPP=$CXXCPP\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CXXCPP\" >&5\n$as_echo \"$CXXCPP\" >&6; }\nac_preproc_ok=false\nfor ac_cxx_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"C++ preprocessor \\\"$CXXCPP\\\" fails sanity check\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n\narchive_cmds_need_lc_CXX=no\nallow_undefined_flag_CXX=\nalways_export_symbols_CXX=no\narchive_expsym_cmds_CXX=\ncompiler_needs_object_CXX=no\nexport_dynamic_flag_spec_CXX=\nhardcode_direct_CXX=no\nhardcode_direct_absolute_CXX=no\nhardcode_libdir_flag_spec_CXX=\nhardcode_libdir_separator_CXX=\nhardcode_minus_L_CXX=no\nhardcode_shlibpath_var_CXX=unsupported\nhardcode_automatic_CXX=no\ninherit_rpath_CXX=no\nmodule_cmds_CXX=\nmodule_expsym_cmds_CXX=\nlink_all_deplibs_CXX=unknown\nold_archive_cmds_CXX=$old_archive_cmds\nreload_flag_CXX=$reload_flag\nreload_cmds_CXX=$reload_cmds\nno_undefined_flag_CXX=\nwhole_archive_flag_spec_CXX=\nenable_shared_with_static_runtimes_CXX=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\nobjext_CXX=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n\n\n\n\n\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n\n\n  # save warnings/boilerplate of simple test code\n  ac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n\n  ac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  compiler_CXX=$CC\n  func_cc_basename $compiler\ncc_basename=$func_cc_basename_result\n\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'\n    else\n      lt_prog_compiler_no_builtin_flag_CXX=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n\n\n# Check whether --with-gnu-ld was given.\nif test \"${with_gnu_ld+set}\" = set; then :\n  withval=$with_gnu_ld; test no = \"$withval\" || with_gnu_ld=yes\nelse\n  with_gnu_ld=no\nfi\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld used by $CC\" >&5\n$as_echo_n \"checking for ld used by $CC... \" >&6; }\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [\\\\/]* | ?:[\\\\/]*)\n      re_direlt='/[^/][^/]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for GNU ld\" >&5\n$as_echo_n \"checking for GNU ld... \" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for non-GNU ld\" >&5\n$as_echo_n \"checking for non-GNU ld... \" >&6; }\nfi\nif ${lt_cv_path_LD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi\nfi\n\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LD\" >&5\n$as_echo \"$LD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\ntest -z \"$LD\" && as_fn_error $? \"no acceptable ld found in \\$PATH\" \"$LINENO\" 5\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\n$as_echo_n \"checking if the linker ($LD) is GNU ld... \" >&6; }\nif ${lt_cv_prog_gnu_ld+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  # I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld\" >&5\n$as_echo \"$lt_cv_prog_gnu_ld\" >&6; }\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\n\n\n\n\n\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        archive_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        archive_expsym_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n        export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          whole_archive_flag_spec_CXX=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          whole_archive_flag_spec_CXX=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries\" >&5\n$as_echo_n \"checking whether the $compiler linker ($LD) supports shared libraries... \" >&6; }\n    ld_shlibs_CXX=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n      aix[4-9]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        archive_cmds_CXX=''\n        hardcode_direct_CXX=yes\n        hardcode_direct_absolute_CXX=yes\n        hardcode_libdir_separator_CXX=':'\n        link_all_deplibs_CXX=yes\n        file_list_spec_CXX='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          hardcode_direct_CXX=no\n          hardcode_direct_absolute_CXX=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[012]|aix4.[012].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    hardcode_direct_CXX=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    hardcode_minus_L_CXX=yes\n\t    hardcode_libdir_flag_spec_CXX='-L$libdir'\n\t    hardcode_libdir_separator_CXX=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        export_dynamic_flag_spec_CXX='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        always_export_symbols_CXX=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          no_undefined_flag_CXX='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath__CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath__CXX=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath__CXX\nfi\n\n          hardcode_libdir_flag_spec_CXX='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          archive_expsym_cmds_CXX='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    hardcode_libdir_flag_spec_CXX='$wl-R $libdir:/usr/lib:/lib'\n\t    allow_undefined_flag_CXX=\"-z nodefs\"\n\t    archive_expsym_cmds_CXX=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath__CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath__CXX=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath__CXX\nfi\n\n\t    hardcode_libdir_flag_spec_CXX='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    no_undefined_flag_CXX=' $wl-bernotok'\n\t    allow_undefined_flag_CXX=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      whole_archive_flag_spec_CXX='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      whole_archive_flag_spec_CXX='$convenience'\n\t    fi\n\t    archive_cmds_need_lc_CXX=yes\n\t    archive_expsym_cmds_CXX='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([, ]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  allow_undefined_flag_CXX=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  archive_cmds_CXX='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  ld_shlibs_CXX=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  ld_shlibs_CXX=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  hardcode_libdir_flag_spec_CXX=' '\n\t  allow_undefined_flag_CXX=unsupported\n\t  always_export_symbols_CXX=yes\n\t  file_list_spec_CXX='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  archive_cmds_CXX='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  archive_expsym_cmds_CXX='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, CXX)='true'\n\t  enable_shared_with_static_runtimes_CXX=yes\n\t  # Don't use ranlib\n\t  old_postinstall_cmds_CXX='chmod 644 $oldlib'\n\t  postlink_cmds_CXX='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  hardcode_libdir_flag_spec_CXX='-L$libdir'\n\t  export_dynamic_flag_spec_CXX='$wl--export-all-symbols'\n\t  allow_undefined_flag_CXX=unsupported\n\t  always_export_symbols_CXX=no\n\t  enable_shared_with_static_runtimes_CXX=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    archive_expsym_cmds_CXX='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    ld_shlibs_CXX=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n\n\n  archive_cmds_need_lc_CXX=no\n  hardcode_direct_CXX=no\n  hardcode_automatic_CXX=yes\n  hardcode_shlibpath_var_CXX=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    whole_archive_flag_spec_CXX='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n\n  else\n    whole_archive_flag_spec_CXX=''\n  fi\n  link_all_deplibs_CXX=yes\n  allow_undefined_flag_CXX=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    archive_cmds_CXX=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    module_cmds_CXX=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    archive_expsym_cmds_CXX=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    module_expsym_cmds_CXX=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n       if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      archive_cmds_CXX=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      archive_expsym_cmds_CXX=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n\n  else\n  ld_shlibs_CXX=no\n  fi\n\n\t;;\n\n      os2*)\n\thardcode_libdir_flag_spec_CXX='-L$libdir'\n\thardcode_minus_L_CXX=yes\n\tallow_undefined_flag_CXX=unsupported\n\tshrext_cmds=.dll\n\tarchive_cmds_CXX='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\tarchive_expsym_cmds_CXX='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\told_archive_From_new_cmds_CXX='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\tenable_shared_with_static_runtimes_CXX=yes\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        ld_shlibs_CXX=no\n        ;;\n\n      freebsd-elf*)\n        archive_cmds_need_lc_CXX=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        ld_shlibs_CXX=yes\n        ;;\n\n      haiku*)\n        archive_cmds_CXX='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        link_all_deplibs_CXX=yes\n        ;;\n\n      hpux9*)\n        hardcode_libdir_flag_spec_CXX='$wl+b $wl$libdir'\n        hardcode_libdir_separator_CXX=:\n        export_dynamic_flag_spec_CXX='$wl-E'\n        hardcode_direct_CXX=yes\n        hardcode_minus_L_CXX=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            ld_shlibs_CXX=no\n            ;;\n          aCC*)\n            archive_cmds_CXX='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \" \\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              archive_cmds_CXX='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              ld_shlibs_CXX=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  hardcode_libdir_flag_spec_CXX='$wl+b $wl$libdir'\n\t  hardcode_libdir_separator_CXX=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      export_dynamic_flag_spec_CXX='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            hardcode_direct_CXX=no\n            hardcode_shlibpath_var_CXX=no\n            ;;\n          *)\n            hardcode_direct_CXX=yes\n            hardcode_direct_absolute_CXX=yes\n            hardcode_minus_L_CXX=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        archive_cmds_CXX='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        archive_cmds_CXX='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        archive_cmds_CXX='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \" \\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            archive_cmds_CXX='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            archive_cmds_CXX='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            archive_cmds_CXX='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      ld_shlibs_CXX=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[3-9]*)\n\thardcode_direct_CXX=no\n\thardcode_shlibpath_var_CXX=no\n\thardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\texport_dynamic_flag_spec_CXX='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\tarchive_cmds_CXX='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\tarchive_expsym_cmds_CXX='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    archive_cmds_CXX='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    old_archive_cmds_CXX='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    link_all_deplibs_CXX=yes\n\t    ;;\n        esac\n        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n        hardcode_libdir_separator_CXX=:\n        inherit_rpath_CXX=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    archive_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\\''s/\\([^()0-9A-Za-z{}]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    archive_expsym_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\\''s/\\([^()0-9A-Za-z{}]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    old_archive_cmds_CXX='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\tarchive_expsym_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        archive_cmds_CXX='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\tarchive_expsym_cmds_CXX='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    archive_cmds_need_lc_CXX=no\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\t    whole_archive_flag_spec_CXX='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [1-5].* | *pgcpp\\ [1-5].*)\n\t      prelink_cmds_CXX='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      old_archive_cmds_CXX='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      archive_cmds_CXX='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      archive_expsym_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    hardcode_libdir_flag_spec_CXX='$wl--rpath $wl$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\t    whole_archive_flag_spec_CXX='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    archive_expsym_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    hardcode_libdir_flag_spec_CXX='-rpath $libdir'\n\t    hardcode_libdir_separator_CXX=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\t    archive_cmds_CXX='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      archive_expsym_cmds_CXX='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      no_undefined_flag_CXX=' -zdefs'\n\t      archive_cmds_CXX='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      archive_expsym_cmds_CXX='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      hardcode_libdir_flag_spec_CXX='-R$libdir'\n\t      whole_archive_flag_spec_CXX='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      compiler_needs_object_CXX=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      old_archive_cmds_CXX='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\tld_shlibs_CXX=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  archive_cmds_CXX='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  hardcode_libdir_flag_spec_CXX='-R$libdir'\n\t  hardcode_direct_CXX=yes\n\t  hardcode_shlibpath_var_CXX=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        ld_shlibs_CXX=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  hardcode_direct_CXX=yes\n\t  hardcode_shlibpath_var_CXX=no\n\t  hardcode_direct_absolute_CXX=yes\n\t  archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    archive_expsym_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    export_dynamic_flag_spec_CXX='$wl-E'\n\t    whole_archive_flag_spec_CXX=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  ld_shlibs_CXX=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    archive_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\\''s/\\([^()0-9A-Za-z{}]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t    hardcode_libdir_separator_CXX=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) old_archive_cmds_CXX='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) old_archive_cmds_CXX='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        allow_undefined_flag_CXX=' $wl-expect_unresolved $wl\\*'\n\t        archive_cmds_CXX='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        allow_undefined_flag_CXX=' -expect_unresolved \\*'\n\t        archive_cmds_CXX='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        archive_expsym_cmds_CXX='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        hardcode_libdir_flag_spec_CXX='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    hardcode_libdir_separator_CXX=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      allow_undefined_flag_CXX=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          archive_cmds_CXX='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n\t      hardcode_libdir_separator_CXX=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      ld_shlibs_CXX=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            archive_cmds_need_lc_CXX=yes\n\t    no_undefined_flag_CXX=' -zdefs'\n\t    archive_cmds_CXX='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    archive_expsym_cmds_CXX='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    hardcode_libdir_flag_spec_CXX='-R$libdir'\n\t    hardcode_shlibpath_var_CXX=no\n\t    case $host_os in\n\t      solaris2.[0-5] | solaris2.[0-5].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\twhole_archive_flag_spec_CXX='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    link_all_deplibs_CXX=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    old_archive_cmds_CXX='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    old_archive_cmds_CXX='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      no_undefined_flag_CXX=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        archive_expsym_cmds_CXX='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        archive_cmds_CXX='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        archive_expsym_cmds_CXX='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\t      fi\n\n\t      hardcode_libdir_flag_spec_CXX='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[0-5] | solaris2.[0-5].*) ;;\n\t\t*)\n\t\t  whole_archive_flag_spec_CXX='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)\n      no_undefined_flag_CXX='$wl-z,text'\n      archive_cmds_need_lc_CXX=no\n      hardcode_shlibpath_var_CXX=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  archive_cmds_CXX='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds_CXX='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  archive_cmds_CXX='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds_CXX='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\tno_undefined_flag_CXX='$wl-z,text'\n\tallow_undefined_flag_CXX='$wl-z,nodefs'\n\tarchive_cmds_need_lc_CXX=no\n\thardcode_shlibpath_var_CXX=no\n\thardcode_libdir_flag_spec_CXX='$wl-R,$libdir'\n\thardcode_libdir_separator_CXX=':'\n\tlink_all_deplibs_CXX=yes\n\texport_dynamic_flag_spec_CXX='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    archive_cmds_CXX='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    archive_expsym_cmds_CXX='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    old_archive_cmds_CXX='$CC -Tprelink_objects $oldobjs~\n              '\"$old_archive_cmds_CXX\"\n\t    reload_cmds_CXX='$CC -Tprelink_objects $reload_objs~\n              '\"$reload_cmds_CXX\"\n\t    ;;\n\t  *)\n\t    archive_cmds_CXX='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    archive_expsym_cmds_CXX='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n    esac\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_shlibs_CXX\" >&5\n$as_echo \"$ld_shlibs_CXX\" >&6; }\n    test no = \"$ld_shlibs_CXX\" && can_build_shared=no\n\n    GCC_CXX=$GXX\n    LD_CXX=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    # Dependencies to place before and after the object being linked:\npredep_objects_CXX=\npostdep_objects_CXX=\npredeps_CXX=\npostdeps_CXX=\ncompiler_lib_search_path_CXX=\n\ncat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\nif { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$compiler_lib_search_path_CXX\"; then\n\t     compiler_lib_search_path_CXX=$prev$p\n\t   else\n\t     compiler_lib_search_path_CXX=\"${compiler_lib_search_path_CXX} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$postdeps_CXX\"; then\n\t   postdeps_CXX=$prev$p\n\t else\n\t   postdeps_CXX=\"${postdeps_CXX} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$predep_objects_CXX\"; then\n\t   predep_objects_CXX=$p\n\t else\n\t   predep_objects_CXX=\"$predep_objects_CXX $p\"\n\t fi\n       else\n\t if test -z \"$postdep_objects_CXX\"; then\n\t   postdep_objects_CXX=$p\n\t else\n\t   postdep_objects_CXX=\"$postdep_objects_CXX $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling CXX test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\ncase $host_os in\ninterix[3-9]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  predep_objects_CXX=\n  postdep_objects_CXX=\n  postdeps_CXX=\n  ;;\nesac\n\n\ncase \" $postdeps_CXX \" in\n*\" -lc \"*) archive_cmds_need_lc_CXX=no ;;\nesac\n compiler_lib_search_dirs_CXX=\nif test -n \"${compiler_lib_search_path_CXX}\"; then\n compiler_lib_search_dirs_CXX=`echo \" ${compiler_lib_search_path_CXX}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    lt_prog_compiler_wl_CXX=\nlt_prog_compiler_pic_CXX=\nlt_prog_compiler_static_CXX=\n\n\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    lt_prog_compiler_wl_CXX='-Wl,'\n    lt_prog_compiler_static_CXX='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\tlt_prog_compiler_static_CXX='-Bstatic'\n      fi\n      lt_prog_compiler_pic_CXX='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            lt_prog_compiler_pic_CXX='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            lt_prog_compiler_pic_CXX='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      lt_prog_compiler_pic_CXX='-DDLL_EXPORT'\n      case $host_os in\n      os2*)\n\tlt_prog_compiler_static_CXX='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      lt_prog_compiler_pic_CXX='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      lt_prog_compiler_pic_CXX=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      lt_prog_compiler_static_CXX=\n      ;;\n    interix[3-9]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tlt_prog_compiler_pic_CXX=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\tlt_prog_compiler_pic_CXX='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      lt_prog_compiler_pic_CXX='-fPIC -shared'\n      ;;\n    *)\n      lt_prog_compiler_pic_CXX='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[4-9]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  lt_prog_compiler_static_CXX='-Bstatic'\n\telse\n\t  lt_prog_compiler_static_CXX='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, CXX)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tlt_prog_compiler_pic_CXX='-DDLL_EXPORT'\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_static_CXX='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      lt_prog_compiler_pic_CXX='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_static_CXX='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      lt_prog_compiler_pic_CXX='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_static_CXX='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    lt_prog_compiler_wl_CXX='--backend -Wl,'\n\t    lt_prog_compiler_pic_CXX='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    lt_prog_compiler_static_CXX='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-fPIC'\n\t    lt_prog_compiler_static_CXX='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-fpic'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    lt_prog_compiler_pic_CXX=\n\t    lt_prog_compiler_static_CXX='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[cC]* | mpixl[cC]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-qpic'\n\t    lt_prog_compiler_static_CXX='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      lt_prog_compiler_pic_CXX='-KPIC'\n\t      lt_prog_compiler_static_CXX='-Bstatic'\n\t      lt_prog_compiler_wl_CXX='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    lt_prog_compiler_pic_CXX='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd* | netbsdelf*-gnu)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        lt_prog_compiler_pic_CXX='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    lt_prog_compiler_wl_CXX='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    lt_prog_compiler_pic_CXX=\n\t    lt_prog_compiler_static_CXX='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    lt_prog_compiler_wl_CXX='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    lt_prog_compiler_pic_CXX='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\tlt_prog_compiler_can_build_shared_CXX=no\n\t;;\n    esac\n  fi\n\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    lt_prog_compiler_pic_CXX=\n    ;;\n  *)\n    lt_prog_compiler_pic_CXX=\"$lt_prog_compiler_pic_CXX -DPIC\"\n    ;;\nesac\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC\" >&5\n$as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\nif ${lt_cv_prog_compiler_pic_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic_CXX=$lt_prog_compiler_pic_CXX\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic_CXX\" >&6; }\nlt_prog_compiler_pic_CXX=$lt_cv_prog_compiler_pic_CXX\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$lt_prog_compiler_pic_CXX\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic_CXX works\" >&5\n$as_echo_n \"checking if $compiler PIC flag $lt_prog_compiler_pic_CXX works... \" >&6; }\nif ${lt_cv_prog_compiler_pic_works_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic_works_CXX=no\n   ac_outfile=conftest.$ac_objext\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$lt_prog_compiler_pic_CXX -DPIC\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_pic_works_CXX=yes\n     fi\n   fi\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic_works_CXX\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_pic_works_CXX\"; then\n    case $lt_prog_compiler_pic_CXX in\n     \"\" | \" \"*) ;;\n     *) lt_prog_compiler_pic_CXX=\" $lt_prog_compiler_pic_CXX\" ;;\n     esac\nelse\n    lt_prog_compiler_pic_CXX=\n     lt_prog_compiler_can_build_shared_CXX=no\nfi\n\nfi\n\n\n\n\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$lt_prog_compiler_wl_CXX eval lt_tmp_static_flag=\\\"$lt_prog_compiler_static_CXX\\\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works\" >&5\n$as_echo_n \"checking if $compiler static flag $lt_tmp_static_flag works... \" >&6; }\nif ${lt_cv_prog_compiler_static_works_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_static_works_CXX=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $lt_tmp_static_flag\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&5\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         lt_cv_prog_compiler_static_works_CXX=yes\n       fi\n     else\n       lt_cv_prog_compiler_static_works_CXX=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_static_works_CXX\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_static_works_CXX\"; then\n    :\nelse\n    lt_prog_compiler_static_CXX=\nfi\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o_CXX=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o_CXX=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o_CXX\" >&6; }\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o_CXX=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o_CXX=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o_CXX\" >&6; }\n\n\n\n\nhard_links=nottested\nif test no = \"$lt_cv_prog_compiler_c_o_CXX\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links\" >&5\n$as_echo_n \"checking if we can lock with hard links... \" >&6; }\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hard_links\" >&5\n$as_echo \"$hard_links\" >&6; }\n  if test no = \"$hard_links\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&5\n$as_echo \"$as_me: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&2;}\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries\" >&5\n$as_echo_n \"checking whether the $compiler linker ($LD) supports shared libraries... \" >&6; }\n\n  export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'\n  case $host_os in\n  aix[4-9]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      export_symbols_cmds_CXX='`func_echo_all $NM | $SED -e '\\''s/B\\([^B]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && (substr(\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    export_symbols_cmds_CXX=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      exclude_expsyms_CXX='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1 DATA/;s/^.*[ ]__nm__\\([^ ]*\\)[ ][^ ]*/\\1 DATA/;/^I[ ]/d;/^[AITW][ ]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      exclude_expsyms_CXX='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'\n      ;;\n    esac\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    link_all_deplibs_CXX=no\n    ;;\n  *)\n    export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_shlibs_CXX\" >&5\n$as_echo \"$ld_shlibs_CXX\" >&6; }\ntest no = \"$ld_shlibs_CXX\" && can_build_shared=no\n\nwith_gnu_ld_CXX=$with_gnu_ld\n\n\n\n\n\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$archive_cmds_need_lc_CXX\" in\nx|xyes)\n  # Assume -lc should be added\n  archive_cmds_need_lc_CXX=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $archive_cmds_CXX in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in\" >&5\n$as_echo_n \"checking whether -lc should be explicitly linked in... \" >&6; }\nif ${lt_cv_archive_cmds_need_lc_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  $RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$lt_prog_compiler_wl_CXX\n\t  pic_flag=$lt_prog_compiler_pic_CXX\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$allow_undefined_flag_CXX\n\t  allow_undefined_flag_CXX=\n\t  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$archive_cmds_CXX 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1\\\"\"; } >&5\n  (eval $archive_cmds_CXX 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n\t  then\n\t    lt_cv_archive_cmds_need_lc_CXX=no\n\t  else\n\t    lt_cv_archive_cmds_need_lc_CXX=yes\n\t  fi\n\t  allow_undefined_flag_CXX=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_archive_cmds_need_lc_CXX\" >&5\n$as_echo \"$lt_cv_archive_cmds_need_lc_CXX\" >&6; }\n      archive_cmds_need_lc_CXX=$lt_cv_archive_cmds_need_lc_CXX\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics\" >&5\n$as_echo_n \"checking dynamic linker characteristics... \" >&6; }\n\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\n\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[4-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[01] | aix4.[01].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a(lib.so.V)'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o), lib.a(lib.so.V)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a(lib.so.V), lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([^/]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[45]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([a-zA-Z]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | $GREP ';[c-zC-Z]:/' >/dev/null; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\n\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[23].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[01]* | freebsdelf3.[01]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \\\n  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[3-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  hardcode_libdir_flag_spec_CXX='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  if ${lt_cv_shlibpath_overrides_runpath+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$lt_prog_compiler_wl_CXX\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $hardcode_libdir_flag_spec_CXX\\\"\"\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_link \"$LINENO\"; then :\n  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null; then :\n  lt_cv_shlibpath_overrides_runpath=yes\nfi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n\nfi\n\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\$2)); skip = 1; } { if (!skip) print \\$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsdelf*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='NetBSD ld.elf_so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $dynamic_linker\" >&5\n$as_echo \"$dynamic_linker\" >&6; }\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs\" >&5\n$as_echo_n \"checking how to hardcode library paths into programs... \" >&6; }\nhardcode_action_CXX=\nif test -n \"$hardcode_libdir_flag_spec_CXX\" ||\n   test -n \"$runpath_var_CXX\" ||\n   test yes = \"$hardcode_automatic_CXX\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$hardcode_direct_CXX\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, CXX)\" &&\n     test no != \"$hardcode_minus_L_CXX\"; then\n    # Linking always hardcodes the temporary library directory.\n    hardcode_action_CXX=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    hardcode_action_CXX=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  hardcode_action_CXX=unsupported\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hardcode_action_CXX\" >&5\n$as_echo \"$hardcode_action_CXX\" >&6; }\n\nif test relink = \"$hardcode_action_CXX\" ||\n   test yes = \"$inherit_rpath_CXX\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n\n\n\n\n\n\n\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\nif test \"x$CC\" != xcc; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC and cc understand -c and -o together\" >&5\n$as_echo_n \"checking whether $CC and cc understand -c and -o together... \" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether cc understands -c and -o together\" >&5\n$as_echo_n \"checking whether cc understands -c and -o together... \" >&6; }\nfi\nset dummy $CC; ac_cc=`$as_echo \"$2\" |\n\t\t      sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`\nif eval \\${ac_cv_prog_cc_${ac_cc}_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n# Make sure it works both with $CC and with simple cc.\n# We do the test twice because some compilers refuse to overwrite an\n# existing .o file with -o, though they will create one.\nac_try='$CC -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\nrm -f conftest2.*\nif { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } &&\n   test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; };\nthen\n  eval ac_cv_prog_cc_${ac_cc}_c_o=yes\n  if test \"x$CC\" != xcc; then\n    # Test first that cc exists at all.\n    if { ac_try='cc -c conftest.$ac_ext >&5'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n      ac_try='cc -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\n      rm -f conftest2.*\n      if { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } &&\n\t test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; };\n      then\n\t# cc works too.\n\t:\n      else\n\t# cc exists but doesn't like -o.\n\teval ac_cv_prog_cc_${ac_cc}_c_o=no\n      fi\n    fi\n  fi\nelse\n  eval ac_cv_prog_cc_${ac_cc}_c_o=no\nfi\nrm -f core conftest*\n\nfi\nif eval test \\$ac_cv_prog_cc_${ac_cc}_c_o = yes; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n\n$as_echo \"#define NO_MINUS_C_MINUS_O 1\" >>confdefs.h\n\nfi\n\n\n###PKG_PROG_PKG_CONFIG Intentionally not using pkg-config\n\n### Checks for libraries\n\n\n\n\n\n### Checks for header files\n\n### MacOS does not have malloc.h\nfor ac_header in unistd.h sys/types.h regex.h malloc.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n### for uintptr_t\nfor ac_header in stdint.h inttypes.h stddef.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\nfor ac_header in windows.h\ndo :\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"windows.h\" \"ac_cv_header_windows_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_windows_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_WINDOWS_H 1\n_ACEOF\n\nfi\n\ndone\n\n\nfor ac_header in zlib.h\ndo :\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"zlib.h\" \"ac_cv_header_zlib_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_zlib_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_ZLIB_H 1\n_ACEOF\n\nfi\n\ndone\n\nif test \"x${ac_cv_header_zlib_h}\" = \"xyes\"; then :\n   have_pc_zlib=\"yes\" ; echo \"have zlib\" ;\n      DWARF_LIBS=\"${DWARF_LIBS} -lz\"\nelse\n   have_pc_zlib=\"no\" ; echo \"no zlib\"\nfi\n\n### for use in casts to uint to avoid 32bit warnings.\n### Also needed by C++ cstdint\n\n  ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_uintptr_t\" = xyes; then :\n\n$as_echo \"#define HAVE_UINTPTR_T 1\" >>confdefs.h\n\nelse\n  for ac_type in 'unsigned int' 'unsigned long int' \\\n\t'unsigned long long int'; do\n       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(sizeof (void *) <= sizeof ($ac_type))];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\ncat >>confdefs.h <<_ACEOF\n#define uintptr_t $ac_type\n_ACEOF\n\n\t  ac_type=\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n       test -z \"$ac_type\" && break\n     done\nfi\n\n\n\n  ac_fn_c_check_type \"$LINENO\" \"intptr_t\" \"ac_cv_type_intptr_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_intptr_t\" = xyes; then :\n\n$as_echo \"#define HAVE_INTPTR_T 1\" >>confdefs.h\n\nelse\n  for ac_type in 'int' 'long int' 'long long int'; do\n       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(sizeof (void *) <= sizeof ($ac_type))];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\ncat >>confdefs.h <<_ACEOF\n#define intptr_t $ac_type\n_ACEOF\n\n\t  ac_type=\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n       test -z \"$ac_type\" && break\n     done\nfi\n\n\n### Now we know uintptr_t is either in stdint.h or\n### is defined in config.h by configure.\n\n# test Elf headers in the preprocessor path search\nCPPFLAGS_save=${CPPFLAGS}\n### we set $dwarf_with_libelf above.\nif test  $dwarf_with_libelf = \"yes\" ; then\n  for ac_header in sgidefs.h\ndo :\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"sgidefs.h\" \"ac_cv_header_sgidefs_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sgidefs_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_SGIDEFS_H 1\n_ACEOF\n\nfi\n\ndone\n\n  for ac_header in libelf.h libelf/libelf.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n  for ac_header in elf.h elfaccess.h sys/elf_386.h sys/elf_amd64.h sys/elf_SPARC.h sys/ia64/elf.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n\n  ### if no libelf.h add no -lelf and turn off\n  ### libelf recognition.\n  if test \"x${ac_cv_header_libelf_h}\" != \"xyes\" -a \"x${ac_cv_header_libelf_libelf_h}\" != \"xyes\" ; then :\n   dwarf_with_libelf=\"no\"\n      echo \"no libelf headers, no libelf\"\nelse\n   DWARF_LIBS=\"${DWARF_LIBS} -lelf\"\n      dwarf_with_libelf=\"yes\"\n      echo \"Allowing use of libelf.\"\n\n$as_echo \"#define DWARF_WITH_LIBELF 1\" >>confdefs.h\n\n\nfi\n\n\n### begin checking for Elf structs\n# Elf64_Rela in elf.h\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rela p;\np.r_offset = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_RELA 1\" >>confdefs.h\n\n     have_elf64_rela=\"yes\"\n\nelse\n  have_elf64_rela=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\nif test \"x${have_elf64_rela}\" = \"xno\"; then :\n\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rela p;\np.r_offset = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_RELA 1\" >>confdefs.h\n\n          have_elf64_rela=\"yes\"\n\nelse\n  have_elf64_rela=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     CPPFLAGS=${CPPFLAGS_save}\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Elf64_Rela in elf.h\" >&5\n$as_echo_n \"checking for Elf64_Rela in elf.h... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_elf64_rela}\" >&5\n$as_echo \"${have_elf64_rela}\" >&6; }\n\n# Elf64_Rel in elf.h\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rel p;\np.r_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_R_INFO 1\" >>confdefs.h\n\n     have_elf64_rel=\"yes\"\n\nelse\n  have_elf64_rel=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\nif test \"x${have_elf64_rel}\" = \"xno\"; then :\n\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rel p;\np.r_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_R_INFO 1\" >>confdefs.h\n\n          have_elf64_rel=\"yes\"\n\nelse\n  have_elf64_rel=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     CPPFLAGS=${CPPFLAGS_save}\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Elf64_Rel in elf.h\" >&5\n$as_echo_n \"checking for Elf64_Rel in elf.h... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_elf64_rel}\" >&5\n$as_echo \"${have_elf64_rel}\" >&6; }\n\n# Elf64_Sym in elf.h\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Sym p;\np.st_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_SYM 1\" >>confdefs.h\n\n     have_elf64_sym=\"yes\"\n\nelse\n  have_elf64_sym=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\nif test \"x${have_elf64_sym}\" = \"xno\"; then :\n\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Sym p;\np.st_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_SYM 1\" >>confdefs.h\n\n          have_elf64_sym=\"yes\"\n\nelse\n  have_elf64_sym=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     CPPFLAGS=${CPPFLAGS_save}\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Elf64_Sym in elf.h\" >&5\n$as_echo_n \"checking for Elf64_Sym in elf.h... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_elf64_sym}\" >&5\n$as_echo \"${have_elf64_sym}\" >&6; }\n### end checking for Elf structs\n\n### Checks for Elf structures\n# test if struct _Elf is used instead of struct Elf\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n/* This must be at global scope */\nstruct _Elf;\ntypedef struct _Elf Elf;\n\nint\nmain ()\n{\n\nstruct _Elf *a = 0;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n     have_struct__elf=\"yes\"\n     struct_elf=\"struct _Elf\"\n\nelse\n\n     have_struct__elf=\"no\"\n     struct_elf=\"struct Elf\"\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether struct _Elf is used\" >&5\n$as_echo_n \"checking whether struct _Elf is used... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_struct__elf}\" >&5\n$as_echo \"${have_struct__elf}\" >&6; }\nelse\n  ### end where dwarf_with_libelf == \"no\" via\n  ### --disable-libelf\n  have_struct__elf=\"no\"\n  struct_elf=\"struct Elf\"\n  have_elf64_rela=\"no\"\n  have_elf64_rel=\"no\"\n  have_elf64_sym=\"no\"\nfi\n\n\n### Checks for compiler characteristics\n\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether byte ordering is bigendian\" >&5\n$as_echo_n \"checking whether byte ordering is bigendian... \" >&6; }\nif ${ac_cv_c_bigendian+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_c_bigendian=unknown\n    # See if we're dealing with a universal compiler.\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifndef __APPLE_CC__\n\t       not a universal capable compiler\n\t     #endif\n\t     typedef int dummy;\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n\t# Check for potential -arch flags.  It is not universal unless\n\t# there are at least two -arch flags with different values.\n\tac_arch=\n\tac_prev=\n\tfor ac_word in $CC $CFLAGS $CPPFLAGS $LDFLAGS; do\n\t if test -n \"$ac_prev\"; then\n\t   case $ac_word in\n\t     i?86 | x86_64 | ppc | ppc64)\n\t       if test -z \"$ac_arch\" || test \"$ac_arch\" = \"$ac_word\"; then\n\t\t ac_arch=$ac_word\n\t       else\n\t\t ac_cv_c_bigendian=universal\n\t\t break\n\t       fi\n\t       ;;\n\t   esac\n\t   ac_prev=\n\t elif test \"x$ac_word\" = \"x-arch\"; then\n\t   ac_prev=arch\n\t fi\n       done\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n    if test $ac_cv_c_bigendian = unknown; then\n      # See if sys/param.h defines the BYTE_ORDER macro.\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <sys/types.h>\n\t     #include <sys/param.h>\n\nint\nmain ()\n{\n#if ! (defined BYTE_ORDER && defined BIG_ENDIAN \\\n\t\t     && defined LITTLE_ENDIAN && BYTE_ORDER && BIG_ENDIAN \\\n\t\t     && LITTLE_ENDIAN)\n\t      bogus endian macros\n\t     #endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  # It does; now see whether it defined to BIG_ENDIAN or not.\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <sys/types.h>\n\t\t#include <sys/param.h>\n\nint\nmain ()\n{\n#if BYTE_ORDER != BIG_ENDIAN\n\t\t not big endian\n\t\t#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_c_bigendian=yes\nelse\n  ac_cv_c_bigendian=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n    fi\n    if test $ac_cv_c_bigendian = unknown; then\n      # See if <limits.h> defines _LITTLE_ENDIAN or _BIG_ENDIAN (e.g., Solaris).\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\nint\nmain ()\n{\n#if ! (defined _LITTLE_ENDIAN || defined _BIG_ENDIAN)\n\t      bogus endian macros\n\t     #endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  # It does; now see whether it defined to _BIG_ENDIAN or not.\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\nint\nmain ()\n{\n#ifndef _BIG_ENDIAN\n\t\t not big endian\n\t\t#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_c_bigendian=yes\nelse\n  ac_cv_c_bigendian=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n    fi\n    if test $ac_cv_c_bigendian = unknown; then\n      # Compile a test program.\n      if test \"$cross_compiling\" = yes; then :\n  # Try to guess by grepping values from an object file.\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nshort int ascii_mm[] =\n\t\t  { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n\t\tshort int ascii_ii[] =\n\t\t  { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\n\t\tint use_ascii (int i) {\n\t\t  return ascii_mm[i] + ascii_ii[i];\n\t\t}\n\t\tshort int ebcdic_ii[] =\n\t\t  { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n\t\tshort int ebcdic_mm[] =\n\t\t  { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\n\t\tint use_ebcdic (int i) {\n\t\t  return ebcdic_mm[i] + ebcdic_ii[i];\n\t\t}\n\t\textern int foo;\n\nint\nmain ()\n{\nreturn use_ascii (foo) == use_ebcdic (foo);\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  if grep BIGenDianSyS conftest.$ac_objext >/dev/null; then\n\t      ac_cv_c_bigendian=yes\n\t    fi\n\t    if grep LiTTleEnDian conftest.$ac_objext >/dev/null ; then\n\t      if test \"$ac_cv_c_bigendian\" = unknown; then\n\t\tac_cv_c_bigendian=no\n\t      else\n\t\t# finding both strings is unlikely to happen, but who knows?\n\t\tac_cv_c_bigendian=unknown\n\t      fi\n\t    fi\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nmain ()\n{\n\n\t     /* Are we little or big endian?  From Harbison&Steele.  */\n\t     union\n\t     {\n\t       long int l;\n\t       char c[sizeof (long int)];\n\t     } u;\n\t     u.l = 1;\n\t     return u.c[sizeof (long int) - 1] == 1;\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n  ac_cv_c_bigendian=no\nelse\n  ac_cv_c_bigendian=yes\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\n    fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_bigendian\" >&5\n$as_echo \"$ac_cv_c_bigendian\" >&6; }\n case $ac_cv_c_bigendian in #(\n   yes)\n\n$as_echo \"#define WORDS_BIGENDIAN 1\" >>confdefs.h\n;; #(\n   no)\n      ;; #(\n   universal)\n\n$as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n\n     ;; #(\n   *)\n     as_fn_error $? \"unknown endianness\n presetting ac_cv_c_bigendian=no (or yes) will help\" \"$LINENO\" 5 ;;\n esac\n\n\n# gcc accepts even totally bogus -Wno flags. Other compilers..no\n# -Wno-long-long suppresses warnings on 'long long'\n# -Wno-pedantic-ms-format (which only exists in mingw)\n# suppresses warnings about I64 printf format.\nif  test \"x$enable_wall\" = \"xyes\" ; then :\n\n       cxx_compiler_flags=\"-Wall -Wextra -Wno-unused-private-field -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Werror\"\n\n       c_compiler_flags=\"-Wall -Wextra -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Wmissing-prototypes -Wdeclaration-after-statement -Wbad-function-cast -Wmissing-parameter-type -Wnested-externs -Werror\"\n\n\nfi\nif  test \"x$enable_nonstandardprintf\" = \"xyes\" ; then :\n\n       cxx_compiler_flags=\"$cxx_compiler_flags -Wno-pedantic-ms-format\"\n\n       c_compiler_flags=\"$c_compiler_flags -Wno-pedantic-ms-format\"\n\n\nfi\n\n\noption=\"${cxx_compiler_flags}\"\nCXXFLAGS_save=\"${CXXFLAGS}\"\nCXXFLAGS=\"${CXXFLAGS} ${option}\"\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C++ compiler supports ${cxx_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C++ compiler supports ${cxx_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCXXFLAGS=\"${CXXFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CXXFLAGS_WARN=\"${DWARF_CXXFLAGS_WARN} ${cxx_compiler_flags}\"\nfi\n\n\nif test \"${have_flag}\" != \"yes\"; then :\n\noption=\"${cxx_compiler_flags}\"\nCXXFLAGS_save=\"${CXXFLAGS}\"\nCXXFLAGS=\"${CXXFLAGS} ${option}\"\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C++ compiler supports ${cxx_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C++ compiler supports ${cxx_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCXXFLAGS=\"${CXXFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CXXFLAGS_WARN=\"${DWARF_CXXFLAGS_WARN} ${cxx_compiler_flags}\"\nfi\n\n\nfi\n\n\noption=\"${c_compiler_flags}\"\nCFLAGS_save=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} ${option}\"\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler supports ${c_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C compiler supports ${c_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCFLAGS=\"${CFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CFLAGS_WARN=\"${DWARF_CFLAGS_WARN} ${c_compiler_flags}\"\nfi\n\n\nif test \"${have_flag}\" != \"yes\"; then :\n\noption=\"${c_compiler_flags}\"\nCFLAGS_save=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} ${option}\"\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler supports ${c_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C compiler supports ${c_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCFLAGS=\"${CFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CFLAGS_WARN=\"${DWARF_CFLAGS_WARN} ${c_compiler_flags}\"\nfi\n\n\nfi\n\n\n# unused attribute\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nstatic unsigned int foo(unsigned int x, __attribute__ ((unused)) int y){\n    unsigned int x2 = x + 1;\n    return x2;\n}\nint goo() {\n    unsigned int y = 0;\n    y = foo(12, y);\n}\n\nint\nmain ()\n{\n\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n     have_unused=\"yes\"\n\n$as_echo \"#define HAVE_UNUSED_ATTRIBUTE 1\" >>confdefs.h\n\n\nelse\n  have_unused=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether \\\"unused\\\" attribute is available\" >&5\n$as_echo_n \"checking whether \\\"unused\\\" attribute is available... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_unused}\" >&5\n$as_echo \"${have_unused}\" >&6; }\n\n# sanitize\nif test \"x${enable_sanitize}\" = \"xyes\"; then :\n\n     CFLAGS_save=${CFLAGS}\n     CFLAGS=\"${CFLAGS} -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n     DWARF_CFLAGS=\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n          enable_sanitize=\"yes\"\n          DWARF_CFLAGS=\"$DWARF_CFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n          LDFLAGS=\"$LDFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n\nelse\n  enable_sanitize=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     CFLAGS=\"${CFLAGS_save} ${DWARF_CFLAGS}\"\n     DWARF_CFLAGS=\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether sanitize options are used\" >&5\n$as_echo_n \"checking whether sanitize options are used... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sanitize}\" >&5\n$as_echo \"${enable_sanitize}\" >&6; }\n\n\n### Checks for linker characteristics\n\n\n### Checks for library functions\n\nac_fn_c_check_type \"$LINENO\" \"size_t\" \"ac_cv_type_size_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_size_t\" = xyes; then :\n\nelse\n\ncat >>confdefs.h <<_ACEOF\n#define size_t unsigned int\n_ACEOF\n\nfi\n\n# The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n# for constant arguments.  Useless!\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for working alloca.h\" >&5\n$as_echo_n \"checking for working alloca.h... \" >&6; }\nif ${ac_cv_working_alloca_h+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <alloca.h>\nint\nmain ()\n{\nchar *p = (char *) alloca (2 * sizeof (int));\n\t\t\t  if (p) return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_working_alloca_h=yes\nelse\n  ac_cv_working_alloca_h=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_working_alloca_h\" >&5\n$as_echo \"$ac_cv_working_alloca_h\" >&6; }\nif test $ac_cv_working_alloca_h = yes; then\n\n$as_echo \"#define HAVE_ALLOCA_H 1\" >>confdefs.h\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for alloca\" >&5\n$as_echo_n \"checking for alloca... \" >&6; }\nif ${ac_cv_func_alloca_works+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __GNUC__\n# define alloca __builtin_alloca\n#else\n# ifdef _MSC_VER\n#  include <malloc.h>\n#  define alloca _alloca\n# else\n#  ifdef HAVE_ALLOCA_H\n#   include <alloca.h>\n#  else\n#   ifdef _AIX\n #pragma alloca\n#   else\n#    ifndef alloca /* predefined by HP cc +Olibcalls */\nvoid *alloca (size_t);\n#    endif\n#   endif\n#  endif\n# endif\n#endif\n\nint\nmain ()\n{\nchar *p = (char *) alloca (1);\n\t\t\t\t    if (p) return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_func_alloca_works=yes\nelse\n  ac_cv_func_alloca_works=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_alloca_works\" >&5\n$as_echo \"$ac_cv_func_alloca_works\" >&6; }\n\nif test $ac_cv_func_alloca_works = yes; then\n\n$as_echo \"#define HAVE_ALLOCA 1\" >>confdefs.h\n\nelse\n  # The SVR3 libPW and SVR4 libucb both contain incompatible functions\n# that cause trouble.  Some versions do not even contain alloca or\n# contain a buggy version.  If you still want to use their alloca,\n# use ar to extract alloca.o from them instead of compiling alloca.c.\n\nALLOCA=\\${LIBOBJDIR}alloca.$ac_objext\n\n$as_echo \"#define C_ALLOCA 1\" >>confdefs.h\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether \\`alloca.c' needs Cray hooks\" >&5\n$as_echo_n \"checking whether \\`alloca.c' needs Cray hooks... \" >&6; }\nif ${ac_cv_os_cray+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#if defined CRAY && ! defined CRAY2\nwebecray\n#else\nwenotbecray\n#endif\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"webecray\" >/dev/null 2>&1; then :\n  ac_cv_os_cray=yes\nelse\n  ac_cv_os_cray=no\nfi\nrm -f conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_os_cray\" >&5\n$as_echo \"$ac_cv_os_cray\" >&6; }\nif test $ac_cv_os_cray = yes; then\n  for ac_func in _getb67 GETB67 getb67; do\n    as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\nac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\nif eval test \\\"x\\$\"$as_ac_var\"\\\" = x\"yes\"; then :\n\ncat >>confdefs.h <<_ACEOF\n#define CRAY_STACKSEG_END $ac_func\n_ACEOF\n\n    break\nfi\n\n  done\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking stack direction for C alloca\" >&5\n$as_echo_n \"checking stack direction for C alloca... \" >&6; }\nif ${ac_cv_c_stack_direction+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test \"$cross_compiling\" = yes; then :\n  ac_cv_c_stack_direction=0\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nfind_stack_direction (int *addr, int depth)\n{\n  int dir, dummy = 0;\n  if (! addr)\n    addr = &dummy;\n  *addr = addr < &dummy ? 1 : addr == &dummy ? 0 : -1;\n  dir = depth ? find_stack_direction (addr, depth - 1) : 0;\n  return dir + dummy;\n}\n\nint\nmain (int argc, char **argv)\n{\n  return find_stack_direction (0, argc + !argv + 20) < 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n  ac_cv_c_stack_direction=1\nelse\n  ac_cv_c_stack_direction=-1\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_stack_direction\" >&5\n$as_echo \"$ac_cv_c_stack_direction\" >&6; }\ncat >>confdefs.h <<_ACEOF\n#define STACK_DIRECTION $ac_cv_c_stack_direction\n_ACEOF\n\n\nfi\n\n\nif test  $dwarf_with_libelf = \"yes\" ; then\n# elf64_getehdr\nCPPFLAGS_save=${CPPFLAGS}\nCPPFLAGS=\"${CPPFLAGS}\"\nLIBS_save=${LIBS}\nLIBS=\"${LIBS} ${DWARF_LIBS}\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing elf64_getehdr\" >&5\n$as_echo_n \"checking for library containing elf64_getehdr... \" >&6; }\nif ${ac_cv_search_elf64_getehdr+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_func_search_save_LIBS=$LIBS\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar elf64_getehdr ();\nint\nmain ()\n{\nreturn elf64_getehdr ();\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_lib in '' elf; do\n  if test -z \"$ac_lib\"; then\n    ac_res=\"none required\"\n  else\n    ac_res=-l$ac_lib\n    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n  fi\n  if ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_search_elf64_getehdr=$ac_res\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext\n  if ${ac_cv_search_elf64_getehdr+:} false; then :\n  break\nfi\ndone\nif ${ac_cv_search_elf64_getehdr+:} false; then :\n\nelse\n  ac_cv_search_elf64_getehdr=no\nfi\nrm conftest.$ac_ext\nLIBS=$ac_func_search_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_elf64_getehdr\" >&5\n$as_echo \"$ac_cv_search_elf64_getehdr\" >&6; }\nac_res=$ac_cv_search_elf64_getehdr\nif test \"$ac_res\" != no; then :\n  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n\n     have_getehdr=\"yes\"\n\n$as_echo \"#define HAVE_ELF64_GETEHDR 1\" >>confdefs.h\n\n\nelse\n  have_getehdr=\"no\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing elf64_getshdr\" >&5\n$as_echo_n \"checking for library containing elf64_getshdr... \" >&6; }\nif ${ac_cv_search_elf64_getshdr+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_func_search_save_LIBS=$LIBS\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar elf64_getshdr ();\nint\nmain ()\n{\nreturn elf64_getshdr ();\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_lib in '' elf; do\n  if test -z \"$ac_lib\"; then\n    ac_res=\"none required\"\n  else\n    ac_res=-l$ac_lib\n    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n  fi\n  if ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_search_elf64_getshdr=$ac_res\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext\n  if ${ac_cv_search_elf64_getshdr+:} false; then :\n  break\nfi\ndone\nif ${ac_cv_search_elf64_getshdr+:} false; then :\n\nelse\n  ac_cv_search_elf64_getshdr=no\nfi\nrm conftest.$ac_ext\nLIBS=$ac_func_search_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_elf64_getshdr\" >&5\n$as_echo \"$ac_cv_search_elf64_getshdr\" >&6; }\nac_res=$ac_cv_search_elf64_getshdr\nif test \"$ac_res\" != no; then :\n  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n\n     have_getshdr=\"yes\"\n\n$as_echo \"#define HAVE_ELF64_GETSHDR 1\" >>confdefs.h\n\n\nelse\n  have_getshdr=\"no\"\nfi\n\nCPPFLAGS=${CPPFLAGS_save}\nLIBS=${LIBS_save}\nelse\n  have_getehdr=\"no\"\n  have_getshdr=\"no\"\nfi\n\nif test \"x${have_pc_zlib}\" = \"xno\"  -a \"x${have_zlib}\" = \"xyes\"; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing z\" >&5\n$as_echo_n \"checking for library containing z... \" >&6; }\nif ${ac_cv_search_z+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_func_search_save_LIBS=$LIBS\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar z ();\nint\nmain ()\n{\nreturn z ();\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_lib in '' have_zlib=\"yes\"; do\n  if test -z \"$ac_lib\"; then\n    ac_res=\"none required\"\n  else\n    ac_res=-l$ac_lib\n    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n  fi\n  if ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_search_z=$ac_res\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext\n  if ${ac_cv_search_z+:} false; then :\n  break\nfi\ndone\nif ${ac_cv_search_z+:} false; then :\n\nelse\n  ac_cv_search_z=no\nfi\nrm conftest.$ac_ext\nLIBS=$ac_func_search_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_z\" >&5\n$as_echo \"$ac_cv_search_z\" >&6; }\nac_res=$ac_cv_search_z\nif test \"$ac_res\" != no; then :\n  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n  have_zlib=\"no\"\nfi\n\nfi\n\nif test \"x${have_pc_zlib}\" = \"xyes\"  -o \"x${have_zlib}\" = \"xyes\"; then :\n\n     have_zlib=\"yes\"\n\n$as_echo \"#define HAVE_ZLIB 1\" >>confdefs.h\n\n\nelse\n\n     have_zlib=\"no\"\n\nfi\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_REGEX_H\n# include <regex.h>\n#endif\n\nint\nmain ()\n{\n\nint i;\nregex_t r;\nint cflags = REG_EXTENDED;\nconst char *s = \"abc\";\ni = regcomp(&r,s,cflags);\nregfree(&r);\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_REGEX 1\" >>confdefs.h\n\n     have_regex=\"yes\"\n\nelse\n  have_regex=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for regex library\" >&5\n$as_echo_n \"checking for regex library... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_regex}\" >&5\n$as_echo \"${have_regex}\" >&6; }\n\n### Checks for system services\n\nac_config_files=\"$ac_config_files Makefile libdwarf/Makefile dwarfdump/Makefile dwarfgen/Makefile dwarfexample/Makefile\"\n\n\n### libdwarf needs to be adjusted to support struct Elf\n### or struct _Elf, whichever the system defines in libelf.\nac_config_commands=\"$ac_config_commands libdwarf/libdwarf.h\"\n\n\n\ncat >confcache <<\\_ACEOF\n# This file is a shell script that caches the results of configure\n# tests run on this system so they can be shared between configure\n# scripts and configure runs, see configure's option --config-cache.\n# It is not useful on other systems.  If it contains results you don't\n# want to keep, you may remove or edit it.\n#\n# config.status only pays attention to the cache file if you give it\n# the --recheck option to rerun configure.\n#\n# `ac_cv_env_foo' variables (set or unset) will be overridden when\n# loading this file, other *unset* `ac_cv_foo' will be assigned the\n# following values.\n\n_ACEOF\n\n# The following way of writing the cache mishandles newlines in values,\n# but we know of no workaround that is simple, portable, and efficient.\n# So, we kill variables containing newlines.\n# Ultrix sh set writes to stderr and can't be redirected directly,\n# and sets the high bit in the cache file unless we assign to the vars.\n(\n  for ac_var in `(set) 2>&1 | sed -n 's/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n\n  (set) 2>&1 |\n    case $as_nl`(ac_space=' '; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      # `set' does not quote correctly, so add quotes: double-quote\n      # substitution turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\.\n      sed -n \\\n\t\"s/'/'\\\\\\\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\\\2'/p\"\n      ;; #(\n    *)\n      # `set' quotes correctly as required by POSIX, so do not add quotes.\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n) |\n  sed '\n     /^ac_cv_env_/b end\n     t clear\n     :clear\n     s/^\\([^=]*\\)=\\(.*[{}].*\\)$/test \"${\\1+set}\" = set || &/\n     t end\n     s/^\\([^=]*\\)=\\(.*\\)$/\\1=${\\1=\\2}/\n     :end' >>confcache\nif diff \"$cache_file\" confcache >/dev/null 2>&1; then :; else\n  if test -w \"$cache_file\"; then\n    if test \"x$cache_file\" != \"x/dev/null\"; then\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: updating cache $cache_file\" >&5\n$as_echo \"$as_me: updating cache $cache_file\" >&6;}\n      if test ! -f \"$cache_file\" || test -h \"$cache_file\"; then\n\tcat confcache >\"$cache_file\"\n      else\n        case $cache_file in #(\n        */* | ?:*)\n\t  mv -f confcache \"$cache_file\"$$ &&\n\t  mv -f \"$cache_file\"$$ \"$cache_file\" ;; #(\n        *)\n\t  mv -f confcache \"$cache_file\" ;;\n\tesac\n      fi\n    fi\n  else\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file\" >&5\n$as_echo \"$as_me: not updating unwritable cache $cache_file\" >&6;}\n  fi\nfi\nrm -f confcache\n\ntest \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n# Let make expand exec_prefix.\ntest \"x$exec_prefix\" = xNONE && exec_prefix='${prefix}'\n\nDEFS=-DHAVE_CONFIG_H\n\nac_libobjs=\nac_ltlibobjs=\nU=\nfor ac_i in : $LIBOBJS; do test \"x$ac_i\" = x: && continue\n  # 1. Remove the extension, and $U if already installed.\n  ac_script='s/\\$U\\././;s/\\.o$//;s/\\.obj$//'\n  ac_i=`$as_echo \"$ac_i\" | sed \"$ac_script\"`\n  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR\n  #    will be set to the directory where LIBOBJS objects are built.\n  as_fn_append ac_libobjs \" \\${LIBOBJDIR}$ac_i\\$U.$ac_objext\"\n  as_fn_append ac_ltlibobjs \" \\${LIBOBJDIR}$ac_i\"'$U.lo'\ndone\nLIBOBJS=$ac_libobjs\n\nLTLIBOBJS=$ac_ltlibobjs\n\n\nif test -z \"${HAVE_DWARFGEN_TRUE}\" && test -z \"${HAVE_DWARFGEN_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"HAVE_DWARFGEN\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${HAVE_DWARFEXAMPLE_TRUE}\" && test -z \"${HAVE_DWARFEXAMPLE_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"HAVE_DWARFEXAMPLE\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${HAVE_WIN32_TRUE}\" && test -z \"${HAVE_WIN32_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"HAVE_WIN32\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking that generated files are newer than configure\" >&5\n$as_echo_n \"checking that generated files are newer than configure... \" >&6; }\n   if test -n \"$am_sleep_pid\"; then\n     # Hide warnings about reused PIDs.\n     wait $am_sleep_pid 2>/dev/null\n   fi\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: done\" >&5\n$as_echo \"done\" >&6; }\nif test -z \"${AMDEP_TRUE}\" && test -z \"${AMDEP_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"AMDEP\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${am__fastdepCC_TRUE}\" && test -z \"${am__fastdepCC_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"am__fastdepCC\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\n if test -n \"$EXEEXT\"; then\n  am__EXEEXT_TRUE=\n  am__EXEEXT_FALSE='#'\nelse\n  am__EXEEXT_TRUE='#'\n  am__EXEEXT_FALSE=\nfi\n\nif test -z \"${am__fastdepCXX_TRUE}\" && test -z \"${am__fastdepCXX_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"am__fastdepCXX\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\n\n\n: \"${CONFIG_STATUS=./config.status}\"\nac_write_fail=0\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files $CONFIG_STATUS\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS\" >&5\n$as_echo \"$as_me: creating $CONFIG_STATUS\" >&6;}\nas_write_fail=0\ncat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n# Run this file to recreate the current configuration.\n# Compiler output produced by configure, useful for debugging\n# configure, is in config.log if it exists.\n\ndebug=false\nac_cs_recheck=false\nac_cs_silent=false\n\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$CONFIG_STATUS <<\\_ASEOF || as_write_fail=1\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\n\nexec 6>&1\n## ----------------------------------- ##\n## Main body of $CONFIG_STATUS script. ##\n## ----------------------------------- ##\n_ASEOF\ntest $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# Save the log message, to keep $0 and so on meaningful, and to\n# report actual input values of CONFIG_FILES etc. instead of their\n# values after options handling.\nac_log=\"\nThis file was extended by libdwarf $as_me 20201011, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  CONFIG_FILES    = $CONFIG_FILES\n  CONFIG_HEADERS  = $CONFIG_HEADERS\n  CONFIG_LINKS    = $CONFIG_LINKS\n  CONFIG_COMMANDS = $CONFIG_COMMANDS\n  $ $0 $@\n\non `(hostname || uname -n) 2>/dev/null | sed 1q`\n\"\n\n_ACEOF\n\ncase $ac_config_files in *\"\n\"*) set x $ac_config_files; shift; ac_config_files=$*;;\nesac\n\ncase $ac_config_headers in *\"\n\"*) set x $ac_config_headers; shift; ac_config_headers=$*;;\nesac\n\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n# Files that config.status was made for.\nconfig_files=\"$ac_config_files\"\nconfig_headers=\"$ac_config_headers\"\nconfig_commands=\"$ac_config_commands\"\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nac_cs_usage=\"\\\n\\`$as_me' instantiates files and other configuration actions\nfrom templates according to the current configuration.  Unless the files\nand actions are specified as TAGs, all are instantiated by default.\n\nUsage: $0 [OPTION]... [TAG]...\n\n  -h, --help       print this help, then exit\n  -V, --version    print version number and configuration settings, then exit\n      --config     print configuration, then exit\n  -q, --quiet, --silent\n                   do not print progress messages\n  -d, --debug      don't remove temporary files\n      --recheck    update $as_me by reconfiguring in the same conditions\n      --file=FILE[:TEMPLATE]\n                   instantiate the configuration file FILE\n      --header=FILE[:TEMPLATE]\n                   instantiate the configuration header FILE\n\nConfiguration files:\n$config_files\n\nConfiguration headers:\n$config_headers\n\nConfiguration commands:\n$config_commands\n\nReport bugs to <libdwarf-list -at- linuxmail -dot- org>.\"\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_cs_config=\"`$as_echo \"$ac_configure_args\" | sed 's/^ //; s/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\"\nac_cs_version=\"\\\\\nlibdwarf config.status 20201011\nconfigured by $0, generated by GNU Autoconf 2.69,\n  with options \\\\\"\\$ac_cs_config\\\\\"\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis config.status script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\"\n\nac_pwd='$ac_pwd'\nsrcdir='$srcdir'\nINSTALL='$INSTALL'\nMKDIR_P='$MKDIR_P'\nAWK='$AWK'\ntest -n \"\\$AWK\" || AWK=awk\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# The default lists apply if the user does not specify any file.\nac_need_defaults=:\nwhile test $# != 0\ndo\n  case $1 in\n  --*=?*)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=`expr \"X$1\" : 'X[^=]*=\\(.*\\)'`\n    ac_shift=:\n    ;;\n  --*=)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=\n    ac_shift=:\n    ;;\n  *)\n    ac_option=$1\n    ac_optarg=$2\n    ac_shift=shift\n    ;;\n  esac\n\n  case $ac_option in\n  # Handling of the options.\n  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)\n    ac_cs_recheck=: ;;\n  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )\n    $as_echo \"$ac_cs_version\"; exit ;;\n  --config | --confi | --conf | --con | --co | --c )\n    $as_echo \"$ac_cs_config\"; exit ;;\n  --debug | --debu | --deb | --de | --d | -d )\n    debug=: ;;\n  --file | --fil | --fi | --f )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    '') as_fn_error $? \"missing file argument\" ;;\n    esac\n    as_fn_append CONFIG_FILES \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --header | --heade | --head | --hea )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    as_fn_append CONFIG_HEADERS \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --he | --h)\n    # Conflict between --help and --header\n    as_fn_error $? \"ambiguous option: \\`$1'\nTry \\`$0 --help' for more information.\";;\n  --help | --hel | -h )\n    $as_echo \"$ac_cs_usage\"; exit ;;\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil | --si | --s)\n    ac_cs_silent=: ;;\n\n  # This is an error.\n  -*) as_fn_error $? \"unrecognized option: \\`$1'\nTry \\`$0 --help' for more information.\" ;;\n\n  *) as_fn_append ac_config_targets \" $1\"\n     ac_need_defaults=false ;;\n\n  esac\n  shift\ndone\n\nac_configure_extra_args=\n\nif $ac_cs_silent; then\n  exec 6>/dev/null\n  ac_configure_extra_args=\"$ac_configure_extra_args --silent\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nif \\$ac_cs_recheck; then\n  set X $SHELL '$0' $ac_configure_args \\$ac_configure_extra_args --no-create --no-recursion\n  shift\n  \\$as_echo \"running CONFIG_SHELL=$SHELL \\$*\" >&6\n  CONFIG_SHELL='$SHELL'\n  export CONFIG_SHELL\n  exec \"\\$@\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nexec 5>>config.log\n{\n  echo\n  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX\n## Running $as_me. ##\n_ASBOX\n  $as_echo \"$ac_log\"\n} >&5\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n#\n# INIT-COMMANDS\n#\nAMDEP_TRUE=\"$AMDEP_TRUE\" MAKE=\"${MAKE-make}\"\n\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\nmacro_version='`$ECHO \"$macro_version\" | $SED \"$delay_single_quote_subst\"`'\nmacro_revision='`$ECHO \"$macro_revision\" | $SED \"$delay_single_quote_subst\"`'\nAS='`$ECHO \"$AS\" | $SED \"$delay_single_quote_subst\"`'\nDLLTOOL='`$ECHO \"$DLLTOOL\" | $SED \"$delay_single_quote_subst\"`'\nOBJDUMP='`$ECHO \"$OBJDUMP\" | $SED \"$delay_single_quote_subst\"`'\nenable_shared='`$ECHO \"$enable_shared\" | $SED \"$delay_single_quote_subst\"`'\nenable_static='`$ECHO \"$enable_static\" | $SED \"$delay_single_quote_subst\"`'\npic_mode='`$ECHO \"$pic_mode\" | $SED \"$delay_single_quote_subst\"`'\nenable_fast_install='`$ECHO \"$enable_fast_install\" | $SED \"$delay_single_quote_subst\"`'\nshared_archive_member_spec='`$ECHO \"$shared_archive_member_spec\" | $SED \"$delay_single_quote_subst\"`'\nSHELL='`$ECHO \"$SHELL\" | $SED \"$delay_single_quote_subst\"`'\nECHO='`$ECHO \"$ECHO\" | $SED \"$delay_single_quote_subst\"`'\nPATH_SEPARATOR='`$ECHO \"$PATH_SEPARATOR\" | $SED \"$delay_single_quote_subst\"`'\nhost_alias='`$ECHO \"$host_alias\" | $SED \"$delay_single_quote_subst\"`'\nhost='`$ECHO \"$host\" | $SED \"$delay_single_quote_subst\"`'\nhost_os='`$ECHO \"$host_os\" | $SED \"$delay_single_quote_subst\"`'\nbuild_alias='`$ECHO \"$build_alias\" | $SED \"$delay_single_quote_subst\"`'\nbuild='`$ECHO \"$build\" | $SED \"$delay_single_quote_subst\"`'\nbuild_os='`$ECHO \"$build_os\" | $SED \"$delay_single_quote_subst\"`'\nSED='`$ECHO \"$SED\" | $SED \"$delay_single_quote_subst\"`'\nXsed='`$ECHO \"$Xsed\" | $SED \"$delay_single_quote_subst\"`'\nGREP='`$ECHO \"$GREP\" | $SED \"$delay_single_quote_subst\"`'\nEGREP='`$ECHO \"$EGREP\" | $SED \"$delay_single_quote_subst\"`'\nFGREP='`$ECHO \"$FGREP\" | $SED \"$delay_single_quote_subst\"`'\nLD='`$ECHO \"$LD\" | $SED \"$delay_single_quote_subst\"`'\nNM='`$ECHO \"$NM\" | $SED \"$delay_single_quote_subst\"`'\nLN_S='`$ECHO \"$LN_S\" | $SED \"$delay_single_quote_subst\"`'\nmax_cmd_len='`$ECHO \"$max_cmd_len\" | $SED \"$delay_single_quote_subst\"`'\nac_objext='`$ECHO \"$ac_objext\" | $SED \"$delay_single_quote_subst\"`'\nexeext='`$ECHO \"$exeext\" | $SED \"$delay_single_quote_subst\"`'\nlt_unset='`$ECHO \"$lt_unset\" | $SED \"$delay_single_quote_subst\"`'\nlt_SP2NL='`$ECHO \"$lt_SP2NL\" | $SED \"$delay_single_quote_subst\"`'\nlt_NL2SP='`$ECHO \"$lt_NL2SP\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_to_host_file_cmd='`$ECHO \"$lt_cv_to_host_file_cmd\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_to_tool_file_cmd='`$ECHO \"$lt_cv_to_tool_file_cmd\" | $SED \"$delay_single_quote_subst\"`'\nreload_flag='`$ECHO \"$reload_flag\" | $SED \"$delay_single_quote_subst\"`'\nreload_cmds='`$ECHO \"$reload_cmds\" | $SED \"$delay_single_quote_subst\"`'\ndeplibs_check_method='`$ECHO \"$deplibs_check_method\" | $SED \"$delay_single_quote_subst\"`'\nfile_magic_cmd='`$ECHO \"$file_magic_cmd\" | $SED \"$delay_single_quote_subst\"`'\nfile_magic_glob='`$ECHO \"$file_magic_glob\" | $SED \"$delay_single_quote_subst\"`'\nwant_nocaseglob='`$ECHO \"$want_nocaseglob\" | $SED \"$delay_single_quote_subst\"`'\nsharedlib_from_linklib_cmd='`$ECHO \"$sharedlib_from_linklib_cmd\" | $SED \"$delay_single_quote_subst\"`'\nAR='`$ECHO \"$AR\" | $SED \"$delay_single_quote_subst\"`'\nAR_FLAGS='`$ECHO \"$AR_FLAGS\" | $SED \"$delay_single_quote_subst\"`'\narchiver_list_spec='`$ECHO \"$archiver_list_spec\" | $SED \"$delay_single_quote_subst\"`'\nSTRIP='`$ECHO \"$STRIP\" | $SED \"$delay_single_quote_subst\"`'\nRANLIB='`$ECHO \"$RANLIB\" | $SED \"$delay_single_quote_subst\"`'\nold_postinstall_cmds='`$ECHO \"$old_postinstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\nold_postuninstall_cmds='`$ECHO \"$old_postuninstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_cmds='`$ECHO \"$old_archive_cmds\" | $SED \"$delay_single_quote_subst\"`'\nlock_old_archive_extraction='`$ECHO \"$lock_old_archive_extraction\" | $SED \"$delay_single_quote_subst\"`'\nCC='`$ECHO \"$CC\" | $SED \"$delay_single_quote_subst\"`'\nCFLAGS='`$ECHO \"$CFLAGS\" | $SED \"$delay_single_quote_subst\"`'\ncompiler='`$ECHO \"$compiler\" | $SED \"$delay_single_quote_subst\"`'\nGCC='`$ECHO \"$GCC\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_pipe='`$ECHO \"$lt_cv_sys_global_symbol_pipe\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_cdecl='`$ECHO \"$lt_cv_sys_global_symbol_to_cdecl\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_import='`$ECHO \"$lt_cv_sys_global_symbol_to_import\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_c_name_address='`$ECHO \"$lt_cv_sys_global_symbol_to_c_name_address\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix='`$ECHO \"$lt_cv_sys_global_symbol_to_c_name_address_lib_prefix\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_nm_interface='`$ECHO \"$lt_cv_nm_interface\" | $SED \"$delay_single_quote_subst\"`'\nnm_file_list_spec='`$ECHO \"$nm_file_list_spec\" | $SED \"$delay_single_quote_subst\"`'\nlt_sysroot='`$ECHO \"$lt_sysroot\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_truncate_bin='`$ECHO \"$lt_cv_truncate_bin\" | $SED \"$delay_single_quote_subst\"`'\nobjdir='`$ECHO \"$objdir\" | $SED \"$delay_single_quote_subst\"`'\nMAGIC_CMD='`$ECHO \"$MAGIC_CMD\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_no_builtin_flag='`$ECHO \"$lt_prog_compiler_no_builtin_flag\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_pic='`$ECHO \"$lt_prog_compiler_pic\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_wl='`$ECHO \"$lt_prog_compiler_wl\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_static='`$ECHO \"$lt_prog_compiler_static\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_prog_compiler_c_o='`$ECHO \"$lt_cv_prog_compiler_c_o\" | $SED \"$delay_single_quote_subst\"`'\nneed_locks='`$ECHO \"$need_locks\" | $SED \"$delay_single_quote_subst\"`'\nMANIFEST_TOOL='`$ECHO \"$MANIFEST_TOOL\" | $SED \"$delay_single_quote_subst\"`'\nDSYMUTIL='`$ECHO \"$DSYMUTIL\" | $SED \"$delay_single_quote_subst\"`'\nNMEDIT='`$ECHO \"$NMEDIT\" | $SED \"$delay_single_quote_subst\"`'\nLIPO='`$ECHO \"$LIPO\" | $SED \"$delay_single_quote_subst\"`'\nOTOOL='`$ECHO \"$OTOOL\" | $SED \"$delay_single_quote_subst\"`'\nOTOOL64='`$ECHO \"$OTOOL64\" | $SED \"$delay_single_quote_subst\"`'\nlibext='`$ECHO \"$libext\" | $SED \"$delay_single_quote_subst\"`'\nshrext_cmds='`$ECHO \"$shrext_cmds\" | $SED \"$delay_single_quote_subst\"`'\nextract_expsyms_cmds='`$ECHO \"$extract_expsyms_cmds\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds_need_lc='`$ECHO \"$archive_cmds_need_lc\" | $SED \"$delay_single_quote_subst\"`'\nenable_shared_with_static_runtimes='`$ECHO \"$enable_shared_with_static_runtimes\" | $SED \"$delay_single_quote_subst\"`'\nexport_dynamic_flag_spec='`$ECHO \"$export_dynamic_flag_spec\" | $SED \"$delay_single_quote_subst\"`'\nwhole_archive_flag_spec='`$ECHO \"$whole_archive_flag_spec\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_needs_object='`$ECHO \"$compiler_needs_object\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_new_cmds='`$ECHO \"$old_archive_from_new_cmds\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_expsyms_cmds='`$ECHO \"$old_archive_from_expsyms_cmds\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds='`$ECHO \"$archive_cmds\" | $SED \"$delay_single_quote_subst\"`'\narchive_expsym_cmds='`$ECHO \"$archive_expsym_cmds\" | $SED \"$delay_single_quote_subst\"`'\nmodule_cmds='`$ECHO \"$module_cmds\" | $SED \"$delay_single_quote_subst\"`'\nmodule_expsym_cmds='`$ECHO \"$module_expsym_cmds\" | $SED \"$delay_single_quote_subst\"`'\nwith_gnu_ld='`$ECHO \"$with_gnu_ld\" | $SED \"$delay_single_quote_subst\"`'\nallow_undefined_flag='`$ECHO \"$allow_undefined_flag\" | $SED \"$delay_single_quote_subst\"`'\nno_undefined_flag='`$ECHO \"$no_undefined_flag\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_flag_spec='`$ECHO \"$hardcode_libdir_flag_spec\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_separator='`$ECHO \"$hardcode_libdir_separator\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct='`$ECHO \"$hardcode_direct\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct_absolute='`$ECHO \"$hardcode_direct_absolute\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_minus_L='`$ECHO \"$hardcode_minus_L\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_shlibpath_var='`$ECHO \"$hardcode_shlibpath_var\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_automatic='`$ECHO \"$hardcode_automatic\" | $SED \"$delay_single_quote_subst\"`'\ninherit_rpath='`$ECHO \"$inherit_rpath\" | $SED \"$delay_single_quote_subst\"`'\nlink_all_deplibs='`$ECHO \"$link_all_deplibs\" | $SED \"$delay_single_quote_subst\"`'\nalways_export_symbols='`$ECHO \"$always_export_symbols\" | $SED \"$delay_single_quote_subst\"`'\nexport_symbols_cmds='`$ECHO \"$export_symbols_cmds\" | $SED \"$delay_single_quote_subst\"`'\nexclude_expsyms='`$ECHO \"$exclude_expsyms\" | $SED \"$delay_single_quote_subst\"`'\ninclude_expsyms='`$ECHO \"$include_expsyms\" | $SED \"$delay_single_quote_subst\"`'\nprelink_cmds='`$ECHO \"$prelink_cmds\" | $SED \"$delay_single_quote_subst\"`'\npostlink_cmds='`$ECHO \"$postlink_cmds\" | $SED \"$delay_single_quote_subst\"`'\nfile_list_spec='`$ECHO \"$file_list_spec\" | $SED \"$delay_single_quote_subst\"`'\nvariables_saved_for_relink='`$ECHO \"$variables_saved_for_relink\" | $SED \"$delay_single_quote_subst\"`'\nneed_lib_prefix='`$ECHO \"$need_lib_prefix\" | $SED \"$delay_single_quote_subst\"`'\nneed_version='`$ECHO \"$need_version\" | $SED \"$delay_single_quote_subst\"`'\nversion_type='`$ECHO \"$version_type\" | $SED \"$delay_single_quote_subst\"`'\nrunpath_var='`$ECHO \"$runpath_var\" | $SED \"$delay_single_quote_subst\"`'\nshlibpath_var='`$ECHO \"$shlibpath_var\" | $SED \"$delay_single_quote_subst\"`'\nshlibpath_overrides_runpath='`$ECHO \"$shlibpath_overrides_runpath\" | $SED \"$delay_single_quote_subst\"`'\nlibname_spec='`$ECHO \"$libname_spec\" | $SED \"$delay_single_quote_subst\"`'\nlibrary_names_spec='`$ECHO \"$library_names_spec\" | $SED \"$delay_single_quote_subst\"`'\nsoname_spec='`$ECHO \"$soname_spec\" | $SED \"$delay_single_quote_subst\"`'\ninstall_override_mode='`$ECHO \"$install_override_mode\" | $SED \"$delay_single_quote_subst\"`'\npostinstall_cmds='`$ECHO \"$postinstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\npostuninstall_cmds='`$ECHO \"$postuninstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\nfinish_cmds='`$ECHO \"$finish_cmds\" | $SED \"$delay_single_quote_subst\"`'\nfinish_eval='`$ECHO \"$finish_eval\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_into_libs='`$ECHO \"$hardcode_into_libs\" | $SED \"$delay_single_quote_subst\"`'\nsys_lib_search_path_spec='`$ECHO \"$sys_lib_search_path_spec\" | $SED \"$delay_single_quote_subst\"`'\nconfigure_time_dlsearch_path='`$ECHO \"$configure_time_dlsearch_path\" | $SED \"$delay_single_quote_subst\"`'\nconfigure_time_lt_sys_library_path='`$ECHO \"$configure_time_lt_sys_library_path\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_action='`$ECHO \"$hardcode_action\" | $SED \"$delay_single_quote_subst\"`'\nenable_dlopen='`$ECHO \"$enable_dlopen\" | $SED \"$delay_single_quote_subst\"`'\nenable_dlopen_self='`$ECHO \"$enable_dlopen_self\" | $SED \"$delay_single_quote_subst\"`'\nenable_dlopen_self_static='`$ECHO \"$enable_dlopen_self_static\" | $SED \"$delay_single_quote_subst\"`'\nold_striplib='`$ECHO \"$old_striplib\" | $SED \"$delay_single_quote_subst\"`'\nstriplib='`$ECHO \"$striplib\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_dirs='`$ECHO \"$compiler_lib_search_dirs\" | $SED \"$delay_single_quote_subst\"`'\npredep_objects='`$ECHO \"$predep_objects\" | $SED \"$delay_single_quote_subst\"`'\npostdep_objects='`$ECHO \"$postdep_objects\" | $SED \"$delay_single_quote_subst\"`'\npredeps='`$ECHO \"$predeps\" | $SED \"$delay_single_quote_subst\"`'\npostdeps='`$ECHO \"$postdeps\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_path='`$ECHO \"$compiler_lib_search_path\" | $SED \"$delay_single_quote_subst\"`'\nLD_CXX='`$ECHO \"$LD_CXX\" | $SED \"$delay_single_quote_subst\"`'\nreload_flag_CXX='`$ECHO \"$reload_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nreload_cmds_CXX='`$ECHO \"$reload_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_cmds_CXX='`$ECHO \"$old_archive_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_CXX='`$ECHO \"$compiler_CXX\" | $SED \"$delay_single_quote_subst\"`'\nGCC_CXX='`$ECHO \"$GCC_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_no_builtin_flag_CXX='`$ECHO \"$lt_prog_compiler_no_builtin_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_pic_CXX='`$ECHO \"$lt_prog_compiler_pic_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_wl_CXX='`$ECHO \"$lt_prog_compiler_wl_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_static_CXX='`$ECHO \"$lt_prog_compiler_static_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_prog_compiler_c_o_CXX='`$ECHO \"$lt_cv_prog_compiler_c_o_CXX\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds_need_lc_CXX='`$ECHO \"$archive_cmds_need_lc_CXX\" | $SED \"$delay_single_quote_subst\"`'\nenable_shared_with_static_runtimes_CXX='`$ECHO \"$enable_shared_with_static_runtimes_CXX\" | $SED \"$delay_single_quote_subst\"`'\nexport_dynamic_flag_spec_CXX='`$ECHO \"$export_dynamic_flag_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\nwhole_archive_flag_spec_CXX='`$ECHO \"$whole_archive_flag_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_needs_object_CXX='`$ECHO \"$compiler_needs_object_CXX\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_new_cmds_CXX='`$ECHO \"$old_archive_from_new_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_expsyms_cmds_CXX='`$ECHO \"$old_archive_from_expsyms_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds_CXX='`$ECHO \"$archive_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\narchive_expsym_cmds_CXX='`$ECHO \"$archive_expsym_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nmodule_cmds_CXX='`$ECHO \"$module_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nmodule_expsym_cmds_CXX='`$ECHO \"$module_expsym_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nwith_gnu_ld_CXX='`$ECHO \"$with_gnu_ld_CXX\" | $SED \"$delay_single_quote_subst\"`'\nallow_undefined_flag_CXX='`$ECHO \"$allow_undefined_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nno_undefined_flag_CXX='`$ECHO \"$no_undefined_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_flag_spec_CXX='`$ECHO \"$hardcode_libdir_flag_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_separator_CXX='`$ECHO \"$hardcode_libdir_separator_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct_CXX='`$ECHO \"$hardcode_direct_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct_absolute_CXX='`$ECHO \"$hardcode_direct_absolute_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_minus_L_CXX='`$ECHO \"$hardcode_minus_L_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_shlibpath_var_CXX='`$ECHO \"$hardcode_shlibpath_var_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_automatic_CXX='`$ECHO \"$hardcode_automatic_CXX\" | $SED \"$delay_single_quote_subst\"`'\ninherit_rpath_CXX='`$ECHO \"$inherit_rpath_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlink_all_deplibs_CXX='`$ECHO \"$link_all_deplibs_CXX\" | $SED \"$delay_single_quote_subst\"`'\nalways_export_symbols_CXX='`$ECHO \"$always_export_symbols_CXX\" | $SED \"$delay_single_quote_subst\"`'\nexport_symbols_cmds_CXX='`$ECHO \"$export_symbols_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nexclude_expsyms_CXX='`$ECHO \"$exclude_expsyms_CXX\" | $SED \"$delay_single_quote_subst\"`'\ninclude_expsyms_CXX='`$ECHO \"$include_expsyms_CXX\" | $SED \"$delay_single_quote_subst\"`'\nprelink_cmds_CXX='`$ECHO \"$prelink_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\npostlink_cmds_CXX='`$ECHO \"$postlink_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nfile_list_spec_CXX='`$ECHO \"$file_list_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_action_CXX='`$ECHO \"$hardcode_action_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_dirs_CXX='`$ECHO \"$compiler_lib_search_dirs_CXX\" | $SED \"$delay_single_quote_subst\"`'\npredep_objects_CXX='`$ECHO \"$predep_objects_CXX\" | $SED \"$delay_single_quote_subst\"`'\npostdep_objects_CXX='`$ECHO \"$postdep_objects_CXX\" | $SED \"$delay_single_quote_subst\"`'\npredeps_CXX='`$ECHO \"$predeps_CXX\" | $SED \"$delay_single_quote_subst\"`'\npostdeps_CXX='`$ECHO \"$postdeps_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_path_CXX='`$ECHO \"$compiler_lib_search_path_CXX\" | $SED \"$delay_single_quote_subst\"`'\n\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in AS \\\nDLLTOOL \\\nOBJDUMP \\\nSHELL \\\nECHO \\\nPATH_SEPARATOR \\\nSED \\\nGREP \\\nEGREP \\\nFGREP \\\nLD \\\nNM \\\nLN_S \\\nlt_SP2NL \\\nlt_NL2SP \\\nreload_flag \\\ndeplibs_check_method \\\nfile_magic_cmd \\\nfile_magic_glob \\\nwant_nocaseglob \\\nsharedlib_from_linklib_cmd \\\nAR \\\nAR_FLAGS \\\narchiver_list_spec \\\nSTRIP \\\nRANLIB \\\nCC \\\nCFLAGS \\\ncompiler \\\nlt_cv_sys_global_symbol_pipe \\\nlt_cv_sys_global_symbol_to_cdecl \\\nlt_cv_sys_global_symbol_to_import \\\nlt_cv_sys_global_symbol_to_c_name_address \\\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix \\\nlt_cv_nm_interface \\\nnm_file_list_spec \\\nlt_cv_truncate_bin \\\nlt_prog_compiler_no_builtin_flag \\\nlt_prog_compiler_pic \\\nlt_prog_compiler_wl \\\nlt_prog_compiler_static \\\nlt_cv_prog_compiler_c_o \\\nneed_locks \\\nMANIFEST_TOOL \\\nDSYMUTIL \\\nNMEDIT \\\nLIPO \\\nOTOOL \\\nOTOOL64 \\\nshrext_cmds \\\nexport_dynamic_flag_spec \\\nwhole_archive_flag_spec \\\ncompiler_needs_object \\\nwith_gnu_ld \\\nallow_undefined_flag \\\nno_undefined_flag \\\nhardcode_libdir_flag_spec \\\nhardcode_libdir_separator \\\nexclude_expsyms \\\ninclude_expsyms \\\nfile_list_spec \\\nvariables_saved_for_relink \\\nlibname_spec \\\nlibrary_names_spec \\\nsoname_spec \\\ninstall_override_mode \\\nfinish_eval \\\nold_striplib \\\nstriplib \\\ncompiler_lib_search_dirs \\\npredep_objects \\\npostdep_objects \\\npredeps \\\npostdeps \\\ncompiler_lib_search_path \\\nLD_CXX \\\nreload_flag_CXX \\\ncompiler_CXX \\\nlt_prog_compiler_no_builtin_flag_CXX \\\nlt_prog_compiler_pic_CXX \\\nlt_prog_compiler_wl_CXX \\\nlt_prog_compiler_static_CXX \\\nlt_cv_prog_compiler_c_o_CXX \\\nexport_dynamic_flag_spec_CXX \\\nwhole_archive_flag_spec_CXX \\\ncompiler_needs_object_CXX \\\nwith_gnu_ld_CXX \\\nallow_undefined_flag_CXX \\\nno_undefined_flag_CXX \\\nhardcode_libdir_flag_spec_CXX \\\nhardcode_libdir_separator_CXX \\\nexclude_expsyms_CXX \\\ninclude_expsyms_CXX \\\nfile_list_spec_CXX \\\ncompiler_lib_search_dirs_CXX \\\npredep_objects_CXX \\\npostdep_objects_CXX \\\npredeps_CXX \\\npostdeps_CXX \\\ncompiler_lib_search_path_CXX; do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in reload_cmds \\\nold_postinstall_cmds \\\nold_postuninstall_cmds \\\nold_archive_cmds \\\nextract_expsyms_cmds \\\nold_archive_from_new_cmds \\\nold_archive_from_expsyms_cmds \\\narchive_cmds \\\narchive_expsym_cmds \\\nmodule_cmds \\\nmodule_expsym_cmds \\\nexport_symbols_cmds \\\nprelink_cmds \\\npostlink_cmds \\\npostinstall_cmds \\\npostuninstall_cmds \\\nfinish_cmds \\\nsys_lib_search_path_spec \\\nconfigure_time_dlsearch_path \\\nconfigure_time_lt_sys_library_path \\\nreload_cmds_CXX \\\nold_archive_cmds_CXX \\\nold_archive_from_new_cmds_CXX \\\nold_archive_from_expsyms_cmds_CXX \\\narchive_cmds_CXX \\\narchive_expsym_cmds_CXX \\\nmodule_cmds_CXX \\\nmodule_expsym_cmds_CXX \\\nexport_symbols_cmds_CXX \\\nprelink_cmds_CXX \\\npostlink_cmds_CXX; do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\nac_aux_dir='$ac_aux_dir'\n\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'\n\n\n\n\n\n haself=${have_struct__elf}  top=${ac_pwd}   src=${srcdir}\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n\n# Handling of arguments.\nfor ac_config_target in $ac_config_targets\ndo\n  case $ac_config_target in\n    \"config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS config.h\" ;;\n    \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n    \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n    \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n    \"libdwarf/Makefile\") CONFIG_FILES=\"$CONFIG_FILES libdwarf/Makefile\" ;;\n    \"dwarfdump/Makefile\") CONFIG_FILES=\"$CONFIG_FILES dwarfdump/Makefile\" ;;\n    \"dwarfgen/Makefile\") CONFIG_FILES=\"$CONFIG_FILES dwarfgen/Makefile\" ;;\n    \"dwarfexample/Makefile\") CONFIG_FILES=\"$CONFIG_FILES dwarfexample/Makefile\" ;;\n    \"libdwarf/libdwarf.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libdwarf/libdwarf.h\" ;;\n\n  *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n  esac\ndone\n\n\n# If the user did not use the arguments to specify the items to instantiate,\n# then the envvar interface is used.  Set only those that are not.\n# We use the long form for the default assignment because of an extremely\n# bizarre bug on SunOS 4.1.3.\nif $ac_need_defaults; then\n  test \"${CONFIG_FILES+set}\" = set || CONFIG_FILES=$config_files\n  test \"${CONFIG_HEADERS+set}\" = set || CONFIG_HEADERS=$config_headers\n  test \"${CONFIG_COMMANDS+set}\" = set || CONFIG_COMMANDS=$config_commands\nfi\n\n# Have a temporary directory for convenience.  Make it in the build tree\n# simply because there is no reason against having it here, and in addition,\n# creating and moving files from /tmp can sometimes cause problems.\n# Hook for its removal unless debugging.\n# Note that there is a small window in which the directory will not be cleaned:\n# after its creation but before its name has been assigned to `$tmp'.\n$debug ||\n{\n  tmp= ac_tmp=\n  trap 'exit_status=$?\n  : \"${ac_tmp:=$tmp}\"\n  { test ! -d \"$ac_tmp\" || rm -fr \"$ac_tmp\"; } && exit $exit_status\n' 0\n  trap 'as_fn_exit 1' 1 2 13 15\n}\n# Create a (secure) tmp directory for tmp files.\n\n{\n  tmp=`(umask 077 && mktemp -d \"./confXXXXXX\") 2>/dev/null` &&\n  test -d \"$tmp\"\n}  ||\n{\n  tmp=./conf$$-$RANDOM\n  (umask 077 && mkdir \"$tmp\")\n} || as_fn_error $? \"cannot create a temporary directory in .\" \"$LINENO\" 5\nac_tmp=$tmp\n\n# Set up the scripts for CONFIG_FILES section.\n# No need to generate them if there are no CONFIG_FILES.\n# This happens for instance with `./config.status config.h'.\nif test -n \"$CONFIG_FILES\"; then\n\n\nac_cr=`echo X | tr X '\\015'`\n# On cygwin, bash can eat \\r inside `` if the user requested igncr.\n# But we know of no other shell where ac_cr would be empty at this\n# point, so we can use a bashism as a fallback.\nif test \"x$ac_cr\" = x; then\n  eval ac_cr=\\$\\'\\\\r\\'\nfi\nac_cs_awk_cr=`$AWK 'BEGIN { print \"a\\rb\" }' </dev/null 2>/dev/null`\nif test \"$ac_cs_awk_cr\" = \"a${ac_cr}b\"; then\n  ac_cs_awk_cr='\\\\r'\nelse\n  ac_cs_awk_cr=$ac_cr\nfi\n\necho 'BEGIN {' >\"$ac_tmp/subs1.awk\" &&\n_ACEOF\n\n\n{\n  echo \"cat >conf$$subs.awk <<_ACEOF\" &&\n  echo \"$ac_subst_vars\" | sed 's/.*/&!$&$ac_delim/' &&\n  echo \"_ACEOF\"\n} >conf$$subs.sh ||\n  as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\nac_delim_num=`echo \"$ac_subst_vars\" | grep -c '^'`\nac_delim='%!_!# '\nfor ac_last_try in false false false false false :; do\n  . ./conf$$subs.sh ||\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n\n  ac_delim_n=`sed -n \"s/.*$ac_delim\\$/X/p\" conf$$subs.awk | grep -c X`\n  if test $ac_delim_n = $ac_delim_num; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\nrm -f conf$$subs.sh\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\ncat >>\"\\$ac_tmp/subs1.awk\" <<\\\\_ACAWK &&\n_ACEOF\nsed -n '\nh\ns/^/S[\"/; s/!.*/\"]=/\np\ng\ns/^[^!]*!//\n:repl\nt repl\ns/'\"$ac_delim\"'$//\nt delim\n:nl\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\n\"\\\\/\np\nn\nb repl\n:more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt nl\n:delim\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/\np\nb\n:more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt delim\n' <conf$$subs.awk | sed '\n/^[^\"\"]/{\n  N\n  s/\\n//\n}\n' >>$CONFIG_STATUS || ac_write_fail=1\nrm -f conf$$subs.awk\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n_ACAWK\ncat >>\"\\$ac_tmp/subs1.awk\" <<_ACAWK &&\n  for (key in S) S_is_set[key] = 1\n  FS = \"\u0007\"\n\n}\n{\n  line = $ 0\n  nfields = split(line, field, \"@\")\n  substed = 0\n  len = length(field[1])\n  for (i = 2; i < nfields; i++) {\n    key = field[i]\n    keylen = length(key)\n    if (S_is_set[key]) {\n      value = S[key]\n      line = substr(line, 1, len) \"\" value \"\" substr(line, len + keylen + 3)\n      len += length(value) + length(field[++i])\n      substed = 1\n    } else\n      len += 1 + keylen\n  }\n\n  print line\n}\n\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nif sed \"s/$ac_cr//\" < /dev/null > /dev/null 2>&1; then\n  sed \"s/$ac_cr\\$//; s/$ac_cr/$ac_cs_awk_cr/g\"\nelse\n  cat\nfi < \"$ac_tmp/subs1.awk\" > \"$ac_tmp/subs.awk\" \\\n  || as_fn_error $? \"could not setup config files machinery\" \"$LINENO\" 5\n_ACEOF\n\n# VPATH may cause trouble with some makes, so we remove sole $(srcdir),\n# ${srcdir} and @srcdir@ entries from VPATH if srcdir is \".\", strip leading and\n# trailing colons and then remove the whole line if VPATH becomes empty\n# (actually we leave an empty line to preserve line numbers).\nif test \"x$srcdir\" = x.; then\n  ac_vpsub='/^[\t ]*VPATH[\t ]*=[\t ]*/{\nh\ns///\ns/^/:/\ns/[\t ]*$/:/\ns/:\\$(srcdir):/:/g\ns/:\\${srcdir}:/:/g\ns/:@srcdir@:/:/g\ns/^:*//\ns/:*$//\nx\ns/\\(=[\t ]*\\).*/\\1/\nG\ns/\\n//\ns/^[^=]*=[\t ]*$//\n}'\nfi\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nfi # test -n \"$CONFIG_FILES\"\n\n# Set up the scripts for CONFIG_HEADERS section.\n# No need to generate them if there are no CONFIG_HEADERS.\n# This happens for instance with `./config.status Makefile'.\nif test -n \"$CONFIG_HEADERS\"; then\ncat >\"$ac_tmp/defines.awk\" <<\\_ACAWK ||\nBEGIN {\n_ACEOF\n\n# Transform confdefs.h into an awk script `defines.awk', embedded as\n# here-document in config.status, that substitutes the proper values into\n# config.h.in to produce config.h.\n\n# Create a delimiter string that does not exist in confdefs.h, to ease\n# handling of long lines.\nac_delim='%!_!# '\nfor ac_last_try in false false :; do\n  ac_tt=`sed -n \"/$ac_delim/p\" confdefs.h`\n  if test -z \"$ac_tt\"; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_HEADERS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\n\n# For the awk script, D is an array of macro values keyed by name,\n# likewise P contains macro parameters if any.  Preserve backslash\n# newline sequences.\n\nac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*\nsed -n '\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt rset\n:rset\ns/^[\t ]*#[\t ]*define[\t ][\t ]*/ /\nt def\nd\n:def\ns/\\\\$//\nt bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\"/p\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\"/p\nd\n:bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\\\\\\\\\\\\n\"\\\\/p\nt cont\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\\\\\\\\\\\\n\"\\\\/p\nt cont\nd\n:cont\nn\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt clear\n:clear\ns/\\\\$//\nt bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/p\nd\n:bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\\\\\\\\\n\"\\\\/p\nb cont\n' <confdefs.h | sed '\ns/'\"$ac_delim\"'/\"\\\\\\\n\"/g' >>$CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  for (key in D) D_is_set[key] = 1\n  FS = \"\u0007\"\n}\n/^[\\t ]*#[\\t ]*(define|undef)[\\t ]+$ac_word_re([\\t (]|\\$)/ {\n  line = \\$ 0\n  split(line, arg, \" \")\n  if (arg[1] == \"#\") {\n    defundef = arg[2]\n    mac1 = arg[3]\n  } else {\n    defundef = substr(arg[1], 2)\n    mac1 = arg[2]\n  }\n  split(mac1, mac2, \"(\") #)\n  macro = mac2[1]\n  prefix = substr(line, 1, index(line, defundef) - 1)\n  if (D_is_set[macro]) {\n    # Preserve the white space surrounding the \"#\".\n    print prefix \"define\", macro P[macro] D[macro]\n    next\n  } else {\n    # Replace #undef with comments.  This is necessary, for example,\n    # in the case of _POSIX_SOURCE, which is predefined and required\n    # on some systems where configure will not decide to define it.\n    if (defundef == \"undef\") {\n      print \"/*\", prefix defundef, macro, \"*/\"\n      next\n    }\n  }\n}\n{ print }\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n  as_fn_error $? \"could not setup config headers machinery\" \"$LINENO\" 5\nfi # test -n \"$CONFIG_HEADERS\"\n\n\neval set X \"  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS\"\nshift\nfor ac_tag\ndo\n  case $ac_tag in\n  :[FHLC]) ac_mode=$ac_tag; continue;;\n  esac\n  case $ac_mode$ac_tag in\n  :[FHL]*:*);;\n  :L* | :C*:*) as_fn_error $? \"invalid tag \\`$ac_tag'\" \"$LINENO\" 5;;\n  :[FH]-) ac_tag=-:-;;\n  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;\n  esac\n  ac_save_IFS=$IFS\n  IFS=:\n  set x $ac_tag\n  IFS=$ac_save_IFS\n  shift\n  ac_file=$1\n  shift\n\n  case $ac_mode in\n  :L) ac_source=$1;;\n  :[FH])\n    ac_file_inputs=\n    for ac_f\n    do\n      case $ac_f in\n      -) ac_f=\"$ac_tmp/stdin\";;\n      *) # Look for the file first in the build tree, then in the source tree\n\t # (if the path is not absolute).  The absolute path cannot be DOS-style,\n\t # because $ac_f cannot contain `:'.\n\t test -f \"$ac_f\" ||\n\t   case $ac_f in\n\t   [\\\\/$]*) false;;\n\t   *) test -f \"$srcdir/$ac_f\" && ac_f=\"$srcdir/$ac_f\";;\n\t   esac ||\n\t   as_fn_error 1 \"cannot find input file: \\`$ac_f'\" \"$LINENO\" 5;;\n      esac\n      case $ac_f in *\\'*) ac_f=`$as_echo \"$ac_f\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; esac\n      as_fn_append ac_file_inputs \" '$ac_f'\"\n    done\n\n    # Let's still pretend it is `configure' which instantiates (i.e., don't\n    # use $as_me), people would be surprised to read:\n    #    /* config.h.  Generated by config.status.  */\n    configure_input='Generated from '`\n\t  $as_echo \"$*\" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'\n\t`' by configure.'\n    if test x\"$ac_file\" != x-; then\n      configure_input=\"$ac_file.  $configure_input\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: creating $ac_file\" >&5\n$as_echo \"$as_me: creating $ac_file\" >&6;}\n    fi\n    # Neutralize special characters interpreted by sed in replacement strings.\n    case $configure_input in #(\n    *\\&* | *\\|* | *\\\\* )\n       ac_sed_conf_input=`$as_echo \"$configure_input\" |\n       sed 's/[\\\\\\\\&|]/\\\\\\\\&/g'`;; #(\n    *) ac_sed_conf_input=$configure_input;;\n    esac\n\n    case $ac_tag in\n    *:-:* | *:-) cat >\"$ac_tmp/stdin\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5 ;;\n    esac\n    ;;\n  esac\n\n  ac_dir=`$as_dirname -- \"$ac_file\" ||\n$as_expr X\"$ac_file\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)$' \\| \\\n\t X\"$ac_file\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$ac_file\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  as_dir=\"$ac_dir\"; as_fn_mkdir_p\n  ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n\n  case $ac_mode in\n  :F)\n  #\n  # CONFIG_FILE\n  #\n\n  case $INSTALL in\n  [\\\\/$]* | ?:[\\\\/]* ) ac_INSTALL=$INSTALL ;;\n  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;\n  esac\n  ac_MKDIR_P=$MKDIR_P\n  case $MKDIR_P in\n  [\\\\/$]* | ?:[\\\\/]* ) ;;\n  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;\n  esac\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# If the template does not know about datarootdir, expand it.\n# FIXME: This hack should be removed a few years after 2.60.\nac_datarootdir_hack=; ac_datarootdir_seen=\nac_sed_dataroot='\n/datarootdir/ {\n  p\n  q\n}\n/@datadir@/p\n/@docdir@/p\n/@infodir@/p\n/@localedir@/p\n/@mandir@/p'\ncase `eval \"sed -n \\\"\\$ac_sed_dataroot\\\" $ac_file_inputs\"` in\n*datarootdir*) ac_datarootdir_seen=yes;;\n*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&5\n$as_echo \"$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&2;}\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  ac_datarootdir_hack='\n  s&@datadir@&$datadir&g\n  s&@docdir@&$docdir&g\n  s&@infodir@&$infodir&g\n  s&@localedir@&$localedir&g\n  s&@mandir@&$mandir&g\n  s&\\\\\\${datarootdir}&$datarootdir&g' ;;\nesac\n_ACEOF\n\n# Neutralize VPATH when `$srcdir' = `.'.\n# Shell code in configure.ac might set extrasub.\n# FIXME: do we really want to maintain this feature?\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_sed_extra=\"$ac_vpsub\n$extrasub\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n:t\n/@[a-zA-Z_][a-zA-Z_0-9]*@/!b\ns|@configure_input@|$ac_sed_conf_input|;t t\ns&@top_builddir@&$ac_top_builddir_sub&;t t\ns&@top_build_prefix@&$ac_top_build_prefix&;t t\ns&@srcdir@&$ac_srcdir&;t t\ns&@abs_srcdir@&$ac_abs_srcdir&;t t\ns&@top_srcdir@&$ac_top_srcdir&;t t\ns&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t\ns&@builddir@&$ac_builddir&;t t\ns&@abs_builddir@&$ac_abs_builddir&;t t\ns&@abs_top_builddir@&$ac_abs_top_builddir&;t t\ns&@INSTALL@&$ac_INSTALL&;t t\ns&@MKDIR_P@&$ac_MKDIR_P&;t t\n$ac_datarootdir_hack\n\"\neval sed \\\"\\$ac_sed_extra\\\" \"$ac_file_inputs\" | $AWK -f \"$ac_tmp/subs.awk\" \\\n  >$ac_tmp/out || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n\ntest -z \"$ac_datarootdir_hack$ac_datarootdir_seen\" &&\n  { ac_out=`sed -n '/\\${datarootdir}/p' \"$ac_tmp/out\"`; test -n \"$ac_out\"; } &&\n  { ac_out=`sed -n '/^[\t ]*datarootdir[\t ]*:*=/p' \\\n      \"$ac_tmp/out\"`; test -z \"$ac_out\"; } &&\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&5\n$as_echo \"$as_me: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&2;}\n\n  rm -f \"$ac_tmp/stdin\"\n  case $ac_file in\n  -) cat \"$ac_tmp/out\" && rm -f \"$ac_tmp/out\";;\n  *) rm -f \"$ac_file\" && mv \"$ac_tmp/out\" \"$ac_file\";;\n  esac \\\n  || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n ;;\n  :H)\n  #\n  # CONFIG_HEADER\n  #\n  if test x\"$ac_file\" != x-; then\n    {\n      $as_echo \"/* $configure_input  */\" \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\"\n    } >\"$ac_tmp/config.h\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    if diff \"$ac_file\" \"$ac_tmp/config.h\" >/dev/null 2>&1; then\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: $ac_file is unchanged\" >&5\n$as_echo \"$as_me: $ac_file is unchanged\" >&6;}\n    else\n      rm -f \"$ac_file\"\n      mv \"$ac_tmp/config.h\" \"$ac_file\" \\\n\t|| as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    fi\n  else\n    $as_echo \"/* $configure_input  */\" \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\" \\\n      || as_fn_error $? \"could not create -\" \"$LINENO\" 5\n  fi\n# Compute \"$ac_file\"'s index in $config_headers.\n_am_arg=\"$ac_file\"\n_am_stamp_count=1\nfor _am_header in $config_headers :; do\n  case $_am_header in\n    $_am_arg | $_am_arg:* )\n      break ;;\n    * )\n      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n  esac\ndone\necho \"timestamp for $_am_arg\" >`$as_dirname -- \"$_am_arg\" ||\n$as_expr X\"$_am_arg\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$_am_arg\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$_am_arg\" : 'X\\(//\\)$' \\| \\\n\t X\"$_am_arg\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$_am_arg\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`/stamp-h$_am_stamp_count\n ;;\n\n  :C)  { $as_echo \"$as_me:${as_lineno-$LINENO}: executing $ac_file commands\" >&5\n$as_echo \"$as_me: executing $ac_file commands\" >&6;}\n ;;\n  esac\n\n\n  case $ac_file$ac_mode in\n    \"depfiles\":C) test x\"$AMDEP_TRUE\" != x\"\" || {\n  # Older Autoconf quotes --file arguments for eval, but not when files\n  # are listed without --file.  Let's play safe and only enable the eval\n  # if we detect the quoting.\n  # TODO: see whether this extra hack can be removed once we start\n  # requiring Autoconf 2.70 or later.\n  case $CONFIG_FILES in #(\n  *\\'*) :\n    eval set x \"$CONFIG_FILES\" ;; #(\n  *) :\n    set x $CONFIG_FILES ;; #(\n  *) :\n     ;;\nesac\n  shift\n  # Used to flag and report bootstrapping failures.\n  am_rc=0\n  for am_mf\n  do\n    # Strip MF so we end up with the name of the file.\n    am_mf=`$as_echo \"$am_mf\" | sed -e 's/:.*$//'`\n    # Check whether this is an Automake generated Makefile which includes\n    # dependency-tracking related rules and includes.\n    # Grep'ing the whole file directly is not great: AIX grep has a line\n    # limit of 2048, but all sed's we know have understand at least 4000.\n    sed -n 's,^am--depfiles:.*,X,p' \"$am_mf\" | grep X >/dev/null 2>&1 \\\n      || continue\n    am_dirpart=`$as_dirname -- \"$am_mf\" ||\n$as_expr X\"$am_mf\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)$' \\| \\\n\t X\"$am_mf\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$am_mf\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n    am_filepart=`$as_basename -- \"$am_mf\" ||\n$as_expr X/\"$am_mf\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)$' \\| \\\n\t X\"$am_mf\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$am_mf\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n    { echo \"$as_me:$LINENO: cd \"$am_dirpart\" \\\n      && sed -e '/# am--include-marker/d' \"$am_filepart\" \\\n        | $MAKE -f - am--depfiles\" >&5\n   (cd \"$am_dirpart\" \\\n      && sed -e '/# am--include-marker/d' \"$am_filepart\" \\\n        | $MAKE -f - am--depfiles) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } || am_rc=$?\n  done\n  if test $am_rc -ne 0; then\n    { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"Something went wrong bootstrapping makefile fragments\n    for automatic dependency tracking.  Try re-running configure with the\n    '--disable-dependency-tracking' option to at least be able to build\n    the package (albeit without support for automatic dependency tracking).\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n  fi\n  { am_dirpart=; unset am_dirpart;}\n  { am_filepart=; unset am_filepart;}\n  { am_mf=; unset am_mf;}\n  { am_rc=; unset am_rc;}\n  rm -f conftest-deps.mk\n}\n ;;\n    \"libtool\":C)\n\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n# The names of the tagged configurations supported by this script.\navailable_tags='CXX '\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n\n# Which release of libtool.m4 was used?\nmacro_version=$macro_version\nmacro_revision=$macro_revision\n\n# Assembler program.\nAS=$lt_AS\n\n# DLL creation program.\nDLLTOOL=$lt_DLLTOOL\n\n# Object dumper program.\nOBJDUMP=$lt_OBJDUMP\n\n# Whether or not to build shared libraries.\nbuild_libtool_libs=$enable_shared\n\n# Whether or not to build static libraries.\nbuild_old_libs=$enable_static\n\n# What type of objects to build.\npic_mode=$pic_mode\n\n# Whether or not to optimize for fast installation.\nfast_install=$enable_fast_install\n\n# Shared archive member basename,for filename based shared library versioning on AIX.\nshared_archive_member_spec=$shared_archive_member_spec\n\n# Shell to use when invoking shell scripts.\nSHELL=$lt_SHELL\n\n# An echo program that protects backslashes.\nECHO=$lt_ECHO\n\n# The PATH separator for the build system.\nPATH_SEPARATOR=$lt_PATH_SEPARATOR\n\n# The host system.\nhost_alias=$host_alias\nhost=$host\nhost_os=$host_os\n\n# The build system.\nbuild_alias=$build_alias\nbuild=$build\nbuild_os=$build_os\n\n# A sed program that does not truncate output.\nSED=$lt_SED\n\n# Sed that helps us avoid accidentally triggering echo(1) options like -n.\nXsed=\"\\$SED -e 1s/^X//\"\n\n# A grep program that handles long lines.\nGREP=$lt_GREP\n\n# An ERE matcher.\nEGREP=$lt_EGREP\n\n# A literal string matcher.\nFGREP=$lt_FGREP\n\n# A BSD- or MS-compatible name lister.\nNM=$lt_NM\n\n# Whether we need soft or hard links.\nLN_S=$lt_LN_S\n\n# What is the maximum length of a command?\nmax_cmd_len=$max_cmd_len\n\n# Object file suffix (normally \"o\").\nobjext=$ac_objext\n\n# Executable file suffix (normally \"\").\nexeext=$exeext\n\n# whether the shell understands \"unset\".\nlt_unset=$lt_unset\n\n# turn spaces into newlines.\nSP2NL=$lt_lt_SP2NL\n\n# turn newlines into spaces.\nNL2SP=$lt_lt_NL2SP\n\n# convert \\$build file names to \\$host format.\nto_host_file_cmd=$lt_cv_to_host_file_cmd\n\n# convert \\$build files to toolchain format.\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\n\n# Method to check whether dependent libraries are shared objects.\ndeplibs_check_method=$lt_deplibs_check_method\n\n# Command to use when deplibs_check_method = \"file_magic\".\nfile_magic_cmd=$lt_file_magic_cmd\n\n# How to find potential files when deplibs_check_method = \"file_magic\".\nfile_magic_glob=$lt_file_magic_glob\n\n# Find potential files using nocaseglob when deplibs_check_method = \"file_magic\".\nwant_nocaseglob=$lt_want_nocaseglob\n\n# Command to associate shared and link libraries.\nsharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd\n\n# The archiver.\nAR=$lt_AR\n\n# Flags to create an archive.\nAR_FLAGS=$lt_AR_FLAGS\n\n# How to feed a file listing to the archiver.\narchiver_list_spec=$lt_archiver_list_spec\n\n# A symbol stripping program.\nSTRIP=$lt_STRIP\n\n# Commands used to install an old-style archive.\nRANLIB=$lt_RANLIB\nold_postinstall_cmds=$lt_old_postinstall_cmds\nold_postuninstall_cmds=$lt_old_postuninstall_cmds\n\n# Whether to use a lock for old archive extraction.\nlock_old_archive_extraction=$lock_old_archive_extraction\n\n# A C compiler.\nLTCC=$lt_CC\n\n# LTCC compiler flags.\nLTCFLAGS=$lt_CFLAGS\n\n# Take the output of nm and produce a listing of raw symbols and C names.\nglobal_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe\n\n# Transform the output of nm in a proper C declaration.\nglobal_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl\n\n# Transform the output of nm into a list of symbols to manually relocate.\nglobal_symbol_to_import=$lt_lt_cv_sys_global_symbol_to_import\n\n# Transform the output of nm in a C name address pair.\nglobal_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address\n\n# Transform the output of nm in a C name address pair when lib prefix is needed.\nglobal_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix\n\n# The name lister interface.\nnm_interface=$lt_lt_cv_nm_interface\n\n# Specify filename containing input files for \\$NM.\nnm_file_list_spec=$lt_nm_file_list_spec\n\n# The root where to search for dependent libraries,and where our libraries should be installed.\nlt_sysroot=$lt_sysroot\n\n# Command to truncate a binary pipe.\nlt_truncate_bin=$lt_lt_cv_truncate_bin\n\n# The name of the directory that contains temporary libtool files.\nobjdir=$objdir\n\n# Used to examine libraries when file_magic_cmd begins with \"file\".\nMAGIC_CMD=$MAGIC_CMD\n\n# Must we lock files when doing compilation?\nneed_locks=$lt_need_locks\n\n# Manifest tool.\nMANIFEST_TOOL=$lt_MANIFEST_TOOL\n\n# Tool to manipulate archived DWARF debug symbol files on Mac OS X.\nDSYMUTIL=$lt_DSYMUTIL\n\n# Tool to change global to local symbols on Mac OS X.\nNMEDIT=$lt_NMEDIT\n\n# Tool to manipulate fat objects and archives on Mac OS X.\nLIPO=$lt_LIPO\n\n# ldd/readelf like tool for Mach-O binaries on Mac OS X.\nOTOOL=$lt_OTOOL\n\n# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.\nOTOOL64=$lt_OTOOL64\n\n# Old archive suffix (normally \"a\").\nlibext=$libext\n\n# Shared library suffix (normally \".so\").\nshrext_cmds=$lt_shrext_cmds\n\n# The commands to extract the exported symbol list from a shared archive.\nextract_expsyms_cmds=$lt_extract_expsyms_cmds\n\n# Variables whose values should be saved in libtool wrapper scripts and\n# restored at link time.\nvariables_saved_for_relink=$lt_variables_saved_for_relink\n\n# Do we need the \"lib\" prefix for modules?\nneed_lib_prefix=$need_lib_prefix\n\n# Do we need a version for libraries?\nneed_version=$need_version\n\n# Library versioning type.\nversion_type=$version_type\n\n# Shared library runtime path variable.\nrunpath_var=$runpath_var\n\n# Shared library path variable.\nshlibpath_var=$shlibpath_var\n\n# Is shlibpath searched before the hard-coded library search path?\nshlibpath_overrides_runpath=$shlibpath_overrides_runpath\n\n# Format of library name prefix.\nlibname_spec=$lt_libname_spec\n\n# List of archive names.  First name is the real one, the rest are links.\n# The last name is the one that the linker finds with -lNAME\nlibrary_names_spec=$lt_library_names_spec\n\n# The coded name of the library, if different from the real name.\nsoname_spec=$lt_soname_spec\n\n# Permission mode override for installation of shared libraries.\ninstall_override_mode=$lt_install_override_mode\n\n# Command to use after installation of a shared archive.\npostinstall_cmds=$lt_postinstall_cmds\n\n# Command to use after uninstallation of a shared archive.\npostuninstall_cmds=$lt_postuninstall_cmds\n\n# Commands used to finish a libtool library installation in a directory.\nfinish_cmds=$lt_finish_cmds\n\n# As \"finish_cmds\", except a single script fragment to be evaled but\n# not shown.\nfinish_eval=$lt_finish_eval\n\n# Whether we should hardcode library paths into libraries.\nhardcode_into_libs=$hardcode_into_libs\n\n# Compile-time system search path for libraries.\nsys_lib_search_path_spec=$lt_sys_lib_search_path_spec\n\n# Detected run-time system search path for libraries.\nsys_lib_dlsearch_path_spec=$lt_configure_time_dlsearch_path\n\n# Explicit LT_SYS_LIBRARY_PATH set during ./configure time.\nconfigure_time_lt_sys_library_path=$lt_configure_time_lt_sys_library_path\n\n# Whether dlopen is supported.\ndlopen_support=$enable_dlopen\n\n# Whether dlopen of programs is supported.\ndlopen_self=$enable_dlopen_self\n\n# Whether dlopen of statically linked programs is supported.\ndlopen_self_static=$enable_dlopen_self_static\n\n# Commands to strip libraries.\nold_striplib=$lt_old_striplib\nstriplib=$lt_striplib\n\n\n# The linker used to build libraries.\nLD=$lt_LD\n\n# How to create reloadable object files.\nreload_flag=$lt_reload_flag\nreload_cmds=$lt_reload_cmds\n\n# Commands used to build an old-style archive.\nold_archive_cmds=$lt_old_archive_cmds\n\n# A language specific compiler.\nCC=$lt_compiler\n\n# Is the compiler the GNU compiler?\nwith_gcc=$GCC\n\n# Compiler flag to turn off builtin functions.\nno_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag\n\n# Additional compiler flags for building library objects.\npic_flag=$lt_lt_prog_compiler_pic\n\n# How to pass a linker flag through the compiler.\nwl=$lt_lt_prog_compiler_wl\n\n# Compiler flag to prevent dynamic linking.\nlink_static_flag=$lt_lt_prog_compiler_static\n\n# Does compiler simultaneously support -c and -o options?\ncompiler_c_o=$lt_lt_cv_prog_compiler_c_o\n\n# Whether or not to add -lc for building shared libraries.\nbuild_libtool_need_lc=$archive_cmds_need_lc\n\n# Whether or not to disallow shared libs when runtime libs are static.\nallow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes\n\n# Compiler flag to allow reflexive dlopens.\nexport_dynamic_flag_spec=$lt_export_dynamic_flag_spec\n\n# Compiler flag to generate shared objects directly from archives.\nwhole_archive_flag_spec=$lt_whole_archive_flag_spec\n\n# Whether the compiler copes with passing no objects directly.\ncompiler_needs_object=$lt_compiler_needs_object\n\n# Create an old-style archive from a shared archive.\nold_archive_from_new_cmds=$lt_old_archive_from_new_cmds\n\n# Create a temporary old-style archive to link instead of a shared archive.\nold_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds\n\n# Commands used to build a shared archive.\narchive_cmds=$lt_archive_cmds\narchive_expsym_cmds=$lt_archive_expsym_cmds\n\n# Commands used to build a loadable module if different from building\n# a shared archive.\nmodule_cmds=$lt_module_cmds\nmodule_expsym_cmds=$lt_module_expsym_cmds\n\n# Whether we are building with GNU ld or not.\nwith_gnu_ld=$lt_with_gnu_ld\n\n# Flag that allows shared libraries with undefined symbols to be built.\nallow_undefined_flag=$lt_allow_undefined_flag\n\n# Flag that enforces no undefined symbols.\nno_undefined_flag=$lt_no_undefined_flag\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist\nhardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec\n\n# Whether we need a single \"-rpath\" flag with a separated argument.\nhardcode_libdir_separator=$lt_hardcode_libdir_separator\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary.\nhardcode_direct=$hardcode_direct\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary and the resulting library dependency is\n# \"absolute\",i.e impossible to change by setting \\$shlibpath_var if the\n# library is relocated.\nhardcode_direct_absolute=$hardcode_direct_absolute\n\n# Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n# into the resulting binary.\nhardcode_minus_L=$hardcode_minus_L\n\n# Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n# into the resulting binary.\nhardcode_shlibpath_var=$hardcode_shlibpath_var\n\n# Set to \"yes\" if building a shared library automatically hardcodes DIR\n# into the library and all subsequent libraries and executables linked\n# against it.\nhardcode_automatic=$hardcode_automatic\n\n# Set to yes if linker adds runtime paths of dependent libraries\n# to runtime path list.\ninherit_rpath=$inherit_rpath\n\n# Whether libtool must link a program against all its dependency libraries.\nlink_all_deplibs=$link_all_deplibs\n\n# Set to \"yes\" if exported symbols are required.\nalways_export_symbols=$always_export_symbols\n\n# The commands to list exported symbols.\nexport_symbols_cmds=$lt_export_symbols_cmds\n\n# Symbols that should not be listed in the preloaded symbols.\nexclude_expsyms=$lt_exclude_expsyms\n\n# Symbols that must always be exported.\ninclude_expsyms=$lt_include_expsyms\n\n# Commands necessary for linking programs (against libraries) with templates.\nprelink_cmds=$lt_prelink_cmds\n\n# Commands necessary for finishing linking programs.\npostlink_cmds=$lt_postlink_cmds\n\n# Specify filename containing input files.\nfile_list_spec=$lt_file_list_spec\n\n# How to hardcode a shared library path into an executable.\nhardcode_action=$hardcode_action\n\n# The directories searched by this compiler when creating a shared library.\ncompiler_lib_search_dirs=$lt_compiler_lib_search_dirs\n\n# Dependencies to place before and after the objects being linked to\n# create a shared library.\npredep_objects=$lt_predep_objects\npostdep_objects=$lt_postdep_objects\npredeps=$lt_predeps\npostdeps=$lt_postdeps\n\n# The library search path used internally by the compiler when linking\n# a shared library.\ncompiler_lib_search_path=$lt_compiler_lib_search_path\n\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x$2 in\n    x)\n        ;;\n    *:)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'` \\$$1\\\"\n        ;;\n    x:*)\n        eval $1=\\\"\\$$1 `$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval $1=\\\"\\$$1\\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval $1=\\\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\$$1\\\"\n        ;;\n    *)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n\n\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in $*\"\"; do\n      case $cc_temp in\n        compile | *[\\\\/]compile | ccache | *[\\\\/]ccache ) ;;\n        distcc | *[\\\\/]distcc | purify | *[\\\\/]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n\nltmain=$ac_aux_dir/ltmain.sh\n\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n\n\n    cat <<_LT_EOF >> \"$ofile\"\n\n# ### BEGIN LIBTOOL TAG CONFIG: CXX\n\n# The linker used to build libraries.\nLD=$lt_LD_CXX\n\n# How to create reloadable object files.\nreload_flag=$lt_reload_flag_CXX\nreload_cmds=$lt_reload_cmds_CXX\n\n# Commands used to build an old-style archive.\nold_archive_cmds=$lt_old_archive_cmds_CXX\n\n# A language specific compiler.\nCC=$lt_compiler_CXX\n\n# Is the compiler the GNU compiler?\nwith_gcc=$GCC_CXX\n\n# Compiler flag to turn off builtin functions.\nno_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX\n\n# Additional compiler flags for building library objects.\npic_flag=$lt_lt_prog_compiler_pic_CXX\n\n# How to pass a linker flag through the compiler.\nwl=$lt_lt_prog_compiler_wl_CXX\n\n# Compiler flag to prevent dynamic linking.\nlink_static_flag=$lt_lt_prog_compiler_static_CXX\n\n# Does compiler simultaneously support -c and -o options?\ncompiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX\n\n# Whether or not to add -lc for building shared libraries.\nbuild_libtool_need_lc=$archive_cmds_need_lc_CXX\n\n# Whether or not to disallow shared libs when runtime libs are static.\nallow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX\n\n# Compiler flag to allow reflexive dlopens.\nexport_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX\n\n# Compiler flag to generate shared objects directly from archives.\nwhole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX\n\n# Whether the compiler copes with passing no objects directly.\ncompiler_needs_object=$lt_compiler_needs_object_CXX\n\n# Create an old-style archive from a shared archive.\nold_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX\n\n# Create a temporary old-style archive to link instead of a shared archive.\nold_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX\n\n# Commands used to build a shared archive.\narchive_cmds=$lt_archive_cmds_CXX\narchive_expsym_cmds=$lt_archive_expsym_cmds_CXX\n\n# Commands used to build a loadable module if different from building\n# a shared archive.\nmodule_cmds=$lt_module_cmds_CXX\nmodule_expsym_cmds=$lt_module_expsym_cmds_CXX\n\n# Whether we are building with GNU ld or not.\nwith_gnu_ld=$lt_with_gnu_ld_CXX\n\n# Flag that allows shared libraries with undefined symbols to be built.\nallow_undefined_flag=$lt_allow_undefined_flag_CXX\n\n# Flag that enforces no undefined symbols.\nno_undefined_flag=$lt_no_undefined_flag_CXX\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist\nhardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX\n\n# Whether we need a single \"-rpath\" flag with a separated argument.\nhardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary.\nhardcode_direct=$hardcode_direct_CXX\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary and the resulting library dependency is\n# \"absolute\",i.e impossible to change by setting \\$shlibpath_var if the\n# library is relocated.\nhardcode_direct_absolute=$hardcode_direct_absolute_CXX\n\n# Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n# into the resulting binary.\nhardcode_minus_L=$hardcode_minus_L_CXX\n\n# Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n# into the resulting binary.\nhardcode_shlibpath_var=$hardcode_shlibpath_var_CXX\n\n# Set to \"yes\" if building a shared library automatically hardcodes DIR\n# into the library and all subsequent libraries and executables linked\n# against it.\nhardcode_automatic=$hardcode_automatic_CXX\n\n# Set to yes if linker adds runtime paths of dependent libraries\n# to runtime path list.\ninherit_rpath=$inherit_rpath_CXX\n\n# Whether libtool must link a program against all its dependency libraries.\nlink_all_deplibs=$link_all_deplibs_CXX\n\n# Set to \"yes\" if exported symbols are required.\nalways_export_symbols=$always_export_symbols_CXX\n\n# The commands to list exported symbols.\nexport_symbols_cmds=$lt_export_symbols_cmds_CXX\n\n# Symbols that should not be listed in the preloaded symbols.\nexclude_expsyms=$lt_exclude_expsyms_CXX\n\n# Symbols that must always be exported.\ninclude_expsyms=$lt_include_expsyms_CXX\n\n# Commands necessary for linking programs (against libraries) with templates.\nprelink_cmds=$lt_prelink_cmds_CXX\n\n# Commands necessary for finishing linking programs.\npostlink_cmds=$lt_postlink_cmds_CXX\n\n# Specify filename containing input files.\nfile_list_spec=$lt_file_list_spec_CXX\n\n# How to hardcode a shared library path into an executable.\nhardcode_action=$hardcode_action_CXX\n\n# The directories searched by this compiler when creating a shared library.\ncompiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX\n\n# Dependencies to place before and after the objects being linked to\n# create a shared library.\npredep_objects=$lt_predep_objects_CXX\npostdep_objects=$lt_postdep_objects_CXX\npredeps=$lt_predeps_CXX\npostdeps=$lt_postdeps_CXX\n\n# The library search path used internally by the compiler when linking\n# a shared library.\ncompiler_lib_search_path=$lt_compiler_lib_search_path_CXX\n\n# ### END LIBTOOL TAG CONFIG: CXX\n_LT_EOF\n\n ;;\n    \"libdwarf/libdwarf.h\":C)  sh $src/scripts/fixlibdwarfelf.sh $haself $src $top  ;;\n\n  esac\ndone # for ac_tag\n\n\nas_fn_exit 0\n_ACEOF\nac_clean_files=$ac_clean_files_save\n\ntest $ac_write_fail = 0 ||\n  as_fn_error $? \"write failure creating $CONFIG_STATUS\" \"$LINENO\" 5\n\n\n# configure is writing to config.log, and then calls config.status.\n# config.status does its own redirection, appending to config.log.\n# Unfortunately, on DOS this fails, as config.log is still kept open\n# by configure, so config.status won't be able to write to it; its\n# output is simply discarded.  So we exec the FD to /dev/null,\n# effectively closing config.log, so it can be properly (re)opened and\n# appended to by config.status.  When coming back to configure, we\n# need to make the FD available again.\nif test \"$no_create\" != yes; then\n  ac_cs_success=:\n  ac_config_status_args=\n  test \"$silent\" = yes &&\n    ac_config_status_args=\"$ac_config_status_args --quiet\"\n  exec 5>/dev/null\n  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false\n  exec 5>>config.log\n  # Use ||, not &&, to avoid exiting from the if with $? = 1, which\n  # would make configure fail if this is the last instruction.\n  $ac_cs_success || as_fn_exit 1\nfi\nif test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts\" >&5\n$as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\nfi\n\n\necho\necho \"$PACKAGE $VERSION\"\necho\necho \"Configuration Options Summary:\"\necho\necho \"  BuildOS..............: ${build_os}\"\necho \"  HostOS...............: ${host_os}\"\necho\necho \"  shared library.......: ${enable_shared}\"\necho \"  static library.......: ${enable_static}\"\necho\necho \"  zlib support.........: ${have_zlib}\"\necho \"  sanitize support.....: ${enable_sanitize}\"\necho \"  BuildOS-BigEndian....: ${ac_cv_c_bigendian}\"\necho\necho \"  libdwarf.............: always\"\necho \"    old frame column...: ${enable_oldframecol}\"\necho \"    names table........: ${enable_namestable}\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    elf64_getshdr......: ${have_getshdr}\"\necho \"    Elf64_Rela.........: ${have_elf64_rela}\"\necho \"    Elf64_Sym..........: ${have_elf64_sym}\"\necho \"    Elf spelled........: ${struct_elf}\"\necho \"    libelf.............: ${dwarf_with_libelf}\"\necho \"    Windows path corr..: ${enable_windowspath}\"\necho \"    Nonstandardprintf..: ${enable_nonstandardprintf}\"\necho \"    Custom libelf......: ${enable_havecustomlibelf}\"\necho \"  dwarfdump............: always\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    Elf64_Rel (r_info).: ${have_elf64_rel}\"\necho \"    regex..............: ${have_regex}\"\necho \"  dwarfgen.............: ${enable_dwarfgen}\"\necho \"  dwarfexample.........: ${enable_dwarfexample}\"\necho\necho \"Compilation............: make (or gmake)\"\necho \"  CPPFLAGS.............: $CPPFLAGS\"\necho \"  CFLAGS...............: $CFLAGS ${c_compiler_flags}\"\necho \"  LDFLAGS..............: $LDFLAGS\"\necho \"  LIBS.................: $LIBS\"\necho \"  DWARF_LIBS...........: $DWARF_LIBS\"\necho\necho \"Installation...........: make install (as root if needed, with 'su' or 'sudo')\"\necho \"  prefix...............: $prefix\"\necho\n", "###Copyright (C) 2018 Vincent Torri <vincent dot torri at gmail dot com>\n###This code is public domain and can be freely used or copied.\n\ndnl defines the version name of  the libdwarf.so\nm4_define([v_maj], [1])\nm4_define([v_min], [0])\nm4_define([v_mic], [0])\n###m4_define([v_ver], [v_maj.v_min.v_mic])\n###Returning to older version, .so.1\nm4_define([v_ver], [v_maj])\n\nm4_define([v_rel], [])\nm4_define([lt_cur], [m4_eval(v_maj + v_min)])\nm4_define([lt_rev], [v_mic])\nm4_define([lt_age], [v_min])\n\n### Sets the release name. \n###m4_define([v_date], [m4_esyscmd_s([date \"+%Y%m%d\"])])\nm4_define([v_date], [20201011])])\n\nAC_PREREQ([2.52])\n### 2nd arg to AC_INIT is the version 'number'.\nAC_INIT([libdwarf], [v_date], [libdwarf-list -at- linuxmail -dot- org])\nAC_CONFIG_SRCDIR([configure.ac])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_MACRO_DIRS([m4])\n\n\n### Additional options to configure\n\nAC_ARG_ENABLE([dwarfgen],\n   [AS_HELP_STRING([--enable-dwarfgen],\n                   [enable dwarfgen compilation @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_dwarfgen=\"yes\"],\n        [enable_dwarfgen=\"no\"])\n   ],\n   [enable_dwarfgen=\"no\"])\nAM_CONDITIONAL([HAVE_DWARFGEN], [test \"x${enable_dwarfgen}\" = \"xyes\"])\n\nAC_ARG_ENABLE([dwarfexample],\n   [AS_HELP_STRING([--enable-dwarfexample],\n                   [enable dwarfexample compilation @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_dwarfexample=\"yes\"],\n        [enable_dwarfexample=\"no\"])\n   ],\n   [enable_dwarfexample=\"no\"])\nAM_CONDITIONAL([HAVE_DWARFEXAMPLE], [test \"x${enable_dwarfexample}\" = \"xyes\"])\n\n### Solely for checking libdwarf allocation counts,sizes\n### Do not use without a good reason . See libdwarf/dwarf_alloc.c\nAC_ARG_ENABLE(globalallocsums,AS_HELP_STRING([--enable-global-alloc-sums],\n        [Enables some allocation counting in dwarf_alloc.c (default is NO)]),\n        [ AC_DEFINE([HAVE_GLOBAL_ALLOC_SUMS],[1],\n           [Define 1 if want some specialized allocation counting] )\n           [enable_globalallocsums=\"yes\"]\n        ],\n        [enable_globalallocsums=\"no\"])\n\nAC_ARG_ENABLE([sanitize],\n   [AS_HELP_STRING([--enable-sanitize],\n                   [enable sanitize compiler option @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_sanitize=\"yes\"],\n        [enable_sanitize=\"no\"])\n   ],\n   [enable_sanitize=\"no\"])\n\nAC_ARG_ENABLE([oldframecol],\n   [AS_HELP_STRING([--enable-oldframecol],\n                   [enable old frame columns @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_oldframecol=\"yes\"],\n        [enable_oldframecol=\"no\"])\n   ],\n   [enable_oldframecol=\"no\"])\n\nAS_IF(\n    [test \"x${enable_oldframecol}\" = \"xyes\"],\n    [AC_DEFINE(\n         [HAVE_OLD_FRAME_CFA_COL], [1],\n         [Set to 1 if old frame columns are enabled.])])\n\nAC_ARG_ENABLE([namestable],\n   [AS_HELP_STRING([--enable-namestable],\n                   [enable name string functions implemented as binary search (default is with C switch) @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_namestable=\"yes\"],\n        [enable_namestable=\"no\"])\n   ],\n   [enable_namestable=\"no\"])\n\n\nAS_IF(\n    [test \"x${enable_namestable}\" = \"xyes\"],\n    [AC_SUBST([dwarf_namestable], [-s])],\n    [AC_SUBST([dwarf_namestable], [-t])])\n\nAC_ARG_ENABLE([libelf],\n   [AS_HELP_STRING([--disable-libelf],\n     [disable use of libelf (default is enable) @<:@default=yes@:>@])],\n   [ AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [dwarf_with_libelf=\"yes\"],\n        [dwarf_with_libelf=\"no\"])\n   ],\n   [dwarf_with_libelf=\"yes\"])\n\n\nAC_ARG_ENABLE([windowspath],\n   [AS_HELP_STRING([--enable-windowspath],\n                  [Detect certain Windows paths as full paths (default is NO)])],\n   [ \n     AC_DEFINE([HAVE_WINDOWS_PATH],[1],\n       [Define 1 if want to allow Windows full path detection] )\n       [enable_windowspath=\"yes\"]\n   ],\n   [ \n     enable_windowspath=\"no\"\n   ])\n\nAC_ARG_ENABLE([wall],\n   [AS_HELP_STRING([--enable-wall],\n                   [enable -Wall and other options @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_wall=\"yes\"],\n        [enable_wall=\"no\"])\n   ],\n   [enable_wall=\"no\"])\n\nAC_ARG_ENABLE(nonstandardprintf,AS_HELP_STRING([--enable-nonstandardprintf],\n        [Use a special printf format for 64bit (default is NO)]),\n        [ AC_DEFINE([HAVE_NONSTANDARD_PRINTF_64_FORMAT],[1],\n           [Define 1 if need nonstandard printf format for 64bit] )\n           [enable_nonstandardprintf=\"yes\"]\n        ],\n        [enable_nonstandardprintf=\"no\"])\n\nAC_ARG_ENABLE(havecustomlibelf,AS_HELP_STRING([--enable-havecustomlibelf],\n        [including a custom libelf library (default is NO)]),\n        [ AC_DEFINE([HAVE_CUSTOM_LIBELF],[1],\n           [Define 1 if including a custom libelf library] )\n           [enable_havecustomlibelf=\"yes\"]\n        ],\n        [enable_havecustomlibelf=\"no\"])\n\n### Default options with respect to host\n\nAC_CANONICAL_HOST\n\nhave_win32=\"no\"\ncase \"$host_os\" in\n   mingw*)\n      have_win32=\"yes\"\n   ;;\nesac\n\nAM_CONDITIONAL([HAVE_WIN32], [test \"x${have_win32}\" = \"xyes\"])\n\n\n### Checks for programs\n\nAM_PROG_AR\n\n### We don't use dist-xz *.xz output from make dist,\n### so don't mention it.\nAM_INIT_AUTOMAKE([1.6])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\nLT_INIT([win32-dll disable-shared static])\n\nversion_info=\"lt_cur:lt_rev:lt_age\"\nrelease_info=\"v_rel\"\nAC_SUBST([version_info])\nAC_SUBST([release_info])\n\nAC_PROG_CC\nAC_PROG_CXX\nAC_PROG_CC_C_O\n\n###PKG_PROG_PKG_CONFIG Intentionally not using pkg-config\n\n### Checks for libraries\n\nAC_SUBST([DWARF_LIBS])\nAC_ARG_VAR([DWARF_LIBS], [linker flags when linking libdwarf])\n\n\n### Checks for header files\n\n### MacOS does not have malloc.h\nAC_CHECK_HEADERS([unistd.h sys/types.h regex.h malloc.h])\n### for uintptr_t \nAC_CHECK_HEADERS([stdint.h inttypes.h stddef.h])\nAC_CHECK_HEADERS([windows.h])\n\nAC_CHECK_HEADERS([zlib.h])\nAS_IF(\n    [test \"x${ac_cv_header_zlib_h}\" = \"xyes\"],\n    [ have_pc_zlib=\"yes\" ; echo \"have zlib\" ; \n      DWARF_LIBS=\"${DWARF_LIBS} -lz\" ],\n    [ have_pc_zlib=\"no\" ; echo \"no zlib\" ])\n\n### for use in casts to uint to avoid 32bit warnings.\n### Also needed by C++ cstdint\nAC_TYPE_UINTPTR_T\nAC_TYPE_INTPTR_T\n### Now we know uintptr_t is either in stdint.h or\n### is defined in config.h by configure.\n\n# test Elf headers in the preprocessor path search\nCPPFLAGS_save=${CPPFLAGS}\n### we set $dwarf_with_libelf above.\nif test  $dwarf_with_libelf = \"yes\" ; then\n  AC_CHECK_HEADERS([sgidefs.h])\n  AC_CHECK_HEADERS([libelf.h libelf/libelf.h])\n  AC_CHECK_HEADERS([elf.h elfaccess.h sys/elf_386.h sys/elf_amd64.h sys/elf_SPARC.h sys/ia64/elf.h])\n  \n  ### if no libelf.h add no -lelf and turn off \n  ### libelf recognition.\n  AS_IF([test \"x${ac_cv_header_libelf_h}\" != \"xyes\" -a \"x${ac_cv_header_libelf_libelf_h}\" != \"xyes\" ],\n    [ dwarf_with_libelf=\"no\"\n      echo \"no libelf headers, no libelf\" ],\n    [ DWARF_LIBS=\"${DWARF_LIBS} -lelf\"  \n      dwarf_with_libelf=\"yes\" \n      echo \"Allowing use of libelf.\"\n      AC_DEFINE([DWARF_WITH_LIBELF],[1],\n        [Set to 1 as we are building with libelf]) \n    ])\n\n\n### begin checking for Elf structs\n# Elf64_Rela in elf.h\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n         ]],\n         [[\nElf64_Rela p;\np.r_offset = 1;\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_ELF64_RELA], [1], [Set to 1 if Elf64_Rela defined in elf.h.])\n     have_elf64_rela=\"yes\"\n    ],\n    [have_elf64_rela=\"no\"])\n\nAS_IF(\n    [test \"x${have_elf64_rela}\" = \"xno\"],\n    [\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM(\n              [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n              ]],\n              [[\nElf64_Rela p;\np.r_offset = 1;\n              ]])\n         ],\n         [\n          AC_DEFINE([HAVE_ELF64_RELA], [1], [Set to 1 if Elf64_Rela defined in elf.h.])\n          have_elf64_rela=\"yes\"\n         ],\n         [have_elf64_rela=\"no\"])\n     CPPFLAGS=${CPPFLAGS_save}\n    ])\n\nAC_MSG_CHECKING([for Elf64_Rela in elf.h])\nAC_MSG_RESULT([${have_elf64_rela}])\n\n# Elf64_Rel in elf.h\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n         ]],\n         [[\nElf64_Rel p;\np.r_info = 1;\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_ELF64_R_INFO], [1], [Set to 1 if Elf64_Rel structure as r_info field.])\n     have_elf64_rel=\"yes\"\n    ],\n    [have_elf64_rel=\"no\"])\n\nAS_IF(\n    [test \"x${have_elf64_rel}\" = \"xno\"],\n    [\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM(\n              [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n              ]],\n              [[\nElf64_Rel p;\np.r_info = 1;\n              ]])\n         ],\n         [\n          AC_DEFINE([HAVE_ELF64_R_INFO], [1], [Set to 1 if Elf64_Rel structure as r_info field.])\n          have_elf64_rel=\"yes\"\n         ],\n         [have_elf64_rel=\"no\"])\n     CPPFLAGS=${CPPFLAGS_save}\n    ])\n\nAC_MSG_CHECKING([for Elf64_Rel in elf.h])\nAC_MSG_RESULT([${have_elf64_rel}])\n\n# Elf64_Sym in elf.h\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n         ]],\n         [[\nElf64_Sym p;\np.st_info = 1;\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_ELF64_SYM], [1], [Set to 1 if Elf64_Sym defined in elf.h.])\n     have_elf64_sym=\"yes\"\n    ],\n    [have_elf64_sym=\"no\"])\n\nAS_IF(\n    [test \"x${have_elf64_sym}\" = \"xno\"],\n    [\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM(\n              [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n              ]],\n              [[\nElf64_Sym p;\np.st_info = 1;\n              ]])\n         ],\n         [\n          AC_DEFINE([HAVE_ELF64_SYM], [1], [Set to 1 if Elf64_Sym defined in elf.h.])\n          have_elf64_sym=\"yes\"\n         ],\n         [have_elf64_sym=\"no\"])\n     CPPFLAGS=${CPPFLAGS_save}\n    ])\n\nAC_MSG_CHECKING([for Elf64_Sym in elf.h])\nAC_MSG_RESULT([${have_elf64_sym}])\n### end checking for Elf structs\n\n### Checks for Elf structures\n# test if struct _Elf is used instead of struct Elf\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n/* This must be at global scope */\nstruct _Elf;\ntypedef struct _Elf Elf;\n         ]],\n         [[\nstruct _Elf *a = 0;\n         ]])\n    ],\n    [\n     have_struct__elf=\"yes\"\n     struct_elf=\"struct _Elf\"\n    ],\n    [\n     have_struct__elf=\"no\"\n     struct_elf=\"struct Elf\"\n    ])\n\nAC_MSG_CHECKING([whether struct _Elf is used])\nAC_MSG_RESULT([${have_struct__elf}])\nelse\n  ### end where dwarf_with_libelf == \"no\" via\n  ### --disable-libelf\n  have_struct__elf=\"no\"\n  struct_elf=\"struct Elf\"\n  have_elf64_rela=\"no\"\n  have_elf64_rel=\"no\"\n  have_elf64_sym=\"no\"\nfi\nAC_SUBST([struct_elf])\n\n### Checks for compiler characteristics\n\nAC_C_BIGENDIAN([AC_DEFINE([WORDS_BIGENDIAN], [1], [Set to 1 if bigendian build])],,)\n\n# gcc accepts even totally bogus -Wno flags. Other compilers..no\n# -Wno-long-long suppresses warnings on 'long long'\n# -Wno-pedantic-ms-format (which only exists in mingw)\n# suppresses warnings about I64 printf format.\nAS_IF(\n    [ test \"x$enable_wall\" = \"xyes\" ],\n    [ \n       cxx_compiler_flags=\"-Wall -Wextra -Wno-unused-private-field -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Werror\"\n\n       c_compiler_flags=\"-Wall -Wextra -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Wmissing-prototypes -Wdeclaration-after-statement -Wbad-function-cast -Wmissing-parameter-type -Wnested-externs -Werror\"\n    ]\n    )\nAS_IF(\n    [ test \"x$enable_nonstandardprintf\" = \"xyes\" ],\n    [\n       cxx_compiler_flags=\"$cxx_compiler_flags -Wno-pedantic-ms-format\"\n\n       c_compiler_flags=\"$c_compiler_flags -Wno-pedantic-ms-format\"\n    ]\n    )\n\nDWARF_CHECK_CXX_COMPILER_FLAGS([${cxx_compiler_flags}])\nDWARF_CHECK_C_COMPILER_FLAGS([${c_compiler_flags}])\n\n# unused attribute\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\nstatic unsigned int foo(unsigned int x, __attribute__ ((unused)) int y){\n    unsigned int x2 = x + 1;\n    return x2;\n}\nint goo() {\n    unsigned int y = 0;\n    y = foo(12, y);\n}\n         ]],\n         [[\n         ]])\n    ],\n    [\n     have_unused=\"yes\"\n     AC_DEFINE(\n         [HAVE_UNUSED_ATTRIBUTE], [1],\n         [Set to 1 if __attribute__ ((unused)) is available.])\n    ],\n    [have_unused=\"no\"])\n\nAC_MSG_CHECKING([whether \"unused\" attribute is available])\nAC_MSG_RESULT([${have_unused}])\n\n# sanitize\nAS_IF(\n    [test \"x${enable_sanitize}\" = \"xyes\"],\n    [\n     CFLAGS_save=${CFLAGS}\n     CFLAGS=\"${CFLAGS} -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n     DWARF_CFLAGS=\n     AC_COMPILE_IFELSE(\n         [AC_LANG_PROGRAM([[]], [[]])],\n         [\n          enable_sanitize=\"yes\"\n          DWARF_CFLAGS=\"$DWARF_CFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n          LDFLAGS=\"$LDFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n         ],\n         [enable_sanitize=\"no\"])\n     CFLAGS=\"${CFLAGS_save} ${DWARF_CFLAGS}\" \n     DWARF_CFLAGS=\n    ])\n\nAC_MSG_CHECKING([whether sanitize options are used])\nAC_MSG_RESULT([${enable_sanitize}])\n\n\n### Checks for linker characteristics\n\n\n### Checks for library functions\n\nAC_FUNC_ALLOCA\n\nif test  $dwarf_with_libelf = \"yes\" ; then\n# elf64_getehdr\nCPPFLAGS_save=${CPPFLAGS}\nCPPFLAGS=\"${CPPFLAGS}\"\nLIBS_save=${LIBS}\nLIBS=\"${LIBS} ${DWARF_LIBS}\"\nAC_SEARCH_LIBS(\n    [elf64_getehdr], [elf],\n    [\n     have_getehdr=\"yes\"\n     AC_DEFINE(\n         [HAVE_ELF64_GETEHDR], [1],\n\t [Set to 1 if the elf64_getehdr function is in libelf.])\n     ],\n     [have_getehdr=\"no\"])\nAC_SEARCH_LIBS(\n    [elf64_getshdr], [elf],\n    [\n     have_getshdr=\"yes\"\n     AC_DEFINE(\n         [HAVE_ELF64_GETSHDR], [1],\n\t [Set to 1 if the elf64_getshdr function is in libelf.])\n     ],\n     [have_getshdr=\"no\"])\nCPPFLAGS=${CPPFLAGS_save}\nLIBS=${LIBS_save}\nelse\n  have_getehdr=\"no\"\n  have_getshdr=\"no\"\nfi\n\nAS_IF(\n    [test \"x${have_pc_zlib}\" = \"xno\"  -a \"x${have_zlib}\" = \"xyes\"],\n    [AC_SEARCH_LIBS([z], [have_zlib=\"yes\"], [have_zlib=\"no\"])])\n\nAS_IF(\n    [test \"x${have_pc_zlib}\" = \"xyes\"  -o \"x${have_zlib}\" = \"xyes\"],\n    [\n     have_zlib=\"yes\"\n     AC_DEFINE([HAVE_ZLIB], [1], [Set to 1 if zlib decompression is available.])\n    ],\n    [\n     have_zlib=\"no\"\n    ])\n\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_REGEX_H\n# include <regex.h>\n#endif\n         ]],\n         [[\nint i;\nregex_t r;\nint cflags = REG_EXTENDED;\nconst char *s = \"abc\";\ni = regcomp(&r,s,cflags);\nregfree(&r);\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_REGEX], [1], [Set to 1 if regex is usable.])\n     have_regex=\"yes\"\n    ],\n    [have_regex=\"no\"])\n\nAC_MSG_CHECKING([for regex library])\nAC_MSG_RESULT([${have_regex}])\n\n### Checks for system services\n\nAC_CONFIG_FILES([\nMakefile\nlibdwarf/Makefile\ndwarfdump/Makefile\ndwarfgen/Makefile\ndwarfexample/Makefile\n])\n\n### libdwarf needs to be adjusted to support struct Elf\n### or struct _Elf, whichever the system defines in libelf.\nAC_CONFIG_COMMANDS([libdwarf/libdwarf.h],\n  [ sh $src/scripts/fixlibdwarfelf.sh $haself $src $top ],\n  [ haself=${have_struct__elf}  top=${ac_pwd}   src=${srcdir} ]  )\n\n\nAC_OUTPUT\n\necho\necho \"$PACKAGE $VERSION\"\necho\necho \"Configuration Options Summary:\"\necho\necho \"  BuildOS..............: ${build_os}\"\necho \"  HostOS...............: ${host_os}\"\necho\necho \"  shared library.......: ${enable_shared}\"\necho \"  static library.......: ${enable_static}\"\necho\necho \"  zlib support.........: ${have_zlib}\"\necho \"  sanitize support.....: ${enable_sanitize}\"\necho \"  BuildOS-BigEndian....: ${ac_cv_c_bigendian}\"\necho\necho \"  libdwarf.............: always\"\necho \"    old frame column...: ${enable_oldframecol}\"\necho \"    names table........: ${enable_namestable}\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    elf64_getshdr......: ${have_getshdr}\"\necho \"    Elf64_Rela.........: ${have_elf64_rela}\"\necho \"    Elf64_Sym..........: ${have_elf64_sym}\"\necho \"    Elf spelled........: ${struct_elf}\"\necho \"    libelf.............: ${dwarf_with_libelf}\"\necho \"    Windows path corr..: ${enable_windowspath}\"\necho \"    Nonstandardprintf..: ${enable_nonstandardprintf}\"\necho \"    Custom libelf......: ${enable_havecustomlibelf}\"\necho \"  dwarfdump............: always\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    Elf64_Rel (r_info).: ${have_elf64_rel}\"\necho \"    regex..............: ${have_regex}\"\necho \"  dwarfgen.............: ${enable_dwarfgen}\"\necho \"  dwarfexample.........: ${enable_dwarfexample}\"\necho\necho \"Compilation............: make (or gmake)\"\necho \"  CPPFLAGS.............: $CPPFLAGS\"\necho \"  CFLAGS...............: $CFLAGS ${c_compiler_flags}\"\necho \"  LDFLAGS..............: $LDFLAGS\"\necho \"  LIBS.................: $LIBS\"\necho \"  DWARF_LIBS...........: $DWARF_LIBS\"\necho\necho \"Installation...........: make install (as root if needed, with 'su' or 'sudo')\"\necho \"  prefix...............: $prefix\"\necho\n", "2020-10-15: David Anderson\n    * print_lines.c(print_line_context_record): Fixed the\n      comments  about DWARF4 vs 5.\n2020-10-13: David Anderson\n    * print_macro.c: Added the required check for 0\n      opcode and print appropriately (it's the null\n      byte at end of macro operands).\n2020-10-12: David Anderson\n    * dwarfdump.c: Now printf callbacks from libdwarf\n      are sanitized() to prevent corrupted line data from\n      compromising user terminal settings.\n    * print_lines.c: Accomodation of DWARF5 in more places.\n2020-10-11: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-10-11: David Anderson\n    * command_options.c: Refined a wordy comment.\n    * dwarfdump.1: Document the new ability to\n      get to GNU debuglink files automatically.\n    * dwarfdump.c: Implement support for reading GNU\n      debuglink and use it to find the target object.\n2020-10-05: David Anderson\n    * command_options.c: Implemented first part of\n      making GNU debuglink options work.\n    * dwarfdump.c: Now using dwarf_init_path()\n      working toward\n      making GNU debuglink options work.\n    * glflags.h: Commented gf_debug_names_flag\n      to avoid confusing it with debuglink.\n2020-10-03: David Anderson\n    * Makefile.in: Autoreconf using Ubuntu 20.04 \n      made small changes.\n    * COPYING: Corrected the references to the BSD copyright\n      to use \"two-clause BSD license\".\n2020-10-02: David Anderson\n    * command_options.c,glflags.h,print_frames.c: Remove\n      trailing whitespace.\n2020-10-02: David Anderson\n    * command_options.c: New options --no-follow-debuglink\n      and --add-debuglink_path=<text> for working with\n      GNU debuglink. \n    * glflags.h: Added gf_no_follow_debuglink and\n      gf_global_debuglink_paths and gf_global_debuglink_count.\n2020-09-30: David Anderson\n    * command_options.c: If more than one non-dash\n      word is at the end of the dwarfdump command\n      it used to complain no object name given.\n      Now in that case it complains that more than\n      one was given. Slightly more sensible.\n2020-09-27: David Anderson\n    * dwarfdump.c: --print-gnu_debuglink output wording\n      made clearer.\n2020-09-27: David Anderson\n    * dwarfdump.c: Now --print-gnu_debuglink also\n      indicates what files it found in the paths\n      calculated, making --print-gnu_debuglink more useful.\n    * command_options.c: Corrected a typo in a comment about\n      the option --print-gnu_debuglink.\n2020-09-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-09-18: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-09-18: David Anderson\n    * print_frames.c: Shortened too-long comment lines.\n2020-09-17: David Anderson\n    * print_frames.c: A very old typgraphical error\n      meant that in rare circumstances memory leakage\n      of a few bytes was possible with  option\n      --suppress-de-alloc-tree.\n2020-09-10: David Anderson\n    * esb_using_functions.h: Adding new argument to \n      the print_ranges_list_to_extra() prototype.\n    * print_die.c: Using that new argument to\n      pass the true offset to the printing code.\n    * print_ranges.c: Updated the printing to make it clearer\n      it clearer the .debug_ranges offset is using\n      a base address (when there is one).\n2020-09-10: David Anderson\n    * dwarfdump.c: Remove trailing whitespace.\n2020-09-08: David Anderson\n    * dwarfdump.c: Now cleans up terminating DW_DLV_ERROR\n      allocation even when the object cannot finish dwarf_init*().\n      Fixes print_error() so it works right with dbg null.\n2020-09-08: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-09-07: David Anderson\n    * glflags.h,print_die.c: Fixed idents and trailing whitespace.\n2020-09-06: David Anderson\n    * globals.h:  print_die_and_children() declaration\n      removed, the function is now static in print_die.c.\n    * print_die.c: On an error following a call to dwarf_child\n      (but where dwarf_child() succeeded) we were failing to \n      dwarf_dealloc_die(child). And even the main path\n      (no error from dwarf_child) failed to dealloc child.\n2020-09-05: David Anderson\n    * print_die.c: In a couple error messages spell the\n      function name that returned error correctly.\n2020-08-28: David Anderson\n    * print_die.c: Fixed indent and trailing whitespace.\n2020-08-27: David Anderson\n    * dwarfdump.c: Fix some warnings counted as errors\n      by ensuring the ERROR string is in them (they\n      just flag in particular situations that the DW_AT_producer\n      attribute is missing on the Compilation Unit).\n    * print_die.c: Fix places where we double-counted\n      errors.\n    * print_frames.c: Annotate an existing ERROR so that\n      it is counted in the ERROR count.\n    * print_llex_codes.c, print_origloclist_codes.c,\n      print_ranges.c,print_reloc.c: Fix  \n      double-counts of errors.\n    * print_reloc_decls.h: Just do a printf, no reason\n      to use struct esb_s here.\n2020-08-23: David Anderson\n    * compiler_info.c: Now we apply sanitized() to all\n      the printed strings (just in case an object file\n      is corrupted or maybe not plain ascii strings).\n2020-08-23: David Anderson\n    * dwarfdump-ta-ext-table.h: Regenerated\n    * tag_attr_ext.list: Added DW_AT_GNU_macros\n      to the known-extensions list.\n2020-08-23: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-08-23: David Anderson\n    * checkutil.c,dwarfdump.c,print_die.c: Removed trailing\n      whitespace, fixed indents.\n2020-08-23: David Anderson\n    * checkutil.c: Removed #if 0 lines from previous commit.\n    * dwarfdump.c: Removed debug printf lines.\n    * print_die.c: Removed debug printf lines.\n2020-08-22: David Anderson\n    * checkutil.c: Temporary debug printf.\n    * dwarfdump.c: Revised pRangesInfo reset\n      when we have a tied dbg, as in that case \n      we often miss function/scope address ranges.\n      Temporary debug printf too.\n    * globals.h: Adding a Dwarf_Debug argument to\n      tag_specific_checks_setup() for when tied file\n      present.\n    * print_abbreves.c: Temporary debug.\n      New arglist for tag_specific_checks_setup()\n    * print_die.c: Get the text section bounds\n      set (from tied object, if any) so checks\n      of address will not incorrectly fail.\n2020-08-22: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n\t  dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n\t  dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-08-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n\t  dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Updated version string, regenerated\n      files using it.\n2020-08-02: David Anderson\n    * print_die.c: Now with Additional checking of DW_LKIND\n      values and an error report if one tries to use the original\n      location interface with newer DWARF location data.\n    * print_frames.c: Added short comments for clarity. \n2020-07-28: David Anderson\n    * dwarf_names.c: Regenerated.\n    * print_die.c: Added DW_OP_GNU_variable_value to the table.\n2020-07-19: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n\t  dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n\t  dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-07-16: David Anderson\n    * tag_attr.list: Added some normal standard TAG/ATTR\n      combinations (some new in DWARF5)\n    * tag_attr_ext.list: Added some normal GNU \n      TAG/ATTR usages.\n    * tag_tree.list: Added some normal standard TAG/TAG\n      relationships.\n    * tag_common.h: Increased a row maximum by one\n      to match the increase in the lists.\n    * dwarfdump.1: Improved the wording for -kt -kr\n      and the modifier -C (they have longopts names\n      too).\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: Regenerated\n    * print_hipc_lopc_attr.c: Fixed indents and\n      trailing whitespace.\n2020-07-16: David Anderson\n    * tag_attr.list,tag_attr_ext.list,tag_tree.list:\n      corrections and some DWARF5 additions to the tables.\n    * tag_common.h: Increased table sizes where necessary\n      for the new *list data.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: Regenerated\n2020-07-16: David Anderson\n    * globals.h,print_die.c: Revised a key function name, \n      yesterdays name was excessively long. New name is\n      dd_get_integer_and_name().\n    * print_hipc_lopc_attr.c: That name changed here too.\n      and a blob of code was factored out into a new\n      function update_cu_base_addresses() which just\n      establishes names used in presenting details\n      in case of errors (a function with no side effects\n      but setting the glflags fields for use in error reports).\n2020-07-15: David Anderson\n    * CMakeLists.txt,Makefile.am: Added print_hipc_lopc_attr.c.\n    * Makefile.in: Regenerated.\n    * print_die.c: Moved print_hipc_lopc_attribute() from\n      here to print_hipc_lopc_attr.c.\n      Moved file-static variables bSawLow bSawHigh lowAddr\n      highAddr to print_one_die(), no need to be global.\n      get_small_encoding_integer_and_name() renamed.\n    * print_hipc_lopc_attr.c: New. Holds the larg-ish\n      function print_hipc_lopc_attribute() from .\n    * globals.h: Now _dwarf_get_small_encoding_integer_and_name()\n      can be called from more than one file in libdwarf.\n      Added print_hipc_lopc_attribute() declaration as it\n      is moved to its own source file.\n    * glflags.h: Added new member in_valid_code.\n    * glflags.c: Added glflags.in_valid_code = FALSE,\n      a new global-like variable to replace the old\n      print_die.c static variable in_valid_code.\n      Adds a bit of clarity.\n    * dwarfdump.c(tag_specific_checks_setup): Added new\n      DWARF5 CU DIE tags here. \n    * print_debug_sup.c: Fixed indent and trailing whitespace.\n2020-07-14: David Anderson\n    * print_die.c: Moved 4 variables, including\n      bSawLow and bSawHigh from static to being local\n      variables. Altered one internal interface to suit.\n      Now easier to understand.\n2020-07-14: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with new\n      version string.\n2020-07-13: David Anderson\n    * CMAkeLists.txt: Adding print_debug_sup.c  .\n    * Makefile.am: Adding print_debug_sup.c  .\n    * Makefile.in: Regenerated.\n    * command_options.c: Added flag  gf_debug_sup_flag\n      amd --print-debug-sup options.\n    * dwarf_names.c: Regenerated. Reflects the correction of \n      DW_GNUIVIS_static value for the .debug_sup section.\n    * dwarfdump.c: Adds check of gf_debug_sup_flag and\n      call of print_debug_sup().\n    * glflags.h: Adds boolean gf_debug_sup_flag.\n    * globals.h: Adds print_debug_sup() declaration.\n    * print_debug_sup.c: new to print .debug_sup.\n2020-07-11: David Anderson\n    * print_debug_gnu.c: After printing the section \n      added the dwarf_gnu_index_dealloc() to immediately\n      free the data allocated for printing the section.\n2020-07-08: David Anderson\n    * dwarfdump.1: Mentioning new print options (the\n      latest additions to dwarfdump) and suggesting\n      that -v -G and -M are sometimes helpful.\n2020-07-08: David Anderson\n    * print_debug_gnu.c,print_die.c: Fixed indents and\n      removed trailing whitespace.\n2020-07-08: David Anderson\n    * command_options.c: Misspelled argname in a comment.\n    * print_debug_gnu.c: Added minor checking for errors,\n      there is more to come in error checking. \n2020-07-06: David Anderson\n    * dwarf_names.c, dwarf_names.h: Regenerated,\n      Adding the non-standard dwarf\n      prefixes DW_GNUIVIS* and DW_GNUIKIND* in support\n      of .debug_gnu_pubtypes and .debug_gnu_pubnames.\n      The first support for these sections.\n      DW_DLE_GNU_PUBNAMES_ERROR\n      DW_DLE_GNU_PUBTYPES_ERROR\n      DW_DLE_DUPLICATE_GNU_DEBUG_PUBNAMES\n      DW_DLE_DUPLICATE_GNU_DEBUG_PUBTYPES\n    * Makefile.am: Adding print_debug_gnu.[ch] to the files list.\n    * Makefile.in: Regenerated.\n    * command_options.c: Add --print-debug-gnu option\n      to print these sections.\n    * dwarfdump.c: Implement printing of these sections.\n    * glflags.h: Addd boolean gf_debug_gnu_flag for the\n      --print-debug-gnu option.\n    * print_debug_gnu.c: Now prints these sections.\n2020-07-04: David Anderson\n    * print_die.c(dot_ok_in_identifier): Removed unused argument.\n      Added DW_TAG_skeleton_unit to the if condition.\n      This function affects only whether a CHECK message\n      reports a warning, it has no effect when printing. \n2020-07-04: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with new\n      version string.\n2020-07-03: David Anderson\n    * CMakeLists.txt, Makefile.am: Renamed print_dnames.c to\n      print_debug_names.c\n    * Makefile.in: Regenerated.\n    * command_options.c: Corrected the help text for\n      --print-fission.  Added --print-debug_names,\n      which does not yet do anything useful.\n2020-07-01: David Anderson\n    * esb.h: Make debug-only locals unsigned long instead of long.\n    * print_die.c: Where there is a N iteration loop adding\n      to esb strings use N and an estimate of per-loop text size\n      request a sensible space increment\n      to ensure there is enough space  that completing\n      the set of strings will not need another malloc.\n      Saved about 1% of cputime in full regression test.\n2020-06-29: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with new\n      version string.\n2020-06-29: David Anderson\n    * print_die.c: Fixed a minor formatting error on\n      DW_AT_location and related attributes.\n2020-06-28: David Anderson\n    * tag_attr.list,tag_tree.list: Adding standard DWARF5\n      tag-tag and tag-attr relationships to the lists.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: Regenerated.\n2020-06-26: David Anderson\n    * print_die.c (print_attribute): Increased the stack \n      alloc of a string so that even fairly long \n      loclists/rangelists won't require malloc.\n      A tiny indent and trailing whitespace instance fixed too.\n    * test-mach-o-32.base: Updated baseline so make check\n      passes again.\n2020-06-25: David Anderson\n    * checkutil.c: Removed trailing whitespace.\n    * command_options.c: \n    * dwarfdump.1: Making the -C option intent\n      clearer.\n    * dwarfdump.c: Fixed trailing whitespace and indents.\n    * naming.c: Fixed trailing whitespace.\n    * print_die.c: Removed dead code. Corrected printing\n      if rnglists, ranges, loclists locations. Corrected \n      handling of the output with -k detected an error.\n      Ensured a couple esb_s variables get destructed\n      in case of error.  Added explanation how the\n      print_attribute() code actually works.\n    * print_frames.c: Corrected handling location operations\n      when checking (-k options).\n    * print_llex_codes.c,print_loclists_codes.c,\n      print_origloclist_codes.c: Corrected handling \n      location data when checking (-k options).\n    * tag_attr_ext_list.c: Added DW_AT_MIPS_linkage_name\n      as a common extension on a couple TAGs.\n2020-06-22: David Anderson\n    * checkutil.c: Document a bit more about how this works.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: regenerated\n    * dwarfdump.c: Doing a slightly better job identifying\n      the true range of text addresses in the object file,\n      which matters for some -k (checking) options.\n    * globals.h: Revised some argument lists for nicer\n      reporting of errors found with -k options.\n    * naming.c: regenerated.\n    * print_die.c: Certain names revised for greater\n      clarity of intent. print_information ->\n      print_else_name_match which at least hints\n      at what the variable is doing.\n    * print_frames.c: Suppresses some output when checking.\n    * print_llex_codes.c: When checking suppress some output.  \n    * print_loclists.c: Removed pointless {}.\n    * print_loclists_codes.c,print_orginal_loclist_linecodes.c:\n      Suppresses some output when checking.\n    * print_rnglists.c: Clarify which routines apply solely\n      to printing raw rangelists.\n    * tag_attr_ext.list: Added DW_AT_encoding to common extentions\n    * tag_common.h: Incremeneted EXT_ATTR_TABLE_ROWS 16 \n      so the tables can be rebuilt.\n2020-06-22: David Anderson\n    * dwarfdump.c: Fixing some old formatting mistakes.\n      NOT TO BE USED Yet.\n2020-06-20: David Anderson\n    * tag_attr.c,tag_attr.list,tag_common.h: Adding in\n      DWARF5 TAG ATTR combinations required raising \n      hard coded value, and improving one of the\n      error messages appearing with the wrong limit.\n2020-06-20: David Anderson\n    * tag_attr.list: Added DW_AT_loclists_base,\n      DW_AT_alignment,DW_AT_call_all_calls,DW_AT_noreturn\n      with the TAGs they go with.\n2020-06-17: David Anderson\n    * Makefile.am, CMakeLists.txt: Renamed \n      print_loclist_original.c -> print_origloclist_codes.c\n      so the three distinct format loclist \n      printers all end in codes.c.\n    * Makefile.in: Regenerated\n2020-06-17: David Anderson\n    * print_loclists.c: Improve the formatting\n      of the raw report.\n    * print_rnglists.c: Significatly improve\n      the formatting of the raw report.\n2020-06-17: David Anderson\n    * globals.h: Some args now just values, not pointers,\n      the Dwarf_Addr  * hipc in\n      print_llex_linecodes() was a holdover from past\n      versions. Not needed.\n    * print_die.c,print_llex_codes.c,print_loclist_original.c,\n      print_loclists_codes.c: Similarly.\n2020-06-12: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h : updated version string.\n2020-06-12: David Anderson\n    * dwarfdump.c, globals.h,print_die.c,print_llex_codes.c,\n      print_loclist_original.c,print_loclists.c,\n      print_loclists_codes.c,print_rnglists.c: Fix indents\n      and remove trailing whitespace.\n2020-06-10: David Anderson\n    * CMakeLists.txt: Added print_loclists.c to the C file list.\n    * runtests.sh: Changed the generated (temporary) filenames\n      so it is easier to understand where to copy the\n      new baseline result to update the right baseline.\n    * testobjLE32PE.base: New baseline, needed as loclist\n      output changed.\n    * print_frames.c: Calling loclist dealloc on\n      error to avoid leaks.\n2020-06-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h : Updated  version string\n2020-06-09: David Anderson\n    * Makefile.am: New files due to refactoring.\n    * Makefile.in: Regenerated.\n    * command_options.c: Added --print-raw-loclists\n      which prints all the details of .debug_lists\n      but does not do any reference to .debug_info\n      or .debug_addr (for example).\n    * dwarfdump.c: Deals with --print-raw-loclists by\n      calling new function print_raw_all_loclists()\n    * esb_using_functions.c: Minor change to support\n      revised internal function interface to\n      dwarfdump_print_location_operations().\n    * glflags.h: Added global flag gf_print_raw_loclists.\n    * globals.h: Several new interfaces added so\n      dwarf_loc.c and dwarf_loclists.c call each other\n      as needed. And support for the different loclists\n      supported: DWARF 3, GNU Dwarf4 dwo extension,\n      and DWARF5.\n    * print_die.c:  Added die_indent_level a few places\n      for loclist printing. Significant changes to\n      support the loclist details.\n      Some renaming of things (data, functions) whose\n      purpose was obfuscated by the name.\n      Using new libdwarf interfaces that support\n      the new data in libdwarf.\n      Some significat refactoring so the structure\n      of what is being done can be easily seen.\n      No longer computes final loclist low/high addr\n      as libdwarf does that for us now.\n    * print_frames.c: Reflects the revised function\n      naming.\n    * print_frames.h: Reflects the revised function name.\n    * print_llex_codes.c: Factored out of print_die.c\n      and heavily revised to reflect the new location\n      data.\n    * print_loclist_original.c: Factored out of print_die.c\n      and heavily revised to reflect the new location\n      data.\n    * print_loclists.c: All new, this does the .debug_loclists\n      specific printing.\n    * print_loclists_codes.c: All new. Prints DWARF5\n      loclists data properly.\n    * print_locs.c: Reflects a revised function name.\n    * print_rnglists.c: Corrected an out of date comment.\n    * uri.c: 'unsigned int' instead of 'unsigned' for a\n      picky compiler.\n2020-05-23: David Anderson\n    * dwarf_globals.h: Define ESB_FIXED_ALLOC_SIZE 380.\n    * print_die.c,print_lines.c,print_pubnames.c: Now using \n      ESB_FIXED_ALLOC_SIZE in many places to (mostly)\n      avoid any need for malloc/free by the esb functions.\n2020-05-21: David Anderson\n    * dwarfdump.c: Now using DROP_ERROR_INSTANCE macro\n      everwhere needed, avoiding the hand-coding.\n      Using dwarf_dealloc_attribute() now.\n    * dwarf_globals.h: Extra parens in DROP_ERROR_INSTANCE\n      for readability, and using dwarf_dealloc_error()\n      in it for type-checking.\n    * print_die.c: Using dwarf_dealloc_attribute() \n      and dwarf_dealloc_die() now.\n    * print_frames.c: Now we call DROP_ERROR_INSTANCE\n      with the proper arguments as the compiler can type-check\n      that sort of thing. And fixed code to honor\n      its invariants (a function that should not return\n      DW_DLV_ERROR now avoids doing so).\n    * print_lines.c: Also using DROP_ERROR_INSTANCE now.\n    * print_macro.c: Now using DROP_ERROR_INSTANCE\n      and dwarf_dealloc_attribute().\n2020-05-19: David Anderson\n    * print_die.c: In an error case failed to dealloc the rnglists head.\n2020-05-19: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: New version string.\n2020-05-19: David Anderson\n    * print_die.c: Removed arguments that were not needed from\n      a couple of libdwarf rnglists functions and changed\n      code here to match.\n    * print_rnglists.c:  Fix trailing whitespace.\n      Turn on printing range lists\n      and offset table entries (if any) \n      with --print-raw-rnglists \n      even if no -v.\n2020-05-17: David Anderson\n    * globals.h: Remove trailing whitespace.\n    * print_die.c: Now prints DWARF5 .debug_rnglists section.\n      Fixes issues with handling certain attributes with new\n      FORMs in DWARF5.\n    * print_frames.c: Avoids terminating frame printing when\n      errors are seen attempting to get a function name\n      for an fde.\n    * print_rnglists.c: New. Implements the details of reading\n      the .debug_rnglists section.\n    * dwarf_alloc.c: Added new type, DW_DLA_RNGLISTS_HEAD.\n    * dwarf_die_deliv.c: Now reads all the DWARF5 CU DIE fields\n      that are needed to evaluate FORMs and section references.\n2020-05-04: David Anderson\n    * print_rnglists.c: Completing the code to print\n      all the details of the raw content of the\n      DWARF5 .debug_rnglists section.\n2020-05-02: David Anderson\n    * CMakeLists.txt: Added print_rnglists.c.\n    * Makefile.am: Added print_rnglists.c.\n    * Makefile.in: Regenerated.\n    * command_options.c: Added a new option --print-raw-rnglists.\n    * dwarfdump.c: Implemented printing raw rangelists, but\n      not yet completely.\n    * gflags.c: Added a new flag gf_print_raw_rnglists.\n    * print_rnglists.c: Prints an initial partial\n      report on  contents of any .debug_rnglists[.dwo]\n      section.\n    * print_sections.h: Just minor reformatting of\n      comments. No change.\n2020-04-28: David Anderson\n    * dwarfdump.c,print_die.c,print_frames.c: Removed\n      the use of tab chars in the output and use a space\n      or two instead. This greatly shortens the line\n      length needed when printing frame information details.\n      Looks better without the 16 or 24 leading blanks on\n      all those lines too.\n      The tab characters elsewhere were removed long ago.\n2020-04-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Updated version string.\n2020-04-25: David Anderson\n    * print_die.c: Fix indents and remove trailing whitespace.\n    * print_frames.c: Rearranged what was local Dwarf_Error\n      and what was local. Fixed a dwarf_dealloc to\n      say DW_DLA_ERROR, not DW_DLV_ERROR. Yikes.\n    * print_lines.c: Changed a local variable name,\n      filename->lsrc_filename so searches were\n      more meaningful. Added missing dwarf_dealloc\n      to clear dead data when appropriate.\n2020-04-24  David Anderson \n    * dwarf_names.c, dwarf_names.h: Updated version string.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-ext-table.h,dwarfdump-tt-table.h:\n      Updated version string.\n2020-04-23  David Anderson \n    * print_aranges.c: Remove a debugging printf.\n      Delete duplicate dealloc calls.\n    * print_lines.c: clarify what the dealloc's do\n      so we don't call dealloc on something already\n      cleared.\n2020-04-23  David Anderson \n    * dwarfdump.c: Added in dealloc to prevent leaks.\n    * print_aranges.c: More thorough doing dealloc\n      as soon as appropriate.\n    * print_die.c,print_frames.c,print_lines.c:  Doing\n      appropriate early dealloc in the necessary places.\n2020-04-22  David Anderson \n    * command_options.c: Added to a stderr warning (longer message).\n    * dwarfdump.1: Removed SELECTIVE ENTRY PRINTING\n      section in favor of the new URI-STYLE INPUT/OUTPUT\n      and the SELECTIVE* data renamed as  LIMITING OUTPUT.\n    * dwarfdump.c: Now everywhere expects to get back status\n      from printing DWARF section data, reports on it if\n      there as an error , and continues.\n    * esb_using_functions.h: Various functions now have\n      Dwarf_Error * arg and return a DW_DLV_* value.\n    * globals.h: Now all the relevant functions return\n      a DW_DLV_* value and require Dwarf_Error * argument.\n    * print_aranges.c: Some formatting fixes plus\n      now get_producer_name() returns a DW_DLV* value,\n      like more or less everything else.\n    * print_die.c: Major revision to now return on error\n      with DW_DLV_* instead of printf followed by exit().\n    * print_frames.c: New local function dealloc_loc_atlist()\n      to clean up on-the-spot. Reintroduced load_CU_error_data()\n      to amplify the information reported on error.\n    * print_lines.c: Line formatting corrected.\n    * print_macro.c: Line formatting corrected.\n    * print_pubnames.c: Reflects new arglist to get_producer_name().\n    * print_ranges.c: Line formatting corrected.\n    * dwarf_errmsg_list.h: Added DW_DLE_USER_DECLARED_ERROR so\n      dwarfdump can declare an error on its own.\n    * dwarf_error.c: Added dwarf_error_creation() to allow dwarfdump\n      to create an error with a detailed explanation.\n    * dwarf_form.c: declared a DW_FORM_rnglistx to be used soon.\n    * dwarf_ranges.c: Comments about the missing .debug_rnglists\n      section support (coming soon).\n2020-04-22  David Anderson \n    * dwarfdump-ta-ext-table.h: regenerated\n    * tag_attr_ext.list: Added to common extensions list    .\n      DW_AT_GNU_pubnames\n      DW_AT_GNU_pubtypes\n      DW_AT_GNU_dwo_name\n      DW_AT_GNU_ranges_base\n      DW_AT_GNU_addr_base\n2020-04-17  David Anderson \n    * dwarfdump.c: Clarified some error messages and\n      changed the should_skip_this_cu() from a predicate\n      function to one in the standard form returning\n      a DW_DLV_* value with a boolean pointer and a Dwarf_Error*\n    * globals.h: Now should_skip_this_cu and \n      print_section_groups_data are in standard form for\n      calling libdwarf functions, returning a DW_DLV*.\n    * print_die.c, print_aranges.c, print_pubmames.c,\n      print_ranges.c,print_section_groups.c: Now with \n      the standard form returning a DW_DLV* and no \n      longer call print_error\n      so returns on error, does not exit().\n      Also fixed a lack of a dealloc of cu_die2 in print_die.c.\n    * print_macro.c: Deleted dwarf_dealloc() that are\n      no longer appropriate given we don't\n      just call exit(). These were not allocated\n      by the function that was dealloc-ing so\n      removed the deallocs here: Let higher levels\n      do it when we return the DW_DLV_ERROR.\n2020-04-16  David Anderson \n    * globals.h:prototypes of print_line_numbers_this_cu and\n      print_macros_5style_this_cu changed to the new style\n      with int return and Dwarf_Error *argument.\n    * dwarf_macrocheck.c: Added a comment line.\n    * print_die.c(print_one_die_section): Calls the\n      revised section prints per-CU- so errors are\n      passed back and dealt with.\n    * print_lines.c: Now functions return int instead\n      of print_error and exit.  Various errors\n      get more detailed output too. \n    * print_macro.c: Now with the new style of returning\n      errors up to caller.\n2020-04-14  David Anderson \n    * globals.h: Deleted unused function prototype.\n      Updated print_macinfo_by_offset() to the new\n      style of returning a DW_DLV*.\n    * print_die.c: Now a couple of places we avoid\n      calling print_error() as it exits and deal sensibly\n      with return values.\n    * print_macros.c: The printing of DWARF2,3,4 macro data\n      is now updated to avoid print_error() and to print\n      more details about problems.  And report output\n      now looks more regular.\n    * print_abbrevs.c: Fixed indents and trailing whitespace.\n2020-04-13  David Anderson \n    * dwarfdump.c,globals.h, print_abbrevs.c: print_abbrevs()\n      now returns an error properly with the details so\n      dwarfdump can deal with it properly.\n2020-04-10  David Anderson \n    * dwarfdump.c: Printing gdb_index and debugfission index\n      code now all returns DW_DLV* in the new style.\n    * globals.h: print_gdb_index() and print_debugfission_index()\n      get updated prototypes.\n    * print_debugfission.c: Code to match the new protypes,\n      passig errors back up.  Revised formatting a bit\n      for accuracy and completeness.\n    * print_die.c: Eliminated the odd use of stderr. All\n      now stdout.\n    * print_gdbindex.c: Improved various error messages.\n      Updated print_gdb_index() to the new return-on-error\n      approach.\n2020-04-07  David Anderson \n    * compiler_info.c: Clarified a comment and\n      split a too-long line.\n    * dwarfdump.c: Now handles a print_pubnames that\n      returns a DW_DLV* and deals with it. Made\n      a dwarf_dealloc conditional on  a non-null \n      cu_die_for_print_frames. get_producer_name()\n      now always returns and avoids leaks.\n      We add DEBUG_PUBNAMES  to the list wh print CU data\n      on error (It knows the CU-DIE)\n    * gflags.c: Reformatted to avoid a too-long line.\n    * globals.h: Revised prototype for print_pubnames().\n    * print_aranges.c: Removed too early destructor\n      on producer_name.\n    * print_die.c: Fixed a too-long-comment-line.\n    * print_frames.c: Moved a check for DW_DLV_ERROR up\n      a few lines so we don't check gf_check_frames()\n      when not needed.\n    * print_pubnames.c: Removed deal_with_name_offset_err()\n      as not the right thing to do. Now print_pubnames\n      accepts a Dwarf_Error * argument and always\n      returns a DW_DLV* result.\n2020-04-03  David Anderson \n    * print_aranges.c: Fixed trailing whitespace and indents.\n2020-04-03  David Anderson \n    * dwarfdump.c: Now print_strings() and print_macro_statistics()\n      take Dwarf_Error * as argument and return a DW_DLV* value.\n    * globals.h: prototype of print_strings altered.\n    * macrocheck.c(print_macro_statistics): Using esb_s to \n      more detailed messages and returning a DW_DLV* value..\n    * macrocheck.h: Updated prototype for print_macro_statistics().\n    * print_frames.c: Deleted many #if 0/#endif and their\n      debug printf-s.\n    * print_strings.c: Now uses get_true_section_name() so\n      we report on any compression used.\n2020-04-03  David Anderson \n    * runtests.sh: Added esb to the build of selfmc as macro check\n      now uses esb.c. Made the dwarfdump tests mention of update 'mv'\n      commands be conditional on having actually found a difference\n      (having them show when no difference was pointlessly confusing). \n2020-04-03  David Anderson \n    * dwarfdump.c: print_aranges() now uses the new form and returns\n      a DW_DLV_* value.\n    * globals.h: print_aranges returns a value and has a Dwarf_Error*\n      second argument now.\n    * print_aranges.c: No longer calls print_error() but instead\n      returns a DW_DLV to dwarfdump.c. \n2020-04-03  David Anderson \n    * dwarfdump.c,glflags.h,globals.h,print_die.c,print_frames.c,\n      print_locs.c,print_reloc.c,print_reloc_decls.h,print_static_funcs.c:\n      Fix indent errors and remove trailing whitespace.\n2020-04-02  David Anderson \n    * addrmap.c: Ensure it wn't try to use a null input to addr_map_destroy().\n    * dwarfdump.1: Add documentation on running dwarfdump on split-dwarf\n      objects (See DWARF5 standard, section 6.3).\n    * dwarfdump.c (process_one_file):Applyingthe new error-return scheme\n      to dwarf_frames.c required serious revisions and refactoring.\n    * dwconf_using_functions.h: The declaration of print_frames()\n      changed.\n    * glflags.h: gf_debug_addr_missing_search_by_address,\n      gf_error_code_in_name_search_by_address, and\n      gf_all_cus_seen_search_by_address are here now instead of\n      being hard to reason about global/local data.\n    * glflags.c: Initializes the three fields.\n    * globals.h: Revised declaration of print_frames() and\n      get_proc_name.\n      Removed the declaration of current_cu_die_for_print_frames.\n    * print_die.c(print_attribute): Properly use the return value\n      of dwarfdump function get_proc_name_by_die().\n      Also renamed a small number of local variables in\n      print_exprloc_content() to make the code more\n      readable( tempud -> exprlength, tempud->fileindex);\n    * print frames.c: Major revisions to clarify\n      data lifetimes and to return DW_DLV_ERROR \n      to let higher levels clean up for themselves.\n      Stop returning true/false and return DW_DLV_OK\n      or DW_DLV_NO_ENTRY with respect to finding\n      procedure names from code addresses`.\n    * print_locs.c: Added an accidentally-omitted\n      esb_constructor for secname.`\n    * print_ranges.c: Move acquiring section name down\n      after the first call of dwarf_get_ranges() so\n      we get the true name with any compression involed\n      reported.\n    * print_sections.c: Removed Dwarf_Die current_cu_die_for_print_frames,\n      it is no longer needed.\n    * print_reloc.c: Was failing to free locally allocated\n      space in some places in print_relocinfo_32().\n2020-03-30  David Anderson \n    * dwarfdump.c,dwconf_using_functions.h,\n      globals.h,print_die.c,print_frames.c,print_frames.h,\n      print_locs.c: Applyingthe new error-return scheme\n      to print_locs.c involves a number of changes\n      beyond print_locs.c itself.\n2020-03-29  David Anderson \n    * dwarfdump.c: Change several section reports to the\n      new approach of errors propagating back to dwarfdump\n      process_one_file().\n    * globals.h: print_debug_names(), print_object_header()\n      print_relocinfo(),print_tag_attributes_usage()\n      print_attributes_encoding() all now return status\n      DW_DLV_OK etc as appropriate.\n    * print_die.c(print_attributes_encoding,\n      print_tag_attributes_usage): Implement passing status back\n      to process_one_file().\n    * print_dnames.c,print_reloc.c,print_reloc_decls.h: \n      Implement passing status back\n      to process_one_file().\n2020-03-28  David Anderson \n    * dwarfdump.c: print debuglink and print str_offsets\n      now getting dwarf status and Dwarf_Error back.\n    * dwarf_globals.h: Revised prototype for \n      print_str_offsets_section().\n    * print_str_offsets.c: Now returns libdwarf status\n      and lets dwarfdump print the error if there is one.\n2020-03-28  David Anderson \n    * dwarfdump.c(process_one_file): Beginning a\n      project to pass libdwarf status all the way back\n      to dwarfdump.c. Enables more flexibility in\n      printing and better ability to dealloc memory.\n    * globals.h: print_static_funcs(), print_static_vars(),\n      print_types(), and print_weaknames() now return int\n      and pass in a Dwarf_Error.\n    * print_static_funcs.c,print_static_vars.c,\n      print_types.c, print_weaknames.c: Implement\n      passing back (to dwarfdump.c) of \n      libdwarf status and Dwarf_Error by returning\n      as required when DW_DLV_ERROR encountered.\n2020-03-27  David Anderson \n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: regenerated with latest\n      version date string.\n2020-03-27  David Anderson \n    * print_die.c: Cleaned trailing whitespace and an\n      indent error.\n2020-03-27  David Anderson \n    * print_die.c: Now does a better job of cleaning\n      up libdwarf data it requested when there is\n      a serious DWARF error.\n2020-03-26  David Anderson \n    * print_ranges.c: For a particular serious error/corruption\n      print a detailed error message,\n      dwarf_dealloc() the Dwarf_Error instance\n      and skip to the next\n      section to continue. \n2020-03-26  David Anderson \n    * dwarfdump.c: Now calls the new free_all_dwconf()\n      to avoid leaking memory. should_skip_this_cu()\n      ensures it does not leak.\n    * dwconf.c: Use struct esb to build a string, avoid\n      leaving a static string pointer around.\n      Add free_all_dwconf() so the dwconf malloc\n      space can be cleaned up at end of run.\n    * dwconf.h: Declare free_all_dwconf().\n    * print_frames.c(get_proc_name): Add loopok variable so the loop\n      on cu contexts can stop early when a serious\n      error is encountered. The procedure name is not\n      very critical, just nice to have.\n      Ensured no leaks in dwarfdump here.\n    * print_lines.c: When an error but we wish to continue\n      ensure the Dwarf_Error is dealloc-d.\n    * print_pubnames.c: Ensure no leaks on error from libdwarf.\n2020-03-25  David Anderson \n    * print_die.c,print_lines.c,print_pubnames.c:\n      Fix indents and remove trailing whitespace.\n    * print_frames.c : Fix whitespace and ensure\n      a return of DW_DLV_ERROR (which will\n      basically be ignored anyway) gets a dwarf_dealloc\n      applied to the Dwarf_Error argument.\n2020-03-24  David Anderson \n    * print_lines.c: Added a dwarf_dealloc DW DLA STRING\n      that had been overlooked.\n2020-03-24  David Anderson\n    * print_die.c: Ensuring that when an error is\n      created it gets dealloc-d.\n    * print_gdbindex.c(print_gdb_index): It was failing to dealloc\n      the data it requested from libdwarf.\n2020-03-23  David Anderson\n    * print_die.c: More cases trying to continue after error.\n      And ensuring no dwarf leakages.\n    * print_frames.c: More accurate error report (one place).\n    * print_pubnames.c: Fixing leaks and making some error\n      message more precise (showing values).\n2020-03-21  David Anderson\n    * dwarfdump.c:Add flag_data_post_cleanup() in a few\n      more places early termination situations.\n    * print_abbrevs.c: Move some variables to the most\n      local scope. Revise the while loop so we can\n      ensure local alloc cleaned up in case of error.\n      Remove pointless duplicate tests for zero abbrev_code.\n    * print_die_stack: Refactor, adding dealloc_die_stack()\n      and calling it where needed to free up local malloc\n      data.\n    * print_frames.c: Add more dwarf_fde_cie_list_dealloc()\n      where appropriate.\n2020-03-20  David Anderson\n    * print_aranges.c: In case of error was not cleaning\n      up allocations immediately in all cases.\n2020-03-20  David Anderson\n    * print_frames.c,print_dgbindex.c,print_macros.c,\n      print_pubnames.c,print_ranges.c,print_reloc.c,\n      sanitized.c,tag_attr.c,testesb.c,\n      uri.c: Remove use of esb_append_printf()\n      and use esb_append_printf_i etc instead.\n      Then null device will never be set up.\n2020-03-19  David Anderson\n    * globals.h: Using parens in the DROP_ERROR_INSTANCE\n      macro to avoid accidental side effects.\n    * print_die.c: Now uses more localized pointers\n      where possible to make understanding the code simpler.\n      Much more careful to dwarf_dealloc things in\n      the face of errors in the DWARF and early\n      termination of dwarfdump.\n    * print_lines.c: Much more careful to dwarf_dealloc\n      things in case of error.\n2020-03-17:   David Anderson\n    * dwarfdump.c: Report the number of major errors\n      more accurately.\n    * print_die.c: Report the number of major errors\n      more accurately.\n    * print_pubnames.c: Revise certain if/then/else\n      to make the flow clearer.\n2020-03-16:   David Anderson\n    * print_ranges.c: Added a dealloc of rangeset,DW_DLA_RANGES.\n2020-03-15:   David Anderson\n    * glflags.c: Now defaults to not printing the global\n      alloc sums. Use --print-alloc-sums option to dwarfdump\n      to print them (ensure GLOBAL_ALLOC_SUMS defined\n      in libdwarf/dwarf_alloc.c). \n2020-03-15:   David Anderson\n    * print_pubnames.c: Reformat a too-long line.\n2020-03-14:   David Anderson\n    * dwarfdump.c: Changed an argument name in the print_error*\n      group of functions to reflect the real meaning,\n      dwarf_code -> dwarf_ret_val.\n    * print_aranges.c (print_aranges): Only call dwarf_dealloc() in\n      case pa_error is non-null.\n    * print_die: Initialize no_of_elements at long last.\n    * print_pubnames.c: A code line was ... long. 2 lines now.\n2020-03-12:   David Anderson\n    * print_abbrevs.c: Add zero of dealloc'd pointer.\n2020-03-12:   David Anderson\n    * dwarfdump.c: Simplified check_for_major_errors().\n      Deleted some #if 0 code.\n    * print_die.c: Fiexed indent and trailing whitespace.\n    * print_macro.c: Deleted a bogus \n      dwarf_dealloc_macro_context() call.\n2020-03-12:   David Anderson\n    * print_die.c: Small changes to cleanup DIE allocations\n      so not relying on de_alloc_tree.\n2020-03-12:   David Anderson\n    * print_aranges.c:  Fixed trailing whitespace and indents.\n2020-03-12:   David Anderson\n    * esb.c, dwarfdump.c: Fixed trailing whitespace and indents.\n2020-03-12:   David Anderson\n    * print_str_offsets.c: Clean up by doing\n      proper dealloc calls instead of relying\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_pubnames.c: Clean up by doing\n      proper dealloc calls instead of relying\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_macro.c: Clean up by doing\n      proper dealloc calls instead of relying\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_lines.c: Eliminate leaks that relied\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * makename.c: Correct some comments.\n2020-03-12:   David Anderson\n    * print_aranges.c: Eliminate leaks that relied\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_abbrevs.c: Eliminate leaks that relied\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * command_options.h, command_options.c: Adds\n      uri_data_constructor() and uri_data_destructor()\n      to avoid an old memory leak (called from dwarfdump.c).\n2020-03-12:   David Anderson\n    * dwarfdump.c: Cleans up old and small memory\n      leaks and simplifies the code as well.\n2020-03-09:   David Anderson\n    * command_options.c: Implements two options primarily for\n      dwarfdump developers: --suppress-de-alloc-tree \n      and --print-alloc-sums.\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: regenerated with latest\n      version date string.\n    * dwarfdump.c: Implements the two new options.\n    * glflags.c,glflags.h: declares and instantiates\n      a new global flag gf_print_alloc_sums for the new option\n      --print-alloc-sums.\n    * print_die.c: Arranged correct dwarf_dealloc of\n      DW_DLA_ERROR errors when calling dwarf_formudata/sdata\n      and discarding errors.\n2020-02-25:   David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h dwarfdump-tt-ext-table.h dwarfdump-tt-table.h:\n      updated date string.\n2020-02-25:   David Anderson\n    * esb.c: Slight corrections so a %-12s will ignore the -12\n      if the string to be inserted is more than 11 bytes long.\n      Allowed use of UNUSEDARG.\n    * runtests.sh: Restore the running of the testesb.c\n      test program.\n    * testesb.c: Added a new test case specifically for\n      testing the change in esb.c. Eliminated the\n      unneeded tests on allocation-size, that was not\n      helpful, yet was tedious to make meaningful.\n2020-02-20:   David Anderson\n    * print_die.c: Removed the last snprintf the required\n      fixed spaces and now use esb functions to do the\n      message creation.\n2020-02-19:   David Anderson\n    * checkutil.c,common.c,naming.c,print_abbrevs.c,print_die.c,\n      print_lines.c: Removed the ORIGINAL_SPRINTF\n      versions in favor\n      of esb_append_printf_[usi] versions. \n      We have not been using the s[n]printf\n      versions for a while now. \n2020-02-16:   David Anderson\n    * globals.h: Adds DWVERSION5 to use with testing for\n      version number details (which matters when calling \n      dwarf_srcfiles())\n    * print_die.c: Now recognizes that DWARF5 is different\n      from earlier versions in the way dwarf_srcfiles()\n      array of string pointers is to be used.\n      Refactored the srcfiles checking to its own\n      function to simplify reading the code.\n2020-02-13:   David Anderson\n    * dwarf_names.c dwarf_names.c,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: regenerated with new\n      date string.\n2020-01-27:   David Anderson\n    * print_die.c: Now attributes the correct actual form\n      in more places (meaning in error messages, here and\n      in the previous commit)..\n2020-01-25:   David Anderson\n    * print_die.c: Now attributes the correct actual form\n      name (as opposed to a vaguely generic FORM name)\n2020-01-16:   David Anderson\n    * print_die.c: Now ensures local Dwarf_Sig8\n      variables are always initialized with zero bytes.\n      This does not fix bugs, but it makes the code easier\n      for the reader to reason about.\n    * testobjLE32PE.test.c: Removed trailing whitespace\n      and fixed indentation errors.\n2020-01-14:\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,dwarfdump-tt-table.h:\n      Updated version string.\n2020-01-05:\n    * dwconf.c: Fix CoveritySan CID 206594 resource leak\n      if an error reading dwarfdump.conf.\n    * sanitized.c(no_questionable_chars): Fixed CoverityScan\n      CID 206595. The code was\n      failing to sanitize % characters: the test for %\n      has been moved up a few lines.\n      do_sanity_insert() had the same problem with %. Fixed.\n      And do_sanity_insert() had a final line of unreachable\n      code; now fixed by simplifying the code (an ASSERT\n      added in a comment). Coverity Scan CID 206596.\n    * print_die.c(traverse_one_die): Was failing to check\n      for the normal dwarf return int and letting \n      next code deal with the fallout (and leak an error\n      record). Now we check and avoid any leak or surprise.      \n      Coverity Scan CID 20659\n\n\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#include \"dwarf.h\"\n\n#include \"libdwarf.h\"\n\n/* ARGSUSED */\nint\ndwarf_get_TAG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_TAG_array_type:\n        *s_out = \"DW_TAG_array_type\";\n        return DW_DLV_OK;\n    case DW_TAG_class_type:\n        *s_out = \"DW_TAG_class_type\";\n        return DW_DLV_OK;\n    case DW_TAG_entry_point:\n        *s_out = \"DW_TAG_entry_point\";\n        return DW_DLV_OK;\n    case DW_TAG_enumeration_type:\n        *s_out = \"DW_TAG_enumeration_type\";\n        return DW_DLV_OK;\n    case DW_TAG_formal_parameter:\n        *s_out = \"DW_TAG_formal_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_declaration:\n        *s_out = \"DW_TAG_imported_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_label:\n        *s_out = \"DW_TAG_label\";\n        return DW_DLV_OK;\n    case DW_TAG_lexical_block:\n        *s_out = \"DW_TAG_lexical_block\";\n        return DW_DLV_OK;\n    case DW_TAG_member:\n        *s_out = \"DW_TAG_member\";\n        return DW_DLV_OK;\n    case DW_TAG_pointer_type:\n        *s_out = \"DW_TAG_pointer_type\";\n        return DW_DLV_OK;\n    case DW_TAG_reference_type:\n        *s_out = \"DW_TAG_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_compile_unit:\n        *s_out = \"DW_TAG_compile_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_string_type:\n        *s_out = \"DW_TAG_string_type\";\n        return DW_DLV_OK;\n    case DW_TAG_structure_type:\n        *s_out = \"DW_TAG_structure_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subroutine_type:\n        *s_out = \"DW_TAG_subroutine_type\";\n        return DW_DLV_OK;\n    case DW_TAG_typedef:\n        *s_out = \"DW_TAG_typedef\";\n        return DW_DLV_OK;\n    case DW_TAG_union_type:\n        *s_out = \"DW_TAG_union_type\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_parameters:\n        *s_out = \"DW_TAG_unspecified_parameters\";\n        return DW_DLV_OK;\n    case DW_TAG_variant:\n        *s_out = \"DW_TAG_variant\";\n        return DW_DLV_OK;\n    case DW_TAG_common_block:\n        *s_out = \"DW_TAG_common_block\";\n        return DW_DLV_OK;\n    case DW_TAG_common_inclusion:\n        *s_out = \"DW_TAG_common_inclusion\";\n        return DW_DLV_OK;\n    case DW_TAG_inheritance:\n        *s_out = \"DW_TAG_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_inlined_subroutine:\n        *s_out = \"DW_TAG_inlined_subroutine\";\n        return DW_DLV_OK;\n    case DW_TAG_module:\n        *s_out = \"DW_TAG_module\";\n        return DW_DLV_OK;\n    case DW_TAG_ptr_to_member_type:\n        *s_out = \"DW_TAG_ptr_to_member_type\";\n        return DW_DLV_OK;\n    case DW_TAG_set_type:\n        *s_out = \"DW_TAG_set_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subrange_type:\n        *s_out = \"DW_TAG_subrange_type\";\n        return DW_DLV_OK;\n    case DW_TAG_with_stmt:\n        *s_out = \"DW_TAG_with_stmt\";\n        return DW_DLV_OK;\n    case DW_TAG_access_declaration:\n        *s_out = \"DW_TAG_access_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_base_type:\n        *s_out = \"DW_TAG_base_type\";\n        return DW_DLV_OK;\n    case DW_TAG_catch_block:\n        *s_out = \"DW_TAG_catch_block\";\n        return DW_DLV_OK;\n    case DW_TAG_const_type:\n        *s_out = \"DW_TAG_const_type\";\n        return DW_DLV_OK;\n    case DW_TAG_constant:\n        *s_out = \"DW_TAG_constant\";\n        return DW_DLV_OK;\n    case DW_TAG_enumerator:\n        *s_out = \"DW_TAG_enumerator\";\n        return DW_DLV_OK;\n    case DW_TAG_file_type:\n        *s_out = \"DW_TAG_file_type\";\n        return DW_DLV_OK;\n    case DW_TAG_friend:\n        *s_out = \"DW_TAG_friend\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist:\n        *s_out = \"DW_TAG_namelist\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist_item:\n        *s_out = \"DW_TAG_namelist_item\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2c. DW_TAG_namelist_items */\n    case DW_TAG_packed_type:\n        *s_out = \"DW_TAG_packed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subprogram:\n        *s_out = \"DW_TAG_subprogram\";\n        return DW_DLV_OK;\n    case DW_TAG_template_type_parameter:\n        *s_out = \"DW_TAG_template_type_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2f. DW_TAG_template_type_param */\n    case DW_TAG_template_value_parameter:\n        *s_out = \"DW_TAG_template_value_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x30. DW_TAG_template_value_param */\n    case DW_TAG_thrown_type:\n        *s_out = \"DW_TAG_thrown_type\";\n        return DW_DLV_OK;\n    case DW_TAG_try_block:\n        *s_out = \"DW_TAG_try_block\";\n        return DW_DLV_OK;\n    case DW_TAG_variant_part:\n        *s_out = \"DW_TAG_variant_part\";\n        return DW_DLV_OK;\n    case DW_TAG_variable:\n        *s_out = \"DW_TAG_variable\";\n        return DW_DLV_OK;\n    case DW_TAG_volatile_type:\n        *s_out = \"DW_TAG_volatile_type\";\n        return DW_DLV_OK;\n    case DW_TAG_dwarf_procedure:\n        *s_out = \"DW_TAG_dwarf_procedure\";\n        return DW_DLV_OK;\n    case DW_TAG_restrict_type:\n        *s_out = \"DW_TAG_restrict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_interface_type:\n        *s_out = \"DW_TAG_interface_type\";\n        return DW_DLV_OK;\n    case DW_TAG_namespace:\n        *s_out = \"DW_TAG_namespace\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_module:\n        *s_out = \"DW_TAG_imported_module\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_type:\n        *s_out = \"DW_TAG_unspecified_type\";\n        return DW_DLV_OK;\n    case DW_TAG_partial_unit:\n        *s_out = \"DW_TAG_partial_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_unit:\n        *s_out = \"DW_TAG_imported_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_mutable_type:\n        *s_out = \"DW_TAG_mutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_condition:\n        *s_out = \"DW_TAG_condition\";\n        return DW_DLV_OK;\n    case DW_TAG_shared_type:\n        *s_out = \"DW_TAG_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_type_unit:\n        *s_out = \"DW_TAG_type_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_rvalue_reference_type:\n        *s_out = \"DW_TAG_rvalue_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_template_alias:\n        *s_out = \"DW_TAG_template_alias\";\n        return DW_DLV_OK;\n    case DW_TAG_coarray_type:\n        *s_out = \"DW_TAG_coarray_type\";\n        return DW_DLV_OK;\n    case DW_TAG_generic_subrange:\n        *s_out = \"DW_TAG_generic_subrange\";\n        return DW_DLV_OK;\n    case DW_TAG_dynamic_type:\n        *s_out = \"DW_TAG_dynamic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_atomic_type:\n        *s_out = \"DW_TAG_atomic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site:\n        *s_out = \"DW_TAG_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site_parameter:\n        *s_out = \"DW_TAG_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_skeleton_unit:\n        *s_out = \"DW_TAG_skeleton_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_immutable_type:\n        *s_out = \"DW_TAG_immutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_lo_user:\n        *s_out = \"DW_TAG_lo_user\";\n        return DW_DLV_OK;\n    case DW_TAG_MIPS_loop:\n        *s_out = \"DW_TAG_MIPS_loop\";\n        return DW_DLV_OK;\n    case DW_TAG_HP_array_descriptor:\n        *s_out = \"DW_TAG_HP_array_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_format_label:\n        *s_out = \"DW_TAG_format_label\";\n        return DW_DLV_OK;\n    case DW_TAG_function_template:\n        *s_out = \"DW_TAG_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_class_template:\n        *s_out = \"DW_TAG_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_BINCL:\n        *s_out = \"DW_TAG_GNU_BINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_EINCL:\n        *s_out = \"DW_TAG_GNU_EINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_template_template_parameter:\n        *s_out = \"DW_TAG_GNU_template_template_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x4106. DW_TAG_GNU_template_template_param */\n    case DW_TAG_GNU_template_parameter_pack:\n        *s_out = \"DW_TAG_GNU_template_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_formal_parameter_pack:\n        *s_out = \"DW_TAG_GNU_formal_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site:\n        *s_out = \"DW_TAG_GNU_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site_parameter:\n        *s_out = \"DW_TAG_GNU_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_function_template:\n        *s_out = \"DW_TAG_SUN_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_class_template:\n        *s_out = \"DW_TAG_SUN_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_struct_template:\n        *s_out = \"DW_TAG_SUN_struct_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_union_template:\n        *s_out = \"DW_TAG_SUN_union_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_indirect_inheritance:\n        *s_out = \"DW_TAG_SUN_indirect_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_codeflags:\n        *s_out = \"DW_TAG_SUN_codeflags\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_memop_info:\n        *s_out = \"DW_TAG_SUN_memop_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_omp_child_func:\n        *s_out = \"DW_TAG_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_rtti_descriptor:\n        *s_out = \"DW_TAG_SUN_rtti_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor_info:\n        *s_out = \"DW_TAG_SUN_dtor_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor:\n        *s_out = \"DW_TAG_SUN_dtor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_f90_interface:\n        *s_out = \"DW_TAG_SUN_f90_interface\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_fortran_vax_structure:\n        *s_out = \"DW_TAG_SUN_fortran_vax_structure\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_hi:\n        *s_out = \"DW_TAG_SUN_hi\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_mwa_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_mwa_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rev_carry_type:\n        *s_out = \"DW_TAG_ALTIUM_rev_carry_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rom:\n        *s_out = \"DW_TAG_ALTIUM_rom\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_shared_type:\n        *s_out = \"DW_TAG_upc_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_strict_type:\n        *s_out = \"DW_TAG_upc_strict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_relaxed_type:\n        *s_out = \"DW_TAG_upc_relaxed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_kanji_type:\n        *s_out = \"DW_TAG_PGI_kanji_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_interface_block:\n        *s_out = \"DW_TAG_PGI_interface_block\";\n        return DW_DLV_OK;\n    case DW_TAG_hi_user:\n        *s_out = \"DW_TAG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_children_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_children_no:\n        *s_out = \"DW_children_no\";\n        return DW_DLV_OK;\n    case DW_children_yes:\n        *s_out = \"DW_children_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FORM_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FORM_addr:\n        *s_out = \"DW_FORM_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_block2:\n        *s_out = \"DW_FORM_block2\";\n        return DW_DLV_OK;\n    case DW_FORM_block4:\n        *s_out = \"DW_FORM_block4\";\n        return DW_DLV_OK;\n    case DW_FORM_data2:\n        *s_out = \"DW_FORM_data2\";\n        return DW_DLV_OK;\n    case DW_FORM_data4:\n        *s_out = \"DW_FORM_data4\";\n        return DW_DLV_OK;\n    case DW_FORM_data8:\n        *s_out = \"DW_FORM_data8\";\n        return DW_DLV_OK;\n    case DW_FORM_string:\n        *s_out = \"DW_FORM_string\";\n        return DW_DLV_OK;\n    case DW_FORM_block:\n        *s_out = \"DW_FORM_block\";\n        return DW_DLV_OK;\n    case DW_FORM_block1:\n        *s_out = \"DW_FORM_block1\";\n        return DW_DLV_OK;\n    case DW_FORM_data1:\n        *s_out = \"DW_FORM_data1\";\n        return DW_DLV_OK;\n    case DW_FORM_flag:\n        *s_out = \"DW_FORM_flag\";\n        return DW_DLV_OK;\n    case DW_FORM_sdata:\n        *s_out = \"DW_FORM_sdata\";\n        return DW_DLV_OK;\n    case DW_FORM_strp:\n        *s_out = \"DW_FORM_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_udata:\n        *s_out = \"DW_FORM_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_addr:\n        *s_out = \"DW_FORM_ref_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_ref1:\n        *s_out = \"DW_FORM_ref1\";\n        return DW_DLV_OK;\n    case DW_FORM_ref2:\n        *s_out = \"DW_FORM_ref2\";\n        return DW_DLV_OK;\n    case DW_FORM_ref4:\n        *s_out = \"DW_FORM_ref4\";\n        return DW_DLV_OK;\n    case DW_FORM_ref8:\n        *s_out = \"DW_FORM_ref8\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_udata:\n        *s_out = \"DW_FORM_ref_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_indirect:\n        *s_out = \"DW_FORM_indirect\";\n        return DW_DLV_OK;\n    case DW_FORM_sec_offset:\n        *s_out = \"DW_FORM_sec_offset\";\n        return DW_DLV_OK;\n    case DW_FORM_exprloc:\n        *s_out = \"DW_FORM_exprloc\";\n        return DW_DLV_OK;\n    case DW_FORM_flag_present:\n        *s_out = \"DW_FORM_flag_present\";\n        return DW_DLV_OK;\n    case DW_FORM_strx:\n        *s_out = \"DW_FORM_strx\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx:\n        *s_out = \"DW_FORM_addrx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup4:\n        *s_out = \"DW_FORM_ref_sup4\";\n        return DW_DLV_OK;\n    case DW_FORM_strp_sup:\n        *s_out = \"DW_FORM_strp_sup\";\n        return DW_DLV_OK;\n    case DW_FORM_data16:\n        *s_out = \"DW_FORM_data16\";\n        return DW_DLV_OK;\n    case DW_FORM_line_strp:\n        *s_out = \"DW_FORM_line_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sig8:\n        *s_out = \"DW_FORM_ref_sig8\";\n        return DW_DLV_OK;\n    case DW_FORM_implicit_const:\n        *s_out = \"DW_FORM_implicit_const\";\n        return DW_DLV_OK;\n    case DW_FORM_loclistx:\n        *s_out = \"DW_FORM_loclistx\";\n        return DW_DLV_OK;\n    case DW_FORM_rnglistx:\n        *s_out = \"DW_FORM_rnglistx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup8:\n        *s_out = \"DW_FORM_ref_sup8\";\n        return DW_DLV_OK;\n    case DW_FORM_strx1:\n        *s_out = \"DW_FORM_strx1\";\n        return DW_DLV_OK;\n    case DW_FORM_strx2:\n        *s_out = \"DW_FORM_strx2\";\n        return DW_DLV_OK;\n    case DW_FORM_strx3:\n        *s_out = \"DW_FORM_strx3\";\n        return DW_DLV_OK;\n    case DW_FORM_strx4:\n        *s_out = \"DW_FORM_strx4\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx1:\n        *s_out = \"DW_FORM_addrx1\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx2:\n        *s_out = \"DW_FORM_addrx2\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx3:\n        *s_out = \"DW_FORM_addrx3\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx4:\n        *s_out = \"DW_FORM_addrx4\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_addr_index:\n        *s_out = \"DW_FORM_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_str_index:\n        *s_out = \"DW_FORM_GNU_str_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_ref_alt:\n        *s_out = \"DW_FORM_GNU_ref_alt\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_strp_alt:\n        *s_out = \"DW_FORM_GNU_strp_alt\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_AT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_AT_sibling:\n        *s_out = \"DW_AT_sibling\";\n        return DW_DLV_OK;\n    case DW_AT_location:\n        *s_out = \"DW_AT_location\";\n        return DW_DLV_OK;\n    case DW_AT_name:\n        *s_out = \"DW_AT_name\";\n        return DW_DLV_OK;\n    case DW_AT_ordering:\n        *s_out = \"DW_AT_ordering\";\n        return DW_DLV_OK;\n    case DW_AT_subscr_data:\n        *s_out = \"DW_AT_subscr_data\";\n        return DW_DLV_OK;\n    case DW_AT_byte_size:\n        *s_out = \"DW_AT_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_bit_offset:\n        *s_out = \"DW_AT_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_bit_size:\n        *s_out = \"DW_AT_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_element_list:\n        *s_out = \"DW_AT_element_list\";\n        return DW_DLV_OK;\n    case DW_AT_stmt_list:\n        *s_out = \"DW_AT_stmt_list\";\n        return DW_DLV_OK;\n    case DW_AT_low_pc:\n        *s_out = \"DW_AT_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_high_pc:\n        *s_out = \"DW_AT_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_language:\n        *s_out = \"DW_AT_language\";\n        return DW_DLV_OK;\n    case DW_AT_member:\n        *s_out = \"DW_AT_member\";\n        return DW_DLV_OK;\n    case DW_AT_discr:\n        *s_out = \"DW_AT_discr\";\n        return DW_DLV_OK;\n    case DW_AT_discr_value:\n        *s_out = \"DW_AT_discr_value\";\n        return DW_DLV_OK;\n    case DW_AT_visibility:\n        *s_out = \"DW_AT_visibility\";\n        return DW_DLV_OK;\n    case DW_AT_import:\n        *s_out = \"DW_AT_import\";\n        return DW_DLV_OK;\n    case DW_AT_string_length:\n        *s_out = \"DW_AT_string_length\";\n        return DW_DLV_OK;\n    case DW_AT_common_reference:\n        *s_out = \"DW_AT_common_reference\";\n        return DW_DLV_OK;\n    case DW_AT_comp_dir:\n        *s_out = \"DW_AT_comp_dir\";\n        return DW_DLV_OK;\n    case DW_AT_const_value:\n        *s_out = \"DW_AT_const_value\";\n        return DW_DLV_OK;\n    case DW_AT_containing_type:\n        *s_out = \"DW_AT_containing_type\";\n        return DW_DLV_OK;\n    case DW_AT_default_value:\n        *s_out = \"DW_AT_default_value\";\n        return DW_DLV_OK;\n    case DW_AT_inline:\n        *s_out = \"DW_AT_inline\";\n        return DW_DLV_OK;\n    case DW_AT_is_optional:\n        *s_out = \"DW_AT_is_optional\";\n        return DW_DLV_OK;\n    case DW_AT_lower_bound:\n        *s_out = \"DW_AT_lower_bound\";\n        return DW_DLV_OK;\n    case DW_AT_producer:\n        *s_out = \"DW_AT_producer\";\n        return DW_DLV_OK;\n    case DW_AT_prototyped:\n        *s_out = \"DW_AT_prototyped\";\n        return DW_DLV_OK;\n    case DW_AT_return_addr:\n        *s_out = \"DW_AT_return_addr\";\n        return DW_DLV_OK;\n    case DW_AT_start_scope:\n        *s_out = \"DW_AT_start_scope\";\n        return DW_DLV_OK;\n    case DW_AT_bit_stride:\n        *s_out = \"DW_AT_bit_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2e. DW_AT_stride_size */\n    case DW_AT_upper_bound:\n        *s_out = \"DW_AT_upper_bound\";\n        return DW_DLV_OK;\n    case DW_AT_abstract_origin:\n        *s_out = \"DW_AT_abstract_origin\";\n        return DW_DLV_OK;\n    case DW_AT_accessibility:\n        *s_out = \"DW_AT_accessibility\";\n        return DW_DLV_OK;\n    case DW_AT_address_class:\n        *s_out = \"DW_AT_address_class\";\n        return DW_DLV_OK;\n    case DW_AT_artificial:\n        *s_out = \"DW_AT_artificial\";\n        return DW_DLV_OK;\n    case DW_AT_base_types:\n        *s_out = \"DW_AT_base_types\";\n        return DW_DLV_OK;\n    case DW_AT_calling_convention:\n        *s_out = \"DW_AT_calling_convention\";\n        return DW_DLV_OK;\n    case DW_AT_count:\n        *s_out = \"DW_AT_count\";\n        return DW_DLV_OK;\n    case DW_AT_data_member_location:\n        *s_out = \"DW_AT_data_member_location\";\n        return DW_DLV_OK;\n    case DW_AT_decl_column:\n        *s_out = \"DW_AT_decl_column\";\n        return DW_DLV_OK;\n    case DW_AT_decl_file:\n        *s_out = \"DW_AT_decl_file\";\n        return DW_DLV_OK;\n    case DW_AT_decl_line:\n        *s_out = \"DW_AT_decl_line\";\n        return DW_DLV_OK;\n    case DW_AT_declaration:\n        *s_out = \"DW_AT_declaration\";\n        return DW_DLV_OK;\n    case DW_AT_discr_list:\n        *s_out = \"DW_AT_discr_list\";\n        return DW_DLV_OK;\n    case DW_AT_encoding:\n        *s_out = \"DW_AT_encoding\";\n        return DW_DLV_OK;\n    case DW_AT_external:\n        *s_out = \"DW_AT_external\";\n        return DW_DLV_OK;\n    case DW_AT_frame_base:\n        *s_out = \"DW_AT_frame_base\";\n        return DW_DLV_OK;\n    case DW_AT_friend:\n        *s_out = \"DW_AT_friend\";\n        return DW_DLV_OK;\n    case DW_AT_identifier_case:\n        *s_out = \"DW_AT_identifier_case\";\n        return DW_DLV_OK;\n    case DW_AT_macro_info:\n        *s_out = \"DW_AT_macro_info\";\n        return DW_DLV_OK;\n    case DW_AT_namelist_item:\n        *s_out = \"DW_AT_namelist_item\";\n        return DW_DLV_OK;\n    case DW_AT_priority:\n        *s_out = \"DW_AT_priority\";\n        return DW_DLV_OK;\n    case DW_AT_segment:\n        *s_out = \"DW_AT_segment\";\n        return DW_DLV_OK;\n    case DW_AT_specification:\n        *s_out = \"DW_AT_specification\";\n        return DW_DLV_OK;\n    case DW_AT_static_link:\n        *s_out = \"DW_AT_static_link\";\n        return DW_DLV_OK;\n    case DW_AT_type:\n        *s_out = \"DW_AT_type\";\n        return DW_DLV_OK;\n    case DW_AT_use_location:\n        *s_out = \"DW_AT_use_location\";\n        return DW_DLV_OK;\n    case DW_AT_variable_parameter:\n        *s_out = \"DW_AT_variable_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_virtuality:\n        *s_out = \"DW_AT_virtuality\";\n        return DW_DLV_OK;\n    case DW_AT_vtable_elem_location:\n        *s_out = \"DW_AT_vtable_elem_location\";\n        return DW_DLV_OK;\n    case DW_AT_allocated:\n        *s_out = \"DW_AT_allocated\";\n        return DW_DLV_OK;\n    case DW_AT_associated:\n        *s_out = \"DW_AT_associated\";\n        return DW_DLV_OK;\n    case DW_AT_data_location:\n        *s_out = \"DW_AT_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_byte_stride:\n        *s_out = \"DW_AT_byte_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x51. DW_AT_stride */\n    case DW_AT_entry_pc:\n        *s_out = \"DW_AT_entry_pc\";\n        return DW_DLV_OK;\n    case DW_AT_use_UTF8:\n        *s_out = \"DW_AT_use_UTF8\";\n        return DW_DLV_OK;\n    case DW_AT_extension:\n        *s_out = \"DW_AT_extension\";\n        return DW_DLV_OK;\n    case DW_AT_ranges:\n        *s_out = \"DW_AT_ranges\";\n        return DW_DLV_OK;\n    case DW_AT_trampoline:\n        *s_out = \"DW_AT_trampoline\";\n        return DW_DLV_OK;\n    case DW_AT_call_column:\n        *s_out = \"DW_AT_call_column\";\n        return DW_DLV_OK;\n    case DW_AT_call_file:\n        *s_out = \"DW_AT_call_file\";\n        return DW_DLV_OK;\n    case DW_AT_call_line:\n        *s_out = \"DW_AT_call_line\";\n        return DW_DLV_OK;\n    case DW_AT_description:\n        *s_out = \"DW_AT_description\";\n        return DW_DLV_OK;\n    case DW_AT_binary_scale:\n        *s_out = \"DW_AT_binary_scale\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_scale:\n        *s_out = \"DW_AT_decimal_scale\";\n        return DW_DLV_OK;\n    case DW_AT_small:\n        *s_out = \"DW_AT_small\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_sign:\n        *s_out = \"DW_AT_decimal_sign\";\n        return DW_DLV_OK;\n    case DW_AT_digit_count:\n        *s_out = \"DW_AT_digit_count\";\n        return DW_DLV_OK;\n    case DW_AT_picture_string:\n        *s_out = \"DW_AT_picture_string\";\n        return DW_DLV_OK;\n    case DW_AT_mutable:\n        *s_out = \"DW_AT_mutable\";\n        return DW_DLV_OK;\n    case DW_AT_threads_scaled:\n        *s_out = \"DW_AT_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_explicit:\n        *s_out = \"DW_AT_explicit\";\n        return DW_DLV_OK;\n    case DW_AT_object_pointer:\n        *s_out = \"DW_AT_object_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_endianity:\n        *s_out = \"DW_AT_endianity\";\n        return DW_DLV_OK;\n    case DW_AT_elemental:\n        *s_out = \"DW_AT_elemental\";\n        return DW_DLV_OK;\n    case DW_AT_pure:\n        *s_out = \"DW_AT_pure\";\n        return DW_DLV_OK;\n    case DW_AT_recursive:\n        *s_out = \"DW_AT_recursive\";\n        return DW_DLV_OK;\n    case DW_AT_signature:\n        *s_out = \"DW_AT_signature\";\n        return DW_DLV_OK;\n    case DW_AT_main_subprogram:\n        *s_out = \"DW_AT_main_subprogram\";\n        return DW_DLV_OK;\n    case DW_AT_data_bit_offset:\n        *s_out = \"DW_AT_data_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_const_expr:\n        *s_out = \"DW_AT_const_expr\";\n        return DW_DLV_OK;\n    case DW_AT_enum_class:\n        *s_out = \"DW_AT_enum_class\";\n        return DW_DLV_OK;\n    case DW_AT_linkage_name:\n        *s_out = \"DW_AT_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_bit_size:\n        *s_out = \"DW_AT_string_length_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_byte_size:\n        *s_out = \"DW_AT_string_length_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_rank:\n        *s_out = \"DW_AT_rank\";\n        return DW_DLV_OK;\n    case DW_AT_str_offsets_base:\n        *s_out = \"DW_AT_str_offsets_base\";\n        return DW_DLV_OK;\n    case DW_AT_addr_base:\n        *s_out = \"DW_AT_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_rnglists_base:\n        *s_out = \"DW_AT_rnglists_base\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_id:\n        *s_out = \"DW_AT_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_name:\n        *s_out = \"DW_AT_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_reference:\n        *s_out = \"DW_AT_reference\";\n        return DW_DLV_OK;\n    case DW_AT_rvalue_reference:\n        *s_out = \"DW_AT_rvalue_reference\";\n        return DW_DLV_OK;\n    case DW_AT_macros:\n        *s_out = \"DW_AT_macros\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_calls:\n        *s_out = \"DW_AT_call_all_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_source_calls:\n        *s_out = \"DW_AT_call_all_source_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_tail_calls:\n        *s_out = \"DW_AT_call_all_tail_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_return_pc:\n        *s_out = \"DW_AT_call_return_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_value:\n        *s_out = \"DW_AT_call_value\";\n        return DW_DLV_OK;\n    case DW_AT_call_origin:\n        *s_out = \"DW_AT_call_origin\";\n        return DW_DLV_OK;\n    case DW_AT_call_parameter:\n        *s_out = \"DW_AT_call_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_call_pc:\n        *s_out = \"DW_AT_call_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_tail_call:\n        *s_out = \"DW_AT_call_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_call_target:\n        *s_out = \"DW_AT_call_target\";\n        return DW_DLV_OK;\n    case DW_AT_call_target_clobbered:\n        *s_out = \"DW_AT_call_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_location:\n        *s_out = \"DW_AT_call_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_value:\n        *s_out = \"DW_AT_call_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_noreturn:\n        *s_out = \"DW_AT_noreturn\";\n        return DW_DLV_OK;\n    case DW_AT_alignment:\n        *s_out = \"DW_AT_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_export_symbols:\n        *s_out = \"DW_AT_export_symbols\";\n        return DW_DLV_OK;\n    case DW_AT_deleted:\n        *s_out = \"DW_AT_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_defaulted:\n        *s_out = \"DW_AT_defaulted\";\n        return DW_DLV_OK;\n    case DW_AT_loclists_base:\n        *s_out = \"DW_AT_loclists_base\";\n        return DW_DLV_OK;\n    case DW_AT_HP_block_index:\n        *s_out = \"DW_AT_HP_block_index\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2000. DW_AT_lo_user */\n    case DW_AT_MIPS_fde:\n        *s_out = \"DW_AT_MIPS_fde\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2001. DW_AT_HP_unmodifiable */\n    /* Skipping alternate spelling of value 0x2001. DW_AT_CPQ_discontig_ranges */\n    case DW_AT_MIPS_loop_begin:\n        *s_out = \"DW_AT_MIPS_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2002. DW_AT_CPQ_semantic_events */\n    case DW_AT_MIPS_tail_loop_begin:\n        *s_out = \"DW_AT_MIPS_tail_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2003. DW_AT_CPQ_split_lifetimes_var */\n    case DW_AT_MIPS_epilog_begin:\n        *s_out = \"DW_AT_MIPS_epilog_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2004. DW_AT_CPQ_split_lifetimes_rtn */\n    case DW_AT_MIPS_loop_unroll_factor:\n        *s_out = \"DW_AT_MIPS_loop_unroll_factor\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2005. DW_AT_CPQ_prologue_length */\n    case DW_AT_MIPS_software_pipeline_depth:\n        *s_out = \"DW_AT_MIPS_software_pipeline_depth\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_linkage_name:\n        *s_out = \"DW_AT_MIPS_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride:\n        *s_out = \"DW_AT_MIPS_stride\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_abstract_name:\n        *s_out = \"DW_AT_MIPS_abstract_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_clone_origin:\n        *s_out = \"DW_AT_MIPS_clone_origin\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_has_inlines:\n        *s_out = \"DW_AT_MIPS_has_inlines\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_byte:\n        *s_out = \"DW_AT_MIPS_stride_byte\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_elem:\n        *s_out = \"DW_AT_MIPS_stride_elem\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_ptr_dopetype:\n        *s_out = \"DW_AT_MIPS_ptr_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_allocatable_dopetype:\n        *s_out = \"DW_AT_MIPS_allocatable_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_assumed_shape_dopetype:\n        *s_out = \"DW_AT_MIPS_assumed_shape_dopetype\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2010. DW_AT_HP_actuals_stmt_list */\n    case DW_AT_MIPS_assumed_size:\n        *s_out = \"DW_AT_MIPS_assumed_size\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2011. DW_AT_HP_proc_per_section */\n    case DW_AT_HP_raw_data_ptr:\n        *s_out = \"DW_AT_HP_raw_data_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_HP_pass_by_reference:\n        *s_out = \"DW_AT_HP_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_level:\n        *s_out = \"DW_AT_HP_opt_level\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_version_id:\n        *s_out = \"DW_AT_HP_prof_version_id\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_flags:\n        *s_out = \"DW_AT_HP_opt_flags\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_low_pc:\n        *s_out = \"DW_AT_HP_cold_region_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_high_pc:\n        *s_out = \"DW_AT_HP_cold_region_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_all_variables_modifiable:\n        *s_out = \"DW_AT_HP_all_variables_modifiable\";\n        return DW_DLV_OK;\n    case DW_AT_HP_linkage_name:\n        *s_out = \"DW_AT_HP_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_flags:\n        *s_out = \"DW_AT_HP_prof_flags\";\n        return DW_DLV_OK;\n    case DW_AT_INTEL_other_endian:\n        *s_out = \"DW_AT_INTEL_other_endian\";\n        return DW_DLV_OK;\n    case DW_AT_sf_names:\n        *s_out = \"DW_AT_sf_names\";\n        return DW_DLV_OK;\n    case DW_AT_src_info:\n        *s_out = \"DW_AT_src_info\";\n        return DW_DLV_OK;\n    case DW_AT_mac_info:\n        *s_out = \"DW_AT_mac_info\";\n        return DW_DLV_OK;\n    case DW_AT_src_coords:\n        *s_out = \"DW_AT_src_coords\";\n        return DW_DLV_OK;\n    case DW_AT_body_begin:\n        *s_out = \"DW_AT_body_begin\";\n        return DW_DLV_OK;\n    case DW_AT_body_end:\n        *s_out = \"DW_AT_body_end\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_vector:\n        *s_out = \"DW_AT_GNU_vector\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded_by:\n        *s_out = \"DW_AT_GNU_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded_by:\n        *s_out = \"DW_AT_GNU_pt_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded:\n        *s_out = \"DW_AT_GNU_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded:\n        *s_out = \"DW_AT_GNU_pt_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locks_excluded:\n        *s_out = \"DW_AT_GNU_locks_excluded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_exclusive_locks_required:\n        *s_out = \"DW_AT_GNU_exclusive_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_shared_locks_required:\n        *s_out = \"DW_AT_GNU_shared_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_odr_signature:\n        *s_out = \"DW_AT_GNU_odr_signature\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_template_name:\n        *s_out = \"DW_AT_GNU_template_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_value:\n        *s_out = \"DW_AT_GNU_call_site_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_data_value:\n        *s_out = \"DW_AT_GNU_call_site_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target:\n        *s_out = \"DW_AT_GNU_call_site_target\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target_clobbered:\n        *s_out = \"DW_AT_GNU_call_site_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_tail_call:\n        *s_out = \"DW_AT_GNU_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_tail_call_sites:\n        *s_out = \"DW_AT_GNU_all_tail_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_call_sites:\n        *s_out = \"DW_AT_GNU_all_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_source_call_sites:\n        *s_out = \"DW_AT_GNU_all_source_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_macros:\n        *s_out = \"DW_AT_GNU_macros\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_deleted:\n        *s_out = \"DW_AT_GNU_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_name:\n        *s_out = \"DW_AT_GNU_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_id:\n        *s_out = \"DW_AT_GNU_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_ranges_base:\n        *s_out = \"DW_AT_GNU_ranges_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_addr_base:\n        *s_out = \"DW_AT_GNU_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubnames:\n        *s_out = \"DW_AT_GNU_pubnames\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubtypes:\n        *s_out = \"DW_AT_GNU_pubtypes\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_discriminator:\n        *s_out = \"DW_AT_GNU_discriminator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locviews:\n        *s_out = \"DW_AT_GNU_locviews\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_entry_view:\n        *s_out = \"DW_AT_GNU_entry_view\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_template:\n        *s_out = \"DW_AT_SUN_template\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2201. DW_AT_VMS_rtnbeg_pd_address */\n    case DW_AT_SUN_alignment:\n        *s_out = \"DW_AT_SUN_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable:\n        *s_out = \"DW_AT_SUN_vtable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_count_guarantee:\n        *s_out = \"DW_AT_SUN_count_guarantee\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_command_line:\n        *s_out = \"DW_AT_SUN_command_line\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vbase:\n        *s_out = \"DW_AT_SUN_vbase\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_compile_options:\n        *s_out = \"DW_AT_SUN_compile_options\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_language:\n        *s_out = \"DW_AT_SUN_language\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_browser_file:\n        *s_out = \"DW_AT_SUN_browser_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_abi:\n        *s_out = \"DW_AT_SUN_vtable_abi\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offsets:\n        *s_out = \"DW_AT_SUN_func_offsets\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_cf_kind:\n        *s_out = \"DW_AT_SUN_cf_kind\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_index:\n        *s_out = \"DW_AT_SUN_vtable_index\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_tpriv_addr:\n        *s_out = \"DW_AT_SUN_omp_tpriv_addr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_child_func:\n        *s_out = \"DW_AT_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offset:\n        *s_out = \"DW_AT_SUN_func_offset\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_type_ref:\n        *s_out = \"DW_AT_SUN_memop_type_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_profile_id:\n        *s_out = \"DW_AT_SUN_profile_id\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_signature:\n        *s_out = \"DW_AT_SUN_memop_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_dir:\n        *s_out = \"DW_AT_SUN_obj_dir\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_file:\n        *s_out = \"DW_AT_SUN_obj_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_original_name:\n        *s_out = \"DW_AT_SUN_original_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_hwcprof_signature:\n        *s_out = \"DW_AT_SUN_hwcprof_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_amd64_parmdump:\n        *s_out = \"DW_AT_SUN_amd64_parmdump\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_part_link_name:\n        *s_out = \"DW_AT_SUN_part_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_link_name:\n        *s_out = \"DW_AT_SUN_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_with_const:\n        *s_out = \"DW_AT_SUN_pass_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_with_const:\n        *s_out = \"DW_AT_SUN_return_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_name:\n        *s_out = \"DW_AT_SUN_import_by_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_pointer:\n        *s_out = \"DW_AT_SUN_f90_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_by_ref:\n        *s_out = \"DW_AT_SUN_pass_by_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_allocatable:\n        *s_out = \"DW_AT_SUN_f90_allocatable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_assumed_shape_array:\n        *s_out = \"DW_AT_SUN_f90_assumed_shape_array\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_c_vla:\n        *s_out = \"DW_AT_SUN_c_vla\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_value_ptr:\n        *s_out = \"DW_AT_SUN_return_value_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_start:\n        *s_out = \"DW_AT_SUN_dtor_start\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_length:\n        *s_out = \"DW_AT_SUN_dtor_length\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_initial:\n        *s_out = \"DW_AT_SUN_dtor_state_initial\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_final:\n        *s_out = \"DW_AT_SUN_dtor_state_final\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_deltas:\n        *s_out = \"DW_AT_SUN_dtor_state_deltas\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_lname:\n        *s_out = \"DW_AT_SUN_import_by_lname\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_use_only:\n        *s_out = \"DW_AT_SUN_f90_use_only\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_namelist_spec:\n        *s_out = \"DW_AT_SUN_namelist_spec\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_is_omp_child_func:\n        *s_out = \"DW_AT_SUN_is_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_main_alias:\n        *s_out = \"DW_AT_SUN_fortran_main_alias\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_based:\n        *s_out = \"DW_AT_SUN_fortran_based\";\n        return DW_DLV_OK;\n    case DW_AT_ALTIUM_loclist:\n        *s_out = \"DW_AT_ALTIUM_loclist\";\n        return DW_DLV_OK;\n    case DW_AT_use_GNAT_descriptive_type:\n        *s_out = \"DW_AT_use_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    case DW_AT_GNAT_descriptive_type:\n        *s_out = \"DW_AT_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2302. DW_AT_GNAT_descriptive_type */\n    case DW_AT_GNU_numerator:\n        *s_out = \"DW_AT_GNU_numerator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_denominator:\n        *s_out = \"DW_AT_GNU_denominator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_bias:\n        *s_out = \"DW_AT_GNU_bias\";\n        return DW_DLV_OK;\n    case DW_AT_go_kind:\n        *s_out = \"DW_AT_go_kind\";\n        return DW_DLV_OK;\n    case DW_AT_go_key:\n        *s_out = \"DW_AT_go_key\";\n        return DW_DLV_OK;\n    case DW_AT_go_elem:\n        *s_out = \"DW_AT_go_elem\";\n        return DW_DLV_OK;\n    case DW_AT_go_embedded_field:\n        *s_out = \"DW_AT_go_embedded_field\";\n        return DW_DLV_OK;\n    case DW_AT_go_runtime_type:\n        *s_out = \"DW_AT_go_runtime_type\";\n        return DW_DLV_OK;\n    case DW_AT_upc_threads_scaled:\n        *s_out = \"DW_AT_upc_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lbase:\n        *s_out = \"DW_AT_PGI_lbase\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_soffset:\n        *s_out = \"DW_AT_PGI_soffset\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lstride:\n        *s_out = \"DW_AT_PGI_lstride\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_optimized:\n        *s_out = \"DW_AT_APPLE_optimized\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_flags:\n        *s_out = \"DW_AT_APPLE_flags\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_isa:\n        *s_out = \"DW_AT_APPLE_isa\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_block:\n        *s_out = \"DW_AT_APPLE_block\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe4. DW_AT_APPLE_closure */\n    case DW_AT_APPLE_major_runtime_vers:\n        *s_out = \"DW_AT_APPLE_major_runtime_vers\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe5. DW_AT_APPLE_major_runtime_vers */\n    case DW_AT_APPLE_runtime_class:\n        *s_out = \"DW_AT_APPLE_runtime_class\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe6. DW_AT_APPLE_runtime_class */\n    case DW_AT_APPLE_omit_frame_ptr:\n        *s_out = \"DW_AT_APPLE_omit_frame_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_hi_user:\n        *s_out = \"DW_AT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_OP_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_OP_addr:\n        *s_out = \"DW_OP_addr\";\n        return DW_DLV_OK;\n    case DW_OP_deref:\n        *s_out = \"DW_OP_deref\";\n        return DW_DLV_OK;\n    case DW_OP_const1u:\n        *s_out = \"DW_OP_const1u\";\n        return DW_DLV_OK;\n    case DW_OP_const1s:\n        *s_out = \"DW_OP_const1s\";\n        return DW_DLV_OK;\n    case DW_OP_const2u:\n        *s_out = \"DW_OP_const2u\";\n        return DW_DLV_OK;\n    case DW_OP_const2s:\n        *s_out = \"DW_OP_const2s\";\n        return DW_DLV_OK;\n    case DW_OP_const4u:\n        *s_out = \"DW_OP_const4u\";\n        return DW_DLV_OK;\n    case DW_OP_const4s:\n        *s_out = \"DW_OP_const4s\";\n        return DW_DLV_OK;\n    case DW_OP_const8u:\n        *s_out = \"DW_OP_const8u\";\n        return DW_DLV_OK;\n    case DW_OP_const8s:\n        *s_out = \"DW_OP_const8s\";\n        return DW_DLV_OK;\n    case DW_OP_constu:\n        *s_out = \"DW_OP_constu\";\n        return DW_DLV_OK;\n    case DW_OP_consts:\n        *s_out = \"DW_OP_consts\";\n        return DW_DLV_OK;\n    case DW_OP_dup:\n        *s_out = \"DW_OP_dup\";\n        return DW_DLV_OK;\n    case DW_OP_drop:\n        *s_out = \"DW_OP_drop\";\n        return DW_DLV_OK;\n    case DW_OP_over:\n        *s_out = \"DW_OP_over\";\n        return DW_DLV_OK;\n    case DW_OP_pick:\n        *s_out = \"DW_OP_pick\";\n        return DW_DLV_OK;\n    case DW_OP_swap:\n        *s_out = \"DW_OP_swap\";\n        return DW_DLV_OK;\n    case DW_OP_rot:\n        *s_out = \"DW_OP_rot\";\n        return DW_DLV_OK;\n    case DW_OP_xderef:\n        *s_out = \"DW_OP_xderef\";\n        return DW_DLV_OK;\n    case DW_OP_abs:\n        *s_out = \"DW_OP_abs\";\n        return DW_DLV_OK;\n    case DW_OP_and:\n        *s_out = \"DW_OP_and\";\n        return DW_DLV_OK;\n    case DW_OP_div:\n        *s_out = \"DW_OP_div\";\n        return DW_DLV_OK;\n    case DW_OP_minus:\n        *s_out = \"DW_OP_minus\";\n        return DW_DLV_OK;\n    case DW_OP_mod:\n        *s_out = \"DW_OP_mod\";\n        return DW_DLV_OK;\n    case DW_OP_mul:\n        *s_out = \"DW_OP_mul\";\n        return DW_DLV_OK;\n    case DW_OP_neg:\n        *s_out = \"DW_OP_neg\";\n        return DW_DLV_OK;\n    case DW_OP_not:\n        *s_out = \"DW_OP_not\";\n        return DW_DLV_OK;\n    case DW_OP_or:\n        *s_out = \"DW_OP_or\";\n        return DW_DLV_OK;\n    case DW_OP_plus:\n        *s_out = \"DW_OP_plus\";\n        return DW_DLV_OK;\n    case DW_OP_plus_uconst:\n        *s_out = \"DW_OP_plus_uconst\";\n        return DW_DLV_OK;\n    case DW_OP_shl:\n        *s_out = \"DW_OP_shl\";\n        return DW_DLV_OK;\n    case DW_OP_shr:\n        *s_out = \"DW_OP_shr\";\n        return DW_DLV_OK;\n    case DW_OP_shra:\n        *s_out = \"DW_OP_shra\";\n        return DW_DLV_OK;\n    case DW_OP_xor:\n        *s_out = \"DW_OP_xor\";\n        return DW_DLV_OK;\n    case DW_OP_bra:\n        *s_out = \"DW_OP_bra\";\n        return DW_DLV_OK;\n    case DW_OP_eq:\n        *s_out = \"DW_OP_eq\";\n        return DW_DLV_OK;\n    case DW_OP_ge:\n        *s_out = \"DW_OP_ge\";\n        return DW_DLV_OK;\n    case DW_OP_gt:\n        *s_out = \"DW_OP_gt\";\n        return DW_DLV_OK;\n    case DW_OP_le:\n        *s_out = \"DW_OP_le\";\n        return DW_DLV_OK;\n    case DW_OP_lt:\n        *s_out = \"DW_OP_lt\";\n        return DW_DLV_OK;\n    case DW_OP_ne:\n        *s_out = \"DW_OP_ne\";\n        return DW_DLV_OK;\n    case DW_OP_skip:\n        *s_out = \"DW_OP_skip\";\n        return DW_DLV_OK;\n    case DW_OP_lit0:\n        *s_out = \"DW_OP_lit0\";\n        return DW_DLV_OK;\n    case DW_OP_lit1:\n        *s_out = \"DW_OP_lit1\";\n        return DW_DLV_OK;\n    case DW_OP_lit2:\n        *s_out = \"DW_OP_lit2\";\n        return DW_DLV_OK;\n    case DW_OP_lit3:\n        *s_out = \"DW_OP_lit3\";\n        return DW_DLV_OK;\n    case DW_OP_lit4:\n        *s_out = \"DW_OP_lit4\";\n        return DW_DLV_OK;\n    case DW_OP_lit5:\n        *s_out = \"DW_OP_lit5\";\n        return DW_DLV_OK;\n    case DW_OP_lit6:\n        *s_out = \"DW_OP_lit6\";\n        return DW_DLV_OK;\n    case DW_OP_lit7:\n        *s_out = \"DW_OP_lit7\";\n        return DW_DLV_OK;\n    case DW_OP_lit8:\n        *s_out = \"DW_OP_lit8\";\n        return DW_DLV_OK;\n    case DW_OP_lit9:\n        *s_out = \"DW_OP_lit9\";\n        return DW_DLV_OK;\n    case DW_OP_lit10:\n        *s_out = \"DW_OP_lit10\";\n        return DW_DLV_OK;\n    case DW_OP_lit11:\n        *s_out = \"DW_OP_lit11\";\n        return DW_DLV_OK;\n    case DW_OP_lit12:\n        *s_out = \"DW_OP_lit12\";\n        return DW_DLV_OK;\n    case DW_OP_lit13:\n        *s_out = \"DW_OP_lit13\";\n        return DW_DLV_OK;\n    case DW_OP_lit14:\n        *s_out = \"DW_OP_lit14\";\n        return DW_DLV_OK;\n    case DW_OP_lit15:\n        *s_out = \"DW_OP_lit15\";\n        return DW_DLV_OK;\n    case DW_OP_lit16:\n        *s_out = \"DW_OP_lit16\";\n        return DW_DLV_OK;\n    case DW_OP_lit17:\n        *s_out = \"DW_OP_lit17\";\n        return DW_DLV_OK;\n    case DW_OP_lit18:\n        *s_out = \"DW_OP_lit18\";\n        return DW_DLV_OK;\n    case DW_OP_lit19:\n        *s_out = \"DW_OP_lit19\";\n        return DW_DLV_OK;\n    case DW_OP_lit20:\n        *s_out = \"DW_OP_lit20\";\n        return DW_DLV_OK;\n    case DW_OP_lit21:\n        *s_out = \"DW_OP_lit21\";\n        return DW_DLV_OK;\n    case DW_OP_lit22:\n        *s_out = \"DW_OP_lit22\";\n        return DW_DLV_OK;\n    case DW_OP_lit23:\n        *s_out = \"DW_OP_lit23\";\n        return DW_DLV_OK;\n    case DW_OP_lit24:\n        *s_out = \"DW_OP_lit24\";\n        return DW_DLV_OK;\n    case DW_OP_lit25:\n        *s_out = \"DW_OP_lit25\";\n        return DW_DLV_OK;\n    case DW_OP_lit26:\n        *s_out = \"DW_OP_lit26\";\n        return DW_DLV_OK;\n    case DW_OP_lit27:\n        *s_out = \"DW_OP_lit27\";\n        return DW_DLV_OK;\n    case DW_OP_lit28:\n        *s_out = \"DW_OP_lit28\";\n        return DW_DLV_OK;\n    case DW_OP_lit29:\n        *s_out = \"DW_OP_lit29\";\n        return DW_DLV_OK;\n    case DW_OP_lit30:\n        *s_out = \"DW_OP_lit30\";\n        return DW_DLV_OK;\n    case DW_OP_lit31:\n        *s_out = \"DW_OP_lit31\";\n        return DW_DLV_OK;\n    case DW_OP_reg0:\n        *s_out = \"DW_OP_reg0\";\n        return DW_DLV_OK;\n    case DW_OP_reg1:\n        *s_out = \"DW_OP_reg1\";\n        return DW_DLV_OK;\n    case DW_OP_reg2:\n        *s_out = \"DW_OP_reg2\";\n        return DW_DLV_OK;\n    case DW_OP_reg3:\n        *s_out = \"DW_OP_reg3\";\n        return DW_DLV_OK;\n    case DW_OP_reg4:\n        *s_out = \"DW_OP_reg4\";\n        return DW_DLV_OK;\n    case DW_OP_reg5:\n        *s_out = \"DW_OP_reg5\";\n        return DW_DLV_OK;\n    case DW_OP_reg6:\n        *s_out = \"DW_OP_reg6\";\n        return DW_DLV_OK;\n    case DW_OP_reg7:\n        *s_out = \"DW_OP_reg7\";\n        return DW_DLV_OK;\n    case DW_OP_reg8:\n        *s_out = \"DW_OP_reg8\";\n        return DW_DLV_OK;\n    case DW_OP_reg9:\n        *s_out = \"DW_OP_reg9\";\n        return DW_DLV_OK;\n    case DW_OP_reg10:\n        *s_out = \"DW_OP_reg10\";\n        return DW_DLV_OK;\n    case DW_OP_reg11:\n        *s_out = \"DW_OP_reg11\";\n        return DW_DLV_OK;\n    case DW_OP_reg12:\n        *s_out = \"DW_OP_reg12\";\n        return DW_DLV_OK;\n    case DW_OP_reg13:\n        *s_out = \"DW_OP_reg13\";\n        return DW_DLV_OK;\n    case DW_OP_reg14:\n        *s_out = \"DW_OP_reg14\";\n        return DW_DLV_OK;\n    case DW_OP_reg15:\n        *s_out = \"DW_OP_reg15\";\n        return DW_DLV_OK;\n    case DW_OP_reg16:\n        *s_out = \"DW_OP_reg16\";\n        return DW_DLV_OK;\n    case DW_OP_reg17:\n        *s_out = \"DW_OP_reg17\";\n        return DW_DLV_OK;\n    case DW_OP_reg18:\n        *s_out = \"DW_OP_reg18\";\n        return DW_DLV_OK;\n    case DW_OP_reg19:\n        *s_out = \"DW_OP_reg19\";\n        return DW_DLV_OK;\n    case DW_OP_reg20:\n        *s_out = \"DW_OP_reg20\";\n        return DW_DLV_OK;\n    case DW_OP_reg21:\n        *s_out = \"DW_OP_reg21\";\n        return DW_DLV_OK;\n    case DW_OP_reg22:\n        *s_out = \"DW_OP_reg22\";\n        return DW_DLV_OK;\n    case DW_OP_reg23:\n        *s_out = \"DW_OP_reg23\";\n        return DW_DLV_OK;\n    case DW_OP_reg24:\n        *s_out = \"DW_OP_reg24\";\n        return DW_DLV_OK;\n    case DW_OP_reg25:\n        *s_out = \"DW_OP_reg25\";\n        return DW_DLV_OK;\n    case DW_OP_reg26:\n        *s_out = \"DW_OP_reg26\";\n        return DW_DLV_OK;\n    case DW_OP_reg27:\n        *s_out = \"DW_OP_reg27\";\n        return DW_DLV_OK;\n    case DW_OP_reg28:\n        *s_out = \"DW_OP_reg28\";\n        return DW_DLV_OK;\n    case DW_OP_reg29:\n        *s_out = \"DW_OP_reg29\";\n        return DW_DLV_OK;\n    case DW_OP_reg30:\n        *s_out = \"DW_OP_reg30\";\n        return DW_DLV_OK;\n    case DW_OP_reg31:\n        *s_out = \"DW_OP_reg31\";\n        return DW_DLV_OK;\n    case DW_OP_breg0:\n        *s_out = \"DW_OP_breg0\";\n        return DW_DLV_OK;\n    case DW_OP_breg1:\n        *s_out = \"DW_OP_breg1\";\n        return DW_DLV_OK;\n    case DW_OP_breg2:\n        *s_out = \"DW_OP_breg2\";\n        return DW_DLV_OK;\n    case DW_OP_breg3:\n        *s_out = \"DW_OP_breg3\";\n        return DW_DLV_OK;\n    case DW_OP_breg4:\n        *s_out = \"DW_OP_breg4\";\n        return DW_DLV_OK;\n    case DW_OP_breg5:\n        *s_out = \"DW_OP_breg5\";\n        return DW_DLV_OK;\n    case DW_OP_breg6:\n        *s_out = \"DW_OP_breg6\";\n        return DW_DLV_OK;\n    case DW_OP_breg7:\n        *s_out = \"DW_OP_breg7\";\n        return DW_DLV_OK;\n    case DW_OP_breg8:\n        *s_out = \"DW_OP_breg8\";\n        return DW_DLV_OK;\n    case DW_OP_breg9:\n        *s_out = \"DW_OP_breg9\";\n        return DW_DLV_OK;\n    case DW_OP_breg10:\n        *s_out = \"DW_OP_breg10\";\n        return DW_DLV_OK;\n    case DW_OP_breg11:\n        *s_out = \"DW_OP_breg11\";\n        return DW_DLV_OK;\n    case DW_OP_breg12:\n        *s_out = \"DW_OP_breg12\";\n        return DW_DLV_OK;\n    case DW_OP_breg13:\n        *s_out = \"DW_OP_breg13\";\n        return DW_DLV_OK;\n    case DW_OP_breg14:\n        *s_out = \"DW_OP_breg14\";\n        return DW_DLV_OK;\n    case DW_OP_breg15:\n        *s_out = \"DW_OP_breg15\";\n        return DW_DLV_OK;\n    case DW_OP_breg16:\n        *s_out = \"DW_OP_breg16\";\n        return DW_DLV_OK;\n    case DW_OP_breg17:\n        *s_out = \"DW_OP_breg17\";\n        return DW_DLV_OK;\n    case DW_OP_breg18:\n        *s_out = \"DW_OP_breg18\";\n        return DW_DLV_OK;\n    case DW_OP_breg19:\n        *s_out = \"DW_OP_breg19\";\n        return DW_DLV_OK;\n    case DW_OP_breg20:\n        *s_out = \"DW_OP_breg20\";\n        return DW_DLV_OK;\n    case DW_OP_breg21:\n        *s_out = \"DW_OP_breg21\";\n        return DW_DLV_OK;\n    case DW_OP_breg22:\n        *s_out = \"DW_OP_breg22\";\n        return DW_DLV_OK;\n    case DW_OP_breg23:\n        *s_out = \"DW_OP_breg23\";\n        return DW_DLV_OK;\n    case DW_OP_breg24:\n        *s_out = \"DW_OP_breg24\";\n        return DW_DLV_OK;\n    case DW_OP_breg25:\n        *s_out = \"DW_OP_breg25\";\n        return DW_DLV_OK;\n    case DW_OP_breg26:\n        *s_out = \"DW_OP_breg26\";\n        return DW_DLV_OK;\n    case DW_OP_breg27:\n        *s_out = \"DW_OP_breg27\";\n        return DW_DLV_OK;\n    case DW_OP_breg28:\n        *s_out = \"DW_OP_breg28\";\n        return DW_DLV_OK;\n    case DW_OP_breg29:\n        *s_out = \"DW_OP_breg29\";\n        return DW_DLV_OK;\n    case DW_OP_breg30:\n        *s_out = \"DW_OP_breg30\";\n        return DW_DLV_OK;\n    case DW_OP_breg31:\n        *s_out = \"DW_OP_breg31\";\n        return DW_DLV_OK;\n    case DW_OP_regx:\n        *s_out = \"DW_OP_regx\";\n        return DW_DLV_OK;\n    case DW_OP_fbreg:\n        *s_out = \"DW_OP_fbreg\";\n        return DW_DLV_OK;\n    case DW_OP_bregx:\n        *s_out = \"DW_OP_bregx\";\n        return DW_DLV_OK;\n    case DW_OP_piece:\n        *s_out = \"DW_OP_piece\";\n        return DW_DLV_OK;\n    case DW_OP_deref_size:\n        *s_out = \"DW_OP_deref_size\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_size:\n        *s_out = \"DW_OP_xderef_size\";\n        return DW_DLV_OK;\n    case DW_OP_nop:\n        *s_out = \"DW_OP_nop\";\n        return DW_DLV_OK;\n    case DW_OP_push_object_address:\n        *s_out = \"DW_OP_push_object_address\";\n        return DW_DLV_OK;\n    case DW_OP_call2:\n        *s_out = \"DW_OP_call2\";\n        return DW_DLV_OK;\n    case DW_OP_call4:\n        *s_out = \"DW_OP_call4\";\n        return DW_DLV_OK;\n    case DW_OP_call_ref:\n        *s_out = \"DW_OP_call_ref\";\n        return DW_DLV_OK;\n    case DW_OP_form_tls_address:\n        *s_out = \"DW_OP_form_tls_address\";\n        return DW_DLV_OK;\n    case DW_OP_call_frame_cfa:\n        *s_out = \"DW_OP_call_frame_cfa\";\n        return DW_DLV_OK;\n    case DW_OP_bit_piece:\n        *s_out = \"DW_OP_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_value:\n        *s_out = \"DW_OP_implicit_value\";\n        return DW_DLV_OK;\n    case DW_OP_stack_value:\n        *s_out = \"DW_OP_stack_value\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_pointer:\n        *s_out = \"DW_OP_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_addrx:\n        *s_out = \"DW_OP_addrx\";\n        return DW_DLV_OK;\n    case DW_OP_constx:\n        *s_out = \"DW_OP_constx\";\n        return DW_DLV_OK;\n    case DW_OP_entry_value:\n        *s_out = \"DW_OP_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_const_type:\n        *s_out = \"DW_OP_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_regval_type:\n        *s_out = \"DW_OP_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_deref_type:\n        *s_out = \"DW_OP_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_type:\n        *s_out = \"DW_OP_xderef_type\";\n        return DW_DLV_OK;\n    case DW_OP_convert:\n        *s_out = \"DW_OP_convert\";\n        return DW_DLV_OK;\n    case DW_OP_reinterpret:\n        *s_out = \"DW_OP_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_push_tls_address:\n        *s_out = \"DW_OP_GNU_push_tls_address\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xe0. DW_OP_lo_user */\n    /* Skipping alternate spelling of value 0xe0. DW_OP_HP_unknown */\n    case DW_OP_HP_is_value:\n        *s_out = \"DW_OP_HP_is_value\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst4:\n        *s_out = \"DW_OP_HP_fltconst4\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst8:\n        *s_out = \"DW_OP_HP_fltconst8\";\n        return DW_DLV_OK;\n    case DW_OP_HP_mod_range:\n        *s_out = \"DW_OP_HP_mod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_unmod_range:\n        *s_out = \"DW_OP_HP_unmod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_tls:\n        *s_out = \"DW_OP_HP_tls\";\n        return DW_DLV_OK;\n    case DW_OP_INTEL_bit_piece:\n        *s_out = \"DW_OP_INTEL_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_uninit:\n        *s_out = \"DW_OP_GNU_uninit\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xf0. DW_OP_APPLE_uninit */\n    case DW_OP_GNU_encoded_addr:\n        *s_out = \"DW_OP_GNU_encoded_addr\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_implicit_pointer:\n        *s_out = \"DW_OP_GNU_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_entry_value:\n        *s_out = \"DW_OP_GNU_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_type:\n        *s_out = \"DW_OP_GNU_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_regval_type:\n        *s_out = \"DW_OP_GNU_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_deref_type:\n        *s_out = \"DW_OP_GNU_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_convert:\n        *s_out = \"DW_OP_GNU_convert\";\n        return DW_DLV_OK;\n    case DW_OP_PGI_omp_thread_num:\n        *s_out = \"DW_OP_PGI_omp_thread_num\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_reinterpret:\n        *s_out = \"DW_OP_GNU_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_parameter_ref:\n        *s_out = \"DW_OP_GNU_parameter_ref\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_addr_index:\n        *s_out = \"DW_OP_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_index:\n        *s_out = \"DW_OP_GNU_const_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_variable_value:\n        *s_out = \"DW_OP_GNU_variable_value\";\n        return DW_DLV_OK;\n    case DW_OP_hi_user:\n        *s_out = \"DW_OP_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATE_address:\n        *s_out = \"DW_ATE_address\";\n        return DW_DLV_OK;\n    case DW_ATE_boolean:\n        *s_out = \"DW_ATE_boolean\";\n        return DW_DLV_OK;\n    case DW_ATE_complex_float:\n        *s_out = \"DW_ATE_complex_float\";\n        return DW_DLV_OK;\n    case DW_ATE_float:\n        *s_out = \"DW_ATE_float\";\n        return DW_DLV_OK;\n    case DW_ATE_signed:\n        *s_out = \"DW_ATE_signed\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_char:\n        *s_out = \"DW_ATE_signed_char\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned:\n        *s_out = \"DW_ATE_unsigned\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_char:\n        *s_out = \"DW_ATE_unsigned_char\";\n        return DW_DLV_OK;\n    case DW_ATE_imaginary_float:\n        *s_out = \"DW_ATE_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_packed_decimal:\n        *s_out = \"DW_ATE_packed_decimal\";\n        return DW_DLV_OK;\n    case DW_ATE_numeric_string:\n        *s_out = \"DW_ATE_numeric_string\";\n        return DW_DLV_OK;\n    case DW_ATE_edited:\n        *s_out = \"DW_ATE_edited\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_fixed:\n        *s_out = \"DW_ATE_signed_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_fixed:\n        *s_out = \"DW_ATE_unsigned_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_decimal_float:\n        *s_out = \"DW_ATE_decimal_float\";\n        return DW_DLV_OK;\n    case DW_ATE_UTF:\n        *s_out = \"DW_ATE_UTF\";\n        return DW_DLV_OK;\n    case DW_ATE_UCS:\n        *s_out = \"DW_ATE_UCS\";\n        return DW_DLV_OK;\n    case DW_ATE_ASCII:\n        *s_out = \"DW_ATE_ASCII\";\n        return DW_DLV_OK;\n    case DW_ATE_ALTIUM_fract:\n        *s_out = \"DW_ATE_ALTIUM_fract\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_ATE_lo_user */\n    /* Skipping alternate spelling of value 0x80. DW_ATE_HP_float80 */\n    case DW_ATE_ALTIUM_accum:\n        *s_out = \"DW_ATE_ALTIUM_accum\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x81. DW_ATE_HP_complex_float80 */\n    case DW_ATE_HP_float128:\n        *s_out = \"DW_ATE_HP_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_complex_float128:\n        *s_out = \"DW_ATE_HP_complex_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_floathpintel:\n        *s_out = \"DW_ATE_HP_floathpintel\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float80:\n        *s_out = \"DW_ATE_HP_imaginary_float80\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float128:\n        *s_out = \"DW_ATE_HP_imaginary_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_interval_float:\n        *s_out = \"DW_ATE_SUN_interval_float\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_imaginary_float:\n        *s_out = \"DW_ATE_SUN_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_hi_user:\n        *s_out = \"DW_ATE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DEFAULTED_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DEFAULTED_no:\n        *s_out = \"DW_DEFAULTED_no\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_in_class:\n        *s_out = \"DW_DEFAULTED_in_class\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_out_of_class:\n        *s_out = \"DW_DEFAULTED_out_of_class\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_IDX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_IDX_compile_unit:\n        *s_out = \"DW_IDX_compile_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_type_unit:\n        *s_out = \"DW_IDX_type_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_die_offset:\n        *s_out = \"DW_IDX_die_offset\";\n        return DW_DLV_OK;\n    case DW_IDX_parent:\n        *s_out = \"DW_IDX_parent\";\n        return DW_DLV_OK;\n    case DW_IDX_type_hash:\n        *s_out = \"DW_IDX_type_hash\";\n        return DW_DLV_OK;\n    case DW_IDX_hi_user:\n        *s_out = \"DW_IDX_hi_user\";\n        return DW_DLV_OK;\n    case DW_IDX_lo_user:\n        *s_out = \"DW_IDX_lo_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLEX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLEX_end_of_list_entry:\n        *s_out = \"DW_LLEX_end_of_list_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_base_address_selection_entry:\n        *s_out = \"DW_LLEX_base_address_selection_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_end_entry:\n        *s_out = \"DW_LLEX_start_end_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_length_entry:\n        *s_out = \"DW_LLEX_start_length_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_offset_pair_entry:\n        *s_out = \"DW_LLEX_offset_pair_entry\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLE_end_of_list:\n        *s_out = \"DW_LLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_LLE_base_addressx:\n        *s_out = \"DW_LLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_endx:\n        *s_out = \"DW_LLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_length:\n        *s_out = \"DW_LLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_LLE_offset_pair:\n        *s_out = \"DW_LLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_LLE_default_location:\n        *s_out = \"DW_LLE_default_location\";\n        return DW_DLV_OK;\n    case DW_LLE_base_address:\n        *s_out = \"DW_LLE_base_address\";\n        return DW_DLV_OK;\n    case DW_LLE_start_end:\n        *s_out = \"DW_LLE_start_end\";\n        return DW_DLV_OK;\n    case DW_LLE_start_length:\n        *s_out = \"DW_LLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_RLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_RLE_end_of_list:\n        *s_out = \"DW_RLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_RLE_base_addressx:\n        *s_out = \"DW_RLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_endx:\n        *s_out = \"DW_RLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_length:\n        *s_out = \"DW_RLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_RLE_offset_pair:\n        *s_out = \"DW_RLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_RLE_base_address:\n        *s_out = \"DW_RLE_base_address\";\n        return DW_DLV_OK;\n    case DW_RLE_start_end:\n        *s_out = \"DW_RLE_start_end\";\n        return DW_DLV_OK;\n    case DW_RLE_start_length:\n        *s_out = \"DW_RLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIVIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIVIS_global:\n        *s_out = \"DW_GNUIVIS_global\";\n        return DW_DLV_OK;\n    case DW_GNUIVIS_static:\n        *s_out = \"DW_GNUIVIS_static\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIKIND_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIKIND_none:\n        *s_out = \"DW_GNUIKIND_none\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_type:\n        *s_out = \"DW_GNUIKIND_type\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_variable:\n        *s_out = \"DW_GNUIKIND_variable\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_function:\n        *s_out = \"DW_GNUIKIND_function\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_other:\n        *s_out = \"DW_GNUIKIND_other\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_UT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_UT_compile:\n        *s_out = \"DW_UT_compile\";\n        return DW_DLV_OK;\n    case DW_UT_type:\n        *s_out = \"DW_UT_type\";\n        return DW_DLV_OK;\n    case DW_UT_partial:\n        *s_out = \"DW_UT_partial\";\n        return DW_DLV_OK;\n    case DW_UT_skeleton:\n        *s_out = \"DW_UT_skeleton\";\n        return DW_DLV_OK;\n    case DW_UT_split_compile:\n        *s_out = \"DW_UT_split_compile\";\n        return DW_DLV_OK;\n    case DW_UT_split_type:\n        *s_out = \"DW_UT_split_type\";\n        return DW_DLV_OK;\n    case DW_UT_lo_user:\n        *s_out = \"DW_UT_lo_user\";\n        return DW_DLV_OK;\n    case DW_UT_hi_user:\n        *s_out = \"DW_UT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_SECT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_SECT_INFO:\n        *s_out = \"DW_SECT_INFO\";\n        return DW_DLV_OK;\n    case DW_SECT_TYPES:\n        *s_out = \"DW_SECT_TYPES\";\n        return DW_DLV_OK;\n    case DW_SECT_ABBREV:\n        *s_out = \"DW_SECT_ABBREV\";\n        return DW_DLV_OK;\n    case DW_SECT_LINE:\n        *s_out = \"DW_SECT_LINE\";\n        return DW_DLV_OK;\n    case DW_SECT_LOCLISTS:\n        *s_out = \"DW_SECT_LOCLISTS\";\n        return DW_DLV_OK;\n    case DW_SECT_STR_OFFSETS:\n        *s_out = \"DW_SECT_STR_OFFSETS\";\n        return DW_DLV_OK;\n    case DW_SECT_MACRO:\n        *s_out = \"DW_SECT_MACRO\";\n        return DW_DLV_OK;\n    case DW_SECT_RNGLISTS:\n        *s_out = \"DW_SECT_RNGLISTS\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DS_unsigned:\n        *s_out = \"DW_DS_unsigned\";\n        return DW_DLV_OK;\n    case DW_DS_leading_overpunch:\n        *s_out = \"DW_DS_leading_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_overpunch:\n        *s_out = \"DW_DS_trailing_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_leading_separate:\n        *s_out = \"DW_DS_leading_separate\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_separate:\n        *s_out = \"DW_DS_trailing_separate\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_END_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_END_default:\n        *s_out = \"DW_END_default\";\n        return DW_DLV_OK;\n    case DW_END_big:\n        *s_out = \"DW_END_big\";\n        return DW_DLV_OK;\n    case DW_END_little:\n        *s_out = \"DW_END_little\";\n        return DW_DLV_OK;\n    case DW_END_lo_user:\n        *s_out = \"DW_END_lo_user\";\n        return DW_DLV_OK;\n    case DW_END_hi_user:\n        *s_out = \"DW_END_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATCF_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATCF_lo_user:\n        *s_out = \"DW_ATCF_lo_user\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_bitfield:\n        *s_out = \"DW_ATCF_SUN_mop_bitfield\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_spill:\n        *s_out = \"DW_ATCF_SUN_mop_spill\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_scopy:\n        *s_out = \"DW_ATCF_SUN_mop_scopy\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_start:\n        *s_out = \"DW_ATCF_SUN_func_start\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_end_ctors:\n        *s_out = \"DW_ATCF_SUN_end_ctors\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_branch_target:\n        *s_out = \"DW_ATCF_SUN_branch_target\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_stack_probe:\n        *s_out = \"DW_ATCF_SUN_mop_stack_probe\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_epilog:\n        *s_out = \"DW_ATCF_SUN_func_epilog\";\n        return DW_DLV_OK;\n    case DW_ATCF_hi_user:\n        *s_out = \"DW_ATCF_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ACCESS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ACCESS_public:\n        *s_out = \"DW_ACCESS_public\";\n        return DW_DLV_OK;\n    case DW_ACCESS_protected:\n        *s_out = \"DW_ACCESS_protected\";\n        return DW_DLV_OK;\n    case DW_ACCESS_private:\n        *s_out = \"DW_ACCESS_private\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIS_local:\n        *s_out = \"DW_VIS_local\";\n        return DW_DLV_OK;\n    case DW_VIS_exported:\n        *s_out = \"DW_VIS_exported\";\n        return DW_DLV_OK;\n    case DW_VIS_qualified:\n        *s_out = \"DW_VIS_qualified\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIRTUALITY_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIRTUALITY_none:\n        *s_out = \"DW_VIRTUALITY_none\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_virtual:\n        *s_out = \"DW_VIRTUALITY_virtual\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_pure_virtual:\n        *s_out = \"DW_VIRTUALITY_pure_virtual\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LANG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LANG_C89:\n        *s_out = \"DW_LANG_C89\";\n        return DW_DLV_OK;\n    case DW_LANG_C:\n        *s_out = \"DW_LANG_C\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada83:\n        *s_out = \"DW_LANG_Ada83\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus:\n        *s_out = \"DW_LANG_C_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol74:\n        *s_out = \"DW_LANG_Cobol74\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol85:\n        *s_out = \"DW_LANG_Cobol85\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran77:\n        *s_out = \"DW_LANG_Fortran77\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran90:\n        *s_out = \"DW_LANG_Fortran90\";\n        return DW_DLV_OK;\n    case DW_LANG_Pascal83:\n        *s_out = \"DW_LANG_Pascal83\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula2:\n        *s_out = \"DW_LANG_Modula2\";\n        return DW_DLV_OK;\n    case DW_LANG_Java:\n        *s_out = \"DW_LANG_Java\";\n        return DW_DLV_OK;\n    case DW_LANG_C99:\n        *s_out = \"DW_LANG_C99\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada95:\n        *s_out = \"DW_LANG_Ada95\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran95:\n        *s_out = \"DW_LANG_Fortran95\";\n        return DW_DLV_OK;\n    case DW_LANG_PLI:\n        *s_out = \"DW_LANG_PLI\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC:\n        *s_out = \"DW_LANG_ObjC\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC_plus_plus:\n        *s_out = \"DW_LANG_ObjC_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_UPC:\n        *s_out = \"DW_LANG_UPC\";\n        return DW_DLV_OK;\n    case DW_LANG_D:\n        *s_out = \"DW_LANG_D\";\n        return DW_DLV_OK;\n    case DW_LANG_Python:\n        *s_out = \"DW_LANG_Python\";\n        return DW_DLV_OK;\n    case DW_LANG_OpenCL:\n        *s_out = \"DW_LANG_OpenCL\";\n        return DW_DLV_OK;\n    case DW_LANG_Go:\n        *s_out = \"DW_LANG_Go\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula3:\n        *s_out = \"DW_LANG_Modula3\";\n        return DW_DLV_OK;\n    case DW_LANG_Haskel:\n        *s_out = \"DW_LANG_Haskel\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_03:\n        *s_out = \"DW_LANG_C_plus_plus_03\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_11:\n        *s_out = \"DW_LANG_C_plus_plus_11\";\n        return DW_DLV_OK;\n    case DW_LANG_OCaml:\n        *s_out = \"DW_LANG_OCaml\";\n        return DW_DLV_OK;\n    case DW_LANG_Rust:\n        *s_out = \"DW_LANG_Rust\";\n        return DW_DLV_OK;\n    case DW_LANG_C11:\n        *s_out = \"DW_LANG_C11\";\n        return DW_DLV_OK;\n    case DW_LANG_Swift:\n        *s_out = \"DW_LANG_Swift\";\n        return DW_DLV_OK;\n    case DW_LANG_Julia:\n        *s_out = \"DW_LANG_Julia\";\n        return DW_DLV_OK;\n    case DW_LANG_Dylan:\n        *s_out = \"DW_LANG_Dylan\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_14:\n        *s_out = \"DW_LANG_C_plus_plus_14\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran03:\n        *s_out = \"DW_LANG_Fortran03\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran08:\n        *s_out = \"DW_LANG_Fortran08\";\n        return DW_DLV_OK;\n    case DW_LANG_RenderScript:\n        *s_out = \"DW_LANG_RenderScript\";\n        return DW_DLV_OK;\n    case DW_LANG_BLISS:\n        *s_out = \"DW_LANG_BLISS\";\n        return DW_DLV_OK;\n    case DW_LANG_lo_user:\n        *s_out = \"DW_LANG_lo_user\";\n        return DW_DLV_OK;\n    case DW_LANG_Mips_Assembler:\n        *s_out = \"DW_LANG_Mips_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_Upc:\n        *s_out = \"DW_LANG_Upc\";\n        return DW_DLV_OK;\n    case DW_LANG_SUN_Assembler:\n        *s_out = \"DW_LANG_SUN_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_ALTIUM_Assembler:\n        *s_out = \"DW_LANG_ALTIUM_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_hi_user:\n        *s_out = \"DW_LANG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ID_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ID_case_sensitive:\n        *s_out = \"DW_ID_case_sensitive\";\n        return DW_DLV_OK;\n    case DW_ID_up_case:\n        *s_out = \"DW_ID_up_case\";\n        return DW_DLV_OK;\n    case DW_ID_down_case:\n        *s_out = \"DW_ID_down_case\";\n        return DW_DLV_OK;\n    case DW_ID_case_insensitive:\n        *s_out = \"DW_ID_case_insensitive\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CC_normal:\n        *s_out = \"DW_CC_normal\";\n        return DW_DLV_OK;\n    case DW_CC_program:\n        *s_out = \"DW_CC_program\";\n        return DW_DLV_OK;\n    case DW_CC_nocall:\n        *s_out = \"DW_CC_nocall\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_reference:\n        *s_out = \"DW_CC_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_value:\n        *s_out = \"DW_CC_pass_by_value\";\n        return DW_DLV_OK;\n    case DW_CC_lo_user:\n        *s_out = \"DW_CC_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x40. DW_CC_GNU_renesas_sh */\n    case DW_CC_GNU_borland_fastcall_i386:\n        *s_out = \"DW_CC_GNU_borland_fastcall_i386\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_interrupt:\n        *s_out = \"DW_CC_ALTIUM_interrupt\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_system_stack:\n        *s_out = \"DW_CC_ALTIUM_near_system_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_user_stack:\n        *s_out = \"DW_CC_ALTIUM_near_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_huge_user_stack:\n        *s_out = \"DW_CC_ALTIUM_huge_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_hi_user:\n        *s_out = \"DW_CC_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_INL_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_INL_not_inlined:\n        *s_out = \"DW_INL_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_inlined:\n        *s_out = \"DW_INL_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_not_inlined:\n        *s_out = \"DW_INL_declared_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_inlined:\n        *s_out = \"DW_INL_declared_inlined\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ORD_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ORD_row_major:\n        *s_out = \"DW_ORD_row_major\";\n        return DW_DLV_OK;\n    case DW_ORD_col_major:\n        *s_out = \"DW_ORD_col_major\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DSC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DSC_label:\n        *s_out = \"DW_DSC_label\";\n        return DW_DLV_OK;\n    case DW_DSC_range:\n        *s_out = \"DW_DSC_range\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNCT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNCT_path:\n        *s_out = \"DW_LNCT_path\";\n        return DW_DLV_OK;\n    case DW_LNCT_directory_index:\n        *s_out = \"DW_LNCT_directory_index\";\n        return DW_DLV_OK;\n    case DW_LNCT_timestamp:\n        *s_out = \"DW_LNCT_timestamp\";\n        return DW_DLV_OK;\n    case DW_LNCT_size:\n        *s_out = \"DW_LNCT_size\";\n        return DW_DLV_OK;\n    case DW_LNCT_MD5:\n        *s_out = \"DW_LNCT_MD5\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_subprogram_name:\n        *s_out = \"DW_LNCT_GNU_subprogram_name\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_file:\n        *s_out = \"DW_LNCT_GNU_decl_file\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_line:\n        *s_out = \"DW_LNCT_GNU_decl_line\";\n        return DW_DLV_OK;\n    case DW_LNCT_lo_user:\n        *s_out = \"DW_LNCT_lo_user\";\n        return DW_DLV_OK;\n    case DW_LNCT_hi_user:\n        *s_out = \"DW_LNCT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNS_copy:\n        *s_out = \"DW_LNS_copy\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_pc:\n        *s_out = \"DW_LNS_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_line:\n        *s_out = \"DW_LNS_advance_line\";\n        return DW_DLV_OK;\n    case DW_LNS_set_file:\n        *s_out = \"DW_LNS_set_file\";\n        return DW_DLV_OK;\n    case DW_LNS_set_column:\n        *s_out = \"DW_LNS_set_column\";\n        return DW_DLV_OK;\n    case DW_LNS_negate_stmt:\n        *s_out = \"DW_LNS_negate_stmt\";\n        return DW_DLV_OK;\n    case DW_LNS_set_basic_block:\n        *s_out = \"DW_LNS_set_basic_block\";\n        return DW_DLV_OK;\n    case DW_LNS_const_add_pc:\n        *s_out = \"DW_LNS_const_add_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_fixed_advance_pc:\n        *s_out = \"DW_LNS_fixed_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_set_prologue_end:\n        *s_out = \"DW_LNS_set_prologue_end\";\n        return DW_DLV_OK;\n    case DW_LNS_set_epilogue_begin:\n        *s_out = \"DW_LNS_set_epilogue_begin\";\n        return DW_DLV_OK;\n    case DW_LNS_set_isa:\n        *s_out = \"DW_LNS_set_isa\";\n        return DW_DLV_OK;\n    case DW_LNS_set_address_from_logical:\n        *s_out = \"DW_LNS_set_address_from_logical\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xd. DW_LNS_set_subprogram */\n    case DW_LNS_inlined_call:\n        *s_out = \"DW_LNS_inlined_call\";\n        return DW_DLV_OK;\n    case DW_LNS_pop_context:\n        *s_out = \"DW_LNS_pop_context\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNE_end_sequence:\n        *s_out = \"DW_LNE_end_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_set_address:\n        *s_out = \"DW_LNE_set_address\";\n        return DW_DLV_OK;\n    case DW_LNE_define_file:\n        *s_out = \"DW_LNE_define_file\";\n        return DW_DLV_OK;\n    case DW_LNE_set_discriminator:\n        *s_out = \"DW_LNE_set_discriminator\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_is_UV_update:\n        *s_out = \"DW_LNE_HP_negate_is_UV_update\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_push_context:\n        *s_out = \"DW_LNE_HP_push_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_pop_context:\n        *s_out = \"DW_LNE_HP_pop_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_file_line_column:\n        *s_out = \"DW_LNE_HP_set_file_line_column\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_routine_name:\n        *s_out = \"DW_LNE_HP_set_routine_name\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_sequence:\n        *s_out = \"DW_LNE_HP_set_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_post_semantics:\n        *s_out = \"DW_LNE_HP_negate_post_semantics\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_function_exit:\n        *s_out = \"DW_LNE_HP_negate_function_exit\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_front_end_logical:\n        *s_out = \"DW_LNE_HP_negate_front_end_logical\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_define_proc:\n        *s_out = \"DW_LNE_HP_define_proc\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_source_file_correlation:\n        *s_out = \"DW_LNE_HP_source_file_correlation\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_LNE_lo_user */\n    case DW_LNE_hi_user:\n        *s_out = \"DW_LNE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ISA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ISA_UNKNOWN:\n        *s_out = \"DW_ISA_UNKNOWN\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_thumb:\n        *s_out = \"DW_ISA_ARM_thumb\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_arm:\n        *s_out = \"DW_ISA_ARM_arm\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACRO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACRO_define:\n        *s_out = \"DW_MACRO_define\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef:\n        *s_out = \"DW_MACRO_undef\";\n        return DW_DLV_OK;\n    case DW_MACRO_start_file:\n        *s_out = \"DW_MACRO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_end_file:\n        *s_out = \"DW_MACRO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strp:\n        *s_out = \"DW_MACRO_define_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strp:\n        *s_out = \"DW_MACRO_undef_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_import:\n        *s_out = \"DW_MACRO_import\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_sup:\n        *s_out = \"DW_MACRO_define_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_sup:\n        *s_out = \"DW_MACRO_undef_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_import_sup:\n        *s_out = \"DW_MACRO_import_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strx:\n        *s_out = \"DW_MACRO_define_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strx:\n        *s_out = \"DW_MACRO_undef_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_lo_user:\n        *s_out = \"DW_MACRO_lo_user\";\n        return DW_DLV_OK;\n    case DW_MACRO_hi_user:\n        *s_out = \"DW_MACRO_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACINFO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACINFO_define:\n        *s_out = \"DW_MACINFO_define\";\n        return DW_DLV_OK;\n    case DW_MACINFO_undef:\n        *s_out = \"DW_MACINFO_undef\";\n        return DW_DLV_OK;\n    case DW_MACINFO_start_file:\n        *s_out = \"DW_MACINFO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_end_file:\n        *s_out = \"DW_MACINFO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_vendor_ext:\n        *s_out = \"DW_MACINFO_vendor_ext\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CFA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CFA_extended:\n        *s_out = \"DW_CFA_extended\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_CFA_nop */\n    case DW_CFA_set_loc:\n        *s_out = \"DW_CFA_set_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc1:\n        *s_out = \"DW_CFA_advance_loc1\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc2:\n        *s_out = \"DW_CFA_advance_loc2\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc4:\n        *s_out = \"DW_CFA_advance_loc4\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended:\n        *s_out = \"DW_CFA_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_extended:\n        *s_out = \"DW_CFA_restore_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_undefined:\n        *s_out = \"DW_CFA_undefined\";\n        return DW_DLV_OK;\n    case DW_CFA_same_value:\n        *s_out = \"DW_CFA_same_value\";\n        return DW_DLV_OK;\n    case DW_CFA_register:\n        *s_out = \"DW_CFA_register\";\n        return DW_DLV_OK;\n    case DW_CFA_remember_state:\n        *s_out = \"DW_CFA_remember_state\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_state:\n        *s_out = \"DW_CFA_restore_state\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa:\n        *s_out = \"DW_CFA_def_cfa\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_register:\n        *s_out = \"DW_CFA_def_cfa_register\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset:\n        *s_out = \"DW_CFA_def_cfa_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_expression:\n        *s_out = \"DW_CFA_def_cfa_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_expression:\n        *s_out = \"DW_CFA_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended_sf:\n        *s_out = \"DW_CFA_offset_extended_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_sf:\n        *s_out = \"DW_CFA_def_cfa_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset_sf:\n        *s_out = \"DW_CFA_def_cfa_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset:\n        *s_out = \"DW_CFA_val_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset_sf:\n        *s_out = \"DW_CFA_val_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_expression:\n        *s_out = \"DW_CFA_val_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_lo_user:\n        *s_out = \"DW_CFA_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x1c. DW_CFA_low_user */\n    case DW_CFA_MIPS_advance_loc8:\n        *s_out = \"DW_CFA_MIPS_advance_loc8\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_window_save:\n        *s_out = \"DW_CFA_GNU_window_save\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_args_size:\n        *s_out = \"DW_CFA_GNU_args_size\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_negative_offset_extended:\n        *s_out = \"DW_CFA_GNU_negative_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_METAWARE_info:\n        *s_out = \"DW_CFA_METAWARE_info\";\n        return DW_DLV_OK;\n    case DW_CFA_high_user:\n        *s_out = \"DW_CFA_high_user\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc:\n        *s_out = \"DW_CFA_advance_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_offset:\n        *s_out = \"DW_CFA_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_restore:\n        *s_out = \"DW_CFA_restore\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_EH_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_EH_PE_absptr:\n        *s_out = \"DW_EH_PE_absptr\";\n        return DW_DLV_OK;\n    case DW_EH_PE_uleb128:\n        *s_out = \"DW_EH_PE_uleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata2:\n        *s_out = \"DW_EH_PE_udata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata4:\n        *s_out = \"DW_EH_PE_udata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata8:\n        *s_out = \"DW_EH_PE_udata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sleb128:\n        *s_out = \"DW_EH_PE_sleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata2:\n        *s_out = \"DW_EH_PE_sdata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata4:\n        *s_out = \"DW_EH_PE_sdata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata8:\n        *s_out = \"DW_EH_PE_sdata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_pcrel:\n        *s_out = \"DW_EH_PE_pcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_textrel:\n        *s_out = \"DW_EH_PE_textrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_datarel:\n        *s_out = \"DW_EH_PE_datarel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_funcrel:\n        *s_out = \"DW_EH_PE_funcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_aligned:\n        *s_out = \"DW_EH_PE_aligned\";\n        return DW_DLV_OK;\n    case DW_EH_PE_omit:\n        *s_out = \"DW_EH_PE_omit\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FRAME_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FRAME_CFA_COL:\n        *s_out = \"DW_FRAME_CFA_COL\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_LAST_REG_NUM */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_RA_COL */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_STATIC_LINK */\n    case DW_FRAME_REG1:\n        *s_out = \"DW_FRAME_REG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG2:\n        *s_out = \"DW_FRAME_REG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG3:\n        *s_out = \"DW_FRAME_REG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG4:\n        *s_out = \"DW_FRAME_REG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG5:\n        *s_out = \"DW_FRAME_REG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG6:\n        *s_out = \"DW_FRAME_REG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG7:\n        *s_out = \"DW_FRAME_REG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG8:\n        *s_out = \"DW_FRAME_REG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG9:\n        *s_out = \"DW_FRAME_REG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG10:\n        *s_out = \"DW_FRAME_REG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG11:\n        *s_out = \"DW_FRAME_REG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG12:\n        *s_out = \"DW_FRAME_REG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG13:\n        *s_out = \"DW_FRAME_REG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG14:\n        *s_out = \"DW_FRAME_REG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG15:\n        *s_out = \"DW_FRAME_REG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG16:\n        *s_out = \"DW_FRAME_REG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG17:\n        *s_out = \"DW_FRAME_REG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG18:\n        *s_out = \"DW_FRAME_REG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG19:\n        *s_out = \"DW_FRAME_REG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG20:\n        *s_out = \"DW_FRAME_REG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG21:\n        *s_out = \"DW_FRAME_REG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG22:\n        *s_out = \"DW_FRAME_REG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG23:\n        *s_out = \"DW_FRAME_REG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG24:\n        *s_out = \"DW_FRAME_REG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG25:\n        *s_out = \"DW_FRAME_REG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG26:\n        *s_out = \"DW_FRAME_REG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG27:\n        *s_out = \"DW_FRAME_REG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG28:\n        *s_out = \"DW_FRAME_REG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG29:\n        *s_out = \"DW_FRAME_REG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG30:\n        *s_out = \"DW_FRAME_REG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG31:\n        *s_out = \"DW_FRAME_REG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG0:\n        *s_out = \"DW_FRAME_FREG0\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG1:\n        *s_out = \"DW_FRAME_FREG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG2:\n        *s_out = \"DW_FRAME_FREG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG3:\n        *s_out = \"DW_FRAME_FREG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG4:\n        *s_out = \"DW_FRAME_FREG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG5:\n        *s_out = \"DW_FRAME_FREG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG6:\n        *s_out = \"DW_FRAME_FREG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG7:\n        *s_out = \"DW_FRAME_FREG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG8:\n        *s_out = \"DW_FRAME_FREG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG9:\n        *s_out = \"DW_FRAME_FREG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG10:\n        *s_out = \"DW_FRAME_FREG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG11:\n        *s_out = \"DW_FRAME_FREG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG12:\n        *s_out = \"DW_FRAME_FREG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG13:\n        *s_out = \"DW_FRAME_FREG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG14:\n        *s_out = \"DW_FRAME_FREG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG15:\n        *s_out = \"DW_FRAME_FREG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG16:\n        *s_out = \"DW_FRAME_FREG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG17:\n        *s_out = \"DW_FRAME_FREG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG18:\n        *s_out = \"DW_FRAME_FREG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG19:\n        *s_out = \"DW_FRAME_FREG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG20:\n        *s_out = \"DW_FRAME_FREG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG21:\n        *s_out = \"DW_FRAME_FREG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG22:\n        *s_out = \"DW_FRAME_FREG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG23:\n        *s_out = \"DW_FRAME_FREG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG24:\n        *s_out = \"DW_FRAME_FREG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG25:\n        *s_out = \"DW_FRAME_FREG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG26:\n        *s_out = \"DW_FRAME_FREG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG27:\n        *s_out = \"DW_FRAME_FREG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG28:\n        *s_out = \"DW_FRAME_FREG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG29:\n        *s_out = \"DW_FRAME_FREG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG30:\n        *s_out = \"DW_FRAME_FREG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG31:\n        *s_out = \"DW_FRAME_FREG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG32:\n        *s_out = \"DW_FRAME_FREG32\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG33:\n        *s_out = \"DW_FRAME_FREG33\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG34:\n        *s_out = \"DW_FRAME_FREG34\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG35:\n        *s_out = \"DW_FRAME_FREG35\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG36:\n        *s_out = \"DW_FRAME_FREG36\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG37:\n        *s_out = \"DW_FRAME_FREG37\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG38:\n        *s_out = \"DW_FRAME_FREG38\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG39:\n        *s_out = \"DW_FRAME_FREG39\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG40:\n        *s_out = \"DW_FRAME_FREG40\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG41:\n        *s_out = \"DW_FRAME_FREG41\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG42:\n        *s_out = \"DW_FRAME_FREG42\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG43:\n        *s_out = \"DW_FRAME_FREG43\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG44:\n        *s_out = \"DW_FRAME_FREG44\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG45:\n        *s_out = \"DW_FRAME_FREG45\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG46:\n        *s_out = \"DW_FRAME_FREG46\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG47:\n        *s_out = \"DW_FRAME_FREG47\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG48:\n        *s_out = \"DW_FRAME_FREG48\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG49:\n        *s_out = \"DW_FRAME_FREG49\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG50:\n        *s_out = \"DW_FRAME_FREG50\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG51:\n        *s_out = \"DW_FRAME_FREG51\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG52:\n        *s_out = \"DW_FRAME_FREG52\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG53:\n        *s_out = \"DW_FRAME_FREG53\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG54:\n        *s_out = \"DW_FRAME_FREG54\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG55:\n        *s_out = \"DW_FRAME_FREG55\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG56:\n        *s_out = \"DW_FRAME_FREG56\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG57:\n        *s_out = \"DW_FRAME_FREG57\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG58:\n        *s_out = \"DW_FRAME_FREG58\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG59:\n        *s_out = \"DW_FRAME_FREG59\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG60:\n        *s_out = \"DW_FRAME_FREG60\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG61:\n        *s_out = \"DW_FRAME_FREG61\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG62:\n        *s_out = \"DW_FRAME_FREG62\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG63:\n        *s_out = \"DW_FRAME_FREG63\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG64:\n        *s_out = \"DW_FRAME_FREG64\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG65:\n        *s_out = \"DW_FRAME_FREG65\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG66:\n        *s_out = \"DW_FRAME_FREG66\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG67:\n        *s_out = \"DW_FRAME_FREG67\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG68:\n        *s_out = \"DW_FRAME_FREG68\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG69:\n        *s_out = \"DW_FRAME_FREG69\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG70:\n        *s_out = \"DW_FRAME_FREG70\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG71:\n        *s_out = \"DW_FRAME_FREG71\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG72:\n        *s_out = \"DW_FRAME_FREG72\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG73:\n        *s_out = \"DW_FRAME_FREG73\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG74:\n        *s_out = \"DW_FRAME_FREG74\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG75:\n        *s_out = \"DW_FRAME_FREG75\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG76:\n        *s_out = \"DW_FRAME_FREG76\";\n        return DW_DLV_OK;\n    case DW_FRAME_HIGHEST_NORMAL_REGISTER:\n        *s_out = \"DW_FRAME_HIGHEST_NORMAL_REGISTER\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CHILDREN_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CHILDREN_no:\n        *s_out = \"DW_CHILDREN_no\";\n        return DW_DLV_OK;\n    case DW_CHILDREN_yes:\n        *s_out = \"DW_CHILDREN_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ADDR_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ADDR_none:\n        *s_out = \"DW_ADDR_none\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n\n/* END FILE */\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef DWARF_NAMES_H\n#define DWARF_NAMES_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif /* __cplusplus */\n\nextern int dwarf_get_TAG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_children_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FORM_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_AT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_OP_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DEFAULTED_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_IDX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLEX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_RLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIVIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIKIND_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_UT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_SECT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_END_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATCF_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ACCESS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIRTUALITY_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LANG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ID_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_INL_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ORD_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DSC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNCT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ISA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACRO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACINFO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CFA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_EH_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FRAME_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CHILDREN_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ADDR_name(unsigned int /*val_in*/, const char ** /*s_out */);\n\n#ifdef __cplusplus\n}\n#endif /* __cplusplus */\n\n#endif /* DWARF_NAMES_H */\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n/* Common extensions */\n#define ATTR_TREE_EXT_ROW_COUNT 18\n\n#define ATTR_TREE_EXT_COLUMN_COUNT 10\n\nstatic unsigned int tag_attr_combination_ext_table[ATTR_TREE_EXT_ROW_COUNT][ATTR_TREE_EXT_COLUMN_COUNT] = {\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x00000013,0x0000001d,0x00002007,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x11 - DW_TAG_compile_unit                  */\n    { 0x00000011,0x00003fe1,0x00002131,0x00002134,0x00002135,0x00002130,0x00002132,0x00002133,0x00002119,0x00000000,},\n/* 0x3c - DW_TAG_partial_unit                  */\n    { 0x0000003c,0x00000075,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0d - DW_TAG_member                        */\n    { 0x0000000d,0x00002108,0x00002109,0x0000210a,0x0000210b,0x00002007,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x04 - DW_TAG_enumeration_type              */\n    { 0x00000004,0x0000003e,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x01 - DW_TAG_array_type                    */\n    { 0x00000001,0x00002107,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0x0000002e,0x00002007,0x00002001,0x0000210c,0x0000210d,0x0000210e,0x00003fe7,0x00003fe1,0x00002116,0x00002117,},\n/* 0x41 - DW_TAG_type_unit                     */\n    { 0x00000041,0x00002133,0x00002130,0x0000210f,0x00002134,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x34 - DW_TAG_variable                      */\n    { 0x00000034,0x00002007,0x00002108,0x00002109,0x0000210a,0x0000210b,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x4106 - DW_TAG_GNU_template_template_parameter*/\n    { 0x00004106,0x00000039,0x0000003a,0x0000003b,0x00000003,0x00002110,0x00002108,0x00000000,0x00000000,0x00000000,},\n/* 0x4107 - DW_TAG_GNU_template_parameter_pack   */\n    { 0x00004107,0x00000039,0x0000003a,0x0000003b,0x00000003,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x4108 - DW_TAG_GNU_formal_parameter_pack     */\n    { 0x00004108,0x00000039,0x0000003a,0x0000003b,0x00000003,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x4109 - DW_TAG_GNU_call_site                 */\n    { 0x00004109,0x00000031,0x00002113,0x00000011,0x00000001,0x00002115,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x410a - DW_TAG_GNU_call_site_parameter       */\n    { 0x0000410a,0x00002111,0x00002112,0x00000031,0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x27 - DW_TAG_constant                      */\n    { 0x00000027,0x00002303,0x00002304,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x21 - DW_TAG_subrange_type                 */\n    { 0x00000021,0x00002305,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0x0000001d,0x00002136,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0x0000000b,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef HAVE_USAGE_TAG_ATTR\n#define HAVE_USAGE_TAG_ATTR 1\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#ifdef HAVE_USAGE_TAG_ATTR\n#include \"dwarf.h\"\n#include \"libdwarf.h\"\n\ntypedef struct {\n    unsigned int count; /* Attribute count */\n    Dwarf_Half attr;    /* Attribute value */\n} Usage_Tag_Attr;\n\n/* 0x23 - DW_TAG_access_declaration */\nstatic Usage_Tag_Attr tag_attr_23[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x01 - DW_TAG_array_type */\nstatic Usage_Tag_Attr tag_attr_01[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x09 */  0, DW_AT_ordering},\n    {/* 0x71 */  0, DW_AT_rank},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x47 - DW_TAG_atomic_type */\nstatic Usage_Tag_Attr tag_attr_47[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x24 - DW_TAG_base_type */\nstatic Usage_Tag_Attr tag_attr_24[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x5b */  0, DW_AT_binary_scale},\n    {/* 0x0c */  0, DW_AT_bit_offset},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x6b */  0, DW_AT_data_bit_offset},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x5c */  0, DW_AT_decimal_scale},\n    {/* 0x5e */  0, DW_AT_decimal_sign},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x5f */  0, DW_AT_digit_count},\n    {/* 0x3e */  0, DW_AT_encoding},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x60 */  0, DW_AT_picture_string},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x5d */  0, DW_AT_small},\n    {/*      */  0, 0}\n};\n\n/* 0x48 - DW_TAG_call_site */\nstatic Usage_Tag_Attr tag_attr_48[] = {\n    {/* 0x57 */  0, DW_AT_call_column},\n    {/* 0x58 */  0, DW_AT_call_file},\n    {/* 0x59 */  0, DW_AT_call_line},\n    {/* 0x7f */  0, DW_AT_call_origin},\n    {/* 0x81 */  0, DW_AT_call_pc},\n    {/* 0x7d */  0, DW_AT_call_return_pc},\n    {/* 0x82 */  0, DW_AT_call_tail_call},\n    {/* 0x83 */  0, DW_AT_call_target},\n    {/* 0x84 */  0, DW_AT_call_target_clobbered},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x49 - DW_TAG_call_site_parameter */\nstatic Usage_Tag_Attr tag_attr_49[] = {\n    {/* 0x85 */  0, DW_AT_call_data_location},\n    {/* 0x86 */  0, DW_AT_call_data_value},\n    {/* 0x80 */  0, DW_AT_call_parameter},\n    {/* 0x7e */  0, DW_AT_call_value},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x25 - DW_TAG_catch_block */\nstatic Usage_Tag_Attr tag_attr_25[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x02 - DW_TAG_class_type */\nstatic Usage_Tag_Attr tag_attr_02[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x1d */  0, DW_AT_containing_type},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x44 - DW_TAG_coarray_type */\nstatic Usage_Tag_Attr tag_attr_44[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x1a - DW_TAG_common_block */\nstatic Usage_Tag_Attr tag_attr_1a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x1b - DW_TAG_common_inclusion */\nstatic Usage_Tag_Attr tag_attr_1b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x1a */  0, DW_AT_common_reference},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x11 - DW_TAG_compile_unit */\nstatic Usage_Tag_Attr tag_attr_11[] = {\n    {/* 0x73 */  0, DW_AT_addr_base},\n    {/* 0x35 */  0, DW_AT_base_types},\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x75 */  0, DW_AT_dwo_id},\n    {/* 0x76 */  0, DW_AT_dwo_name},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x42 */  0, DW_AT_identifier_case},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x13 */  0, DW_AT_language},\n    {/* 0x8c */  0, DW_AT_loclists_base},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x43 */  0, DW_AT_macro_info},\n    {/* 0x79 */  0, DW_AT_macros},\n    {/* 0x6a */  0, DW_AT_main_subprogram},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x25 */  0, DW_AT_producer},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x74 */  0, DW_AT_rnglists_base},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x3f - DW_TAG_condition */\nstatic Usage_Tag_Attr tag_attr_3f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x26 - DW_TAG_const_type */\nstatic Usage_Tag_Attr tag_attr_26[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x27 - DW_TAG_constant */\nstatic Usage_Tag_Attr tag_attr_27[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x36 - DW_TAG_dwarf_procedure */\nstatic Usage_Tag_Attr tag_attr_36[] = {\n    {/* 0x02 */  0, DW_AT_location},\n    {/*      */  0, 0}\n};\n\n/* 0x46 - DW_TAG_dynamic_type */\nstatic Usage_Tag_Attr tag_attr_46[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x03 - DW_TAG_entry_point */\nstatic Usage_Tag_Attr tag_attr_03[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x40 */  0, DW_AT_frame_base},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x2a */  0, DW_AT_return_addr},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x48 */  0, DW_AT_static_link},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x04 - DW_TAG_enumeration_type */\nstatic Usage_Tag_Attr tag_attr_04[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x51 */  0, DW_AT_byte_stride},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x6d */  0, DW_AT_enum_class},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x28 - DW_TAG_enumerator */\nstatic Usage_Tag_Attr tag_attr_28[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x29 - DW_TAG_file_type */\nstatic Usage_Tag_Attr tag_attr_29[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x05 - DW_TAG_formal_parameter */\nstatic Usage_Tag_Attr tag_attr_05[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x1e */  0, DW_AT_default_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x21 */  0, DW_AT_is_optional},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x4b */  0, DW_AT_variable_parameter},\n    {/*      */  0, 0}\n};\n\n/* 0x2a - DW_TAG_friend */\nstatic Usage_Tag_Attr tag_attr_2a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x41 */  0, DW_AT_friend},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x45 - DW_TAG_generic_subrange */\nstatic Usage_Tag_Attr tag_attr_45[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x51 */  0, DW_AT_byte_stride},\n    {/* 0x37 */  0, DW_AT_count},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x22 */  0, DW_AT_lower_bound},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x62 */  0, DW_AT_threads_scaled},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x2f */  0, DW_AT_upper_bound},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x08 - DW_TAG_imported_declaration */\nstatic Usage_Tag_Attr tag_attr_08[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x18 */  0, DW_AT_import},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x4b - DW_TAG_immutable_type */\nstatic Usage_Tag_Attr tag_attr_4b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x3a - DW_TAG_imported_module */\nstatic Usage_Tag_Attr tag_attr_3a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x18 */  0, DW_AT_import},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x3d - DW_TAG_imported_unit */\nstatic Usage_Tag_Attr tag_attr_3d[] = {\n    {/* 0x18 */  0, DW_AT_import},\n    {/*      */  0, 0}\n};\n\n/* 0x1c - DW_TAG_inheritance */\nstatic Usage_Tag_Attr tag_attr_1c[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x38 */  0, DW_AT_data_member_location},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x4c */  0, DW_AT_virtuality},\n    {/*      */  0, 0}\n};\n\n/* 0x1d - DW_TAG_inlined_subroutine */\nstatic Usage_Tag_Attr tag_attr_1d[] = {\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x57 */  0, DW_AT_call_column},\n    {/* 0x58 */  0, DW_AT_call_file},\n    {/* 0x59 */  0, DW_AT_call_line},\n    {/* 0x6c */  0, DW_AT_const_expr},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x2a */  0, DW_AT_return_addr},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x56 */  0, DW_AT_trampoline},\n    {/*      */  0, 0}\n};\n\n/* 0x38 - DW_TAG_interface_type */\nstatic Usage_Tag_Attr tag_attr_38[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x0a - DW_TAG_label */\nstatic Usage_Tag_Attr tag_attr_0a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x0b - DW_TAG_lexical_block */\nstatic Usage_Tag_Attr tag_attr_0b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x0d - DW_TAG_member */\nstatic Usage_Tag_Attr tag_attr_0d[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x0c */  0, DW_AT_bit_offset},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x6b */  0, DW_AT_data_bit_offset},\n    {/* 0x38 */  0, DW_AT_data_member_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x61 */  0, DW_AT_mutable},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x1e - DW_TAG_module */\nstatic Usage_Tag_Attr tag_attr_1e[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x45 */  0, DW_AT_priority},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2b - DW_TAG_namelist */\nstatic Usage_Tag_Attr tag_attr_2b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2c - DW_TAG_namelist_item */\nstatic Usage_Tag_Attr tag_attr_2c[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x44 */  0, DW_AT_namelist_item},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x39 - DW_TAG_namespace */\nstatic Usage_Tag_Attr tag_attr_39[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x54 */  0, DW_AT_extension},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x2d - DW_TAG_packed_type */\nstatic Usage_Tag_Attr tag_attr_2d[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x3c - DW_TAG_partial_unit */\nstatic Usage_Tag_Attr tag_attr_3c[] = {\n    {/* 0x73 */  0, DW_AT_addr_base},\n    {/* 0x35 */  0, DW_AT_base_types},\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x76 */  0, DW_AT_dwo_name},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x42 */  0, DW_AT_identifier_case},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x13 */  0, DW_AT_language},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x43 */  0, DW_AT_macro_info},\n    {/* 0x79 */  0, DW_AT_macros},\n    {/* 0x6a */  0, DW_AT_main_subprogram},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x87 */  0, DW_AT_noreturn},\n    {/* 0x25 */  0, DW_AT_producer},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x74 */  0, DW_AT_rnglists_base},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x0f - DW_TAG_pointer_type */\nstatic Usage_Tag_Attr tag_attr_0f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x1f - DW_TAG_ptr_to_member_type */\nstatic Usage_Tag_Attr tag_attr_1f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x1d */  0, DW_AT_containing_type},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x4a */  0, DW_AT_use_location},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x10 - DW_TAG_reference_type */\nstatic Usage_Tag_Attr tag_attr_10[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x37 - DW_TAG_restrict_type */\nstatic Usage_Tag_Attr tag_attr_37[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x42 - DW_TAG_rvalue_reference_type */\nstatic Usage_Tag_Attr tag_attr_42[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x20 - DW_TAG_set_type */\nstatic Usage_Tag_Attr tag_attr_20[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x40 - DW_TAG_shared_type */\nstatic Usage_Tag_Attr tag_attr_40[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x37 */  0, DW_AT_count},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x4a - DW_TAG_skeleton_unit */\nstatic Usage_Tag_Attr tag_attr_4a[] = {\n    {/* 0x73 */  0, DW_AT_addr_base},\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x76 */  0, DW_AT_dwo_name},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x74 */  0, DW_AT_rnglists_base},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x12 - DW_TAG_string_type */\nstatic Usage_Tag_Attr tag_attr_12[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x19 */  0, DW_AT_string_length},\n    {/* 0x6f */  0, DW_AT_string_length_bit_size},\n    {/* 0x70 */  0, DW_AT_string_length_byte_size},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x13 - DW_TAG_structure_type */\nstatic Usage_Tag_Attr tag_attr_13[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2e - DW_TAG_subprogram */\nstatic Usage_Tag_Attr tag_attr_2e[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x7a */  0, DW_AT_call_all_calls},\n    {/* 0x7c */  0, DW_AT_call_all_tail_calls},\n    {/* 0x7b */  0, DW_AT_call_all_source_calls},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x1d */  0, DW_AT_containing_type},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x8b */  0, DW_AT_defaulted},\n    {/* 0x8a */  0, DW_AT_deleted},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x66 */  0, DW_AT_elemental},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x63 */  0, DW_AT_explicit},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x40 */  0, DW_AT_frame_base},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x20 */  0, DW_AT_inline},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x6a */  0, DW_AT_main_subprogram},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x87 */  0, DW_AT_noreturn},\n    {/* 0x64 */  0, DW_AT_object_pointer},\n    {/* 0x27 */  0, DW_AT_prototyped},\n    {/* 0x67 */  0, DW_AT_pure},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x68 */  0, DW_AT_recursive},\n    {/* 0x77 */  0, DW_AT_reference},\n    {/* 0x2a */  0, DW_AT_return_addr},\n    {/* 0x78 */  0, DW_AT_rvalue_reference},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x48 */  0, DW_AT_static_link},\n    {/* 0x56 */  0, DW_AT_trampoline},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/* 0x4c */  0, DW_AT_virtuality},\n    {/* 0x4d */  0, DW_AT_vtable_elem_location},\n    {/*      */  0, 0}\n};\n\n/* 0x21 - DW_TAG_subrange_type */\nstatic Usage_Tag_Attr tag_attr_21[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x51 */  0, DW_AT_byte_stride},\n    {/* 0x37 */  0, DW_AT_count},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x22 */  0, DW_AT_lower_bound},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x62 */  0, DW_AT_threads_scaled},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x2f */  0, DW_AT_upper_bound},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x15 - DW_TAG_subroutine_type */\nstatic Usage_Tag_Attr tag_attr_15[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x64 */  0, DW_AT_object_pointer},\n    {/* 0x27 */  0, DW_AT_prototyped},\n    {/* 0x78 */  0, DW_AT_rvalue_reference},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x43 - DW_TAG_template_alias */\nstatic Usage_Tag_Attr tag_attr_43[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2f - DW_TAG_template_type_parameter */\nstatic Usage_Tag_Attr tag_attr_2f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x1e */  0, DW_AT_default_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x30 - DW_TAG_template_value_parameter */\nstatic Usage_Tag_Attr tag_attr_30[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x1e */  0, DW_AT_default_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x31 - DW_TAG_thrown_type */\nstatic Usage_Tag_Attr tag_attr_31[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x32 - DW_TAG_try_block */\nstatic Usage_Tag_Attr tag_attr_32[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x16 - DW_TAG_typedef */\nstatic Usage_Tag_Attr tag_attr_16[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x41 - DW_TAG_type_unit */\nstatic Usage_Tag_Attr tag_attr_41[] = {\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x13 */  0, DW_AT_language},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x17 - DW_TAG_union_type */\nstatic Usage_Tag_Attr tag_attr_17[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x18 - DW_TAG_unspecified_parameters */\nstatic Usage_Tag_Attr tag_attr_18[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x3b - DW_TAG_unspecified_type */\nstatic Usage_Tag_Attr tag_attr_3b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/*      */  0, 0}\n};\n\n/* 0x34 - DW_TAG_variable */\nstatic Usage_Tag_Attr tag_attr_34[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x6c */  0, DW_AT_const_expr},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x19 - DW_TAG_variant */\nstatic Usage_Tag_Attr tag_attr_19[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x3d */  0, DW_AT_discr_list},\n    {/* 0x16 */  0, DW_AT_discr_value},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x33 - DW_TAG_variant_part */\nstatic Usage_Tag_Attr tag_attr_33[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x15 */  0, DW_AT_discr},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x35 - DW_TAG_volatile_type */\nstatic Usage_Tag_Attr tag_attr_35[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x22 - DW_TAG_with_stmt */\nstatic Usage_Tag_Attr tag_attr_22[] = {\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\nstatic Usage_Tag_Attr *usage_tag_attr[] = {\n    0,\n    tag_attr_01, /* 0x01 - DW_TAG_array_type */\n    tag_attr_02, /* 0x02 - DW_TAG_class_type */\n    tag_attr_03, /* 0x03 - DW_TAG_entry_point */\n    tag_attr_04, /* 0x04 - DW_TAG_enumeration_type */\n    tag_attr_05, /* 0x05 - DW_TAG_formal_parameter */\n    0,\n    0,\n    tag_attr_08, /* 0x08 - DW_TAG_imported_declaration */\n    0,\n    tag_attr_0a, /* 0x0a - DW_TAG_label */\n    tag_attr_0b, /* 0x0b - DW_TAG_lexical_block */\n    0,\n    tag_attr_0d, /* 0x0d - DW_TAG_member */\n    0,\n    tag_attr_0f, /* 0x0f - DW_TAG_pointer_type */\n    tag_attr_10, /* 0x10 - DW_TAG_reference_type */\n    tag_attr_11, /* 0x11 - DW_TAG_compile_unit */\n    tag_attr_12, /* 0x12 - DW_TAG_string_type */\n    tag_attr_13, /* 0x13 - DW_TAG_structure_type */\n    0,\n    tag_attr_15, /* 0x15 - DW_TAG_subroutine_type */\n    tag_attr_16, /* 0x16 - DW_TAG_typedef */\n    tag_attr_17, /* 0x17 - DW_TAG_union_type */\n    tag_attr_18, /* 0x18 - DW_TAG_unspecified_parameters */\n    tag_attr_19, /* 0x19 - DW_TAG_variant */\n    tag_attr_1a, /* 0x1a - DW_TAG_common_block */\n    tag_attr_1b, /* 0x1b - DW_TAG_common_inclusion */\n    tag_attr_1c, /* 0x1c - DW_TAG_inheritance */\n    tag_attr_1d, /* 0x1d - DW_TAG_inlined_subroutine */\n    tag_attr_1e, /* 0x1e - DW_TAG_module */\n    tag_attr_1f, /* 0x1f - DW_TAG_ptr_to_member_type */\n    tag_attr_20, /* 0x20 - DW_TAG_set_type */\n    tag_attr_21, /* 0x21 - DW_TAG_subrange_type */\n    tag_attr_22, /* 0x22 - DW_TAG_with_stmt */\n    tag_attr_23, /* 0x23 - DW_TAG_access_declaration */\n    tag_attr_24, /* 0x24 - DW_TAG_base_type */\n    tag_attr_25, /* 0x25 - DW_TAG_catch_block */\n    tag_attr_26, /* 0x26 - DW_TAG_const_type */\n    tag_attr_27, /* 0x27 - DW_TAG_constant */\n    tag_attr_28, /* 0x28 - DW_TAG_enumerator */\n    tag_attr_29, /* 0x29 - DW_TAG_file_type */\n    tag_attr_2a, /* 0x2a - DW_TAG_friend */\n    tag_attr_2b, /* 0x2b - DW_TAG_namelist */\n    tag_attr_2c, /* 0x2c - DW_TAG_namelist_item */\n    tag_attr_2d, /* 0x2d - DW_TAG_packed_type */\n    tag_attr_2e, /* 0x2e - DW_TAG_subprogram */\n    tag_attr_2f, /* 0x2f - DW_TAG_template_type_parameter */\n    tag_attr_30, /* 0x30 - DW_TAG_template_value_parameter */\n    tag_attr_31, /* 0x31 - DW_TAG_thrown_type */\n    tag_attr_32, /* 0x32 - DW_TAG_try_block */\n    tag_attr_33, /* 0x33 - DW_TAG_variant_part */\n    tag_attr_34, /* 0x34 - DW_TAG_variable */\n    tag_attr_35, /* 0x35 - DW_TAG_volatile_type */\n    tag_attr_36, /* 0x36 - DW_TAG_dwarf_procedure */\n    tag_attr_37, /* 0x37 - DW_TAG_restrict_type */\n    tag_attr_38, /* 0x38 - DW_TAG_interface_type */\n    tag_attr_39, /* 0x39 - DW_TAG_namespace */\n    tag_attr_3a, /* 0x3a - DW_TAG_imported_module */\n    tag_attr_3b, /* 0x3b - DW_TAG_unspecified_type */\n    tag_attr_3c, /* 0x3c - DW_TAG_partial_unit */\n    tag_attr_3d, /* 0x3d - DW_TAG_imported_unit */\n    0,\n    tag_attr_3f, /* 0x3f - DW_TAG_condition */\n    tag_attr_40, /* 0x40 - DW_TAG_shared_type */\n    tag_attr_41, /* 0x41 - DW_TAG_type_unit */\n    tag_attr_42, /* 0x42 - DW_TAG_rvalue_reference_type */\n    tag_attr_43, /* 0x43 - DW_TAG_template_alias */\n    tag_attr_44, /* 0x44 - DW_TAG_coarray_type */\n    tag_attr_45, /* 0x45 - DW_TAG_generic_subrange */\n    tag_attr_46, /* 0x46 - DW_TAG_dynamic_type */\n    tag_attr_47, /* 0x47 - DW_TAG_atomic_type */\n    tag_attr_48, /* 0x48 - DW_TAG_call_site */\n    tag_attr_49, /* 0x49 - DW_TAG_call_site_parameter */\n    tag_attr_4a, /* 0x4a - DW_TAG_skeleton_unit */\n    tag_attr_4b, /* 0x4b - DW_TAG_immutable_type */\n    0\n};\n\ntypedef struct {\n    Dwarf_Small legal; /* Legal attributes */\n    Dwarf_Small found; /* Found attributes */\n} Rate_Tag_Attr;\n\nstatic Rate_Tag_Attr rate_tag_attr[] = {\n    {0, 0},\n    {22, 0, /* 0x01 - DW_TAG_array_type */},\n    {21, 0, /* 0x02 - DW_TAG_class_type */},\n    {14, 0, /* 0x03 - DW_TAG_entry_point */},\n    {24, 0, /* 0x04 - DW_TAG_enumeration_type */},\n    {16, 0, /* 0x05 - DW_TAG_formal_parameter */},\n    {0, 0},\n    {0, 0},\n    { 9, 0, /* 0x08 - DW_TAG_imported_declaration */},\n    {0, 0},\n    {10, 0, /* 0x0a - DW_TAG_label */},\n    {12, 0, /* 0x0b - DW_TAG_lexical_block */},\n    {0, 0},\n    {21, 0, /* 0x0d - DW_TAG_member */},\n    {0, 0},\n    {11, 0, /* 0x0f - DW_TAG_pointer_type */},\n    {11, 0, /* 0x10 - DW_TAG_reference_type */},\n    {22, 0, /* 0x11 - DW_TAG_compile_unit */},\n    {20, 0, /* 0x12 - DW_TAG_string_type */},\n    {22, 0, /* 0x13 - DW_TAG_structure_type */},\n    {0, 0},\n    {20, 0, /* 0x15 - DW_TAG_subroutine_type */},\n    {16, 0, /* 0x16 - DW_TAG_typedef */},\n    {22, 0, /* 0x17 - DW_TAG_union_type */},\n    { 6, 0, /* 0x18 - DW_TAG_unspecified_parameters */},\n    { 9, 0, /* 0x19 - DW_TAG_variant */},\n    {11, 0, /* 0x1a - DW_TAG_common_block */},\n    { 7, 0, /* 0x1b - DW_TAG_common_inclusion */},\n    { 8, 0, /* 0x1c - DW_TAG_inheritance */},\n    {14, 0, /* 0x1d - DW_TAG_inlined_subroutine */},\n    {16, 0, /* 0x1e - DW_TAG_module */},\n    {18, 0, /* 0x1f - DW_TAG_ptr_to_member_type */},\n    {18, 0, /* 0x20 - DW_TAG_set_type */},\n    {22, 0, /* 0x21 - DW_TAG_subrange_type */},\n    {12, 0, /* 0x22 - DW_TAG_with_stmt */},\n    { 7, 0, /* 0x23 - DW_TAG_access_declaration */},\n    {23, 0, /* 0x24 - DW_TAG_base_type */},\n    {10, 0, /* 0x25 - DW_TAG_catch_block */},\n    { 7, 0, /* 0x26 - DW_TAG_const_type */},\n    {15, 0, /* 0x27 - DW_TAG_constant */},\n    { 7, 0, /* 0x28 - DW_TAG_enumerator */},\n    {16, 0, /* 0x29 - DW_TAG_file_type */},\n    { 6, 0, /* 0x2a - DW_TAG_friend */},\n    { 9, 0, /* 0x2b - DW_TAG_namelist */},\n    { 5, 0, /* 0x2c - DW_TAG_namelist_item */},\n    { 7, 0, /* 0x2d - DW_TAG_packed_type */},\n    {47, 0, /* 0x2e - DW_TAG_subprogram */},\n    { 8, 0, /* 0x2f - DW_TAG_template_type_parameter */},\n    {11, 0, /* 0x30 - DW_TAG_template_value_parameter */},\n    {10, 0, /* 0x31 - DW_TAG_thrown_type */},\n    {10, 0, /* 0x32 - DW_TAG_try_block */},\n    { 9, 0, /* 0x33 - DW_TAG_variant_part */},\n    {24, 0, /* 0x34 - DW_TAG_variable */},\n    { 6, 0, /* 0x35 - DW_TAG_volatile_type */},\n    { 1, 0, /* 0x36 - DW_TAG_dwarf_procedure */},\n    { 6, 0, /* 0x37 - DW_TAG_restrict_type */},\n    {10, 0, /* 0x38 - DW_TAG_interface_type */},\n    {11, 0, /* 0x39 - DW_TAG_namespace */},\n    { 6, 0, /* 0x3a - DW_TAG_imported_module */},\n    { 5, 0, /* 0x3b - DW_TAG_unspecified_type */},\n    {22, 0, /* 0x3c - DW_TAG_partial_unit */},\n    { 1, 0, /* 0x3d - DW_TAG_imported_unit */},\n    {0, 0},\n    { 5, 0, /* 0x3f - DW_TAG_condition */},\n    {11, 0, /* 0x40 - DW_TAG_shared_type */},\n    { 5, 0, /* 0x41 - DW_TAG_type_unit */},\n    { 8, 0, /* 0x42 - DW_TAG_rvalue_reference_type */},\n    {16, 0, /* 0x43 - DW_TAG_template_alias */},\n    { 8, 0, /* 0x44 - DW_TAG_coarray_type */},\n    {21, 0, /* 0x45 - DW_TAG_generic_subrange */},\n    {12, 0, /* 0x46 - DW_TAG_dynamic_type */},\n    { 6, 0, /* 0x47 - DW_TAG_atomic_type */},\n    {10, 0, /* 0x48 - DW_TAG_call_site */},\n    { 8, 0, /* 0x49 - DW_TAG_call_site_parameter */},\n    {11, 0, /* 0x4a - DW_TAG_skeleton_unit */},\n    { 4, 0, /* 0x4b - DW_TAG_immutable_type */},\n    {0, 0}\n};\n\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#define ATTR_TREE_ROW_COUNT 76\n\n#define ATTR_TREE_COLUMN_COUNT 5\n\nstatic unsigned int tag_attr_combination_table[ATTR_TREE_ROW_COUNT][ATTR_TREE_COLUMN_COUNT] = {\n/* 0x00 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x01 - DW_TAG_array_type                    */\n    { 0x00802a0a,0x1e065000,0x0401c280,0x00020000,0x00000100,},\n/* 0x02 - DW_TAG_class_type                    */\n    { 0x2080280a,0x1e461000,0x0401c080,0x00000200,0x00000100,},\n/* 0x03 - DW_TAG_entry_point                   */\n    { 0x0002000a,0x0e080400,0x04000341,0x00004000,0x00000000,},\n/* 0x04 - DW_TAG_enumeration_type              */\n    { 0x0080280a,0x1e065000,0x0403c280,0x00006200,0x00000100,},\n/* 0x05 - DW_TAG_formal_parameter              */\n    { 0x5000000e,0x0e120002,0x04000a40,0x00000020,0x00000000,},\n/* 0x06 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x07 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x08 - DW_TAG_imported_declaration          */\n    { 0x0100000a,0x0e041000,0x04000000,0x00000000,0x00000000,},\n/* 0x09 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0a - DW_TAG_label                         */\n    { 0x0002000a,0x0e021000,0x04000040,0x00000000,0x00000000,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0x0006000a,0x0e020000,0x04240040,0x00000000,0x00000000,},\n/* 0x0c - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0d - DW_TAG_member                        */\n    { 0x1080380a,0x9f140000,0x04000200,0x00000802,0x00000100,},\n/* 0x0e - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0f - DW_TAG_pointer_type                  */\n    { 0x0000280a,0x0e080000,0x00000200,0x00000000,0x00000100,},\n/* 0x10 - DW_TAG_reference_type                */\n    { 0x0000280a,0x0e080000,0x00000200,0x00000000,0x00000100,},\n/* 0x11 - DW_TAG_compile_unit                  */\n    { 0x080f0008,0x00200020,0x002c004c,0x027c0400,0x00001000,},\n/* 0x12 - DW_TAG_string_type                   */\n    { 0x0280280a,0x1e061000,0x0401c040,0x00018000,0x00000000,},\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x0080280a,0x1e461000,0x0401c080,0x00004200,0x00000300,},\n/* 0x14 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x15 - DW_TAG_subroutine_type               */\n    { 0x0080000a,0x1e0e1080,0x0401c200,0x01000010,0x00000100,},\n/* 0x16 - DW_TAG_typedef                       */\n    { 0x0080000a,0x1e061000,0x0401c200,0x00000000,0x00000100,},\n/* 0x17 - DW_TAG_union_type                    */\n    { 0x0080280a,0x1e461000,0x0401c080,0x00004200,0x00000300,},\n/* 0x18 - DW_TAG_unspecified_parameters        */\n    { 0x00000002,0x0e120000,0x00000000,0x00000000,0x00000000,},\n/* 0x19 - DW_TAG_variant                       */\n    { 0x00400002,0x3e060000,0x00000000,0x00000000,0x00000000,},\n/* 0x1a - DW_TAG_common_block                  */\n    { 0x0080000e,0x1e000000,0x04000040,0x00004000,0x00000000,},\n/* 0x1b - DW_TAG_common_inclusion              */\n    { 0x04800002,0x1e000000,0x00000000,0x00000000,0x00000000,},\n/* 0x1c - DW_TAG_inheritance                   */\n    { 0x00000002,0x0f040000,0x00001200,0x00000000,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0x00060002,0x00021400,0x03e40040,0x00001000,0x00000000,},\n/* 0x1e - DW_TAG_module                        */\n    { 0x0086000a,0x1e040000,0x042400e0,0x00000000,0x00000000,},\n/* 0x1f - DW_TAG_ptr_to_member_type            */\n    { 0x2080000a,0x1e0a0000,0x0401c600,0x00000000,0x00000100,},\n/* 0x20 - DW_TAG_set_type                      */\n    { 0x0080280a,0x1e061000,0x0401c200,0x00000000,0x00000100,},\n/* 0x21 - DW_TAG_subrange_type                 */\n    { 0x0080280a,0x1e86c004,0x0403c200,0x00000004,0x00000000,},\n/* 0x22 - DW_TAG_with_stmt                     */\n    { 0x00860006,0x100c0000,0x00240240,0x00000000,0x00000000,},\n/* 0x23 - DW_TAG_access_declaration            */\n    { 0x0000000a,0x0e040000,0x04000000,0x00000000,0x00000000,},\n/* 0x24 - DW_TAG_base_type                     */\n    { 0x0000380a,0x4e000000,0xfc01c000,0x00000821,0x00000100,},\n/* 0x25 - DW_TAG_catch_block                   */\n    { 0x00060002,0x0e020000,0x00240040,0x00000000,0x00000000,},\n/* 0x26 - DW_TAG_const_type                    */\n    { 0x0000000a,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x27 - DW_TAG_constant                      */\n    { 0x1080000a,0x9e041000,0x04000200,0x00004020,0x00000000,},\n/* 0x28 - DW_TAG_enumerator                    */\n    { 0x1000000a,0x0e000000,0x04000000,0x00000000,0x00000000,},\n/* 0x29 - DW_TAG_file_type                     */\n    { 0x0080280a,0x0e021000,0x0401c200,0x00000000,0x00000100,},\n/* 0x2a - DW_TAG_friend                        */\n    { 0x00000002,0x0e020000,0x00000002,0x00000000,0x00000000,},\n/* 0x2b - DW_TAG_namelist                      */\n    { 0x0080000a,0x1e060000,0x00000000,0x00000000,0x00000000,},\n/* 0x2c - DW_TAG_namelist_item                 */\n    { 0x00000002,0x0e000000,0x00000010,0x00000000,0x00000000,},\n/* 0x2d - DW_TAG_packed_type                   */\n    { 0x0000000a,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0x2086000a,0x9e5e1481,0x046433c1,0x1d8045d8,0x00000d80,},\n/* 0x2f - DW_TAG_template_type_parameter       */\n    { 0x4000000a,0x0e000000,0x04000200,0x00000000,0x00000000,},\n/* 0x30 - DW_TAG_template_value_parameter      */\n    { 0x5000000e,0x0e000000,0x04000200,0x00000000,0x00000100,},\n/* 0x31 - DW_TAG_thrown_type                   */\n    { 0x0000000a,0x0e000000,0x0001c200,0x00000000,0x00000100,},\n/* 0x32 - DW_TAG_try_block                     */\n    { 0x00060002,0x0e020000,0x00240040,0x00000000,0x00000000,},\n/* 0x33 - DW_TAG_variant_part                  */\n    { 0x00200002,0x1e060000,0x00000200,0x00000000,0x00000000,},\n/* 0x34 - DW_TAG_variable                      */\n    { 0x1080280e,0x9e161000,0x040002c0,0x00005020,0x00000100,},\n/* 0x35 - DW_TAG_volatile_type                 */\n    { 0x0000000a,0x0e000000,0x00000200,0x00000000,0x00000000,},\n/* 0x36 - DW_TAG_dwarf_procedure               */\n    { 0x00000004,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x37 - DW_TAG_restrict_type                 */\n    { 0x00000002,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x38 - DW_TAG_interface_type                */\n    { 0x0000000a,0x0e041000,0x04000000,0x00000200,0x00000100,},\n/* 0x39 - DW_TAG_namespace                     */\n    { 0x0000000a,0x1e001000,0x04100000,0x00000000,0x00000200,},\n/* 0x3a - DW_TAG_imported_module               */\n    { 0x01000002,0x0e001000,0x00000000,0x00000000,0x00000000,},\n/* 0x3b - DW_TAG_unspecified_type              */\n    { 0x00000008,0x0e000000,0x04000000,0x00000000,0x00000000,},\n/* 0x3c - DW_TAG_partial_unit                  */\n    { 0x080f0008,0x00200020,0x042c004c,0x025c0400,0x00000080,},\n/* 0x3d - DW_TAG_imported_unit                 */\n    { 0x01000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x3e - DW_TAG_mutable_type                  */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x3f - DW_TAG_condition                     */\n    { 0x0000000a,0x0e000000,0x00000000,0x00000000,0x00000000,},\n/* 0x40 - DW_TAG_shared_type                   */\n    { 0x0000000a,0x0e800000,0x0000c200,0x00000000,0x00000100,},\n/* 0x41 - DW_TAG_type_unit                     */\n    { 0x08090000,0x00000000,0x00080000,0x00040000,0x00000000,},\n/* 0x42 - DW_TAG_rvalue_reference_type         */\n    { 0x00000808,0x0e080000,0x00000200,0x00000000,0x00000100,},\n/* 0x43 - DW_TAG_template_alias                */\n    { 0x0080000a,0x1e061000,0x0401c200,0x00000200,0x00000000,},\n/* 0x44 - DW_TAG_coarray_type                  */\n    { 0x00002802,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x45 - DW_TAG_generic_subrange              */\n    { 0x0080280a,0x1e82c004,0x0403c200,0x00000004,0x00000000,},\n/* 0x46 - DW_TAG_dynamic_type                  */\n    { 0x0000000a,0x0e020000,0x0401c200,0x00000000,0x00000100,},\n/* 0x47 - DW_TAG_atomic_type                   */\n    { 0x00000002,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x48 - DW_TAG_call_site                     */\n    { 0x00000000,0x00000000,0x03800200,0xa0000000,0x0000001e,},\n/* 0x49 - DW_TAG_call_site_parameter           */\n    { 0x0000000e,0x00000000,0x00000200,0x40000000,0x00000061,},\n/* 0x4a - DW_TAG_skeleton_unit                 */\n    { 0x08070000,0x00000000,0x00280000,0x005c0000,0x00000000,},\n/* 0x4b - DW_TAG_immutable_type                */\n    { 0x00000000,0x0e000000,0x00000200,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#define TAG_TREE_EXT_COLUMN_COUNT 5\n\n#define TAG_TREE_EXT_ROW_COUNT 9\n\n/* Common extensions */\nstatic unsigned int tag_tree_combination_ext_table[TAG_TREE_EXT_ROW_COUNT][TAG_TREE_EXT_COLUMN_COUNT] = {\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x00000013,0x00000034,0x00004106,0x00004107,0x00004108,},\n/* 0x02 - DW_TAG_class_type                    */\n    { 0x00000002,0x00000034,0x00004106,0x00004107,0x00004108,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0x0000000b,0x00004109,0x00000000,0x00000000,0x00000000,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0x0000002e,0x00004109,0x00004106,0x00004107,0x00004108,},\n/* 0x17 - DW_TAG_union_type                    */\n    { 0x00000017,0x00004106,0x00004107,0x00004108,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0x0000001d,0x00004109,0x00000000,0x00000000,0x00000000,},\n/* 0x4109 - DW_TAG_GNU_call_site                 */\n    { 0x00004109,0x0000410a,0x00000000,0x00000000,0x00000000,},\n/* 0x4107 - DW_TAG_GNU_template_parameter_pack   */\n    { 0x00004107,0x0000002f,0x00000030,0x00004106,0x00000000,},\n/* 0x4108 - DW_TAG_GNU_formal_parameter_pack     */\n    { 0x00004108,0x00000005,0x00000000,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef HAVE_USAGE_TAG_ATTR\n#define HAVE_USAGE_TAG_ATTR 1\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#ifdef HAVE_USAGE_TAG_ATTR\n#include \"dwarf.h\"\n#include \"libdwarf.h\"\n\ntypedef struct {\n    unsigned int count; /* Tag count */\n    Dwarf_Half tag;     /* Tag value */\n} Usage_Tag_Tree;\n\n/* 0x23 - DW_TAG_access_declaration */\nstatic Usage_Tag_Tree tag_tree_23[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x01 - DW_TAG_array_type */\nstatic Usage_Tag_Tree tag_tree_01[] = {\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x24 - DW_TAG_base_type */\nstatic Usage_Tag_Tree tag_tree_24[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x48 - DW_TAG_call_site */\nstatic Usage_Tag_Tree tag_tree_48[] = {\n    {/* 0x49 */ 0, DW_TAG_call_site_parameter},\n    {/*      */ 0, 0}\n};\n\n/* 0x49 - DW_TAG_call_site_parameter */\nstatic Usage_Tag_Tree tag_tree_49[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x25 - DW_TAG_catch_block */\nstatic Usage_Tag_Tree tag_tree_25[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x02 - DW_TAG_class_type */\nstatic Usage_Tag_Tree tag_tree_02[] = {\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x1c */ 0, DW_TAG_inheritance},\n    {/* 0x23 */ 0, DW_TAG_access_declaration},\n    {/* 0x2a */ 0, DW_TAG_friend},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/*      */ 0, 0}\n};\n\n/* 0x44 - DW_TAG_coarray_type */\nstatic Usage_Tag_Tree tag_tree_44[] = {\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x1a - DW_TAG_common_block */\nstatic Usage_Tag_Tree tag_tree_1a[] = {\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/*      */ 0, 0}\n};\n\n/* 0x1b - DW_TAG_common_inclusion */\nstatic Usage_Tag_Tree tag_tree_1b[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x4a - DW_TAG_skeleton_unit */\nstatic Usage_Tag_Tree tag_tree_4a[] = {\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x11 - DW_TAG_compile_unit */\nstatic Usage_Tag_Tree tag_tree_11[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x36 */ 0, DW_TAG_dwarf_procedure},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x39 */ 0, DW_TAG_namespace},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/* 0x3b */ 0, DW_TAG_unspecified_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x41 - DW_TAG_type_unit */\nstatic Usage_Tag_Tree tag_tree_41[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x39 */ 0, DW_TAG_namespace},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/*      */ 0, 0}\n};\n\n/* 0x3f - DW_TAG_condition */\nstatic Usage_Tag_Tree tag_tree_3f[] = {\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x47 - DW_TAG_atomic_type */\nstatic Usage_Tag_Tree tag_tree_47[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x26 - DW_TAG_const_type */\nstatic Usage_Tag_Tree tag_tree_26[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x27 - DW_TAG_constant */\nstatic Usage_Tag_Tree tag_tree_27[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x36 - DW_TAG_dwarf_procedure */\nstatic Usage_Tag_Tree tag_tree_36[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x03 - DW_TAG_entry_point */\nstatic Usage_Tag_Tree tag_tree_03[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x1b */ 0, DW_TAG_common_inclusion},\n    {/*      */ 0, 0}\n};\n\n/* 0x04 - DW_TAG_enumeration_type */\nstatic Usage_Tag_Tree tag_tree_04[] = {\n    {/* 0x28 */ 0, DW_TAG_enumerator},\n    {/*      */ 0, 0}\n};\n\n/* 0x28 - DW_TAG_enumerator */\nstatic Usage_Tag_Tree tag_tree_28[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x29 - DW_TAG_file_type */\nstatic Usage_Tag_Tree tag_tree_29[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x05 - DW_TAG_formal_parameter */\nstatic Usage_Tag_Tree tag_tree_05[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x2a - DW_TAG_friend */\nstatic Usage_Tag_Tree tag_tree_2a[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x08 - DW_TAG_imported_declaration */\nstatic Usage_Tag_Tree tag_tree_08[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3a - DW_TAG_imported_module */\nstatic Usage_Tag_Tree tag_tree_3a[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3d - DW_TAG_imported_unit */\nstatic Usage_Tag_Tree tag_tree_3d[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x1c - DW_TAG_inheritance */\nstatic Usage_Tag_Tree tag_tree_1c[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x1d - DW_TAG_inlined_subroutine */\nstatic Usage_Tag_Tree tag_tree_1d[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x0b */ 0, DW_TAG_lexical_block},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x38 - DW_TAG_interface_type */\nstatic Usage_Tag_Tree tag_tree_38[] = {\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/*      */ 0, 0}\n};\n\n/* 0x0a - DW_TAG_label */\nstatic Usage_Tag_Tree tag_tree_0a[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x0b - DW_TAG_lexical_block */\nstatic Usage_Tag_Tree tag_tree_0b[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x48 */ 0, DW_TAG_call_site},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x0a */ 0, DW_TAG_label},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x0b */ 0, DW_TAG_lexical_block},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/*      */ 0, 0}\n};\n\n/* 0x0d - DW_TAG_member */\nstatic Usage_Tag_Tree tag_tree_0d[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x1e - DW_TAG_module */\nstatic Usage_Tag_Tree tag_tree_1e[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x2b - DW_TAG_namelist */\nstatic Usage_Tag_Tree tag_tree_2b[] = {\n    {/* 0x2c */ 0, DW_TAG_namelist_item},\n    {/*      */ 0, 0}\n};\n\n/* 0x2c - DW_TAG_namelist_item */\nstatic Usage_Tag_Tree tag_tree_2c[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x39 - DW_TAG_namespace */\nstatic Usage_Tag_Tree tag_tree_39[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x39 */ 0, DW_TAG_namespace},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/*      */ 0, 0}\n};\n\n/* 0x2d - DW_TAG_packed_type */\nstatic Usage_Tag_Tree tag_tree_2d[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3c - DW_TAG_partial_unit */\nstatic Usage_Tag_Tree tag_tree_3c[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x0f - DW_TAG_pointer_type */\nstatic Usage_Tag_Tree tag_tree_0f[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x1f - DW_TAG_ptr_to_member_type */\nstatic Usage_Tag_Tree tag_tree_1f[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x10 - DW_TAG_reference_type */\nstatic Usage_Tag_Tree tag_tree_10[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x42 - DW_TAG_rvalue_reference_type */\nstatic Usage_Tag_Tree tag_tree_42[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x37 - DW_TAG_restrict_type */\nstatic Usage_Tag_Tree tag_tree_37[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x20 - DW_TAG_set_type */\nstatic Usage_Tag_Tree tag_tree_20[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x40 - DW_TAG_shared_type */\nstatic Usage_Tag_Tree tag_tree_40[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x12 - DW_TAG_string_type */\nstatic Usage_Tag_Tree tag_tree_12[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x13 - DW_TAG_structure_type */\nstatic Usage_Tag_Tree tag_tree_13[] = {\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x1c */ 0, DW_TAG_inheritance},\n    {/* 0x23 */ 0, DW_TAG_access_declaration},\n    {/* 0x2a */ 0, DW_TAG_friend},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x33 */ 0, DW_TAG_variant_part},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/*      */ 0, 0}\n};\n\n/* 0x2e - DW_TAG_subprogram */\nstatic Usage_Tag_Tree tag_tree_2e[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x31 */ 0, DW_TAG_thrown_type},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x1b */ 0, DW_TAG_common_inclusion},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x0b */ 0, DW_TAG_lexical_block},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x0a */ 0, DW_TAG_label},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/*      */ 0, 0}\n};\n\n/* 0x21 - DW_TAG_subrange_type */\nstatic Usage_Tag_Tree tag_tree_21[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x45 - DW_TAG_generic_subrange */\nstatic Usage_Tag_Tree tag_tree_45[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x15 - DW_TAG_subroutine_type */\nstatic Usage_Tag_Tree tag_tree_15[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/*      */ 0, 0}\n};\n\n/* 0x2f - DW_TAG_template_type_parameter */\nstatic Usage_Tag_Tree tag_tree_2f[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x30 - DW_TAG_template_value_parameter */\nstatic Usage_Tag_Tree tag_tree_30[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x31 - DW_TAG_thrown_type */\nstatic Usage_Tag_Tree tag_tree_31[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x32 - DW_TAG_try_block */\nstatic Usage_Tag_Tree tag_tree_32[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x16 - DW_TAG_typedef */\nstatic Usage_Tag_Tree tag_tree_16[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x17 - DW_TAG_union_type */\nstatic Usage_Tag_Tree tag_tree_17[] = {\n    {/* 0x2a */ 0, DW_TAG_friend},\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x43 - DW_TAG_template_alias */\nstatic Usage_Tag_Tree tag_tree_43[] = {\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/*      */ 0, 0}\n};\n\n/* 0x18 - DW_TAG_unspecified_parameters */\nstatic Usage_Tag_Tree tag_tree_18[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3b - DW_TAG_unspecified_type */\nstatic Usage_Tag_Tree tag_tree_3b[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x34 - DW_TAG_variable */\nstatic Usage_Tag_Tree tag_tree_34[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x19 - DW_TAG_variant */\nstatic Usage_Tag_Tree tag_tree_19[] = {\n    {/* 0x33 */ 0, DW_TAG_variant_part},\n    {/*      */ 0, 0}\n};\n\n/* 0x33 - DW_TAG_variant_part */\nstatic Usage_Tag_Tree tag_tree_33[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x35 - DW_TAG_volatile_type */\nstatic Usage_Tag_Tree tag_tree_35[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x22 - DW_TAG_with_stmt */\nstatic Usage_Tag_Tree tag_tree_22[] = {\n    {/*      */ 0, 0}\n};\n\nstatic Usage_Tag_Tree *usage_tag_tree[] = {\n    0,\n   tag_tree_01, /* 0x01 - DW_TAG_array_type */\n   tag_tree_02, /* 0x02 - DW_TAG_class_type */\n   tag_tree_03, /* 0x03 - DW_TAG_entry_point */\n   tag_tree_04, /* 0x04 - DW_TAG_enumeration_type */\n   tag_tree_05, /* 0x05 - DW_TAG_formal_parameter */\n    0,\n    0,\n   tag_tree_08, /* 0x08 - DW_TAG_imported_declaration */\n    0,\n   tag_tree_0a, /* 0x0a - DW_TAG_label */\n   tag_tree_0b, /* 0x0b - DW_TAG_lexical_block */\n    0,\n   tag_tree_0d, /* 0x0d - DW_TAG_member */\n    0,\n   tag_tree_0f, /* 0x0f - DW_TAG_pointer_type */\n   tag_tree_10, /* 0x10 - DW_TAG_reference_type */\n   tag_tree_11, /* 0x11 - DW_TAG_compile_unit */\n   tag_tree_12, /* 0x12 - DW_TAG_string_type */\n   tag_tree_13, /* 0x13 - DW_TAG_structure_type */\n    0,\n   tag_tree_15, /* 0x15 - DW_TAG_subroutine_type */\n   tag_tree_16, /* 0x16 - DW_TAG_typedef */\n   tag_tree_17, /* 0x17 - DW_TAG_union_type */\n   tag_tree_18, /* 0x18 - DW_TAG_unspecified_parameters */\n   tag_tree_19, /* 0x19 - DW_TAG_variant */\n   tag_tree_1a, /* 0x1a - DW_TAG_common_block */\n   tag_tree_1b, /* 0x1b - DW_TAG_common_inclusion */\n   tag_tree_1c, /* 0x1c - DW_TAG_inheritance */\n   tag_tree_1d, /* 0x1d - DW_TAG_inlined_subroutine */\n   tag_tree_1e, /* 0x1e - DW_TAG_module */\n   tag_tree_1f, /* 0x1f - DW_TAG_ptr_to_member_type */\n   tag_tree_20, /* 0x20 - DW_TAG_set_type */\n   tag_tree_21, /* 0x21 - DW_TAG_subrange_type */\n   tag_tree_22, /* 0x22 - DW_TAG_with_stmt */\n   tag_tree_23, /* 0x23 - DW_TAG_access_declaration */\n   tag_tree_24, /* 0x24 - DW_TAG_base_type */\n   tag_tree_25, /* 0x25 - DW_TAG_catch_block */\n   tag_tree_26, /* 0x26 - DW_TAG_const_type */\n   tag_tree_27, /* 0x27 - DW_TAG_constant */\n   tag_tree_28, /* 0x28 - DW_TAG_enumerator */\n   tag_tree_29, /* 0x29 - DW_TAG_file_type */\n   tag_tree_2a, /* 0x2a - DW_TAG_friend */\n   tag_tree_2b, /* 0x2b - DW_TAG_namelist */\n   tag_tree_2c, /* 0x2c - DW_TAG_namelist_item */\n   tag_tree_2d, /* 0x2d - DW_TAG_packed_type */\n   tag_tree_2e, /* 0x2e - DW_TAG_subprogram */\n   tag_tree_2f, /* 0x2f - DW_TAG_template_type_parameter */\n   tag_tree_30, /* 0x30 - DW_TAG_template_value_parameter */\n   tag_tree_31, /* 0x31 - DW_TAG_thrown_type */\n   tag_tree_32, /* 0x32 - DW_TAG_try_block */\n   tag_tree_33, /* 0x33 - DW_TAG_variant_part */\n   tag_tree_34, /* 0x34 - DW_TAG_variable */\n   tag_tree_35, /* 0x35 - DW_TAG_volatile_type */\n   tag_tree_36, /* 0x36 - DW_TAG_dwarf_procedure */\n   tag_tree_37, /* 0x37 - DW_TAG_restrict_type */\n   tag_tree_38, /* 0x38 - DW_TAG_interface_type */\n   tag_tree_39, /* 0x39 - DW_TAG_namespace */\n   tag_tree_3a, /* 0x3a - DW_TAG_imported_module */\n   tag_tree_3b, /* 0x3b - DW_TAG_unspecified_type */\n   tag_tree_3c, /* 0x3c - DW_TAG_partial_unit */\n   tag_tree_3d, /* 0x3d - DW_TAG_imported_unit */\n    0,\n   tag_tree_3f, /* 0x3f - DW_TAG_condition */\n   tag_tree_40, /* 0x40 - DW_TAG_shared_type */\n   tag_tree_41, /* 0x41 - DW_TAG_type_unit */\n   tag_tree_42, /* 0x42 - DW_TAG_rvalue_reference_type */\n   tag_tree_43, /* 0x43 - DW_TAG_template_alias */\n   tag_tree_44, /* 0x44 - DW_TAG_coarray_type */\n   tag_tree_45, /* 0x45 - DW_TAG_generic_subrange */\n    0,\n   tag_tree_47, /* 0x47 - DW_TAG_atomic_type */\n   tag_tree_48, /* 0x48 - DW_TAG_call_site */\n   tag_tree_49, /* 0x49 - DW_TAG_call_site_parameter */\n   tag_tree_4a, /* 0x4a - DW_TAG_skeleton_unit */\n    0,\n    0\n};\n\ntypedef struct {\n    Dwarf_Small legal; /* Legal tags */\n    Dwarf_Small found; /* Found tags */\n} Rate_Tag_Tree;\n\nstatic Rate_Tag_Tree rate_tag_tree[] = {\n    {0, 0},\n    { 4, 0 /* 0x01 - DW_TAG_array_type */},\n    {21, 0 /* 0x02 - DW_TAG_class_type */},\n    { 3, 0 /* 0x03 - DW_TAG_entry_point */},\n    { 1, 0 /* 0x04 - DW_TAG_enumeration_type */},\n    { 0, 0 /* 0x05 - DW_TAG_formal_parameter */},\n    {0, 0},\n    {0, 0},\n    { 0, 0 /* 0x08 - DW_TAG_imported_declaration */},\n    {0, 0},\n    { 0, 0 /* 0x0a - DW_TAG_label */},\n    {33, 0 /* 0x0b - DW_TAG_lexical_block */},\n    {0, 0},\n    { 0, 0 /* 0x0d - DW_TAG_member */},\n    {0, 0},\n    { 8, 0 /* 0x0f - DW_TAG_pointer_type */},\n    { 8, 0 /* 0x10 - DW_TAG_reference_type */},\n    {37, 0 /* 0x11 - DW_TAG_compile_unit */},\n    { 0, 0 /* 0x12 - DW_TAG_string_type */},\n    {22, 0 /* 0x13 - DW_TAG_structure_type */},\n    {0, 0},\n    { 3, 0 /* 0x15 - DW_TAG_subroutine_type */},\n    { 0, 0 /* 0x16 - DW_TAG_typedef */},\n    {10, 0 /* 0x17 - DW_TAG_union_type */},\n    { 0, 0 /* 0x18 - DW_TAG_unspecified_parameters */},\n    { 1, 0 /* 0x19 - DW_TAG_variant */},\n    { 1, 0 /* 0x1a - DW_TAG_common_block */},\n    { 0, 0 /* 0x1b - DW_TAG_common_inclusion */},\n    { 0, 0 /* 0x1c - DW_TAG_inheritance */},\n    {30, 0 /* 0x1d - DW_TAG_inlined_subroutine */},\n    { 0, 0 /* 0x1e - DW_TAG_module */},\n    { 0, 0 /* 0x1f - DW_TAG_ptr_to_member_type */},\n    { 0, 0 /* 0x20 - DW_TAG_set_type */},\n    { 0, 0 /* 0x21 - DW_TAG_subrange_type */},\n    { 0, 0 /* 0x22 - DW_TAG_with_stmt */},\n    { 0, 0 /* 0x23 - DW_TAG_access_declaration */},\n    { 0, 0 /* 0x24 - DW_TAG_base_type */},\n    {25, 0 /* 0x25 - DW_TAG_catch_block */},\n    { 0, 0 /* 0x26 - DW_TAG_const_type */},\n    { 0, 0 /* 0x27 - DW_TAG_constant */},\n    { 0, 0 /* 0x28 - DW_TAG_enumerator */},\n    { 0, 0 /* 0x29 - DW_TAG_file_type */},\n    { 0, 0 /* 0x2a - DW_TAG_friend */},\n    { 1, 0 /* 0x2b - DW_TAG_namelist */},\n    { 0, 0 /* 0x2c - DW_TAG_namelist_item */},\n    { 0, 0 /* 0x2d - DW_TAG_packed_type */},\n    {38, 0 /* 0x2e - DW_TAG_subprogram */},\n    { 0, 0 /* 0x2f - DW_TAG_template_type_parameter */},\n    { 0, 0 /* 0x30 - DW_TAG_template_value_parameter */},\n    { 0, 0 /* 0x31 - DW_TAG_thrown_type */},\n    { 0, 0 /* 0x32 - DW_TAG_try_block */},\n    { 0, 0 /* 0x33 - DW_TAG_variant_part */},\n    { 0, 0 /* 0x34 - DW_TAG_variable */},\n    { 0, 0 /* 0x35 - DW_TAG_volatile_type */},\n    { 0, 0 /* 0x36 - DW_TAG_dwarf_procedure */},\n    { 8, 0 /* 0x37 - DW_TAG_restrict_type */},\n    { 2, 0 /* 0x38 - DW_TAG_interface_type */},\n    {31, 0 /* 0x39 - DW_TAG_namespace */},\n    { 0, 0 /* 0x3a - DW_TAG_imported_module */},\n    { 0, 0 /* 0x3b - DW_TAG_unspecified_type */},\n    {30, 0 /* 0x3c - DW_TAG_partial_unit */},\n    { 0, 0 /* 0x3d - DW_TAG_imported_unit */},\n    {0, 0},\n    { 2, 0 /* 0x3f - DW_TAG_condition */},\n    { 9, 0 /* 0x40 - DW_TAG_shared_type */},\n    {33, 0 /* 0x41 - DW_TAG_type_unit */},\n    { 8, 0 /* 0x42 - DW_TAG_rvalue_reference_type */},\n    { 2, 0 /* 0x43 - DW_TAG_template_alias */},\n    { 5, 0 /* 0x44 - DW_TAG_coarray_type */},\n    { 0, 0 /* 0x45 - DW_TAG_generic_subrange */},\n    {0, 0},\n    { 0, 0 /* 0x47 - DW_TAG_atomic_type */},\n    { 1, 0 /* 0x48 - DW_TAG_call_site */},\n    { 0, 0 /* 0x49 - DW_TAG_call_site_parameter */},\n    { 4, 0 /* 0x4a - DW_TAG_skeleton_unit */},\n    {0, 0},\n    {0, 0}\n};\n\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#define TAG_TREE_COLUMN_COUNT 3\n\n#define TAG_TREE_ROW_COUNT 75\n\nstatic unsigned int tag_tree_combination_table[TAG_TREE_ROW_COUNT][TAG_TREE_COLUMN_COUNT] = {\n/* 0x00 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x01 - DW_TAG_array_type                    */\n    { 0x00000010,0x00000002,0x00000060,},\n/* 0x02 - DW_TAG_class_type                    */\n    { 0x90c8a114,0x0001c458,0x000000d8,},\n/* 0x03 - DW_TAG_entry_point                   */\n    { 0x09000020,0x00000000,0x00000000,},\n/* 0x04 - DW_TAG_enumeration_type              */\n    { 0x00000000,0x00000100,0x00000000,},\n/* 0x05 - DW_TAG_formal_parameter              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x06 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x07 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x08 - DW_TAG_imported_declaration          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x09 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0a - DW_TAG_label                         */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0xe0ed8d36,0x043068d3,0x000001f0,},\n/* 0x0c - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0d - DW_TAG_member                        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0e - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0f - DW_TAG_pointer_type                  */\n    { 0x00010000,0x00a02040,0x00000085,},\n/* 0x10 - DW_TAG_reference_type                */\n    { 0x00008000,0x00a02040,0x00000085,},\n/* 0x11 - DW_TAG_compile_unit                  */\n    { 0xe4ed8116,0x0ef06ad3,0x000000fc,},\n/* 0x12 - DW_TAG_string_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x90c8a114,0x0029c458,0x00000098,},\n/* 0x14 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x15 - DW_TAG_subroutine_type               */\n    { 0x01400020,0x00000000,0x00000000,},\n/* 0x16 - DW_TAG_typedef                       */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x17 - DW_TAG_union_type                    */\n    { 0x00c82014,0x0001c400,0x00000000,},\n/* 0x18 - DW_TAG_unspecified_parameters        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x19 - DW_TAG_variant                       */\n    { 0x00000000,0x00080000,0x00000000,},\n/* 0x1a - DW_TAG_common_block                  */\n    { 0x00000000,0x00100000,0x00000000,},\n/* 0x1b - DW_TAG_common_inclusion              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x1c - DW_TAG_inheritance                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0xa1ed8836,0x00306ad3,0x000000f0,},\n/* 0x1e - DW_TAG_module                        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x1f - DW_TAG_ptr_to_member_type            */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x20 - DW_TAG_set_type                      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x21 - DW_TAG_subrange_type                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x22 - DW_TAG_with_stmt                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x23 - DW_TAG_access_declaration            */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x24 - DW_TAG_base_type                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x25 - DW_TAG_catch_block                   */\n    { 0x81ed8036,0x003062d3,0x00000080,},\n/* 0x26 - DW_TAG_const_type                    */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x27 - DW_TAG_constant                      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x28 - DW_TAG_enumerator                    */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x29 - DW_TAG_file_type                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2a - DW_TAG_friend                        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2b - DW_TAG_namelist                      */\n    { 0x00000000,0x00001000,0x00000000,},\n/* 0x2c - DW_TAG_namelist_item                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2d - DW_TAG_packed_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0xaded8d36,0x0433ead3,0x000000b0,},\n/* 0x2f - DW_TAG_template_type_parameter       */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x30 - DW_TAG_template_value_parameter      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x31 - DW_TAG_thrown_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x32 - DW_TAG_try_block                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x33 - DW_TAG_variant_part                  */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x34 - DW_TAG_variable                      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x35 - DW_TAG_volatile_type                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x36 - DW_TAG_dwarf_procedure               */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x37 - DW_TAG_restrict_type                 */\n    { 0x00018000,0x00202040,0x00000085,},\n/* 0x38 - DW_TAG_interface_type                */\n    { 0x00002000,0x00004000,0x00000000,},\n/* 0x39 - DW_TAG_namespace                     */\n    { 0xe4ed8116,0x063068d3,0x000000f0,},\n/* 0x3a - DW_TAG_imported_module               */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3b - DW_TAG_unspecified_type              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3c - DW_TAG_partial_unit                  */\n    { 0xe4ed8116,0x00306ad3,0x000000f0,},\n/* 0x3d - DW_TAG_imported_unit                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3e - DW_TAG_mutable_type                  */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3f - DW_TAG_condition                     */\n    { 0x00000000,0x00000082,0x00000000,},\n/* 0x40 - DW_TAG_shared_type                   */\n    { 0x00018000,0x00a02040,0x00000085,},\n/* 0x41 - DW_TAG_type_unit                     */\n    { 0xe4ed8116,0x06306ad3,0x000000f8,},\n/* 0x42 - DW_TAG_rvalue_reference_type         */\n    { 0x00018000,0x00a02040,0x00000081,},\n/* 0x43 - DW_TAG_template_alias                */\n    { 0x00000000,0x00018000,0x00000000,},\n/* 0x44 - DW_TAG_coarray_type                  */\n    { 0x00000002,0x00000012,0x00000060,},\n/* 0x45 - DW_TAG_generic_subrange              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x46 - DW_TAG_dynamic_type                  */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x47 - DW_TAG_atomic_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x48 - DW_TAG_call_site                     */\n    { 0x00000000,0x00000000,0x00000200,},\n/* 0x49 - DW_TAG_call_site_parameter           */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x4a - DW_TAG_skeleton_unit                 */\n    { 0x00880014,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "2020-10-15: David Anderson\n    * dwarf_line.c:Set up the default registers correctly\n      for DWARF5 as well as earlier versions.\n    * dwarf_line.h: update a comment.\n    * dwarf_line_table_reader_common.c: Using ptrdiff_t\n      is completely unnecessary. So not using now.\n      Removing with #if 0 some lines of checking code\n      which are now up a few lines in a corrected\n      version of earlier checking.\n    * libdwarf2.1.pdf: Regenerated 3.15. Forgot\n      to do it earlier.\n2020-10-13: David Anderson\n    * dwarf_debuglink.c: Now _dwarf_pathjoinl works\n      for Windows too (see HAVE_WINDOWS_PATH) and\n      transforms all backslash to /.  This\n      has always been the behavior, it just vanished\n      for a couple days.\n    * dwarf_line_table_reader_common.h: Removed a trailing blank.\n    * dwarf_macro5.c: Now correctly handles the null byte\n      at the end of a list of macro operands. Added\n      macro CHECKNULLCONTEXT to avoid lots of 8 line\n      sequences just checking basic call sanity.\n      Gave the structure sentinal a name: MC_SENTINAL\n      (only exists in this one source file).\n    * dwarf_macro5.h: Added mc_section_size so offset\n      insanity is caught.  Added comments about\n      Dwarf_Macro_Operator_s for clarity.\n    * libdwarf.h;.in: Added comment on the DWARF 5\n      macro operands table.\n    * libdwarf2.1.mm: Rev 3.15 Added a comment in examplep5\n      on dwarf_get_macro_op() about the DWARF5\n      macro operator value 0, and\n      amplified the function wording on this point..\n    * libdwarf2.1.pdf: Rev 3.15. Regenerated.\n      .\n2020-10-12: David Anderson\n    * dwarf_alloc.c: Creation of Dwarf_Error_ with\n      null dbg is now gracefully handled.\n    * dwarf_debuglink.c: Now handles\n      HAVE_WINDOWS_PATH. Needed additional #include\n      and create_fullest_file_path() now uses dwarfstsring.\n    * dwarf_line.h: Trailing whitespace.\n    * dwarf_line_table_reader_common.h: Shorten a couple lines\n      to fit libdwarf standards.\n    * dwarf_object_detector.c: Free debuglinkfull path\n      where appropriate. Ensure fd's (other than -1)\n      get closed where appropriate.\n    * dwarf_object_detector.h: Removed #if 0 lines.\n    * dwarf_peread.c: Assures fd which is not -1\n      gets closed.\n    * dwarf_print_lines.c:  Now uses \n      dwarfstring_constructor_static() so in nearly all\n      cases no malloc/free needed. Adds DWARF5\n      specific support for indexing into includes.\n    * libdwarf.h.in: Corrected comments about what to\n      free after calling dwarf_gnu_debuglink().\n    * generated_libdwarf.h.in: regenerated.\n    * libdwarf2.1.mm: Version 3.14. Correctet\n      description of dwarf_gnu_debuglink().  \n    * libdwarf2.1.pdf: Version 3.14. Regenerated.\n    * testdebuglinksh: Remove trailing whitespace.\n2020-10-11: David Anderson\n    * dwarf_object_detector.h: Deleted #if 0 prototype.\n    * testdebuglink.sh: Removed a trailing blank.\n2020-10-11: David Anderson\n\t* libdwarf_version.h: updated version string\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h: regenerated with new version string.\n2020-10-11: David Anderson\n    * CMakeLists.txt: Added crc32.c, a new source file.\n    * Makefile.am: Same addition.\n    * Makefile.in: Regenerated.\n    * crc32.c: The crc needed to interoperate with GNU\n      debuglink.\n    * dwarf_alloc.c: Clarifying comment and removing\n      old unnecessary () around return values.\n    * dwarf_crc32.c: Removing crc from here, it was\n      the wrong crc32! Modified crc calls to match\n      the needs of the correct crc calculation. Ensured\n      a local malloc always gets freed.\n    * dwarf_debuglink.c: Added short comments.\n    * dwarf_errmsg_list.h: New error DW_DLE_DEBUGLINK_PATH_SHORT.\n    * dwarf_generic_init.c.: Updated to work properly\n      with debuglink and dSYM.\n    * dwarf_incl.h: Reformatted copyright for shorter\n      lines per libdwarf formatting, no change in content.\n    * dwarf_init_finish.c: Added comment. Removed\n      a pointless test for error (error not \n      not set, guaranteed) in dwarf_object_finish().\n    * dwarf_object_detector.c: Implemented support\n      for debuglink, significant changes involved.\n    * dwarf_object_detector.h: Comment change\n    * dwarf_opaque.h: Updated a comment and\n      declared the internal function _dwarf_crc32();\n    * libdwarf.h.in:  Functions added for debuglink\n      and a mistake corrected (now comment the arg names\n      to avoid macro disaster) in several functions.\n      New error DW_DLE_DEBUGLINK_PATH_SHORT.\n      New function dwarf_object_detector_path_b()\n      lets one supply global paths for debuglink and\n      get back a (new!) value, one of \n      DW_PATHSOURCE_basic, DW_PATHSOURCE_dsym,or\n      DW_PATHSOURCE_debuglink so callers know what\n      the path source by type.\n    * generated_libdwarf.h.in: Regenerated.\n    * libdwarf2.1.mm: Clarified lifetimes of several\n      arguments of debuglink-related functions. Revision 3.13.\n    * libdwarf2.1.pdf: Regenerated, version 3.13.\n2020-10-05: David Anderson\n    * libdwarf.h.in: Removed DW_DLC_NO_FOLLOW_DEBUGLINK\n      as it is never needed and was never used or\n      documented (it's only been there for a handful\n      of days).  Updated commentary.\n    * generated_libdwar.h.in: Regenerated.\n    * libdwarf2.1.mm: Rev 3.12. Beginning documentation\n      of GNU debuglink support.\n    * libdwarf2.1.pdf: Regenerated as 3.12.\n2020-10-02: David Anderson\n    * dwarf_crc32.c,dwarf_fission_to_cu.c,dwarf_macro5.c,\n\t  dwarf_opaque.h,libdwarf.h.in,test_linkedtopath.c,\n\t  test_linkedtopath.c: Removed whitespace and\n      tabs and make indents dwarf-standard.\n    * COPYING: Corrected the references to the BSD copyright\n      to use \"two-clause BSD license\".\n2020-10-02: David Anderson\n    * dwarf_generic_init.c: Implements the new\n      dwarf_init_path_dl() which allows passing debuglink\n      global paths (if one desires to). Global paths not\n      used here yet.\n    * libdwarf.h.in: Added prototype dwarf_init_path_dl()\n      but it is not yet used. Relevant commentary updated.\n    * generated_libdwarf.h.in: regenerated\n2020-10-01: David Anderson\n    * libdwarf2.1.mm: Revision 3.11. Added new debuglink\n      function dwarf_crc32().\n    * libdwarf2.1.pdf: Revision 3.11. Regenerated.\n2020-10-01: David Anderson\n    * dwarf_crc32.c: Refined the #includes so they work\n      with cmake too.\n    * dwarf_debuglink.c,dwarf_object_detector.c,\n      dwarf_peread.c: Refined the #includes to work\n      in more general circumstances.\n2020-10-01: David Anderson\n    * libdwarf.h.in: Added DW_DLC_NO_FOLLOW_DEBUGLINK\n      but it is not yet used.\n    * generated_libdwarf.h.in: regenerated\n2020-09-30: David Anderson\n    * CMakeLists.txt,Makefile.am: Added dwarf_crc32.c\n    * Makefile.am: Regenerated.\n    * dwarf_crc32.c: So libdwarf can interoperate with GNU\n      debuglink to locate separate debug object files.\n    * dwarf_debuglink.c: Added {} one place. No real change.\n    * libdwarf.h.in: New interfaces for crc32.\n    * generated_libdwarf.h.in: Regenerated\n2020-09-28: David Anderson\n    * libdwarf.h.in: Rearranged the DW_DLC_* values\n      for clarity and added commentary on the main\n      point (the 'access' argument to dwarf init\n      functions for the consumer/reader calls\n      should be zero).  This is not a change.\n    * generated_libdwarf.h.in: Documented\n      the longstanding handling of that same\n      argument to consumer/reader functions.\n    * libdwarf2.1.mm: Version 3.10. Documenting\n      that same thing.\n    * libdwarf2.1.pdf: Regenerated as version 3.10.\n2020-09-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-09-26: David Anderson\n    * baseline.ltp: new test baseline for debuglink.\n\t* test_linkedtopath.c: Now with better coverage\n      of the paths in tbe debuglink code, we\n      add a getcwd here to return a test cwd\n      of /exam/ple so the output of debuglink\n      does not depend on the real build\n      directory location.\n2020-09-25: David Anderson\n\t* dwarf_debuglink.c: Corrected and clarified.\n2020-09-22: David Anderson\n    * CMakeLists.txt, Makefile.am: Added new file \n      dwarf_fission_to_cu.c.\n    * Makefile.in: Regenerated.\n    * dwarf_die_deliv.c: Renamed _dwarf_find_offsets_via_fission\n      to be _dwarf_find_all_offsets_via_fission().\n      Added status check following the call to it.\n    * dwarf_fission_to_cu.c: Now the above function\n      and supporting functions are in this source file to\n      deal with DW_SECT_LOCLISTS,DW_SECT_STR_OFFSETS,\n      DW_SECT_MACRO, DW_SECT_RNGLISTS.\n    * dwarf_loc.h: Updated prototypes for these\n      functions.\n    * dwarf_loclists.h: Now deleted. It's long been\n      unused.\n    * dwarf_loclists.c: Renamed internal_read_header as\n      _dwarf_internal_read_loclists_header for more general\n      access.\n    * dwarf_macro5.c: Now the cu-context cc_macro_base\n      field is used when needed for DWP files.\n    * dwarf_opaque.h: Rearranged some fields of\n      Dwarf_CU_Context\n      into more logical groupings (related to debug fission).\n    * dwarf_rnglists.c: renamed internal_read_header\n      to _dwarf_internal_read_rnglists_header().\n    * dwarf_rnglists.h: Added protype for\n      _dwarf_internal_read_rnglists_header().\n    * dwarf_str_offsets.c: Removed \n      _dwarf_find_offsets_via_fission\n      (which does more than just str_offsets now)\n      and put into dwarf_fission_to_cu.c as\n      _dwarf_find_all_offsets_via_fission().\n    * dwarf_str_offsets.h: Prototype renamed.\n    * libdwarf.h.in: Added a comment.\n    * generated_libdwarf.h.in: Regenerated.\n2020-09-18: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-09-18: David Anderson\n    * dwarf_debug_names.c: If allocation fails in setting up\n      a Dwarf_Dnames head we now get an error and a more tailored\n      error than just memory-allocation-failed.\n    * dwarf_elf_load_headers.c: If the symtab section size\n      is really big (larger than the object file size!) we now\n      get a relevant error message.  Used to get malloc fail on\n      32bit systems and do a large malloc on 64bit systems before\n      getting an error eventually.\n    * dwarf_frame.c: Calling the frame-retrieval functions\n      on a corrupted object file could result in leaking memory.\n      Fixed.\n2020-09-17: David Anderson\n    * dwarf_peread.c: Deleted several blank lines.\n    * dwarf_global.c: Removed trailing whitespace,\n      fixed indents.\n    * dwarf_errmsg_list.h: Various error strings now\n      have extra text with meaningful, but generic,\n      content.\n2020-09-17: David Anderson\n    * dwarf_global.c: Refactored to eliminate 50 lines\n      of duplicated code and ensure no leaks while\n      improving error messages when the object or DWARF\n      data is damaged (fuzzed).\n    * dwarf_global.h,dwarf_funcs.c,dwarf_pubtypes.c,\n      dwarf_types.c,dwarf_vars.c,dwarf_weaks.c: Eliminated \n      useless arguments to library-internal function.\n    * dwarf_util.h: Errors detected in a macro now \n      report more useful information.\n    * dwarf_alloc.c: Two DEBUG lines were too long,\n      broke those lines to shorter ones.\n      Added DEBUG-only output where it had not\n      reported earler.\n2020-09-15: David Anderson\n    * dwarf_alloc.c: Added ifdef DEBUG\n      printf for cases it should exist.\n      #undef debug at the top guaranties it will not\n      be turned on by accident.\n    * dwarf_loc.c(_dwarf_read_loc_section): Was missing dbg\n      in a call to _dwarf_error. Corrupt object lead to leak.\n    * dwarf_die_deliv.c(_dwarf_make_CU_Context) was missing\n      a _dwarf_error call where one was required.\n      A corrupt object lead to memory leak.\n      And _dwarf_next_die_info_ptr was failing to \n      initialize dbg from the passed in cu_context.\n      Also causing a memory leak on some corrupt objects.\n    * dwarf_peread.c(pe_section_name_get): Was failing\n      to check for a valid null-terminated\n      string in the string table.\n      A corrupted object could cause segmentation violation.\n    * dwarf_error.c (_dwarf_error_string): Added ifdef DEBUG\n      printf where they should have been all along.\n      #undef debug at the top guaranties it will not\n      be turned on by accident.\n2020-09-10: David Anderson\n    * dwarf_die_deliv.c: Now handle DW_AT_GNU_ranges_base\n      properly.\n    * dwarf_ranges.c: New function dwarf_get_ranges_b()\n      so we can pass back the true split-dwarf offset\n      when we have DWARF4 split-dwarf extension objects.\n      And we calculate that true offset.\n    * libdwarf.h.in: New function prototype:\n      dwarf_get_ranges_b().\n    * generated_libdwarf.h.in: Regenerated.\n    * libdwarf2.1.mm:  Version 3.09. Now documents\n      dwarf_get_ranges_b().\n    * libdwarf2.1.pdf:  Version 3.09. Regenerated.\n2020-09-10: David Anderson\n    * checkexamples.c,dwarf_die_deliv.c,dwarf_form.c,\n      dwarf_line_table_reader_common.h,dwarf_query.c,\n      dwarf_ranges.c,dwarf_str_offset.c,dwarf_tied.c:\n      Remove trailing whitespace. Fix indentation.\n2020-09-09: David Anderson\n    * dwarf_alloc.c: dwarf_dealloc_error(dbg,error)\n      and dwarf_dealloc(dbg,error,DW_DLA_ERROR)\n      should now be called with a null dbg if\n      the failing libdwarf was one of the dwarf_init*()\n      or dwarf_elf_init*() functions and the storage\n      in the error will be freed.\n      See libdwarf2.1.pdf rev 3.08 or later for\n      details.\n      With DEBUG set additional allocation details are\n      revealed.\n    * dwarf_error.c: Repair a comparison with NULL.\n    * dwarf_finish.c(dwarf_finish): Simplify the !dbg test.\n    * dwarf_ranges.c: Remove dead code.\n    * libdwarf2.1.mm: Version 3.08. The Table of\n      Contents points to returns from dwarf_init*\n      calls (around page 28) now.\n    * libdwarf2.1.pdf: Generated Version 3.08.\n2020-09-08: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-09-07: David Anderson\n    * dwarf_xu_index.c: We were not checking the\n      value of N (in the header of .debug_cu/tu_index)\n      to ensure it was sane. Now we check and error\n      if insane (the test object is fuzzed to provoke\n      the error).\n    * dwarf_elf_access.c: Reformatted commentary so\n      the lines are not too long.\n2020-09-07: David Anderson\n    * dwarf_opaque.h, dwarf_str_offsets.c: Removed trailing\n      whitespace.\n    * dwarf_line_table_reader_common.h: Fixed an accidental\n      deletion of a crucual _ (underbar) in preceeding commit.\n2020-09-07: David Anderson\n    * dwarf_line_table_reader_common.h: Places needing\n      additional dealloc in case of error:\n      lines 1232,2255,2404 (line#s in the updated version). \n2020-09-07: David Anderson\n    * dwarf_tied_decls.h: Removed declaration of\n      _dwarf_loop_reading_debug_info_for_cu().\n    * dwarf_tied.c: The return value from dwarf_tsearch() was\n      not being handled properly. Lead to leaks.\n      Could, possibly, have lead to coredump.\n      Other places tsearch return values were done properly.\n      _dwarf_loop_reading_debug_info_for_cu() is\n      now static function.\n    * dwarf_groups.c: Moved _dwarf_grp_destroy_free_node()\n      down to just before the function that references it.\n    * dwarf_alloc.c: Removed an abort() call from\n      #ifdef DEBUG code.\n2020-09-05: David Anderson\n    * dwarf_die_deliv.c: Delete old #if 0 lines.\n      Pick up Fission data about DW_SECT_STR_OFFSETS\n      to help find strings.\n      Merge any helpful base data from the skeleton (tied file)\n      CU dies into the dwp CU dies.\n    * dwarf_base_types.h: Add DW_STR_OFFSETS_VERSION4\n      to help with reading that GNU extension.\n    * dwarf_form.c: Corrected code reading from\n      .debug_str_offsets.\n    * dwarf_opaque.h: Added new fields to the CU context\n      record to support .debug_str_offsets, and a new\n      function declaration related to that.\n    * dwarf_query.c: Deleted no-longer-used functions\n      (the tied-file attribute merge happens much\n      earlier) and added \n      _dwarf_merge_all_base_attrs_of_cu_die().\n    * dwarf_ranges.c: Better represents using .debug_ranges.dwo\n      if it's present in the dwp  .\n    * dwarf_str_offsets.c: Refactoring and revising to support\n      the two formats of .debug_str_offsets: DWARF5 and\n      GNU DWARF4.\n    * dwarf_str_offsets.h. New function prototypes for the revised\n      .debug_str_offsets[.dwo] code.\n2020-09-01: David Anderson\n    * dwarf_loclists.c(internal_load_loclists_contexts): Added\n      a missing 'return DW_DLV_ERROR' when an error was detected.\n2020-08-28: David Anderson\n    * dwarf_die_deliv.c,dwarf_loc.c,dwarf_util.c:Fixed\n      indents and trailing whitespace.\n2020-08-27: David Anderson\n    * dwarf_die_deliv.c: Some error messages now have more\n      detail.\n    * dwarf_line_table_reader_common.h: In an error condition\n      (meaning corrupt dwarf) _dwarf_free_chain_entries()\n      was called twice on the same data, referring to\n      freed space in doing so. Deleted the extra call.\n    * dwarf_loc.c(_dwarf_setup_loc): Removed a \n      bogus _dwarf_error \n      using DW_DLE_LOC_EXPR_BAD: Let the just-called\n      function error code be returned.\n      Some error conditions detected here now report\n      detailed information on the error.\n    * dwarf_query.c(dwarf_attrlist): Refined the detailed\n      error message already present.\n    * dwarf_util.c:New internal function\n      _dwarf_create_area_len_error() lets dwarf_util.h\n      macro report a more detailed error without\n      bloating the macro.\n    * dwarf_util.h: Calls that new function rather\n      than calling _dwarf_error() itself.\n2020-08-25: David Anderson\n    * dwarf_form.c: Previous change failed to show\n      the actual error string \n      DW_DLE_STRP_OFFSET_BAD or DW_DLE_STRING_OFFSET_BAD\n      along with the\n      details. Oops. Now it shows.\n2020-08-23: David Anderson\n    * dwarf_form.c: Slightly changed the error message \n      for an error in DW_FORM_strp.\n2020-08-23: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-08-23: David Anderson\n    * dwarf_form.c,dwarf_generic_init.c,dwarf_loc.c,\n      dwarf_loc.h,dwarf_loclists.c,dwarf_query.c, dwarf_rnglists.c,\n      pro_opaque.h: Remove trailing whitespace. Fix indents.\n2020-08-23: David Anderson\n    * dwarf_form.c: In case an strp offset seems wrong\n      we get a more detailed error message.\n    * dwarf_macro5.c: Deleted gratuitous blank line.\n2020-08-22: David Anderson\n    * dwarf_loc.c,dwarf_rnglists.c: call \n      _dwarf_look_in_local_and_tied_by_index\n      not _dwarf_extract_address_from_debug_addr so \n      .debug_addr in the tied file will be found.\n    * dwarf_opaque.h,dwarf_query.c: Make  \n      _dwarf_look_in_local_and_tied_by_index global,not\n      _dwarf_extract_address_from_debug_addr.\n2020-08-22: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-08-21: David Anderson\n    * dwarf_init_finish.c(insert_sht_list_in_group_map):\n      Added checks of dss_data_was_malloc around\n      a couple of calls saying free(secdata.dss_data).\n      The missing checks could only result in duplicate\n      free with user calls that allocated their\n      own section data to load a section and a certain\n      error arising during the call.\n    * dwarf_loc.c: To elminate ambiguity, renamed\n      some fields from lowpc to rawlowpc (for example).\n    * dwarf_loclists.c(build_array_of_lle): Removed\n      a block of code duplicating work done in dwarf_loc.c.\n      Fixed arguments passing ld_lopc, ld_highpc\n      to pass ld_rawlow, ld_rawhigh for correctness.\n2020-08-21: David Anderson\n    * libdwarf2.1.mm: Rev 3.07. Corrected quote mismatches\n      in the mm commands, and a couple of stray\n      characters after a .P command\n    * libdwarf2.1.pdf: Rev 3.07. Regenerated.\n2020-08-18: David Anderson\n    * checkexamples.c: Corrected example_rnglist_for_attribute()\n      example.\n    * dwarf_ranges.c: Corrected a comment and removed #if 0\n      code as it is obsolete.\n    * dwarf_rnglists.c(dwarf_get_rnglists_entry_fields_a):\n      Allow the pointer-arguments used to return data to\n      the caller to be null pointers safely, as libdwarf2.1.pdf\n      suggested that was legal.\n    * libdwarf2.1.mm: Version 3.06. Corrected the example\n      calling dwarf_get_rnglists_entry_fields_a().\n    * libdwarf2.1.pdf: Regenerated, Version 3.06\n     \n      \n2020-08-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-08-10: David Anderson\n    * dwarf_elf_defines.h,dwarf_elfread.c: A linux kernel used a\n      R_X86_64_NONE (which means ignore the relocation) and\n      now we deal with it properly for EM_X86_64.\n2020-08-02: David Anderson\n    * dwarf_alloc.c: Added a constructor for Dwarf_Locdesc_c\n      (DW_DLA_LOCDESC_C) so fields ld_lle_value and\n      ld_kind get non-zero and \n      erroneous initial values so\n      the values can be checked later for correctness.\n    * dwarf_errmsg_list.h: Added error DW_DLE_LOCATION_ERROR.\n    * dwarf_loc.c: Now we rigorously set and check the fields\n      ld_lle_value and ld_kind. \n      _dwarf_locdesc_c_constructor() sets those two fields\n      so we can check correctness and in case of error, \n      report the details.\n    * dwarf_loc.h: Added constructor prototype and a special\n      DW_LLE_VALUE_BOGUS initial value (invisible to \n      library callers).\n    * dwarf_loclists.c: After malloc use the  Dwarf_Locdesc_c\n      constructor so later error checking possible.\n    * libdwarf.h.in: Added error DW_DLE_LOCATION_ERROR.\n    * libdwarf2.1.mm: Rev 3.05. Additional detail on\n      return values for dwarf_get_locdesc_entry_d()\n      and documented dwarf_get_locdesc_entry_c() \n      (recommending use of dwarf_get_locdesc_entry_d()\n      instead)\n    * libdwarf2.1.pdf: Rev 3.05. Regenerated.\n2020-07-28: David Anderson\n    * dwarf_locationop_read.c: Added DW_OP_GNU_variable_value.\n    * dwarf_names.c, dwarf_names_enum.h: Regenerated.\n    * dwarf.h: Added in GNU names that had been accidentally\n      ommitted: DW_AT_GNU_deleted,DW_AT_GNU_locviews,\n      DW_AT_GNU_entry_view,DW_OP_GNU_variable_value.\n      These caused the regeneration of dwarf_names.h.\n2020-07-22: David Anderson\n    * dwarf_abbrev.c,dwarf_debug_names.c, dwarf_debuglink.c,\n\t  dwarf_dsc.c,dwarf_error.c,dwarf_form.c,dwarf_funcs.c,\n\t  dwarf_gdbindex.c,dwarf_harmless.c,dwarf_init_finish.c,\n\t  dwarf_leb.c,dwarf_leb_test.c,dwarf_line.c,dwarf_macro.c,\n\t  dwarf_macro5.c,dwarf_original_elf_init.c,dwarf_pubtypes.c,\n\t  dwarf_str_offsets.c,dwarf_stringsection.c,dwarf_stubs.c,\n\t  dwarf_test_errmsg_list.c,dwarf_types.c,dwarf_vars.c,\n\t  dwarf_weaks.c,dwarf_xu_index.c,gennames.c,malloc_check.c,\n\t  pro_arange.c,pro_encode_nm.c,pro_error.c,pro_finish.c,\n\t  pro_forms.c,pro_funcs.c,pro_line.c,pro_macinfo.c,\n\t  pro_pubnames.c,pro_reloc.c,pro_reloc_stream.c,\n\t  pro_reloc_symbolic.c,pro_types.c,pro_vars.c,pro_weaks.c:\n      Updated copyright date. Reformatted copyright to\n      have slightly shorter lines, no change in content.\n2020-07-22: David Anderson\n    * libdwarf2.1.mm: Now Rev 3.04. Revised the \n      Error Handling section for greater clarity.\n      Revised dwarf_init_path() to correct formatting\n      errors. \n    * libdwarf2.1.pdf: Regenerated as rev 3.04 .\n    * dwarf_generic_init.c(dwarf_init_pathh): Removed\n      the error-handling so when the call fails the\n      Dwarf_Debug argument is not touched. \n      For the PE case return  the DW_DLV_ERROR or\n      DW_DLV_NO_ENTRY (return left off by accident).\n    * dwarf_arange.c: Reformatted the copyright\n      to have shorter lines.\n2020-07-17: David Anderson\n    * libdwarf/libdwarf_version.h: Version string updated.\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h : regenerated\n      with latest version string\n2020-07-17: David Anderson\n    * dwarf_frame.c: rearrange comments a little and\n      add a web reference as documentation.\n\t* pro_debug_sup.c,pro_section.c: Remove trailing \n      whitespace.  Fix indents.\n2020-07-15: David Anderson\n    * dwarf_alloc.c: Improved printf if DEBUG\n      is turned on, with #undef DEBUG in source so\n      necessary to modify the source and rebuild\n      to get the voluminous alloc/dealloc debugging\n      printf turned on.\n2020-07-14: David Anderson\n    * libdwarf2.1.mm: Version 3.02. Documents the new call\n      dwarf_get_debug_sup() to access the DWARF5\n      .debug_sup section.\n    * libdwarf2p.1.mm: Version 1.51.  Documents the new\n      call dwarf_add_debug_sup() to create the DWARF5\n      .debug_sup section.\n    * libdwarf2.1.pdf,libdwarf2p.1.pdf: Regenerated.\n2020-07-14: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Regenerated\n      with new version string.\n2020-07-13: David Anderson\n    * CMakeLists.txt, Makefile.am: Added dwarf_debug_sup.c\n    * Makefile.in: Regenerated.\n    * dwarf_errmsg_list.h: Added DW_DLE_DEBUG_SUP_STRING_ERROR\n      and DW_DLE_DEBUG_SUP_ERROR.\n    * dwarf_names.c dwarf_names_enum.h: Reflects correction\n      of value of\n      DW_GNUIVIS_static (a new non-standard name in dwarf.h)\n    * generated_libdwarf.h.in,libdwarf.h.in: With the\n      two new errors and declaration of\n      dwarf_add_debug_sup() to produce .debug_sup\n      and dwarf_get_debug_sup() to retrieve the section values..\n    * pro_finish.c: Support for creating .debug_sup.\n    * pro_opaque.h: Support for creating .debug_sup.\n    * pro_section.c: Support for creating .debug_sup.\n    * dwarf_debug_sup.c: New, for .debug_sup access.\n\t* pro_debug_sup.c: New. for .debug_sup creation.\n2020-07-10: David Anderson\n    * dwarf_die_deliv.c: Handle\n      DW_AT_GNU_ranges_base in a CU DIE.\n    * dwarf_opaque.h: Added 2lines of comment\n      about cc_debug_offset.\n    * dwarf_query.c(_dwarf_get_ranges_base_attr_value):\n      Simplified as the cu_context\n      has the base values, no need to read\n      DIEs/Attributes here.\n2020-07-09: David Anderson\n    * dwarf_opaque.h: Changing a comment about libdwarf\n      and the tied file (if any).\n2020-07-08: David Anderson\n    * libdwarf2.1.mm: Added documentation of\n      .debug_gnu_pybtypes and .debug_gnu_pubnames.\n      See dwarf_get_gnu_index_head() in the document.\n    # libdwarf2.1.pdf: Regenerated. Rev 3.01\n2020-07-08: David Anderson\n    * dwarf_init_finish.c: setup of .debug_names was\n      done twice (not harmful but the duplicate removed now).\n2020-07-08: David Anderson\n    * dwarf_elf_load_headers.c,dwarf_gdbindex.c,dwarf_gnu_index.c,\n\t  dwarf_gnu_index.h,dwarf_init_finish.c,\n      dwarf_locationop_read.c: Fixed indents and trailing\n      whitespace.\n2020-07-08: David Anderson\n    * dwarf.h: Fixed error in DW_GNUIVIS values.\n    * dwarf_debug_names.h: Arranging shorter\n      lines in a block of comments.\n    * dwarf_elfread.c( find_section_to_relocate): Added \n      de_debug_gnu_pubnames, de_dbug_gnu_pubtypes to sections\n      that can have relocations (in  a dwo.o before linking).\n    * dwarf_gnu_index.c: Now loads debug_info so that\n      in near future correctness of offsets in \n      .debug_gnu_pubnames/pubtypes can be checked.\n2020-07-08: David Anderson\n    * dwarf_gnu_index.c: Remove debug printf. Small corrections\n      to the section reading.\n2020-07-06: David Anderson\n    * dwarf_loc.c: Too-long lines in comments adjusted shorter.\n    * dwarf_loc.h: Renamed _dwarf_free_loclists_head to\n      _dwarf_free_loclists_head_content for clarity.\n    * dwarf_loclists.c: Deleted dead code. Renamed that\n      function here too. Corrected a bug in\n      _dwarf_free_loclists_head()\n    * dwarf_gnu_index.c,dwarf_gnu_index.h: New files\n      to handle sections .debug_gnu_pubnames and\n      .debug_gnu_pubtypes\n    * dwarf_init_finish.c: Added the new sections to\n      enter_section_in_de_debug_sections_array().\n    * CMakeLists.txt,Makefile.am: Added dwarf_gnu_index.c and\n      dwarf_gnu_index.h\n    * Makefile.in: Regenerated.\n    * dwarf.h: Added new nonstandard DW_GNUIVIS* and\n      DW_GNUIKIND* in support of these sections.\n    * dwarf_alloc.c: New record type DW_DLA_GNU_INDEX_HEAD\n      for these new sections.\n    * dwarf_errmsg_list.h: New errors\n    * dwarf_names.c, dwarf_names.h: Regenerated with\n      DW_GNUIVIS and DW_GNUIKIND name functions.\n    * dwarf_names_enum.h: Regenerated this too.\n    * dwarf_names_new.h: Regenerated this.\n    * libdwarf.h.in: Added Dwarf_Gnu_Index_Head type\n      and new functions and new error codes. Dropped\n      a dead DLA type and assigned it to be for\n      DW_DLA_GNU_INDEX_HEAD. Added new functions \n      dwarf_get_gnu_index_head()\n      dwarf_gnu_index_dealloc()\n      dwarf_get_gnu_index_block() \n      dwarf_get_gnu_index_block_entry() allowing\n      access to the data in .debug_gnu_pubtypes\n      and .debug_gu_pubnames.\n    * generated_libdwarf.h.in: Regenerated.\n2020-07-04: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: new version string.\n2020-07-03: David Anderson\n    * CMakeLists.txt, Makefile.am: renamed dwarf_dnames.h ->\n      dwarf_debug_names.h and dwarf_dnames.c to \n      dwarf_debug_names.c.\n    * Makefile.in: Regenerated.\n    * dwarf_alloc.c, dwarf_debug_names.c: Include\n      name updated dwarf_dnames.h to dwarf_debug_names.h .\n    * dwarf_elfread.c(_dwarf_elf_object_access_internals_init):\n      In case of a null gh_namestring we notice and skip\n      over it.\n    * dwarf_init_finish.c(_dwarf_load_section): Added to\n      the comment on zero-size sections.\n2020-07-02: David Anderson\n    * dwarf_gdbindex.h: Removed gdbindex_offset_type typedef\n      as it is not used anywhere.\n    * dwarf_global.c(dwarf_get_cu_die_offset_given_cu_header_offset):\n      Updated a commment to reflect handling of DWARF5 and more.\n    * dwarf_util.h: Removed SKIP_LEB128_WORD_CK as it\n      is no longer used and replaced by a better function.\n    * dwarf_query.c: Removed comment about that macro.\n    * dwarf_form.c: Revised the commentary on\n      DW_AT_str_offsets_base to match the final DWARF5.\n2020-07-02: David Anderson\n    * libdwarf.h.in: Added DW_DLE_GDBINDEX_STRING_ERROR.\n    * generated-libdwarf.h.in: Regenerated.\n    * dwarf_errmsg_list.h: Added DW_DLE_GDBINDEX_STRING_ERROR.\n    * dwarf_gdbindex.c(dwarf_gdbindex_addressarea_entry): Now\n      checks its arguments and the return string for problems.\n2020-07-01: David Anderson\n    * libdwarf.h.in: Comment now deprecates \n      dwarf_get_loclist_entry().\n    * generated_libdwarf.h.in: regenerated.\n    * libdwarf2.1.mm: Deprecates dwarf_get_loclist_entry().\n    * libdwarf2.1.pdf: Regenerated, version 2.99.\n    * dwarf_locationop_read.c: Pass real address-size to\n      read_encoded_addr() so it will work properly.\n2020-06-29: David Anderson\n    * dwarf_elf_load_headers.c: Added sanity checks\n      on section size of the section strings and\n      the symbol strings.\n      All the section-size errors now use\n      the new error code DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE.\n    * dwarf_errmsg_list.h: Added string for\n      DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE.\n    * libdwarf.h.in: Added DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE.\n    * generated_libdwarf.h.in: Regenerated.\n2020-06-29: David Anderson\n    * libdwarf_version.h: updated version string.\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h: Regenerated.\n2020-06-29: David Anderson\n    * dwarf_elfread.c: Added checks on section sizes\n      and offsets to ensure they don't exceed file size\n      (but only check when we try to read them, we\n      want to read dwarf even if sections we do not\n      care about have damaged section headers).\n    * dwarf_peread.c: Fixed indentation mistake.\n2020-06-28: David Anderson\n    * dwarf_elf_defines.h: Adding R_386_GOTPC\n      so we don't rely on /usr/include to have the\n      ones we need.\n    * dwarf_elf_rel_detector.c: Adding R_386_GOTPC\n      to identify the relocation as 32bit.\n2020-06-27: David Anderson\n    * dwarf_alloc.c(_dwarf_free_all_of_one_debug): If space \n      for debug_rnglists or\n      debug_loclists was malloc'd (relocations\n      or compressed sections force malloc) we\n      now call the function that frees that\n      data.  That function renamed:\n      rela_free->malloc_section_free.\n2020-06-25: David Anderson\n    * dwarf_loc.c: Corrected indents.\n    * dwarf_loclists.c: Corrected indents, removed\n      trailing whitespace.\n    * dwarf_peread.c: Removed trailing whitespace.\n    * dwarf_rnglists.c: Removed trailing whitespace.\n    * libdwarf2.1.mm: Rev 2.98. Added documentation\n      on the .debug_names section printing functions.\n      These intended for debugging .debug_names\n      (that is, by dwarfdump),\n      not things user code are likely to want to use. \n      Documented the new function \n      dwarf_get_rnglists_entry_fields_a() as the original\n      dwarf_get_rnglists_entry_fields() \n      (which is still there and works as well as before)\n      left off a field important to callers.\n    * libdwarf2.1.pdf: Rev 2.98. Regenerated.\n2020-06-22: David Anderson\n    * dwarf_loc.c: Using knowledge of the base address status\n      improve messaging while reducing execution time.\n    * dwarf_loclists.c: Properly deal with setting\n      up for output in case .debug_addr missing (fixing\n      an omission).\n    * dwarf_peread.c: In load_optional_header64() we were\n      failing to read hdr.ImageBase which caused addresses\n      to be wrong (base address needed to be set).\n    * dwarf_rnglists.c: Based on knowledge of lack/presence\n      of .debug_addr improve messaging and reduce\n      cpu-time spent.\n    * dwarf_rnglists.h: Added 2 line commentary.\n    * libdwarf.h.in,generated_libdwarf.h.in: Added\n      dwarf_get_rnglists_entry_fields_a(), the original\n      function was inadequate.\n2020-06-19: David Anderson\n    * dwarf_reloc_x86_64.hr,dwarf_reloc_x86_64.h: Added in\n      R_X86_64_PC64 relocation as llvm is using it.\n2020-06-17: David Anderson\n    * dwarf_elf_load_headers.c: Catch a potential division by \n      zero error. \n    * dwarf_peread.c: Added comments.\n2020-06-17: David Anderson\n    * dwarf_loclists.c, dwarf_rnglists.c: Rename \n      length_size->offset_size\n      for clarity and correct the computation of the\n      length of the offsets array.\n2020-06-17: David Anderson\n    * dwarf_die_deliv.c: Pick up CU DIE base fields\n      always. Not just for DWARF4,5.\n    * dwarf_loc.c: Clarify the flow. A comment added.\n    * dwarf_form.c: Added missing DW_FORM_loclistx from\n      a switch.\n2020-06-16: David Anderson\n    * dwarf_query.c, dwarf_util.c: Remove trailing whitespace.\n      Changed indents and line lengths in a small area to match\n      the usual look.\n2020-06-16: Jorge Gorbe Moya \n    * dwarf_query.c, dwarf_util.c: Correct the handling\n      of DW_UT initializations.\n2020-06-16: David Anderson\n    * dwarf_die_deliv.c,dwarf_frame2.c,dwarf_loc.c:\n      Remove trailing whitespace.\n2020-06-14: David Anderson\n    * libdwarf1.1.mm: Added examples to the Error Handling\n      section as the previous version was pretty vague\n      about the best way to call libdwarf to deal\n      with errors.\n    * libdwarf1.1.pdf: Generated version 2.97.\n     \n2020-06-14: David Anderson\n    * dwarf_die_deliv.c: Adds the highest known\n      abbrev code to certain error messages.\n    * dwarf_die_deliv.h: Corrected a comment.\n    * dwarf_frame2.c: Now uses (uintptr_t) to avoid\n      warnings from certain compiler/pointer-size\n      environments.\n    * dwarf_loc.c: Update the loclist head\n      structure  ll_bytes_total\n      field with DWARF 2,3,4 loclists too.\n    * dwarf_opaque.h: Add cc_highest_known_code\n      to Dwarf_CU_Context_s for better\n      error reporting and align some field names\n      for a better appearance.\n    * dwarf_query.c: Improved error reporting\n      when an abbrev code missing.\n    * dwarf_util.c: Keep track of highest abbrev\n      code seen (per compilation unit).\n    * dwarf_util.h: Internal function declaration\n      changed to allow reporting of highest\n      abbrev code.\n2020-06-12: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h: updated\n      version string.\n2020-06-12: David Anderson\n    * checkexamples.c,dwarf_alloc.c,dwarf_arange.c,\n      dwarf_frame.c,dwarf_line.c,dwarf_line_table_reader_common.h,\n      dwarf_loc.c,dwarf_loc.h,dwarf_locationop_read.c,\n      dwarf_loclists.c,dwarf_query.c,dwarf_rnglists.c,\n      dwarf_util.c,libdwarf.h.in: Fixed indents\n      and removed trailing whitespace.\n2020-06-12: David Anderson\n    * dwarf_alloc.c: Added free of loclists to \n      _dwarf_free_all_of_one_debug().\n    * dwarf_loc.c: Created _dwarf_free_op_chain()\n      and call it so even in case of error nothing leaks.\n      Some adjustments to indents.\n    * dwarf_loclists.c: _dwarf_dealloc_loclists ->\n      _dwarf_dealloc_loclists_context for clarity.\n      Modified _dwarf_free_loclists_head() to get\n      leak-free behavior.\n    * dwarf_opaque.h: Reflects above name change.\n    * libdwarf2.1.mm: Corrected and amplified\n      words on the new functions.\n    * libdwarf2.1.pdf: Regenerated.\n2020-06-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf/libdwarf_version.h:\n      updated version string.\n2020-06-09: David Anderson\n    * CMakeLists.txt,Makefile.am : Deleted dwarf_loc2.h reference.\n      Added dwarf_locationop_read.c, dwarf_loclists.c.\n    * Makefile.in: Regenerated.\n    * dwarf_alloc.c: Corrected a comment about reserved numbers.\n      Reflects name change from struct Dwarf_Loc_c_s to\n      struct Dwarf_Loc_Expr_Op_s. \n    * dwarf_errmsg_list.h: Added DW_DLE_LOCLISTS_ERROR.\n    * dwarf_form.c: Added arguments to the library\n      internal function _dwarf_formblock_internal()\n      for better support of DWARF5 loclist creation.\n    * dwarf_frame2.c: Changed a local from unsigned\n      to Dwarf_Unsigned as well as changing pointer\n      casts from 'unsigned long' to Dwarf_Unsigned.\n    * dwarf_loc.c: Lots of refactoring to make\n      the flow easier to understand.\n      Moved _dwarf_read_loc_expr_op() to\n      a new file dwarf_locationop_read.c as the \n      function is quite large.\n      Renamed other functions so the names are not\n      so much alike.\n    * dwarf_loc.h: New fields in Dwarf_Loc_Chain_s\n      to support the raw vs. cooked values of location\n      low/high. New fields to support DWARF 5 loclists\n    * dwarf_loc2.h: Deleted. Relevant contents in\n      dwarf_loc.c and dwarf_loclists.c\n    * dwarf_locationop_read.c: Existing code\n      to read location ops refactored to a routine\n      by themselves.  Long enough by itself\n    * dwarf_loclists.c: New file with .debug_loclists\n      support. \n    * dwarf_loclists.h: Nothing here. will be deleted.\n    * dwarf_opaque.h: New functions and arguments\n      for internal debug_loclists data.\n    * dwarf_rnglists.c: Changed certain arguments\n      to Dwarf_Half (address_size etc) where that\n      makes sense.  \n    * dwarf_util.c: Now dwarf_load_debug_info()\n      loads the base data from .debug_rnglists\n      and .debug_loclists (DWARF5)\n    * libdwarf.h.in: 'unsigned' now 'unsigned int'\n      existing function unchanged: dwarf_get_loclist_c()\n      new function dwarf_get_locdesc_entry_d()\n      new function dwarf_get_loclist_head_basics()\n      new function dwarf_get_location_op_value_d()\n      new function dwarf_get_loclist_head_kind()\n      - Following for printing raw loclists, not\n      usually used.\n      new function dwarf_load_loclists()\n      new function dwarf_get_loclist_context_basics()\n      new function dwarf_get_loclist_lle()\n      new function dwarf_get_loclist_offset_index_value()\n      new function dwarf_get_loclist_raw_entry_detail()\n    * libdwarf2.1.mm: 2.96, documents the new calls.\n    * libdwarf2.1.pdf: Version 2.96.\n2020-05-23: David Anderson\n    * dwarf_opaque.h: Defines DWARFSTRING_ALLOC_SIZE   200\n    * dwarf_form.c: Using DWARFSTRING_ALLOC_SIZE for the\n      initial allocation, (mostly) avoiding the need\n      for malloc here.  dwarfstring is mainly used\n      for error messages, so preallocation is rarely useful\n    * dwarf_line.c(create_fullest_file_path): Corrected\n      the comments for this function.\n2020-05-22: David Anderson\n    * dwarf_alloc.c: New functions with proper type checking:\n      dwarf_dealloc_error(), dwarf_dealloc_attribute(),\n      dwarf_dealloc_die().\n    * dwarf_arange.c: Now does correct free_aranges_chain() \n      and ensures chain entry stuff dealloc-d as appropriate.  \n    * dwarf_die_deliv.c: Improved an error message in reports\n      an address-size error.\n    * dwarf_frame.c: Initialize more local variables at the\n      point of declaration. Do  all needed dealloc of\n      the chain entries \n      when creating the list.\n    * dwarf_global.c: Now uses the new ch_itemtype\n      to dealloc properly.  Which simplifies the \n      dealloc_globals_chain() call.\n    * dwarf_line.c:  Now uses the new ch_itemtype\n      to dealloc properly.\n    * dwarf_line_table_reader_common.h: Now uses wrappers\n      for the READ_UNALIGNED_CK DECODE_LEB128_UWORD_CK etc\n      macros so the code\n      now deallocs appropriately in case of error.\n      Most places were not doing full dealloc. Now\n      all are.\n    * dwarf_opaque.h: New field ar_dbg so attribute\n      dealloc is easier.  New chain field ch_itemtype\n      so dealloc is simpler and safer.\n    * dwarf_query.c: Removed comment about leaking memory,\n      the leaks are fixed by using the DECODE_LEB128_UWORD_CK\n      etc wrapper functions.\n    * libdwarf.h.in: Declares the new dealloc functions\n      dwarf_dealloc_error(),dwarf_dealloc_die(),\n      dwarf_dealloc_attribute().\n    * generated_libdwarf.h.in: Regenerated.\n    * libdwarf2.1.mm: New documentation of dwarf_dealloc()\n      as well as documentation of\n      dwarf_dealloc_error(),dwarf_dealloc_die(),\n      dwarf_dealloc_attribute().\n    * libdwarf2.1.pdf: Regenerated. Version 2.94.\n2020-05-19: David Anderson\n    * dwarf_rnglists.c: Ommited a crucial assign to rh_debug so it\n      leaked if de_alloc_tree absent.\n2020-05-19: David Anderson\n    *  dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,dwarf_names_new.h,\n       libdwarf_version.h : New version strings.\n2020-05-19: David Anderson\n    * libdwarf.h.in: Revised a couple rnglists functions\n      by removing unneeded arguments and revising the arguments\n      to dwarf_rnglists_offset_get_rle_head(),\n      dwarf_get_rnglist_head_basics(), and\n      dwarf_get_rnglists_entry_fields()\n    * generated_libdwarf.h.in: Regenerated.\n    * dwarf_rnglists.c: Checked a pointer argument for null before using.\n      Remove the unneeded function arguments (affecting several internal\n      functions too). Renamed a few internal things for clarity.\n    * libdwarf2.1.mm: Documented the new rnglists functions\n      and added examples of use.\n    * libdwarf2.1.pdf: Regenerated. Version 2.93.\n2020-05-17: David Anderson\n    * dwarf_dnames.c: Improved error reporting of the names generation\n      when something goes wrong.\n    * dwarf_elf_access.c,dwarf_elfread.c: Add MATCH_REL_SEC \n      for the .debug_addr section.\n    * dwarf_form.c: Improved error reporting by showing specific details.\n      Now supports DW_FORM_rnglistx.  New function\n      dwarf_addr_form_is_indexed(theform) created, now using\n      it here and in dwarfdump as needed..\n    * dwarf_line_table_reader_common.h: Corrected indents.\n    * dwarf_opaque.h:  Small commentary changes, added the \n      CU Context field cc_dwo_name_present (used for \n      non-standard DWARF4).\n    * dwarf_query.c: Simplified some pointlessly messy code.\n      Now also using dwarf_addr_form_is_indexed() instead of\n      a list missing some DWARF5 values.\n    * dwarf_ranges.c: #if 0 some useless code for now. \n    * dwarf_rnglists.c: The .debug_rnglists code is here.\n    * dwarf_rnglists.h: For use inside libdwarf. Opaque\n      to libdwarf callers.\n    * dwarf_tsearchhash.c: Trivial change. No logic change.\n    * dwarf_util.c: Removed pointless blank line.\n    * dwarf_util.h, dwarf_xu_index.h: Fix trailing whitespace.\n    * libdwarf.h.in: New functions and opaque types for reading\n      the .debug_rnglists section.\n    * generated_libdwarf.h.in: Regenerated.\n2020-05-05: David Anderson\n    * dwarf_rnglists.h, dwarf_opaque.h, dwarf_rnglists.c: \n      Preliminary new fields/code for Rnglists_Context.\n2020-05-04: David Anderson\n    * dwarf_alloc.c: renamed dwarf_dealloc_rnglists\n      to _dwarf_dealloc_rnglists.\n    * dwarf_errmsg_list.h: Added DW_DLE_RNGLISTS_ERROR.\n    * dwarf_opaque.h: Added _dwarf_dealloc_rnglists() prototype.\n    * dwarf_rnglists.c: Minor corrections of this new code.\n    * dwarf_rnglists.h: Added a new field for internal use.\n      Deleted some #if 0 lines.\n    * dwarf_util.c(_dwarf_load_debug_info): Now also\n      calls dwarf_load_rnglists as we need that in the\n      Dwarf_Debug.\n    * libdwarf.h.in: Added DW_DLE_RNGLISTS_ERROR.\n      Deleted dwarf_dealloc_rnglists as it is renamed\n      and made private to libdwarf.\n    * generated_libdwarf.h.in: Regenerated.\n2020-05-02: David Anderson\n    * libdwarf2.1.mm: Added a note to Changes that\n      instances of 'length_size' in the code and headers\n      variable naming will, over time, be changed to \n      'offset_size' as this name suggests what they really\n      represent: a 4 or 8 byte offset size.\n    * libdwarf2.1.pdf: Regenerated, version 2.92\n2020-05-02: David Anderson\n    * CMakeLists.txt, Makefile.am: Added dwarf_rnglists.h,\n      dwarf_rnglists.c\n    * Makefile.in: Regenerated.\n    * dwarf_alloc.c: Now calls dwarf_dealloc_rnglists() at\n      finish to clean up rnglists data, if any.\n    * dwarf_arange.c: Deleted some blank lines and added one.\n    * dwarf_opaque.h: Added de_rnglists_context_count and\n      de_rnglists_context to support rnglists.\n    * dwarf_rnglists.h:  Defines the Dwarf_Rnglists_Context\n      structure.\n    * dwarf_rnglists.c:  Implements initial support of the\n      .debug_rnglists section.\n    * libdwarf.h.in: Declares new rnglist-related functions\n      and an opaque struct Dwarf_Rnglists_Context_s.\n    * generated_libdwarf.h.in: Regenerated.\n2020-04-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h: Updated\n      version string.\n2020-04-25: David Anderson\n    * dwarf_abbrev.c: Fix trailing whitespace.\n    * dwarf_arange.c: Delete macro READ_UNALIGNED_CK\n      use an just use  _dwarf_read_unaligned_ck_wrapper.\n    * dwarf_die_deliv.c: Uses wrapper instead\n      of READ_UNALIGNED_CK where necessary.\n      Delete commented-out lines.\n    * dwarf_error.c: Remove unwanted debug  code.\n    * dwarf_form.c: Remove trailing whitespace.\n    * dwarf_global.c: Rename some arguments for greater\n      clarity.\n    * dwarf_line.c: Fix line handling so both DW5\n      and earlier handled better.  Improve some error\n      messages.\n    * dwarf_macro5.c:  Use wrapper() funcs, not\n      READ_UNALIGNED_CK and fix a couple local\n      variables so that works.\n    * dwarf_ranges.c: Remove trailing whitespace.\n    * dwarf_util.c: Remove trailing whitespace.\n2020-04-24: David Anderson\n    * dwarf_die_deliv.c: Now using wrappers so that\n      errors do not lead to a temporary leak.\n    * dwarf_global.c: Now ensures that an error\n      in reading globals does not lead to temporary\n      leaks that rely on dwarf_finish() to clean up.\n2020-04-24: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,\n      dwarf_names_new.h, libdwarf_version.h: \n      updated version string.\n2020-04-23: David Anderson\n    * dwarf_arange.c: Using new wrapper() code\n      so that the reader macros do not interfere\n      with doing appropriate dealloc.\n    * dwarf_util.c: Implement new wrapper functions\n      _dwarf_read_unaligned_ck_wrapper() and\n      _dwarf_read_area_length_ck_wrapper.\n    * dwarf_util.h: Declare the new functions.\n2020-04-22: David Anderson\n    * libdwarf.h.in: Added DW_DLE_USER_DECLARED_ERROR\n      and the dwarf_error_creation() function that creates\n      the Dwarf_Error.\n    * generated_libdwarf.h.in: Regenerated.\n2020-04-20: David Anderson\n    * dwarf_form.c: Split a too-long comment line.\n2020-04-16: David Anderson\n    * dwarf_line_table_reader_common.h: more detailed error\n      messages in a few cases.\n    * dwarf_print_lines.c: Added dwarf_check_lineheader_b()\n      as dwarf_check_lineheader() did not return error\n      details.\n    * libdwarf.h.in: defined prototype for \n      dwarf_check_lineheader_b();\n    * generated_libdwarf.h.in: regenerated.\n2020-04-14: David Anderson\n    * libdwarf2.1.mm: Fixed wording \n      of dwarf_get_fde_info_for_cfa_reg3_b()\n      which had the 1/0 value of has_more_rows\n      backwards.\n      Corrected several misspellings. \n    * libdwarf2.1.pdf: Regenerated, v2.91.\n2020-04-13: David Anderson\n    * dwarf_abbrev.c: Various errors now show additional detail\n      about what exactly is wrong.\n2020-04-11: David Anderson\n    * dwarf_die_deliv.c,dwarf_xu_index.c: Each had\n      a single trailing space. Removed. \n2020-04-11: David Anderson\n    * dwarf_global.c: Changed break to continue\n      so we don't stop the loop too early, yet\n      still avoid leaking a useless.\n2020-04-10: David Anderson\n    * debug-cu-tu-indexes-layout.odg: The Split-Dwarf\n      (aka debugfission) table layout is simple, but\n      this is an introduction to the \n      layout of the arrays.  LibreOffice Draw document.\n    * dwarf_init_finish.c: Small enhancements of error messages.\n    * dwarf_util.c: Reformatted a macro here\n      (READ_UNALIGNED_CK) so the lines are not so long\n      and the backslashes are easily seen as complete.\n    * dwarf_xu_index.c: There was some confusion in the\n      code which prevented it from working.\n      Interfaces remain the same, but things work now.\n      The first part is a 20 line (or so) explanation\n      of some of the internal handling of the tables.\n      Now things work. Many error messges get\n      detailed information.\n    * dwarf_xu_index.h: Added new fields and relabeled\n      the N U S fields in the header to match the\n      DWARF5 standard.\n    * libdwarf2.1.mm: Rev 2.90 10 April 2020.\n      A little bit of reformatting to shorten the lines\n      here. Has little or no effect on the output pdf.\n      corrected the wording about the\n      dwarf_get_xu_section_offset() function. \n    * libdwarf2.1.pdf: Regenerated Rev 2.90.\n2020-04-07: David Anderson\n    * dwarf_alloc.c: Deleted useless comment and added\n      a blank line to separate declarations from code.\n    * dwarf_frame2.c:  Fixed a too-long line.\n    * dwarf_query.c: Now DW_DLE_ALLOC_FAIL has a meaningful\n      error string attached.\n    * dwarf_util.c: Added comment before CHECK_DIE macro.\n2020-04-03: David Anderson\n    * dwarf_arange.c: Deleted a useless blank line.\n      Removed useless () around a return value.\n2020-04-03: David Anderson\n    *  dwarf_form.c,dwarf_frame2.c,dwarf_query.c: Fix indents and\n       remove trailing whitespace.\n2020-04-02: David Anderson\n    * dwarf_die_deliv.c: Better text printed for an address size error\n      including reporting the actual addrss-size found by libdwarf.\n    * dwarf_frame2.c: Deleted a static version of\n      _dwarf_create_address_size_dwarf_error() and use\n      the global one. Revised some error messages to\n      have specific details. Each instance of\n      DW_DLE_DEBUG_FRAME_LENGTH_BAD now reports something\n      specific about each case.\n    * dwarf_opaque.h: Added a declaration of\n      _dwarf_create_address_size_dwarf_error().\n2020-03-28: David Anderson\n    * dwarf_global.c: dwarf_return_empty_pubnames() revised\n      so it cannot fail.\n    * libdwarf.h.in: Revised comments attached to\n      dwarf_return_empty_pubnames() function prototype.\n    * generated_libdwarf.h.in: Regenerated.\n2020-03-27: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,\n      dwarf_names_new.h, libdwarf_version.h: \n      updated version string.\n2020-03-27: David Anderson\n    * dwarf_form.c,dwarf_query.c,dwarf_ranges.c: Improve various\n      error messages with specific information about the\n      error.\n2020-03-27: David Anderson\n    * dwarf_ranges.c: Properly detect end-of-section\n      again.\n2020-03-27: David Anderson\n    * dwarf_alloc.c, dwarf_form.c: Removed\n      trailing whitespace.\n2020-03-27: David Anderson\n    * dwarf_alloc.c: The (static) list of DW_DLA \n      initializers was very messy and hard to read.\n      Cleaned up its appearance.`\n      Added the 'type' to the fields that -DDEBUG\n      prints.\n    * dwarf_form.c,dwarf_util.c: The DW_DLE_FORM_BLOCK_LENGTH_ERROR\n      error messages now have a longer and more\n      complete error string.\n2020-03-26: David Anderson\n    * dwarf_alloc.c,dwarf_error.c: Changed spelling of the\n      -DDEBUG prefixes to \"libdwarfdetector\"\n    * libdwarf2.1.mm: Documented hints on finding libdwarf\n      and libdwarf-caller memory leaks. Section 6.33\n    * libdwarf2.1.pdf: Regenerated, version 2.89\n2020-03-26: David Anderson\n    * dwarf_alloc.c,dwarf_error.c:  Now DEBUG can be turned on via\n      CFLAGS at configure time. Or left off by default.\n      Changed all the fprintf here (debug stuff) to\n      do printf instead.\n    * dwarf_die_deliv.c,dwarf_frame2.c: Altered the \n      DW_DLE_ADDRESS_SIZE_ERROR\n      strings so the 3 cases can be distinquished easily\n      (just a convenience for debugging).\n    * dwarf_globals.c: Removed one superfluous ().\n    * dwarf_query.c: Reforatted lgpl text for shorter\n      lines (no change in the content).\n      Removed one superfluous ().\n2020-03-25: David Anderson\n    * dwarf_alloc.c, dwarf_error.c: Revised the debug\n      output created if DEBUG is defined.\n2020-03-25: David Anderson\n    * dwarf_die_deliv.c: Fix trailing whitespace.\n    * dwarf_frame2.c:    Fix trailing whitespace.\n2020-03-24: David Anderson\n    * dwarf_line.c: Deleted useless blank line.\n2020-03-24: David Anderson\n    * dwarf_alloc.c: Now with #ifdef DEBUG of debug messages in\n      various places as thise get needed over and over.\n    * dwarf_die_deliv.c: Working toward complete dealloc\n      of resources to eliminate the  dependence on de_alloc_tree.\n    * dwarf_error.c: #if 0 a debug message.\n    * dwarf_form.c: Remove superflous ().\n    * dwarf_global.c(_dwarf_internal_globals_dealloc):\n      Recreated and documented critical dealloc code\n      so Dwarf_Global_Context gets dealloc-c.\n    * dwarf_line.c: Add a return DW_DLV_ERROR after\n      an error Dwarf_Error is created..\n2020-03-23: David Anderson\n    * dwarf_die_deliv.c,dwarf_frame2.c: Some error messages\n      are now far more precise (showing values).\n    * dwarf_global.c: Correcting leakage and making\n      some error messages more precise.\n    * dwarf_print_lines.c: Correcting leakages.\n    * dwarf_pubtypes.c: Minor readability change.\n2020-03-21: David Anderson\n    * dwarf_abbrev.c Move leb wrapper functions to dwarf_util.[ch]:\n      and rename as _dwarf.....\n      Make certain error conditions more explicit (better\n      text in the error string).\n    * dwarf_die_deliv.c: Move leb wrapper functions to dwarf_util.[ch]\n      and rename as _dwarf.....\n    * dwarf_frame2.c: Add {} for the few 'if' missing same.\n    * dwarf_line.c: In case of form error make the error\n      text more useful.\n    * dwarf_query.c: Move leb wrapper functions to dwarf_util.[ch]\n      and rename as _dwarf.....\n    * dwarf_util.c, dwarf_util.h: Add the renamed\n      _dwarf_leb128_uword_wrapper() and\n      _dwarf_leb128_sword_wrapper() for general use\n      where better error messages are advisable.\n    * dwarf_init_finish.c: Removed a single trailing blank.\n    * libdwarf.h.in: Removed trailing spaces.\n    * generated_libdwarf.h.in: Regenerated.\n2020-03-20: David Anderson\n    * dwarf_arange.c: In case of error, was failing\n      to clean up all allocations.\n    * dwarf_macro5.c: Was preventing some dwarf_dealloc().\n      Fixed.\n2020-03-19: David Anderson\n    * dwarf_abbrev.c: Generates a more useful and specific\n      message in case a TAG is corrupt.\n    * dwarf_line.c: After dealloc assign 0 to the pointer.\n    * dwarf_die_deliv.c: Improved insert_into_context_list()\n      for clarity and correctness. \n    * dwarf_error.c: Removed a couple \"!= NULL\" in if\n      conditions.\n    * dwarf_query.c: Uses local variable now to\n      satisfy the usual libdwarf convention that in case\n      of DW_DLV_NO_ENTRY or DW_DLV_ERROR only the\n      Dwarf_Error argument is altered, not other\n      pointer args.\n    * dwarf_util.h: Declaration for _dwarf_format_TAG_err_msg()\n    * dwarf_util.c: Generates a more useful and specific\n      message in in _dwarf_format_TAG_err_msg()\n      in case a TAG is corrupt.\n2020-03-18: David Anderson\n    * dwarf_die_deliv.c: Rewrote the function that\n      keeps the cu_context list in the proper order.\n      For clarity and correctness.\n2020-03-16: David Anderson\n    * dwarf_alloc.c: A recent change had the wrong\n      test during initial Dwarf_Debug\n      struct setup meaning dwarf_finish() was not cleaning\n      up allocations. This made the runtimes better\n      than they should be. Important correction here.\n    * dwarf_die_deliv.c: Drop use of the dwarf_dieoff()\n      context list, that was never appropriate. Now\n      again with one list.\n    * dwarf_opaque.h: Removed a list of Dwarf_CU_Contexts,\n      that was never correct to have dwarf_offdie maintain\n      a list separate from iterating through CUs.\n    * dwarf_query.c (dwarf_attrlist): Add a \n      dwarf_dealloc on abbrev_list\n      in an error case.\n    * dwarf_util.c: Make the lines look a tiny bit\n      better avoiding too-long lines.\n2020-03-15: David Anderson\n    * dwarf_frame2.c: On an internal error (bad dwarf)\n      the necessary cleanup function was not being called\n      in two places.\n2020-03-15: David Anderson\n    * dwarf_alloc.c: Now with configure-time options\n      for tracking the alloc/dealloc actions in detail.\n2020-03-15: David Anderson\n    * dwarf_alloc.c: Now with the de_alloc_tree tests\n      in final form. Respecting dwarf_set_de_alloc_flag().\n2020-03-14: David Anderson\n    * dwarf_alloc.c: Now adds an optional DEBUG\n      macro that libdwarf developers may find useful.\n      Revised the dwarf_dealloc code to not require de_alloc_tree.\n    * dwarf_line.c: Now dwarf_srcfiles() and dwarf_filename()\n      always allocate DW_DLA_STRINGS. Whereas earlier some\n      of the strings were actually in a .debug section,\n      not allocated. \n    * libdwarf2.1.mm: Now dwarf_diename()  and\n      dwarf_die_text are documented\n      as returning static strings that are not be be\n      freed or dwarf_dealloc'd.  This was always true\n      but the documentation said dwarf_dealloc() was\n      required. Don't use dwarf_dealloc on these returned\n      strings.\n    * libdwarf2.1.pdf: Regenerated, version 2.88\n    * dwarf_loc.c: Was incorrectly passing NULL instead\n      of dbg to _dwarf_get_alloc in a few places.\n    * dwarf_util.c, dwarf_global.c: Now checks more for\n      incomplete setup\n      of an internal structure to avoid calling dwarf_dealloc\n      with NULL as the space to be freed.\n2020-03-13: David Anderson\n    * dwarf_abbrev.c: Remove erroneous dwarf_dealloc\n      introduced yesterday. Caused a coredump\n      in FreeBSD 64bit dwarfdump testing.\n    * dwarfstring.c: Introduced an extra zero initializer in\n      the dwarfstring_destructor() as safe and harmless.\n2020-03-12: David Anderson\n    * dwarf_abbrev.c: Use a wrapper on macro\n      DECODE_LEB128_UWORD_CK\n      so we can dwarf_dealloc in case of a problem.\n      And be more thorough in various places\n      for those dwarf_dealloc.\n2020-03-12: David Anderson\n    * dwarf_die_deliv.c:  A local function now explicitly\n      static (_dwarf_siblingof_internal). \n      Following dwarf_dealloc of cudie  we assign 0 to it.`\n      New function local_dealloc_cu_context() enables\n      accurate and full dealloc of a cu context\n      (which means there was some error fount) in\n      an easy and complete way.\n      local_attrlist_dealloc() does similarly for attrlists.\n      A DECODE_LEB128_UWORD_CK now in a wrapper so on error\n      we can dwarf_dealloc a DIE.\n    * dwarf_macro5.c: Now dwarf_dealloc_macro_context() is safe\n      if called with a null argument (and in that case there\n      is nothing to do).\n    * dwarf_opaque.h: Removed _dwarf_siblingof_internal()\n      from the declared functions.\n2020-03-12: David Anderson\n    * dwarf_alloc.h, dwarf_opaque.h: Removed trailing whitespace.\n      Shortened the lines of the LGPL text (the text\n      is unchanged).\n2020-03-12: David Anderson\n    * dwarf_str_offsets.c,dwarf_util.c: Removed trailing whitespace\n      and fixed indent mistakes.\n2020-03-12: David Anderson\n    * dwarf_query.c: Adds wrapper code around some\n      dwarf_util.h macros\n      so in case of a serious DWARF error we can\n      free locally allocated things.\n2020-03-12: David Anderson\n    * dwarf_errmsg_list.h: Corrected DW_DLE_STR_OFFSETS_EXTRA_BYTES\n      text. The error messages have more detail due to \n      the dwarf_str_offsets.c changes below, so fixed\n      the string here.\n2020-03-12: David Anderson\n    * dwarf_macro5.c: Do proper dwarf_dealloc, avoiding\n      a pointless dependency on de_alloc_tree freeing \n      things.\n2020-03-12: David Anderson\n    * dwarf_alloc.c: Minor cleanup that assigns\n      zero after dwarf_dealloc so dead pointers\n      not left around.\n2020-03-12: David Anderson\n    * dwarf_str_offsets.c: Improve messages in case of\n      a serious DWARF error, reporting what is wrong\n      more precisely and allowing a few bytes of all-zero-bits\n      to be allowed at end of section (no error needed).\n2020-03-12: David Anderson\n    * dwarf_util.c: Revise too-long lines and checks for NULL\n      pointers for moderm readability.\n      Improve _dwarf_free_abbrev_hash_table_contents() so\n      it can safely free an incompletely set up hash table.\n2020-03-09: David Anderson\n    * dwarf_alloc.c: Implements optional (at run time)\n      reduced use of the de_alloc_tree search tree\n      as a performance enhancement (see libdwarf2.1.mm/pdf).\n    * dwarf_alloc.h: Declares _dwarf_alloc_tree_counts(),\n      a new hidden function.\n    * libdwarf_version.h: New date string\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h: New date string so regenerated\n      these.\n    * libdwarf.h.in: New function dwarf_set_de_alloc_flag()\n      declared.\n    * generated_libdwarf.h.in: Regenerated\n2020-03-02: David Anderson\n    * dwarf_print_lines.c: Removed one-line #if 0\n      code that serves no purpose.\n2020-02-25: David Anderson\n    * dwarf_print_lines.c: Removed space character just before newline\n      as it  has no useful prupose. 3 places.\n2020-02-25: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,\n      dwarf_names_new.h:\n      libdwarf_version.h: updated version string.\n2020-02-25: David Anderson\n    * dwarf_line_table_reader_common.h: Now with dwarfstring\n      containers in local scopes and easily evaluated\n      as to lifetime and correctness.\n2020-02-25: David Anderson\n    * dwarf_elfread.c: Deleted a #if 0 ...#endif few lines.\n    * dwarf_line.c: Fixed trailing whitespace.\n    * dwarf_line_table_reader_common.h: Removed all use of the\n      old dwarf_printf varargs code.  Instead using dwarfstring\n      and dwarfstring_append_printf_i() etc.\n      And a far simpler _dwarf_printf().\n      No longer any sprintf/snprintf/vsnprintf here.\n    * dwarf_opaque.h: Remove trailing whitespace.\n    * dwarf_print_lines.c: Removed all use of the\n      old dwarf_printf varargs code.\n      No longer any sprintf/snprintf/vsnprintf here.\n    * dwarf_util.c: Delete unused buffersetsize function.\n      Delete now-unuised dwarf_printf()\n    * dwarfstring.c: Now using TRUE FALSE, not DW_DLV anything.\n      No one will be testing the integer return value anyway.\n      Fixed the code where %-4s was truncating if the string\n      to be processed was longer than 4 characters.\n    * dwarfstring.h: Added commentary.\n    * test_dwarfstring.c: New testcase for dwarfstring\n2020-02-21: David Anderson\n    * dwarf_arange.c,dwarf_debuglink.c,dwarf_frame2.c:\n      removed the last sprintf/snprintf, changed to \n      use dwarfstring.h functions.\n2020-02-18: David Anderson\n    * dwarf_line.c: Added free() calls to delete_line_context_itself\n      to avoid a leak that was created in last commit..\n    * dwarf_line.h: Deleted a now-spurious comment.\n    * dwarf_line_table_reader_common.h: Removed an == NULL\n      comparison in favor of a !filename_entry_pairs.\n2020-02-16: David Anderson\n    * libdwarf2.1.mm: Now explains how dwarf_srcfiles()\n      name arrays differ in DWARF5 from earlier\n      debug_info versions. So callers can use\n      the srcfiles array properly.\n    * libdwarf2.1.pdf: Now version 2.87, dated 16 February 2020.\n    * dwarf_line.c, dwarf_line.h,dwarf_print_lines.c,\n      dwarf_line_table_reader_common.h: Recording DW5 line table\n      header data more fully so lines print verbose\n      prints more of the actual line table header.\n2020-02-15: David Anderson\n    * dwarf_elf_access.c,dwarf_init_finish.c: With libelf\n      in use there was a mistake that broke dumping some objects that\n      needed relocations.\n    * dwarf_opaque.h: Corrected a is_rela to r_is_rela\n2020-02-13: David Anderson\n    * dwarf_elfread.c,dwarf_errmsg_list.h: Removed\n      trailing whitespace.\n2020-02-13: David Anderson\n    *  libdwarf_version.h: New version string \n    *  dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n       dwarf_names_new.h: Regenerated with new\n       version string.\n2020-02-13: David Anderson\n     * libdwarf/libdwarf.h.in: Added a new error code to\n       properly distinguish between distinct elf section\n       header issues related to relocations versus\n       other section header issues.\n     * libdwarf/generated_libdwarf.h.in: regenerated\n\n    * dwarf_elf_access.c: Adding local READ_UNALIGNED_SAFE\n      so we can do libelf relocations properly; .rel and .rela.\n    * dwarf_elf_defines.h: Adding R_386_PC32 to the \n      applicable relocation sets.\n    * dwarf_elf_load_headers.c: Now we deal with .rel.\n      and .rela. relocations for better completeness.\n      Removed some code duplication and complexity\n      too.\n    * dwarf_elf_rel_detector.c: Deals with R_386_PC32 now.\n    * dwarf_elfread.c: Add READ_UNALIGNED_SAFE so we can\n      do no-libelf relocations properly; .rel and .rela\n    * dwarf_elfread.h: Added gr_is_rela field and\n      two enums RelocRela and RelocOffsetSize so we have\n      type-safety in the argument lists.\n    * dwarf_init_finish.c: A new function ensures we\n      skip various sections we know we do not want to\n      look at.\n    * dwarf_opaque.h: Declare _dwarf_ignorethissection()\n      so libelf and non-libelf can ignore the unwanted\n      sections.\n    *  dwarf_errmsg_list.h: Entry added for the new\n       DW_DLE error code.\n2020-02-11: David Anderson\n    * dwarf_elf_access.c,dwarf_line_table_reader_common.h,\n      dwarf_tied_decls.h:\n      removed trailing whitespace and final blank line.\n2020-02-11: David Anderson\n    * dwarf_init_finish.c: Removed code that was #if 0 #endif\n2020-02-10: David Anderson\n    * dwarf_elf_access.c: Now allows for .rel and .rela.\n    * dwarf_elf_defines.h: Now allows for .rel and .rela.\n    * dwarf_init_finish.c: Now allows for .rel and .rela.\n    * dwarf_opaque.h: Adding dss_is_rela so we can\n      process .rel. sections too.\n2020-01-25: David Anderson\n    * dwarf_form.c: DW_FORM_rnglistx was ommitted from a switch statement.\n      Adding it in fixed the resulting errors in a DWARF5 object file\n      built by clang 9.0.0.0\n2020-01-16: David Anderson\n    * dwarf_alloc.c,dwarf_die_deliv.c,dwarf_form.a,\n      dwarf_query.c,dwarfstring.c,\n      pro_reloc.c,pro_reloc_stream.c,pro_reloc_symbolic.c,\n      pro_section.c,pro_types.c,pro_vars.c,pro_weaks.c,\n      test_dwarfstring.c: Fixed indentations and\n      removed trailing whitespace.\n    * dwarf_xu_index.c: Ensure local Dwarf_Sig8 variables\n      are always initialized. Does not fix any bug but\n      does make it easier to read the code.\n      Fixes indentation and removes trailing whitespace too.\n2020-01-14: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h: Updated version string.\n2020-01-05: David Anderson\n    * dwarf_query.c(dwarf_offset_list): Coverity Scan CID 206598.\n      Now checks for DW_DLV_ERROR where it failed to do so before,\n      and returns an error instead of letting it slip through.\n2020-01-03: David Anderson\n    * dwarf_load_elf_headers.c(dwarf_elf_load_rela_32):\n      Coverity Scan uncovered a memory leak in one\n      case. CID 206524\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#include \"dwarf.h\"\n\n#include \"libdwarf.h\"\n\n/* ARGSUSED */\nint\ndwarf_get_TAG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_TAG_array_type:\n        *s_out = \"DW_TAG_array_type\";\n        return DW_DLV_OK;\n    case DW_TAG_class_type:\n        *s_out = \"DW_TAG_class_type\";\n        return DW_DLV_OK;\n    case DW_TAG_entry_point:\n        *s_out = \"DW_TAG_entry_point\";\n        return DW_DLV_OK;\n    case DW_TAG_enumeration_type:\n        *s_out = \"DW_TAG_enumeration_type\";\n        return DW_DLV_OK;\n    case DW_TAG_formal_parameter:\n        *s_out = \"DW_TAG_formal_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_declaration:\n        *s_out = \"DW_TAG_imported_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_label:\n        *s_out = \"DW_TAG_label\";\n        return DW_DLV_OK;\n    case DW_TAG_lexical_block:\n        *s_out = \"DW_TAG_lexical_block\";\n        return DW_DLV_OK;\n    case DW_TAG_member:\n        *s_out = \"DW_TAG_member\";\n        return DW_DLV_OK;\n    case DW_TAG_pointer_type:\n        *s_out = \"DW_TAG_pointer_type\";\n        return DW_DLV_OK;\n    case DW_TAG_reference_type:\n        *s_out = \"DW_TAG_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_compile_unit:\n        *s_out = \"DW_TAG_compile_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_string_type:\n        *s_out = \"DW_TAG_string_type\";\n        return DW_DLV_OK;\n    case DW_TAG_structure_type:\n        *s_out = \"DW_TAG_structure_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subroutine_type:\n        *s_out = \"DW_TAG_subroutine_type\";\n        return DW_DLV_OK;\n    case DW_TAG_typedef:\n        *s_out = \"DW_TAG_typedef\";\n        return DW_DLV_OK;\n    case DW_TAG_union_type:\n        *s_out = \"DW_TAG_union_type\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_parameters:\n        *s_out = \"DW_TAG_unspecified_parameters\";\n        return DW_DLV_OK;\n    case DW_TAG_variant:\n        *s_out = \"DW_TAG_variant\";\n        return DW_DLV_OK;\n    case DW_TAG_common_block:\n        *s_out = \"DW_TAG_common_block\";\n        return DW_DLV_OK;\n    case DW_TAG_common_inclusion:\n        *s_out = \"DW_TAG_common_inclusion\";\n        return DW_DLV_OK;\n    case DW_TAG_inheritance:\n        *s_out = \"DW_TAG_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_inlined_subroutine:\n        *s_out = \"DW_TAG_inlined_subroutine\";\n        return DW_DLV_OK;\n    case DW_TAG_module:\n        *s_out = \"DW_TAG_module\";\n        return DW_DLV_OK;\n    case DW_TAG_ptr_to_member_type:\n        *s_out = \"DW_TAG_ptr_to_member_type\";\n        return DW_DLV_OK;\n    case DW_TAG_set_type:\n        *s_out = \"DW_TAG_set_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subrange_type:\n        *s_out = \"DW_TAG_subrange_type\";\n        return DW_DLV_OK;\n    case DW_TAG_with_stmt:\n        *s_out = \"DW_TAG_with_stmt\";\n        return DW_DLV_OK;\n    case DW_TAG_access_declaration:\n        *s_out = \"DW_TAG_access_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_base_type:\n        *s_out = \"DW_TAG_base_type\";\n        return DW_DLV_OK;\n    case DW_TAG_catch_block:\n        *s_out = \"DW_TAG_catch_block\";\n        return DW_DLV_OK;\n    case DW_TAG_const_type:\n        *s_out = \"DW_TAG_const_type\";\n        return DW_DLV_OK;\n    case DW_TAG_constant:\n        *s_out = \"DW_TAG_constant\";\n        return DW_DLV_OK;\n    case DW_TAG_enumerator:\n        *s_out = \"DW_TAG_enumerator\";\n        return DW_DLV_OK;\n    case DW_TAG_file_type:\n        *s_out = \"DW_TAG_file_type\";\n        return DW_DLV_OK;\n    case DW_TAG_friend:\n        *s_out = \"DW_TAG_friend\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist:\n        *s_out = \"DW_TAG_namelist\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist_item:\n        *s_out = \"DW_TAG_namelist_item\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2c. DW_TAG_namelist_items */\n    case DW_TAG_packed_type:\n        *s_out = \"DW_TAG_packed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subprogram:\n        *s_out = \"DW_TAG_subprogram\";\n        return DW_DLV_OK;\n    case DW_TAG_template_type_parameter:\n        *s_out = \"DW_TAG_template_type_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2f. DW_TAG_template_type_param */\n    case DW_TAG_template_value_parameter:\n        *s_out = \"DW_TAG_template_value_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x30. DW_TAG_template_value_param */\n    case DW_TAG_thrown_type:\n        *s_out = \"DW_TAG_thrown_type\";\n        return DW_DLV_OK;\n    case DW_TAG_try_block:\n        *s_out = \"DW_TAG_try_block\";\n        return DW_DLV_OK;\n    case DW_TAG_variant_part:\n        *s_out = \"DW_TAG_variant_part\";\n        return DW_DLV_OK;\n    case DW_TAG_variable:\n        *s_out = \"DW_TAG_variable\";\n        return DW_DLV_OK;\n    case DW_TAG_volatile_type:\n        *s_out = \"DW_TAG_volatile_type\";\n        return DW_DLV_OK;\n    case DW_TAG_dwarf_procedure:\n        *s_out = \"DW_TAG_dwarf_procedure\";\n        return DW_DLV_OK;\n    case DW_TAG_restrict_type:\n        *s_out = \"DW_TAG_restrict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_interface_type:\n        *s_out = \"DW_TAG_interface_type\";\n        return DW_DLV_OK;\n    case DW_TAG_namespace:\n        *s_out = \"DW_TAG_namespace\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_module:\n        *s_out = \"DW_TAG_imported_module\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_type:\n        *s_out = \"DW_TAG_unspecified_type\";\n        return DW_DLV_OK;\n    case DW_TAG_partial_unit:\n        *s_out = \"DW_TAG_partial_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_unit:\n        *s_out = \"DW_TAG_imported_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_mutable_type:\n        *s_out = \"DW_TAG_mutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_condition:\n        *s_out = \"DW_TAG_condition\";\n        return DW_DLV_OK;\n    case DW_TAG_shared_type:\n        *s_out = \"DW_TAG_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_type_unit:\n        *s_out = \"DW_TAG_type_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_rvalue_reference_type:\n        *s_out = \"DW_TAG_rvalue_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_template_alias:\n        *s_out = \"DW_TAG_template_alias\";\n        return DW_DLV_OK;\n    case DW_TAG_coarray_type:\n        *s_out = \"DW_TAG_coarray_type\";\n        return DW_DLV_OK;\n    case DW_TAG_generic_subrange:\n        *s_out = \"DW_TAG_generic_subrange\";\n        return DW_DLV_OK;\n    case DW_TAG_dynamic_type:\n        *s_out = \"DW_TAG_dynamic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_atomic_type:\n        *s_out = \"DW_TAG_atomic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site:\n        *s_out = \"DW_TAG_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site_parameter:\n        *s_out = \"DW_TAG_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_skeleton_unit:\n        *s_out = \"DW_TAG_skeleton_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_immutable_type:\n        *s_out = \"DW_TAG_immutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_lo_user:\n        *s_out = \"DW_TAG_lo_user\";\n        return DW_DLV_OK;\n    case DW_TAG_MIPS_loop:\n        *s_out = \"DW_TAG_MIPS_loop\";\n        return DW_DLV_OK;\n    case DW_TAG_HP_array_descriptor:\n        *s_out = \"DW_TAG_HP_array_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_format_label:\n        *s_out = \"DW_TAG_format_label\";\n        return DW_DLV_OK;\n    case DW_TAG_function_template:\n        *s_out = \"DW_TAG_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_class_template:\n        *s_out = \"DW_TAG_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_BINCL:\n        *s_out = \"DW_TAG_GNU_BINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_EINCL:\n        *s_out = \"DW_TAG_GNU_EINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_template_template_parameter:\n        *s_out = \"DW_TAG_GNU_template_template_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x4106. DW_TAG_GNU_template_template_param */\n    case DW_TAG_GNU_template_parameter_pack:\n        *s_out = \"DW_TAG_GNU_template_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_formal_parameter_pack:\n        *s_out = \"DW_TAG_GNU_formal_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site:\n        *s_out = \"DW_TAG_GNU_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site_parameter:\n        *s_out = \"DW_TAG_GNU_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_function_template:\n        *s_out = \"DW_TAG_SUN_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_class_template:\n        *s_out = \"DW_TAG_SUN_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_struct_template:\n        *s_out = \"DW_TAG_SUN_struct_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_union_template:\n        *s_out = \"DW_TAG_SUN_union_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_indirect_inheritance:\n        *s_out = \"DW_TAG_SUN_indirect_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_codeflags:\n        *s_out = \"DW_TAG_SUN_codeflags\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_memop_info:\n        *s_out = \"DW_TAG_SUN_memop_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_omp_child_func:\n        *s_out = \"DW_TAG_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_rtti_descriptor:\n        *s_out = \"DW_TAG_SUN_rtti_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor_info:\n        *s_out = \"DW_TAG_SUN_dtor_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor:\n        *s_out = \"DW_TAG_SUN_dtor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_f90_interface:\n        *s_out = \"DW_TAG_SUN_f90_interface\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_fortran_vax_structure:\n        *s_out = \"DW_TAG_SUN_fortran_vax_structure\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_hi:\n        *s_out = \"DW_TAG_SUN_hi\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_mwa_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_mwa_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rev_carry_type:\n        *s_out = \"DW_TAG_ALTIUM_rev_carry_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rom:\n        *s_out = \"DW_TAG_ALTIUM_rom\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_shared_type:\n        *s_out = \"DW_TAG_upc_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_strict_type:\n        *s_out = \"DW_TAG_upc_strict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_relaxed_type:\n        *s_out = \"DW_TAG_upc_relaxed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_kanji_type:\n        *s_out = \"DW_TAG_PGI_kanji_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_interface_block:\n        *s_out = \"DW_TAG_PGI_interface_block\";\n        return DW_DLV_OK;\n    case DW_TAG_hi_user:\n        *s_out = \"DW_TAG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_children_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_children_no:\n        *s_out = \"DW_children_no\";\n        return DW_DLV_OK;\n    case DW_children_yes:\n        *s_out = \"DW_children_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FORM_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FORM_addr:\n        *s_out = \"DW_FORM_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_block2:\n        *s_out = \"DW_FORM_block2\";\n        return DW_DLV_OK;\n    case DW_FORM_block4:\n        *s_out = \"DW_FORM_block4\";\n        return DW_DLV_OK;\n    case DW_FORM_data2:\n        *s_out = \"DW_FORM_data2\";\n        return DW_DLV_OK;\n    case DW_FORM_data4:\n        *s_out = \"DW_FORM_data4\";\n        return DW_DLV_OK;\n    case DW_FORM_data8:\n        *s_out = \"DW_FORM_data8\";\n        return DW_DLV_OK;\n    case DW_FORM_string:\n        *s_out = \"DW_FORM_string\";\n        return DW_DLV_OK;\n    case DW_FORM_block:\n        *s_out = \"DW_FORM_block\";\n        return DW_DLV_OK;\n    case DW_FORM_block1:\n        *s_out = \"DW_FORM_block1\";\n        return DW_DLV_OK;\n    case DW_FORM_data1:\n        *s_out = \"DW_FORM_data1\";\n        return DW_DLV_OK;\n    case DW_FORM_flag:\n        *s_out = \"DW_FORM_flag\";\n        return DW_DLV_OK;\n    case DW_FORM_sdata:\n        *s_out = \"DW_FORM_sdata\";\n        return DW_DLV_OK;\n    case DW_FORM_strp:\n        *s_out = \"DW_FORM_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_udata:\n        *s_out = \"DW_FORM_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_addr:\n        *s_out = \"DW_FORM_ref_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_ref1:\n        *s_out = \"DW_FORM_ref1\";\n        return DW_DLV_OK;\n    case DW_FORM_ref2:\n        *s_out = \"DW_FORM_ref2\";\n        return DW_DLV_OK;\n    case DW_FORM_ref4:\n        *s_out = \"DW_FORM_ref4\";\n        return DW_DLV_OK;\n    case DW_FORM_ref8:\n        *s_out = \"DW_FORM_ref8\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_udata:\n        *s_out = \"DW_FORM_ref_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_indirect:\n        *s_out = \"DW_FORM_indirect\";\n        return DW_DLV_OK;\n    case DW_FORM_sec_offset:\n        *s_out = \"DW_FORM_sec_offset\";\n        return DW_DLV_OK;\n    case DW_FORM_exprloc:\n        *s_out = \"DW_FORM_exprloc\";\n        return DW_DLV_OK;\n    case DW_FORM_flag_present:\n        *s_out = \"DW_FORM_flag_present\";\n        return DW_DLV_OK;\n    case DW_FORM_strx:\n        *s_out = \"DW_FORM_strx\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx:\n        *s_out = \"DW_FORM_addrx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup4:\n        *s_out = \"DW_FORM_ref_sup4\";\n        return DW_DLV_OK;\n    case DW_FORM_strp_sup:\n        *s_out = \"DW_FORM_strp_sup\";\n        return DW_DLV_OK;\n    case DW_FORM_data16:\n        *s_out = \"DW_FORM_data16\";\n        return DW_DLV_OK;\n    case DW_FORM_line_strp:\n        *s_out = \"DW_FORM_line_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sig8:\n        *s_out = \"DW_FORM_ref_sig8\";\n        return DW_DLV_OK;\n    case DW_FORM_implicit_const:\n        *s_out = \"DW_FORM_implicit_const\";\n        return DW_DLV_OK;\n    case DW_FORM_loclistx:\n        *s_out = \"DW_FORM_loclistx\";\n        return DW_DLV_OK;\n    case DW_FORM_rnglistx:\n        *s_out = \"DW_FORM_rnglistx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup8:\n        *s_out = \"DW_FORM_ref_sup8\";\n        return DW_DLV_OK;\n    case DW_FORM_strx1:\n        *s_out = \"DW_FORM_strx1\";\n        return DW_DLV_OK;\n    case DW_FORM_strx2:\n        *s_out = \"DW_FORM_strx2\";\n        return DW_DLV_OK;\n    case DW_FORM_strx3:\n        *s_out = \"DW_FORM_strx3\";\n        return DW_DLV_OK;\n    case DW_FORM_strx4:\n        *s_out = \"DW_FORM_strx4\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx1:\n        *s_out = \"DW_FORM_addrx1\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx2:\n        *s_out = \"DW_FORM_addrx2\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx3:\n        *s_out = \"DW_FORM_addrx3\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx4:\n        *s_out = \"DW_FORM_addrx4\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_addr_index:\n        *s_out = \"DW_FORM_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_str_index:\n        *s_out = \"DW_FORM_GNU_str_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_ref_alt:\n        *s_out = \"DW_FORM_GNU_ref_alt\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_strp_alt:\n        *s_out = \"DW_FORM_GNU_strp_alt\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_AT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_AT_sibling:\n        *s_out = \"DW_AT_sibling\";\n        return DW_DLV_OK;\n    case DW_AT_location:\n        *s_out = \"DW_AT_location\";\n        return DW_DLV_OK;\n    case DW_AT_name:\n        *s_out = \"DW_AT_name\";\n        return DW_DLV_OK;\n    case DW_AT_ordering:\n        *s_out = \"DW_AT_ordering\";\n        return DW_DLV_OK;\n    case DW_AT_subscr_data:\n        *s_out = \"DW_AT_subscr_data\";\n        return DW_DLV_OK;\n    case DW_AT_byte_size:\n        *s_out = \"DW_AT_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_bit_offset:\n        *s_out = \"DW_AT_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_bit_size:\n        *s_out = \"DW_AT_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_element_list:\n        *s_out = \"DW_AT_element_list\";\n        return DW_DLV_OK;\n    case DW_AT_stmt_list:\n        *s_out = \"DW_AT_stmt_list\";\n        return DW_DLV_OK;\n    case DW_AT_low_pc:\n        *s_out = \"DW_AT_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_high_pc:\n        *s_out = \"DW_AT_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_language:\n        *s_out = \"DW_AT_language\";\n        return DW_DLV_OK;\n    case DW_AT_member:\n        *s_out = \"DW_AT_member\";\n        return DW_DLV_OK;\n    case DW_AT_discr:\n        *s_out = \"DW_AT_discr\";\n        return DW_DLV_OK;\n    case DW_AT_discr_value:\n        *s_out = \"DW_AT_discr_value\";\n        return DW_DLV_OK;\n    case DW_AT_visibility:\n        *s_out = \"DW_AT_visibility\";\n        return DW_DLV_OK;\n    case DW_AT_import:\n        *s_out = \"DW_AT_import\";\n        return DW_DLV_OK;\n    case DW_AT_string_length:\n        *s_out = \"DW_AT_string_length\";\n        return DW_DLV_OK;\n    case DW_AT_common_reference:\n        *s_out = \"DW_AT_common_reference\";\n        return DW_DLV_OK;\n    case DW_AT_comp_dir:\n        *s_out = \"DW_AT_comp_dir\";\n        return DW_DLV_OK;\n    case DW_AT_const_value:\n        *s_out = \"DW_AT_const_value\";\n        return DW_DLV_OK;\n    case DW_AT_containing_type:\n        *s_out = \"DW_AT_containing_type\";\n        return DW_DLV_OK;\n    case DW_AT_default_value:\n        *s_out = \"DW_AT_default_value\";\n        return DW_DLV_OK;\n    case DW_AT_inline:\n        *s_out = \"DW_AT_inline\";\n        return DW_DLV_OK;\n    case DW_AT_is_optional:\n        *s_out = \"DW_AT_is_optional\";\n        return DW_DLV_OK;\n    case DW_AT_lower_bound:\n        *s_out = \"DW_AT_lower_bound\";\n        return DW_DLV_OK;\n    case DW_AT_producer:\n        *s_out = \"DW_AT_producer\";\n        return DW_DLV_OK;\n    case DW_AT_prototyped:\n        *s_out = \"DW_AT_prototyped\";\n        return DW_DLV_OK;\n    case DW_AT_return_addr:\n        *s_out = \"DW_AT_return_addr\";\n        return DW_DLV_OK;\n    case DW_AT_start_scope:\n        *s_out = \"DW_AT_start_scope\";\n        return DW_DLV_OK;\n    case DW_AT_bit_stride:\n        *s_out = \"DW_AT_bit_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2e. DW_AT_stride_size */\n    case DW_AT_upper_bound:\n        *s_out = \"DW_AT_upper_bound\";\n        return DW_DLV_OK;\n    case DW_AT_abstract_origin:\n        *s_out = \"DW_AT_abstract_origin\";\n        return DW_DLV_OK;\n    case DW_AT_accessibility:\n        *s_out = \"DW_AT_accessibility\";\n        return DW_DLV_OK;\n    case DW_AT_address_class:\n        *s_out = \"DW_AT_address_class\";\n        return DW_DLV_OK;\n    case DW_AT_artificial:\n        *s_out = \"DW_AT_artificial\";\n        return DW_DLV_OK;\n    case DW_AT_base_types:\n        *s_out = \"DW_AT_base_types\";\n        return DW_DLV_OK;\n    case DW_AT_calling_convention:\n        *s_out = \"DW_AT_calling_convention\";\n        return DW_DLV_OK;\n    case DW_AT_count:\n        *s_out = \"DW_AT_count\";\n        return DW_DLV_OK;\n    case DW_AT_data_member_location:\n        *s_out = \"DW_AT_data_member_location\";\n        return DW_DLV_OK;\n    case DW_AT_decl_column:\n        *s_out = \"DW_AT_decl_column\";\n        return DW_DLV_OK;\n    case DW_AT_decl_file:\n        *s_out = \"DW_AT_decl_file\";\n        return DW_DLV_OK;\n    case DW_AT_decl_line:\n        *s_out = \"DW_AT_decl_line\";\n        return DW_DLV_OK;\n    case DW_AT_declaration:\n        *s_out = \"DW_AT_declaration\";\n        return DW_DLV_OK;\n    case DW_AT_discr_list:\n        *s_out = \"DW_AT_discr_list\";\n        return DW_DLV_OK;\n    case DW_AT_encoding:\n        *s_out = \"DW_AT_encoding\";\n        return DW_DLV_OK;\n    case DW_AT_external:\n        *s_out = \"DW_AT_external\";\n        return DW_DLV_OK;\n    case DW_AT_frame_base:\n        *s_out = \"DW_AT_frame_base\";\n        return DW_DLV_OK;\n    case DW_AT_friend:\n        *s_out = \"DW_AT_friend\";\n        return DW_DLV_OK;\n    case DW_AT_identifier_case:\n        *s_out = \"DW_AT_identifier_case\";\n        return DW_DLV_OK;\n    case DW_AT_macro_info:\n        *s_out = \"DW_AT_macro_info\";\n        return DW_DLV_OK;\n    case DW_AT_namelist_item:\n        *s_out = \"DW_AT_namelist_item\";\n        return DW_DLV_OK;\n    case DW_AT_priority:\n        *s_out = \"DW_AT_priority\";\n        return DW_DLV_OK;\n    case DW_AT_segment:\n        *s_out = \"DW_AT_segment\";\n        return DW_DLV_OK;\n    case DW_AT_specification:\n        *s_out = \"DW_AT_specification\";\n        return DW_DLV_OK;\n    case DW_AT_static_link:\n        *s_out = \"DW_AT_static_link\";\n        return DW_DLV_OK;\n    case DW_AT_type:\n        *s_out = \"DW_AT_type\";\n        return DW_DLV_OK;\n    case DW_AT_use_location:\n        *s_out = \"DW_AT_use_location\";\n        return DW_DLV_OK;\n    case DW_AT_variable_parameter:\n        *s_out = \"DW_AT_variable_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_virtuality:\n        *s_out = \"DW_AT_virtuality\";\n        return DW_DLV_OK;\n    case DW_AT_vtable_elem_location:\n        *s_out = \"DW_AT_vtable_elem_location\";\n        return DW_DLV_OK;\n    case DW_AT_allocated:\n        *s_out = \"DW_AT_allocated\";\n        return DW_DLV_OK;\n    case DW_AT_associated:\n        *s_out = \"DW_AT_associated\";\n        return DW_DLV_OK;\n    case DW_AT_data_location:\n        *s_out = \"DW_AT_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_byte_stride:\n        *s_out = \"DW_AT_byte_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x51. DW_AT_stride */\n    case DW_AT_entry_pc:\n        *s_out = \"DW_AT_entry_pc\";\n        return DW_DLV_OK;\n    case DW_AT_use_UTF8:\n        *s_out = \"DW_AT_use_UTF8\";\n        return DW_DLV_OK;\n    case DW_AT_extension:\n        *s_out = \"DW_AT_extension\";\n        return DW_DLV_OK;\n    case DW_AT_ranges:\n        *s_out = \"DW_AT_ranges\";\n        return DW_DLV_OK;\n    case DW_AT_trampoline:\n        *s_out = \"DW_AT_trampoline\";\n        return DW_DLV_OK;\n    case DW_AT_call_column:\n        *s_out = \"DW_AT_call_column\";\n        return DW_DLV_OK;\n    case DW_AT_call_file:\n        *s_out = \"DW_AT_call_file\";\n        return DW_DLV_OK;\n    case DW_AT_call_line:\n        *s_out = \"DW_AT_call_line\";\n        return DW_DLV_OK;\n    case DW_AT_description:\n        *s_out = \"DW_AT_description\";\n        return DW_DLV_OK;\n    case DW_AT_binary_scale:\n        *s_out = \"DW_AT_binary_scale\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_scale:\n        *s_out = \"DW_AT_decimal_scale\";\n        return DW_DLV_OK;\n    case DW_AT_small:\n        *s_out = \"DW_AT_small\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_sign:\n        *s_out = \"DW_AT_decimal_sign\";\n        return DW_DLV_OK;\n    case DW_AT_digit_count:\n        *s_out = \"DW_AT_digit_count\";\n        return DW_DLV_OK;\n    case DW_AT_picture_string:\n        *s_out = \"DW_AT_picture_string\";\n        return DW_DLV_OK;\n    case DW_AT_mutable:\n        *s_out = \"DW_AT_mutable\";\n        return DW_DLV_OK;\n    case DW_AT_threads_scaled:\n        *s_out = \"DW_AT_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_explicit:\n        *s_out = \"DW_AT_explicit\";\n        return DW_DLV_OK;\n    case DW_AT_object_pointer:\n        *s_out = \"DW_AT_object_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_endianity:\n        *s_out = \"DW_AT_endianity\";\n        return DW_DLV_OK;\n    case DW_AT_elemental:\n        *s_out = \"DW_AT_elemental\";\n        return DW_DLV_OK;\n    case DW_AT_pure:\n        *s_out = \"DW_AT_pure\";\n        return DW_DLV_OK;\n    case DW_AT_recursive:\n        *s_out = \"DW_AT_recursive\";\n        return DW_DLV_OK;\n    case DW_AT_signature:\n        *s_out = \"DW_AT_signature\";\n        return DW_DLV_OK;\n    case DW_AT_main_subprogram:\n        *s_out = \"DW_AT_main_subprogram\";\n        return DW_DLV_OK;\n    case DW_AT_data_bit_offset:\n        *s_out = \"DW_AT_data_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_const_expr:\n        *s_out = \"DW_AT_const_expr\";\n        return DW_DLV_OK;\n    case DW_AT_enum_class:\n        *s_out = \"DW_AT_enum_class\";\n        return DW_DLV_OK;\n    case DW_AT_linkage_name:\n        *s_out = \"DW_AT_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_bit_size:\n        *s_out = \"DW_AT_string_length_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_byte_size:\n        *s_out = \"DW_AT_string_length_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_rank:\n        *s_out = \"DW_AT_rank\";\n        return DW_DLV_OK;\n    case DW_AT_str_offsets_base:\n        *s_out = \"DW_AT_str_offsets_base\";\n        return DW_DLV_OK;\n    case DW_AT_addr_base:\n        *s_out = \"DW_AT_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_rnglists_base:\n        *s_out = \"DW_AT_rnglists_base\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_id:\n        *s_out = \"DW_AT_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_name:\n        *s_out = \"DW_AT_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_reference:\n        *s_out = \"DW_AT_reference\";\n        return DW_DLV_OK;\n    case DW_AT_rvalue_reference:\n        *s_out = \"DW_AT_rvalue_reference\";\n        return DW_DLV_OK;\n    case DW_AT_macros:\n        *s_out = \"DW_AT_macros\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_calls:\n        *s_out = \"DW_AT_call_all_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_source_calls:\n        *s_out = \"DW_AT_call_all_source_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_tail_calls:\n        *s_out = \"DW_AT_call_all_tail_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_return_pc:\n        *s_out = \"DW_AT_call_return_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_value:\n        *s_out = \"DW_AT_call_value\";\n        return DW_DLV_OK;\n    case DW_AT_call_origin:\n        *s_out = \"DW_AT_call_origin\";\n        return DW_DLV_OK;\n    case DW_AT_call_parameter:\n        *s_out = \"DW_AT_call_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_call_pc:\n        *s_out = \"DW_AT_call_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_tail_call:\n        *s_out = \"DW_AT_call_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_call_target:\n        *s_out = \"DW_AT_call_target\";\n        return DW_DLV_OK;\n    case DW_AT_call_target_clobbered:\n        *s_out = \"DW_AT_call_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_location:\n        *s_out = \"DW_AT_call_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_value:\n        *s_out = \"DW_AT_call_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_noreturn:\n        *s_out = \"DW_AT_noreturn\";\n        return DW_DLV_OK;\n    case DW_AT_alignment:\n        *s_out = \"DW_AT_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_export_symbols:\n        *s_out = \"DW_AT_export_symbols\";\n        return DW_DLV_OK;\n    case DW_AT_deleted:\n        *s_out = \"DW_AT_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_defaulted:\n        *s_out = \"DW_AT_defaulted\";\n        return DW_DLV_OK;\n    case DW_AT_loclists_base:\n        *s_out = \"DW_AT_loclists_base\";\n        return DW_DLV_OK;\n    case DW_AT_HP_block_index:\n        *s_out = \"DW_AT_HP_block_index\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2000. DW_AT_lo_user */\n    case DW_AT_MIPS_fde:\n        *s_out = \"DW_AT_MIPS_fde\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2001. DW_AT_HP_unmodifiable */\n    /* Skipping alternate spelling of value 0x2001. DW_AT_CPQ_discontig_ranges */\n    case DW_AT_MIPS_loop_begin:\n        *s_out = \"DW_AT_MIPS_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2002. DW_AT_CPQ_semantic_events */\n    case DW_AT_MIPS_tail_loop_begin:\n        *s_out = \"DW_AT_MIPS_tail_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2003. DW_AT_CPQ_split_lifetimes_var */\n    case DW_AT_MIPS_epilog_begin:\n        *s_out = \"DW_AT_MIPS_epilog_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2004. DW_AT_CPQ_split_lifetimes_rtn */\n    case DW_AT_MIPS_loop_unroll_factor:\n        *s_out = \"DW_AT_MIPS_loop_unroll_factor\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2005. DW_AT_CPQ_prologue_length */\n    case DW_AT_MIPS_software_pipeline_depth:\n        *s_out = \"DW_AT_MIPS_software_pipeline_depth\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_linkage_name:\n        *s_out = \"DW_AT_MIPS_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride:\n        *s_out = \"DW_AT_MIPS_stride\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_abstract_name:\n        *s_out = \"DW_AT_MIPS_abstract_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_clone_origin:\n        *s_out = \"DW_AT_MIPS_clone_origin\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_has_inlines:\n        *s_out = \"DW_AT_MIPS_has_inlines\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_byte:\n        *s_out = \"DW_AT_MIPS_stride_byte\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_elem:\n        *s_out = \"DW_AT_MIPS_stride_elem\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_ptr_dopetype:\n        *s_out = \"DW_AT_MIPS_ptr_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_allocatable_dopetype:\n        *s_out = \"DW_AT_MIPS_allocatable_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_assumed_shape_dopetype:\n        *s_out = \"DW_AT_MIPS_assumed_shape_dopetype\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2010. DW_AT_HP_actuals_stmt_list */\n    case DW_AT_MIPS_assumed_size:\n        *s_out = \"DW_AT_MIPS_assumed_size\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2011. DW_AT_HP_proc_per_section */\n    case DW_AT_HP_raw_data_ptr:\n        *s_out = \"DW_AT_HP_raw_data_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_HP_pass_by_reference:\n        *s_out = \"DW_AT_HP_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_level:\n        *s_out = \"DW_AT_HP_opt_level\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_version_id:\n        *s_out = \"DW_AT_HP_prof_version_id\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_flags:\n        *s_out = \"DW_AT_HP_opt_flags\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_low_pc:\n        *s_out = \"DW_AT_HP_cold_region_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_high_pc:\n        *s_out = \"DW_AT_HP_cold_region_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_all_variables_modifiable:\n        *s_out = \"DW_AT_HP_all_variables_modifiable\";\n        return DW_DLV_OK;\n    case DW_AT_HP_linkage_name:\n        *s_out = \"DW_AT_HP_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_flags:\n        *s_out = \"DW_AT_HP_prof_flags\";\n        return DW_DLV_OK;\n    case DW_AT_INTEL_other_endian:\n        *s_out = \"DW_AT_INTEL_other_endian\";\n        return DW_DLV_OK;\n    case DW_AT_sf_names:\n        *s_out = \"DW_AT_sf_names\";\n        return DW_DLV_OK;\n    case DW_AT_src_info:\n        *s_out = \"DW_AT_src_info\";\n        return DW_DLV_OK;\n    case DW_AT_mac_info:\n        *s_out = \"DW_AT_mac_info\";\n        return DW_DLV_OK;\n    case DW_AT_src_coords:\n        *s_out = \"DW_AT_src_coords\";\n        return DW_DLV_OK;\n    case DW_AT_body_begin:\n        *s_out = \"DW_AT_body_begin\";\n        return DW_DLV_OK;\n    case DW_AT_body_end:\n        *s_out = \"DW_AT_body_end\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_vector:\n        *s_out = \"DW_AT_GNU_vector\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded_by:\n        *s_out = \"DW_AT_GNU_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded_by:\n        *s_out = \"DW_AT_GNU_pt_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded:\n        *s_out = \"DW_AT_GNU_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded:\n        *s_out = \"DW_AT_GNU_pt_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locks_excluded:\n        *s_out = \"DW_AT_GNU_locks_excluded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_exclusive_locks_required:\n        *s_out = \"DW_AT_GNU_exclusive_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_shared_locks_required:\n        *s_out = \"DW_AT_GNU_shared_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_odr_signature:\n        *s_out = \"DW_AT_GNU_odr_signature\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_template_name:\n        *s_out = \"DW_AT_GNU_template_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_value:\n        *s_out = \"DW_AT_GNU_call_site_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_data_value:\n        *s_out = \"DW_AT_GNU_call_site_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target:\n        *s_out = \"DW_AT_GNU_call_site_target\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target_clobbered:\n        *s_out = \"DW_AT_GNU_call_site_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_tail_call:\n        *s_out = \"DW_AT_GNU_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_tail_call_sites:\n        *s_out = \"DW_AT_GNU_all_tail_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_call_sites:\n        *s_out = \"DW_AT_GNU_all_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_source_call_sites:\n        *s_out = \"DW_AT_GNU_all_source_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_macros:\n        *s_out = \"DW_AT_GNU_macros\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_deleted:\n        *s_out = \"DW_AT_GNU_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_name:\n        *s_out = \"DW_AT_GNU_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_id:\n        *s_out = \"DW_AT_GNU_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_ranges_base:\n        *s_out = \"DW_AT_GNU_ranges_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_addr_base:\n        *s_out = \"DW_AT_GNU_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubnames:\n        *s_out = \"DW_AT_GNU_pubnames\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubtypes:\n        *s_out = \"DW_AT_GNU_pubtypes\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_discriminator:\n        *s_out = \"DW_AT_GNU_discriminator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locviews:\n        *s_out = \"DW_AT_GNU_locviews\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_entry_view:\n        *s_out = \"DW_AT_GNU_entry_view\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_template:\n        *s_out = \"DW_AT_SUN_template\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2201. DW_AT_VMS_rtnbeg_pd_address */\n    case DW_AT_SUN_alignment:\n        *s_out = \"DW_AT_SUN_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable:\n        *s_out = \"DW_AT_SUN_vtable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_count_guarantee:\n        *s_out = \"DW_AT_SUN_count_guarantee\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_command_line:\n        *s_out = \"DW_AT_SUN_command_line\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vbase:\n        *s_out = \"DW_AT_SUN_vbase\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_compile_options:\n        *s_out = \"DW_AT_SUN_compile_options\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_language:\n        *s_out = \"DW_AT_SUN_language\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_browser_file:\n        *s_out = \"DW_AT_SUN_browser_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_abi:\n        *s_out = \"DW_AT_SUN_vtable_abi\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offsets:\n        *s_out = \"DW_AT_SUN_func_offsets\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_cf_kind:\n        *s_out = \"DW_AT_SUN_cf_kind\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_index:\n        *s_out = \"DW_AT_SUN_vtable_index\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_tpriv_addr:\n        *s_out = \"DW_AT_SUN_omp_tpriv_addr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_child_func:\n        *s_out = \"DW_AT_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offset:\n        *s_out = \"DW_AT_SUN_func_offset\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_type_ref:\n        *s_out = \"DW_AT_SUN_memop_type_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_profile_id:\n        *s_out = \"DW_AT_SUN_profile_id\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_signature:\n        *s_out = \"DW_AT_SUN_memop_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_dir:\n        *s_out = \"DW_AT_SUN_obj_dir\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_file:\n        *s_out = \"DW_AT_SUN_obj_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_original_name:\n        *s_out = \"DW_AT_SUN_original_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_hwcprof_signature:\n        *s_out = \"DW_AT_SUN_hwcprof_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_amd64_parmdump:\n        *s_out = \"DW_AT_SUN_amd64_parmdump\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_part_link_name:\n        *s_out = \"DW_AT_SUN_part_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_link_name:\n        *s_out = \"DW_AT_SUN_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_with_const:\n        *s_out = \"DW_AT_SUN_pass_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_with_const:\n        *s_out = \"DW_AT_SUN_return_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_name:\n        *s_out = \"DW_AT_SUN_import_by_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_pointer:\n        *s_out = \"DW_AT_SUN_f90_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_by_ref:\n        *s_out = \"DW_AT_SUN_pass_by_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_allocatable:\n        *s_out = \"DW_AT_SUN_f90_allocatable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_assumed_shape_array:\n        *s_out = \"DW_AT_SUN_f90_assumed_shape_array\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_c_vla:\n        *s_out = \"DW_AT_SUN_c_vla\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_value_ptr:\n        *s_out = \"DW_AT_SUN_return_value_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_start:\n        *s_out = \"DW_AT_SUN_dtor_start\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_length:\n        *s_out = \"DW_AT_SUN_dtor_length\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_initial:\n        *s_out = \"DW_AT_SUN_dtor_state_initial\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_final:\n        *s_out = \"DW_AT_SUN_dtor_state_final\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_deltas:\n        *s_out = \"DW_AT_SUN_dtor_state_deltas\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_lname:\n        *s_out = \"DW_AT_SUN_import_by_lname\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_use_only:\n        *s_out = \"DW_AT_SUN_f90_use_only\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_namelist_spec:\n        *s_out = \"DW_AT_SUN_namelist_spec\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_is_omp_child_func:\n        *s_out = \"DW_AT_SUN_is_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_main_alias:\n        *s_out = \"DW_AT_SUN_fortran_main_alias\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_based:\n        *s_out = \"DW_AT_SUN_fortran_based\";\n        return DW_DLV_OK;\n    case DW_AT_ALTIUM_loclist:\n        *s_out = \"DW_AT_ALTIUM_loclist\";\n        return DW_DLV_OK;\n    case DW_AT_use_GNAT_descriptive_type:\n        *s_out = \"DW_AT_use_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    case DW_AT_GNAT_descriptive_type:\n        *s_out = \"DW_AT_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2302. DW_AT_GNAT_descriptive_type */\n    case DW_AT_GNU_numerator:\n        *s_out = \"DW_AT_GNU_numerator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_denominator:\n        *s_out = \"DW_AT_GNU_denominator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_bias:\n        *s_out = \"DW_AT_GNU_bias\";\n        return DW_DLV_OK;\n    case DW_AT_go_kind:\n        *s_out = \"DW_AT_go_kind\";\n        return DW_DLV_OK;\n    case DW_AT_go_key:\n        *s_out = \"DW_AT_go_key\";\n        return DW_DLV_OK;\n    case DW_AT_go_elem:\n        *s_out = \"DW_AT_go_elem\";\n        return DW_DLV_OK;\n    case DW_AT_go_embedded_field:\n        *s_out = \"DW_AT_go_embedded_field\";\n        return DW_DLV_OK;\n    case DW_AT_go_runtime_type:\n        *s_out = \"DW_AT_go_runtime_type\";\n        return DW_DLV_OK;\n    case DW_AT_upc_threads_scaled:\n        *s_out = \"DW_AT_upc_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lbase:\n        *s_out = \"DW_AT_PGI_lbase\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_soffset:\n        *s_out = \"DW_AT_PGI_soffset\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lstride:\n        *s_out = \"DW_AT_PGI_lstride\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_optimized:\n        *s_out = \"DW_AT_APPLE_optimized\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_flags:\n        *s_out = \"DW_AT_APPLE_flags\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_isa:\n        *s_out = \"DW_AT_APPLE_isa\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_block:\n        *s_out = \"DW_AT_APPLE_block\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe4. DW_AT_APPLE_closure */\n    case DW_AT_APPLE_major_runtime_vers:\n        *s_out = \"DW_AT_APPLE_major_runtime_vers\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe5. DW_AT_APPLE_major_runtime_vers */\n    case DW_AT_APPLE_runtime_class:\n        *s_out = \"DW_AT_APPLE_runtime_class\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe6. DW_AT_APPLE_runtime_class */\n    case DW_AT_APPLE_omit_frame_ptr:\n        *s_out = \"DW_AT_APPLE_omit_frame_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_hi_user:\n        *s_out = \"DW_AT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_OP_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_OP_addr:\n        *s_out = \"DW_OP_addr\";\n        return DW_DLV_OK;\n    case DW_OP_deref:\n        *s_out = \"DW_OP_deref\";\n        return DW_DLV_OK;\n    case DW_OP_const1u:\n        *s_out = \"DW_OP_const1u\";\n        return DW_DLV_OK;\n    case DW_OP_const1s:\n        *s_out = \"DW_OP_const1s\";\n        return DW_DLV_OK;\n    case DW_OP_const2u:\n        *s_out = \"DW_OP_const2u\";\n        return DW_DLV_OK;\n    case DW_OP_const2s:\n        *s_out = \"DW_OP_const2s\";\n        return DW_DLV_OK;\n    case DW_OP_const4u:\n        *s_out = \"DW_OP_const4u\";\n        return DW_DLV_OK;\n    case DW_OP_const4s:\n        *s_out = \"DW_OP_const4s\";\n        return DW_DLV_OK;\n    case DW_OP_const8u:\n        *s_out = \"DW_OP_const8u\";\n        return DW_DLV_OK;\n    case DW_OP_const8s:\n        *s_out = \"DW_OP_const8s\";\n        return DW_DLV_OK;\n    case DW_OP_constu:\n        *s_out = \"DW_OP_constu\";\n        return DW_DLV_OK;\n    case DW_OP_consts:\n        *s_out = \"DW_OP_consts\";\n        return DW_DLV_OK;\n    case DW_OP_dup:\n        *s_out = \"DW_OP_dup\";\n        return DW_DLV_OK;\n    case DW_OP_drop:\n        *s_out = \"DW_OP_drop\";\n        return DW_DLV_OK;\n    case DW_OP_over:\n        *s_out = \"DW_OP_over\";\n        return DW_DLV_OK;\n    case DW_OP_pick:\n        *s_out = \"DW_OP_pick\";\n        return DW_DLV_OK;\n    case DW_OP_swap:\n        *s_out = \"DW_OP_swap\";\n        return DW_DLV_OK;\n    case DW_OP_rot:\n        *s_out = \"DW_OP_rot\";\n        return DW_DLV_OK;\n    case DW_OP_xderef:\n        *s_out = \"DW_OP_xderef\";\n        return DW_DLV_OK;\n    case DW_OP_abs:\n        *s_out = \"DW_OP_abs\";\n        return DW_DLV_OK;\n    case DW_OP_and:\n        *s_out = \"DW_OP_and\";\n        return DW_DLV_OK;\n    case DW_OP_div:\n        *s_out = \"DW_OP_div\";\n        return DW_DLV_OK;\n    case DW_OP_minus:\n        *s_out = \"DW_OP_minus\";\n        return DW_DLV_OK;\n    case DW_OP_mod:\n        *s_out = \"DW_OP_mod\";\n        return DW_DLV_OK;\n    case DW_OP_mul:\n        *s_out = \"DW_OP_mul\";\n        return DW_DLV_OK;\n    case DW_OP_neg:\n        *s_out = \"DW_OP_neg\";\n        return DW_DLV_OK;\n    case DW_OP_not:\n        *s_out = \"DW_OP_not\";\n        return DW_DLV_OK;\n    case DW_OP_or:\n        *s_out = \"DW_OP_or\";\n        return DW_DLV_OK;\n    case DW_OP_plus:\n        *s_out = \"DW_OP_plus\";\n        return DW_DLV_OK;\n    case DW_OP_plus_uconst:\n        *s_out = \"DW_OP_plus_uconst\";\n        return DW_DLV_OK;\n    case DW_OP_shl:\n        *s_out = \"DW_OP_shl\";\n        return DW_DLV_OK;\n    case DW_OP_shr:\n        *s_out = \"DW_OP_shr\";\n        return DW_DLV_OK;\n    case DW_OP_shra:\n        *s_out = \"DW_OP_shra\";\n        return DW_DLV_OK;\n    case DW_OP_xor:\n        *s_out = \"DW_OP_xor\";\n        return DW_DLV_OK;\n    case DW_OP_bra:\n        *s_out = \"DW_OP_bra\";\n        return DW_DLV_OK;\n    case DW_OP_eq:\n        *s_out = \"DW_OP_eq\";\n        return DW_DLV_OK;\n    case DW_OP_ge:\n        *s_out = \"DW_OP_ge\";\n        return DW_DLV_OK;\n    case DW_OP_gt:\n        *s_out = \"DW_OP_gt\";\n        return DW_DLV_OK;\n    case DW_OP_le:\n        *s_out = \"DW_OP_le\";\n        return DW_DLV_OK;\n    case DW_OP_lt:\n        *s_out = \"DW_OP_lt\";\n        return DW_DLV_OK;\n    case DW_OP_ne:\n        *s_out = \"DW_OP_ne\";\n        return DW_DLV_OK;\n    case DW_OP_skip:\n        *s_out = \"DW_OP_skip\";\n        return DW_DLV_OK;\n    case DW_OP_lit0:\n        *s_out = \"DW_OP_lit0\";\n        return DW_DLV_OK;\n    case DW_OP_lit1:\n        *s_out = \"DW_OP_lit1\";\n        return DW_DLV_OK;\n    case DW_OP_lit2:\n        *s_out = \"DW_OP_lit2\";\n        return DW_DLV_OK;\n    case DW_OP_lit3:\n        *s_out = \"DW_OP_lit3\";\n        return DW_DLV_OK;\n    case DW_OP_lit4:\n        *s_out = \"DW_OP_lit4\";\n        return DW_DLV_OK;\n    case DW_OP_lit5:\n        *s_out = \"DW_OP_lit5\";\n        return DW_DLV_OK;\n    case DW_OP_lit6:\n        *s_out = \"DW_OP_lit6\";\n        return DW_DLV_OK;\n    case DW_OP_lit7:\n        *s_out = \"DW_OP_lit7\";\n        return DW_DLV_OK;\n    case DW_OP_lit8:\n        *s_out = \"DW_OP_lit8\";\n        return DW_DLV_OK;\n    case DW_OP_lit9:\n        *s_out = \"DW_OP_lit9\";\n        return DW_DLV_OK;\n    case DW_OP_lit10:\n        *s_out = \"DW_OP_lit10\";\n        return DW_DLV_OK;\n    case DW_OP_lit11:\n        *s_out = \"DW_OP_lit11\";\n        return DW_DLV_OK;\n    case DW_OP_lit12:\n        *s_out = \"DW_OP_lit12\";\n        return DW_DLV_OK;\n    case DW_OP_lit13:\n        *s_out = \"DW_OP_lit13\";\n        return DW_DLV_OK;\n    case DW_OP_lit14:\n        *s_out = \"DW_OP_lit14\";\n        return DW_DLV_OK;\n    case DW_OP_lit15:\n        *s_out = \"DW_OP_lit15\";\n        return DW_DLV_OK;\n    case DW_OP_lit16:\n        *s_out = \"DW_OP_lit16\";\n        return DW_DLV_OK;\n    case DW_OP_lit17:\n        *s_out = \"DW_OP_lit17\";\n        return DW_DLV_OK;\n    case DW_OP_lit18:\n        *s_out = \"DW_OP_lit18\";\n        return DW_DLV_OK;\n    case DW_OP_lit19:\n        *s_out = \"DW_OP_lit19\";\n        return DW_DLV_OK;\n    case DW_OP_lit20:\n        *s_out = \"DW_OP_lit20\";\n        return DW_DLV_OK;\n    case DW_OP_lit21:\n        *s_out = \"DW_OP_lit21\";\n        return DW_DLV_OK;\n    case DW_OP_lit22:\n        *s_out = \"DW_OP_lit22\";\n        return DW_DLV_OK;\n    case DW_OP_lit23:\n        *s_out = \"DW_OP_lit23\";\n        return DW_DLV_OK;\n    case DW_OP_lit24:\n        *s_out = \"DW_OP_lit24\";\n        return DW_DLV_OK;\n    case DW_OP_lit25:\n        *s_out = \"DW_OP_lit25\";\n        return DW_DLV_OK;\n    case DW_OP_lit26:\n        *s_out = \"DW_OP_lit26\";\n        return DW_DLV_OK;\n    case DW_OP_lit27:\n        *s_out = \"DW_OP_lit27\";\n        return DW_DLV_OK;\n    case DW_OP_lit28:\n        *s_out = \"DW_OP_lit28\";\n        return DW_DLV_OK;\n    case DW_OP_lit29:\n        *s_out = \"DW_OP_lit29\";\n        return DW_DLV_OK;\n    case DW_OP_lit30:\n        *s_out = \"DW_OP_lit30\";\n        return DW_DLV_OK;\n    case DW_OP_lit31:\n        *s_out = \"DW_OP_lit31\";\n        return DW_DLV_OK;\n    case DW_OP_reg0:\n        *s_out = \"DW_OP_reg0\";\n        return DW_DLV_OK;\n    case DW_OP_reg1:\n        *s_out = \"DW_OP_reg1\";\n        return DW_DLV_OK;\n    case DW_OP_reg2:\n        *s_out = \"DW_OP_reg2\";\n        return DW_DLV_OK;\n    case DW_OP_reg3:\n        *s_out = \"DW_OP_reg3\";\n        return DW_DLV_OK;\n    case DW_OP_reg4:\n        *s_out = \"DW_OP_reg4\";\n        return DW_DLV_OK;\n    case DW_OP_reg5:\n        *s_out = \"DW_OP_reg5\";\n        return DW_DLV_OK;\n    case DW_OP_reg6:\n        *s_out = \"DW_OP_reg6\";\n        return DW_DLV_OK;\n    case DW_OP_reg7:\n        *s_out = \"DW_OP_reg7\";\n        return DW_DLV_OK;\n    case DW_OP_reg8:\n        *s_out = \"DW_OP_reg8\";\n        return DW_DLV_OK;\n    case DW_OP_reg9:\n        *s_out = \"DW_OP_reg9\";\n        return DW_DLV_OK;\n    case DW_OP_reg10:\n        *s_out = \"DW_OP_reg10\";\n        return DW_DLV_OK;\n    case DW_OP_reg11:\n        *s_out = \"DW_OP_reg11\";\n        return DW_DLV_OK;\n    case DW_OP_reg12:\n        *s_out = \"DW_OP_reg12\";\n        return DW_DLV_OK;\n    case DW_OP_reg13:\n        *s_out = \"DW_OP_reg13\";\n        return DW_DLV_OK;\n    case DW_OP_reg14:\n        *s_out = \"DW_OP_reg14\";\n        return DW_DLV_OK;\n    case DW_OP_reg15:\n        *s_out = \"DW_OP_reg15\";\n        return DW_DLV_OK;\n    case DW_OP_reg16:\n        *s_out = \"DW_OP_reg16\";\n        return DW_DLV_OK;\n    case DW_OP_reg17:\n        *s_out = \"DW_OP_reg17\";\n        return DW_DLV_OK;\n    case DW_OP_reg18:\n        *s_out = \"DW_OP_reg18\";\n        return DW_DLV_OK;\n    case DW_OP_reg19:\n        *s_out = \"DW_OP_reg19\";\n        return DW_DLV_OK;\n    case DW_OP_reg20:\n        *s_out = \"DW_OP_reg20\";\n        return DW_DLV_OK;\n    case DW_OP_reg21:\n        *s_out = \"DW_OP_reg21\";\n        return DW_DLV_OK;\n    case DW_OP_reg22:\n        *s_out = \"DW_OP_reg22\";\n        return DW_DLV_OK;\n    case DW_OP_reg23:\n        *s_out = \"DW_OP_reg23\";\n        return DW_DLV_OK;\n    case DW_OP_reg24:\n        *s_out = \"DW_OP_reg24\";\n        return DW_DLV_OK;\n    case DW_OP_reg25:\n        *s_out = \"DW_OP_reg25\";\n        return DW_DLV_OK;\n    case DW_OP_reg26:\n        *s_out = \"DW_OP_reg26\";\n        return DW_DLV_OK;\n    case DW_OP_reg27:\n        *s_out = \"DW_OP_reg27\";\n        return DW_DLV_OK;\n    case DW_OP_reg28:\n        *s_out = \"DW_OP_reg28\";\n        return DW_DLV_OK;\n    case DW_OP_reg29:\n        *s_out = \"DW_OP_reg29\";\n        return DW_DLV_OK;\n    case DW_OP_reg30:\n        *s_out = \"DW_OP_reg30\";\n        return DW_DLV_OK;\n    case DW_OP_reg31:\n        *s_out = \"DW_OP_reg31\";\n        return DW_DLV_OK;\n    case DW_OP_breg0:\n        *s_out = \"DW_OP_breg0\";\n        return DW_DLV_OK;\n    case DW_OP_breg1:\n        *s_out = \"DW_OP_breg1\";\n        return DW_DLV_OK;\n    case DW_OP_breg2:\n        *s_out = \"DW_OP_breg2\";\n        return DW_DLV_OK;\n    case DW_OP_breg3:\n        *s_out = \"DW_OP_breg3\";\n        return DW_DLV_OK;\n    case DW_OP_breg4:\n        *s_out = \"DW_OP_breg4\";\n        return DW_DLV_OK;\n    case DW_OP_breg5:\n        *s_out = \"DW_OP_breg5\";\n        return DW_DLV_OK;\n    case DW_OP_breg6:\n        *s_out = \"DW_OP_breg6\";\n        return DW_DLV_OK;\n    case DW_OP_breg7:\n        *s_out = \"DW_OP_breg7\";\n        return DW_DLV_OK;\n    case DW_OP_breg8:\n        *s_out = \"DW_OP_breg8\";\n        return DW_DLV_OK;\n    case DW_OP_breg9:\n        *s_out = \"DW_OP_breg9\";\n        return DW_DLV_OK;\n    case DW_OP_breg10:\n        *s_out = \"DW_OP_breg10\";\n        return DW_DLV_OK;\n    case DW_OP_breg11:\n        *s_out = \"DW_OP_breg11\";\n        return DW_DLV_OK;\n    case DW_OP_breg12:\n        *s_out = \"DW_OP_breg12\";\n        return DW_DLV_OK;\n    case DW_OP_breg13:\n        *s_out = \"DW_OP_breg13\";\n        return DW_DLV_OK;\n    case DW_OP_breg14:\n        *s_out = \"DW_OP_breg14\";\n        return DW_DLV_OK;\n    case DW_OP_breg15:\n        *s_out = \"DW_OP_breg15\";\n        return DW_DLV_OK;\n    case DW_OP_breg16:\n        *s_out = \"DW_OP_breg16\";\n        return DW_DLV_OK;\n    case DW_OP_breg17:\n        *s_out = \"DW_OP_breg17\";\n        return DW_DLV_OK;\n    case DW_OP_breg18:\n        *s_out = \"DW_OP_breg18\";\n        return DW_DLV_OK;\n    case DW_OP_breg19:\n        *s_out = \"DW_OP_breg19\";\n        return DW_DLV_OK;\n    case DW_OP_breg20:\n        *s_out = \"DW_OP_breg20\";\n        return DW_DLV_OK;\n    case DW_OP_breg21:\n        *s_out = \"DW_OP_breg21\";\n        return DW_DLV_OK;\n    case DW_OP_breg22:\n        *s_out = \"DW_OP_breg22\";\n        return DW_DLV_OK;\n    case DW_OP_breg23:\n        *s_out = \"DW_OP_breg23\";\n        return DW_DLV_OK;\n    case DW_OP_breg24:\n        *s_out = \"DW_OP_breg24\";\n        return DW_DLV_OK;\n    case DW_OP_breg25:\n        *s_out = \"DW_OP_breg25\";\n        return DW_DLV_OK;\n    case DW_OP_breg26:\n        *s_out = \"DW_OP_breg26\";\n        return DW_DLV_OK;\n    case DW_OP_breg27:\n        *s_out = \"DW_OP_breg27\";\n        return DW_DLV_OK;\n    case DW_OP_breg28:\n        *s_out = \"DW_OP_breg28\";\n        return DW_DLV_OK;\n    case DW_OP_breg29:\n        *s_out = \"DW_OP_breg29\";\n        return DW_DLV_OK;\n    case DW_OP_breg30:\n        *s_out = \"DW_OP_breg30\";\n        return DW_DLV_OK;\n    case DW_OP_breg31:\n        *s_out = \"DW_OP_breg31\";\n        return DW_DLV_OK;\n    case DW_OP_regx:\n        *s_out = \"DW_OP_regx\";\n        return DW_DLV_OK;\n    case DW_OP_fbreg:\n        *s_out = \"DW_OP_fbreg\";\n        return DW_DLV_OK;\n    case DW_OP_bregx:\n        *s_out = \"DW_OP_bregx\";\n        return DW_DLV_OK;\n    case DW_OP_piece:\n        *s_out = \"DW_OP_piece\";\n        return DW_DLV_OK;\n    case DW_OP_deref_size:\n        *s_out = \"DW_OP_deref_size\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_size:\n        *s_out = \"DW_OP_xderef_size\";\n        return DW_DLV_OK;\n    case DW_OP_nop:\n        *s_out = \"DW_OP_nop\";\n        return DW_DLV_OK;\n    case DW_OP_push_object_address:\n        *s_out = \"DW_OP_push_object_address\";\n        return DW_DLV_OK;\n    case DW_OP_call2:\n        *s_out = \"DW_OP_call2\";\n        return DW_DLV_OK;\n    case DW_OP_call4:\n        *s_out = \"DW_OP_call4\";\n        return DW_DLV_OK;\n    case DW_OP_call_ref:\n        *s_out = \"DW_OP_call_ref\";\n        return DW_DLV_OK;\n    case DW_OP_form_tls_address:\n        *s_out = \"DW_OP_form_tls_address\";\n        return DW_DLV_OK;\n    case DW_OP_call_frame_cfa:\n        *s_out = \"DW_OP_call_frame_cfa\";\n        return DW_DLV_OK;\n    case DW_OP_bit_piece:\n        *s_out = \"DW_OP_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_value:\n        *s_out = \"DW_OP_implicit_value\";\n        return DW_DLV_OK;\n    case DW_OP_stack_value:\n        *s_out = \"DW_OP_stack_value\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_pointer:\n        *s_out = \"DW_OP_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_addrx:\n        *s_out = \"DW_OP_addrx\";\n        return DW_DLV_OK;\n    case DW_OP_constx:\n        *s_out = \"DW_OP_constx\";\n        return DW_DLV_OK;\n    case DW_OP_entry_value:\n        *s_out = \"DW_OP_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_const_type:\n        *s_out = \"DW_OP_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_regval_type:\n        *s_out = \"DW_OP_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_deref_type:\n        *s_out = \"DW_OP_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_type:\n        *s_out = \"DW_OP_xderef_type\";\n        return DW_DLV_OK;\n    case DW_OP_convert:\n        *s_out = \"DW_OP_convert\";\n        return DW_DLV_OK;\n    case DW_OP_reinterpret:\n        *s_out = \"DW_OP_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_push_tls_address:\n        *s_out = \"DW_OP_GNU_push_tls_address\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xe0. DW_OP_lo_user */\n    /* Skipping alternate spelling of value 0xe0. DW_OP_HP_unknown */\n    case DW_OP_HP_is_value:\n        *s_out = \"DW_OP_HP_is_value\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst4:\n        *s_out = \"DW_OP_HP_fltconst4\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst8:\n        *s_out = \"DW_OP_HP_fltconst8\";\n        return DW_DLV_OK;\n    case DW_OP_HP_mod_range:\n        *s_out = \"DW_OP_HP_mod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_unmod_range:\n        *s_out = \"DW_OP_HP_unmod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_tls:\n        *s_out = \"DW_OP_HP_tls\";\n        return DW_DLV_OK;\n    case DW_OP_INTEL_bit_piece:\n        *s_out = \"DW_OP_INTEL_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_uninit:\n        *s_out = \"DW_OP_GNU_uninit\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xf0. DW_OP_APPLE_uninit */\n    case DW_OP_GNU_encoded_addr:\n        *s_out = \"DW_OP_GNU_encoded_addr\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_implicit_pointer:\n        *s_out = \"DW_OP_GNU_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_entry_value:\n        *s_out = \"DW_OP_GNU_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_type:\n        *s_out = \"DW_OP_GNU_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_regval_type:\n        *s_out = \"DW_OP_GNU_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_deref_type:\n        *s_out = \"DW_OP_GNU_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_convert:\n        *s_out = \"DW_OP_GNU_convert\";\n        return DW_DLV_OK;\n    case DW_OP_PGI_omp_thread_num:\n        *s_out = \"DW_OP_PGI_omp_thread_num\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_reinterpret:\n        *s_out = \"DW_OP_GNU_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_parameter_ref:\n        *s_out = \"DW_OP_GNU_parameter_ref\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_addr_index:\n        *s_out = \"DW_OP_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_index:\n        *s_out = \"DW_OP_GNU_const_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_variable_value:\n        *s_out = \"DW_OP_GNU_variable_value\";\n        return DW_DLV_OK;\n    case DW_OP_hi_user:\n        *s_out = \"DW_OP_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATE_address:\n        *s_out = \"DW_ATE_address\";\n        return DW_DLV_OK;\n    case DW_ATE_boolean:\n        *s_out = \"DW_ATE_boolean\";\n        return DW_DLV_OK;\n    case DW_ATE_complex_float:\n        *s_out = \"DW_ATE_complex_float\";\n        return DW_DLV_OK;\n    case DW_ATE_float:\n        *s_out = \"DW_ATE_float\";\n        return DW_DLV_OK;\n    case DW_ATE_signed:\n        *s_out = \"DW_ATE_signed\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_char:\n        *s_out = \"DW_ATE_signed_char\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned:\n        *s_out = \"DW_ATE_unsigned\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_char:\n        *s_out = \"DW_ATE_unsigned_char\";\n        return DW_DLV_OK;\n    case DW_ATE_imaginary_float:\n        *s_out = \"DW_ATE_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_packed_decimal:\n        *s_out = \"DW_ATE_packed_decimal\";\n        return DW_DLV_OK;\n    case DW_ATE_numeric_string:\n        *s_out = \"DW_ATE_numeric_string\";\n        return DW_DLV_OK;\n    case DW_ATE_edited:\n        *s_out = \"DW_ATE_edited\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_fixed:\n        *s_out = \"DW_ATE_signed_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_fixed:\n        *s_out = \"DW_ATE_unsigned_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_decimal_float:\n        *s_out = \"DW_ATE_decimal_float\";\n        return DW_DLV_OK;\n    case DW_ATE_UTF:\n        *s_out = \"DW_ATE_UTF\";\n        return DW_DLV_OK;\n    case DW_ATE_UCS:\n        *s_out = \"DW_ATE_UCS\";\n        return DW_DLV_OK;\n    case DW_ATE_ASCII:\n        *s_out = \"DW_ATE_ASCII\";\n        return DW_DLV_OK;\n    case DW_ATE_ALTIUM_fract:\n        *s_out = \"DW_ATE_ALTIUM_fract\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_ATE_lo_user */\n    /* Skipping alternate spelling of value 0x80. DW_ATE_HP_float80 */\n    case DW_ATE_ALTIUM_accum:\n        *s_out = \"DW_ATE_ALTIUM_accum\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x81. DW_ATE_HP_complex_float80 */\n    case DW_ATE_HP_float128:\n        *s_out = \"DW_ATE_HP_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_complex_float128:\n        *s_out = \"DW_ATE_HP_complex_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_floathpintel:\n        *s_out = \"DW_ATE_HP_floathpintel\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float80:\n        *s_out = \"DW_ATE_HP_imaginary_float80\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float128:\n        *s_out = \"DW_ATE_HP_imaginary_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_interval_float:\n        *s_out = \"DW_ATE_SUN_interval_float\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_imaginary_float:\n        *s_out = \"DW_ATE_SUN_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_hi_user:\n        *s_out = \"DW_ATE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DEFAULTED_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DEFAULTED_no:\n        *s_out = \"DW_DEFAULTED_no\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_in_class:\n        *s_out = \"DW_DEFAULTED_in_class\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_out_of_class:\n        *s_out = \"DW_DEFAULTED_out_of_class\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_IDX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_IDX_compile_unit:\n        *s_out = \"DW_IDX_compile_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_type_unit:\n        *s_out = \"DW_IDX_type_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_die_offset:\n        *s_out = \"DW_IDX_die_offset\";\n        return DW_DLV_OK;\n    case DW_IDX_parent:\n        *s_out = \"DW_IDX_parent\";\n        return DW_DLV_OK;\n    case DW_IDX_type_hash:\n        *s_out = \"DW_IDX_type_hash\";\n        return DW_DLV_OK;\n    case DW_IDX_hi_user:\n        *s_out = \"DW_IDX_hi_user\";\n        return DW_DLV_OK;\n    case DW_IDX_lo_user:\n        *s_out = \"DW_IDX_lo_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLEX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLEX_end_of_list_entry:\n        *s_out = \"DW_LLEX_end_of_list_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_base_address_selection_entry:\n        *s_out = \"DW_LLEX_base_address_selection_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_end_entry:\n        *s_out = \"DW_LLEX_start_end_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_length_entry:\n        *s_out = \"DW_LLEX_start_length_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_offset_pair_entry:\n        *s_out = \"DW_LLEX_offset_pair_entry\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLE_end_of_list:\n        *s_out = \"DW_LLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_LLE_base_addressx:\n        *s_out = \"DW_LLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_endx:\n        *s_out = \"DW_LLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_length:\n        *s_out = \"DW_LLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_LLE_offset_pair:\n        *s_out = \"DW_LLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_LLE_default_location:\n        *s_out = \"DW_LLE_default_location\";\n        return DW_DLV_OK;\n    case DW_LLE_base_address:\n        *s_out = \"DW_LLE_base_address\";\n        return DW_DLV_OK;\n    case DW_LLE_start_end:\n        *s_out = \"DW_LLE_start_end\";\n        return DW_DLV_OK;\n    case DW_LLE_start_length:\n        *s_out = \"DW_LLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_RLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_RLE_end_of_list:\n        *s_out = \"DW_RLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_RLE_base_addressx:\n        *s_out = \"DW_RLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_endx:\n        *s_out = \"DW_RLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_length:\n        *s_out = \"DW_RLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_RLE_offset_pair:\n        *s_out = \"DW_RLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_RLE_base_address:\n        *s_out = \"DW_RLE_base_address\";\n        return DW_DLV_OK;\n    case DW_RLE_start_end:\n        *s_out = \"DW_RLE_start_end\";\n        return DW_DLV_OK;\n    case DW_RLE_start_length:\n        *s_out = \"DW_RLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIVIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIVIS_global:\n        *s_out = \"DW_GNUIVIS_global\";\n        return DW_DLV_OK;\n    case DW_GNUIVIS_static:\n        *s_out = \"DW_GNUIVIS_static\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIKIND_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIKIND_none:\n        *s_out = \"DW_GNUIKIND_none\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_type:\n        *s_out = \"DW_GNUIKIND_type\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_variable:\n        *s_out = \"DW_GNUIKIND_variable\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_function:\n        *s_out = \"DW_GNUIKIND_function\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_other:\n        *s_out = \"DW_GNUIKIND_other\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_UT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_UT_compile:\n        *s_out = \"DW_UT_compile\";\n        return DW_DLV_OK;\n    case DW_UT_type:\n        *s_out = \"DW_UT_type\";\n        return DW_DLV_OK;\n    case DW_UT_partial:\n        *s_out = \"DW_UT_partial\";\n        return DW_DLV_OK;\n    case DW_UT_skeleton:\n        *s_out = \"DW_UT_skeleton\";\n        return DW_DLV_OK;\n    case DW_UT_split_compile:\n        *s_out = \"DW_UT_split_compile\";\n        return DW_DLV_OK;\n    case DW_UT_split_type:\n        *s_out = \"DW_UT_split_type\";\n        return DW_DLV_OK;\n    case DW_UT_lo_user:\n        *s_out = \"DW_UT_lo_user\";\n        return DW_DLV_OK;\n    case DW_UT_hi_user:\n        *s_out = \"DW_UT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_SECT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_SECT_INFO:\n        *s_out = \"DW_SECT_INFO\";\n        return DW_DLV_OK;\n    case DW_SECT_TYPES:\n        *s_out = \"DW_SECT_TYPES\";\n        return DW_DLV_OK;\n    case DW_SECT_ABBREV:\n        *s_out = \"DW_SECT_ABBREV\";\n        return DW_DLV_OK;\n    case DW_SECT_LINE:\n        *s_out = \"DW_SECT_LINE\";\n        return DW_DLV_OK;\n    case DW_SECT_LOCLISTS:\n        *s_out = \"DW_SECT_LOCLISTS\";\n        return DW_DLV_OK;\n    case DW_SECT_STR_OFFSETS:\n        *s_out = \"DW_SECT_STR_OFFSETS\";\n        return DW_DLV_OK;\n    case DW_SECT_MACRO:\n        *s_out = \"DW_SECT_MACRO\";\n        return DW_DLV_OK;\n    case DW_SECT_RNGLISTS:\n        *s_out = \"DW_SECT_RNGLISTS\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DS_unsigned:\n        *s_out = \"DW_DS_unsigned\";\n        return DW_DLV_OK;\n    case DW_DS_leading_overpunch:\n        *s_out = \"DW_DS_leading_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_overpunch:\n        *s_out = \"DW_DS_trailing_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_leading_separate:\n        *s_out = \"DW_DS_leading_separate\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_separate:\n        *s_out = \"DW_DS_trailing_separate\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_END_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_END_default:\n        *s_out = \"DW_END_default\";\n        return DW_DLV_OK;\n    case DW_END_big:\n        *s_out = \"DW_END_big\";\n        return DW_DLV_OK;\n    case DW_END_little:\n        *s_out = \"DW_END_little\";\n        return DW_DLV_OK;\n    case DW_END_lo_user:\n        *s_out = \"DW_END_lo_user\";\n        return DW_DLV_OK;\n    case DW_END_hi_user:\n        *s_out = \"DW_END_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATCF_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATCF_lo_user:\n        *s_out = \"DW_ATCF_lo_user\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_bitfield:\n        *s_out = \"DW_ATCF_SUN_mop_bitfield\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_spill:\n        *s_out = \"DW_ATCF_SUN_mop_spill\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_scopy:\n        *s_out = \"DW_ATCF_SUN_mop_scopy\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_start:\n        *s_out = \"DW_ATCF_SUN_func_start\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_end_ctors:\n        *s_out = \"DW_ATCF_SUN_end_ctors\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_branch_target:\n        *s_out = \"DW_ATCF_SUN_branch_target\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_stack_probe:\n        *s_out = \"DW_ATCF_SUN_mop_stack_probe\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_epilog:\n        *s_out = \"DW_ATCF_SUN_func_epilog\";\n        return DW_DLV_OK;\n    case DW_ATCF_hi_user:\n        *s_out = \"DW_ATCF_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ACCESS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ACCESS_public:\n        *s_out = \"DW_ACCESS_public\";\n        return DW_DLV_OK;\n    case DW_ACCESS_protected:\n        *s_out = \"DW_ACCESS_protected\";\n        return DW_DLV_OK;\n    case DW_ACCESS_private:\n        *s_out = \"DW_ACCESS_private\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIS_local:\n        *s_out = \"DW_VIS_local\";\n        return DW_DLV_OK;\n    case DW_VIS_exported:\n        *s_out = \"DW_VIS_exported\";\n        return DW_DLV_OK;\n    case DW_VIS_qualified:\n        *s_out = \"DW_VIS_qualified\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIRTUALITY_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIRTUALITY_none:\n        *s_out = \"DW_VIRTUALITY_none\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_virtual:\n        *s_out = \"DW_VIRTUALITY_virtual\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_pure_virtual:\n        *s_out = \"DW_VIRTUALITY_pure_virtual\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LANG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LANG_C89:\n        *s_out = \"DW_LANG_C89\";\n        return DW_DLV_OK;\n    case DW_LANG_C:\n        *s_out = \"DW_LANG_C\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada83:\n        *s_out = \"DW_LANG_Ada83\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus:\n        *s_out = \"DW_LANG_C_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol74:\n        *s_out = \"DW_LANG_Cobol74\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol85:\n        *s_out = \"DW_LANG_Cobol85\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran77:\n        *s_out = \"DW_LANG_Fortran77\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran90:\n        *s_out = \"DW_LANG_Fortran90\";\n        return DW_DLV_OK;\n    case DW_LANG_Pascal83:\n        *s_out = \"DW_LANG_Pascal83\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula2:\n        *s_out = \"DW_LANG_Modula2\";\n        return DW_DLV_OK;\n    case DW_LANG_Java:\n        *s_out = \"DW_LANG_Java\";\n        return DW_DLV_OK;\n    case DW_LANG_C99:\n        *s_out = \"DW_LANG_C99\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada95:\n        *s_out = \"DW_LANG_Ada95\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran95:\n        *s_out = \"DW_LANG_Fortran95\";\n        return DW_DLV_OK;\n    case DW_LANG_PLI:\n        *s_out = \"DW_LANG_PLI\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC:\n        *s_out = \"DW_LANG_ObjC\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC_plus_plus:\n        *s_out = \"DW_LANG_ObjC_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_UPC:\n        *s_out = \"DW_LANG_UPC\";\n        return DW_DLV_OK;\n    case DW_LANG_D:\n        *s_out = \"DW_LANG_D\";\n        return DW_DLV_OK;\n    case DW_LANG_Python:\n        *s_out = \"DW_LANG_Python\";\n        return DW_DLV_OK;\n    case DW_LANG_OpenCL:\n        *s_out = \"DW_LANG_OpenCL\";\n        return DW_DLV_OK;\n    case DW_LANG_Go:\n        *s_out = \"DW_LANG_Go\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula3:\n        *s_out = \"DW_LANG_Modula3\";\n        return DW_DLV_OK;\n    case DW_LANG_Haskel:\n        *s_out = \"DW_LANG_Haskel\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_03:\n        *s_out = \"DW_LANG_C_plus_plus_03\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_11:\n        *s_out = \"DW_LANG_C_plus_plus_11\";\n        return DW_DLV_OK;\n    case DW_LANG_OCaml:\n        *s_out = \"DW_LANG_OCaml\";\n        return DW_DLV_OK;\n    case DW_LANG_Rust:\n        *s_out = \"DW_LANG_Rust\";\n        return DW_DLV_OK;\n    case DW_LANG_C11:\n        *s_out = \"DW_LANG_C11\";\n        return DW_DLV_OK;\n    case DW_LANG_Swift:\n        *s_out = \"DW_LANG_Swift\";\n        return DW_DLV_OK;\n    case DW_LANG_Julia:\n        *s_out = \"DW_LANG_Julia\";\n        return DW_DLV_OK;\n    case DW_LANG_Dylan:\n        *s_out = \"DW_LANG_Dylan\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_14:\n        *s_out = \"DW_LANG_C_plus_plus_14\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran03:\n        *s_out = \"DW_LANG_Fortran03\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran08:\n        *s_out = \"DW_LANG_Fortran08\";\n        return DW_DLV_OK;\n    case DW_LANG_RenderScript:\n        *s_out = \"DW_LANG_RenderScript\";\n        return DW_DLV_OK;\n    case DW_LANG_BLISS:\n        *s_out = \"DW_LANG_BLISS\";\n        return DW_DLV_OK;\n    case DW_LANG_lo_user:\n        *s_out = \"DW_LANG_lo_user\";\n        return DW_DLV_OK;\n    case DW_LANG_Mips_Assembler:\n        *s_out = \"DW_LANG_Mips_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_Upc:\n        *s_out = \"DW_LANG_Upc\";\n        return DW_DLV_OK;\n    case DW_LANG_SUN_Assembler:\n        *s_out = \"DW_LANG_SUN_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_ALTIUM_Assembler:\n        *s_out = \"DW_LANG_ALTIUM_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_hi_user:\n        *s_out = \"DW_LANG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ID_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ID_case_sensitive:\n        *s_out = \"DW_ID_case_sensitive\";\n        return DW_DLV_OK;\n    case DW_ID_up_case:\n        *s_out = \"DW_ID_up_case\";\n        return DW_DLV_OK;\n    case DW_ID_down_case:\n        *s_out = \"DW_ID_down_case\";\n        return DW_DLV_OK;\n    case DW_ID_case_insensitive:\n        *s_out = \"DW_ID_case_insensitive\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CC_normal:\n        *s_out = \"DW_CC_normal\";\n        return DW_DLV_OK;\n    case DW_CC_program:\n        *s_out = \"DW_CC_program\";\n        return DW_DLV_OK;\n    case DW_CC_nocall:\n        *s_out = \"DW_CC_nocall\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_reference:\n        *s_out = \"DW_CC_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_value:\n        *s_out = \"DW_CC_pass_by_value\";\n        return DW_DLV_OK;\n    case DW_CC_lo_user:\n        *s_out = \"DW_CC_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x40. DW_CC_GNU_renesas_sh */\n    case DW_CC_GNU_borland_fastcall_i386:\n        *s_out = \"DW_CC_GNU_borland_fastcall_i386\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_interrupt:\n        *s_out = \"DW_CC_ALTIUM_interrupt\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_system_stack:\n        *s_out = \"DW_CC_ALTIUM_near_system_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_user_stack:\n        *s_out = \"DW_CC_ALTIUM_near_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_huge_user_stack:\n        *s_out = \"DW_CC_ALTIUM_huge_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_hi_user:\n        *s_out = \"DW_CC_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_INL_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_INL_not_inlined:\n        *s_out = \"DW_INL_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_inlined:\n        *s_out = \"DW_INL_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_not_inlined:\n        *s_out = \"DW_INL_declared_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_inlined:\n        *s_out = \"DW_INL_declared_inlined\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ORD_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ORD_row_major:\n        *s_out = \"DW_ORD_row_major\";\n        return DW_DLV_OK;\n    case DW_ORD_col_major:\n        *s_out = \"DW_ORD_col_major\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DSC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DSC_label:\n        *s_out = \"DW_DSC_label\";\n        return DW_DLV_OK;\n    case DW_DSC_range:\n        *s_out = \"DW_DSC_range\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNCT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNCT_path:\n        *s_out = \"DW_LNCT_path\";\n        return DW_DLV_OK;\n    case DW_LNCT_directory_index:\n        *s_out = \"DW_LNCT_directory_index\";\n        return DW_DLV_OK;\n    case DW_LNCT_timestamp:\n        *s_out = \"DW_LNCT_timestamp\";\n        return DW_DLV_OK;\n    case DW_LNCT_size:\n        *s_out = \"DW_LNCT_size\";\n        return DW_DLV_OK;\n    case DW_LNCT_MD5:\n        *s_out = \"DW_LNCT_MD5\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_subprogram_name:\n        *s_out = \"DW_LNCT_GNU_subprogram_name\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_file:\n        *s_out = \"DW_LNCT_GNU_decl_file\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_line:\n        *s_out = \"DW_LNCT_GNU_decl_line\";\n        return DW_DLV_OK;\n    case DW_LNCT_lo_user:\n        *s_out = \"DW_LNCT_lo_user\";\n        return DW_DLV_OK;\n    case DW_LNCT_hi_user:\n        *s_out = \"DW_LNCT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNS_copy:\n        *s_out = \"DW_LNS_copy\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_pc:\n        *s_out = \"DW_LNS_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_line:\n        *s_out = \"DW_LNS_advance_line\";\n        return DW_DLV_OK;\n    case DW_LNS_set_file:\n        *s_out = \"DW_LNS_set_file\";\n        return DW_DLV_OK;\n    case DW_LNS_set_column:\n        *s_out = \"DW_LNS_set_column\";\n        return DW_DLV_OK;\n    case DW_LNS_negate_stmt:\n        *s_out = \"DW_LNS_negate_stmt\";\n        return DW_DLV_OK;\n    case DW_LNS_set_basic_block:\n        *s_out = \"DW_LNS_set_basic_block\";\n        return DW_DLV_OK;\n    case DW_LNS_const_add_pc:\n        *s_out = \"DW_LNS_const_add_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_fixed_advance_pc:\n        *s_out = \"DW_LNS_fixed_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_set_prologue_end:\n        *s_out = \"DW_LNS_set_prologue_end\";\n        return DW_DLV_OK;\n    case DW_LNS_set_epilogue_begin:\n        *s_out = \"DW_LNS_set_epilogue_begin\";\n        return DW_DLV_OK;\n    case DW_LNS_set_isa:\n        *s_out = \"DW_LNS_set_isa\";\n        return DW_DLV_OK;\n    case DW_LNS_set_address_from_logical:\n        *s_out = \"DW_LNS_set_address_from_logical\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xd. DW_LNS_set_subprogram */\n    case DW_LNS_inlined_call:\n        *s_out = \"DW_LNS_inlined_call\";\n        return DW_DLV_OK;\n    case DW_LNS_pop_context:\n        *s_out = \"DW_LNS_pop_context\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNE_end_sequence:\n        *s_out = \"DW_LNE_end_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_set_address:\n        *s_out = \"DW_LNE_set_address\";\n        return DW_DLV_OK;\n    case DW_LNE_define_file:\n        *s_out = \"DW_LNE_define_file\";\n        return DW_DLV_OK;\n    case DW_LNE_set_discriminator:\n        *s_out = \"DW_LNE_set_discriminator\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_is_UV_update:\n        *s_out = \"DW_LNE_HP_negate_is_UV_update\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_push_context:\n        *s_out = \"DW_LNE_HP_push_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_pop_context:\n        *s_out = \"DW_LNE_HP_pop_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_file_line_column:\n        *s_out = \"DW_LNE_HP_set_file_line_column\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_routine_name:\n        *s_out = \"DW_LNE_HP_set_routine_name\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_sequence:\n        *s_out = \"DW_LNE_HP_set_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_post_semantics:\n        *s_out = \"DW_LNE_HP_negate_post_semantics\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_function_exit:\n        *s_out = \"DW_LNE_HP_negate_function_exit\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_front_end_logical:\n        *s_out = \"DW_LNE_HP_negate_front_end_logical\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_define_proc:\n        *s_out = \"DW_LNE_HP_define_proc\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_source_file_correlation:\n        *s_out = \"DW_LNE_HP_source_file_correlation\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_LNE_lo_user */\n    case DW_LNE_hi_user:\n        *s_out = \"DW_LNE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ISA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ISA_UNKNOWN:\n        *s_out = \"DW_ISA_UNKNOWN\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_thumb:\n        *s_out = \"DW_ISA_ARM_thumb\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_arm:\n        *s_out = \"DW_ISA_ARM_arm\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACRO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACRO_define:\n        *s_out = \"DW_MACRO_define\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef:\n        *s_out = \"DW_MACRO_undef\";\n        return DW_DLV_OK;\n    case DW_MACRO_start_file:\n        *s_out = \"DW_MACRO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_end_file:\n        *s_out = \"DW_MACRO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strp:\n        *s_out = \"DW_MACRO_define_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strp:\n        *s_out = \"DW_MACRO_undef_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_import:\n        *s_out = \"DW_MACRO_import\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_sup:\n        *s_out = \"DW_MACRO_define_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_sup:\n        *s_out = \"DW_MACRO_undef_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_import_sup:\n        *s_out = \"DW_MACRO_import_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strx:\n        *s_out = \"DW_MACRO_define_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strx:\n        *s_out = \"DW_MACRO_undef_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_lo_user:\n        *s_out = \"DW_MACRO_lo_user\";\n        return DW_DLV_OK;\n    case DW_MACRO_hi_user:\n        *s_out = \"DW_MACRO_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACINFO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACINFO_define:\n        *s_out = \"DW_MACINFO_define\";\n        return DW_DLV_OK;\n    case DW_MACINFO_undef:\n        *s_out = \"DW_MACINFO_undef\";\n        return DW_DLV_OK;\n    case DW_MACINFO_start_file:\n        *s_out = \"DW_MACINFO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_end_file:\n        *s_out = \"DW_MACINFO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_vendor_ext:\n        *s_out = \"DW_MACINFO_vendor_ext\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CFA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CFA_extended:\n        *s_out = \"DW_CFA_extended\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_CFA_nop */\n    case DW_CFA_set_loc:\n        *s_out = \"DW_CFA_set_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc1:\n        *s_out = \"DW_CFA_advance_loc1\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc2:\n        *s_out = \"DW_CFA_advance_loc2\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc4:\n        *s_out = \"DW_CFA_advance_loc4\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended:\n        *s_out = \"DW_CFA_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_extended:\n        *s_out = \"DW_CFA_restore_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_undefined:\n        *s_out = \"DW_CFA_undefined\";\n        return DW_DLV_OK;\n    case DW_CFA_same_value:\n        *s_out = \"DW_CFA_same_value\";\n        return DW_DLV_OK;\n    case DW_CFA_register:\n        *s_out = \"DW_CFA_register\";\n        return DW_DLV_OK;\n    case DW_CFA_remember_state:\n        *s_out = \"DW_CFA_remember_state\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_state:\n        *s_out = \"DW_CFA_restore_state\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa:\n        *s_out = \"DW_CFA_def_cfa\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_register:\n        *s_out = \"DW_CFA_def_cfa_register\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset:\n        *s_out = \"DW_CFA_def_cfa_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_expression:\n        *s_out = \"DW_CFA_def_cfa_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_expression:\n        *s_out = \"DW_CFA_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended_sf:\n        *s_out = \"DW_CFA_offset_extended_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_sf:\n        *s_out = \"DW_CFA_def_cfa_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset_sf:\n        *s_out = \"DW_CFA_def_cfa_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset:\n        *s_out = \"DW_CFA_val_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset_sf:\n        *s_out = \"DW_CFA_val_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_expression:\n        *s_out = \"DW_CFA_val_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_lo_user:\n        *s_out = \"DW_CFA_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x1c. DW_CFA_low_user */\n    case DW_CFA_MIPS_advance_loc8:\n        *s_out = \"DW_CFA_MIPS_advance_loc8\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_window_save:\n        *s_out = \"DW_CFA_GNU_window_save\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_args_size:\n        *s_out = \"DW_CFA_GNU_args_size\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_negative_offset_extended:\n        *s_out = \"DW_CFA_GNU_negative_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_METAWARE_info:\n        *s_out = \"DW_CFA_METAWARE_info\";\n        return DW_DLV_OK;\n    case DW_CFA_high_user:\n        *s_out = \"DW_CFA_high_user\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc:\n        *s_out = \"DW_CFA_advance_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_offset:\n        *s_out = \"DW_CFA_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_restore:\n        *s_out = \"DW_CFA_restore\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_EH_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_EH_PE_absptr:\n        *s_out = \"DW_EH_PE_absptr\";\n        return DW_DLV_OK;\n    case DW_EH_PE_uleb128:\n        *s_out = \"DW_EH_PE_uleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata2:\n        *s_out = \"DW_EH_PE_udata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata4:\n        *s_out = \"DW_EH_PE_udata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata8:\n        *s_out = \"DW_EH_PE_udata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sleb128:\n        *s_out = \"DW_EH_PE_sleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata2:\n        *s_out = \"DW_EH_PE_sdata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata4:\n        *s_out = \"DW_EH_PE_sdata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata8:\n        *s_out = \"DW_EH_PE_sdata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_pcrel:\n        *s_out = \"DW_EH_PE_pcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_textrel:\n        *s_out = \"DW_EH_PE_textrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_datarel:\n        *s_out = \"DW_EH_PE_datarel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_funcrel:\n        *s_out = \"DW_EH_PE_funcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_aligned:\n        *s_out = \"DW_EH_PE_aligned\";\n        return DW_DLV_OK;\n    case DW_EH_PE_omit:\n        *s_out = \"DW_EH_PE_omit\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FRAME_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FRAME_CFA_COL:\n        *s_out = \"DW_FRAME_CFA_COL\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_LAST_REG_NUM */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_RA_COL */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_STATIC_LINK */\n    case DW_FRAME_REG1:\n        *s_out = \"DW_FRAME_REG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG2:\n        *s_out = \"DW_FRAME_REG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG3:\n        *s_out = \"DW_FRAME_REG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG4:\n        *s_out = \"DW_FRAME_REG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG5:\n        *s_out = \"DW_FRAME_REG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG6:\n        *s_out = \"DW_FRAME_REG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG7:\n        *s_out = \"DW_FRAME_REG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG8:\n        *s_out = \"DW_FRAME_REG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG9:\n        *s_out = \"DW_FRAME_REG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG10:\n        *s_out = \"DW_FRAME_REG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG11:\n        *s_out = \"DW_FRAME_REG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG12:\n        *s_out = \"DW_FRAME_REG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG13:\n        *s_out = \"DW_FRAME_REG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG14:\n        *s_out = \"DW_FRAME_REG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG15:\n        *s_out = \"DW_FRAME_REG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG16:\n        *s_out = \"DW_FRAME_REG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG17:\n        *s_out = \"DW_FRAME_REG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG18:\n        *s_out = \"DW_FRAME_REG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG19:\n        *s_out = \"DW_FRAME_REG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG20:\n        *s_out = \"DW_FRAME_REG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG21:\n        *s_out = \"DW_FRAME_REG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG22:\n        *s_out = \"DW_FRAME_REG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG23:\n        *s_out = \"DW_FRAME_REG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG24:\n        *s_out = \"DW_FRAME_REG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG25:\n        *s_out = \"DW_FRAME_REG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG26:\n        *s_out = \"DW_FRAME_REG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG27:\n        *s_out = \"DW_FRAME_REG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG28:\n        *s_out = \"DW_FRAME_REG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG29:\n        *s_out = \"DW_FRAME_REG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG30:\n        *s_out = \"DW_FRAME_REG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG31:\n        *s_out = \"DW_FRAME_REG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG0:\n        *s_out = \"DW_FRAME_FREG0\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG1:\n        *s_out = \"DW_FRAME_FREG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG2:\n        *s_out = \"DW_FRAME_FREG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG3:\n        *s_out = \"DW_FRAME_FREG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG4:\n        *s_out = \"DW_FRAME_FREG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG5:\n        *s_out = \"DW_FRAME_FREG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG6:\n        *s_out = \"DW_FRAME_FREG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG7:\n        *s_out = \"DW_FRAME_FREG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG8:\n        *s_out = \"DW_FRAME_FREG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG9:\n        *s_out = \"DW_FRAME_FREG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG10:\n        *s_out = \"DW_FRAME_FREG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG11:\n        *s_out = \"DW_FRAME_FREG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG12:\n        *s_out = \"DW_FRAME_FREG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG13:\n        *s_out = \"DW_FRAME_FREG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG14:\n        *s_out = \"DW_FRAME_FREG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG15:\n        *s_out = \"DW_FRAME_FREG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG16:\n        *s_out = \"DW_FRAME_FREG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG17:\n        *s_out = \"DW_FRAME_FREG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG18:\n        *s_out = \"DW_FRAME_FREG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG19:\n        *s_out = \"DW_FRAME_FREG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG20:\n        *s_out = \"DW_FRAME_FREG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG21:\n        *s_out = \"DW_FRAME_FREG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG22:\n        *s_out = \"DW_FRAME_FREG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG23:\n        *s_out = \"DW_FRAME_FREG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG24:\n        *s_out = \"DW_FRAME_FREG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG25:\n        *s_out = \"DW_FRAME_FREG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG26:\n        *s_out = \"DW_FRAME_FREG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG27:\n        *s_out = \"DW_FRAME_FREG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG28:\n        *s_out = \"DW_FRAME_FREG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG29:\n        *s_out = \"DW_FRAME_FREG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG30:\n        *s_out = \"DW_FRAME_FREG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG31:\n        *s_out = \"DW_FRAME_FREG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG32:\n        *s_out = \"DW_FRAME_FREG32\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG33:\n        *s_out = \"DW_FRAME_FREG33\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG34:\n        *s_out = \"DW_FRAME_FREG34\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG35:\n        *s_out = \"DW_FRAME_FREG35\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG36:\n        *s_out = \"DW_FRAME_FREG36\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG37:\n        *s_out = \"DW_FRAME_FREG37\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG38:\n        *s_out = \"DW_FRAME_FREG38\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG39:\n        *s_out = \"DW_FRAME_FREG39\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG40:\n        *s_out = \"DW_FRAME_FREG40\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG41:\n        *s_out = \"DW_FRAME_FREG41\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG42:\n        *s_out = \"DW_FRAME_FREG42\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG43:\n        *s_out = \"DW_FRAME_FREG43\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG44:\n        *s_out = \"DW_FRAME_FREG44\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG45:\n        *s_out = \"DW_FRAME_FREG45\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG46:\n        *s_out = \"DW_FRAME_FREG46\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG47:\n        *s_out = \"DW_FRAME_FREG47\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG48:\n        *s_out = \"DW_FRAME_FREG48\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG49:\n        *s_out = \"DW_FRAME_FREG49\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG50:\n        *s_out = \"DW_FRAME_FREG50\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG51:\n        *s_out = \"DW_FRAME_FREG51\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG52:\n        *s_out = \"DW_FRAME_FREG52\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG53:\n        *s_out = \"DW_FRAME_FREG53\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG54:\n        *s_out = \"DW_FRAME_FREG54\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG55:\n        *s_out = \"DW_FRAME_FREG55\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG56:\n        *s_out = \"DW_FRAME_FREG56\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG57:\n        *s_out = \"DW_FRAME_FREG57\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG58:\n        *s_out = \"DW_FRAME_FREG58\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG59:\n        *s_out = \"DW_FRAME_FREG59\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG60:\n        *s_out = \"DW_FRAME_FREG60\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG61:\n        *s_out = \"DW_FRAME_FREG61\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG62:\n        *s_out = \"DW_FRAME_FREG62\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG63:\n        *s_out = \"DW_FRAME_FREG63\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG64:\n        *s_out = \"DW_FRAME_FREG64\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG65:\n        *s_out = \"DW_FRAME_FREG65\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG66:\n        *s_out = \"DW_FRAME_FREG66\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG67:\n        *s_out = \"DW_FRAME_FREG67\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG68:\n        *s_out = \"DW_FRAME_FREG68\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG69:\n        *s_out = \"DW_FRAME_FREG69\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG70:\n        *s_out = \"DW_FRAME_FREG70\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG71:\n        *s_out = \"DW_FRAME_FREG71\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG72:\n        *s_out = \"DW_FRAME_FREG72\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG73:\n        *s_out = \"DW_FRAME_FREG73\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG74:\n        *s_out = \"DW_FRAME_FREG74\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG75:\n        *s_out = \"DW_FRAME_FREG75\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG76:\n        *s_out = \"DW_FRAME_FREG76\";\n        return DW_DLV_OK;\n    case DW_FRAME_HIGHEST_NORMAL_REGISTER:\n        *s_out = \"DW_FRAME_HIGHEST_NORMAL_REGISTER\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CHILDREN_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CHILDREN_no:\n        *s_out = \"DW_CHILDREN_no\";\n        return DW_DLV_OK;\n    case DW_CHILDREN_yes:\n        *s_out = \"DW_CHILDREN_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ADDR_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ADDR_none:\n        *s_out = \"DW_ADDR_none\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n\n/* END FILE */\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef DWARF_NAMES_H\n#define DWARF_NAMES_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif /* __cplusplus */\n\nextern int dwarf_get_TAG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_children_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FORM_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_AT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_OP_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DEFAULTED_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_IDX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLEX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_RLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIVIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIKIND_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_UT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_SECT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_END_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATCF_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ACCESS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIRTUALITY_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LANG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ID_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_INL_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ORD_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DSC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNCT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ISA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACRO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACINFO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CFA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_EH_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FRAME_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CHILDREN_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ADDR_name(unsigned int /*val_in*/, const char ** /*s_out */);\n\n#ifdef __cplusplus\n}\n#endif /* __cplusplus */\n\n#endif /* DWARF_NAMES_H */\n\n/* END FILE */\n", "/* Automatically generated, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef __DWARF_NAMES_ENUM_H__\n#define __DWARF_NAMES_ENUM_H__\n\nenum Dwarf_TAG_e {\n    DW_TAG_array_type                        = 0x0001,\n    DW_TAG_class_type                        = 0x0002,\n    DW_TAG_entry_point                       = 0x0003,\n    DW_TAG_enumeration_type                  = 0x0004,\n    DW_TAG_formal_parameter                  = 0x0005,\n    DW_TAG_imported_declaration              = 0x0008,\n    DW_TAG_label                             = 0x000a,\n    DW_TAG_lexical_block                     = 0x000b,\n    DW_TAG_member                            = 0x000d,\n    DW_TAG_pointer_type                      = 0x000f,\n    DW_TAG_reference_type                    = 0x0010,\n    DW_TAG_compile_unit                      = 0x0011,\n    DW_TAG_string_type                       = 0x0012,\n    DW_TAG_structure_type                    = 0x0013,\n    DW_TAG_subroutine_type                   = 0x0015,\n    DW_TAG_typedef                           = 0x0016,\n    DW_TAG_union_type                        = 0x0017,\n    DW_TAG_unspecified_parameters            = 0x0018,\n    DW_TAG_variant                           = 0x0019,\n    DW_TAG_common_block                      = 0x001a,\n    DW_TAG_common_inclusion                  = 0x001b,\n    DW_TAG_inheritance                       = 0x001c,\n    DW_TAG_inlined_subroutine                = 0x001d,\n    DW_TAG_module                            = 0x001e,\n    DW_TAG_ptr_to_member_type                = 0x001f,\n    DW_TAG_set_type                          = 0x0020,\n    DW_TAG_subrange_type                     = 0x0021,\n    DW_TAG_with_stmt                         = 0x0022,\n    DW_TAG_access_declaration                = 0x0023,\n    DW_TAG_base_type                         = 0x0024,\n    DW_TAG_catch_block                       = 0x0025,\n    DW_TAG_const_type                        = 0x0026,\n    DW_TAG_constant                          = 0x0027,\n    DW_TAG_enumerator                        = 0x0028,\n    DW_TAG_file_type                         = 0x0029,\n    DW_TAG_friend                            = 0x002a,\n    DW_TAG_namelist                          = 0x002b,\n    DW_TAG_namelist_item                     = 0x002c,\n    DW_TAG_packed_type                       = 0x002d,\n    DW_TAG_subprogram                        = 0x002e,\n    DW_TAG_template_type_parameter           = 0x002f,\n    DW_TAG_template_value_parameter          = 0x0030,\n    DW_TAG_thrown_type                       = 0x0031,\n    DW_TAG_try_block                         = 0x0032,\n    DW_TAG_variant_part                      = 0x0033,\n    DW_TAG_variable                          = 0x0034,\n    DW_TAG_volatile_type                     = 0x0035,\n    DW_TAG_dwarf_procedure                   = 0x0036,\n    DW_TAG_restrict_type                     = 0x0037,\n    DW_TAG_interface_type                    = 0x0038,\n    DW_TAG_namespace                         = 0x0039,\n    DW_TAG_imported_module                   = 0x003a,\n    DW_TAG_unspecified_type                  = 0x003b,\n    DW_TAG_partial_unit                      = 0x003c,\n    DW_TAG_imported_unit                     = 0x003d,\n    DW_TAG_mutable_type                      = 0x003e,\n    DW_TAG_condition                         = 0x003f,\n    DW_TAG_shared_type                       = 0x0040,\n    DW_TAG_type_unit                         = 0x0041,\n    DW_TAG_rvalue_reference_type             = 0x0042,\n    DW_TAG_template_alias                    = 0x0043,\n    DW_TAG_coarray_type                      = 0x0044,\n    DW_TAG_generic_subrange                  = 0x0045,\n    DW_TAG_dynamic_type                      = 0x0046,\n    DW_TAG_atomic_type                       = 0x0047,\n    DW_TAG_call_site                         = 0x0048,\n    DW_TAG_call_site_parameter               = 0x0049,\n    DW_TAG_skeleton_unit                     = 0x004a,\n    DW_TAG_immutable_type                    = 0x004b,\n    DW_TAG_lo_user                           = 0x4080,\n    DW_TAG_MIPS_loop                         = 0x4081,\n    DW_TAG_HP_array_descriptor               = 0x4090,\n    DW_TAG_format_label                      = 0x4101,\n    DW_TAG_function_template                 = 0x4102,\n    DW_TAG_class_template                    = 0x4103,\n    DW_TAG_GNU_BINCL                         = 0x4104,\n    DW_TAG_GNU_EINCL                         = 0x4105,\n    DW_TAG_GNU_template_template_parameter   = 0x4106,\n    DW_TAG_GNU_template_parameter_pack       = 0x4107,\n    DW_TAG_GNU_formal_parameter_pack         = 0x4108,\n    DW_TAG_GNU_call_site                     = 0x4109,\n    DW_TAG_GNU_call_site_parameter           = 0x410a,\n    DW_TAG_SUN_function_template             = 0x4201,\n    DW_TAG_SUN_class_template                = 0x4202,\n    DW_TAG_SUN_struct_template               = 0x4203,\n    DW_TAG_SUN_union_template                = 0x4204,\n    DW_TAG_SUN_indirect_inheritance          = 0x4205,\n    DW_TAG_SUN_codeflags                     = 0x4206,\n    DW_TAG_SUN_memop_info                    = 0x4207,\n    DW_TAG_SUN_omp_child_func                = 0x4208,\n    DW_TAG_SUN_rtti_descriptor               = 0x4209,\n    DW_TAG_SUN_dtor_info                     = 0x420a,\n    DW_TAG_SUN_dtor                          = 0x420b,\n    DW_TAG_SUN_f90_interface                 = 0x420c,\n    DW_TAG_SUN_fortran_vax_structure         = 0x420d,\n    DW_TAG_SUN_hi                            = 0x42ff,\n    DW_TAG_ALTIUM_circ_type                  = 0x5101,\n    DW_TAG_ALTIUM_mwa_circ_type              = 0x5102,\n    DW_TAG_ALTIUM_rev_carry_type             = 0x5103,\n    DW_TAG_ALTIUM_rom                        = 0x5111,\n    DW_TAG_upc_shared_type                   = 0x8765,\n    DW_TAG_upc_strict_type                   = 0x8766,\n    DW_TAG_upc_relaxed_type                  = 0x8767,\n    DW_TAG_PGI_kanji_type                    = 0xa000,\n    DW_TAG_PGI_interface_block               = 0xa020,\n    DW_TAG_hi_user                           = 0xffff\n};\n\nenum Dwarf_children_e {\n    DW_children_no                           = 0x0000,\n    DW_children_yes                          = 0x0001\n};\n\nenum Dwarf_FORM_e {\n    DW_FORM_addr                             = 0x0001,\n    DW_FORM_block2                           = 0x0003,\n    DW_FORM_block4                           = 0x0004,\n    DW_FORM_data2                            = 0x0005,\n    DW_FORM_data4                            = 0x0006,\n    DW_FORM_data8                            = 0x0007,\n    DW_FORM_string                           = 0x0008,\n    DW_FORM_block                            = 0x0009,\n    DW_FORM_block1                           = 0x000a,\n    DW_FORM_data1                            = 0x000b,\n    DW_FORM_flag                             = 0x000c,\n    DW_FORM_sdata                            = 0x000d,\n    DW_FORM_strp                             = 0x000e,\n    DW_FORM_udata                            = 0x000f,\n    DW_FORM_ref_addr                         = 0x0010,\n    DW_FORM_ref1                             = 0x0011,\n    DW_FORM_ref2                             = 0x0012,\n    DW_FORM_ref4                             = 0x0013,\n    DW_FORM_ref8                             = 0x0014,\n    DW_FORM_ref_udata                        = 0x0015,\n    DW_FORM_indirect                         = 0x0016,\n    DW_FORM_sec_offset                       = 0x0017,\n    DW_FORM_exprloc                          = 0x0018,\n    DW_FORM_flag_present                     = 0x0019,\n    DW_FORM_strx                             = 0x001a,\n    DW_FORM_addrx                            = 0x001b,\n    DW_FORM_ref_sup4                         = 0x001c,\n    DW_FORM_strp_sup                         = 0x001d,\n    DW_FORM_data16                           = 0x001e,\n    DW_FORM_line_strp                        = 0x001f,\n    DW_FORM_ref_sig8                         = 0x0020,\n    DW_FORM_implicit_const                   = 0x0021,\n    DW_FORM_loclistx                         = 0x0022,\n    DW_FORM_rnglistx                         = 0x0023,\n    DW_FORM_ref_sup8                         = 0x0024,\n    DW_FORM_strx1                            = 0x0025,\n    DW_FORM_strx2                            = 0x0026,\n    DW_FORM_strx3                            = 0x0027,\n    DW_FORM_strx4                            = 0x0028,\n    DW_FORM_addrx1                           = 0x0029,\n    DW_FORM_addrx2                           = 0x002a,\n    DW_FORM_addrx3                           = 0x002b,\n    DW_FORM_addrx4                           = 0x002c,\n    DW_FORM_GNU_addr_index                   = 0x1f01,\n    DW_FORM_GNU_str_index                    = 0x1f02,\n    DW_FORM_GNU_ref_alt                      = 0x1f20,\n    DW_FORM_GNU_strp_alt                     = 0x1f21\n};\n\nenum Dwarf_AT_e {\n    DW_AT_sibling                            = 0x0001,\n    DW_AT_location                           = 0x0002,\n    DW_AT_name                               = 0x0003,\n    DW_AT_ordering                           = 0x0009,\n    DW_AT_subscr_data                        = 0x000a,\n    DW_AT_byte_size                          = 0x000b,\n    DW_AT_bit_offset                         = 0x000c,\n    DW_AT_bit_size                           = 0x000d,\n    DW_AT_element_list                       = 0x000f,\n    DW_AT_stmt_list                          = 0x0010,\n    DW_AT_low_pc                             = 0x0011,\n    DW_AT_high_pc                            = 0x0012,\n    DW_AT_language                           = 0x0013,\n    DW_AT_member                             = 0x0014,\n    DW_AT_discr                              = 0x0015,\n    DW_AT_discr_value                        = 0x0016,\n    DW_AT_visibility                         = 0x0017,\n    DW_AT_import                             = 0x0018,\n    DW_AT_string_length                      = 0x0019,\n    DW_AT_common_reference                   = 0x001a,\n    DW_AT_comp_dir                           = 0x001b,\n    DW_AT_const_value                        = 0x001c,\n    DW_AT_containing_type                    = 0x001d,\n    DW_AT_default_value                      = 0x001e,\n    DW_AT_inline                             = 0x0020,\n    DW_AT_is_optional                        = 0x0021,\n    DW_AT_lower_bound                        = 0x0022,\n    DW_AT_producer                           = 0x0025,\n    DW_AT_prototyped                         = 0x0027,\n    DW_AT_return_addr                        = 0x002a,\n    DW_AT_start_scope                        = 0x002c,\n    DW_AT_bit_stride                         = 0x002e,\n    DW_AT_upper_bound                        = 0x002f,\n    DW_AT_abstract_origin                    = 0x0031,\n    DW_AT_accessibility                      = 0x0032,\n    DW_AT_address_class                      = 0x0033,\n    DW_AT_artificial                         = 0x0034,\n    DW_AT_base_types                         = 0x0035,\n    DW_AT_calling_convention                 = 0x0036,\n    DW_AT_count                              = 0x0037,\n    DW_AT_data_member_location               = 0x0038,\n    DW_AT_decl_column                        = 0x0039,\n    DW_AT_decl_file                          = 0x003a,\n    DW_AT_decl_line                          = 0x003b,\n    DW_AT_declaration                        = 0x003c,\n    DW_AT_discr_list                         = 0x003d,\n    DW_AT_encoding                           = 0x003e,\n    DW_AT_external                           = 0x003f,\n    DW_AT_frame_base                         = 0x0040,\n    DW_AT_friend                             = 0x0041,\n    DW_AT_identifier_case                    = 0x0042,\n    DW_AT_macro_info                         = 0x0043,\n    DW_AT_namelist_item                      = 0x0044,\n    DW_AT_priority                           = 0x0045,\n    DW_AT_segment                            = 0x0046,\n    DW_AT_specification                      = 0x0047,\n    DW_AT_static_link                        = 0x0048,\n    DW_AT_type                               = 0x0049,\n    DW_AT_use_location                       = 0x004a,\n    DW_AT_variable_parameter                 = 0x004b,\n    DW_AT_virtuality                         = 0x004c,\n    DW_AT_vtable_elem_location               = 0x004d,\n    DW_AT_allocated                          = 0x004e,\n    DW_AT_associated                         = 0x004f,\n    DW_AT_data_location                      = 0x0050,\n    DW_AT_byte_stride                        = 0x0051,\n    DW_AT_entry_pc                           = 0x0052,\n    DW_AT_use_UTF8                           = 0x0053,\n    DW_AT_extension                          = 0x0054,\n    DW_AT_ranges                             = 0x0055,\n    DW_AT_trampoline                         = 0x0056,\n    DW_AT_call_column                        = 0x0057,\n    DW_AT_call_file                          = 0x0058,\n    DW_AT_call_line                          = 0x0059,\n    DW_AT_description                        = 0x005a,\n    DW_AT_binary_scale                       = 0x005b,\n    DW_AT_decimal_scale                      = 0x005c,\n    DW_AT_small                              = 0x005d,\n    DW_AT_decimal_sign                       = 0x005e,\n    DW_AT_digit_count                        = 0x005f,\n    DW_AT_picture_string                     = 0x0060,\n    DW_AT_mutable                            = 0x0061,\n    DW_AT_threads_scaled                     = 0x0062,\n    DW_AT_explicit                           = 0x0063,\n    DW_AT_object_pointer                     = 0x0064,\n    DW_AT_endianity                          = 0x0065,\n    DW_AT_elemental                          = 0x0066,\n    DW_AT_pure                               = 0x0067,\n    DW_AT_recursive                          = 0x0068,\n    DW_AT_signature                          = 0x0069,\n    DW_AT_main_subprogram                    = 0x006a,\n    DW_AT_data_bit_offset                    = 0x006b,\n    DW_AT_const_expr                         = 0x006c,\n    DW_AT_enum_class                         = 0x006d,\n    DW_AT_linkage_name                       = 0x006e,\n    DW_AT_string_length_bit_size             = 0x006f,\n    DW_AT_string_length_byte_size            = 0x0070,\n    DW_AT_rank                               = 0x0071,\n    DW_AT_str_offsets_base                   = 0x0072,\n    DW_AT_addr_base                          = 0x0073,\n    DW_AT_rnglists_base                      = 0x0074,\n    DW_AT_dwo_id                             = 0x0075,\n    DW_AT_dwo_name                           = 0x0076,\n    DW_AT_reference                          = 0x0077,\n    DW_AT_rvalue_reference                   = 0x0078,\n    DW_AT_macros                             = 0x0079,\n    DW_AT_call_all_calls                     = 0x007a,\n    DW_AT_call_all_source_calls              = 0x007b,\n    DW_AT_call_all_tail_calls                = 0x007c,\n    DW_AT_call_return_pc                     = 0x007d,\n    DW_AT_call_value                         = 0x007e,\n    DW_AT_call_origin                        = 0x007f,\n    DW_AT_call_parameter                     = 0x0080,\n    DW_AT_call_pc                            = 0x0081,\n    DW_AT_call_tail_call                     = 0x0082,\n    DW_AT_call_target                        = 0x0083,\n    DW_AT_call_target_clobbered              = 0x0084,\n    DW_AT_call_data_location                 = 0x0085,\n    DW_AT_call_data_value                    = 0x0086,\n    DW_AT_noreturn                           = 0x0087,\n    DW_AT_alignment                          = 0x0088,\n    DW_AT_export_symbols                     = 0x0089,\n    DW_AT_deleted                            = 0x008a,\n    DW_AT_defaulted                          = 0x008b,\n    DW_AT_loclists_base                      = 0x008c,\n    DW_AT_HP_block_index                     = 0x2000,\n    DW_AT_MIPS_fde                           = 0x2001,\n    DW_AT_MIPS_loop_begin                    = 0x2002,\n    DW_AT_MIPS_tail_loop_begin               = 0x2003,\n    DW_AT_MIPS_epilog_begin                  = 0x2004,\n    DW_AT_MIPS_loop_unroll_factor            = 0x2005,\n    DW_AT_MIPS_software_pipeline_depth       = 0x2006,\n    DW_AT_MIPS_linkage_name                  = 0x2007,\n    DW_AT_MIPS_stride                        = 0x2008,\n    DW_AT_MIPS_abstract_name                 = 0x2009,\n    DW_AT_MIPS_clone_origin                  = 0x200a,\n    DW_AT_MIPS_has_inlines                   = 0x200b,\n    DW_AT_MIPS_stride_byte                   = 0x200c,\n    DW_AT_MIPS_stride_elem                   = 0x200d,\n    DW_AT_MIPS_ptr_dopetype                  = 0x200e,\n    DW_AT_MIPS_allocatable_dopetype          = 0x200f,\n    DW_AT_MIPS_assumed_shape_dopetype        = 0x2010,\n    DW_AT_MIPS_assumed_size                  = 0x2011,\n    DW_AT_HP_raw_data_ptr                    = 0x2012,\n    DW_AT_HP_pass_by_reference               = 0x2013,\n    DW_AT_HP_opt_level                       = 0x2014,\n    DW_AT_HP_prof_version_id                 = 0x2015,\n    DW_AT_HP_opt_flags                       = 0x2016,\n    DW_AT_HP_cold_region_low_pc              = 0x2017,\n    DW_AT_HP_cold_region_high_pc             = 0x2018,\n    DW_AT_HP_all_variables_modifiable        = 0x2019,\n    DW_AT_HP_linkage_name                    = 0x201a,\n    DW_AT_HP_prof_flags                      = 0x201b,\n    DW_AT_INTEL_other_endian                 = 0x2026,\n    DW_AT_sf_names                           = 0x2101,\n    DW_AT_src_info                           = 0x2102,\n    DW_AT_mac_info                           = 0x2103,\n    DW_AT_src_coords                         = 0x2104,\n    DW_AT_body_begin                         = 0x2105,\n    DW_AT_body_end                           = 0x2106,\n    DW_AT_GNU_vector                         = 0x2107,\n    DW_AT_GNU_guarded_by                     = 0x2108,\n    DW_AT_GNU_pt_guarded_by                  = 0x2109,\n    DW_AT_GNU_guarded                        = 0x210a,\n    DW_AT_GNU_pt_guarded                     = 0x210b,\n    DW_AT_GNU_locks_excluded                 = 0x210c,\n    DW_AT_GNU_exclusive_locks_required       = 0x210d,\n    DW_AT_GNU_shared_locks_required          = 0x210e,\n    DW_AT_GNU_odr_signature                  = 0x210f,\n    DW_AT_GNU_template_name                  = 0x2110,\n    DW_AT_GNU_call_site_value                = 0x2111,\n    DW_AT_GNU_call_site_data_value           = 0x2112,\n    DW_AT_GNU_call_site_target               = 0x2113,\n    DW_AT_GNU_call_site_target_clobbered     = 0x2114,\n    DW_AT_GNU_tail_call                      = 0x2115,\n    DW_AT_GNU_all_tail_call_sites            = 0x2116,\n    DW_AT_GNU_all_call_sites                 = 0x2117,\n    DW_AT_GNU_all_source_call_sites          = 0x2118,\n    DW_AT_GNU_macros                         = 0x2119,\n    DW_AT_GNU_deleted                        = 0x211a,\n    DW_AT_GNU_dwo_name                       = 0x2130,\n    DW_AT_GNU_dwo_id                         = 0x2131,\n    DW_AT_GNU_ranges_base                    = 0x2132,\n    DW_AT_GNU_addr_base                      = 0x2133,\n    DW_AT_GNU_pubnames                       = 0x2134,\n    DW_AT_GNU_pubtypes                       = 0x2135,\n    DW_AT_GNU_discriminator                  = 0x2136,\n    DW_AT_GNU_locviews                       = 0x2137,\n    DW_AT_GNU_entry_view                     = 0x2138,\n    DW_AT_SUN_template                       = 0x2201,\n    DW_AT_SUN_alignment                      = 0x2202,\n    DW_AT_SUN_vtable                         = 0x2203,\n    DW_AT_SUN_count_guarantee                = 0x2204,\n    DW_AT_SUN_command_line                   = 0x2205,\n    DW_AT_SUN_vbase                          = 0x2206,\n    DW_AT_SUN_compile_options                = 0x2207,\n    DW_AT_SUN_language                       = 0x2208,\n    DW_AT_SUN_browser_file                   = 0x2209,\n    DW_AT_SUN_vtable_abi                     = 0x2210,\n    DW_AT_SUN_func_offsets                   = 0x2211,\n    DW_AT_SUN_cf_kind                        = 0x2212,\n    DW_AT_SUN_vtable_index                   = 0x2213,\n    DW_AT_SUN_omp_tpriv_addr                 = 0x2214,\n    DW_AT_SUN_omp_child_func                 = 0x2215,\n    DW_AT_SUN_func_offset                    = 0x2216,\n    DW_AT_SUN_memop_type_ref                 = 0x2217,\n    DW_AT_SUN_profile_id                     = 0x2218,\n    DW_AT_SUN_memop_signature                = 0x2219,\n    DW_AT_SUN_obj_dir                        = 0x2220,\n    DW_AT_SUN_obj_file                       = 0x2221,\n    DW_AT_SUN_original_name                  = 0x2222,\n    DW_AT_SUN_hwcprof_signature              = 0x2223,\n    DW_AT_SUN_amd64_parmdump                 = 0x2224,\n    DW_AT_SUN_part_link_name                 = 0x2225,\n    DW_AT_SUN_link_name                      = 0x2226,\n    DW_AT_SUN_pass_with_const                = 0x2227,\n    DW_AT_SUN_return_with_const              = 0x2228,\n    DW_AT_SUN_import_by_name                 = 0x2229,\n    DW_AT_SUN_f90_pointer                    = 0x222a,\n    DW_AT_SUN_pass_by_ref                    = 0x222b,\n    DW_AT_SUN_f90_allocatable                = 0x222c,\n    DW_AT_SUN_f90_assumed_shape_array        = 0x222d,\n    DW_AT_SUN_c_vla                          = 0x222e,\n    DW_AT_SUN_return_value_ptr               = 0x2230,\n    DW_AT_SUN_dtor_start                     = 0x2231,\n    DW_AT_SUN_dtor_length                    = 0x2232,\n    DW_AT_SUN_dtor_state_initial             = 0x2233,\n    DW_AT_SUN_dtor_state_final               = 0x2234,\n    DW_AT_SUN_dtor_state_deltas              = 0x2235,\n    DW_AT_SUN_import_by_lname                = 0x2236,\n    DW_AT_SUN_f90_use_only                   = 0x2237,\n    DW_AT_SUN_namelist_spec                  = 0x2238,\n    DW_AT_SUN_is_omp_child_func              = 0x2239,\n    DW_AT_SUN_fortran_main_alias             = 0x223a,\n    DW_AT_SUN_fortran_based                  = 0x223b,\n    DW_AT_ALTIUM_loclist                     = 0x2300,\n    DW_AT_use_GNAT_descriptive_type          = 0x2301,\n    DW_AT_GNAT_descriptive_type              = 0x2302,\n    DW_AT_GNU_numerator                      = 0x2303,\n    DW_AT_GNU_denominator                    = 0x2304,\n    DW_AT_GNU_bias                           = 0x2305,\n    DW_AT_go_kind                            = 0x2900,\n    DW_AT_go_key                             = 0x2901,\n    DW_AT_go_elem                            = 0x2902,\n    DW_AT_go_embedded_field                  = 0x2903,\n    DW_AT_go_runtime_type                    = 0x2904,\n    DW_AT_upc_threads_scaled                 = 0x3210,\n    DW_AT_PGI_lbase                          = 0x3a00,\n    DW_AT_PGI_soffset                        = 0x3a01,\n    DW_AT_PGI_lstride                        = 0x3a02,\n    DW_AT_APPLE_optimized                    = 0x3fe1,\n    DW_AT_APPLE_flags                        = 0x3fe2,\n    DW_AT_APPLE_isa                          = 0x3fe3,\n    DW_AT_APPLE_block                        = 0x3fe4,\n    DW_AT_APPLE_major_runtime_vers           = 0x3fe5,\n    DW_AT_APPLE_runtime_class                = 0x3fe6,\n    DW_AT_APPLE_omit_frame_ptr               = 0x3fe7,\n    DW_AT_hi_user                            = 0x3fff\n};\n\nenum Dwarf_OP_e {\n    DW_OP_addr                               = 0x0003,\n    DW_OP_deref                              = 0x0006,\n    DW_OP_const1u                            = 0x0008,\n    DW_OP_const1s                            = 0x0009,\n    DW_OP_const2u                            = 0x000a,\n    DW_OP_const2s                            = 0x000b,\n    DW_OP_const4u                            = 0x000c,\n    DW_OP_const4s                            = 0x000d,\n    DW_OP_const8u                            = 0x000e,\n    DW_OP_const8s                            = 0x000f,\n    DW_OP_constu                             = 0x0010,\n    DW_OP_consts                             = 0x0011,\n    DW_OP_dup                                = 0x0012,\n    DW_OP_drop                               = 0x0013,\n    DW_OP_over                               = 0x0014,\n    DW_OP_pick                               = 0x0015,\n    DW_OP_swap                               = 0x0016,\n    DW_OP_rot                                = 0x0017,\n    DW_OP_xderef                             = 0x0018,\n    DW_OP_abs                                = 0x0019,\n    DW_OP_and                                = 0x001a,\n    DW_OP_div                                = 0x001b,\n    DW_OP_minus                              = 0x001c,\n    DW_OP_mod                                = 0x001d,\n    DW_OP_mul                                = 0x001e,\n    DW_OP_neg                                = 0x001f,\n    DW_OP_not                                = 0x0020,\n    DW_OP_or                                 = 0x0021,\n    DW_OP_plus                               = 0x0022,\n    DW_OP_plus_uconst                        = 0x0023,\n    DW_OP_shl                                = 0x0024,\n    DW_OP_shr                                = 0x0025,\n    DW_OP_shra                               = 0x0026,\n    DW_OP_xor                                = 0x0027,\n    DW_OP_bra                                = 0x0028,\n    DW_OP_eq                                 = 0x0029,\n    DW_OP_ge                                 = 0x002a,\n    DW_OP_gt                                 = 0x002b,\n    DW_OP_le                                 = 0x002c,\n    DW_OP_lt                                 = 0x002d,\n    DW_OP_ne                                 = 0x002e,\n    DW_OP_skip                               = 0x002f,\n    DW_OP_lit0                               = 0x0030,\n    DW_OP_lit1                               = 0x0031,\n    DW_OP_lit2                               = 0x0032,\n    DW_OP_lit3                               = 0x0033,\n    DW_OP_lit4                               = 0x0034,\n    DW_OP_lit5                               = 0x0035,\n    DW_OP_lit6                               = 0x0036,\n    DW_OP_lit7                               = 0x0037,\n    DW_OP_lit8                               = 0x0038,\n    DW_OP_lit9                               = 0x0039,\n    DW_OP_lit10                              = 0x003a,\n    DW_OP_lit11                              = 0x003b,\n    DW_OP_lit12                              = 0x003c,\n    DW_OP_lit13                              = 0x003d,\n    DW_OP_lit14                              = 0x003e,\n    DW_OP_lit15                              = 0x003f,\n    DW_OP_lit16                              = 0x0040,\n    DW_OP_lit17                              = 0x0041,\n    DW_OP_lit18                              = 0x0042,\n    DW_OP_lit19                              = 0x0043,\n    DW_OP_lit20                              = 0x0044,\n    DW_OP_lit21                              = 0x0045,\n    DW_OP_lit22                              = 0x0046,\n    DW_OP_lit23                              = 0x0047,\n    DW_OP_lit24                              = 0x0048,\n    DW_OP_lit25                              = 0x0049,\n    DW_OP_lit26                              = 0x004a,\n    DW_OP_lit27                              = 0x004b,\n    DW_OP_lit28                              = 0x004c,\n    DW_OP_lit29                              = 0x004d,\n    DW_OP_lit30                              = 0x004e,\n    DW_OP_lit31                              = 0x004f,\n    DW_OP_reg0                               = 0x0050,\n    DW_OP_reg1                               = 0x0051,\n    DW_OP_reg2                               = 0x0052,\n    DW_OP_reg3                               = 0x0053,\n    DW_OP_reg4                               = 0x0054,\n    DW_OP_reg5                               = 0x0055,\n    DW_OP_reg6                               = 0x0056,\n    DW_OP_reg7                               = 0x0057,\n    DW_OP_reg8                               = 0x0058,\n    DW_OP_reg9                               = 0x0059,\n    DW_OP_reg10                              = 0x005a,\n    DW_OP_reg11                              = 0x005b,\n    DW_OP_reg12                              = 0x005c,\n    DW_OP_reg13                              = 0x005d,\n    DW_OP_reg14                              = 0x005e,\n    DW_OP_reg15                              = 0x005f,\n    DW_OP_reg16                              = 0x0060,\n    DW_OP_reg17                              = 0x0061,\n    DW_OP_reg18                              = 0x0062,\n    DW_OP_reg19                              = 0x0063,\n    DW_OP_reg20                              = 0x0064,\n    DW_OP_reg21                              = 0x0065,\n    DW_OP_reg22                              = 0x0066,\n    DW_OP_reg23                              = 0x0067,\n    DW_OP_reg24                              = 0x0068,\n    DW_OP_reg25                              = 0x0069,\n    DW_OP_reg26                              = 0x006a,\n    DW_OP_reg27                              = 0x006b,\n    DW_OP_reg28                              = 0x006c,\n    DW_OP_reg29                              = 0x006d,\n    DW_OP_reg30                              = 0x006e,\n    DW_OP_reg31                              = 0x006f,\n    DW_OP_breg0                              = 0x0070,\n    DW_OP_breg1                              = 0x0071,\n    DW_OP_breg2                              = 0x0072,\n    DW_OP_breg3                              = 0x0073,\n    DW_OP_breg4                              = 0x0074,\n    DW_OP_breg5                              = 0x0075,\n    DW_OP_breg6                              = 0x0076,\n    DW_OP_breg7                              = 0x0077,\n    DW_OP_breg8                              = 0x0078,\n    DW_OP_breg9                              = 0x0079,\n    DW_OP_breg10                             = 0x007a,\n    DW_OP_breg11                             = 0x007b,\n    DW_OP_breg12                             = 0x007c,\n    DW_OP_breg13                             = 0x007d,\n    DW_OP_breg14                             = 0x007e,\n    DW_OP_breg15                             = 0x007f,\n    DW_OP_breg16                             = 0x0080,\n    DW_OP_breg17                             = 0x0081,\n    DW_OP_breg18                             = 0x0082,\n    DW_OP_breg19                             = 0x0083,\n    DW_OP_breg20                             = 0x0084,\n    DW_OP_breg21                             = 0x0085,\n    DW_OP_breg22                             = 0x0086,\n    DW_OP_breg23                             = 0x0087,\n    DW_OP_breg24                             = 0x0088,\n    DW_OP_breg25                             = 0x0089,\n    DW_OP_breg26                             = 0x008a,\n    DW_OP_breg27                             = 0x008b,\n    DW_OP_breg28                             = 0x008c,\n    DW_OP_breg29                             = 0x008d,\n    DW_OP_breg30                             = 0x008e,\n    DW_OP_breg31                             = 0x008f,\n    DW_OP_regx                               = 0x0090,\n    DW_OP_fbreg                              = 0x0091,\n    DW_OP_bregx                              = 0x0092,\n    DW_OP_piece                              = 0x0093,\n    DW_OP_deref_size                         = 0x0094,\n    DW_OP_xderef_size                        = 0x0095,\n    DW_OP_nop                                = 0x0096,\n    DW_OP_push_object_address                = 0x0097,\n    DW_OP_call2                              = 0x0098,\n    DW_OP_call4                              = 0x0099,\n    DW_OP_call_ref                           = 0x009a,\n    DW_OP_form_tls_address                   = 0x009b,\n    DW_OP_call_frame_cfa                     = 0x009c,\n    DW_OP_bit_piece                          = 0x009d,\n    DW_OP_implicit_value                     = 0x009e,\n    DW_OP_stack_value                        = 0x009f,\n    DW_OP_implicit_pointer                   = 0x00a0,\n    DW_OP_addrx                              = 0x00a1,\n    DW_OP_constx                             = 0x00a2,\n    DW_OP_entry_value                        = 0x00a3,\n    DW_OP_const_type                         = 0x00a4,\n    DW_OP_regval_type                        = 0x00a5,\n    DW_OP_deref_type                         = 0x00a6,\n    DW_OP_xderef_type                        = 0x00a7,\n    DW_OP_convert                            = 0x00a8,\n    DW_OP_reinterpret                        = 0x00a9,\n    DW_OP_GNU_push_tls_address               = 0x00e0,\n    DW_OP_HP_is_value                        = 0x00e1,\n    DW_OP_HP_fltconst4                       = 0x00e2,\n    DW_OP_HP_fltconst8                       = 0x00e3,\n    DW_OP_HP_mod_range                       = 0x00e4,\n    DW_OP_HP_unmod_range                     = 0x00e5,\n    DW_OP_HP_tls                             = 0x00e6,\n    DW_OP_INTEL_bit_piece                    = 0x00e8,\n    DW_OP_GNU_uninit                         = 0x00f0,\n    DW_OP_GNU_encoded_addr                   = 0x00f1,\n    DW_OP_GNU_implicit_pointer               = 0x00f2,\n    DW_OP_GNU_entry_value                    = 0x00f3,\n    DW_OP_GNU_const_type                     = 0x00f4,\n    DW_OP_GNU_regval_type                    = 0x00f5,\n    DW_OP_GNU_deref_type                     = 0x00f6,\n    DW_OP_GNU_convert                        = 0x00f7,\n    DW_OP_PGI_omp_thread_num                 = 0x00f8,\n    DW_OP_GNU_reinterpret                    = 0x00f9,\n    DW_OP_GNU_parameter_ref                  = 0x00fa,\n    DW_OP_GNU_addr_index                     = 0x00fb,\n    DW_OP_GNU_const_index                    = 0x00fc,\n    DW_OP_GNU_variable_value                 = 0x00fd,\n    DW_OP_hi_user                            = 0x00ff\n};\n\nenum Dwarf_ATE_e {\n    DW_ATE_address                           = 0x0001,\n    DW_ATE_boolean                           = 0x0002,\n    DW_ATE_complex_float                     = 0x0003,\n    DW_ATE_float                             = 0x0004,\n    DW_ATE_signed                            = 0x0005,\n    DW_ATE_signed_char                       = 0x0006,\n    DW_ATE_unsigned                          = 0x0007,\n    DW_ATE_unsigned_char                     = 0x0008,\n    DW_ATE_imaginary_float                   = 0x0009,\n    DW_ATE_packed_decimal                    = 0x000a,\n    DW_ATE_numeric_string                    = 0x000b,\n    DW_ATE_edited                            = 0x000c,\n    DW_ATE_signed_fixed                      = 0x000d,\n    DW_ATE_unsigned_fixed                    = 0x000e,\n    DW_ATE_decimal_float                     = 0x000f,\n    DW_ATE_UTF                               = 0x0010,\n    DW_ATE_UCS                               = 0x0011,\n    DW_ATE_ASCII                             = 0x0012,\n    DW_ATE_ALTIUM_fract                      = 0x0080,\n    DW_ATE_ALTIUM_accum                      = 0x0081,\n    DW_ATE_HP_float128                       = 0x0082,\n    DW_ATE_HP_complex_float128               = 0x0083,\n    DW_ATE_HP_floathpintel                   = 0x0084,\n    DW_ATE_HP_imaginary_float80              = 0x0085,\n    DW_ATE_HP_imaginary_float128             = 0x0086,\n    DW_ATE_SUN_interval_float                = 0x0091,\n    DW_ATE_SUN_imaginary_float               = 0x0092,\n    DW_ATE_hi_user                           = 0x00ff\n};\n\nenum Dwarf_DEFAULTED_e {\n    DW_DEFAULTED_no                          = 0x0000,\n    DW_DEFAULTED_in_class                    = 0x0001,\n    DW_DEFAULTED_out_of_class                = 0x0002\n};\n\nenum Dwarf_IDX_e {\n    DW_IDX_compile_unit                      = 0x0001,\n    DW_IDX_type_unit                         = 0x0002,\n    DW_IDX_die_offset                        = 0x0003,\n    DW_IDX_parent                            = 0x0004,\n    DW_IDX_type_hash                         = 0x0005,\n    DW_IDX_hi_user                           = 0x0fff,\n    DW_IDX_lo_user                           = 0x2000\n};\n\nenum Dwarf_LLEX_e {\n    DW_LLEX_end_of_list_entry                = 0x0000,\n    DW_LLEX_base_address_selection_entry     = 0x0001,\n    DW_LLEX_start_end_entry                  = 0x0002,\n    DW_LLEX_start_length_entry               = 0x0003,\n    DW_LLEX_offset_pair_entry                = 0x0004\n};\n\nenum Dwarf_LLE_e {\n    DW_LLE_end_of_list                       = 0x0000,\n    DW_LLE_base_addressx                     = 0x0001,\n    DW_LLE_startx_endx                       = 0x0002,\n    DW_LLE_startx_length                     = 0x0003,\n    DW_LLE_offset_pair                       = 0x0004,\n    DW_LLE_default_location                  = 0x0005,\n    DW_LLE_base_address                      = 0x0006,\n    DW_LLE_start_end                         = 0x0007,\n    DW_LLE_start_length                      = 0x0008\n};\n\nenum Dwarf_RLE_e {\n    DW_RLE_end_of_list                       = 0x0000,\n    DW_RLE_base_addressx                     = 0x0001,\n    DW_RLE_startx_endx                       = 0x0002,\n    DW_RLE_startx_length                     = 0x0003,\n    DW_RLE_offset_pair                       = 0x0004,\n    DW_RLE_base_address                      = 0x0005,\n    DW_RLE_start_end                         = 0x0006,\n    DW_RLE_start_length                      = 0x0007\n};\n\nenum Dwarf_GNUIVIS_e {\n    DW_GNUIVIS_global                        = 0x0000,\n    DW_GNUIVIS_static                        = 0x0001\n};\n\nenum Dwarf_GNUIKIND_e {\n    DW_GNUIKIND_none                         = 0x0000,\n    DW_GNUIKIND_type                         = 0x0001,\n    DW_GNUIKIND_variable                     = 0x0002,\n    DW_GNUIKIND_function                     = 0x0003,\n    DW_GNUIKIND_other                        = 0x0004\n};\n\nenum Dwarf_UT_e {\n    DW_UT_compile                            = 0x0001,\n    DW_UT_type                               = 0x0002,\n    DW_UT_partial                            = 0x0003,\n    DW_UT_skeleton                           = 0x0004,\n    DW_UT_split_compile                      = 0x0005,\n    DW_UT_split_type                         = 0x0006,\n    DW_UT_lo_user                            = 0x0080,\n    DW_UT_hi_user                            = 0x00ff\n};\n\nenum Dwarf_SECT_e {\n    DW_SECT_INFO                             = 0x0001,\n    DW_SECT_TYPES                            = 0x0002,\n    DW_SECT_ABBREV                           = 0x0003,\n    DW_SECT_LINE                             = 0x0004,\n    DW_SECT_LOCLISTS                         = 0x0005,\n    DW_SECT_STR_OFFSETS                      = 0x0006,\n    DW_SECT_MACRO                            = 0x0007,\n    DW_SECT_RNGLISTS                         = 0x0008\n};\n\nenum Dwarf_DS_e {\n    DW_DS_unsigned                           = 0x0001,\n    DW_DS_leading_overpunch                  = 0x0002,\n    DW_DS_trailing_overpunch                 = 0x0003,\n    DW_DS_leading_separate                   = 0x0004,\n    DW_DS_trailing_separate                  = 0x0005\n};\n\nenum Dwarf_END_e {\n    DW_END_default                           = 0x0000,\n    DW_END_big                               = 0x0001,\n    DW_END_little                            = 0x0002,\n    DW_END_lo_user                           = 0x0040,\n    DW_END_hi_user                           = 0x00ff\n};\n\nenum Dwarf_ATCF_e {\n    DW_ATCF_lo_user                          = 0x0040,\n    DW_ATCF_SUN_mop_bitfield                 = 0x0041,\n    DW_ATCF_SUN_mop_spill                    = 0x0042,\n    DW_ATCF_SUN_mop_scopy                    = 0x0043,\n    DW_ATCF_SUN_func_start                   = 0x0044,\n    DW_ATCF_SUN_end_ctors                    = 0x0045,\n    DW_ATCF_SUN_branch_target                = 0x0046,\n    DW_ATCF_SUN_mop_stack_probe              = 0x0047,\n    DW_ATCF_SUN_func_epilog                  = 0x0048,\n    DW_ATCF_hi_user                          = 0x00ff\n};\n\nenum Dwarf_ACCESS_e {\n    DW_ACCESS_public                         = 0x0001,\n    DW_ACCESS_protected                      = 0x0002,\n    DW_ACCESS_private                        = 0x0003\n};\n\nenum Dwarf_VIS_e {\n    DW_VIS_local                             = 0x0001,\n    DW_VIS_exported                          = 0x0002,\n    DW_VIS_qualified                         = 0x0003\n};\n\nenum Dwarf_VIRTUALITY_e {\n    DW_VIRTUALITY_none                       = 0x0000,\n    DW_VIRTUALITY_virtual                    = 0x0001,\n    DW_VIRTUALITY_pure_virtual               = 0x0002\n};\n\nenum Dwarf_LANG_e {\n    DW_LANG_C89                              = 0x0001,\n    DW_LANG_C                                = 0x0002,\n    DW_LANG_Ada83                            = 0x0003,\n    DW_LANG_C_plus_plus                      = 0x0004,\n    DW_LANG_Cobol74                          = 0x0005,\n    DW_LANG_Cobol85                          = 0x0006,\n    DW_LANG_Fortran77                        = 0x0007,\n    DW_LANG_Fortran90                        = 0x0008,\n    DW_LANG_Pascal83                         = 0x0009,\n    DW_LANG_Modula2                          = 0x000a,\n    DW_LANG_Java                             = 0x000b,\n    DW_LANG_C99                              = 0x000c,\n    DW_LANG_Ada95                            = 0x000d,\n    DW_LANG_Fortran95                        = 0x000e,\n    DW_LANG_PLI                              = 0x000f,\n    DW_LANG_ObjC                             = 0x0010,\n    DW_LANG_ObjC_plus_plus                   = 0x0011,\n    DW_LANG_UPC                              = 0x0012,\n    DW_LANG_D                                = 0x0013,\n    DW_LANG_Python                           = 0x0014,\n    DW_LANG_OpenCL                           = 0x0015,\n    DW_LANG_Go                               = 0x0016,\n    DW_LANG_Modula3                          = 0x0017,\n    DW_LANG_Haskel                           = 0x0018,\n    DW_LANG_C_plus_plus_03                   = 0x0019,\n    DW_LANG_C_plus_plus_11                   = 0x001a,\n    DW_LANG_OCaml                            = 0x001b,\n    DW_LANG_Rust                             = 0x001c,\n    DW_LANG_C11                              = 0x001d,\n    DW_LANG_Swift                            = 0x001e,\n    DW_LANG_Julia                            = 0x001f,\n    DW_LANG_Dylan                            = 0x0020,\n    DW_LANG_C_plus_plus_14                   = 0x0021,\n    DW_LANG_Fortran03                        = 0x0022,\n    DW_LANG_Fortran08                        = 0x0023,\n    DW_LANG_RenderScript                     = 0x0024,\n    DW_LANG_BLISS                            = 0x0025,\n    DW_LANG_lo_user                          = 0x8000,\n    DW_LANG_Mips_Assembler                   = 0x8001,\n    DW_LANG_Upc                              = 0x8765,\n    DW_LANG_SUN_Assembler                    = 0x9001,\n    DW_LANG_ALTIUM_Assembler                 = 0x9101,\n    DW_LANG_hi_user                          = 0xffff\n};\n\nenum Dwarf_ID_e {\n    DW_ID_case_sensitive                     = 0x0000,\n    DW_ID_up_case                            = 0x0001,\n    DW_ID_down_case                          = 0x0002,\n    DW_ID_case_insensitive                   = 0x0003\n};\n\nenum Dwarf_CC_e {\n    DW_CC_normal                             = 0x0001,\n    DW_CC_program                            = 0x0002,\n    DW_CC_nocall                             = 0x0003,\n    DW_CC_pass_by_reference                  = 0x0004,\n    DW_CC_pass_by_value                      = 0x0005,\n    DW_CC_lo_user                            = 0x0040,\n    DW_CC_GNU_borland_fastcall_i386          = 0x0041,\n    DW_CC_ALTIUM_interrupt                   = 0x0065,\n    DW_CC_ALTIUM_near_system_stack           = 0x0066,\n    DW_CC_ALTIUM_near_user_stack             = 0x0067,\n    DW_CC_ALTIUM_huge_user_stack             = 0x0068,\n    DW_CC_hi_user                            = 0x00ff\n};\n\nenum Dwarf_INL_e {\n    DW_INL_not_inlined                       = 0x0000,\n    DW_INL_inlined                           = 0x0001,\n    DW_INL_declared_not_inlined              = 0x0002,\n    DW_INL_declared_inlined                  = 0x0003\n};\n\nenum Dwarf_ORD_e {\n    DW_ORD_row_major                         = 0x0000,\n    DW_ORD_col_major                         = 0x0001\n};\n\nenum Dwarf_DSC_e {\n    DW_DSC_label                             = 0x0000,\n    DW_DSC_range                             = 0x0001\n};\n\nenum Dwarf_LNCT_e {\n    DW_LNCT_path                             = 0x0001,\n    DW_LNCT_directory_index                  = 0x0002,\n    DW_LNCT_timestamp                        = 0x0003,\n    DW_LNCT_size                             = 0x0004,\n    DW_LNCT_MD5                              = 0x0005,\n    DW_LNCT_GNU_subprogram_name              = 0x0006,\n    DW_LNCT_GNU_decl_file                    = 0x0007,\n    DW_LNCT_GNU_decl_line                    = 0x0008,\n    DW_LNCT_lo_user                          = 0x2000,\n    DW_LNCT_hi_user                          = 0x3fff\n};\n\nenum Dwarf_LNS_e {\n    DW_LNS_copy                              = 0x0001,\n    DW_LNS_advance_pc                        = 0x0002,\n    DW_LNS_advance_line                      = 0x0003,\n    DW_LNS_set_file                          = 0x0004,\n    DW_LNS_set_column                        = 0x0005,\n    DW_LNS_negate_stmt                       = 0x0006,\n    DW_LNS_set_basic_block                   = 0x0007,\n    DW_LNS_const_add_pc                      = 0x0008,\n    DW_LNS_fixed_advance_pc                  = 0x0009,\n    DW_LNS_set_prologue_end                  = 0x000a,\n    DW_LNS_set_epilogue_begin                = 0x000b,\n    DW_LNS_set_isa                           = 0x000c,\n    DW_LNS_set_address_from_logical          = 0x000d,\n    DW_LNS_inlined_call                      = 0x000e,\n    DW_LNS_pop_context                       = 0x000f\n};\n\nenum Dwarf_LNE_e {\n    DW_LNE_end_sequence                      = 0x0001,\n    DW_LNE_set_address                       = 0x0002,\n    DW_LNE_define_file                       = 0x0003,\n    DW_LNE_set_discriminator                 = 0x0004,\n    DW_LNE_HP_negate_is_UV_update            = 0x0011,\n    DW_LNE_HP_push_context                   = 0x0012,\n    DW_LNE_HP_pop_context                    = 0x0013,\n    DW_LNE_HP_set_file_line_column           = 0x0014,\n    DW_LNE_HP_set_routine_name               = 0x0015,\n    DW_LNE_HP_set_sequence                   = 0x0016,\n    DW_LNE_HP_negate_post_semantics          = 0x0017,\n    DW_LNE_HP_negate_function_exit           = 0x0018,\n    DW_LNE_HP_negate_front_end_logical       = 0x0019,\n    DW_LNE_HP_define_proc                    = 0x0020,\n    DW_LNE_HP_source_file_correlation        = 0x0080,\n    DW_LNE_hi_user                           = 0x00ff\n};\n\nenum Dwarf_ISA_e {\n    DW_ISA_UNKNOWN                           = 0x0000,\n    DW_ISA_ARM_thumb                         = 0x0001,\n    DW_ISA_ARM_arm                           = 0x0002\n};\n\nenum Dwarf_MACRO_e {\n    DW_MACRO_define                          = 0x0001,\n    DW_MACRO_undef                           = 0x0002,\n    DW_MACRO_start_file                      = 0x0003,\n    DW_MACRO_end_file                        = 0x0004,\n    DW_MACRO_define_strp                     = 0x0005,\n    DW_MACRO_undef_strp                      = 0x0006,\n    DW_MACRO_import                          = 0x0007,\n    DW_MACRO_define_sup                      = 0x0008,\n    DW_MACRO_undef_sup                       = 0x0009,\n    DW_MACRO_import_sup                      = 0x000a,\n    DW_MACRO_define_strx                     = 0x000b,\n    DW_MACRO_undef_strx                      = 0x000c,\n    DW_MACRO_lo_user                         = 0x00e0,\n    DW_MACRO_hi_user                         = 0x00ff\n};\n\nenum Dwarf_MACINFO_e {\n    DW_MACINFO_define                        = 0x0001,\n    DW_MACINFO_undef                         = 0x0002,\n    DW_MACINFO_start_file                    = 0x0003,\n    DW_MACINFO_end_file                      = 0x0004,\n    DW_MACINFO_vendor_ext                    = 0x00ff\n};\n\nenum Dwarf_CFA_e {\n    DW_CFA_extended                          = 0x0000,\n    DW_CFA_set_loc                           = 0x0001,\n    DW_CFA_advance_loc1                      = 0x0002,\n    DW_CFA_advance_loc2                      = 0x0003,\n    DW_CFA_advance_loc4                      = 0x0004,\n    DW_CFA_offset_extended                   = 0x0005,\n    DW_CFA_restore_extended                  = 0x0006,\n    DW_CFA_undefined                         = 0x0007,\n    DW_CFA_same_value                        = 0x0008,\n    DW_CFA_register                          = 0x0009,\n    DW_CFA_remember_state                    = 0x000a,\n    DW_CFA_restore_state                     = 0x000b,\n    DW_CFA_def_cfa                           = 0x000c,\n    DW_CFA_def_cfa_register                  = 0x000d,\n    DW_CFA_def_cfa_offset                    = 0x000e,\n    DW_CFA_def_cfa_expression                = 0x000f,\n    DW_CFA_expression                        = 0x0010,\n    DW_CFA_offset_extended_sf                = 0x0011,\n    DW_CFA_def_cfa_sf                        = 0x0012,\n    DW_CFA_def_cfa_offset_sf                 = 0x0013,\n    DW_CFA_val_offset                        = 0x0014,\n    DW_CFA_val_offset_sf                     = 0x0015,\n    DW_CFA_val_expression                    = 0x0016,\n    DW_CFA_lo_user                           = 0x001c,\n    DW_CFA_MIPS_advance_loc8                 = 0x001d,\n    DW_CFA_GNU_window_save                   = 0x002d,\n    DW_CFA_GNU_args_size                     = 0x002e,\n    DW_CFA_GNU_negative_offset_extended      = 0x002f,\n    DW_CFA_METAWARE_info                     = 0x0034,\n    DW_CFA_high_user                         = 0x003f,\n    DW_CFA_advance_loc                       = 0x0040,\n    DW_CFA_offset                            = 0x0080,\n    DW_CFA_restore                           = 0x00c0\n};\n\nenum Dwarf_EH_e {\n    DW_EH_PE_absptr                          = 0x0000,\n    DW_EH_PE_uleb128                         = 0x0001,\n    DW_EH_PE_udata2                          = 0x0002,\n    DW_EH_PE_udata4                          = 0x0003,\n    DW_EH_PE_udata8                          = 0x0004,\n    DW_EH_PE_sleb128                         = 0x0009,\n    DW_EH_PE_sdata2                          = 0x000a,\n    DW_EH_PE_sdata4                          = 0x000b,\n    DW_EH_PE_sdata8                          = 0x000c,\n    DW_EH_PE_pcrel                           = 0x0010,\n    DW_EH_PE_textrel                         = 0x0020,\n    DW_EH_PE_datarel                         = 0x0030,\n    DW_EH_PE_funcrel                         = 0x0040,\n    DW_EH_PE_aligned                         = 0x0050,\n    DW_EH_PE_omit                            = 0x00ff\n};\n\nenum Dwarf_FRAME_e {\n    DW_FRAME_CFA_COL                         = 0x0000,\n    DW_FRAME_REG1                            = 0x0001,\n    DW_FRAME_REG2                            = 0x0002,\n    DW_FRAME_REG3                            = 0x0003,\n    DW_FRAME_REG4                            = 0x0004,\n    DW_FRAME_REG5                            = 0x0005,\n    DW_FRAME_REG6                            = 0x0006,\n    DW_FRAME_REG7                            = 0x0007,\n    DW_FRAME_REG8                            = 0x0008,\n    DW_FRAME_REG9                            = 0x0009,\n    DW_FRAME_REG10                           = 0x0010,\n    DW_FRAME_REG11                           = 0x0011,\n    DW_FRAME_REG12                           = 0x0012,\n    DW_FRAME_REG13                           = 0x0013,\n    DW_FRAME_REG14                           = 0x0014,\n    DW_FRAME_REG15                           = 0x0015,\n    DW_FRAME_REG16                           = 0x0016,\n    DW_FRAME_REG17                           = 0x0017,\n    DW_FRAME_REG18                           = 0x0018,\n    DW_FRAME_REG19                           = 0x0019,\n    DW_FRAME_REG20                           = 0x0020,\n    DW_FRAME_REG21                           = 0x0021,\n    DW_FRAME_REG22                           = 0x0022,\n    DW_FRAME_REG23                           = 0x0023,\n    DW_FRAME_REG24                           = 0x0024,\n    DW_FRAME_REG25                           = 0x0025,\n    DW_FRAME_REG26                           = 0x0026,\n    DW_FRAME_REG27                           = 0x0027,\n    DW_FRAME_REG28                           = 0x0028,\n    DW_FRAME_REG29                           = 0x0029,\n    DW_FRAME_REG30                           = 0x0030,\n    DW_FRAME_REG31                           = 0x0031,\n    DW_FRAME_FREG0                           = 0x0032,\n    DW_FRAME_FREG1                           = 0x0033,\n    DW_FRAME_FREG2                           = 0x0034,\n    DW_FRAME_FREG3                           = 0x0035,\n    DW_FRAME_FREG4                           = 0x0036,\n    DW_FRAME_FREG5                           = 0x0037,\n    DW_FRAME_FREG6                           = 0x0038,\n    DW_FRAME_FREG7                           = 0x0039,\n    DW_FRAME_FREG8                           = 0x0040,\n    DW_FRAME_FREG9                           = 0x0041,\n    DW_FRAME_FREG10                          = 0x0042,\n    DW_FRAME_FREG11                          = 0x0043,\n    DW_FRAME_FREG12                          = 0x0044,\n    DW_FRAME_FREG13                          = 0x0045,\n    DW_FRAME_FREG14                          = 0x0046,\n    DW_FRAME_FREG15                          = 0x0047,\n    DW_FRAME_FREG16                          = 0x0048,\n    DW_FRAME_FREG17                          = 0x0049,\n    DW_FRAME_FREG18                          = 0x0050,\n    DW_FRAME_FREG19                          = 0x0051,\n    DW_FRAME_FREG20                          = 0x0052,\n    DW_FRAME_FREG21                          = 0x0053,\n    DW_FRAME_FREG22                          = 0x0054,\n    DW_FRAME_FREG23                          = 0x0055,\n    DW_FRAME_FREG24                          = 0x0056,\n    DW_FRAME_FREG25                          = 0x0057,\n    DW_FRAME_FREG26                          = 0x0058,\n    DW_FRAME_FREG27                          = 0x0059,\n    DW_FRAME_FREG28                          = 0x0060,\n    DW_FRAME_FREG29                          = 0x0061,\n    DW_FRAME_FREG30                          = 0x0062,\n    DW_FRAME_FREG31                          = 0x0063,\n    DW_FRAME_FREG32                          = 0x0064,\n    DW_FRAME_FREG33                          = 0x0065,\n    DW_FRAME_FREG34                          = 0x0066,\n    DW_FRAME_FREG35                          = 0x0067,\n    DW_FRAME_FREG36                          = 0x0068,\n    DW_FRAME_FREG37                          = 0x0069,\n    DW_FRAME_FREG38                          = 0x0070,\n    DW_FRAME_FREG39                          = 0x0071,\n    DW_FRAME_FREG40                          = 0x0072,\n    DW_FRAME_FREG41                          = 0x0073,\n    DW_FRAME_FREG42                          = 0x0074,\n    DW_FRAME_FREG43                          = 0x0075,\n    DW_FRAME_FREG44                          = 0x0076,\n    DW_FRAME_FREG45                          = 0x0077,\n    DW_FRAME_FREG46                          = 0x0078,\n    DW_FRAME_FREG47                          = 0x0079,\n    DW_FRAME_FREG48                          = 0x0080,\n    DW_FRAME_FREG49                          = 0x0081,\n    DW_FRAME_FREG50                          = 0x0082,\n    DW_FRAME_FREG51                          = 0x0083,\n    DW_FRAME_FREG52                          = 0x0084,\n    DW_FRAME_FREG53                          = 0x0085,\n    DW_FRAME_FREG54                          = 0x0086,\n    DW_FRAME_FREG55                          = 0x0087,\n    DW_FRAME_FREG56                          = 0x0088,\n    DW_FRAME_FREG57                          = 0x0089,\n    DW_FRAME_FREG58                          = 0x0090,\n    DW_FRAME_FREG59                          = 0x0091,\n    DW_FRAME_FREG60                          = 0x0092,\n    DW_FRAME_FREG61                          = 0x0093,\n    DW_FRAME_FREG62                          = 0x0094,\n    DW_FRAME_FREG63                          = 0x0095,\n    DW_FRAME_FREG64                          = 0x0096,\n    DW_FRAME_FREG65                          = 0x0097,\n    DW_FRAME_FREG66                          = 0x0098,\n    DW_FRAME_FREG67                          = 0x0099,\n    DW_FRAME_FREG68                          = 0x0100,\n    DW_FRAME_FREG69                          = 0x0101,\n    DW_FRAME_FREG70                          = 0x0102,\n    DW_FRAME_FREG71                          = 0x0103,\n    DW_FRAME_FREG72                          = 0x0104,\n    DW_FRAME_FREG73                          = 0x0105,\n    DW_FRAME_FREG74                          = 0x0106,\n    DW_FRAME_FREG75                          = 0x0107,\n    DW_FRAME_FREG76                          = 0x0108,\n    DW_FRAME_HIGHEST_NORMAL_REGISTER         = 0x0188\n};\n\nenum Dwarf_CHILDREN_e {\n    DW_CHILDREN_no                           = 0x0000,\n    DW_CHILDREN_yes                          = 0x0001\n};\n\nenum Dwarf_ADDR_e {\n    DW_ADDR_none                             = 0x0000\n};\n#endif /* __DWARF_NAMES_ENUM_H__ */\n\n/* END FILE */\n", "/* Automatically generated, do not edit. */\n/* Generated sourcedate  2020-10-11 11:34:27-07:00   */\n\n/* BEGIN FILE */\n\n/* define DWARF_PRINT_PREFIX before this\n   point if you wish to.  */\n#ifndef DWARF_PRINT_PREFIX\n#define DWARF_PRINT_PREFIX dwarf_\n#endif\n#define dw_glue(x,y) x##y\n#define dw_glue2(x,y) dw_glue(x,y)\n#define DWPREFIX(x) dw_glue2(DWARF_PRINT_PREFIX,x)\nint DWPREFIX(get_TAG_name) (unsigned int, const char **);\nint DWPREFIX(get_children_name) (unsigned int, const char **);\nint DWPREFIX(get_FORM_name) (unsigned int, const char **);\nint DWPREFIX(get_AT_name) (unsigned int, const char **);\nint DWPREFIX(get_OP_name) (unsigned int, const char **);\nint DWPREFIX(get_ATE_name) (unsigned int, const char **);\nint DWPREFIX(get_DEFAULTED_name) (unsigned int, const char **);\nint DWPREFIX(get_IDX_name) (unsigned int, const char **);\nint DWPREFIX(get_LLEX_name) (unsigned int, const char **);\nint DWPREFIX(get_LLE_name) (unsigned int, const char **);\nint DWPREFIX(get_RLE_name) (unsigned int, const char **);\nint DWPREFIX(get_GNUIVIS_name) (unsigned int, const char **);\nint DWPREFIX(get_GNUIKIND_name) (unsigned int, const char **);\nint DWPREFIX(get_UT_name) (unsigned int, const char **);\nint DWPREFIX(get_SECT_name) (unsigned int, const char **);\nint DWPREFIX(get_DS_name) (unsigned int, const char **);\nint DWPREFIX(get_END_name) (unsigned int, const char **);\nint DWPREFIX(get_ATCF_name) (unsigned int, const char **);\nint DWPREFIX(get_ACCESS_name) (unsigned int, const char **);\nint DWPREFIX(get_VIS_name) (unsigned int, const char **);\nint DWPREFIX(get_VIRTUALITY_name) (unsigned int, const char **);\nint DWPREFIX(get_LANG_name) (unsigned int, const char **);\nint DWPREFIX(get_ID_name) (unsigned int, const char **);\nint DWPREFIX(get_CC_name) (unsigned int, const char **);\nint DWPREFIX(get_INL_name) (unsigned int, const char **);\nint DWPREFIX(get_ORD_name) (unsigned int, const char **);\nint DWPREFIX(get_DSC_name) (unsigned int, const char **);\nint DWPREFIX(get_LNCT_name) (unsigned int, const char **);\nint DWPREFIX(get_LNS_name) (unsigned int, const char **);\nint DWPREFIX(get_LNE_name) (unsigned int, const char **);\nint DWPREFIX(get_ISA_name) (unsigned int, const char **);\nint DWPREFIX(get_MACRO_name) (unsigned int, const char **);\nint DWPREFIX(get_MACINFO_name) (unsigned int, const char **);\nint DWPREFIX(get_CFA_name) (unsigned int, const char **);\nint DWPREFIX(get_EH_name) (unsigned int, const char **);\nint DWPREFIX(get_FRAME_name) (unsigned int, const char **);\nint DWPREFIX(get_CHILDREN_name) (unsigned int, const char **);\nint DWPREFIX(get_ADDR_name) (unsigned int, const char **);\n\n/* END FILE */\n", "/*\n\n  Copyright (C) 2000-2010 Silicon Graphics, Inc.  All Rights Reserved.\n  Portions Copyright 2007-2010 Sun Microsystems, Inc. All rights reserved.\n  Portions Copyright 2008-2018 David Anderson. All rights reserved.\n  Portions Copyright 2008-2010 Arxan Technologies, Inc. All rights reserved.\n  Portions Copyright 2010-2012 SN Systems Ltd. All rights reserved.\n\n  This program is free software; you can redistribute it\n  and/or modify it under the terms of version 2.1 of the\n  GNU Lesser General Public License as published by the Free\n  Software Foundation.\n\n  This program is distributed in the hope that it would be\n  useful, but WITHOUT ANY WARRANTY; without even the implied\n  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n  PURPOSE.\n\n  Further, this software is distributed without any warranty\n  that it is free of the rightful claim of any third person\n  regarding infringement or the like.  Any license provided\n  herein, whether implied or otherwise, applies only to this\n  software file.  Patent licenses, if any, provided herein\n  do not apply to combinations of this program with other\n  software, or any other product whatsoever.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this program; if not, write the\n  Free Software Foundation, Inc., 51 Franklin Street - Fifth\n  Floor, Boston MA 02110-1301, USA.\n\n*/\n\n\n#ifndef _LIBDWARF_H\n#define _LIBDWARF_H\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n/*\n    libdwarf.h\n    $Revision: #9 $ $Date: 2008/01/17 $\n\n    For libdwarf producers and consumers\n\n    The interface is defined as having 8-byte signed and unsigned\n    values so it can handle 64-or-32bit target on 64-or-32bit host.\n    Dwarf_Ptr is the native size: it represents pointers on\n    the host machine (not the target!).\n\n    This contains declarations for types and all producer\n    and consumer functions.\n\n    Function declarations are written on a single line each here\n    so one can use grep  to each declaration in its entirety.\n    The declarations are a little harder to read this way, but...\n\n    The seeming duplication of the Elf typedef allows\n    both verification we have the right struct name (when\n    libelf.h included before this) and\n    creation of a local handle so we have the struct pointer\n    here (if libelf.h is not included before this file).\n\n*/\n\ntypedef struct _Elf Elf;\ntypedef struct _Elf* dwarf_elf_handle;\n\n/* To enable printing with printf regardless of the\n   actual underlying data type, we define the DW_PR_xxx macros.\n   To ensure uses of DW_PR_DUx or DW_PR_DSx look the way you want\n   ensure the right DW_PR_XZEROS define is uncommented.\n*/\n/*#define DW_PR_XZEROS \"\" */\n#define DW_PR_XZEROS \"08\"\n\ntypedef unsigned long long Dwarf_Unsigned;\ntypedef signed   long long Dwarf_Signed;\ntypedef unsigned long long Dwarf_Off;\ntypedef unsigned long long Dwarf_Addr;\n    /*  Dwarf_Bool as int is wasteful, but for compatibility\n        it must stay as int, not unsigned char. */\ntypedef int                Dwarf_Bool;   /* boolean type */\ntypedef unsigned short     Dwarf_Half;   /* 2 byte unsigned value */\ntypedef unsigned char      Dwarf_Small;  /* 1 byte unsigned value */\n/*  If sizeof(Dwarf_Half) is greater than 2\n    we believe libdwarf still works properly. */\n\n#if defined(_WIN32) && defined(HAVE_NONSTANDARD_PRINTF_64_FORMAT)\n#define DW_PR_DUx \"I64x\"\n#define DW_PR_DSx \"I64x\"\n#define DW_PR_DUu \"I64u\"\n#define DW_PR_DSd \"I64d\"\n#else\n#define DW_PR_DUx \"llx\"\n#define DW_PR_DSx \"llx\"\n#define DW_PR_DUu \"llu\"\n#define DW_PR_DSd \"lld\"\n#endif /* DW_PR defines */\n\ntypedef void*        Dwarf_Ptr;          /* host machine pointer */\n\n/*  DWARF5: a container for a DW_FORM_data16 data item.\n    We have no integer types suitable so this special\n    struct is used instead.  It is up to consumers/producers\n    to deal with the contents.\n    New October 18, 2017 .  */\ntypedef struct Dwarf_Form_Data16_s {\n    unsigned char fd_data[16];\n} Dwarf_Form_Data16;\n\n\n\n/* Used for signatures where ever they appear.\n   It is not a string, it\n   is 8 bytes of a signature one would use to find\n   a type unit. See dwarf_formsig8()\n\n   Sometimes it is used in calculations as\n   Dwarf_Unsigned, but that is done inside libdwarf\n   and the endianness question makes it a bit sketchy.\n*/\nstruct Dwarf_Sig8_s  {\n    char signature[8];\n};\ntypedef struct Dwarf_Sig8_s Dwarf_Sig8;\n\n/* Contains info on an uninterpreted block of data\n   Used with certain frame information functions and\n   also used with DW_FORM_block<>.\n*/\ntypedef struct {\n    Dwarf_Unsigned  bl_len;         /* length of block bl_data points at */\n    Dwarf_Ptr       bl_data;        /* uninterpreted data */\n\n    /*  See libdwarf.h DW_LKIND*  */\n    Dwarf_Small     bl_from_loclist;\n\n    /* Section (not CU) offset which 'data' comes from. */\n    Dwarf_Unsigned  bl_section_offset;\n} Dwarf_Block;\n\n\n/*  NEW October 2015.  */\n/*  This provides access to Dwarf_Locdesc_c, a single\n    location description */\nstruct  Dwarf_Locdesc_c_s;\ntypedef struct Dwarf_Locdesc_c_s * Dwarf_Locdesc_c;\n\n/*  NEW October 2015.  */\n/*  This provides access to Dwarf_Locdesc_c, a single\n    location list entry (or for a locexpr, the fake\n    Loc_Head for the locexpr) */\nstruct Dwarf_Loc_Head_c_s;\ntypedef struct Dwarf_Loc_Head_c_s * Dwarf_Loc_Head_c;\n\n\n/*  NEW July 2020.  */\n/*  This provides access to data from sections\n    .debug_gnu_pubtypes or .debug_gnu_pubnames.\n    These are not standard DWARF, and can appear\n    with gcc -gdwarf-5\n    */\nstruct Dwarf_Gnu_Index_Head_s;\ntypedef struct Dwarf_Gnu_Index_Head_s * Dwarf_Gnu_Index_Head;\n\n\n/* NEW November 2015. For DWARF5 .debug_macro section */\nstruct Dwarf_Macro_Context_s;\ntypedef struct Dwarf_Macro_Context_s * Dwarf_Loc_Macro_Context;\n\n/*  NEW September 2016. Allows easy access to DW_AT_discr_list\n    array of discriminant values. Input in blockpointer\n    is a block with a list of uleb or sleb numbers\n    (all one or the other, lebunsignedflag instructs\n    how to read the leb values properly) */\ntypedef struct Dwarf_Dsc_Head_s * Dwarf_Dsc_Head;\n\n/*  Location record. Records up to 2 operand values.\n    Not usable with DWARF5 or DWARF4 with location\n    operator  extensions. */\ntypedef struct {\n    Dwarf_Small     lr_atom;        /* location operation */\n    Dwarf_Unsigned  lr_number;      /* operand */\n    Dwarf_Unsigned  lr_number2;     /* for OP_BREGx  and DW_OP_GNU_const_type*/\n    Dwarf_Unsigned  lr_offset;      /* offset in locexpr for OP_BRA etc */\n} Dwarf_Loc;\n\n\n/* Location description. DWARF 2,3,4.\n   When this is from a split-dwarf loclist (.debug_loc.dwo)\n   and no tied object is present\n   then ld_lowpc and ld_highpc are actually indices in\n   the .debug_addr section of the tied object).\n   If there is a tied object then these fields are actuall\n   addresses and DW_AT_addr_base in the skeleton CU DIE applies to\n   that .debug_addr.\n\n   Location record. Records up to 2 operand values.\n   Not usable with DWARF5 or DWARF4 with extensions.\n\n   If from DWARF2,3,4 non-split dwarf then things operate as\n   in DWARF2.\n   See dwarf_get_loclist_b() and the other related\n   new functions that\n   avoid using public structures Dwarf_Loc and Dwarf_Locdesc.\n*/\ntypedef struct {\n    /*  Beginning of active range. This is actually an offset\n        of an applicable base address, not a pc value.  */\n    Dwarf_Addr      ld_lopc;\n\n    /*  End of active range. This is actually an offset\n        of an applicable base address, not a pc value.  */\n    Dwarf_Addr      ld_hipc;\n\n    Dwarf_Half      ld_cents;       /* count of location records */\n    Dwarf_Loc*      ld_s;           /* pointer to list of same */\n\n    /*  non-0 if loclist, 1 if non-split (dwarf 2,3,4) */\n    Dwarf_Small     ld_from_loclist;\n\n    Dwarf_Unsigned  ld_section_offset; /* Section (not CU) offset\n        where loc-expr begins*/\n} Dwarf_Locdesc;\n\n/*  First appears in DWARF3, and only ranges entries exist.\n    The dwr_addr1/addr2 data is either an offset (DW_RANGES_ENTRY)\n    or an address (dwr_addr2 in DW_RANGES_ADDRESS_SELECTION) or\n    both are zero (DW_RANGES_END).\n    For DWARF5 each table starts with a header\n    followed by range list entries defined\n    as here.\n*/\nenum Dwarf_Ranges_Entry_Type { DW_RANGES_ENTRY,\n    DW_RANGES_ADDRESS_SELECTION,\n    DW_RANGES_END\n};\ntypedef struct {\n    Dwarf_Addr dwr_addr1;\n    Dwarf_Addr dwr_addr2;\n    enum Dwarf_Ranges_Entry_Type  dwr_type;\n} Dwarf_Ranges;\n\n/* Frame description instructions expanded.\n*/\ntypedef struct {\n    Dwarf_Small     fp_base_op;\n    Dwarf_Small     fp_extended_op;\n    Dwarf_Half      fp_register;\n\n    /*  Value may be signed, depends on op.\n        Any applicable data_alignment_factor has\n        not been applied, this is the  raw offset. */\n    Dwarf_Unsigned  fp_offset;\n    Dwarf_Off       fp_instr_offset;\n} Dwarf_Frame_Op; /* DWARF2 */\n\n/*  ***IMPORTANT NOTE, TARGET DEPENDENCY ****\n    DW_REG_TABLE_SIZE must be at least as large as\n    the number of registers\n    (DW_FRAME_LAST_REG_NUM) as defined in dwarf.h\n    Preferably identical to DW_FRAME_LAST_REG_NUM.\n    Ensure [0-DW_REG_TABLE_SIZE] does not overlap\n    DW_FRAME_UNDEFINED_VAL or DW_FRAME_SAME_VAL.\n    Also ensure DW_FRAME_REG_INITIAL_VALUE is set to what\n    is appropriate to your cpu.\n    For various CPUs  DW_FRAME_UNDEFINED_VAL is correct\n    as the value for DW_FRAME_REG_INITIAL_VALUE.\n\n    For consumer apps, this can be set dynamically: see\n    dwarf_set_frame_rule_table_size(); */\n#ifndef DW_REG_TABLE_SIZE\n#define DW_REG_TABLE_SIZE  66\n#endif\n\n/* For MIPS, DW_FRAME_SAME_VAL is the correct default value\n   for a frame register value. For other CPUS another value\n   may be better, such as DW_FRAME_UNDEFINED_VAL.\n   See dwarf_set_frame_rule_table_size\n*/\n#ifndef DW_FRAME_REG_INITIAL_VALUE\n#define DW_FRAME_REG_INITIAL_VALUE DW_FRAME_SAME_VAL\n#endif\n\n/* Taken as meaning 'undefined value', this is not\n   a column or register number.\n   Only present at libdwarf runtime in the consumer\n   interfaces. Never on disk.\n   DW_FRAME_* Values present on disk are in dwarf.h\n   Ensure this is > DW_REG_TABLE_SIZE (the reg table\n   size is changeable at runtime with the *reg3() interfaces,\n   and this value must be greater than the reg table size).\n*/\n#define DW_FRAME_UNDEFINED_VAL          1034\n\n/* Taken as meaning 'same value' as caller had, not a column\n   or register number.\n   Only present at libdwarf runtime in the consumer\n   interfaces. Never on disk.\n   DW_FRAME_* Values present on disk are in dwarf.h\n   Ensure this is > DW_REG_TABLE_SIZE (the reg table\n   size is changeable at runtime with the *reg3() interfaces,\n   and this value must be greater than the reg table size).\n*/\n#define DW_FRAME_SAME_VAL               1035\n\n/* For DWARF3 consumer interfaces, make the CFA a column with no\n   real table number.  This is what should have been done\n   for the DWARF2 interfaces.  This actually works for\n   both DWARF2 and DWARF3, but see the libdwarf documentation\n   on Dwarf_Regtable3 and  dwarf_get_fde_info_for_reg3()\n   and  dwarf_get_fde_info_for_all_regs3()\n   Do NOT use this with the older dwarf_get_fde_info_for_reg()\n   or dwarf_get_fde_info_for_all_regs() consumer interfaces.\n   Must be higher than any register count for *any* ABI\n   (ensures maximum applicability with minimum effort).\n   Ensure this is > DW_REG_TABLE_SIZE (the reg table\n   size is changeable at runtime with the *reg3() interfaces,\n   and this value must be greater than the reg table size).\n   Only present at libdwarf runtime in the consumer\n   interfaces. Never on disk.\n*/\n#define DW_FRAME_CFA_COL3               1436\n\n/* The following are all needed to evaluate DWARF3 register rules.\n*/\n#define DW_EXPR_OFFSET 0  /* DWARF2 only sees this. */\n#define DW_EXPR_VAL_OFFSET 1\n#define DW_EXPR_EXPRESSION 2\n#define DW_EXPR_VAL_EXPRESSION 3\n\ntypedef struct Dwarf_Regtable_Entry_s {\n    /*  For each index i (naming a hardware register with dwarf number\n        i) the following is true and defines the value of that register:\n\n        If dw_regnum is Register DW_FRAME_UNDEFINED_VAL\n            it is not DWARF register number but\n            a place holder indicating the register has no defined value.\n        If dw_regnum is Register DW_FRAME_SAME_VAL\n            it  is not DWARF register number but\n            a place holder indicating the register has the same\n            value in the previous frame.\n\n            DW_FRAME_UNDEFINED_VAL, DW_FRAME_SAME_VAL are\n            only present at libdwarf runtime. Never on disk.\n            DW_FRAME_* Values present on disk are in dwarf.h\n\n        Otherwise: the register number is a DWARF register number\n            (see ABI documents for how this translates to hardware/\n            software register numbers in the machine hardware)\n            and the following applies:\n\n            if dw_value_type == DW_EXPR_OFFSET (the only case for dwarf2):\n                If dw_offset_relevant is non-zero, then\n                    the value is stored at at the address CFA+N where\n                    N is a signed offset.\n                    Rule: Offset(N)\n                If dw_offset_relevant is zero, then the value of the register\n                    is the value of (DWARF) register number dw_regnum.\n                    Rule: register(F)\n            Other values of dw_value_type are an error.\n    */\n    Dwarf_Small         dw_offset_relevant;\n\n    /* For DWARF2, always 0 */\n    Dwarf_Small         dw_value_type;\n\n    Dwarf_Half          dw_regnum;\n\n    /*  The data type here should  the larger of Dwarf_Addr\n        and Dwarf_Unsigned and Dwarf_Signed. */\n    Dwarf_Addr          dw_offset;\n} Dwarf_Regtable_Entry;\n\ntypedef struct Dwarf_Regtable_s {\n    struct Dwarf_Regtable_Entry_s rules[DW_REG_TABLE_SIZE];\n} Dwarf_Regtable;\n\n/* opaque type. Functional interface shown later. */\nstruct Dwarf_Reg_value3_s;\ntypedef struct Dwarf_Reg_value3_s Dwarf_Reg_Value3;\n\ntypedef struct Dwarf_Regtable_Entry3_s {\n/*  For each index i (naming a hardware register with dwarf number\n    i) the following is true and defines the value of that register:\n\n        If dw_regnum is Register DW_FRAME_UNDEFINED_VAL\n            it is not DWARF register number but\n            a place holder indicating the register has no defined value.\n        If dw_regnum is Register DW_FRAME_SAME_VAL\n            it  is not DWARF register number but\n            a place holder indicating the register has the same\n            value in the previous frame.\n\n            DW_FRAME_UNDEFINED_VAL, DW_FRAME_SAME_VAL and\n            DW_FRAME_CFA_COL3 are only present at libdwarf runtime.\n            Never on disk.\n            DW_FRAME_* Values present on disk are in dwarf.h\n            Because DW_FRAME_SAME_VAL and DW_FRAME_UNDEFINED_VAL\n            and DW_FRAME_CFA_COL3 are definable at runtime\n            consider the names symbolic in this comment, not absolute.\n\n        Otherwise: the register number is a DWARF register number\n            (see ABI documents for how this translates to hardware/\n            software register numbers in the machine hardware)\n            and the following applies:\n\n        In a cfa-defining entry (rt3_cfa_rule) the regnum is the\n        CFA 'register number'. Which is some 'normal' register,\n        not DW_FRAME_CFA_COL3, nor DW_FRAME_SAME_VAL, nor\n        DW_FRAME_UNDEFINED_VAL.\n\n        If dw_value_type == DW_EXPR_OFFSET (the only  possible case for\n        dwarf2):\n            If dw_offset_relevant is non-zero, then\n                the value is stored at at the address\n                CFA+N where N is a signed offset.\n                dw_regnum is the cfa register rule which means\n                one ignores dw_regnum and uses the CFA appropriately.\n                So dw_offset_or_block_len is a signed value, really,\n                and must be printed/evaluated as such.\n                Rule: Offset(N)\n            If dw_offset_relevant is zero, then the value of the register\n                is the value of (DWARF) register number dw_regnum.\n                Rule: register(R)\n        If dw_value_type  == DW_EXPR_VAL_OFFSET\n            the  value of this register is CFA +N where N is a signed offset.\n            dw_regnum is the cfa register rule which means\n            one ignores dw_regnum and uses the CFA appropriately.\n            Rule: val_offset(N)\n        If dw_value_type  == DW_EXPR_EXPRESSION\n            The value of the register is the value at the address\n            computed by evaluating the DWARF expression E.\n            Rule: expression(E)\n            The expression E byte stream is pointed to by dw_block_ptr.\n            The expression length in bytes is given by\n            dw_offset_or_block_len.\n        If dw_value_type  == DW_EXPR_VAL_EXPRESSION\n            The value of the register is the value\n            computed by evaluating the DWARF expression E.\n            Rule: val_expression(E)\n            The expression E byte stream is pointed to by dw_block_ptr.\n            The expression length in bytes is given by\n            dw_offset_or_block_len.\n        Other values of dw_value_type are an error.\n*/\n    Dwarf_Small         dw_offset_relevant;\n    Dwarf_Small         dw_value_type;\n    Dwarf_Half          dw_regnum;\n    Dwarf_Unsigned      dw_offset_or_block_len;\n    Dwarf_Ptr           dw_block_ptr;\n\n}Dwarf_Regtable_Entry3;\n\n/*  For the DWARF3 version, moved the DW_FRAME_CFA_COL\n    out of the array and into its own struct.\n    Having it part of the array is not very easy to work\n    with from a portability point of view: changing\n    the number for every architecture is a pain (if one fails\n    to set it correctly a register rule gets clobbered when\n    setting CFA).  With MIPS it just happened to be easy to use\n    DW_FRAME_CFA_COL (it was wrong conceptually but it was easy...).\n\n    rt3_rules and rt3_reg_table_size must be filled in before\n    calling libdwarf.  Filled in with a pointer to an array\n    (pointer and array  set up by the calling application)\n    of rt3_reg_table_size Dwarf_Regtable_Entry3_s structs.\n    libdwarf does not allocate or deallocate space for the\n    rules, you must do so.   libdwarf will initialize the\n    contents rules array, you do not need to do so (though\n    if you choose to initialize the array somehow that is ok:\n    libdwarf will overwrite your initializations with its own).\n\n*/\ntypedef struct Dwarf_Regtable3_s {\n    struct Dwarf_Regtable_Entry3_s   rt3_cfa_rule;\n\n    Dwarf_Half                       rt3_reg_table_size;\n    struct Dwarf_Regtable_Entry3_s * rt3_rules;\n} Dwarf_Regtable3;\n\n\n/*  Use for DW_EPXR_STANDARD., DW_EXPR_VAL_OFFSET.\n    Returns DW_DLV_OK if the value is available.\n    If DW_DLV_OK returns the regnum and offset thru the pointers\n    (which the consumer must use appropriately).\n*/\nint dwarf_frame_get_reg_register(struct Dwarf_Regtable_Entry3_s *reg_in,\n    Dwarf_Small *offset_relevant,\n    Dwarf_Half *regnum_out,\n    Dwarf_Signed *offset_out);\n\n/*  Use for DW_EXPR_EXPRESSION, DW_EXPR_VAL_EXPRESSION.\n    Returns DW_DLV_OK if the value is available.\n    The caller must pass in the address of a valid\n    Dwarf_Block (the caller need not initialize it).\n*/\nint dwarf_frame_get_reg_expression(struct Dwarf_Regtable_Entry3_s *reg_in,\n    Dwarf_Block *block_out);\n\n\n/*  For DW_DLC_SYMBOLIC_RELOCATIONS output to caller\n    v2, adding drd_length: some relocations are 4 and\n    some 8 bytes (pointers are 8, section offsets 4) in\n    some dwarf environments. (MIPS relocations are all one\n    size in any given ABI.) Changing drd_type to an unsigned char\n    to keep struct size down.\n*/\nenum Dwarf_Rel_Type {\n    dwarf_drt_none,        /* Should not get to caller */\n    dwarf_drt_data_reloc,  /* Simple normal relocation. */\n    dwarf_drt_segment_rel, /* Special reloc, exceptions. */\n    /* dwarf_drt_first_of_length_pair  and drt_second\n        are for for the  .word end - begin case. */\n    dwarf_drt_first_of_length_pair,\n    dwarf_drt_second_of_length_pair\n};\n\ntypedef struct Dwarf_P_Marker_s * Dwarf_P_Marker;\nstruct Dwarf_P_Marker_s {\n    Dwarf_Unsigned ma_marker;\n    Dwarf_Unsigned ma_offset;\n};\n\ntypedef struct Dwarf_Relocation_Data_s  * Dwarf_Relocation_Data;\nstruct Dwarf_Relocation_Data_s {\n    unsigned char drd_type;   /* Cast to/from Dwarf_Rel_Type\n        to keep size small in struct. */\n    unsigned char drd_length; /* Length in bytes of data being\n        relocated. 4 for 32bit data,\n        8 for 64bit data. */\n    Dwarf_Unsigned       drd_offset; /* Where the data to reloc is. */\n    Dwarf_Unsigned       drd_symbol_index;\n};\n\ntypedef struct Dwarf_P_String_Attr_s  * Dwarf_P_String_Attr;\nstruct Dwarf_P_String_Attr_s {\n    Dwarf_Unsigned        sa_offset;  /* Offset of string attribute data */\n    Dwarf_Unsigned        sa_nbytes;\n};\n\n\n/* Opaque types for Consumer Library. */\ntypedef struct Dwarf_Debug_s*      Dwarf_Debug;\ntypedef struct Dwarf_Die_s*        Dwarf_Die;\ntypedef struct Dwarf_Line_s*       Dwarf_Line;\ntypedef struct Dwarf_Global_s*     Dwarf_Global;\ntypedef struct Dwarf_Func_s*       Dwarf_Func;\ntypedef struct Dwarf_Type_s*       Dwarf_Type;\ntypedef struct Dwarf_Var_s*        Dwarf_Var;\ntypedef struct Dwarf_Weak_s*       Dwarf_Weak;\ntypedef struct Dwarf_Error_s*      Dwarf_Error;\ntypedef struct Dwarf_Attribute_s*  Dwarf_Attribute;\ntypedef struct Dwarf_Abbrev_s*     Dwarf_Abbrev;\ntypedef struct Dwarf_Fde_s*        Dwarf_Fde;\ntypedef struct Dwarf_Cie_s*        Dwarf_Cie;\ntypedef struct Dwarf_Arange_s*     Dwarf_Arange;\ntypedef struct Dwarf_Gdbindex_s*   Dwarf_Gdbindex;\nstruct Dwarf_Xu_Index_Header_s;\ntypedef struct Dwarf_Xu_Index_Header_s  *Dwarf_Xu_Index_Header;\nstruct Dwarf_Line_Context_s;\ntypedef struct Dwarf_Line_Context_s     *Dwarf_Line_Context;\nstruct Dwarf_Macro_Context_s;\ntypedef struct Dwarf_Macro_Context_s    *Dwarf_Macro_Context;\nstruct Dwarf_Dnames_Head_s;\ntypedef struct Dwarf_Dnames_Head_s      *Dwarf_Dnames_Head;\n\n\n/* Opaque types for Producer Library. */\ntypedef struct Dwarf_P_Debug_s*       Dwarf_P_Debug;\ntypedef struct Dwarf_P_Die_s*         Dwarf_P_Die;\ntypedef struct Dwarf_P_Attribute_s*   Dwarf_P_Attribute;\ntypedef struct Dwarf_P_Fde_s*         Dwarf_P_Fde;\ntypedef struct Dwarf_P_Expr_s*        Dwarf_P_Expr;\ntypedef Dwarf_Unsigned                Dwarf_Tag;\n\n\n/* error handler function\n*/\ntypedef void  (*Dwarf_Handler)(Dwarf_Error /*error*/, Dwarf_Ptr /*errarg*/);\n\n\n/* Begin libdwarf Object File Interface declarations.\n\nAs of February 2008 there are multiple dwarf_reader object access\ninitialization methods available:\nThe traditional dwarf_elf_init() and dwarf_init()  and dwarf_finish()\n    which assume libelf and POSIX file access.\nAn object-file and library agnostic dwarf_object_init() and dwarf_object_finish()\n    which allow the coder to provide object access routines\n    abstracting away the elf interface.  So there is no dependence in the\n    reader code on the object format and no dependence on libelf.\n    See the code in dwarf_elf_access.c  and dwarf_original_elf_init.c\n    to see an example of initializing the structures mentioned below.\n\nProjects using dwarf_elf_init() or dwarf_init() can ignore\nthe Dwarf_Obj_Access* structures entirely as all these details\nare completed for you.\n\nAs of March 2017 additional\nfunctions dwarf_elf_init_b\nand dwarf_init_b\nand dwarf_object_init_b\nadd a groupnumber argument so DWARF5\nsplit-dwarf sections can be accessed.\n*/\n\ntypedef struct Dwarf_Obj_Access_Interface_s   Dwarf_Obj_Access_Interface;\ntypedef struct Dwarf_Obj_Access_Methods_s     Dwarf_Obj_Access_Methods;\ntypedef struct Dwarf_Obj_Access_Section_s     Dwarf_Obj_Access_Section;\n\n\n/*  Used in the get_section interface function\n    in Dwarf_Obj_Access_Section_s.  Since libdwarf\n    depends on standard DWARF section names an object\n    format that has no such names (but has some\n    method of setting up 'sections equivalents')\n    must arrange to return standard DWARF section\n    names in the 'name' field.  libdwarf does\n    not free the strings in 'name'. */\nstruct Dwarf_Obj_Access_Section_s {\n    /*  addr is the virtual address of the first byte of\n        the section data.  Usually zero when the address\n        makes no sense for a given section. */\n    Dwarf_Addr     addr;\n\n    /* Section type. */\n    Dwarf_Unsigned type;\n\n    /* Size in bytes of the section. */\n    Dwarf_Unsigned size;\n\n    /*  Having an accurate section name makes debugging of libdwarf easier.\n        and is essential to find the .debug_ sections.  */\n    const char*    name;\n    /*  Set link to zero if it is meaningless.  If non-zero\n        it should be a link to a rela section or from symtab\n        to strtab.  In Elf it is sh_link. */\n    Dwarf_Unsigned link;\n\n    /*  The section header index of the section to which the\n        relocation applies. In Elf it is sh_info. */\n    Dwarf_Unsigned info;\n\n    /*  Elf sections that are tables have a non-zero entrysize so\n        the count of entries can be calculated even without\n        the right structure definition. If your object format\n        does not have this data leave this zero. */\n    Dwarf_Unsigned entrysize;\n};\n\n/*  Returned by the get_endianness function in\n    Dwarf_Obj_Access_Methods_s. */\ntypedef enum {\n    DW_OBJECT_MSB,\n    DW_OBJECT_LSB\n} Dwarf_Endianness;\n\n/*  The functions we need to access object data from libdwarf are declared here.\n\n    In these function pointer declarations\n    'void *obj' is intended to be a pointer (the object field in\n    Dwarf_Obj_Access_Interface_s)\n    that hides the library-specific and object-specific data that makes\n    it possible to handle multiple object formats and multiple libraries.\n    It's not required that one handles multiple such in a single libdwarf\n    archive/shared-library (but not ruled out either).\n    See  dwarf_elf_object_access_internals_t and dwarf_elf_access.c\n    for an example.\n\n*/\nstruct Dwarf_Obj_Access_Methods_s {\n    /*\n        get_section_info\n\n        Get address, size, and name info about a section.\n\n        Parameters\n        section_index - Zero-based index.\n        return_section - Pointer to a structure in which section info\n            will be placed.   Caller must provide a valid pointer to a\n            structure area.  The structure's contents will be overwritten\n            by the call to get_section_info.\n        error - A pointer to an integer in which an error code may be stored.\n\n        Return\n        DW_DLV_OK - Everything ok.\n        DW_DLV_ERROR - Error occurred. Use 'error' to determine the\n            libdwarf defined error.\n        DW_DLV_NO_ENTRY - No such section.  */\n    int    (*get_section_info)(void* obj, Dwarf_Half section_index,\n        Dwarf_Obj_Access_Section* return_section, int* error);\n    /*\n        get_byte_order\n\n        Get whether the object file represented by this interface is big-endian\n        (DW_OBJECT_MSB) or little endian (DW_OBJECT_LSB).\n\n        Parameters\n        obj - Equivalent to 'this' in OO languages.\n\n        Return\n        Endianness of object. Cannot fail.  */\n    Dwarf_Endianness  (*get_byte_order)(void* obj);\n    /*\n        get_length_size\n\n        Get the size of a length field in the underlying object file.\n        libdwarf currently supports * 4 and 8 byte sizes, but may\n        support larger in the future.\n        Perhaps the return type should be an enumeration?\n\n        Parameters\n        obj - Equivalent to 'this' in OO languages.\n\n        Return\n        Size of length. Cannot fail.  */\n    Dwarf_Small   (*get_length_size)(void* obj);\n    /*\n        get_pointer_size\n\n        Get the size of a pointer field in the underlying object file.\n        libdwarf currently supports  4 and 8 byte sizes.\n        Perhaps the return type should be an enumeration?\n\n        Return\n        Size of pointer. Cannot fail.  */\n    Dwarf_Small   (*get_pointer_size)(void* obj);\n    /*\n        get_section_count\n\n        Get the number of sections in the object file.\n\n        Parameters\n\n        Return\n        Number of sections */\n    Dwarf_Unsigned  (*get_section_count)(void* obj);\n    /*\n        load_section\n\n        Get a pointer to an array of bytes that represent the section.\n\n        Parameters\n        section_index - Zero-based index.\n        return_data - The address of a pointer to which the section data block\n            will be assigned.\n        error - Pointer to an integer for returning libdwarf-defined\n            error numbers.\n\n        Return\n        DW_DLV_OK - No error.\n        DW_DLV_ERROR - Error. Use 'error' to indicate a libdwarf-defined\n            error number.\n        DW_DLV_NO_ENTRY - No such section.  */\n    int    (*load_section)(void* obj, Dwarf_Half section_index,\n        Dwarf_Small** return_data, int* error);\n\n    /**\n        relocate_a_section\n        If relocations are not supported leave this pointer NULL.\n\n        Get a pointer to an array of bytes that represent the section.\n\n        Parameters\n        section_index - Zero-based index of the section to be relocated.\n        error - Pointer to an integer for returning libdwarf-defined\n            error numbers.\n\n        Return\n        DW_DLV_OK - No error.\n        DW_DLV_ERROR - Error. Use 'error' to indicate a libdwarf-defined\n            error number.\n        DW_DLV_NO_ENTRY - No such section.  */\n    int    (*relocate_a_section)(void* obj, Dwarf_Half section_index,\n        Dwarf_Debug dbg,\n        int* error);\n\n};\n\n\n\n/*  These structures are allocated and deallocated by your code\n    when you are using the libdwarf Object File Interface\n    [dwarf_object_init and dwarf_object_finish)] directly.\n    dwarf_object_finish) does not free\n    struct Dwarf_Obj_Access_Interface_s or its content.\n    (libdwarf does record a pointer to this struct: you must\n    ensure that pointer remains valid for as long as\n    a libdwarf instance is open (meaning\n    after dwarf_init) and before dwarf_finish)).\n\n    If you are reading Elf objects and libelf use dwarf_init()\n    or dwarf_elf_init() which take care of these details.\n*/\nstruct Dwarf_Obj_Access_Interface_s {\n    /*  object is a void* as it hides the data the object access routines\n        need (which varies by library in use and object format).\n    */\n    void* object;\n    const Dwarf_Obj_Access_Methods * methods;\n};\n\n/* End libdwarf Object File Interface */\n\n/*\n    Dwarf_dealloc() alloc_type arguments.\n    Argument points to:\n*/\n#define DW_DLA_STRING          0x01     /* char* */\n#define DW_DLA_LOC             0x02     /* Dwarf_Loc */\n#define DW_DLA_LOCDESC         0x03     /* Dwarf_Locdesc */\n#define DW_DLA_ELLIST          0x04     /* Dwarf_Ellist (not used)*/\n#define DW_DLA_BOUNDS          0x05     /* Dwarf_Bounds (not used) */\n#define DW_DLA_BLOCK           0x06     /* Dwarf_Block */\n#define DW_DLA_DEBUG           0x07     /* Dwarf_Debug */\n#define DW_DLA_DIE             0x08     /* Dwarf_Die */\n#define DW_DLA_LINE            0x09     /* Dwarf_Line */\n#define DW_DLA_ATTR            0x0a     /* Dwarf_Attribute */\n#define DW_DLA_TYPE            0x0b     /* Dwarf_Type  (not used) */\n#define DW_DLA_SUBSCR          0x0c     /* Dwarf_Subscr (not used) */\n#define DW_DLA_GLOBAL          0x0d     /* Dwarf_Global */\n#define DW_DLA_ERROR           0x0e     /* Dwarf_Error */\n#define DW_DLA_LIST            0x0f     /* a list */\n#define DW_DLA_LINEBUF         0x10     /* Dwarf_Line* (not used) */\n#define DW_DLA_ARANGE          0x11     /* Dwarf_Arange */\n#define DW_DLA_ABBREV          0x12     /* Dwarf_Abbrev */\n#define DW_DLA_FRAME_OP        0x13     /* Dwarf_Frame_Op */\n#define DW_DLA_CIE             0x14     /* Dwarf_Cie */\n#define DW_DLA_FDE             0x15     /* Dwarf_Fde */\n#define DW_DLA_LOC_BLOCK       0x16     /* Dwarf_Loc */\n#define DW_DLA_FRAME_BLOCK     0x17     /* Dwarf_Frame Block (not used) */\n#define DW_DLA_FUNC            0x18     /* Dwarf_Func */\n#define DW_DLA_TYPENAME        0x19     /* Dwarf_Type */\n#define DW_DLA_VAR             0x1a     /* Dwarf_Var */\n#define DW_DLA_WEAK            0x1b     /* Dwarf_Weak */\n#define DW_DLA_ADDR            0x1c     /* Dwarf_Addr sized entries */\n#define DW_DLA_RANGES          0x1d     /* Dwarf_Ranges */\n/* 0x1e (30) to 0x34 (52) reserved for internal to libdwarf types. */\n#define DW_DLA_GNU_INDEX_HEAD  0x35     /* .debug_gnu_typenames/pubnames, 2020 */\n#define DW_DLA_RNGLISTS_HEAD   0x36     /* .debug_rnglists DW5 */\n#define DW_DLA_GDBINDEX        0x37     /* Dwarf_Gdbindex */\n#define DW_DLA_XU_INDEX        0x38     /* Dwarf_Xu_Index_Header */\n#define DW_DLA_LOC_BLOCK_C     0x39     /* Dwarf_Loc_c*/\n#define DW_DLA_LOCDESC_C       0x3a     /* Dwarf_Locdesc_c */\n#define DW_DLA_LOC_HEAD_C      0x3b     /* Dwarf_Loc_Head_c */\n#define DW_DLA_MACRO_CONTEXT   0x3c     /* Dwarf_Macro_Context */\n/*  0x3d (61) is for libdwarf internal use.               */\n#define DW_DLA_DSC_HEAD        0x3e     /* Dwarf_Dsc_Head */\n#define DW_DLA_DNAMES_HEAD     0x3f     /* Dwarf_Dnames_Head */\n#define DW_DLA_STR_OFFSETS     0x40     /* struct Dwarf_Str_Offsets_Table_s */\n\n/* The augmenter string for CIE */\n#define DW_CIE_AUGMENTER_STRING_V0              \"z\"\n\n/*  dwarf_init() 'access' argument values.\n    Used for reading/consuming DWARF, not\n    relevant to the producer portion of libdwarf.\n    None of the following three arguments do anything.\n    The following short set is useless.\n    Only DW_DLC_READ has a documented effect but...\n    it is useless and irrelevant as it means\n    'do the default'.\n    In the 1990's there was an option DW_DLC_MMAP\n    (deleted from libdwarf.h many years ago).\n    The old option libdwarf told IRIX libelf to mmap\n    the object file.\n*/\n#define DW_DLC_READ               0 /* Pointless. Ok to use. */\n#define DW_DLC_WRITE              1 /* DO NOT USE */\n#define DW_DLC_RDWR               2 /* DO NOT USE */\n\n/*  ===== the following DW_DLC options are for producing DWARF,\n    not used for reading/consuming DWARF. */\n/* dwarf_producer_init* access flag modifiers\n   No longer depends on compile-time settings for\n   how to produce 64bit offset. See DW_DLC_IRIX_OFFSET64.\n   Historic  versions. One of\n   If DW_DLC_POINTER64 is not set DW_DLC_POINTER32 is assumed.\n   If DW_DLC_OFFSET64 or DW_DLC_IRIX_OFFSET64 is not\n   set 32bit offset DWARF is assumed.\n   Non-MIPS Non IA64 should use DW_DLC_SYMBOLIC_RELOCATIONS\n   and handle the relocation creation for the target\n   itself using the symbolic relocations to do so.\n   See the Dwarf_Rel_Type enum relocation indicators.\n*/\n\n/*  64-bit address-size target */\n#define DW_DLC_SIZE_64            0x40000000 /* old spelling */\n#define DW_DLC_POINTER64          0x40000000 /* correct spelling */\n\n/*  32-bit address-size target */\n#define DW_DLC_SIZE_32            0x20000000 /* old spelling */\n#define DW_DLC_POINTER32          0x20000000 /* correct spelling */\n\n\n/*  32-bit offset-size ELF object (ELFCLASS32) */\n#define DW_DLC_ELF_OFFSET_SIZE_32 0x00400000 /* DO NOT USE */\n/*  DW_DLC_OFFSET32 is the default, the bit is not checked. */\n#define DW_DLC_OFFSET32           0x00010000 /* default offset size */\n\n/*  64-bit offset-size DWARF offsets  */\n#define DW_DLC_OFFSET_SIZE_64     0x10000000 /* old spelling */\n#define DW_DLC_OFFSET64           0x10000000 /* correct spelling */\n\n/*  64-bit offset-size ELF object (ELFCLASS64)  */\n#define DW_DLC_ELF_OFFSET_SIZE_64 0x00020000 /* DO NOT USE. */\n\n/*  Special for IRIX only. For producing DWARF with\n    Elf 64bit offset headers and non-standard IRIX\n    64bit offset DWARF .debug_info etc compilation unit headers. */\n#define DW_DLC_IRIX_OFFSET64      0x00200000\n\n/*  Old style Elf binary relocation (.rel) records. The default.\n    For producing DWARF */\n#define DW_DLC_STREAM_RELOCATIONS 0x02000000\n/*  Usable with assembly output because it is up to the producer to\n    deal with locations in whatever manner the calling producer\n    code wishes.  For example, when the libdwarf caller wishes\n    to produce relocations differently than the binary\n    relocation bits that libdwarf Stream Relocations generate.\n    */\n#define DW_DLC_SYMBOLIC_RELOCATIONS 0x04000000\n\n#define DW_DLC_TARGET_BIGENDIAN     0x08000000\n#define DW_DLC_TARGET_LITTLEENDIAN  0x00100000\n/* ===== END DW_DLC options LIBDWARF */\n\n\n/* dwarf_pcline function, slide arguments\n*/\n#define DW_DLS_BACKWARD   -1       /* slide backward to find line */\n#define DW_DLS_NOSLIDE     0       /* match exactly without sliding */\n#define DW_DLS_FORWARD     1       /* slide forward to find line */\n\n/* libdwarf error numbers\n*/\n#define DW_DLE_NE          0     /* no error */\n#define DW_DLE_VMM         1     /* dwarf format/library version mismatch */\n#define DW_DLE_MAP         2     /* memory map failure */\n#define DW_DLE_LEE         3     /* libelf error */\n#define DW_DLE_NDS         4     /* no debug section */\n#define DW_DLE_NLS         5     /* no line section */\n#define DW_DLE_ID          6     /* invalid descriptor for query */\n#define DW_DLE_IOF         7     /* I/O failure */\n#define DW_DLE_MAF         8     /* memory allocation failure */\n#define DW_DLE_IA          9     /* invalid argument */\n#define DW_DLE_MDE         10     /* mangled debugging entry */\n#define DW_DLE_MLE         11     /* mangled line number entry */\n#define DW_DLE_FNO         12     /* file not open */\n#define DW_DLE_FNR         13     /* file not a regular file */\n#define DW_DLE_FWA         14     /* file open with wrong access */\n#define DW_DLE_NOB         15     /* not an object file */\n#define DW_DLE_MOF         16     /* mangled object file header */\n#define DW_DLE_EOLL        17     /* end of location list entries */\n#define DW_DLE_NOLL        18     /* no location list section */\n#define DW_DLE_BADOFF      19     /* Invalid offset */\n#define DW_DLE_EOS         20     /* end of section  */\n#define DW_DLE_ATRUNC      21     /* abbreviations section appears truncated*/\n#define DW_DLE_BADBITC     22     /* Address size passed to dwarf bad*/\n                    /* It is not an allowed size (64 or 32) */\n    /* Error codes defined by the current Libdwarf Implementation. */\n#define DW_DLE_DBG_ALLOC                        23\n#define DW_DLE_FSTAT_ERROR                      24\n#define DW_DLE_FSTAT_MODE_ERROR                 25\n#define DW_DLE_INIT_ACCESS_WRONG                26\n#define DW_DLE_ELF_BEGIN_ERROR                  27\n#define DW_DLE_ELF_GETEHDR_ERROR                28\n#define DW_DLE_ELF_GETSHDR_ERROR                29\n#define DW_DLE_ELF_STRPTR_ERROR                 30\n#define DW_DLE_DEBUG_INFO_DUPLICATE             31\n#define DW_DLE_DEBUG_INFO_NULL                  32\n#define DW_DLE_DEBUG_ABBREV_DUPLICATE           33\n#define DW_DLE_DEBUG_ABBREV_NULL                34\n#define DW_DLE_DEBUG_ARANGES_DUPLICATE          35\n#define DW_DLE_DEBUG_ARANGES_NULL               36\n#define DW_DLE_DEBUG_LINE_DUPLICATE             37\n#define DW_DLE_DEBUG_LINE_NULL                  38\n#define DW_DLE_DEBUG_LOC_DUPLICATE              39\n#define DW_DLE_DEBUG_LOC_NULL                   40\n#define DW_DLE_DEBUG_MACINFO_DUPLICATE          41\n#define DW_DLE_DEBUG_MACINFO_NULL               42\n#define DW_DLE_DEBUG_PUBNAMES_DUPLICATE         43\n#define DW_DLE_DEBUG_PUBNAMES_NULL              44\n#define DW_DLE_DEBUG_STR_DUPLICATE              45\n#define DW_DLE_DEBUG_STR_NULL                   46\n#define DW_DLE_CU_LENGTH_ERROR                  47\n#define DW_DLE_VERSION_STAMP_ERROR              48\n#define DW_DLE_ABBREV_OFFSET_ERROR              49\n#define DW_DLE_ADDRESS_SIZE_ERROR               50\n#define DW_DLE_DEBUG_INFO_PTR_NULL              51\n#define DW_DLE_DIE_NULL                         52\n#define DW_DLE_STRING_OFFSET_BAD                53\n#define DW_DLE_DEBUG_LINE_LENGTH_BAD            54\n#define DW_DLE_LINE_PROLOG_LENGTH_BAD           55\n#define DW_DLE_LINE_NUM_OPERANDS_BAD            56\n#define DW_DLE_LINE_SET_ADDR_ERROR              57 /* No longer used. */\n#define DW_DLE_LINE_EXT_OPCODE_BAD              58\n#define DW_DLE_DWARF_LINE_NULL                  59\n#define DW_DLE_INCL_DIR_NUM_BAD                 60\n#define DW_DLE_LINE_FILE_NUM_BAD                61\n#define DW_DLE_ALLOC_FAIL                       62\n#define DW_DLE_NO_CALLBACK_FUNC                 63\n#define DW_DLE_SECT_ALLOC                       64\n#define DW_DLE_FILE_ENTRY_ALLOC                 65\n#define DW_DLE_LINE_ALLOC                       66\n#define DW_DLE_FPGM_ALLOC                       67\n#define DW_DLE_INCDIR_ALLOC                     68\n#define DW_DLE_STRING_ALLOC                     69\n#define DW_DLE_CHUNK_ALLOC                      70\n#define DW_DLE_BYTEOFF_ERR                      71\n#define DW_DLE_CIE_ALLOC                        72\n#define DW_DLE_FDE_ALLOC                        73\n#define DW_DLE_REGNO_OVFL                       74\n#define DW_DLE_CIE_OFFS_ALLOC                   75\n#define DW_DLE_WRONG_ADDRESS                    76\n#define DW_DLE_EXTRA_NEIGHBORS                  77\n#define DW_DLE_WRONG_TAG                        78\n#define DW_DLE_DIE_ALLOC                        79\n#define DW_DLE_PARENT_EXISTS                    80\n#define DW_DLE_DBG_NULL                         81\n#define DW_DLE_DEBUGLINE_ERROR                  82\n#define DW_DLE_DEBUGFRAME_ERROR                 83\n#define DW_DLE_DEBUGINFO_ERROR                  84\n#define DW_DLE_ATTR_ALLOC                       85\n#define DW_DLE_ABBREV_ALLOC                     86\n#define DW_DLE_OFFSET_UFLW                      87\n#define DW_DLE_ELF_SECT_ERR                     88\n#define DW_DLE_DEBUG_FRAME_LENGTH_BAD           89\n#define DW_DLE_FRAME_VERSION_BAD                90\n#define DW_DLE_CIE_RET_ADDR_REG_ERROR           91\n#define DW_DLE_FDE_NULL                         92\n#define DW_DLE_FDE_DBG_NULL                     93\n#define DW_DLE_CIE_NULL                         94\n#define DW_DLE_CIE_DBG_NULL                     95\n#define DW_DLE_FRAME_TABLE_COL_BAD              96\n#define DW_DLE_PC_NOT_IN_FDE_RANGE              97\n#define DW_DLE_CIE_INSTR_EXEC_ERROR             98\n#define DW_DLE_FRAME_INSTR_EXEC_ERROR           99\n#define DW_DLE_FDE_PTR_NULL                    100\n#define DW_DLE_RET_OP_LIST_NULL                101\n#define DW_DLE_LINE_CONTEXT_NULL               102\n#define DW_DLE_DBG_NO_CU_CONTEXT               103\n#define DW_DLE_DIE_NO_CU_CONTEXT               104\n#define DW_DLE_FIRST_DIE_NOT_CU                105\n#define DW_DLE_NEXT_DIE_PTR_NULL               106\n#define DW_DLE_DEBUG_FRAME_DUPLICATE           107\n#define DW_DLE_DEBUG_FRAME_NULL                108\n#define DW_DLE_ABBREV_DECODE_ERROR             109\n#define DW_DLE_DWARF_ABBREV_NULL               110\n#define DW_DLE_ATTR_NULL                       111\n#define DW_DLE_DIE_BAD                         112\n#define DW_DLE_DIE_ABBREV_BAD                  113\n#define DW_DLE_ATTR_FORM_BAD                   114\n#define DW_DLE_ATTR_NO_CU_CONTEXT              115\n#define DW_DLE_ATTR_FORM_SIZE_BAD              116\n#define DW_DLE_ATTR_DBG_NULL                   117\n#define DW_DLE_BAD_REF_FORM                    118\n#define DW_DLE_ATTR_FORM_OFFSET_BAD            119\n#define DW_DLE_LINE_OFFSET_BAD                 120\n#define DW_DLE_DEBUG_STR_OFFSET_BAD            121\n#define DW_DLE_STRING_PTR_NULL                 122\n#define DW_DLE_PUBNAMES_VERSION_ERROR          123\n#define DW_DLE_PUBNAMES_LENGTH_BAD             124\n#define DW_DLE_GLOBAL_NULL                     125\n#define DW_DLE_GLOBAL_CONTEXT_NULL             126\n#define DW_DLE_DIR_INDEX_BAD                   127\n#define DW_DLE_LOC_EXPR_BAD                    128\n#define DW_DLE_DIE_LOC_EXPR_BAD                129\n#define DW_DLE_ADDR_ALLOC                      130\n#define DW_DLE_OFFSET_BAD                      131\n#define DW_DLE_MAKE_CU_CONTEXT_FAIL            132\n#define DW_DLE_REL_ALLOC                       133\n#define DW_DLE_ARANGE_OFFSET_BAD               134\n#define DW_DLE_SEGMENT_SIZE_BAD                135\n#define DW_DLE_ARANGE_LENGTH_BAD               136\n#define DW_DLE_ARANGE_DECODE_ERROR             137\n#define DW_DLE_ARANGES_NULL                    138\n#define DW_DLE_ARANGE_NULL                     139\n#define DW_DLE_NO_FILE_NAME                    140\n#define DW_DLE_NO_COMP_DIR                     141\n#define DW_DLE_CU_ADDRESS_SIZE_BAD             142\n#define DW_DLE_INPUT_ATTR_BAD                  143\n#define DW_DLE_EXPR_NULL                       144\n#define DW_DLE_BAD_EXPR_OPCODE                 145\n#define DW_DLE_EXPR_LENGTH_BAD                 146\n#define DW_DLE_MULTIPLE_RELOC_IN_EXPR          147\n#define DW_DLE_ELF_GETIDENT_ERROR              148\n#define DW_DLE_NO_AT_MIPS_FDE                  149\n#define DW_DLE_NO_CIE_FOR_FDE                  150\n#define DW_DLE_DIE_ABBREV_LIST_NULL            151\n#define DW_DLE_DEBUG_FUNCNAMES_DUPLICATE       152\n#define DW_DLE_DEBUG_FUNCNAMES_NULL            153\n#define DW_DLE_DEBUG_FUNCNAMES_VERSION_ERROR   154\n#define DW_DLE_DEBUG_FUNCNAMES_LENGTH_BAD      155\n#define DW_DLE_FUNC_NULL                       156\n#define DW_DLE_FUNC_CONTEXT_NULL               157\n#define DW_DLE_DEBUG_TYPENAMES_DUPLICATE       158\n#define DW_DLE_DEBUG_TYPENAMES_NULL            159\n#define DW_DLE_DEBUG_TYPENAMES_VERSION_ERROR   160\n#define DW_DLE_DEBUG_TYPENAMES_LENGTH_BAD      161\n#define DW_DLE_TYPE_NULL                       162\n#define DW_DLE_TYPE_CONTEXT_NULL               163\n#define DW_DLE_DEBUG_VARNAMES_DUPLICATE        164\n#define DW_DLE_DEBUG_VARNAMES_NULL             165\n#define DW_DLE_DEBUG_VARNAMES_VERSION_ERROR    166\n#define DW_DLE_DEBUG_VARNAMES_LENGTH_BAD       167\n#define DW_DLE_VAR_NULL                        168\n#define DW_DLE_VAR_CONTEXT_NULL                169\n#define DW_DLE_DEBUG_WEAKNAMES_DUPLICATE       170\n#define DW_DLE_DEBUG_WEAKNAMES_NULL            171\n#define DW_DLE_DEBUG_WEAKNAMES_VERSION_ERROR   172\n#define DW_DLE_DEBUG_WEAKNAMES_LENGTH_BAD      173\n#define DW_DLE_WEAK_NULL                       174\n#define DW_DLE_WEAK_CONTEXT_NULL               175\n#define DW_DLE_LOCDESC_COUNT_WRONG             176\n#define DW_DLE_MACINFO_STRING_NULL             177\n#define DW_DLE_MACINFO_STRING_EMPTY            178\n#define DW_DLE_MACINFO_INTERNAL_ERROR_SPACE    179\n#define DW_DLE_MACINFO_MALLOC_FAIL             180\n#define DW_DLE_DEBUGMACINFO_ERROR              181\n#define DW_DLE_DEBUG_MACRO_LENGTH_BAD          182\n#define DW_DLE_DEBUG_MACRO_MAX_BAD             183\n#define DW_DLE_DEBUG_MACRO_INTERNAL_ERR        184\n#define DW_DLE_DEBUG_MACRO_MALLOC_SPACE        185\n#define DW_DLE_DEBUG_MACRO_INCONSISTENT        186\n#define DW_DLE_DF_NO_CIE_AUGMENTATION          187\n#define DW_DLE_DF_REG_NUM_TOO_HIGH             188\n#define DW_DLE_DF_MAKE_INSTR_NO_INIT           189\n#define DW_DLE_DF_NEW_LOC_LESS_OLD_LOC         190\n#define DW_DLE_DF_POP_EMPTY_STACK              191\n#define DW_DLE_DF_ALLOC_FAIL                   192\n#define DW_DLE_DF_FRAME_DECODING_ERROR         193\n#define DW_DLE_DEBUG_LOC_SECTION_SHORT         194\n#define DW_DLE_FRAME_AUGMENTATION_UNKNOWN      195\n#define DW_DLE_PUBTYPE_CONTEXT                 196 /* Unused. */\n#define DW_DLE_DEBUG_PUBTYPES_LENGTH_BAD       197\n#define DW_DLE_DEBUG_PUBTYPES_VERSION_ERROR    198\n#define DW_DLE_DEBUG_PUBTYPES_DUPLICATE        199\n#define DW_DLE_FRAME_CIE_DECODE_ERROR          200\n#define DW_DLE_FRAME_REGISTER_UNREPRESENTABLE  201\n#define DW_DLE_FRAME_REGISTER_COUNT_MISMATCH   202\n#define DW_DLE_LINK_LOOP                       203\n#define DW_DLE_STRP_OFFSET_BAD                 204\n#define DW_DLE_DEBUG_RANGES_DUPLICATE          205\n#define DW_DLE_DEBUG_RANGES_OFFSET_BAD         206\n#define DW_DLE_DEBUG_RANGES_MISSING_END        207\n#define DW_DLE_DEBUG_RANGES_OUT_OF_MEM         208\n#define DW_DLE_DEBUG_SYMTAB_ERR                209\n#define DW_DLE_DEBUG_STRTAB_ERR                210\n#define DW_DLE_RELOC_MISMATCH_INDEX            211\n#define DW_DLE_RELOC_MISMATCH_RELOC_INDEX      212\n#define DW_DLE_RELOC_MISMATCH_STRTAB_INDEX     213\n#define DW_DLE_RELOC_SECTION_MISMATCH          214\n#define DW_DLE_RELOC_SECTION_MISSING_INDEX     215\n#define DW_DLE_RELOC_SECTION_LENGTH_ODD        216\n#define DW_DLE_RELOC_SECTION_PTR_NULL          217\n#define DW_DLE_RELOC_SECTION_MALLOC_FAIL       218\n#define DW_DLE_NO_ELF64_SUPPORT                219\n#define DW_DLE_MISSING_ELF64_SUPPORT           220\n#define DW_DLE_ORPHAN_FDE                      221\n#define DW_DLE_DUPLICATE_INST_BLOCK            222\n#define DW_DLE_BAD_REF_SIG8_FORM               223\n#define DW_DLE_ATTR_EXPRLOC_FORM_BAD           224\n#define DW_DLE_FORM_SEC_OFFSET_LENGTH_BAD      225\n#define DW_DLE_NOT_REF_FORM                    226\n#define DW_DLE_DEBUG_FRAME_LENGTH_NOT_MULTIPLE 227\n#define DW_DLE_REF_SIG8_NOT_HANDLED            228\n#define DW_DLE_DEBUG_FRAME_POSSIBLE_ADDRESS_BOTCH 229\n#define DW_DLE_LOC_BAD_TERMINATION             230\n#define DW_DLE_SYMTAB_SECTION_LENGTH_ODD       231\n#define DW_DLE_RELOC_SECTION_SYMBOL_INDEX_BAD  232\n#define DW_DLE_RELOC_SECTION_RELOC_TARGET_SIZE_UNKNOWN  233\n#define DW_DLE_SYMTAB_SECTION_ENTRYSIZE_ZERO   234\n#define DW_DLE_LINE_NUMBER_HEADER_ERROR        235\n#define DW_DLE_DEBUG_TYPES_NULL                236\n#define DW_DLE_DEBUG_TYPES_DUPLICATE           237\n#define DW_DLE_DEBUG_TYPES_ONLY_DWARF4         238\n#define DW_DLE_DEBUG_TYPEOFFSET_BAD            239\n#define DW_DLE_GNU_OPCODE_ERROR                240\n#define DW_DLE_DEBUGPUBTYPES_ERROR             241\n#define DW_DLE_AT_FIXUP_NULL                   242\n#define DW_DLE_AT_FIXUP_DUP                    243\n#define DW_DLE_BAD_ABINAME                     244\n#define DW_DLE_TOO_MANY_DEBUG                  245\n#define DW_DLE_DEBUG_STR_OFFSETS_DUPLICATE     246\n#define DW_DLE_SECTION_DUPLICATION             247\n#define DW_DLE_SECTION_ERROR                   248\n#define DW_DLE_DEBUG_ADDR_DUPLICATE            249\n#define DW_DLE_DEBUG_CU_UNAVAILABLE_FOR_FORM   250\n#define DW_DLE_DEBUG_FORM_HANDLING_INCOMPLETE  251\n#define DW_DLE_NEXT_DIE_PAST_END               252\n#define DW_DLE_NEXT_DIE_WRONG_FORM             253\n#define DW_DLE_NEXT_DIE_NO_ABBREV_LIST         254\n#define DW_DLE_NESTED_FORM_INDIRECT_ERROR      255\n#define DW_DLE_CU_DIE_NO_ABBREV_LIST           256\n#define DW_DLE_MISSING_NEEDED_DEBUG_ADDR_SECTION 257\n#define DW_DLE_ATTR_FORM_NOT_ADDR_INDEX        258\n#define DW_DLE_ATTR_FORM_NOT_STR_INDEX         259\n#define DW_DLE_DUPLICATE_GDB_INDEX             260\n#define DW_DLE_ERRONEOUS_GDB_INDEX_SECTION     261\n#define DW_DLE_GDB_INDEX_COUNT_ERROR           262\n#define DW_DLE_GDB_INDEX_COUNT_ADDR_ERROR      263\n#define DW_DLE_GDB_INDEX_INDEX_ERROR           264\n#define DW_DLE_GDB_INDEX_CUVEC_ERROR           265\n#define DW_DLE_DUPLICATE_CU_INDEX              266\n#define DW_DLE_DUPLICATE_TU_INDEX              267\n#define DW_DLE_XU_TYPE_ARG_ERROR               268\n#define DW_DLE_XU_IMPOSSIBLE_ERROR             269\n#define DW_DLE_XU_NAME_COL_ERROR               270\n#define DW_DLE_XU_HASH_ROW_ERROR               271\n#define DW_DLE_XU_HASH_INDEX_ERROR             272\n/* ..._FAILSAFE_ERRVAL is an aid when out of memory. */\n#define DW_DLE_FAILSAFE_ERRVAL                 273\n#define DW_DLE_ARANGE_ERROR                    274\n#define DW_DLE_PUBNAMES_ERROR                  275\n#define DW_DLE_FUNCNAMES_ERROR                 276\n#define DW_DLE_TYPENAMES_ERROR                 277\n#define DW_DLE_VARNAMES_ERROR                  278\n#define DW_DLE_WEAKNAMES_ERROR                 279\n#define DW_DLE_RELOCS_ERROR                    280\n#define DW_DLE_ATTR_OUTSIDE_SECTION            281\n#define DW_DLE_FISSION_INDEX_WRONG             282\n#define DW_DLE_FISSION_VERSION_ERROR           283\n#define DW_DLE_NEXT_DIE_LOW_ERROR              284\n#define DW_DLE_CU_UT_TYPE_ERROR                285\n#define DW_DLE_NO_SUCH_SIGNATURE_FOUND         286\n#define DW_DLE_SIGNATURE_SECTION_NUMBER_WRONG  287\n#define DW_DLE_ATTR_FORM_NOT_DATA8             288\n#define DW_DLE_SIG_TYPE_WRONG_STRING           289\n#define DW_DLE_MISSING_REQUIRED_TU_OFFSET_HASH 290\n#define DW_DLE_MISSING_REQUIRED_CU_OFFSET_HASH 291\n#define DW_DLE_DWP_MISSING_DWO_ID              292\n#define DW_DLE_DWP_SIBLING_ERROR               293\n#define DW_DLE_DEBUG_FISSION_INCOMPLETE        294\n#define DW_DLE_FISSION_SECNUM_ERR              295\n#define DW_DLE_DEBUG_MACRO_DUPLICATE           296\n#define DW_DLE_DEBUG_NAMES_DUPLICATE           297\n#define DW_DLE_DEBUG_LINE_STR_DUPLICATE        298\n#define DW_DLE_DEBUG_SUP_DUPLICATE             299\n#define DW_DLE_NO_SIGNATURE_TO_LOOKUP          300\n#define DW_DLE_NO_TIED_ADDR_AVAILABLE          301\n#define DW_DLE_NO_TIED_SIG_AVAILABLE           302\n#define DW_DLE_STRING_NOT_TERMINATED           303\n#define DW_DLE_BAD_LINE_TABLE_OPERATION        304\n#define DW_DLE_LINE_CONTEXT_BOTCH              305\n#define DW_DLE_LINE_CONTEXT_INDEX_WRONG        306\n#define DW_DLE_NO_TIED_STRING_AVAILABLE        307\n#define DW_DLE_NO_TIED_FILE_AVAILABLE          308\n#define DW_DLE_CU_TYPE_MISSING                 309\n#define DW_DLE_LLE_CODE_UNKNOWN                310\n#define DW_DLE_LOCLIST_INTERFACE_ERROR         311\n#define DW_DLE_LOCLIST_INDEX_ERROR             312\n#define DW_DLE_INTERFACE_NOT_SUPPORTED         313\n#define DW_DLE_ZDEBUG_REQUIRES_ZLIB            314\n#define DW_DLE_ZDEBUG_INPUT_FORMAT_ODD         315\n#define DW_DLE_ZLIB_BUF_ERROR                  316\n#define DW_DLE_ZLIB_DATA_ERROR                 317\n#define DW_DLE_MACRO_OFFSET_BAD                318\n#define DW_DLE_MACRO_OPCODE_BAD                319\n#define DW_DLE_MACRO_OPCODE_FORM_BAD           320\n#define DW_DLE_UNKNOWN_FORM                    321\n#define DW_DLE_BAD_MACRO_HEADER_POINTER        322\n#define DW_DLE_BAD_MACRO_INDEX                 323\n#define DW_DLE_MACRO_OP_UNHANDLED              324\n#define DW_DLE_MACRO_PAST_END                  325\n#define DW_DLE_LINE_STRP_OFFSET_BAD            326\n#define DW_DLE_STRING_FORM_IMPROPER            327\n#define DW_DLE_ELF_FLAGS_NOT_AVAILABLE         328\n#define DW_DLE_LEB_IMPROPER                    329\n#define DW_DLE_DEBUG_LINE_RANGE_ZERO           330\n#define DW_DLE_READ_LITTLEENDIAN_ERROR         331\n#define DW_DLE_READ_BIGENDIAN_ERROR            332\n#define DW_DLE_RELOC_INVALID                   333\n#define DW_DLE_INFO_HEADER_ERROR               334\n#define DW_DLE_ARANGES_HEADER_ERROR            335\n#define DW_DLE_LINE_OFFSET_WRONG_FORM          336\n#define DW_DLE_FORM_BLOCK_LENGTH_ERROR         337\n#define DW_DLE_ZLIB_SECTION_SHORT              338\n#define DW_DLE_CIE_INSTR_PTR_ERROR             339\n#define DW_DLE_FDE_INSTR_PTR_ERROR             340\n#define DW_DLE_FISSION_ADDITION_ERROR          341\n#define DW_DLE_HEADER_LEN_BIGGER_THAN_SECSIZE  342\n#define DW_DLE_LOCEXPR_OFF_SECTION_END         343\n#define DW_DLE_POINTER_SECTION_UNKNOWN         344\n#define DW_DLE_ERRONEOUS_XU_INDEX_SECTION      345\n#define DW_DLE_DIRECTORY_FORMAT_COUNT_VS_DIRECTORIES_MISMATCH 346\n#define DW_DLE_COMPRESSED_EMPTY_SECTION        347\n#define DW_DLE_SIZE_WRAPAROUND                 348\n#define DW_DLE_ILLOGICAL_TSEARCH               349\n#define DW_DLE_BAD_STRING_FORM                 350\n#define DW_DLE_DEBUGSTR_ERROR                  351\n#define DW_DLE_DEBUGSTR_UNEXPECTED_REL         352\n#define DW_DLE_DISCR_ARRAY_ERROR               353\n#define DW_DLE_LEB_OUT_ERROR                   354\n#define DW_DLE_SIBLING_LIST_IMPROPER           355\n#define DW_DLE_LOCLIST_OFFSET_BAD              356\n#define DW_DLE_LINE_TABLE_BAD                  357\n#define DW_DLE_DEBUG_LOClISTS_DUPLICATE        358\n#define DW_DLE_DEBUG_RNGLISTS_DUPLICATE        359\n#define DW_DLE_ABBREV_OFF_END                  360\n#define DW_DLE_FORM_STRING_BAD_STRING          361\n#define DW_DLE_AUGMENTATION_STRING_OFF_END     362\n#define DW_DLE_STRING_OFF_END_PUBNAMES_LIKE    363\n#define DW_DLE_LINE_STRING_BAD                 364\n#define DW_DLE_DEFINE_FILE_STRING_BAD          365\n#define DW_DLE_MACRO_STRING_BAD                366\n#define DW_DLE_MACINFO_STRING_BAD              367\n#define DW_DLE_ZLIB_UNCOMPRESS_ERROR           368\n#define DW_DLE_IMPROPER_DWO_ID                 369\n#define DW_DLE_GROUPNUMBER_ERROR               370\n#define DW_DLE_ADDRESS_SIZE_ZERO               371\n#define DW_DLE_DEBUG_NAMES_HEADER_ERROR        372\n#define DW_DLE_DEBUG_NAMES_AUG_STRING_ERROR    373\n#define DW_DLE_DEBUG_NAMES_PAD_NON_ZERO        374\n#define DW_DLE_DEBUG_NAMES_OFF_END             375\n#define DW_DLE_DEBUG_NAMES_ABBREV_OVERFLOW     376\n#define DW_DLE_DEBUG_NAMES_ABBREV_CORRUPTION   377\n#define DW_DLE_DEBUG_NAMES_NULL_POINTER        378\n#define DW_DLE_DEBUG_NAMES_BAD_INDEX_ARG       379\n#define DW_DLE_DEBUG_NAMES_ENTRYPOOL_OFFSET    380\n#define DW_DLE_DEBUG_NAMES_UNHANDLED_FORM      381\n#define DW_DLE_LNCT_CODE_UNKNOWN               382\n#define DW_DLE_LNCT_FORM_CODE_NOT_HANDLED      383\n#define DW_DLE_LINE_HEADER_LENGTH_BOTCH        384\n#define DW_DLE_STRING_HASHTAB_IDENTITY_ERROR   385\n#define DW_DLE_UNIT_TYPE_NOT_HANDLED           386\n#define DW_DLE_GROUP_MAP_ALLOC                 387\n#define DW_DLE_GROUP_MAP_DUPLICATE             388\n#define DW_DLE_GROUP_COUNT_ERROR               389\n#define DW_DLE_GROUP_INTERNAL_ERROR            390\n#define DW_DLE_GROUP_LOAD_ERROR                391\n#define DW_DLE_GROUP_LOAD_READ_ERROR           392\n#define DW_DLE_AUG_DATA_LENGTH_BAD             393\n#define DW_DLE_ABBREV_MISSING                  394\n#define DW_DLE_NO_TAG_FOR_DIE                  395\n#define DW_DLE_LOWPC_WRONG_CLASS               396\n#define DW_DLE_HIGHPC_WRONG_FORM               397\n#define DW_DLE_STR_OFFSETS_BASE_WRONG_FORM     398\n#define DW_DLE_DATA16_OUTSIDE_SECTION          399\n#define DW_DLE_LNCT_MD5_WRONG_FORM             400\n#define DW_DLE_LINE_HEADER_CORRUPT             401\n#define DW_DLE_STR_OFFSETS_NULLARGUMENT        402\n#define DW_DLE_STR_OFFSETS_NULL_DBG            403\n#define DW_DLE_STR_OFFSETS_NO_MAGIC            404\n#define DW_DLE_STR_OFFSETS_ARRAY_SIZE          405\n#define DW_DLE_STR_OFFSETS_VERSION_WRONG       406\n#define DW_DLE_STR_OFFSETS_ARRAY_INDEX_WRONG   407\n#define DW_DLE_STR_OFFSETS_EXTRA_BYTES         408\n#define DW_DLE_DUP_ATTR_ON_DIE                 409\n#define DW_DLE_SECTION_NAME_BIG                410\n#define DW_DLE_FILE_UNAVAILABLE                411\n#define DW_DLE_FILE_WRONG_TYPE                 412\n#define DW_DLE_SIBLING_OFFSET_WRONG            413\n#define DW_DLE_OPEN_FAIL                       414\n#define DW_DLE_OFFSET_SIZE                     415\n#define DW_DLE_MACH_O_SEGOFFSET_BAD            416\n#define DW_DLE_FILE_OFFSET_BAD                 417\n#define DW_DLE_SEEK_ERROR                      418\n#define DW_DLE_READ_ERROR                      419\n#define DW_DLE_ELF_CLASS_BAD                   420\n#define DW_DLE_ELF_ENDIAN_BAD                  421\n#define DW_DLE_ELF_VERSION_BAD                 422\n#define DW_DLE_FILE_TOO_SMALL                  423\n#define DW_DLE_PATH_SIZE_TOO_SMALL             424\n#define DW_DLE_BAD_TYPE_SIZE                   425\n#define DW_DLE_PE_SIZE_SMALL                   426\n#define DW_DLE_PE_OFFSET_BAD                   427\n#define DW_DLE_PE_STRING_TOO_LONG              428\n#define DW_DLE_IMAGE_FILE_UNKNOWN_TYPE         429\n#define DW_DLE_LINE_TABLE_LINENO_ERROR         430\n#define DW_DLE_PRODUCER_CODE_NOT_AVAILABLE     431\n#define DW_DLE_NO_ELF_SUPPORT                  432\n#define DW_DLE_NO_STREAM_RELOC_SUPPORT         433\n#define DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR     434\n#define DW_DLE_SECTION_SIZE_ERROR              435\n#define DW_DLE_INTERNAL_NULL_POINTER           436\n#define DW_DLE_SECTION_STRING_OFFSET_BAD       437\n#define DW_DLE_SECTION_INDEX_BAD               438\n#define DW_DLE_INTEGER_TOO_SMALL               439\n#define DW_DLE_ELF_SECTION_LINK_ERROR          440\n#define DW_DLE_ELF_SECTION_GROUP_ERROR         441\n#define DW_DLE_ELF_SECTION_COUNT_MISMATCH      442\n#define DW_DLE_ELF_STRING_SECTION_MISSING      443\n#define DW_DLE_SEEK_OFF_END                    444\n#define DW_DLE_READ_OFF_END                    445\n#define DW_DLE_ELF_SECTION_ERROR               446\n#define DW_DLE_ELF_STRING_SECTION_ERROR        447\n#define DW_DLE_MIXING_SPLIT_DWARF_VERSIONS     448\n#define DW_DLE_TAG_CORRUPT                     449\n#define DW_DLE_FORM_CORRUPT                    450\n#define DW_DLE_ATTR_CORRUPT                    451\n#define DW_DLE_ABBREV_ATTR_DUPLICATION         452\n#define DW_DLE_DWP_SIGNATURE_MISMATCH          453\n#define DW_DLE_CU_UT_TYPE_VALUE                454\n#define DW_DLE_DUPLICATE_GNU_DEBUGLINK         455\n#define DW_DLE_CORRUPT_GNU_DEBUGLINK           456\n#define DW_DLE_CORRUPT_NOTE_GNU_DEBUGID        457\n#define DW_DLE_CORRUPT_GNU_DEBUGID_SIZE        458\n#define DW_DLE_CORRUPT_GNU_DEBUGID_STRING      459\n#define DW_DLE_HEX_STRING_ERROR                460\n#define DW_DLE_DECIMAL_STRING_ERROR            461\n#define DW_DLE_PRO_INIT_EXTRAS_UNKNOWN         462\n#define DW_DLE_PRO_INIT_EXTRAS_ERR             463\n#define DW_DLE_NULL_ARGS_DWARF_ADD_PATH        464\n#define DW_DLE_DWARF_INIT_DBG_NULL             465\n#define DW_DLE_ELF_RELOC_SECTION_ERROR         466\n#define DW_DLE_USER_DECLARED_ERROR             467\n#define DW_DLE_RNGLISTS_ERROR                  468\n#define DW_DLE_LOCLISTS_ERROR                  469\n#define DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE    470\n#define DW_DLE_GDBINDEX_STRING_ERROR           471\n#define DW_DLE_GNU_PUBNAMES_ERROR              472\n#define DW_DLE_GNU_PUBTYPES_ERROR              473\n#define DW_DLE_DUPLICATE_GNU_DEBUG_PUBNAMES    474\n#define DW_DLE_DUPLICATE_GNU_DEBUG_PUBTYPES    475\n#define DW_DLE_DEBUG_SUP_STRING_ERROR          476\n#define DW_DLE_DEBUG_SUP_ERROR                 477\n#define DW_DLE_LOCATION_ERROR                  478\n#define DW_DLE_DEBUGLINK_PATH_SHORT            479\n\n    /* LAST MUST EQUAL LAST ERROR NUMBER */\n#define DW_DLE_LAST        479\n\n#define DW_DLE_LO_USER     0x10000\n\n    /*  Taken as meaning 'undefined value', this is not\n        a column or register number.\n        Only present at libdwarf runtime. Never on disk.\n        DW_FRAME_* Values present on disk are in dwarf.h\n    */\n#define DW_FRAME_UNDEFINED_VAL          1034\n\n    /*  Taken as meaning 'same value' as caller had, not a column\n        or register number\n        Only present at libdwarf runtime. Never on disk.\n        DW_FRAME_* Values present on disk are in dwarf.h\n    */\n#define DW_FRAME_SAME_VAL               1035\n\n\n\n/* error return values\n*/\n#define DW_DLV_BADADDR     (~(Dwarf_Addr)0)\n    /* for functions returning target address */\n\n#define DW_DLV_NOCOUNT     ((Dwarf_Signed)-1)\n    /* for functions returning count */\n\n#define DW_DLV_BADOFFSET   (~(Dwarf_Off)0)\n    /* for functions returning offset */\n\n/* standard return values for functions */\n#define DW_DLV_NO_ENTRY -1\n#define DW_DLV_OK        0\n#define DW_DLV_ERROR     1\n\n/* Special values for offset_into_exception_table field of dwarf fde's. */\n/* The following value indicates that there is no Exception table offset\n   associated with a dwarf frame. */\n#define DW_DLX_NO_EH_OFFSET         (-1LL)\n/* The following value indicates that the producer was unable to analyse the\n   source file to generate Exception tables for this function. */\n#define DW_DLX_EH_OFFSET_UNAVAILABLE  (-2LL)\n\n/* The dwarf specification separates FORMs into\ndifferent classes.  To do the seperation properly\nrequires 4 pieces of data as of DWARF4 (thus the\nfunction arguments listed here).\nThe DWARF4 specification class definition suffices to\ndescribe all DWARF versions.\nSee section 7.5.4, Attribute Encodings.\nA return of DW_FORM_CLASS_UNKNOWN means we could not properly figure\nout what form-class it is.\n\n    DW_FORM_CLASS_FRAMEPTR is MIPS/IRIX only, and refers\n    to the DW_AT_MIPS_fde attribute (a reference to the\n    .debug_frame section).\n\n    DWARF5:\n    DW_FORM_CLASS_LOCLISTSPTR  is like DW_FORM_CLASS_LOCLIST\n    except that LOCLISTSPTR is aways a section offset,\n    never an index, and LOCLISTSPTR is only referenced\n    by DW_AT_loclists_base.\n    Note DW_FORM_CLASS_LOCLISTSPTR spelling to distinguish\n    from DW_FORM_CLASS_LOCLISTPTR.\n\n    DWARF5:\n    DW_FORM_CLASS_RNGLISTSPTR  is like DW_FORM_CLASS_RNGLIST\n    except that RNGLISTSPTR is aways a section offset,\n    never an index. DW_FORM_CLASS_RNGLISTSPTR is only\n    referenced by DW_AT_rnglists_base.\n*/\nenum Dwarf_Form_Class {\n    DW_FORM_CLASS_UNKNOWN,   DW_FORM_CLASS_ADDRESS,\n    DW_FORM_CLASS_BLOCK,     DW_FORM_CLASS_CONSTANT,\n    DW_FORM_CLASS_EXPRLOC,   DW_FORM_CLASS_FLAG,\n    DW_FORM_CLASS_LINEPTR,\n    DW_FORM_CLASS_LOCLISTPTR,   /* DWARF2,3,4 only */\n    DW_FORM_CLASS_MACPTR,       /* DWARF2,3,4 only */\n    DW_FORM_CLASS_RANGELISTPTR, /* DWARF2,3,4 only */\n    DW_FORM_CLASS_REFERENCE,\n    DW_FORM_CLASS_STRING,\n    DW_FORM_CLASS_FRAMEPTR,      /* MIPS/IRIX DWARF2 only */\n    DW_FORM_CLASS_MACROPTR,      /* DWARF5 */\n    DW_FORM_CLASS_ADDRPTR,       /* DWARF5 */\n    DW_FORM_CLASS_LOCLIST,       /* DWARF5 */\n    DW_FORM_CLASS_LOCLISTSPTR,   /* DWARF5 */\n    DW_FORM_CLASS_RNGLIST,       /* DWARF5 */\n    DW_FORM_CLASS_RNGLISTSPTR,   /* DWARF5 */\n    DW_FORM_CLASS_STROFFSETSPTR  /* DWARF5 */\n};\n\n/*  These support opening DWARF5 split dwarf objects. */\n#define DW_GROUPNUMBER_ANY  0\n#define DW_GROUPNUMBER_BASE 1\n#define DW_GROUPNUMBER_DWO  2\n\n/*===========================================================================*/\n/*  Dwarf consumer interface initialization and termination operations */\n\n/*  Initialization based on path. This is new October 2018.\n    The path actually used is copied to true_path_out\n    and in the case of MacOS dSYM may not match path.\n    If true_path_buffer len is zero or true_path_out_buffer\n    is zero  then the Special MacOS processing will not\n    occur, nor will the GNU_debuglink processing occur.\n    In case GNU debuglink data was followed or MacOS\n    dSYM applies the true_path_out\n    will not match path.\n    So consider the value put in true_path_out the\n    actual file name. reserved1,2,3 should all be passed\n    as zero. */\nint dwarf_init_path(const char * /*path*/,\n    char *            /*true_path_out_buffer*/,\n    unsigned int      /*true_path_bufferlen*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*groupnumber*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    const char *      /* reserved1 */,\n    Dwarf_Unsigned    /* reserved2 */,\n    Dwarf_Unsigned  * /* reserved3 */,\n    Dwarf_Error*      /*error*/);\n\n/*  New October 2020. Following GNU debuglink to the\n    true-path with DWARF if there is\n    appropriate debuglink data available.\n    The path actually used is copied to true_path_out\n    and in the case of MacOS dSYM may not match path.\n    In case GNU debuglink data was followed the true_path_out\n    will not match path.\n    If debuglink missing from the Elf executable\n    or shared-object (ie, it is a normal\n    object!) or unusable by libdwarf or\n    true_path_buffer len is zero or true_path_out_buffer\n    is zero the\n    accepts the path given as the object to report on.\n    Passing dl_path_array and dl_path_array size zero\n    suffices unless one has unusual locations for debuglink\n    objects.\n    If true_path_buffer len is zero or true_path_out_buffer\n    is zero  then the Special MacOS processing will not\n    occur either.\n    */\nint dwarf_init_path_dl(const char * /*path*/,\n    char *            /*true_path_out_buffer*/,\n    unsigned int      /*true_path_bufferlen*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*groupnumber*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    char **           /* dl_path array */,\n    unsigned int      /* dl_path array size */,\n    unsigned char   * /* path_source */,\n    const char      * /* reserved1 */,\n    Dwarf_Unsigned    /* reserved2 */,\n    Dwarf_Unsigned  * /* reserved3 */,\n    Dwarf_Error*      /*error*/);\n\n/*  Initialization based on Unix(etc) open fd */\n/*  New March 2017 */\nint dwarf_init_b(int    /*fd*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*groupnumber*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\n\nint dwarf_init(int    /*fd*/,\n    Dwarf_Unsigned    /*access*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\n\n/*  The dwarf_elf_init* functions continue to be supported,\n    but should be considered deprecated as they can ONLY\n    be used on Elf files. */\n/*  Initialization based on libelf/sgi-fastlibelf open pointer. */\n/*  New March 2017 */\nint dwarf_elf_init_b(dwarf_elf_handle /*elf*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*group_number*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\nint dwarf_elf_init(dwarf_elf_handle /*elf*/,\n    Dwarf_Unsigned    /*access*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New September 2019.\n    When using dwarf_elf_init[_b]() we still want the file path\n    in the record. So we add it after the init phase.\n    Path is needed for buildid and debuglink to fully work.\n*/\nint  dwarf_add_file_path(Dwarf_Debug /*dbg*/,\n    const char * /*file_name*/,\n    Dwarf_Error*      /*error*/);\n\n/* Undocumented function for memory allocator. */\nvoid dwarf_print_memory_stats(Dwarf_Debug  /*dbg*/);\n\nint dwarf_get_elf(Dwarf_Debug /*dbg*/,\n    dwarf_elf_handle* /*return_elfptr*/,\n    Dwarf_Error*      /*error*/);\n\nint dwarf_finish(Dwarf_Debug /*dbg*/, Dwarf_Error* /*error*/);\n\n\n/*  NEW March 2017. */\nint dwarf_object_init_b(Dwarf_Obj_Access_Interface* /*obj*/,\n    Dwarf_Handler /*errhand*/,\n    Dwarf_Ptr     /*errarg*/,\n    unsigned int  /*groupnumber*/,\n    Dwarf_Debug*  /*dbg*/,\n    Dwarf_Error*  /*error*/);\n\nint dwarf_object_init(Dwarf_Obj_Access_Interface* /*obj*/,\n    Dwarf_Handler /*errhand*/,\n    Dwarf_Ptr     /*errarg*/,\n    Dwarf_Debug*  /*dbg*/,\n    Dwarf_Error*  /*error*/);\n\nint dwarf_set_tied_dbg(Dwarf_Debug /*basedbg*/,\n    Dwarf_Debug /*tied_dbg*/,\n    Dwarf_Error*  /*error*/);\n\n/*  Likely not very useful.? */\nint dwarf_get_tied_dbg(Dwarf_Debug /*dbg*/,\n    Dwarf_Debug * /*tieddbg_out*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_object_finish(Dwarf_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  Returns the version string. Example: \"20190922\"\n    which is in ISO date format. */\nconst char * dwarf_package_version(void);\n\n/*  Section name access.  Because sections might\n    now end with .dwo or be .zdebug  or might not.\n*/\nint dwarf_get_die_section_name(Dwarf_Debug /*dbg*/,\n    Dwarf_Bool    /*is_info*/,\n    const char ** /*sec_name*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_get_die_section_name_b(Dwarf_Die /*die*/,\n    const char ** /*sec_name*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_get_real_section_name(Dwarf_Debug /*dbg*/,\n    const char * /*std_section_name*/,\n    const char ** /*actual_sec_name_out*/,\n    Dwarf_Small * /*marked_compressed*/,  /* .zdebug... */\n    Dwarf_Small * /*marked_zlib_compressed */, /* ZLIB string */\n    Dwarf_Small * /*marked_shf_compressed*/, /* SHF_COMPRESSED */\n    Dwarf_Unsigned * /*compressed_length*/,\n    Dwarf_Unsigned * /*uncompressed_length*/,\n    Dwarf_Error * /*error*/);\n\n\n\n/*  dwarf_next_cu_header_d traverses debug_types CU headers.\n    New in May, 2015.\n    */\nint dwarf_next_cu_header_d(Dwarf_Debug /*dbg*/,\n    Dwarf_Bool      /*is_info*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Half*     /*length_size*/,\n    Dwarf_Half*     /*extension_size*/,\n    Dwarf_Sig8*     /*type signature*/,\n    Dwarf_Unsigned* /*typeoffset*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Half    * /*header_cu_type*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Die traversal operations.\n    dwarf_next_cu_header_b traverses debug_info CU headers.\n    Obsolete but supported.\n    */\nint dwarf_next_cu_header_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Half*     /*length_size*/,\n    Dwarf_Half*     /*extension_size*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Error*    /*error*/);\n\n/*  dwarf_next_cu_header_types traverses debug_types CU headers.\n    New in October, 2011. Obsolete but supported May 2015.\n    */\nint dwarf_next_cu_header_c(Dwarf_Debug /*dbg*/,\n    Dwarf_Bool      /*is_info*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Half*     /*length_size*/,\n    Dwarf_Half*     /*extension_size*/,\n    Dwarf_Sig8*     /*type signature*/,\n    Dwarf_Unsigned* /*typeoffset*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Error*    /*error*/);\n/* The following is obsolete, though supported. November 2009. */\nint dwarf_next_cu_header(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Error*    /*error*/);\n\nint dwarf_siblingof(Dwarf_Debug /*dbg*/,\n    Dwarf_Die        /*die*/,\n    Dwarf_Die*       /*return_siblingdie*/,\n    Dwarf_Error*     /*error*/);\n/* dwarf_siblingof_b new October 2011. */\nint dwarf_siblingof_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Die        /*die*/,\n    Dwarf_Bool       /*is_info*/,\n    Dwarf_Die*       /*return_siblingdie*/,\n    Dwarf_Error*     /*error*/);\n\n/* New 27 April 2015. */\nint dwarf_die_from_hash_signature(Dwarf_Debug /*dbg*/,\n    Dwarf_Sig8 *     /*hash_sig*/,\n    const char *     /*sig_type: \"tu\" or \"cu\"*/,\n    Dwarf_Die*       /*returned_CU_die */,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_child(Dwarf_Die /*die*/,\n    Dwarf_Die*       /*return_childdie*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Finding die given global (not CU-relative) offset.\n    Applies only to debug_info. */\nint dwarf_offdie(Dwarf_Debug /*dbg*/,\n    Dwarf_Off        /*offset*/,\n    Dwarf_Die*       /*return_die*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_offdie_b new October 2011 */\n/*  Finding die given global (not CU-relative) offset.\n    Applies to debug_info (is_info true) or debug_types (is_info false). */\nint dwarf_offdie_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Off        /*offset*/,\n    Dwarf_Bool       /*is_info*/,\n    Dwarf_Die*       /*return_die*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Returns the is_info flag through the pointer if the function returns\n    DW_DLV_OK. Needed so client software knows if a DIE is in debug_info\n    or debug_types.\n    New October 2011. */\nDwarf_Bool dwarf_get_die_infotypes_flag(Dwarf_Die /*die*/);\n\n/*  New March 2016.\n    So we can associate a DIE's abbreviations with the contents\n    the abbreviations section. */\nint dwarf_die_abbrev_global_offset(Dwarf_Die /*die*/,\n    Dwarf_Off       * /*abbrev_offset*/,\n    Dwarf_Unsigned  * /*abbrev_count*/,\n    Dwarf_Error*      /*error*/);\n\n/*  operations on DIEs */\nint dwarf_tag(Dwarf_Die /*die*/,\n    Dwarf_Half*      /*return_tag*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_dieoffset returns the global debug_info\n    section offset, not the CU relative offset. */\nint dwarf_dieoffset(Dwarf_Die /*die*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  NEW October 2015. DWARF5.\n    The DIE here can be any DIE in the relevant CU.\n    index is an index into .debug_addr.\n    This will look first for .debug_addr\n    in the dbg object DIE\n    and if not there (because the dbg object is\n    a dwo or dwp split dwarf object)\n    will look in the tied object if tied is available. */\nint dwarf_debug_addr_index_to_addr(Dwarf_Die /*die*/,\n    Dwarf_Unsigned  /*index*/,\n    Dwarf_Addr    * /*return_addr*/,\n    Dwarf_Error   * /*error*/);\n/*  Reading a CU DIE with DW_AT_low_pc an indexed value\n    can be problematic as that interacts with DW_AT_addr_base\n    in that DIE. Here is a test readers may find useful */\nDwarf_Bool dwarf_addr_form_is_indexed(int form);\n\n\n/*  dwarf_CU_dieoffset_given_die returns\n    the global debug_info section offset of the CU die\n    that is the CU containing the given_die\n    (the passed in DIE can be any DIE).\n    This information makes it possible for a consumer to\n    find and print CU context information for any die.\n    See also dwarf_get_cu_die_offset_given_cu_header_offset. */\nint dwarf_CU_dieoffset_given_die(Dwarf_Die /*given_die*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_die_CU_offset returns the CU relative offset\n    not the global debug_info section offset, given\n    any DIE in the CU.  See also dwarf_CU_dieoffset_given_die.\n    */\nint dwarf_die_CU_offset(Dwarf_Die /*die*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_die_CU_offset_range(Dwarf_Die /*die*/,\n    Dwarf_Off*       /*return_CU_header_offset*/,\n    Dwarf_Off*       /*return_CU_length_bytes*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_attr (Dwarf_Die /*die*/,\n    Dwarf_Half        /*attr*/,\n    Dwarf_Attribute * /*returned_attr*/,\n    Dwarf_Error*      /*error*/);\n\nint dwarf_die_text(Dwarf_Die /*die*/,\n    Dwarf_Half    /*attr*/,\n    char       ** /*ret_name*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_diename(Dwarf_Die /*die*/,\n    char   **        /*diename*/,\n    Dwarf_Error*     /*error*/);\n\n/* Returns the  abbrev code of the die. Cannot fail. */\nint dwarf_die_abbrev_code(Dwarf_Die /*die */);\n\n/*  Returns a flag through ab_has_child. Non-zero if\n    the DIE has children, zero if it does not.   */\nint dwarf_die_abbrev_children_flag(Dwarf_Die /*die*/,\n    Dwarf_Half * /*ab_has_child*/);\n\n/* Validate the sibling DIE. This only makes sense to call\n   if the sibling's DIEs have been travsersed and\n   dwarf_child called on each,\n   so that the last DIE dwarf_child saw was the last.\n   Essentially ensuring that (after such traversal) that we\n   are in the same place a sibling attribute would identify.\n   In case we return DW_DLV_ERROR, the global offset of the last\n   DIE traversed by dwarf_child is returned through *offset */\nint dwarf_validate_die_sibling(Dwarf_Die /*sibling*/,Dwarf_Off* /*offset*/);\n\n/* convenience functions, alternative to using dwarf_attrlist */\nint dwarf_hasattr(Dwarf_Die /*die*/,\n    Dwarf_Half   /*attr*/,\n    Dwarf_Bool * /*returned_bool*/,\n    Dwarf_Error* /*error*/);\n\n/* Returns the children offsets for the given offset */\nint dwarf_offset_list(Dwarf_Debug /*dbg*/,\n    Dwarf_Off         /*offset*/,\n    Dwarf_Bool        /*is_info*/,\n    Dwarf_Off      ** /*offbuf*/,\n    Dwarf_Unsigned *  /*offcnt*/,\n    Dwarf_Error    *  /*error*/);\n\n/* BEGIN: debug_gnu_pubnames/typenames access,\n   calling these  Gnu_Index as a general reference.\n*/\n\nint dwarf_get_gnu_index_head(Dwarf_Debug /*dbg*/,\n   /*  The following arg false to select gnu_pubtypes */\n   Dwarf_Bool             /*for_gdb_pubnames*/ ,\n   Dwarf_Gnu_Index_Head * /*index_head_out*/,\n   Dwarf_Unsigned       * /*index_block_count_out*/,\n   Dwarf_Error * /*error*/);\n/*  Frees all resources used for the indexes. */\nvoid dwarf_gnu_index_dealloc(Dwarf_Gnu_Index_Head /*head*/);\n\nint dwarf_get_gnu_index_block(Dwarf_Gnu_Index_Head /*head*/,\n    Dwarf_Unsigned     /*number*/,\n    Dwarf_Unsigned   * /*block_length */,\n    Dwarf_Half       * /*version */,\n    Dwarf_Unsigned   * /*offset_into_debug_info*/,\n    Dwarf_Unsigned   * /*size_of_debug_info_area*/,\n    Dwarf_Unsigned   * /*count_of_index_entries*/,\n    Dwarf_Error      * /*error*/);\n\nint dwarf_get_gnu_index_block_entry(Dwarf_Gnu_Index_Head /*head*/,\n    Dwarf_Unsigned    /*blocknumber*/,\n    Dwarf_Unsigned    /*entrynumber*/,\n    Dwarf_Unsigned  * /*offset_in_debug_info*/,\n    const char     ** /*name_string*/,\n    unsigned char   * /*flagbyte*/,\n    unsigned char   * /*staticorglobal*/,\n    unsigned char   * /*typeofentry*/,\n    Dwarf_Error     * /*error*/);\n/* END: debug_gnu_pubnames/typenames access, */\n\n/*  BEGIN: loclist_c interfaces\n    NEW October 2015.\n    This works for any attribute that identifies\n    a loclist or a locexpr. When the attribute is a locexpr\n    a single loclist (created by libdwarf)\n    is attached to loclist_head. */\nint dwarf_get_loclist_c (Dwarf_Attribute /*attr*/,\n   Dwarf_Loc_Head_c * /*loclist_head*/,\n   Dwarf_Unsigned   * /*locCount*/,\n   Dwarf_Error      * /*error*/);\n\n#define DW_LKIND_expression   0 /* DWARF2,3,4*/\n#define DW_LKIND_loclist      1 /* DWARF 2,3,4 */\n#define DW_LKIND_GNU_exp_list 2 /* GNU DWARF4 .dwo extension */\n#define DW_LKIND_loclists     5 /* DWARF5 loclists */\n#define DW_LKIND_unknown     99\n\n/* DWARF2 kind is 2. DWARF3/4 kind is 3, DWARF5 kind is 5 */\nint\ndwarf_get_loclist_head_kind(Dwarf_Loc_Head_c /*ll_header*/,\n    unsigned int  * /*lkind*/,\n    Dwarf_Error   * /*error*/);\n\nint dwarf_get_locdesc_entry_d(Dwarf_Loc_Head_c /*loclist_head*/,\n   Dwarf_Unsigned    /*index*/,\n   /* identifies type of locdesc entry*/\n   Dwarf_Small    *  /*lle_value_out*/,\n   Dwarf_Unsigned *  /*rawlowpc*/,\n   Dwarf_Unsigned *  /*rawhipc*/,\n   Dwarf_Bool     *  /*debug_addr_unavailable*/,\n   Dwarf_Addr     *  /*lowpc_out*/,\n   Dwarf_Addr     *  /*hipc_out*/,\n   Dwarf_Unsigned *  /*loclist_count_out*/,\n   Dwarf_Locdesc_c * /*locentry_out*/,\n   Dwarf_Small    *  /*loclist_source_out*/, /* 0,1, or 2 */\n   Dwarf_Unsigned *  /*expression_offset_out*/,\n   Dwarf_Unsigned *  /*locdesc_offset_out*/,\n   Dwarf_Error    *  /*error*/);\n\nint dwarf_get_locdesc_entry_c(Dwarf_Loc_Head_c /*loclist_head*/,\n   Dwarf_Unsigned    /*index*/,\n   /* identifies type of locdesc entry*/\n   Dwarf_Small    *  /*lle_value_out*/,\n   Dwarf_Addr     *  /*lowpc_out*/,\n   Dwarf_Addr     *  /*hipc_out*/,\n   Dwarf_Unsigned *  /*loclist_count_out*/,\n   Dwarf_Locdesc_c * /*locentry_out*/,\n   Dwarf_Small    *  /*loclist_source_out*/, /* 0,1, or 2 */\n   Dwarf_Unsigned *  /*expression_offset_out*/,\n   Dwarf_Unsigned *  /*locdesc_offset_out*/,\n   Dwarf_Error    *  /*error*/);\n\n/* New June 2020 for DWARF5 (and all earlier). */\nint\ndwarf_get_location_op_value_d(Dwarf_Locdesc_c /*locdesc*/,\n    Dwarf_Unsigned   /*index*/,\n    Dwarf_Small    * /*atom_out*/,\n    Dwarf_Unsigned * /*operand1*/,\n    Dwarf_Unsigned * /*operand2*/,\n    Dwarf_Unsigned * /*operand3*/,\n    Dwarf_Unsigned * /*rawop1*/,\n    Dwarf_Unsigned * /*rawop2*/,\n    Dwarf_Unsigned * /*rawop3*/,\n    Dwarf_Unsigned * /*offset_for_branch*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_location_op_value_c(Dwarf_Locdesc_c /*locdesc*/,\n   Dwarf_Unsigned   /*index*/,\n   Dwarf_Small    * /*atom_out*/,\n   Dwarf_Unsigned * /*operand1*/,\n   Dwarf_Unsigned * /*operand2*/,\n   Dwarf_Unsigned * /*operand3*/,\n   Dwarf_Unsigned * /*offset_for_branch*/,\n   Dwarf_Error*     /*error*/);\n\nint dwarf_loclist_from_expr_c(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /*expression_in*/,\n    Dwarf_Unsigned /*expression_length*/,\n    Dwarf_Half     /*address_size*/,\n    Dwarf_Half     /*offset_size*/,\n    Dwarf_Small    /*dwarf_version*/,\n    Dwarf_Loc_Head_c* /*loc_head*/,\n    Dwarf_Unsigned  * /*listlen*/,\n    Dwarf_Error     * /*error*/);\n\n/* This frees all memory allocated by the applicable\n    dwarf_get_loclist_c */\nvoid dwarf_loc_head_c_dealloc(Dwarf_Loc_Head_c /*loclist_head*/);\n\n/* END: loclist_c interfaces */\n\n\n/*  As of 2015 the preferred interface\n    is dwarf_get_loclist_c\n    and only dwarf_get_loclist_c will work\n    for DWARF5 (and also all earlier versions).  */\nint dwarf_loclist_n(Dwarf_Attribute /*attr*/,\n    Dwarf_Locdesc*** /*llbuf*/,\n    Dwarf_Signed *   /*locCount*/,\n    Dwarf_Error*     /*error*/);\n\n/*  The original interfaces.  Please do not use this. */\nint dwarf_loclist(Dwarf_Attribute /*attr*/,  /* inflexible! */\n    Dwarf_Locdesc**  /*llbuf*/,\n    Dwarf_Signed *   /*locCount*/,\n    Dwarf_Error*     /*error*/);\n\n/* Extracts a dwarf expression from an expression byte stream.\n   Useful to get expressions from DW_CFA_def_cfa_expression\n   DW_CFA_expression DW_CFA_val_expression expression bytes.\n   27 April 2009: dwarf_loclist_from_expr interface with\n   no addr_size is obsolete but supported,\n   use dwarf_loclist_from_expr_a instead.\n*/\nint dwarf_loclist_from_expr(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /* expression_in*/,\n    Dwarf_Unsigned /* expression_length*/,\n    Dwarf_Locdesc ** /* llbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Error *  /* error*/ );\n\n/*  dwarf_loclist_from_expr_a new 27 Apr 2009:\n    added addr_size argument. */\nint dwarf_loclist_from_expr_a(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /*expression_in*/,\n    Dwarf_Unsigned /*expression_length*/,\n    Dwarf_Half     /*addr_size*/,\n    Dwarf_Locdesc ** /*llbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Error *  /*error*/);\n\n/*  dwarf_loclist_from_expr_b new 13 Nov 2012:\n    added dwarf_version (DWARF version number\n    of the applicable compilation unit)\n    and offset_size arguments. Added for\n    DW_OP_GNU_implicit_pointer. */\nint dwarf_loclist_from_expr_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /*expression_in*/ ,\n    Dwarf_Unsigned /*expression_length*/ ,\n    Dwarf_Half     /*addr_size*/ ,\n    Dwarf_Half     /*offset_size*/ ,\n    Dwarf_Small    /*dwarf_version*/ ,\n    Dwarf_Locdesc ** /*llbuf*/ ,\n    Dwarf_Signed * /*listlen*/ ,\n    Dwarf_Error *  /*error*/ );\n\nint dwarf_lowpc(Dwarf_Die /*die*/,\n    Dwarf_Addr  *    /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/*  When the highpc attribute is of class  'constant'\n    it is not an address, it is an offset from the\n    base address (such as lowpc) of the function.\n    This is therefore a required interface for DWARF4\n    style DW_AT_highpc.  */\nint dwarf_highpc_b(Dwarf_Die /*die*/,\n    Dwarf_Addr  *           /*return_value*/,\n    Dwarf_Half  *           /*return_form*/,\n    enum Dwarf_Form_Class * /*return_class*/,\n    Dwarf_Error *           /*error*/);\n\n/*  This works for DWARF2 and DWARF3 styles of DW_AT_highpc,\n    but not for the DWARF4 class constant forms.\n    If the FORM is of class constant this returns an error */\nint dwarf_highpc(Dwarf_Die /*die*/,\n    Dwarf_Addr  *    /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/*  New January 2016. */\nint dwarf_dietype_offset(Dwarf_Die /*die*/,\n    Dwarf_Off   * /*return_off*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_bytesize(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_size*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_bitsize(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_size*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_bitoffset(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_srclang(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_lang*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_arrayorder(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_order*/,\n    Dwarf_Error*     /*error*/);\n\n/* end of convenience function list */\n\n/* this is the main interface to attributes of a DIE */\nint dwarf_attrlist(Dwarf_Die /*die*/,\n    Dwarf_Attribute** /*attrbuf*/,\n    Dwarf_Signed   * /*attrcount*/,\n    Dwarf_Error*     /*error*/);\n\n/* query operations for attributes */\nint dwarf_hasform(Dwarf_Attribute /*attr*/,\n    Dwarf_Half       /*form*/,\n    Dwarf_Bool *     /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_whatform(Dwarf_Attribute /*attr*/,\n    Dwarf_Half *     /*returned_final_form*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_whatform_direct(Dwarf_Attribute /*attr*/,\n    Dwarf_Half *     /*returned_initial_form*/,\n    Dwarf_Error*     /*error*/);\nint dwarf_whatattr(Dwarf_Attribute /*attr*/,\n    Dwarf_Half *     /*returned_attr_num*/,\n    Dwarf_Error*     /*error*/);\n\n/*\n    The following are concerned with the Primary Interface: getting\n    the actual data values. One function per 'kind' of FORM.\n*/\n/*  dwarf_formref returns, thru return_offset, a CU-relative offset\n    and does not allow DW_FORM_ref_addr*/\nint dwarf_formref(Dwarf_Attribute /*attr*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n/*  dwarf_global_formref returns, thru return_offset,\n    a debug_info-relative offset and does allow all reference forms*/\nint dwarf_global_formref(Dwarf_Attribute /*attr*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_formsig8 returns in the caller-provided 8 byte area\n    the 8 bytes of a DW_FORM_ref_sig8.  Not a string.  */\nint dwarf_formsig8(Dwarf_Attribute /*attr*/,\n    Dwarf_Sig8 * /*returned sig bytes*/,\n    Dwarf_Error*     /*error*/);\n/*  dwarf_formsig8_const returns in the caller-provided 8 byte area\n    the 8 bytes of a form const (DW_FORM_data8).  Not a string.  */\nint dwarf_formsig8_const(Dwarf_Attribute /*attr*/,\n    Dwarf_Sig8 * /*returned sig bytes*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formaddr(Dwarf_Attribute /*attr*/,\n    Dwarf_Addr   *   /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Part of DebugFission.  So a consumer can get the index when\n    the object with the actual .debug_addr section is\n    elsewhere. And so a print application can\n    print the index.  New May 2014*/\nint dwarf_get_debug_addr_index(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned * /*return_index*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_formflag(Dwarf_Attribute /*attr*/,\n    Dwarf_Bool *     /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formdata16(Dwarf_Attribute /*attr*/,\n    Dwarf_Form_Data16  * /*returned_val*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formudata(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned  * /*returned_val*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formsdata(Dwarf_Attribute     /*attr*/,\n    Dwarf_Signed  *  /*returned_val*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formblock(Dwarf_Attribute /*attr*/,\n    Dwarf_Block    ** /*returned_block*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formstring(Dwarf_Attribute /*attr*/,\n    char   **        /*returned_string*/,\n    Dwarf_Error*     /*error*/);\n\n/* DebugFission.  So a DWARF print application can\n   get the string index (DW_FORM_strx) and print it.\n   A convenience function.\n   New May 2014. */\nint dwarf_get_debug_str_index(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned * /*return_index*/,\n    Dwarf_Error * /*error*/);\n\n\nint dwarf_formexprloc(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned * /*return_exprlen*/,\n    Dwarf_Ptr  * /*block_ptr*/,\n    Dwarf_Error * /*error*/);\n\n\n/* end attribute query operations. */\n\n/* Start line number operations */\n/* dwarf_srclines  is the original interface from 1993. */\nint dwarf_srclines(Dwarf_Die /*die*/,\n    Dwarf_Line**     /*linebuf*/,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Error*     /*error*/);\n\n\n/* If we have two-level line tables, this will return the\n   logicals table in linebuf and the actuals table in\n   linebuf_actuals. For old-style (one-level) tables, it\n   will return the single table through linebuf, and the\n   value returned through linecount_actuals will be 0.\n   The actual version number is returned through version.\n   For two-level line tables, the version returned will\n   be 0xf006. This interface can return data from two-level\n   line tables, which are experimental.\n   Most users will not wish to use dwarf_srclines_two_level */\nint dwarf_srclines_two_level(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Line**     /*linebuf*/,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Line**     /*linebuf_actuals*/,\n    Dwarf_Signed *   /*linecount_actuals*/,\n    Dwarf_Error*     /*error*/);\n\n/* dwarf_srclines_dealloc, created July 2005, is the\n   appropriate method for deallocating what dwarf_srclines\n   and dwarf_srclines_two_level return.\n   More complete free than using dwarf_dealloc directly.\n\n   When dwarf_srclines_two_level returns two line tables\n   user code should call dwarf_srclines_dealloc\n   once on each linebuf returned by dwarf_srclines_two_level\n   first on linebuf_actuals and then on linebuf{_logicals}.   */\n\nvoid dwarf_srclines_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Line*       /*linebuf*/,\n    Dwarf_Signed      /*count */);\n\n\n/*  New October 2015, must be used to deallocating\n    what is allocated by dwarf_srclines_b and\n    dwarf_srclines_from_linecontext  use.\n    Works for DWARF2,3,4,5 and for experimental line tables.\n    New work should use the new Dwarf_Line_Context\n    interface.\n    This interface only reads the line table header, so\n    it takes relatively little time.\n    *is_single_table will be set non-zero for all standard dwarf line sections.\n    *is_single_table will be set zero for line sections with the\n    two_level line table extension (which will have *version_out 0xf006).  */\nint dwarf_srclines_b(Dwarf_Die /*die*/,\n    Dwarf_Unsigned     * /* version_out*/,\n    Dwarf_Small        * /* table_count */,\n    Dwarf_Line_Context * /* linecontext*/,\n    Dwarf_Error        * /* error*/);\n\n/*  Functions passing in a Dwarf_Line_Context  are only\n    available if dwarf_srclines_b() was used to access\n    line table information.  */\n/*  New October 2015.  Returns line details.\n    Works for DWARF2,3,4,5.  If linecount\n    returned is zero this is a line table with no lines.*/\nint dwarf_srclines_from_linecontext(\n    Dwarf_Line_Context /*line_context*/,\n    Dwarf_Line  **   /*linebuf*/,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Error  *   /* error*/);\n\n/*  New October 2015.  Returns line details.\n    Works for DWARF2,3,4,5 and for experimental\n    two-level line tables. A single level table will\n    have *linebuf_actuals and *linecount_actuals set\n    to 0. */\nint dwarf_srclines_two_level_from_linecontext(\n    Dwarf_Line_Context /*line_context*/,\n    Dwarf_Line  **   /*linebuf */,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Line  **   /*linebuf_actuals*/,\n    Dwarf_Signed *   /*linecount_actuals*/,\n    Dwarf_Error  *   /* error*/);\n\n/* dwarf_srclines_dealloc_b(), created October 2015, is the\n   appropriate method for deallocating everything\n   and dwarf_srclines_from_linecontext(),\n   dwarf_srclines_twolevel_from_linecontext(),\n   and dwarf_srclines_b()  allocate.  */\nvoid dwarf_srclines_dealloc_b(Dwarf_Line_Context /*line_context*/);\n\n/*  New October 2015. */\n/*    The offset is in the relevent .debug_line or .debug_line.dwo\n    section (and in a split dwarf package file includes)\n    the base line table offset). */\nint dwarf_srclines_table_offset(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Unsigned * /*offset*/,\n    Dwarf_Error  * /* error*/);\n\n/*  New October 2015. */\n/*  Compilation Directory name for the current CU.\n    section (and in a split dwarf package file includes)\n    the base line table offset).  Do not free() the string,\n    it is in a dwarf section. */\nint dwarf_srclines_comp_dir(Dwarf_Line_Context /*line_context*/,\n    const char ** /*compilation_directory*/,\n    Dwarf_Error  *  /*error*/);\n\n/*  New October 2015.  Part of the two-level line table extension. */\n/*  Count is the real count of suprogram array entries. */\nint dwarf_srclines_subprog_count(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed * /*count*/,\n    Dwarf_Error  * /*error*/);\n\n/*  New October 2015. */\n/*  Index starts with 1, last is 'count' */\nint dwarf_srclines_subprog_data(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed     /*index*/,\n    const char **    /*name*/,\n    Dwarf_Unsigned * /*decl_file*/,\n    Dwarf_Unsigned * /*decl_line*/,\n    Dwarf_Error   *  /*error*/);\n\n/*  New October 2015. */\n/*  Count is the real count of files array entries.\n    This remains supported though it is pretty useless for\n    DWARF5.  To process DWARF5 as well\n    as DWARF 2,3,4 (in a uniform fashion)\n    use dwarf_srclines_files_indexes() instead.\n*/\nint dwarf_srclines_files_count(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed  *  /*count*/,\n    Dwarf_Error   *  /*error*/);\n\n/*  New March 2018. */\n/*  Count is the real count of files array entries.\n    Since DWARF 2,3,4 are zero origin indexes and\n    DWARF5 and later are one origin, this function\n    replaces dwarf_srclines_files_count(). */\nint dwarf_srclines_files_indexes(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed  *  /*baseindex*/,\n    Dwarf_Signed  *  /*count*/,\n    Dwarf_Signed  *  /*endindex*/,\n    Dwarf_Error   *  /*error*/);\n\n\n/*  New March 2018. Same as dwarf_srclines_files_data,\n    but adds the md5ptr field so cases where DW_LNCT_MD5\n    is present can return pointer to the MD5 value.\n    With DWARF 5 index starts with 0.\n    See dwarf_srclines_files_indexes() which makes\n    indexing through the files easy. */\nint dwarf_srclines_files_data_b(Dwarf_Line_Context line_context,\n    Dwarf_Signed     index_in,\n    const char **    name,\n    Dwarf_Unsigned * directory_index,\n    Dwarf_Unsigned * last_mod_time,\n    Dwarf_Unsigned * file_length,\n    Dwarf_Form_Data16 ** md5ptr,\n    Dwarf_Error    * error);\n\n/*  New October 2015. */\n/*  Unlike dwarf_srcfiles() this returns the raw file table\n    strings without the directory being prefixed.\n    Index starts with 1, last is 'count' */\nint dwarf_srclines_files_data(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed     /*index*/,\n    const char **    /*name*/,\n    Dwarf_Unsigned * /*directory_index*/,\n    Dwarf_Unsigned * /*last_mod_time*/,\n    Dwarf_Unsigned * /*file_length*/,\n    Dwarf_Error    * /* error*/);\n\n/*  New October 2015. */\n/*  Count is the real count of include array entries. */\nint dwarf_srclines_include_dir_count(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed *  /*count*/,\n    Dwarf_Error  * /* error*/);\n\n/*  New October 2015. */\n/*  Index starts with 1, last is 'count' */\nint dwarf_srclines_include_dir_data(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed    /*index*/,\n    const char **   /*name*/,\n    Dwarf_Error   * /* error*/);\n\n/*  New October 2015. */\n/*  The DWARF version number of this compile-unit\n    in the .debug_lines section and the number of\n    actual tables:0 (header with no lines),\n    1 (standard table), or 2 (experimental). */\nint dwarf_srclines_version(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Small    * /*table_count*/,\n    Dwarf_Error    * /*error*/);\n\n\nint dwarf_get_line_section_name_from_die(Dwarf_Die /*die*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\n\n/*  While 'filecount' is signed, the value\n    returned through the pointer is never negative.\n    Original libdwarf from 199x.  */\nint dwarf_srcfiles(Dwarf_Die /*die*/,\n    char***          /*srcfiles*/,\n    Dwarf_Signed *   /*filecount*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_linebeginstatement(Dwarf_Line /*line*/,\n    Dwarf_Bool  *    /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_lineendsequence(Dwarf_Line /*line*/,\n    Dwarf_Bool  *    /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_lineno(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_lineno*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_line_srcfileno(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*ret_fileno*/,\n    Dwarf_Error *    /*error*/);\n\n/* Is the line address from DW_LNS_set_address? */\nint dwarf_line_is_addr_set(Dwarf_Line /*line*/,\n    Dwarf_Bool *     /*is_addr_set*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_lineaddr(Dwarf_Line /*line*/,\n    Dwarf_Addr *     /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/* dwarf_lineoff is OBSOLETE as of December 2011. Do not use. */\nint dwarf_lineoff(Dwarf_Line /*line*/,\n    Dwarf_Signed  *  /*returned_lineoffset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_lineoff_b correctly returns an unsigned column number\n    through the pointer returned_lineoffset.\n    dwarf_lineoff_b() is new in December 2011.  */\nint dwarf_lineoff_b(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_lineoffset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_linesrc(Dwarf_Line /*line*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_lineblock(Dwarf_Line /*line*/,\n    Dwarf_Bool  *    /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\n/* We gather these into one call as it's likely one\n   will want all or none of them.  */\nint dwarf_prologue_end_etc(Dwarf_Line /* line */,\n    Dwarf_Bool  *    /*prologue_end*/,\n    Dwarf_Bool  *    /*eplogue_begin*/,\n    Dwarf_Unsigned * /* isa */,\n    Dwarf_Unsigned * /* discriminator */,\n    Dwarf_Error *    /*error*/);\n/* End line table operations */\n\n/* Two-level line tables:\n   When reading from an actuals table, dwarf_line_logical()\n   returns the logical row number for the line. */\nint dwarf_linelogical(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_logical*/,\n    Dwarf_Error*     /*error*/);\n\n/* Two-level line tables:\n   When reading from a logicals table, dwarf_linecontext()\n   returns the logical row number corresponding the the\n   calling context for an inlined call. */\nint dwarf_linecontext(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_context*/,\n    Dwarf_Error*     /*error*/);\n\n/* Two-level line tables:\n   When reading from a logicals table, dwarf_linesubprogno()\n   returns the index in the subprograms table of the inlined\n   subprogram. */\nint dwarf_line_subprogno(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*ret_subprogno*/,\n    Dwarf_Error *    /*error*/);\n\n/* Two-level line tables:\n   When reading from a logicals table, dwarf_linesubprog()\n   returns the name of the inlined subprogram, its declaration\n   filename, and its declaration line number, if available. */\nint dwarf_line_subprog(Dwarf_Line /*line*/,\n    char   **        /*returned_subprog_name*/,\n    char   **        /*returned_filename*/,\n    Dwarf_Unsigned * /*returned_lineno*/,\n    Dwarf_Error *    /*error*/);\n/* End of line table interfaces. */\n\n/* .debug_names names table interfaces. DWARF5 */\n/*  New April 2017 */\nint dwarf_debugnames_header(Dwarf_Debug /*dbg*/,\n    Dwarf_Dnames_Head * /*dn_out*/,\n\n    /* *dn_count_out returns the number of name indexes\n        in the .debug_names section */\n    Dwarf_Unsigned    * /*dn_index_count_out*/,\n    Dwarf_Error *       /*error*/);\n\n/*  Since there may be multiple name indexes in a .debug_names\n    section we use index_number starting at 0 through\n    dn_index_count_out-1. */\nint dwarf_debugnames_sizes(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n\n    Dwarf_Unsigned * /*section_offset*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Unsigned * /*offset_size*/, /* 4 or 8 */\n\n    /* The counts are entry counts, not byte sizes. */\n    Dwarf_Unsigned * /*comp_unit_count*/,\n    Dwarf_Unsigned * /*local_type_unit_count*/,\n    Dwarf_Unsigned * /*foreign_type_unit_count*/,\n    Dwarf_Unsigned * /*bucket_count*/,\n    Dwarf_Unsigned * /*name_count*/,\n\n    /* The following are counted in bytes */\n    Dwarf_Unsigned * /*indextable_overall_length*/,\n    Dwarf_Unsigned * /*abbrev_table_size*/,\n    Dwarf_Unsigned * /*entry_pool_size*/,\n    Dwarf_Unsigned * /*augmentation_string_size*/,\n\n    Dwarf_Error *       /*error*/);\n\nint dwarf_debugnames_cu_entry(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*offset_number*/,\n    Dwarf_Unsigned    * /*offset_count*/,\n    Dwarf_Unsigned    * /*offset*/,\n    Dwarf_Error *       /*error*/);\nint dwarf_debugnames_local_tu_entry(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*offset_number*/,\n    Dwarf_Unsigned    * /*offset_count*/,\n    Dwarf_Unsigned    * /*offset*/,\n    Dwarf_Error *       /*error*/);\nint dwarf_debugnames_foreign_tu_entry(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*sig_number*/,\n    Dwarf_Unsigned    * /*sig_mininum*/,\n    Dwarf_Unsigned    * /*sig_count*/,\n    Dwarf_Sig8        * /*signature*/,\n    Dwarf_Error *       /*error*/);\nint dwarf_debugnames_bucket(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*bucket_number*/,\n    Dwarf_Unsigned    * /*bucket_count*/,\n    Dwarf_Unsigned    * /*index_of_name_entry*/,\n    Dwarf_Error *       /*error*/);\n\nint dwarf_debugnames_name(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*name_entry*/,\n    Dwarf_Unsigned    * /*names_count*/,\n    Dwarf_Sig8        * /*signature*/,\n    Dwarf_Unsigned    * /*offset_to_debug_str*/,\n    Dwarf_Unsigned    * /*offset_in_entrypool*/,\n    Dwarf_Error *       /*error*/);\n\nint dwarf_debugnames_abbrev_by_index(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned    /*index_number*/,\n    Dwarf_Unsigned    /*abbrev_entry*/,\n    Dwarf_Unsigned *  /*abbrev_code*/,\n    Dwarf_Unsigned *  /*tag*/,\n\n    /*  The number of valid abbrev_entry values: 0 to number_of_abbrev-1\n        */\n    Dwarf_Unsigned *  /*number_of_abbrev*/,\n\n    /*  The number of attr/form pairs, not counting the trailing\n        0,0 pair. */\n    Dwarf_Unsigned * /*number_of_attr_form_entries*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_debugnames_abbrev_by_code(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned    /*index_number*/,\n    Dwarf_Unsigned    /*abbrev_code*/,\n    Dwarf_Unsigned *  /*tag*/,\n\n    /*  The number of this code/tag as an array index. */\n    Dwarf_Unsigned *  /*index_of_abbrev*/,\n\n    /*  The number of attr/form pairs, not counting the trailing\n        0,0 pair. */\n    Dwarf_Unsigned * /*number_of_attr_form_entries*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_debugnames_abbrev_form_by_index(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned   /*index_number*/,\n    Dwarf_Unsigned   /*abbrev_entry_index*/,\n    Dwarf_Unsigned   /*abbrev_form_index*/,\n    Dwarf_Unsigned * /*name_index_attr*/,\n    Dwarf_Unsigned * /*form*/,\n    Dwarf_Unsigned * /*number_of_attr_form_entries*/,\n    Dwarf_Error    * /*error*/);\n\n\n/*  This, combined with dwarf_debugnames_entrypool_values(),\n    lets one examine as much or as little of an entrypool\n    as one wants to by alternately calling these two\n    functions. */\nint dwarf_debugnames_entrypool(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*offset_in_entrypool*/,\n    Dwarf_Unsigned *    /*abbrev_code*/,\n    Dwarf_Unsigned *    /*tag*/,\n    Dwarf_Unsigned *    /*value_count*/,\n    Dwarf_Unsigned *    /*index_of_abbrev*/,\n    Dwarf_Unsigned *    /*offset_of_initial_value*/,\n    Dwarf_Error *       /*error*/);\n\n/*  Caller, knowing array size needed, passes in arrays\n    it allocates of for idx, form, offset-size-values,\n    and signature values.  Caller must examine idx-number\n    and form to decide, for each array element, whether\n    the offset or the signature contains the value.\n    So this returns all the values for the abbrev code.\n    And points via offset_of_next to the next abbrev code.\n    */\nint dwarf_debugnames_entrypool_values(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*index_of_abbrev*/,\n    Dwarf_Unsigned      /*offset_in_entrypool_of_values*/,\n    Dwarf_Unsigned *    /*array_dw_idx_number*/,\n    Dwarf_Unsigned *    /*array_form*/,\n    Dwarf_Unsigned *    /*array_of_offsets*/,\n    Dwarf_Sig8     *    /*array_of_signatures*/,\n\n    /*  offset of the next entrypool entry. */\n    Dwarf_Unsigned *    /*offset_of_next_entrypool*/,\n    Dwarf_Error *       /*error*/);\n\n/*  FIXME: add interfaces for string search given hash and\n    string */\n\n\n\n/* end of .debug_names interfaces. */\n\n/*  New October 2019.  Access to the GNU section named\n    .gnu_debuglink  and/or the section .note.gnu.build-id.\n    See\n    https://sourceware.org/gdb/onlinedocs/gdb/\n        Separate-Debug-Files.html\n\n    If no debuglink then name_returned,crc_returned and\n    debuglink_path_returned will get set 0 through the pointers.\n\n    If no .note.gnu.build-id then  buildid_length_returned,\n    and buildid_returned will be set 0 through the pointers.\n\n    Caller frees space returned by debuglink_fullpath_returned.\n\n    See libdwarf2.1.mm revision 3.13 or later for\n    additional important details.\n*/\n\nint dwarf_gnu_debuglink(Dwarf_Debug /*dbg*/,\n    char     **    /*debuglink_path_returned */,\n    unsigned char ** /*crc_returned from the debuglink section*/,\n    char     **    /*debuglink_fullpath_returned free this*/,\n    unsigned int * /*debuglink_path_count_returned */,\n    unsigned int * /*buildid_type_returned */,\n    char     **    /*buildid_owner_name_returned*/,\n    unsigned char ** /*buildid_returned*/,\n    unsigned int * /*buildid_length_returned*/,\n    char     ***   /*paths_returned*/,\n    unsigned int * /*paths_length_returned*/,\n    Dwarf_Error*   /*error*/);\n\n/*  Only useful inside dwarfexample/dwdebuglink.c\n    so we can show all that is going on.\n*/\nint dwarf_add_debuglink_global_path(Dwarf_Debug /*dbg*/,\n    const char *pathname,\n    Dwarf_Error* /*error*/);\n\n/*  crc32 used for debuglink crc calculation.\n    Caller passes pointer to array of 4 unsigned char\n    provided by the caller and if this returns\n    DW_DLV_OK that is filled in. */\nint dwarf_crc32 (Dwarf_Debug /*dbg*/,unsigned char * /*crcbuf*/,\n    Dwarf_Error * /*error*/);\n\n/*  Public interface to the real crc calculation\n    just in case some find it useful. */\nunsigned int dwarf_basic_crc32 (const unsigned char * /*buf*/,\n    unsigned long /*len*/, unsigned int /*init*/);\n\n/*  global name space operations (.debug_pubnames access)\n    The pubnames and similar sections are rarely used. Few compilers\n    emit them. They are DWARF 2,3,4 only., not DWARF 5.  */\n\n/*  New March 2019. Special for dwarfdump.\n    Sets a flag in the dbg. Always returns DW_DLV_OK\n    and (as of March 2020) never touches error */\nint dwarf_return_empty_pubnames(Dwarf_Debug /*dbg*/,\n    int /* flag */,\n    Dwarf_Error* /*error*/);\n\nint dwarf_get_globals(Dwarf_Debug /*dbg*/,\n    Dwarf_Global**   /*globals*/,\n    Dwarf_Signed *   /*number_of_globals*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_globals_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Global*    /*globals*/,\n    Dwarf_Signed     /*number_of_globals*/);\n\nint dwarf_globname(Dwarf_Global /*glob*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_global_die_offset(Dwarf_Global /*global*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error *    /*error*/);\n\n/* This returns the CU die global offset if one knows the\n   CU header global offset.\n   See also dwarf_CU_dieoffset_given_die(). */\nint dwarf_get_cu_die_offset_given_cu_header_offset(\n    Dwarf_Debug      /*dbg*/,\n    Dwarf_Off        /*in_cu_header_offset*/,\n    Dwarf_Off *  /*out_cu_die_offset*/,\n    Dwarf_Error *    /*err*/);\n\n/*  The _b form is new October 2011. */\nint dwarf_get_cu_die_offset_given_cu_header_offset_b(\n    Dwarf_Debug      /*dbg*/,\n    Dwarf_Off        /*in_cu_header_offset*/,\n    Dwarf_Bool       /*is_info. True means look in debug_Info,\n        false use debug_types.*/,\n    Dwarf_Off *  /*out_cu_die_offset*/,\n    Dwarf_Error *    /*err*/);\n\n#ifdef __sgi /* pragma is sgi MIPS only */\n#pragma optional dwarf_get_cu_die_offset_given_cu_header_offset\n#endif\n\nint dwarf_global_cu_offset(Dwarf_Global /*global*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_global_name_offsets(Dwarf_Global /*global*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  New February 2019. For more complete dwarfdump printing.\n    For each CU represented in .debug_pubnames, etc,\n    there is a .debug_pubnames header.  For any given\n    Dwarf_Global this returns the content of the applicable\n    header. */\nint dwarf_get_globals_header(Dwarf_Global /*global*/,\n    Dwarf_Off      * /*offset_pub_header*/,\n    Dwarf_Unsigned * /*length_size*/,\n    Dwarf_Unsigned * /*length_pub*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Unsigned * /*header_info_offset*/,\n    Dwarf_Unsigned * /*info_length*/,\n    Dwarf_Error*   /*error*/);\n\n/* Static function name operations.  */\nint dwarf_get_funcs(Dwarf_Debug    /*dbg*/,\n    Dwarf_Func**     /*funcs*/,\n    Dwarf_Signed *   /*number_of_funcs*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_funcs_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Func*      /*funcs*/,\n    Dwarf_Signed     /*number_of_funcs*/);\n\nint dwarf_funcname(Dwarf_Func /*func*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_func_die_offset(Dwarf_Func /*func*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_func_cu_offset(Dwarf_Func /*func*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_func_name_offsets(Dwarf_Func /*func*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* User-defined type name operations, SGI IRIX .debug_typenames section.\n   Same content as DWARF3 .debug_pubtypes, but defined years before\n   .debug_pubtypes was defined.   SGI IRIX only. */\nint dwarf_get_types(Dwarf_Debug    /*dbg*/,\n    Dwarf_Type**     /*types*/,\n    Dwarf_Signed *   /*number_of_types*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_types_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Type*      /*types*/,\n    Dwarf_Signed     /*number_of_types*/);\n\n\nint dwarf_typename(Dwarf_Type /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_type_die_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_type_cu_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_type_name_offsets(Dwarf_Type    /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* User-defined type name operations, DWARF3  .debug_pubtypes section.\n*/\nint dwarf_get_pubtypes(Dwarf_Debug    /*dbg*/,\n    Dwarf_Type**     /*types*/,\n    Dwarf_Signed *   /*number_of_types*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_pubtypes_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Type*      /*pubtypes*/,\n    Dwarf_Signed     /*number_of_pubtypes*/);\n\n\nint dwarf_pubtypename(Dwarf_Type /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_pubtype_type_die_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_pubtype_cu_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_pubtype_name_offsets(Dwarf_Type    /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* File-scope static variable name operations.  */\nint dwarf_get_vars(Dwarf_Debug    /*dbg*/,\n    Dwarf_Var**      /*vars*/,\n    Dwarf_Signed *   /*number_of_vars*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_vars_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Var*       /*vars*/,\n    Dwarf_Signed     /*number_of_vars*/);\n\n\nint dwarf_varname(Dwarf_Var /*var*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_var_die_offset(Dwarf_Var /*var*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_var_cu_offset(Dwarf_Var /*var*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_var_name_offsets(Dwarf_Var /*var*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* weak name operations.  */\nint dwarf_get_weaks(Dwarf_Debug    /*dbg*/,\n    Dwarf_Weak**     /*weaks*/,\n    Dwarf_Signed *   /*number_of_weaks*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_weaks_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Weak*      /*weaks*/,\n    Dwarf_Signed     /*number_of_weaks*/);\n\n\nint dwarf_weakname(Dwarf_Weak /*weak*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_weak_die_offset(Dwarf_Weak /*weak*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_weak_cu_offset(Dwarf_Weak /*weak*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_weak_name_offsets(Dwarf_Weak    /*weak*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  location list section operation.  (.debug_loc access)\n    DO NOT USE, it cannot deal with\n    recent dwarf or CUs with different\n    address sizes.  Use dwarf_get_locdesc_entry_c() instead.\n*/\nint dwarf_get_loclist_entry(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*offset*/,\n    Dwarf_Addr*      /*hipc*/,\n    Dwarf_Addr*      /*lopc*/,\n    Dwarf_Ptr*       /*data*/,\n    Dwarf_Unsigned*  /*entry_len*/,\n    Dwarf_Unsigned*  /*next_entry*/,\n    Dwarf_Error*     /*error*/);\n\n/* abbreviation section operations */\nint dwarf_get_abbrev(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*offset*/,\n    Dwarf_Abbrev  *  /*returned_abbrev*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Unsigned*  /*attr_count*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_abbrev_tag(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Half*      /*return_tag_number*/,\n    Dwarf_Error*     /*error*/);\nint dwarf_get_abbrev_code(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Unsigned*  /*return_code_number*/,\n    Dwarf_Error*     /*error*/);\n\n/* See comments in dwarf_abbrev.c. Not an entirely safe function. */\nint dwarf_get_abbrev_count(Dwarf_Debug /*dbg*/);\n\nint dwarf_get_abbrev_children_flag(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Signed*    /*return_flag*/,\n    Dwarf_Error*     /*error*/);\n\n/*  New August 2019.\n    Most uses will call with filter_outliers non-zero.\n    In that case impossible values return DW_DLV_ERROR.\n    Those doing extra things (like dwarfdump) will\n    call with filter_outliers zero to get the raw data\n    (effectively); */\nint dwarf_get_abbrev_entry_b(Dwarf_Abbrev abbrev,\n    Dwarf_Unsigned indx,\n    Dwarf_Bool     filter_outliers,\n    Dwarf_Unsigned * returned_attr_num,\n    Dwarf_Unsigned * returned_form,\n    Dwarf_Signed   * returned_implict_const,\n    Dwarf_Off      * offset,\n    Dwarf_Error    * error);\n\n/*  Obsolete because it cannot return the\n    DW_FORM_implicit_const value. */\nint dwarf_get_abbrev_entry(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Signed     /*index*/,\n    Dwarf_Half  *    /*returned_attr_num*/,\n    Dwarf_Signed*    /*form*/,\n    Dwarf_Off*       /*offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_string_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\n/* consumer string section operation */\nint dwarf_get_str(Dwarf_Debug /*dbg*/,\n    Dwarf_Off        /*offset*/,\n    char**           /*string*/,\n    Dwarf_Signed *   /*strlen_of_string*/,\n    Dwarf_Error*     /*error*/);\n\n/* New November 2015 */\nint dwarf_get_frame_section_name(Dwarf_Debug /*dbg*/,\n   const char ** /*section_name_out*/,\n   Dwarf_Error * /*error*/);\n\n/* New November 2015 */\nint dwarf_get_frame_section_name_eh_gnu(Dwarf_Debug /*dbg*/,\n   const char ** /*section_name_out*/,\n   Dwarf_Error * /*error*/);\n\n/* Consumer op on  gnu .eh_frame info */\nint dwarf_get_fde_list_eh(\n    Dwarf_Debug      /*dbg*/,\n    Dwarf_Cie**      /*cie_data*/,\n    Dwarf_Signed*    /*cie_element_count*/,\n    Dwarf_Fde**      /*fde_data*/,\n    Dwarf_Signed*    /*fde_element_count*/,\n    Dwarf_Error*     /*error*/);\n\n\n/* consumer operations on frame info: .debug_frame */\nint dwarf_get_fde_list(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie**      /*cie_data*/,\n    Dwarf_Signed*    /*cie_element_count*/,\n    Dwarf_Fde**      /*fde_data*/,\n    Dwarf_Signed*    /*fde_element_count*/,\n    Dwarf_Error*     /*error*/);\n\n/* Release storage gotten by dwarf_get_fde_list_eh() or\n   dwarf_get_fde_list() */\nvoid dwarf_fde_cie_list_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie *  /*cie_data*/,\n    Dwarf_Signed /*cie_element_count*/,\n    Dwarf_Fde *  /*fde_data*/,\n    Dwarf_Signed /*fde_element_count*/);\n\n\n\nint dwarf_get_fde_range(Dwarf_Fde /*fde*/,\n    Dwarf_Addr*      /*low_pc*/,\n    Dwarf_Unsigned*  /*func_length*/,\n    Dwarf_Ptr*       /*fde_bytes*/,\n    Dwarf_Unsigned*  /*fde_byte_length*/,\n    Dwarf_Off*       /*cie_offset*/,\n    Dwarf_Signed*    /*cie_index*/,\n    Dwarf_Off*       /*fde_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Useful for IRIX only:  see dwarf_get_cie_augmentation_data()\n    dwarf_get_fde_augmentation_data() for GNU .eh_frame. */\nint dwarf_get_fde_exception_info(Dwarf_Fde /*fde*/,\n    Dwarf_Signed*    /* offset_into_exception_tables */,\n    Dwarf_Error*     /*error*/);\n\n\nint dwarf_get_cie_of_fde(Dwarf_Fde /*fde*/,\n    Dwarf_Cie *      /*cie_returned*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_cie_info_b(Dwarf_Cie /*cie*/,\n    Dwarf_Unsigned * /*bytes_in_cie*/,\n    Dwarf_Small*     /*version*/,\n    char        **   /*augmenter*/,\n    Dwarf_Unsigned*  /*code_alignment_factor*/,\n    Dwarf_Signed*    /*data_alignment_factor*/,\n    Dwarf_Half*      /*return_address_register_rule*/,\n    Dwarf_Ptr*       /*initial_instructions*/,\n    Dwarf_Unsigned*  /*initial_instructions_length*/,\n    Dwarf_Half*      /*offset_size*/,\n    Dwarf_Error*     /*error*/);\nint dwarf_get_cie_info(Dwarf_Cie /*cie*/,\n    Dwarf_Unsigned * /*bytes_in_cie*/,\n    Dwarf_Small*     /*version*/,\n    char        **   /*augmenter*/,\n    Dwarf_Unsigned*  /*code_alignment_factor*/,\n    Dwarf_Signed*    /*data_alignment_factor*/,\n    Dwarf_Half*      /*return_address_register_rule*/,\n    Dwarf_Ptr*       /*initial_instructions*/,\n    Dwarf_Unsigned*  /*initial_instructions_length*/,\n    Dwarf_Error*     /*error*/);\n\n/* dwarf_get_cie_index new September 2009. */\nint dwarf_get_cie_index(\n    Dwarf_Cie /*cie*/,\n    Dwarf_Signed* /*index*/,\n    Dwarf_Error* /*error*/ );\n\n\nint dwarf_get_fde_instr_bytes(Dwarf_Fde /*fde*/,\n    Dwarf_Ptr *      /*outinstrs*/, Dwarf_Unsigned * /*outlen*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_get_fde_info_for_all_regs(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Regtable*  /*reg_table*/,\n    Dwarf_Addr*      /*row_pc*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_info_for_all_regs3(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Regtable3* /*reg_table*/,\n    Dwarf_Addr*      /*row_pc*/,\n    Dwarf_Error*     /*error*/);\n\n/* In this older interface DW_FRAME_CFA_COL is a meaningful\n    column (which does not work well with DWARF3 or\n    non-MIPS architectures). */\nint dwarf_get_fde_info_for_reg(Dwarf_Fde /*fde*/,\n    Dwarf_Half       /*table_column*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Signed*    /*offset_relevant*/,\n    Dwarf_Signed*    /*register*/,\n    Dwarf_Signed*    /*offset*/,\n    Dwarf_Addr*      /*row_pc*/,\n    Dwarf_Error*     /*error*/);\n\n/* See discussion of dw_value_type, libdwarf.h.\n   Use of DW_FRAME_CFA_COL is not meaningful in this interface.\n   See dwarf_get_fde_info_for_cfa_reg3().\n*/\n/* dwarf_get_fde_info_for_reg3 is useful on a single column, but\n   it is inefficient to iterate across all table_columns using this\n   function.  Instead call dwarf_get_fde_info_for_all_regs3() and index\n   into the table it fills in. */\nint dwarf_get_fde_info_for_reg3(Dwarf_Fde /*fde*/,\n    Dwarf_Half       /*table_column*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed *   /*register*/,\n    Dwarf_Signed *   /*offset_or_block_len*/,\n    Dwarf_Ptr    *   /*block_ptr */,\n    Dwarf_Addr   *   /*row_pc_out*/,\n    Dwarf_Error  *    /*error*/);\n\nint dwarf_get_fde_info_for_reg3_b(Dwarf_Fde /*fde*/,\n    Dwarf_Half       /*table_column*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed *    /*register*/,\n    Dwarf_Signed *    /*offset_or_block_len*/,\n    Dwarf_Ptr    *    /*block_ptr */,\n    Dwarf_Addr   *    /*row_pc_out*/,\n    Dwarf_Bool   *    /* has_more_rows */,\n    Dwarf_Addr   *    /* subsequent_pc */,\n    Dwarf_Error  *    /*error*/);\n\n/*  Use this or the next function to get the cfa.\n    New function, June 11, 2016*/\nint dwarf_get_fde_info_for_cfa_reg3_b(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed*    /*register*/,\n    Dwarf_Signed*    /*offset_or_block_len*/,\n    Dwarf_Ptr   *    /*block_ptr */,\n    Dwarf_Addr*      /*row_pc_out*/,\n    Dwarf_Bool  *    /* has_more_rows */,\n    Dwarf_Addr  *    /* subsequent_pc */,\n    Dwarf_Error*     /*error*/);\n/* Use this to get the cfa. Or the above function. */\nint dwarf_get_fde_info_for_cfa_reg3(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed*    /*register*/,\n    Dwarf_Signed*    /*offset_or_block_len*/,\n    Dwarf_Ptr   *    /*block_ptr */,\n    Dwarf_Addr*      /*row_pc_out*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_for_die(Dwarf_Debug /*dbg*/,\n    Dwarf_Die        /*subr_die */,\n    Dwarf_Fde  *     /*returned_fde*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_n(Dwarf_Fde* /*fde_data*/,\n    Dwarf_Unsigned   /*fde_index*/,\n    Dwarf_Fde  *     /*returned_fde*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_at_pc(Dwarf_Fde* /*fde_data*/,\n    Dwarf_Addr       /*pc_of_interest*/,\n    Dwarf_Fde  *     /*returned_fde*/,\n    Dwarf_Addr*      /*lopc*/,\n    Dwarf_Addr*      /*hipc*/,\n    Dwarf_Error*     /*error*/);\n\n/* GNU .eh_frame augmentation information, raw form, see\n   Linux Standard Base Core Specification version 3.0 . */\nint dwarf_get_cie_augmentation_data(Dwarf_Cie /* cie*/,\n    Dwarf_Small **   /* augdata */,\n    Dwarf_Unsigned * /* augdata_len */,\n    Dwarf_Error*     /*error*/);\n/* GNU .eh_frame augmentation information, raw form, see\n   Linux Standard Base Core Specification version 3.0 . */\nint dwarf_get_fde_augmentation_data(Dwarf_Fde /* fde*/,\n    Dwarf_Small **   /* augdata */,\n    Dwarf_Unsigned * /* augdata_len */,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_expand_frame_instructions(Dwarf_Cie /*cie*/,\n    Dwarf_Ptr        /*instruction*/,\n    Dwarf_Unsigned   /*i_length*/,\n    Dwarf_Frame_Op** /*returned_op_list*/,\n    Dwarf_Signed*    /*op_count*/,\n    Dwarf_Error*     /*error*/);\n\n/* Operations on .debug_aranges. */\nint dwarf_get_aranges(Dwarf_Debug /*dbg*/,\n    Dwarf_Arange**   /*aranges*/,\n    Dwarf_Signed *   /*arange_count*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_ranges_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_get_aranges_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\n\n\nint dwarf_get_arange(\n    Dwarf_Arange*    /*aranges*/,\n    Dwarf_Unsigned   /*arange_count*/,\n    Dwarf_Addr       /*address*/,\n    Dwarf_Arange *   /*returned_arange*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_cu_die_offset(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_arange_cu_header_offset(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Off*       /*return_cu_header_offset*/,\n    Dwarf_Error*     /*error*/);\n#ifdef __sgi /* pragma is sgi MIPS only */\n#pragma optional dwarf_get_arange_cu_header_offset\n#endif\n\n/* DWARF2,3 interface. No longer really adequate (it was never\n   right for segmented address spaces, please switch\n   to using dwarf_get_arange_info_b instead.\n   There is no effective difference between these\n   functions  if the address space\n   of the target is not segmented.  */\nint dwarf_get_arange_info(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Addr*      /*start*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Off*       /*cu_die_offset*/,\n    Dwarf_Error*     /*error*/ );\n\n/* New for DWARF4, entries may have segment information.\n   *segment is only meaningful if *segment_entry_size is non-zero. */\nint dwarf_get_arange_info_b(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Unsigned*  /*segment*/,\n    Dwarf_Unsigned*  /*segment_entry_size*/,\n    Dwarf_Addr    *  /*start*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Off     *  /*cu_die_offset*/,\n    Dwarf_Error   *  /*error*/ );\n\n/*  BEGIN: DWARF5 .debug_macro  interfaces\n    NEW November 2015.  */\nint dwarf_get_macro_context(Dwarf_Die /*die*/,\n    Dwarf_Unsigned      * /*version_out*/,\n    Dwarf_Macro_Context * /*macro_context*/,\n    Dwarf_Unsigned      * /*macro_unit_offset_out*/,\n    Dwarf_Unsigned      * /*macro_ops_count_out*/,\n    Dwarf_Unsigned      * /*macro_ops_data_length_out*/,\n    Dwarf_Error         * /*error*/);\n\n/*  Just like dwarf_get_macro_context, but instead of using\n    DW_AT_macros or DW_AT_GNU_macros to get the offset we just\n    take the offset given. */\nint dwarf_get_macro_context_by_offset(Dwarf_Die /*die*/,\n    Dwarf_Unsigned        /*offset*/,\n    Dwarf_Unsigned      * /*version_out*/,\n    Dwarf_Macro_Context * /*macro_context*/,\n    Dwarf_Unsigned      * /*macro_ops_count_out*/,\n    Dwarf_Unsigned      * /*macro_ops_data_length*/,\n    Dwarf_Error         * /*error*/);\n\nvoid dwarf_dealloc_macro_context(Dwarf_Macro_Context /*mc*/);\nint dwarf_get_macro_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*sec_name_out*/,\n    Dwarf_Error * /*err*/);\n\nint dwarf_macro_context_head(Dwarf_Macro_Context /*head*/,\n    Dwarf_Half     * /*version*/,\n    Dwarf_Unsigned * /*mac_offset*/,\n    Dwarf_Unsigned * /*mac_len*/,\n    Dwarf_Unsigned * /*mac_header_len*/,\n    unsigned int   * /*flags*/,\n    Dwarf_Bool     * /*has_line_offset*/,\n    Dwarf_Unsigned * /*line_offset*/,\n    Dwarf_Bool     * /*has_offset_size_64*/,\n    Dwarf_Bool     * /*has_operands_table*/,\n    Dwarf_Half     * /*opcode_count*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Returns data from the operands table\n    in the macro unit header. */\nint dwarf_macro_operands_table(Dwarf_Macro_Context /*head*/,\n    Dwarf_Half    /*index*/, /* 0 to opcode_count -1 */\n    Dwarf_Half  * /*opcode_number*/,\n    Dwarf_Half  * /*operand_count*/,\n    const Dwarf_Small ** /*operand_array*/,\n    Dwarf_Error * /*error*/);\n\n/*  Access to the macro operations, 0 to macro_ops_count_out-1\n    Where the last of these will have macro_operator 0 (which appears\n    in the ops data and means end-of-ops).\n    op_start_section_offset is the section offset of\n    the macro operator (which is a single unsigned byte,\n    and is followed by the macro operand data). */\nint dwarf_get_macro_op(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*op_start_section_offset*/,\n    Dwarf_Half     * /*macro_operator*/,\n    Dwarf_Half     * /*forms_count*/,\n    const Dwarf_Small **  /*formcode_array*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_get_macro_defundef(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*line_number*/,\n    Dwarf_Unsigned * /*index*/,\n    Dwarf_Unsigned * /*offset*/,\n    Dwarf_Half     * /*forms_count*/,\n    const char    ** /*macro_string*/,\n    Dwarf_Error    * /*error*/);\nint dwarf_get_macro_startend_file(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*line_number*/,\n    Dwarf_Unsigned * /*name_index_to_line_tab*/,\n    const char    ** /*src_file_name*/,\n    Dwarf_Error    * /*error*/);\nint dwarf_get_macro_import(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*target_offset*/,\n    Dwarf_Error    * /*error*/);\n\n/*  END: DWARF5 .debug_macro interfaces. */\n\n/* consumer .debug_macinfo information interface.\n*/\nstruct Dwarf_Macro_Details_s {\n    Dwarf_Off    dmd_offset; /* offset, in the section,\n        of this macro info */\n    Dwarf_Small  dmd_type;   /* the type, DW_MACINFO_define etc*/\n    Dwarf_Signed dmd_lineno; /* the source line number where\n        applicable and vend_def number if\n        vendor_extension op */\n\n    Dwarf_Signed dmd_fileindex;/* the source file index:\n        applies to define undef start_file */\n    char *       dmd_macro;  /* macro name (with value for defineop)\n        string from vendor ext */\n};\n\n/*  dwarf_print_lines is for use by dwarfdump: it prints\n    line info to stdout.\n    The _dwarf name is obsolete. Use dwarf_ instead.\n    Added extra argnument 2/2009 for better checking.\n*/\nint _dwarf_print_lines(Dwarf_Die /*cu_die*/,Dwarf_Error * /*error*/);\nint dwarf_print_lines(Dwarf_Die /*cu_die*/,Dwarf_Error * /*error*/,\n   int * /*error_count_out */);\n\n/*  As of August 2013, dwarf_print_lines() no longer uses printf.\n    Instead it calls back to the application using a function pointer\n    once per line-to-print.  The lines passed back already have any needed\n    newlines.    The following struct is used to initialize\n    the callback mechanism.\n\n    Failing to call the dwarf_register_printf_callback() function will\n    prevent the lines from being passed back but such omission\n    is not an error.\n    See libdwarf2.1.mm for further documentation.\n\n    The return value is the previous set of callback values.\n*/\n\ntypedef void (* dwarf_printf_callback_function_type)\n    (void * /*user_pointer*/, const char * /*linecontent*/);\n\nstruct Dwarf_Printf_Callback_Info_s {\n    void *                        dp_user_pointer;\n    dwarf_printf_callback_function_type dp_fptr;\n    char *                        dp_buffer;\n    unsigned int                  dp_buffer_len;\n    int                           dp_buffer_user_provided;\n    void *                        dp_reserved;\n};\n\n/*  If called with a NULL newvalues pointer, it simply returns\n    the current set of values for this Dwarf_Debug. */\nstruct  Dwarf_Printf_Callback_Info_s\ndwarf_register_printf_callback(Dwarf_Debug /*dbg*/,\n    struct  Dwarf_Printf_Callback_Info_s * /*newvalues*/);\n\n\n/*  dwarf_check_lineheader lets dwarfdump get detailed messages\n    about some compiler errors we detect.\n    We return the count of detected errors through the\n    pointer.\n\n    Use dwarf_check_lineheader_b() (new 14 April 2020)\n    in place of dwarf_check_lineheader().\n*/\nint dwarf_check_lineheader_b(Dwarf_Die /*cu_die*/,\n    int */*errcount_out*/,\n    Dwarf_Error * /*error*/);\nvoid dwarf_check_lineheader(Dwarf_Die /*cu_die*/,\n    int * /*errcount_out*/);\n\n/*  dwarf_ld_sort_lines helps SGI IRIX ld\n    rearrange lines in .debug_line in a .o created with a text\n    section per function.\n        -OPT:procedure_reorder=ON\n    where ld-cord (cord(1)ing by ld,\n    not by cord(1)) may have changed the function order.\n    The _dwarf name is obsolete. Use dwarf_ instead.\n*/\nint _dwarf_ld_sort_lines(\n    void *         /*orig_buffer*/,\n    unsigned long  /* buffer_len*/,\n    int            /*is_64_bit*/,\n    int *          /*any_change*/,\n    int *          /*err_code*/);\nint dwarf_ld_sort_lines(\n    void *         /*orig_buffer*/,\n    unsigned long  /*buffer_len*/,\n    int            /*is_64_bit*/,\n    int *          /*any_change*/,\n    int *          /*err_code*/);\n\n/* Used by dwarfdump -v to print fde offsets from debugging\n   info.\n   The _dwarf name is obsolete. Use dwarf_ instead.\n*/\nint _dwarf_fde_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Fde         /*in_fde*/,\n    Dwarf_Off *       /*fde_off*/,\n    Dwarf_Off *       /*cie_off*/,\n    Dwarf_Error *     /*err*/);\n\nint dwarf_fde_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Fde         /*in_fde*/,\n    Dwarf_Off *       /*fde_off*/,\n    Dwarf_Off *       /*cie_off*/,\n    Dwarf_Error *     /*err*/);\n\n/* Used by dwarfdump -v to print cie offsets from debugging\n   info.\n   The _dwarf name is obsolete. Use dwarf_ instead.\n*/\nint dwarf_cie_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie     /*in_cie*/,\n    Dwarf_Off *   /*cie_off */,\n    Dwarf_Error * /*err*/);\nint _dwarf_cie_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie     /*in_cie*/,\n    Dwarf_Off *   /*cie_off*/,\n    Dwarf_Error * /*err*/);\n\ntypedef struct Dwarf_Macro_Details_s Dwarf_Macro_Details;\n\nchar *dwarf_find_macro_value_start(char * /*macro_string*/);\n\nint dwarf_get_macro_details(Dwarf_Debug /*dbg*/,\n    Dwarf_Off            /*macro_offset*/,\n    Dwarf_Unsigned       /*maximum_count*/,\n    Dwarf_Signed         * /*entry_count*/,\n    Dwarf_Macro_Details ** /*details*/,\n    Dwarf_Error *        /*err*/);\n\n\n/*  dwarf_get_offset_size() New October 2015 */\nint dwarf_get_offset_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Half  *    /*offset_size*/,\n    Dwarf_Error *    /*error*/);\nint dwarf_get_address_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Half  *    /*addr_size*/,\n    Dwarf_Error *    /*error*/);\nint dwarf_get_die_address_size(Dwarf_Die /*die*/,\n    Dwarf_Half  *    /*addr_size*/,\n    Dwarf_Error *    /*error*/);\n\nenum Dwarf_Form_Class dwarf_get_form_class(\n    Dwarf_Half /* dwversion */,\n    Dwarf_Half /* attrnum */,\n    Dwarf_Half /*offset_size */,\n    Dwarf_Half /*form*/);\n\n\n/*   BEGIN gdbindex operations interfaces. */\n/*  .gdb_index section operations.\n    A GDB extension. Completely different than\n    .debug_gnu_pubnames or .debug_gnu_pubtypes sections.\n    The section is in some executables and if present\n    is used to quickly map an address or name to\n    a skeleton CU or TU.  If present then there are\n    .dwo or .dwp files somewhere to make detailed\n    debugging possible (up to user code to\n    find it/them and deal with them).\n\n    Version 8 built by gdb, so type entries are ok as is.\n    Version 7 built by the 'gold' linker and type index\n    entries for a CU must be derived othewise, the\n    type index is not correct... ? FIXME\n    */\n\n/*  Creates a Dwarf_Gdbindex, returning it and\n    its values through the pointers. */\nint dwarf_gdbindex_header(Dwarf_Debug /*dbg*/,\n    Dwarf_Gdbindex * /*gdbindexptr*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Unsigned * /*cu_list_offset*/,\n    Dwarf_Unsigned * /*types_cu_list_offset*/,\n    Dwarf_Unsigned * /*address_area_offset*/,\n    Dwarf_Unsigned * /*symbol_table_offset*/,\n    Dwarf_Unsigned * /*constant_pool_offset*/,\n    Dwarf_Unsigned * /*section_size*/,\n    Dwarf_Unsigned * /*unused_reserved*/,\n    const char    ** /*section_name*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_culist_array(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned       * /*list_length*/,\n    Dwarf_Error          * /*error*/);\n\n/*  entryindex: 0 to list_length-1 */\nint dwarf_gdbindex_culist_entry(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*cu_offset*/,\n    Dwarf_Unsigned * /*cu_length*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_types_culist_array(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned            * /*types_list_length*/,\n    Dwarf_Error               * /*error*/);\n\n/*  entryindex: 0 to types_list_length -1 */\nint dwarf_gdbindex_types_culist_entry(\n    Dwarf_Gdbindex   /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*cu_offset*/,\n    Dwarf_Unsigned * /*tu_offset*/,\n    Dwarf_Unsigned * /*type_signature*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_addressarea(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned            * /*addressarea_list_length*/,\n    Dwarf_Error               * /*error*/);\n\n/*    entryindex: 0 to addressarea_list_length-1 */\nint dwarf_gdbindex_addressarea_entry(\n    Dwarf_Gdbindex   /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*low_adddress*/,\n    Dwarf_Unsigned * /*high_address*/,\n    Dwarf_Unsigned * /*cu_index*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_symboltable_array(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned            * /*symtab_list_length*/,\n    Dwarf_Error               * /*error*/);\n\n/*  entryindex: 0 to symtab_list_length-1 */\nint dwarf_gdbindex_symboltable_entry(\n    Dwarf_Gdbindex   /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*string_offset*/,\n    Dwarf_Unsigned * /*cu_vector_offset*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_cuvector_length(Dwarf_Gdbindex /*gdbindex*/,\n    Dwarf_Unsigned   /*cuvector_offset*/,\n    Dwarf_Unsigned * /*innercount*/,\n    Dwarf_Error    * /*error*/);\n\n\nint dwarf_gdbindex_cuvector_inner_attributes(Dwarf_Gdbindex /*gdbindex*/,\n    Dwarf_Unsigned   /*cuvector_offset*/,\n    Dwarf_Unsigned   /*innerindex*/,\n    /* The attr_value is a field of bits. For expanded version\n        use  dwarf_gdbindex_cuvector_expand_value() */\n    Dwarf_Unsigned * /*attr_value*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_cuvector_instance_expand_value(\n    Dwarf_Gdbindex /*gdbindex*/,\n    Dwarf_Unsigned   /*value*/,\n    Dwarf_Unsigned * /*cu_index*/,\n    Dwarf_Unsigned * /*reserved1*/,\n    Dwarf_Unsigned * /*symbol_kind*/,\n    Dwarf_Unsigned * /*is_static*/,\n    Dwarf_Error    * /*error*/);\n\n\n/*  The strings in the pool follow (in memory) the cu index\n    set and are NUL terminated. */\n\nint dwarf_gdbindex_string_by_offset(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned   /*stringoffset*/,\n    const char    ** /*string_ptr*/,\n    Dwarf_Error   *  /*error*/);\n\nvoid dwarf_gdbindex_free(Dwarf_Gdbindex /*gdbindexptr*/);\n\n/*  END gdbindex/debugfission operations. */\n\n/*  START debugfission dwp .debug_cu_index and .debug_tu_index operations. */\n\nint dwarf_get_xu_index_header(Dwarf_Debug /*dbg*/,\n    const char *  section_type, /* \"tu\" or \"cu\" */\n    Dwarf_Xu_Index_Header *     /*xuhdr*/,\n    Dwarf_Unsigned *            /*version_number*/,\n    Dwarf_Unsigned *            /*offsets_count L*/,\n    Dwarf_Unsigned *            /*units_count N*/,\n    Dwarf_Unsigned *            /*hash_slots_count M*/,\n    const char     **           /*sect_name*/,\n    Dwarf_Error *               /*err*/);\n\nint dwarf_get_xu_index_section_type(Dwarf_Xu_Index_Header /*xuhdr*/,\n    /*  the function returns a pointer to\n        the immutable string \"tu\" or \"cu\" via this arg. Do not free.  */\n    const char ** /*typename*/,\n    /*  the function returns a pointer to\n        the immutable section name. Do not free.\n        .debug_cu_index or .debug_tu_index */\n    const char ** /*sectionname*/,\n    Dwarf_Error * /*err*/);\n\n/*  Index values 0 to M-1 are valid. */\nint dwarf_get_xu_hash_entry(Dwarf_Xu_Index_Header /*xuhdr*/,\n    Dwarf_Unsigned     /*index*/,\n\n    /*  Returns the hash value. 64  bits.  */\n    Dwarf_Sig8 *      /*hash_value*/,\n\n    /* returns the index into rows of offset/size tables. */\n    Dwarf_Unsigned *  /*index_to_sections*/,\n    Dwarf_Error *     /*err*/);\n\n/*  Columns 0 to L-1,  valid. */\nint dwarf_get_xu_section_names(Dwarf_Xu_Index_Header /*xuhdr*/,\n    /* Row index defined to be row zero. */\n    Dwarf_Unsigned  /*column_index*/,\n    Dwarf_Unsigned* /*DW_SECT_ number*/,\n    const char **   /*DW_SECT_ name*/,\n    Dwarf_Error *   /*err*/);\n\n    /* Rows 1 to N col 0 to L-1  are valid */\nint dwarf_get_xu_section_offset(Dwarf_Xu_Index_Header /*xuhdr*/,\n    Dwarf_Unsigned  /*row_index*/,\n    Dwarf_Unsigned  /*column_index*/,\n    Dwarf_Unsigned* /*sec_offset*/,\n    Dwarf_Unsigned* /*sec_size*/,\n    Dwarf_Error *   /*err*/);\n\nvoid dwarf_xu_header_free(Dwarf_Xu_Index_Header /*xuhdr*/);\n\n/*  Defined larger than necessary. This struct, being visible,\n    will be difficult to change: binary compatibility. */\n#define DW_FISSION_SECT_COUNT 12\n\n/*  User must allocate this struct, zero it,\n    and pass a pointer to it\n    into dwarf_get_debugfission_for_cu .  */\nstruct Dwarf_Debug_Fission_Per_CU_s  {\n    /*  Do not free the string. It contains \"cu\" or \"tu\". */\n    /*  If this is not set (ie, not a CU/TU in  DWP Package File)\n        then pcu_type will be NULL.  */\n    const char   * pcu_type;\n    /*  pcu_index is the index (range 1 to N )\n        into the tu/cu table of offsets and the table\n        of sizes.  1 to N as the zero index is reserved\n        for special purposes.  Not a value one\n        actually needs. */\n    Dwarf_Unsigned pcu_index;\n    Dwarf_Sig8     pcu_hash;  /* 8 byte  */\n    /*  [0] has offset and size 0.\n        [1]-[8] are DW_SECT_* indexes and the\n        values are  the offset and size\n        of the respective section contribution\n        of a single .dwo object. When pcu_size[n] is\n        zero the corresponding section is not present. */\n    Dwarf_Unsigned pcu_offset[DW_FISSION_SECT_COUNT];\n    Dwarf_Unsigned pcu_size[DW_FISSION_SECT_COUNT];\n    Dwarf_Unsigned unused1;\n    Dwarf_Unsigned unused2;\n};\ntypedef struct Dwarf_Debug_Fission_Per_CU_s  Dwarf_Debug_Fission_Per_CU ;\n/*  For any Dwarf_Die in a compilation unit, return\n    the debug fission table data through\n    percu_out.   Usually applications\n    will pass in the CU die.\n    Calling code should zero all of the\n    struct Dwarf_Debug_Fission_Per_CU_s before calling this.\n    If there is no debugfission data this returns\n    DW_DLV_NO_ENTRY (only .dwp objects have debugfission data).  */\nint dwarf_get_debugfission_for_die(Dwarf_Die /* die */,\n    Dwarf_Debug_Fission_Per_CU * /* percu_out */,\n    Dwarf_Error * /* err */);\n\n/* Given a key (hash signature)  from a .o, find the per-cu information\n    for the CU with that key. */\nint dwarf_get_debugfission_for_key(Dwarf_Debug /*dbg*/,\n    Dwarf_Sig8 *                 /*key, hash signature */,\n    const char * key_type        /*\"cu\" or \"tu\" */,\n    Dwarf_Debug_Fission_Per_CU * /*percu_out */,\n    Dwarf_Error *                /*err */);\n\n/*  END debugfission dwp .debug_cu_index and .debug_tu_index operations. */\n\n\n/*  Utility operations */\nDwarf_Unsigned dwarf_errno(Dwarf_Error     /*error*/);\nchar* dwarf_errmsg(Dwarf_Error    /*error*/);\nchar* dwarf_errmsg_by_number(Dwarf_Unsigned /* errornum */);\nvoid  dwarf_error_creation(Dwarf_Debug /*dbg*/ ,\n    Dwarf_Error * /*error*/, char * /*errmsg*/);\n\n\n/*  stringcheck zero is default and means do all\n    string length validity checks.\n    Call with parameter value 1 to turn off many such checks (and\n    increase performance).\n    Call with zero for safest running.\n    Actual value saved and returned is only 8 bits! Upper bits\n    ignored by libdwarf (and zero on return).\n    Returns previous value.  */\nint dwarf_set_stringcheck(int /*stringcheck*/);\n\n/*  'apply' defaults to 1 and means do all\n    'rela' relocations on reading in a dwarf object section with\n    such relocations.\n    Call with parameter value 0 to turn off application of\n    such relocations.\n    Since the static linker leaves 'bogus' data in object sections\n    with a 'rela' relocation section such data cannot be read\n    sensibly without processing the relocations.  Such relocations\n    do not exist in executables and shared objects (.so), the\n    relocations only exist in plain .o relocatable object files.\n    Actual value saved and returned is only 8 bits! Upper bits\n    ignored by libdwarf (and zero on return).\n    Returns previous value.  */\nint dwarf_set_reloc_application(int /*apply*/);\n\n/* Never Implemented */\nDwarf_Handler dwarf_seterrhand(Dwarf_Debug /*dbg*/,\n    Dwarf_Handler /*errhand*/);\n\n/* Unimplemented */\nDwarf_Ptr dwarf_seterrarg(Dwarf_Debug /*dbg*/, Dwarf_Ptr /*errarg*/);\n\nvoid dwarf_dealloc(Dwarf_Debug /*dbg*/, void* /*space*/,\n    Dwarf_Unsigned /*type*/);\n/*  These convenience functions allow type checking at the call,\n    whereas dwarf_dealloc itself uses void * so ...\n    easy to misuse. */\nvoid dwarf_dealloc_error(Dwarf_Debug /*dbg*/, Dwarf_Error /*err*/);\nvoid dwarf_dealloc_die( Dwarf_Die /*die*/);\nvoid dwarf_dealloc_attribute(Dwarf_Attribute /*attr*/);\n\n\n/* DWARF Producer Interface */\n\n/*  New form June, 2011. Adds user_data argument. */\ntypedef int (*Dwarf_Callback_Func)(\n    const char*     /*name*/,\n    int             /*size*/,\n    Dwarf_Unsigned  /*type*/,\n    Dwarf_Unsigned  /*flags*/,\n    Dwarf_Unsigned  /*link*/,\n    Dwarf_Unsigned  /*info*/,\n    Dwarf_Unsigned* /*sect_name_index*/,\n    void *          /*user_data*/,\n    int*            /*error*/);\n\n/*  Returns DW_DLV_OK or DW_DLV_ERROR and\n    if DW_DLV_OK returns the Dwarf_P_Debug\n    pointer through the dbg_returned argument. */\nint dwarf_producer_init(\n    Dwarf_Unsigned        /*flags*/,\n    Dwarf_Callback_Func   /*func*/,\n    Dwarf_Handler         /*errhand*/,\n    Dwarf_Ptr             /*errarg*/,\n    void *                /*user_data*/,\n    const char *isa_name, /* See isa/abi names in pro_init.c */\n    const char *dwarf_version, /* V2 V3 V4 or V5. */\n    const char *extra,    /* Extra input strings, comma separated. */\n    Dwarf_P_Debug *,      /* dbg_returned */\n    Dwarf_Error *         /*error*/);\n\n/*  Returns DW_DLV_OK or DW_DLV_ERROR.\n    The desired form must be DW_FORM_string (the default)\n    or DW_FORM_strp.  */\nint dwarf_pro_set_default_string_form(Dwarf_P_Debug /*dbg*/,\n    int /*desired_form*/,\n    Dwarf_Error*     /*error*/);\n\n/*  the old interface. Still supported. */\nDwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error*     /*error*/);\n/*  New September 2016. The preferred interface. */\nint dwarf_transform_to_disk_form_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Signed *   /*nbufs_out*/,\n    Dwarf_Error*     /*error*/);\n\n/* New September 2016. Preferred. */\nint dwarf_get_section_bytes_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Signed     /*dwarf_section*/,\n    Dwarf_Signed*    /*elf_section_index*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Ptr     *  /*section_bytes*/,\n    Dwarf_Error*     /*error*/);\n\n/* Original function.  Checking for error is difficult. */\nDwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Signed     /*dwarf_section*/,\n    Dwarf_Signed*    /*elf_section_index*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Error*     /*error*/);\n\nint  dwarf_get_relocation_info_count(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Unsigned * /*count_of_relocation_sections*/,\n    int *                /*drd_buffer_version*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_relocation_info(\n    Dwarf_P_Debug           /*dbg*/,\n    Dwarf_Signed          * /*elf_section_index*/,\n    Dwarf_Signed          * /*elf_section_index_link*/,\n    Dwarf_Unsigned        * /*relocation_buffer_count*/,\n    Dwarf_Relocation_Data * /*reldata_buffer*/,\n    Dwarf_Error*            /*error*/);\n\n/* v1:  no drd_length field, enum explicit */\n/* v2:  has the drd_length field, enum value in uchar member */\n#define DWARF_DRD_BUFFER_VERSION 2\n\n/* Markers are not written  to DWARF2/3/4, they are user\n   defined and may be used for any purpose.\n*/\nDwarf_Signed dwarf_get_die_markers(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Marker *  /*marker_list*/,\n    Dwarf_Unsigned *  /*marker_count*/,\n    Dwarf_Error *     /*error*/);\n\n/* Preferred version December 2018. */\nint dwarf_get_die_markers_a(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Marker *  /*marker_list*/,\n    Dwarf_Unsigned *  /*marker_count*/,\n    Dwarf_Error *     /*error*/);\n\nint dwarf_get_string_attributes_count(Dwarf_P_Debug,\n    Dwarf_Unsigned *,\n    int *,\n    Dwarf_Error *);\n\nint dwarf_get_string_attributes_info(Dwarf_P_Debug,\n    Dwarf_Signed *,\n    Dwarf_Unsigned *,\n    Dwarf_P_String_Attr *,\n    Dwarf_Error *);\n\nvoid dwarf_reset_section_bytes(Dwarf_P_Debug /*dbg*/);\n\nDwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  Returns DW_DLV_OK or DW_DLV_ERROR */\nint dwarf_producer_finish_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/* New July 2020 for testing DWARF5 */\nint dwarf_add_debug_sup(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Half      /*version*/,\n    Dwarf_Small     /*is_supplementary*/,\n    char          * /*filename*/,\n    Dwarf_Unsigned  /*checksum_len*/,\n    Dwarf_Small   * /*checksum*/,\n    Dwarf_Error * /*error*/);\n\n/* Producer attribute addition functions. */\nDwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Signed    /*sym_index*/,\n    Dwarf_Error*    /*error*/);\nDwarf_P_Attribute dwarf_add_AT_targ_address_b(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Unsigned    /*sym_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_targ_address_c(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die         /*ownerdie*/,\n    Dwarf_Half          /*attr*/,\n    Dwarf_Unsigned      /*pc_value*/,\n    Dwarf_Unsigned      /*sym_index*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*        /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_block_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small*    /*block_data*/,\n    Dwarf_Unsigned  /*block_len*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_block(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small*    /*block_data*/,\n    Dwarf_Unsigned  /*block_len*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_ref_address(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_ref_address_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_unsigned_const_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*value*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_signed_const(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Signed    /*value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_signed_const_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Signed    /*value*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Die     /*otherdie*/,\n    Dwarf_Error*    /*error*/);\n\n/*  dwarf_add_AT_reference_b allows otherdie to be NULL with\n    the assumption the caller will then later call\n    dwarf_fixup_AT_reference_die() with a non-null target die.\n    New 22 October, 2013\n*/\nDwarf_P_Attribute dwarf_add_AT_reference_b(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Die     /*otherdie*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_reference_c(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Die     /*otherdie*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\n/* The following is for out-of-order cu-local\n   references.  Allowing nominating the target Dwarf_P_Die\n   after calling dwarf_add_AT_reference with a NULL otherdie\n   after a single pass thru the DIE generation. Needed\n   for forward-references.\n   New 22 October, 2013.\n*/\nint dwarf_fixup_AT_reference_die(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Half    /* attrnum */,\n    Dwarf_P_Die   /* sourcedie*/,\n    Dwarf_P_Die   /* targetdie*/,\n    Dwarf_Error * /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_dataref(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pcvalue*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_dataref_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pcvalue*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_const_value_string(\n    Dwarf_P_Die /*ownerdie*/,\n    char*           /*string_value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_const_value_string_a(\n    Dwarf_P_Die /*ownerdie*/,\n    char*           /*string_value*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Expr    /*loc_expr*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_location_expr_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Expr    /*loc_expr*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    char*           /*string*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Preferred as of December 2018. */\nint dwarf_add_AT_string_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    char*           /*string*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*     /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_flag(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small     /*flag*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_flag_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small     /*flag*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_producer(Dwarf_P_Die /*ownerdie*/,\n    char*           /*producer_string*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_producer_a(Dwarf_P_Die /*ownerdie*/,\n    char*           /*producer_string*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\n/*  October 2017 for DW_FORM_data16. Usable with any attribute,\n    though it should only be in limited use. DWARF5 only.\n    Returns DW_DLV_OK on success, DW_DLV_ERROR on failure.\n    Returns the new attribute pointer through *return_attr. */\nint dwarf_add_AT_data16(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half    /*attrnum*/,\n    Dwarf_Form_Data16 * /* pointstovalue */,\n    Dwarf_P_Attribute * /* return_attr */,\n    Dwarf_Error * /*error*/);\n\n/*  November 2018. DW_AT_implicit const generation. */\nint dwarf_add_AT_implicit_const(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half /*attrnum*/,\n    Dwarf_Signed /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error * /*error*/);\n\n/* August 2013 sleb creator. For any attribute. */\nDwarf_P_Attribute dwarf_add_AT_any_value_sleb(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half    /*attrnum*/,\n    Dwarf_Signed  /*signed_value*/,\n    Dwarf_Error * /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_any_value_sleb_a(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half    /*attrnum*/,\n    Dwarf_Signed  /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error * /*error*/);\n\n/* Original sleb creator. Only for DW_AT_const_value. */\nDwarf_P_Attribute dwarf_add_AT_const_value_signedint(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Signed    /*signed_value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Preferred as of December 2018. */\nint dwarf_add_AT_const_value_signedint_a(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Signed    /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\n/* August 2013 uleb creator. For any attribute. */\nDwarf_P_Attribute dwarf_add_AT_any_value_uleb(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half      /*attrnum*/,\n    Dwarf_Unsigned  /*signed_value*/,\n    Dwarf_Error *   /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_any_value_uleb_a(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half      /*attrnum*/,\n    Dwarf_Unsigned  /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error *   /*error*/);\n\n/* Original uleb creator. Only for DW_AT_const_value. */\nDwarf_P_Attribute dwarf_add_AT_const_value_unsignedint(\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Unsigned  /*unsigned_value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_const_value_unsignedint_a(\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Unsigned  /*unsigned_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die /*ownerdie*/,\n    char*           /*current_working_directory*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_comp_dir_a(Dwarf_P_Die /*ownerdie*/,\n    char*           /*current_working_directory*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die    /*die*/,\n    char*           /*name*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_name_a(Dwarf_P_Die    /*die*/,\n    char*           /*name*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_with_ref_sig8(\n   Dwarf_P_Die   /*ownerdie */,\n   Dwarf_Half    /*attrnum */,\n   const Dwarf_Sig8 *  /*sig8_in*/,\n   Dwarf_Error * /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_with_ref_sig8_a(\n   Dwarf_P_Die   /*ownerdie */,\n   Dwarf_Half    /*attrnum */,\n   const Dwarf_Sig8 *  /*sig8_in*/,\n   Dwarf_P_Attribute * /*outattr*/,\n   Dwarf_Error * /*error*/);\n\n\n/* Producer line creation functions (.debug_line) */\nDwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_directory_decl_a(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Unsigned * /*index_in_directories*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Unsigned  /*dir_index*/,\n    Dwarf_Unsigned  /*time_last_modified*/,\n    Dwarf_Unsigned  /*length*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_file_decl_a(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Unsigned  /*dir_index*/,\n    Dwarf_Unsigned  /*time_last_modified*/,\n    Dwarf_Unsigned  /*length*/,\n    Dwarf_Unsigned * /*file_entry_count_out*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_line_entry_c(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*file_index*/,\n    Dwarf_Addr      /*code_address*/,\n    Dwarf_Unsigned  /*lineno*/,\n    Dwarf_Signed    /*column_number*/,\n    Dwarf_Bool      /*is_source_stmt_begin*/,\n    Dwarf_Bool      /*is_basic_block_begin*/,\n    Dwarf_Bool      /*is_epilogue_begin*/,\n    Dwarf_Bool      /*is_prologue_end*/,\n    Dwarf_Unsigned  /*isa*/,\n    Dwarf_Unsigned  /*discriminator*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_line_entry_b(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*file_index*/,\n    Dwarf_Addr      /*code_address*/,\n    Dwarf_Unsigned  /*lineno*/,\n    Dwarf_Signed    /*column_number*/,\n    Dwarf_Bool      /*is_source_stmt_begin*/,\n    Dwarf_Bool      /*is_basic_block_begin*/,\n    Dwarf_Bool      /*is_epilogue_begin*/,\n    Dwarf_Bool      /*is_prologue_end*/,\n    Dwarf_Unsigned  /*isa*/,\n    Dwarf_Unsigned  /*discriminator*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*file_index*/,\n    Dwarf_Addr      /*code_address*/,\n    Dwarf_Unsigned  /*lineno*/,\n    Dwarf_Signed    /*column_number*/,\n    Dwarf_Bool      /*is_source_stmt_begin*/,\n    Dwarf_Bool      /*is_basic_block_begin*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*offset*/,\n    Dwarf_Unsigned  /*symbol_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_lne_set_address_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*offset*/,\n    Dwarf_Unsigned  /*symbol_index*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_lne_end_sequence(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Addr      /*end_address*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_lne_end_sequence_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Addr      /*end_address*/,\n    Dwarf_Error*    /*error*/);\n\n/* Producer .debug_frame functions */\nDwarf_Unsigned dwarf_add_frame_cie(Dwarf_P_Debug /*dbg*/,\n    char*           /*augmenter*/,\n    Dwarf_Small     /*code_alignment_factor*/,\n    Dwarf_Small     /*data_alignment_factor*/,\n    Dwarf_Small     /*return_address_reg*/,\n    Dwarf_Ptr       /*initialization_bytes*/,\n    Dwarf_Unsigned  /*init_byte_len*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_frame_cie_a(Dwarf_P_Debug /*dbg*/,\n    char*           /*augmenter*/,\n    Dwarf_Small     /*code_alignment_factor*/,\n    Dwarf_Small     /*data_alignment_factor*/,\n    Dwarf_Small     /*return_address_reg*/,\n    Dwarf_Ptr       /*initialization_bytes*/,\n    Dwarf_Unsigned  /*init_byte_len*/,\n    Dwarf_Unsigned * /*cie_index_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_fde(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*corresponding subprogram die*/,\n    Dwarf_Unsigned  /*cie_to_use*/,\n    Dwarf_Unsigned  /*virt_addr_of_described_code*/,\n    Dwarf_Unsigned  /*length_of_code*/,\n    Dwarf_Unsigned  /*symbol_index*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_fde_b(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_P_Fde    /*fde*/,\n    Dwarf_P_Die    /*die*/,\n    Dwarf_Unsigned /*cie*/,\n    Dwarf_Addr     /*virt_addr*/,\n    Dwarf_Unsigned /*code_len*/,\n    Dwarf_Unsigned /*sym_idx*/,\n    Dwarf_Unsigned /*sym_idx_of_end*/,\n    Dwarf_Addr     /*offset_from_end_sym*/,\n    Dwarf_Error*   /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_frame_fde_c(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_P_Fde    /*fde*/,\n    Dwarf_P_Die    /*die*/,\n    Dwarf_Unsigned /*cie*/,\n    Dwarf_Addr     /*virt_addr*/,\n    Dwarf_Unsigned /*code_len*/,\n    Dwarf_Unsigned /*sym_idx*/,\n    Dwarf_Unsigned /*sym_idx_of_end*/,\n    Dwarf_Addr     /*offset_from_end_sym*/,\n    Dwarf_Unsigned * /*index_to_fde*/,\n    Dwarf_Error*   /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_frame_info_c(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*cie*/,\n    Dwarf_Addr      /*virt_addr*/,\n    Dwarf_Unsigned  /*code_len*/,\n    Dwarf_Unsigned  /*symidx*/,\n    Dwarf_Unsigned  /*end_symbol */,\n    Dwarf_Addr      /*offset_from_end_symbol */,\n    Dwarf_Signed    /*offset_into_exception_tables*/,\n    Dwarf_Unsigned  /*exception_table_symbol*/,\n    Dwarf_Unsigned * /*fde_index_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_info_b(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*cie*/,\n    Dwarf_Addr      /*virt_addr*/,\n    Dwarf_Unsigned  /*code_len*/,\n    Dwarf_Unsigned  /*symidx*/,\n    Dwarf_Unsigned  /*end_symbol */,\n    Dwarf_Addr      /*offset_from_end_symbol */,\n    Dwarf_Signed    /*offset_into_exception_tables*/,\n    Dwarf_Unsigned  /*exception_table_symbol*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_info(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*cie*/,\n    Dwarf_Addr      /*virt_addr*/,\n    Dwarf_Unsigned  /*code_len*/,\n    Dwarf_Unsigned  /*symidx*/,\n    Dwarf_Signed    /*offset_into_exception_tables*/,\n    Dwarf_Unsigned  /*exception_table_symbol*/,\n    Dwarf_Error*    /*error*/);\n\n/* The fde returned is just the one passed in. Silly. */\nDwarf_P_Fde dwarf_add_fde_inst(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Small     /*op*/,\n    Dwarf_Unsigned  /*val1*/,\n    Dwarf_Unsigned  /*val2*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_fde_inst_a(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Small     /*op*/,\n    Dwarf_Unsigned  /*val1*/,\n    Dwarf_Unsigned  /*val2*/,\n    Dwarf_Error*    /*error*/);\n\n/* New September 17, 2009 */\nint dwarf_insert_fde_inst_bytes(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_P_Fde    /*fde*/,\n    Dwarf_Unsigned /*len*/,\n    Dwarf_Ptr      /*ibytes*/,\n    Dwarf_Error*   /*error*/);\n\nDwarf_P_Fde dwarf_new_fde(Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_new_fde_a(Dwarf_P_Debug    /*dbg*/,\n    Dwarf_P_Fde * /*fde_out*/,\n    Dwarf_Error* /*error*/);\n\nDwarf_P_Fde dwarf_fde_cfa_offset(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Unsigned  /*register_number*/,\n    Dwarf_Signed    /*offset*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_fde_cfa_offset_a(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Unsigned  /*register_number*/,\n    Dwarf_Signed    /*offset*/,\n    Dwarf_Error*    /*error*/);\n\n/*  die creation & addition routines\n    dwarf_new_die_a() new September 2016.\n    Preferred over dwarf_new_die(). */\nint dwarf_new_die_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_Tag       /*tag*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left */,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_P_Die   * /*die_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Die dwarf_new_die(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Tag         /*tag*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left */,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_Error*    /*error*/);\n\n/* New September 2016. */\nint dwarf_add_die_to_debug_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Original form.  */\nDwarf_Unsigned dwarf_add_die_to_debug(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Error*    /*error*/);\n\n/* Markers are not written  to DWARF2/3/4, they are user\n   defined and may be used for any purpose.\n*/\nDwarf_Unsigned dwarf_add_die_marker(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*marker*/,\n    Dwarf_Error *   /*error*/);\n\n/*  Preferred version, new December 2018. */\nint dwarf_add_die_marker_a(Dwarf_P_Debug dbg,\n    Dwarf_P_Die die,\n    Dwarf_Unsigned marker,\n    Dwarf_Error * error);\n\nDwarf_Unsigned dwarf_get_die_marker(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned *  /*marker*/,\n    Dwarf_Error *   /*error*/);\n\n/*  Preferred version, new December 2018. */\nint dwarf_get_die_marker_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned *  /*marker*/,\n    Dwarf_Error *   /*error*/);\n\n/*  New September 2016. Preferred version */\nint dwarf_die_link_a(\n    Dwarf_P_Die     /*die*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left*/,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Original version. Use dwarf_die_link_a() instead. */\nDwarf_P_Die dwarf_die_link(\n    Dwarf_P_Die     /*die*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left*/,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_Error*    /*error*/);\n\nvoid dwarf_dealloc_compressed_block(\n    Dwarf_P_Debug,\n    void *\n);\n\n/*  Call this passing in return value from\n    dwarf_uncompress_integer_block()\n    to free the space the decompression allocated. */\nvoid dwarf_dealloc_uncompressed_block(\n    Dwarf_Debug,\n    void *\n);\n\n/*  dwarf_compress_integer_block_a( new 11 February 2019.\n    Like the earlier version this turns an array of signed\n    integers into a block of sleb values (and if the\n    values are small enough it might be a compression!\n    Or it could be an expansion...). Return DW_DLV_OK\n    on success. Supercedes dwarf_compress_integer_block():\n    as no ugly cast needed to know if\n    dwarf_compress_integer_block_a() succeeds or not. */\nint\ndwarf_compress_integer_block_a(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Unsigned   /*input_array_length*/,\n    Dwarf_Signed   * /*input_array*/,\n    Dwarf_Unsigned * /*output_block_len*/,\n    void          ** /*output_block_returned*/,\n    Dwarf_Error    * /*error */);\n/*  The following should be avoided as of February 2019. */\nvoid * dwarf_compress_integer_block(\n    Dwarf_P_Debug,    /*dbg*/\n    Dwarf_Bool,       /*signed==true (or unsigned)*/\n    Dwarf_Small,      /*size of integer units: 8, 16, 32, 64*/\n    void*,            /*data*/\n    Dwarf_Unsigned,   /*number of elements*/\n    Dwarf_Unsigned*,  /*number of bytes in output block*/\n    Dwarf_Error*      /*error*/\n);\n\n/*  New February 2019.  On success returns DW_DLV_OK\n    and creates an array of Dwarf_Signed values\n    from the block of sleb numbers.\n    This interface supercedes\n    dwarf_uncompress_integer_block(). No ugly\n    cast needed to know if\n    dwarf_uncompress_integer_block_a() succeeds or not. */\nint\ndwarf_uncompress_integer_block_a(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned     /*input_length_in_bytes*/,\n    void             * /*input_block*/,\n    Dwarf_Unsigned   * /*value_count*/,\n    Dwarf_Signed    ** /*value_array*/,\n    Dwarf_Error      * /*error*/);\n\n/*  Decode an array of signed leb integers (so of course the\n    array is not composed of fixed length values, but is instead\n    a sequence of sleb values).\n    Returns a DW_DLV_BADADDR on error.\n    Otherwise returns a pointer to an array of 32bit integers.\n    The signed argument must be non-zero (the decode\n    assumes sleb integers in the input data) at this time.\n    Size of integer units must be 32 (32 bits each) at this time.\n    Number of bytes in block is a byte count (not array count).\n    Returns number of units in output block (ie, number of elements\n    of the array that the return value points to) thru the\n    argument.  */\nvoid * dwarf_uncompress_integer_block(\n    Dwarf_Debug,      /*dbg */\n    Dwarf_Bool,       /*signed==true (or unsigned) */\n    Dwarf_Small,      /*size of integer units: 8, 16, 32, 64 */\n    void*,            /*input data */\n    Dwarf_Unsigned,   /*number of bytes in input */\n    Dwarf_Unsigned*,  /*number of units in output block */\n    Dwarf_Error*      /*error */\n);\n\n/* Operations to create location expressions. */\nDwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_new_expr_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Expr * /*expr_out*/,\n    Dwarf_Error* /*error*/);\n\nvoid dwarf_expr_reset(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_expr_gen(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Small       /*opcode*/,\n    Dwarf_Unsigned    /*val1*/,\n    Dwarf_Unsigned    /*val2*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_expr_gen_a(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Small       /*opcode*/,\n    Dwarf_Unsigned    /*val1*/,\n    Dwarf_Unsigned    /*val2*/,\n    Dwarf_Unsigned  * /*next_byte_offset*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_expr_addr(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned    /*addr*/,\n    Dwarf_Signed      /*sym_index*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_expr_addr_b(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned    /*addr*/,\n    Dwarf_Unsigned    /*sym_index*/,\n    Dwarf_Error*      /*error*/);\n\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_expr_addr_c(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned    /*addr*/,\n    Dwarf_Unsigned    /*sym_index*/,\n    Dwarf_Unsigned * /*next_byte_offset_out*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_expr_current_offset(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_expr_current_offset_a(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned * /*next_byte_offset_out*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Addr dwarf_expr_into_block(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned*   /*length*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_expr_into_block_a(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned*   /*length*/,\n    Dwarf_Small    ** /*start_address*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_arange(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Addr        /*begin_address*/,\n    Dwarf_Unsigned    /*length*/,\n    Dwarf_Signed      /*symbol_index*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_arange_b(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_Addr     /*begin_address*/,\n    Dwarf_Unsigned /*length*/,\n    Dwarf_Unsigned /*symbol_index*/,\n    Dwarf_Unsigned /*end_symbol_index*/,\n    Dwarf_Addr     /*offset_from_end_symbol*/,\n    Dwarf_Error *  /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_arange_c(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_Addr     /*begin_address*/,\n    Dwarf_Unsigned /*length*/,\n    Dwarf_Unsigned /*symbol_index*/,\n    Dwarf_Unsigned /*end_symbol_index*/,\n    Dwarf_Addr     /*offset_from_end_symbol*/,\n    Dwarf_Error *  /*error*/);\n\nDwarf_Unsigned dwarf_add_pubname(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubname_name*/,\n    Dwarf_Error*       /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_pubname_a(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubname_name*/,\n    Dwarf_Error*       /*error*/);\n\n/* Added 17 October 2013.  Introduced in DWARF3. */\nDwarf_Unsigned dwarf_add_pubtype(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubtype_name*/,\n    Dwarf_Error*       /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_pubtype_a(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubtype_name*/,\n    Dwarf_Error*       /*error*/);\n\nDwarf_Unsigned dwarf_add_funcname(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*func_name*/,\n    Dwarf_Error*       /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_funcname_a(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*func_name*/,\n    Dwarf_Error*       /*error*/);\n\nDwarf_Unsigned dwarf_add_typename(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*type_name*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_typename_a(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*type_name*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_varname(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*var_name*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_varname_a(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*var_name*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_weakname(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_P_Die      /*die*/,\n    char*            /*weak_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_add_weakname_a(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_P_Die      /*die*/,\n    char*            /*weak_name*/,\n    Dwarf_Error*     /*error*/);\n\n/*  .debug_names producer functions */\n\n/*  dwarf_force_debug_names forces creation\n    of .debug_names (if DWARF5 being produced)\n    even if empty. Only for testing libdwarf. */\nint dwarf_force_debug_names(Dwarf_P_Debug /* dbg */,\n    Dwarf_Error*     /*error*/);\n\n/*  Other debug_names functions are needed... FIXME */\n\n/*  end .debug_names producer functions */\n\n/*  .debug_macinfo producer functions\n    Functions must be called in right order: the section is output\n    In the order these are presented.\n*/\nint dwarf_def_macro(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*line*/,\n    char *           /*macname, with (arglist), no space before (*/,\n    char *           /*macvalue*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_undef_macro(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*line*/,\n    char *           /*macname, no arglist, of course*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_start_macro_file(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*fileindex*/,\n    Dwarf_Unsigned   /*linenumber*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_end_macro_file(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_vendor_ext(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*constant*/,\n    char *           /*string*/,\n    Dwarf_Error*     /*error*/);\n\n/* end macinfo producer functions */\n\nint dwarf_attr_offset(Dwarf_Die /*die*/,\n    Dwarf_Attribute /*attr of above die*/,\n    Dwarf_Off     * /*returns offset thru this ptr */,\n    Dwarf_Error   * /*error*/);\n\n/*  This is a hack so clients can verify offsets.\n    Added April 2005 so that debugger can detect broken offsets\n    (which happened in an IRIX executable larger than 2GB\n    with MIPSpro 7.3.1.3 toolchain.).\n*/\nint dwarf_get_section_max_offsets(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/);\n\n/*  New October 2011., adds .debug_types section to the sizes\n    returned. */\nint dwarf_get_section_max_offsets_b(Dwarf_Debug /*dbg*/,\n\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/,\n    Dwarf_Unsigned * /*debug_types_size*/);\n\nint dwarf_get_section_max_offsets_c(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/,\n    Dwarf_Unsigned * /*debug_types_size*/,\n    Dwarf_Unsigned * /*debug_macro_size*/,\n    Dwarf_Unsigned * /*debug_str_offsets_size*/,\n    Dwarf_Unsigned * /*debug_sup_size*/,\n    Dwarf_Unsigned * /*debug_cu_index_size*/,\n    Dwarf_Unsigned * /*debug_tu_index_size*/);\nint dwarf_get_section_max_offsets_d(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/,\n    Dwarf_Unsigned * /*debug_types_size*/,\n    Dwarf_Unsigned * /*debug_macro_size*/,\n    Dwarf_Unsigned * /*debug_str_offsets_size*/,\n    Dwarf_Unsigned * /*debug_sup_size*/,\n    Dwarf_Unsigned * /*debug_cu_index_size*/,\n    Dwarf_Unsigned * /*debug_tu_index_size*/,\n    Dwarf_Unsigned * /*debug_names_size*/,\n    Dwarf_Unsigned * /*debug_loclists_size*/,\n    Dwarf_Unsigned * /*debug_rnglists_size*/);\n\n/*  The 'set' calls here return the original (before any change\n    by these set routines) of the respective fields. */\n/*  Multiple releases spelled 'initial' as 'inital' .\n    The 'inital' spelling should not be used. */\nDwarf_Half dwarf_set_frame_rule_inital_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\n/*  Additional interface with correct 'initial' spelling. */\n/*  It is likely you will want to call the following 6 functions\n    before accessing any frame information.  All are useful\n    to tailor handling of pseudo-registers needed to turn\n    frame operation references into simpler forms and to\n    reflect ABI specific data.  Of course altering libdwarf.h\n    and dwarf.h allow the same capabilities, but header changes\n    in the distribution would require you re-integrate your\n    libdwarf.h changes into the distributed libdwarf.h ...\n    so use the following functions instead.*/\nDwarf_Half dwarf_set_frame_rule_initial_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_rule_table_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_cfa_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_same_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_undefined_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\n/*  dwarf_set_default_address_size only sets 'value' if value is\n    greater than zero. */\nDwarf_Small dwarf_set_default_address_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Small /* value */);\n\n/*  As of April 27, 2009, this version with no diepointer is\n    obsolete though supported.  Use dwarf_get_ranges_a() instead. */\nint dwarf_get_ranges(Dwarf_Debug /*dbg*/,\n    Dwarf_Off /*rangesoffset*/,\n    Dwarf_Ranges ** /*rangesbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Unsigned * /*bytecount*/,\n    Dwarf_Error * /*error*/);\n\n/* This adds the address_size argument. New April 27, 2009 */\nint dwarf_get_ranges_a(Dwarf_Debug /*dbg*/,\n    Dwarf_Off /*rangesoffset*/,\n    Dwarf_Die  /* diepointer */,\n    Dwarf_Ranges ** /*rangesbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Unsigned * /*bytecount*/,\n    Dwarf_Error * /*error*/);\n\n/*  Adds return of the final offset to accomodate\n    DWARF4 GNU split-dwarf. Other than for split-dwarf\n    the realoffset will be set by the function\n    to be the same as rangesoffset.\n    New September 10, 2020.\n*/\nint dwarf_get_ranges_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Off       /*rangesoffset*/,\n    Dwarf_Die       /*diepointer */,\n    Dwarf_Off *     /*realoffset */,\n    Dwarf_Ranges ** /*rangesbuf*/,\n    Dwarf_Signed *  /*listlen*/,\n    Dwarf_Unsigned * /*bytecount*/,\n    Dwarf_Error *   /*error*/);\n\nvoid dwarf_ranges_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Ranges * /*rangesbuf*/,\n    Dwarf_Signed /*rangecount*/);\n\n/* New July 2020 for DWARF5 */\nint dwarf_get_debug_sup(Dwarf_Debug /*dbg*/,\n    Dwarf_Half     * /*version*/,\n    Dwarf_Small    * /*is_supplementary*/,\n    char          ** /*filename*/,\n    Dwarf_Unsigned * /*checksum_len*/,\n    Dwarf_Small   ** /*checksum*/,\n    Dwarf_Error * /*error*/);\n\n/* ======= START .debug_rnglists interfaces.  New May 2020 */\nstruct Dwarf_Rnglists_Entry_s;\ntypedef struct Dwarf_Rnglists_Entry_s * Dwarf_Rnglists_Entry;\nstruct Dwarf_Rnglists_Head_s;\ntypedef struct Dwarf_Rnglists_Head_s * Dwarf_Rnglists_Head;\n\n/*  For DWARF5 DW_AT_ranges: DW_FORM_sec_offset DW_FORM_rnglistx */\nint dwarf_rnglists_get_rle_head(Dwarf_Attribute       /*attr*/,\n    Dwarf_Half            /*theform*/,\n    Dwarf_Unsigned        /*index_or_offset_value*/,\n    Dwarf_Rnglists_Head * /*head_out*/,\n    Dwarf_Unsigned *      /*count_of_entries_in_head*/,\n    Dwarf_Unsigned *      /*global_offset_of_rle_set*/,\n    Dwarf_Error    *      /*error*/);\n\n/*  Get the rnglist entries details */\nint dwarf_get_rnglists_entry_fields_a(\n    Dwarf_Rnglists_Head /*head*/,\n    Dwarf_Unsigned   /*entrynum*/,\n    unsigned       * /*entrylen*/,\n    unsigned       * /*rle_value_out*/,\n    Dwarf_Unsigned * /*raw1*/,\n    Dwarf_Unsigned * /*raw2*/,\n    Dwarf_Bool     * /*debug_addr_unavailable*/,\n    Dwarf_Unsigned * /*cooked1*/,\n    Dwarf_Unsigned * /*cooked2*/,\n    Dwarf_Error *    /*err*/);\n\n/* The following is not complete. DO NOT USE.\n    Use dwarf_get_rnglists_entry_fields_a() instead. */\nint dwarf_get_rnglists_entry_fields(Dwarf_Rnglists_Head /*head*/,\n    Dwarf_Unsigned   /*entrynum*/,\n    unsigned int   * /*entrylen*/,\n    unsigned int   * /*code*/,\n    Dwarf_Unsigned * /*raw1*/,\n    Dwarf_Unsigned * /*raw2*/,\n    Dwarf_Unsigned * /*cooked1*/,\n    Dwarf_Unsigned * /*cooked2*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_dealloc_rnglists_head(Dwarf_Rnglists_Head );\n\n/*  Loads all the rnglists headers and\n    returns DW_DLV_NO_ENTRY if the section\n    is missing or empty.\n    Intended to be done quite early and\n    it is automatically\n    done if .debug_info is loaded.\n    Doing it more than once is never necessary\n    or harmful. There is no deallocation call\n    made visible, deallocation happens\n    when dwarf_finish() is called.\n    With DW_DLV_OK it returns the number of\n    rnglists headers in the section through\n    rnglists_count. */\nint dwarf_load_rnglists(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*rnglists_count*/,\n    Dwarf_Error * /*err*/);\n\n/*  Retrieve the offset from the context-index'th\n    rangelists context  and the offsetentry_index\n    element of the array of offsets.\n    If an index is too large to be correct\n    this returns DW_DLV_NO_ENTRY.\n    If all is correct it returns DW_DLV_OK and\n    sets *offset_value_out to the offset of\n    the range list from the base of the offset\n    array, and *global_offset_value_out is set\n    to the .debug_rnglists section offset of\n    the range list. */\nint dwarf_get_rnglist_offset_index_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*context_index*/,\n    Dwarf_Unsigned   /*offsetentry_index*/,\n    Dwarf_Unsigned * /*offset_value_out*/,\n    Dwarf_Unsigned * /*global_offset_value_out*/,\n    Dwarf_Error * /*error*/);\n\n\n/*  Used by dwarfdump to print basic data from the\n    data generated to look at a specific rangelist\n    as returned by  dwarf_rnglists_index_get_rle_head()\n    or dwarf_rnglists_offset_get_rle_head. */\nint dwarf_get_rnglist_head_basics(Dwarf_Rnglists_Head /*head*/,\n    Dwarf_Unsigned * /*rle_count*/,\n    Dwarf_Unsigned * /*rnglists_version*/,\n    Dwarf_Unsigned * /*rnglists_index_returned*/,\n    Dwarf_Unsigned * /*bytes_total_in_rle*/,\n    Dwarf_Half     * /*offset_size*/,\n    Dwarf_Half     * /*address_size*/,\n    Dwarf_Half     * /*segment_selector_size*/,\n    Dwarf_Unsigned * /*overall offset_of_this_context*/,\n    Dwarf_Unsigned * /*total_length of this context*/,\n    Dwarf_Unsigned * /*offset_table_offset*/,\n    Dwarf_Unsigned * /*offset_table_entrycount*/,\n    Dwarf_Bool     * /*rnglists_base_present*/,\n    Dwarf_Unsigned * /*rnglists_base*/,\n    Dwarf_Bool     * /*rnglists_base_address_present*/,\n    Dwarf_Unsigned * /*rnglists_base_address*/,\n    Dwarf_Bool     * /*rnglists_debug_addr_base_present*/,\n    Dwarf_Unsigned * /*rnglists_debug_addr_base*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Enables printing of details about the Range List Table\n    Headers, one header per call. Index starting at 0.\n    Returns DW_DLV_NO_ENTRY if index is too high for the table.\n    A .debug_rnglists section may contain any number\n    of Range List Table Headers with their details.  */\nint dwarf_get_rnglist_context_basics(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*index*/,\n    Dwarf_Unsigned * /*header_offset*/,\n    Dwarf_Small  *   /*offset_size*/,\n    Dwarf_Small  *   /*extension_size*/,\n    unsigned int *   /*version*/, /* 5 */\n    Dwarf_Small  *   /*address_size*/,\n    Dwarf_Small  *   /*segment_selector_size*/,\n    Dwarf_Unsigned * /*offset_entry_count*/,\n    Dwarf_Unsigned * /*offset_of_offset_array*/,\n    Dwarf_Unsigned * /*offset_of_first_rangeentry*/,\n    Dwarf_Unsigned * /*offset_past_last_rangeentry*/,\n    Dwarf_Error *    /*err*/);\n\n/*  entry offset is offset_of_first_rangeentry.\n    Stop when the returned *next_entry_offset\n    is == offset_past_last_rangentry (from\n    dwarf_get_rnglist_context_plus).\n    This only makes sense within those ranges.\n    This retrieves raw detail from the section,\n    no base values or anything are added.\n    So this returns raw individual entries\n    for a single rnglist header, meaning a\n    a single Dwarf_Rnglists_Context.\n\n    This interface assumes there is no\n    segment selector. */\nint dwarf_get_rnglist_raw_entry_detail(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*entry_offset*/,\n    Dwarf_Unsigned * /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Unsigned *  /*next_entry_offset*/,\n    Dwarf_Error * /*err*/);\n\n/*  If no error, returns DW_DLV_OK and sets\n    the entry length,kind, and operands through\n    the pointers. If any missing operands assign\n    zero back through tye operand pointers. */\n\nint dwarf_get_rnglist_rle( Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned /*contextnumber*/,\n    Dwarf_Unsigned /*entry_offset*/,\n    Dwarf_Unsigned /*endoffset*/,\n    unsigned int   * /*entrylen*/,\n    unsigned int   * /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Error * /*err*/);\n\n/* ======= END .debug_rnglists interfaces.  */\n/* ======= START .debug_loclists interfaces.  New May 2020 */\n/*  These interfaces allow reading the .debug_loclists\n    section.  Normal use of .debug_loclists uses\n    dwarf_get_loclist_c() to open access to any kind of location\n    or loclist and uses dwarf_loc_head_c_dealloc() to\n    deallocate that memory once one is finished with\n    that data. So for most purposes you do not need\n    to use these functions  */\nstruct Dwarf_Loclists_Entry_s;\ntypedef struct Dwarf_Loclists_Entry_s * Dwarf_Loclists_Entry;\n\n/*  See dwarf_get_loclist_c() to open a Dwarf_Loc_Head_c\n    on any type of location list or expression. */\n\n/*  Get the loclists entries details */\nint dwarf_get_loclists_entry_fields(Dwarf_Loc_Head_c /*head*/,\n    Dwarf_Unsigned   /*entrynum*/,\n    unsigned int   * /*entrylen*/,\n    unsigned int   * /*code*/,\n    Dwarf_Unsigned * /*raw1*/,\n    Dwarf_Unsigned * /*raw2*/,\n    Dwarf_Unsigned * /*cooked1*/,\n    Dwarf_Unsigned * /*cooked2*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Loads all the loclists headers and\n    returns DW_DLV_NO_ENTRY if the section\n    is missing or empty.\n    Intended to be done quite early and\n    it is automatically\n    done if .debug_info is loaded.\n    Doing it more than once is never necessary\n    or harmful. There is no deallocation call\n    made visible, deallocation happens\n    when dwarf_finish() is called.\n    With DW_DLV_OK it returns the number of\n    loclists headers in the section through\n    loclists_count. */\nint dwarf_load_loclists(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*loclists_count*/,\n    Dwarf_Error * /*err*/);\n\n/*  Retrieve the offset from the context-index'th\n    loclists context  and the offsetentry_index\n    element of the array of offsets.\n    If an index is too large to be correct\n    this returns DW_DLV_NO_ENTRY.\n    If all is correct it returns DW_DLV_OK and\n    sets *offset_value_out to the offset of\n    the range list from the base of the offset\n    array, and *global_offset_value_out is set\n    to the .debug_loclists section offset of\n    the range list. */\nint dwarf_get_loclist_offset_index_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*context_index*/,\n    Dwarf_Unsigned   /*offsetentry_index*/,\n    Dwarf_Unsigned * /*offset_value_out*/,\n    Dwarf_Unsigned * /*global_offset_value_out*/,\n    Dwarf_Error * /*error*/);\n\n/*  Used by dwarfdump to print basic data from the\n    data generated to look at a specific rangelist\n    as returned by  dwarf_loclists_index_get_lle_head()\n    or dwarf_loclists_offset_get_lle_head. */\nint dwarf_get_loclist_head_basics(Dwarf_Loc_Head_c /*head*/,\n    Dwarf_Small    * /*lkind*/,\n    Dwarf_Unsigned * /*lle_count*/,\n    Dwarf_Unsigned * /*loclists_version*/,\n    Dwarf_Unsigned * /*loclists_index_returned*/,\n    Dwarf_Unsigned * /*bytes_total_in_rle*/,\n    Dwarf_Half     * /*offset_size*/,\n    Dwarf_Half     * /*address_size*/,\n    Dwarf_Half     * /*segment_selector_size*/,\n    Dwarf_Unsigned * /*overall offset_of_this_context*/,\n    Dwarf_Unsigned * /*total_length of this context*/,\n    Dwarf_Unsigned * /*offset_table_offset*/,\n    Dwarf_Unsigned * /*offset_table_entrycount*/,\n    Dwarf_Bool     * /*loclists_base_present*/,\n    Dwarf_Unsigned * /*loclists_base*/,\n    Dwarf_Bool     * /*loclists_base_address_present*/,\n    Dwarf_Unsigned * /*loclists_base_address*/,\n    Dwarf_Bool     * /*loclists_debug_addr_base_present*/,\n    Dwarf_Unsigned * /*loclists_debug_addr_base*/,\n    Dwarf_Unsigned * /*offset_this_lle_area*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Enables printing of details about the Range List Table\n    Headers, one header per call. Index starting at 0.\n    Returns DW_DLV_NO_ENTRY if index is too high for the table.\n    A .debug_loclists section may contain any number\n    of Location  List Table Headers with their details.  */\nint dwarf_get_loclist_context_basics(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*index*/,\n    Dwarf_Unsigned * /*header_offset*/,\n    Dwarf_Small  *   /*offset_size*/,\n    Dwarf_Small  *   /*extension_size*/,\n    unsigned int *   /*version*/, /* 5 */\n    Dwarf_Small  *   /*address_size*/,\n    Dwarf_Small  *   /*segment_selector_size*/,\n    Dwarf_Unsigned * /*offset_entry_count*/,\n    Dwarf_Unsigned * /*offset_of_offset_array*/,\n    Dwarf_Unsigned * /*offset_of_first_locentry*/,\n    Dwarf_Unsigned * /*offset_past_last_locentry*/,\n    Dwarf_Error *    /*err*/);\n\n/*  entry offset is offset_of_first_locentry.\n    Stop when the returned *next_entry_offset\n    is == offset_past_last_locentry (from\n    dwarf_get_loclist_context_plus).\n    This only makes sense within those ranges.\n    This retrieves raw detail from the section,\n    no base values or anything are added.\n    So this returns raw individual entries\n    for a single loclist header, meaning a\n    a single Dwarf_Loclists_Context.\n\n    This interface assumes there is no\n    segment selector. */\nint dwarf_get_loclist_raw_entry_detail(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*entry_offset*/,\n    Dwarf_Unsigned * /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Unsigned *  /*next_entry_offset*/,\n    Dwarf_Error * /*err*/);\n\n/*  If no error, returns DW_DLV_OK and sets\n    the entry length,kind, and operands through\n    the pointers. If any missing operands assign\n    zero back through tye operand pointers. */\n\nint dwarf_get_loclist_lle( Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*contextnumber*/,\n    Dwarf_Unsigned   /*entry_offset*/,\n    Dwarf_Unsigned   /*endoffset*/,\n    unsigned int *   /*entrylen*/,\n    unsigned int *   /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Unsigned * /*expr_ops_blocksize*/,\n    Dwarf_Unsigned * /*expr_ops_offset*/,\n    Dwarf_Small   ** /*expr_opsdata*/,\n    Dwarf_Error * /*err*/);\n\n/* ======= END .debug_loclists interfaces.  */\n\n/*  New April 2018.\n    Allows applications to print the .debug_str_offsets\n    section.\n    Beginning at starting_offset zero,\n    returns data about the first table found.\n    The value *next_table_offset is the value\n    of the next table (if any), one byte past\n    the end of the table whose data is returned..\n    Returns DW_DLV_NO_ENTRY if the starting offset\n    is past the end of valid data.\n\n    There is no guarantee that there are no non-0 nonsense\n    bytes in the section outside of useful tables,\n    so this can fail and return nonsense or\n    DW_DLV_ERROR  if such garbage exists.\n*/\n\nstruct Dwarf_Str_Offsets_Table_s;\ntypedef struct  Dwarf_Str_Offsets_Table_s *  Dwarf_Str_Offsets_Table;\n\n/*  Allocates a struct Dwarf_Str_Offsets_Table_s for the section\n    and returns DW_DLV_OK and sets a pointer to the struct through\n    the table_data pointer if successful.\n\n    If there is no such section it returns DW_DLV_NO_ENTRY. */\nint dwarf_open_str_offsets_table_access(Dwarf_Debug  /*dbg*/,\n    Dwarf_Str_Offsets_Table * /*table_data*/,\n    Dwarf_Error             * /*error*/);\n\n/*  Close access, free table_data. */\nint dwarf_close_str_offsets_table_access(\n    Dwarf_Str_Offsets_Table   /*table_data*/,\n    Dwarf_Error             * /*error*/);\n\n/*  Call till it returns DW_DLV_NO_ENTRY (normal end)\n    or DW_DLV_ERROR (error) and stop.\n\n    On successful call, call dwarf_str_offsets_table_entry()\n    to get the individual table values on the now-active table. */\nint dwarf_next_str_offsets_table( Dwarf_Str_Offsets_Table /*table_data*/,\n    Dwarf_Unsigned * /*unit_length*/,\n    Dwarf_Unsigned * /*unit_length_offset*/,\n    Dwarf_Unsigned * /*table_start_offset*/,\n    Dwarf_Half     * /*entry_size*/,\n    Dwarf_Half     * /*version*/,\n    Dwarf_Half     * /*padding*/,\n    Dwarf_Unsigned * /*table_value_count*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Valid index values n:  0 <= n <  table_entry_count\n    for the active table */\nint dwarf_str_offsets_value_by_index(Dwarf_Str_Offsets_Table /*table_data*/,\n    Dwarf_Unsigned   /*index_to_entry*/,\n    Dwarf_Unsigned * /*entry_value*/,\n    Dwarf_Error    * /*error*/);\n\n/*  After all str_offsets read this reports final\n    wasted-bytes count. */\nint dwarf_str_offsets_statistics(Dwarf_Str_Offsets_Table /*table_data*/,\n    Dwarf_Unsigned * /*wasted_byte_count*/,\n    Dwarf_Unsigned * /*table_count*/,\n    Dwarf_Error    * /*error*/);\n\n/* The harmless error list is a circular buffer of\n   errors we note but which do not stop us from processing\n   the object.  Created so dwarfdump or other tools\n   can report such inconsequential errors without causing\n   anything to stop early. */\n#define DW_HARMLESS_ERROR_CIRCULAR_LIST_DEFAULT_SIZE 4\n#define DW_HARMLESS_ERROR_MSG_STRING_SIZE   300\n/* User code supplies size of array of pointers errmsg_ptrs_array\n    in count and the array of pointers (the pointers themselves\n    need not be initialized).\n    The pointers returned in the array of pointers\n    are invalidated by ANY call to libdwarf.\n    Use them before making another libdwarf call!\n    The array of string pointers passed in always has\n    a final null pointer, so if there are N pointers the\n    and M actual strings, then MIN(M,N-1) pointers are\n    set to point to error strings.  The array of pointers\n    to strings always terminates with a NULL pointer.\n    If 'count' is passed in zero then errmsg_ptrs_array\n    is not touched.\n\n    The function returns DW_DLV_NO_ENTRY if no harmless errors\n    were noted so far.  Returns DW_DLV_OK if there are errors.\n    Never returns DW_DLV_ERROR.\n\n    Each call empties the error list (discarding all current entries).\n    If newerr_count is non-NULL the count of harmless errors\n    since the last call is returned through the pointer\n    (some may have been discarded or not returned, it is a circular\n    list...).\n    If DW_DLV_NO_ENTRY is returned none of the arguments\n    here are touched or used.\n    */\nint dwarf_get_harmless_error_list(Dwarf_Debug /*dbg*/,\n    unsigned int   /*count*/,\n    const char **  /*errmsg_ptrs_array*/,\n    unsigned int * /*newerr_count*/);\n\n/*  Insertion is only for testing the harmless error code, it is not\n    necessarily useful otherwise. */\nvoid dwarf_insert_harmless_error(Dwarf_Debug /*dbg*/,\n    char * /*newerror*/);\n\n/*  The size of the circular list of strings may be set\n    and reset as needed.  If it is shortened excess\n    messages are simply dropped.  It returns the previous\n    size. If zero passed in the size is unchanged\n    and it simply returns the current size  */\nunsigned int dwarf_set_harmless_error_list_size(Dwarf_Debug /*dbg*/,\n    unsigned int /*maxcount*/);\n/*  The harmless error strings (if any) are freed when the dbg\n    is dwarf_finish()ed. */\n\n/*  When the val_in is known these dwarf_get_TAG_name (etc)\n    functions return the string corresponding to the val_in passed in\n    through the pointer s_out and the value returned is DW_DLV_OK.\n    The strings are in static storage\n    and must not be freed.\n    If DW_DLV_NO_ENTRY is returned the val_in is not known and\n    *s_out is not set.  DW_DLV_ERROR is never returned.*/\n\n/* The following copied from a generated dwarf_names.h */\n\n/* BEGIN FILE */\nextern int dwarf_get_ACCESS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ADDR_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATCF_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_AT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CFA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_children_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CHILDREN_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DEFAULTED_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DSC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_EH_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_END_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FORM_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FRAME_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIKIND_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIVIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ID_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_IDX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_INL_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ISA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LANG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\n/*  dwarf_get_LLEX_name is likely just temporary. Not standard. */\nextern int dwarf_get_LLEX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNCT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACINFO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACRO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_OP_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ORD_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_RLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_SECT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_TAG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_UT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIRTUALITY_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\n/* END FILE */\n\n/* Convert local offset into global offset */\nint dwarf_convert_to_global_offset(Dwarf_Attribute  /*attr*/,\n    Dwarf_Off        /*offset*/,\n    Dwarf_Off*       /*ret_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* Get both offsets (local and global) */\nint dwarf_die_offsets(Dwarf_Die     /*die*/,\n    Dwarf_Off*    /*global_offset*/,\n    Dwarf_Off*    /*local_offset*/,\n    Dwarf_Error*  /*error*/);\n\n/* Giving a section name, get its size and address */\nint dwarf_get_section_info_by_name(Dwarf_Debug      /*dbg*/,\n    const char *     /*section_name*/,\n    Dwarf_Addr*      /*section_addr*/,\n    Dwarf_Unsigned*  /*section_size*/,\n    Dwarf_Error*     /*error*/);\n\n/* Giving a section index, get its size and address */\nint dwarf_get_section_info_by_index(Dwarf_Debug      /*dbg*/,\n    int              /*section_index*/,\n    const char **    /*section_name*/,\n    Dwarf_Addr*      /*section_addr*/,\n    Dwarf_Unsigned*  /*section_size*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Get section count, of object file sections. */\nint dwarf_get_section_count(Dwarf_Debug /*dbg*/);\n\n/*  Get the version and offset size of a CU context.\n    This is useful as a precursor to\n    calling dwarf_get_form_class() at times.  */\nint dwarf_get_version_of_die(Dwarf_Die /*die*/,\n    Dwarf_Half * /*version*/,\n    Dwarf_Half * /*offset_size*/);\n\nint dwarf_discr_list(Dwarf_Debug /*dbg*/,\n    Dwarf_Small    * /*blockpointer*/,\n    Dwarf_Unsigned   /*blocklen*/,\n    Dwarf_Dsc_Head * /*dsc_head_out*/,\n    Dwarf_Unsigned * /*dsc_array_length_out*/,\n    Dwarf_Error    * /*error*/);\n\n/*  NEW September 2016. Allows easy access to DW_AT_discr_list\n    entry. Callers must know which is the appropriate\n    one of the following two interfaces, though both\n    will work. */\nint dwarf_discr_entry_u(Dwarf_Dsc_Head /* dsc */,\n    Dwarf_Unsigned   /*entrynum*/,\n    Dwarf_Half     * /*out_type*/,\n    Dwarf_Unsigned * /*out_discr_low*/,\n    Dwarf_Unsigned * /*out_discr_high*/,\n    Dwarf_Error    * /*error*/);\n\n/*  NEW September 2016. Allows easy access to DW_AT_discr_list\n    entry. */\nint dwarf_discr_entry_s(Dwarf_Dsc_Head /* dsc */,\n    Dwarf_Unsigned   /*entrynum*/,\n    Dwarf_Half     * /*out_type*/,\n    Dwarf_Signed   * /*out_discr_low*/,\n    Dwarf_Signed   * /*out_discr_high*/,\n    Dwarf_Error    * /*error*/);\n\n/*  New May 2017.  So users can find out what groups (dwo or COMDAT)\n    are in the object and how much to allocate so one can get the\n    group-section map data. */\nint dwarf_sec_group_sizes(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*section_count_out*/,\n    Dwarf_Unsigned * /*group_count_out*/,\n    Dwarf_Unsigned * /*selected_group_out*/,\n    Dwarf_Unsigned * /*map_entry_count_out*/,\n    Dwarf_Error    * /*error*/);\n\n/*  New May 2017. Reveals the map between group numbers and section numbers.\n    Caller must allocate the arrays with space for 'map_entry_count'\n    values and this function fills in the array entries.\n    Output ordered by group number and section number.\n    */\nint dwarf_sec_group_map(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*map_entry_count*/,\n    Dwarf_Unsigned * /*group_numbers_array*/,\n    Dwarf_Unsigned * /*sec_numbers_array*/,\n    const char    ** /*sec_names_array*/,\n    Dwarf_Error    * /*error*/);\n\n/*  dwarf_get_endian_copy_function new. December 2019. */\nvoid (*dwarf_get_endian_copy_function(Dwarf_Debug /*dbg*/))(void *, const void * /*src*/, unsigned long /*srclen*/);\n\n/*  These make the  LEB encoding routines visible to libdwarf\n    callers. Added November, 2012. */\nint dwarf_encode_leb128(Dwarf_Unsigned /*val*/,\n    int * /*nbytes*/,\n    char * /*space*/,\n    int /*splen*/);\nint dwarf_encode_signed_leb128(Dwarf_Signed /*val*/,\n    int * /*nbytes*/,\n    char * /*space*/,\n    int /*splen*/);\n\n/*  Record some application command line options in libdwarf.\n    This is not arc/argv processing, just precooked setting\n    of a flag in libdwarf based on something the application\n    wants.  check_verbose_mode of TRUE means do more checking\n    and sometimes print errors (from libdwarf).\n    Not restricted to a single Dwarf_Debug, it applies\n    to the libdwarf the executable is using.\n*/\ntypedef struct {\n    Dwarf_Bool check_verbose_mode;\n} Dwarf_Cmdline_Options;\nextern Dwarf_Cmdline_Options dwarf_cmdline_options;\n\n/* Set libdwarf to reflect some application command line options. */\nvoid dwarf_record_cmdline_options(Dwarf_Cmdline_Options /*options*/);\n\nint dwarf_pro_get_string_stats(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned * /*str_count*/,\n    Dwarf_Unsigned * /*str_total_length*/,\n    Dwarf_Unsigned * /*count_debug_str*/,\n    Dwarf_Unsigned * /*len_debug_str*/,\n    Dwarf_Unsigned * /*reused_count*/,\n    Dwarf_Unsigned * /*reused_len*/,\n    Dwarf_Error    * /*error*/);\n\n#ifndef DW_FTYPE_UNKNOWN\n#define DW_FTYPE_UNKNOWN    0\n#define DW_FTYPE_ELF        1  /* Unix/Linux/etc */\n#define DW_FTYPE_MACH_O     2  /* MacOS. */\n#define DW_FTYPE_PE         3  /* Windows */\n#define DW_FTYPE_ARCHIVE    4  /* unix archive */\n#define DW_FTYPE_CUSTOM_ELF 5  /* Custom ELF format. Ignore this. */\n#endif /* DW_FTYPE_UNKNOWN */\n\n#ifndef DW_ENDIAN_UNKNOWN\n#define DW_ENDIAN_UNKNOWN  0\n#define DW_ENDIAN_BIG      1\n#define DW_ENDIAN_LITTLE   2\n#endif /* DW_ENDIAN_UNKNOWN */\n\n/*  Defined March 7 2020. Allows a caller to\n    avoid most tracking by the de_alloc_tree hash\n    table if called with v of zero.\n    Returns the value the flag was before this call. */\nint dwarf_set_de_alloc_flag(int v);\n\n/* Solely looks for debuglink */\nint dwarf_object_detector_path(const char  * /*path*/,\n    char           * /*outpath_buffer*/,\n    unsigned long    /*outpathlen*/,\n    unsigned int   * /*ftype*/,\n    unsigned int   * /*endian*/,\n    unsigned int   * /*offsetsize*/,\n    Dwarf_Unsigned * /*filesize*/,\n    int *  /*errcode*/);\n\n/* Solely looks for debuglink */\nint dwarf_object_detector_path_b(const char  * /*path*/,\n    char         * /*outpath_buffer*/,\n    unsigned long  /*outpathlen*/,\n    char **        /* gl_pathnames*/,\n    unsigned       /* gl_pathcount*/,\n    unsigned int * /*ftype*/,\n    unsigned int * /*endian*/,\n    unsigned int * /*offsetsize*/,\n    Dwarf_Unsigned * /*filesize*/,\n    unsigned char * /*pathsource*/,\n    int * /*errcode*/);\n\n/* Solely looks for dSYM */\nint dwarf_object_detector_path_dSYM(\n    const char  *path,\n    char *outpath, unsigned long outpath_len,\n    char ** gl_pathnames,\n    unsigned gl_pathcount,\n    unsigned *ftype,\n    unsigned *endian,\n    unsigned *offsetsize,\n    Dwarf_Unsigned  *filesize,\n    unsigned char *pathsource,\n    int *errcode);\n\n\n#define DW_PATHSOURCE_unspecified 0\n#define DW_PATHSOURCE_basic     1\n#define DW_PATHSOURCE_dsym      2 /* MacOS dSYM */\n#define DW_PATHSOURCE_debuglink 3 /* GNU debuglink */\n\n/*  Returns the pathsource value set up at init time*/\nint dwarf_get_path_source_type(Dwarf_Debug /* dbg*/,\n    unsigned char * /*path_source*/,\n    Dwarf_Error   * /*error*/);\n\nint dwarf_object_detector_fd(int /*fd*/,\n    unsigned int * /*ftype*/,\n    unsigned int * /*endian*/,\n    unsigned int * /*offsetsize*/,\n    Dwarf_Unsigned  * /*filesize*/,\n    int *  /*errcode*/);\n\n#ifdef __cplusplus\n}\n#endif\n#endif /* _LIBDWARF_H */\n", "/*\n    This date string is hereby put into the public domain.\n    Copyrighting this is crazy. It's just a date string\n    and is modified from time to time.\n*/\n\n#define DW_VERSION_DATE_STR \" 2020-10-11 11:34:27-07:00  \"\n"], "fixing_code": ["2020-10-17  David Anderson\n    * configure.ac: Now version 20201017\n    * configure: Regenerated.\n2020-10-11  David Anderson\n    * configure.ac: Now version 20201011\n    * configure: Regenerated.\n2020-10-03  David Anderson\n    * Makefile.in,aclocal.m4,ar-lib,compile,configure,depcomp:\n      Running autoreconf on Ubuntu 20.04 caused some small\n      changes.\n    * COPYING: Corrected the references to the BSD copyright\n      to use \"two-clause BSD license\". \n2020-09-26  David Anderson\n    * configure.ac: Now version 20200926\n    * configure: Regenerated.\n2020-09-15  David Anderson\n    * configure.ac: Now version 20200915\n      Added -fno-omit-frame-pointer to the -fsanitize option set\n    * configure: Regenerated.\n2020-09-08  David Anderson\n    * configure.ac: Now version 20200908\n    * configure: Regenerated.\n2020-08-25  David Anderson\n    * configure.ac: Now version 20200825\n    * configure: Regenerated.\n2020-08-22  David Anderson\n    * configure.ac: Now version 20200822\n    * configure: Regenerated.\n2020-08-10  David Anderson\n    * configure.ac: Now version 20200810\n    * configure: Regenerated.\n2020-07-19  David Anderson\n    * configure.ac: Now version 20200719\n    * configure: Regenerated.\n2020-07-14  David Anderson\n    * configure.ac: Now version 20200714\n    * configure: Regenerated.\n2020-07-04  David Anderson\n    * configure.ac: Now version 20200703\n    * configure: Regenerated.\n2020-06-29  David Anderson\n    * configure.ac: Now version 20200629\n    * configure: Regenerated.\n2020-06-17  David Anderson\n    * configure.ac: Now version 20200617\n    * configure: Regenerated.\n2020-06-12  David Anderson\n    * configure.ac: Now version 20200612\n    * configure: Regenerated.\n2020-06-09  David Anderson\n    * configure.ac: Now version 20200601\n    * configure: Regenerated.\n2020-05-19  David Anderson\n    * configure.ac: Now version 20200519\n    * configure: Regenerated.\n2020-05-01  David Anderson\n    * configure.ac: Now version 20200501\n    * configure: Regenerated.\n2020-04-26  David Anderson\n    * configure.ac: Now version 20200426\n    * configure: Regenerated.\n2020-04-13  David Anderson\n    * configure.ac: Now version 20200423\n    * configure: Regenerated.\n2020-04-13  David Anderson\n    * configure.ac: Now version 20200412\n    * configure: Regenerated.\n2020-03-26  David Anderson\n    * configure.ac: Now version 20200327\n    * configure: Regenerated.\n2020-03-15  David Anderson\n    * configure.ac: Now version 20200315\n    * configure: Regenerated.\n2020-03-09  David Anderson\n    * configure.ac: Now version 20200307.\n    * configure: Regenerated.\n2020-02-25  David Anderson\n    * configure.ac: now 20200225\n    * configure: Regenerated.\n2020-02-15  David Anderson\n    * configure.ac: Version string now 20200215 as we now\n      deal with libelf-reading-relocation-sections.\n      (nolibelf code already did those as of 20200213\n    * configure: Regenerated.\n2020-02-13  David Anderson\n    * configure.ac: Version string now 20200213\n    * configure: Regenerated.\n2020-01-05  David Anderson\n    * configure.ac: Version string now 20200105\n    * configure: Regenerated.\n", "#! /bin/sh\n# Guess values for system-dependent variables and create Makefiles.\n# Generated by GNU Autoconf 2.69 for libdwarf 20201017.\n#\n# Report bugs to <libdwarf-list -at- linuxmail -dot- org>.\n#\n#\n# Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.\n#\n#\n# This configure script is free software; the Free Software Foundation\n# gives unlimited permission to copy, distribute and modify it.\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Use a proper internal environment variable to ensure we don't fall\n  # into an infinite loop, continuously re-executing ourselves.\n  if test x\"${_as_can_reexec}\" != xno && test \"x$CONFIG_SHELL\" != x; then\n    _as_can_reexec=no; export _as_can_reexec;\n    # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nas_fn_exit 255\n  fi\n  # We don't want this to propagate to other subprocesses.\n          { _as_can_reexec=; unset _as_can_reexec;}\nif test \"x$CONFIG_SHELL\" = x; then\n  as_bourne_compatible=\"if test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\"\n  as_required=\"as_fn_return () { (exit \\$1); }\nas_fn_success () { as_fn_return 0; }\nas_fn_failure () { as_fn_return 1; }\nas_fn_ret_success () { return 0; }\nas_fn_ret_failure () { return 1; }\n\nexitcode=0\nas_fn_success || { exitcode=1; echo as_fn_success failed.; }\nas_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }\nas_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }\nas_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }\nif ( set x; as_fn_ret_success y && test x = \\\"\\$1\\\" ); then :\n\nelse\n  exitcode=1; echo positional parameters were not saved.\nfi\ntest x\\$exitcode = x0 || exit 1\ntest -x / || exit 1\"\n  as_suggested=\"  as_lineno_1=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_1a=\\$LINENO\n  as_lineno_2=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_2a=\\$LINENO\n  eval 'test \\\"x\\$as_lineno_1'\\$as_run'\\\" != \\\"x\\$as_lineno_2'\\$as_run'\\\" &&\n  test \\\"x\\`expr \\$as_lineno_1'\\$as_run' + 1\\`\\\" = \\\"x\\$as_lineno_2'\\$as_run'\\\"' || exit 1\n\n  test -n \\\"\\${ZSH_VERSION+set}\\${BASH_VERSION+set}\\\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=\\$ECHO\\$ECHO\\$ECHO\\$ECHO\\$ECHO\n    ECHO=\\$ECHO\\$ECHO\\$ECHO\\$ECHO\\$ECHO\\$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \\\"X\\`printf %s \\$ECHO\\`\\\" = \\\"X\\$ECHO\\\" \\\\\n      || test \\\"X\\`print -r -- \\$ECHO\\`\\\" = \\\"X\\$ECHO\\\" ) || exit 1\ntest \\$(( 1 + 1 )) = 2 || exit 1\"\n  if (eval \"$as_required\") 2>/dev/null; then :\n  as_have_required=yes\nelse\n  as_have_required=no\nfi\n  if test x$as_have_required = xyes && (eval \"$as_suggested\") 2>/dev/null; then :\n\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  as_found=:\n  case $as_dir in #(\n\t /*)\n\t   for as_base in sh bash ksh sh5; do\n\t     # Try only shells that exist, to save several forks.\n\t     as_shell=$as_dir/$as_base\n\t     if { test -f \"$as_shell\" || test -f \"$as_shell.exe\"; } &&\n\t\t    { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$as_shell as_have_required=yes\n\t\t   if { $as_echo \"$as_bourne_compatible\"\"$as_suggested\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  break 2\nfi\nfi\n\t   done;;\n       esac\n  as_found=false\ndone\n$as_found || { if { test -f \"$SHELL\" || test -f \"$SHELL.exe\"; } &&\n\t      { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$SHELL\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$SHELL as_have_required=yes\nfi; }\nIFS=$as_save_IFS\n\n\n      if test \"x$CONFIG_SHELL\" != x; then :\n  export CONFIG_SHELL\n             # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\nfi\n\n    if test x$as_have_required = xno; then :\n  $as_echo \"$0: This script requires a shell more modern than all\"\n  $as_echo \"$0: the shells that I found on your system.\"\n  if test x${ZSH_VERSION+set} = xset ; then\n    $as_echo \"$0: In particular, zsh $ZSH_VERSION has bugs and should\"\n    $as_echo \"$0: be upgraded to zsh 4.3.4 or later.\"\n  else\n    $as_echo \"$0: Please tell bug-autoconf@gnu.org and libdwarf-list -at-\n$0: linuxmail -dot- org about your system, including any\n$0: error possibly output before this message. Then install\n$0: a modern shell, or manually run the script under such a\n$0: shell if you do have one.\"\n  fi\n  exit 1\nfi\nfi\nfi\nSHELL=${CONFIG_SHELL-/bin/sh}\nexport SHELL\n# Unset more variables known to interfere with behavior of common tools.\nCLICOLOR_FORCE= GREP_OPTIONS=\nunset CLICOLOR_FORCE GREP_OPTIONS\n\n## --------------------- ##\n## M4sh Shell Functions. ##\n## --------------------- ##\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\n\n  as_lineno_1=$LINENO as_lineno_1a=$LINENO\n  as_lineno_2=$LINENO as_lineno_2a=$LINENO\n  eval 'test \"x$as_lineno_1'$as_run'\" != \"x$as_lineno_2'$as_run'\" &&\n  test \"x`expr $as_lineno_1'$as_run' + 1`\" = \"x$as_lineno_2'$as_run'\"' || {\n  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)\n  sed -n '\n    p\n    /[$]LINENO/=\n  ' <$as_myself |\n    sed '\n      s/[$]LINENO.*/&-/\n      t lineno\n      b\n      :lineno\n      N\n      :loop\n      s/[$]LINENO\\([^'$as_cr_alnum'_].*\\n\\)\\(.*\\)/\\2\\1\\2/\n      t loop\n      s/-\\n.*//\n    ' >$as_me.lineno &&\n  chmod +x \"$as_me.lineno\" ||\n    { $as_echo \"$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell\" >&2; as_fn_exit 1; }\n\n  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have\n  # already done that, so ensure we don't try to do so again and fall\n  # in an infinite loop.  This has already happened in practice.\n  _as_can_reexec=no; export _as_can_reexec\n  # Don't try to exec as it changes $[0], causing all sort of problems\n  # (the dirname of $[0] is not the place where we might find the\n  # original and so on.  Autoconf is especially sensitive to this).\n  . \"./$as_me.lineno\"\n  # Exit status is that of the last command.\n  exit\n}\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\nSHELL=${CONFIG_SHELL-/bin/sh}\n\n\ntest -n \"$DJDIR\" || exec 7<&0 </dev/null\nexec 6>&1\n\n# Name of the host.\n# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,\n# so uname gets run too.\nac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`\n\n#\n# Initializations.\n#\nac_default_prefix=/usr/local\nac_clean_files=\nac_config_libobj_dir=.\nLIBOBJS=\ncross_compiling=no\nsubdirs=\nMFLAGS=\nMAKEFLAGS=\n\n# Identity of this package.\nPACKAGE_NAME='libdwarf'\nPACKAGE_TARNAME='libdwarf'\nPACKAGE_VERSION='20201017'\nPACKAGE_STRING='libdwarf 20201017'\nPACKAGE_BUGREPORT='libdwarf-list -at- linuxmail -dot- org'\nPACKAGE_URL=''\n\nac_unique_file=\"configure.ac\"\n# Factoring default headers for most tests.\nac_includes_default=\"\\\n#include <stdio.h>\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_STAT_H\n# include <sys/stat.h>\n#endif\n#ifdef STDC_HEADERS\n# include <stdlib.h>\n# include <stddef.h>\n#else\n# ifdef HAVE_STDLIB_H\n#  include <stdlib.h>\n# endif\n#endif\n#ifdef HAVE_STRING_H\n# if !defined STDC_HEADERS && defined HAVE_MEMORY_H\n#  include <memory.h>\n# endif\n# include <string.h>\n#endif\n#ifdef HAVE_STRINGS_H\n# include <strings.h>\n#endif\n#ifdef HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif\n#ifdef HAVE_STDINT_H\n# include <stdint.h>\n#endif\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\"\n\nac_subst_vars='am__EXEEXT_FALSE\nam__EXEEXT_TRUE\nLTLIBOBJS\nLIBOBJS\nALLOCA\nDWARF_CFLAGS_WARN\nDWARF_CXXFLAGS_WARN\nstruct_elf\nDWARF_LIBS\nCXXCPP\nam__fastdepCXX_FALSE\nam__fastdepCXX_TRUE\nCXXDEPMODE\nac_ct_CXX\nCXXFLAGS\nCXX\nrelease_info\nversion_info\nCPP\nLT_SYS_LIBRARY_PATH\nOTOOL64\nOTOOL\nLIPO\nNMEDIT\nDSYMUTIL\nMANIFEST_TOOL\nRANLIB\nLN_S\nNM\nac_ct_DUMPBIN\nDUMPBIN\nLD\nFGREP\nEGREP\nGREP\nSED\nLIBTOOL\nOBJDUMP\nDLLTOOL\nAS\nAM_BACKSLASH\nAM_DEFAULT_VERBOSITY\nAM_DEFAULT_V\nAM_V\nam__fastdepCC_FALSE\nam__fastdepCC_TRUE\nCCDEPMODE\nam__nodep\nAMDEPBACKSLASH\nAMDEP_FALSE\nAMDEP_TRUE\nam__include\nDEPDIR\nam__untar\nam__tar\nAMTAR\nam__leading_dot\nSET_MAKE\nAWK\nmkdir_p\nMKDIR_P\nINSTALL_STRIP_PROGRAM\nSTRIP\ninstall_sh\nMAKEINFO\nAUTOHEADER\nAUTOMAKE\nAUTOCONF\nACLOCAL\nVERSION\nPACKAGE\nCYGPATH_W\nam__isrc\nINSTALL_DATA\nINSTALL_SCRIPT\nINSTALL_PROGRAM\nOBJEXT\nEXEEXT\nac_ct_CC\nCPPFLAGS\nLDFLAGS\nCFLAGS\nCC\nac_ct_AR\nAR\nHAVE_WIN32_FALSE\nHAVE_WIN32_TRUE\nhost_os\nhost_vendor\nhost_cpu\nhost\nbuild_os\nbuild_vendor\nbuild_cpu\nbuild\ndwarf_namestable\nHAVE_DWARFEXAMPLE_FALSE\nHAVE_DWARFEXAMPLE_TRUE\nHAVE_DWARFGEN_FALSE\nHAVE_DWARFGEN_TRUE\ntarget_alias\nhost_alias\nbuild_alias\nLIBS\nECHO_T\nECHO_N\nECHO_C\nDEFS\nmandir\nlocaledir\nlibdir\npsdir\npdfdir\ndvidir\nhtmldir\ninfodir\ndocdir\noldincludedir\nincludedir\nrunstatedir\nlocalstatedir\nsharedstatedir\nsysconfdir\ndatadir\ndatarootdir\nlibexecdir\nsbindir\nbindir\nprogram_transform_name\nprefix\nexec_prefix\nPACKAGE_URL\nPACKAGE_BUGREPORT\nPACKAGE_STRING\nPACKAGE_VERSION\nPACKAGE_TARNAME\nPACKAGE_NAME\nPATH_SEPARATOR\nSHELL\nam__quote'\nac_subst_files=''\nac_user_opts='\nenable_option_checking\nenable_dwarfgen\nenable_dwarfexample\nenable_globalallocsums\nenable_sanitize\nenable_oldframecol\nenable_namestable\nenable_libelf\nenable_windowspath\nenable_wall\nenable_nonstandardprintf\nenable_havecustomlibelf\nenable_dependency_tracking\nenable_silent_rules\nenable_shared\nenable_static\nwith_pic\nenable_fast_install\nwith_aix_soname\nwith_gnu_ld\nwith_sysroot\nenable_libtool_lock\n'\n      ac_precious_vars='build_alias\nhost_alias\ntarget_alias\nCC\nCFLAGS\nLDFLAGS\nLIBS\nCPPFLAGS\nLT_SYS_LIBRARY_PATH\nCPP\nCXX\nCXXFLAGS\nCCC\nCXXCPP\nDWARF_LIBS'\n\n\n# Initialize some variables set by options.\nac_init_help=\nac_init_version=false\nac_unrecognized_opts=\nac_unrecognized_sep=\n# The variables have the same names as the options, with\n# dashes changed to underlines.\ncache_file=/dev/null\nexec_prefix=NONE\nno_create=\nno_recursion=\nprefix=NONE\nprogram_prefix=NONE\nprogram_suffix=NONE\nprogram_transform_name=s,x,x,\nsilent=\nsite=\nsrcdir=\nverbose=\nx_includes=NONE\nx_libraries=NONE\n\n# Installation directory options.\n# These are left unexpanded so users can \"make install exec_prefix=/foo\"\n# and all the variables that are supposed to be based on exec_prefix\n# by default will actually change.\n# Use braces instead of parens because sh, perl, etc. also accept them.\n# (The list follows the same order as the GNU Coding Standards.)\nbindir='${exec_prefix}/bin'\nsbindir='${exec_prefix}/sbin'\nlibexecdir='${exec_prefix}/libexec'\ndatarootdir='${prefix}/share'\ndatadir='${datarootdir}'\nsysconfdir='${prefix}/etc'\nsharedstatedir='${prefix}/com'\nlocalstatedir='${prefix}/var'\nrunstatedir='${localstatedir}/run'\nincludedir='${prefix}/include'\noldincludedir='/usr/include'\ndocdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\ninfodir='${datarootdir}/info'\nhtmldir='${docdir}'\ndvidir='${docdir}'\npdfdir='${docdir}'\npsdir='${docdir}'\nlibdir='${exec_prefix}/lib'\nlocaledir='${datarootdir}/locale'\nmandir='${datarootdir}/man'\n\nac_prev=\nac_dashdash=\nfor ac_option\ndo\n  # If the previous option needs an argument, assign it.\n  if test -n \"$ac_prev\"; then\n    eval $ac_prev=\\$ac_option\n    ac_prev=\n    continue\n  fi\n\n  case $ac_option in\n  *=?*) ac_optarg=`expr \"X$ac_option\" : '[^=]*=\\(.*\\)'` ;;\n  *=)   ac_optarg= ;;\n  *)    ac_optarg=yes ;;\n  esac\n\n  # Accept the important Cygnus configure options, so we can diagnose typos.\n\n  case $ac_dashdash$ac_option in\n  --)\n    ac_dashdash=yes ;;\n\n  -bindir | --bindir | --bindi | --bind | --bin | --bi)\n    ac_prev=bindir ;;\n  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)\n    bindir=$ac_optarg ;;\n\n  -build | --build | --buil | --bui | --bu)\n    ac_prev=build_alias ;;\n  -build=* | --build=* | --buil=* | --bui=* | --bu=*)\n    build_alias=$ac_optarg ;;\n\n  -cache-file | --cache-file | --cache-fil | --cache-fi \\\n  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)\n    ac_prev=cache_file ;;\n  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)\n    cache_file=$ac_optarg ;;\n\n  --config-cache | -C)\n    cache_file=config.cache ;;\n\n  -datadir | --datadir | --datadi | --datad)\n    ac_prev=datadir ;;\n  -datadir=* | --datadir=* | --datadi=* | --datad=*)\n    datadir=$ac_optarg ;;\n\n  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \\\n  | --dataroo | --dataro | --datar)\n    ac_prev=datarootdir ;;\n  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \\\n  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)\n    datarootdir=$ac_optarg ;;\n\n  -disable-* | --disable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*disable-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=no ;;\n\n  -docdir | --docdir | --docdi | --doc | --do)\n    ac_prev=docdir ;;\n  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)\n    docdir=$ac_optarg ;;\n\n  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)\n    ac_prev=dvidir ;;\n  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)\n    dvidir=$ac_optarg ;;\n\n  -enable-* | --enable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*enable-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=\\$ac_optarg ;;\n\n  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \\\n  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \\\n  | --exec | --exe | --ex)\n    ac_prev=exec_prefix ;;\n  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \\\n  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \\\n  | --exec=* | --exe=* | --ex=*)\n    exec_prefix=$ac_optarg ;;\n\n  -gas | --gas | --ga | --g)\n    # Obsolete; use --with-gas.\n    with_gas=yes ;;\n\n  -help | --help | --hel | --he | -h)\n    ac_init_help=long ;;\n  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)\n    ac_init_help=recursive ;;\n  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)\n    ac_init_help=short ;;\n\n  -host | --host | --hos | --ho)\n    ac_prev=host_alias ;;\n  -host=* | --host=* | --hos=* | --ho=*)\n    host_alias=$ac_optarg ;;\n\n  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)\n    ac_prev=htmldir ;;\n  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \\\n  | --ht=*)\n    htmldir=$ac_optarg ;;\n\n  -includedir | --includedir | --includedi | --included | --include \\\n  | --includ | --inclu | --incl | --inc)\n    ac_prev=includedir ;;\n  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \\\n  | --includ=* | --inclu=* | --incl=* | --inc=*)\n    includedir=$ac_optarg ;;\n\n  -infodir | --infodir | --infodi | --infod | --info | --inf)\n    ac_prev=infodir ;;\n  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)\n    infodir=$ac_optarg ;;\n\n  -libdir | --libdir | --libdi | --libd)\n    ac_prev=libdir ;;\n  -libdir=* | --libdir=* | --libdi=* | --libd=*)\n    libdir=$ac_optarg ;;\n\n  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \\\n  | --libexe | --libex | --libe)\n    ac_prev=libexecdir ;;\n  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \\\n  | --libexe=* | --libex=* | --libe=*)\n    libexecdir=$ac_optarg ;;\n\n  -localedir | --localedir | --localedi | --localed | --locale)\n    ac_prev=localedir ;;\n  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)\n    localedir=$ac_optarg ;;\n\n  -localstatedir | --localstatedir | --localstatedi | --localstated \\\n  | --localstate | --localstat | --localsta | --localst | --locals)\n    ac_prev=localstatedir ;;\n  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \\\n  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)\n    localstatedir=$ac_optarg ;;\n\n  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)\n    ac_prev=mandir ;;\n  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)\n    mandir=$ac_optarg ;;\n\n  -nfp | --nfp | --nf)\n    # Obsolete; use --without-fp.\n    with_fp=no ;;\n\n  -no-create | --no-create | --no-creat | --no-crea | --no-cre \\\n  | --no-cr | --no-c | -n)\n    no_create=yes ;;\n\n  -no-recursion | --no-recursion | --no-recursio | --no-recursi \\\n  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)\n    no_recursion=yes ;;\n\n  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \\\n  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \\\n  | --oldin | --oldi | --old | --ol | --o)\n    ac_prev=oldincludedir ;;\n  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \\\n  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \\\n  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)\n    oldincludedir=$ac_optarg ;;\n\n  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n    ac_prev=prefix ;;\n  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)\n    prefix=$ac_optarg ;;\n\n  -program-prefix | --program-prefix | --program-prefi | --program-pref \\\n  | --program-pre | --program-pr | --program-p)\n    ac_prev=program_prefix ;;\n  -program-prefix=* | --program-prefix=* | --program-prefi=* \\\n  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)\n    program_prefix=$ac_optarg ;;\n\n  -program-suffix | --program-suffix | --program-suffi | --program-suff \\\n  | --program-suf | --program-su | --program-s)\n    ac_prev=program_suffix ;;\n  -program-suffix=* | --program-suffix=* | --program-suffi=* \\\n  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)\n    program_suffix=$ac_optarg ;;\n\n  -program-transform-name | --program-transform-name \\\n  | --program-transform-nam | --program-transform-na \\\n  | --program-transform-n | --program-transform- \\\n  | --program-transform | --program-transfor \\\n  | --program-transfo | --program-transf \\\n  | --program-trans | --program-tran \\\n  | --progr-tra | --program-tr | --program-t)\n    ac_prev=program_transform_name ;;\n  -program-transform-name=* | --program-transform-name=* \\\n  | --program-transform-nam=* | --program-transform-na=* \\\n  | --program-transform-n=* | --program-transform-=* \\\n  | --program-transform=* | --program-transfor=* \\\n  | --program-transfo=* | --program-transf=* \\\n  | --program-trans=* | --program-tran=* \\\n  | --progr-tra=* | --program-tr=* | --program-t=*)\n    program_transform_name=$ac_optarg ;;\n\n  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)\n    ac_prev=pdfdir ;;\n  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)\n    pdfdir=$ac_optarg ;;\n\n  -psdir | --psdir | --psdi | --psd | --ps)\n    ac_prev=psdir ;;\n  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)\n    psdir=$ac_optarg ;;\n\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil)\n    silent=yes ;;\n\n  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n  | --runstate | --runstat | --runsta | --runst | --runs \\\n  | --run | --ru | --r)\n    ac_prev=runstatedir ;;\n  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n  | --run=* | --ru=* | --r=*)\n    runstatedir=$ac_optarg ;;\n\n  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n    ac_prev=sbindir ;;\n  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n  | --sbi=* | --sb=*)\n    sbindir=$ac_optarg ;;\n\n  -sharedstatedir | --sharedstatedir | --sharedstatedi \\\n  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \\\n  | --sharedst | --shareds | --shared | --share | --shar \\\n  | --sha | --sh)\n    ac_prev=sharedstatedir ;;\n  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \\\n  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \\\n  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \\\n  | --sha=* | --sh=*)\n    sharedstatedir=$ac_optarg ;;\n\n  -site | --site | --sit)\n    ac_prev=site ;;\n  -site=* | --site=* | --sit=*)\n    site=$ac_optarg ;;\n\n  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n    ac_prev=srcdir ;;\n  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n    srcdir=$ac_optarg ;;\n\n  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \\\n  | --syscon | --sysco | --sysc | --sys | --sy)\n    ac_prev=sysconfdir ;;\n  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \\\n  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)\n    sysconfdir=$ac_optarg ;;\n\n  -target | --target | --targe | --targ | --tar | --ta | --t)\n    ac_prev=target_alias ;;\n  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)\n    target_alias=$ac_optarg ;;\n\n  -v | -verbose | --verbose | --verbos | --verbo | --verb)\n    verbose=yes ;;\n\n  -version | --version | --versio | --versi | --vers | -V)\n    ac_init_version=: ;;\n\n  -with-* | --with-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*with-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=\\$ac_optarg ;;\n\n  -without-* | --without-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*without-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=no ;;\n\n  --x)\n    # Obsolete; use --with-x.\n    with_x=yes ;;\n\n  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \\\n  | --x-incl | --x-inc | --x-in | --x-i)\n    ac_prev=x_includes ;;\n  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \\\n  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)\n    x_includes=$ac_optarg ;;\n\n  -x-libraries | --x-libraries | --x-librarie | --x-librari \\\n  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)\n    ac_prev=x_libraries ;;\n  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \\\n  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)\n    x_libraries=$ac_optarg ;;\n\n  -*) as_fn_error $? \"unrecognized option: \\`$ac_option'\nTry \\`$0 --help' for more information\"\n    ;;\n\n  *=*)\n    ac_envvar=`expr \"x$ac_option\" : 'x\\([^=]*\\)='`\n    # Reject names that are not valid shell variable names.\n    case $ac_envvar in #(\n      '' | [0-9]* | *[!_$as_cr_alnum]* )\n      as_fn_error $? \"invalid variable name: \\`$ac_envvar'\" ;;\n    esac\n    eval $ac_envvar=\\$ac_optarg\n    export $ac_envvar ;;\n\n  *)\n    # FIXME: should be removed in autoconf 3.0.\n    $as_echo \"$as_me: WARNING: you should use --build, --host, --target\" >&2\n    expr \"x$ac_option\" : \".*[^-._$as_cr_alnum]\" >/dev/null &&\n      $as_echo \"$as_me: WARNING: invalid host type: $ac_option\" >&2\n    : \"${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}\"\n    ;;\n\n  esac\ndone\n\nif test -n \"$ac_prev\"; then\n  ac_option=--`echo $ac_prev | sed 's/_/-/g'`\n  as_fn_error $? \"missing argument to $ac_option\"\nfi\n\nif test -n \"$ac_unrecognized_opts\"; then\n  case $enable_option_checking in\n    no) ;;\n    fatal) as_fn_error $? \"unrecognized options: $ac_unrecognized_opts\" ;;\n    *)     $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2 ;;\n  esac\nfi\n\n# Check all directory arguments for consistency.\nfor ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n\t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n\t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n\t\tlibdir localedir mandir runstatedir\ndo\n  eval ac_val=\\$$ac_var\n  # Remove trailing slashes.\n  case $ac_val in\n    */ )\n      ac_val=`expr \"X$ac_val\" : 'X\\(.*[^/]\\)' \\| \"X$ac_val\" : 'X\\(.*\\)'`\n      eval $ac_var=\\$ac_val;;\n  esac\n  # Be sure to have absolute directory names.\n  case $ac_val in\n    [\\\\/$]* | ?:[\\\\/]* )  continue;;\n    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;\n  esac\n  as_fn_error $? \"expected an absolute directory name for --$ac_var: $ac_val\"\ndone\n\n# There might be people who depend on the old broken behavior: `$host'\n# used to hold the argument of --host etc.\n# FIXME: To remove some day.\nbuild=$build_alias\nhost=$host_alias\ntarget=$target_alias\n\n# FIXME: To remove some day.\nif test \"x$host_alias\" != x; then\n  if test \"x$build_alias\" = x; then\n    cross_compiling=maybe\n  elif test \"x$build_alias\" != \"x$host_alias\"; then\n    cross_compiling=yes\n  fi\nfi\n\nac_tool_prefix=\ntest -n \"$host_alias\" && ac_tool_prefix=$host_alias-\n\ntest \"$silent\" = yes && exec 6>/dev/null\n\n\nac_pwd=`pwd` && test -n \"$ac_pwd\" &&\nac_ls_di=`ls -di .` &&\nac_pwd_ls_di=`cd \"$ac_pwd\" && ls -di .` ||\n  as_fn_error $? \"working directory cannot be determined\"\ntest \"X$ac_ls_di\" = \"X$ac_pwd_ls_di\" ||\n  as_fn_error $? \"pwd does not report name of working directory\"\n\n\n# Find the source files, if location was not specified.\nif test -z \"$srcdir\"; then\n  ac_srcdir_defaulted=yes\n  # Try the directory containing this script, then the parent directory.\n  ac_confdir=`$as_dirname -- \"$as_myself\" ||\n$as_expr X\"$as_myself\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_myself\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_myself\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  srcdir=$ac_confdir\n  if test ! -r \"$srcdir/$ac_unique_file\"; then\n    srcdir=..\n  fi\nelse\n  ac_srcdir_defaulted=no\nfi\nif test ! -r \"$srcdir/$ac_unique_file\"; then\n  test \"$ac_srcdir_defaulted\" = yes && srcdir=\"$ac_confdir or ..\"\n  as_fn_error $? \"cannot find sources ($ac_unique_file) in $srcdir\"\nfi\nac_msg=\"sources are in $srcdir, but \\`cd $srcdir' does not work\"\nac_abs_confdir=`(\n\tcd \"$srcdir\" && test -r \"./$ac_unique_file\" || as_fn_error $? \"$ac_msg\"\n\tpwd)`\n# When building in place, set srcdir=.\nif test \"$ac_abs_confdir\" = \"$ac_pwd\"; then\n  srcdir=.\nfi\n# Remove unnecessary trailing slashes from srcdir.\n# Double slashes in file names in object file debugging info\n# mess up M-x gdb in Emacs.\ncase $srcdir in\n*/) srcdir=`expr \"X$srcdir\" : 'X\\(.*[^/]\\)' \\| \"X$srcdir\" : 'X\\(.*\\)'`;;\nesac\nfor ac_var in $ac_precious_vars; do\n  eval ac_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_env_${ac_var}_value=\\$${ac_var}\n  eval ac_cv_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_cv_env_${ac_var}_value=\\$${ac_var}\ndone\n\n#\n# Report the --help message.\n#\nif test \"$ac_init_help\" = \"long\"; then\n  # Omit some internal or obsolete options to make the list less imposing.\n  # This message is too long to be a string in the A/UX 3.1 sh.\n  cat <<_ACEOF\n\\`configure' configures libdwarf 20201017 to adapt to many kinds of systems.\n\nUsage: $0 [OPTION]... [VAR=VALUE]...\n\nTo assign environment variables (e.g., CC, CFLAGS...), specify them as\nVAR=VALUE.  See below for descriptions of some of the useful variables.\n\nDefaults for the options are specified in brackets.\n\nConfiguration:\n  -h, --help              display this help and exit\n      --help=short        display options specific to this package\n      --help=recursive    display the short help of all the included packages\n  -V, --version           display version information and exit\n  -q, --quiet, --silent   do not print \\`checking ...' messages\n      --cache-file=FILE   cache test results in FILE [disabled]\n  -C, --config-cache      alias for \\`--cache-file=config.cache'\n  -n, --no-create         do not create output files\n      --srcdir=DIR        find the sources in DIR [configure dir or \\`..']\n\nInstallation directories:\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [$ac_default_prefix]\n  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX\n                          [PREFIX]\n\nBy default, \\`make install' will install all the files in\n\\`$ac_default_prefix/bin', \\`$ac_default_prefix/lib' etc.  You can specify\nan installation prefix other than \\`$ac_default_prefix' using \\`--prefix',\nfor instance \\`--prefix=\\$HOME'.\n\nFor better control, use the options below.\n\nFine tuning of the installation directories:\n  --bindir=DIR            user executables [EPREFIX/bin]\n  --sbindir=DIR           system admin executables [EPREFIX/sbin]\n  --libexecdir=DIR        program executables [EPREFIX/libexec]\n  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n  --libdir=DIR            object code libraries [EPREFIX/lib]\n  --includedir=DIR        C header files [PREFIX/include]\n  --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]\n  --infodir=DIR           info documentation [DATAROOTDIR/info]\n  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/libdwarf]\n  --htmldir=DIR           html documentation [DOCDIR]\n  --dvidir=DIR            dvi documentation [DOCDIR]\n  --pdfdir=DIR            pdf documentation [DOCDIR]\n  --psdir=DIR             ps documentation [DOCDIR]\n_ACEOF\n\n  cat <<\\_ACEOF\n\nProgram names:\n  --program-prefix=PREFIX            prepend PREFIX to installed program names\n  --program-suffix=SUFFIX            append SUFFIX to installed program names\n  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names\n\nSystem types:\n  --build=BUILD     configure for building on BUILD [guessed]\n  --host=HOST       cross-compile to build programs to run on HOST [BUILD]\n_ACEOF\nfi\n\nif test -n \"$ac_init_help\"; then\n  case $ac_init_help in\n     short | recursive ) echo \"Configuration of libdwarf 20201017:\";;\n   esac\n  cat <<\\_ACEOF\n\nOptional Features:\n  --disable-option-checking  ignore unrecognized --enable/--with options\n  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n  --enable-dwarfgen       enable dwarfgen compilation [default=no]\n  --enable-dwarfexample   enable dwarfexample compilation [default=no]\n  --enable-global-alloc-sums\n                          Enables some allocation counting in dwarf_alloc.c\n                          (default is NO)\n  --enable-sanitize       enable sanitize compiler option [default=no]\n  --enable-oldframecol    enable old frame columns [default=no]\n  --enable-namestable     enable name string functions implemented as binary\n                          search (default is with C switch) [default=no]\n  --disable-libelf        disable use of libelf (default is enable)\n                          [default=yes]\n  --enable-windowspath    Detect certain Windows paths as full paths (default\n                          is NO)\n  --enable-wall           enable -Wall and other options [default=no]\n  --enable-nonstandardprintf\n                          Use a special printf format for 64bit (default is\n                          NO)\n  --enable-havecustomlibelf\n                          including a custom libelf library (default is NO)\n  --enable-dependency-tracking\n                          do not reject slow dependency extractors\n  --disable-dependency-tracking\n                          speeds up one-time build\n  --enable-silent-rules   less verbose build output (undo: \"make V=1\")\n  --disable-silent-rules  verbose build output (undo: \"make V=0\")\n  --enable-shared[=PKGS]  build shared libraries [default=no]\n  --enable-static[=PKGS]  build static libraries [default=yes]\n  --enable-fast-install[=PKGS]\n                          optimize for fast installation [default=yes]\n  --disable-libtool-lock  avoid locking (might break parallel builds)\n\nOptional Packages:\n  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use\n                          both]\n  --with-aix-soname=aix|svr4|both\n                          shared library versioning (aka \"SONAME\") variant to\n                          provide on AIX, [default=aix].\n  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the\n                          compiler's sysroot if not specified).\n\nSome influential environment variables:\n  CC          C compiler command\n  CFLAGS      C compiler flags\n  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a\n              nonstandard directory <lib dir>\n  LIBS        libraries to pass to the linker, e.g. -l<library>\n  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if\n              you have headers in a nonstandard directory <include dir>\n  LT_SYS_LIBRARY_PATH\n              User-defined run-time library search path.\n  CPP         C preprocessor\n  CXX         C++ compiler command\n  CXXFLAGS    C++ compiler flags\n  CXXCPP      C++ preprocessor\n  DWARF_LIBS  linker flags when linking libdwarf\n\nUse these variables to override the choices made by `configure' or to help\nit to find libraries and programs with nonstandard names/locations.\n\nReport bugs to <libdwarf-list -at- linuxmail -dot- org>.\n_ACEOF\nac_status=$?\nfi\n\nif test \"$ac_init_help\" = \"recursive\"; then\n  # If there are subdirs, report their specific --help.\n  for ac_dir in : $ac_subdirs_all; do test \"x$ac_dir\" = x: && continue\n    test -d \"$ac_dir\" ||\n      { cd \"$srcdir\" && ac_pwd=`pwd` && srcdir=. && test -d \"$ac_dir\"; } ||\n      continue\n    ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n    cd \"$ac_dir\" || { ac_status=$?; continue; }\n    # Check for guested configure.\n    if test -f \"$ac_srcdir/configure.gnu\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure.gnu\" --help=recursive\n    elif test -f \"$ac_srcdir/configure\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure\" --help=recursive\n    else\n      $as_echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n    fi || ac_status=$?\n    cd \"$ac_pwd\" || { ac_status=$?; break; }\n  done\nfi\n\ntest -n \"$ac_init_help\" && exit $ac_status\nif $ac_init_version; then\n  cat <<\\_ACEOF\nlibdwarf configure 20201017\ngenerated by GNU Autoconf 2.69\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis configure script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\n_ACEOF\n  exit\nfi\n\n## ------------------------ ##\n## Autoconf initialization. ##\n## ------------------------ ##\n\n# ac_fn_c_try_compile LINENO\n# --------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_compile\n\n# ac_fn_c_try_link LINENO\n# -----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_link ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest$ac_exeext\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t test -x conftest$ac_exeext\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n  # interfere with the next link command; also delete a directory that is\n  # left behind by Apple's compiler.  We do this before executing the actions.\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_link\n\n# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists and can be compiled using the include files in\n# INCLUDES, setting the cache variable VAR accordingly.\nac_fn_c_check_header_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  eval \"$3=yes\"\nelse\n  eval \"$3=no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_compile\n\n# ac_fn_c_try_cpp LINENO\n# ----------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_c_preproc_warn_flag$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_cpp\n\n# ac_fn_c_try_run LINENO\n# ----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes\n# that executables *can* be run.\nac_fn_c_try_run ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: program exited with status $ac_status\" >&5\n       $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n       ac_retval=$ac_status\nfi\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_run\n\n# ac_fn_c_check_func LINENO FUNC VAR\n# ----------------------------------\n# Tests whether FUNC exists, setting the cache variable VAR accordingly\nac_fn_c_check_func ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n/* Define $2 to an innocuous variant, in case <limits.h> declares $2.\n   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n#define $2 innocuous_$2\n\n/* System header to define __stub macros and hopefully few prototypes,\n    which can conflict with char $2 (); below.\n    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n    <limits.h> exists even on freestanding compilers.  */\n\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\n#undef $2\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar $2 ();\n/* The GNU C library defines this for functions which it implements\n    to always fail with ENOSYS.  Some functions are actually named\n    something starting with __ and the normal name is an alias.  */\n#if defined __stub_$2 || defined __stub___$2\nchoke me\n#endif\n\nint\nmain ()\n{\nreturn $2 ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  eval \"$3=yes\"\nelse\n  eval \"$3=no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_func\n\n# ac_fn_cxx_try_compile LINENO\n# ----------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_compile\n\n# ac_fn_cxx_try_cpp LINENO\n# ------------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_cpp\n\n# ac_fn_cxx_try_link LINENO\n# -------------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_link ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest$ac_exeext\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t test -x conftest$ac_exeext\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n  # interfere with the next link command; also delete a directory that is\n  # left behind by Apple's compiler.  We do this before executing the actions.\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_link\n\n# ac_fn_c_check_header_mongrel LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists, giving a warning if it cannot be compiled using\n# the include files in INCLUDES and setting the cache variable VAR\n# accordingly.\nac_fn_c_check_header_mongrel ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if eval \\${$3+:} false; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\nelse\n  # Is the header compilable?\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking $2 usability\" >&5\n$as_echo_n \"checking $2 usability... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_header_compiler=yes\nelse\n  ac_header_compiler=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler\" >&5\n$as_echo \"$ac_header_compiler\" >&6; }\n\n# Is the header present?\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking $2 presence\" >&5\n$as_echo_n \"checking $2 presence... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <$2>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  ac_header_preproc=yes\nelse\n  ac_header_preproc=no\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc\" >&5\n$as_echo \"$ac_header_preproc\" >&6; }\n\n# So?  What about this header?\ncase $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in #((\n  yes:no: )\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!\" >&5\n$as_echo \"$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result\" >&5\n$as_echo \"$as_me: WARNING: $2: proceeding with the compiler's result\" >&2;}\n    ;;\n  no:yes:* )\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled\" >&5\n$as_echo \"$as_me: WARNING: $2: present but cannot be compiled\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?\" >&5\n$as_echo \"$as_me: WARNING: $2:     check for missing prerequisite headers?\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation\" >&5\n$as_echo \"$as_me: WARNING: $2: see the Autoconf documentation\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n$as_echo \"$as_me: WARNING: $2:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result\" >&5\n$as_echo \"$as_me: WARNING: $2: proceeding with the compiler's result\" >&2;}\n( $as_echo \"## ----------------------------------------------------- ##\n## Report this to libdwarf-list -at- linuxmail -dot- org ##\n## ----------------------------------------------------- ##\"\n     ) | sed \"s/^/$as_me: WARNING:     /\" >&2\n    ;;\nesac\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  eval \"$3=\\$ac_header_compiler\"\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_mongrel\n\n# ac_fn_c_check_type LINENO TYPE VAR INCLUDES\n# -------------------------------------------\n# Tests whether TYPE exists after having included INCLUDES, setting cache\n# variable VAR accordingly.\nac_fn_c_check_type ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  eval \"$3=no\"\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nif (sizeof ($2))\n\t return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nif (sizeof (($2)))\n\t    return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  eval \"$3=yes\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_type\ncat >config.log <<_ACEOF\nThis file contains any messages produced by compilers while\nrunning configure, to aid debugging if configure makes a mistake.\n\nIt was created by libdwarf $as_me 20201017, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  $ $0 $@\n\n_ACEOF\nexec 5>>config.log\n{\ncat <<_ASUNAME\n## --------- ##\n## Platform. ##\n## --------- ##\n\nhostname = `(hostname || uname -n) 2>/dev/null | sed 1q`\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`\n\n/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`\n/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`\n/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`\n/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`\n\n_ASUNAME\n\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    $as_echo \"PATH: $as_dir\"\n  done\nIFS=$as_save_IFS\n\n} >&5\n\ncat >&5 <<_ACEOF\n\n\n## ----------- ##\n## Core tests. ##\n## ----------- ##\n\n_ACEOF\n\n\n# Keep a trace of the command line.\n# Strip out --no-create and --no-recursion so they do not pile up.\n# Strip out --silent because we don't want to record it for future runs.\n# Also quote any args containing shell meta-characters.\n# Make two passes to allow for proper duplicate-argument suppression.\nac_configure_args=\nac_configure_args0=\nac_configure_args1=\nac_must_keep_next=false\nfor ac_pass in 1 2\ndo\n  for ac_arg\n  do\n    case $ac_arg in\n    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;\n    -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n    | -silent | --silent | --silen | --sile | --sil)\n      continue ;;\n    *\\'*)\n      ac_arg=`$as_echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    case $ac_pass in\n    1) as_fn_append ac_configure_args0 \" '$ac_arg'\" ;;\n    2)\n      as_fn_append ac_configure_args1 \" '$ac_arg'\"\n      if test $ac_must_keep_next = true; then\n\tac_must_keep_next=false # Got value, back to normal.\n      else\n\tcase $ac_arg in\n\t  *=* | --config-cache | -C | -disable-* | --disable-* \\\n\t  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \\\n\t  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \\\n\t  | -with-* | --with-* | -without-* | --without-* | --x)\n\t    case \"$ac_configure_args0 \" in\n\t      \"$ac_configure_args1\"*\" '$ac_arg' \"* ) continue ;;\n\t    esac\n\t    ;;\n\t  -* ) ac_must_keep_next=true ;;\n\tesac\n      fi\n      as_fn_append ac_configure_args \" '$ac_arg'\"\n      ;;\n    esac\n  done\ndone\n{ ac_configure_args0=; unset ac_configure_args0;}\n{ ac_configure_args1=; unset ac_configure_args1;}\n\n# When interrupted or exit'd, cleanup temporary files, and complete\n# config.log.  We remove comments because anyway the quotes in there\n# would cause problems or look ugly.\n# WARNING: Use '\\'' to represent an apostrophe within the trap.\n# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.\ntrap 'exit_status=$?\n  # Save into config.log some information that might help in debugging.\n  {\n    echo\n\n    $as_echo \"## ---------------- ##\n## Cache variables. ##\n## ---------------- ##\"\n    echo\n    # The following way of writing the cache mishandles newlines in values,\n(\n  for ac_var in `(set) 2>&1 | sed -n '\\''s/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'\\''`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n  (set) 2>&1 |\n    case $as_nl`(ac_space='\\'' '\\''; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      sed -n \\\n\t\"s/'\\''/'\\''\\\\\\\\'\\'''\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\''\\\\2'\\''/p\"\n      ;; #(\n    *)\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n)\n    echo\n\n    $as_echo \"## ----------------- ##\n## Output variables. ##\n## ----------------- ##\"\n    echo\n    for ac_var in $ac_subst_vars\n    do\n      eval ac_val=\\$$ac_var\n      case $ac_val in\n      *\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n      esac\n      $as_echo \"$ac_var='\\''$ac_val'\\''\"\n    done | sort\n    echo\n\n    if test -n \"$ac_subst_files\"; then\n      $as_echo \"## ------------------- ##\n## File substitutions. ##\n## ------------------- ##\"\n      echo\n      for ac_var in $ac_subst_files\n      do\n\teval ac_val=\\$$ac_var\n\tcase $ac_val in\n\t*\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n\tesac\n\t$as_echo \"$ac_var='\\''$ac_val'\\''\"\n      done | sort\n      echo\n    fi\n\n    if test -s confdefs.h; then\n      $as_echo \"## ----------- ##\n## confdefs.h. ##\n## ----------- ##\"\n      echo\n      cat confdefs.h\n      echo\n    fi\n    test \"$ac_signal\" != 0 &&\n      $as_echo \"$as_me: caught signal $ac_signal\"\n    $as_echo \"$as_me: exit $exit_status\"\n  } >&5\n  rm -f core *.core core.conftest.* &&\n    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&\n    exit $exit_status\n' 0\nfor ac_signal in 1 2 13 15; do\n  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal\ndone\nac_signal=0\n\n# confdefs.h avoids OS command line length limits that DEFS can exceed.\nrm -f -r conftest* confdefs.h\n\n$as_echo \"/* confdefs.h */\" > confdefs.h\n\n# Predefined preprocessor variables.\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_NAME \"$PACKAGE_NAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_TARNAME \"$PACKAGE_TARNAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_VERSION \"$PACKAGE_VERSION\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_STRING \"$PACKAGE_STRING\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_BUGREPORT \"$PACKAGE_BUGREPORT\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_URL \"$PACKAGE_URL\"\n_ACEOF\n\n\n# Let the site file select an alternate cache file if it wants to.\n# Prefer an explicitly selected file to automatically selected ones.\nac_site_file1=NONE\nac_site_file2=NONE\nif test -n \"$CONFIG_SITE\"; then\n  # We do not want a PATH search for config.site.\n  case $CONFIG_SITE in #((\n    -*)  ac_site_file1=./$CONFIG_SITE;;\n    */*) ac_site_file1=$CONFIG_SITE;;\n    *)   ac_site_file1=./$CONFIG_SITE;;\n  esac\nelif test \"x$prefix\" != xNONE; then\n  ac_site_file1=$prefix/share/config.site\n  ac_site_file2=$prefix/etc/config.site\nelse\n  ac_site_file1=$ac_default_prefix/share/config.site\n  ac_site_file2=$ac_default_prefix/etc/config.site\nfi\nfor ac_site_file in \"$ac_site_file1\" \"$ac_site_file2\"\ndo\n  test \"x$ac_site_file\" = xNONE && continue\n  if test /dev/null != \"$ac_site_file\" && test -r \"$ac_site_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file\" >&5\n$as_echo \"$as_me: loading site script $ac_site_file\" >&6;}\n    sed 's/^/| /' \"$ac_site_file\" >&5\n    . \"$ac_site_file\" \\\n      || { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"failed to load site script $ac_site_file\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n  fi\ndone\n\nif test -r \"$cache_file\"; then\n  # Some versions of bash will fail to source /dev/null (special files\n  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.\n  if test /dev/null != \"$cache_file\" && test -f \"$cache_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading cache $cache_file\" >&5\n$as_echo \"$as_me: loading cache $cache_file\" >&6;}\n    case $cache_file in\n      [\\\\/]* | ?:[\\\\/]* ) . \"$cache_file\";;\n      *)                      . \"./$cache_file\";;\n    esac\n  fi\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: creating cache $cache_file\" >&5\n$as_echo \"$as_me: creating cache $cache_file\" >&6;}\n  >$cache_file\nfi\n\n# Check that the precious variables saved in the cache have kept the same\n# value.\nac_cache_corrupted=false\nfor ac_var in $ac_precious_vars; do\n  eval ac_old_set=\\$ac_cv_env_${ac_var}_set\n  eval ac_new_set=\\$ac_env_${ac_var}_set\n  eval ac_old_val=\\$ac_cv_env_${ac_var}_value\n  eval ac_new_val=\\$ac_env_${ac_var}_value\n  case $ac_old_set,$ac_new_set in\n    set,)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,set)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was not set in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was not set in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,);;\n    *)\n      if test \"x$ac_old_val\" != \"x$ac_new_val\"; then\n\t# differences in whitespace do not lead to failure.\n\tac_old_val_w=`echo x $ac_old_val`\n\tac_new_val_w=`echo x $ac_new_val`\n\tif test \"$ac_old_val_w\" != \"$ac_new_val_w\"; then\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' has changed since the previous run:\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' has changed since the previous run:\" >&2;}\n\t  ac_cache_corrupted=:\n\telse\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&5\n$as_echo \"$as_me: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&2;}\n\t  eval $ac_var=\\$ac_old_val\n\tfi\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   former value:  \\`$ac_old_val'\" >&5\n$as_echo \"$as_me:   former value:  \\`$ac_old_val'\" >&2;}\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   current value: \\`$ac_new_val'\" >&5\n$as_echo \"$as_me:   current value: \\`$ac_new_val'\" >&2;}\n      fi;;\n  esac\n  # Pass precious variables to config.status.\n  if test \"$ac_new_set\" = set; then\n    case $ac_new_val in\n    *\\'*) ac_arg=$ac_var=`$as_echo \"$ac_new_val\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    *) ac_arg=$ac_var=$ac_new_val ;;\n    esac\n    case \" $ac_configure_args \" in\n      *\" '$ac_arg' \"*) ;; # Avoid dups.  Use of quotes ensures accuracy.\n      *) as_fn_append ac_configure_args \" '$ac_arg'\" ;;\n    esac\n  fi\ndone\nif $ac_cache_corrupted; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build\" >&5\n$as_echo \"$as_me: error: changes in the environment can compromise the build\" >&2;}\n  as_fn_error $? \"run \\`make distclean' and/or \\`rm $cache_file' and start over\" \"$LINENO\" 5\nfi\n## -------------------- ##\n## Main body of script. ##\n## -------------------- ##\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\nac_config_headers=\"$ac_config_headers config.h\"\n\n\n\n\n### Additional options to configure\n\n# Check whether --enable-dwarfgen was given.\nif test \"${enable_dwarfgen+set}\" = set; then :\n  enableval=$enable_dwarfgen;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_dwarfgen=\"yes\"\nelse\n  enable_dwarfgen=\"no\"\nfi\n\nelse\n  enable_dwarfgen=\"no\"\nfi\n\n if test \"x${enable_dwarfgen}\" = \"xyes\"; then\n  HAVE_DWARFGEN_TRUE=\n  HAVE_DWARFGEN_FALSE='#'\nelse\n  HAVE_DWARFGEN_TRUE='#'\n  HAVE_DWARFGEN_FALSE=\nfi\n\n\n# Check whether --enable-dwarfexample was given.\nif test \"${enable_dwarfexample+set}\" = set; then :\n  enableval=$enable_dwarfexample;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_dwarfexample=\"yes\"\nelse\n  enable_dwarfexample=\"no\"\nfi\n\nelse\n  enable_dwarfexample=\"no\"\nfi\n\n if test \"x${enable_dwarfexample}\" = \"xyes\"; then\n  HAVE_DWARFEXAMPLE_TRUE=\n  HAVE_DWARFEXAMPLE_FALSE='#'\nelse\n  HAVE_DWARFEXAMPLE_TRUE='#'\n  HAVE_DWARFEXAMPLE_FALSE=\nfi\n\n\n### Solely for checking libdwarf allocation counts,sizes\n### Do not use without a good reason . See libdwarf/dwarf_alloc.c\n# Check whether --enable-globalallocsums was given.\nif test \"${enable_globalallocsums+set}\" = set; then :\n  enableval=$enable_globalallocsums;\n$as_echo \"#define HAVE_GLOBAL_ALLOC_SUMS 1\" >>confdefs.h\n\n           enable_globalallocsums=\"yes\"\n\nelse\n  enable_globalallocsums=\"no\"\nfi\n\n\n# Check whether --enable-sanitize was given.\nif test \"${enable_sanitize+set}\" = set; then :\n  enableval=$enable_sanitize;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_sanitize=\"yes\"\nelse\n  enable_sanitize=\"no\"\nfi\n\nelse\n  enable_sanitize=\"no\"\nfi\n\n\n# Check whether --enable-oldframecol was given.\nif test \"${enable_oldframecol+set}\" = set; then :\n  enableval=$enable_oldframecol;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_oldframecol=\"yes\"\nelse\n  enable_oldframecol=\"no\"\nfi\n\nelse\n  enable_oldframecol=\"no\"\nfi\n\n\nif test \"x${enable_oldframecol}\" = \"xyes\"; then :\n\n$as_echo \"#define HAVE_OLD_FRAME_CFA_COL 1\" >>confdefs.h\n\nfi\n\n# Check whether --enable-namestable was given.\nif test \"${enable_namestable+set}\" = set; then :\n  enableval=$enable_namestable;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_namestable=\"yes\"\nelse\n  enable_namestable=\"no\"\nfi\n\nelse\n  enable_namestable=\"no\"\nfi\n\n\n\nif test \"x${enable_namestable}\" = \"xyes\"; then :\n  dwarf_namestable=-s\n\nelse\n  dwarf_namestable=-t\n\nfi\n\n# Check whether --enable-libelf was given.\nif test \"${enable_libelf+set}\" = set; then :\n  enableval=$enable_libelf;  if test \"x${enableval}\" = \"xyes\"; then :\n  dwarf_with_libelf=\"yes\"\nelse\n  dwarf_with_libelf=\"no\"\nfi\n\nelse\n  dwarf_with_libelf=\"yes\"\nfi\n\n\n\n# Check whether --enable-windowspath was given.\nif test \"${enable_windowspath+set}\" = set; then :\n  enableval=$enable_windowspath;\n\n$as_echo \"#define HAVE_WINDOWS_PATH 1\" >>confdefs.h\n\n       enable_windowspath=\"yes\"\n\nelse\n\n     enable_windowspath=\"no\"\n\nfi\n\n\n# Check whether --enable-wall was given.\nif test \"${enable_wall+set}\" = set; then :\n  enableval=$enable_wall;\n    if test \"x${enableval}\" = \"xyes\"; then :\n  enable_wall=\"yes\"\nelse\n  enable_wall=\"no\"\nfi\n\nelse\n  enable_wall=\"no\"\nfi\n\n\n# Check whether --enable-nonstandardprintf was given.\nif test \"${enable_nonstandardprintf+set}\" = set; then :\n  enableval=$enable_nonstandardprintf;\n$as_echo \"#define HAVE_NONSTANDARD_PRINTF_64_FORMAT 1\" >>confdefs.h\n\n           enable_nonstandardprintf=\"yes\"\n\nelse\n  enable_nonstandardprintf=\"no\"\nfi\n\n\n# Check whether --enable-havecustomlibelf was given.\nif test \"${enable_havecustomlibelf+set}\" = set; then :\n  enableval=$enable_havecustomlibelf;\n$as_echo \"#define HAVE_CUSTOM_LIBELF 1\" >>confdefs.h\n\n           enable_havecustomlibelf=\"yes\"\n\nelse\n  enable_havecustomlibelf=\"no\"\nfi\n\n\n### Default options with respect to host\n\nac_aux_dir=\nfor ac_dir in \"$srcdir\" \"$srcdir/..\" \"$srcdir/../..\"; do\n  if test -f \"$ac_dir/install-sh\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/install-sh -c\"\n    break\n  elif test -f \"$ac_dir/install.sh\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/install.sh -c\"\n    break\n  elif test -f \"$ac_dir/shtool\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/shtool install -c\"\n    break\n  fi\ndone\nif test -z \"$ac_aux_dir\"; then\n  as_fn_error $? \"cannot find install-sh, install.sh, or shtool in \\\"$srcdir\\\" \\\"$srcdir/..\\\" \\\"$srcdir/../..\\\"\" \"$LINENO\" 5\nfi\n\n# These three variables are undocumented and unsupported,\n# and are intended to be withdrawn in a future Autoconf release.\n# They can cause serious problems if a builder's source tree is in a directory\n# whose full name contains unusual characters.\nac_config_guess=\"$SHELL $ac_aux_dir/config.guess\"  # Please don't use this var.\nac_config_sub=\"$SHELL $ac_aux_dir/config.sub\"  # Please don't use this var.\nac_configure=\"$SHELL $ac_aux_dir/configure\"  # Please don't use this var.\n\n\n# Make sure we can run config.sub.\n$SHELL \"$ac_aux_dir/config.sub\" sun4 >/dev/null 2>&1 ||\n  as_fn_error $? \"cannot run $SHELL $ac_aux_dir/config.sub\" \"$LINENO\" 5\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking build system type\" >&5\n$as_echo_n \"checking build system type... \" >&6; }\nif ${ac_cv_build+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_build_alias=$build_alias\ntest \"x$ac_build_alias\" = x &&\n  ac_build_alias=`$SHELL \"$ac_aux_dir/config.guess\"`\ntest \"x$ac_build_alias\" = x &&\n  as_fn_error $? \"cannot guess build type; you must specify one\" \"$LINENO\" 5\nac_cv_build=`$SHELL \"$ac_aux_dir/config.sub\" $ac_build_alias` ||\n  as_fn_error $? \"$SHELL $ac_aux_dir/config.sub $ac_build_alias failed\" \"$LINENO\" 5\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_build\" >&5\n$as_echo \"$ac_cv_build\" >&6; }\ncase $ac_cv_build in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical build\" \"$LINENO\" 5;;\nesac\nbuild=$ac_cv_build\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_build\nshift\nbuild_cpu=$1\nbuild_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nbuild_os=$*\nIFS=$ac_save_IFS\ncase $build_os in *\\ *) build_os=`echo \"$build_os\" | sed 's/ /-/g'`;; esac\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking host system type\" >&5\n$as_echo_n \"checking host system type... \" >&6; }\nif ${ac_cv_host+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test \"x$host_alias\" = x; then\n  ac_cv_host=$ac_cv_build\nelse\n  ac_cv_host=`$SHELL \"$ac_aux_dir/config.sub\" $host_alias` ||\n    as_fn_error $? \"$SHELL $ac_aux_dir/config.sub $host_alias failed\" \"$LINENO\" 5\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_host\" >&5\n$as_echo \"$ac_cv_host\" >&6; }\ncase $ac_cv_host in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical host\" \"$LINENO\" 5;;\nesac\nhost=$ac_cv_host\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_host\nshift\nhost_cpu=$1\nhost_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nhost_os=$*\nIFS=$ac_save_IFS\ncase $host_os in *\\ *) host_os=`echo \"$host_os\" | sed 's/ /-/g'`;; esac\n\n\n\nhave_win32=\"no\"\ncase \"$host_os\" in\n   mingw*)\n      have_win32=\"yes\"\n   ;;\nesac\n\n if test \"x${have_win32}\" = \"xyes\"; then\n  HAVE_WIN32_TRUE=\n  HAVE_WIN32_FALSE='#'\nelse\n  HAVE_WIN32_TRUE='#'\n  HAVE_WIN32_FALSE=\nfi\n\n\n\n### Checks for programs\n\n# Expand $ac_aux_dir to an absolute path.\nam_aux_dir=`cd \"$ac_aux_dir\" && pwd`\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nif test -z \"$CC\"; then\n          if test -n \"$ac_tool_prefix\"; then\n    # Extract the first word of \"${ac_tool_prefix}cc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  fi\nfi\nif test -z \"$CC\"; then\n  # Extract the first word of \"cc\", so it can be a program name with args.\nset dummy cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\n  ac_prog_rejected=no\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    if test \"$as_dir/$ac_word$ac_exec_ext\" = \"/usr/ucb/cc\"; then\n       ac_prog_rejected=yes\n       continue\n     fi\n    ac_cv_prog_CC=\"cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nif test $ac_prog_rejected = yes; then\n  # We found a bogon in the path, so make sure we never use it.\n  set dummy $ac_cv_prog_CC\n  shift\n  if test $# != 0; then\n    # We chose a different compiler from the bogus one.\n    # However, it has the same basename, so the bogon will be chosen\n    # first if we set CC to just the basename; use the full file name.\n    shift\n    ac_cv_prog_CC=\"$as_dir/$ac_word${1+' '}$@\"\n  fi\nfi\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in cl.exe\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in cl.exe\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\nfi\n\n\ntest -z \"$CC\" && { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files a.out a.out.dSYM a.exe b.out\"\n# Try to create an executable without -o first, disregard a.out.\n# It will help us diagnose broken compilers, and finding out an intuition\n# of exeext.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler works\" >&5\n$as_echo_n \"checking whether the C compiler works... \" >&6; }\nac_link_default=`$as_echo \"$ac_link\" | sed 's/ -o *conftest[^ ]*//'`\n\n# The possible output files:\nac_files=\"a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*\"\n\nac_rmfiles=\nfor ac_file in $ac_files\ndo\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    * ) ac_rmfiles=\"$ac_rmfiles $ac_file\";;\n  esac\ndone\nrm -f $ac_rmfiles\n\nif { { ac_try=\"$ac_link_default\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link_default\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.\n# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'\n# in a Makefile.  We should not override ac_cv_exeext if it was cached,\n# so that the user can short-circuit this test for compilers unknown to\n# Autoconf.\nfor ac_file in $ac_files ''\ndo\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )\n\t;;\n    [ab].out )\n\t# We found the default executable, but exeext='' is most\n\t# certainly right.\n\tbreak;;\n    *.* )\n\tif test \"${ac_cv_exeext+set}\" = set && test \"$ac_cv_exeext\" != no;\n\tthen :; else\n\t   ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\tfi\n\t# We set ac_cv_exeext here because the later test for it is not\n\t# safe: cross compilers may not add the suffix if given an `-o'\n\t# argument, so we may need to know it at that point already.\n\t# Even if this section looks crufty: it has the advantage of\n\t# actually working.\n\tbreak;;\n    * )\n\tbreak;;\n  esac\ndone\ntest \"$ac_cv_exeext\" = no && ac_cv_exeext=\n\nelse\n  ac_file=''\nfi\nif test -z \"$ac_file\"; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n$as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error 77 \"C compiler cannot create executables\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name\" >&5\n$as_echo_n \"checking for C compiler default output file name... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_file\" >&5\n$as_echo \"$ac_file\" >&6; }\nac_exeext=$ac_cv_exeext\n\nrm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of executables\" >&5\n$as_echo_n \"checking for suffix of executables... \" >&6; }\nif { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # If both `conftest.exe' and `conftest' are `present' (well, observable)\n# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will\n# work properly (i.e., refer to `conftest.exe'), while it won't with\n# `rm'.\nfor ac_file in conftest.exe conftest conftest.*; do\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    *.* ) ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\t  break;;\n    * ) break;;\n  esac\ndone\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of executables: cannot compile and link\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest conftest$ac_cv_exeext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext\" >&5\n$as_echo \"$ac_cv_exeext\" >&6; }\n\nrm -f conftest.$ac_ext\nEXEEXT=$ac_cv_exeext\nac_exeext=$EXEEXT\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdio.h>\nint\nmain ()\n{\nFILE *f = fopen (\"conftest.out\", \"w\");\n return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files=\"$ac_clean_files conftest.out\"\n# Check that the compiler produces executables we can run.  If not, either\n# the compiler is broken, or we cross compile.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling\" >&5\n$as_echo_n \"checking whether we are cross compiling... \" >&6; }\nif test \"$cross_compiling\" != yes; then\n  { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n  if { ac_try='./conftest$ac_cv_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n    cross_compiling=no\n  else\n    if test \"$cross_compiling\" = maybe; then\n\tcross_compiling=yes\n    else\n\t{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot run C compiled programs.\nIf you meant to cross compile, use \\`--host'.\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n    fi\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $cross_compiling\" >&5\n$as_echo \"$cross_compiling\" >&6; }\n\nrm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of object files\" >&5\n$as_echo_n \"checking for suffix of object files... \" >&6; }\nif ${ac_cv_objext+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nrm -f conftest.o conftest.obj\nif { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  for ac_file in conftest.o conftest.obj conftest.*; do\n  test -f \"$ac_file\" || continue;\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;\n    *) ac_cv_objext=`expr \"$ac_file\" : '.*\\.\\(.*\\)'`\n       break;;\n  esac\ndone\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of object files: cannot compile\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest.$ac_cv_objext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext\" >&5\n$as_echo \"$ac_cv_objext\" >&6; }\nOBJEXT=$ac_cv_objext\nac_objext=$OBJEXT\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C compiler... \" >&6; }\nif ${ac_cv_c_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\n$as_echo \"$ac_cv_c_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+set}\nac_save_CFLAGS=$CFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\n$as_echo_n \"checking whether $CC accepts -g... \" >&6; }\nif ${ac_cv_prog_cc_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nelse\n  CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\n$as_echo \"$ac_cv_prog_cc_g\" >&6; }\nif test \"$ac_test_CFLAGS\" = set; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89\" >&5\n$as_echo_n \"checking for $CC option to accept ISO C89... \" >&6; }\nif ${ac_cv_prog_cc_c89+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdarg.h>\n#include <stdio.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */\nstruct buf { int x; };\nFILE * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (p, i)\n     char **p;\n     int i;\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not '\\xHH' hex character constants.\n   These don't provoke an error unfortunately, instead are silently treated\n   as 'x'.  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously '\\x00'!='x' always comes out true, for an\n   array size at least.  It's necessary to write '\\x00'==0 to get something\n   that's true only with -std.  */\nint osf4_cc_array ['\\x00' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) 'x'\nint xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);\nint argc;\nchar **argv;\nint\nmain ()\n{\nreturn f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \\\n\t-Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC\n\nfi\n# AC_CACHE_VAL\ncase \"x$ac_cv_prog_cc_c89\" in\n  x)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\n$as_echo \"none needed\" >&6; } ;;\n  xno)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\n$as_echo \"unsupported\" >&6; } ;;\n  *)\n    CC=\"$CC $ac_cv_prog_cc_c89\"\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\n$as_echo \"$ac_cv_prog_cc_c89\" >&6; } ;;\nesac\nif test \"x$ac_cv_prog_cc_c89\" != xno; then :\n\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together\" >&5\n$as_echo_n \"checking whether $CC understands -c and -o together... \" >&6; }\nif ${am_cv_prog_cc_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if { echo \"$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext\" >&5\n   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o\" >&5\n$as_echo \"$am_cv_prog_cc_c_o\" >&6; }\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in ar lib \"link -lib\"\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AR\"; then\n  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AR=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAR=$ac_cv_prog_AR\nif test -n \"$AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n$as_echo \"$AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$AR\" && break\n  done\nfi\nif test -z \"$AR\"; then\n  ac_ct_AR=$AR\n  for ac_prog in ar lib \"link -lib\"\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_AR\"; then\n  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_AR=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_AR=$ac_cv_prog_ac_ct_AR\nif test -n \"$ac_ct_AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n$as_echo \"$ac_ct_AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_AR\" && break\ndone\n\n  if test \"x$ac_ct_AR\" = x; then\n    AR=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    AR=$ac_ct_AR\n  fi\nfi\n\n: ${AR=ar}\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking the archiver ($AR) interface\" >&5\n$as_echo_n \"checking the archiver ($AR) interface... \" >&6; }\nif ${am_cv_ar_interface+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n   am_cv_ar_interface=ar\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint some_variable = 0;\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  am_ar_try='$AR cru libconftest.a conftest.$ac_objext >&5'\n      { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$am_ar_try\\\"\"; } >&5\n  (eval $am_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n      if test \"$ac_status\" -eq 0; then\n        am_cv_ar_interface=ar\n      else\n        am_ar_try='$AR -NOLOGO -OUT:conftest.lib conftest.$ac_objext >&5'\n        { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$am_ar_try\\\"\"; } >&5\n  (eval $am_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n        if test \"$ac_status\" -eq 0; then\n          am_cv_ar_interface=lib\n        else\n          am_cv_ar_interface=unknown\n        fi\n      fi\n      rm -f conftest.lib libconftest.a\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_ar_interface\" >&5\n$as_echo \"$am_cv_ar_interface\" >&6; }\n\ncase $am_cv_ar_interface in\nar)\n  ;;\nlib)\n  # Microsoft lib, so override with the ar-lib wrapper script.\n  # FIXME: It is wrong to rewrite AR.\n  # But if we don't then we get into trouble of one sort or another.\n  # A longer-term fix would be to have automake use am__AR in this case,\n  # and then we could set am__AR=\"$am_aux_dir/ar-lib \\$(AR)\" or something\n  # similar.\n  AR=\"$am_aux_dir/ar-lib $AR\"\n  ;;\nunknown)\n  as_fn_error $? \"could not determine $AR interface\" \"$LINENO\" 5\n  ;;\nesac\n\n\n### We don't use dist-xz *.xz output from make dist,\n### so don't mention it.\nam__api_version='1.16'\n\n# Find a good install program.  We prefer a C program (faster),\n# so one script is as good as another.  But avoid the broken or\n# incompatible versions:\n# SysV /etc/install, /usr/sbin/install\n# SunOS /usr/etc/install\n# IRIX /sbin/install\n# AIX /bin/install\n# AmigaOS /C/install, which installs bootblocks on floppy discs\n# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag\n# AFS /usr/afsws/bin/install, which mishandles nonexistent args\n# SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n# OS/2's system install, which has a completely different semantic\n# ./install, which can be erroneously created by make from ./install.sh.\n# Reject install programs that cannot install multiple files.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install\" >&5\n$as_echo_n \"checking for a BSD-compatible install... \" >&6; }\nif test -z \"$INSTALL\"; then\nif ${ac_cv_path_install+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    # Account for people who put trailing slashes in PATH elements.\ncase $as_dir/ in #((\n  ./ | .// | /[cC]/* | \\\n  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \\\n  ?:[\\\\/]os2[\\\\/]install[\\\\/]* | ?:[\\\\/]OS2[\\\\/]INSTALL[\\\\/]* | \\\n  /usr/ucb/* ) ;;\n  *)\n    # OSF1 and SCO ODT 3.0 have their own names for install.\n    # Don't use installbsd from OSF since it installs stuff as root\n    # by default.\n    for ac_prog in ginstall scoinst install; do\n      for ac_exec_ext in '' $ac_executable_extensions; do\n\tif as_fn_executable_p \"$as_dir/$ac_prog$ac_exec_ext\"; then\n\t  if test $ac_prog = install &&\n\t    grep dspmsg \"$as_dir/$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # AIX install.  It has an incompatible calling convention.\n\t    :\n\t  elif test $ac_prog = install &&\n\t    grep pwplus \"$as_dir/$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # program-specific install script used by HP pwplus--don't use.\n\t    :\n\t  else\n\t    rm -rf conftest.one conftest.two conftest.dir\n\t    echo one > conftest.one\n\t    echo two > conftest.two\n\t    mkdir conftest.dir\n\t    if \"$as_dir/$ac_prog$ac_exec_ext\" -c conftest.one conftest.two \"`pwd`/conftest.dir\" &&\n\t      test -s conftest.one && test -s conftest.two &&\n\t      test -s conftest.dir/conftest.one &&\n\t      test -s conftest.dir/conftest.two\n\t    then\n\t      ac_cv_path_install=\"$as_dir/$ac_prog$ac_exec_ext -c\"\n\t      break 3\n\t    fi\n\t  fi\n\tfi\n      done\n    done\n    ;;\nesac\n\n  done\nIFS=$as_save_IFS\n\nrm -rf conftest.one conftest.two conftest.dir\n\nfi\n  if test \"${ac_cv_path_install+set}\" = set; then\n    INSTALL=$ac_cv_path_install\n  else\n    # As a last resort, use the slow shell script.  Don't cache a\n    # value for INSTALL within a source directory, because that will\n    # break other packages using the cache if that directory is\n    # removed, or if the value is a relative name.\n    INSTALL=$ac_install_sh\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $INSTALL\" >&5\n$as_echo \"$INSTALL\" >&6; }\n\n# Use test -z because SunOS4 sh mishandles braces in ${var-val}.\n# It thinks the first close brace ends the variable substitution.\ntest -z \"$INSTALL_PROGRAM\" && INSTALL_PROGRAM='${INSTALL}'\n\ntest -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL}'\n\ntest -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether build environment is sane\" >&5\n$as_echo_n \"checking whether build environment is sane... \" >&6; }\n# Reject unsafe characters in $srcdir or the absolute working directory\n# name.  Accept space and tab only in the latter.\nam_lf='\n'\ncase `pwd` in\n  *[\\\\\\\"\\#\\$\\&\\'\\`$am_lf]*)\n    as_fn_error $? \"unsafe absolute working directory name\" \"$LINENO\" 5;;\nesac\ncase $srcdir in\n  *[\\\\\\\"\\#\\$\\&\\'\\`$am_lf\\ \\\t]*)\n    as_fn_error $? \"unsafe srcdir value: '$srcdir'\" \"$LINENO\" 5;;\nesac\n\n# Do 'set' in a subshell so we don't clobber the current shell's\n# arguments.  Must try -L first in case configure is actually a\n# symlink; some systems play weird games with the mod time of symlinks\n# (eg FreeBSD returns the mod time of the symlink's containing\n# directory).\nif (\n   am_has_slept=no\n   for am_try in 1 2; do\n     echo \"timestamp, slept: $am_has_slept\" > conftest.file\n     set X `ls -Lt \"$srcdir/configure\" conftest.file 2> /dev/null`\n     if test \"$*\" = \"X\"; then\n\t# -L didn't work.\n\tset X `ls -t \"$srcdir/configure\" conftest.file`\n     fi\n     if test \"$*\" != \"X $srcdir/configure conftest.file\" \\\n\t&& test \"$*\" != \"X conftest.file $srcdir/configure\"; then\n\n\t# If neither matched, then we have a broken ls.  This can happen\n\t# if, for instance, CONFIG_SHELL is bash and it inherits a\n\t# broken ls alias from the environment.  This has actually\n\t# happened.  Such a system could not be considered \"sane\".\n\tas_fn_error $? \"ls -t appears to fail.  Make sure there is not a broken\n  alias in your environment\" \"$LINENO\" 5\n     fi\n     if test \"$2\" = conftest.file || test $am_try -eq 2; then\n       break\n     fi\n     # Just in case.\n     sleep 1\n     am_has_slept=yes\n   done\n   test \"$2\" = conftest.file\n   )\nthen\n   # Ok.\n   :\nelse\n   as_fn_error $? \"newly created file is older than distributed files!\nCheck your system clock\" \"$LINENO\" 5\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\n# If we didn't sleep, we still need to ensure time stamps of config.status and\n# generated files are strictly newer.\nam_sleep_pid=\nif grep 'slept: no' conftest.file >/dev/null 2>&1; then\n  ( sleep 1 ) &\n  am_sleep_pid=$!\nfi\n\nrm -f conftest.file\n\ntest \"$program_prefix\" != NONE &&\n  program_transform_name=\"s&^&$program_prefix&;$program_transform_name\"\n# Use a double $ so make ignores it.\ntest \"$program_suffix\" != NONE &&\n  program_transform_name=\"s&\\$&$program_suffix&;$program_transform_name\"\n# Double any \\ or $.\n# By default was `s,x,x', remove it if useless.\nac_script='s/[\\\\$]/&&/g;s/;s,x,x,$//'\nprogram_transform_name=`$as_echo \"$program_transform_name\" | sed \"$ac_script\"`\n\nif test x\"${MISSING+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    MISSING=\"\\${SHELL} \\\"$am_aux_dir/missing\\\"\" ;;\n  *)\n    MISSING=\"\\${SHELL} $am_aux_dir/missing\" ;;\n  esac\nfi\n# Use eval to expand $SHELL\nif eval \"$MISSING --is-lightweight\"; then\n  am_missing_run=\"$MISSING \"\nelse\n  am_missing_run=\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: 'missing' script is too old or missing\" >&5\n$as_echo \"$as_me: WARNING: 'missing' script is too old or missing\" >&2;}\nfi\n\nif test x\"${install_sh+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    install_sh=\"\\${SHELL} '$am_aux_dir/install-sh'\" ;;\n  *)\n    install_sh=\"\\${SHELL} $am_aux_dir/install-sh\"\n  esac\nfi\n\n# Installed binaries are usually stripped using 'strip' when the user\n# run \"make install-strip\".  However 'strip' might not be the right\n# tool to use in cross-compilation environments, therefore Automake\n# will honor the 'STRIP' environment variable to overrule this program.\nif test \"$cross_compiling\" != no; then\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}strip\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$STRIP\"; then\n  ac_cv_prog_STRIP=\"$STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_STRIP=\"${ac_tool_prefix}strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nSTRIP=$ac_cv_prog_STRIP\nif test -n \"$STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $STRIP\" >&5\n$as_echo \"$STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_STRIP\"; then\n  ac_ct_STRIP=$STRIP\n  # Extract the first word of \"strip\", so it can be a program name with args.\nset dummy strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_STRIP\"; then\n  ac_cv_prog_ac_ct_STRIP=\"$ac_ct_STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_STRIP=\"strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP\nif test -n \"$ac_ct_STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP\" >&5\n$as_echo \"$ac_ct_STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_STRIP\" = x; then\n    STRIP=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    STRIP=$ac_ct_STRIP\n  fi\nelse\n  STRIP=\"$ac_cv_prog_STRIP\"\nfi\n\nfi\nINSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a thread-safe mkdir -p\" >&5\n$as_echo_n \"checking for a thread-safe mkdir -p... \" >&6; }\nif test -z \"$MKDIR_P\"; then\n  if ${ac_cv_path_mkdir+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in mkdir gmkdir; do\n\t for ac_exec_ext in '' $ac_executable_extensions; do\n\t   as_fn_executable_p \"$as_dir/$ac_prog$ac_exec_ext\" || continue\n\t   case `\"$as_dir/$ac_prog$ac_exec_ext\" --version 2>&1` in #(\n\t     'mkdir (GNU coreutils) '* | \\\n\t     'mkdir (coreutils) '* | \\\n\t     'mkdir (fileutils) '4.1*)\n\t       ac_cv_path_mkdir=$as_dir/$ac_prog$ac_exec_ext\n\t       break 3;;\n\t   esac\n\t done\n       done\n  done\nIFS=$as_save_IFS\n\nfi\n\n  test -d ./--version && rmdir ./--version\n  if test \"${ac_cv_path_mkdir+set}\" = set; then\n    MKDIR_P=\"$ac_cv_path_mkdir -p\"\n  else\n    # As a last resort, use the slow shell script.  Don't cache a\n    # value for MKDIR_P within a source directory, because that will\n    # break other packages using the cache if that directory is\n    # removed, or if the value is a relative name.\n    MKDIR_P=\"$ac_install_sh -d\"\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MKDIR_P\" >&5\n$as_echo \"$MKDIR_P\" >&6; }\n\nfor ac_prog in gawk mawk nawk awk\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AWK+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AWK\"; then\n  ac_cv_prog_AWK=\"$AWK\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AWK=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAWK=$ac_cv_prog_AWK\nif test -n \"$AWK\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AWK\" >&5\n$as_echo \"$AWK\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$AWK\" && break\ndone\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \\$(MAKE)\" >&5\n$as_echo_n \"checking whether ${MAKE-make} sets \\$(MAKE)... \" >&6; }\nset x ${MAKE-make}\nac_make=`$as_echo \"$2\" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`\nif eval \\${ac_cv_prog_make_${ac_make}_set+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat >conftest.make <<\\_ACEOF\nSHELL = /bin/sh\nall:\n\t@echo '@@@%%%=$(MAKE)=@@@%%%'\n_ACEOF\n# GNU make sometimes prints \"make[1]: Entering ...\", which would confuse us.\ncase `${MAKE-make} -f conftest.make 2>/dev/null` in\n  *@@@%%%=?*=@@@%%%*)\n    eval ac_cv_prog_make_${ac_make}_set=yes;;\n  *)\n    eval ac_cv_prog_make_${ac_make}_set=no;;\nesac\nrm -f conftest.make\nfi\nif eval test \\$ac_cv_prog_make_${ac_make}_set = yes; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\n  SET_MAKE=\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n  SET_MAKE=\"MAKE=${MAKE-make}\"\nfi\n\nrm -rf .tst 2>/dev/null\nmkdir .tst 2>/dev/null\nif test -d .tst; then\n  am__leading_dot=.\nelse\n  am__leading_dot=_\nfi\nrmdir .tst 2>/dev/null\n\nDEPDIR=\"${am__leading_dot}deps\"\n\nac_config_commands=\"$ac_config_commands depfiles\"\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} supports the include directive\" >&5\n$as_echo_n \"checking whether ${MAKE-make} supports the include directive... \" >&6; }\ncat > confinc.mk << 'END'\nam__doit:\n\t@echo this is the am__doit target >confinc.out\n.PHONY: am__doit\nEND\nam__include=\"#\"\nam__quote=\n# BSD make does it like this.\necho '.include \"confinc.mk\" # ignored' > confmf.BSD\n# Other make implementations (GNU, Solaris 10, AIX) do it like this.\necho 'include confinc.mk # ignored' > confmf.GNU\n_am_result=no\nfor s in GNU BSD; do\n  { echo \"$as_me:$LINENO: ${MAKE-make} -f confmf.$s && cat confinc.out\" >&5\n   (${MAKE-make} -f confmf.$s && cat confinc.out) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }\n  case $?:`cat confinc.out 2>/dev/null` in #(\n  '0:this is the am__doit target') :\n    case $s in #(\n  BSD) :\n    am__include='.include' am__quote='\"' ;; #(\n  *) :\n    am__include='include' am__quote='' ;;\nesac ;; #(\n  *) :\n     ;;\nesac\n  if test \"$am__include\" != \"#\"; then\n    _am_result=\"yes ($s style)\"\n    break\n  fi\ndone\nrm -f confinc.* confmf.*\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${_am_result}\" >&5\n$as_echo \"${_am_result}\" >&6; }\n\n# Check whether --enable-dependency-tracking was given.\nif test \"${enable_dependency_tracking+set}\" = set; then :\n  enableval=$enable_dependency_tracking;\nfi\n\nif test \"x$enable_dependency_tracking\" != xno; then\n  am_depcomp=\"$ac_aux_dir/depcomp\"\n  AMDEPBACKSLASH='\\'\n  am__nodep='_no'\nfi\n if test \"x$enable_dependency_tracking\" != xno; then\n  AMDEP_TRUE=\n  AMDEP_FALSE='#'\nelse\n  AMDEP_TRUE='#'\n  AMDEP_FALSE=\nfi\n\n\n# Check whether --enable-silent-rules was given.\nif test \"${enable_silent_rules+set}\" = set; then :\n  enableval=$enable_silent_rules;\nfi\n\ncase $enable_silent_rules in # (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\n    *) AM_DEFAULT_VERBOSITY=1;;\nesac\nam_make=${MAKE-make}\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables\" >&5\n$as_echo_n \"checking whether $am_make supports nested variables... \" >&6; }\nif ${am_cv_make_support_nested_variables+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if $as_echo 'TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables\" >&5\n$as_echo \"$am_cv_make_support_nested_variables\" >&6; }\nif test $am_cv_make_support_nested_variables = yes; then\n    AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\nAM_BACKSLASH='\\'\n\nif test \"`cd $srcdir && pwd`\" != \"`pwd`\"; then\n  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output\n  # is not polluted with repeated \"-I.\"\n  am__isrc=' -I$(srcdir)'\n  # test to see if srcdir already configured\n  if test -f $srcdir/config.status; then\n    as_fn_error $? \"source directory already configured; run \\\"make distclean\\\" there first\" \"$LINENO\" 5\n  fi\nfi\n\n# test whether we have cygpath\nif test -z \"$CYGPATH_W\"; then\n  if (cygpath --version) >/dev/null 2>/dev/null; then\n    CYGPATH_W='cygpath -w'\n  else\n    CYGPATH_W=echo\n  fi\nfi\n\n\n# Define the identity of the package.\n PACKAGE='libdwarf'\n VERSION='20201017'\n\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE \"$PACKAGE\"\n_ACEOF\n\n\ncat >>confdefs.h <<_ACEOF\n#define VERSION \"$VERSION\"\n_ACEOF\n\n# Some tools Automake needs.\n\nACLOCAL=${ACLOCAL-\"${am_missing_run}aclocal-${am__api_version}\"}\n\n\nAUTOCONF=${AUTOCONF-\"${am_missing_run}autoconf\"}\n\n\nAUTOMAKE=${AUTOMAKE-\"${am_missing_run}automake-${am__api_version}\"}\n\n\nAUTOHEADER=${AUTOHEADER-\"${am_missing_run}autoheader\"}\n\n\nMAKEINFO=${MAKEINFO-\"${am_missing_run}makeinfo\"}\n\n# For better backward compatibility.  To be removed once Automake 1.9.x\n# dies out for good.  For more background, see:\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>\n# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>\nmkdir_p='$(MKDIR_P)'\n\n# We need awk for the \"check\" target (and possibly the TAP driver).  The\n# system \"awk\" is bad on some platforms.\n# Always define AMTAR for backward compatibility.  Yes, it's still used\n# in the wild :-(  We should find a proper way to deprecate it ...\nAMTAR='$${TAR-tar}'\n\n\n# We'll loop over all known methods to create a tar archive until one works.\n_am_tools='gnutar  pax cpio none'\n\nam__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'\n\n\n\n\n\ndepcc=\"$CC\"   am_compiler_list=\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc\" >&5\n$as_echo_n \"checking dependency style of $depcc... \" >&6; }\nif ${am_cv_CC_dependencies_compiler_type+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_CC_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n 's/^#*\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n  fi\n  am__universal=false\n  case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thusly:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_CC_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_CC_dependencies_compiler_type=none\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type\" >&5\n$as_echo \"$am_cv_CC_dependencies_compiler_type\" >&6; }\nCCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type\n\n if\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_CC_dependencies_compiler_type\" = gcc3; then\n  am__fastdepCC_TRUE=\n  am__fastdepCC_FALSE='#'\nelse\n  am__fastdepCC_TRUE='#'\n  am__fastdepCC_FALSE=\nfi\n\n\n\n# POSIX will say in a future version that running \"rm -f\" with no argument\n# is OK; and we want to be able to make that assumption in our Makefile\n# recipes.  So use an aggressive probe to check that the usage we want is\n# actually supported \"in the wild\" to an acceptable degree.\n# See automake bug#10828.\n# To make any issue more visible, cause the running configure to be aborted\n# by default if the 'rm' program in use doesn't match our expectations; the\n# user can still override this though.\nif rm -f && rm -fr && rm -rf; then : OK; else\n  cat >&2 <<'END'\nOops!\n\nYour 'rm' program seems unable to run without file operands specified\non the command line, even when the '-f' option is present.  This is contrary\nto the behaviour of most rm programs out there, and not conforming with\nthe upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>\n\nPlease tell bug-automake@gnu.org about your system, including the value\nof your $PATH and any error possibly output before this message.  This\ncan help us improve future automake versions.\n\nEND\n  if test x\"$ACCEPT_INFERIOR_RM_PROGRAM\" = x\"yes\"; then\n    echo 'Configuration will proceed anyway, since you have set the' >&2\n    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to \"yes\"' >&2\n    echo >&2\n  else\n    cat >&2 <<'END'\nAborting the configuration process, to ensure you take notice of the issue.\n\nYou can download and install GNU coreutils to get an 'rm' implementation\nthat behaves properly: <https://www.gnu.org/software/coreutils/>.\n\nIf you want to complete the configuration process using your problematic\n'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM\nto \"yes\", and re-run configure.\n\nEND\n    as_fn_error $? \"Your 'rm' program is bad, sorry.\" \"$LINENO\" 5\n  fi\nfi\n\n# Check whether --enable-silent-rules was given.\nif test \"${enable_silent_rules+set}\" = set; then :\n  enableval=$enable_silent_rules;\nfi\n\ncase $enable_silent_rules in # (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\n    *) AM_DEFAULT_VERBOSITY=0;;\nesac\nam_make=${MAKE-make}\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables\" >&5\n$as_echo_n \"checking whether $am_make supports nested variables... \" >&6; }\nif ${am_cv_make_support_nested_variables+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if $as_echo 'TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables\" >&5\n$as_echo \"$am_cv_make_support_nested_variables\" >&6; }\nif test $am_cv_make_support_nested_variables = yes; then\n    AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\nAM_BACKSLASH='\\'\n\n\ncase `pwd` in\n  *\\ * | *\\\t*)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&5\n$as_echo \"$as_me: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&2;} ;;\nesac\n\n\n\nmacro_version='2.4.6'\nmacro_revision='2.4.6'\n\n\n\n\n\n\n\n\n\n\n\n\n\nltmain=$ac_aux_dir/ltmain.sh\n\n# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([\"`$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n\nECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to print strings\" >&5\n$as_echo_n \"checking how to print strings... \" >&6; }\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"\"\n}\n\ncase $ECHO in\n  printf*) { $as_echo \"$as_me:${as_lineno-$LINENO}: result: printf\" >&5\n$as_echo \"printf\" >&6; } ;;\n  print*) { $as_echo \"$as_me:${as_lineno-$LINENO}: result: print -r\" >&5\n$as_echo \"print -r\" >&6; } ;;\n  *) { $as_echo \"$as_me:${as_lineno-$LINENO}: result: cat\" >&5\n$as_echo \"cat\" >&6; } ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\n$as_echo_n \"checking for a sed that does not truncate output... \" >&6; }\nif ${ac_cv_path_SED+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n     for ac_i in 1 2 3 4 5 6 7; do\n       ac_script=\"$ac_script$as_nl$ac_script\"\n     done\n     echo \"$ac_script\" 2>/dev/null | sed 99q >conftest.sed\n     { ac_script=; unset ac_script;}\n     if test -z \"$SED\"; then\n  ac_path_SED_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_SED=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_SED\" || continue\n# Check for GNU ac_path_SED and select it if it is found.\n  # Check for GNU $ac_path_SED\ncase `\"$ac_path_SED\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo '' >> \"conftest.nl\"\n    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_SED_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_SED=\"$ac_path_SED\"\n      ac_path_SED_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_SED_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_SED\"; then\n    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_SED=$SED\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\n$as_echo \"$ac_cv_path_SED\" >&6; }\n SED=\"$ac_cv_path_SED\"\n  rm -f conftest.sed\n\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e\" >&5\n$as_echo_n \"checking for grep that handles long lines and -e... \" >&6; }\nif ${ac_cv_path_GREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$GREP\"; then\n  ac_path_GREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in grep ggrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_GREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_GREP\" || continue\n# Check for GNU ac_path_GREP and select it if it is found.\n  # Check for GNU $ac_path_GREP\ncase `\"$ac_path_GREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_GREP=\"$ac_path_GREP\" ac_path_GREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'GREP' >> \"conftest.nl\"\n    \"$ac_path_GREP\" -e 'GREP$' -e '-(cannot match)-' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_GREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_GREP=\"$ac_path_GREP\"\n      ac_path_GREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_GREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_GREP\"; then\n    as_fn_error $? \"no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_GREP=$GREP\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP\" >&5\n$as_echo \"$ac_cv_path_GREP\" >&6; }\n GREP=\"$ac_cv_path_GREP\"\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for egrep\" >&5\n$as_echo_n \"checking for egrep... \" >&6; }\nif ${ac_cv_path_EGREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1\n   then ac_cv_path_EGREP=\"$GREP -E\"\n   else\n     if test -z \"$EGREP\"; then\n  ac_path_EGREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in egrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP\" || continue\n# Check for GNU ac_path_EGREP and select it if it is found.\n  # Check for GNU $ac_path_EGREP\ncase `\"$ac_path_EGREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_EGREP=\"$ac_path_EGREP\" ac_path_EGREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'EGREP' >> \"conftest.nl\"\n    \"$ac_path_EGREP\" 'EGREP$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP=\"$ac_path_EGREP\"\n      ac_path_EGREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP\"; then\n    as_fn_error $? \"no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_EGREP=$EGREP\nfi\n\n   fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP\" >&5\n$as_echo \"$ac_cv_path_EGREP\" >&6; }\n EGREP=\"$ac_cv_path_EGREP\"\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for fgrep\" >&5\n$as_echo_n \"checking for fgrep... \" >&6; }\nif ${ac_cv_path_FGREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1\n   then ac_cv_path_FGREP=\"$GREP -F\"\n   else\n     if test -z \"$FGREP\"; then\n  ac_path_FGREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in fgrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_FGREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_FGREP\" || continue\n# Check for GNU ac_path_FGREP and select it if it is found.\n  # Check for GNU $ac_path_FGREP\ncase `\"$ac_path_FGREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_FGREP=\"$ac_path_FGREP\" ac_path_FGREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'FGREP' >> \"conftest.nl\"\n    \"$ac_path_FGREP\" FGREP < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_FGREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_FGREP=\"$ac_path_FGREP\"\n      ac_path_FGREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_FGREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_FGREP\"; then\n    as_fn_error $? \"no acceptable fgrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_FGREP=$FGREP\nfi\n\n   fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_FGREP\" >&5\n$as_echo \"$ac_cv_path_FGREP\" >&6; }\n FGREP=\"$ac_cv_path_FGREP\"\n\n\ntest -z \"$GREP\" && GREP=grep\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Check whether --with-gnu-ld was given.\nif test \"${with_gnu_ld+set}\" = set; then :\n  withval=$with_gnu_ld; test no = \"$withval\" || with_gnu_ld=yes\nelse\n  with_gnu_ld=no\nfi\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld used by $CC\" >&5\n$as_echo_n \"checking for ld used by $CC... \" >&6; }\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [\\\\/]* | ?:[\\\\/]*)\n      re_direlt='/[^/][^/]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for GNU ld\" >&5\n$as_echo_n \"checking for GNU ld... \" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for non-GNU ld\" >&5\n$as_echo_n \"checking for non-GNU ld... \" >&6; }\nfi\nif ${lt_cv_path_LD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi\nfi\n\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LD\" >&5\n$as_echo \"$LD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\ntest -z \"$LD\" && as_fn_error $? \"no acceptable ld found in \\$PATH\" \"$LINENO\" 5\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\n$as_echo_n \"checking if the linker ($LD) is GNU ld... \" >&6; }\nif ${lt_cv_prog_gnu_ld+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  # I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld\" >&5\n$as_echo \"$lt_cv_prog_gnu_ld\" >&6; }\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for BSD- or MS-compatible name lister (nm)\" >&5\n$as_echo_n \"checking for BSD- or MS-compatible name lister (nm)... \" >&6; }\nif ${lt_cv_path_NM+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_NM\" >&5\n$as_echo \"$lt_cv_path_NM\" >&6; }\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in dumpbin \"link -dump\"\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DUMPBIN+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DUMPBIN\"; then\n  ac_cv_prog_DUMPBIN=\"$DUMPBIN\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DUMPBIN=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDUMPBIN=$ac_cv_prog_DUMPBIN\nif test -n \"$DUMPBIN\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DUMPBIN\" >&5\n$as_echo \"$DUMPBIN\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$DUMPBIN\" && break\n  done\nfi\nif test -z \"$DUMPBIN\"; then\n  ac_ct_DUMPBIN=$DUMPBIN\n  for ac_prog in dumpbin \"link -dump\"\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DUMPBIN+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DUMPBIN\"; then\n  ac_cv_prog_ac_ct_DUMPBIN=\"$ac_ct_DUMPBIN\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DUMPBIN=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DUMPBIN=$ac_cv_prog_ac_ct_DUMPBIN\nif test -n \"$ac_ct_DUMPBIN\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DUMPBIN\" >&5\n$as_echo \"$ac_ct_DUMPBIN\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_DUMPBIN\" && break\ndone\n\n  if test \"x$ac_ct_DUMPBIN\" = x; then\n    DUMPBIN=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DUMPBIN=$ac_ct_DUMPBIN\n  fi\nfi\n\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking the name lister ($NM) interface\" >&5\n$as_echo_n \"checking the name lister ($NM) interface... \" >&6; }\nif ${lt_cv_nm_interface+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&5)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&5\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&5\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&5)\n  cat conftest.out >&5\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_nm_interface\" >&5\n$as_echo \"$lt_cv_nm_interface\" >&6; }\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ln -s works\" >&5\n$as_echo_n \"checking whether ln -s works... \" >&6; }\nLN_S=$as_ln_s\nif test \"$LN_S\" = \"ln -s\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no, using $LN_S\" >&5\n$as_echo \"no, using $LN_S\" >&6; }\nfi\n\n# find the maximum length of command line arguments\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking the maximum length of command line arguments\" >&5\n$as_echo_n \"checking the maximum length of command line arguments... \" >&6; }\nif ${lt_cv_sys_max_cmd_len+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n    i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[\t ]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n\nfi\n\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_sys_max_cmd_len\" >&5\n$as_echo \"$lt_cv_sys_max_cmd_len\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none\" >&5\n$as_echo \"none\" >&6; }\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n\n\n\n\n\n\n: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n\nif ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n\n\n\n\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to convert $build file names to $host format\" >&5\n$as_echo_n \"checking how to convert $build file names to $host format... \" >&6; }\nif ${lt_cv_to_host_file_cmd+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n\nfi\n\nto_host_file_cmd=$lt_cv_to_host_file_cmd\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_to_host_file_cmd\" >&5\n$as_echo \"$lt_cv_to_host_file_cmd\" >&6; }\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to convert $build file names to toolchain format\" >&5\n$as_echo_n \"checking how to convert $build file names to toolchain format... \" >&6; }\nif ${lt_cv_to_tool_file_cmd+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  #assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n\nfi\n\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_to_tool_file_cmd\" >&5\n$as_echo \"$lt_cv_to_tool_file_cmd\" >&6; }\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $LD option to reload object files\" >&5\n$as_echo_n \"checking for $LD option to reload object files... \" >&6; }\nif ${lt_cv_ld_reload_flag+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ld_reload_flag='-r'\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_reload_flag\" >&5\n$as_echo \"$lt_cv_ld_reload_flag\" >&6; }\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n\n\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}objdump\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OBJDUMP\"; then\n  ac_cv_prog_OBJDUMP=\"$OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OBJDUMP=\"${ac_tool_prefix}objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOBJDUMP=$ac_cv_prog_OBJDUMP\nif test -n \"$OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJDUMP\" >&5\n$as_echo \"$OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OBJDUMP\"; then\n  ac_ct_OBJDUMP=$OBJDUMP\n  # Extract the first word of \"objdump\", so it can be a program name with args.\nset dummy objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OBJDUMP\"; then\n  ac_cv_prog_ac_ct_OBJDUMP=\"$ac_ct_OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OBJDUMP=\"objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP\nif test -n \"$ac_ct_OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP\" >&5\n$as_echo \"$ac_ct_OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OBJDUMP\" = x; then\n    OBJDUMP=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OBJDUMP=$ac_ct_OBJDUMP\n  fi\nelse\n  OBJDUMP=\"$ac_cv_prog_OBJDUMP\"\nfi\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to recognize dependent libraries\" >&5\n$as_echo_n \"checking how to recognize dependent libraries... \" >&6; }\nif ${lt_cv_deplibs_check_method+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[4-9]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[45]*)\n  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[3-9]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]'\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9]\\.[0-9]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[3-9]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd* | netbsdelf*-gnu)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\\.so\\.[0-9]+\\.[0-9]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [0-9][0-9]*-bit [LM]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_deplibs_check_method\" >&5\n$as_echo \"$lt_cv_deplibs_check_method\" >&6; }\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[\\1]\\/[\\1]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}dlltool\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DLLTOOL\"; then\n  ac_cv_prog_DLLTOOL=\"$DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DLLTOOL=\"${ac_tool_prefix}dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDLLTOOL=$ac_cv_prog_DLLTOOL\nif test -n \"$DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DLLTOOL\" >&5\n$as_echo \"$DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_DLLTOOL\"; then\n  ac_ct_DLLTOOL=$DLLTOOL\n  # Extract the first word of \"dlltool\", so it can be a program name with args.\nset dummy dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DLLTOOL\"; then\n  ac_cv_prog_ac_ct_DLLTOOL=\"$ac_ct_DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DLLTOOL=\"dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL\nif test -n \"$ac_ct_DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL\" >&5\n$as_echo \"$ac_ct_DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_DLLTOOL\" = x; then\n    DLLTOOL=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DLLTOOL=$ac_ct_DLLTOOL\n  fi\nelse\n  DLLTOOL=\"$ac_cv_prog_DLLTOOL\"\nfi\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to associate runtime and link libraries\" >&5\n$as_echo_n \"checking how to associate runtime and link libraries... \" >&6; }\nif ${lt_cv_sharedlib_from_linklib_cmd+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_sharedlib_from_linklib_cmd\" >&5\n$as_echo \"$lt_cv_sharedlib_from_linklib_cmd\" >&6; }\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in ar\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AR\"; then\n  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AR=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAR=$ac_cv_prog_AR\nif test -n \"$AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n$as_echo \"$AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$AR\" && break\n  done\nfi\nif test -z \"$AR\"; then\n  ac_ct_AR=$AR\n  for ac_prog in ar\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_AR+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_AR\"; then\n  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_AR=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_AR=$ac_cv_prog_ac_ct_AR\nif test -n \"$ac_ct_AR\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n$as_echo \"$ac_ct_AR\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_AR\" && break\ndone\n\n  if test \"x$ac_ct_AR\" = x; then\n    AR=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    AR=$ac_ct_AR\n  fi\nfi\n\n: ${AR=ar}\n: ${AR_FLAGS=cr}\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for archiver @FILE support\" >&5\n$as_echo_n \"checking for archiver @FILE support... \" >&6; }\nif ${lt_cv_ar_at_file+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ar_at_file=no\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&5'\n      { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$lt_ar_try\\\"\"; } >&5\n  (eval $lt_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\t{ { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$lt_ar_try\\\"\"; } >&5\n  (eval $lt_ar_try) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ar_at_file\" >&5\n$as_echo \"$lt_cv_ar_at_file\" >&6; }\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}strip\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$STRIP\"; then\n  ac_cv_prog_STRIP=\"$STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_STRIP=\"${ac_tool_prefix}strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nSTRIP=$ac_cv_prog_STRIP\nif test -n \"$STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $STRIP\" >&5\n$as_echo \"$STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_STRIP\"; then\n  ac_ct_STRIP=$STRIP\n  # Extract the first word of \"strip\", so it can be a program name with args.\nset dummy strip; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_STRIP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_STRIP\"; then\n  ac_cv_prog_ac_ct_STRIP=\"$ac_ct_STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_STRIP=\"strip\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP\nif test -n \"$ac_ct_STRIP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP\" >&5\n$as_echo \"$ac_ct_STRIP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_STRIP\" = x; then\n    STRIP=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    STRIP=$ac_ct_STRIP\n  fi\nelse\n  STRIP=\"$ac_cv_prog_STRIP\"\nfi\n\ntest -z \"$STRIP\" && STRIP=:\n\n\n\n\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}ranlib\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}ranlib; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_RANLIB+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$RANLIB\"; then\n  ac_cv_prog_RANLIB=\"$RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_RANLIB=\"${ac_tool_prefix}ranlib\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nRANLIB=$ac_cv_prog_RANLIB\nif test -n \"$RANLIB\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $RANLIB\" >&5\n$as_echo \"$RANLIB\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_RANLIB\"; then\n  ac_ct_RANLIB=$RANLIB\n  # Extract the first word of \"ranlib\", so it can be a program name with args.\nset dummy ranlib; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_RANLIB+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_RANLIB\"; then\n  ac_cv_prog_ac_ct_RANLIB=\"$ac_ct_RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_RANLIB=\"ranlib\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB\nif test -n \"$ac_ct_RANLIB\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB\" >&5\n$as_echo \"$ac_ct_RANLIB\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_RANLIB\" = x; then\n    RANLIB=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    RANLIB=$ac_ct_RANLIB\n  fi\nelse\n  RANLIB=\"$ac_cv_prog_RANLIB\"\nfi\n\ntest -z \"$RANLIB\" && RANLIB=:\n\n\n\n\n\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking command to parse $NM output from $compiler object\" >&5\n$as_echo_n \"checking command to parse $NM output from $compiler object... \" >&6; }\nif ${lt_cv_sys_global_symbol_pipe+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[BCDEGRST]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([_A-Za-z][_A-Za-z0-9]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[BCDT]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[ABCDGISTW]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[ABCDEGRST]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[BCDEGRST]'\n  ;;\nosf*)\n  symcode='[BCDEGQRST]'\n  ;;\nsolaris*)\n  symcode='[BDRT]'\n  ;;\nsco3.2v5*)\n  symcode='[DT]'\n  ;;\nsysv4.2uw2*)\n  symcode='[DT]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[ABDT]'\n  ;;\nsysv4)\n  symcode='[DFNSTU]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[ABCDGIRSTW]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK '\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[\t ]\\($symcode$symcode*\\)[\t ][\t ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    $ECHO \"$as_me:$LINENO: $NM conftest.$ac_objext | $lt_cv_sys_global_symbol_pipe > $nlist\" >&5\n    if eval \"$NM\" conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist 2>&5 && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$lt_prog_compiler_no_builtin_flag\"\n\t  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_link\\\"\"; } >&5\n  (eval $ac_link) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&5\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&5\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&5\n    fi\n  else\n    echo \"$progname: failed program was:\" >&5\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n\nfi\n\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: failed\" >&5\n$as_echo \"failed\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ok\" >&5\n$as_echo \"ok\" >&6; }\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[@]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sysroot\" >&5\n$as_echo_n \"checking for sysroot... \" >&6; }\n\n# Check whether --with-sysroot was given.\nif test \"${with_sysroot+set}\" = set; then :\n  withval=$with_sysroot;\nelse\n  with_sysroot=no\nfi\n\n\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_sysroot\" >&5\n$as_echo \"$with_sysroot\" >&6; }\n   as_fn_error $? \"The sysroot must be an absolute path.\" \"$LINENO\" 5\n   ;;\nesac\n\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${lt_sysroot:-no}\" >&5\n$as_echo \"${lt_sysroot:-no}\" >&6; }\n\n\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a working dd\" >&5\n$as_echo_n \"checking for a working dd... \" >&6; }\nif ${ac_cv_path_lt_DD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nif test -z \"$lt_DD\"; then\n  ac_path_lt_DD_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in dd; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_lt_DD=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_lt_DD\" || continue\nif \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi\n      $ac_path_lt_DD_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_lt_DD\"; then\n    :\n  fi\nelse\n  ac_cv_path_lt_DD=$lt_DD\nfi\n\nrm -f conftest.i conftest2.i conftest.out\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_lt_DD\" >&5\n$as_echo \"$ac_cv_path_lt_DD\" >&6; }\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to truncate binary pipes\" >&5\n$as_echo_n \"checking how to truncate binary pipes... \" >&6; }\nif ${lt_cv_truncate_bin+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_truncate_bin\" >&5\n$as_echo \"$lt_cv_truncate_bin\" >&6; }\n\n\n\n\n\n\n\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in $*\"\"; do\n      case $cc_temp in\n        compile | *[\\\\/]compile | ccache | *[\\\\/]ccache ) ;;\n        distcc | *[\\\\/]distcc | purify | *[\\\\/]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n\n# Check whether --enable-libtool-lock was given.\nif test \"${enable_libtool_lock+set}\" = set; then :\n  enableval=$enable_libtool_lock;\nfi\n\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '#line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '#line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler needs -belf\" >&5\n$as_echo_n \"checking whether the C compiler needs -belf... \" >&6; }\nif ${lt_cv_cc_needs_belf+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  lt_cv_cc_needs_belf=yes\nelse\n  lt_cv_cc_needs_belf=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_cc_needs_belf\" >&5\n$as_echo \"$lt_cv_cc_needs_belf\" >&6; }\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}mt\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}mt; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_MANIFEST_TOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$MANIFEST_TOOL\"; then\n  ac_cv_prog_MANIFEST_TOOL=\"$MANIFEST_TOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_MANIFEST_TOOL=\"${ac_tool_prefix}mt\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nMANIFEST_TOOL=$ac_cv_prog_MANIFEST_TOOL\nif test -n \"$MANIFEST_TOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MANIFEST_TOOL\" >&5\n$as_echo \"$MANIFEST_TOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_MANIFEST_TOOL\"; then\n  ac_ct_MANIFEST_TOOL=$MANIFEST_TOOL\n  # Extract the first word of \"mt\", so it can be a program name with args.\nset dummy mt; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_MANIFEST_TOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_MANIFEST_TOOL\"; then\n  ac_cv_prog_ac_ct_MANIFEST_TOOL=\"$ac_ct_MANIFEST_TOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_MANIFEST_TOOL=\"mt\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_MANIFEST_TOOL=$ac_cv_prog_ac_ct_MANIFEST_TOOL\nif test -n \"$ac_ct_MANIFEST_TOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_MANIFEST_TOOL\" >&5\n$as_echo \"$ac_ct_MANIFEST_TOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_MANIFEST_TOOL\" = x; then\n    MANIFEST_TOOL=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    MANIFEST_TOOL=$ac_ct_MANIFEST_TOOL\n  fi\nelse\n  MANIFEST_TOOL=\"$ac_cv_prog_MANIFEST_TOOL\"\nfi\n\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $MANIFEST_TOOL is a manifest tool\" >&5\n$as_echo_n \"checking if $MANIFEST_TOOL is a manifest tool... \" >&6; }\nif ${lt_cv_path_mainfest_tool+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&5\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&5\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_mainfest_tool\" >&5\n$as_echo \"$lt_cv_path_mainfest_tool\" >&6; }\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n\n\n\n\n\n\n  case $host_os in\n    rhapsody* | darwin*)\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}dsymutil\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}dsymutil; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DSYMUTIL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DSYMUTIL\"; then\n  ac_cv_prog_DSYMUTIL=\"$DSYMUTIL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DSYMUTIL=\"${ac_tool_prefix}dsymutil\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDSYMUTIL=$ac_cv_prog_DSYMUTIL\nif test -n \"$DSYMUTIL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL\" >&5\n$as_echo \"$DSYMUTIL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_DSYMUTIL\"; then\n  ac_ct_DSYMUTIL=$DSYMUTIL\n  # Extract the first word of \"dsymutil\", so it can be a program name with args.\nset dummy dsymutil; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DSYMUTIL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DSYMUTIL\"; then\n  ac_cv_prog_ac_ct_DSYMUTIL=\"$ac_ct_DSYMUTIL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DSYMUTIL=\"dsymutil\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DSYMUTIL=$ac_cv_prog_ac_ct_DSYMUTIL\nif test -n \"$ac_ct_DSYMUTIL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DSYMUTIL\" >&5\n$as_echo \"$ac_ct_DSYMUTIL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_DSYMUTIL\" = x; then\n    DSYMUTIL=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DSYMUTIL=$ac_ct_DSYMUTIL\n  fi\nelse\n  DSYMUTIL=\"$ac_cv_prog_DSYMUTIL\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}nmedit\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}nmedit; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_NMEDIT+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$NMEDIT\"; then\n  ac_cv_prog_NMEDIT=\"$NMEDIT\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_NMEDIT=\"${ac_tool_prefix}nmedit\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nNMEDIT=$ac_cv_prog_NMEDIT\nif test -n \"$NMEDIT\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $NMEDIT\" >&5\n$as_echo \"$NMEDIT\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_NMEDIT\"; then\n  ac_ct_NMEDIT=$NMEDIT\n  # Extract the first word of \"nmedit\", so it can be a program name with args.\nset dummy nmedit; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_NMEDIT+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_NMEDIT\"; then\n  ac_cv_prog_ac_ct_NMEDIT=\"$ac_ct_NMEDIT\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_NMEDIT=\"nmedit\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_NMEDIT=$ac_cv_prog_ac_ct_NMEDIT\nif test -n \"$ac_ct_NMEDIT\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_NMEDIT\" >&5\n$as_echo \"$ac_ct_NMEDIT\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_NMEDIT\" = x; then\n    NMEDIT=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    NMEDIT=$ac_ct_NMEDIT\n  fi\nelse\n  NMEDIT=\"$ac_cv_prog_NMEDIT\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}lipo\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}lipo; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_LIPO+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$LIPO\"; then\n  ac_cv_prog_LIPO=\"$LIPO\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_LIPO=\"${ac_tool_prefix}lipo\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nLIPO=$ac_cv_prog_LIPO\nif test -n \"$LIPO\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIPO\" >&5\n$as_echo \"$LIPO\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_LIPO\"; then\n  ac_ct_LIPO=$LIPO\n  # Extract the first word of \"lipo\", so it can be a program name with args.\nset dummy lipo; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_LIPO+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_LIPO\"; then\n  ac_cv_prog_ac_ct_LIPO=\"$ac_ct_LIPO\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_LIPO=\"lipo\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_LIPO=$ac_cv_prog_ac_ct_LIPO\nif test -n \"$ac_ct_LIPO\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_LIPO\" >&5\n$as_echo \"$ac_ct_LIPO\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_LIPO\" = x; then\n    LIPO=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    LIPO=$ac_ct_LIPO\n  fi\nelse\n  LIPO=\"$ac_cv_prog_LIPO\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}otool\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}otool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OTOOL\"; then\n  ac_cv_prog_OTOOL=\"$OTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OTOOL=\"${ac_tool_prefix}otool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOTOOL=$ac_cv_prog_OTOOL\nif test -n \"$OTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OTOOL\" >&5\n$as_echo \"$OTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OTOOL\"; then\n  ac_ct_OTOOL=$OTOOL\n  # Extract the first word of \"otool\", so it can be a program name with args.\nset dummy otool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OTOOL\"; then\n  ac_cv_prog_ac_ct_OTOOL=\"$ac_ct_OTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OTOOL=\"otool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OTOOL=$ac_cv_prog_ac_ct_OTOOL\nif test -n \"$ac_ct_OTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL\" >&5\n$as_echo \"$ac_ct_OTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OTOOL\" = x; then\n    OTOOL=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OTOOL=$ac_ct_OTOOL\n  fi\nelse\n  OTOOL=\"$ac_cv_prog_OTOOL\"\nfi\n\n    if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}otool64\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}otool64; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OTOOL64+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OTOOL64\"; then\n  ac_cv_prog_OTOOL64=\"$OTOOL64\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OTOOL64=\"${ac_tool_prefix}otool64\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOTOOL64=$ac_cv_prog_OTOOL64\nif test -n \"$OTOOL64\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OTOOL64\" >&5\n$as_echo \"$OTOOL64\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OTOOL64\"; then\n  ac_ct_OTOOL64=$OTOOL64\n  # Extract the first word of \"otool64\", so it can be a program name with args.\nset dummy otool64; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OTOOL64+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OTOOL64\"; then\n  ac_cv_prog_ac_ct_OTOOL64=\"$ac_ct_OTOOL64\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OTOOL64=\"otool64\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OTOOL64=$ac_cv_prog_ac_ct_OTOOL64\nif test -n \"$ac_ct_OTOOL64\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL64\" >&5\n$as_echo \"$ac_ct_OTOOL64\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OTOOL64\" = x; then\n    OTOOL64=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OTOOL64=$ac_ct_OTOOL64\n  fi\nelse\n  OTOOL64=\"$ac_cv_prog_OTOOL64\"\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag\" >&5\n$as_echo_n \"checking for -single_module linker flag... \" >&6; }\nif ${lt_cv_apple_cc_single_mod+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&5\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&5\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&5\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_apple_cc_single_mod\" >&5\n$as_echo \"$lt_cv_apple_cc_single_mod\" >&6; }\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag\" >&5\n$as_echo_n \"checking for -exported_symbols_list linker flag... \" >&6; }\nif ${lt_cv_ld_exported_symbols_list+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  lt_cv_ld_exported_symbols_list=yes\nelse\n  lt_cv_ld_exported_symbols_list=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\tLDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_exported_symbols_list\" >&5\n$as_echo \"$lt_cv_ld_exported_symbols_list\" >&6; }\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -force_load linker flag\" >&5\n$as_echo_n \"checking for -force_load linker flag... \" >&6; }\nif ${lt_cv_ld_force_load+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&5\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&5\n      echo \"$AR cr libconftest.a conftest.o\" >&5\n      $AR cr libconftest.a conftest.o 2>&5\n      echo \"$RANLIB libconftest.a\" >&5\n      $RANLIB libconftest.a 2>&5\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&5\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&5\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&5\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_force_load\" >&5\n$as_echo \"$lt_cv_ld_force_load\" >&6; }\n    case $host_os in\n    rhapsody* | darwin1.[012])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[91]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[012][,.]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n\n# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x$2 in\n    x)\n        ;;\n    *:)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'` \\$$1\\\"\n        ;;\n    x:*)\n        eval $1=\\\"\\$$1 `$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval $1=\\\"\\$$1\\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval $1=\\\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\$$1\\\"\n        ;;\n    *)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor\" >&5\n$as_echo_n \"checking how to run the C preprocessor... \" >&6; }\n# On Suns, sometimes $CPP names a directory.\nif test -n \"$CPP\" && test -d \"$CPP\"; then\n  CPP=\nfi\nif test -z \"$CPP\"; then\n  if ${ac_cv_prog_CPP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n      # Double quotes because CPP needs to be expanded\n    for CPP in \"$CC -E\" \"$CC -E -traditional-cpp\" \"/lib/cpp\"\n    do\n      ac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n  break\nfi\n\n    done\n    ac_cv_prog_CPP=$CPP\n\nfi\n  CPP=$ac_cv_prog_CPP\nelse\n  ac_cv_prog_CPP=$CPP\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CPP\" >&5\n$as_echo \"$CPP\" >&6; }\nac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"C preprocessor \\\"$CPP\\\" fails sanity check\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ANSI C header files\" >&5\n$as_echo_n \"checking for ANSI C header files... \" >&6; }\nif ${ac_cv_header_stdc+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdlib.h>\n#include <stdarg.h>\n#include <string.h>\n#include <float.h>\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_header_stdc=yes\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\nif test $ac_cv_header_stdc = yes; then\n  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <string.h>\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"memchr\" >/dev/null 2>&1; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f conftest*\n\nfi\n\nif test $ac_cv_header_stdc = yes; then\n  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdlib.h>\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"free\" >/dev/null 2>&1; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f conftest*\n\nfi\n\nif test $ac_cv_header_stdc = yes; then\n  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.\n  if test \"$cross_compiling\" = yes; then :\n  :\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ctype.h>\n#include <stdlib.h>\n#if ((' ' & 0x0FF) == 0x020)\n# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))\n#else\n# define ISLOWER(c) \\\n\t\t   (('a' <= (c) && (c) <= 'i') \\\n\t\t     || ('j' <= (c) && (c) <= 'r') \\\n\t\t     || ('s' <= (c) && (c) <= 'z'))\n# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))\n#endif\n\n#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))\nint\nmain ()\n{\n  int i;\n  for (i = 0; i < 256; i++)\n    if (XOR (islower (i), ISLOWER (i))\n\t|| toupper (i) != TOUPPER (i))\n      return 2;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc\" >&5\n$as_echo \"$ac_cv_header_stdc\" >&6; }\nif test $ac_cv_header_stdc = yes; then\n\n$as_echo \"#define STDC_HEADERS 1\" >>confdefs.h\n\nfi\n\n# On IRIX 5.3, sys/types and inttypes.h are conflicting.\nfor ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \\\n\t\t  inttypes.h stdint.h unistd.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_compile \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\n\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n\nfor ac_header in dlfcn.h\ndo :\n  ac_fn_c_check_header_compile \"$LINENO\" \"dlfcn.h\" \"ac_cv_header_dlfcn_h\" \"$ac_includes_default\n\"\nif test \"x$ac_cv_header_dlfcn_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_DLFCN_H 1\n_ACEOF\n\nfi\n\ndone\n\n\n\n\n\n# Set options\nenable_win32_dll=yes\n\ncase $host in\n*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}as\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}as; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AS+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AS\"; then\n  ac_cv_prog_AS=\"$AS\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AS=\"${ac_tool_prefix}as\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAS=$ac_cv_prog_AS\nif test -n \"$AS\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AS\" >&5\n$as_echo \"$AS\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_AS\"; then\n  ac_ct_AS=$AS\n  # Extract the first word of \"as\", so it can be a program name with args.\nset dummy as; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_AS+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_AS\"; then\n  ac_cv_prog_ac_ct_AS=\"$ac_ct_AS\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_AS=\"as\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_AS=$ac_cv_prog_ac_ct_AS\nif test -n \"$ac_ct_AS\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AS\" >&5\n$as_echo \"$ac_ct_AS\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_AS\" = x; then\n    AS=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    AS=$ac_ct_AS\n  fi\nelse\n  AS=\"$ac_cv_prog_AS\"\nfi\n\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}dlltool\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$DLLTOOL\"; then\n  ac_cv_prog_DLLTOOL=\"$DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_DLLTOOL=\"${ac_tool_prefix}dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nDLLTOOL=$ac_cv_prog_DLLTOOL\nif test -n \"$DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DLLTOOL\" >&5\n$as_echo \"$DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_DLLTOOL\"; then\n  ac_ct_DLLTOOL=$DLLTOOL\n  # Extract the first word of \"dlltool\", so it can be a program name with args.\nset dummy dlltool; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_DLLTOOL+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_DLLTOOL\"; then\n  ac_cv_prog_ac_ct_DLLTOOL=\"$ac_ct_DLLTOOL\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_DLLTOOL=\"dlltool\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL\nif test -n \"$ac_ct_DLLTOOL\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL\" >&5\n$as_echo \"$ac_ct_DLLTOOL\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_DLLTOOL\" = x; then\n    DLLTOOL=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    DLLTOOL=$ac_ct_DLLTOOL\n  fi\nelse\n  DLLTOOL=\"$ac_cv_prog_DLLTOOL\"\nfi\n\n  if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}objdump\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$OBJDUMP\"; then\n  ac_cv_prog_OBJDUMP=\"$OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_OBJDUMP=\"${ac_tool_prefix}objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nOBJDUMP=$ac_cv_prog_OBJDUMP\nif test -n \"$OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJDUMP\" >&5\n$as_echo \"$OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_OBJDUMP\"; then\n  ac_ct_OBJDUMP=$OBJDUMP\n  # Extract the first word of \"objdump\", so it can be a program name with args.\nset dummy objdump; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_OBJDUMP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_OBJDUMP\"; then\n  ac_cv_prog_ac_ct_OBJDUMP=\"$ac_ct_OBJDUMP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_OBJDUMP=\"objdump\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP\nif test -n \"$ac_ct_OBJDUMP\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP\" >&5\n$as_echo \"$ac_ct_OBJDUMP\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_OBJDUMP\" = x; then\n    OBJDUMP=\"false\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    OBJDUMP=$ac_ct_OBJDUMP\n  fi\nelse\n  OBJDUMP=\"$ac_cv_prog_OBJDUMP\"\nfi\n\n  ;;\nesac\n\ntest -z \"$AS\" && AS=as\n\n\n\n\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n\n\n\n\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n\n\n\n\n# Check whether --enable-shared was given.\nif test \"${enable_shared+set}\" = set; then :\n  enableval=$enable_shared; p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  enable_shared=no\nfi\n\n\n\n\n\n\n\n# Check whether --enable-static was given.\nif test \"${enable_static+set}\" = set; then :\n  enableval=$enable_static; p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  enable_static=yes\nfi\n\n\n\n\n\n\n\n\n\n\n        enable_dlopen=no\n\n\n\n\n\n\n# Check whether --with-pic was given.\nif test \"${with_pic+set}\" = set; then :\n  withval=$with_pic; lt_p=${PACKAGE-default}\n    case $withval in\n    yes|no) pic_mode=$withval ;;\n    *)\n      pic_mode=default\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for lt_pkg in $withval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$lt_pkg\" = \"X$lt_p\"; then\n\t  pic_mode=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  pic_mode=default\nfi\n\n\n\n\n\n\n\n\n  # Check whether --enable-fast-install was given.\nif test \"${enable_fast_install+set}\" = set; then :\n  enableval=$enable_fast_install; p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac\nelse\n  enable_fast_install=yes\nfi\n\n\n\n\n\n\n\n\n  shared_archive_member_spec=\ncase $host,$enable_shared in\npower*-*-aix[5-9]*,yes)\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking which variant of shared library versioning to provide\" >&5\n$as_echo_n \"checking which variant of shared library versioning to provide... \" >&6; }\n\n# Check whether --with-aix-soname was given.\nif test \"${with_aix_soname+set}\" = set; then :\n  withval=$with_aix_soname; case $withval in\n    aix|svr4|both)\n      ;;\n    *)\n      as_fn_error $? \"Unknown argument to --with-aix-soname\" \"$LINENO\" 5\n      ;;\n    esac\n    lt_cv_with_aix_soname=$with_aix_soname\nelse\n  if ${lt_cv_with_aix_soname+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_with_aix_soname=aix\nfi\n\n    with_aix_soname=$lt_cv_with_aix_soname\nfi\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_aix_soname\" >&5\n$as_echo \"$with_aix_soname\" >&6; }\n  if test aix != \"$with_aix_soname\"; then\n    # For the AIX way of multilib, we name the shared archive member\n    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',\n    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.\n    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,\n    # the AIX toolchain works better with OBJECT_MODE set (default 32).\n    if test 64 = \"${OBJECT_MODE-32}\"; then\n      shared_archive_member_spec=shr_64\n    else\n      shared_archive_member_spec=shr\n    fi\n  fi\n  ;;\n*)\n  with_aix_soname=aix\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for objdir\" >&5\n$as_echo_n \"checking for objdir... \" >&6; }\nif ${lt_cv_objdir+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_objdir\" >&5\n$as_echo \"$lt_cv_objdir\" >&6; }\nobjdir=$lt_cv_objdir\n\n\n\n\n\ncat >>confdefs.h <<_ACEOF\n#define LT_OBJDIR \"$lt_cv_objdir/\"\n_ACEOF\n\n\n\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\nfunc_cc_basename $compiler\ncc_basename=$func_cc_basename_result\n\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${ac_tool_prefix}file\" >&5\n$as_echo_n \"checking for ${ac_tool_prefix}file... \" >&6; }\nif ${lt_cv_path_MAGIC_CMD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $MAGIC_CMD in\n[\\\\/*] |  ?:[\\\\/]*)\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  ac_dummy=\"/usr/bin$PATH_SEPARATOR$PATH\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/${ac_tool_prefix}file\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"${ac_tool_prefix}file\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac\nfi\n\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD\" >&5\n$as_echo \"$MAGIC_CMD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n\n\n\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for file\" >&5\n$as_echo_n \"checking for file... \" >&6; }\nif ${lt_cv_path_MAGIC_CMD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $MAGIC_CMD in\n[\\\\/*] |  ?:[\\\\/]*)\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  ac_dummy=\"/usr/bin$PATH_SEPARATOR$PATH\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/file\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"file\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac\nfi\n\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD\" >&5\n$as_echo \"$MAGIC_CMD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  else\n    MAGIC_CMD=:\n  fi\nfi\n\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\n\nlt_save_CC=$CC\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\nobjext=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n\n\n\n\n\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n\nlt_prog_compiler_no_builtin_flag=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    lt_prog_compiler_no_builtin_flag=' -Xcompiler -fno-builtin' ;;\n  *)\n    lt_prog_compiler_no_builtin_flag=' -fno-builtin' ;;\n  esac\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -fno-rtti -fno-exceptions\" >&5\n$as_echo_n \"checking if $compiler supports -fno-rtti -fno-exceptions... \" >&6; }\nif ${lt_cv_prog_compiler_rtti_exceptions+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_rtti_exceptions=no\n   ac_outfile=conftest.$ac_objext\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"-fno-rtti -fno-exceptions\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_rtti_exceptions=yes\n     fi\n   fi\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_rtti_exceptions\" >&5\n$as_echo \"$lt_cv_prog_compiler_rtti_exceptions\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_rtti_exceptions\"; then\n    lt_prog_compiler_no_builtin_flag=\"$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions\"\nelse\n    :\nfi\n\nfi\n\n\n\n\n\n\n  lt_prog_compiler_wl=\nlt_prog_compiler_pic=\nlt_prog_compiler_static=\n\n\n  if test yes = \"$GCC\"; then\n    lt_prog_compiler_wl='-Wl,'\n    lt_prog_compiler_static='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\tlt_prog_compiler_static='-Bstatic'\n      fi\n      lt_prog_compiler_pic='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            lt_prog_compiler_pic='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      lt_prog_compiler_pic='-DDLL_EXPORT'\n      case $host_os in\n      os2*)\n\tlt_prog_compiler_static='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      lt_prog_compiler_pic='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      lt_prog_compiler_static=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\tlt_prog_compiler_pic='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[3-9]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      lt_prog_compiler_can_build_shared=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      lt_prog_compiler_pic='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tlt_prog_compiler_pic=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      lt_prog_compiler_pic='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      lt_prog_compiler_wl='-Xlinker '\n      if test -n \"$lt_prog_compiler_pic\"; then\n        lt_prog_compiler_pic=\"-Xcompiler $lt_prog_compiler_pic\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      lt_prog_compiler_wl='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\tlt_prog_compiler_static='-Bstatic'\n      else\n\tlt_prog_compiler_static='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      lt_prog_compiler_pic='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        lt_prog_compiler_wl='-Wl,-Wl,,'\n        lt_prog_compiler_pic='-PIC'\n        lt_prog_compiler_static='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      lt_prog_compiler_pic='-DDLL_EXPORT'\n      case $host_os in\n      os2*)\n\tlt_prog_compiler_static='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      lt_prog_compiler_wl='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\tlt_prog_compiler_pic='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      lt_prog_compiler_static='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      lt_prog_compiler_wl='-Wl,'\n      # PIC (with -KPIC) is the default.\n      lt_prog_compiler_static='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-KPIC'\n\tlt_prog_compiler_static='-static'\n        ;;\n      # flang / f18. f95 an alias for gfortran or flang on Debian\n      flang* | f18* | f95*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fPIC'\n\tlt_prog_compiler_static='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fPIC'\n\tlt_prog_compiler_static='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='--shared'\n\tlt_prog_compiler_static='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\tlt_prog_compiler_wl='-Wl,-Wl,,'\n\tlt_prog_compiler_pic='-PIC'\n\tlt_prog_compiler_static='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fPIC'\n\tlt_prog_compiler_static='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-fpic'\n\tlt_prog_compiler_static='-Bstatic'\n        ;;\n      ccc*)\n        lt_prog_compiler_wl='-Wl,'\n        # All Alpha code is PIC.\n        lt_prog_compiler_static='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\tlt_prog_compiler_wl='-Wl,'\n\tlt_prog_compiler_pic='-qpic'\n\tlt_prog_compiler_static='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [1-7].* | *Sun*Fortran*\\ 8.[0-3]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  lt_prog_compiler_pic='-KPIC'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  lt_prog_compiler_wl=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  lt_prog_compiler_pic='-KPIC'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  lt_prog_compiler_wl='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  lt_prog_compiler_pic='-KPIC'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  lt_prog_compiler_wl='-Wl,'\n\t  ;;\n        *Intel*\\ [CF]*Compiler*)\n\t  lt_prog_compiler_wl='-Wl,'\n\t  lt_prog_compiler_pic='-fPIC'\n\t  lt_prog_compiler_static='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  lt_prog_compiler_wl='-Wl,'\n\t  lt_prog_compiler_pic='-fpic'\n\t  lt_prog_compiler_static='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      lt_prog_compiler_pic='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      lt_prog_compiler_wl='-Wl,'\n      # All OSF/1 code is PIC.\n      lt_prog_compiler_static='-non_shared'\n      ;;\n\n    rdos*)\n      lt_prog_compiler_static='-non_shared'\n      ;;\n\n    solaris*)\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\tlt_prog_compiler_wl='-Qoption ld ';;\n      *)\n\tlt_prog_compiler_wl='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      lt_prog_compiler_wl='-Qoption ld '\n      lt_prog_compiler_pic='-PIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      lt_prog_compiler_wl='-Wl,'\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tlt_prog_compiler_pic='-Kconform_pic'\n\tlt_prog_compiler_static='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      lt_prog_compiler_wl='-Wl,'\n      lt_prog_compiler_pic='-KPIC'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    unicos*)\n      lt_prog_compiler_wl='-Wl,'\n      lt_prog_compiler_can_build_shared=no\n      ;;\n\n    uts4*)\n      lt_prog_compiler_pic='-pic'\n      lt_prog_compiler_static='-Bstatic'\n      ;;\n\n    *)\n      lt_prog_compiler_can_build_shared=no\n      ;;\n    esac\n  fi\n\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    lt_prog_compiler_pic=\n    ;;\n  *)\n    lt_prog_compiler_pic=\"$lt_prog_compiler_pic -DPIC\"\n    ;;\nesac\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC\" >&5\n$as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\nif ${lt_cv_prog_compiler_pic+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic=$lt_prog_compiler_pic\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic\" >&6; }\nlt_prog_compiler_pic=$lt_cv_prog_compiler_pic\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$lt_prog_compiler_pic\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic works\" >&5\n$as_echo_n \"checking if $compiler PIC flag $lt_prog_compiler_pic works... \" >&6; }\nif ${lt_cv_prog_compiler_pic_works+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic_works=no\n   ac_outfile=conftest.$ac_objext\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$lt_prog_compiler_pic -DPIC\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_pic_works=yes\n     fi\n   fi\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic_works\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_pic_works\"; then\n    case $lt_prog_compiler_pic in\n     \"\" | \" \"*) ;;\n     *) lt_prog_compiler_pic=\" $lt_prog_compiler_pic\" ;;\n     esac\nelse\n    lt_prog_compiler_pic=\n     lt_prog_compiler_can_build_shared=no\nfi\n\nfi\n\n\n\n\n\n\n\n\n\n\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$lt_prog_compiler_wl eval lt_tmp_static_flag=\\\"$lt_prog_compiler_static\\\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works\" >&5\n$as_echo_n \"checking if $compiler static flag $lt_tmp_static_flag works... \" >&6; }\nif ${lt_cv_prog_compiler_static_works+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_static_works=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $lt_tmp_static_flag\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&5\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         lt_cv_prog_compiler_static_works=yes\n       fi\n     else\n       lt_cv_prog_compiler_static_works=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works\" >&5\n$as_echo \"$lt_cv_prog_compiler_static_works\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_static_works\"; then\n    :\nelse\n    lt_prog_compiler_static=\nfi\n\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o\" >&6; }\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o\" >&6; }\n\n\n\n\nhard_links=nottested\nif test no = \"$lt_cv_prog_compiler_c_o\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links\" >&5\n$as_echo_n \"checking if we can lock with hard links... \" >&6; }\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hard_links\" >&5\n$as_echo \"$hard_links\" >&6; }\n  if test no = \"$hard_links\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&5\n$as_echo \"$as_me: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&2;}\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries\" >&5\n$as_echo_n \"checking whether the $compiler linker ($LD) supports shared libraries... \" >&6; }\n\n  runpath_var=\n  allow_undefined_flag=\n  always_export_symbols=no\n  archive_cmds=\n  archive_expsym_cmds=\n  compiler_needs_object=no\n  enable_shared_with_static_runtimes=no\n  export_dynamic_flag_spec=\n  export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  hardcode_automatic=no\n  hardcode_direct=no\n  hardcode_direct_absolute=no\n  hardcode_libdir_flag_spec=\n  hardcode_libdir_separator=\n  hardcode_minus_L=no\n  hardcode_shlibpath_var=unsupported\n  inherit_rpath=no\n  link_all_deplibs=unknown\n  module_cmds=\n  module_expsym_cmds=\n  old_archive_from_new_cmds=\n  old_archive_from_expsyms_cmds=\n  thread_safe_flag_spec=\n  whole_archive_flag_spec=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  include_expsyms=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    link_all_deplibs=no\n    ;;\n  esac\n\n  ld_shlibs=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[2-9]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [3-9]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n    export_dynamic_flag_spec='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      whole_archive_flag_spec=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      whole_archive_flag_spec=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/(^)\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [01].* | *\\ 2.[0-9].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[3-9]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\tld_shlibs=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            archive_expsym_cmds=''\n        ;;\n      m68k)\n            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            hardcode_libdir_flag_spec='-L$libdir'\n            hardcode_minus_L=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\tallow_undefined_flag=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\tarchive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,\n      # as there is no search path for DLLs.\n      hardcode_libdir_flag_spec='-L$libdir'\n      export_dynamic_flag_spec='$wl--export-all-symbols'\n      allow_undefined_flag=unsupported\n      always_export_symbols=no\n      enable_shared_with_static_runtimes=yes\n      export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1 DATA/;s/^.*[ ]__nm__\\([^ ]*\\)[ ][^ ]*/\\1 DATA/;/^I[ ]/d;/^[AITW][ ]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      exclude_expsyms='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\tarchive_expsym_cmds='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    haiku*)\n      archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      link_all_deplibs=yes\n      ;;\n\n    os2*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_minus_L=yes\n      allow_undefined_flag=unsupported\n      shrext_cmds=.dll\n      archive_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      archive_expsym_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      enable_shared_with_static_runtimes=yes\n      ;;\n\n    interix[3-9]*)\n      hardcode_direct=no\n      hardcode_shlibpath_var=no\n      hardcode_libdir_flag_spec='$wl-rpath,$libdir'\n      export_dynamic_flag_spec='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      archive_expsym_cmds='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  whole_archive_flag_spec=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[cC]* | bgxl[cC]* | mpixl[cC]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  compiler_needs_object=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  whole_archive_flag_spec='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  compiler_needs_object=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\tarchive_cmds='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          archive_expsym_cmds='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  export_dynamic_flag_spec='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'\n\t  hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n\t  archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    archive_expsym_cmds='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        ld_shlibs=no\n      fi\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\tarchive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\tarchive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\tld_shlibs=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\tarchive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [01].* | *\\ 2.[0-9].* | *\\ 2.1[0-5].*)\n\tld_shlibs=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n\t    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    ld_shlibs=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\tarchive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\tld_shlibs=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$ld_shlibs\"; then\n      runpath_var=\n      hardcode_libdir_flag_spec=\n      export_dynamic_flag_spec=\n      whole_archive_flag_spec=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      allow_undefined_flag=unsupported\n      always_export_symbols=yes\n      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      hardcode_minus_L=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\thardcode_direct=unsupported\n      fi\n      ;;\n\n    aix[4-9]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  export_symbols_cmds='`func_echo_all $NM | $SED -e '\\''s/B\\([^B]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && (substr(\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      archive_cmds=''\n      hardcode_direct=yes\n      hardcode_direct_absolute=yes\n      hardcode_libdir_separator=':'\n      link_all_deplibs=yes\n      file_list_spec='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\thardcode_direct=no\n\thardcode_direct_absolute=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[012]|aix4.[012].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  hardcode_direct=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  hardcode_minus_L=yes\n\t  hardcode_libdir_flag_spec='-L$libdir'\n\t  hardcode_libdir_separator=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      export_dynamic_flag_spec='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      always_export_symbols=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\tallow_undefined_flag='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath_+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath_=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath_\nfi\n\n        hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  hardcode_libdir_flag_spec='$wl-R $libdir:/usr/lib:/lib'\n\t  allow_undefined_flag=\"-z nodefs\"\n\t  archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath_+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath_=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath_\"; then\n    lt_cv_aix_libpath_=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath_\nfi\n\n\t hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  no_undefined_flag=' $wl-bernotok'\n\t  allow_undefined_flag=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    whole_archive_flag_spec='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    whole_archive_flag_spec='$convenience'\n\t  fi\n\t  archive_cmds_need_lc=yes\n\t  archive_expsym_cmds='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([, ]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    archive_expsym_cmds=\"$archive_expsym_cmds\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    archive_expsym_cmds=\"$archive_expsym_cmds\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    archive_expsym_cmds=\"$archive_expsym_cmds\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  archive_expsym_cmds=\"$archive_expsym_cmds\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            archive_expsym_cmds=''\n        ;;\n      m68k)\n            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            hardcode_libdir_flag_spec='-L$libdir'\n            hardcode_minus_L=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[45]*)\n      export_dynamic_flag_spec=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\thardcode_libdir_flag_spec=' '\n\tallow_undefined_flag=unsupported\n\talways_export_symbols=yes\n\tfile_list_spec='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\tarchive_cmds='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\tarchive_expsym_cmds='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, )='true'\n\tenable_shared_with_static_runtimes=yes\n\texclude_expsyms='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\texport_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[AITW][ ]/s/.*[ ]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\told_postinstall_cmds='chmod 644 $oldlib'\n\tpostlink_cmds='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\thardcode_libdir_flag_spec=' '\n\tallow_undefined_flag=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\tarchive_cmds='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\told_archive_from_new_cmds='true'\n\t# FIXME: Should let the user specify the lib program.\n\told_archive_cmds='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\tenable_shared_with_static_runtimes=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n\n\n  archive_cmds_need_lc=no\n  hardcode_direct=no\n  hardcode_automatic=yes\n  hardcode_shlibpath_var=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    whole_archive_flag_spec='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n\n  else\n    whole_archive_flag_spec=''\n  fi\n  link_all_deplibs=yes\n  allow_undefined_flag=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    archive_cmds=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    module_cmds=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    archive_expsym_cmds=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    module_expsym_cmds=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n\n  else\n  ld_shlibs=no\n  fi\n\n      ;;\n\n    dgux*)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_shlibpath_var=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_direct=yes\n      hardcode_minus_L=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\tarchive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      hardcode_libdir_flag_spec='$wl+b $wl$libdir'\n      hardcode_libdir_separator=:\n      hardcode_direct=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      hardcode_minus_L=yes\n      export_dynamic_flag_spec='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tarchive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\thardcode_libdir_flag_spec='$wl+b $wl$libdir'\n\thardcode_libdir_separator=:\n\thardcode_direct=yes\n\thardcode_direct_absolute=yes\n\texport_dynamic_flag_spec='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\thardcode_minus_L=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  archive_cmds='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  archive_cmds='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  archive_cmds='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $CC understands -b\" >&5\n$as_echo_n \"checking if $CC understands -b... \" >&6; }\nif ${lt_cv_prog_compiler__b+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler__b=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS -b\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&5\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         lt_cv_prog_compiler__b=yes\n       fi\n     else\n       lt_cv_prog_compiler__b=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler__b\" >&5\n$as_echo \"$lt_cv_prog_compiler__b\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler__b\"; then\n    archive_cmds='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\nelse\n    archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\nfi\n\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\thardcode_libdir_flag_spec='$wl+b $wl$libdir'\n\thardcode_libdir_separator=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  hardcode_direct=no\n\t  hardcode_shlibpath_var=no\n\t  ;;\n\t*)\n\t  hardcode_direct=yes\n\t  hardcode_direct_absolute=yes\n\t  export_dynamic_flag_spec='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  hardcode_minus_L=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $host_os linker accepts -exported_symbol\" >&5\n$as_echo_n \"checking whether the $host_os linker accepts -exported_symbol... \" >&6; }\nif ${lt_cv_irix_exported_symbol+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint foo (void) { return 0; }\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  lt_cv_irix_exported_symbol=yes\nelse\n  lt_cv_irix_exported_symbol=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n           LDFLAGS=$save_LDFLAGS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_irix_exported_symbol\" >&5\n$as_echo \"$lt_cv_irix_exported_symbol\" >&6; }\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n\tlink_all_deplibs=no\n      else\n\tarchive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\tarchive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      archive_cmds_need_lc='no'\n      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      hardcode_libdir_separator=:\n      inherit_rpath=yes\n      link_all_deplibs=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\tld_shlibs=yes\n\tarchive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\tarchive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\tarchive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    newsos6)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_direct=yes\n      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      hardcode_libdir_separator=:\n      hardcode_shlibpath_var=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\thardcode_direct=yes\n\thardcode_shlibpath_var=no\n\thardcode_direct_absolute=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  hardcode_libdir_flag_spec='$wl-rpath,$libdir'\n\t  export_dynamic_flag_spec='$wl-E'\n\telse\n\t  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  hardcode_libdir_flag_spec='$wl-rpath,$libdir'\n\tfi\n      else\n\tld_shlibs=no\n      fi\n      ;;\n\n    os2*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_minus_L=yes\n      allow_undefined_flag=unsupported\n      shrext_cmds=.dll\n      archive_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      archive_expsym_cmds='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      enable_shared_with_static_runtimes=yes\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\tallow_undefined_flag=' $wl-expect_unresolved $wl\\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\tallow_undefined_flag=' -expect_unresolved \\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      archive_cmds_need_lc='no'\n      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      hardcode_libdir_separator=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\tallow_undefined_flag=' $wl-expect_unresolved $wl\\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\thardcode_libdir_flag_spec='$wl-rpath $wl$libdir'\n      else\n\tallow_undefined_flag=' -expect_unresolved \\*'\n\tarchive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\tarchive_expsym_cmds='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\thardcode_libdir_flag_spec='-rpath $libdir'\n      fi\n      archive_cmds_need_lc='no'\n      hardcode_libdir_separator=:\n      ;;\n\n    solaris*)\n      no_undefined_flag=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\tarchive_cmds='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  archive_cmds='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  archive_expsym_cmds='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  archive_cmds='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_shlibpath_var=no\n      case $host_os in\n      solaris2.[0-5] | solaris2.[0-5].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  whole_archive_flag_spec='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  whole_archive_flag_spec='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      link_all_deplibs=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\tarchive_cmds='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_direct=yes\n      hardcode_minus_L=yes\n      hardcode_shlibpath_var=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  hardcode_direct=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  reload_cmds='$CC -r -o $output$reload_objs'\n\t  hardcode_direct=no\n        ;;\n\tmotorola)\n\t  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  hardcode_direct=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      hardcode_shlibpath_var=no\n      ;;\n\n    sysv4.3*)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_shlibpath_var=no\n      export_dynamic_flag_spec='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tarchive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\thardcode_shlibpath_var=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\tld_shlibs=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)\n      no_undefined_flag='$wl-z,text'\n      archive_cmds_need_lc=no\n      hardcode_shlibpath_var=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      no_undefined_flag='$wl-z,text'\n      allow_undefined_flag='$wl-z,nodefs'\n      archive_cmds_need_lc=no\n      hardcode_shlibpath_var=no\n      hardcode_libdir_flag_spec='$wl-R,$libdir'\n      hardcode_libdir_separator=':'\n      link_all_deplibs=yes\n      export_dynamic_flag_spec='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\tarchive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\tarchive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\tarchive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_shlibpath_var=no\n      ;;\n\n    *)\n      ld_shlibs=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\texport_dynamic_flag_spec='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_shlibs\" >&5\n$as_echo \"$ld_shlibs\" >&6; }\ntest no = \"$ld_shlibs\" && can_build_shared=no\n\nwith_gnu_ld=$with_gnu_ld\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$archive_cmds_need_lc\" in\nx|xyes)\n  # Assume -lc should be added\n  archive_cmds_need_lc=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $archive_cmds in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in\" >&5\n$as_echo_n \"checking whether -lc should be explicitly linked in... \" >&6; }\nif ${lt_cv_archive_cmds_need_lc+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  $RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$lt_prog_compiler_wl\n\t  pic_flag=$lt_prog_compiler_pic\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$allow_undefined_flag\n\t  allow_undefined_flag=\n\t  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$archive_cmds 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1\\\"\"; } >&5\n  (eval $archive_cmds 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n\t  then\n\t    lt_cv_archive_cmds_need_lc=no\n\t  else\n\t    lt_cv_archive_cmds_need_lc=yes\n\t  fi\n\t  allow_undefined_flag=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_archive_cmds_need_lc\" >&5\n$as_echo \"$lt_cv_archive_cmds_need_lc\" >&6; }\n      archive_cmds_need_lc=$lt_cv_archive_cmds_need_lc\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics\" >&5\n$as_echo_n \"checking dynamic linker characteristics... \" >&6; }\n\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([A-Za-z]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[lt_foo]++; }\n  if (lt_freq[lt_foo] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([A-Za-z]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\n\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[4-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[01] | aix4.[01].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a(lib.so.V)'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o), lib.a(lib.so.V)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a(lib.so.V), lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([^/]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[45]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([a-zA-Z]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | $GREP ';[c-zC-Z]:/' >/dev/null; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\n\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[23].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[01]* | freebsdelf3.[01]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \\\n  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[3-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  hardcode_libdir_flag_spec='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  if ${lt_cv_shlibpath_overrides_runpath+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$lt_prog_compiler_wl\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $hardcode_libdir_flag_spec\\\"\"\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null; then :\n  lt_cv_shlibpath_overrides_runpath=yes\nfi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n\nfi\n\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\$2)); skip = 1; } { if (!skip) print \\$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsdelf*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='NetBSD ld.elf_so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $dynamic_linker\" >&5\n$as_echo \"$dynamic_linker\" >&6; }\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs\" >&5\n$as_echo_n \"checking how to hardcode library paths into programs... \" >&6; }\nhardcode_action=\nif test -n \"$hardcode_libdir_flag_spec\" ||\n   test -n \"$runpath_var\" ||\n   test yes = \"$hardcode_automatic\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$hardcode_direct\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, )\" &&\n     test no != \"$hardcode_minus_L\"; then\n    # Linking always hardcodes the temporary library directory.\n    hardcode_action=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    hardcode_action=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  hardcode_action=unsupported\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hardcode_action\" >&5\n$as_echo \"$hardcode_action\" >&6; }\n\nif test relink = \"$hardcode_action\" ||\n   test yes = \"$inherit_rpath\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n\n\n\n\n\n\n  if test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl\" >&5\n$as_echo_n \"checking for dlopen in -ldl... \" >&6; }\nif ${ac_cv_lib_dl_dlopen+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldl  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dlopen ();\nint\nmain ()\n{\nreturn dlopen ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dl_dlopen=yes\nelse\n  ac_cv_lib_dl_dlopen=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen\" >&5\n$as_echo \"$ac_cv_lib_dl_dlopen\" >&6; }\nif test \"x$ac_cv_lib_dl_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl\nelse\n\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n\nfi\n\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    ac_fn_c_check_func \"$LINENO\" \"shl_load\" \"ac_cv_func_shl_load\"\nif test \"x$ac_cv_func_shl_load\" = xyes; then :\n  lt_cv_dlopen=shl_load\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for shl_load in -ldld\" >&5\n$as_echo_n \"checking for shl_load in -ldld... \" >&6; }\nif ${ac_cv_lib_dld_shl_load+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldld  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar shl_load ();\nint\nmain ()\n{\nreturn shl_load ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dld_shl_load=yes\nelse\n  ac_cv_lib_dld_shl_load=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load\" >&5\n$as_echo \"$ac_cv_lib_dld_shl_load\" >&6; }\nif test \"x$ac_cv_lib_dld_shl_load\" = xyes; then :\n  lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld\nelse\n  ac_fn_c_check_func \"$LINENO\" \"dlopen\" \"ac_cv_func_dlopen\"\nif test \"x$ac_cv_func_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl\" >&5\n$as_echo_n \"checking for dlopen in -ldl... \" >&6; }\nif ${ac_cv_lib_dl_dlopen+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldl  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dlopen ();\nint\nmain ()\n{\nreturn dlopen ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dl_dlopen=yes\nelse\n  ac_cv_lib_dl_dlopen=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen\" >&5\n$as_echo \"$ac_cv_lib_dl_dlopen\" >&6; }\nif test \"x$ac_cv_lib_dl_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld\" >&5\n$as_echo_n \"checking for dlopen in -lsvld... \" >&6; }\nif ${ac_cv_lib_svld_dlopen+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lsvld  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dlopen ();\nint\nmain ()\n{\nreturn dlopen ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_svld_dlopen=yes\nelse\n  ac_cv_lib_svld_dlopen=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen\" >&5\n$as_echo \"$ac_cv_lib_svld_dlopen\" >&6; }\nif test \"x$ac_cv_lib_svld_dlopen\" = xyes; then :\n  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld\" >&5\n$as_echo_n \"checking for dld_link in -ldld... \" >&6; }\nif ${ac_cv_lib_dld_dld_link+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-ldld  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar dld_link ();\nint\nmain ()\n{\nreturn dld_link ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_dld_dld_link=yes\nelse\n  ac_cv_lib_dld_dld_link=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link\" >&5\n$as_echo \"$ac_cv_lib_dld_dld_link\" >&6; }\nif test \"x$ac_cv_lib_dld_dld_link\" = xyes; then :\n  lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld\nfi\n\n\nfi\n\n\nfi\n\n\nfi\n\n\nfi\n\n\nfi\n\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself\" >&5\n$as_echo_n \"checking whether a program can dlopen itself... \" >&6; }\nif ${lt_cv_dlopen_self+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  \t  if test yes = \"$cross_compiling\"; then :\n  lt_cv_dlopen_self=cross\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}\n_LT_EOF\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_link\\\"\"; } >&5\n  (eval $ac_link) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&5 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) lt_cv_dlopen_self=yes ;;\n      x$lt_dlneed_uscore) lt_cv_dlopen_self=yes ;;\n      x$lt_dlunknown|x*) lt_cv_dlopen_self=no ;;\n    esac\n  else :\n    # compilation failed\n    lt_cv_dlopen_self=no\n  fi\nfi\nrm -fr conftest*\n\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self\" >&5\n$as_echo \"$lt_cv_dlopen_self\" >&6; }\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself\" >&5\n$as_echo_n \"checking whether a statically linked program can dlopen itself... \" >&6; }\nif ${lt_cv_dlopen_self_static+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  \t  if test yes = \"$cross_compiling\"; then :\n  lt_cv_dlopen_self_static=cross\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}\n_LT_EOF\n  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_link\\\"\"; } >&5\n  (eval $ac_link) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&5 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) lt_cv_dlopen_self_static=yes ;;\n      x$lt_dlneed_uscore) lt_cv_dlopen_self_static=yes ;;\n      x$lt_dlunknown|x*) lt_cv_dlopen_self_static=no ;;\n    esac\n  else :\n    # compilation failed\n    lt_cv_dlopen_self_static=no\n  fi\nfi\nrm -fr conftest*\n\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self_static\" >&5\n$as_echo \"$lt_cv_dlopen_self_static\" >&6; }\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstriplib=\nold_striplib=\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible\" >&5\n$as_echo_n \"checking whether stripping libraries is possible... \" >&6; }\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\n    else\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n    fi\n    ;;\n  *)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n    ;;\n  esac\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n  # Report what library types will actually be built\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries\" >&5\n$as_echo_n \"checking if libtool supports shared libraries... \" >&6; }\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $can_build_shared\" >&5\n$as_echo \"$can_build_shared\" >&6; }\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries\" >&5\n$as_echo_n \"checking whether to build shared libraries... \" >&6; }\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[4-9]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_shared\" >&5\n$as_echo \"$enable_shared\" >&6; }\n\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to build static libraries\" >&5\n$as_echo_n \"checking whether to build static libraries... \" >&6; }\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_static\" >&5\n$as_echo \"$enable_static\" >&6; }\n\n\n\n\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCC=$lt_save_CC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        ac_config_commands=\"$ac_config_commands libtool\"\n\n\n\n\n# Only expand once:\n\n\n\nversion_info=\"1:0:0\"\nrelease_info=\"\"\n\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nif test -z \"$CC\"; then\n          if test -n \"$ac_tool_prefix\"; then\n    # Extract the first word of \"${ac_tool_prefix}cc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  fi\nfi\nif test -z \"$CC\"; then\n  # Extract the first word of \"cc\", so it can be a program name with args.\nset dummy cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\n  ac_prog_rejected=no\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    if test \"$as_dir/$ac_word$ac_exec_ext\" = \"/usr/ucb/cc\"; then\n       ac_prog_rejected=yes\n       continue\n     fi\n    ac_cv_prog_CC=\"cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nif test $ac_prog_rejected = yes; then\n  # We found a bogon in the path, so make sure we never use it.\n  set dummy $ac_cv_prog_CC\n  shift\n  if test $# != 0; then\n    # We chose a different compiler from the bogus one.\n    # However, it has the same basename, so the bogon will be chosen\n    # first if we set CC to just the basename; use the full file name.\n    shift\n    ac_cv_prog_CC=\"$as_dir/$ac_word${1+' '}$@\"\n  fi\nfi\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in cl.exe\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in cl.exe\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\nfi\n\n\ntest -z \"$CC\" && { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C compiler... \" >&6; }\nif ${ac_cv_c_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\n$as_echo \"$ac_cv_c_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+set}\nac_save_CFLAGS=$CFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\n$as_echo_n \"checking whether $CC accepts -g... \" >&6; }\nif ${ac_cv_prog_cc_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nelse\n  CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\n$as_echo \"$ac_cv_prog_cc_g\" >&6; }\nif test \"$ac_test_CFLAGS\" = set; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89\" >&5\n$as_echo_n \"checking for $CC option to accept ISO C89... \" >&6; }\nif ${ac_cv_prog_cc_c89+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdarg.h>\n#include <stdio.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */\nstruct buf { int x; };\nFILE * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (p, i)\n     char **p;\n     int i;\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not '\\xHH' hex character constants.\n   These don't provoke an error unfortunately, instead are silently treated\n   as 'x'.  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously '\\x00'!='x' always comes out true, for an\n   array size at least.  It's necessary to write '\\x00'==0 to get something\n   that's true only with -std.  */\nint osf4_cc_array ['\\x00' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) 'x'\nint xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);\nint argc;\nchar **argv;\nint\nmain ()\n{\nreturn f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \\\n\t-Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC\n\nfi\n# AC_CACHE_VAL\ncase \"x$ac_cv_prog_cc_c89\" in\n  x)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\n$as_echo \"none needed\" >&6; } ;;\n  xno)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\n$as_echo \"unsupported\" >&6; } ;;\n  *)\n    CC=\"$CC $ac_cv_prog_cc_c89\"\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\n$as_echo \"$ac_cv_prog_cc_c89\" >&6; } ;;\nesac\nif test \"x$ac_cv_prog_cc_c89\" != xno; then :\n\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together\" >&5\n$as_echo_n \"checking whether $CC understands -c and -o together... \" >&6; }\nif ${am_cv_prog_cc_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if { echo \"$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext\" >&5\n   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o\" >&5\n$as_echo \"$am_cv_prog_cc_c_o\" >&6; }\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\nif test -z \"$CXX\"; then\n  if test -n \"$CCC\"; then\n    CXX=$CCC\n  else\n    if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CXX\"; then\n  ac_cv_prog_CXX=\"$CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CXX=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCXX=$ac_cv_prog_CXX\nif test -n \"$CXX\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CXX\" >&5\n$as_echo \"$CXX\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CXX\" && break\n  done\nfi\nif test -z \"$CXX\"; then\n  ac_ct_CXX=$CXX\n  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CXX\"; then\n  ac_cv_prog_ac_ct_CXX=\"$ac_ct_CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CXX=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CXX=$ac_cv_prog_ac_ct_CXX\nif test -n \"$ac_ct_CXX\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CXX\" >&5\n$as_echo \"$ac_ct_CXX\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CXX\" && break\ndone\n\n  if test \"x$ac_ct_CXX\" = x; then\n    CXX=\"g++\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CXX=$ac_ct_CXX\n  fi\nfi\n\n  fi\nfi\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C++ compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C++ compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C++ compiler... \" >&6; }\nif ${ac_cv_cxx_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_cxx_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_cxx_compiler_gnu\" >&5\n$as_echo \"$ac_cv_cxx_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GXX=yes\nelse\n  GXX=\nfi\nac_test_CXXFLAGS=${CXXFLAGS+set}\nac_save_CXXFLAGS=$CXXFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CXX accepts -g\" >&5\n$as_echo_n \"checking whether $CXX accepts -g... \" >&6; }\nif ${ac_cv_prog_cxx_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_cxx_werror_flag=$ac_cxx_werror_flag\n   ac_cxx_werror_flag=yes\n   ac_cv_prog_cxx_g=no\n   CXXFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cxx_g=yes\nelse\n  CXXFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n\nelse\n  ac_cxx_werror_flag=$ac_save_cxx_werror_flag\n\t CXXFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cxx_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_cxx_werror_flag=$ac_save_cxx_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cxx_g\" >&5\n$as_echo \"$ac_cv_prog_cxx_g\" >&6; }\nif test \"$ac_test_CXXFLAGS\" = set; then\n  CXXFLAGS=$ac_save_CXXFLAGS\nelif test $ac_cv_prog_cxx_g = yes; then\n  if test \"$GXX\" = yes; then\n    CXXFLAGS=\"-g -O2\"\n  else\n    CXXFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GXX\" = yes; then\n    CXXFLAGS=\"-O2\"\n  else\n    CXXFLAGS=\n  fi\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\ndepcc=\"$CXX\"  am_compiler_list=\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc\" >&5\n$as_echo_n \"checking dependency style of $depcc... \" >&6; }\nif ${am_cv_CXX_dependencies_compiler_type+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_CXX_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n 's/^#*\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n  fi\n  am__universal=false\n  case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thusly:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_CXX_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_CXX_dependencies_compiler_type=none\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_CXX_dependencies_compiler_type\" >&5\n$as_echo \"$am_cv_CXX_dependencies_compiler_type\" >&6; }\nCXXDEPMODE=depmode=$am_cv_CXX_dependencies_compiler_type\n\n if\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_CXX_dependencies_compiler_type\" = gcc3; then\n  am__fastdepCXX_TRUE=\n  am__fastdepCXX_FALSE='#'\nelse\n  am__fastdepCXX_TRUE='#'\n  am__fastdepCXX_FALSE=\nfi\n\n\n\n\nfunc_stripname_cnf ()\n{\n  case $2 in\n  .*) func_stripname_result=`$ECHO \"$3\" | $SED \"s%^$1%%; s%\\\\\\\\$2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"$3\" | $SED \"s%^$1%%; s%$2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n\n      if test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  ac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to run the C++ preprocessor\" >&5\n$as_echo_n \"checking how to run the C++ preprocessor... \" >&6; }\nif test -z \"$CXXCPP\"; then\n  if ${ac_cv_prog_CXXCPP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n      # Double quotes because CXXCPP needs to be expanded\n    for CXXCPP in \"$CXX -E\" \"/lib/cpp\"\n    do\n      ac_preproc_ok=false\nfor ac_cxx_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n  break\nfi\n\n    done\n    ac_cv_prog_CXXCPP=$CXXCPP\n\nfi\n  CXXCPP=$ac_cv_prog_CXXCPP\nelse\n  ac_cv_prog_CXXCPP=$CXXCPP\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CXXCPP\" >&5\n$as_echo \"$CXXCPP\" >&6; }\nac_preproc_ok=false\nfor ac_cxx_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"C++ preprocessor \\\"$CXXCPP\\\" fails sanity check\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n\narchive_cmds_need_lc_CXX=no\nallow_undefined_flag_CXX=\nalways_export_symbols_CXX=no\narchive_expsym_cmds_CXX=\ncompiler_needs_object_CXX=no\nexport_dynamic_flag_spec_CXX=\nhardcode_direct_CXX=no\nhardcode_direct_absolute_CXX=no\nhardcode_libdir_flag_spec_CXX=\nhardcode_libdir_separator_CXX=\nhardcode_minus_L_CXX=no\nhardcode_shlibpath_var_CXX=unsupported\nhardcode_automatic_CXX=no\ninherit_rpath_CXX=no\nmodule_cmds_CXX=\nmodule_expsym_cmds_CXX=\nlink_all_deplibs_CXX=unknown\nold_archive_cmds_CXX=$old_archive_cmds\nreload_flag_CXX=$reload_flag\nreload_cmds_CXX=$reload_cmds\nno_undefined_flag_CXX=\nwhole_archive_flag_spec_CXX=\nenable_shared_with_static_runtimes_CXX=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\nobjext_CXX=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n\n\n\n\n\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n\n\n  # save warnings/boilerplate of simple test code\n  ac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n\n  ac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  compiler_CXX=$CC\n  func_cc_basename $compiler\ncc_basename=$func_cc_basename_result\n\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'\n    else\n      lt_prog_compiler_no_builtin_flag_CXX=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n\n\n# Check whether --with-gnu-ld was given.\nif test \"${with_gnu_ld+set}\" = set; then :\n  withval=$with_gnu_ld; test no = \"$withval\" || with_gnu_ld=yes\nelse\n  with_gnu_ld=no\nfi\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld used by $CC\" >&5\n$as_echo_n \"checking for ld used by $CC... \" >&6; }\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [\\\\/]* | ?:[\\\\/]*)\n      re_direlt='/[^/][^/]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for GNU ld\" >&5\n$as_echo_n \"checking for GNU ld... \" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for non-GNU ld\" >&5\n$as_echo_n \"checking for non-GNU ld... \" >&6; }\nfi\nif ${lt_cv_path_LD+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi\nfi\n\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LD\" >&5\n$as_echo \"$LD\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\ntest -z \"$LD\" && as_fn_error $? \"no acceptable ld found in \\$PATH\" \"$LINENO\" 5\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\n$as_echo_n \"checking if the linker ($LD) is GNU ld... \" >&6; }\nif ${lt_cv_prog_gnu_ld+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  # I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld\" >&5\n$as_echo \"$lt_cv_prog_gnu_ld\" >&6; }\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\n\n\n\n\n\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        archive_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        archive_expsym_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n        export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          whole_archive_flag_spec_CXX=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          whole_archive_flag_spec_CXX=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries\" >&5\n$as_echo_n \"checking whether the $compiler linker ($LD) supports shared libraries... \" >&6; }\n    ld_shlibs_CXX=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n      aix[4-9]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        archive_cmds_CXX=''\n        hardcode_direct_CXX=yes\n        hardcode_direct_absolute_CXX=yes\n        hardcode_libdir_separator_CXX=':'\n        link_all_deplibs_CXX=yes\n        file_list_spec_CXX='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          hardcode_direct_CXX=no\n          hardcode_direct_absolute_CXX=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[012]|aix4.[012].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    hardcode_direct_CXX=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    hardcode_minus_L_CXX=yes\n\t    hardcode_libdir_flag_spec_CXX='-L$libdir'\n\t    hardcode_libdir_separator_CXX=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        export_dynamic_flag_spec_CXX='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        always_export_symbols_CXX=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          no_undefined_flag_CXX='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath__CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath__CXX=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath__CXX\nfi\n\n          hardcode_libdir_flag_spec_CXX='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          archive_expsym_cmds_CXX='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    hardcode_libdir_flag_spec_CXX='$wl-R $libdir:/usr/lib:/lib'\n\t    allow_undefined_flag_CXX=\"-z nodefs\"\n\t    archive_expsym_cmds_CXX=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    if test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  if ${lt_cv_aix_libpath__CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_link \"$LINENO\"; then :\n\n  lt_aix_libpath_sed='\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }'\n  lt_cv_aix_libpath__CXX=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n  if test -z \"$lt_cv_aix_libpath__CXX\"; then\n    lt_cv_aix_libpath__CXX=/usr/lib:/lib\n  fi\n\nfi\n\n  aix_libpath=$lt_cv_aix_libpath__CXX\nfi\n\n\t    hardcode_libdir_flag_spec_CXX='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    no_undefined_flag_CXX=' $wl-bernotok'\n\t    allow_undefined_flag_CXX=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      whole_archive_flag_spec_CXX='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      whole_archive_flag_spec_CXX='$convenience'\n\t    fi\n\t    archive_cmds_need_lc_CXX=yes\n\t    archive_expsym_cmds_CXX='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([, ]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    archive_expsym_cmds_CXX=\"$archive_expsym_cmds_CXX\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  allow_undefined_flag_CXX=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  archive_cmds_CXX='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  ld_shlibs_CXX=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  ld_shlibs_CXX=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  hardcode_libdir_flag_spec_CXX=' '\n\t  allow_undefined_flag_CXX=unsupported\n\t  always_export_symbols_CXX=yes\n\t  file_list_spec_CXX='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  archive_cmds_CXX='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  archive_expsym_cmds_CXX='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, CXX)='true'\n\t  enable_shared_with_static_runtimes_CXX=yes\n\t  # Don't use ranlib\n\t  old_postinstall_cmds_CXX='chmod 644 $oldlib'\n\t  postlink_cmds_CXX='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  hardcode_libdir_flag_spec_CXX='-L$libdir'\n\t  export_dynamic_flag_spec_CXX='$wl--export-all-symbols'\n\t  allow_undefined_flag_CXX=unsupported\n\t  always_export_symbols_CXX=no\n\t  enable_shared_with_static_runtimes_CXX=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    archive_expsym_cmds_CXX='if   test DEF = \"`$SED -n     -e '\\''s/^[\t ]*//'\\''     -e '\\''/^\\(;.*\\)*$/d'\\''     -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p'\\''     -e q     $export_symbols`\" ; then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    ld_shlibs_CXX=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n\n\n  archive_cmds_need_lc_CXX=no\n  hardcode_direct_CXX=no\n  hardcode_automatic_CXX=yes\n  hardcode_shlibpath_var_CXX=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    whole_archive_flag_spec_CXX='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n\n  else\n    whole_archive_flag_spec_CXX=''\n  fi\n  link_all_deplibs_CXX=yes\n  allow_undefined_flag_CXX=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    archive_cmds_CXX=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    module_cmds_CXX=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    archive_expsym_cmds_CXX=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    module_expsym_cmds_CXX=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n       if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      archive_cmds_CXX=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      archive_expsym_cmds_CXX=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n\n  else\n  ld_shlibs_CXX=no\n  fi\n\n\t;;\n\n      os2*)\n\thardcode_libdir_flag_spec_CXX='-L$libdir'\n\thardcode_minus_L_CXX=yes\n\tallow_undefined_flag_CXX=unsupported\n\tshrext_cmds=.dll\n\tarchive_cmds_CXX='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\tarchive_expsym_cmds_CXX='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\told_archive_From_new_cmds_CXX='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\tenable_shared_with_static_runtimes_CXX=yes\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        ld_shlibs_CXX=no\n        ;;\n\n      freebsd-elf*)\n        archive_cmds_need_lc_CXX=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        ld_shlibs_CXX=yes\n        ;;\n\n      haiku*)\n        archive_cmds_CXX='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        link_all_deplibs_CXX=yes\n        ;;\n\n      hpux9*)\n        hardcode_libdir_flag_spec_CXX='$wl+b $wl$libdir'\n        hardcode_libdir_separator_CXX=:\n        export_dynamic_flag_spec_CXX='$wl-E'\n        hardcode_direct_CXX=yes\n        hardcode_minus_L_CXX=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            ld_shlibs_CXX=no\n            ;;\n          aCC*)\n            archive_cmds_CXX='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \" \\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              archive_cmds_CXX='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              ld_shlibs_CXX=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  hardcode_libdir_flag_spec_CXX='$wl+b $wl$libdir'\n\t  hardcode_libdir_separator_CXX=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      export_dynamic_flag_spec_CXX='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            hardcode_direct_CXX=no\n            hardcode_shlibpath_var_CXX=no\n            ;;\n          *)\n            hardcode_direct_CXX=yes\n            hardcode_direct_absolute_CXX=yes\n            hardcode_minus_L_CXX=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        archive_cmds_CXX='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        archive_cmds_CXX='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        archive_cmds_CXX='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \" \\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            archive_cmds_CXX='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            archive_cmds_CXX='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            archive_cmds_CXX='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      ld_shlibs_CXX=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[3-9]*)\n\thardcode_direct_CXX=no\n\thardcode_shlibpath_var_CXX=no\n\thardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\texport_dynamic_flag_spec_CXX='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\tarchive_cmds_CXX='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\tarchive_expsym_cmds_CXX='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    archive_cmds_CXX='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    old_archive_cmds_CXX='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    link_all_deplibs_CXX=yes\n\t    ;;\n        esac\n        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n        hardcode_libdir_separator_CXX=:\n        inherit_rpath_CXX=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    archive_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\\''s/\\([^()0-9A-Za-z{}]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    archive_expsym_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\\''s/\\([^()0-9A-Za-z{}]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    old_archive_cmds_CXX='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\tarchive_expsym_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        archive_cmds_CXX='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\tarchive_expsym_cmds_CXX='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    archive_cmds_need_lc_CXX=no\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\t    whole_archive_flag_spec_CXX='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [1-5].* | *pgcpp\\ [1-5].*)\n\t      prelink_cmds_CXX='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      old_archive_cmds_CXX='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      archive_cmds_CXX='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      archive_expsym_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    hardcode_libdir_flag_spec_CXX='$wl--rpath $wl$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\t    whole_archive_flag_spec_CXX='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    archive_expsym_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    hardcode_libdir_flag_spec_CXX='-rpath $libdir'\n\t    hardcode_libdir_separator_CXX=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n\t    export_dynamic_flag_spec_CXX='$wl--export-dynamic'\n\t    archive_cmds_CXX='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      archive_expsym_cmds_CXX='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      no_undefined_flag_CXX=' -zdefs'\n\t      archive_cmds_CXX='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      archive_expsym_cmds_CXX='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      hardcode_libdir_flag_spec_CXX='-R$libdir'\n\t      whole_archive_flag_spec_CXX='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      compiler_needs_object_CXX=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      old_archive_cmds_CXX='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\tld_shlibs_CXX=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  archive_cmds_CXX='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  hardcode_libdir_flag_spec_CXX='-R$libdir'\n\t  hardcode_direct_CXX=yes\n\t  hardcode_shlibpath_var_CXX=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        ld_shlibs_CXX=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  hardcode_direct_CXX=yes\n\t  hardcode_shlibpath_var_CXX=no\n\t  hardcode_direct_absolute_CXX=yes\n\t  archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    archive_expsym_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    export_dynamic_flag_spec_CXX='$wl-E'\n\t    whole_archive_flag_spec_CXX=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  ld_shlibs_CXX=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    archive_cmds_CXX='tempext=`echo $shared_ext | $SED -e '\\''s/\\([^()0-9A-Za-z{}]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    hardcode_libdir_flag_spec_CXX='$wl-rpath,$libdir'\n\t    hardcode_libdir_separator_CXX=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) old_archive_cmds_CXX='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) old_archive_cmds_CXX='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        allow_undefined_flag_CXX=' $wl-expect_unresolved $wl\\*'\n\t        archive_cmds_CXX='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        allow_undefined_flag_CXX=' -expect_unresolved \\*'\n\t        archive_cmds_CXX='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        archive_expsym_cmds_CXX='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        hardcode_libdir_flag_spec_CXX='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    hardcode_libdir_separator_CXX=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      allow_undefined_flag_CXX=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          archive_cmds_CXX='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'\n\t      hardcode_libdir_separator_CXX=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      ld_shlibs_CXX=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            archive_cmds_need_lc_CXX=yes\n\t    no_undefined_flag_CXX=' -zdefs'\n\t    archive_cmds_CXX='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    archive_expsym_cmds_CXX='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    hardcode_libdir_flag_spec_CXX='-R$libdir'\n\t    hardcode_shlibpath_var_CXX=no\n\t    case $host_os in\n\t      solaris2.[0-5] | solaris2.[0-5].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\twhole_archive_flag_spec_CXX='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    link_all_deplibs_CXX=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    old_archive_cmds_CXX='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    archive_cmds_CXX='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    old_archive_cmds_CXX='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      no_undefined_flag_CXX=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        archive_cmds_CXX='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        archive_expsym_cmds_CXX='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        archive_cmds_CXX='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        archive_expsym_cmds_CXX='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \" \\-L\"'\n\t      fi\n\n\t      hardcode_libdir_flag_spec_CXX='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[0-5] | solaris2.[0-5].*) ;;\n\t\t*)\n\t\t  whole_archive_flag_spec_CXX='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)\n      no_undefined_flag_CXX='$wl-z,text'\n      archive_cmds_need_lc_CXX=no\n      hardcode_shlibpath_var_CXX=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  archive_cmds_CXX='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds_CXX='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  archive_cmds_CXX='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  archive_expsym_cmds_CXX='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\tno_undefined_flag_CXX='$wl-z,text'\n\tallow_undefined_flag_CXX='$wl-z,nodefs'\n\tarchive_cmds_need_lc_CXX=no\n\thardcode_shlibpath_var_CXX=no\n\thardcode_libdir_flag_spec_CXX='$wl-R,$libdir'\n\thardcode_libdir_separator_CXX=':'\n\tlink_all_deplibs_CXX=yes\n\texport_dynamic_flag_spec_CXX='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    archive_cmds_CXX='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    archive_expsym_cmds_CXX='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    old_archive_cmds_CXX='$CC -Tprelink_objects $oldobjs~\n              '\"$old_archive_cmds_CXX\"\n\t    reload_cmds_CXX='$CC -Tprelink_objects $reload_objs~\n              '\"$reload_cmds_CXX\"\n\t    ;;\n\t  *)\n\t    archive_cmds_CXX='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    archive_expsym_cmds_CXX='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    ld_shlibs_CXX=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        ld_shlibs_CXX=no\n        ;;\n    esac\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_shlibs_CXX\" >&5\n$as_echo \"$ld_shlibs_CXX\" >&6; }\n    test no = \"$ld_shlibs_CXX\" && can_build_shared=no\n\n    GCC_CXX=$GXX\n    LD_CXX=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    # Dependencies to place before and after the object being linked:\npredep_objects_CXX=\npostdep_objects_CXX=\npredeps_CXX=\npostdeps_CXX=\ncompiler_lib_search_path_CXX=\n\ncat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\nif { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$compiler_lib_search_path_CXX\"; then\n\t     compiler_lib_search_path_CXX=$prev$p\n\t   else\n\t     compiler_lib_search_path_CXX=\"${compiler_lib_search_path_CXX} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$postdeps_CXX\"; then\n\t   postdeps_CXX=$prev$p\n\t else\n\t   postdeps_CXX=\"${postdeps_CXX} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$predep_objects_CXX\"; then\n\t   predep_objects_CXX=$p\n\t else\n\t   predep_objects_CXX=\"$predep_objects_CXX $p\"\n\t fi\n       else\n\t if test -z \"$postdep_objects_CXX\"; then\n\t   postdep_objects_CXX=$p\n\t else\n\t   postdep_objects_CXX=\"$postdep_objects_CXX $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling CXX test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\ncase $host_os in\ninterix[3-9]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  predep_objects_CXX=\n  postdep_objects_CXX=\n  postdeps_CXX=\n  ;;\nesac\n\n\ncase \" $postdeps_CXX \" in\n*\" -lc \"*) archive_cmds_need_lc_CXX=no ;;\nesac\n compiler_lib_search_dirs_CXX=\nif test -n \"${compiler_lib_search_path_CXX}\"; then\n compiler_lib_search_dirs_CXX=`echo \" ${compiler_lib_search_path_CXX}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    lt_prog_compiler_wl_CXX=\nlt_prog_compiler_pic_CXX=\nlt_prog_compiler_static_CXX=\n\n\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    lt_prog_compiler_wl_CXX='-Wl,'\n    lt_prog_compiler_static_CXX='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\tlt_prog_compiler_static_CXX='-Bstatic'\n      fi\n      lt_prog_compiler_pic_CXX='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            lt_prog_compiler_pic_CXX='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            lt_prog_compiler_pic_CXX='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      lt_prog_compiler_pic_CXX='-DDLL_EXPORT'\n      case $host_os in\n      os2*)\n\tlt_prog_compiler_static_CXX='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      lt_prog_compiler_pic_CXX='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      lt_prog_compiler_pic_CXX=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      lt_prog_compiler_static_CXX=\n      ;;\n    interix[3-9]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\tlt_prog_compiler_pic_CXX=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\tlt_prog_compiler_pic_CXX='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      lt_prog_compiler_pic_CXX='-fPIC -shared'\n      ;;\n    *)\n      lt_prog_compiler_pic_CXX='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[4-9]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  lt_prog_compiler_static_CXX='-Bstatic'\n\telse\n\t  lt_prog_compiler_static_CXX='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, CXX)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tlt_prog_compiler_pic_CXX='-DDLL_EXPORT'\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_static_CXX='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      lt_prog_compiler_pic_CXX='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_static_CXX='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      lt_prog_compiler_pic_CXX='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_static_CXX='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    lt_prog_compiler_wl_CXX='--backend -Wl,'\n\t    lt_prog_compiler_pic_CXX='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    lt_prog_compiler_static_CXX='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-fPIC'\n\t    lt_prog_compiler_static_CXX='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-fpic'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    lt_prog_compiler_pic_CXX=\n\t    lt_prog_compiler_static_CXX='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[cC]* | mpixl[cC]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-qpic'\n\t    lt_prog_compiler_static_CXX='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      lt_prog_compiler_pic_CXX='-KPIC'\n\t      lt_prog_compiler_static_CXX='-Bstatic'\n\t      lt_prog_compiler_wl_CXX='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    lt_prog_compiler_pic_CXX='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd* | netbsdelf*-gnu)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        lt_prog_compiler_pic_CXX='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    lt_prog_compiler_wl_CXX='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    lt_prog_compiler_pic_CXX=\n\t    lt_prog_compiler_static_CXX='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    lt_prog_compiler_wl_CXX='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    lt_prog_compiler_pic_CXX='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    lt_prog_compiler_pic_CXX='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    lt_prog_compiler_wl_CXX='-Wl,'\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    lt_prog_compiler_static_CXX='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    lt_prog_compiler_pic_CXX='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\tlt_prog_compiler_can_build_shared_CXX=no\n\t;;\n    esac\n  fi\n\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    lt_prog_compiler_pic_CXX=\n    ;;\n  *)\n    lt_prog_compiler_pic_CXX=\"$lt_prog_compiler_pic_CXX -DPIC\"\n    ;;\nesac\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC\" >&5\n$as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\nif ${lt_cv_prog_compiler_pic_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic_CXX=$lt_prog_compiler_pic_CXX\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic_CXX\" >&6; }\nlt_prog_compiler_pic_CXX=$lt_cv_prog_compiler_pic_CXX\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$lt_prog_compiler_pic_CXX\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic_CXX works\" >&5\n$as_echo_n \"checking if $compiler PIC flag $lt_prog_compiler_pic_CXX works... \" >&6; }\nif ${lt_cv_prog_compiler_pic_works_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_pic_works_CXX=no\n   ac_outfile=conftest.$ac_objext\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$lt_prog_compiler_pic_CXX -DPIC\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_pic_works_CXX=yes\n     fi\n   fi\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_pic_works_CXX\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_pic_works_CXX\"; then\n    case $lt_prog_compiler_pic_CXX in\n     \"\" | \" \"*) ;;\n     *) lt_prog_compiler_pic_CXX=\" $lt_prog_compiler_pic_CXX\" ;;\n     esac\nelse\n    lt_prog_compiler_pic_CXX=\n     lt_prog_compiler_can_build_shared_CXX=no\nfi\n\nfi\n\n\n\n\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$lt_prog_compiler_wl_CXX eval lt_tmp_static_flag=\\\"$lt_prog_compiler_static_CXX\\\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works\" >&5\n$as_echo_n \"checking if $compiler static flag $lt_tmp_static_flag works... \" >&6; }\nif ${lt_cv_prog_compiler_static_works_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_static_works_CXX=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $lt_tmp_static_flag\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&5\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         lt_cv_prog_compiler_static_works_CXX=yes\n       fi\n     else\n       lt_cv_prog_compiler_static_works_CXX=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_static_works_CXX\" >&6; }\n\nif test yes = \"$lt_cv_prog_compiler_static_works_CXX\"; then\n    :\nelse\n    lt_prog_compiler_static_CXX=\nfi\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o_CXX=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o_CXX=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o_CXX\" >&6; }\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext\" >&5\n$as_echo_n \"checking if $compiler supports -c -o file.$ac_objext... \" >&6; }\nif ${lt_cv_prog_compiler_c_o_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_prog_compiler_c_o_CXX=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&5)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       lt_cv_prog_compiler_c_o_CXX=yes\n     fi\n   fi\n   chmod u+w . 2>&5\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o_CXX\" >&5\n$as_echo \"$lt_cv_prog_compiler_c_o_CXX\" >&6; }\n\n\n\n\nhard_links=nottested\nif test no = \"$lt_cv_prog_compiler_c_o_CXX\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links\" >&5\n$as_echo_n \"checking if we can lock with hard links... \" >&6; }\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hard_links\" >&5\n$as_echo \"$hard_links\" >&6; }\n  if test no = \"$hard_links\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&5\n$as_echo \"$as_me: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe\" >&2;}\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries\" >&5\n$as_echo_n \"checking whether the $compiler linker ($LD) supports shared libraries... \" >&6; }\n\n  export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'\n  case $host_os in\n  aix[4-9]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      export_symbols_cmds_CXX='`func_echo_all $NM | $SED -e '\\''s/B\\([^B]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && (substr(\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    export_symbols_cmds_CXX=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      exclude_expsyms_CXX='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[BCDGRS][ ]/s/.*[ ]\\([^ ]*\\)/\\1 DATA/;s/^.*[ ]__nm__\\([^ ]*\\)[ ][^ ]*/\\1 DATA/;/^I[ ]/d;/^[AITW][ ]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      exclude_expsyms_CXX='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'\n      ;;\n    esac\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    link_all_deplibs_CXX=no\n    ;;\n  *)\n    export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_shlibs_CXX\" >&5\n$as_echo \"$ld_shlibs_CXX\" >&6; }\ntest no = \"$ld_shlibs_CXX\" && can_build_shared=no\n\nwith_gnu_ld_CXX=$with_gnu_ld\n\n\n\n\n\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$archive_cmds_need_lc_CXX\" in\nx|xyes)\n  # Assume -lc should be added\n  archive_cmds_need_lc_CXX=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $archive_cmds_CXX in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in\" >&5\n$as_echo_n \"checking whether -lc should be explicitly linked in... \" >&6; }\nif ${lt_cv_archive_cmds_need_lc_CXX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  $RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n  (eval $ac_compile) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$lt_prog_compiler_wl_CXX\n\t  pic_flag=$lt_prog_compiler_pic_CXX\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$allow_undefined_flag_CXX\n\t  allow_undefined_flag_CXX=\n\t  if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$archive_cmds_CXX 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1\\\"\"; } >&5\n  (eval $archive_cmds_CXX 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1) 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n\t  then\n\t    lt_cv_archive_cmds_need_lc_CXX=no\n\t  else\n\t    lt_cv_archive_cmds_need_lc_CXX=yes\n\t  fi\n\t  allow_undefined_flag_CXX=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_archive_cmds_need_lc_CXX\" >&5\n$as_echo \"$lt_cv_archive_cmds_need_lc_CXX\" >&6; }\n      archive_cmds_need_lc_CXX=$lt_cv_archive_cmds_need_lc_CXX\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics\" >&5\n$as_echo_n \"checking dynamic linker characteristics... \" >&6; }\n\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\n\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[4-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[01] | aix4.[01].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a(lib.so.V)'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V($shared_archive_member_spec.o), lib.a(lib.so.V)\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a(lib.so.V), lib.so.V($shared_archive_member_spec.o)\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([^/]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[45]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([a-zA-Z]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | $GREP ';[c-zC-Z]:/' >/dev/null; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\n\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[23].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[01]* | freebsdelf3.[01]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \\\n  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[3-9]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  hardcode_libdir_flag_spec_CXX='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  if ${lt_cv_shlibpath_overrides_runpath+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$lt_prog_compiler_wl_CXX\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $hardcode_libdir_flag_spec_CXX\\\"\"\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_link \"$LINENO\"; then :\n  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null; then :\n  lt_cv_shlibpath_overrides_runpath=yes\nfi\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n\nfi\n\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\$2)); skip = 1; } { if (!skip) print \\$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsdelf*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='NetBSD ld.elf_so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $dynamic_linker\" >&5\n$as_echo \"$dynamic_linker\" >&6; }\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs\" >&5\n$as_echo_n \"checking how to hardcode library paths into programs... \" >&6; }\nhardcode_action_CXX=\nif test -n \"$hardcode_libdir_flag_spec_CXX\" ||\n   test -n \"$runpath_var_CXX\" ||\n   test yes = \"$hardcode_automatic_CXX\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$hardcode_direct_CXX\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, CXX)\" &&\n     test no != \"$hardcode_minus_L_CXX\"; then\n    # Linking always hardcodes the temporary library directory.\n    hardcode_action_CXX=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    hardcode_action_CXX=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  hardcode_action_CXX=unsupported\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $hardcode_action_CXX\" >&5\n$as_echo \"$hardcode_action_CXX\" >&6; }\n\nif test relink = \"$hardcode_action_CXX\" ||\n   test yes = \"$inherit_rpath_CXX\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n\n\n\n\n\n\n\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\nif test \"x$CC\" != xcc; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC and cc understand -c and -o together\" >&5\n$as_echo_n \"checking whether $CC and cc understand -c and -o together... \" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether cc understands -c and -o together\" >&5\n$as_echo_n \"checking whether cc understands -c and -o together... \" >&6; }\nfi\nset dummy $CC; ac_cc=`$as_echo \"$2\" |\n\t\t      sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`\nif eval \\${ac_cv_prog_cc_${ac_cc}_c_o+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\n# Make sure it works both with $CC and with simple cc.\n# We do the test twice because some compilers refuse to overwrite an\n# existing .o file with -o, though they will create one.\nac_try='$CC -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\nrm -f conftest2.*\nif { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } &&\n   test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; };\nthen\n  eval ac_cv_prog_cc_${ac_cc}_c_o=yes\n  if test \"x$CC\" != xcc; then\n    # Test first that cc exists at all.\n    if { ac_try='cc -c conftest.$ac_ext >&5'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n      ac_try='cc -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\n      rm -f conftest2.*\n      if { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } &&\n\t test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; };\n      then\n\t# cc works too.\n\t:\n      else\n\t# cc exists but doesn't like -o.\n\teval ac_cv_prog_cc_${ac_cc}_c_o=no\n      fi\n    fi\n  fi\nelse\n  eval ac_cv_prog_cc_${ac_cc}_c_o=no\nfi\nrm -f core conftest*\n\nfi\nif eval test \\$ac_cv_prog_cc_${ac_cc}_c_o = yes; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n\n$as_echo \"#define NO_MINUS_C_MINUS_O 1\" >>confdefs.h\n\nfi\n\n\n###PKG_PROG_PKG_CONFIG Intentionally not using pkg-config\n\n### Checks for libraries\n\n\n\n\n\n### Checks for header files\n\n### MacOS does not have malloc.h\nfor ac_header in unistd.h sys/types.h regex.h malloc.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n### for uintptr_t\nfor ac_header in stdint.h inttypes.h stddef.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\nfor ac_header in windows.h\ndo :\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"windows.h\" \"ac_cv_header_windows_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_windows_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_WINDOWS_H 1\n_ACEOF\n\nfi\n\ndone\n\n\nfor ac_header in zlib.h\ndo :\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"zlib.h\" \"ac_cv_header_zlib_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_zlib_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_ZLIB_H 1\n_ACEOF\n\nfi\n\ndone\n\nif test \"x${ac_cv_header_zlib_h}\" = \"xyes\"; then :\n   have_pc_zlib=\"yes\" ; echo \"have zlib\" ;\n      DWARF_LIBS=\"${DWARF_LIBS} -lz\"\nelse\n   have_pc_zlib=\"no\" ; echo \"no zlib\"\nfi\n\n### for use in casts to uint to avoid 32bit warnings.\n### Also needed by C++ cstdint\n\n  ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_uintptr_t\" = xyes; then :\n\n$as_echo \"#define HAVE_UINTPTR_T 1\" >>confdefs.h\n\nelse\n  for ac_type in 'unsigned int' 'unsigned long int' \\\n\t'unsigned long long int'; do\n       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(sizeof (void *) <= sizeof ($ac_type))];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\ncat >>confdefs.h <<_ACEOF\n#define uintptr_t $ac_type\n_ACEOF\n\n\t  ac_type=\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n       test -z \"$ac_type\" && break\n     done\nfi\n\n\n\n  ac_fn_c_check_type \"$LINENO\" \"intptr_t\" \"ac_cv_type_intptr_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_intptr_t\" = xyes; then :\n\n$as_echo \"#define HAVE_INTPTR_T 1\" >>confdefs.h\n\nelse\n  for ac_type in 'int' 'long int' 'long long int'; do\n       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(sizeof (void *) <= sizeof ($ac_type))];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\ncat >>confdefs.h <<_ACEOF\n#define intptr_t $ac_type\n_ACEOF\n\n\t  ac_type=\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n       test -z \"$ac_type\" && break\n     done\nfi\n\n\n### Now we know uintptr_t is either in stdint.h or\n### is defined in config.h by configure.\n\n# test Elf headers in the preprocessor path search\nCPPFLAGS_save=${CPPFLAGS}\n### we set $dwarf_with_libelf above.\nif test  $dwarf_with_libelf = \"yes\" ; then\n  for ac_header in sgidefs.h\ndo :\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"sgidefs.h\" \"ac_cv_header_sgidefs_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_sgidefs_h\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_SGIDEFS_H 1\n_ACEOF\n\nfi\n\ndone\n\n  for ac_header in libelf.h libelf/libelf.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n  for ac_header in elf.h elfaccess.h sys/elf_386.h sys/elf_amd64.h sys/elf_SPARC.h sys/ia64/elf.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n\n  ### if no libelf.h add no -lelf and turn off\n  ### libelf recognition.\n  if test \"x${ac_cv_header_libelf_h}\" != \"xyes\" -a \"x${ac_cv_header_libelf_libelf_h}\" != \"xyes\" ; then :\n   dwarf_with_libelf=\"no\"\n      echo \"no libelf headers, no libelf\"\nelse\n   DWARF_LIBS=\"${DWARF_LIBS} -lelf\"\n      dwarf_with_libelf=\"yes\"\n      echo \"Allowing use of libelf.\"\n\n$as_echo \"#define DWARF_WITH_LIBELF 1\" >>confdefs.h\n\n\nfi\n\n\n### begin checking for Elf structs\n# Elf64_Rela in elf.h\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rela p;\np.r_offset = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_RELA 1\" >>confdefs.h\n\n     have_elf64_rela=\"yes\"\n\nelse\n  have_elf64_rela=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\nif test \"x${have_elf64_rela}\" = \"xno\"; then :\n\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rela p;\np.r_offset = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_RELA 1\" >>confdefs.h\n\n          have_elf64_rela=\"yes\"\n\nelse\n  have_elf64_rela=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     CPPFLAGS=${CPPFLAGS_save}\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Elf64_Rela in elf.h\" >&5\n$as_echo_n \"checking for Elf64_Rela in elf.h... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_elf64_rela}\" >&5\n$as_echo \"${have_elf64_rela}\" >&6; }\n\n# Elf64_Rel in elf.h\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rel p;\np.r_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_R_INFO 1\" >>confdefs.h\n\n     have_elf64_rel=\"yes\"\n\nelse\n  have_elf64_rel=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\nif test \"x${have_elf64_rel}\" = \"xno\"; then :\n\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Rel p;\np.r_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_R_INFO 1\" >>confdefs.h\n\n          have_elf64_rel=\"yes\"\n\nelse\n  have_elf64_rel=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     CPPFLAGS=${CPPFLAGS_save}\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Elf64_Rel in elf.h\" >&5\n$as_echo_n \"checking for Elf64_Rel in elf.h... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_elf64_rel}\" >&5\n$as_echo \"${have_elf64_rel}\" >&6; }\n\n# Elf64_Sym in elf.h\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Sym p;\np.st_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_SYM 1\" >>confdefs.h\n\n     have_elf64_sym=\"yes\"\n\nelse\n  have_elf64_sym=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n\nif test \"x${have_elf64_sym}\" = \"xno\"; then :\n\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n\nint\nmain ()\n{\n\nElf64_Sym p;\np.st_info = 1;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_ELF64_SYM 1\" >>confdefs.h\n\n          have_elf64_sym=\"yes\"\n\nelse\n  have_elf64_sym=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\n     CPPFLAGS=${CPPFLAGS_save}\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Elf64_Sym in elf.h\" >&5\n$as_echo_n \"checking for Elf64_Sym in elf.h... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_elf64_sym}\" >&5\n$as_echo \"${have_elf64_sym}\" >&6; }\n### end checking for Elf structs\n\n### Checks for Elf structures\n# test if struct _Elf is used instead of struct Elf\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n/* This must be at global scope */\nstruct _Elf;\ntypedef struct _Elf Elf;\n\nint\nmain ()\n{\n\nstruct _Elf *a = 0;\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n     have_struct__elf=\"yes\"\n     struct_elf=\"struct _Elf\"\n\nelse\n\n     have_struct__elf=\"no\"\n     struct_elf=\"struct Elf\"\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether struct _Elf is used\" >&5\n$as_echo_n \"checking whether struct _Elf is used... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_struct__elf}\" >&5\n$as_echo \"${have_struct__elf}\" >&6; }\nelse\n  ### end where dwarf_with_libelf == \"no\" via\n  ### --disable-libelf\n  have_struct__elf=\"no\"\n  struct_elf=\"struct Elf\"\n  have_elf64_rela=\"no\"\n  have_elf64_rel=\"no\"\n  have_elf64_sym=\"no\"\nfi\n\n\n### Checks for compiler characteristics\n\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether byte ordering is bigendian\" >&5\n$as_echo_n \"checking whether byte ordering is bigendian... \" >&6; }\nif ${ac_cv_c_bigendian+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_c_bigendian=unknown\n    # See if we're dealing with a universal compiler.\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifndef __APPLE_CC__\n\t       not a universal capable compiler\n\t     #endif\n\t     typedef int dummy;\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n\t# Check for potential -arch flags.  It is not universal unless\n\t# there are at least two -arch flags with different values.\n\tac_arch=\n\tac_prev=\n\tfor ac_word in $CC $CFLAGS $CPPFLAGS $LDFLAGS; do\n\t if test -n \"$ac_prev\"; then\n\t   case $ac_word in\n\t     i?86 | x86_64 | ppc | ppc64)\n\t       if test -z \"$ac_arch\" || test \"$ac_arch\" = \"$ac_word\"; then\n\t\t ac_arch=$ac_word\n\t       else\n\t\t ac_cv_c_bigendian=universal\n\t\t break\n\t       fi\n\t       ;;\n\t   esac\n\t   ac_prev=\n\t elif test \"x$ac_word\" = \"x-arch\"; then\n\t   ac_prev=arch\n\t fi\n       done\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n    if test $ac_cv_c_bigendian = unknown; then\n      # See if sys/param.h defines the BYTE_ORDER macro.\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <sys/types.h>\n\t     #include <sys/param.h>\n\nint\nmain ()\n{\n#if ! (defined BYTE_ORDER && defined BIG_ENDIAN \\\n\t\t     && defined LITTLE_ENDIAN && BYTE_ORDER && BIG_ENDIAN \\\n\t\t     && LITTLE_ENDIAN)\n\t      bogus endian macros\n\t     #endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  # It does; now see whether it defined to BIG_ENDIAN or not.\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <sys/types.h>\n\t\t#include <sys/param.h>\n\nint\nmain ()\n{\n#if BYTE_ORDER != BIG_ENDIAN\n\t\t not big endian\n\t\t#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_c_bigendian=yes\nelse\n  ac_cv_c_bigendian=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n    fi\n    if test $ac_cv_c_bigendian = unknown; then\n      # See if <limits.h> defines _LITTLE_ENDIAN or _BIG_ENDIAN (e.g., Solaris).\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\nint\nmain ()\n{\n#if ! (defined _LITTLE_ENDIAN || defined _BIG_ENDIAN)\n\t      bogus endian macros\n\t     #endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  # It does; now see whether it defined to _BIG_ENDIAN or not.\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\nint\nmain ()\n{\n#ifndef _BIG_ENDIAN\n\t\t not big endian\n\t\t#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_c_bigendian=yes\nelse\n  ac_cv_c_bigendian=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n    fi\n    if test $ac_cv_c_bigendian = unknown; then\n      # Compile a test program.\n      if test \"$cross_compiling\" = yes; then :\n  # Try to guess by grepping values from an object file.\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nshort int ascii_mm[] =\n\t\t  { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n\t\tshort int ascii_ii[] =\n\t\t  { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\n\t\tint use_ascii (int i) {\n\t\t  return ascii_mm[i] + ascii_ii[i];\n\t\t}\n\t\tshort int ebcdic_ii[] =\n\t\t  { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n\t\tshort int ebcdic_mm[] =\n\t\t  { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\n\t\tint use_ebcdic (int i) {\n\t\t  return ebcdic_mm[i] + ebcdic_ii[i];\n\t\t}\n\t\textern int foo;\n\nint\nmain ()\n{\nreturn use_ascii (foo) == use_ebcdic (foo);\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  if grep BIGenDianSyS conftest.$ac_objext >/dev/null; then\n\t      ac_cv_c_bigendian=yes\n\t    fi\n\t    if grep LiTTleEnDian conftest.$ac_objext >/dev/null ; then\n\t      if test \"$ac_cv_c_bigendian\" = unknown; then\n\t\tac_cv_c_bigendian=no\n\t      else\n\t\t# finding both strings is unlikely to happen, but who knows?\n\t\tac_cv_c_bigendian=unknown\n\t      fi\n\t    fi\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nmain ()\n{\n\n\t     /* Are we little or big endian?  From Harbison&Steele.  */\n\t     union\n\t     {\n\t       long int l;\n\t       char c[sizeof (long int)];\n\t     } u;\n\t     u.l = 1;\n\t     return u.c[sizeof (long int) - 1] == 1;\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n  ac_cv_c_bigendian=no\nelse\n  ac_cv_c_bigendian=yes\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\n    fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_bigendian\" >&5\n$as_echo \"$ac_cv_c_bigendian\" >&6; }\n case $ac_cv_c_bigendian in #(\n   yes)\n\n$as_echo \"#define WORDS_BIGENDIAN 1\" >>confdefs.h\n;; #(\n   no)\n      ;; #(\n   universal)\n\n$as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n\n     ;; #(\n   *)\n     as_fn_error $? \"unknown endianness\n presetting ac_cv_c_bigendian=no (or yes) will help\" \"$LINENO\" 5 ;;\n esac\n\n\n# gcc accepts even totally bogus -Wno flags. Other compilers..no\n# -Wno-long-long suppresses warnings on 'long long'\n# -Wno-pedantic-ms-format (which only exists in mingw)\n# suppresses warnings about I64 printf format.\nif  test \"x$enable_wall\" = \"xyes\" ; then :\n\n       cxx_compiler_flags=\"-Wall -Wextra -Wno-unused-private-field -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Werror\"\n\n       c_compiler_flags=\"-Wall -Wextra -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Wmissing-prototypes -Wdeclaration-after-statement -Wbad-function-cast -Wmissing-parameter-type -Wnested-externs -Werror\"\n\n\nfi\nif  test \"x$enable_nonstandardprintf\" = \"xyes\" ; then :\n\n       cxx_compiler_flags=\"$cxx_compiler_flags -Wno-pedantic-ms-format\"\n\n       c_compiler_flags=\"$c_compiler_flags -Wno-pedantic-ms-format\"\n\n\nfi\n\n\noption=\"${cxx_compiler_flags}\"\nCXXFLAGS_save=\"${CXXFLAGS}\"\nCXXFLAGS=\"${CXXFLAGS} ${option}\"\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C++ compiler supports ${cxx_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C++ compiler supports ${cxx_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCXXFLAGS=\"${CXXFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CXXFLAGS_WARN=\"${DWARF_CXXFLAGS_WARN} ${cxx_compiler_flags}\"\nfi\n\n\nif test \"${have_flag}\" != \"yes\"; then :\n\noption=\"${cxx_compiler_flags}\"\nCXXFLAGS_save=\"${CXXFLAGS}\"\nCXXFLAGS=\"${CXXFLAGS} ${option}\"\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C++ compiler supports ${cxx_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C++ compiler supports ${cxx_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCXXFLAGS=\"${CXXFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CXXFLAGS_WARN=\"${DWARF_CXXFLAGS_WARN} ${cxx_compiler_flags}\"\nfi\n\n\nfi\n\n\noption=\"${c_compiler_flags}\"\nCFLAGS_save=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} ${option}\"\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler supports ${c_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C compiler supports ${c_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCFLAGS=\"${CFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CFLAGS_WARN=\"${DWARF_CFLAGS_WARN} ${c_compiler_flags}\"\nfi\n\n\nif test \"${have_flag}\" != \"yes\"; then :\n\noption=\"${c_compiler_flags}\"\nCFLAGS_save=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} ${option}\"\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler supports ${c_compiler_flags}\" >&5\n$as_echo_n \"checking whether the C compiler supports ${c_compiler_flags}... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  have_flag=\"yes\"\nelse\n  have_flag=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_flag}\" >&5\n$as_echo \"${have_flag}\" >&6; }\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCFLAGS=\"${CFLAGS_save}\"\n\nif test \"x${have_flag}\" = \"xyes\"; then :\n  DWARF_CFLAGS_WARN=\"${DWARF_CFLAGS_WARN} ${c_compiler_flags}\"\nfi\n\n\nfi\n\n\n# unused attribute\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nstatic unsigned int foo(unsigned int x, __attribute__ ((unused)) int y){\n    unsigned int x2 = x + 1;\n    return x2;\n}\nint goo() {\n    unsigned int y = 0;\n    y = foo(12, y);\n}\n\nint\nmain ()\n{\n\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n     have_unused=\"yes\"\n\n$as_echo \"#define HAVE_UNUSED_ATTRIBUTE 1\" >>confdefs.h\n\n\nelse\n  have_unused=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether \\\"unused\\\" attribute is available\" >&5\n$as_echo_n \"checking whether \\\"unused\\\" attribute is available... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_unused}\" >&5\n$as_echo \"${have_unused}\" >&6; }\n\n# sanitize\nif test \"x${enable_sanitize}\" = \"xyes\"; then :\n\n     CFLAGS_save=${CFLAGS}\n     CFLAGS=\"${CFLAGS} -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n     DWARF_CFLAGS=\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n          enable_sanitize=\"yes\"\n          DWARF_CFLAGS=\"$DWARF_CFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n          LDFLAGS=\"$LDFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n\nelse\n  enable_sanitize=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     CFLAGS=\"${CFLAGS_save} ${DWARF_CFLAGS}\"\n     DWARF_CFLAGS=\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether sanitize options are used\" >&5\n$as_echo_n \"checking whether sanitize options are used... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sanitize}\" >&5\n$as_echo \"${enable_sanitize}\" >&6; }\n\n\n### Checks for linker characteristics\n\n\n### Checks for library functions\n\nac_fn_c_check_type \"$LINENO\" \"size_t\" \"ac_cv_type_size_t\" \"$ac_includes_default\"\nif test \"x$ac_cv_type_size_t\" = xyes; then :\n\nelse\n\ncat >>confdefs.h <<_ACEOF\n#define size_t unsigned int\n_ACEOF\n\nfi\n\n# The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n# for constant arguments.  Useless!\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for working alloca.h\" >&5\n$as_echo_n \"checking for working alloca.h... \" >&6; }\nif ${ac_cv_working_alloca_h+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <alloca.h>\nint\nmain ()\n{\nchar *p = (char *) alloca (2 * sizeof (int));\n\t\t\t  if (p) return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_working_alloca_h=yes\nelse\n  ac_cv_working_alloca_h=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_working_alloca_h\" >&5\n$as_echo \"$ac_cv_working_alloca_h\" >&6; }\nif test $ac_cv_working_alloca_h = yes; then\n\n$as_echo \"#define HAVE_ALLOCA_H 1\" >>confdefs.h\n\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for alloca\" >&5\n$as_echo_n \"checking for alloca... \" >&6; }\nif ${ac_cv_func_alloca_works+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __GNUC__\n# define alloca __builtin_alloca\n#else\n# ifdef _MSC_VER\n#  include <malloc.h>\n#  define alloca _alloca\n# else\n#  ifdef HAVE_ALLOCA_H\n#   include <alloca.h>\n#  else\n#   ifdef _AIX\n #pragma alloca\n#   else\n#    ifndef alloca /* predefined by HP cc +Olibcalls */\nvoid *alloca (size_t);\n#    endif\n#   endif\n#  endif\n# endif\n#endif\n\nint\nmain ()\n{\nchar *p = (char *) alloca (1);\n\t\t\t\t    if (p) return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_func_alloca_works=yes\nelse\n  ac_cv_func_alloca_works=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_alloca_works\" >&5\n$as_echo \"$ac_cv_func_alloca_works\" >&6; }\n\nif test $ac_cv_func_alloca_works = yes; then\n\n$as_echo \"#define HAVE_ALLOCA 1\" >>confdefs.h\n\nelse\n  # The SVR3 libPW and SVR4 libucb both contain incompatible functions\n# that cause trouble.  Some versions do not even contain alloca or\n# contain a buggy version.  If you still want to use their alloca,\n# use ar to extract alloca.o from them instead of compiling alloca.c.\n\nALLOCA=\\${LIBOBJDIR}alloca.$ac_objext\n\n$as_echo \"#define C_ALLOCA 1\" >>confdefs.h\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether \\`alloca.c' needs Cray hooks\" >&5\n$as_echo_n \"checking whether \\`alloca.c' needs Cray hooks... \" >&6; }\nif ${ac_cv_os_cray+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#if defined CRAY && ! defined CRAY2\nwebecray\n#else\nwenotbecray\n#endif\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"webecray\" >/dev/null 2>&1; then :\n  ac_cv_os_cray=yes\nelse\n  ac_cv_os_cray=no\nfi\nrm -f conftest*\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_os_cray\" >&5\n$as_echo \"$ac_cv_os_cray\" >&6; }\nif test $ac_cv_os_cray = yes; then\n  for ac_func in _getb67 GETB67 getb67; do\n    as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\nac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\nif eval test \\\"x\\$\"$as_ac_var\"\\\" = x\"yes\"; then :\n\ncat >>confdefs.h <<_ACEOF\n#define CRAY_STACKSEG_END $ac_func\n_ACEOF\n\n    break\nfi\n\n  done\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking stack direction for C alloca\" >&5\n$as_echo_n \"checking stack direction for C alloca... \" >&6; }\nif ${ac_cv_c_stack_direction+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test \"$cross_compiling\" = yes; then :\n  ac_cv_c_stack_direction=0\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_includes_default\nint\nfind_stack_direction (int *addr, int depth)\n{\n  int dir, dummy = 0;\n  if (! addr)\n    addr = &dummy;\n  *addr = addr < &dummy ? 1 : addr == &dummy ? 0 : -1;\n  dir = depth ? find_stack_direction (addr, depth - 1) : 0;\n  return dir + dummy;\n}\n\nint\nmain (int argc, char **argv)\n{\n  return find_stack_direction (0, argc + !argv + 20) < 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n  ac_cv_c_stack_direction=1\nelse\n  ac_cv_c_stack_direction=-1\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_stack_direction\" >&5\n$as_echo \"$ac_cv_c_stack_direction\" >&6; }\ncat >>confdefs.h <<_ACEOF\n#define STACK_DIRECTION $ac_cv_c_stack_direction\n_ACEOF\n\n\nfi\n\n\nif test  $dwarf_with_libelf = \"yes\" ; then\n# elf64_getehdr\nCPPFLAGS_save=${CPPFLAGS}\nCPPFLAGS=\"${CPPFLAGS}\"\nLIBS_save=${LIBS}\nLIBS=\"${LIBS} ${DWARF_LIBS}\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing elf64_getehdr\" >&5\n$as_echo_n \"checking for library containing elf64_getehdr... \" >&6; }\nif ${ac_cv_search_elf64_getehdr+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_func_search_save_LIBS=$LIBS\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar elf64_getehdr ();\nint\nmain ()\n{\nreturn elf64_getehdr ();\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_lib in '' elf; do\n  if test -z \"$ac_lib\"; then\n    ac_res=\"none required\"\n  else\n    ac_res=-l$ac_lib\n    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n  fi\n  if ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_search_elf64_getehdr=$ac_res\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext\n  if ${ac_cv_search_elf64_getehdr+:} false; then :\n  break\nfi\ndone\nif ${ac_cv_search_elf64_getehdr+:} false; then :\n\nelse\n  ac_cv_search_elf64_getehdr=no\nfi\nrm conftest.$ac_ext\nLIBS=$ac_func_search_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_elf64_getehdr\" >&5\n$as_echo \"$ac_cv_search_elf64_getehdr\" >&6; }\nac_res=$ac_cv_search_elf64_getehdr\nif test \"$ac_res\" != no; then :\n  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n\n     have_getehdr=\"yes\"\n\n$as_echo \"#define HAVE_ELF64_GETEHDR 1\" >>confdefs.h\n\n\nelse\n  have_getehdr=\"no\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing elf64_getshdr\" >&5\n$as_echo_n \"checking for library containing elf64_getshdr... \" >&6; }\nif ${ac_cv_search_elf64_getshdr+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_func_search_save_LIBS=$LIBS\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar elf64_getshdr ();\nint\nmain ()\n{\nreturn elf64_getshdr ();\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_lib in '' elf; do\n  if test -z \"$ac_lib\"; then\n    ac_res=\"none required\"\n  else\n    ac_res=-l$ac_lib\n    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n  fi\n  if ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_search_elf64_getshdr=$ac_res\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext\n  if ${ac_cv_search_elf64_getshdr+:} false; then :\n  break\nfi\ndone\nif ${ac_cv_search_elf64_getshdr+:} false; then :\n\nelse\n  ac_cv_search_elf64_getshdr=no\nfi\nrm conftest.$ac_ext\nLIBS=$ac_func_search_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_elf64_getshdr\" >&5\n$as_echo \"$ac_cv_search_elf64_getshdr\" >&6; }\nac_res=$ac_cv_search_elf64_getshdr\nif test \"$ac_res\" != no; then :\n  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n\n     have_getshdr=\"yes\"\n\n$as_echo \"#define HAVE_ELF64_GETSHDR 1\" >>confdefs.h\n\n\nelse\n  have_getshdr=\"no\"\nfi\n\nCPPFLAGS=${CPPFLAGS_save}\nLIBS=${LIBS_save}\nelse\n  have_getehdr=\"no\"\n  have_getshdr=\"no\"\nfi\n\nif test \"x${have_pc_zlib}\" = \"xno\"  -a \"x${have_zlib}\" = \"xyes\"; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing z\" >&5\n$as_echo_n \"checking for library containing z... \" >&6; }\nif ${ac_cv_search_z+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_func_search_save_LIBS=$LIBS\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar z ();\nint\nmain ()\n{\nreturn z ();\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_lib in '' have_zlib=\"yes\"; do\n  if test -z \"$ac_lib\"; then\n    ac_res=\"none required\"\n  else\n    ac_res=-l$ac_lib\n    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n  fi\n  if ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_search_z=$ac_res\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext\n  if ${ac_cv_search_z+:} false; then :\n  break\nfi\ndone\nif ${ac_cv_search_z+:} false; then :\n\nelse\n  ac_cv_search_z=no\nfi\nrm conftest.$ac_ext\nLIBS=$ac_func_search_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_z\" >&5\n$as_echo \"$ac_cv_search_z\" >&6; }\nac_res=$ac_cv_search_z\nif test \"$ac_res\" != no; then :\n  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n  have_zlib=\"no\"\nfi\n\nfi\n\nif test \"x${have_pc_zlib}\" = \"xyes\"  -o \"x${have_zlib}\" = \"xyes\"; then :\n\n     have_zlib=\"yes\"\n\n$as_echo \"#define HAVE_ZLIB 1\" >>confdefs.h\n\n\nelse\n\n     have_zlib=\"no\"\n\nfi\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_REGEX_H\n# include <regex.h>\n#endif\n\nint\nmain ()\n{\n\nint i;\nregex_t r;\nint cflags = REG_EXTENDED;\nconst char *s = \"abc\";\ni = regcomp(&r,s,cflags);\nregfree(&r);\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\n\n$as_echo \"#define HAVE_REGEX 1\" >>confdefs.h\n\n     have_regex=\"yes\"\n\nelse\n  have_regex=\"no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for regex library\" >&5\n$as_echo_n \"checking for regex library... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${have_regex}\" >&5\n$as_echo \"${have_regex}\" >&6; }\n\n### Checks for system services\n\nac_config_files=\"$ac_config_files Makefile libdwarf/Makefile dwarfdump/Makefile dwarfgen/Makefile dwarfexample/Makefile\"\n\n\n### libdwarf needs to be adjusted to support struct Elf\n### or struct _Elf, whichever the system defines in libelf.\nac_config_commands=\"$ac_config_commands libdwarf/libdwarf.h\"\n\n\n\ncat >confcache <<\\_ACEOF\n# This file is a shell script that caches the results of configure\n# tests run on this system so they can be shared between configure\n# scripts and configure runs, see configure's option --config-cache.\n# It is not useful on other systems.  If it contains results you don't\n# want to keep, you may remove or edit it.\n#\n# config.status only pays attention to the cache file if you give it\n# the --recheck option to rerun configure.\n#\n# `ac_cv_env_foo' variables (set or unset) will be overridden when\n# loading this file, other *unset* `ac_cv_foo' will be assigned the\n# following values.\n\n_ACEOF\n\n# The following way of writing the cache mishandles newlines in values,\n# but we know of no workaround that is simple, portable, and efficient.\n# So, we kill variables containing newlines.\n# Ultrix sh set writes to stderr and can't be redirected directly,\n# and sets the high bit in the cache file unless we assign to the vars.\n(\n  for ac_var in `(set) 2>&1 | sed -n 's/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n\n  (set) 2>&1 |\n    case $as_nl`(ac_space=' '; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      # `set' does not quote correctly, so add quotes: double-quote\n      # substitution turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\.\n      sed -n \\\n\t\"s/'/'\\\\\\\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\\\2'/p\"\n      ;; #(\n    *)\n      # `set' quotes correctly as required by POSIX, so do not add quotes.\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n) |\n  sed '\n     /^ac_cv_env_/b end\n     t clear\n     :clear\n     s/^\\([^=]*\\)=\\(.*[{}].*\\)$/test \"${\\1+set}\" = set || &/\n     t end\n     s/^\\([^=]*\\)=\\(.*\\)$/\\1=${\\1=\\2}/\n     :end' >>confcache\nif diff \"$cache_file\" confcache >/dev/null 2>&1; then :; else\n  if test -w \"$cache_file\"; then\n    if test \"x$cache_file\" != \"x/dev/null\"; then\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: updating cache $cache_file\" >&5\n$as_echo \"$as_me: updating cache $cache_file\" >&6;}\n      if test ! -f \"$cache_file\" || test -h \"$cache_file\"; then\n\tcat confcache >\"$cache_file\"\n      else\n        case $cache_file in #(\n        */* | ?:*)\n\t  mv -f confcache \"$cache_file\"$$ &&\n\t  mv -f \"$cache_file\"$$ \"$cache_file\" ;; #(\n        *)\n\t  mv -f confcache \"$cache_file\" ;;\n\tesac\n      fi\n    fi\n  else\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file\" >&5\n$as_echo \"$as_me: not updating unwritable cache $cache_file\" >&6;}\n  fi\nfi\nrm -f confcache\n\ntest \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n# Let make expand exec_prefix.\ntest \"x$exec_prefix\" = xNONE && exec_prefix='${prefix}'\n\nDEFS=-DHAVE_CONFIG_H\n\nac_libobjs=\nac_ltlibobjs=\nU=\nfor ac_i in : $LIBOBJS; do test \"x$ac_i\" = x: && continue\n  # 1. Remove the extension, and $U if already installed.\n  ac_script='s/\\$U\\././;s/\\.o$//;s/\\.obj$//'\n  ac_i=`$as_echo \"$ac_i\" | sed \"$ac_script\"`\n  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR\n  #    will be set to the directory where LIBOBJS objects are built.\n  as_fn_append ac_libobjs \" \\${LIBOBJDIR}$ac_i\\$U.$ac_objext\"\n  as_fn_append ac_ltlibobjs \" \\${LIBOBJDIR}$ac_i\"'$U.lo'\ndone\nLIBOBJS=$ac_libobjs\n\nLTLIBOBJS=$ac_ltlibobjs\n\n\nif test -z \"${HAVE_DWARFGEN_TRUE}\" && test -z \"${HAVE_DWARFGEN_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"HAVE_DWARFGEN\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${HAVE_DWARFEXAMPLE_TRUE}\" && test -z \"${HAVE_DWARFEXAMPLE_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"HAVE_DWARFEXAMPLE\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${HAVE_WIN32_TRUE}\" && test -z \"${HAVE_WIN32_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"HAVE_WIN32\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking that generated files are newer than configure\" >&5\n$as_echo_n \"checking that generated files are newer than configure... \" >&6; }\n   if test -n \"$am_sleep_pid\"; then\n     # Hide warnings about reused PIDs.\n     wait $am_sleep_pid 2>/dev/null\n   fi\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: done\" >&5\n$as_echo \"done\" >&6; }\nif test -z \"${AMDEP_TRUE}\" && test -z \"${AMDEP_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"AMDEP\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\nif test -z \"${am__fastdepCC_TRUE}\" && test -z \"${am__fastdepCC_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"am__fastdepCC\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\n if test -n \"$EXEEXT\"; then\n  am__EXEEXT_TRUE=\n  am__EXEEXT_FALSE='#'\nelse\n  am__EXEEXT_TRUE='#'\n  am__EXEEXT_FALSE=\nfi\n\nif test -z \"${am__fastdepCXX_TRUE}\" && test -z \"${am__fastdepCXX_FALSE}\"; then\n  as_fn_error $? \"conditional \\\"am__fastdepCXX\\\" was never defined.\nUsually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\nfi\n\n\n: \"${CONFIG_STATUS=./config.status}\"\nac_write_fail=0\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files $CONFIG_STATUS\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS\" >&5\n$as_echo \"$as_me: creating $CONFIG_STATUS\" >&6;}\nas_write_fail=0\ncat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n# Run this file to recreate the current configuration.\n# Compiler output produced by configure, useful for debugging\n# configure, is in config.log if it exists.\n\ndebug=false\nac_cs_recheck=false\nac_cs_silent=false\n\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$CONFIG_STATUS <<\\_ASEOF || as_write_fail=1\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\n\nexec 6>&1\n## ----------------------------------- ##\n## Main body of $CONFIG_STATUS script. ##\n## ----------------------------------- ##\n_ASEOF\ntest $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# Save the log message, to keep $0 and so on meaningful, and to\n# report actual input values of CONFIG_FILES etc. instead of their\n# values after options handling.\nac_log=\"\nThis file was extended by libdwarf $as_me 20201017, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  CONFIG_FILES    = $CONFIG_FILES\n  CONFIG_HEADERS  = $CONFIG_HEADERS\n  CONFIG_LINKS    = $CONFIG_LINKS\n  CONFIG_COMMANDS = $CONFIG_COMMANDS\n  $ $0 $@\n\non `(hostname || uname -n) 2>/dev/null | sed 1q`\n\"\n\n_ACEOF\n\ncase $ac_config_files in *\"\n\"*) set x $ac_config_files; shift; ac_config_files=$*;;\nesac\n\ncase $ac_config_headers in *\"\n\"*) set x $ac_config_headers; shift; ac_config_headers=$*;;\nesac\n\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n# Files that config.status was made for.\nconfig_files=\"$ac_config_files\"\nconfig_headers=\"$ac_config_headers\"\nconfig_commands=\"$ac_config_commands\"\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nac_cs_usage=\"\\\n\\`$as_me' instantiates files and other configuration actions\nfrom templates according to the current configuration.  Unless the files\nand actions are specified as TAGs, all are instantiated by default.\n\nUsage: $0 [OPTION]... [TAG]...\n\n  -h, --help       print this help, then exit\n  -V, --version    print version number and configuration settings, then exit\n      --config     print configuration, then exit\n  -q, --quiet, --silent\n                   do not print progress messages\n  -d, --debug      don't remove temporary files\n      --recheck    update $as_me by reconfiguring in the same conditions\n      --file=FILE[:TEMPLATE]\n                   instantiate the configuration file FILE\n      --header=FILE[:TEMPLATE]\n                   instantiate the configuration header FILE\n\nConfiguration files:\n$config_files\n\nConfiguration headers:\n$config_headers\n\nConfiguration commands:\n$config_commands\n\nReport bugs to <libdwarf-list -at- linuxmail -dot- org>.\"\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_cs_config=\"`$as_echo \"$ac_configure_args\" | sed 's/^ //; s/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\"\nac_cs_version=\"\\\\\nlibdwarf config.status 20201017\nconfigured by $0, generated by GNU Autoconf 2.69,\n  with options \\\\\"\\$ac_cs_config\\\\\"\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis config.status script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\"\n\nac_pwd='$ac_pwd'\nsrcdir='$srcdir'\nINSTALL='$INSTALL'\nMKDIR_P='$MKDIR_P'\nAWK='$AWK'\ntest -n \"\\$AWK\" || AWK=awk\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# The default lists apply if the user does not specify any file.\nac_need_defaults=:\nwhile test $# != 0\ndo\n  case $1 in\n  --*=?*)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=`expr \"X$1\" : 'X[^=]*=\\(.*\\)'`\n    ac_shift=:\n    ;;\n  --*=)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=\n    ac_shift=:\n    ;;\n  *)\n    ac_option=$1\n    ac_optarg=$2\n    ac_shift=shift\n    ;;\n  esac\n\n  case $ac_option in\n  # Handling of the options.\n  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)\n    ac_cs_recheck=: ;;\n  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )\n    $as_echo \"$ac_cs_version\"; exit ;;\n  --config | --confi | --conf | --con | --co | --c )\n    $as_echo \"$ac_cs_config\"; exit ;;\n  --debug | --debu | --deb | --de | --d | -d )\n    debug=: ;;\n  --file | --fil | --fi | --f )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    '') as_fn_error $? \"missing file argument\" ;;\n    esac\n    as_fn_append CONFIG_FILES \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --header | --heade | --head | --hea )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    as_fn_append CONFIG_HEADERS \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --he | --h)\n    # Conflict between --help and --header\n    as_fn_error $? \"ambiguous option: \\`$1'\nTry \\`$0 --help' for more information.\";;\n  --help | --hel | -h )\n    $as_echo \"$ac_cs_usage\"; exit ;;\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil | --si | --s)\n    ac_cs_silent=: ;;\n\n  # This is an error.\n  -*) as_fn_error $? \"unrecognized option: \\`$1'\nTry \\`$0 --help' for more information.\" ;;\n\n  *) as_fn_append ac_config_targets \" $1\"\n     ac_need_defaults=false ;;\n\n  esac\n  shift\ndone\n\nac_configure_extra_args=\n\nif $ac_cs_silent; then\n  exec 6>/dev/null\n  ac_configure_extra_args=\"$ac_configure_extra_args --silent\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nif \\$ac_cs_recheck; then\n  set X $SHELL '$0' $ac_configure_args \\$ac_configure_extra_args --no-create --no-recursion\n  shift\n  \\$as_echo \"running CONFIG_SHELL=$SHELL \\$*\" >&6\n  CONFIG_SHELL='$SHELL'\n  export CONFIG_SHELL\n  exec \"\\$@\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nexec 5>>config.log\n{\n  echo\n  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX\n## Running $as_me. ##\n_ASBOX\n  $as_echo \"$ac_log\"\n} >&5\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n#\n# INIT-COMMANDS\n#\nAMDEP_TRUE=\"$AMDEP_TRUE\" MAKE=\"${MAKE-make}\"\n\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\nmacro_version='`$ECHO \"$macro_version\" | $SED \"$delay_single_quote_subst\"`'\nmacro_revision='`$ECHO \"$macro_revision\" | $SED \"$delay_single_quote_subst\"`'\nAS='`$ECHO \"$AS\" | $SED \"$delay_single_quote_subst\"`'\nDLLTOOL='`$ECHO \"$DLLTOOL\" | $SED \"$delay_single_quote_subst\"`'\nOBJDUMP='`$ECHO \"$OBJDUMP\" | $SED \"$delay_single_quote_subst\"`'\nenable_shared='`$ECHO \"$enable_shared\" | $SED \"$delay_single_quote_subst\"`'\nenable_static='`$ECHO \"$enable_static\" | $SED \"$delay_single_quote_subst\"`'\npic_mode='`$ECHO \"$pic_mode\" | $SED \"$delay_single_quote_subst\"`'\nenable_fast_install='`$ECHO \"$enable_fast_install\" | $SED \"$delay_single_quote_subst\"`'\nshared_archive_member_spec='`$ECHO \"$shared_archive_member_spec\" | $SED \"$delay_single_quote_subst\"`'\nSHELL='`$ECHO \"$SHELL\" | $SED \"$delay_single_quote_subst\"`'\nECHO='`$ECHO \"$ECHO\" | $SED \"$delay_single_quote_subst\"`'\nPATH_SEPARATOR='`$ECHO \"$PATH_SEPARATOR\" | $SED \"$delay_single_quote_subst\"`'\nhost_alias='`$ECHO \"$host_alias\" | $SED \"$delay_single_quote_subst\"`'\nhost='`$ECHO \"$host\" | $SED \"$delay_single_quote_subst\"`'\nhost_os='`$ECHO \"$host_os\" | $SED \"$delay_single_quote_subst\"`'\nbuild_alias='`$ECHO \"$build_alias\" | $SED \"$delay_single_quote_subst\"`'\nbuild='`$ECHO \"$build\" | $SED \"$delay_single_quote_subst\"`'\nbuild_os='`$ECHO \"$build_os\" | $SED \"$delay_single_quote_subst\"`'\nSED='`$ECHO \"$SED\" | $SED \"$delay_single_quote_subst\"`'\nXsed='`$ECHO \"$Xsed\" | $SED \"$delay_single_quote_subst\"`'\nGREP='`$ECHO \"$GREP\" | $SED \"$delay_single_quote_subst\"`'\nEGREP='`$ECHO \"$EGREP\" | $SED \"$delay_single_quote_subst\"`'\nFGREP='`$ECHO \"$FGREP\" | $SED \"$delay_single_quote_subst\"`'\nLD='`$ECHO \"$LD\" | $SED \"$delay_single_quote_subst\"`'\nNM='`$ECHO \"$NM\" | $SED \"$delay_single_quote_subst\"`'\nLN_S='`$ECHO \"$LN_S\" | $SED \"$delay_single_quote_subst\"`'\nmax_cmd_len='`$ECHO \"$max_cmd_len\" | $SED \"$delay_single_quote_subst\"`'\nac_objext='`$ECHO \"$ac_objext\" | $SED \"$delay_single_quote_subst\"`'\nexeext='`$ECHO \"$exeext\" | $SED \"$delay_single_quote_subst\"`'\nlt_unset='`$ECHO \"$lt_unset\" | $SED \"$delay_single_quote_subst\"`'\nlt_SP2NL='`$ECHO \"$lt_SP2NL\" | $SED \"$delay_single_quote_subst\"`'\nlt_NL2SP='`$ECHO \"$lt_NL2SP\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_to_host_file_cmd='`$ECHO \"$lt_cv_to_host_file_cmd\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_to_tool_file_cmd='`$ECHO \"$lt_cv_to_tool_file_cmd\" | $SED \"$delay_single_quote_subst\"`'\nreload_flag='`$ECHO \"$reload_flag\" | $SED \"$delay_single_quote_subst\"`'\nreload_cmds='`$ECHO \"$reload_cmds\" | $SED \"$delay_single_quote_subst\"`'\ndeplibs_check_method='`$ECHO \"$deplibs_check_method\" | $SED \"$delay_single_quote_subst\"`'\nfile_magic_cmd='`$ECHO \"$file_magic_cmd\" | $SED \"$delay_single_quote_subst\"`'\nfile_magic_glob='`$ECHO \"$file_magic_glob\" | $SED \"$delay_single_quote_subst\"`'\nwant_nocaseglob='`$ECHO \"$want_nocaseglob\" | $SED \"$delay_single_quote_subst\"`'\nsharedlib_from_linklib_cmd='`$ECHO \"$sharedlib_from_linklib_cmd\" | $SED \"$delay_single_quote_subst\"`'\nAR='`$ECHO \"$AR\" | $SED \"$delay_single_quote_subst\"`'\nAR_FLAGS='`$ECHO \"$AR_FLAGS\" | $SED \"$delay_single_quote_subst\"`'\narchiver_list_spec='`$ECHO \"$archiver_list_spec\" | $SED \"$delay_single_quote_subst\"`'\nSTRIP='`$ECHO \"$STRIP\" | $SED \"$delay_single_quote_subst\"`'\nRANLIB='`$ECHO \"$RANLIB\" | $SED \"$delay_single_quote_subst\"`'\nold_postinstall_cmds='`$ECHO \"$old_postinstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\nold_postuninstall_cmds='`$ECHO \"$old_postuninstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_cmds='`$ECHO \"$old_archive_cmds\" | $SED \"$delay_single_quote_subst\"`'\nlock_old_archive_extraction='`$ECHO \"$lock_old_archive_extraction\" | $SED \"$delay_single_quote_subst\"`'\nCC='`$ECHO \"$CC\" | $SED \"$delay_single_quote_subst\"`'\nCFLAGS='`$ECHO \"$CFLAGS\" | $SED \"$delay_single_quote_subst\"`'\ncompiler='`$ECHO \"$compiler\" | $SED \"$delay_single_quote_subst\"`'\nGCC='`$ECHO \"$GCC\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_pipe='`$ECHO \"$lt_cv_sys_global_symbol_pipe\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_cdecl='`$ECHO \"$lt_cv_sys_global_symbol_to_cdecl\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_import='`$ECHO \"$lt_cv_sys_global_symbol_to_import\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_c_name_address='`$ECHO \"$lt_cv_sys_global_symbol_to_c_name_address\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix='`$ECHO \"$lt_cv_sys_global_symbol_to_c_name_address_lib_prefix\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_nm_interface='`$ECHO \"$lt_cv_nm_interface\" | $SED \"$delay_single_quote_subst\"`'\nnm_file_list_spec='`$ECHO \"$nm_file_list_spec\" | $SED \"$delay_single_quote_subst\"`'\nlt_sysroot='`$ECHO \"$lt_sysroot\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_truncate_bin='`$ECHO \"$lt_cv_truncate_bin\" | $SED \"$delay_single_quote_subst\"`'\nobjdir='`$ECHO \"$objdir\" | $SED \"$delay_single_quote_subst\"`'\nMAGIC_CMD='`$ECHO \"$MAGIC_CMD\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_no_builtin_flag='`$ECHO \"$lt_prog_compiler_no_builtin_flag\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_pic='`$ECHO \"$lt_prog_compiler_pic\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_wl='`$ECHO \"$lt_prog_compiler_wl\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_static='`$ECHO \"$lt_prog_compiler_static\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_prog_compiler_c_o='`$ECHO \"$lt_cv_prog_compiler_c_o\" | $SED \"$delay_single_quote_subst\"`'\nneed_locks='`$ECHO \"$need_locks\" | $SED \"$delay_single_quote_subst\"`'\nMANIFEST_TOOL='`$ECHO \"$MANIFEST_TOOL\" | $SED \"$delay_single_quote_subst\"`'\nDSYMUTIL='`$ECHO \"$DSYMUTIL\" | $SED \"$delay_single_quote_subst\"`'\nNMEDIT='`$ECHO \"$NMEDIT\" | $SED \"$delay_single_quote_subst\"`'\nLIPO='`$ECHO \"$LIPO\" | $SED \"$delay_single_quote_subst\"`'\nOTOOL='`$ECHO \"$OTOOL\" | $SED \"$delay_single_quote_subst\"`'\nOTOOL64='`$ECHO \"$OTOOL64\" | $SED \"$delay_single_quote_subst\"`'\nlibext='`$ECHO \"$libext\" | $SED \"$delay_single_quote_subst\"`'\nshrext_cmds='`$ECHO \"$shrext_cmds\" | $SED \"$delay_single_quote_subst\"`'\nextract_expsyms_cmds='`$ECHO \"$extract_expsyms_cmds\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds_need_lc='`$ECHO \"$archive_cmds_need_lc\" | $SED \"$delay_single_quote_subst\"`'\nenable_shared_with_static_runtimes='`$ECHO \"$enable_shared_with_static_runtimes\" | $SED \"$delay_single_quote_subst\"`'\nexport_dynamic_flag_spec='`$ECHO \"$export_dynamic_flag_spec\" | $SED \"$delay_single_quote_subst\"`'\nwhole_archive_flag_spec='`$ECHO \"$whole_archive_flag_spec\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_needs_object='`$ECHO \"$compiler_needs_object\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_new_cmds='`$ECHO \"$old_archive_from_new_cmds\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_expsyms_cmds='`$ECHO \"$old_archive_from_expsyms_cmds\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds='`$ECHO \"$archive_cmds\" | $SED \"$delay_single_quote_subst\"`'\narchive_expsym_cmds='`$ECHO \"$archive_expsym_cmds\" | $SED \"$delay_single_quote_subst\"`'\nmodule_cmds='`$ECHO \"$module_cmds\" | $SED \"$delay_single_quote_subst\"`'\nmodule_expsym_cmds='`$ECHO \"$module_expsym_cmds\" | $SED \"$delay_single_quote_subst\"`'\nwith_gnu_ld='`$ECHO \"$with_gnu_ld\" | $SED \"$delay_single_quote_subst\"`'\nallow_undefined_flag='`$ECHO \"$allow_undefined_flag\" | $SED \"$delay_single_quote_subst\"`'\nno_undefined_flag='`$ECHO \"$no_undefined_flag\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_flag_spec='`$ECHO \"$hardcode_libdir_flag_spec\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_separator='`$ECHO \"$hardcode_libdir_separator\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct='`$ECHO \"$hardcode_direct\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct_absolute='`$ECHO \"$hardcode_direct_absolute\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_minus_L='`$ECHO \"$hardcode_minus_L\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_shlibpath_var='`$ECHO \"$hardcode_shlibpath_var\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_automatic='`$ECHO \"$hardcode_automatic\" | $SED \"$delay_single_quote_subst\"`'\ninherit_rpath='`$ECHO \"$inherit_rpath\" | $SED \"$delay_single_quote_subst\"`'\nlink_all_deplibs='`$ECHO \"$link_all_deplibs\" | $SED \"$delay_single_quote_subst\"`'\nalways_export_symbols='`$ECHO \"$always_export_symbols\" | $SED \"$delay_single_quote_subst\"`'\nexport_symbols_cmds='`$ECHO \"$export_symbols_cmds\" | $SED \"$delay_single_quote_subst\"`'\nexclude_expsyms='`$ECHO \"$exclude_expsyms\" | $SED \"$delay_single_quote_subst\"`'\ninclude_expsyms='`$ECHO \"$include_expsyms\" | $SED \"$delay_single_quote_subst\"`'\nprelink_cmds='`$ECHO \"$prelink_cmds\" | $SED \"$delay_single_quote_subst\"`'\npostlink_cmds='`$ECHO \"$postlink_cmds\" | $SED \"$delay_single_quote_subst\"`'\nfile_list_spec='`$ECHO \"$file_list_spec\" | $SED \"$delay_single_quote_subst\"`'\nvariables_saved_for_relink='`$ECHO \"$variables_saved_for_relink\" | $SED \"$delay_single_quote_subst\"`'\nneed_lib_prefix='`$ECHO \"$need_lib_prefix\" | $SED \"$delay_single_quote_subst\"`'\nneed_version='`$ECHO \"$need_version\" | $SED \"$delay_single_quote_subst\"`'\nversion_type='`$ECHO \"$version_type\" | $SED \"$delay_single_quote_subst\"`'\nrunpath_var='`$ECHO \"$runpath_var\" | $SED \"$delay_single_quote_subst\"`'\nshlibpath_var='`$ECHO \"$shlibpath_var\" | $SED \"$delay_single_quote_subst\"`'\nshlibpath_overrides_runpath='`$ECHO \"$shlibpath_overrides_runpath\" | $SED \"$delay_single_quote_subst\"`'\nlibname_spec='`$ECHO \"$libname_spec\" | $SED \"$delay_single_quote_subst\"`'\nlibrary_names_spec='`$ECHO \"$library_names_spec\" | $SED \"$delay_single_quote_subst\"`'\nsoname_spec='`$ECHO \"$soname_spec\" | $SED \"$delay_single_quote_subst\"`'\ninstall_override_mode='`$ECHO \"$install_override_mode\" | $SED \"$delay_single_quote_subst\"`'\npostinstall_cmds='`$ECHO \"$postinstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\npostuninstall_cmds='`$ECHO \"$postuninstall_cmds\" | $SED \"$delay_single_quote_subst\"`'\nfinish_cmds='`$ECHO \"$finish_cmds\" | $SED \"$delay_single_quote_subst\"`'\nfinish_eval='`$ECHO \"$finish_eval\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_into_libs='`$ECHO \"$hardcode_into_libs\" | $SED \"$delay_single_quote_subst\"`'\nsys_lib_search_path_spec='`$ECHO \"$sys_lib_search_path_spec\" | $SED \"$delay_single_quote_subst\"`'\nconfigure_time_dlsearch_path='`$ECHO \"$configure_time_dlsearch_path\" | $SED \"$delay_single_quote_subst\"`'\nconfigure_time_lt_sys_library_path='`$ECHO \"$configure_time_lt_sys_library_path\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_action='`$ECHO \"$hardcode_action\" | $SED \"$delay_single_quote_subst\"`'\nenable_dlopen='`$ECHO \"$enable_dlopen\" | $SED \"$delay_single_quote_subst\"`'\nenable_dlopen_self='`$ECHO \"$enable_dlopen_self\" | $SED \"$delay_single_quote_subst\"`'\nenable_dlopen_self_static='`$ECHO \"$enable_dlopen_self_static\" | $SED \"$delay_single_quote_subst\"`'\nold_striplib='`$ECHO \"$old_striplib\" | $SED \"$delay_single_quote_subst\"`'\nstriplib='`$ECHO \"$striplib\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_dirs='`$ECHO \"$compiler_lib_search_dirs\" | $SED \"$delay_single_quote_subst\"`'\npredep_objects='`$ECHO \"$predep_objects\" | $SED \"$delay_single_quote_subst\"`'\npostdep_objects='`$ECHO \"$postdep_objects\" | $SED \"$delay_single_quote_subst\"`'\npredeps='`$ECHO \"$predeps\" | $SED \"$delay_single_quote_subst\"`'\npostdeps='`$ECHO \"$postdeps\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_path='`$ECHO \"$compiler_lib_search_path\" | $SED \"$delay_single_quote_subst\"`'\nLD_CXX='`$ECHO \"$LD_CXX\" | $SED \"$delay_single_quote_subst\"`'\nreload_flag_CXX='`$ECHO \"$reload_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nreload_cmds_CXX='`$ECHO \"$reload_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_cmds_CXX='`$ECHO \"$old_archive_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_CXX='`$ECHO \"$compiler_CXX\" | $SED \"$delay_single_quote_subst\"`'\nGCC_CXX='`$ECHO \"$GCC_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_no_builtin_flag_CXX='`$ECHO \"$lt_prog_compiler_no_builtin_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_pic_CXX='`$ECHO \"$lt_prog_compiler_pic_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_wl_CXX='`$ECHO \"$lt_prog_compiler_wl_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_prog_compiler_static_CXX='`$ECHO \"$lt_prog_compiler_static_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlt_cv_prog_compiler_c_o_CXX='`$ECHO \"$lt_cv_prog_compiler_c_o_CXX\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds_need_lc_CXX='`$ECHO \"$archive_cmds_need_lc_CXX\" | $SED \"$delay_single_quote_subst\"`'\nenable_shared_with_static_runtimes_CXX='`$ECHO \"$enable_shared_with_static_runtimes_CXX\" | $SED \"$delay_single_quote_subst\"`'\nexport_dynamic_flag_spec_CXX='`$ECHO \"$export_dynamic_flag_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\nwhole_archive_flag_spec_CXX='`$ECHO \"$whole_archive_flag_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_needs_object_CXX='`$ECHO \"$compiler_needs_object_CXX\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_new_cmds_CXX='`$ECHO \"$old_archive_from_new_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nold_archive_from_expsyms_cmds_CXX='`$ECHO \"$old_archive_from_expsyms_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\narchive_cmds_CXX='`$ECHO \"$archive_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\narchive_expsym_cmds_CXX='`$ECHO \"$archive_expsym_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nmodule_cmds_CXX='`$ECHO \"$module_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nmodule_expsym_cmds_CXX='`$ECHO \"$module_expsym_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nwith_gnu_ld_CXX='`$ECHO \"$with_gnu_ld_CXX\" | $SED \"$delay_single_quote_subst\"`'\nallow_undefined_flag_CXX='`$ECHO \"$allow_undefined_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nno_undefined_flag_CXX='`$ECHO \"$no_undefined_flag_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_flag_spec_CXX='`$ECHO \"$hardcode_libdir_flag_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_libdir_separator_CXX='`$ECHO \"$hardcode_libdir_separator_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct_CXX='`$ECHO \"$hardcode_direct_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_direct_absolute_CXX='`$ECHO \"$hardcode_direct_absolute_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_minus_L_CXX='`$ECHO \"$hardcode_minus_L_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_shlibpath_var_CXX='`$ECHO \"$hardcode_shlibpath_var_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_automatic_CXX='`$ECHO \"$hardcode_automatic_CXX\" | $SED \"$delay_single_quote_subst\"`'\ninherit_rpath_CXX='`$ECHO \"$inherit_rpath_CXX\" | $SED \"$delay_single_quote_subst\"`'\nlink_all_deplibs_CXX='`$ECHO \"$link_all_deplibs_CXX\" | $SED \"$delay_single_quote_subst\"`'\nalways_export_symbols_CXX='`$ECHO \"$always_export_symbols_CXX\" | $SED \"$delay_single_quote_subst\"`'\nexport_symbols_cmds_CXX='`$ECHO \"$export_symbols_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nexclude_expsyms_CXX='`$ECHO \"$exclude_expsyms_CXX\" | $SED \"$delay_single_quote_subst\"`'\ninclude_expsyms_CXX='`$ECHO \"$include_expsyms_CXX\" | $SED \"$delay_single_quote_subst\"`'\nprelink_cmds_CXX='`$ECHO \"$prelink_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\npostlink_cmds_CXX='`$ECHO \"$postlink_cmds_CXX\" | $SED \"$delay_single_quote_subst\"`'\nfile_list_spec_CXX='`$ECHO \"$file_list_spec_CXX\" | $SED \"$delay_single_quote_subst\"`'\nhardcode_action_CXX='`$ECHO \"$hardcode_action_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_dirs_CXX='`$ECHO \"$compiler_lib_search_dirs_CXX\" | $SED \"$delay_single_quote_subst\"`'\npredep_objects_CXX='`$ECHO \"$predep_objects_CXX\" | $SED \"$delay_single_quote_subst\"`'\npostdep_objects_CXX='`$ECHO \"$postdep_objects_CXX\" | $SED \"$delay_single_quote_subst\"`'\npredeps_CXX='`$ECHO \"$predeps_CXX\" | $SED \"$delay_single_quote_subst\"`'\npostdeps_CXX='`$ECHO \"$postdeps_CXX\" | $SED \"$delay_single_quote_subst\"`'\ncompiler_lib_search_path_CXX='`$ECHO \"$compiler_lib_search_path_CXX\" | $SED \"$delay_single_quote_subst\"`'\n\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in AS \\\nDLLTOOL \\\nOBJDUMP \\\nSHELL \\\nECHO \\\nPATH_SEPARATOR \\\nSED \\\nGREP \\\nEGREP \\\nFGREP \\\nLD \\\nNM \\\nLN_S \\\nlt_SP2NL \\\nlt_NL2SP \\\nreload_flag \\\ndeplibs_check_method \\\nfile_magic_cmd \\\nfile_magic_glob \\\nwant_nocaseglob \\\nsharedlib_from_linklib_cmd \\\nAR \\\nAR_FLAGS \\\narchiver_list_spec \\\nSTRIP \\\nRANLIB \\\nCC \\\nCFLAGS \\\ncompiler \\\nlt_cv_sys_global_symbol_pipe \\\nlt_cv_sys_global_symbol_to_cdecl \\\nlt_cv_sys_global_symbol_to_import \\\nlt_cv_sys_global_symbol_to_c_name_address \\\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix \\\nlt_cv_nm_interface \\\nnm_file_list_spec \\\nlt_cv_truncate_bin \\\nlt_prog_compiler_no_builtin_flag \\\nlt_prog_compiler_pic \\\nlt_prog_compiler_wl \\\nlt_prog_compiler_static \\\nlt_cv_prog_compiler_c_o \\\nneed_locks \\\nMANIFEST_TOOL \\\nDSYMUTIL \\\nNMEDIT \\\nLIPO \\\nOTOOL \\\nOTOOL64 \\\nshrext_cmds \\\nexport_dynamic_flag_spec \\\nwhole_archive_flag_spec \\\ncompiler_needs_object \\\nwith_gnu_ld \\\nallow_undefined_flag \\\nno_undefined_flag \\\nhardcode_libdir_flag_spec \\\nhardcode_libdir_separator \\\nexclude_expsyms \\\ninclude_expsyms \\\nfile_list_spec \\\nvariables_saved_for_relink \\\nlibname_spec \\\nlibrary_names_spec \\\nsoname_spec \\\ninstall_override_mode \\\nfinish_eval \\\nold_striplib \\\nstriplib \\\ncompiler_lib_search_dirs \\\npredep_objects \\\npostdep_objects \\\npredeps \\\npostdeps \\\ncompiler_lib_search_path \\\nLD_CXX \\\nreload_flag_CXX \\\ncompiler_CXX \\\nlt_prog_compiler_no_builtin_flag_CXX \\\nlt_prog_compiler_pic_CXX \\\nlt_prog_compiler_wl_CXX \\\nlt_prog_compiler_static_CXX \\\nlt_cv_prog_compiler_c_o_CXX \\\nexport_dynamic_flag_spec_CXX \\\nwhole_archive_flag_spec_CXX \\\ncompiler_needs_object_CXX \\\nwith_gnu_ld_CXX \\\nallow_undefined_flag_CXX \\\nno_undefined_flag_CXX \\\nhardcode_libdir_flag_spec_CXX \\\nhardcode_libdir_separator_CXX \\\nexclude_expsyms_CXX \\\ninclude_expsyms_CXX \\\nfile_list_spec_CXX \\\ncompiler_lib_search_dirs_CXX \\\npredep_objects_CXX \\\npostdep_objects_CXX \\\npredeps_CXX \\\npostdeps_CXX \\\ncompiler_lib_search_path_CXX; do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in reload_cmds \\\nold_postinstall_cmds \\\nold_postuninstall_cmds \\\nold_archive_cmds \\\nextract_expsyms_cmds \\\nold_archive_from_new_cmds \\\nold_archive_from_expsyms_cmds \\\narchive_cmds \\\narchive_expsym_cmds \\\nmodule_cmds \\\nmodule_expsym_cmds \\\nexport_symbols_cmds \\\nprelink_cmds \\\npostlink_cmds \\\npostinstall_cmds \\\npostuninstall_cmds \\\nfinish_cmds \\\nsys_lib_search_path_spec \\\nconfigure_time_dlsearch_path \\\nconfigure_time_lt_sys_library_path \\\nreload_cmds_CXX \\\nold_archive_cmds_CXX \\\nold_archive_from_new_cmds_CXX \\\nold_archive_from_expsyms_cmds_CXX \\\narchive_cmds_CXX \\\narchive_expsym_cmds_CXX \\\nmodule_cmds_CXX \\\nmodule_expsym_cmds_CXX \\\nexport_symbols_cmds_CXX \\\nprelink_cmds_CXX \\\npostlink_cmds_CXX; do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\nac_aux_dir='$ac_aux_dir'\n\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'\n\n\n\n\n\n haself=${have_struct__elf}  top=${ac_pwd}   src=${srcdir}\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n\n# Handling of arguments.\nfor ac_config_target in $ac_config_targets\ndo\n  case $ac_config_target in\n    \"config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS config.h\" ;;\n    \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n    \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n    \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n    \"libdwarf/Makefile\") CONFIG_FILES=\"$CONFIG_FILES libdwarf/Makefile\" ;;\n    \"dwarfdump/Makefile\") CONFIG_FILES=\"$CONFIG_FILES dwarfdump/Makefile\" ;;\n    \"dwarfgen/Makefile\") CONFIG_FILES=\"$CONFIG_FILES dwarfgen/Makefile\" ;;\n    \"dwarfexample/Makefile\") CONFIG_FILES=\"$CONFIG_FILES dwarfexample/Makefile\" ;;\n    \"libdwarf/libdwarf.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libdwarf/libdwarf.h\" ;;\n\n  *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n  esac\ndone\n\n\n# If the user did not use the arguments to specify the items to instantiate,\n# then the envvar interface is used.  Set only those that are not.\n# We use the long form for the default assignment because of an extremely\n# bizarre bug on SunOS 4.1.3.\nif $ac_need_defaults; then\n  test \"${CONFIG_FILES+set}\" = set || CONFIG_FILES=$config_files\n  test \"${CONFIG_HEADERS+set}\" = set || CONFIG_HEADERS=$config_headers\n  test \"${CONFIG_COMMANDS+set}\" = set || CONFIG_COMMANDS=$config_commands\nfi\n\n# Have a temporary directory for convenience.  Make it in the build tree\n# simply because there is no reason against having it here, and in addition,\n# creating and moving files from /tmp can sometimes cause problems.\n# Hook for its removal unless debugging.\n# Note that there is a small window in which the directory will not be cleaned:\n# after its creation but before its name has been assigned to `$tmp'.\n$debug ||\n{\n  tmp= ac_tmp=\n  trap 'exit_status=$?\n  : \"${ac_tmp:=$tmp}\"\n  { test ! -d \"$ac_tmp\" || rm -fr \"$ac_tmp\"; } && exit $exit_status\n' 0\n  trap 'as_fn_exit 1' 1 2 13 15\n}\n# Create a (secure) tmp directory for tmp files.\n\n{\n  tmp=`(umask 077 && mktemp -d \"./confXXXXXX\") 2>/dev/null` &&\n  test -d \"$tmp\"\n}  ||\n{\n  tmp=./conf$$-$RANDOM\n  (umask 077 && mkdir \"$tmp\")\n} || as_fn_error $? \"cannot create a temporary directory in .\" \"$LINENO\" 5\nac_tmp=$tmp\n\n# Set up the scripts for CONFIG_FILES section.\n# No need to generate them if there are no CONFIG_FILES.\n# This happens for instance with `./config.status config.h'.\nif test -n \"$CONFIG_FILES\"; then\n\n\nac_cr=`echo X | tr X '\\015'`\n# On cygwin, bash can eat \\r inside `` if the user requested igncr.\n# But we know of no other shell where ac_cr would be empty at this\n# point, so we can use a bashism as a fallback.\nif test \"x$ac_cr\" = x; then\n  eval ac_cr=\\$\\'\\\\r\\'\nfi\nac_cs_awk_cr=`$AWK 'BEGIN { print \"a\\rb\" }' </dev/null 2>/dev/null`\nif test \"$ac_cs_awk_cr\" = \"a${ac_cr}b\"; then\n  ac_cs_awk_cr='\\\\r'\nelse\n  ac_cs_awk_cr=$ac_cr\nfi\n\necho 'BEGIN {' >\"$ac_tmp/subs1.awk\" &&\n_ACEOF\n\n\n{\n  echo \"cat >conf$$subs.awk <<_ACEOF\" &&\n  echo \"$ac_subst_vars\" | sed 's/.*/&!$&$ac_delim/' &&\n  echo \"_ACEOF\"\n} >conf$$subs.sh ||\n  as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\nac_delim_num=`echo \"$ac_subst_vars\" | grep -c '^'`\nac_delim='%!_!# '\nfor ac_last_try in false false false false false :; do\n  . ./conf$$subs.sh ||\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n\n  ac_delim_n=`sed -n \"s/.*$ac_delim\\$/X/p\" conf$$subs.awk | grep -c X`\n  if test $ac_delim_n = $ac_delim_num; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\nrm -f conf$$subs.sh\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\ncat >>\"\\$ac_tmp/subs1.awk\" <<\\\\_ACAWK &&\n_ACEOF\nsed -n '\nh\ns/^/S[\"/; s/!.*/\"]=/\np\ng\ns/^[^!]*!//\n:repl\nt repl\ns/'\"$ac_delim\"'$//\nt delim\n:nl\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\n\"\\\\/\np\nn\nb repl\n:more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt nl\n:delim\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/\np\nb\n:more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt delim\n' <conf$$subs.awk | sed '\n/^[^\"\"]/{\n  N\n  s/\\n//\n}\n' >>$CONFIG_STATUS || ac_write_fail=1\nrm -f conf$$subs.awk\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n_ACAWK\ncat >>\"\\$ac_tmp/subs1.awk\" <<_ACAWK &&\n  for (key in S) S_is_set[key] = 1\n  FS = \"\u0007\"\n\n}\n{\n  line = $ 0\n  nfields = split(line, field, \"@\")\n  substed = 0\n  len = length(field[1])\n  for (i = 2; i < nfields; i++) {\n    key = field[i]\n    keylen = length(key)\n    if (S_is_set[key]) {\n      value = S[key]\n      line = substr(line, 1, len) \"\" value \"\" substr(line, len + keylen + 3)\n      len += length(value) + length(field[++i])\n      substed = 1\n    } else\n      len += 1 + keylen\n  }\n\n  print line\n}\n\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nif sed \"s/$ac_cr//\" < /dev/null > /dev/null 2>&1; then\n  sed \"s/$ac_cr\\$//; s/$ac_cr/$ac_cs_awk_cr/g\"\nelse\n  cat\nfi < \"$ac_tmp/subs1.awk\" > \"$ac_tmp/subs.awk\" \\\n  || as_fn_error $? \"could not setup config files machinery\" \"$LINENO\" 5\n_ACEOF\n\n# VPATH may cause trouble with some makes, so we remove sole $(srcdir),\n# ${srcdir} and @srcdir@ entries from VPATH if srcdir is \".\", strip leading and\n# trailing colons and then remove the whole line if VPATH becomes empty\n# (actually we leave an empty line to preserve line numbers).\nif test \"x$srcdir\" = x.; then\n  ac_vpsub='/^[\t ]*VPATH[\t ]*=[\t ]*/{\nh\ns///\ns/^/:/\ns/[\t ]*$/:/\ns/:\\$(srcdir):/:/g\ns/:\\${srcdir}:/:/g\ns/:@srcdir@:/:/g\ns/^:*//\ns/:*$//\nx\ns/\\(=[\t ]*\\).*/\\1/\nG\ns/\\n//\ns/^[^=]*=[\t ]*$//\n}'\nfi\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nfi # test -n \"$CONFIG_FILES\"\n\n# Set up the scripts for CONFIG_HEADERS section.\n# No need to generate them if there are no CONFIG_HEADERS.\n# This happens for instance with `./config.status Makefile'.\nif test -n \"$CONFIG_HEADERS\"; then\ncat >\"$ac_tmp/defines.awk\" <<\\_ACAWK ||\nBEGIN {\n_ACEOF\n\n# Transform confdefs.h into an awk script `defines.awk', embedded as\n# here-document in config.status, that substitutes the proper values into\n# config.h.in to produce config.h.\n\n# Create a delimiter string that does not exist in confdefs.h, to ease\n# handling of long lines.\nac_delim='%!_!# '\nfor ac_last_try in false false :; do\n  ac_tt=`sed -n \"/$ac_delim/p\" confdefs.h`\n  if test -z \"$ac_tt\"; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_HEADERS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\n\n# For the awk script, D is an array of macro values keyed by name,\n# likewise P contains macro parameters if any.  Preserve backslash\n# newline sequences.\n\nac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*\nsed -n '\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt rset\n:rset\ns/^[\t ]*#[\t ]*define[\t ][\t ]*/ /\nt def\nd\n:def\ns/\\\\$//\nt bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\"/p\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\"/p\nd\n:bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\\\\\\\\\\\\n\"\\\\/p\nt cont\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\\\\\\\\\\\\n\"\\\\/p\nt cont\nd\n:cont\nn\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt clear\n:clear\ns/\\\\$//\nt bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/p\nd\n:bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\\\\\\\\\n\"\\\\/p\nb cont\n' <confdefs.h | sed '\ns/'\"$ac_delim\"'/\"\\\\\\\n\"/g' >>$CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  for (key in D) D_is_set[key] = 1\n  FS = \"\u0007\"\n}\n/^[\\t ]*#[\\t ]*(define|undef)[\\t ]+$ac_word_re([\\t (]|\\$)/ {\n  line = \\$ 0\n  split(line, arg, \" \")\n  if (arg[1] == \"#\") {\n    defundef = arg[2]\n    mac1 = arg[3]\n  } else {\n    defundef = substr(arg[1], 2)\n    mac1 = arg[2]\n  }\n  split(mac1, mac2, \"(\") #)\n  macro = mac2[1]\n  prefix = substr(line, 1, index(line, defundef) - 1)\n  if (D_is_set[macro]) {\n    # Preserve the white space surrounding the \"#\".\n    print prefix \"define\", macro P[macro] D[macro]\n    next\n  } else {\n    # Replace #undef with comments.  This is necessary, for example,\n    # in the case of _POSIX_SOURCE, which is predefined and required\n    # on some systems where configure will not decide to define it.\n    if (defundef == \"undef\") {\n      print \"/*\", prefix defundef, macro, \"*/\"\n      next\n    }\n  }\n}\n{ print }\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n  as_fn_error $? \"could not setup config headers machinery\" \"$LINENO\" 5\nfi # test -n \"$CONFIG_HEADERS\"\n\n\neval set X \"  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS\"\nshift\nfor ac_tag\ndo\n  case $ac_tag in\n  :[FHLC]) ac_mode=$ac_tag; continue;;\n  esac\n  case $ac_mode$ac_tag in\n  :[FHL]*:*);;\n  :L* | :C*:*) as_fn_error $? \"invalid tag \\`$ac_tag'\" \"$LINENO\" 5;;\n  :[FH]-) ac_tag=-:-;;\n  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;\n  esac\n  ac_save_IFS=$IFS\n  IFS=:\n  set x $ac_tag\n  IFS=$ac_save_IFS\n  shift\n  ac_file=$1\n  shift\n\n  case $ac_mode in\n  :L) ac_source=$1;;\n  :[FH])\n    ac_file_inputs=\n    for ac_f\n    do\n      case $ac_f in\n      -) ac_f=\"$ac_tmp/stdin\";;\n      *) # Look for the file first in the build tree, then in the source tree\n\t # (if the path is not absolute).  The absolute path cannot be DOS-style,\n\t # because $ac_f cannot contain `:'.\n\t test -f \"$ac_f\" ||\n\t   case $ac_f in\n\t   [\\\\/$]*) false;;\n\t   *) test -f \"$srcdir/$ac_f\" && ac_f=\"$srcdir/$ac_f\";;\n\t   esac ||\n\t   as_fn_error 1 \"cannot find input file: \\`$ac_f'\" \"$LINENO\" 5;;\n      esac\n      case $ac_f in *\\'*) ac_f=`$as_echo \"$ac_f\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; esac\n      as_fn_append ac_file_inputs \" '$ac_f'\"\n    done\n\n    # Let's still pretend it is `configure' which instantiates (i.e., don't\n    # use $as_me), people would be surprised to read:\n    #    /* config.h.  Generated by config.status.  */\n    configure_input='Generated from '`\n\t  $as_echo \"$*\" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'\n\t`' by configure.'\n    if test x\"$ac_file\" != x-; then\n      configure_input=\"$ac_file.  $configure_input\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: creating $ac_file\" >&5\n$as_echo \"$as_me: creating $ac_file\" >&6;}\n    fi\n    # Neutralize special characters interpreted by sed in replacement strings.\n    case $configure_input in #(\n    *\\&* | *\\|* | *\\\\* )\n       ac_sed_conf_input=`$as_echo \"$configure_input\" |\n       sed 's/[\\\\\\\\&|]/\\\\\\\\&/g'`;; #(\n    *) ac_sed_conf_input=$configure_input;;\n    esac\n\n    case $ac_tag in\n    *:-:* | *:-) cat >\"$ac_tmp/stdin\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5 ;;\n    esac\n    ;;\n  esac\n\n  ac_dir=`$as_dirname -- \"$ac_file\" ||\n$as_expr X\"$ac_file\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)$' \\| \\\n\t X\"$ac_file\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$ac_file\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  as_dir=\"$ac_dir\"; as_fn_mkdir_p\n  ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n\n  case $ac_mode in\n  :F)\n  #\n  # CONFIG_FILE\n  #\n\n  case $INSTALL in\n  [\\\\/$]* | ?:[\\\\/]* ) ac_INSTALL=$INSTALL ;;\n  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;\n  esac\n  ac_MKDIR_P=$MKDIR_P\n  case $MKDIR_P in\n  [\\\\/$]* | ?:[\\\\/]* ) ;;\n  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;\n  esac\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# If the template does not know about datarootdir, expand it.\n# FIXME: This hack should be removed a few years after 2.60.\nac_datarootdir_hack=; ac_datarootdir_seen=\nac_sed_dataroot='\n/datarootdir/ {\n  p\n  q\n}\n/@datadir@/p\n/@docdir@/p\n/@infodir@/p\n/@localedir@/p\n/@mandir@/p'\ncase `eval \"sed -n \\\"\\$ac_sed_dataroot\\\" $ac_file_inputs\"` in\n*datarootdir*) ac_datarootdir_seen=yes;;\n*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&5\n$as_echo \"$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&2;}\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  ac_datarootdir_hack='\n  s&@datadir@&$datadir&g\n  s&@docdir@&$docdir&g\n  s&@infodir@&$infodir&g\n  s&@localedir@&$localedir&g\n  s&@mandir@&$mandir&g\n  s&\\\\\\${datarootdir}&$datarootdir&g' ;;\nesac\n_ACEOF\n\n# Neutralize VPATH when `$srcdir' = `.'.\n# Shell code in configure.ac might set extrasub.\n# FIXME: do we really want to maintain this feature?\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_sed_extra=\"$ac_vpsub\n$extrasub\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n:t\n/@[a-zA-Z_][a-zA-Z_0-9]*@/!b\ns|@configure_input@|$ac_sed_conf_input|;t t\ns&@top_builddir@&$ac_top_builddir_sub&;t t\ns&@top_build_prefix@&$ac_top_build_prefix&;t t\ns&@srcdir@&$ac_srcdir&;t t\ns&@abs_srcdir@&$ac_abs_srcdir&;t t\ns&@top_srcdir@&$ac_top_srcdir&;t t\ns&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t\ns&@builddir@&$ac_builddir&;t t\ns&@abs_builddir@&$ac_abs_builddir&;t t\ns&@abs_top_builddir@&$ac_abs_top_builddir&;t t\ns&@INSTALL@&$ac_INSTALL&;t t\ns&@MKDIR_P@&$ac_MKDIR_P&;t t\n$ac_datarootdir_hack\n\"\neval sed \\\"\\$ac_sed_extra\\\" \"$ac_file_inputs\" | $AWK -f \"$ac_tmp/subs.awk\" \\\n  >$ac_tmp/out || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n\ntest -z \"$ac_datarootdir_hack$ac_datarootdir_seen\" &&\n  { ac_out=`sed -n '/\\${datarootdir}/p' \"$ac_tmp/out\"`; test -n \"$ac_out\"; } &&\n  { ac_out=`sed -n '/^[\t ]*datarootdir[\t ]*:*=/p' \\\n      \"$ac_tmp/out\"`; test -z \"$ac_out\"; } &&\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&5\n$as_echo \"$as_me: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&2;}\n\n  rm -f \"$ac_tmp/stdin\"\n  case $ac_file in\n  -) cat \"$ac_tmp/out\" && rm -f \"$ac_tmp/out\";;\n  *) rm -f \"$ac_file\" && mv \"$ac_tmp/out\" \"$ac_file\";;\n  esac \\\n  || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n ;;\n  :H)\n  #\n  # CONFIG_HEADER\n  #\n  if test x\"$ac_file\" != x-; then\n    {\n      $as_echo \"/* $configure_input  */\" \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\"\n    } >\"$ac_tmp/config.h\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    if diff \"$ac_file\" \"$ac_tmp/config.h\" >/dev/null 2>&1; then\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: $ac_file is unchanged\" >&5\n$as_echo \"$as_me: $ac_file is unchanged\" >&6;}\n    else\n      rm -f \"$ac_file\"\n      mv \"$ac_tmp/config.h\" \"$ac_file\" \\\n\t|| as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    fi\n  else\n    $as_echo \"/* $configure_input  */\" \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\" \\\n      || as_fn_error $? \"could not create -\" \"$LINENO\" 5\n  fi\n# Compute \"$ac_file\"'s index in $config_headers.\n_am_arg=\"$ac_file\"\n_am_stamp_count=1\nfor _am_header in $config_headers :; do\n  case $_am_header in\n    $_am_arg | $_am_arg:* )\n      break ;;\n    * )\n      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n  esac\ndone\necho \"timestamp for $_am_arg\" >`$as_dirname -- \"$_am_arg\" ||\n$as_expr X\"$_am_arg\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$_am_arg\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$_am_arg\" : 'X\\(//\\)$' \\| \\\n\t X\"$_am_arg\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$_am_arg\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`/stamp-h$_am_stamp_count\n ;;\n\n  :C)  { $as_echo \"$as_me:${as_lineno-$LINENO}: executing $ac_file commands\" >&5\n$as_echo \"$as_me: executing $ac_file commands\" >&6;}\n ;;\n  esac\n\n\n  case $ac_file$ac_mode in\n    \"depfiles\":C) test x\"$AMDEP_TRUE\" != x\"\" || {\n  # Older Autoconf quotes --file arguments for eval, but not when files\n  # are listed without --file.  Let's play safe and only enable the eval\n  # if we detect the quoting.\n  # TODO: see whether this extra hack can be removed once we start\n  # requiring Autoconf 2.70 or later.\n  case $CONFIG_FILES in #(\n  *\\'*) :\n    eval set x \"$CONFIG_FILES\" ;; #(\n  *) :\n    set x $CONFIG_FILES ;; #(\n  *) :\n     ;;\nesac\n  shift\n  # Used to flag and report bootstrapping failures.\n  am_rc=0\n  for am_mf\n  do\n    # Strip MF so we end up with the name of the file.\n    am_mf=`$as_echo \"$am_mf\" | sed -e 's/:.*$//'`\n    # Check whether this is an Automake generated Makefile which includes\n    # dependency-tracking related rules and includes.\n    # Grep'ing the whole file directly is not great: AIX grep has a line\n    # limit of 2048, but all sed's we know have understand at least 4000.\n    sed -n 's,^am--depfiles:.*,X,p' \"$am_mf\" | grep X >/dev/null 2>&1 \\\n      || continue\n    am_dirpart=`$as_dirname -- \"$am_mf\" ||\n$as_expr X\"$am_mf\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)$' \\| \\\n\t X\"$am_mf\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$am_mf\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n    am_filepart=`$as_basename -- \"$am_mf\" ||\n$as_expr X/\"$am_mf\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$am_mf\" : 'X\\(//\\)$' \\| \\\n\t X\"$am_mf\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$am_mf\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n    { echo \"$as_me:$LINENO: cd \"$am_dirpart\" \\\n      && sed -e '/# am--include-marker/d' \"$am_filepart\" \\\n        | $MAKE -f - am--depfiles\" >&5\n   (cd \"$am_dirpart\" \\\n      && sed -e '/# am--include-marker/d' \"$am_filepart\" \\\n        | $MAKE -f - am--depfiles) >&5 2>&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } || am_rc=$?\n  done\n  if test $am_rc -ne 0; then\n    { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"Something went wrong bootstrapping makefile fragments\n    for automatic dependency tracking.  Try re-running configure with the\n    '--disable-dependency-tracking' option to at least be able to build\n    the package (albeit without support for automatic dependency tracking).\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n  fi\n  { am_dirpart=; unset am_dirpart;}\n  { am_filepart=; unset am_filepart;}\n  { am_mf=; unset am_mf;}\n  { am_rc=; unset am_rc;}\n  rm -f conftest-deps.mk\n}\n ;;\n    \"libtool\":C)\n\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\n# The names of the tagged configurations supported by this script.\navailable_tags='CXX '\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n\n# Which release of libtool.m4 was used?\nmacro_version=$macro_version\nmacro_revision=$macro_revision\n\n# Assembler program.\nAS=$lt_AS\n\n# DLL creation program.\nDLLTOOL=$lt_DLLTOOL\n\n# Object dumper program.\nOBJDUMP=$lt_OBJDUMP\n\n# Whether or not to build shared libraries.\nbuild_libtool_libs=$enable_shared\n\n# Whether or not to build static libraries.\nbuild_old_libs=$enable_static\n\n# What type of objects to build.\npic_mode=$pic_mode\n\n# Whether or not to optimize for fast installation.\nfast_install=$enable_fast_install\n\n# Shared archive member basename,for filename based shared library versioning on AIX.\nshared_archive_member_spec=$shared_archive_member_spec\n\n# Shell to use when invoking shell scripts.\nSHELL=$lt_SHELL\n\n# An echo program that protects backslashes.\nECHO=$lt_ECHO\n\n# The PATH separator for the build system.\nPATH_SEPARATOR=$lt_PATH_SEPARATOR\n\n# The host system.\nhost_alias=$host_alias\nhost=$host\nhost_os=$host_os\n\n# The build system.\nbuild_alias=$build_alias\nbuild=$build\nbuild_os=$build_os\n\n# A sed program that does not truncate output.\nSED=$lt_SED\n\n# Sed that helps us avoid accidentally triggering echo(1) options like -n.\nXsed=\"\\$SED -e 1s/^X//\"\n\n# A grep program that handles long lines.\nGREP=$lt_GREP\n\n# An ERE matcher.\nEGREP=$lt_EGREP\n\n# A literal string matcher.\nFGREP=$lt_FGREP\n\n# A BSD- or MS-compatible name lister.\nNM=$lt_NM\n\n# Whether we need soft or hard links.\nLN_S=$lt_LN_S\n\n# What is the maximum length of a command?\nmax_cmd_len=$max_cmd_len\n\n# Object file suffix (normally \"o\").\nobjext=$ac_objext\n\n# Executable file suffix (normally \"\").\nexeext=$exeext\n\n# whether the shell understands \"unset\".\nlt_unset=$lt_unset\n\n# turn spaces into newlines.\nSP2NL=$lt_lt_SP2NL\n\n# turn newlines into spaces.\nNL2SP=$lt_lt_NL2SP\n\n# convert \\$build file names to \\$host format.\nto_host_file_cmd=$lt_cv_to_host_file_cmd\n\n# convert \\$build files to toolchain format.\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\n\n# Method to check whether dependent libraries are shared objects.\ndeplibs_check_method=$lt_deplibs_check_method\n\n# Command to use when deplibs_check_method = \"file_magic\".\nfile_magic_cmd=$lt_file_magic_cmd\n\n# How to find potential files when deplibs_check_method = \"file_magic\".\nfile_magic_glob=$lt_file_magic_glob\n\n# Find potential files using nocaseglob when deplibs_check_method = \"file_magic\".\nwant_nocaseglob=$lt_want_nocaseglob\n\n# Command to associate shared and link libraries.\nsharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd\n\n# The archiver.\nAR=$lt_AR\n\n# Flags to create an archive.\nAR_FLAGS=$lt_AR_FLAGS\n\n# How to feed a file listing to the archiver.\narchiver_list_spec=$lt_archiver_list_spec\n\n# A symbol stripping program.\nSTRIP=$lt_STRIP\n\n# Commands used to install an old-style archive.\nRANLIB=$lt_RANLIB\nold_postinstall_cmds=$lt_old_postinstall_cmds\nold_postuninstall_cmds=$lt_old_postuninstall_cmds\n\n# Whether to use a lock for old archive extraction.\nlock_old_archive_extraction=$lock_old_archive_extraction\n\n# A C compiler.\nLTCC=$lt_CC\n\n# LTCC compiler flags.\nLTCFLAGS=$lt_CFLAGS\n\n# Take the output of nm and produce a listing of raw symbols and C names.\nglobal_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe\n\n# Transform the output of nm in a proper C declaration.\nglobal_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl\n\n# Transform the output of nm into a list of symbols to manually relocate.\nglobal_symbol_to_import=$lt_lt_cv_sys_global_symbol_to_import\n\n# Transform the output of nm in a C name address pair.\nglobal_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address\n\n# Transform the output of nm in a C name address pair when lib prefix is needed.\nglobal_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix\n\n# The name lister interface.\nnm_interface=$lt_lt_cv_nm_interface\n\n# Specify filename containing input files for \\$NM.\nnm_file_list_spec=$lt_nm_file_list_spec\n\n# The root where to search for dependent libraries,and where our libraries should be installed.\nlt_sysroot=$lt_sysroot\n\n# Command to truncate a binary pipe.\nlt_truncate_bin=$lt_lt_cv_truncate_bin\n\n# The name of the directory that contains temporary libtool files.\nobjdir=$objdir\n\n# Used to examine libraries when file_magic_cmd begins with \"file\".\nMAGIC_CMD=$MAGIC_CMD\n\n# Must we lock files when doing compilation?\nneed_locks=$lt_need_locks\n\n# Manifest tool.\nMANIFEST_TOOL=$lt_MANIFEST_TOOL\n\n# Tool to manipulate archived DWARF debug symbol files on Mac OS X.\nDSYMUTIL=$lt_DSYMUTIL\n\n# Tool to change global to local symbols on Mac OS X.\nNMEDIT=$lt_NMEDIT\n\n# Tool to manipulate fat objects and archives on Mac OS X.\nLIPO=$lt_LIPO\n\n# ldd/readelf like tool for Mach-O binaries on Mac OS X.\nOTOOL=$lt_OTOOL\n\n# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.\nOTOOL64=$lt_OTOOL64\n\n# Old archive suffix (normally \"a\").\nlibext=$libext\n\n# Shared library suffix (normally \".so\").\nshrext_cmds=$lt_shrext_cmds\n\n# The commands to extract the exported symbol list from a shared archive.\nextract_expsyms_cmds=$lt_extract_expsyms_cmds\n\n# Variables whose values should be saved in libtool wrapper scripts and\n# restored at link time.\nvariables_saved_for_relink=$lt_variables_saved_for_relink\n\n# Do we need the \"lib\" prefix for modules?\nneed_lib_prefix=$need_lib_prefix\n\n# Do we need a version for libraries?\nneed_version=$need_version\n\n# Library versioning type.\nversion_type=$version_type\n\n# Shared library runtime path variable.\nrunpath_var=$runpath_var\n\n# Shared library path variable.\nshlibpath_var=$shlibpath_var\n\n# Is shlibpath searched before the hard-coded library search path?\nshlibpath_overrides_runpath=$shlibpath_overrides_runpath\n\n# Format of library name prefix.\nlibname_spec=$lt_libname_spec\n\n# List of archive names.  First name is the real one, the rest are links.\n# The last name is the one that the linker finds with -lNAME\nlibrary_names_spec=$lt_library_names_spec\n\n# The coded name of the library, if different from the real name.\nsoname_spec=$lt_soname_spec\n\n# Permission mode override for installation of shared libraries.\ninstall_override_mode=$lt_install_override_mode\n\n# Command to use after installation of a shared archive.\npostinstall_cmds=$lt_postinstall_cmds\n\n# Command to use after uninstallation of a shared archive.\npostuninstall_cmds=$lt_postuninstall_cmds\n\n# Commands used to finish a libtool library installation in a directory.\nfinish_cmds=$lt_finish_cmds\n\n# As \"finish_cmds\", except a single script fragment to be evaled but\n# not shown.\nfinish_eval=$lt_finish_eval\n\n# Whether we should hardcode library paths into libraries.\nhardcode_into_libs=$hardcode_into_libs\n\n# Compile-time system search path for libraries.\nsys_lib_search_path_spec=$lt_sys_lib_search_path_spec\n\n# Detected run-time system search path for libraries.\nsys_lib_dlsearch_path_spec=$lt_configure_time_dlsearch_path\n\n# Explicit LT_SYS_LIBRARY_PATH set during ./configure time.\nconfigure_time_lt_sys_library_path=$lt_configure_time_lt_sys_library_path\n\n# Whether dlopen is supported.\ndlopen_support=$enable_dlopen\n\n# Whether dlopen of programs is supported.\ndlopen_self=$enable_dlopen_self\n\n# Whether dlopen of statically linked programs is supported.\ndlopen_self_static=$enable_dlopen_self_static\n\n# Commands to strip libraries.\nold_striplib=$lt_old_striplib\nstriplib=$lt_striplib\n\n\n# The linker used to build libraries.\nLD=$lt_LD\n\n# How to create reloadable object files.\nreload_flag=$lt_reload_flag\nreload_cmds=$lt_reload_cmds\n\n# Commands used to build an old-style archive.\nold_archive_cmds=$lt_old_archive_cmds\n\n# A language specific compiler.\nCC=$lt_compiler\n\n# Is the compiler the GNU compiler?\nwith_gcc=$GCC\n\n# Compiler flag to turn off builtin functions.\nno_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag\n\n# Additional compiler flags for building library objects.\npic_flag=$lt_lt_prog_compiler_pic\n\n# How to pass a linker flag through the compiler.\nwl=$lt_lt_prog_compiler_wl\n\n# Compiler flag to prevent dynamic linking.\nlink_static_flag=$lt_lt_prog_compiler_static\n\n# Does compiler simultaneously support -c and -o options?\ncompiler_c_o=$lt_lt_cv_prog_compiler_c_o\n\n# Whether or not to add -lc for building shared libraries.\nbuild_libtool_need_lc=$archive_cmds_need_lc\n\n# Whether or not to disallow shared libs when runtime libs are static.\nallow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes\n\n# Compiler flag to allow reflexive dlopens.\nexport_dynamic_flag_spec=$lt_export_dynamic_flag_spec\n\n# Compiler flag to generate shared objects directly from archives.\nwhole_archive_flag_spec=$lt_whole_archive_flag_spec\n\n# Whether the compiler copes with passing no objects directly.\ncompiler_needs_object=$lt_compiler_needs_object\n\n# Create an old-style archive from a shared archive.\nold_archive_from_new_cmds=$lt_old_archive_from_new_cmds\n\n# Create a temporary old-style archive to link instead of a shared archive.\nold_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds\n\n# Commands used to build a shared archive.\narchive_cmds=$lt_archive_cmds\narchive_expsym_cmds=$lt_archive_expsym_cmds\n\n# Commands used to build a loadable module if different from building\n# a shared archive.\nmodule_cmds=$lt_module_cmds\nmodule_expsym_cmds=$lt_module_expsym_cmds\n\n# Whether we are building with GNU ld or not.\nwith_gnu_ld=$lt_with_gnu_ld\n\n# Flag that allows shared libraries with undefined symbols to be built.\nallow_undefined_flag=$lt_allow_undefined_flag\n\n# Flag that enforces no undefined symbols.\nno_undefined_flag=$lt_no_undefined_flag\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist\nhardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec\n\n# Whether we need a single \"-rpath\" flag with a separated argument.\nhardcode_libdir_separator=$lt_hardcode_libdir_separator\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary.\nhardcode_direct=$hardcode_direct\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary and the resulting library dependency is\n# \"absolute\",i.e impossible to change by setting \\$shlibpath_var if the\n# library is relocated.\nhardcode_direct_absolute=$hardcode_direct_absolute\n\n# Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n# into the resulting binary.\nhardcode_minus_L=$hardcode_minus_L\n\n# Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n# into the resulting binary.\nhardcode_shlibpath_var=$hardcode_shlibpath_var\n\n# Set to \"yes\" if building a shared library automatically hardcodes DIR\n# into the library and all subsequent libraries and executables linked\n# against it.\nhardcode_automatic=$hardcode_automatic\n\n# Set to yes if linker adds runtime paths of dependent libraries\n# to runtime path list.\ninherit_rpath=$inherit_rpath\n\n# Whether libtool must link a program against all its dependency libraries.\nlink_all_deplibs=$link_all_deplibs\n\n# Set to \"yes\" if exported symbols are required.\nalways_export_symbols=$always_export_symbols\n\n# The commands to list exported symbols.\nexport_symbols_cmds=$lt_export_symbols_cmds\n\n# Symbols that should not be listed in the preloaded symbols.\nexclude_expsyms=$lt_exclude_expsyms\n\n# Symbols that must always be exported.\ninclude_expsyms=$lt_include_expsyms\n\n# Commands necessary for linking programs (against libraries) with templates.\nprelink_cmds=$lt_prelink_cmds\n\n# Commands necessary for finishing linking programs.\npostlink_cmds=$lt_postlink_cmds\n\n# Specify filename containing input files.\nfile_list_spec=$lt_file_list_spec\n\n# How to hardcode a shared library path into an executable.\nhardcode_action=$hardcode_action\n\n# The directories searched by this compiler when creating a shared library.\ncompiler_lib_search_dirs=$lt_compiler_lib_search_dirs\n\n# Dependencies to place before and after the objects being linked to\n# create a shared library.\npredep_objects=$lt_predep_objects\npostdep_objects=$lt_postdep_objects\npredeps=$lt_predeps\npostdeps=$lt_postdeps\n\n# The library search path used internally by the compiler when linking\n# a shared library.\ncompiler_lib_search_path=$lt_compiler_lib_search_path\n\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x$2 in\n    x)\n        ;;\n    *:)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'` \\$$1\\\"\n        ;;\n    x:*)\n        eval $1=\\\"\\$$1 `$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval $1=\\\"\\$$1\\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval $1=\\\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\$$1\\\"\n        ;;\n    *)\n        eval $1=\\\"`$ECHO $2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n\n\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in $*\"\"; do\n      case $cc_temp in\n        compile | *[\\\\/]compile | ccache | *[\\\\/]ccache ) ;;\n        distcc | *[\\\\/]distcc | purify | *[\\\\/]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n\nltmain=$ac_aux_dir/ltmain.sh\n\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n\n\n    cat <<_LT_EOF >> \"$ofile\"\n\n# ### BEGIN LIBTOOL TAG CONFIG: CXX\n\n# The linker used to build libraries.\nLD=$lt_LD_CXX\n\n# How to create reloadable object files.\nreload_flag=$lt_reload_flag_CXX\nreload_cmds=$lt_reload_cmds_CXX\n\n# Commands used to build an old-style archive.\nold_archive_cmds=$lt_old_archive_cmds_CXX\n\n# A language specific compiler.\nCC=$lt_compiler_CXX\n\n# Is the compiler the GNU compiler?\nwith_gcc=$GCC_CXX\n\n# Compiler flag to turn off builtin functions.\nno_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX\n\n# Additional compiler flags for building library objects.\npic_flag=$lt_lt_prog_compiler_pic_CXX\n\n# How to pass a linker flag through the compiler.\nwl=$lt_lt_prog_compiler_wl_CXX\n\n# Compiler flag to prevent dynamic linking.\nlink_static_flag=$lt_lt_prog_compiler_static_CXX\n\n# Does compiler simultaneously support -c and -o options?\ncompiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX\n\n# Whether or not to add -lc for building shared libraries.\nbuild_libtool_need_lc=$archive_cmds_need_lc_CXX\n\n# Whether or not to disallow shared libs when runtime libs are static.\nallow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX\n\n# Compiler flag to allow reflexive dlopens.\nexport_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX\n\n# Compiler flag to generate shared objects directly from archives.\nwhole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX\n\n# Whether the compiler copes with passing no objects directly.\ncompiler_needs_object=$lt_compiler_needs_object_CXX\n\n# Create an old-style archive from a shared archive.\nold_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX\n\n# Create a temporary old-style archive to link instead of a shared archive.\nold_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX\n\n# Commands used to build a shared archive.\narchive_cmds=$lt_archive_cmds_CXX\narchive_expsym_cmds=$lt_archive_expsym_cmds_CXX\n\n# Commands used to build a loadable module if different from building\n# a shared archive.\nmodule_cmds=$lt_module_cmds_CXX\nmodule_expsym_cmds=$lt_module_expsym_cmds_CXX\n\n# Whether we are building with GNU ld or not.\nwith_gnu_ld=$lt_with_gnu_ld_CXX\n\n# Flag that allows shared libraries with undefined symbols to be built.\nallow_undefined_flag=$lt_allow_undefined_flag_CXX\n\n# Flag that enforces no undefined symbols.\nno_undefined_flag=$lt_no_undefined_flag_CXX\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist\nhardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX\n\n# Whether we need a single \"-rpath\" flag with a separated argument.\nhardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary.\nhardcode_direct=$hardcode_direct_CXX\n\n# Set to \"yes\" if using DIR/libNAME\\$shared_ext during linking hardcodes\n# DIR into the resulting binary and the resulting library dependency is\n# \"absolute\",i.e impossible to change by setting \\$shlibpath_var if the\n# library is relocated.\nhardcode_direct_absolute=$hardcode_direct_absolute_CXX\n\n# Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n# into the resulting binary.\nhardcode_minus_L=$hardcode_minus_L_CXX\n\n# Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n# into the resulting binary.\nhardcode_shlibpath_var=$hardcode_shlibpath_var_CXX\n\n# Set to \"yes\" if building a shared library automatically hardcodes DIR\n# into the library and all subsequent libraries and executables linked\n# against it.\nhardcode_automatic=$hardcode_automatic_CXX\n\n# Set to yes if linker adds runtime paths of dependent libraries\n# to runtime path list.\ninherit_rpath=$inherit_rpath_CXX\n\n# Whether libtool must link a program against all its dependency libraries.\nlink_all_deplibs=$link_all_deplibs_CXX\n\n# Set to \"yes\" if exported symbols are required.\nalways_export_symbols=$always_export_symbols_CXX\n\n# The commands to list exported symbols.\nexport_symbols_cmds=$lt_export_symbols_cmds_CXX\n\n# Symbols that should not be listed in the preloaded symbols.\nexclude_expsyms=$lt_exclude_expsyms_CXX\n\n# Symbols that must always be exported.\ninclude_expsyms=$lt_include_expsyms_CXX\n\n# Commands necessary for linking programs (against libraries) with templates.\nprelink_cmds=$lt_prelink_cmds_CXX\n\n# Commands necessary for finishing linking programs.\npostlink_cmds=$lt_postlink_cmds_CXX\n\n# Specify filename containing input files.\nfile_list_spec=$lt_file_list_spec_CXX\n\n# How to hardcode a shared library path into an executable.\nhardcode_action=$hardcode_action_CXX\n\n# The directories searched by this compiler when creating a shared library.\ncompiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX\n\n# Dependencies to place before and after the objects being linked to\n# create a shared library.\npredep_objects=$lt_predep_objects_CXX\npostdep_objects=$lt_postdep_objects_CXX\npredeps=$lt_predeps_CXX\npostdeps=$lt_postdeps_CXX\n\n# The library search path used internally by the compiler when linking\n# a shared library.\ncompiler_lib_search_path=$lt_compiler_lib_search_path_CXX\n\n# ### END LIBTOOL TAG CONFIG: CXX\n_LT_EOF\n\n ;;\n    \"libdwarf/libdwarf.h\":C)  sh $src/scripts/fixlibdwarfelf.sh $haself $src $top  ;;\n\n  esac\ndone # for ac_tag\n\n\nas_fn_exit 0\n_ACEOF\nac_clean_files=$ac_clean_files_save\n\ntest $ac_write_fail = 0 ||\n  as_fn_error $? \"write failure creating $CONFIG_STATUS\" \"$LINENO\" 5\n\n\n# configure is writing to config.log, and then calls config.status.\n# config.status does its own redirection, appending to config.log.\n# Unfortunately, on DOS this fails, as config.log is still kept open\n# by configure, so config.status won't be able to write to it; its\n# output is simply discarded.  So we exec the FD to /dev/null,\n# effectively closing config.log, so it can be properly (re)opened and\n# appended to by config.status.  When coming back to configure, we\n# need to make the FD available again.\nif test \"$no_create\" != yes; then\n  ac_cs_success=:\n  ac_config_status_args=\n  test \"$silent\" = yes &&\n    ac_config_status_args=\"$ac_config_status_args --quiet\"\n  exec 5>/dev/null\n  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false\n  exec 5>>config.log\n  # Use ||, not &&, to avoid exiting from the if with $? = 1, which\n  # would make configure fail if this is the last instruction.\n  $ac_cs_success || as_fn_exit 1\nfi\nif test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts\" >&5\n$as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\nfi\n\n\necho\necho \"$PACKAGE $VERSION\"\necho\necho \"Configuration Options Summary:\"\necho\necho \"  BuildOS..............: ${build_os}\"\necho \"  HostOS...............: ${host_os}\"\necho\necho \"  shared library.......: ${enable_shared}\"\necho \"  static library.......: ${enable_static}\"\necho\necho \"  zlib support.........: ${have_zlib}\"\necho \"  sanitize support.....: ${enable_sanitize}\"\necho \"  BuildOS-BigEndian....: ${ac_cv_c_bigendian}\"\necho\necho \"  libdwarf.............: always\"\necho \"    old frame column...: ${enable_oldframecol}\"\necho \"    names table........: ${enable_namestable}\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    elf64_getshdr......: ${have_getshdr}\"\necho \"    Elf64_Rela.........: ${have_elf64_rela}\"\necho \"    Elf64_Sym..........: ${have_elf64_sym}\"\necho \"    Elf spelled........: ${struct_elf}\"\necho \"    libelf.............: ${dwarf_with_libelf}\"\necho \"    Windows path corr..: ${enable_windowspath}\"\necho \"    Nonstandardprintf..: ${enable_nonstandardprintf}\"\necho \"    Custom libelf......: ${enable_havecustomlibelf}\"\necho \"  dwarfdump............: always\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    Elf64_Rel (r_info).: ${have_elf64_rel}\"\necho \"    regex..............: ${have_regex}\"\necho \"  dwarfgen.............: ${enable_dwarfgen}\"\necho \"  dwarfexample.........: ${enable_dwarfexample}\"\necho\necho \"Compilation............: make (or gmake)\"\necho \"  CPPFLAGS.............: $CPPFLAGS\"\necho \"  CFLAGS...............: $CFLAGS ${c_compiler_flags}\"\necho \"  LDFLAGS..............: $LDFLAGS\"\necho \"  LIBS.................: $LIBS\"\necho \"  DWARF_LIBS...........: $DWARF_LIBS\"\necho\necho \"Installation...........: make install (as root if needed, with 'su' or 'sudo')\"\necho \"  prefix...............: $prefix\"\necho\n", "###Copyright (C) 2018 Vincent Torri <vincent dot torri at gmail dot com>\n###This code is public domain and can be freely used or copied.\n\ndnl defines the version name of  the libdwarf.so\nm4_define([v_maj], [1])\nm4_define([v_min], [0])\nm4_define([v_mic], [0])\n###m4_define([v_ver], [v_maj.v_min.v_mic])\n###Returning to older version, .so.1\nm4_define([v_ver], [v_maj])\n\nm4_define([v_rel], [])\nm4_define([lt_cur], [m4_eval(v_maj + v_min)])\nm4_define([lt_rev], [v_mic])\nm4_define([lt_age], [v_min])\n\n### Sets the release name. \n###m4_define([v_date], [m4_esyscmd_s([date \"+%Y%m%d\"])])\nm4_define([v_date], [20201017])])\n\nAC_PREREQ([2.52])\n### 2nd arg to AC_INIT is the version 'number'.\nAC_INIT([libdwarf], [v_date], [libdwarf-list -at- linuxmail -dot- org])\nAC_CONFIG_SRCDIR([configure.ac])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_MACRO_DIRS([m4])\n\n\n### Additional options to configure\n\nAC_ARG_ENABLE([dwarfgen],\n   [AS_HELP_STRING([--enable-dwarfgen],\n                   [enable dwarfgen compilation @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_dwarfgen=\"yes\"],\n        [enable_dwarfgen=\"no\"])\n   ],\n   [enable_dwarfgen=\"no\"])\nAM_CONDITIONAL([HAVE_DWARFGEN], [test \"x${enable_dwarfgen}\" = \"xyes\"])\n\nAC_ARG_ENABLE([dwarfexample],\n   [AS_HELP_STRING([--enable-dwarfexample],\n                   [enable dwarfexample compilation @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_dwarfexample=\"yes\"],\n        [enable_dwarfexample=\"no\"])\n   ],\n   [enable_dwarfexample=\"no\"])\nAM_CONDITIONAL([HAVE_DWARFEXAMPLE], [test \"x${enable_dwarfexample}\" = \"xyes\"])\n\n### Solely for checking libdwarf allocation counts,sizes\n### Do not use without a good reason . See libdwarf/dwarf_alloc.c\nAC_ARG_ENABLE(globalallocsums,AS_HELP_STRING([--enable-global-alloc-sums],\n        [Enables some allocation counting in dwarf_alloc.c (default is NO)]),\n        [ AC_DEFINE([HAVE_GLOBAL_ALLOC_SUMS],[1],\n           [Define 1 if want some specialized allocation counting] )\n           [enable_globalallocsums=\"yes\"]\n        ],\n        [enable_globalallocsums=\"no\"])\n\nAC_ARG_ENABLE([sanitize],\n   [AS_HELP_STRING([--enable-sanitize],\n                   [enable sanitize compiler option @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_sanitize=\"yes\"],\n        [enable_sanitize=\"no\"])\n   ],\n   [enable_sanitize=\"no\"])\n\nAC_ARG_ENABLE([oldframecol],\n   [AS_HELP_STRING([--enable-oldframecol],\n                   [enable old frame columns @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_oldframecol=\"yes\"],\n        [enable_oldframecol=\"no\"])\n   ],\n   [enable_oldframecol=\"no\"])\n\nAS_IF(\n    [test \"x${enable_oldframecol}\" = \"xyes\"],\n    [AC_DEFINE(\n         [HAVE_OLD_FRAME_CFA_COL], [1],\n         [Set to 1 if old frame columns are enabled.])])\n\nAC_ARG_ENABLE([namestable],\n   [AS_HELP_STRING([--enable-namestable],\n                   [enable name string functions implemented as binary search (default is with C switch) @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_namestable=\"yes\"],\n        [enable_namestable=\"no\"])\n   ],\n   [enable_namestable=\"no\"])\n\n\nAS_IF(\n    [test \"x${enable_namestable}\" = \"xyes\"],\n    [AC_SUBST([dwarf_namestable], [-s])],\n    [AC_SUBST([dwarf_namestable], [-t])])\n\nAC_ARG_ENABLE([libelf],\n   [AS_HELP_STRING([--disable-libelf],\n     [disable use of libelf (default is enable) @<:@default=yes@:>@])],\n   [ AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [dwarf_with_libelf=\"yes\"],\n        [dwarf_with_libelf=\"no\"])\n   ],\n   [dwarf_with_libelf=\"yes\"])\n\n\nAC_ARG_ENABLE([windowspath],\n   [AS_HELP_STRING([--enable-windowspath],\n                  [Detect certain Windows paths as full paths (default is NO)])],\n   [ \n     AC_DEFINE([HAVE_WINDOWS_PATH],[1],\n       [Define 1 if want to allow Windows full path detection] )\n       [enable_windowspath=\"yes\"]\n   ],\n   [ \n     enable_windowspath=\"no\"\n   ])\n\nAC_ARG_ENABLE([wall],\n   [AS_HELP_STRING([--enable-wall],\n                   [enable -Wall and other options @<:@default=no@:>@])],\n   [\n    AS_IF(\n        [test \"x${enableval}\" = \"xyes\"],\n        [enable_wall=\"yes\"],\n        [enable_wall=\"no\"])\n   ],\n   [enable_wall=\"no\"])\n\nAC_ARG_ENABLE(nonstandardprintf,AS_HELP_STRING([--enable-nonstandardprintf],\n        [Use a special printf format for 64bit (default is NO)]),\n        [ AC_DEFINE([HAVE_NONSTANDARD_PRINTF_64_FORMAT],[1],\n           [Define 1 if need nonstandard printf format for 64bit] )\n           [enable_nonstandardprintf=\"yes\"]\n        ],\n        [enable_nonstandardprintf=\"no\"])\n\nAC_ARG_ENABLE(havecustomlibelf,AS_HELP_STRING([--enable-havecustomlibelf],\n        [including a custom libelf library (default is NO)]),\n        [ AC_DEFINE([HAVE_CUSTOM_LIBELF],[1],\n           [Define 1 if including a custom libelf library] )\n           [enable_havecustomlibelf=\"yes\"]\n        ],\n        [enable_havecustomlibelf=\"no\"])\n\n### Default options with respect to host\n\nAC_CANONICAL_HOST\n\nhave_win32=\"no\"\ncase \"$host_os\" in\n   mingw*)\n      have_win32=\"yes\"\n   ;;\nesac\n\nAM_CONDITIONAL([HAVE_WIN32], [test \"x${have_win32}\" = \"xyes\"])\n\n\n### Checks for programs\n\nAM_PROG_AR\n\n### We don't use dist-xz *.xz output from make dist,\n### so don't mention it.\nAM_INIT_AUTOMAKE([1.6])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\nLT_INIT([win32-dll disable-shared static])\n\nversion_info=\"lt_cur:lt_rev:lt_age\"\nrelease_info=\"v_rel\"\nAC_SUBST([version_info])\nAC_SUBST([release_info])\n\nAC_PROG_CC\nAC_PROG_CXX\nAC_PROG_CC_C_O\n\n###PKG_PROG_PKG_CONFIG Intentionally not using pkg-config\n\n### Checks for libraries\n\nAC_SUBST([DWARF_LIBS])\nAC_ARG_VAR([DWARF_LIBS], [linker flags when linking libdwarf])\n\n\n### Checks for header files\n\n### MacOS does not have malloc.h\nAC_CHECK_HEADERS([unistd.h sys/types.h regex.h malloc.h])\n### for uintptr_t \nAC_CHECK_HEADERS([stdint.h inttypes.h stddef.h])\nAC_CHECK_HEADERS([windows.h])\n\nAC_CHECK_HEADERS([zlib.h])\nAS_IF(\n    [test \"x${ac_cv_header_zlib_h}\" = \"xyes\"],\n    [ have_pc_zlib=\"yes\" ; echo \"have zlib\" ; \n      DWARF_LIBS=\"${DWARF_LIBS} -lz\" ],\n    [ have_pc_zlib=\"no\" ; echo \"no zlib\" ])\n\n### for use in casts to uint to avoid 32bit warnings.\n### Also needed by C++ cstdint\nAC_TYPE_UINTPTR_T\nAC_TYPE_INTPTR_T\n### Now we know uintptr_t is either in stdint.h or\n### is defined in config.h by configure.\n\n# test Elf headers in the preprocessor path search\nCPPFLAGS_save=${CPPFLAGS}\n### we set $dwarf_with_libelf above.\nif test  $dwarf_with_libelf = \"yes\" ; then\n  AC_CHECK_HEADERS([sgidefs.h])\n  AC_CHECK_HEADERS([libelf.h libelf/libelf.h])\n  AC_CHECK_HEADERS([elf.h elfaccess.h sys/elf_386.h sys/elf_amd64.h sys/elf_SPARC.h sys/ia64/elf.h])\n  \n  ### if no libelf.h add no -lelf and turn off \n  ### libelf recognition.\n  AS_IF([test \"x${ac_cv_header_libelf_h}\" != \"xyes\" -a \"x${ac_cv_header_libelf_libelf_h}\" != \"xyes\" ],\n    [ dwarf_with_libelf=\"no\"\n      echo \"no libelf headers, no libelf\" ],\n    [ DWARF_LIBS=\"${DWARF_LIBS} -lelf\"  \n      dwarf_with_libelf=\"yes\" \n      echo \"Allowing use of libelf.\"\n      AC_DEFINE([DWARF_WITH_LIBELF],[1],\n        [Set to 1 as we are building with libelf]) \n    ])\n\n\n### begin checking for Elf structs\n# Elf64_Rela in elf.h\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n         ]],\n         [[\nElf64_Rela p;\np.r_offset = 1;\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_ELF64_RELA], [1], [Set to 1 if Elf64_Rela defined in elf.h.])\n     have_elf64_rela=\"yes\"\n    ],\n    [have_elf64_rela=\"no\"])\n\nAS_IF(\n    [test \"x${have_elf64_rela}\" = \"xno\"],\n    [\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM(\n              [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n              ]],\n              [[\nElf64_Rela p;\np.r_offset = 1;\n              ]])\n         ],\n         [\n          AC_DEFINE([HAVE_ELF64_RELA], [1], [Set to 1 if Elf64_Rela defined in elf.h.])\n          have_elf64_rela=\"yes\"\n         ],\n         [have_elf64_rela=\"no\"])\n     CPPFLAGS=${CPPFLAGS_save}\n    ])\n\nAC_MSG_CHECKING([for Elf64_Rela in elf.h])\nAC_MSG_RESULT([${have_elf64_rela}])\n\n# Elf64_Rel in elf.h\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n         ]],\n         [[\nElf64_Rel p;\np.r_info = 1;\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_ELF64_R_INFO], [1], [Set to 1 if Elf64_Rel structure as r_info field.])\n     have_elf64_rel=\"yes\"\n    ],\n    [have_elf64_rel=\"no\"])\n\nAS_IF(\n    [test \"x${have_elf64_rel}\" = \"xno\"],\n    [\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM(\n              [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n              ]],\n              [[\nElf64_Rel p;\np.r_info = 1;\n              ]])\n         ],\n         [\n          AC_DEFINE([HAVE_ELF64_R_INFO], [1], [Set to 1 if Elf64_Rel structure as r_info field.])\n          have_elf64_rel=\"yes\"\n         ],\n         [have_elf64_rel=\"no\"])\n     CPPFLAGS=${CPPFLAGS_save}\n    ])\n\nAC_MSG_CHECKING([for Elf64_Rel in elf.h])\nAC_MSG_RESULT([${have_elf64_rel}])\n\n# Elf64_Sym in elf.h\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n         ]],\n         [[\nElf64_Sym p;\np.st_info = 1;\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_ELF64_SYM], [1], [Set to 1 if Elf64_Sym defined in elf.h.])\n     have_elf64_sym=\"yes\"\n    ],\n    [have_elf64_sym=\"no\"])\n\nAS_IF(\n    [test \"x${have_elf64_sym}\" = \"xno\"],\n    [\n     CPPFLAGS_save=${CPPFLAGS}\n     CPPFLAGS=\"${CPPFLAGS} -D__LIBELF64\"\n     AC_LINK_IFELSE(\n         [AC_LANG_PROGRAM(\n              [[\n#ifdef HAVE_ELF_H\n# include <elf.h>\n#endif\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n              ]],\n              [[\nElf64_Sym p;\np.st_info = 1;\n              ]])\n         ],\n         [\n          AC_DEFINE([HAVE_ELF64_SYM], [1], [Set to 1 if Elf64_Sym defined in elf.h.])\n          have_elf64_sym=\"yes\"\n         ],\n         [have_elf64_sym=\"no\"])\n     CPPFLAGS=${CPPFLAGS_save}\n    ])\n\nAC_MSG_CHECKING([for Elf64_Sym in elf.h])\nAC_MSG_RESULT([${have_elf64_sym}])\n### end checking for Elf structs\n\n### Checks for Elf structures\n# test if struct _Elf is used instead of struct Elf\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_LIBELF_H\n# include <libelf.h>\n#endif\n#ifdef HAVE_LIBELF_LIBELF_H\n# include <libelf/libelf.h>\n#endif\n/* This must be at global scope */\nstruct _Elf;\ntypedef struct _Elf Elf;\n         ]],\n         [[\nstruct _Elf *a = 0;\n         ]])\n    ],\n    [\n     have_struct__elf=\"yes\"\n     struct_elf=\"struct _Elf\"\n    ],\n    [\n     have_struct__elf=\"no\"\n     struct_elf=\"struct Elf\"\n    ])\n\nAC_MSG_CHECKING([whether struct _Elf is used])\nAC_MSG_RESULT([${have_struct__elf}])\nelse\n  ### end where dwarf_with_libelf == \"no\" via\n  ### --disable-libelf\n  have_struct__elf=\"no\"\n  struct_elf=\"struct Elf\"\n  have_elf64_rela=\"no\"\n  have_elf64_rel=\"no\"\n  have_elf64_sym=\"no\"\nfi\nAC_SUBST([struct_elf])\n\n### Checks for compiler characteristics\n\nAC_C_BIGENDIAN([AC_DEFINE([WORDS_BIGENDIAN], [1], [Set to 1 if bigendian build])],,)\n\n# gcc accepts even totally bogus -Wno flags. Other compilers..no\n# -Wno-long-long suppresses warnings on 'long long'\n# -Wno-pedantic-ms-format (which only exists in mingw)\n# suppresses warnings about I64 printf format.\nAS_IF(\n    [ test \"x$enable_wall\" = \"xyes\" ],\n    [ \n       cxx_compiler_flags=\"-Wall -Wextra -Wno-unused-private-field -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Werror\"\n\n       c_compiler_flags=\"-Wall -Wextra -Wpointer-arith -Wmissing-declarations -Wcomment -Wformat -Wpedantic -Wuninitialized -Wshadow -Wno-long-long -Wmissing-prototypes -Wdeclaration-after-statement -Wbad-function-cast -Wmissing-parameter-type -Wnested-externs -Werror\"\n    ]\n    )\nAS_IF(\n    [ test \"x$enable_nonstandardprintf\" = \"xyes\" ],\n    [\n       cxx_compiler_flags=\"$cxx_compiler_flags -Wno-pedantic-ms-format\"\n\n       c_compiler_flags=\"$c_compiler_flags -Wno-pedantic-ms-format\"\n    ]\n    )\n\nDWARF_CHECK_CXX_COMPILER_FLAGS([${cxx_compiler_flags}])\nDWARF_CHECK_C_COMPILER_FLAGS([${c_compiler_flags}])\n\n# unused attribute\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\nstatic unsigned int foo(unsigned int x, __attribute__ ((unused)) int y){\n    unsigned int x2 = x + 1;\n    return x2;\n}\nint goo() {\n    unsigned int y = 0;\n    y = foo(12, y);\n}\n         ]],\n         [[\n         ]])\n    ],\n    [\n     have_unused=\"yes\"\n     AC_DEFINE(\n         [HAVE_UNUSED_ATTRIBUTE], [1],\n         [Set to 1 if __attribute__ ((unused)) is available.])\n    ],\n    [have_unused=\"no\"])\n\nAC_MSG_CHECKING([whether \"unused\" attribute is available])\nAC_MSG_RESULT([${have_unused}])\n\n# sanitize\nAS_IF(\n    [test \"x${enable_sanitize}\" = \"xyes\"],\n    [\n     CFLAGS_save=${CFLAGS}\n     CFLAGS=\"${CFLAGS} -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n     DWARF_CFLAGS=\n     AC_COMPILE_IFELSE(\n         [AC_LANG_PROGRAM([[]], [[]])],\n         [\n          enable_sanitize=\"yes\"\n          DWARF_CFLAGS=\"$DWARF_CFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n          LDFLAGS=\"$LDFLAGS -fsanitize=address -fsanitize=leak -fsanitize=undefined -fno-omit-frame-pointer\"\n         ],\n         [enable_sanitize=\"no\"])\n     CFLAGS=\"${CFLAGS_save} ${DWARF_CFLAGS}\" \n     DWARF_CFLAGS=\n    ])\n\nAC_MSG_CHECKING([whether sanitize options are used])\nAC_MSG_RESULT([${enable_sanitize}])\n\n\n### Checks for linker characteristics\n\n\n### Checks for library functions\n\nAC_FUNC_ALLOCA\n\nif test  $dwarf_with_libelf = \"yes\" ; then\n# elf64_getehdr\nCPPFLAGS_save=${CPPFLAGS}\nCPPFLAGS=\"${CPPFLAGS}\"\nLIBS_save=${LIBS}\nLIBS=\"${LIBS} ${DWARF_LIBS}\"\nAC_SEARCH_LIBS(\n    [elf64_getehdr], [elf],\n    [\n     have_getehdr=\"yes\"\n     AC_DEFINE(\n         [HAVE_ELF64_GETEHDR], [1],\n\t [Set to 1 if the elf64_getehdr function is in libelf.])\n     ],\n     [have_getehdr=\"no\"])\nAC_SEARCH_LIBS(\n    [elf64_getshdr], [elf],\n    [\n     have_getshdr=\"yes\"\n     AC_DEFINE(\n         [HAVE_ELF64_GETSHDR], [1],\n\t [Set to 1 if the elf64_getshdr function is in libelf.])\n     ],\n     [have_getshdr=\"no\"])\nCPPFLAGS=${CPPFLAGS_save}\nLIBS=${LIBS_save}\nelse\n  have_getehdr=\"no\"\n  have_getshdr=\"no\"\nfi\n\nAS_IF(\n    [test \"x${have_pc_zlib}\" = \"xno\"  -a \"x${have_zlib}\" = \"xyes\"],\n    [AC_SEARCH_LIBS([z], [have_zlib=\"yes\"], [have_zlib=\"no\"])])\n\nAS_IF(\n    [test \"x${have_pc_zlib}\" = \"xyes\"  -o \"x${have_zlib}\" = \"xyes\"],\n    [\n     have_zlib=\"yes\"\n     AC_DEFINE([HAVE_ZLIB], [1], [Set to 1 if zlib decompression is available.])\n    ],\n    [\n     have_zlib=\"no\"\n    ])\n\nAC_COMPILE_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_REGEX_H\n# include <regex.h>\n#endif\n         ]],\n         [[\nint i;\nregex_t r;\nint cflags = REG_EXTENDED;\nconst char *s = \"abc\";\ni = regcomp(&r,s,cflags);\nregfree(&r);\n         ]])\n    ],\n    [\n     AC_DEFINE([HAVE_REGEX], [1], [Set to 1 if regex is usable.])\n     have_regex=\"yes\"\n    ],\n    [have_regex=\"no\"])\n\nAC_MSG_CHECKING([for regex library])\nAC_MSG_RESULT([${have_regex}])\n\n### Checks for system services\n\nAC_CONFIG_FILES([\nMakefile\nlibdwarf/Makefile\ndwarfdump/Makefile\ndwarfgen/Makefile\ndwarfexample/Makefile\n])\n\n### libdwarf needs to be adjusted to support struct Elf\n### or struct _Elf, whichever the system defines in libelf.\nAC_CONFIG_COMMANDS([libdwarf/libdwarf.h],\n  [ sh $src/scripts/fixlibdwarfelf.sh $haself $src $top ],\n  [ haself=${have_struct__elf}  top=${ac_pwd}   src=${srcdir} ]  )\n\n\nAC_OUTPUT\n\necho\necho \"$PACKAGE $VERSION\"\necho\necho \"Configuration Options Summary:\"\necho\necho \"  BuildOS..............: ${build_os}\"\necho \"  HostOS...............: ${host_os}\"\necho\necho \"  shared library.......: ${enable_shared}\"\necho \"  static library.......: ${enable_static}\"\necho\necho \"  zlib support.........: ${have_zlib}\"\necho \"  sanitize support.....: ${enable_sanitize}\"\necho \"  BuildOS-BigEndian....: ${ac_cv_c_bigendian}\"\necho\necho \"  libdwarf.............: always\"\necho \"    old frame column...: ${enable_oldframecol}\"\necho \"    names table........: ${enable_namestable}\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    elf64_getshdr......: ${have_getshdr}\"\necho \"    Elf64_Rela.........: ${have_elf64_rela}\"\necho \"    Elf64_Sym..........: ${have_elf64_sym}\"\necho \"    Elf spelled........: ${struct_elf}\"\necho \"    libelf.............: ${dwarf_with_libelf}\"\necho \"    Windows path corr..: ${enable_windowspath}\"\necho \"    Nonstandardprintf..: ${enable_nonstandardprintf}\"\necho \"    Custom libelf......: ${enable_havecustomlibelf}\"\necho \"  dwarfdump............: always\"\necho \"    elf64_getehdr......: ${have_getehdr}\"\necho \"    Elf64_Rel (r_info).: ${have_elf64_rel}\"\necho \"    regex..............: ${have_regex}\"\necho \"  dwarfgen.............: ${enable_dwarfgen}\"\necho \"  dwarfexample.........: ${enable_dwarfexample}\"\necho\necho \"Compilation............: make (or gmake)\"\necho \"  CPPFLAGS.............: $CPPFLAGS\"\necho \"  CFLAGS...............: $CFLAGS ${c_compiler_flags}\"\necho \"  LDFLAGS..............: $LDFLAGS\"\necho \"  LIBS.................: $LIBS\"\necho \"  DWARF_LIBS...........: $DWARF_LIBS\"\necho\necho \"Installation...........: make install (as root if needed, with 'su' or 'sudo')\"\necho \"  prefix...............: $prefix\"\necho\n", "2020-10-17: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-10-15: David Anderson\n    * print_lines.c(print_line_context_record): Fixed the\n      comments  about DWARF4 vs 5.\n2020-10-13: David Anderson\n    * print_macro.c: Added the required check for 0\n      opcode and print appropriately (it's the null\n      byte at end of macro operands).\n2020-10-12: David Anderson\n    * dwarfdump.c: Now printf callbacks from libdwarf\n      are sanitized() to prevent corrupted line data from\n      compromising user terminal settings.\n    * print_lines.c: Accomodation of DWARF5 in more places.\n2020-10-11: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-10-11: David Anderson\n    * command_options.c: Refined a wordy comment.\n    * dwarfdump.1: Document the new ability to\n      get to GNU debuglink files automatically.\n    * dwarfdump.c: Implement support for reading GNU\n      debuglink and use it to find the target object.\n2020-10-05: David Anderson\n    * command_options.c: Implemented first part of\n      making GNU debuglink options work.\n    * dwarfdump.c: Now using dwarf_init_path()\n      working toward\n      making GNU debuglink options work.\n    * glflags.h: Commented gf_debug_names_flag\n      to avoid confusing it with debuglink.\n2020-10-03: David Anderson\n    * Makefile.in: Autoreconf using Ubuntu 20.04 \n      made small changes.\n    * COPYING: Corrected the references to the BSD copyright\n      to use \"two-clause BSD license\".\n2020-10-02: David Anderson\n    * command_options.c,glflags.h,print_frames.c: Remove\n      trailing whitespace.\n2020-10-02: David Anderson\n    * command_options.c: New options --no-follow-debuglink\n      and --add-debuglink_path=<text> for working with\n      GNU debuglink. \n    * glflags.h: Added gf_no_follow_debuglink and\n      gf_global_debuglink_paths and gf_global_debuglink_count.\n2020-09-30: David Anderson\n    * command_options.c: If more than one non-dash\n      word is at the end of the dwarfdump command\n      it used to complain no object name given.\n      Now in that case it complains that more than\n      one was given. Slightly more sensible.\n2020-09-27: David Anderson\n    * dwarfdump.c: --print-gnu_debuglink output wording\n      made clearer.\n2020-09-27: David Anderson\n    * dwarfdump.c: Now --print-gnu_debuglink also\n      indicates what files it found in the paths\n      calculated, making --print-gnu_debuglink more useful.\n    * command_options.c: Corrected a typo in a comment about\n      the option --print-gnu_debuglink.\n2020-09-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-09-18: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-09-18: David Anderson\n    * print_frames.c: Shortened too-long comment lines.\n2020-09-17: David Anderson\n    * print_frames.c: A very old typgraphical error\n      meant that in rare circumstances memory leakage\n      of a few bytes was possible with  option\n      --suppress-de-alloc-tree.\n2020-09-10: David Anderson\n    * esb_using_functions.h: Adding new argument to \n      the print_ranges_list_to_extra() prototype.\n    * print_die.c: Using that new argument to\n      pass the true offset to the printing code.\n    * print_ranges.c: Updated the printing to make it clearer\n      it clearer the .debug_ranges offset is using\n      a base address (when there is one).\n2020-09-10: David Anderson\n    * dwarfdump.c: Remove trailing whitespace.\n2020-09-08: David Anderson\n    * dwarfdump.c: Now cleans up terminating DW_DLV_ERROR\n      allocation even when the object cannot finish dwarf_init*().\n      Fixes print_error() so it works right with dbg null.\n2020-09-08: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-09-07: David Anderson\n    * glflags.h,print_die.c: Fixed idents and trailing whitespace.\n2020-09-06: David Anderson\n    * globals.h:  print_die_and_children() declaration\n      removed, the function is now static in print_die.c.\n    * print_die.c: On an error following a call to dwarf_child\n      (but where dwarf_child() succeeded) we were failing to \n      dwarf_dealloc_die(child). And even the main path\n      (no error from dwarf_child) failed to dealloc child.\n2020-09-05: David Anderson\n    * print_die.c: In a couple error messages spell the\n      function name that returned error correctly.\n2020-08-28: David Anderson\n    * print_die.c: Fixed indent and trailing whitespace.\n2020-08-27: David Anderson\n    * dwarfdump.c: Fix some warnings counted as errors\n      by ensuring the ERROR string is in them (they\n      just flag in particular situations that the DW_AT_producer\n      attribute is missing on the Compilation Unit).\n    * print_die.c: Fix places where we double-counted\n      errors.\n    * print_frames.c: Annotate an existing ERROR so that\n      it is counted in the ERROR count.\n    * print_llex_codes.c, print_origloclist_codes.c,\n      print_ranges.c,print_reloc.c: Fix  \n      double-counts of errors.\n    * print_reloc_decls.h: Just do a printf, no reason\n      to use struct esb_s here.\n2020-08-23: David Anderson\n    * compiler_info.c: Now we apply sanitized() to all\n      the printed strings (just in case an object file\n      is corrupted or maybe not plain ascii strings).\n2020-08-23: David Anderson\n    * dwarfdump-ta-ext-table.h: Regenerated\n    * tag_attr_ext.list: Added DW_AT_GNU_macros\n      to the known-extensions list.\n2020-08-23: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-08-23: David Anderson\n    * checkutil.c,dwarfdump.c,print_die.c: Removed trailing\n      whitespace, fixed indents.\n2020-08-23: David Anderson\n    * checkutil.c: Removed #if 0 lines from previous commit.\n    * dwarfdump.c: Removed debug printf lines.\n    * print_die.c: Removed debug printf lines.\n2020-08-22: David Anderson\n    * checkutil.c: Temporary debug printf.\n    * dwarfdump.c: Revised pRangesInfo reset\n      when we have a tied dbg, as in that case \n      we often miss function/scope address ranges.\n      Temporary debug printf too.\n    * globals.h: Adding a Dwarf_Debug argument to\n      tag_specific_checks_setup() for when tied file\n      present.\n    * print_abbreves.c: Temporary debug.\n      New arglist for tag_specific_checks_setup()\n    * print_die.c: Get the text section bounds\n      set (from tied object, if any) so checks\n      of address will not incorrectly fail.\n2020-08-22: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n\t  dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n\t  dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-08-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n\t  dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Updated version string, regenerated\n      files using it.\n2020-08-02: David Anderson\n    * print_die.c: Now with Additional checking of DW_LKIND\n      values and an error report if one tries to use the original\n      location interface with newer DWARF location data.\n    * print_frames.c: Added short comments for clarity. \n2020-07-28: David Anderson\n    * dwarf_names.c: Regenerated.\n    * print_die.c: Added DW_OP_GNU_variable_value to the table.\n2020-07-19: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n\t  dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n\t  dwarfdump-tt-table.h: Regenerated with latest\n      version string.\n2020-07-16: David Anderson\n    * tag_attr.list: Added some normal standard TAG/ATTR\n      combinations (some new in DWARF5)\n    * tag_attr_ext.list: Added some normal GNU \n      TAG/ATTR usages.\n    * tag_tree.list: Added some normal standard TAG/TAG\n      relationships.\n    * tag_common.h: Increased a row maximum by one\n      to match the increase in the lists.\n    * dwarfdump.1: Improved the wording for -kt -kr\n      and the modifier -C (they have longopts names\n      too).\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: Regenerated\n    * print_hipc_lopc_attr.c: Fixed indents and\n      trailing whitespace.\n2020-07-16: David Anderson\n    * tag_attr.list,tag_attr_ext.list,tag_tree.list:\n      corrections and some DWARF5 additions to the tables.\n    * tag_common.h: Increased table sizes where necessary\n      for the new *list data.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: Regenerated\n2020-07-16: David Anderson\n    * globals.h,print_die.c: Revised a key function name, \n      yesterdays name was excessively long. New name is\n      dd_get_integer_and_name().\n    * print_hipc_lopc_attr.c: That name changed here too.\n      and a blob of code was factored out into a new\n      function update_cu_base_addresses() which just\n      establishes names used in presenting details\n      in case of errors (a function with no side effects\n      but setting the glflags fields for use in error reports).\n2020-07-15: David Anderson\n    * CMakeLists.txt,Makefile.am: Added print_hipc_lopc_attr.c.\n    * Makefile.in: Regenerated.\n    * print_die.c: Moved print_hipc_lopc_attribute() from\n      here to print_hipc_lopc_attr.c.\n      Moved file-static variables bSawLow bSawHigh lowAddr\n      highAddr to print_one_die(), no need to be global.\n      get_small_encoding_integer_and_name() renamed.\n    * print_hipc_lopc_attr.c: New. Holds the larg-ish\n      function print_hipc_lopc_attribute() from .\n    * globals.h: Now _dwarf_get_small_encoding_integer_and_name()\n      can be called from more than one file in libdwarf.\n      Added print_hipc_lopc_attribute() declaration as it\n      is moved to its own source file.\n    * glflags.h: Added new member in_valid_code.\n    * glflags.c: Added glflags.in_valid_code = FALSE,\n      a new global-like variable to replace the old\n      print_die.c static variable in_valid_code.\n      Adds a bit of clarity.\n    * dwarfdump.c(tag_specific_checks_setup): Added new\n      DWARF5 CU DIE tags here. \n    * print_debug_sup.c: Fixed indent and trailing whitespace.\n2020-07-14: David Anderson\n    * print_die.c: Moved 4 variables, including\n      bSawLow and bSawHigh from static to being local\n      variables. Altered one internal interface to suit.\n      Now easier to understand.\n2020-07-14: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with new\n      version string.\n2020-07-13: David Anderson\n    * CMAkeLists.txt: Adding print_debug_sup.c  .\n    * Makefile.am: Adding print_debug_sup.c  .\n    * Makefile.in: Regenerated.\n    * command_options.c: Added flag  gf_debug_sup_flag\n      amd --print-debug-sup options.\n    * dwarf_names.c: Regenerated. Reflects the correction of \n      DW_GNUIVIS_static value for the .debug_sup section.\n    * dwarfdump.c: Adds check of gf_debug_sup_flag and\n      call of print_debug_sup().\n    * glflags.h: Adds boolean gf_debug_sup_flag.\n    * globals.h: Adds print_debug_sup() declaration.\n    * print_debug_sup.c: new to print .debug_sup.\n2020-07-11: David Anderson\n    * print_debug_gnu.c: After printing the section \n      added the dwarf_gnu_index_dealloc() to immediately\n      free the data allocated for printing the section.\n2020-07-08: David Anderson\n    * dwarfdump.1: Mentioning new print options (the\n      latest additions to dwarfdump) and suggesting\n      that -v -G and -M are sometimes helpful.\n2020-07-08: David Anderson\n    * print_debug_gnu.c,print_die.c: Fixed indents and\n      removed trailing whitespace.\n2020-07-08: David Anderson\n    * command_options.c: Misspelled argname in a comment.\n    * print_debug_gnu.c: Added minor checking for errors,\n      there is more to come in error checking. \n2020-07-06: David Anderson\n    * dwarf_names.c, dwarf_names.h: Regenerated,\n      Adding the non-standard dwarf\n      prefixes DW_GNUIVIS* and DW_GNUIKIND* in support\n      of .debug_gnu_pubtypes and .debug_gnu_pubnames.\n      The first support for these sections.\n      DW_DLE_GNU_PUBNAMES_ERROR\n      DW_DLE_GNU_PUBTYPES_ERROR\n      DW_DLE_DUPLICATE_GNU_DEBUG_PUBNAMES\n      DW_DLE_DUPLICATE_GNU_DEBUG_PUBTYPES\n    * Makefile.am: Adding print_debug_gnu.[ch] to the files list.\n    * Makefile.in: Regenerated.\n    * command_options.c: Add --print-debug-gnu option\n      to print these sections.\n    * dwarfdump.c: Implement printing of these sections.\n    * glflags.h: Addd boolean gf_debug_gnu_flag for the\n      --print-debug-gnu option.\n    * print_debug_gnu.c: Now prints these sections.\n2020-07-04: David Anderson\n    * print_die.c(dot_ok_in_identifier): Removed unused argument.\n      Added DW_TAG_skeleton_unit to the if condition.\n      This function affects only whether a CHECK message\n      reports a warning, it has no effect when printing. \n2020-07-04: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with new\n      version string.\n2020-07-03: David Anderson\n    * CMakeLists.txt, Makefile.am: Renamed print_dnames.c to\n      print_debug_names.c\n    * Makefile.in: Regenerated.\n    * command_options.c: Corrected the help text for\n      --print-fission.  Added --print-debug_names,\n      which does not yet do anything useful.\n2020-07-01: David Anderson\n    * esb.h: Make debug-only locals unsigned long instead of long.\n    * print_die.c: Where there is a N iteration loop adding\n      to esb strings use N and an estimate of per-loop text size\n      request a sensible space increment\n      to ensure there is enough space  that completing\n      the set of strings will not need another malloc.\n      Saved about 1% of cputime in full regression test.\n2020-06-29: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Regenerated with new\n      version string.\n2020-06-29: David Anderson\n    * print_die.c: Fixed a minor formatting error on\n      DW_AT_location and related attributes.\n2020-06-28: David Anderson\n    * tag_attr.list,tag_tree.list: Adding standard DWARF5\n      tag-tag and tag-attr relationships to the lists.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: Regenerated.\n2020-06-26: David Anderson\n    * print_die.c (print_attribute): Increased the stack \n      alloc of a string so that even fairly long \n      loclists/rangelists won't require malloc.\n      A tiny indent and trailing whitespace instance fixed too.\n    * test-mach-o-32.base: Updated baseline so make check\n      passes again.\n2020-06-25: David Anderson\n    * checkutil.c: Removed trailing whitespace.\n    * command_options.c: \n    * dwarfdump.1: Making the -C option intent\n      clearer.\n    * dwarfdump.c: Fixed trailing whitespace and indents.\n    * naming.c: Fixed trailing whitespace.\n    * print_die.c: Removed dead code. Corrected printing\n      if rnglists, ranges, loclists locations. Corrected \n      handling of the output with -k detected an error.\n      Ensured a couple esb_s variables get destructed\n      in case of error.  Added explanation how the\n      print_attribute() code actually works.\n    * print_frames.c: Corrected handling location operations\n      when checking (-k options).\n    * print_llex_codes.c,print_loclists_codes.c,\n      print_origloclist_codes.c: Corrected handling \n      location data when checking (-k options).\n    * tag_attr_ext_list.c: Added DW_AT_MIPS_linkage_name\n      as a common extension on a couple TAGs.\n2020-06-22: David Anderson\n    * checkutil.c: Document a bit more about how this works.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-table.h: regenerated\n    * dwarfdump.c: Doing a slightly better job identifying\n      the true range of text addresses in the object file,\n      which matters for some -k (checking) options.\n    * globals.h: Revised some argument lists for nicer\n      reporting of errors found with -k options.\n    * naming.c: regenerated.\n    * print_die.c: Certain names revised for greater\n      clarity of intent. print_information ->\n      print_else_name_match which at least hints\n      at what the variable is doing.\n    * print_frames.c: Suppresses some output when checking.\n    * print_llex_codes.c: When checking suppress some output.  \n    * print_loclists.c: Removed pointless {}.\n    * print_loclists_codes.c,print_orginal_loclist_linecodes.c:\n      Suppresses some output when checking.\n    * print_rnglists.c: Clarify which routines apply solely\n      to printing raw rangelists.\n    * tag_attr_ext.list: Added DW_AT_encoding to common extentions\n    * tag_common.h: Incremeneted EXT_ATTR_TABLE_ROWS 16 \n      so the tables can be rebuilt.\n2020-06-22: David Anderson\n    * dwarfdump.c: Fixing some old formatting mistakes.\n      NOT TO BE USED Yet.\n2020-06-20: David Anderson\n    * tag_attr.c,tag_attr.list,tag_common.h: Adding in\n      DWARF5 TAG ATTR combinations required raising \n      hard coded value, and improving one of the\n      error messages appearing with the wrong limit.\n2020-06-20: David Anderson\n    * tag_attr.list: Added DW_AT_loclists_base,\n      DW_AT_alignment,DW_AT_call_all_calls,DW_AT_noreturn\n      with the TAGs they go with.\n2020-06-17: David Anderson\n    * Makefile.am, CMakeLists.txt: Renamed \n      print_loclist_original.c -> print_origloclist_codes.c\n      so the three distinct format loclist \n      printers all end in codes.c.\n    * Makefile.in: Regenerated\n2020-06-17: David Anderson\n    * print_loclists.c: Improve the formatting\n      of the raw report.\n    * print_rnglists.c: Significatly improve\n      the formatting of the raw report.\n2020-06-17: David Anderson\n    * globals.h: Some args now just values, not pointers,\n      the Dwarf_Addr  * hipc in\n      print_llex_linecodes() was a holdover from past\n      versions. Not needed.\n    * print_die.c,print_llex_codes.c,print_loclist_original.c,\n      print_loclists_codes.c: Similarly.\n2020-06-12: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h : updated version string.\n2020-06-12: David Anderson\n    * dwarfdump.c, globals.h,print_die.c,print_llex_codes.c,\n      print_loclist_original.c,print_loclists.c,\n      print_loclists_codes.c,print_rnglists.c: Fix indents\n      and remove trailing whitespace.\n2020-06-10: David Anderson\n    * CMakeLists.txt: Added print_loclists.c to the C file list.\n    * runtests.sh: Changed the generated (temporary) filenames\n      so it is easier to understand where to copy the\n      new baseline result to update the right baseline.\n    * testobjLE32PE.base: New baseline, needed as loclist\n      output changed.\n    * print_frames.c: Calling loclist dealloc on\n      error to avoid leaks.\n2020-06-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h : Updated  version string\n2020-06-09: David Anderson\n    * Makefile.am: New files due to refactoring.\n    * Makefile.in: Regenerated.\n    * command_options.c: Added --print-raw-loclists\n      which prints all the details of .debug_lists\n      but does not do any reference to .debug_info\n      or .debug_addr (for example).\n    * dwarfdump.c: Deals with --print-raw-loclists by\n      calling new function print_raw_all_loclists()\n    * esb_using_functions.c: Minor change to support\n      revised internal function interface to\n      dwarfdump_print_location_operations().\n    * glflags.h: Added global flag gf_print_raw_loclists.\n    * globals.h: Several new interfaces added so\n      dwarf_loc.c and dwarf_loclists.c call each other\n      as needed. And support for the different loclists\n      supported: DWARF 3, GNU Dwarf4 dwo extension,\n      and DWARF5.\n    * print_die.c:  Added die_indent_level a few places\n      for loclist printing. Significant changes to\n      support the loclist details.\n      Some renaming of things (data, functions) whose\n      purpose was obfuscated by the name.\n      Using new libdwarf interfaces that support\n      the new data in libdwarf.\n      Some significat refactoring so the structure\n      of what is being done can be easily seen.\n      No longer computes final loclist low/high addr\n      as libdwarf does that for us now.\n    * print_frames.c: Reflects the revised function\n      naming.\n    * print_frames.h: Reflects the revised function name.\n    * print_llex_codes.c: Factored out of print_die.c\n      and heavily revised to reflect the new location\n      data.\n    * print_loclist_original.c: Factored out of print_die.c\n      and heavily revised to reflect the new location\n      data.\n    * print_loclists.c: All new, this does the .debug_loclists\n      specific printing.\n    * print_loclists_codes.c: All new. Prints DWARF5\n      loclists data properly.\n    * print_locs.c: Reflects a revised function name.\n    * print_rnglists.c: Corrected an out of date comment.\n    * uri.c: 'unsigned int' instead of 'unsigned' for a\n      picky compiler.\n2020-05-23: David Anderson\n    * dwarf_globals.h: Define ESB_FIXED_ALLOC_SIZE 380.\n    * print_die.c,print_lines.c,print_pubnames.c: Now using \n      ESB_FIXED_ALLOC_SIZE in many places to (mostly)\n      avoid any need for malloc/free by the esb functions.\n2020-05-21: David Anderson\n    * dwarfdump.c: Now using DROP_ERROR_INSTANCE macro\n      everwhere needed, avoiding the hand-coding.\n      Using dwarf_dealloc_attribute() now.\n    * dwarf_globals.h: Extra parens in DROP_ERROR_INSTANCE\n      for readability, and using dwarf_dealloc_error()\n      in it for type-checking.\n    * print_die.c: Using dwarf_dealloc_attribute() \n      and dwarf_dealloc_die() now.\n    * print_frames.c: Now we call DROP_ERROR_INSTANCE\n      with the proper arguments as the compiler can type-check\n      that sort of thing. And fixed code to honor\n      its invariants (a function that should not return\n      DW_DLV_ERROR now avoids doing so).\n    * print_lines.c: Also using DROP_ERROR_INSTANCE now.\n    * print_macro.c: Now using DROP_ERROR_INSTANCE\n      and dwarf_dealloc_attribute().\n2020-05-19: David Anderson\n    * print_die.c: In an error case failed to dealloc the rnglists head.\n2020-05-19: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: New version string.\n2020-05-19: David Anderson\n    * print_die.c: Removed arguments that were not needed from\n      a couple of libdwarf rnglists functions and changed\n      code here to match.\n    * print_rnglists.c:  Fix trailing whitespace.\n      Turn on printing range lists\n      and offset table entries (if any) \n      with --print-raw-rnglists \n      even if no -v.\n2020-05-17: David Anderson\n    * globals.h: Remove trailing whitespace.\n    * print_die.c: Now prints DWARF5 .debug_rnglists section.\n      Fixes issues with handling certain attributes with new\n      FORMs in DWARF5.\n    * print_frames.c: Avoids terminating frame printing when\n      errors are seen attempting to get a function name\n      for an fde.\n    * print_rnglists.c: New. Implements the details of reading\n      the .debug_rnglists section.\n    * dwarf_alloc.c: Added new type, DW_DLA_RNGLISTS_HEAD.\n    * dwarf_die_deliv.c: Now reads all the DWARF5 CU DIE fields\n      that are needed to evaluate FORMs and section references.\n2020-05-04: David Anderson\n    * print_rnglists.c: Completing the code to print\n      all the details of the raw content of the\n      DWARF5 .debug_rnglists section.\n2020-05-02: David Anderson\n    * CMakeLists.txt: Added print_rnglists.c.\n    * Makefile.am: Added print_rnglists.c.\n    * Makefile.in: Regenerated.\n    * command_options.c: Added a new option --print-raw-rnglists.\n    * dwarfdump.c: Implemented printing raw rangelists, but\n      not yet completely.\n    * gflags.c: Added a new flag gf_print_raw_rnglists.\n    * print_rnglists.c: Prints an initial partial\n      report on  contents of any .debug_rnglists[.dwo]\n      section.\n    * print_sections.h: Just minor reformatting of\n      comments. No change.\n2020-04-28: David Anderson\n    * dwarfdump.c,print_die.c,print_frames.c: Removed\n      the use of tab chars in the output and use a space\n      or two instead. This greatly shortens the line\n      length needed when printing frame information details.\n      Looks better without the 16 or 24 leading blanks on\n      all those lines too.\n      The tab characters elsewhere were removed long ago.\n2020-04-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: Updated version string.\n2020-04-25: David Anderson\n    * print_die.c: Fix indents and remove trailing whitespace.\n    * print_frames.c: Rearranged what was local Dwarf_Error\n      and what was local. Fixed a dwarf_dealloc to\n      say DW_DLA_ERROR, not DW_DLV_ERROR. Yikes.\n    * print_lines.c: Changed a local variable name,\n      filename->lsrc_filename so searches were\n      more meaningful. Added missing dwarf_dealloc\n      to clear dead data when appropriate.\n2020-04-24  David Anderson \n    * dwarf_names.c, dwarf_names.h: Updated version string.\n    * dwarfdump-ta-ext-table.h,dwarfdump-ta-table.h,\n      dwarfdump-tt-ext-table.h,dwarfdump-tt-table.h:\n      Updated version string.\n2020-04-23  David Anderson \n    * print_aranges.c: Remove a debugging printf.\n      Delete duplicate dealloc calls.\n    * print_lines.c: clarify what the dealloc's do\n      so we don't call dealloc on something already\n      cleared.\n2020-04-23  David Anderson \n    * dwarfdump.c: Added in dealloc to prevent leaks.\n    * print_aranges.c: More thorough doing dealloc\n      as soon as appropriate.\n    * print_die.c,print_frames.c,print_lines.c:  Doing\n      appropriate early dealloc in the necessary places.\n2020-04-22  David Anderson \n    * command_options.c: Added to a stderr warning (longer message).\n    * dwarfdump.1: Removed SELECTIVE ENTRY PRINTING\n      section in favor of the new URI-STYLE INPUT/OUTPUT\n      and the SELECTIVE* data renamed as  LIMITING OUTPUT.\n    * dwarfdump.c: Now everywhere expects to get back status\n      from printing DWARF section data, reports on it if\n      there as an error , and continues.\n    * esb_using_functions.h: Various functions now have\n      Dwarf_Error * arg and return a DW_DLV_* value.\n    * globals.h: Now all the relevant functions return\n      a DW_DLV_* value and require Dwarf_Error * argument.\n    * print_aranges.c: Some formatting fixes plus\n      now get_producer_name() returns a DW_DLV* value,\n      like more or less everything else.\n    * print_die.c: Major revision to now return on error\n      with DW_DLV_* instead of printf followed by exit().\n    * print_frames.c: New local function dealloc_loc_atlist()\n      to clean up on-the-spot. Reintroduced load_CU_error_data()\n      to amplify the information reported on error.\n    * print_lines.c: Line formatting corrected.\n    * print_macro.c: Line formatting corrected.\n    * print_pubnames.c: Reflects new arglist to get_producer_name().\n    * print_ranges.c: Line formatting corrected.\n    * dwarf_errmsg_list.h: Added DW_DLE_USER_DECLARED_ERROR so\n      dwarfdump can declare an error on its own.\n    * dwarf_error.c: Added dwarf_error_creation() to allow dwarfdump\n      to create an error with a detailed explanation.\n    * dwarf_form.c: declared a DW_FORM_rnglistx to be used soon.\n    * dwarf_ranges.c: Comments about the missing .debug_rnglists\n      section support (coming soon).\n2020-04-22  David Anderson \n    * dwarfdump-ta-ext-table.h: regenerated\n    * tag_attr_ext.list: Added to common extensions list    .\n      DW_AT_GNU_pubnames\n      DW_AT_GNU_pubtypes\n      DW_AT_GNU_dwo_name\n      DW_AT_GNU_ranges_base\n      DW_AT_GNU_addr_base\n2020-04-17  David Anderson \n    * dwarfdump.c: Clarified some error messages and\n      changed the should_skip_this_cu() from a predicate\n      function to one in the standard form returning\n      a DW_DLV_* value with a boolean pointer and a Dwarf_Error*\n    * globals.h: Now should_skip_this_cu and \n      print_section_groups_data are in standard form for\n      calling libdwarf functions, returning a DW_DLV*.\n    * print_die.c, print_aranges.c, print_pubmames.c,\n      print_ranges.c,print_section_groups.c: Now with \n      the standard form returning a DW_DLV* and no \n      longer call print_error\n      so returns on error, does not exit().\n      Also fixed a lack of a dealloc of cu_die2 in print_die.c.\n    * print_macro.c: Deleted dwarf_dealloc() that are\n      no longer appropriate given we don't\n      just call exit(). These were not allocated\n      by the function that was dealloc-ing so\n      removed the deallocs here: Let higher levels\n      do it when we return the DW_DLV_ERROR.\n2020-04-16  David Anderson \n    * globals.h:prototypes of print_line_numbers_this_cu and\n      print_macros_5style_this_cu changed to the new style\n      with int return and Dwarf_Error *argument.\n    * dwarf_macrocheck.c: Added a comment line.\n    * print_die.c(print_one_die_section): Calls the\n      revised section prints per-CU- so errors are\n      passed back and dealt with.\n    * print_lines.c: Now functions return int instead\n      of print_error and exit.  Various errors\n      get more detailed output too. \n    * print_macro.c: Now with the new style of returning\n      errors up to caller.\n2020-04-14  David Anderson \n    * globals.h: Deleted unused function prototype.\n      Updated print_macinfo_by_offset() to the new\n      style of returning a DW_DLV*.\n    * print_die.c: Now a couple of places we avoid\n      calling print_error() as it exits and deal sensibly\n      with return values.\n    * print_macros.c: The printing of DWARF2,3,4 macro data\n      is now updated to avoid print_error() and to print\n      more details about problems.  And report output\n      now looks more regular.\n    * print_abbrevs.c: Fixed indents and trailing whitespace.\n2020-04-13  David Anderson \n    * dwarfdump.c,globals.h, print_abbrevs.c: print_abbrevs()\n      now returns an error properly with the details so\n      dwarfdump can deal with it properly.\n2020-04-10  David Anderson \n    * dwarfdump.c: Printing gdb_index and debugfission index\n      code now all returns DW_DLV* in the new style.\n    * globals.h: print_gdb_index() and print_debugfission_index()\n      get updated prototypes.\n    * print_debugfission.c: Code to match the new protypes,\n      passig errors back up.  Revised formatting a bit\n      for accuracy and completeness.\n    * print_die.c: Eliminated the odd use of stderr. All\n      now stdout.\n    * print_gdbindex.c: Improved various error messages.\n      Updated print_gdb_index() to the new return-on-error\n      approach.\n2020-04-07  David Anderson \n    * compiler_info.c: Clarified a comment and\n      split a too-long line.\n    * dwarfdump.c: Now handles a print_pubnames that\n      returns a DW_DLV* and deals with it. Made\n      a dwarf_dealloc conditional on  a non-null \n      cu_die_for_print_frames. get_producer_name()\n      now always returns and avoids leaks.\n      We add DEBUG_PUBNAMES  to the list wh print CU data\n      on error (It knows the CU-DIE)\n    * gflags.c: Reformatted to avoid a too-long line.\n    * globals.h: Revised prototype for print_pubnames().\n    * print_aranges.c: Removed too early destructor\n      on producer_name.\n    * print_die.c: Fixed a too-long-comment-line.\n    * print_frames.c: Moved a check for DW_DLV_ERROR up\n      a few lines so we don't check gf_check_frames()\n      when not needed.\n    * print_pubnames.c: Removed deal_with_name_offset_err()\n      as not the right thing to do. Now print_pubnames\n      accepts a Dwarf_Error * argument and always\n      returns a DW_DLV* result.\n2020-04-03  David Anderson \n    * print_aranges.c: Fixed trailing whitespace and indents.\n2020-04-03  David Anderson \n    * dwarfdump.c: Now print_strings() and print_macro_statistics()\n      take Dwarf_Error * as argument and return a DW_DLV* value.\n    * globals.h: prototype of print_strings altered.\n    * macrocheck.c(print_macro_statistics): Using esb_s to \n      more detailed messages and returning a DW_DLV* value..\n    * macrocheck.h: Updated prototype for print_macro_statistics().\n    * print_frames.c: Deleted many #if 0/#endif and their\n      debug printf-s.\n    * print_strings.c: Now uses get_true_section_name() so\n      we report on any compression used.\n2020-04-03  David Anderson \n    * runtests.sh: Added esb to the build of selfmc as macro check\n      now uses esb.c. Made the dwarfdump tests mention of update 'mv'\n      commands be conditional on having actually found a difference\n      (having them show when no difference was pointlessly confusing). \n2020-04-03  David Anderson \n    * dwarfdump.c: print_aranges() now uses the new form and returns\n      a DW_DLV_* value.\n    * globals.h: print_aranges returns a value and has a Dwarf_Error*\n      second argument now.\n    * print_aranges.c: No longer calls print_error() but instead\n      returns a DW_DLV to dwarfdump.c. \n2020-04-03  David Anderson \n    * dwarfdump.c,glflags.h,globals.h,print_die.c,print_frames.c,\n      print_locs.c,print_reloc.c,print_reloc_decls.h,print_static_funcs.c:\n      Fix indent errors and remove trailing whitespace.\n2020-04-02  David Anderson \n    * addrmap.c: Ensure it wn't try to use a null input to addr_map_destroy().\n    * dwarfdump.1: Add documentation on running dwarfdump on split-dwarf\n      objects (See DWARF5 standard, section 6.3).\n    * dwarfdump.c (process_one_file):Applyingthe new error-return scheme\n      to dwarf_frames.c required serious revisions and refactoring.\n    * dwconf_using_functions.h: The declaration of print_frames()\n      changed.\n    * glflags.h: gf_debug_addr_missing_search_by_address,\n      gf_error_code_in_name_search_by_address, and\n      gf_all_cus_seen_search_by_address are here now instead of\n      being hard to reason about global/local data.\n    * glflags.c: Initializes the three fields.\n    * globals.h: Revised declaration of print_frames() and\n      get_proc_name.\n      Removed the declaration of current_cu_die_for_print_frames.\n    * print_die.c(print_attribute): Properly use the return value\n      of dwarfdump function get_proc_name_by_die().\n      Also renamed a small number of local variables in\n      print_exprloc_content() to make the code more\n      readable( tempud -> exprlength, tempud->fileindex);\n    * print frames.c: Major revisions to clarify\n      data lifetimes and to return DW_DLV_ERROR \n      to let higher levels clean up for themselves.\n      Stop returning true/false and return DW_DLV_OK\n      or DW_DLV_NO_ENTRY with respect to finding\n      procedure names from code addresses`.\n    * print_locs.c: Added an accidentally-omitted\n      esb_constructor for secname.`\n    * print_ranges.c: Move acquiring section name down\n      after the first call of dwarf_get_ranges() so\n      we get the true name with any compression involed\n      reported.\n    * print_sections.c: Removed Dwarf_Die current_cu_die_for_print_frames,\n      it is no longer needed.\n    * print_reloc.c: Was failing to free locally allocated\n      space in some places in print_relocinfo_32().\n2020-03-30  David Anderson \n    * dwarfdump.c,dwconf_using_functions.h,\n      globals.h,print_die.c,print_frames.c,print_frames.h,\n      print_locs.c: Applyingthe new error-return scheme\n      to print_locs.c involves a number of changes\n      beyond print_locs.c itself.\n2020-03-29  David Anderson \n    * dwarfdump.c: Change several section reports to the\n      new approach of errors propagating back to dwarfdump\n      process_one_file().\n    * globals.h: print_debug_names(), print_object_header()\n      print_relocinfo(),print_tag_attributes_usage()\n      print_attributes_encoding() all now return status\n      DW_DLV_OK etc as appropriate.\n    * print_die.c(print_attributes_encoding,\n      print_tag_attributes_usage): Implement passing status back\n      to process_one_file().\n    * print_dnames.c,print_reloc.c,print_reloc_decls.h: \n      Implement passing status back\n      to process_one_file().\n2020-03-28  David Anderson \n    * dwarfdump.c: print debuglink and print str_offsets\n      now getting dwarf status and Dwarf_Error back.\n    * dwarf_globals.h: Revised prototype for \n      print_str_offsets_section().\n    * print_str_offsets.c: Now returns libdwarf status\n      and lets dwarfdump print the error if there is one.\n2020-03-28  David Anderson \n    * dwarfdump.c(process_one_file): Beginning a\n      project to pass libdwarf status all the way back\n      to dwarfdump.c. Enables more flexibility in\n      printing and better ability to dealloc memory.\n    * globals.h: print_static_funcs(), print_static_vars(),\n      print_types(), and print_weaknames() now return int\n      and pass in a Dwarf_Error.\n    * print_static_funcs.c,print_static_vars.c,\n      print_types.c, print_weaknames.c: Implement\n      passing back (to dwarfdump.c) of \n      libdwarf status and Dwarf_Error by returning\n      as required when DW_DLV_ERROR encountered.\n2020-03-27  David Anderson \n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: regenerated with latest\n      version date string.\n2020-03-27  David Anderson \n    * print_die.c: Cleaned trailing whitespace and an\n      indent error.\n2020-03-27  David Anderson \n    * print_die.c: Now does a better job of cleaning\n      up libdwarf data it requested when there is\n      a serious DWARF error.\n2020-03-26  David Anderson \n    * print_ranges.c: For a particular serious error/corruption\n      print a detailed error message,\n      dwarf_dealloc() the Dwarf_Error instance\n      and skip to the next\n      section to continue. \n2020-03-26  David Anderson \n    * dwarfdump.c: Now calls the new free_all_dwconf()\n      to avoid leaking memory. should_skip_this_cu()\n      ensures it does not leak.\n    * dwconf.c: Use struct esb to build a string, avoid\n      leaving a static string pointer around.\n      Add free_all_dwconf() so the dwconf malloc\n      space can be cleaned up at end of run.\n    * dwconf.h: Declare free_all_dwconf().\n    * print_frames.c(get_proc_name): Add loopok variable so the loop\n      on cu contexts can stop early when a serious\n      error is encountered. The procedure name is not\n      very critical, just nice to have.\n      Ensured no leaks in dwarfdump here.\n    * print_lines.c: When an error but we wish to continue\n      ensure the Dwarf_Error is dealloc-d.\n    * print_pubnames.c: Ensure no leaks on error from libdwarf.\n2020-03-25  David Anderson \n    * print_die.c,print_lines.c,print_pubnames.c:\n      Fix indents and remove trailing whitespace.\n    * print_frames.c : Fix whitespace and ensure\n      a return of DW_DLV_ERROR (which will\n      basically be ignored anyway) gets a dwarf_dealloc\n      applied to the Dwarf_Error argument.\n2020-03-24  David Anderson \n    * print_lines.c: Added a dwarf_dealloc DW DLA STRING\n      that had been overlooked.\n2020-03-24  David Anderson\n    * print_die.c: Ensuring that when an error is\n      created it gets dealloc-d.\n    * print_gdbindex.c(print_gdb_index): It was failing to dealloc\n      the data it requested from libdwarf.\n2020-03-23  David Anderson\n    * print_die.c: More cases trying to continue after error.\n      And ensuring no dwarf leakages.\n    * print_frames.c: More accurate error report (one place).\n    * print_pubnames.c: Fixing leaks and making some error\n      message more precise (showing values).\n2020-03-21  David Anderson\n    * dwarfdump.c:Add flag_data_post_cleanup() in a few\n      more places early termination situations.\n    * print_abbrevs.c: Move some variables to the most\n      local scope. Revise the while loop so we can\n      ensure local alloc cleaned up in case of error.\n      Remove pointless duplicate tests for zero abbrev_code.\n    * print_die_stack: Refactor, adding dealloc_die_stack()\n      and calling it where needed to free up local malloc\n      data.\n    * print_frames.c: Add more dwarf_fde_cie_list_dealloc()\n      where appropriate.\n2020-03-20  David Anderson\n    * print_aranges.c: In case of error was not cleaning\n      up allocations immediately in all cases.\n2020-03-20  David Anderson\n    * print_frames.c,print_dgbindex.c,print_macros.c,\n      print_pubnames.c,print_ranges.c,print_reloc.c,\n      sanitized.c,tag_attr.c,testesb.c,\n      uri.c: Remove use of esb_append_printf()\n      and use esb_append_printf_i etc instead.\n      Then null device will never be set up.\n2020-03-19  David Anderson\n    * globals.h: Using parens in the DROP_ERROR_INSTANCE\n      macro to avoid accidental side effects.\n    * print_die.c: Now uses more localized pointers\n      where possible to make understanding the code simpler.\n      Much more careful to dwarf_dealloc things in\n      the face of errors in the DWARF and early\n      termination of dwarfdump.\n    * print_lines.c: Much more careful to dwarf_dealloc\n      things in case of error.\n2020-03-17:   David Anderson\n    * dwarfdump.c: Report the number of major errors\n      more accurately.\n    * print_die.c: Report the number of major errors\n      more accurately.\n    * print_pubnames.c: Revise certain if/then/else\n      to make the flow clearer.\n2020-03-16:   David Anderson\n    * print_ranges.c: Added a dealloc of rangeset,DW_DLA_RANGES.\n2020-03-15:   David Anderson\n    * glflags.c: Now defaults to not printing the global\n      alloc sums. Use --print-alloc-sums option to dwarfdump\n      to print them (ensure GLOBAL_ALLOC_SUMS defined\n      in libdwarf/dwarf_alloc.c). \n2020-03-15:   David Anderson\n    * print_pubnames.c: Reformat a too-long line.\n2020-03-14:   David Anderson\n    * dwarfdump.c: Changed an argument name in the print_error*\n      group of functions to reflect the real meaning,\n      dwarf_code -> dwarf_ret_val.\n    * print_aranges.c (print_aranges): Only call dwarf_dealloc() in\n      case pa_error is non-null.\n    * print_die: Initialize no_of_elements at long last.\n    * print_pubnames.c: A code line was ... long. 2 lines now.\n2020-03-12:   David Anderson\n    * print_abbrevs.c: Add zero of dealloc'd pointer.\n2020-03-12:   David Anderson\n    * dwarfdump.c: Simplified check_for_major_errors().\n      Deleted some #if 0 code.\n    * print_die.c: Fiexed indent and trailing whitespace.\n    * print_macro.c: Deleted a bogus \n      dwarf_dealloc_macro_context() call.\n2020-03-12:   David Anderson\n    * print_die.c: Small changes to cleanup DIE allocations\n      so not relying on de_alloc_tree.\n2020-03-12:   David Anderson\n    * print_aranges.c:  Fixed trailing whitespace and indents.\n2020-03-12:   David Anderson\n    * esb.c, dwarfdump.c: Fixed trailing whitespace and indents.\n2020-03-12:   David Anderson\n    * print_str_offsets.c: Clean up by doing\n      proper dealloc calls instead of relying\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_pubnames.c: Clean up by doing\n      proper dealloc calls instead of relying\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_macro.c: Clean up by doing\n      proper dealloc calls instead of relying\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_lines.c: Eliminate leaks that relied\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * makename.c: Correct some comments.\n2020-03-12:   David Anderson\n    * print_aranges.c: Eliminate leaks that relied\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * print_abbrevs.c: Eliminate leaks that relied\n      on de_alloc_tree to clean up.\n2020-03-12:   David Anderson\n    * command_options.h, command_options.c: Adds\n      uri_data_constructor() and uri_data_destructor()\n      to avoid an old memory leak (called from dwarfdump.c).\n2020-03-12:   David Anderson\n    * dwarfdump.c: Cleans up old and small memory\n      leaks and simplifies the code as well.\n2020-03-09:   David Anderson\n    * command_options.c: Implements two options primarily for\n      dwarfdump developers: --suppress-de-alloc-tree \n      and --print-alloc-sums.\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: regenerated with latest\n      version date string.\n    * dwarfdump.c: Implements the two new options.\n    * glflags.c,glflags.h: declares and instantiates\n      a new global flag gf_print_alloc_sums for the new option\n      --print-alloc-sums.\n    * print_die.c: Arranged correct dwarf_dealloc of\n      DW_DLA_ERROR errors when calling dwarf_formudata/sdata\n      and discarding errors.\n2020-02-25:   David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h dwarfdump-tt-ext-table.h dwarfdump-tt-table.h:\n      updated date string.\n2020-02-25:   David Anderson\n    * esb.c: Slight corrections so a %-12s will ignore the -12\n      if the string to be inserted is more than 11 bytes long.\n      Allowed use of UNUSEDARG.\n    * runtests.sh: Restore the running of the testesb.c\n      test program.\n    * testesb.c: Added a new test case specifically for\n      testing the change in esb.c. Eliminated the\n      unneeded tests on allocation-size, that was not\n      helpful, yet was tedious to make meaningful.\n2020-02-20:   David Anderson\n    * print_die.c: Removed the last snprintf the required\n      fixed spaces and now use esb functions to do the\n      message creation.\n2020-02-19:   David Anderson\n    * checkutil.c,common.c,naming.c,print_abbrevs.c,print_die.c,\n      print_lines.c: Removed the ORIGINAL_SPRINTF\n      versions in favor\n      of esb_append_printf_[usi] versions. \n      We have not been using the s[n]printf\n      versions for a while now. \n2020-02-16:   David Anderson\n    * globals.h: Adds DWVERSION5 to use with testing for\n      version number details (which matters when calling \n      dwarf_srcfiles())\n    * print_die.c: Now recognizes that DWARF5 is different\n      from earlier versions in the way dwarf_srcfiles()\n      array of string pointers is to be used.\n      Refactored the srcfiles checking to its own\n      function to simplify reading the code.\n2020-02-13:   David Anderson\n    * dwarf_names.c dwarf_names.c,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,\n      dwarfdump-tt-table.h: regenerated with new\n      date string.\n2020-01-27:   David Anderson\n    * print_die.c: Now attributes the correct actual form\n      in more places (meaning in error messages, here and\n      in the previous commit)..\n2020-01-25:   David Anderson\n    * print_die.c: Now attributes the correct actual form\n      name (as opposed to a vaguely generic FORM name)\n2020-01-16:   David Anderson\n    * print_die.c: Now ensures local Dwarf_Sig8\n      variables are always initialized with zero bytes.\n      This does not fix bugs, but it makes the code easier\n      for the reader to reason about.\n    * testobjLE32PE.test.c: Removed trailing whitespace\n      and fixed indentation errors.\n2020-01-14:\n    * dwarf_names.c,dwarf_names.h,dwarfdump-ta-ext-table.h,\n      dwarfdump-ta-table.h,dwarfdump-tt-ext-table.h,dwarfdump-tt-table.h:\n      Updated version string.\n2020-01-05:\n    * dwconf.c: Fix CoveritySan CID 206594 resource leak\n      if an error reading dwarfdump.conf.\n    * sanitized.c(no_questionable_chars): Fixed CoverityScan\n      CID 206595. The code was\n      failing to sanitize % characters: the test for %\n      has been moved up a few lines.\n      do_sanity_insert() had the same problem with %. Fixed.\n      And do_sanity_insert() had a final line of unreachable\n      code; now fixed by simplifying the code (an ASSERT\n      added in a comment). Coverity Scan CID 206596.\n    * print_die.c(traverse_one_die): Was failing to check\n      for the normal dwarf return int and letting \n      next code deal with the fallout (and leak an error\n      record). Now we check and avoid any leak or surprise.      \n      Coverity Scan CID 20659\n\n\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#include \"dwarf.h\"\n\n#include \"libdwarf.h\"\n\n/* ARGSUSED */\nint\ndwarf_get_TAG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_TAG_array_type:\n        *s_out = \"DW_TAG_array_type\";\n        return DW_DLV_OK;\n    case DW_TAG_class_type:\n        *s_out = \"DW_TAG_class_type\";\n        return DW_DLV_OK;\n    case DW_TAG_entry_point:\n        *s_out = \"DW_TAG_entry_point\";\n        return DW_DLV_OK;\n    case DW_TAG_enumeration_type:\n        *s_out = \"DW_TAG_enumeration_type\";\n        return DW_DLV_OK;\n    case DW_TAG_formal_parameter:\n        *s_out = \"DW_TAG_formal_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_declaration:\n        *s_out = \"DW_TAG_imported_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_label:\n        *s_out = \"DW_TAG_label\";\n        return DW_DLV_OK;\n    case DW_TAG_lexical_block:\n        *s_out = \"DW_TAG_lexical_block\";\n        return DW_DLV_OK;\n    case DW_TAG_member:\n        *s_out = \"DW_TAG_member\";\n        return DW_DLV_OK;\n    case DW_TAG_pointer_type:\n        *s_out = \"DW_TAG_pointer_type\";\n        return DW_DLV_OK;\n    case DW_TAG_reference_type:\n        *s_out = \"DW_TAG_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_compile_unit:\n        *s_out = \"DW_TAG_compile_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_string_type:\n        *s_out = \"DW_TAG_string_type\";\n        return DW_DLV_OK;\n    case DW_TAG_structure_type:\n        *s_out = \"DW_TAG_structure_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subroutine_type:\n        *s_out = \"DW_TAG_subroutine_type\";\n        return DW_DLV_OK;\n    case DW_TAG_typedef:\n        *s_out = \"DW_TAG_typedef\";\n        return DW_DLV_OK;\n    case DW_TAG_union_type:\n        *s_out = \"DW_TAG_union_type\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_parameters:\n        *s_out = \"DW_TAG_unspecified_parameters\";\n        return DW_DLV_OK;\n    case DW_TAG_variant:\n        *s_out = \"DW_TAG_variant\";\n        return DW_DLV_OK;\n    case DW_TAG_common_block:\n        *s_out = \"DW_TAG_common_block\";\n        return DW_DLV_OK;\n    case DW_TAG_common_inclusion:\n        *s_out = \"DW_TAG_common_inclusion\";\n        return DW_DLV_OK;\n    case DW_TAG_inheritance:\n        *s_out = \"DW_TAG_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_inlined_subroutine:\n        *s_out = \"DW_TAG_inlined_subroutine\";\n        return DW_DLV_OK;\n    case DW_TAG_module:\n        *s_out = \"DW_TAG_module\";\n        return DW_DLV_OK;\n    case DW_TAG_ptr_to_member_type:\n        *s_out = \"DW_TAG_ptr_to_member_type\";\n        return DW_DLV_OK;\n    case DW_TAG_set_type:\n        *s_out = \"DW_TAG_set_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subrange_type:\n        *s_out = \"DW_TAG_subrange_type\";\n        return DW_DLV_OK;\n    case DW_TAG_with_stmt:\n        *s_out = \"DW_TAG_with_stmt\";\n        return DW_DLV_OK;\n    case DW_TAG_access_declaration:\n        *s_out = \"DW_TAG_access_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_base_type:\n        *s_out = \"DW_TAG_base_type\";\n        return DW_DLV_OK;\n    case DW_TAG_catch_block:\n        *s_out = \"DW_TAG_catch_block\";\n        return DW_DLV_OK;\n    case DW_TAG_const_type:\n        *s_out = \"DW_TAG_const_type\";\n        return DW_DLV_OK;\n    case DW_TAG_constant:\n        *s_out = \"DW_TAG_constant\";\n        return DW_DLV_OK;\n    case DW_TAG_enumerator:\n        *s_out = \"DW_TAG_enumerator\";\n        return DW_DLV_OK;\n    case DW_TAG_file_type:\n        *s_out = \"DW_TAG_file_type\";\n        return DW_DLV_OK;\n    case DW_TAG_friend:\n        *s_out = \"DW_TAG_friend\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist:\n        *s_out = \"DW_TAG_namelist\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist_item:\n        *s_out = \"DW_TAG_namelist_item\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2c. DW_TAG_namelist_items */\n    case DW_TAG_packed_type:\n        *s_out = \"DW_TAG_packed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subprogram:\n        *s_out = \"DW_TAG_subprogram\";\n        return DW_DLV_OK;\n    case DW_TAG_template_type_parameter:\n        *s_out = \"DW_TAG_template_type_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2f. DW_TAG_template_type_param */\n    case DW_TAG_template_value_parameter:\n        *s_out = \"DW_TAG_template_value_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x30. DW_TAG_template_value_param */\n    case DW_TAG_thrown_type:\n        *s_out = \"DW_TAG_thrown_type\";\n        return DW_DLV_OK;\n    case DW_TAG_try_block:\n        *s_out = \"DW_TAG_try_block\";\n        return DW_DLV_OK;\n    case DW_TAG_variant_part:\n        *s_out = \"DW_TAG_variant_part\";\n        return DW_DLV_OK;\n    case DW_TAG_variable:\n        *s_out = \"DW_TAG_variable\";\n        return DW_DLV_OK;\n    case DW_TAG_volatile_type:\n        *s_out = \"DW_TAG_volatile_type\";\n        return DW_DLV_OK;\n    case DW_TAG_dwarf_procedure:\n        *s_out = \"DW_TAG_dwarf_procedure\";\n        return DW_DLV_OK;\n    case DW_TAG_restrict_type:\n        *s_out = \"DW_TAG_restrict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_interface_type:\n        *s_out = \"DW_TAG_interface_type\";\n        return DW_DLV_OK;\n    case DW_TAG_namespace:\n        *s_out = \"DW_TAG_namespace\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_module:\n        *s_out = \"DW_TAG_imported_module\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_type:\n        *s_out = \"DW_TAG_unspecified_type\";\n        return DW_DLV_OK;\n    case DW_TAG_partial_unit:\n        *s_out = \"DW_TAG_partial_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_unit:\n        *s_out = \"DW_TAG_imported_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_mutable_type:\n        *s_out = \"DW_TAG_mutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_condition:\n        *s_out = \"DW_TAG_condition\";\n        return DW_DLV_OK;\n    case DW_TAG_shared_type:\n        *s_out = \"DW_TAG_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_type_unit:\n        *s_out = \"DW_TAG_type_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_rvalue_reference_type:\n        *s_out = \"DW_TAG_rvalue_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_template_alias:\n        *s_out = \"DW_TAG_template_alias\";\n        return DW_DLV_OK;\n    case DW_TAG_coarray_type:\n        *s_out = \"DW_TAG_coarray_type\";\n        return DW_DLV_OK;\n    case DW_TAG_generic_subrange:\n        *s_out = \"DW_TAG_generic_subrange\";\n        return DW_DLV_OK;\n    case DW_TAG_dynamic_type:\n        *s_out = \"DW_TAG_dynamic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_atomic_type:\n        *s_out = \"DW_TAG_atomic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site:\n        *s_out = \"DW_TAG_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site_parameter:\n        *s_out = \"DW_TAG_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_skeleton_unit:\n        *s_out = \"DW_TAG_skeleton_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_immutable_type:\n        *s_out = \"DW_TAG_immutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_lo_user:\n        *s_out = \"DW_TAG_lo_user\";\n        return DW_DLV_OK;\n    case DW_TAG_MIPS_loop:\n        *s_out = \"DW_TAG_MIPS_loop\";\n        return DW_DLV_OK;\n    case DW_TAG_HP_array_descriptor:\n        *s_out = \"DW_TAG_HP_array_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_format_label:\n        *s_out = \"DW_TAG_format_label\";\n        return DW_DLV_OK;\n    case DW_TAG_function_template:\n        *s_out = \"DW_TAG_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_class_template:\n        *s_out = \"DW_TAG_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_BINCL:\n        *s_out = \"DW_TAG_GNU_BINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_EINCL:\n        *s_out = \"DW_TAG_GNU_EINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_template_template_parameter:\n        *s_out = \"DW_TAG_GNU_template_template_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x4106. DW_TAG_GNU_template_template_param */\n    case DW_TAG_GNU_template_parameter_pack:\n        *s_out = \"DW_TAG_GNU_template_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_formal_parameter_pack:\n        *s_out = \"DW_TAG_GNU_formal_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site:\n        *s_out = \"DW_TAG_GNU_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site_parameter:\n        *s_out = \"DW_TAG_GNU_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_function_template:\n        *s_out = \"DW_TAG_SUN_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_class_template:\n        *s_out = \"DW_TAG_SUN_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_struct_template:\n        *s_out = \"DW_TAG_SUN_struct_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_union_template:\n        *s_out = \"DW_TAG_SUN_union_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_indirect_inheritance:\n        *s_out = \"DW_TAG_SUN_indirect_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_codeflags:\n        *s_out = \"DW_TAG_SUN_codeflags\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_memop_info:\n        *s_out = \"DW_TAG_SUN_memop_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_omp_child_func:\n        *s_out = \"DW_TAG_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_rtti_descriptor:\n        *s_out = \"DW_TAG_SUN_rtti_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor_info:\n        *s_out = \"DW_TAG_SUN_dtor_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor:\n        *s_out = \"DW_TAG_SUN_dtor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_f90_interface:\n        *s_out = \"DW_TAG_SUN_f90_interface\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_fortran_vax_structure:\n        *s_out = \"DW_TAG_SUN_fortran_vax_structure\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_hi:\n        *s_out = \"DW_TAG_SUN_hi\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_mwa_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_mwa_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rev_carry_type:\n        *s_out = \"DW_TAG_ALTIUM_rev_carry_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rom:\n        *s_out = \"DW_TAG_ALTIUM_rom\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_shared_type:\n        *s_out = \"DW_TAG_upc_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_strict_type:\n        *s_out = \"DW_TAG_upc_strict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_relaxed_type:\n        *s_out = \"DW_TAG_upc_relaxed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_kanji_type:\n        *s_out = \"DW_TAG_PGI_kanji_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_interface_block:\n        *s_out = \"DW_TAG_PGI_interface_block\";\n        return DW_DLV_OK;\n    case DW_TAG_hi_user:\n        *s_out = \"DW_TAG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_children_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_children_no:\n        *s_out = \"DW_children_no\";\n        return DW_DLV_OK;\n    case DW_children_yes:\n        *s_out = \"DW_children_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FORM_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FORM_addr:\n        *s_out = \"DW_FORM_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_block2:\n        *s_out = \"DW_FORM_block2\";\n        return DW_DLV_OK;\n    case DW_FORM_block4:\n        *s_out = \"DW_FORM_block4\";\n        return DW_DLV_OK;\n    case DW_FORM_data2:\n        *s_out = \"DW_FORM_data2\";\n        return DW_DLV_OK;\n    case DW_FORM_data4:\n        *s_out = \"DW_FORM_data4\";\n        return DW_DLV_OK;\n    case DW_FORM_data8:\n        *s_out = \"DW_FORM_data8\";\n        return DW_DLV_OK;\n    case DW_FORM_string:\n        *s_out = \"DW_FORM_string\";\n        return DW_DLV_OK;\n    case DW_FORM_block:\n        *s_out = \"DW_FORM_block\";\n        return DW_DLV_OK;\n    case DW_FORM_block1:\n        *s_out = \"DW_FORM_block1\";\n        return DW_DLV_OK;\n    case DW_FORM_data1:\n        *s_out = \"DW_FORM_data1\";\n        return DW_DLV_OK;\n    case DW_FORM_flag:\n        *s_out = \"DW_FORM_flag\";\n        return DW_DLV_OK;\n    case DW_FORM_sdata:\n        *s_out = \"DW_FORM_sdata\";\n        return DW_DLV_OK;\n    case DW_FORM_strp:\n        *s_out = \"DW_FORM_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_udata:\n        *s_out = \"DW_FORM_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_addr:\n        *s_out = \"DW_FORM_ref_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_ref1:\n        *s_out = \"DW_FORM_ref1\";\n        return DW_DLV_OK;\n    case DW_FORM_ref2:\n        *s_out = \"DW_FORM_ref2\";\n        return DW_DLV_OK;\n    case DW_FORM_ref4:\n        *s_out = \"DW_FORM_ref4\";\n        return DW_DLV_OK;\n    case DW_FORM_ref8:\n        *s_out = \"DW_FORM_ref8\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_udata:\n        *s_out = \"DW_FORM_ref_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_indirect:\n        *s_out = \"DW_FORM_indirect\";\n        return DW_DLV_OK;\n    case DW_FORM_sec_offset:\n        *s_out = \"DW_FORM_sec_offset\";\n        return DW_DLV_OK;\n    case DW_FORM_exprloc:\n        *s_out = \"DW_FORM_exprloc\";\n        return DW_DLV_OK;\n    case DW_FORM_flag_present:\n        *s_out = \"DW_FORM_flag_present\";\n        return DW_DLV_OK;\n    case DW_FORM_strx:\n        *s_out = \"DW_FORM_strx\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx:\n        *s_out = \"DW_FORM_addrx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup4:\n        *s_out = \"DW_FORM_ref_sup4\";\n        return DW_DLV_OK;\n    case DW_FORM_strp_sup:\n        *s_out = \"DW_FORM_strp_sup\";\n        return DW_DLV_OK;\n    case DW_FORM_data16:\n        *s_out = \"DW_FORM_data16\";\n        return DW_DLV_OK;\n    case DW_FORM_line_strp:\n        *s_out = \"DW_FORM_line_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sig8:\n        *s_out = \"DW_FORM_ref_sig8\";\n        return DW_DLV_OK;\n    case DW_FORM_implicit_const:\n        *s_out = \"DW_FORM_implicit_const\";\n        return DW_DLV_OK;\n    case DW_FORM_loclistx:\n        *s_out = \"DW_FORM_loclistx\";\n        return DW_DLV_OK;\n    case DW_FORM_rnglistx:\n        *s_out = \"DW_FORM_rnglistx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup8:\n        *s_out = \"DW_FORM_ref_sup8\";\n        return DW_DLV_OK;\n    case DW_FORM_strx1:\n        *s_out = \"DW_FORM_strx1\";\n        return DW_DLV_OK;\n    case DW_FORM_strx2:\n        *s_out = \"DW_FORM_strx2\";\n        return DW_DLV_OK;\n    case DW_FORM_strx3:\n        *s_out = \"DW_FORM_strx3\";\n        return DW_DLV_OK;\n    case DW_FORM_strx4:\n        *s_out = \"DW_FORM_strx4\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx1:\n        *s_out = \"DW_FORM_addrx1\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx2:\n        *s_out = \"DW_FORM_addrx2\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx3:\n        *s_out = \"DW_FORM_addrx3\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx4:\n        *s_out = \"DW_FORM_addrx4\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_addr_index:\n        *s_out = \"DW_FORM_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_str_index:\n        *s_out = \"DW_FORM_GNU_str_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_ref_alt:\n        *s_out = \"DW_FORM_GNU_ref_alt\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_strp_alt:\n        *s_out = \"DW_FORM_GNU_strp_alt\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_AT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_AT_sibling:\n        *s_out = \"DW_AT_sibling\";\n        return DW_DLV_OK;\n    case DW_AT_location:\n        *s_out = \"DW_AT_location\";\n        return DW_DLV_OK;\n    case DW_AT_name:\n        *s_out = \"DW_AT_name\";\n        return DW_DLV_OK;\n    case DW_AT_ordering:\n        *s_out = \"DW_AT_ordering\";\n        return DW_DLV_OK;\n    case DW_AT_subscr_data:\n        *s_out = \"DW_AT_subscr_data\";\n        return DW_DLV_OK;\n    case DW_AT_byte_size:\n        *s_out = \"DW_AT_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_bit_offset:\n        *s_out = \"DW_AT_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_bit_size:\n        *s_out = \"DW_AT_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_element_list:\n        *s_out = \"DW_AT_element_list\";\n        return DW_DLV_OK;\n    case DW_AT_stmt_list:\n        *s_out = \"DW_AT_stmt_list\";\n        return DW_DLV_OK;\n    case DW_AT_low_pc:\n        *s_out = \"DW_AT_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_high_pc:\n        *s_out = \"DW_AT_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_language:\n        *s_out = \"DW_AT_language\";\n        return DW_DLV_OK;\n    case DW_AT_member:\n        *s_out = \"DW_AT_member\";\n        return DW_DLV_OK;\n    case DW_AT_discr:\n        *s_out = \"DW_AT_discr\";\n        return DW_DLV_OK;\n    case DW_AT_discr_value:\n        *s_out = \"DW_AT_discr_value\";\n        return DW_DLV_OK;\n    case DW_AT_visibility:\n        *s_out = \"DW_AT_visibility\";\n        return DW_DLV_OK;\n    case DW_AT_import:\n        *s_out = \"DW_AT_import\";\n        return DW_DLV_OK;\n    case DW_AT_string_length:\n        *s_out = \"DW_AT_string_length\";\n        return DW_DLV_OK;\n    case DW_AT_common_reference:\n        *s_out = \"DW_AT_common_reference\";\n        return DW_DLV_OK;\n    case DW_AT_comp_dir:\n        *s_out = \"DW_AT_comp_dir\";\n        return DW_DLV_OK;\n    case DW_AT_const_value:\n        *s_out = \"DW_AT_const_value\";\n        return DW_DLV_OK;\n    case DW_AT_containing_type:\n        *s_out = \"DW_AT_containing_type\";\n        return DW_DLV_OK;\n    case DW_AT_default_value:\n        *s_out = \"DW_AT_default_value\";\n        return DW_DLV_OK;\n    case DW_AT_inline:\n        *s_out = \"DW_AT_inline\";\n        return DW_DLV_OK;\n    case DW_AT_is_optional:\n        *s_out = \"DW_AT_is_optional\";\n        return DW_DLV_OK;\n    case DW_AT_lower_bound:\n        *s_out = \"DW_AT_lower_bound\";\n        return DW_DLV_OK;\n    case DW_AT_producer:\n        *s_out = \"DW_AT_producer\";\n        return DW_DLV_OK;\n    case DW_AT_prototyped:\n        *s_out = \"DW_AT_prototyped\";\n        return DW_DLV_OK;\n    case DW_AT_return_addr:\n        *s_out = \"DW_AT_return_addr\";\n        return DW_DLV_OK;\n    case DW_AT_start_scope:\n        *s_out = \"DW_AT_start_scope\";\n        return DW_DLV_OK;\n    case DW_AT_bit_stride:\n        *s_out = \"DW_AT_bit_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2e. DW_AT_stride_size */\n    case DW_AT_upper_bound:\n        *s_out = \"DW_AT_upper_bound\";\n        return DW_DLV_OK;\n    case DW_AT_abstract_origin:\n        *s_out = \"DW_AT_abstract_origin\";\n        return DW_DLV_OK;\n    case DW_AT_accessibility:\n        *s_out = \"DW_AT_accessibility\";\n        return DW_DLV_OK;\n    case DW_AT_address_class:\n        *s_out = \"DW_AT_address_class\";\n        return DW_DLV_OK;\n    case DW_AT_artificial:\n        *s_out = \"DW_AT_artificial\";\n        return DW_DLV_OK;\n    case DW_AT_base_types:\n        *s_out = \"DW_AT_base_types\";\n        return DW_DLV_OK;\n    case DW_AT_calling_convention:\n        *s_out = \"DW_AT_calling_convention\";\n        return DW_DLV_OK;\n    case DW_AT_count:\n        *s_out = \"DW_AT_count\";\n        return DW_DLV_OK;\n    case DW_AT_data_member_location:\n        *s_out = \"DW_AT_data_member_location\";\n        return DW_DLV_OK;\n    case DW_AT_decl_column:\n        *s_out = \"DW_AT_decl_column\";\n        return DW_DLV_OK;\n    case DW_AT_decl_file:\n        *s_out = \"DW_AT_decl_file\";\n        return DW_DLV_OK;\n    case DW_AT_decl_line:\n        *s_out = \"DW_AT_decl_line\";\n        return DW_DLV_OK;\n    case DW_AT_declaration:\n        *s_out = \"DW_AT_declaration\";\n        return DW_DLV_OK;\n    case DW_AT_discr_list:\n        *s_out = \"DW_AT_discr_list\";\n        return DW_DLV_OK;\n    case DW_AT_encoding:\n        *s_out = \"DW_AT_encoding\";\n        return DW_DLV_OK;\n    case DW_AT_external:\n        *s_out = \"DW_AT_external\";\n        return DW_DLV_OK;\n    case DW_AT_frame_base:\n        *s_out = \"DW_AT_frame_base\";\n        return DW_DLV_OK;\n    case DW_AT_friend:\n        *s_out = \"DW_AT_friend\";\n        return DW_DLV_OK;\n    case DW_AT_identifier_case:\n        *s_out = \"DW_AT_identifier_case\";\n        return DW_DLV_OK;\n    case DW_AT_macro_info:\n        *s_out = \"DW_AT_macro_info\";\n        return DW_DLV_OK;\n    case DW_AT_namelist_item:\n        *s_out = \"DW_AT_namelist_item\";\n        return DW_DLV_OK;\n    case DW_AT_priority:\n        *s_out = \"DW_AT_priority\";\n        return DW_DLV_OK;\n    case DW_AT_segment:\n        *s_out = \"DW_AT_segment\";\n        return DW_DLV_OK;\n    case DW_AT_specification:\n        *s_out = \"DW_AT_specification\";\n        return DW_DLV_OK;\n    case DW_AT_static_link:\n        *s_out = \"DW_AT_static_link\";\n        return DW_DLV_OK;\n    case DW_AT_type:\n        *s_out = \"DW_AT_type\";\n        return DW_DLV_OK;\n    case DW_AT_use_location:\n        *s_out = \"DW_AT_use_location\";\n        return DW_DLV_OK;\n    case DW_AT_variable_parameter:\n        *s_out = \"DW_AT_variable_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_virtuality:\n        *s_out = \"DW_AT_virtuality\";\n        return DW_DLV_OK;\n    case DW_AT_vtable_elem_location:\n        *s_out = \"DW_AT_vtable_elem_location\";\n        return DW_DLV_OK;\n    case DW_AT_allocated:\n        *s_out = \"DW_AT_allocated\";\n        return DW_DLV_OK;\n    case DW_AT_associated:\n        *s_out = \"DW_AT_associated\";\n        return DW_DLV_OK;\n    case DW_AT_data_location:\n        *s_out = \"DW_AT_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_byte_stride:\n        *s_out = \"DW_AT_byte_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x51. DW_AT_stride */\n    case DW_AT_entry_pc:\n        *s_out = \"DW_AT_entry_pc\";\n        return DW_DLV_OK;\n    case DW_AT_use_UTF8:\n        *s_out = \"DW_AT_use_UTF8\";\n        return DW_DLV_OK;\n    case DW_AT_extension:\n        *s_out = \"DW_AT_extension\";\n        return DW_DLV_OK;\n    case DW_AT_ranges:\n        *s_out = \"DW_AT_ranges\";\n        return DW_DLV_OK;\n    case DW_AT_trampoline:\n        *s_out = \"DW_AT_trampoline\";\n        return DW_DLV_OK;\n    case DW_AT_call_column:\n        *s_out = \"DW_AT_call_column\";\n        return DW_DLV_OK;\n    case DW_AT_call_file:\n        *s_out = \"DW_AT_call_file\";\n        return DW_DLV_OK;\n    case DW_AT_call_line:\n        *s_out = \"DW_AT_call_line\";\n        return DW_DLV_OK;\n    case DW_AT_description:\n        *s_out = \"DW_AT_description\";\n        return DW_DLV_OK;\n    case DW_AT_binary_scale:\n        *s_out = \"DW_AT_binary_scale\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_scale:\n        *s_out = \"DW_AT_decimal_scale\";\n        return DW_DLV_OK;\n    case DW_AT_small:\n        *s_out = \"DW_AT_small\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_sign:\n        *s_out = \"DW_AT_decimal_sign\";\n        return DW_DLV_OK;\n    case DW_AT_digit_count:\n        *s_out = \"DW_AT_digit_count\";\n        return DW_DLV_OK;\n    case DW_AT_picture_string:\n        *s_out = \"DW_AT_picture_string\";\n        return DW_DLV_OK;\n    case DW_AT_mutable:\n        *s_out = \"DW_AT_mutable\";\n        return DW_DLV_OK;\n    case DW_AT_threads_scaled:\n        *s_out = \"DW_AT_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_explicit:\n        *s_out = \"DW_AT_explicit\";\n        return DW_DLV_OK;\n    case DW_AT_object_pointer:\n        *s_out = \"DW_AT_object_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_endianity:\n        *s_out = \"DW_AT_endianity\";\n        return DW_DLV_OK;\n    case DW_AT_elemental:\n        *s_out = \"DW_AT_elemental\";\n        return DW_DLV_OK;\n    case DW_AT_pure:\n        *s_out = \"DW_AT_pure\";\n        return DW_DLV_OK;\n    case DW_AT_recursive:\n        *s_out = \"DW_AT_recursive\";\n        return DW_DLV_OK;\n    case DW_AT_signature:\n        *s_out = \"DW_AT_signature\";\n        return DW_DLV_OK;\n    case DW_AT_main_subprogram:\n        *s_out = \"DW_AT_main_subprogram\";\n        return DW_DLV_OK;\n    case DW_AT_data_bit_offset:\n        *s_out = \"DW_AT_data_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_const_expr:\n        *s_out = \"DW_AT_const_expr\";\n        return DW_DLV_OK;\n    case DW_AT_enum_class:\n        *s_out = \"DW_AT_enum_class\";\n        return DW_DLV_OK;\n    case DW_AT_linkage_name:\n        *s_out = \"DW_AT_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_bit_size:\n        *s_out = \"DW_AT_string_length_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_byte_size:\n        *s_out = \"DW_AT_string_length_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_rank:\n        *s_out = \"DW_AT_rank\";\n        return DW_DLV_OK;\n    case DW_AT_str_offsets_base:\n        *s_out = \"DW_AT_str_offsets_base\";\n        return DW_DLV_OK;\n    case DW_AT_addr_base:\n        *s_out = \"DW_AT_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_rnglists_base:\n        *s_out = \"DW_AT_rnglists_base\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_id:\n        *s_out = \"DW_AT_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_name:\n        *s_out = \"DW_AT_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_reference:\n        *s_out = \"DW_AT_reference\";\n        return DW_DLV_OK;\n    case DW_AT_rvalue_reference:\n        *s_out = \"DW_AT_rvalue_reference\";\n        return DW_DLV_OK;\n    case DW_AT_macros:\n        *s_out = \"DW_AT_macros\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_calls:\n        *s_out = \"DW_AT_call_all_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_source_calls:\n        *s_out = \"DW_AT_call_all_source_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_tail_calls:\n        *s_out = \"DW_AT_call_all_tail_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_return_pc:\n        *s_out = \"DW_AT_call_return_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_value:\n        *s_out = \"DW_AT_call_value\";\n        return DW_DLV_OK;\n    case DW_AT_call_origin:\n        *s_out = \"DW_AT_call_origin\";\n        return DW_DLV_OK;\n    case DW_AT_call_parameter:\n        *s_out = \"DW_AT_call_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_call_pc:\n        *s_out = \"DW_AT_call_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_tail_call:\n        *s_out = \"DW_AT_call_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_call_target:\n        *s_out = \"DW_AT_call_target\";\n        return DW_DLV_OK;\n    case DW_AT_call_target_clobbered:\n        *s_out = \"DW_AT_call_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_location:\n        *s_out = \"DW_AT_call_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_value:\n        *s_out = \"DW_AT_call_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_noreturn:\n        *s_out = \"DW_AT_noreturn\";\n        return DW_DLV_OK;\n    case DW_AT_alignment:\n        *s_out = \"DW_AT_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_export_symbols:\n        *s_out = \"DW_AT_export_symbols\";\n        return DW_DLV_OK;\n    case DW_AT_deleted:\n        *s_out = \"DW_AT_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_defaulted:\n        *s_out = \"DW_AT_defaulted\";\n        return DW_DLV_OK;\n    case DW_AT_loclists_base:\n        *s_out = \"DW_AT_loclists_base\";\n        return DW_DLV_OK;\n    case DW_AT_HP_block_index:\n        *s_out = \"DW_AT_HP_block_index\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2000. DW_AT_lo_user */\n    case DW_AT_MIPS_fde:\n        *s_out = \"DW_AT_MIPS_fde\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2001. DW_AT_HP_unmodifiable */\n    /* Skipping alternate spelling of value 0x2001. DW_AT_CPQ_discontig_ranges */\n    case DW_AT_MIPS_loop_begin:\n        *s_out = \"DW_AT_MIPS_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2002. DW_AT_CPQ_semantic_events */\n    case DW_AT_MIPS_tail_loop_begin:\n        *s_out = \"DW_AT_MIPS_tail_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2003. DW_AT_CPQ_split_lifetimes_var */\n    case DW_AT_MIPS_epilog_begin:\n        *s_out = \"DW_AT_MIPS_epilog_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2004. DW_AT_CPQ_split_lifetimes_rtn */\n    case DW_AT_MIPS_loop_unroll_factor:\n        *s_out = \"DW_AT_MIPS_loop_unroll_factor\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2005. DW_AT_CPQ_prologue_length */\n    case DW_AT_MIPS_software_pipeline_depth:\n        *s_out = \"DW_AT_MIPS_software_pipeline_depth\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_linkage_name:\n        *s_out = \"DW_AT_MIPS_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride:\n        *s_out = \"DW_AT_MIPS_stride\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_abstract_name:\n        *s_out = \"DW_AT_MIPS_abstract_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_clone_origin:\n        *s_out = \"DW_AT_MIPS_clone_origin\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_has_inlines:\n        *s_out = \"DW_AT_MIPS_has_inlines\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_byte:\n        *s_out = \"DW_AT_MIPS_stride_byte\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_elem:\n        *s_out = \"DW_AT_MIPS_stride_elem\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_ptr_dopetype:\n        *s_out = \"DW_AT_MIPS_ptr_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_allocatable_dopetype:\n        *s_out = \"DW_AT_MIPS_allocatable_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_assumed_shape_dopetype:\n        *s_out = \"DW_AT_MIPS_assumed_shape_dopetype\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2010. DW_AT_HP_actuals_stmt_list */\n    case DW_AT_MIPS_assumed_size:\n        *s_out = \"DW_AT_MIPS_assumed_size\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2011. DW_AT_HP_proc_per_section */\n    case DW_AT_HP_raw_data_ptr:\n        *s_out = \"DW_AT_HP_raw_data_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_HP_pass_by_reference:\n        *s_out = \"DW_AT_HP_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_level:\n        *s_out = \"DW_AT_HP_opt_level\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_version_id:\n        *s_out = \"DW_AT_HP_prof_version_id\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_flags:\n        *s_out = \"DW_AT_HP_opt_flags\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_low_pc:\n        *s_out = \"DW_AT_HP_cold_region_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_high_pc:\n        *s_out = \"DW_AT_HP_cold_region_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_all_variables_modifiable:\n        *s_out = \"DW_AT_HP_all_variables_modifiable\";\n        return DW_DLV_OK;\n    case DW_AT_HP_linkage_name:\n        *s_out = \"DW_AT_HP_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_flags:\n        *s_out = \"DW_AT_HP_prof_flags\";\n        return DW_DLV_OK;\n    case DW_AT_INTEL_other_endian:\n        *s_out = \"DW_AT_INTEL_other_endian\";\n        return DW_DLV_OK;\n    case DW_AT_sf_names:\n        *s_out = \"DW_AT_sf_names\";\n        return DW_DLV_OK;\n    case DW_AT_src_info:\n        *s_out = \"DW_AT_src_info\";\n        return DW_DLV_OK;\n    case DW_AT_mac_info:\n        *s_out = \"DW_AT_mac_info\";\n        return DW_DLV_OK;\n    case DW_AT_src_coords:\n        *s_out = \"DW_AT_src_coords\";\n        return DW_DLV_OK;\n    case DW_AT_body_begin:\n        *s_out = \"DW_AT_body_begin\";\n        return DW_DLV_OK;\n    case DW_AT_body_end:\n        *s_out = \"DW_AT_body_end\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_vector:\n        *s_out = \"DW_AT_GNU_vector\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded_by:\n        *s_out = \"DW_AT_GNU_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded_by:\n        *s_out = \"DW_AT_GNU_pt_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded:\n        *s_out = \"DW_AT_GNU_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded:\n        *s_out = \"DW_AT_GNU_pt_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locks_excluded:\n        *s_out = \"DW_AT_GNU_locks_excluded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_exclusive_locks_required:\n        *s_out = \"DW_AT_GNU_exclusive_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_shared_locks_required:\n        *s_out = \"DW_AT_GNU_shared_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_odr_signature:\n        *s_out = \"DW_AT_GNU_odr_signature\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_template_name:\n        *s_out = \"DW_AT_GNU_template_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_value:\n        *s_out = \"DW_AT_GNU_call_site_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_data_value:\n        *s_out = \"DW_AT_GNU_call_site_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target:\n        *s_out = \"DW_AT_GNU_call_site_target\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target_clobbered:\n        *s_out = \"DW_AT_GNU_call_site_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_tail_call:\n        *s_out = \"DW_AT_GNU_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_tail_call_sites:\n        *s_out = \"DW_AT_GNU_all_tail_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_call_sites:\n        *s_out = \"DW_AT_GNU_all_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_source_call_sites:\n        *s_out = \"DW_AT_GNU_all_source_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_macros:\n        *s_out = \"DW_AT_GNU_macros\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_deleted:\n        *s_out = \"DW_AT_GNU_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_name:\n        *s_out = \"DW_AT_GNU_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_id:\n        *s_out = \"DW_AT_GNU_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_ranges_base:\n        *s_out = \"DW_AT_GNU_ranges_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_addr_base:\n        *s_out = \"DW_AT_GNU_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubnames:\n        *s_out = \"DW_AT_GNU_pubnames\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubtypes:\n        *s_out = \"DW_AT_GNU_pubtypes\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_discriminator:\n        *s_out = \"DW_AT_GNU_discriminator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locviews:\n        *s_out = \"DW_AT_GNU_locviews\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_entry_view:\n        *s_out = \"DW_AT_GNU_entry_view\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_template:\n        *s_out = \"DW_AT_SUN_template\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2201. DW_AT_VMS_rtnbeg_pd_address */\n    case DW_AT_SUN_alignment:\n        *s_out = \"DW_AT_SUN_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable:\n        *s_out = \"DW_AT_SUN_vtable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_count_guarantee:\n        *s_out = \"DW_AT_SUN_count_guarantee\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_command_line:\n        *s_out = \"DW_AT_SUN_command_line\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vbase:\n        *s_out = \"DW_AT_SUN_vbase\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_compile_options:\n        *s_out = \"DW_AT_SUN_compile_options\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_language:\n        *s_out = \"DW_AT_SUN_language\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_browser_file:\n        *s_out = \"DW_AT_SUN_browser_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_abi:\n        *s_out = \"DW_AT_SUN_vtable_abi\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offsets:\n        *s_out = \"DW_AT_SUN_func_offsets\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_cf_kind:\n        *s_out = \"DW_AT_SUN_cf_kind\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_index:\n        *s_out = \"DW_AT_SUN_vtable_index\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_tpriv_addr:\n        *s_out = \"DW_AT_SUN_omp_tpriv_addr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_child_func:\n        *s_out = \"DW_AT_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offset:\n        *s_out = \"DW_AT_SUN_func_offset\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_type_ref:\n        *s_out = \"DW_AT_SUN_memop_type_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_profile_id:\n        *s_out = \"DW_AT_SUN_profile_id\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_signature:\n        *s_out = \"DW_AT_SUN_memop_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_dir:\n        *s_out = \"DW_AT_SUN_obj_dir\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_file:\n        *s_out = \"DW_AT_SUN_obj_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_original_name:\n        *s_out = \"DW_AT_SUN_original_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_hwcprof_signature:\n        *s_out = \"DW_AT_SUN_hwcprof_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_amd64_parmdump:\n        *s_out = \"DW_AT_SUN_amd64_parmdump\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_part_link_name:\n        *s_out = \"DW_AT_SUN_part_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_link_name:\n        *s_out = \"DW_AT_SUN_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_with_const:\n        *s_out = \"DW_AT_SUN_pass_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_with_const:\n        *s_out = \"DW_AT_SUN_return_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_name:\n        *s_out = \"DW_AT_SUN_import_by_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_pointer:\n        *s_out = \"DW_AT_SUN_f90_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_by_ref:\n        *s_out = \"DW_AT_SUN_pass_by_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_allocatable:\n        *s_out = \"DW_AT_SUN_f90_allocatable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_assumed_shape_array:\n        *s_out = \"DW_AT_SUN_f90_assumed_shape_array\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_c_vla:\n        *s_out = \"DW_AT_SUN_c_vla\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_value_ptr:\n        *s_out = \"DW_AT_SUN_return_value_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_start:\n        *s_out = \"DW_AT_SUN_dtor_start\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_length:\n        *s_out = \"DW_AT_SUN_dtor_length\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_initial:\n        *s_out = \"DW_AT_SUN_dtor_state_initial\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_final:\n        *s_out = \"DW_AT_SUN_dtor_state_final\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_deltas:\n        *s_out = \"DW_AT_SUN_dtor_state_deltas\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_lname:\n        *s_out = \"DW_AT_SUN_import_by_lname\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_use_only:\n        *s_out = \"DW_AT_SUN_f90_use_only\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_namelist_spec:\n        *s_out = \"DW_AT_SUN_namelist_spec\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_is_omp_child_func:\n        *s_out = \"DW_AT_SUN_is_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_main_alias:\n        *s_out = \"DW_AT_SUN_fortran_main_alias\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_based:\n        *s_out = \"DW_AT_SUN_fortran_based\";\n        return DW_DLV_OK;\n    case DW_AT_ALTIUM_loclist:\n        *s_out = \"DW_AT_ALTIUM_loclist\";\n        return DW_DLV_OK;\n    case DW_AT_use_GNAT_descriptive_type:\n        *s_out = \"DW_AT_use_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    case DW_AT_GNAT_descriptive_type:\n        *s_out = \"DW_AT_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2302. DW_AT_GNAT_descriptive_type */\n    case DW_AT_GNU_numerator:\n        *s_out = \"DW_AT_GNU_numerator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_denominator:\n        *s_out = \"DW_AT_GNU_denominator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_bias:\n        *s_out = \"DW_AT_GNU_bias\";\n        return DW_DLV_OK;\n    case DW_AT_go_kind:\n        *s_out = \"DW_AT_go_kind\";\n        return DW_DLV_OK;\n    case DW_AT_go_key:\n        *s_out = \"DW_AT_go_key\";\n        return DW_DLV_OK;\n    case DW_AT_go_elem:\n        *s_out = \"DW_AT_go_elem\";\n        return DW_DLV_OK;\n    case DW_AT_go_embedded_field:\n        *s_out = \"DW_AT_go_embedded_field\";\n        return DW_DLV_OK;\n    case DW_AT_go_runtime_type:\n        *s_out = \"DW_AT_go_runtime_type\";\n        return DW_DLV_OK;\n    case DW_AT_upc_threads_scaled:\n        *s_out = \"DW_AT_upc_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lbase:\n        *s_out = \"DW_AT_PGI_lbase\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_soffset:\n        *s_out = \"DW_AT_PGI_soffset\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lstride:\n        *s_out = \"DW_AT_PGI_lstride\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_optimized:\n        *s_out = \"DW_AT_APPLE_optimized\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_flags:\n        *s_out = \"DW_AT_APPLE_flags\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_isa:\n        *s_out = \"DW_AT_APPLE_isa\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_block:\n        *s_out = \"DW_AT_APPLE_block\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe4. DW_AT_APPLE_closure */\n    case DW_AT_APPLE_major_runtime_vers:\n        *s_out = \"DW_AT_APPLE_major_runtime_vers\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe5. DW_AT_APPLE_major_runtime_vers */\n    case DW_AT_APPLE_runtime_class:\n        *s_out = \"DW_AT_APPLE_runtime_class\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe6. DW_AT_APPLE_runtime_class */\n    case DW_AT_APPLE_omit_frame_ptr:\n        *s_out = \"DW_AT_APPLE_omit_frame_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_hi_user:\n        *s_out = \"DW_AT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_OP_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_OP_addr:\n        *s_out = \"DW_OP_addr\";\n        return DW_DLV_OK;\n    case DW_OP_deref:\n        *s_out = \"DW_OP_deref\";\n        return DW_DLV_OK;\n    case DW_OP_const1u:\n        *s_out = \"DW_OP_const1u\";\n        return DW_DLV_OK;\n    case DW_OP_const1s:\n        *s_out = \"DW_OP_const1s\";\n        return DW_DLV_OK;\n    case DW_OP_const2u:\n        *s_out = \"DW_OP_const2u\";\n        return DW_DLV_OK;\n    case DW_OP_const2s:\n        *s_out = \"DW_OP_const2s\";\n        return DW_DLV_OK;\n    case DW_OP_const4u:\n        *s_out = \"DW_OP_const4u\";\n        return DW_DLV_OK;\n    case DW_OP_const4s:\n        *s_out = \"DW_OP_const4s\";\n        return DW_DLV_OK;\n    case DW_OP_const8u:\n        *s_out = \"DW_OP_const8u\";\n        return DW_DLV_OK;\n    case DW_OP_const8s:\n        *s_out = \"DW_OP_const8s\";\n        return DW_DLV_OK;\n    case DW_OP_constu:\n        *s_out = \"DW_OP_constu\";\n        return DW_DLV_OK;\n    case DW_OP_consts:\n        *s_out = \"DW_OP_consts\";\n        return DW_DLV_OK;\n    case DW_OP_dup:\n        *s_out = \"DW_OP_dup\";\n        return DW_DLV_OK;\n    case DW_OP_drop:\n        *s_out = \"DW_OP_drop\";\n        return DW_DLV_OK;\n    case DW_OP_over:\n        *s_out = \"DW_OP_over\";\n        return DW_DLV_OK;\n    case DW_OP_pick:\n        *s_out = \"DW_OP_pick\";\n        return DW_DLV_OK;\n    case DW_OP_swap:\n        *s_out = \"DW_OP_swap\";\n        return DW_DLV_OK;\n    case DW_OP_rot:\n        *s_out = \"DW_OP_rot\";\n        return DW_DLV_OK;\n    case DW_OP_xderef:\n        *s_out = \"DW_OP_xderef\";\n        return DW_DLV_OK;\n    case DW_OP_abs:\n        *s_out = \"DW_OP_abs\";\n        return DW_DLV_OK;\n    case DW_OP_and:\n        *s_out = \"DW_OP_and\";\n        return DW_DLV_OK;\n    case DW_OP_div:\n        *s_out = \"DW_OP_div\";\n        return DW_DLV_OK;\n    case DW_OP_minus:\n        *s_out = \"DW_OP_minus\";\n        return DW_DLV_OK;\n    case DW_OP_mod:\n        *s_out = \"DW_OP_mod\";\n        return DW_DLV_OK;\n    case DW_OP_mul:\n        *s_out = \"DW_OP_mul\";\n        return DW_DLV_OK;\n    case DW_OP_neg:\n        *s_out = \"DW_OP_neg\";\n        return DW_DLV_OK;\n    case DW_OP_not:\n        *s_out = \"DW_OP_not\";\n        return DW_DLV_OK;\n    case DW_OP_or:\n        *s_out = \"DW_OP_or\";\n        return DW_DLV_OK;\n    case DW_OP_plus:\n        *s_out = \"DW_OP_plus\";\n        return DW_DLV_OK;\n    case DW_OP_plus_uconst:\n        *s_out = \"DW_OP_plus_uconst\";\n        return DW_DLV_OK;\n    case DW_OP_shl:\n        *s_out = \"DW_OP_shl\";\n        return DW_DLV_OK;\n    case DW_OP_shr:\n        *s_out = \"DW_OP_shr\";\n        return DW_DLV_OK;\n    case DW_OP_shra:\n        *s_out = \"DW_OP_shra\";\n        return DW_DLV_OK;\n    case DW_OP_xor:\n        *s_out = \"DW_OP_xor\";\n        return DW_DLV_OK;\n    case DW_OP_bra:\n        *s_out = \"DW_OP_bra\";\n        return DW_DLV_OK;\n    case DW_OP_eq:\n        *s_out = \"DW_OP_eq\";\n        return DW_DLV_OK;\n    case DW_OP_ge:\n        *s_out = \"DW_OP_ge\";\n        return DW_DLV_OK;\n    case DW_OP_gt:\n        *s_out = \"DW_OP_gt\";\n        return DW_DLV_OK;\n    case DW_OP_le:\n        *s_out = \"DW_OP_le\";\n        return DW_DLV_OK;\n    case DW_OP_lt:\n        *s_out = \"DW_OP_lt\";\n        return DW_DLV_OK;\n    case DW_OP_ne:\n        *s_out = \"DW_OP_ne\";\n        return DW_DLV_OK;\n    case DW_OP_skip:\n        *s_out = \"DW_OP_skip\";\n        return DW_DLV_OK;\n    case DW_OP_lit0:\n        *s_out = \"DW_OP_lit0\";\n        return DW_DLV_OK;\n    case DW_OP_lit1:\n        *s_out = \"DW_OP_lit1\";\n        return DW_DLV_OK;\n    case DW_OP_lit2:\n        *s_out = \"DW_OP_lit2\";\n        return DW_DLV_OK;\n    case DW_OP_lit3:\n        *s_out = \"DW_OP_lit3\";\n        return DW_DLV_OK;\n    case DW_OP_lit4:\n        *s_out = \"DW_OP_lit4\";\n        return DW_DLV_OK;\n    case DW_OP_lit5:\n        *s_out = \"DW_OP_lit5\";\n        return DW_DLV_OK;\n    case DW_OP_lit6:\n        *s_out = \"DW_OP_lit6\";\n        return DW_DLV_OK;\n    case DW_OP_lit7:\n        *s_out = \"DW_OP_lit7\";\n        return DW_DLV_OK;\n    case DW_OP_lit8:\n        *s_out = \"DW_OP_lit8\";\n        return DW_DLV_OK;\n    case DW_OP_lit9:\n        *s_out = \"DW_OP_lit9\";\n        return DW_DLV_OK;\n    case DW_OP_lit10:\n        *s_out = \"DW_OP_lit10\";\n        return DW_DLV_OK;\n    case DW_OP_lit11:\n        *s_out = \"DW_OP_lit11\";\n        return DW_DLV_OK;\n    case DW_OP_lit12:\n        *s_out = \"DW_OP_lit12\";\n        return DW_DLV_OK;\n    case DW_OP_lit13:\n        *s_out = \"DW_OP_lit13\";\n        return DW_DLV_OK;\n    case DW_OP_lit14:\n        *s_out = \"DW_OP_lit14\";\n        return DW_DLV_OK;\n    case DW_OP_lit15:\n        *s_out = \"DW_OP_lit15\";\n        return DW_DLV_OK;\n    case DW_OP_lit16:\n        *s_out = \"DW_OP_lit16\";\n        return DW_DLV_OK;\n    case DW_OP_lit17:\n        *s_out = \"DW_OP_lit17\";\n        return DW_DLV_OK;\n    case DW_OP_lit18:\n        *s_out = \"DW_OP_lit18\";\n        return DW_DLV_OK;\n    case DW_OP_lit19:\n        *s_out = \"DW_OP_lit19\";\n        return DW_DLV_OK;\n    case DW_OP_lit20:\n        *s_out = \"DW_OP_lit20\";\n        return DW_DLV_OK;\n    case DW_OP_lit21:\n        *s_out = \"DW_OP_lit21\";\n        return DW_DLV_OK;\n    case DW_OP_lit22:\n        *s_out = \"DW_OP_lit22\";\n        return DW_DLV_OK;\n    case DW_OP_lit23:\n        *s_out = \"DW_OP_lit23\";\n        return DW_DLV_OK;\n    case DW_OP_lit24:\n        *s_out = \"DW_OP_lit24\";\n        return DW_DLV_OK;\n    case DW_OP_lit25:\n        *s_out = \"DW_OP_lit25\";\n        return DW_DLV_OK;\n    case DW_OP_lit26:\n        *s_out = \"DW_OP_lit26\";\n        return DW_DLV_OK;\n    case DW_OP_lit27:\n        *s_out = \"DW_OP_lit27\";\n        return DW_DLV_OK;\n    case DW_OP_lit28:\n        *s_out = \"DW_OP_lit28\";\n        return DW_DLV_OK;\n    case DW_OP_lit29:\n        *s_out = \"DW_OP_lit29\";\n        return DW_DLV_OK;\n    case DW_OP_lit30:\n        *s_out = \"DW_OP_lit30\";\n        return DW_DLV_OK;\n    case DW_OP_lit31:\n        *s_out = \"DW_OP_lit31\";\n        return DW_DLV_OK;\n    case DW_OP_reg0:\n        *s_out = \"DW_OP_reg0\";\n        return DW_DLV_OK;\n    case DW_OP_reg1:\n        *s_out = \"DW_OP_reg1\";\n        return DW_DLV_OK;\n    case DW_OP_reg2:\n        *s_out = \"DW_OP_reg2\";\n        return DW_DLV_OK;\n    case DW_OP_reg3:\n        *s_out = \"DW_OP_reg3\";\n        return DW_DLV_OK;\n    case DW_OP_reg4:\n        *s_out = \"DW_OP_reg4\";\n        return DW_DLV_OK;\n    case DW_OP_reg5:\n        *s_out = \"DW_OP_reg5\";\n        return DW_DLV_OK;\n    case DW_OP_reg6:\n        *s_out = \"DW_OP_reg6\";\n        return DW_DLV_OK;\n    case DW_OP_reg7:\n        *s_out = \"DW_OP_reg7\";\n        return DW_DLV_OK;\n    case DW_OP_reg8:\n        *s_out = \"DW_OP_reg8\";\n        return DW_DLV_OK;\n    case DW_OP_reg9:\n        *s_out = \"DW_OP_reg9\";\n        return DW_DLV_OK;\n    case DW_OP_reg10:\n        *s_out = \"DW_OP_reg10\";\n        return DW_DLV_OK;\n    case DW_OP_reg11:\n        *s_out = \"DW_OP_reg11\";\n        return DW_DLV_OK;\n    case DW_OP_reg12:\n        *s_out = \"DW_OP_reg12\";\n        return DW_DLV_OK;\n    case DW_OP_reg13:\n        *s_out = \"DW_OP_reg13\";\n        return DW_DLV_OK;\n    case DW_OP_reg14:\n        *s_out = \"DW_OP_reg14\";\n        return DW_DLV_OK;\n    case DW_OP_reg15:\n        *s_out = \"DW_OP_reg15\";\n        return DW_DLV_OK;\n    case DW_OP_reg16:\n        *s_out = \"DW_OP_reg16\";\n        return DW_DLV_OK;\n    case DW_OP_reg17:\n        *s_out = \"DW_OP_reg17\";\n        return DW_DLV_OK;\n    case DW_OP_reg18:\n        *s_out = \"DW_OP_reg18\";\n        return DW_DLV_OK;\n    case DW_OP_reg19:\n        *s_out = \"DW_OP_reg19\";\n        return DW_DLV_OK;\n    case DW_OP_reg20:\n        *s_out = \"DW_OP_reg20\";\n        return DW_DLV_OK;\n    case DW_OP_reg21:\n        *s_out = \"DW_OP_reg21\";\n        return DW_DLV_OK;\n    case DW_OP_reg22:\n        *s_out = \"DW_OP_reg22\";\n        return DW_DLV_OK;\n    case DW_OP_reg23:\n        *s_out = \"DW_OP_reg23\";\n        return DW_DLV_OK;\n    case DW_OP_reg24:\n        *s_out = \"DW_OP_reg24\";\n        return DW_DLV_OK;\n    case DW_OP_reg25:\n        *s_out = \"DW_OP_reg25\";\n        return DW_DLV_OK;\n    case DW_OP_reg26:\n        *s_out = \"DW_OP_reg26\";\n        return DW_DLV_OK;\n    case DW_OP_reg27:\n        *s_out = \"DW_OP_reg27\";\n        return DW_DLV_OK;\n    case DW_OP_reg28:\n        *s_out = \"DW_OP_reg28\";\n        return DW_DLV_OK;\n    case DW_OP_reg29:\n        *s_out = \"DW_OP_reg29\";\n        return DW_DLV_OK;\n    case DW_OP_reg30:\n        *s_out = \"DW_OP_reg30\";\n        return DW_DLV_OK;\n    case DW_OP_reg31:\n        *s_out = \"DW_OP_reg31\";\n        return DW_DLV_OK;\n    case DW_OP_breg0:\n        *s_out = \"DW_OP_breg0\";\n        return DW_DLV_OK;\n    case DW_OP_breg1:\n        *s_out = \"DW_OP_breg1\";\n        return DW_DLV_OK;\n    case DW_OP_breg2:\n        *s_out = \"DW_OP_breg2\";\n        return DW_DLV_OK;\n    case DW_OP_breg3:\n        *s_out = \"DW_OP_breg3\";\n        return DW_DLV_OK;\n    case DW_OP_breg4:\n        *s_out = \"DW_OP_breg4\";\n        return DW_DLV_OK;\n    case DW_OP_breg5:\n        *s_out = \"DW_OP_breg5\";\n        return DW_DLV_OK;\n    case DW_OP_breg6:\n        *s_out = \"DW_OP_breg6\";\n        return DW_DLV_OK;\n    case DW_OP_breg7:\n        *s_out = \"DW_OP_breg7\";\n        return DW_DLV_OK;\n    case DW_OP_breg8:\n        *s_out = \"DW_OP_breg8\";\n        return DW_DLV_OK;\n    case DW_OP_breg9:\n        *s_out = \"DW_OP_breg9\";\n        return DW_DLV_OK;\n    case DW_OP_breg10:\n        *s_out = \"DW_OP_breg10\";\n        return DW_DLV_OK;\n    case DW_OP_breg11:\n        *s_out = \"DW_OP_breg11\";\n        return DW_DLV_OK;\n    case DW_OP_breg12:\n        *s_out = \"DW_OP_breg12\";\n        return DW_DLV_OK;\n    case DW_OP_breg13:\n        *s_out = \"DW_OP_breg13\";\n        return DW_DLV_OK;\n    case DW_OP_breg14:\n        *s_out = \"DW_OP_breg14\";\n        return DW_DLV_OK;\n    case DW_OP_breg15:\n        *s_out = \"DW_OP_breg15\";\n        return DW_DLV_OK;\n    case DW_OP_breg16:\n        *s_out = \"DW_OP_breg16\";\n        return DW_DLV_OK;\n    case DW_OP_breg17:\n        *s_out = \"DW_OP_breg17\";\n        return DW_DLV_OK;\n    case DW_OP_breg18:\n        *s_out = \"DW_OP_breg18\";\n        return DW_DLV_OK;\n    case DW_OP_breg19:\n        *s_out = \"DW_OP_breg19\";\n        return DW_DLV_OK;\n    case DW_OP_breg20:\n        *s_out = \"DW_OP_breg20\";\n        return DW_DLV_OK;\n    case DW_OP_breg21:\n        *s_out = \"DW_OP_breg21\";\n        return DW_DLV_OK;\n    case DW_OP_breg22:\n        *s_out = \"DW_OP_breg22\";\n        return DW_DLV_OK;\n    case DW_OP_breg23:\n        *s_out = \"DW_OP_breg23\";\n        return DW_DLV_OK;\n    case DW_OP_breg24:\n        *s_out = \"DW_OP_breg24\";\n        return DW_DLV_OK;\n    case DW_OP_breg25:\n        *s_out = \"DW_OP_breg25\";\n        return DW_DLV_OK;\n    case DW_OP_breg26:\n        *s_out = \"DW_OP_breg26\";\n        return DW_DLV_OK;\n    case DW_OP_breg27:\n        *s_out = \"DW_OP_breg27\";\n        return DW_DLV_OK;\n    case DW_OP_breg28:\n        *s_out = \"DW_OP_breg28\";\n        return DW_DLV_OK;\n    case DW_OP_breg29:\n        *s_out = \"DW_OP_breg29\";\n        return DW_DLV_OK;\n    case DW_OP_breg30:\n        *s_out = \"DW_OP_breg30\";\n        return DW_DLV_OK;\n    case DW_OP_breg31:\n        *s_out = \"DW_OP_breg31\";\n        return DW_DLV_OK;\n    case DW_OP_regx:\n        *s_out = \"DW_OP_regx\";\n        return DW_DLV_OK;\n    case DW_OP_fbreg:\n        *s_out = \"DW_OP_fbreg\";\n        return DW_DLV_OK;\n    case DW_OP_bregx:\n        *s_out = \"DW_OP_bregx\";\n        return DW_DLV_OK;\n    case DW_OP_piece:\n        *s_out = \"DW_OP_piece\";\n        return DW_DLV_OK;\n    case DW_OP_deref_size:\n        *s_out = \"DW_OP_deref_size\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_size:\n        *s_out = \"DW_OP_xderef_size\";\n        return DW_DLV_OK;\n    case DW_OP_nop:\n        *s_out = \"DW_OP_nop\";\n        return DW_DLV_OK;\n    case DW_OP_push_object_address:\n        *s_out = \"DW_OP_push_object_address\";\n        return DW_DLV_OK;\n    case DW_OP_call2:\n        *s_out = \"DW_OP_call2\";\n        return DW_DLV_OK;\n    case DW_OP_call4:\n        *s_out = \"DW_OP_call4\";\n        return DW_DLV_OK;\n    case DW_OP_call_ref:\n        *s_out = \"DW_OP_call_ref\";\n        return DW_DLV_OK;\n    case DW_OP_form_tls_address:\n        *s_out = \"DW_OP_form_tls_address\";\n        return DW_DLV_OK;\n    case DW_OP_call_frame_cfa:\n        *s_out = \"DW_OP_call_frame_cfa\";\n        return DW_DLV_OK;\n    case DW_OP_bit_piece:\n        *s_out = \"DW_OP_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_value:\n        *s_out = \"DW_OP_implicit_value\";\n        return DW_DLV_OK;\n    case DW_OP_stack_value:\n        *s_out = \"DW_OP_stack_value\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_pointer:\n        *s_out = \"DW_OP_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_addrx:\n        *s_out = \"DW_OP_addrx\";\n        return DW_DLV_OK;\n    case DW_OP_constx:\n        *s_out = \"DW_OP_constx\";\n        return DW_DLV_OK;\n    case DW_OP_entry_value:\n        *s_out = \"DW_OP_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_const_type:\n        *s_out = \"DW_OP_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_regval_type:\n        *s_out = \"DW_OP_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_deref_type:\n        *s_out = \"DW_OP_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_type:\n        *s_out = \"DW_OP_xderef_type\";\n        return DW_DLV_OK;\n    case DW_OP_convert:\n        *s_out = \"DW_OP_convert\";\n        return DW_DLV_OK;\n    case DW_OP_reinterpret:\n        *s_out = \"DW_OP_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_push_tls_address:\n        *s_out = \"DW_OP_GNU_push_tls_address\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xe0. DW_OP_lo_user */\n    /* Skipping alternate spelling of value 0xe0. DW_OP_HP_unknown */\n    case DW_OP_HP_is_value:\n        *s_out = \"DW_OP_HP_is_value\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst4:\n        *s_out = \"DW_OP_HP_fltconst4\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst8:\n        *s_out = \"DW_OP_HP_fltconst8\";\n        return DW_DLV_OK;\n    case DW_OP_HP_mod_range:\n        *s_out = \"DW_OP_HP_mod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_unmod_range:\n        *s_out = \"DW_OP_HP_unmod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_tls:\n        *s_out = \"DW_OP_HP_tls\";\n        return DW_DLV_OK;\n    case DW_OP_INTEL_bit_piece:\n        *s_out = \"DW_OP_INTEL_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_uninit:\n        *s_out = \"DW_OP_GNU_uninit\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xf0. DW_OP_APPLE_uninit */\n    case DW_OP_GNU_encoded_addr:\n        *s_out = \"DW_OP_GNU_encoded_addr\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_implicit_pointer:\n        *s_out = \"DW_OP_GNU_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_entry_value:\n        *s_out = \"DW_OP_GNU_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_type:\n        *s_out = \"DW_OP_GNU_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_regval_type:\n        *s_out = \"DW_OP_GNU_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_deref_type:\n        *s_out = \"DW_OP_GNU_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_convert:\n        *s_out = \"DW_OP_GNU_convert\";\n        return DW_DLV_OK;\n    case DW_OP_PGI_omp_thread_num:\n        *s_out = \"DW_OP_PGI_omp_thread_num\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_reinterpret:\n        *s_out = \"DW_OP_GNU_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_parameter_ref:\n        *s_out = \"DW_OP_GNU_parameter_ref\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_addr_index:\n        *s_out = \"DW_OP_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_index:\n        *s_out = \"DW_OP_GNU_const_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_variable_value:\n        *s_out = \"DW_OP_GNU_variable_value\";\n        return DW_DLV_OK;\n    case DW_OP_hi_user:\n        *s_out = \"DW_OP_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATE_address:\n        *s_out = \"DW_ATE_address\";\n        return DW_DLV_OK;\n    case DW_ATE_boolean:\n        *s_out = \"DW_ATE_boolean\";\n        return DW_DLV_OK;\n    case DW_ATE_complex_float:\n        *s_out = \"DW_ATE_complex_float\";\n        return DW_DLV_OK;\n    case DW_ATE_float:\n        *s_out = \"DW_ATE_float\";\n        return DW_DLV_OK;\n    case DW_ATE_signed:\n        *s_out = \"DW_ATE_signed\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_char:\n        *s_out = \"DW_ATE_signed_char\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned:\n        *s_out = \"DW_ATE_unsigned\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_char:\n        *s_out = \"DW_ATE_unsigned_char\";\n        return DW_DLV_OK;\n    case DW_ATE_imaginary_float:\n        *s_out = \"DW_ATE_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_packed_decimal:\n        *s_out = \"DW_ATE_packed_decimal\";\n        return DW_DLV_OK;\n    case DW_ATE_numeric_string:\n        *s_out = \"DW_ATE_numeric_string\";\n        return DW_DLV_OK;\n    case DW_ATE_edited:\n        *s_out = \"DW_ATE_edited\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_fixed:\n        *s_out = \"DW_ATE_signed_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_fixed:\n        *s_out = \"DW_ATE_unsigned_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_decimal_float:\n        *s_out = \"DW_ATE_decimal_float\";\n        return DW_DLV_OK;\n    case DW_ATE_UTF:\n        *s_out = \"DW_ATE_UTF\";\n        return DW_DLV_OK;\n    case DW_ATE_UCS:\n        *s_out = \"DW_ATE_UCS\";\n        return DW_DLV_OK;\n    case DW_ATE_ASCII:\n        *s_out = \"DW_ATE_ASCII\";\n        return DW_DLV_OK;\n    case DW_ATE_ALTIUM_fract:\n        *s_out = \"DW_ATE_ALTIUM_fract\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_ATE_lo_user */\n    /* Skipping alternate spelling of value 0x80. DW_ATE_HP_float80 */\n    case DW_ATE_ALTIUM_accum:\n        *s_out = \"DW_ATE_ALTIUM_accum\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x81. DW_ATE_HP_complex_float80 */\n    case DW_ATE_HP_float128:\n        *s_out = \"DW_ATE_HP_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_complex_float128:\n        *s_out = \"DW_ATE_HP_complex_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_floathpintel:\n        *s_out = \"DW_ATE_HP_floathpintel\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float80:\n        *s_out = \"DW_ATE_HP_imaginary_float80\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float128:\n        *s_out = \"DW_ATE_HP_imaginary_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_interval_float:\n        *s_out = \"DW_ATE_SUN_interval_float\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_imaginary_float:\n        *s_out = \"DW_ATE_SUN_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_hi_user:\n        *s_out = \"DW_ATE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DEFAULTED_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DEFAULTED_no:\n        *s_out = \"DW_DEFAULTED_no\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_in_class:\n        *s_out = \"DW_DEFAULTED_in_class\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_out_of_class:\n        *s_out = \"DW_DEFAULTED_out_of_class\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_IDX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_IDX_compile_unit:\n        *s_out = \"DW_IDX_compile_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_type_unit:\n        *s_out = \"DW_IDX_type_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_die_offset:\n        *s_out = \"DW_IDX_die_offset\";\n        return DW_DLV_OK;\n    case DW_IDX_parent:\n        *s_out = \"DW_IDX_parent\";\n        return DW_DLV_OK;\n    case DW_IDX_type_hash:\n        *s_out = \"DW_IDX_type_hash\";\n        return DW_DLV_OK;\n    case DW_IDX_hi_user:\n        *s_out = \"DW_IDX_hi_user\";\n        return DW_DLV_OK;\n    case DW_IDX_lo_user:\n        *s_out = \"DW_IDX_lo_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLEX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLEX_end_of_list_entry:\n        *s_out = \"DW_LLEX_end_of_list_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_base_address_selection_entry:\n        *s_out = \"DW_LLEX_base_address_selection_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_end_entry:\n        *s_out = \"DW_LLEX_start_end_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_length_entry:\n        *s_out = \"DW_LLEX_start_length_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_offset_pair_entry:\n        *s_out = \"DW_LLEX_offset_pair_entry\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLE_end_of_list:\n        *s_out = \"DW_LLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_LLE_base_addressx:\n        *s_out = \"DW_LLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_endx:\n        *s_out = \"DW_LLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_length:\n        *s_out = \"DW_LLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_LLE_offset_pair:\n        *s_out = \"DW_LLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_LLE_default_location:\n        *s_out = \"DW_LLE_default_location\";\n        return DW_DLV_OK;\n    case DW_LLE_base_address:\n        *s_out = \"DW_LLE_base_address\";\n        return DW_DLV_OK;\n    case DW_LLE_start_end:\n        *s_out = \"DW_LLE_start_end\";\n        return DW_DLV_OK;\n    case DW_LLE_start_length:\n        *s_out = \"DW_LLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_RLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_RLE_end_of_list:\n        *s_out = \"DW_RLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_RLE_base_addressx:\n        *s_out = \"DW_RLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_endx:\n        *s_out = \"DW_RLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_length:\n        *s_out = \"DW_RLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_RLE_offset_pair:\n        *s_out = \"DW_RLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_RLE_base_address:\n        *s_out = \"DW_RLE_base_address\";\n        return DW_DLV_OK;\n    case DW_RLE_start_end:\n        *s_out = \"DW_RLE_start_end\";\n        return DW_DLV_OK;\n    case DW_RLE_start_length:\n        *s_out = \"DW_RLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIVIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIVIS_global:\n        *s_out = \"DW_GNUIVIS_global\";\n        return DW_DLV_OK;\n    case DW_GNUIVIS_static:\n        *s_out = \"DW_GNUIVIS_static\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIKIND_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIKIND_none:\n        *s_out = \"DW_GNUIKIND_none\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_type:\n        *s_out = \"DW_GNUIKIND_type\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_variable:\n        *s_out = \"DW_GNUIKIND_variable\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_function:\n        *s_out = \"DW_GNUIKIND_function\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_other:\n        *s_out = \"DW_GNUIKIND_other\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_UT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_UT_compile:\n        *s_out = \"DW_UT_compile\";\n        return DW_DLV_OK;\n    case DW_UT_type:\n        *s_out = \"DW_UT_type\";\n        return DW_DLV_OK;\n    case DW_UT_partial:\n        *s_out = \"DW_UT_partial\";\n        return DW_DLV_OK;\n    case DW_UT_skeleton:\n        *s_out = \"DW_UT_skeleton\";\n        return DW_DLV_OK;\n    case DW_UT_split_compile:\n        *s_out = \"DW_UT_split_compile\";\n        return DW_DLV_OK;\n    case DW_UT_split_type:\n        *s_out = \"DW_UT_split_type\";\n        return DW_DLV_OK;\n    case DW_UT_lo_user:\n        *s_out = \"DW_UT_lo_user\";\n        return DW_DLV_OK;\n    case DW_UT_hi_user:\n        *s_out = \"DW_UT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_SECT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_SECT_INFO:\n        *s_out = \"DW_SECT_INFO\";\n        return DW_DLV_OK;\n    case DW_SECT_TYPES:\n        *s_out = \"DW_SECT_TYPES\";\n        return DW_DLV_OK;\n    case DW_SECT_ABBREV:\n        *s_out = \"DW_SECT_ABBREV\";\n        return DW_DLV_OK;\n    case DW_SECT_LINE:\n        *s_out = \"DW_SECT_LINE\";\n        return DW_DLV_OK;\n    case DW_SECT_LOCLISTS:\n        *s_out = \"DW_SECT_LOCLISTS\";\n        return DW_DLV_OK;\n    case DW_SECT_STR_OFFSETS:\n        *s_out = \"DW_SECT_STR_OFFSETS\";\n        return DW_DLV_OK;\n    case DW_SECT_MACRO:\n        *s_out = \"DW_SECT_MACRO\";\n        return DW_DLV_OK;\n    case DW_SECT_RNGLISTS:\n        *s_out = \"DW_SECT_RNGLISTS\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DS_unsigned:\n        *s_out = \"DW_DS_unsigned\";\n        return DW_DLV_OK;\n    case DW_DS_leading_overpunch:\n        *s_out = \"DW_DS_leading_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_overpunch:\n        *s_out = \"DW_DS_trailing_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_leading_separate:\n        *s_out = \"DW_DS_leading_separate\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_separate:\n        *s_out = \"DW_DS_trailing_separate\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_END_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_END_default:\n        *s_out = \"DW_END_default\";\n        return DW_DLV_OK;\n    case DW_END_big:\n        *s_out = \"DW_END_big\";\n        return DW_DLV_OK;\n    case DW_END_little:\n        *s_out = \"DW_END_little\";\n        return DW_DLV_OK;\n    case DW_END_lo_user:\n        *s_out = \"DW_END_lo_user\";\n        return DW_DLV_OK;\n    case DW_END_hi_user:\n        *s_out = \"DW_END_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATCF_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATCF_lo_user:\n        *s_out = \"DW_ATCF_lo_user\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_bitfield:\n        *s_out = \"DW_ATCF_SUN_mop_bitfield\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_spill:\n        *s_out = \"DW_ATCF_SUN_mop_spill\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_scopy:\n        *s_out = \"DW_ATCF_SUN_mop_scopy\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_start:\n        *s_out = \"DW_ATCF_SUN_func_start\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_end_ctors:\n        *s_out = \"DW_ATCF_SUN_end_ctors\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_branch_target:\n        *s_out = \"DW_ATCF_SUN_branch_target\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_stack_probe:\n        *s_out = \"DW_ATCF_SUN_mop_stack_probe\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_epilog:\n        *s_out = \"DW_ATCF_SUN_func_epilog\";\n        return DW_DLV_OK;\n    case DW_ATCF_hi_user:\n        *s_out = \"DW_ATCF_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ACCESS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ACCESS_public:\n        *s_out = \"DW_ACCESS_public\";\n        return DW_DLV_OK;\n    case DW_ACCESS_protected:\n        *s_out = \"DW_ACCESS_protected\";\n        return DW_DLV_OK;\n    case DW_ACCESS_private:\n        *s_out = \"DW_ACCESS_private\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIS_local:\n        *s_out = \"DW_VIS_local\";\n        return DW_DLV_OK;\n    case DW_VIS_exported:\n        *s_out = \"DW_VIS_exported\";\n        return DW_DLV_OK;\n    case DW_VIS_qualified:\n        *s_out = \"DW_VIS_qualified\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIRTUALITY_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIRTUALITY_none:\n        *s_out = \"DW_VIRTUALITY_none\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_virtual:\n        *s_out = \"DW_VIRTUALITY_virtual\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_pure_virtual:\n        *s_out = \"DW_VIRTUALITY_pure_virtual\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LANG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LANG_C89:\n        *s_out = \"DW_LANG_C89\";\n        return DW_DLV_OK;\n    case DW_LANG_C:\n        *s_out = \"DW_LANG_C\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada83:\n        *s_out = \"DW_LANG_Ada83\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus:\n        *s_out = \"DW_LANG_C_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol74:\n        *s_out = \"DW_LANG_Cobol74\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol85:\n        *s_out = \"DW_LANG_Cobol85\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran77:\n        *s_out = \"DW_LANG_Fortran77\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran90:\n        *s_out = \"DW_LANG_Fortran90\";\n        return DW_DLV_OK;\n    case DW_LANG_Pascal83:\n        *s_out = \"DW_LANG_Pascal83\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula2:\n        *s_out = \"DW_LANG_Modula2\";\n        return DW_DLV_OK;\n    case DW_LANG_Java:\n        *s_out = \"DW_LANG_Java\";\n        return DW_DLV_OK;\n    case DW_LANG_C99:\n        *s_out = \"DW_LANG_C99\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada95:\n        *s_out = \"DW_LANG_Ada95\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran95:\n        *s_out = \"DW_LANG_Fortran95\";\n        return DW_DLV_OK;\n    case DW_LANG_PLI:\n        *s_out = \"DW_LANG_PLI\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC:\n        *s_out = \"DW_LANG_ObjC\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC_plus_plus:\n        *s_out = \"DW_LANG_ObjC_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_UPC:\n        *s_out = \"DW_LANG_UPC\";\n        return DW_DLV_OK;\n    case DW_LANG_D:\n        *s_out = \"DW_LANG_D\";\n        return DW_DLV_OK;\n    case DW_LANG_Python:\n        *s_out = \"DW_LANG_Python\";\n        return DW_DLV_OK;\n    case DW_LANG_OpenCL:\n        *s_out = \"DW_LANG_OpenCL\";\n        return DW_DLV_OK;\n    case DW_LANG_Go:\n        *s_out = \"DW_LANG_Go\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula3:\n        *s_out = \"DW_LANG_Modula3\";\n        return DW_DLV_OK;\n    case DW_LANG_Haskel:\n        *s_out = \"DW_LANG_Haskel\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_03:\n        *s_out = \"DW_LANG_C_plus_plus_03\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_11:\n        *s_out = \"DW_LANG_C_plus_plus_11\";\n        return DW_DLV_OK;\n    case DW_LANG_OCaml:\n        *s_out = \"DW_LANG_OCaml\";\n        return DW_DLV_OK;\n    case DW_LANG_Rust:\n        *s_out = \"DW_LANG_Rust\";\n        return DW_DLV_OK;\n    case DW_LANG_C11:\n        *s_out = \"DW_LANG_C11\";\n        return DW_DLV_OK;\n    case DW_LANG_Swift:\n        *s_out = \"DW_LANG_Swift\";\n        return DW_DLV_OK;\n    case DW_LANG_Julia:\n        *s_out = \"DW_LANG_Julia\";\n        return DW_DLV_OK;\n    case DW_LANG_Dylan:\n        *s_out = \"DW_LANG_Dylan\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_14:\n        *s_out = \"DW_LANG_C_plus_plus_14\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran03:\n        *s_out = \"DW_LANG_Fortran03\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran08:\n        *s_out = \"DW_LANG_Fortran08\";\n        return DW_DLV_OK;\n    case DW_LANG_RenderScript:\n        *s_out = \"DW_LANG_RenderScript\";\n        return DW_DLV_OK;\n    case DW_LANG_BLISS:\n        *s_out = \"DW_LANG_BLISS\";\n        return DW_DLV_OK;\n    case DW_LANG_lo_user:\n        *s_out = \"DW_LANG_lo_user\";\n        return DW_DLV_OK;\n    case DW_LANG_Mips_Assembler:\n        *s_out = \"DW_LANG_Mips_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_Upc:\n        *s_out = \"DW_LANG_Upc\";\n        return DW_DLV_OK;\n    case DW_LANG_SUN_Assembler:\n        *s_out = \"DW_LANG_SUN_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_ALTIUM_Assembler:\n        *s_out = \"DW_LANG_ALTIUM_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_hi_user:\n        *s_out = \"DW_LANG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ID_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ID_case_sensitive:\n        *s_out = \"DW_ID_case_sensitive\";\n        return DW_DLV_OK;\n    case DW_ID_up_case:\n        *s_out = \"DW_ID_up_case\";\n        return DW_DLV_OK;\n    case DW_ID_down_case:\n        *s_out = \"DW_ID_down_case\";\n        return DW_DLV_OK;\n    case DW_ID_case_insensitive:\n        *s_out = \"DW_ID_case_insensitive\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CC_normal:\n        *s_out = \"DW_CC_normal\";\n        return DW_DLV_OK;\n    case DW_CC_program:\n        *s_out = \"DW_CC_program\";\n        return DW_DLV_OK;\n    case DW_CC_nocall:\n        *s_out = \"DW_CC_nocall\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_reference:\n        *s_out = \"DW_CC_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_value:\n        *s_out = \"DW_CC_pass_by_value\";\n        return DW_DLV_OK;\n    case DW_CC_lo_user:\n        *s_out = \"DW_CC_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x40. DW_CC_GNU_renesas_sh */\n    case DW_CC_GNU_borland_fastcall_i386:\n        *s_out = \"DW_CC_GNU_borland_fastcall_i386\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_interrupt:\n        *s_out = \"DW_CC_ALTIUM_interrupt\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_system_stack:\n        *s_out = \"DW_CC_ALTIUM_near_system_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_user_stack:\n        *s_out = \"DW_CC_ALTIUM_near_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_huge_user_stack:\n        *s_out = \"DW_CC_ALTIUM_huge_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_hi_user:\n        *s_out = \"DW_CC_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_INL_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_INL_not_inlined:\n        *s_out = \"DW_INL_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_inlined:\n        *s_out = \"DW_INL_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_not_inlined:\n        *s_out = \"DW_INL_declared_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_inlined:\n        *s_out = \"DW_INL_declared_inlined\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ORD_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ORD_row_major:\n        *s_out = \"DW_ORD_row_major\";\n        return DW_DLV_OK;\n    case DW_ORD_col_major:\n        *s_out = \"DW_ORD_col_major\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DSC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DSC_label:\n        *s_out = \"DW_DSC_label\";\n        return DW_DLV_OK;\n    case DW_DSC_range:\n        *s_out = \"DW_DSC_range\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNCT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNCT_path:\n        *s_out = \"DW_LNCT_path\";\n        return DW_DLV_OK;\n    case DW_LNCT_directory_index:\n        *s_out = \"DW_LNCT_directory_index\";\n        return DW_DLV_OK;\n    case DW_LNCT_timestamp:\n        *s_out = \"DW_LNCT_timestamp\";\n        return DW_DLV_OK;\n    case DW_LNCT_size:\n        *s_out = \"DW_LNCT_size\";\n        return DW_DLV_OK;\n    case DW_LNCT_MD5:\n        *s_out = \"DW_LNCT_MD5\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_subprogram_name:\n        *s_out = \"DW_LNCT_GNU_subprogram_name\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_file:\n        *s_out = \"DW_LNCT_GNU_decl_file\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_line:\n        *s_out = \"DW_LNCT_GNU_decl_line\";\n        return DW_DLV_OK;\n    case DW_LNCT_lo_user:\n        *s_out = \"DW_LNCT_lo_user\";\n        return DW_DLV_OK;\n    case DW_LNCT_hi_user:\n        *s_out = \"DW_LNCT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNS_copy:\n        *s_out = \"DW_LNS_copy\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_pc:\n        *s_out = \"DW_LNS_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_line:\n        *s_out = \"DW_LNS_advance_line\";\n        return DW_DLV_OK;\n    case DW_LNS_set_file:\n        *s_out = \"DW_LNS_set_file\";\n        return DW_DLV_OK;\n    case DW_LNS_set_column:\n        *s_out = \"DW_LNS_set_column\";\n        return DW_DLV_OK;\n    case DW_LNS_negate_stmt:\n        *s_out = \"DW_LNS_negate_stmt\";\n        return DW_DLV_OK;\n    case DW_LNS_set_basic_block:\n        *s_out = \"DW_LNS_set_basic_block\";\n        return DW_DLV_OK;\n    case DW_LNS_const_add_pc:\n        *s_out = \"DW_LNS_const_add_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_fixed_advance_pc:\n        *s_out = \"DW_LNS_fixed_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_set_prologue_end:\n        *s_out = \"DW_LNS_set_prologue_end\";\n        return DW_DLV_OK;\n    case DW_LNS_set_epilogue_begin:\n        *s_out = \"DW_LNS_set_epilogue_begin\";\n        return DW_DLV_OK;\n    case DW_LNS_set_isa:\n        *s_out = \"DW_LNS_set_isa\";\n        return DW_DLV_OK;\n    case DW_LNS_set_address_from_logical:\n        *s_out = \"DW_LNS_set_address_from_logical\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xd. DW_LNS_set_subprogram */\n    case DW_LNS_inlined_call:\n        *s_out = \"DW_LNS_inlined_call\";\n        return DW_DLV_OK;\n    case DW_LNS_pop_context:\n        *s_out = \"DW_LNS_pop_context\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNE_end_sequence:\n        *s_out = \"DW_LNE_end_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_set_address:\n        *s_out = \"DW_LNE_set_address\";\n        return DW_DLV_OK;\n    case DW_LNE_define_file:\n        *s_out = \"DW_LNE_define_file\";\n        return DW_DLV_OK;\n    case DW_LNE_set_discriminator:\n        *s_out = \"DW_LNE_set_discriminator\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_is_UV_update:\n        *s_out = \"DW_LNE_HP_negate_is_UV_update\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_push_context:\n        *s_out = \"DW_LNE_HP_push_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_pop_context:\n        *s_out = \"DW_LNE_HP_pop_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_file_line_column:\n        *s_out = \"DW_LNE_HP_set_file_line_column\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_routine_name:\n        *s_out = \"DW_LNE_HP_set_routine_name\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_sequence:\n        *s_out = \"DW_LNE_HP_set_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_post_semantics:\n        *s_out = \"DW_LNE_HP_negate_post_semantics\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_function_exit:\n        *s_out = \"DW_LNE_HP_negate_function_exit\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_front_end_logical:\n        *s_out = \"DW_LNE_HP_negate_front_end_logical\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_define_proc:\n        *s_out = \"DW_LNE_HP_define_proc\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_source_file_correlation:\n        *s_out = \"DW_LNE_HP_source_file_correlation\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_LNE_lo_user */\n    case DW_LNE_hi_user:\n        *s_out = \"DW_LNE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ISA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ISA_UNKNOWN:\n        *s_out = \"DW_ISA_UNKNOWN\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_thumb:\n        *s_out = \"DW_ISA_ARM_thumb\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_arm:\n        *s_out = \"DW_ISA_ARM_arm\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACRO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACRO_define:\n        *s_out = \"DW_MACRO_define\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef:\n        *s_out = \"DW_MACRO_undef\";\n        return DW_DLV_OK;\n    case DW_MACRO_start_file:\n        *s_out = \"DW_MACRO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_end_file:\n        *s_out = \"DW_MACRO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strp:\n        *s_out = \"DW_MACRO_define_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strp:\n        *s_out = \"DW_MACRO_undef_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_import:\n        *s_out = \"DW_MACRO_import\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_sup:\n        *s_out = \"DW_MACRO_define_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_sup:\n        *s_out = \"DW_MACRO_undef_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_import_sup:\n        *s_out = \"DW_MACRO_import_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strx:\n        *s_out = \"DW_MACRO_define_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strx:\n        *s_out = \"DW_MACRO_undef_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_lo_user:\n        *s_out = \"DW_MACRO_lo_user\";\n        return DW_DLV_OK;\n    case DW_MACRO_hi_user:\n        *s_out = \"DW_MACRO_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACINFO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACINFO_define:\n        *s_out = \"DW_MACINFO_define\";\n        return DW_DLV_OK;\n    case DW_MACINFO_undef:\n        *s_out = \"DW_MACINFO_undef\";\n        return DW_DLV_OK;\n    case DW_MACINFO_start_file:\n        *s_out = \"DW_MACINFO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_end_file:\n        *s_out = \"DW_MACINFO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_vendor_ext:\n        *s_out = \"DW_MACINFO_vendor_ext\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CFA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CFA_extended:\n        *s_out = \"DW_CFA_extended\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_CFA_nop */\n    case DW_CFA_set_loc:\n        *s_out = \"DW_CFA_set_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc1:\n        *s_out = \"DW_CFA_advance_loc1\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc2:\n        *s_out = \"DW_CFA_advance_loc2\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc4:\n        *s_out = \"DW_CFA_advance_loc4\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended:\n        *s_out = \"DW_CFA_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_extended:\n        *s_out = \"DW_CFA_restore_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_undefined:\n        *s_out = \"DW_CFA_undefined\";\n        return DW_DLV_OK;\n    case DW_CFA_same_value:\n        *s_out = \"DW_CFA_same_value\";\n        return DW_DLV_OK;\n    case DW_CFA_register:\n        *s_out = \"DW_CFA_register\";\n        return DW_DLV_OK;\n    case DW_CFA_remember_state:\n        *s_out = \"DW_CFA_remember_state\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_state:\n        *s_out = \"DW_CFA_restore_state\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa:\n        *s_out = \"DW_CFA_def_cfa\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_register:\n        *s_out = \"DW_CFA_def_cfa_register\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset:\n        *s_out = \"DW_CFA_def_cfa_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_expression:\n        *s_out = \"DW_CFA_def_cfa_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_expression:\n        *s_out = \"DW_CFA_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended_sf:\n        *s_out = \"DW_CFA_offset_extended_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_sf:\n        *s_out = \"DW_CFA_def_cfa_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset_sf:\n        *s_out = \"DW_CFA_def_cfa_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset:\n        *s_out = \"DW_CFA_val_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset_sf:\n        *s_out = \"DW_CFA_val_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_expression:\n        *s_out = \"DW_CFA_val_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_lo_user:\n        *s_out = \"DW_CFA_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x1c. DW_CFA_low_user */\n    case DW_CFA_MIPS_advance_loc8:\n        *s_out = \"DW_CFA_MIPS_advance_loc8\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_window_save:\n        *s_out = \"DW_CFA_GNU_window_save\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_args_size:\n        *s_out = \"DW_CFA_GNU_args_size\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_negative_offset_extended:\n        *s_out = \"DW_CFA_GNU_negative_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_METAWARE_info:\n        *s_out = \"DW_CFA_METAWARE_info\";\n        return DW_DLV_OK;\n    case DW_CFA_high_user:\n        *s_out = \"DW_CFA_high_user\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc:\n        *s_out = \"DW_CFA_advance_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_offset:\n        *s_out = \"DW_CFA_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_restore:\n        *s_out = \"DW_CFA_restore\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_EH_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_EH_PE_absptr:\n        *s_out = \"DW_EH_PE_absptr\";\n        return DW_DLV_OK;\n    case DW_EH_PE_uleb128:\n        *s_out = \"DW_EH_PE_uleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata2:\n        *s_out = \"DW_EH_PE_udata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata4:\n        *s_out = \"DW_EH_PE_udata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata8:\n        *s_out = \"DW_EH_PE_udata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sleb128:\n        *s_out = \"DW_EH_PE_sleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata2:\n        *s_out = \"DW_EH_PE_sdata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata4:\n        *s_out = \"DW_EH_PE_sdata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata8:\n        *s_out = \"DW_EH_PE_sdata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_pcrel:\n        *s_out = \"DW_EH_PE_pcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_textrel:\n        *s_out = \"DW_EH_PE_textrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_datarel:\n        *s_out = \"DW_EH_PE_datarel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_funcrel:\n        *s_out = \"DW_EH_PE_funcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_aligned:\n        *s_out = \"DW_EH_PE_aligned\";\n        return DW_DLV_OK;\n    case DW_EH_PE_omit:\n        *s_out = \"DW_EH_PE_omit\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FRAME_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FRAME_CFA_COL:\n        *s_out = \"DW_FRAME_CFA_COL\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_LAST_REG_NUM */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_RA_COL */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_STATIC_LINK */\n    case DW_FRAME_REG1:\n        *s_out = \"DW_FRAME_REG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG2:\n        *s_out = \"DW_FRAME_REG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG3:\n        *s_out = \"DW_FRAME_REG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG4:\n        *s_out = \"DW_FRAME_REG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG5:\n        *s_out = \"DW_FRAME_REG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG6:\n        *s_out = \"DW_FRAME_REG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG7:\n        *s_out = \"DW_FRAME_REG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG8:\n        *s_out = \"DW_FRAME_REG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG9:\n        *s_out = \"DW_FRAME_REG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG10:\n        *s_out = \"DW_FRAME_REG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG11:\n        *s_out = \"DW_FRAME_REG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG12:\n        *s_out = \"DW_FRAME_REG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG13:\n        *s_out = \"DW_FRAME_REG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG14:\n        *s_out = \"DW_FRAME_REG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG15:\n        *s_out = \"DW_FRAME_REG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG16:\n        *s_out = \"DW_FRAME_REG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG17:\n        *s_out = \"DW_FRAME_REG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG18:\n        *s_out = \"DW_FRAME_REG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG19:\n        *s_out = \"DW_FRAME_REG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG20:\n        *s_out = \"DW_FRAME_REG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG21:\n        *s_out = \"DW_FRAME_REG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG22:\n        *s_out = \"DW_FRAME_REG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG23:\n        *s_out = \"DW_FRAME_REG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG24:\n        *s_out = \"DW_FRAME_REG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG25:\n        *s_out = \"DW_FRAME_REG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG26:\n        *s_out = \"DW_FRAME_REG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG27:\n        *s_out = \"DW_FRAME_REG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG28:\n        *s_out = \"DW_FRAME_REG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG29:\n        *s_out = \"DW_FRAME_REG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG30:\n        *s_out = \"DW_FRAME_REG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG31:\n        *s_out = \"DW_FRAME_REG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG0:\n        *s_out = \"DW_FRAME_FREG0\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG1:\n        *s_out = \"DW_FRAME_FREG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG2:\n        *s_out = \"DW_FRAME_FREG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG3:\n        *s_out = \"DW_FRAME_FREG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG4:\n        *s_out = \"DW_FRAME_FREG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG5:\n        *s_out = \"DW_FRAME_FREG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG6:\n        *s_out = \"DW_FRAME_FREG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG7:\n        *s_out = \"DW_FRAME_FREG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG8:\n        *s_out = \"DW_FRAME_FREG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG9:\n        *s_out = \"DW_FRAME_FREG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG10:\n        *s_out = \"DW_FRAME_FREG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG11:\n        *s_out = \"DW_FRAME_FREG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG12:\n        *s_out = \"DW_FRAME_FREG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG13:\n        *s_out = \"DW_FRAME_FREG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG14:\n        *s_out = \"DW_FRAME_FREG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG15:\n        *s_out = \"DW_FRAME_FREG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG16:\n        *s_out = \"DW_FRAME_FREG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG17:\n        *s_out = \"DW_FRAME_FREG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG18:\n        *s_out = \"DW_FRAME_FREG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG19:\n        *s_out = \"DW_FRAME_FREG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG20:\n        *s_out = \"DW_FRAME_FREG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG21:\n        *s_out = \"DW_FRAME_FREG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG22:\n        *s_out = \"DW_FRAME_FREG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG23:\n        *s_out = \"DW_FRAME_FREG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG24:\n        *s_out = \"DW_FRAME_FREG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG25:\n        *s_out = \"DW_FRAME_FREG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG26:\n        *s_out = \"DW_FRAME_FREG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG27:\n        *s_out = \"DW_FRAME_FREG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG28:\n        *s_out = \"DW_FRAME_FREG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG29:\n        *s_out = \"DW_FRAME_FREG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG30:\n        *s_out = \"DW_FRAME_FREG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG31:\n        *s_out = \"DW_FRAME_FREG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG32:\n        *s_out = \"DW_FRAME_FREG32\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG33:\n        *s_out = \"DW_FRAME_FREG33\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG34:\n        *s_out = \"DW_FRAME_FREG34\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG35:\n        *s_out = \"DW_FRAME_FREG35\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG36:\n        *s_out = \"DW_FRAME_FREG36\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG37:\n        *s_out = \"DW_FRAME_FREG37\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG38:\n        *s_out = \"DW_FRAME_FREG38\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG39:\n        *s_out = \"DW_FRAME_FREG39\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG40:\n        *s_out = \"DW_FRAME_FREG40\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG41:\n        *s_out = \"DW_FRAME_FREG41\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG42:\n        *s_out = \"DW_FRAME_FREG42\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG43:\n        *s_out = \"DW_FRAME_FREG43\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG44:\n        *s_out = \"DW_FRAME_FREG44\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG45:\n        *s_out = \"DW_FRAME_FREG45\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG46:\n        *s_out = \"DW_FRAME_FREG46\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG47:\n        *s_out = \"DW_FRAME_FREG47\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG48:\n        *s_out = \"DW_FRAME_FREG48\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG49:\n        *s_out = \"DW_FRAME_FREG49\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG50:\n        *s_out = \"DW_FRAME_FREG50\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG51:\n        *s_out = \"DW_FRAME_FREG51\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG52:\n        *s_out = \"DW_FRAME_FREG52\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG53:\n        *s_out = \"DW_FRAME_FREG53\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG54:\n        *s_out = \"DW_FRAME_FREG54\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG55:\n        *s_out = \"DW_FRAME_FREG55\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG56:\n        *s_out = \"DW_FRAME_FREG56\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG57:\n        *s_out = \"DW_FRAME_FREG57\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG58:\n        *s_out = \"DW_FRAME_FREG58\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG59:\n        *s_out = \"DW_FRAME_FREG59\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG60:\n        *s_out = \"DW_FRAME_FREG60\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG61:\n        *s_out = \"DW_FRAME_FREG61\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG62:\n        *s_out = \"DW_FRAME_FREG62\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG63:\n        *s_out = \"DW_FRAME_FREG63\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG64:\n        *s_out = \"DW_FRAME_FREG64\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG65:\n        *s_out = \"DW_FRAME_FREG65\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG66:\n        *s_out = \"DW_FRAME_FREG66\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG67:\n        *s_out = \"DW_FRAME_FREG67\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG68:\n        *s_out = \"DW_FRAME_FREG68\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG69:\n        *s_out = \"DW_FRAME_FREG69\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG70:\n        *s_out = \"DW_FRAME_FREG70\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG71:\n        *s_out = \"DW_FRAME_FREG71\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG72:\n        *s_out = \"DW_FRAME_FREG72\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG73:\n        *s_out = \"DW_FRAME_FREG73\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG74:\n        *s_out = \"DW_FRAME_FREG74\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG75:\n        *s_out = \"DW_FRAME_FREG75\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG76:\n        *s_out = \"DW_FRAME_FREG76\";\n        return DW_DLV_OK;\n    case DW_FRAME_HIGHEST_NORMAL_REGISTER:\n        *s_out = \"DW_FRAME_HIGHEST_NORMAL_REGISTER\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CHILDREN_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CHILDREN_no:\n        *s_out = \"DW_CHILDREN_no\";\n        return DW_DLV_OK;\n    case DW_CHILDREN_yes:\n        *s_out = \"DW_CHILDREN_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ADDR_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ADDR_none:\n        *s_out = \"DW_ADDR_none\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n\n/* END FILE */\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef DWARF_NAMES_H\n#define DWARF_NAMES_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif /* __cplusplus */\n\nextern int dwarf_get_TAG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_children_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FORM_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_AT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_OP_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DEFAULTED_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_IDX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLEX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_RLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIVIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIKIND_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_UT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_SECT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_END_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATCF_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ACCESS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIRTUALITY_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LANG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ID_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_INL_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ORD_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DSC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNCT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ISA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACRO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACINFO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CFA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_EH_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FRAME_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CHILDREN_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ADDR_name(unsigned int /*val_in*/, const char ** /*s_out */);\n\n#ifdef __cplusplus\n}\n#endif /* __cplusplus */\n\n#endif /* DWARF_NAMES_H */\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n/* Common extensions */\n#define ATTR_TREE_EXT_ROW_COUNT 18\n\n#define ATTR_TREE_EXT_COLUMN_COUNT 10\n\nstatic unsigned int tag_attr_combination_ext_table[ATTR_TREE_EXT_ROW_COUNT][ATTR_TREE_EXT_COLUMN_COUNT] = {\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x00000013,0x0000001d,0x00002007,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x11 - DW_TAG_compile_unit                  */\n    { 0x00000011,0x00003fe1,0x00002131,0x00002134,0x00002135,0x00002130,0x00002132,0x00002133,0x00002119,0x00000000,},\n/* 0x3c - DW_TAG_partial_unit                  */\n    { 0x0000003c,0x00000075,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0d - DW_TAG_member                        */\n    { 0x0000000d,0x00002108,0x00002109,0x0000210a,0x0000210b,0x00002007,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x04 - DW_TAG_enumeration_type              */\n    { 0x00000004,0x0000003e,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x01 - DW_TAG_array_type                    */\n    { 0x00000001,0x00002107,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0x0000002e,0x00002007,0x00002001,0x0000210c,0x0000210d,0x0000210e,0x00003fe7,0x00003fe1,0x00002116,0x00002117,},\n/* 0x41 - DW_TAG_type_unit                     */\n    { 0x00000041,0x00002133,0x00002130,0x0000210f,0x00002134,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x34 - DW_TAG_variable                      */\n    { 0x00000034,0x00002007,0x00002108,0x00002109,0x0000210a,0x0000210b,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x4106 - DW_TAG_GNU_template_template_parameter*/\n    { 0x00004106,0x00000039,0x0000003a,0x0000003b,0x00000003,0x00002110,0x00002108,0x00000000,0x00000000,0x00000000,},\n/* 0x4107 - DW_TAG_GNU_template_parameter_pack   */\n    { 0x00004107,0x00000039,0x0000003a,0x0000003b,0x00000003,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x4108 - DW_TAG_GNU_formal_parameter_pack     */\n    { 0x00004108,0x00000039,0x0000003a,0x0000003b,0x00000003,0x00000001,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x4109 - DW_TAG_GNU_call_site                 */\n    { 0x00004109,0x00000031,0x00002113,0x00000011,0x00000001,0x00002115,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x410a - DW_TAG_GNU_call_site_parameter       */\n    { 0x0000410a,0x00002111,0x00002112,0x00000031,0x00000002,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x27 - DW_TAG_constant                      */\n    { 0x00000027,0x00002303,0x00002304,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x21 - DW_TAG_subrange_type                 */\n    { 0x00000021,0x00002305,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0x0000001d,0x00002136,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0x0000000b,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef HAVE_USAGE_TAG_ATTR\n#define HAVE_USAGE_TAG_ATTR 1\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#ifdef HAVE_USAGE_TAG_ATTR\n#include \"dwarf.h\"\n#include \"libdwarf.h\"\n\ntypedef struct {\n    unsigned int count; /* Attribute count */\n    Dwarf_Half attr;    /* Attribute value */\n} Usage_Tag_Attr;\n\n/* 0x23 - DW_TAG_access_declaration */\nstatic Usage_Tag_Attr tag_attr_23[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x01 - DW_TAG_array_type */\nstatic Usage_Tag_Attr tag_attr_01[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x09 */  0, DW_AT_ordering},\n    {/* 0x71 */  0, DW_AT_rank},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x47 - DW_TAG_atomic_type */\nstatic Usage_Tag_Attr tag_attr_47[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x24 - DW_TAG_base_type */\nstatic Usage_Tag_Attr tag_attr_24[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x5b */  0, DW_AT_binary_scale},\n    {/* 0x0c */  0, DW_AT_bit_offset},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x6b */  0, DW_AT_data_bit_offset},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x5c */  0, DW_AT_decimal_scale},\n    {/* 0x5e */  0, DW_AT_decimal_sign},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x5f */  0, DW_AT_digit_count},\n    {/* 0x3e */  0, DW_AT_encoding},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x60 */  0, DW_AT_picture_string},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x5d */  0, DW_AT_small},\n    {/*      */  0, 0}\n};\n\n/* 0x48 - DW_TAG_call_site */\nstatic Usage_Tag_Attr tag_attr_48[] = {\n    {/* 0x57 */  0, DW_AT_call_column},\n    {/* 0x58 */  0, DW_AT_call_file},\n    {/* 0x59 */  0, DW_AT_call_line},\n    {/* 0x7f */  0, DW_AT_call_origin},\n    {/* 0x81 */  0, DW_AT_call_pc},\n    {/* 0x7d */  0, DW_AT_call_return_pc},\n    {/* 0x82 */  0, DW_AT_call_tail_call},\n    {/* 0x83 */  0, DW_AT_call_target},\n    {/* 0x84 */  0, DW_AT_call_target_clobbered},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x49 - DW_TAG_call_site_parameter */\nstatic Usage_Tag_Attr tag_attr_49[] = {\n    {/* 0x85 */  0, DW_AT_call_data_location},\n    {/* 0x86 */  0, DW_AT_call_data_value},\n    {/* 0x80 */  0, DW_AT_call_parameter},\n    {/* 0x7e */  0, DW_AT_call_value},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x25 - DW_TAG_catch_block */\nstatic Usage_Tag_Attr tag_attr_25[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x02 - DW_TAG_class_type */\nstatic Usage_Tag_Attr tag_attr_02[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x1d */  0, DW_AT_containing_type},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x44 - DW_TAG_coarray_type */\nstatic Usage_Tag_Attr tag_attr_44[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x1a - DW_TAG_common_block */\nstatic Usage_Tag_Attr tag_attr_1a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x1b - DW_TAG_common_inclusion */\nstatic Usage_Tag_Attr tag_attr_1b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x1a */  0, DW_AT_common_reference},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x11 - DW_TAG_compile_unit */\nstatic Usage_Tag_Attr tag_attr_11[] = {\n    {/* 0x73 */  0, DW_AT_addr_base},\n    {/* 0x35 */  0, DW_AT_base_types},\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x75 */  0, DW_AT_dwo_id},\n    {/* 0x76 */  0, DW_AT_dwo_name},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x42 */  0, DW_AT_identifier_case},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x13 */  0, DW_AT_language},\n    {/* 0x8c */  0, DW_AT_loclists_base},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x43 */  0, DW_AT_macro_info},\n    {/* 0x79 */  0, DW_AT_macros},\n    {/* 0x6a */  0, DW_AT_main_subprogram},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x25 */  0, DW_AT_producer},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x74 */  0, DW_AT_rnglists_base},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x3f - DW_TAG_condition */\nstatic Usage_Tag_Attr tag_attr_3f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x26 - DW_TAG_const_type */\nstatic Usage_Tag_Attr tag_attr_26[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x27 - DW_TAG_constant */\nstatic Usage_Tag_Attr tag_attr_27[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x36 - DW_TAG_dwarf_procedure */\nstatic Usage_Tag_Attr tag_attr_36[] = {\n    {/* 0x02 */  0, DW_AT_location},\n    {/*      */  0, 0}\n};\n\n/* 0x46 - DW_TAG_dynamic_type */\nstatic Usage_Tag_Attr tag_attr_46[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x03 - DW_TAG_entry_point */\nstatic Usage_Tag_Attr tag_attr_03[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x40 */  0, DW_AT_frame_base},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x2a */  0, DW_AT_return_addr},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x48 */  0, DW_AT_static_link},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x04 - DW_TAG_enumeration_type */\nstatic Usage_Tag_Attr tag_attr_04[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x51 */  0, DW_AT_byte_stride},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x6d */  0, DW_AT_enum_class},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x28 - DW_TAG_enumerator */\nstatic Usage_Tag_Attr tag_attr_28[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x29 - DW_TAG_file_type */\nstatic Usage_Tag_Attr tag_attr_29[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x05 - DW_TAG_formal_parameter */\nstatic Usage_Tag_Attr tag_attr_05[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x1e */  0, DW_AT_default_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x21 */  0, DW_AT_is_optional},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x4b */  0, DW_AT_variable_parameter},\n    {/*      */  0, 0}\n};\n\n/* 0x2a - DW_TAG_friend */\nstatic Usage_Tag_Attr tag_attr_2a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x41 */  0, DW_AT_friend},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x45 - DW_TAG_generic_subrange */\nstatic Usage_Tag_Attr tag_attr_45[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x51 */  0, DW_AT_byte_stride},\n    {/* 0x37 */  0, DW_AT_count},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x22 */  0, DW_AT_lower_bound},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x62 */  0, DW_AT_threads_scaled},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x2f */  0, DW_AT_upper_bound},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x08 - DW_TAG_imported_declaration */\nstatic Usage_Tag_Attr tag_attr_08[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x18 */  0, DW_AT_import},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x4b - DW_TAG_immutable_type */\nstatic Usage_Tag_Attr tag_attr_4b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x3a - DW_TAG_imported_module */\nstatic Usage_Tag_Attr tag_attr_3a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x18 */  0, DW_AT_import},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x3d - DW_TAG_imported_unit */\nstatic Usage_Tag_Attr tag_attr_3d[] = {\n    {/* 0x18 */  0, DW_AT_import},\n    {/*      */  0, 0}\n};\n\n/* 0x1c - DW_TAG_inheritance */\nstatic Usage_Tag_Attr tag_attr_1c[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x38 */  0, DW_AT_data_member_location},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x4c */  0, DW_AT_virtuality},\n    {/*      */  0, 0}\n};\n\n/* 0x1d - DW_TAG_inlined_subroutine */\nstatic Usage_Tag_Attr tag_attr_1d[] = {\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x57 */  0, DW_AT_call_column},\n    {/* 0x58 */  0, DW_AT_call_file},\n    {/* 0x59 */  0, DW_AT_call_line},\n    {/* 0x6c */  0, DW_AT_const_expr},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x2a */  0, DW_AT_return_addr},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x56 */  0, DW_AT_trampoline},\n    {/*      */  0, 0}\n};\n\n/* 0x38 - DW_TAG_interface_type */\nstatic Usage_Tag_Attr tag_attr_38[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x0a - DW_TAG_label */\nstatic Usage_Tag_Attr tag_attr_0a[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x0b - DW_TAG_lexical_block */\nstatic Usage_Tag_Attr tag_attr_0b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x0d - DW_TAG_member */\nstatic Usage_Tag_Attr tag_attr_0d[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x0c */  0, DW_AT_bit_offset},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x6b */  0, DW_AT_data_bit_offset},\n    {/* 0x38 */  0, DW_AT_data_member_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x61 */  0, DW_AT_mutable},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x1e - DW_TAG_module */\nstatic Usage_Tag_Attr tag_attr_1e[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x45 */  0, DW_AT_priority},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2b - DW_TAG_namelist */\nstatic Usage_Tag_Attr tag_attr_2b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2c - DW_TAG_namelist_item */\nstatic Usage_Tag_Attr tag_attr_2c[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x44 */  0, DW_AT_namelist_item},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x39 - DW_TAG_namespace */\nstatic Usage_Tag_Attr tag_attr_39[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x54 */  0, DW_AT_extension},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/*      */  0, 0}\n};\n\n/* 0x2d - DW_TAG_packed_type */\nstatic Usage_Tag_Attr tag_attr_2d[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x3c - DW_TAG_partial_unit */\nstatic Usage_Tag_Attr tag_attr_3c[] = {\n    {/* 0x73 */  0, DW_AT_addr_base},\n    {/* 0x35 */  0, DW_AT_base_types},\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x76 */  0, DW_AT_dwo_name},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x42 */  0, DW_AT_identifier_case},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x13 */  0, DW_AT_language},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x43 */  0, DW_AT_macro_info},\n    {/* 0x79 */  0, DW_AT_macros},\n    {/* 0x6a */  0, DW_AT_main_subprogram},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x87 */  0, DW_AT_noreturn},\n    {/* 0x25 */  0, DW_AT_producer},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x74 */  0, DW_AT_rnglists_base},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x0f - DW_TAG_pointer_type */\nstatic Usage_Tag_Attr tag_attr_0f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x1f - DW_TAG_ptr_to_member_type */\nstatic Usage_Tag_Attr tag_attr_1f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x1d */  0, DW_AT_containing_type},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x4a */  0, DW_AT_use_location},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x10 - DW_TAG_reference_type */\nstatic Usage_Tag_Attr tag_attr_10[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x37 - DW_TAG_restrict_type */\nstatic Usage_Tag_Attr tag_attr_37[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x42 - DW_TAG_rvalue_reference_type */\nstatic Usage_Tag_Attr tag_attr_42[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x20 - DW_TAG_set_type */\nstatic Usage_Tag_Attr tag_attr_20[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x40 - DW_TAG_shared_type */\nstatic Usage_Tag_Attr tag_attr_40[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x37 */  0, DW_AT_count},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x4a - DW_TAG_skeleton_unit */\nstatic Usage_Tag_Attr tag_attr_4a[] = {\n    {/* 0x73 */  0, DW_AT_addr_base},\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x76 */  0, DW_AT_dwo_name},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x74 */  0, DW_AT_rnglists_base},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x12 - DW_TAG_string_type */\nstatic Usage_Tag_Attr tag_attr_12[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x19 */  0, DW_AT_string_length},\n    {/* 0x6f */  0, DW_AT_string_length_bit_size},\n    {/* 0x70 */  0, DW_AT_string_length_byte_size},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x13 - DW_TAG_structure_type */\nstatic Usage_Tag_Attr tag_attr_13[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2e - DW_TAG_subprogram */\nstatic Usage_Tag_Attr tag_attr_2e[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x7a */  0, DW_AT_call_all_calls},\n    {/* 0x7c */  0, DW_AT_call_all_tail_calls},\n    {/* 0x7b */  0, DW_AT_call_all_source_calls},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x1d */  0, DW_AT_containing_type},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x8b */  0, DW_AT_defaulted},\n    {/* 0x8a */  0, DW_AT_deleted},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x66 */  0, DW_AT_elemental},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x63 */  0, DW_AT_explicit},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x40 */  0, DW_AT_frame_base},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x20 */  0, DW_AT_inline},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x6a */  0, DW_AT_main_subprogram},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x87 */  0, DW_AT_noreturn},\n    {/* 0x64 */  0, DW_AT_object_pointer},\n    {/* 0x27 */  0, DW_AT_prototyped},\n    {/* 0x67 */  0, DW_AT_pure},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x68 */  0, DW_AT_recursive},\n    {/* 0x77 */  0, DW_AT_reference},\n    {/* 0x2a */  0, DW_AT_return_addr},\n    {/* 0x78 */  0, DW_AT_rvalue_reference},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x48 */  0, DW_AT_static_link},\n    {/* 0x56 */  0, DW_AT_trampoline},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/* 0x4c */  0, DW_AT_virtuality},\n    {/* 0x4d */  0, DW_AT_vtable_elem_location},\n    {/*      */  0, 0}\n};\n\n/* 0x21 - DW_TAG_subrange_type */\nstatic Usage_Tag_Attr tag_attr_21[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x2e */  0, DW_AT_bit_stride},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x51 */  0, DW_AT_byte_stride},\n    {/* 0x37 */  0, DW_AT_count},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x22 */  0, DW_AT_lower_bound},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x62 */  0, DW_AT_threads_scaled},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x2f */  0, DW_AT_upper_bound},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x15 - DW_TAG_subroutine_type */\nstatic Usage_Tag_Attr tag_attr_15[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x64 */  0, DW_AT_object_pointer},\n    {/* 0x27 */  0, DW_AT_prototyped},\n    {/* 0x78 */  0, DW_AT_rvalue_reference},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x43 - DW_TAG_template_alias */\nstatic Usage_Tag_Attr tag_attr_43[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x2f - DW_TAG_template_type_parameter */\nstatic Usage_Tag_Attr tag_attr_2f[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x1e */  0, DW_AT_default_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x30 - DW_TAG_template_value_parameter */\nstatic Usage_Tag_Attr tag_attr_30[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x1e */  0, DW_AT_default_value},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x31 - DW_TAG_thrown_type */\nstatic Usage_Tag_Attr tag_attr_31[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x32 - DW_TAG_try_block */\nstatic Usage_Tag_Attr tag_attr_32[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x16 - DW_TAG_typedef */\nstatic Usage_Tag_Attr tag_attr_16[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x41 - DW_TAG_type_unit */\nstatic Usage_Tag_Attr tag_attr_41[] = {\n    {/* 0x1b */  0, DW_AT_comp_dir},\n    {/* 0x13 */  0, DW_AT_language},\n    {/* 0x10 */  0, DW_AT_stmt_list},\n    {/* 0x72 */  0, DW_AT_str_offsets_base},\n    {/* 0x53 */  0, DW_AT_use_UTF8},\n    {/*      */  0, 0}\n};\n\n/* 0x17 - DW_TAG_union_type */\nstatic Usage_Tag_Attr tag_attr_17[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x4e */  0, DW_AT_allocated},\n    {/* 0x4f */  0, DW_AT_associated},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x36 */  0, DW_AT_calling_convention},\n    {/* 0x50 */  0, DW_AT_data_location},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x89 */  0, DW_AT_export_symbols},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x69 */  0, DW_AT_signature},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x18 - DW_TAG_unspecified_parameters */\nstatic Usage_Tag_Attr tag_attr_18[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x3b - DW_TAG_unspecified_type */\nstatic Usage_Tag_Attr tag_attr_3b[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x03 */  0, DW_AT_name},\n    {/*      */  0, 0}\n};\n\n/* 0x34 - DW_TAG_variable */\nstatic Usage_Tag_Attr tag_attr_34[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x88 */  0, DW_AT_alignment},\n    {/* 0x34 */  0, DW_AT_artificial},\n    {/* 0x0b */  0, DW_AT_byte_size},\n    {/* 0x0d */  0, DW_AT_bit_size},\n    {/* 0x6c */  0, DW_AT_const_expr},\n    {/* 0x1c */  0, DW_AT_const_value},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x5a */  0, DW_AT_description},\n    {/* 0x65 */  0, DW_AT_endianity},\n    {/* 0x3f */  0, DW_AT_external},\n    {/* 0x6e */  0, DW_AT_linkage_name},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x47 */  0, DW_AT_specification},\n    {/* 0x2c */  0, DW_AT_start_scope},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\n/* 0x19 - DW_TAG_variant */\nstatic Usage_Tag_Attr tag_attr_19[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x3d */  0, DW_AT_discr_list},\n    {/* 0x16 */  0, DW_AT_discr_value},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/*      */  0, 0}\n};\n\n/* 0x33 - DW_TAG_variant_part */\nstatic Usage_Tag_Attr tag_attr_33[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x31 */  0, DW_AT_abstract_origin},\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x15 */  0, DW_AT_discr},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x35 - DW_TAG_volatile_type */\nstatic Usage_Tag_Attr tag_attr_35[] = {\n    {/* 0x39 */  0, DW_AT_decl_column},\n    {/* 0x3a */  0, DW_AT_decl_file},\n    {/* 0x3b */  0, DW_AT_decl_line},\n    {/* 0x03 */  0, DW_AT_name},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/*      */  0, 0}\n};\n\n/* 0x22 - DW_TAG_with_stmt */\nstatic Usage_Tag_Attr tag_attr_22[] = {\n    {/* 0x32 */  0, DW_AT_accessibility},\n    {/* 0x33 */  0, DW_AT_address_class},\n    {/* 0x3c */  0, DW_AT_declaration},\n    {/* 0x52 */  0, DW_AT_entry_pc},\n    {/* 0x12 */  0, DW_AT_high_pc},\n    {/* 0x02 */  0, DW_AT_location},\n    {/* 0x11 */  0, DW_AT_low_pc},\n    {/* 0x55 */  0, DW_AT_ranges},\n    {/* 0x46 */  0, DW_AT_segment},\n    {/* 0x01 */  0, DW_AT_sibling},\n    {/* 0x49 */  0, DW_AT_type},\n    {/* 0x17 */  0, DW_AT_visibility},\n    {/*      */  0, 0}\n};\n\nstatic Usage_Tag_Attr *usage_tag_attr[] = {\n    0,\n    tag_attr_01, /* 0x01 - DW_TAG_array_type */\n    tag_attr_02, /* 0x02 - DW_TAG_class_type */\n    tag_attr_03, /* 0x03 - DW_TAG_entry_point */\n    tag_attr_04, /* 0x04 - DW_TAG_enumeration_type */\n    tag_attr_05, /* 0x05 - DW_TAG_formal_parameter */\n    0,\n    0,\n    tag_attr_08, /* 0x08 - DW_TAG_imported_declaration */\n    0,\n    tag_attr_0a, /* 0x0a - DW_TAG_label */\n    tag_attr_0b, /* 0x0b - DW_TAG_lexical_block */\n    0,\n    tag_attr_0d, /* 0x0d - DW_TAG_member */\n    0,\n    tag_attr_0f, /* 0x0f - DW_TAG_pointer_type */\n    tag_attr_10, /* 0x10 - DW_TAG_reference_type */\n    tag_attr_11, /* 0x11 - DW_TAG_compile_unit */\n    tag_attr_12, /* 0x12 - DW_TAG_string_type */\n    tag_attr_13, /* 0x13 - DW_TAG_structure_type */\n    0,\n    tag_attr_15, /* 0x15 - DW_TAG_subroutine_type */\n    tag_attr_16, /* 0x16 - DW_TAG_typedef */\n    tag_attr_17, /* 0x17 - DW_TAG_union_type */\n    tag_attr_18, /* 0x18 - DW_TAG_unspecified_parameters */\n    tag_attr_19, /* 0x19 - DW_TAG_variant */\n    tag_attr_1a, /* 0x1a - DW_TAG_common_block */\n    tag_attr_1b, /* 0x1b - DW_TAG_common_inclusion */\n    tag_attr_1c, /* 0x1c - DW_TAG_inheritance */\n    tag_attr_1d, /* 0x1d - DW_TAG_inlined_subroutine */\n    tag_attr_1e, /* 0x1e - DW_TAG_module */\n    tag_attr_1f, /* 0x1f - DW_TAG_ptr_to_member_type */\n    tag_attr_20, /* 0x20 - DW_TAG_set_type */\n    tag_attr_21, /* 0x21 - DW_TAG_subrange_type */\n    tag_attr_22, /* 0x22 - DW_TAG_with_stmt */\n    tag_attr_23, /* 0x23 - DW_TAG_access_declaration */\n    tag_attr_24, /* 0x24 - DW_TAG_base_type */\n    tag_attr_25, /* 0x25 - DW_TAG_catch_block */\n    tag_attr_26, /* 0x26 - DW_TAG_const_type */\n    tag_attr_27, /* 0x27 - DW_TAG_constant */\n    tag_attr_28, /* 0x28 - DW_TAG_enumerator */\n    tag_attr_29, /* 0x29 - DW_TAG_file_type */\n    tag_attr_2a, /* 0x2a - DW_TAG_friend */\n    tag_attr_2b, /* 0x2b - DW_TAG_namelist */\n    tag_attr_2c, /* 0x2c - DW_TAG_namelist_item */\n    tag_attr_2d, /* 0x2d - DW_TAG_packed_type */\n    tag_attr_2e, /* 0x2e - DW_TAG_subprogram */\n    tag_attr_2f, /* 0x2f - DW_TAG_template_type_parameter */\n    tag_attr_30, /* 0x30 - DW_TAG_template_value_parameter */\n    tag_attr_31, /* 0x31 - DW_TAG_thrown_type */\n    tag_attr_32, /* 0x32 - DW_TAG_try_block */\n    tag_attr_33, /* 0x33 - DW_TAG_variant_part */\n    tag_attr_34, /* 0x34 - DW_TAG_variable */\n    tag_attr_35, /* 0x35 - DW_TAG_volatile_type */\n    tag_attr_36, /* 0x36 - DW_TAG_dwarf_procedure */\n    tag_attr_37, /* 0x37 - DW_TAG_restrict_type */\n    tag_attr_38, /* 0x38 - DW_TAG_interface_type */\n    tag_attr_39, /* 0x39 - DW_TAG_namespace */\n    tag_attr_3a, /* 0x3a - DW_TAG_imported_module */\n    tag_attr_3b, /* 0x3b - DW_TAG_unspecified_type */\n    tag_attr_3c, /* 0x3c - DW_TAG_partial_unit */\n    tag_attr_3d, /* 0x3d - DW_TAG_imported_unit */\n    0,\n    tag_attr_3f, /* 0x3f - DW_TAG_condition */\n    tag_attr_40, /* 0x40 - DW_TAG_shared_type */\n    tag_attr_41, /* 0x41 - DW_TAG_type_unit */\n    tag_attr_42, /* 0x42 - DW_TAG_rvalue_reference_type */\n    tag_attr_43, /* 0x43 - DW_TAG_template_alias */\n    tag_attr_44, /* 0x44 - DW_TAG_coarray_type */\n    tag_attr_45, /* 0x45 - DW_TAG_generic_subrange */\n    tag_attr_46, /* 0x46 - DW_TAG_dynamic_type */\n    tag_attr_47, /* 0x47 - DW_TAG_atomic_type */\n    tag_attr_48, /* 0x48 - DW_TAG_call_site */\n    tag_attr_49, /* 0x49 - DW_TAG_call_site_parameter */\n    tag_attr_4a, /* 0x4a - DW_TAG_skeleton_unit */\n    tag_attr_4b, /* 0x4b - DW_TAG_immutable_type */\n    0\n};\n\ntypedef struct {\n    Dwarf_Small legal; /* Legal attributes */\n    Dwarf_Small found; /* Found attributes */\n} Rate_Tag_Attr;\n\nstatic Rate_Tag_Attr rate_tag_attr[] = {\n    {0, 0},\n    {22, 0, /* 0x01 - DW_TAG_array_type */},\n    {21, 0, /* 0x02 - DW_TAG_class_type */},\n    {14, 0, /* 0x03 - DW_TAG_entry_point */},\n    {24, 0, /* 0x04 - DW_TAG_enumeration_type */},\n    {16, 0, /* 0x05 - DW_TAG_formal_parameter */},\n    {0, 0},\n    {0, 0},\n    { 9, 0, /* 0x08 - DW_TAG_imported_declaration */},\n    {0, 0},\n    {10, 0, /* 0x0a - DW_TAG_label */},\n    {12, 0, /* 0x0b - DW_TAG_lexical_block */},\n    {0, 0},\n    {21, 0, /* 0x0d - DW_TAG_member */},\n    {0, 0},\n    {11, 0, /* 0x0f - DW_TAG_pointer_type */},\n    {11, 0, /* 0x10 - DW_TAG_reference_type */},\n    {22, 0, /* 0x11 - DW_TAG_compile_unit */},\n    {20, 0, /* 0x12 - DW_TAG_string_type */},\n    {22, 0, /* 0x13 - DW_TAG_structure_type */},\n    {0, 0},\n    {20, 0, /* 0x15 - DW_TAG_subroutine_type */},\n    {16, 0, /* 0x16 - DW_TAG_typedef */},\n    {22, 0, /* 0x17 - DW_TAG_union_type */},\n    { 6, 0, /* 0x18 - DW_TAG_unspecified_parameters */},\n    { 9, 0, /* 0x19 - DW_TAG_variant */},\n    {11, 0, /* 0x1a - DW_TAG_common_block */},\n    { 7, 0, /* 0x1b - DW_TAG_common_inclusion */},\n    { 8, 0, /* 0x1c - DW_TAG_inheritance */},\n    {14, 0, /* 0x1d - DW_TAG_inlined_subroutine */},\n    {16, 0, /* 0x1e - DW_TAG_module */},\n    {18, 0, /* 0x1f - DW_TAG_ptr_to_member_type */},\n    {18, 0, /* 0x20 - DW_TAG_set_type */},\n    {22, 0, /* 0x21 - DW_TAG_subrange_type */},\n    {12, 0, /* 0x22 - DW_TAG_with_stmt */},\n    { 7, 0, /* 0x23 - DW_TAG_access_declaration */},\n    {23, 0, /* 0x24 - DW_TAG_base_type */},\n    {10, 0, /* 0x25 - DW_TAG_catch_block */},\n    { 7, 0, /* 0x26 - DW_TAG_const_type */},\n    {15, 0, /* 0x27 - DW_TAG_constant */},\n    { 7, 0, /* 0x28 - DW_TAG_enumerator */},\n    {16, 0, /* 0x29 - DW_TAG_file_type */},\n    { 6, 0, /* 0x2a - DW_TAG_friend */},\n    { 9, 0, /* 0x2b - DW_TAG_namelist */},\n    { 5, 0, /* 0x2c - DW_TAG_namelist_item */},\n    { 7, 0, /* 0x2d - DW_TAG_packed_type */},\n    {47, 0, /* 0x2e - DW_TAG_subprogram */},\n    { 8, 0, /* 0x2f - DW_TAG_template_type_parameter */},\n    {11, 0, /* 0x30 - DW_TAG_template_value_parameter */},\n    {10, 0, /* 0x31 - DW_TAG_thrown_type */},\n    {10, 0, /* 0x32 - DW_TAG_try_block */},\n    { 9, 0, /* 0x33 - DW_TAG_variant_part */},\n    {24, 0, /* 0x34 - DW_TAG_variable */},\n    { 6, 0, /* 0x35 - DW_TAG_volatile_type */},\n    { 1, 0, /* 0x36 - DW_TAG_dwarf_procedure */},\n    { 6, 0, /* 0x37 - DW_TAG_restrict_type */},\n    {10, 0, /* 0x38 - DW_TAG_interface_type */},\n    {11, 0, /* 0x39 - DW_TAG_namespace */},\n    { 6, 0, /* 0x3a - DW_TAG_imported_module */},\n    { 5, 0, /* 0x3b - DW_TAG_unspecified_type */},\n    {22, 0, /* 0x3c - DW_TAG_partial_unit */},\n    { 1, 0, /* 0x3d - DW_TAG_imported_unit */},\n    {0, 0},\n    { 5, 0, /* 0x3f - DW_TAG_condition */},\n    {11, 0, /* 0x40 - DW_TAG_shared_type */},\n    { 5, 0, /* 0x41 - DW_TAG_type_unit */},\n    { 8, 0, /* 0x42 - DW_TAG_rvalue_reference_type */},\n    {16, 0, /* 0x43 - DW_TAG_template_alias */},\n    { 8, 0, /* 0x44 - DW_TAG_coarray_type */},\n    {21, 0, /* 0x45 - DW_TAG_generic_subrange */},\n    {12, 0, /* 0x46 - DW_TAG_dynamic_type */},\n    { 6, 0, /* 0x47 - DW_TAG_atomic_type */},\n    {10, 0, /* 0x48 - DW_TAG_call_site */},\n    { 8, 0, /* 0x49 - DW_TAG_call_site_parameter */},\n    {11, 0, /* 0x4a - DW_TAG_skeleton_unit */},\n    { 4, 0, /* 0x4b - DW_TAG_immutable_type */},\n    {0, 0}\n};\n\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#define ATTR_TREE_ROW_COUNT 76\n\n#define ATTR_TREE_COLUMN_COUNT 5\n\nstatic unsigned int tag_attr_combination_table[ATTR_TREE_ROW_COUNT][ATTR_TREE_COLUMN_COUNT] = {\n/* 0x00 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x01 - DW_TAG_array_type                    */\n    { 0x00802a0a,0x1e065000,0x0401c280,0x00020000,0x00000100,},\n/* 0x02 - DW_TAG_class_type                    */\n    { 0x2080280a,0x1e461000,0x0401c080,0x00000200,0x00000100,},\n/* 0x03 - DW_TAG_entry_point                   */\n    { 0x0002000a,0x0e080400,0x04000341,0x00004000,0x00000000,},\n/* 0x04 - DW_TAG_enumeration_type              */\n    { 0x0080280a,0x1e065000,0x0403c280,0x00006200,0x00000100,},\n/* 0x05 - DW_TAG_formal_parameter              */\n    { 0x5000000e,0x0e120002,0x04000a40,0x00000020,0x00000000,},\n/* 0x06 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x07 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x08 - DW_TAG_imported_declaration          */\n    { 0x0100000a,0x0e041000,0x04000000,0x00000000,0x00000000,},\n/* 0x09 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0a - DW_TAG_label                         */\n    { 0x0002000a,0x0e021000,0x04000040,0x00000000,0x00000000,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0x0006000a,0x0e020000,0x04240040,0x00000000,0x00000000,},\n/* 0x0c - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0d - DW_TAG_member                        */\n    { 0x1080380a,0x9f140000,0x04000200,0x00000802,0x00000100,},\n/* 0x0e - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x0f - DW_TAG_pointer_type                  */\n    { 0x0000280a,0x0e080000,0x00000200,0x00000000,0x00000100,},\n/* 0x10 - DW_TAG_reference_type                */\n    { 0x0000280a,0x0e080000,0x00000200,0x00000000,0x00000100,},\n/* 0x11 - DW_TAG_compile_unit                  */\n    { 0x080f0008,0x00200020,0x002c004c,0x027c0400,0x00001000,},\n/* 0x12 - DW_TAG_string_type                   */\n    { 0x0280280a,0x1e061000,0x0401c040,0x00018000,0x00000000,},\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x0080280a,0x1e461000,0x0401c080,0x00004200,0x00000300,},\n/* 0x14 - <no name known for the tag>          */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x15 - DW_TAG_subroutine_type               */\n    { 0x0080000a,0x1e0e1080,0x0401c200,0x01000010,0x00000100,},\n/* 0x16 - DW_TAG_typedef                       */\n    { 0x0080000a,0x1e061000,0x0401c200,0x00000000,0x00000100,},\n/* 0x17 - DW_TAG_union_type                    */\n    { 0x0080280a,0x1e461000,0x0401c080,0x00004200,0x00000300,},\n/* 0x18 - DW_TAG_unspecified_parameters        */\n    { 0x00000002,0x0e120000,0x00000000,0x00000000,0x00000000,},\n/* 0x19 - DW_TAG_variant                       */\n    { 0x00400002,0x3e060000,0x00000000,0x00000000,0x00000000,},\n/* 0x1a - DW_TAG_common_block                  */\n    { 0x0080000e,0x1e000000,0x04000040,0x00004000,0x00000000,},\n/* 0x1b - DW_TAG_common_inclusion              */\n    { 0x04800002,0x1e000000,0x00000000,0x00000000,0x00000000,},\n/* 0x1c - DW_TAG_inheritance                   */\n    { 0x00000002,0x0f040000,0x00001200,0x00000000,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0x00060002,0x00021400,0x03e40040,0x00001000,0x00000000,},\n/* 0x1e - DW_TAG_module                        */\n    { 0x0086000a,0x1e040000,0x042400e0,0x00000000,0x00000000,},\n/* 0x1f - DW_TAG_ptr_to_member_type            */\n    { 0x2080000a,0x1e0a0000,0x0401c600,0x00000000,0x00000100,},\n/* 0x20 - DW_TAG_set_type                      */\n    { 0x0080280a,0x1e061000,0x0401c200,0x00000000,0x00000100,},\n/* 0x21 - DW_TAG_subrange_type                 */\n    { 0x0080280a,0x1e86c004,0x0403c200,0x00000004,0x00000000,},\n/* 0x22 - DW_TAG_with_stmt                     */\n    { 0x00860006,0x100c0000,0x00240240,0x00000000,0x00000000,},\n/* 0x23 - DW_TAG_access_declaration            */\n    { 0x0000000a,0x0e040000,0x04000000,0x00000000,0x00000000,},\n/* 0x24 - DW_TAG_base_type                     */\n    { 0x0000380a,0x4e000000,0xfc01c000,0x00000821,0x00000100,},\n/* 0x25 - DW_TAG_catch_block                   */\n    { 0x00060002,0x0e020000,0x00240040,0x00000000,0x00000000,},\n/* 0x26 - DW_TAG_const_type                    */\n    { 0x0000000a,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x27 - DW_TAG_constant                      */\n    { 0x1080000a,0x9e041000,0x04000200,0x00004020,0x00000000,},\n/* 0x28 - DW_TAG_enumerator                    */\n    { 0x1000000a,0x0e000000,0x04000000,0x00000000,0x00000000,},\n/* 0x29 - DW_TAG_file_type                     */\n    { 0x0080280a,0x0e021000,0x0401c200,0x00000000,0x00000100,},\n/* 0x2a - DW_TAG_friend                        */\n    { 0x00000002,0x0e020000,0x00000002,0x00000000,0x00000000,},\n/* 0x2b - DW_TAG_namelist                      */\n    { 0x0080000a,0x1e060000,0x00000000,0x00000000,0x00000000,},\n/* 0x2c - DW_TAG_namelist_item                 */\n    { 0x00000002,0x0e000000,0x00000010,0x00000000,0x00000000,},\n/* 0x2d - DW_TAG_packed_type                   */\n    { 0x0000000a,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0x2086000a,0x9e5e1481,0x046433c1,0x1d8045d8,0x00000d80,},\n/* 0x2f - DW_TAG_template_type_parameter       */\n    { 0x4000000a,0x0e000000,0x04000200,0x00000000,0x00000000,},\n/* 0x30 - DW_TAG_template_value_parameter      */\n    { 0x5000000e,0x0e000000,0x04000200,0x00000000,0x00000100,},\n/* 0x31 - DW_TAG_thrown_type                   */\n    { 0x0000000a,0x0e000000,0x0001c200,0x00000000,0x00000100,},\n/* 0x32 - DW_TAG_try_block                     */\n    { 0x00060002,0x0e020000,0x00240040,0x00000000,0x00000000,},\n/* 0x33 - DW_TAG_variant_part                  */\n    { 0x00200002,0x1e060000,0x00000200,0x00000000,0x00000000,},\n/* 0x34 - DW_TAG_variable                      */\n    { 0x1080280e,0x9e161000,0x040002c0,0x00005020,0x00000100,},\n/* 0x35 - DW_TAG_volatile_type                 */\n    { 0x0000000a,0x0e000000,0x00000200,0x00000000,0x00000000,},\n/* 0x36 - DW_TAG_dwarf_procedure               */\n    { 0x00000004,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x37 - DW_TAG_restrict_type                 */\n    { 0x00000002,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x38 - DW_TAG_interface_type                */\n    { 0x0000000a,0x0e041000,0x04000000,0x00000200,0x00000100,},\n/* 0x39 - DW_TAG_namespace                     */\n    { 0x0000000a,0x1e001000,0x04100000,0x00000000,0x00000200,},\n/* 0x3a - DW_TAG_imported_module               */\n    { 0x01000002,0x0e001000,0x00000000,0x00000000,0x00000000,},\n/* 0x3b - DW_TAG_unspecified_type              */\n    { 0x00000008,0x0e000000,0x04000000,0x00000000,0x00000000,},\n/* 0x3c - DW_TAG_partial_unit                  */\n    { 0x080f0008,0x00200020,0x042c004c,0x025c0400,0x00000080,},\n/* 0x3d - DW_TAG_imported_unit                 */\n    { 0x01000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x3e - DW_TAG_mutable_type                  */\n    { 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,},\n/* 0x3f - DW_TAG_condition                     */\n    { 0x0000000a,0x0e000000,0x00000000,0x00000000,0x00000000,},\n/* 0x40 - DW_TAG_shared_type                   */\n    { 0x0000000a,0x0e800000,0x0000c200,0x00000000,0x00000100,},\n/* 0x41 - DW_TAG_type_unit                     */\n    { 0x08090000,0x00000000,0x00080000,0x00040000,0x00000000,},\n/* 0x42 - DW_TAG_rvalue_reference_type         */\n    { 0x00000808,0x0e080000,0x00000200,0x00000000,0x00000100,},\n/* 0x43 - DW_TAG_template_alias                */\n    { 0x0080000a,0x1e061000,0x0401c200,0x00000200,0x00000000,},\n/* 0x44 - DW_TAG_coarray_type                  */\n    { 0x00002802,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x45 - DW_TAG_generic_subrange              */\n    { 0x0080280a,0x1e82c004,0x0403c200,0x00000004,0x00000000,},\n/* 0x46 - DW_TAG_dynamic_type                  */\n    { 0x0000000a,0x0e020000,0x0401c200,0x00000000,0x00000100,},\n/* 0x47 - DW_TAG_atomic_type                   */\n    { 0x00000002,0x0e000000,0x00000200,0x00000000,0x00000100,},\n/* 0x48 - DW_TAG_call_site                     */\n    { 0x00000000,0x00000000,0x03800200,0xa0000000,0x0000001e,},\n/* 0x49 - DW_TAG_call_site_parameter           */\n    { 0x0000000e,0x00000000,0x00000200,0x40000000,0x00000061,},\n/* 0x4a - DW_TAG_skeleton_unit                 */\n    { 0x08070000,0x00000000,0x00280000,0x005c0000,0x00000000,},\n/* 0x4b - DW_TAG_immutable_type                */\n    { 0x00000000,0x0e000000,0x00000200,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#define TAG_TREE_EXT_COLUMN_COUNT 5\n\n#define TAG_TREE_EXT_ROW_COUNT 9\n\n/* Common extensions */\nstatic unsigned int tag_tree_combination_ext_table[TAG_TREE_EXT_ROW_COUNT][TAG_TREE_EXT_COLUMN_COUNT] = {\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x00000013,0x00000034,0x00004106,0x00004107,0x00004108,},\n/* 0x02 - DW_TAG_class_type                    */\n    { 0x00000002,0x00000034,0x00004106,0x00004107,0x00004108,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0x0000000b,0x00004109,0x00000000,0x00000000,0x00000000,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0x0000002e,0x00004109,0x00004106,0x00004107,0x00004108,},\n/* 0x17 - DW_TAG_union_type                    */\n    { 0x00000017,0x00004106,0x00004107,0x00004108,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0x0000001d,0x00004109,0x00000000,0x00000000,0x00000000,},\n/* 0x4109 - DW_TAG_GNU_call_site                 */\n    { 0x00004109,0x0000410a,0x00000000,0x00000000,0x00000000,},\n/* 0x4107 - DW_TAG_GNU_template_parameter_pack   */\n    { 0x00004107,0x0000002f,0x00000030,0x00004106,0x00000000,},\n/* 0x4108 - DW_TAG_GNU_formal_parameter_pack     */\n    { 0x00004108,0x00000005,0x00000000,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "/* Generated code, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef HAVE_USAGE_TAG_ATTR\n#define HAVE_USAGE_TAG_ATTR 1\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#ifdef HAVE_USAGE_TAG_ATTR\n#include \"dwarf.h\"\n#include \"libdwarf.h\"\n\ntypedef struct {\n    unsigned int count; /* Tag count */\n    Dwarf_Half tag;     /* Tag value */\n} Usage_Tag_Tree;\n\n/* 0x23 - DW_TAG_access_declaration */\nstatic Usage_Tag_Tree tag_tree_23[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x01 - DW_TAG_array_type */\nstatic Usage_Tag_Tree tag_tree_01[] = {\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x24 - DW_TAG_base_type */\nstatic Usage_Tag_Tree tag_tree_24[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x48 - DW_TAG_call_site */\nstatic Usage_Tag_Tree tag_tree_48[] = {\n    {/* 0x49 */ 0, DW_TAG_call_site_parameter},\n    {/*      */ 0, 0}\n};\n\n/* 0x49 - DW_TAG_call_site_parameter */\nstatic Usage_Tag_Tree tag_tree_49[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x25 - DW_TAG_catch_block */\nstatic Usage_Tag_Tree tag_tree_25[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x02 - DW_TAG_class_type */\nstatic Usage_Tag_Tree tag_tree_02[] = {\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x1c */ 0, DW_TAG_inheritance},\n    {/* 0x23 */ 0, DW_TAG_access_declaration},\n    {/* 0x2a */ 0, DW_TAG_friend},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/*      */ 0, 0}\n};\n\n/* 0x44 - DW_TAG_coarray_type */\nstatic Usage_Tag_Tree tag_tree_44[] = {\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x1a - DW_TAG_common_block */\nstatic Usage_Tag_Tree tag_tree_1a[] = {\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/*      */ 0, 0}\n};\n\n/* 0x1b - DW_TAG_common_inclusion */\nstatic Usage_Tag_Tree tag_tree_1b[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x4a - DW_TAG_skeleton_unit */\nstatic Usage_Tag_Tree tag_tree_4a[] = {\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x11 - DW_TAG_compile_unit */\nstatic Usage_Tag_Tree tag_tree_11[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x36 */ 0, DW_TAG_dwarf_procedure},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x39 */ 0, DW_TAG_namespace},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/* 0x3b */ 0, DW_TAG_unspecified_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x41 - DW_TAG_type_unit */\nstatic Usage_Tag_Tree tag_tree_41[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x39 */ 0, DW_TAG_namespace},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/*      */ 0, 0}\n};\n\n/* 0x3f - DW_TAG_condition */\nstatic Usage_Tag_Tree tag_tree_3f[] = {\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x47 - DW_TAG_atomic_type */\nstatic Usage_Tag_Tree tag_tree_47[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x26 - DW_TAG_const_type */\nstatic Usage_Tag_Tree tag_tree_26[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x27 - DW_TAG_constant */\nstatic Usage_Tag_Tree tag_tree_27[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x36 - DW_TAG_dwarf_procedure */\nstatic Usage_Tag_Tree tag_tree_36[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x03 - DW_TAG_entry_point */\nstatic Usage_Tag_Tree tag_tree_03[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x1b */ 0, DW_TAG_common_inclusion},\n    {/*      */ 0, 0}\n};\n\n/* 0x04 - DW_TAG_enumeration_type */\nstatic Usage_Tag_Tree tag_tree_04[] = {\n    {/* 0x28 */ 0, DW_TAG_enumerator},\n    {/*      */ 0, 0}\n};\n\n/* 0x28 - DW_TAG_enumerator */\nstatic Usage_Tag_Tree tag_tree_28[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x29 - DW_TAG_file_type */\nstatic Usage_Tag_Tree tag_tree_29[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x05 - DW_TAG_formal_parameter */\nstatic Usage_Tag_Tree tag_tree_05[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x2a - DW_TAG_friend */\nstatic Usage_Tag_Tree tag_tree_2a[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x08 - DW_TAG_imported_declaration */\nstatic Usage_Tag_Tree tag_tree_08[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3a - DW_TAG_imported_module */\nstatic Usage_Tag_Tree tag_tree_3a[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3d - DW_TAG_imported_unit */\nstatic Usage_Tag_Tree tag_tree_3d[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x1c - DW_TAG_inheritance */\nstatic Usage_Tag_Tree tag_tree_1c[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x1d - DW_TAG_inlined_subroutine */\nstatic Usage_Tag_Tree tag_tree_1d[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x0b */ 0, DW_TAG_lexical_block},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x38 - DW_TAG_interface_type */\nstatic Usage_Tag_Tree tag_tree_38[] = {\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/*      */ 0, 0}\n};\n\n/* 0x0a - DW_TAG_label */\nstatic Usage_Tag_Tree tag_tree_0a[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x0b - DW_TAG_lexical_block */\nstatic Usage_Tag_Tree tag_tree_0b[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x48 */ 0, DW_TAG_call_site},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x0a */ 0, DW_TAG_label},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x0b */ 0, DW_TAG_lexical_block},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/*      */ 0, 0}\n};\n\n/* 0x0d - DW_TAG_member */\nstatic Usage_Tag_Tree tag_tree_0d[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x1e - DW_TAG_module */\nstatic Usage_Tag_Tree tag_tree_1e[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x2b - DW_TAG_namelist */\nstatic Usage_Tag_Tree tag_tree_2b[] = {\n    {/* 0x2c */ 0, DW_TAG_namelist_item},\n    {/*      */ 0, 0}\n};\n\n/* 0x2c - DW_TAG_namelist_item */\nstatic Usage_Tag_Tree tag_tree_2c[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x39 - DW_TAG_namespace */\nstatic Usage_Tag_Tree tag_tree_39[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x39 */ 0, DW_TAG_namespace},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/*      */ 0, 0}\n};\n\n/* 0x2d - DW_TAG_packed_type */\nstatic Usage_Tag_Tree tag_tree_2d[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3c - DW_TAG_partial_unit */\nstatic Usage_Tag_Tree tag_tree_3c[] = {\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x46 */ 0, DW_TAG_dynamic_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1e */ 0, DW_TAG_module},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x0f - DW_TAG_pointer_type */\nstatic Usage_Tag_Tree tag_tree_0f[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x1f - DW_TAG_ptr_to_member_type */\nstatic Usage_Tag_Tree tag_tree_1f[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x10 - DW_TAG_reference_type */\nstatic Usage_Tag_Tree tag_tree_10[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x42 - DW_TAG_rvalue_reference_type */\nstatic Usage_Tag_Tree tag_tree_42[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x37 - DW_TAG_restrict_type */\nstatic Usage_Tag_Tree tag_tree_37[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x20 - DW_TAG_set_type */\nstatic Usage_Tag_Tree tag_tree_20[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x40 - DW_TAG_shared_type */\nstatic Usage_Tag_Tree tag_tree_40[] = {\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x37 */ 0, DW_TAG_restrict_type},\n    {/* 0x42 */ 0, DW_TAG_rvalue_reference_type},\n    {/* 0x40 */ 0, DW_TAG_shared_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x12 - DW_TAG_string_type */\nstatic Usage_Tag_Tree tag_tree_12[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x13 - DW_TAG_structure_type */\nstatic Usage_Tag_Tree tag_tree_13[] = {\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x1c */ 0, DW_TAG_inheritance},\n    {/* 0x23 */ 0, DW_TAG_access_declaration},\n    {/* 0x2a */ 0, DW_TAG_friend},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x33 */ 0, DW_TAG_variant_part},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/* 0x43 */ 0, DW_TAG_template_alias},\n    {/*      */ 0, 0}\n};\n\n/* 0x2e - DW_TAG_subprogram */\nstatic Usage_Tag_Tree tag_tree_2e[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/* 0x31 */ 0, DW_TAG_thrown_type},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x1b */ 0, DW_TAG_common_inclusion},\n    {/* 0x1a */ 0, DW_TAG_common_block},\n    {/* 0x01 */ 0, DW_TAG_array_type},\n    {/* 0x44 */ 0, DW_TAG_coarray_type},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x0f */ 0, DW_TAG_pointer_type},\n    {/* 0x10 */ 0, DW_TAG_reference_type},\n    {/* 0x12 */ 0, DW_TAG_string_type},\n    {/* 0x0b */ 0, DW_TAG_lexical_block},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x15 */ 0, DW_TAG_subroutine_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/* 0x1d */ 0, DW_TAG_inlined_subroutine},\n    {/* 0x1f */ 0, DW_TAG_ptr_to_member_type},\n    {/* 0x20 */ 0, DW_TAG_set_type},\n    {/* 0x21 */ 0, DW_TAG_subrange_type},\n    {/* 0x45 */ 0, DW_TAG_generic_subrange},\n    {/* 0x24 */ 0, DW_TAG_base_type},\n    {/* 0x26 */ 0, DW_TAG_const_type},\n    {/* 0x47 */ 0, DW_TAG_atomic_type},\n    {/* 0x27 */ 0, DW_TAG_constant},\n    {/* 0x29 */ 0, DW_TAG_file_type},\n    {/* 0x2b */ 0, DW_TAG_namelist},\n    {/* 0x2d */ 0, DW_TAG_packed_type},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x34 */ 0, DW_TAG_variable},\n    {/* 0x35 */ 0, DW_TAG_volatile_type},\n    {/* 0x0a */ 0, DW_TAG_label},\n    {/* 0x3a */ 0, DW_TAG_imported_module},\n    {/* 0x08 */ 0, DW_TAG_imported_declaration},\n    {/*      */ 0, 0}\n};\n\n/* 0x21 - DW_TAG_subrange_type */\nstatic Usage_Tag_Tree tag_tree_21[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x45 - DW_TAG_generic_subrange */\nstatic Usage_Tag_Tree tag_tree_45[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x15 - DW_TAG_subroutine_type */\nstatic Usage_Tag_Tree tag_tree_15[] = {\n    {/* 0x05 */ 0, DW_TAG_formal_parameter},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x18 */ 0, DW_TAG_unspecified_parameters},\n    {/*      */ 0, 0}\n};\n\n/* 0x2f - DW_TAG_template_type_parameter */\nstatic Usage_Tag_Tree tag_tree_2f[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x30 - DW_TAG_template_value_parameter */\nstatic Usage_Tag_Tree tag_tree_30[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x31 - DW_TAG_thrown_type */\nstatic Usage_Tag_Tree tag_tree_31[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x32 - DW_TAG_try_block */\nstatic Usage_Tag_Tree tag_tree_32[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x16 - DW_TAG_typedef */\nstatic Usage_Tag_Tree tag_tree_16[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x17 - DW_TAG_union_type */\nstatic Usage_Tag_Tree tag_tree_17[] = {\n    {/* 0x2a */ 0, DW_TAG_friend},\n    {/* 0x0d */ 0, DW_TAG_member},\n    {/* 0x02 */ 0, DW_TAG_class_type},\n    {/* 0x04 */ 0, DW_TAG_enumeration_type},\n    {/* 0x13 */ 0, DW_TAG_structure_type},\n    {/* 0x16 */ 0, DW_TAG_typedef},\n    {/* 0x2e */ 0, DW_TAG_subprogram},\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/* 0x17 */ 0, DW_TAG_union_type},\n    {/*      */ 0, 0}\n};\n\n/* 0x43 - DW_TAG_template_alias */\nstatic Usage_Tag_Tree tag_tree_43[] = {\n    {/* 0x2f */ 0, DW_TAG_template_type_parameter},\n    {/* 0x30 */ 0, DW_TAG_template_value_parameter},\n    {/*      */ 0, 0}\n};\n\n/* 0x18 - DW_TAG_unspecified_parameters */\nstatic Usage_Tag_Tree tag_tree_18[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x3b - DW_TAG_unspecified_type */\nstatic Usage_Tag_Tree tag_tree_3b[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x34 - DW_TAG_variable */\nstatic Usage_Tag_Tree tag_tree_34[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x19 - DW_TAG_variant */\nstatic Usage_Tag_Tree tag_tree_19[] = {\n    {/* 0x33 */ 0, DW_TAG_variant_part},\n    {/*      */ 0, 0}\n};\n\n/* 0x33 - DW_TAG_variant_part */\nstatic Usage_Tag_Tree tag_tree_33[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x35 - DW_TAG_volatile_type */\nstatic Usage_Tag_Tree tag_tree_35[] = {\n    {/*      */ 0, 0}\n};\n\n/* 0x22 - DW_TAG_with_stmt */\nstatic Usage_Tag_Tree tag_tree_22[] = {\n    {/*      */ 0, 0}\n};\n\nstatic Usage_Tag_Tree *usage_tag_tree[] = {\n    0,\n   tag_tree_01, /* 0x01 - DW_TAG_array_type */\n   tag_tree_02, /* 0x02 - DW_TAG_class_type */\n   tag_tree_03, /* 0x03 - DW_TAG_entry_point */\n   tag_tree_04, /* 0x04 - DW_TAG_enumeration_type */\n   tag_tree_05, /* 0x05 - DW_TAG_formal_parameter */\n    0,\n    0,\n   tag_tree_08, /* 0x08 - DW_TAG_imported_declaration */\n    0,\n   tag_tree_0a, /* 0x0a - DW_TAG_label */\n   tag_tree_0b, /* 0x0b - DW_TAG_lexical_block */\n    0,\n   tag_tree_0d, /* 0x0d - DW_TAG_member */\n    0,\n   tag_tree_0f, /* 0x0f - DW_TAG_pointer_type */\n   tag_tree_10, /* 0x10 - DW_TAG_reference_type */\n   tag_tree_11, /* 0x11 - DW_TAG_compile_unit */\n   tag_tree_12, /* 0x12 - DW_TAG_string_type */\n   tag_tree_13, /* 0x13 - DW_TAG_structure_type */\n    0,\n   tag_tree_15, /* 0x15 - DW_TAG_subroutine_type */\n   tag_tree_16, /* 0x16 - DW_TAG_typedef */\n   tag_tree_17, /* 0x17 - DW_TAG_union_type */\n   tag_tree_18, /* 0x18 - DW_TAG_unspecified_parameters */\n   tag_tree_19, /* 0x19 - DW_TAG_variant */\n   tag_tree_1a, /* 0x1a - DW_TAG_common_block */\n   tag_tree_1b, /* 0x1b - DW_TAG_common_inclusion */\n   tag_tree_1c, /* 0x1c - DW_TAG_inheritance */\n   tag_tree_1d, /* 0x1d - DW_TAG_inlined_subroutine */\n   tag_tree_1e, /* 0x1e - DW_TAG_module */\n   tag_tree_1f, /* 0x1f - DW_TAG_ptr_to_member_type */\n   tag_tree_20, /* 0x20 - DW_TAG_set_type */\n   tag_tree_21, /* 0x21 - DW_TAG_subrange_type */\n   tag_tree_22, /* 0x22 - DW_TAG_with_stmt */\n   tag_tree_23, /* 0x23 - DW_TAG_access_declaration */\n   tag_tree_24, /* 0x24 - DW_TAG_base_type */\n   tag_tree_25, /* 0x25 - DW_TAG_catch_block */\n   tag_tree_26, /* 0x26 - DW_TAG_const_type */\n   tag_tree_27, /* 0x27 - DW_TAG_constant */\n   tag_tree_28, /* 0x28 - DW_TAG_enumerator */\n   tag_tree_29, /* 0x29 - DW_TAG_file_type */\n   tag_tree_2a, /* 0x2a - DW_TAG_friend */\n   tag_tree_2b, /* 0x2b - DW_TAG_namelist */\n   tag_tree_2c, /* 0x2c - DW_TAG_namelist_item */\n   tag_tree_2d, /* 0x2d - DW_TAG_packed_type */\n   tag_tree_2e, /* 0x2e - DW_TAG_subprogram */\n   tag_tree_2f, /* 0x2f - DW_TAG_template_type_parameter */\n   tag_tree_30, /* 0x30 - DW_TAG_template_value_parameter */\n   tag_tree_31, /* 0x31 - DW_TAG_thrown_type */\n   tag_tree_32, /* 0x32 - DW_TAG_try_block */\n   tag_tree_33, /* 0x33 - DW_TAG_variant_part */\n   tag_tree_34, /* 0x34 - DW_TAG_variable */\n   tag_tree_35, /* 0x35 - DW_TAG_volatile_type */\n   tag_tree_36, /* 0x36 - DW_TAG_dwarf_procedure */\n   tag_tree_37, /* 0x37 - DW_TAG_restrict_type */\n   tag_tree_38, /* 0x38 - DW_TAG_interface_type */\n   tag_tree_39, /* 0x39 - DW_TAG_namespace */\n   tag_tree_3a, /* 0x3a - DW_TAG_imported_module */\n   tag_tree_3b, /* 0x3b - DW_TAG_unspecified_type */\n   tag_tree_3c, /* 0x3c - DW_TAG_partial_unit */\n   tag_tree_3d, /* 0x3d - DW_TAG_imported_unit */\n    0,\n   tag_tree_3f, /* 0x3f - DW_TAG_condition */\n   tag_tree_40, /* 0x40 - DW_TAG_shared_type */\n   tag_tree_41, /* 0x41 - DW_TAG_type_unit */\n   tag_tree_42, /* 0x42 - DW_TAG_rvalue_reference_type */\n   tag_tree_43, /* 0x43 - DW_TAG_template_alias */\n   tag_tree_44, /* 0x44 - DW_TAG_coarray_type */\n   tag_tree_45, /* 0x45 - DW_TAG_generic_subrange */\n    0,\n   tag_tree_47, /* 0x47 - DW_TAG_atomic_type */\n   tag_tree_48, /* 0x48 - DW_TAG_call_site */\n   tag_tree_49, /* 0x49 - DW_TAG_call_site_parameter */\n   tag_tree_4a, /* 0x4a - DW_TAG_skeleton_unit */\n    0,\n    0\n};\n\ntypedef struct {\n    Dwarf_Small legal; /* Legal tags */\n    Dwarf_Small found; /* Found tags */\n} Rate_Tag_Tree;\n\nstatic Rate_Tag_Tree rate_tag_tree[] = {\n    {0, 0},\n    { 4, 0 /* 0x01 - DW_TAG_array_type */},\n    {21, 0 /* 0x02 - DW_TAG_class_type */},\n    { 3, 0 /* 0x03 - DW_TAG_entry_point */},\n    { 1, 0 /* 0x04 - DW_TAG_enumeration_type */},\n    { 0, 0 /* 0x05 - DW_TAG_formal_parameter */},\n    {0, 0},\n    {0, 0},\n    { 0, 0 /* 0x08 - DW_TAG_imported_declaration */},\n    {0, 0},\n    { 0, 0 /* 0x0a - DW_TAG_label */},\n    {33, 0 /* 0x0b - DW_TAG_lexical_block */},\n    {0, 0},\n    { 0, 0 /* 0x0d - DW_TAG_member */},\n    {0, 0},\n    { 8, 0 /* 0x0f - DW_TAG_pointer_type */},\n    { 8, 0 /* 0x10 - DW_TAG_reference_type */},\n    {37, 0 /* 0x11 - DW_TAG_compile_unit */},\n    { 0, 0 /* 0x12 - DW_TAG_string_type */},\n    {22, 0 /* 0x13 - DW_TAG_structure_type */},\n    {0, 0},\n    { 3, 0 /* 0x15 - DW_TAG_subroutine_type */},\n    { 0, 0 /* 0x16 - DW_TAG_typedef */},\n    {10, 0 /* 0x17 - DW_TAG_union_type */},\n    { 0, 0 /* 0x18 - DW_TAG_unspecified_parameters */},\n    { 1, 0 /* 0x19 - DW_TAG_variant */},\n    { 1, 0 /* 0x1a - DW_TAG_common_block */},\n    { 0, 0 /* 0x1b - DW_TAG_common_inclusion */},\n    { 0, 0 /* 0x1c - DW_TAG_inheritance */},\n    {30, 0 /* 0x1d - DW_TAG_inlined_subroutine */},\n    { 0, 0 /* 0x1e - DW_TAG_module */},\n    { 0, 0 /* 0x1f - DW_TAG_ptr_to_member_type */},\n    { 0, 0 /* 0x20 - DW_TAG_set_type */},\n    { 0, 0 /* 0x21 - DW_TAG_subrange_type */},\n    { 0, 0 /* 0x22 - DW_TAG_with_stmt */},\n    { 0, 0 /* 0x23 - DW_TAG_access_declaration */},\n    { 0, 0 /* 0x24 - DW_TAG_base_type */},\n    {25, 0 /* 0x25 - DW_TAG_catch_block */},\n    { 0, 0 /* 0x26 - DW_TAG_const_type */},\n    { 0, 0 /* 0x27 - DW_TAG_constant */},\n    { 0, 0 /* 0x28 - DW_TAG_enumerator */},\n    { 0, 0 /* 0x29 - DW_TAG_file_type */},\n    { 0, 0 /* 0x2a - DW_TAG_friend */},\n    { 1, 0 /* 0x2b - DW_TAG_namelist */},\n    { 0, 0 /* 0x2c - DW_TAG_namelist_item */},\n    { 0, 0 /* 0x2d - DW_TAG_packed_type */},\n    {38, 0 /* 0x2e - DW_TAG_subprogram */},\n    { 0, 0 /* 0x2f - DW_TAG_template_type_parameter */},\n    { 0, 0 /* 0x30 - DW_TAG_template_value_parameter */},\n    { 0, 0 /* 0x31 - DW_TAG_thrown_type */},\n    { 0, 0 /* 0x32 - DW_TAG_try_block */},\n    { 0, 0 /* 0x33 - DW_TAG_variant_part */},\n    { 0, 0 /* 0x34 - DW_TAG_variable */},\n    { 0, 0 /* 0x35 - DW_TAG_volatile_type */},\n    { 0, 0 /* 0x36 - DW_TAG_dwarf_procedure */},\n    { 8, 0 /* 0x37 - DW_TAG_restrict_type */},\n    { 2, 0 /* 0x38 - DW_TAG_interface_type */},\n    {31, 0 /* 0x39 - DW_TAG_namespace */},\n    { 0, 0 /* 0x3a - DW_TAG_imported_module */},\n    { 0, 0 /* 0x3b - DW_TAG_unspecified_type */},\n    {30, 0 /* 0x3c - DW_TAG_partial_unit */},\n    { 0, 0 /* 0x3d - DW_TAG_imported_unit */},\n    {0, 0},\n    { 2, 0 /* 0x3f - DW_TAG_condition */},\n    { 9, 0 /* 0x40 - DW_TAG_shared_type */},\n    {33, 0 /* 0x41 - DW_TAG_type_unit */},\n    { 8, 0 /* 0x42 - DW_TAG_rvalue_reference_type */},\n    { 2, 0 /* 0x43 - DW_TAG_template_alias */},\n    { 5, 0 /* 0x44 - DW_TAG_coarray_type */},\n    { 0, 0 /* 0x45 - DW_TAG_generic_subrange */},\n    {0, 0},\n    { 0, 0 /* 0x47 - DW_TAG_atomic_type */},\n    { 1, 0 /* 0x48 - DW_TAG_call_site */},\n    { 0, 0 /* 0x49 - DW_TAG_call_site_parameter */},\n    { 4, 0 /* 0x4a - DW_TAG_skeleton_unit */},\n    {0, 0},\n    {0, 0}\n};\n\n#endif /* HAVE_USAGE_TAG_ATTR */\n\n#define TAG_TREE_COLUMN_COUNT 3\n\n#define TAG_TREE_ROW_COUNT 75\n\nstatic unsigned int tag_tree_combination_table[TAG_TREE_ROW_COUNT][TAG_TREE_COLUMN_COUNT] = {\n/* 0x00 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x01 - DW_TAG_array_type                    */\n    { 0x00000010,0x00000002,0x00000060,},\n/* 0x02 - DW_TAG_class_type                    */\n    { 0x90c8a114,0x0001c458,0x000000d8,},\n/* 0x03 - DW_TAG_entry_point                   */\n    { 0x09000020,0x00000000,0x00000000,},\n/* 0x04 - DW_TAG_enumeration_type              */\n    { 0x00000000,0x00000100,0x00000000,},\n/* 0x05 - DW_TAG_formal_parameter              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x06 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x07 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x08 - DW_TAG_imported_declaration          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x09 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0a - DW_TAG_label                         */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0b - DW_TAG_lexical_block                 */\n    { 0xe0ed8d36,0x043068d3,0x000001f0,},\n/* 0x0c - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0d - DW_TAG_member                        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0e - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x0f - DW_TAG_pointer_type                  */\n    { 0x00010000,0x00a02040,0x00000085,},\n/* 0x10 - DW_TAG_reference_type                */\n    { 0x00008000,0x00a02040,0x00000085,},\n/* 0x11 - DW_TAG_compile_unit                  */\n    { 0xe4ed8116,0x0ef06ad3,0x000000fc,},\n/* 0x12 - DW_TAG_string_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x13 - DW_TAG_structure_type                */\n    { 0x90c8a114,0x0029c458,0x00000098,},\n/* 0x14 - <no name known for the TAG>          */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x15 - DW_TAG_subroutine_type               */\n    { 0x01400020,0x00000000,0x00000000,},\n/* 0x16 - DW_TAG_typedef                       */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x17 - DW_TAG_union_type                    */\n    { 0x00c82014,0x0001c400,0x00000000,},\n/* 0x18 - DW_TAG_unspecified_parameters        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x19 - DW_TAG_variant                       */\n    { 0x00000000,0x00080000,0x00000000,},\n/* 0x1a - DW_TAG_common_block                  */\n    { 0x00000000,0x00100000,0x00000000,},\n/* 0x1b - DW_TAG_common_inclusion              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x1c - DW_TAG_inheritance                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x1d - DW_TAG_inlined_subroutine            */\n    { 0xa1ed8836,0x00306ad3,0x000000f0,},\n/* 0x1e - DW_TAG_module                        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x1f - DW_TAG_ptr_to_member_type            */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x20 - DW_TAG_set_type                      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x21 - DW_TAG_subrange_type                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x22 - DW_TAG_with_stmt                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x23 - DW_TAG_access_declaration            */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x24 - DW_TAG_base_type                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x25 - DW_TAG_catch_block                   */\n    { 0x81ed8036,0x003062d3,0x00000080,},\n/* 0x26 - DW_TAG_const_type                    */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x27 - DW_TAG_constant                      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x28 - DW_TAG_enumerator                    */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x29 - DW_TAG_file_type                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2a - DW_TAG_friend                        */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2b - DW_TAG_namelist                      */\n    { 0x00000000,0x00001000,0x00000000,},\n/* 0x2c - DW_TAG_namelist_item                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2d - DW_TAG_packed_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x2e - DW_TAG_subprogram                    */\n    { 0xaded8d36,0x0433ead3,0x000000b0,},\n/* 0x2f - DW_TAG_template_type_parameter       */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x30 - DW_TAG_template_value_parameter      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x31 - DW_TAG_thrown_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x32 - DW_TAG_try_block                     */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x33 - DW_TAG_variant_part                  */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x34 - DW_TAG_variable                      */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x35 - DW_TAG_volatile_type                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x36 - DW_TAG_dwarf_procedure               */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x37 - DW_TAG_restrict_type                 */\n    { 0x00018000,0x00202040,0x00000085,},\n/* 0x38 - DW_TAG_interface_type                */\n    { 0x00002000,0x00004000,0x00000000,},\n/* 0x39 - DW_TAG_namespace                     */\n    { 0xe4ed8116,0x063068d3,0x000000f0,},\n/* 0x3a - DW_TAG_imported_module               */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3b - DW_TAG_unspecified_type              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3c - DW_TAG_partial_unit                  */\n    { 0xe4ed8116,0x00306ad3,0x000000f0,},\n/* 0x3d - DW_TAG_imported_unit                 */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3e - DW_TAG_mutable_type                  */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x3f - DW_TAG_condition                     */\n    { 0x00000000,0x00000082,0x00000000,},\n/* 0x40 - DW_TAG_shared_type                   */\n    { 0x00018000,0x00a02040,0x00000085,},\n/* 0x41 - DW_TAG_type_unit                     */\n    { 0xe4ed8116,0x06306ad3,0x000000f8,},\n/* 0x42 - DW_TAG_rvalue_reference_type         */\n    { 0x00018000,0x00a02040,0x00000081,},\n/* 0x43 - DW_TAG_template_alias                */\n    { 0x00000000,0x00018000,0x00000000,},\n/* 0x44 - DW_TAG_coarray_type                  */\n    { 0x00000002,0x00000012,0x00000060,},\n/* 0x45 - DW_TAG_generic_subrange              */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x46 - DW_TAG_dynamic_type                  */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x47 - DW_TAG_atomic_type                   */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x48 - DW_TAG_call_site                     */\n    { 0x00000000,0x00000000,0x00000200,},\n/* 0x49 - DW_TAG_call_site_parameter           */\n    { 0x00000000,0x00000000,0x00000000,},\n/* 0x4a - DW_TAG_skeleton_unit                 */\n    { 0x00880014,0x00000000,0x00000000,},\n};\n\n/* END FILE */\n", "2020-10-17: David Anderson\n    * libdwarf_version.h: updated version string\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h: regenerated with new version string.\n2020-10-15: David Anderson\n    * dwarf_line.c:Set up the default registers correctly\n      for DWARF5 as well as earlier versions.\n    * dwarf_line.h: update a comment.\n    * dwarf_line_table_reader_common.c: Using ptrdiff_t\n      is completely unnecessary. So not using now.\n      Removing with #if 0 some lines of checking code\n      which are now up a few lines in a corrected\n      version of earlier checking.\n    * libdwarf2.1.pdf: Regenerated 3.15. Forgot\n      to do it earlier.\n2020-10-13: David Anderson\n    * dwarf_debuglink.c: Now _dwarf_pathjoinl works\n      for Windows too (see HAVE_WINDOWS_PATH) and\n      transforms all backslash to /.  This\n      has always been the behavior, it just vanished\n      for a couple days.\n    * dwarf_line_table_reader_common.h: Removed a trailing blank.\n    * dwarf_macro5.c: Now correctly handles the null byte\n      at the end of a list of macro operands. Added\n      macro CHECKNULLCONTEXT to avoid lots of 8 line\n      sequences just checking basic call sanity.\n      Gave the structure sentinal a name: MC_SENTINAL\n      (only exists in this one source file).\n    * dwarf_macro5.h: Added mc_section_size so offset\n      insanity is caught.  Added comments about\n      Dwarf_Macro_Operator_s for clarity.\n    * libdwarf.h;.in: Added comment on the DWARF 5\n      macro operands table.\n    * libdwarf2.1.mm: Rev 3.15 Added a comment in examplep5\n      on dwarf_get_macro_op() about the DWARF5\n      macro operator value 0, and\n      amplified the function wording on this point..\n    * libdwarf2.1.pdf: Rev 3.15. Regenerated.\n      .\n2020-10-12: David Anderson\n    * dwarf_alloc.c: Creation of Dwarf_Error_ with\n      null dbg is now gracefully handled.\n    * dwarf_debuglink.c: Now handles\n      HAVE_WINDOWS_PATH. Needed additional #include\n      and create_fullest_file_path() now uses dwarfstsring.\n    * dwarf_line.h: Trailing whitespace.\n    * dwarf_line_table_reader_common.h: Shorten a couple lines\n      to fit libdwarf standards.\n    * dwarf_object_detector.c: Free debuglinkfull path\n      where appropriate. Ensure fd's (other than -1)\n      get closed where appropriate.\n    * dwarf_object_detector.h: Removed #if 0 lines.\n    * dwarf_peread.c: Assures fd which is not -1\n      gets closed.\n    * dwarf_print_lines.c:  Now uses \n      dwarfstring_constructor_static() so in nearly all\n      cases no malloc/free needed. Adds DWARF5\n      specific support for indexing into includes.\n    * libdwarf.h.in: Corrected comments about what to\n      free after calling dwarf_gnu_debuglink().\n    * generated_libdwarf.h.in: regenerated.\n    * libdwarf2.1.mm: Version 3.14. Correctet\n      description of dwarf_gnu_debuglink().  \n    * libdwarf2.1.pdf: Version 3.14. Regenerated.\n    * testdebuglinksh: Remove trailing whitespace.\n2020-10-11: David Anderson\n    * dwarf_object_detector.h: Deleted #if 0 prototype.\n    * testdebuglink.sh: Removed a trailing blank.\n2020-10-11: David Anderson\n\t* libdwarf_version.h: updated version string\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h: regenerated with new version string.\n2020-10-11: David Anderson\n    * CMakeLists.txt: Added crc32.c, a new source file.\n    * Makefile.am: Same addition.\n    * Makefile.in: Regenerated.\n    * crc32.c: The crc needed to interoperate with GNU\n      debuglink.\n    * dwarf_alloc.c: Clarifying comment and removing\n      old unnecessary () around return values.\n    * dwarf_crc32.c: Removing crc from here, it was\n      the wrong crc32! Modified crc calls to match\n      the needs of the correct crc calculation. Ensured\n      a local malloc always gets freed.\n    * dwarf_debuglink.c: Added short comments.\n    * dwarf_errmsg_list.h: New error DW_DLE_DEBUGLINK_PATH_SHORT.\n    * dwarf_generic_init.c.: Updated to work properly\n      with debuglink and dSYM.\n    * dwarf_incl.h: Reformatted copyright for shorter\n      lines per libdwarf formatting, no change in content.\n    * dwarf_init_finish.c: Added comment. Removed\n      a pointless test for error (error not \n      not set, guaranteed) in dwarf_object_finish().\n    * dwarf_object_detector.c: Implemented support\n      for debuglink, significant changes involved.\n    * dwarf_object_detector.h: Comment change\n    * dwarf_opaque.h: Updated a comment and\n      declared the internal function _dwarf_crc32();\n    * libdwarf.h.in:  Functions added for debuglink\n      and a mistake corrected (now comment the arg names\n      to avoid macro disaster) in several functions.\n      New error DW_DLE_DEBUGLINK_PATH_SHORT.\n      New function dwarf_object_detector_path_b()\n      lets one supply global paths for debuglink and\n      get back a (new!) value, one of \n      DW_PATHSOURCE_basic, DW_PATHSOURCE_dsym,or\n      DW_PATHSOURCE_debuglink so callers know what\n      the path source by type.\n    * generated_libdwarf.h.in: Regenerated.\n    * libdwarf2.1.mm: Clarified lifetimes of several\n      arguments of debuglink-related functions. Revision 3.13.\n    * libdwarf2.1.pdf: Regenerated, version 3.13.\n2020-10-05: David Anderson\n    * libdwarf.h.in: Removed DW_DLC_NO_FOLLOW_DEBUGLINK\n      as it is never needed and was never used or\n      documented (it's only been there for a handful\n      of days).  Updated commentary.\n    * generated_libdwar.h.in: Regenerated.\n    * libdwarf2.1.mm: Rev 3.12. Beginning documentation\n      of GNU debuglink support.\n    * libdwarf2.1.pdf: Regenerated as 3.12.\n2020-10-02: David Anderson\n    * dwarf_crc32.c,dwarf_fission_to_cu.c,dwarf_macro5.c,\n\t  dwarf_opaque.h,libdwarf.h.in,test_linkedtopath.c,\n\t  test_linkedtopath.c: Removed whitespace and\n      tabs and make indents dwarf-standard.\n    * COPYING: Corrected the references to the BSD copyright\n      to use \"two-clause BSD license\".\n2020-10-02: David Anderson\n    * dwarf_generic_init.c: Implements the new\n      dwarf_init_path_dl() which allows passing debuglink\n      global paths (if one desires to). Global paths not\n      used here yet.\n    * libdwarf.h.in: Added prototype dwarf_init_path_dl()\n      but it is not yet used. Relevant commentary updated.\n    * generated_libdwarf.h.in: regenerated\n2020-10-01: David Anderson\n    * libdwarf2.1.mm: Revision 3.11. Added new debuglink\n      function dwarf_crc32().\n    * libdwarf2.1.pdf: Revision 3.11. Regenerated.\n2020-10-01: David Anderson\n    * dwarf_crc32.c: Refined the #includes so they work\n      with cmake too.\n    * dwarf_debuglink.c,dwarf_object_detector.c,\n      dwarf_peread.c: Refined the #includes to work\n      in more general circumstances.\n2020-10-01: David Anderson\n    * libdwarf.h.in: Added DW_DLC_NO_FOLLOW_DEBUGLINK\n      but it is not yet used.\n    * generated_libdwarf.h.in: regenerated\n2020-09-30: David Anderson\n    * CMakeLists.txt,Makefile.am: Added dwarf_crc32.c\n    * Makefile.am: Regenerated.\n    * dwarf_crc32.c: So libdwarf can interoperate with GNU\n      debuglink to locate separate debug object files.\n    * dwarf_debuglink.c: Added {} one place. No real change.\n    * libdwarf.h.in: New interfaces for crc32.\n    * generated_libdwarf.h.in: Regenerated\n2020-09-28: David Anderson\n    * libdwarf.h.in: Rearranged the DW_DLC_* values\n      for clarity and added commentary on the main\n      point (the 'access' argument to dwarf init\n      functions for the consumer/reader calls\n      should be zero).  This is not a change.\n    * generated_libdwarf.h.in: Documented\n      the longstanding handling of that same\n      argument to consumer/reader functions.\n    * libdwarf2.1.mm: Version 3.10. Documenting\n      that same thing.\n    * libdwarf2.1.pdf: Regenerated as version 3.10.\n2020-09-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-09-26: David Anderson\n    * baseline.ltp: new test baseline for debuglink.\n\t* test_linkedtopath.c: Now with better coverage\n      of the paths in tbe debuglink code, we\n      add a getcwd here to return a test cwd\n      of /exam/ple so the output of debuglink\n      does not depend on the real build\n      directory location.\n2020-09-25: David Anderson\n\t* dwarf_debuglink.c: Corrected and clarified.\n2020-09-22: David Anderson\n    * CMakeLists.txt, Makefile.am: Added new file \n      dwarf_fission_to_cu.c.\n    * Makefile.in: Regenerated.\n    * dwarf_die_deliv.c: Renamed _dwarf_find_offsets_via_fission\n      to be _dwarf_find_all_offsets_via_fission().\n      Added status check following the call to it.\n    * dwarf_fission_to_cu.c: Now the above function\n      and supporting functions are in this source file to\n      deal with DW_SECT_LOCLISTS,DW_SECT_STR_OFFSETS,\n      DW_SECT_MACRO, DW_SECT_RNGLISTS.\n    * dwarf_loc.h: Updated prototypes for these\n      functions.\n    * dwarf_loclists.h: Now deleted. It's long been\n      unused.\n    * dwarf_loclists.c: Renamed internal_read_header as\n      _dwarf_internal_read_loclists_header for more general\n      access.\n    * dwarf_macro5.c: Now the cu-context cc_macro_base\n      field is used when needed for DWP files.\n    * dwarf_opaque.h: Rearranged some fields of\n      Dwarf_CU_Context\n      into more logical groupings (related to debug fission).\n    * dwarf_rnglists.c: renamed internal_read_header\n      to _dwarf_internal_read_rnglists_header().\n    * dwarf_rnglists.h: Added protype for\n      _dwarf_internal_read_rnglists_header().\n    * dwarf_str_offsets.c: Removed \n      _dwarf_find_offsets_via_fission\n      (which does more than just str_offsets now)\n      and put into dwarf_fission_to_cu.c as\n      _dwarf_find_all_offsets_via_fission().\n    * dwarf_str_offsets.h: Prototype renamed.\n    * libdwarf.h.in: Added a comment.\n    * generated_libdwarf.h.in: Regenerated.\n2020-09-18: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-09-18: David Anderson\n    * dwarf_debug_names.c: If allocation fails in setting up\n      a Dwarf_Dnames head we now get an error and a more tailored\n      error than just memory-allocation-failed.\n    * dwarf_elf_load_headers.c: If the symtab section size\n      is really big (larger than the object file size!) we now\n      get a relevant error message.  Used to get malloc fail on\n      32bit systems and do a large malloc on 64bit systems before\n      getting an error eventually.\n    * dwarf_frame.c: Calling the frame-retrieval functions\n      on a corrupted object file could result in leaking memory.\n      Fixed.\n2020-09-17: David Anderson\n    * dwarf_peread.c: Deleted several blank lines.\n    * dwarf_global.c: Removed trailing whitespace,\n      fixed indents.\n    * dwarf_errmsg_list.h: Various error strings now\n      have extra text with meaningful, but generic,\n      content.\n2020-09-17: David Anderson\n    * dwarf_global.c: Refactored to eliminate 50 lines\n      of duplicated code and ensure no leaks while\n      improving error messages when the object or DWARF\n      data is damaged (fuzzed).\n    * dwarf_global.h,dwarf_funcs.c,dwarf_pubtypes.c,\n      dwarf_types.c,dwarf_vars.c,dwarf_weaks.c: Eliminated \n      useless arguments to library-internal function.\n    * dwarf_util.h: Errors detected in a macro now \n      report more useful information.\n    * dwarf_alloc.c: Two DEBUG lines were too long,\n      broke those lines to shorter ones.\n      Added DEBUG-only output where it had not\n      reported earler.\n2020-09-15: David Anderson\n    * dwarf_alloc.c: Added ifdef DEBUG\n      printf for cases it should exist.\n      #undef debug at the top guaranties it will not\n      be turned on by accident.\n    * dwarf_loc.c(_dwarf_read_loc_section): Was missing dbg\n      in a call to _dwarf_error. Corrupt object lead to leak.\n    * dwarf_die_deliv.c(_dwarf_make_CU_Context) was missing\n      a _dwarf_error call where one was required.\n      A corrupt object lead to memory leak.\n      And _dwarf_next_die_info_ptr was failing to \n      initialize dbg from the passed in cu_context.\n      Also causing a memory leak on some corrupt objects.\n    * dwarf_peread.c(pe_section_name_get): Was failing\n      to check for a valid null-terminated\n      string in the string table.\n      A corrupted object could cause segmentation violation.\n    * dwarf_error.c (_dwarf_error_string): Added ifdef DEBUG\n      printf where they should have been all along.\n      #undef debug at the top guaranties it will not\n      be turned on by accident.\n2020-09-10: David Anderson\n    * dwarf_die_deliv.c: Now handle DW_AT_GNU_ranges_base\n      properly.\n    * dwarf_ranges.c: New function dwarf_get_ranges_b()\n      so we can pass back the true split-dwarf offset\n      when we have DWARF4 split-dwarf extension objects.\n      And we calculate that true offset.\n    * libdwarf.h.in: New function prototype:\n      dwarf_get_ranges_b().\n    * generated_libdwarf.h.in: Regenerated.\n    * libdwarf2.1.mm:  Version 3.09. Now documents\n      dwarf_get_ranges_b().\n    * libdwarf2.1.pdf:  Version 3.09. Regenerated.\n2020-09-10: David Anderson\n    * checkexamples.c,dwarf_die_deliv.c,dwarf_form.c,\n      dwarf_line_table_reader_common.h,dwarf_query.c,\n      dwarf_ranges.c,dwarf_str_offset.c,dwarf_tied.c:\n      Remove trailing whitespace. Fix indentation.\n2020-09-09: David Anderson\n    * dwarf_alloc.c: dwarf_dealloc_error(dbg,error)\n      and dwarf_dealloc(dbg,error,DW_DLA_ERROR)\n      should now be called with a null dbg if\n      the failing libdwarf was one of the dwarf_init*()\n      or dwarf_elf_init*() functions and the storage\n      in the error will be freed.\n      See libdwarf2.1.pdf rev 3.08 or later for\n      details.\n      With DEBUG set additional allocation details are\n      revealed.\n    * dwarf_error.c: Repair a comparison with NULL.\n    * dwarf_finish.c(dwarf_finish): Simplify the !dbg test.\n    * dwarf_ranges.c: Remove dead code.\n    * libdwarf2.1.mm: Version 3.08. The Table of\n      Contents points to returns from dwarf_init*\n      calls (around page 28) now.\n    * libdwarf2.1.pdf: Generated Version 3.08.\n2020-09-08: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-09-07: David Anderson\n    * dwarf_xu_index.c: We were not checking the\n      value of N (in the header of .debug_cu/tu_index)\n      to ensure it was sane. Now we check and error\n      if insane (the test object is fuzzed to provoke\n      the error).\n    * dwarf_elf_access.c: Reformatted commentary so\n      the lines are not too long.\n2020-09-07: David Anderson\n    * dwarf_opaque.h, dwarf_str_offsets.c: Removed trailing\n      whitespace.\n    * dwarf_line_table_reader_common.h: Fixed an accidental\n      deletion of a crucual _ (underbar) in preceeding commit.\n2020-09-07: David Anderson\n    * dwarf_line_table_reader_common.h: Places needing\n      additional dealloc in case of error:\n      lines 1232,2255,2404 (line#s in the updated version). \n2020-09-07: David Anderson\n    * dwarf_tied_decls.h: Removed declaration of\n      _dwarf_loop_reading_debug_info_for_cu().\n    * dwarf_tied.c: The return value from dwarf_tsearch() was\n      not being handled properly. Lead to leaks.\n      Could, possibly, have lead to coredump.\n      Other places tsearch return values were done properly.\n      _dwarf_loop_reading_debug_info_for_cu() is\n      now static function.\n    * dwarf_groups.c: Moved _dwarf_grp_destroy_free_node()\n      down to just before the function that references it.\n    * dwarf_alloc.c: Removed an abort() call from\n      #ifdef DEBUG code.\n2020-09-05: David Anderson\n    * dwarf_die_deliv.c: Delete old #if 0 lines.\n      Pick up Fission data about DW_SECT_STR_OFFSETS\n      to help find strings.\n      Merge any helpful base data from the skeleton (tied file)\n      CU dies into the dwp CU dies.\n    * dwarf_base_types.h: Add DW_STR_OFFSETS_VERSION4\n      to help with reading that GNU extension.\n    * dwarf_form.c: Corrected code reading from\n      .debug_str_offsets.\n    * dwarf_opaque.h: Added new fields to the CU context\n      record to support .debug_str_offsets, and a new\n      function declaration related to that.\n    * dwarf_query.c: Deleted no-longer-used functions\n      (the tied-file attribute merge happens much\n      earlier) and added \n      _dwarf_merge_all_base_attrs_of_cu_die().\n    * dwarf_ranges.c: Better represents using .debug_ranges.dwo\n      if it's present in the dwp  .\n    * dwarf_str_offsets.c: Refactoring and revising to support\n      the two formats of .debug_str_offsets: DWARF5 and\n      GNU DWARF4.\n    * dwarf_str_offsets.h. New function prototypes for the revised\n      .debug_str_offsets[.dwo] code.\n2020-09-01: David Anderson\n    * dwarf_loclists.c(internal_load_loclists_contexts): Added\n      a missing 'return DW_DLV_ERROR' when an error was detected.\n2020-08-28: David Anderson\n    * dwarf_die_deliv.c,dwarf_loc.c,dwarf_util.c:Fixed\n      indents and trailing whitespace.\n2020-08-27: David Anderson\n    * dwarf_die_deliv.c: Some error messages now have more\n      detail.\n    * dwarf_line_table_reader_common.h: In an error condition\n      (meaning corrupt dwarf) _dwarf_free_chain_entries()\n      was called twice on the same data, referring to\n      freed space in doing so. Deleted the extra call.\n    * dwarf_loc.c(_dwarf_setup_loc): Removed a \n      bogus _dwarf_error \n      using DW_DLE_LOC_EXPR_BAD: Let the just-called\n      function error code be returned.\n      Some error conditions detected here now report\n      detailed information on the error.\n    * dwarf_query.c(dwarf_attrlist): Refined the detailed\n      error message already present.\n    * dwarf_util.c:New internal function\n      _dwarf_create_area_len_error() lets dwarf_util.h\n      macro report a more detailed error without\n      bloating the macro.\n    * dwarf_util.h: Calls that new function rather\n      than calling _dwarf_error() itself.\n2020-08-25: David Anderson\n    * dwarf_form.c: Previous change failed to show\n      the actual error string \n      DW_DLE_STRP_OFFSET_BAD or DW_DLE_STRING_OFFSET_BAD\n      along with the\n      details. Oops. Now it shows.\n2020-08-23: David Anderson\n    * dwarf_form.c: Slightly changed the error message \n      for an error in DW_FORM_strp.\n2020-08-23: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-08-23: David Anderson\n    * dwarf_form.c,dwarf_generic_init.c,dwarf_loc.c,\n      dwarf_loc.h,dwarf_loclists.c,dwarf_query.c, dwarf_rnglists.c,\n      pro_opaque.h: Remove trailing whitespace. Fix indents.\n2020-08-23: David Anderson\n    * dwarf_form.c: In case an strp offset seems wrong\n      we get a more detailed error message.\n    * dwarf_macro5.c: Deleted gratuitous blank line.\n2020-08-22: David Anderson\n    * dwarf_loc.c,dwarf_rnglists.c: call \n      _dwarf_look_in_local_and_tied_by_index\n      not _dwarf_extract_address_from_debug_addr so \n      .debug_addr in the tied file will be found.\n    * dwarf_opaque.h,dwarf_query.c: Make  \n      _dwarf_look_in_local_and_tied_by_index global,not\n      _dwarf_extract_address_from_debug_addr.\n2020-08-22: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-08-21: David Anderson\n    * dwarf_init_finish.c(insert_sht_list_in_group_map):\n      Added checks of dss_data_was_malloc around\n      a couple of calls saying free(secdata.dss_data).\n      The missing checks could only result in duplicate\n      free with user calls that allocated their\n      own section data to load a section and a certain\n      error arising during the call.\n    * dwarf_loc.c: To elminate ambiguity, renamed\n      some fields from lowpc to rawlowpc (for example).\n    * dwarf_loclists.c(build_array_of_lle): Removed\n      a block of code duplicating work done in dwarf_loc.c.\n      Fixed arguments passing ld_lopc, ld_highpc\n      to pass ld_rawlow, ld_rawhigh for correctness.\n2020-08-21: David Anderson\n    * libdwarf2.1.mm: Rev 3.07. Corrected quote mismatches\n      in the mm commands, and a couple of stray\n      characters after a .P command\n    * libdwarf2.1.pdf: Rev 3.07. Regenerated.\n2020-08-18: David Anderson\n    * checkexamples.c: Corrected example_rnglist_for_attribute()\n      example.\n    * dwarf_ranges.c: Corrected a comment and removed #if 0\n      code as it is obsolete.\n    * dwarf_rnglists.c(dwarf_get_rnglists_entry_fields_a):\n      Allow the pointer-arguments used to return data to\n      the caller to be null pointers safely, as libdwarf2.1.pdf\n      suggested that was legal.\n    * libdwarf2.1.mm: Version 3.06. Corrected the example\n      calling dwarf_get_rnglists_entry_fields_a().\n    * libdwarf2.1.pdf: Regenerated, Version 3.06\n     \n      \n2020-08-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Updated  version\n      string, regenerated files that reference it.\n2020-08-10: David Anderson\n    * dwarf_elf_defines.h,dwarf_elfread.c: A linux kernel used a\n      R_X86_64_NONE (which means ignore the relocation) and\n      now we deal with it properly for EM_X86_64.\n2020-08-02: David Anderson\n    * dwarf_alloc.c: Added a constructor for Dwarf_Locdesc_c\n      (DW_DLA_LOCDESC_C) so fields ld_lle_value and\n      ld_kind get non-zero and \n      erroneous initial values so\n      the values can be checked later for correctness.\n    * dwarf_errmsg_list.h: Added error DW_DLE_LOCATION_ERROR.\n    * dwarf_loc.c: Now we rigorously set and check the fields\n      ld_lle_value and ld_kind. \n      _dwarf_locdesc_c_constructor() sets those two fields\n      so we can check correctness and in case of error, \n      report the details.\n    * dwarf_loc.h: Added constructor prototype and a special\n      DW_LLE_VALUE_BOGUS initial value (invisible to \n      library callers).\n    * dwarf_loclists.c: After malloc use the  Dwarf_Locdesc_c\n      constructor so later error checking possible.\n    * libdwarf.h.in: Added error DW_DLE_LOCATION_ERROR.\n    * libdwarf2.1.mm: Rev 3.05. Additional detail on\n      return values for dwarf_get_locdesc_entry_d()\n      and documented dwarf_get_locdesc_entry_c() \n      (recommending use of dwarf_get_locdesc_entry_d()\n      instead)\n    * libdwarf2.1.pdf: Rev 3.05. Regenerated.\n2020-07-28: David Anderson\n    * dwarf_locationop_read.c: Added DW_OP_GNU_variable_value.\n    * dwarf_names.c, dwarf_names_enum.h: Regenerated.\n    * dwarf.h: Added in GNU names that had been accidentally\n      ommitted: DW_AT_GNU_deleted,DW_AT_GNU_locviews,\n      DW_AT_GNU_entry_view,DW_OP_GNU_variable_value.\n      These caused the regeneration of dwarf_names.h.\n2020-07-22: David Anderson\n    * dwarf_abbrev.c,dwarf_debug_names.c, dwarf_debuglink.c,\n\t  dwarf_dsc.c,dwarf_error.c,dwarf_form.c,dwarf_funcs.c,\n\t  dwarf_gdbindex.c,dwarf_harmless.c,dwarf_init_finish.c,\n\t  dwarf_leb.c,dwarf_leb_test.c,dwarf_line.c,dwarf_macro.c,\n\t  dwarf_macro5.c,dwarf_original_elf_init.c,dwarf_pubtypes.c,\n\t  dwarf_str_offsets.c,dwarf_stringsection.c,dwarf_stubs.c,\n\t  dwarf_test_errmsg_list.c,dwarf_types.c,dwarf_vars.c,\n\t  dwarf_weaks.c,dwarf_xu_index.c,gennames.c,malloc_check.c,\n\t  pro_arange.c,pro_encode_nm.c,pro_error.c,pro_finish.c,\n\t  pro_forms.c,pro_funcs.c,pro_line.c,pro_macinfo.c,\n\t  pro_pubnames.c,pro_reloc.c,pro_reloc_stream.c,\n\t  pro_reloc_symbolic.c,pro_types.c,pro_vars.c,pro_weaks.c:\n      Updated copyright date. Reformatted copyright to\n      have slightly shorter lines, no change in content.\n2020-07-22: David Anderson\n    * libdwarf2.1.mm: Now Rev 3.04. Revised the \n      Error Handling section for greater clarity.\n      Revised dwarf_init_path() to correct formatting\n      errors. \n    * libdwarf2.1.pdf: Regenerated as rev 3.04 .\n    * dwarf_generic_init.c(dwarf_init_pathh): Removed\n      the error-handling so when the call fails the\n      Dwarf_Debug argument is not touched. \n      For the PE case return  the DW_DLV_ERROR or\n      DW_DLV_NO_ENTRY (return left off by accident).\n    * dwarf_arange.c: Reformatted the copyright\n      to have shorter lines.\n2020-07-17: David Anderson\n    * libdwarf/libdwarf_version.h: Version string updated.\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h : regenerated\n      with latest version string\n2020-07-17: David Anderson\n    * dwarf_frame.c: rearrange comments a little and\n      add a web reference as documentation.\n\t* pro_debug_sup.c,pro_section.c: Remove trailing \n      whitespace.  Fix indents.\n2020-07-15: David Anderson\n    * dwarf_alloc.c: Improved printf if DEBUG\n      is turned on, with #undef DEBUG in source so\n      necessary to modify the source and rebuild\n      to get the voluminous alloc/dealloc debugging\n      printf turned on.\n2020-07-14: David Anderson\n    * libdwarf2.1.mm: Version 3.02. Documents the new call\n      dwarf_get_debug_sup() to access the DWARF5\n      .debug_sup section.\n    * libdwarf2p.1.mm: Version 1.51.  Documents the new\n      call dwarf_add_debug_sup() to create the DWARF5\n      .debug_sup section.\n    * libdwarf2.1.pdf,libdwarf2p.1.pdf: Regenerated.\n2020-07-14: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: Regenerated\n      with new version string.\n2020-07-13: David Anderson\n    * CMakeLists.txt, Makefile.am: Added dwarf_debug_sup.c\n    * Makefile.in: Regenerated.\n    * dwarf_errmsg_list.h: Added DW_DLE_DEBUG_SUP_STRING_ERROR\n      and DW_DLE_DEBUG_SUP_ERROR.\n    * dwarf_names.c dwarf_names_enum.h: Reflects correction\n      of value of\n      DW_GNUIVIS_static (a new non-standard name in dwarf.h)\n    * generated_libdwarf.h.in,libdwarf.h.in: With the\n      two new errors and declaration of\n      dwarf_add_debug_sup() to produce .debug_sup\n      and dwarf_get_debug_sup() to retrieve the section values..\n    * pro_finish.c: Support for creating .debug_sup.\n    * pro_opaque.h: Support for creating .debug_sup.\n    * pro_section.c: Support for creating .debug_sup.\n    * dwarf_debug_sup.c: New, for .debug_sup access.\n\t* pro_debug_sup.c: New. for .debug_sup creation.\n2020-07-10: David Anderson\n    * dwarf_die_deliv.c: Handle\n      DW_AT_GNU_ranges_base in a CU DIE.\n    * dwarf_opaque.h: Added 2lines of comment\n      about cc_debug_offset.\n    * dwarf_query.c(_dwarf_get_ranges_base_attr_value):\n      Simplified as the cu_context\n      has the base values, no need to read\n      DIEs/Attributes here.\n2020-07-09: David Anderson\n    * dwarf_opaque.h: Changing a comment about libdwarf\n      and the tied file (if any).\n2020-07-08: David Anderson\n    * libdwarf2.1.mm: Added documentation of\n      .debug_gnu_pybtypes and .debug_gnu_pubnames.\n      See dwarf_get_gnu_index_head() in the document.\n    # libdwarf2.1.pdf: Regenerated. Rev 3.01\n2020-07-08: David Anderson\n    * dwarf_init_finish.c: setup of .debug_names was\n      done twice (not harmful but the duplicate removed now).\n2020-07-08: David Anderson\n    * dwarf_elf_load_headers.c,dwarf_gdbindex.c,dwarf_gnu_index.c,\n\t  dwarf_gnu_index.h,dwarf_init_finish.c,\n      dwarf_locationop_read.c: Fixed indents and trailing\n      whitespace.\n2020-07-08: David Anderson\n    * dwarf.h: Fixed error in DW_GNUIVIS values.\n    * dwarf_debug_names.h: Arranging shorter\n      lines in a block of comments.\n    * dwarf_elfread.c( find_section_to_relocate): Added \n      de_debug_gnu_pubnames, de_dbug_gnu_pubtypes to sections\n      that can have relocations (in  a dwo.o before linking).\n    * dwarf_gnu_index.c: Now loads debug_info so that\n      in near future correctness of offsets in \n      .debug_gnu_pubnames/pubtypes can be checked.\n2020-07-08: David Anderson\n    * dwarf_gnu_index.c: Remove debug printf. Small corrections\n      to the section reading.\n2020-07-06: David Anderson\n    * dwarf_loc.c: Too-long lines in comments adjusted shorter.\n    * dwarf_loc.h: Renamed _dwarf_free_loclists_head to\n      _dwarf_free_loclists_head_content for clarity.\n    * dwarf_loclists.c: Deleted dead code. Renamed that\n      function here too. Corrected a bug in\n      _dwarf_free_loclists_head()\n    * dwarf_gnu_index.c,dwarf_gnu_index.h: New files\n      to handle sections .debug_gnu_pubnames and\n      .debug_gnu_pubtypes\n    * dwarf_init_finish.c: Added the new sections to\n      enter_section_in_de_debug_sections_array().\n    * CMakeLists.txt,Makefile.am: Added dwarf_gnu_index.c and\n      dwarf_gnu_index.h\n    * Makefile.in: Regenerated.\n    * dwarf.h: Added new nonstandard DW_GNUIVIS* and\n      DW_GNUIKIND* in support of these sections.\n    * dwarf_alloc.c: New record type DW_DLA_GNU_INDEX_HEAD\n      for these new sections.\n    * dwarf_errmsg_list.h: New errors\n    * dwarf_names.c, dwarf_names.h: Regenerated with\n      DW_GNUIVIS and DW_GNUIKIND name functions.\n    * dwarf_names_enum.h: Regenerated this too.\n    * dwarf_names_new.h: Regenerated this.\n    * libdwarf.h.in: Added Dwarf_Gnu_Index_Head type\n      and new functions and new error codes. Dropped\n      a dead DLA type and assigned it to be for\n      DW_DLA_GNU_INDEX_HEAD. Added new functions \n      dwarf_get_gnu_index_head()\n      dwarf_gnu_index_dealloc()\n      dwarf_get_gnu_index_block() \n      dwarf_get_gnu_index_block_entry() allowing\n      access to the data in .debug_gnu_pubtypes\n      and .debug_gu_pubnames.\n    * generated_libdwarf.h.in: Regenerated.\n2020-07-04: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n\t  dwarf_names_new.h,libdwarf_version.h: new version string.\n2020-07-03: David Anderson\n    * CMakeLists.txt, Makefile.am: renamed dwarf_dnames.h ->\n      dwarf_debug_names.h and dwarf_dnames.c to \n      dwarf_debug_names.c.\n    * Makefile.in: Regenerated.\n    * dwarf_alloc.c, dwarf_debug_names.c: Include\n      name updated dwarf_dnames.h to dwarf_debug_names.h .\n    * dwarf_elfread.c(_dwarf_elf_object_access_internals_init):\n      In case of a null gh_namestring we notice and skip\n      over it.\n    * dwarf_init_finish.c(_dwarf_load_section): Added to\n      the comment on zero-size sections.\n2020-07-02: David Anderson\n    * dwarf_gdbindex.h: Removed gdbindex_offset_type typedef\n      as it is not used anywhere.\n    * dwarf_global.c(dwarf_get_cu_die_offset_given_cu_header_offset):\n      Updated a commment to reflect handling of DWARF5 and more.\n    * dwarf_util.h: Removed SKIP_LEB128_WORD_CK as it\n      is no longer used and replaced by a better function.\n    * dwarf_query.c: Removed comment about that macro.\n    * dwarf_form.c: Revised the commentary on\n      DW_AT_str_offsets_base to match the final DWARF5.\n2020-07-02: David Anderson\n    * libdwarf.h.in: Added DW_DLE_GDBINDEX_STRING_ERROR.\n    * generated-libdwarf.h.in: Regenerated.\n    * dwarf_errmsg_list.h: Added DW_DLE_GDBINDEX_STRING_ERROR.\n    * dwarf_gdbindex.c(dwarf_gdbindex_addressarea_entry): Now\n      checks its arguments and the return string for problems.\n2020-07-01: David Anderson\n    * libdwarf.h.in: Comment now deprecates \n      dwarf_get_loclist_entry().\n    * generated_libdwarf.h.in: regenerated.\n    * libdwarf2.1.mm: Deprecates dwarf_get_loclist_entry().\n    * libdwarf2.1.pdf: Regenerated, version 2.99.\n    * dwarf_locationop_read.c: Pass real address-size to\n      read_encoded_addr() so it will work properly.\n2020-06-29: David Anderson\n    * dwarf_elf_load_headers.c: Added sanity checks\n      on section size of the section strings and\n      the symbol strings.\n      All the section-size errors now use\n      the new error code DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE.\n    * dwarf_errmsg_list.h: Added string for\n      DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE.\n    * libdwarf.h.in: Added DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE.\n    * generated_libdwarf.h.in: Regenerated.\n2020-06-29: David Anderson\n    * libdwarf_version.h: updated version string.\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h: Regenerated.\n2020-06-29: David Anderson\n    * dwarf_elfread.c: Added checks on section sizes\n      and offsets to ensure they don't exceed file size\n      (but only check when we try to read them, we\n      want to read dwarf even if sections we do not\n      care about have damaged section headers).\n    * dwarf_peread.c: Fixed indentation mistake.\n2020-06-28: David Anderson\n    * dwarf_elf_defines.h: Adding R_386_GOTPC\n      so we don't rely on /usr/include to have the\n      ones we need.\n    * dwarf_elf_rel_detector.c: Adding R_386_GOTPC\n      to identify the relocation as 32bit.\n2020-06-27: David Anderson\n    * dwarf_alloc.c(_dwarf_free_all_of_one_debug): If space \n      for debug_rnglists or\n      debug_loclists was malloc'd (relocations\n      or compressed sections force malloc) we\n      now call the function that frees that\n      data.  That function renamed:\n      rela_free->malloc_section_free.\n2020-06-25: David Anderson\n    * dwarf_loc.c: Corrected indents.\n    * dwarf_loclists.c: Corrected indents, removed\n      trailing whitespace.\n    * dwarf_peread.c: Removed trailing whitespace.\n    * dwarf_rnglists.c: Removed trailing whitespace.\n    * libdwarf2.1.mm: Rev 2.98. Added documentation\n      on the .debug_names section printing functions.\n      These intended for debugging .debug_names\n      (that is, by dwarfdump),\n      not things user code are likely to want to use. \n      Documented the new function \n      dwarf_get_rnglists_entry_fields_a() as the original\n      dwarf_get_rnglists_entry_fields() \n      (which is still there and works as well as before)\n      left off a field important to callers.\n    * libdwarf2.1.pdf: Rev 2.98. Regenerated.\n2020-06-22: David Anderson\n    * dwarf_loc.c: Using knowledge of the base address status\n      improve messaging while reducing execution time.\n    * dwarf_loclists.c: Properly deal with setting\n      up for output in case .debug_addr missing (fixing\n      an omission).\n    * dwarf_peread.c: In load_optional_header64() we were\n      failing to read hdr.ImageBase which caused addresses\n      to be wrong (base address needed to be set).\n    * dwarf_rnglists.c: Based on knowledge of lack/presence\n      of .debug_addr improve messaging and reduce\n      cpu-time spent.\n    * dwarf_rnglists.h: Added 2 line commentary.\n    * libdwarf.h.in,generated_libdwarf.h.in: Added\n      dwarf_get_rnglists_entry_fields_a(), the original\n      function was inadequate.\n2020-06-19: David Anderson\n    * dwarf_reloc_x86_64.hr,dwarf_reloc_x86_64.h: Added in\n      R_X86_64_PC64 relocation as llvm is using it.\n2020-06-17: David Anderson\n    * dwarf_elf_load_headers.c: Catch a potential division by \n      zero error. \n    * dwarf_peread.c: Added comments.\n2020-06-17: David Anderson\n    * dwarf_loclists.c, dwarf_rnglists.c: Rename \n      length_size->offset_size\n      for clarity and correct the computation of the\n      length of the offsets array.\n2020-06-17: David Anderson\n    * dwarf_die_deliv.c: Pick up CU DIE base fields\n      always. Not just for DWARF4,5.\n    * dwarf_loc.c: Clarify the flow. A comment added.\n    * dwarf_form.c: Added missing DW_FORM_loclistx from\n      a switch.\n2020-06-16: David Anderson\n    * dwarf_query.c, dwarf_util.c: Remove trailing whitespace.\n      Changed indents and line lengths in a small area to match\n      the usual look.\n2020-06-16: Jorge Gorbe Moya \n    * dwarf_query.c, dwarf_util.c: Correct the handling\n      of DW_UT initializations.\n2020-06-16: David Anderson\n    * dwarf_die_deliv.c,dwarf_frame2.c,dwarf_loc.c:\n      Remove trailing whitespace.\n2020-06-14: David Anderson\n    * libdwarf1.1.mm: Added examples to the Error Handling\n      section as the previous version was pretty vague\n      about the best way to call libdwarf to deal\n      with errors.\n    * libdwarf1.1.pdf: Generated version 2.97.\n     \n2020-06-14: David Anderson\n    * dwarf_die_deliv.c: Adds the highest known\n      abbrev code to certain error messages.\n    * dwarf_die_deliv.h: Corrected a comment.\n    * dwarf_frame2.c: Now uses (uintptr_t) to avoid\n      warnings from certain compiler/pointer-size\n      environments.\n    * dwarf_loc.c: Update the loclist head\n      structure  ll_bytes_total\n      field with DWARF 2,3,4 loclists too.\n    * dwarf_opaque.h: Add cc_highest_known_code\n      to Dwarf_CU_Context_s for better\n      error reporting and align some field names\n      for a better appearance.\n    * dwarf_query.c: Improved error reporting\n      when an abbrev code missing.\n    * dwarf_util.c: Keep track of highest abbrev\n      code seen (per compilation unit).\n    * dwarf_util.h: Internal function declaration\n      changed to allow reporting of highest\n      abbrev code.\n2020-06-12: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h: updated\n      version string.\n2020-06-12: David Anderson\n    * checkexamples.c,dwarf_alloc.c,dwarf_arange.c,\n      dwarf_frame.c,dwarf_line.c,dwarf_line_table_reader_common.h,\n      dwarf_loc.c,dwarf_loc.h,dwarf_locationop_read.c,\n      dwarf_loclists.c,dwarf_query.c,dwarf_rnglists.c,\n      dwarf_util.c,libdwarf.h.in: Fixed indents\n      and removed trailing whitespace.\n2020-06-12: David Anderson\n    * dwarf_alloc.c: Added free of loclists to \n      _dwarf_free_all_of_one_debug().\n    * dwarf_loc.c: Created _dwarf_free_op_chain()\n      and call it so even in case of error nothing leaks.\n      Some adjustments to indents.\n    * dwarf_loclists.c: _dwarf_dealloc_loclists ->\n      _dwarf_dealloc_loclists_context for clarity.\n      Modified _dwarf_free_loclists_head() to get\n      leak-free behavior.\n    * dwarf_opaque.h: Reflects above name change.\n    * libdwarf2.1.mm: Corrected and amplified\n      words on the new functions.\n    * libdwarf2.1.pdf: Regenerated.\n2020-06-10: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf/libdwarf_version.h:\n      updated version string.\n2020-06-09: David Anderson\n    * CMakeLists.txt,Makefile.am : Deleted dwarf_loc2.h reference.\n      Added dwarf_locationop_read.c, dwarf_loclists.c.\n    * Makefile.in: Regenerated.\n    * dwarf_alloc.c: Corrected a comment about reserved numbers.\n      Reflects name change from struct Dwarf_Loc_c_s to\n      struct Dwarf_Loc_Expr_Op_s. \n    * dwarf_errmsg_list.h: Added DW_DLE_LOCLISTS_ERROR.\n    * dwarf_form.c: Added arguments to the library\n      internal function _dwarf_formblock_internal()\n      for better support of DWARF5 loclist creation.\n    * dwarf_frame2.c: Changed a local from unsigned\n      to Dwarf_Unsigned as well as changing pointer\n      casts from 'unsigned long' to Dwarf_Unsigned.\n    * dwarf_loc.c: Lots of refactoring to make\n      the flow easier to understand.\n      Moved _dwarf_read_loc_expr_op() to\n      a new file dwarf_locationop_read.c as the \n      function is quite large.\n      Renamed other functions so the names are not\n      so much alike.\n    * dwarf_loc.h: New fields in Dwarf_Loc_Chain_s\n      to support the raw vs. cooked values of location\n      low/high. New fields to support DWARF 5 loclists\n    * dwarf_loc2.h: Deleted. Relevant contents in\n      dwarf_loc.c and dwarf_loclists.c\n    * dwarf_locationop_read.c: Existing code\n      to read location ops refactored to a routine\n      by themselves.  Long enough by itself\n    * dwarf_loclists.c: New file with .debug_loclists\n      support. \n    * dwarf_loclists.h: Nothing here. will be deleted.\n    * dwarf_opaque.h: New functions and arguments\n      for internal debug_loclists data.\n    * dwarf_rnglists.c: Changed certain arguments\n      to Dwarf_Half (address_size etc) where that\n      makes sense.  \n    * dwarf_util.c: Now dwarf_load_debug_info()\n      loads the base data from .debug_rnglists\n      and .debug_loclists (DWARF5)\n    * libdwarf.h.in: 'unsigned' now 'unsigned int'\n      existing function unchanged: dwarf_get_loclist_c()\n      new function dwarf_get_locdesc_entry_d()\n      new function dwarf_get_loclist_head_basics()\n      new function dwarf_get_location_op_value_d()\n      new function dwarf_get_loclist_head_kind()\n      - Following for printing raw loclists, not\n      usually used.\n      new function dwarf_load_loclists()\n      new function dwarf_get_loclist_context_basics()\n      new function dwarf_get_loclist_lle()\n      new function dwarf_get_loclist_offset_index_value()\n      new function dwarf_get_loclist_raw_entry_detail()\n    * libdwarf2.1.mm: 2.96, documents the new calls.\n    * libdwarf2.1.pdf: Version 2.96.\n2020-05-23: David Anderson\n    * dwarf_opaque.h: Defines DWARFSTRING_ALLOC_SIZE   200\n    * dwarf_form.c: Using DWARFSTRING_ALLOC_SIZE for the\n      initial allocation, (mostly) avoiding the need\n      for malloc here.  dwarfstring is mainly used\n      for error messages, so preallocation is rarely useful\n    * dwarf_line.c(create_fullest_file_path): Corrected\n      the comments for this function.\n2020-05-22: David Anderson\n    * dwarf_alloc.c: New functions with proper type checking:\n      dwarf_dealloc_error(), dwarf_dealloc_attribute(),\n      dwarf_dealloc_die().\n    * dwarf_arange.c: Now does correct free_aranges_chain() \n      and ensures chain entry stuff dealloc-d as appropriate.  \n    * dwarf_die_deliv.c: Improved an error message in reports\n      an address-size error.\n    * dwarf_frame.c: Initialize more local variables at the\n      point of declaration. Do  all needed dealloc of\n      the chain entries \n      when creating the list.\n    * dwarf_global.c: Now uses the new ch_itemtype\n      to dealloc properly.  Which simplifies the \n      dealloc_globals_chain() call.\n    * dwarf_line.c:  Now uses the new ch_itemtype\n      to dealloc properly.\n    * dwarf_line_table_reader_common.h: Now uses wrappers\n      for the READ_UNALIGNED_CK DECODE_LEB128_UWORD_CK etc\n      macros so the code\n      now deallocs appropriately in case of error.\n      Most places were not doing full dealloc. Now\n      all are.\n    * dwarf_opaque.h: New field ar_dbg so attribute\n      dealloc is easier.  New chain field ch_itemtype\n      so dealloc is simpler and safer.\n    * dwarf_query.c: Removed comment about leaking memory,\n      the leaks are fixed by using the DECODE_LEB128_UWORD_CK\n      etc wrapper functions.\n    * libdwarf.h.in: Declares the new dealloc functions\n      dwarf_dealloc_error(),dwarf_dealloc_die(),\n      dwarf_dealloc_attribute().\n    * generated_libdwarf.h.in: Regenerated.\n    * libdwarf2.1.mm: New documentation of dwarf_dealloc()\n      as well as documentation of\n      dwarf_dealloc_error(),dwarf_dealloc_die(),\n      dwarf_dealloc_attribute().\n    * libdwarf2.1.pdf: Regenerated. Version 2.94.\n2020-05-19: David Anderson\n    * dwarf_rnglists.c: Ommited a crucial assign to rh_debug so it\n      leaked if de_alloc_tree absent.\n2020-05-19: David Anderson\n    *  dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,dwarf_names_new.h,\n       libdwarf_version.h : New version strings.\n2020-05-19: David Anderson\n    * libdwarf.h.in: Revised a couple rnglists functions\n      by removing unneeded arguments and revising the arguments\n      to dwarf_rnglists_offset_get_rle_head(),\n      dwarf_get_rnglist_head_basics(), and\n      dwarf_get_rnglists_entry_fields()\n    * generated_libdwarf.h.in: Regenerated.\n    * dwarf_rnglists.c: Checked a pointer argument for null before using.\n      Remove the unneeded function arguments (affecting several internal\n      functions too). Renamed a few internal things for clarity.\n    * libdwarf2.1.mm: Documented the new rnglists functions\n      and added examples of use.\n    * libdwarf2.1.pdf: Regenerated. Version 2.93.\n2020-05-17: David Anderson\n    * dwarf_dnames.c: Improved error reporting of the names generation\n      when something goes wrong.\n    * dwarf_elf_access.c,dwarf_elfread.c: Add MATCH_REL_SEC \n      for the .debug_addr section.\n    * dwarf_form.c: Improved error reporting by showing specific details.\n      Now supports DW_FORM_rnglistx.  New function\n      dwarf_addr_form_is_indexed(theform) created, now using\n      it here and in dwarfdump as needed..\n    * dwarf_line_table_reader_common.h: Corrected indents.\n    * dwarf_opaque.h:  Small commentary changes, added the \n      CU Context field cc_dwo_name_present (used for \n      non-standard DWARF4).\n    * dwarf_query.c: Simplified some pointlessly messy code.\n      Now also using dwarf_addr_form_is_indexed() instead of\n      a list missing some DWARF5 values.\n    * dwarf_ranges.c: #if 0 some useless code for now. \n    * dwarf_rnglists.c: The .debug_rnglists code is here.\n    * dwarf_rnglists.h: For use inside libdwarf. Opaque\n      to libdwarf callers.\n    * dwarf_tsearchhash.c: Trivial change. No logic change.\n    * dwarf_util.c: Removed pointless blank line.\n    * dwarf_util.h, dwarf_xu_index.h: Fix trailing whitespace.\n    * libdwarf.h.in: New functions and opaque types for reading\n      the .debug_rnglists section.\n    * generated_libdwarf.h.in: Regenerated.\n2020-05-05: David Anderson\n    * dwarf_rnglists.h, dwarf_opaque.h, dwarf_rnglists.c: \n      Preliminary new fields/code for Rnglists_Context.\n2020-05-04: David Anderson\n    * dwarf_alloc.c: renamed dwarf_dealloc_rnglists\n      to _dwarf_dealloc_rnglists.\n    * dwarf_errmsg_list.h: Added DW_DLE_RNGLISTS_ERROR.\n    * dwarf_opaque.h: Added _dwarf_dealloc_rnglists() prototype.\n    * dwarf_rnglists.c: Minor corrections of this new code.\n    * dwarf_rnglists.h: Added a new field for internal use.\n      Deleted some #if 0 lines.\n    * dwarf_util.c(_dwarf_load_debug_info): Now also\n      calls dwarf_load_rnglists as we need that in the\n      Dwarf_Debug.\n    * libdwarf.h.in: Added DW_DLE_RNGLISTS_ERROR.\n      Deleted dwarf_dealloc_rnglists as it is renamed\n      and made private to libdwarf.\n    * generated_libdwarf.h.in: Regenerated.\n2020-05-02: David Anderson\n    * libdwarf2.1.mm: Added a note to Changes that\n      instances of 'length_size' in the code and headers\n      variable naming will, over time, be changed to \n      'offset_size' as this name suggests what they really\n      represent: a 4 or 8 byte offset size.\n    * libdwarf2.1.pdf: Regenerated, version 2.92\n2020-05-02: David Anderson\n    * CMakeLists.txt, Makefile.am: Added dwarf_rnglists.h,\n      dwarf_rnglists.c\n    * Makefile.in: Regenerated.\n    * dwarf_alloc.c: Now calls dwarf_dealloc_rnglists() at\n      finish to clean up rnglists data, if any.\n    * dwarf_arange.c: Deleted some blank lines and added one.\n    * dwarf_opaque.h: Added de_rnglists_context_count and\n      de_rnglists_context to support rnglists.\n    * dwarf_rnglists.h:  Defines the Dwarf_Rnglists_Context\n      structure.\n    * dwarf_rnglists.c:  Implements initial support of the\n      .debug_rnglists section.\n    * libdwarf.h.in: Declares new rnglist-related functions\n      and an opaque struct Dwarf_Rnglists_Context_s.\n    * generated_libdwarf.h.in: Regenerated.\n2020-04-26: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h: Updated\n      version string.\n2020-04-25: David Anderson\n    * dwarf_abbrev.c: Fix trailing whitespace.\n    * dwarf_arange.c: Delete macro READ_UNALIGNED_CK\n      use an just use  _dwarf_read_unaligned_ck_wrapper.\n    * dwarf_die_deliv.c: Uses wrapper instead\n      of READ_UNALIGNED_CK where necessary.\n      Delete commented-out lines.\n    * dwarf_error.c: Remove unwanted debug  code.\n    * dwarf_form.c: Remove trailing whitespace.\n    * dwarf_global.c: Rename some arguments for greater\n      clarity.\n    * dwarf_line.c: Fix line handling so both DW5\n      and earlier handled better.  Improve some error\n      messages.\n    * dwarf_macro5.c:  Use wrapper() funcs, not\n      READ_UNALIGNED_CK and fix a couple local\n      variables so that works.\n    * dwarf_ranges.c: Remove trailing whitespace.\n    * dwarf_util.c: Remove trailing whitespace.\n2020-04-24: David Anderson\n    * dwarf_die_deliv.c: Now using wrappers so that\n      errors do not lead to a temporary leak.\n    * dwarf_global.c: Now ensures that an error\n      in reading globals does not lead to temporary\n      leaks that rely on dwarf_finish() to clean up.\n2020-04-24: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,\n      dwarf_names_new.h, libdwarf_version.h: \n      updated version string.\n2020-04-23: David Anderson\n    * dwarf_arange.c: Using new wrapper() code\n      so that the reader macros do not interfere\n      with doing appropriate dealloc.\n    * dwarf_util.c: Implement new wrapper functions\n      _dwarf_read_unaligned_ck_wrapper() and\n      _dwarf_read_area_length_ck_wrapper.\n    * dwarf_util.h: Declare the new functions.\n2020-04-22: David Anderson\n    * libdwarf.h.in: Added DW_DLE_USER_DECLARED_ERROR\n      and the dwarf_error_creation() function that creates\n      the Dwarf_Error.\n    * generated_libdwarf.h.in: Regenerated.\n2020-04-20: David Anderson\n    * dwarf_form.c: Split a too-long comment line.\n2020-04-16: David Anderson\n    * dwarf_line_table_reader_common.h: more detailed error\n      messages in a few cases.\n    * dwarf_print_lines.c: Added dwarf_check_lineheader_b()\n      as dwarf_check_lineheader() did not return error\n      details.\n    * libdwarf.h.in: defined prototype for \n      dwarf_check_lineheader_b();\n    * generated_libdwarf.h.in: regenerated.\n2020-04-14: David Anderson\n    * libdwarf2.1.mm: Fixed wording \n      of dwarf_get_fde_info_for_cfa_reg3_b()\n      which had the 1/0 value of has_more_rows\n      backwards.\n      Corrected several misspellings. \n    * libdwarf2.1.pdf: Regenerated, v2.91.\n2020-04-13: David Anderson\n    * dwarf_abbrev.c: Various errors now show additional detail\n      about what exactly is wrong.\n2020-04-11: David Anderson\n    * dwarf_die_deliv.c,dwarf_xu_index.c: Each had\n      a single trailing space. Removed. \n2020-04-11: David Anderson\n    * dwarf_global.c: Changed break to continue\n      so we don't stop the loop too early, yet\n      still avoid leaking a useless.\n2020-04-10: David Anderson\n    * debug-cu-tu-indexes-layout.odg: The Split-Dwarf\n      (aka debugfission) table layout is simple, but\n      this is an introduction to the \n      layout of the arrays.  LibreOffice Draw document.\n    * dwarf_init_finish.c: Small enhancements of error messages.\n    * dwarf_util.c: Reformatted a macro here\n      (READ_UNALIGNED_CK) so the lines are not so long\n      and the backslashes are easily seen as complete.\n    * dwarf_xu_index.c: There was some confusion in the\n      code which prevented it from working.\n      Interfaces remain the same, but things work now.\n      The first part is a 20 line (or so) explanation\n      of some of the internal handling of the tables.\n      Now things work. Many error messges get\n      detailed information.\n    * dwarf_xu_index.h: Added new fields and relabeled\n      the N U S fields in the header to match the\n      DWARF5 standard.\n    * libdwarf2.1.mm: Rev 2.90 10 April 2020.\n      A little bit of reformatting to shorten the lines\n      here. Has little or no effect on the output pdf.\n      corrected the wording about the\n      dwarf_get_xu_section_offset() function. \n    * libdwarf2.1.pdf: Regenerated Rev 2.90.\n2020-04-07: David Anderson\n    * dwarf_alloc.c: Deleted useless comment and added\n      a blank line to separate declarations from code.\n    * dwarf_frame2.c:  Fixed a too-long line.\n    * dwarf_query.c: Now DW_DLE_ALLOC_FAIL has a meaningful\n      error string attached.\n    * dwarf_util.c: Added comment before CHECK_DIE macro.\n2020-04-03: David Anderson\n    * dwarf_arange.c: Deleted a useless blank line.\n      Removed useless () around a return value.\n2020-04-03: David Anderson\n    *  dwarf_form.c,dwarf_frame2.c,dwarf_query.c: Fix indents and\n       remove trailing whitespace.\n2020-04-02: David Anderson\n    * dwarf_die_deliv.c: Better text printed for an address size error\n      including reporting the actual addrss-size found by libdwarf.\n    * dwarf_frame2.c: Deleted a static version of\n      _dwarf_create_address_size_dwarf_error() and use\n      the global one. Revised some error messages to\n      have specific details. Each instance of\n      DW_DLE_DEBUG_FRAME_LENGTH_BAD now reports something\n      specific about each case.\n    * dwarf_opaque.h: Added a declaration of\n      _dwarf_create_address_size_dwarf_error().\n2020-03-28: David Anderson\n    * dwarf_global.c: dwarf_return_empty_pubnames() revised\n      so it cannot fail.\n    * libdwarf.h.in: Revised comments attached to\n      dwarf_return_empty_pubnames() function prototype.\n    * generated_libdwarf.h.in: Regenerated.\n2020-03-27: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,\n      dwarf_names_new.h, libdwarf_version.h: \n      updated version string.\n2020-03-27: David Anderson\n    * dwarf_form.c,dwarf_query.c,dwarf_ranges.c: Improve various\n      error messages with specific information about the\n      error.\n2020-03-27: David Anderson\n    * dwarf_ranges.c: Properly detect end-of-section\n      again.\n2020-03-27: David Anderson\n    * dwarf_alloc.c, dwarf_form.c: Removed\n      trailing whitespace.\n2020-03-27: David Anderson\n    * dwarf_alloc.c: The (static) list of DW_DLA \n      initializers was very messy and hard to read.\n      Cleaned up its appearance.`\n      Added the 'type' to the fields that -DDEBUG\n      prints.\n    * dwarf_form.c,dwarf_util.c: The DW_DLE_FORM_BLOCK_LENGTH_ERROR\n      error messages now have a longer and more\n      complete error string.\n2020-03-26: David Anderson\n    * dwarf_alloc.c,dwarf_error.c: Changed spelling of the\n      -DDEBUG prefixes to \"libdwarfdetector\"\n    * libdwarf2.1.mm: Documented hints on finding libdwarf\n      and libdwarf-caller memory leaks. Section 6.33\n    * libdwarf2.1.pdf: Regenerated, version 2.89\n2020-03-26: David Anderson\n    * dwarf_alloc.c,dwarf_error.c:  Now DEBUG can be turned on via\n      CFLAGS at configure time. Or left off by default.\n      Changed all the fprintf here (debug stuff) to\n      do printf instead.\n    * dwarf_die_deliv.c,dwarf_frame2.c: Altered the \n      DW_DLE_ADDRESS_SIZE_ERROR\n      strings so the 3 cases can be distinquished easily\n      (just a convenience for debugging).\n    * dwarf_globals.c: Removed one superfluous ().\n    * dwarf_query.c: Reforatted lgpl text for shorter\n      lines (no change in the content).\n      Removed one superfluous ().\n2020-03-25: David Anderson\n    * dwarf_alloc.c, dwarf_error.c: Revised the debug\n      output created if DEBUG is defined.\n2020-03-25: David Anderson\n    * dwarf_die_deliv.c: Fix trailing whitespace.\n    * dwarf_frame2.c:    Fix trailing whitespace.\n2020-03-24: David Anderson\n    * dwarf_line.c: Deleted useless blank line.\n2020-03-24: David Anderson\n    * dwarf_alloc.c: Now with #ifdef DEBUG of debug messages in\n      various places as thise get needed over and over.\n    * dwarf_die_deliv.c: Working toward complete dealloc\n      of resources to eliminate the  dependence on de_alloc_tree.\n    * dwarf_error.c: #if 0 a debug message.\n    * dwarf_form.c: Remove superflous ().\n    * dwarf_global.c(_dwarf_internal_globals_dealloc):\n      Recreated and documented critical dealloc code\n      so Dwarf_Global_Context gets dealloc-c.\n    * dwarf_line.c: Add a return DW_DLV_ERROR after\n      an error Dwarf_Error is created..\n2020-03-23: David Anderson\n    * dwarf_die_deliv.c,dwarf_frame2.c: Some error messages\n      are now far more precise (showing values).\n    * dwarf_global.c: Correcting leakage and making\n      some error messages more precise.\n    * dwarf_print_lines.c: Correcting leakages.\n    * dwarf_pubtypes.c: Minor readability change.\n2020-03-21: David Anderson\n    * dwarf_abbrev.c Move leb wrapper functions to dwarf_util.[ch]:\n      and rename as _dwarf.....\n      Make certain error conditions more explicit (better\n      text in the error string).\n    * dwarf_die_deliv.c: Move leb wrapper functions to dwarf_util.[ch]\n      and rename as _dwarf.....\n    * dwarf_frame2.c: Add {} for the few 'if' missing same.\n    * dwarf_line.c: In case of form error make the error\n      text more useful.\n    * dwarf_query.c: Move leb wrapper functions to dwarf_util.[ch]\n      and rename as _dwarf.....\n    * dwarf_util.c, dwarf_util.h: Add the renamed\n      _dwarf_leb128_uword_wrapper() and\n      _dwarf_leb128_sword_wrapper() for general use\n      where better error messages are advisable.\n    * dwarf_init_finish.c: Removed a single trailing blank.\n    * libdwarf.h.in: Removed trailing spaces.\n    * generated_libdwarf.h.in: Regenerated.\n2020-03-20: David Anderson\n    * dwarf_arange.c: In case of error, was failing\n      to clean up all allocations.\n    * dwarf_macro5.c: Was preventing some dwarf_dealloc().\n      Fixed.\n2020-03-19: David Anderson\n    * dwarf_abbrev.c: Generates a more useful and specific\n      message in case a TAG is corrupt.\n    * dwarf_line.c: After dealloc assign 0 to the pointer.\n    * dwarf_die_deliv.c: Improved insert_into_context_list()\n      for clarity and correctness. \n    * dwarf_error.c: Removed a couple \"!= NULL\" in if\n      conditions.\n    * dwarf_query.c: Uses local variable now to\n      satisfy the usual libdwarf convention that in case\n      of DW_DLV_NO_ENTRY or DW_DLV_ERROR only the\n      Dwarf_Error argument is altered, not other\n      pointer args.\n    * dwarf_util.h: Declaration for _dwarf_format_TAG_err_msg()\n    * dwarf_util.c: Generates a more useful and specific\n      message in in _dwarf_format_TAG_err_msg()\n      in case a TAG is corrupt.\n2020-03-18: David Anderson\n    * dwarf_die_deliv.c: Rewrote the function that\n      keeps the cu_context list in the proper order.\n      For clarity and correctness.\n2020-03-16: David Anderson\n    * dwarf_alloc.c: A recent change had the wrong\n      test during initial Dwarf_Debug\n      struct setup meaning dwarf_finish() was not cleaning\n      up allocations. This made the runtimes better\n      than they should be. Important correction here.\n    * dwarf_die_deliv.c: Drop use of the dwarf_dieoff()\n      context list, that was never appropriate. Now\n      again with one list.\n    * dwarf_opaque.h: Removed a list of Dwarf_CU_Contexts,\n      that was never correct to have dwarf_offdie maintain\n      a list separate from iterating through CUs.\n    * dwarf_query.c (dwarf_attrlist): Add a \n      dwarf_dealloc on abbrev_list\n      in an error case.\n    * dwarf_util.c: Make the lines look a tiny bit\n      better avoiding too-long lines.\n2020-03-15: David Anderson\n    * dwarf_frame2.c: On an internal error (bad dwarf)\n      the necessary cleanup function was not being called\n      in two places.\n2020-03-15: David Anderson\n    * dwarf_alloc.c: Now with configure-time options\n      for tracking the alloc/dealloc actions in detail.\n2020-03-15: David Anderson\n    * dwarf_alloc.c: Now with the de_alloc_tree tests\n      in final form. Respecting dwarf_set_de_alloc_flag().\n2020-03-14: David Anderson\n    * dwarf_alloc.c: Now adds an optional DEBUG\n      macro that libdwarf developers may find useful.\n      Revised the dwarf_dealloc code to not require de_alloc_tree.\n    * dwarf_line.c: Now dwarf_srcfiles() and dwarf_filename()\n      always allocate DW_DLA_STRINGS. Whereas earlier some\n      of the strings were actually in a .debug section,\n      not allocated. \n    * libdwarf2.1.mm: Now dwarf_diename()  and\n      dwarf_die_text are documented\n      as returning static strings that are not be be\n      freed or dwarf_dealloc'd.  This was always true\n      but the documentation said dwarf_dealloc() was\n      required. Don't use dwarf_dealloc on these returned\n      strings.\n    * libdwarf2.1.pdf: Regenerated, version 2.88\n    * dwarf_loc.c: Was incorrectly passing NULL instead\n      of dbg to _dwarf_get_alloc in a few places.\n    * dwarf_util.c, dwarf_global.c: Now checks more for\n      incomplete setup\n      of an internal structure to avoid calling dwarf_dealloc\n      with NULL as the space to be freed.\n2020-03-13: David Anderson\n    * dwarf_abbrev.c: Remove erroneous dwarf_dealloc\n      introduced yesterday. Caused a coredump\n      in FreeBSD 64bit dwarfdump testing.\n    * dwarfstring.c: Introduced an extra zero initializer in\n      the dwarfstring_destructor() as safe and harmless.\n2020-03-12: David Anderson\n    * dwarf_abbrev.c: Use a wrapper on macro\n      DECODE_LEB128_UWORD_CK\n      so we can dwarf_dealloc in case of a problem.\n      And be more thorough in various places\n      for those dwarf_dealloc.\n2020-03-12: David Anderson\n    * dwarf_die_deliv.c:  A local function now explicitly\n      static (_dwarf_siblingof_internal). \n      Following dwarf_dealloc of cudie  we assign 0 to it.`\n      New function local_dealloc_cu_context() enables\n      accurate and full dealloc of a cu context\n      (which means there was some error fount) in\n      an easy and complete way.\n      local_attrlist_dealloc() does similarly for attrlists.\n      A DECODE_LEB128_UWORD_CK now in a wrapper so on error\n      we can dwarf_dealloc a DIE.\n    * dwarf_macro5.c: Now dwarf_dealloc_macro_context() is safe\n      if called with a null argument (and in that case there\n      is nothing to do).\n    * dwarf_opaque.h: Removed _dwarf_siblingof_internal()\n      from the declared functions.\n2020-03-12: David Anderson\n    * dwarf_alloc.h, dwarf_opaque.h: Removed trailing whitespace.\n      Shortened the lines of the LGPL text (the text\n      is unchanged).\n2020-03-12: David Anderson\n    * dwarf_str_offsets.c,dwarf_util.c: Removed trailing whitespace\n      and fixed indent mistakes.\n2020-03-12: David Anderson\n    * dwarf_query.c: Adds wrapper code around some\n      dwarf_util.h macros\n      so in case of a serious DWARF error we can\n      free locally allocated things.\n2020-03-12: David Anderson\n    * dwarf_errmsg_list.h: Corrected DW_DLE_STR_OFFSETS_EXTRA_BYTES\n      text. The error messages have more detail due to \n      the dwarf_str_offsets.c changes below, so fixed\n      the string here.\n2020-03-12: David Anderson\n    * dwarf_macro5.c: Do proper dwarf_dealloc, avoiding\n      a pointless dependency on de_alloc_tree freeing \n      things.\n2020-03-12: David Anderson\n    * dwarf_alloc.c: Minor cleanup that assigns\n      zero after dwarf_dealloc so dead pointers\n      not left around.\n2020-03-12: David Anderson\n    * dwarf_str_offsets.c: Improve messages in case of\n      a serious DWARF error, reporting what is wrong\n      more precisely and allowing a few bytes of all-zero-bits\n      to be allowed at end of section (no error needed).\n2020-03-12: David Anderson\n    * dwarf_util.c: Revise too-long lines and checks for NULL\n      pointers for moderm readability.\n      Improve _dwarf_free_abbrev_hash_table_contents() so\n      it can safely free an incompletely set up hash table.\n2020-03-09: David Anderson\n    * dwarf_alloc.c: Implements optional (at run time)\n      reduced use of the de_alloc_tree search tree\n      as a performance enhancement (see libdwarf2.1.mm/pdf).\n    * dwarf_alloc.h: Declares _dwarf_alloc_tree_counts(),\n      a new hidden function.\n    * libdwarf_version.h: New date string\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h: New date string so regenerated\n      these.\n    * libdwarf.h.in: New function dwarf_set_de_alloc_flag()\n      declared.\n    * generated_libdwarf.h.in: Regenerated\n2020-03-02: David Anderson\n    * dwarf_print_lines.c: Removed one-line #if 0\n      code that serves no purpose.\n2020-02-25: David Anderson\n    * dwarf_print_lines.c: Removed space character just before newline\n      as it  has no useful prupose. 3 places.\n2020-02-25: David Anderson\n    * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,\n      dwarf_names_new.h:\n      libdwarf_version.h: updated version string.\n2020-02-25: David Anderson\n    * dwarf_line_table_reader_common.h: Now with dwarfstring\n      containers in local scopes and easily evaluated\n      as to lifetime and correctness.\n2020-02-25: David Anderson\n    * dwarf_elfread.c: Deleted a #if 0 ...#endif few lines.\n    * dwarf_line.c: Fixed trailing whitespace.\n    * dwarf_line_table_reader_common.h: Removed all use of the\n      old dwarf_printf varargs code.  Instead using dwarfstring\n      and dwarfstring_append_printf_i() etc.\n      And a far simpler _dwarf_printf().\n      No longer any sprintf/snprintf/vsnprintf here.\n    * dwarf_opaque.h: Remove trailing whitespace.\n    * dwarf_print_lines.c: Removed all use of the\n      old dwarf_printf varargs code.\n      No longer any sprintf/snprintf/vsnprintf here.\n    * dwarf_util.c: Delete unused buffersetsize function.\n      Delete now-unuised dwarf_printf()\n    * dwarfstring.c: Now using TRUE FALSE, not DW_DLV anything.\n      No one will be testing the integer return value anyway.\n      Fixed the code where %-4s was truncating if the string\n      to be processed was longer than 4 characters.\n    * dwarfstring.h: Added commentary.\n    * test_dwarfstring.c: New testcase for dwarfstring\n2020-02-21: David Anderson\n    * dwarf_arange.c,dwarf_debuglink.c,dwarf_frame2.c:\n      removed the last sprintf/snprintf, changed to \n      use dwarfstring.h functions.\n2020-02-18: David Anderson\n    * dwarf_line.c: Added free() calls to delete_line_context_itself\n      to avoid a leak that was created in last commit..\n    * dwarf_line.h: Deleted a now-spurious comment.\n    * dwarf_line_table_reader_common.h: Removed an == NULL\n      comparison in favor of a !filename_entry_pairs.\n2020-02-16: David Anderson\n    * libdwarf2.1.mm: Now explains how dwarf_srcfiles()\n      name arrays differ in DWARF5 from earlier\n      debug_info versions. So callers can use\n      the srcfiles array properly.\n    * libdwarf2.1.pdf: Now version 2.87, dated 16 February 2020.\n    * dwarf_line.c, dwarf_line.h,dwarf_print_lines.c,\n      dwarf_line_table_reader_common.h: Recording DW5 line table\n      header data more fully so lines print verbose\n      prints more of the actual line table header.\n2020-02-15: David Anderson\n    * dwarf_elf_access.c,dwarf_init_finish.c: With libelf\n      in use there was a mistake that broke dumping some objects that\n      needed relocations.\n    * dwarf_opaque.h: Corrected a is_rela to r_is_rela\n2020-02-13: David Anderson\n    * dwarf_elfread.c,dwarf_errmsg_list.h: Removed\n      trailing whitespace.\n2020-02-13: David Anderson\n    *  libdwarf_version.h: New version string \n    *  dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n       dwarf_names_new.h: Regenerated with new\n       version string.\n2020-02-13: David Anderson\n     * libdwarf/libdwarf.h.in: Added a new error code to\n       properly distinguish between distinct elf section\n       header issues related to relocations versus\n       other section header issues.\n     * libdwarf/generated_libdwarf.h.in: regenerated\n\n    * dwarf_elf_access.c: Adding local READ_UNALIGNED_SAFE\n      so we can do libelf relocations properly; .rel and .rela.\n    * dwarf_elf_defines.h: Adding R_386_PC32 to the \n      applicable relocation sets.\n    * dwarf_elf_load_headers.c: Now we deal with .rel.\n      and .rela. relocations for better completeness.\n      Removed some code duplication and complexity\n      too.\n    * dwarf_elf_rel_detector.c: Deals with R_386_PC32 now.\n    * dwarf_elfread.c: Add READ_UNALIGNED_SAFE so we can\n      do no-libelf relocations properly; .rel and .rela\n    * dwarf_elfread.h: Added gr_is_rela field and\n      two enums RelocRela and RelocOffsetSize so we have\n      type-safety in the argument lists.\n    * dwarf_init_finish.c: A new function ensures we\n      skip various sections we know we do not want to\n      look at.\n    * dwarf_opaque.h: Declare _dwarf_ignorethissection()\n      so libelf and non-libelf can ignore the unwanted\n      sections.\n    *  dwarf_errmsg_list.h: Entry added for the new\n       DW_DLE error code.\n2020-02-11: David Anderson\n    * dwarf_elf_access.c,dwarf_line_table_reader_common.h,\n      dwarf_tied_decls.h:\n      removed trailing whitespace and final blank line.\n2020-02-11: David Anderson\n    * dwarf_init_finish.c: Removed code that was #if 0 #endif\n2020-02-10: David Anderson\n    * dwarf_elf_access.c: Now allows for .rel and .rela.\n    * dwarf_elf_defines.h: Now allows for .rel and .rela.\n    * dwarf_init_finish.c: Now allows for .rel and .rela.\n    * dwarf_opaque.h: Adding dss_is_rela so we can\n      process .rel. sections too.\n2020-01-25: David Anderson\n    * dwarf_form.c: DW_FORM_rnglistx was ommitted from a switch statement.\n      Adding it in fixed the resulting errors in a DWARF5 object file\n      built by clang 9.0.0.0\n2020-01-16: David Anderson\n    * dwarf_alloc.c,dwarf_die_deliv.c,dwarf_form.a,\n      dwarf_query.c,dwarfstring.c,\n      pro_reloc.c,pro_reloc_stream.c,pro_reloc_symbolic.c,\n      pro_section.c,pro_types.c,pro_vars.c,pro_weaks.c,\n      test_dwarfstring.c: Fixed indentations and\n      removed trailing whitespace.\n    * dwarf_xu_index.c: Ensure local Dwarf_Sig8 variables\n      are always initialized. Does not fix any bug but\n      does make it easier to read the code.\n      Fixes indentation and removes trailing whitespace too.\n2020-01-14: David Anderson\n    * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,\n      dwarf_names_new.h,libdwarf_version.h: Updated version string.\n2020-01-05: David Anderson\n    * dwarf_query.c(dwarf_offset_list): Coverity Scan CID 206598.\n      Now checks for DW_DLV_ERROR where it failed to do so before,\n      and returns an error instead of letting it slip through.\n2020-01-03: David Anderson\n    * dwarf_load_elf_headers.c(dwarf_elf_load_rela_32):\n      Coverity Scan uncovered a memory leak in one\n      case. CID 206524\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#include \"dwarf.h\"\n\n#include \"libdwarf.h\"\n\n/* ARGSUSED */\nint\ndwarf_get_TAG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_TAG_array_type:\n        *s_out = \"DW_TAG_array_type\";\n        return DW_DLV_OK;\n    case DW_TAG_class_type:\n        *s_out = \"DW_TAG_class_type\";\n        return DW_DLV_OK;\n    case DW_TAG_entry_point:\n        *s_out = \"DW_TAG_entry_point\";\n        return DW_DLV_OK;\n    case DW_TAG_enumeration_type:\n        *s_out = \"DW_TAG_enumeration_type\";\n        return DW_DLV_OK;\n    case DW_TAG_formal_parameter:\n        *s_out = \"DW_TAG_formal_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_declaration:\n        *s_out = \"DW_TAG_imported_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_label:\n        *s_out = \"DW_TAG_label\";\n        return DW_DLV_OK;\n    case DW_TAG_lexical_block:\n        *s_out = \"DW_TAG_lexical_block\";\n        return DW_DLV_OK;\n    case DW_TAG_member:\n        *s_out = \"DW_TAG_member\";\n        return DW_DLV_OK;\n    case DW_TAG_pointer_type:\n        *s_out = \"DW_TAG_pointer_type\";\n        return DW_DLV_OK;\n    case DW_TAG_reference_type:\n        *s_out = \"DW_TAG_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_compile_unit:\n        *s_out = \"DW_TAG_compile_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_string_type:\n        *s_out = \"DW_TAG_string_type\";\n        return DW_DLV_OK;\n    case DW_TAG_structure_type:\n        *s_out = \"DW_TAG_structure_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subroutine_type:\n        *s_out = \"DW_TAG_subroutine_type\";\n        return DW_DLV_OK;\n    case DW_TAG_typedef:\n        *s_out = \"DW_TAG_typedef\";\n        return DW_DLV_OK;\n    case DW_TAG_union_type:\n        *s_out = \"DW_TAG_union_type\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_parameters:\n        *s_out = \"DW_TAG_unspecified_parameters\";\n        return DW_DLV_OK;\n    case DW_TAG_variant:\n        *s_out = \"DW_TAG_variant\";\n        return DW_DLV_OK;\n    case DW_TAG_common_block:\n        *s_out = \"DW_TAG_common_block\";\n        return DW_DLV_OK;\n    case DW_TAG_common_inclusion:\n        *s_out = \"DW_TAG_common_inclusion\";\n        return DW_DLV_OK;\n    case DW_TAG_inheritance:\n        *s_out = \"DW_TAG_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_inlined_subroutine:\n        *s_out = \"DW_TAG_inlined_subroutine\";\n        return DW_DLV_OK;\n    case DW_TAG_module:\n        *s_out = \"DW_TAG_module\";\n        return DW_DLV_OK;\n    case DW_TAG_ptr_to_member_type:\n        *s_out = \"DW_TAG_ptr_to_member_type\";\n        return DW_DLV_OK;\n    case DW_TAG_set_type:\n        *s_out = \"DW_TAG_set_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subrange_type:\n        *s_out = \"DW_TAG_subrange_type\";\n        return DW_DLV_OK;\n    case DW_TAG_with_stmt:\n        *s_out = \"DW_TAG_with_stmt\";\n        return DW_DLV_OK;\n    case DW_TAG_access_declaration:\n        *s_out = \"DW_TAG_access_declaration\";\n        return DW_DLV_OK;\n    case DW_TAG_base_type:\n        *s_out = \"DW_TAG_base_type\";\n        return DW_DLV_OK;\n    case DW_TAG_catch_block:\n        *s_out = \"DW_TAG_catch_block\";\n        return DW_DLV_OK;\n    case DW_TAG_const_type:\n        *s_out = \"DW_TAG_const_type\";\n        return DW_DLV_OK;\n    case DW_TAG_constant:\n        *s_out = \"DW_TAG_constant\";\n        return DW_DLV_OK;\n    case DW_TAG_enumerator:\n        *s_out = \"DW_TAG_enumerator\";\n        return DW_DLV_OK;\n    case DW_TAG_file_type:\n        *s_out = \"DW_TAG_file_type\";\n        return DW_DLV_OK;\n    case DW_TAG_friend:\n        *s_out = \"DW_TAG_friend\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist:\n        *s_out = \"DW_TAG_namelist\";\n        return DW_DLV_OK;\n    case DW_TAG_namelist_item:\n        *s_out = \"DW_TAG_namelist_item\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2c. DW_TAG_namelist_items */\n    case DW_TAG_packed_type:\n        *s_out = \"DW_TAG_packed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_subprogram:\n        *s_out = \"DW_TAG_subprogram\";\n        return DW_DLV_OK;\n    case DW_TAG_template_type_parameter:\n        *s_out = \"DW_TAG_template_type_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2f. DW_TAG_template_type_param */\n    case DW_TAG_template_value_parameter:\n        *s_out = \"DW_TAG_template_value_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x30. DW_TAG_template_value_param */\n    case DW_TAG_thrown_type:\n        *s_out = \"DW_TAG_thrown_type\";\n        return DW_DLV_OK;\n    case DW_TAG_try_block:\n        *s_out = \"DW_TAG_try_block\";\n        return DW_DLV_OK;\n    case DW_TAG_variant_part:\n        *s_out = \"DW_TAG_variant_part\";\n        return DW_DLV_OK;\n    case DW_TAG_variable:\n        *s_out = \"DW_TAG_variable\";\n        return DW_DLV_OK;\n    case DW_TAG_volatile_type:\n        *s_out = \"DW_TAG_volatile_type\";\n        return DW_DLV_OK;\n    case DW_TAG_dwarf_procedure:\n        *s_out = \"DW_TAG_dwarf_procedure\";\n        return DW_DLV_OK;\n    case DW_TAG_restrict_type:\n        *s_out = \"DW_TAG_restrict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_interface_type:\n        *s_out = \"DW_TAG_interface_type\";\n        return DW_DLV_OK;\n    case DW_TAG_namespace:\n        *s_out = \"DW_TAG_namespace\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_module:\n        *s_out = \"DW_TAG_imported_module\";\n        return DW_DLV_OK;\n    case DW_TAG_unspecified_type:\n        *s_out = \"DW_TAG_unspecified_type\";\n        return DW_DLV_OK;\n    case DW_TAG_partial_unit:\n        *s_out = \"DW_TAG_partial_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_imported_unit:\n        *s_out = \"DW_TAG_imported_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_mutable_type:\n        *s_out = \"DW_TAG_mutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_condition:\n        *s_out = \"DW_TAG_condition\";\n        return DW_DLV_OK;\n    case DW_TAG_shared_type:\n        *s_out = \"DW_TAG_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_type_unit:\n        *s_out = \"DW_TAG_type_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_rvalue_reference_type:\n        *s_out = \"DW_TAG_rvalue_reference_type\";\n        return DW_DLV_OK;\n    case DW_TAG_template_alias:\n        *s_out = \"DW_TAG_template_alias\";\n        return DW_DLV_OK;\n    case DW_TAG_coarray_type:\n        *s_out = \"DW_TAG_coarray_type\";\n        return DW_DLV_OK;\n    case DW_TAG_generic_subrange:\n        *s_out = \"DW_TAG_generic_subrange\";\n        return DW_DLV_OK;\n    case DW_TAG_dynamic_type:\n        *s_out = \"DW_TAG_dynamic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_atomic_type:\n        *s_out = \"DW_TAG_atomic_type\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site:\n        *s_out = \"DW_TAG_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_call_site_parameter:\n        *s_out = \"DW_TAG_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_skeleton_unit:\n        *s_out = \"DW_TAG_skeleton_unit\";\n        return DW_DLV_OK;\n    case DW_TAG_immutable_type:\n        *s_out = \"DW_TAG_immutable_type\";\n        return DW_DLV_OK;\n    case DW_TAG_lo_user:\n        *s_out = \"DW_TAG_lo_user\";\n        return DW_DLV_OK;\n    case DW_TAG_MIPS_loop:\n        *s_out = \"DW_TAG_MIPS_loop\";\n        return DW_DLV_OK;\n    case DW_TAG_HP_array_descriptor:\n        *s_out = \"DW_TAG_HP_array_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_format_label:\n        *s_out = \"DW_TAG_format_label\";\n        return DW_DLV_OK;\n    case DW_TAG_function_template:\n        *s_out = \"DW_TAG_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_class_template:\n        *s_out = \"DW_TAG_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_BINCL:\n        *s_out = \"DW_TAG_GNU_BINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_EINCL:\n        *s_out = \"DW_TAG_GNU_EINCL\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_template_template_parameter:\n        *s_out = \"DW_TAG_GNU_template_template_parameter\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x4106. DW_TAG_GNU_template_template_param */\n    case DW_TAG_GNU_template_parameter_pack:\n        *s_out = \"DW_TAG_GNU_template_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_formal_parameter_pack:\n        *s_out = \"DW_TAG_GNU_formal_parameter_pack\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site:\n        *s_out = \"DW_TAG_GNU_call_site\";\n        return DW_DLV_OK;\n    case DW_TAG_GNU_call_site_parameter:\n        *s_out = \"DW_TAG_GNU_call_site_parameter\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_function_template:\n        *s_out = \"DW_TAG_SUN_function_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_class_template:\n        *s_out = \"DW_TAG_SUN_class_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_struct_template:\n        *s_out = \"DW_TAG_SUN_struct_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_union_template:\n        *s_out = \"DW_TAG_SUN_union_template\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_indirect_inheritance:\n        *s_out = \"DW_TAG_SUN_indirect_inheritance\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_codeflags:\n        *s_out = \"DW_TAG_SUN_codeflags\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_memop_info:\n        *s_out = \"DW_TAG_SUN_memop_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_omp_child_func:\n        *s_out = \"DW_TAG_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_rtti_descriptor:\n        *s_out = \"DW_TAG_SUN_rtti_descriptor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor_info:\n        *s_out = \"DW_TAG_SUN_dtor_info\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_dtor:\n        *s_out = \"DW_TAG_SUN_dtor\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_f90_interface:\n        *s_out = \"DW_TAG_SUN_f90_interface\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_fortran_vax_structure:\n        *s_out = \"DW_TAG_SUN_fortran_vax_structure\";\n        return DW_DLV_OK;\n    case DW_TAG_SUN_hi:\n        *s_out = \"DW_TAG_SUN_hi\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_mwa_circ_type:\n        *s_out = \"DW_TAG_ALTIUM_mwa_circ_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rev_carry_type:\n        *s_out = \"DW_TAG_ALTIUM_rev_carry_type\";\n        return DW_DLV_OK;\n    case DW_TAG_ALTIUM_rom:\n        *s_out = \"DW_TAG_ALTIUM_rom\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_shared_type:\n        *s_out = \"DW_TAG_upc_shared_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_strict_type:\n        *s_out = \"DW_TAG_upc_strict_type\";\n        return DW_DLV_OK;\n    case DW_TAG_upc_relaxed_type:\n        *s_out = \"DW_TAG_upc_relaxed_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_kanji_type:\n        *s_out = \"DW_TAG_PGI_kanji_type\";\n        return DW_DLV_OK;\n    case DW_TAG_PGI_interface_block:\n        *s_out = \"DW_TAG_PGI_interface_block\";\n        return DW_DLV_OK;\n    case DW_TAG_hi_user:\n        *s_out = \"DW_TAG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_children_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_children_no:\n        *s_out = \"DW_children_no\";\n        return DW_DLV_OK;\n    case DW_children_yes:\n        *s_out = \"DW_children_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FORM_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FORM_addr:\n        *s_out = \"DW_FORM_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_block2:\n        *s_out = \"DW_FORM_block2\";\n        return DW_DLV_OK;\n    case DW_FORM_block4:\n        *s_out = \"DW_FORM_block4\";\n        return DW_DLV_OK;\n    case DW_FORM_data2:\n        *s_out = \"DW_FORM_data2\";\n        return DW_DLV_OK;\n    case DW_FORM_data4:\n        *s_out = \"DW_FORM_data4\";\n        return DW_DLV_OK;\n    case DW_FORM_data8:\n        *s_out = \"DW_FORM_data8\";\n        return DW_DLV_OK;\n    case DW_FORM_string:\n        *s_out = \"DW_FORM_string\";\n        return DW_DLV_OK;\n    case DW_FORM_block:\n        *s_out = \"DW_FORM_block\";\n        return DW_DLV_OK;\n    case DW_FORM_block1:\n        *s_out = \"DW_FORM_block1\";\n        return DW_DLV_OK;\n    case DW_FORM_data1:\n        *s_out = \"DW_FORM_data1\";\n        return DW_DLV_OK;\n    case DW_FORM_flag:\n        *s_out = \"DW_FORM_flag\";\n        return DW_DLV_OK;\n    case DW_FORM_sdata:\n        *s_out = \"DW_FORM_sdata\";\n        return DW_DLV_OK;\n    case DW_FORM_strp:\n        *s_out = \"DW_FORM_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_udata:\n        *s_out = \"DW_FORM_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_addr:\n        *s_out = \"DW_FORM_ref_addr\";\n        return DW_DLV_OK;\n    case DW_FORM_ref1:\n        *s_out = \"DW_FORM_ref1\";\n        return DW_DLV_OK;\n    case DW_FORM_ref2:\n        *s_out = \"DW_FORM_ref2\";\n        return DW_DLV_OK;\n    case DW_FORM_ref4:\n        *s_out = \"DW_FORM_ref4\";\n        return DW_DLV_OK;\n    case DW_FORM_ref8:\n        *s_out = \"DW_FORM_ref8\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_udata:\n        *s_out = \"DW_FORM_ref_udata\";\n        return DW_DLV_OK;\n    case DW_FORM_indirect:\n        *s_out = \"DW_FORM_indirect\";\n        return DW_DLV_OK;\n    case DW_FORM_sec_offset:\n        *s_out = \"DW_FORM_sec_offset\";\n        return DW_DLV_OK;\n    case DW_FORM_exprloc:\n        *s_out = \"DW_FORM_exprloc\";\n        return DW_DLV_OK;\n    case DW_FORM_flag_present:\n        *s_out = \"DW_FORM_flag_present\";\n        return DW_DLV_OK;\n    case DW_FORM_strx:\n        *s_out = \"DW_FORM_strx\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx:\n        *s_out = \"DW_FORM_addrx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup4:\n        *s_out = \"DW_FORM_ref_sup4\";\n        return DW_DLV_OK;\n    case DW_FORM_strp_sup:\n        *s_out = \"DW_FORM_strp_sup\";\n        return DW_DLV_OK;\n    case DW_FORM_data16:\n        *s_out = \"DW_FORM_data16\";\n        return DW_DLV_OK;\n    case DW_FORM_line_strp:\n        *s_out = \"DW_FORM_line_strp\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sig8:\n        *s_out = \"DW_FORM_ref_sig8\";\n        return DW_DLV_OK;\n    case DW_FORM_implicit_const:\n        *s_out = \"DW_FORM_implicit_const\";\n        return DW_DLV_OK;\n    case DW_FORM_loclistx:\n        *s_out = \"DW_FORM_loclistx\";\n        return DW_DLV_OK;\n    case DW_FORM_rnglistx:\n        *s_out = \"DW_FORM_rnglistx\";\n        return DW_DLV_OK;\n    case DW_FORM_ref_sup8:\n        *s_out = \"DW_FORM_ref_sup8\";\n        return DW_DLV_OK;\n    case DW_FORM_strx1:\n        *s_out = \"DW_FORM_strx1\";\n        return DW_DLV_OK;\n    case DW_FORM_strx2:\n        *s_out = \"DW_FORM_strx2\";\n        return DW_DLV_OK;\n    case DW_FORM_strx3:\n        *s_out = \"DW_FORM_strx3\";\n        return DW_DLV_OK;\n    case DW_FORM_strx4:\n        *s_out = \"DW_FORM_strx4\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx1:\n        *s_out = \"DW_FORM_addrx1\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx2:\n        *s_out = \"DW_FORM_addrx2\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx3:\n        *s_out = \"DW_FORM_addrx3\";\n        return DW_DLV_OK;\n    case DW_FORM_addrx4:\n        *s_out = \"DW_FORM_addrx4\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_addr_index:\n        *s_out = \"DW_FORM_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_str_index:\n        *s_out = \"DW_FORM_GNU_str_index\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_ref_alt:\n        *s_out = \"DW_FORM_GNU_ref_alt\";\n        return DW_DLV_OK;\n    case DW_FORM_GNU_strp_alt:\n        *s_out = \"DW_FORM_GNU_strp_alt\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_AT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_AT_sibling:\n        *s_out = \"DW_AT_sibling\";\n        return DW_DLV_OK;\n    case DW_AT_location:\n        *s_out = \"DW_AT_location\";\n        return DW_DLV_OK;\n    case DW_AT_name:\n        *s_out = \"DW_AT_name\";\n        return DW_DLV_OK;\n    case DW_AT_ordering:\n        *s_out = \"DW_AT_ordering\";\n        return DW_DLV_OK;\n    case DW_AT_subscr_data:\n        *s_out = \"DW_AT_subscr_data\";\n        return DW_DLV_OK;\n    case DW_AT_byte_size:\n        *s_out = \"DW_AT_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_bit_offset:\n        *s_out = \"DW_AT_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_bit_size:\n        *s_out = \"DW_AT_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_element_list:\n        *s_out = \"DW_AT_element_list\";\n        return DW_DLV_OK;\n    case DW_AT_stmt_list:\n        *s_out = \"DW_AT_stmt_list\";\n        return DW_DLV_OK;\n    case DW_AT_low_pc:\n        *s_out = \"DW_AT_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_high_pc:\n        *s_out = \"DW_AT_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_language:\n        *s_out = \"DW_AT_language\";\n        return DW_DLV_OK;\n    case DW_AT_member:\n        *s_out = \"DW_AT_member\";\n        return DW_DLV_OK;\n    case DW_AT_discr:\n        *s_out = \"DW_AT_discr\";\n        return DW_DLV_OK;\n    case DW_AT_discr_value:\n        *s_out = \"DW_AT_discr_value\";\n        return DW_DLV_OK;\n    case DW_AT_visibility:\n        *s_out = \"DW_AT_visibility\";\n        return DW_DLV_OK;\n    case DW_AT_import:\n        *s_out = \"DW_AT_import\";\n        return DW_DLV_OK;\n    case DW_AT_string_length:\n        *s_out = \"DW_AT_string_length\";\n        return DW_DLV_OK;\n    case DW_AT_common_reference:\n        *s_out = \"DW_AT_common_reference\";\n        return DW_DLV_OK;\n    case DW_AT_comp_dir:\n        *s_out = \"DW_AT_comp_dir\";\n        return DW_DLV_OK;\n    case DW_AT_const_value:\n        *s_out = \"DW_AT_const_value\";\n        return DW_DLV_OK;\n    case DW_AT_containing_type:\n        *s_out = \"DW_AT_containing_type\";\n        return DW_DLV_OK;\n    case DW_AT_default_value:\n        *s_out = \"DW_AT_default_value\";\n        return DW_DLV_OK;\n    case DW_AT_inline:\n        *s_out = \"DW_AT_inline\";\n        return DW_DLV_OK;\n    case DW_AT_is_optional:\n        *s_out = \"DW_AT_is_optional\";\n        return DW_DLV_OK;\n    case DW_AT_lower_bound:\n        *s_out = \"DW_AT_lower_bound\";\n        return DW_DLV_OK;\n    case DW_AT_producer:\n        *s_out = \"DW_AT_producer\";\n        return DW_DLV_OK;\n    case DW_AT_prototyped:\n        *s_out = \"DW_AT_prototyped\";\n        return DW_DLV_OK;\n    case DW_AT_return_addr:\n        *s_out = \"DW_AT_return_addr\";\n        return DW_DLV_OK;\n    case DW_AT_start_scope:\n        *s_out = \"DW_AT_start_scope\";\n        return DW_DLV_OK;\n    case DW_AT_bit_stride:\n        *s_out = \"DW_AT_bit_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2e. DW_AT_stride_size */\n    case DW_AT_upper_bound:\n        *s_out = \"DW_AT_upper_bound\";\n        return DW_DLV_OK;\n    case DW_AT_abstract_origin:\n        *s_out = \"DW_AT_abstract_origin\";\n        return DW_DLV_OK;\n    case DW_AT_accessibility:\n        *s_out = \"DW_AT_accessibility\";\n        return DW_DLV_OK;\n    case DW_AT_address_class:\n        *s_out = \"DW_AT_address_class\";\n        return DW_DLV_OK;\n    case DW_AT_artificial:\n        *s_out = \"DW_AT_artificial\";\n        return DW_DLV_OK;\n    case DW_AT_base_types:\n        *s_out = \"DW_AT_base_types\";\n        return DW_DLV_OK;\n    case DW_AT_calling_convention:\n        *s_out = \"DW_AT_calling_convention\";\n        return DW_DLV_OK;\n    case DW_AT_count:\n        *s_out = \"DW_AT_count\";\n        return DW_DLV_OK;\n    case DW_AT_data_member_location:\n        *s_out = \"DW_AT_data_member_location\";\n        return DW_DLV_OK;\n    case DW_AT_decl_column:\n        *s_out = \"DW_AT_decl_column\";\n        return DW_DLV_OK;\n    case DW_AT_decl_file:\n        *s_out = \"DW_AT_decl_file\";\n        return DW_DLV_OK;\n    case DW_AT_decl_line:\n        *s_out = \"DW_AT_decl_line\";\n        return DW_DLV_OK;\n    case DW_AT_declaration:\n        *s_out = \"DW_AT_declaration\";\n        return DW_DLV_OK;\n    case DW_AT_discr_list:\n        *s_out = \"DW_AT_discr_list\";\n        return DW_DLV_OK;\n    case DW_AT_encoding:\n        *s_out = \"DW_AT_encoding\";\n        return DW_DLV_OK;\n    case DW_AT_external:\n        *s_out = \"DW_AT_external\";\n        return DW_DLV_OK;\n    case DW_AT_frame_base:\n        *s_out = \"DW_AT_frame_base\";\n        return DW_DLV_OK;\n    case DW_AT_friend:\n        *s_out = \"DW_AT_friend\";\n        return DW_DLV_OK;\n    case DW_AT_identifier_case:\n        *s_out = \"DW_AT_identifier_case\";\n        return DW_DLV_OK;\n    case DW_AT_macro_info:\n        *s_out = \"DW_AT_macro_info\";\n        return DW_DLV_OK;\n    case DW_AT_namelist_item:\n        *s_out = \"DW_AT_namelist_item\";\n        return DW_DLV_OK;\n    case DW_AT_priority:\n        *s_out = \"DW_AT_priority\";\n        return DW_DLV_OK;\n    case DW_AT_segment:\n        *s_out = \"DW_AT_segment\";\n        return DW_DLV_OK;\n    case DW_AT_specification:\n        *s_out = \"DW_AT_specification\";\n        return DW_DLV_OK;\n    case DW_AT_static_link:\n        *s_out = \"DW_AT_static_link\";\n        return DW_DLV_OK;\n    case DW_AT_type:\n        *s_out = \"DW_AT_type\";\n        return DW_DLV_OK;\n    case DW_AT_use_location:\n        *s_out = \"DW_AT_use_location\";\n        return DW_DLV_OK;\n    case DW_AT_variable_parameter:\n        *s_out = \"DW_AT_variable_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_virtuality:\n        *s_out = \"DW_AT_virtuality\";\n        return DW_DLV_OK;\n    case DW_AT_vtable_elem_location:\n        *s_out = \"DW_AT_vtable_elem_location\";\n        return DW_DLV_OK;\n    case DW_AT_allocated:\n        *s_out = \"DW_AT_allocated\";\n        return DW_DLV_OK;\n    case DW_AT_associated:\n        *s_out = \"DW_AT_associated\";\n        return DW_DLV_OK;\n    case DW_AT_data_location:\n        *s_out = \"DW_AT_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_byte_stride:\n        *s_out = \"DW_AT_byte_stride\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x51. DW_AT_stride */\n    case DW_AT_entry_pc:\n        *s_out = \"DW_AT_entry_pc\";\n        return DW_DLV_OK;\n    case DW_AT_use_UTF8:\n        *s_out = \"DW_AT_use_UTF8\";\n        return DW_DLV_OK;\n    case DW_AT_extension:\n        *s_out = \"DW_AT_extension\";\n        return DW_DLV_OK;\n    case DW_AT_ranges:\n        *s_out = \"DW_AT_ranges\";\n        return DW_DLV_OK;\n    case DW_AT_trampoline:\n        *s_out = \"DW_AT_trampoline\";\n        return DW_DLV_OK;\n    case DW_AT_call_column:\n        *s_out = \"DW_AT_call_column\";\n        return DW_DLV_OK;\n    case DW_AT_call_file:\n        *s_out = \"DW_AT_call_file\";\n        return DW_DLV_OK;\n    case DW_AT_call_line:\n        *s_out = \"DW_AT_call_line\";\n        return DW_DLV_OK;\n    case DW_AT_description:\n        *s_out = \"DW_AT_description\";\n        return DW_DLV_OK;\n    case DW_AT_binary_scale:\n        *s_out = \"DW_AT_binary_scale\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_scale:\n        *s_out = \"DW_AT_decimal_scale\";\n        return DW_DLV_OK;\n    case DW_AT_small:\n        *s_out = \"DW_AT_small\";\n        return DW_DLV_OK;\n    case DW_AT_decimal_sign:\n        *s_out = \"DW_AT_decimal_sign\";\n        return DW_DLV_OK;\n    case DW_AT_digit_count:\n        *s_out = \"DW_AT_digit_count\";\n        return DW_DLV_OK;\n    case DW_AT_picture_string:\n        *s_out = \"DW_AT_picture_string\";\n        return DW_DLV_OK;\n    case DW_AT_mutable:\n        *s_out = \"DW_AT_mutable\";\n        return DW_DLV_OK;\n    case DW_AT_threads_scaled:\n        *s_out = \"DW_AT_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_explicit:\n        *s_out = \"DW_AT_explicit\";\n        return DW_DLV_OK;\n    case DW_AT_object_pointer:\n        *s_out = \"DW_AT_object_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_endianity:\n        *s_out = \"DW_AT_endianity\";\n        return DW_DLV_OK;\n    case DW_AT_elemental:\n        *s_out = \"DW_AT_elemental\";\n        return DW_DLV_OK;\n    case DW_AT_pure:\n        *s_out = \"DW_AT_pure\";\n        return DW_DLV_OK;\n    case DW_AT_recursive:\n        *s_out = \"DW_AT_recursive\";\n        return DW_DLV_OK;\n    case DW_AT_signature:\n        *s_out = \"DW_AT_signature\";\n        return DW_DLV_OK;\n    case DW_AT_main_subprogram:\n        *s_out = \"DW_AT_main_subprogram\";\n        return DW_DLV_OK;\n    case DW_AT_data_bit_offset:\n        *s_out = \"DW_AT_data_bit_offset\";\n        return DW_DLV_OK;\n    case DW_AT_const_expr:\n        *s_out = \"DW_AT_const_expr\";\n        return DW_DLV_OK;\n    case DW_AT_enum_class:\n        *s_out = \"DW_AT_enum_class\";\n        return DW_DLV_OK;\n    case DW_AT_linkage_name:\n        *s_out = \"DW_AT_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_bit_size:\n        *s_out = \"DW_AT_string_length_bit_size\";\n        return DW_DLV_OK;\n    case DW_AT_string_length_byte_size:\n        *s_out = \"DW_AT_string_length_byte_size\";\n        return DW_DLV_OK;\n    case DW_AT_rank:\n        *s_out = \"DW_AT_rank\";\n        return DW_DLV_OK;\n    case DW_AT_str_offsets_base:\n        *s_out = \"DW_AT_str_offsets_base\";\n        return DW_DLV_OK;\n    case DW_AT_addr_base:\n        *s_out = \"DW_AT_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_rnglists_base:\n        *s_out = \"DW_AT_rnglists_base\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_id:\n        *s_out = \"DW_AT_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_dwo_name:\n        *s_out = \"DW_AT_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_reference:\n        *s_out = \"DW_AT_reference\";\n        return DW_DLV_OK;\n    case DW_AT_rvalue_reference:\n        *s_out = \"DW_AT_rvalue_reference\";\n        return DW_DLV_OK;\n    case DW_AT_macros:\n        *s_out = \"DW_AT_macros\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_calls:\n        *s_out = \"DW_AT_call_all_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_source_calls:\n        *s_out = \"DW_AT_call_all_source_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_all_tail_calls:\n        *s_out = \"DW_AT_call_all_tail_calls\";\n        return DW_DLV_OK;\n    case DW_AT_call_return_pc:\n        *s_out = \"DW_AT_call_return_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_value:\n        *s_out = \"DW_AT_call_value\";\n        return DW_DLV_OK;\n    case DW_AT_call_origin:\n        *s_out = \"DW_AT_call_origin\";\n        return DW_DLV_OK;\n    case DW_AT_call_parameter:\n        *s_out = \"DW_AT_call_parameter\";\n        return DW_DLV_OK;\n    case DW_AT_call_pc:\n        *s_out = \"DW_AT_call_pc\";\n        return DW_DLV_OK;\n    case DW_AT_call_tail_call:\n        *s_out = \"DW_AT_call_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_call_target:\n        *s_out = \"DW_AT_call_target\";\n        return DW_DLV_OK;\n    case DW_AT_call_target_clobbered:\n        *s_out = \"DW_AT_call_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_location:\n        *s_out = \"DW_AT_call_data_location\";\n        return DW_DLV_OK;\n    case DW_AT_call_data_value:\n        *s_out = \"DW_AT_call_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_noreturn:\n        *s_out = \"DW_AT_noreturn\";\n        return DW_DLV_OK;\n    case DW_AT_alignment:\n        *s_out = \"DW_AT_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_export_symbols:\n        *s_out = \"DW_AT_export_symbols\";\n        return DW_DLV_OK;\n    case DW_AT_deleted:\n        *s_out = \"DW_AT_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_defaulted:\n        *s_out = \"DW_AT_defaulted\";\n        return DW_DLV_OK;\n    case DW_AT_loclists_base:\n        *s_out = \"DW_AT_loclists_base\";\n        return DW_DLV_OK;\n    case DW_AT_HP_block_index:\n        *s_out = \"DW_AT_HP_block_index\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2000. DW_AT_lo_user */\n    case DW_AT_MIPS_fde:\n        *s_out = \"DW_AT_MIPS_fde\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2001. DW_AT_HP_unmodifiable */\n    /* Skipping alternate spelling of value 0x2001. DW_AT_CPQ_discontig_ranges */\n    case DW_AT_MIPS_loop_begin:\n        *s_out = \"DW_AT_MIPS_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2002. DW_AT_CPQ_semantic_events */\n    case DW_AT_MIPS_tail_loop_begin:\n        *s_out = \"DW_AT_MIPS_tail_loop_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2003. DW_AT_CPQ_split_lifetimes_var */\n    case DW_AT_MIPS_epilog_begin:\n        *s_out = \"DW_AT_MIPS_epilog_begin\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2004. DW_AT_CPQ_split_lifetimes_rtn */\n    case DW_AT_MIPS_loop_unroll_factor:\n        *s_out = \"DW_AT_MIPS_loop_unroll_factor\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2005. DW_AT_CPQ_prologue_length */\n    case DW_AT_MIPS_software_pipeline_depth:\n        *s_out = \"DW_AT_MIPS_software_pipeline_depth\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_linkage_name:\n        *s_out = \"DW_AT_MIPS_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride:\n        *s_out = \"DW_AT_MIPS_stride\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_abstract_name:\n        *s_out = \"DW_AT_MIPS_abstract_name\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_clone_origin:\n        *s_out = \"DW_AT_MIPS_clone_origin\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_has_inlines:\n        *s_out = \"DW_AT_MIPS_has_inlines\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_byte:\n        *s_out = \"DW_AT_MIPS_stride_byte\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_stride_elem:\n        *s_out = \"DW_AT_MIPS_stride_elem\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_ptr_dopetype:\n        *s_out = \"DW_AT_MIPS_ptr_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_allocatable_dopetype:\n        *s_out = \"DW_AT_MIPS_allocatable_dopetype\";\n        return DW_DLV_OK;\n    case DW_AT_MIPS_assumed_shape_dopetype:\n        *s_out = \"DW_AT_MIPS_assumed_shape_dopetype\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2010. DW_AT_HP_actuals_stmt_list */\n    case DW_AT_MIPS_assumed_size:\n        *s_out = \"DW_AT_MIPS_assumed_size\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2011. DW_AT_HP_proc_per_section */\n    case DW_AT_HP_raw_data_ptr:\n        *s_out = \"DW_AT_HP_raw_data_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_HP_pass_by_reference:\n        *s_out = \"DW_AT_HP_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_level:\n        *s_out = \"DW_AT_HP_opt_level\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_version_id:\n        *s_out = \"DW_AT_HP_prof_version_id\";\n        return DW_DLV_OK;\n    case DW_AT_HP_opt_flags:\n        *s_out = \"DW_AT_HP_opt_flags\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_low_pc:\n        *s_out = \"DW_AT_HP_cold_region_low_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_cold_region_high_pc:\n        *s_out = \"DW_AT_HP_cold_region_high_pc\";\n        return DW_DLV_OK;\n    case DW_AT_HP_all_variables_modifiable:\n        *s_out = \"DW_AT_HP_all_variables_modifiable\";\n        return DW_DLV_OK;\n    case DW_AT_HP_linkage_name:\n        *s_out = \"DW_AT_HP_linkage_name\";\n        return DW_DLV_OK;\n    case DW_AT_HP_prof_flags:\n        *s_out = \"DW_AT_HP_prof_flags\";\n        return DW_DLV_OK;\n    case DW_AT_INTEL_other_endian:\n        *s_out = \"DW_AT_INTEL_other_endian\";\n        return DW_DLV_OK;\n    case DW_AT_sf_names:\n        *s_out = \"DW_AT_sf_names\";\n        return DW_DLV_OK;\n    case DW_AT_src_info:\n        *s_out = \"DW_AT_src_info\";\n        return DW_DLV_OK;\n    case DW_AT_mac_info:\n        *s_out = \"DW_AT_mac_info\";\n        return DW_DLV_OK;\n    case DW_AT_src_coords:\n        *s_out = \"DW_AT_src_coords\";\n        return DW_DLV_OK;\n    case DW_AT_body_begin:\n        *s_out = \"DW_AT_body_begin\";\n        return DW_DLV_OK;\n    case DW_AT_body_end:\n        *s_out = \"DW_AT_body_end\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_vector:\n        *s_out = \"DW_AT_GNU_vector\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded_by:\n        *s_out = \"DW_AT_GNU_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded_by:\n        *s_out = \"DW_AT_GNU_pt_guarded_by\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_guarded:\n        *s_out = \"DW_AT_GNU_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pt_guarded:\n        *s_out = \"DW_AT_GNU_pt_guarded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locks_excluded:\n        *s_out = \"DW_AT_GNU_locks_excluded\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_exclusive_locks_required:\n        *s_out = \"DW_AT_GNU_exclusive_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_shared_locks_required:\n        *s_out = \"DW_AT_GNU_shared_locks_required\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_odr_signature:\n        *s_out = \"DW_AT_GNU_odr_signature\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_template_name:\n        *s_out = \"DW_AT_GNU_template_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_value:\n        *s_out = \"DW_AT_GNU_call_site_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_data_value:\n        *s_out = \"DW_AT_GNU_call_site_data_value\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target:\n        *s_out = \"DW_AT_GNU_call_site_target\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_call_site_target_clobbered:\n        *s_out = \"DW_AT_GNU_call_site_target_clobbered\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_tail_call:\n        *s_out = \"DW_AT_GNU_tail_call\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_tail_call_sites:\n        *s_out = \"DW_AT_GNU_all_tail_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_call_sites:\n        *s_out = \"DW_AT_GNU_all_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_all_source_call_sites:\n        *s_out = \"DW_AT_GNU_all_source_call_sites\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_macros:\n        *s_out = \"DW_AT_GNU_macros\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_deleted:\n        *s_out = \"DW_AT_GNU_deleted\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_name:\n        *s_out = \"DW_AT_GNU_dwo_name\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_dwo_id:\n        *s_out = \"DW_AT_GNU_dwo_id\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_ranges_base:\n        *s_out = \"DW_AT_GNU_ranges_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_addr_base:\n        *s_out = \"DW_AT_GNU_addr_base\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubnames:\n        *s_out = \"DW_AT_GNU_pubnames\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_pubtypes:\n        *s_out = \"DW_AT_GNU_pubtypes\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_discriminator:\n        *s_out = \"DW_AT_GNU_discriminator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_locviews:\n        *s_out = \"DW_AT_GNU_locviews\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_entry_view:\n        *s_out = \"DW_AT_GNU_entry_view\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_template:\n        *s_out = \"DW_AT_SUN_template\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2201. DW_AT_VMS_rtnbeg_pd_address */\n    case DW_AT_SUN_alignment:\n        *s_out = \"DW_AT_SUN_alignment\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable:\n        *s_out = \"DW_AT_SUN_vtable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_count_guarantee:\n        *s_out = \"DW_AT_SUN_count_guarantee\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_command_line:\n        *s_out = \"DW_AT_SUN_command_line\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vbase:\n        *s_out = \"DW_AT_SUN_vbase\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_compile_options:\n        *s_out = \"DW_AT_SUN_compile_options\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_language:\n        *s_out = \"DW_AT_SUN_language\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_browser_file:\n        *s_out = \"DW_AT_SUN_browser_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_abi:\n        *s_out = \"DW_AT_SUN_vtable_abi\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offsets:\n        *s_out = \"DW_AT_SUN_func_offsets\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_cf_kind:\n        *s_out = \"DW_AT_SUN_cf_kind\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_vtable_index:\n        *s_out = \"DW_AT_SUN_vtable_index\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_tpriv_addr:\n        *s_out = \"DW_AT_SUN_omp_tpriv_addr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_omp_child_func:\n        *s_out = \"DW_AT_SUN_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_func_offset:\n        *s_out = \"DW_AT_SUN_func_offset\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_type_ref:\n        *s_out = \"DW_AT_SUN_memop_type_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_profile_id:\n        *s_out = \"DW_AT_SUN_profile_id\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_memop_signature:\n        *s_out = \"DW_AT_SUN_memop_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_dir:\n        *s_out = \"DW_AT_SUN_obj_dir\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_obj_file:\n        *s_out = \"DW_AT_SUN_obj_file\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_original_name:\n        *s_out = \"DW_AT_SUN_original_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_hwcprof_signature:\n        *s_out = \"DW_AT_SUN_hwcprof_signature\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_amd64_parmdump:\n        *s_out = \"DW_AT_SUN_amd64_parmdump\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_part_link_name:\n        *s_out = \"DW_AT_SUN_part_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_link_name:\n        *s_out = \"DW_AT_SUN_link_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_with_const:\n        *s_out = \"DW_AT_SUN_pass_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_with_const:\n        *s_out = \"DW_AT_SUN_return_with_const\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_name:\n        *s_out = \"DW_AT_SUN_import_by_name\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_pointer:\n        *s_out = \"DW_AT_SUN_f90_pointer\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_pass_by_ref:\n        *s_out = \"DW_AT_SUN_pass_by_ref\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_allocatable:\n        *s_out = \"DW_AT_SUN_f90_allocatable\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_assumed_shape_array:\n        *s_out = \"DW_AT_SUN_f90_assumed_shape_array\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_c_vla:\n        *s_out = \"DW_AT_SUN_c_vla\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_return_value_ptr:\n        *s_out = \"DW_AT_SUN_return_value_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_start:\n        *s_out = \"DW_AT_SUN_dtor_start\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_length:\n        *s_out = \"DW_AT_SUN_dtor_length\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_initial:\n        *s_out = \"DW_AT_SUN_dtor_state_initial\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_final:\n        *s_out = \"DW_AT_SUN_dtor_state_final\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_dtor_state_deltas:\n        *s_out = \"DW_AT_SUN_dtor_state_deltas\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_import_by_lname:\n        *s_out = \"DW_AT_SUN_import_by_lname\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_f90_use_only:\n        *s_out = \"DW_AT_SUN_f90_use_only\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_namelist_spec:\n        *s_out = \"DW_AT_SUN_namelist_spec\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_is_omp_child_func:\n        *s_out = \"DW_AT_SUN_is_omp_child_func\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_main_alias:\n        *s_out = \"DW_AT_SUN_fortran_main_alias\";\n        return DW_DLV_OK;\n    case DW_AT_SUN_fortran_based:\n        *s_out = \"DW_AT_SUN_fortran_based\";\n        return DW_DLV_OK;\n    case DW_AT_ALTIUM_loclist:\n        *s_out = \"DW_AT_ALTIUM_loclist\";\n        return DW_DLV_OK;\n    case DW_AT_use_GNAT_descriptive_type:\n        *s_out = \"DW_AT_use_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    case DW_AT_GNAT_descriptive_type:\n        *s_out = \"DW_AT_GNAT_descriptive_type\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x2302. DW_AT_GNAT_descriptive_type */\n    case DW_AT_GNU_numerator:\n        *s_out = \"DW_AT_GNU_numerator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_denominator:\n        *s_out = \"DW_AT_GNU_denominator\";\n        return DW_DLV_OK;\n    case DW_AT_GNU_bias:\n        *s_out = \"DW_AT_GNU_bias\";\n        return DW_DLV_OK;\n    case DW_AT_go_kind:\n        *s_out = \"DW_AT_go_kind\";\n        return DW_DLV_OK;\n    case DW_AT_go_key:\n        *s_out = \"DW_AT_go_key\";\n        return DW_DLV_OK;\n    case DW_AT_go_elem:\n        *s_out = \"DW_AT_go_elem\";\n        return DW_DLV_OK;\n    case DW_AT_go_embedded_field:\n        *s_out = \"DW_AT_go_embedded_field\";\n        return DW_DLV_OK;\n    case DW_AT_go_runtime_type:\n        *s_out = \"DW_AT_go_runtime_type\";\n        return DW_DLV_OK;\n    case DW_AT_upc_threads_scaled:\n        *s_out = \"DW_AT_upc_threads_scaled\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lbase:\n        *s_out = \"DW_AT_PGI_lbase\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_soffset:\n        *s_out = \"DW_AT_PGI_soffset\";\n        return DW_DLV_OK;\n    case DW_AT_PGI_lstride:\n        *s_out = \"DW_AT_PGI_lstride\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_optimized:\n        *s_out = \"DW_AT_APPLE_optimized\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_flags:\n        *s_out = \"DW_AT_APPLE_flags\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_isa:\n        *s_out = \"DW_AT_APPLE_isa\";\n        return DW_DLV_OK;\n    case DW_AT_APPLE_block:\n        *s_out = \"DW_AT_APPLE_block\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe4. DW_AT_APPLE_closure */\n    case DW_AT_APPLE_major_runtime_vers:\n        *s_out = \"DW_AT_APPLE_major_runtime_vers\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe5. DW_AT_APPLE_major_runtime_vers */\n    case DW_AT_APPLE_runtime_class:\n        *s_out = \"DW_AT_APPLE_runtime_class\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x3fe6. DW_AT_APPLE_runtime_class */\n    case DW_AT_APPLE_omit_frame_ptr:\n        *s_out = \"DW_AT_APPLE_omit_frame_ptr\";\n        return DW_DLV_OK;\n    case DW_AT_hi_user:\n        *s_out = \"DW_AT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_OP_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_OP_addr:\n        *s_out = \"DW_OP_addr\";\n        return DW_DLV_OK;\n    case DW_OP_deref:\n        *s_out = \"DW_OP_deref\";\n        return DW_DLV_OK;\n    case DW_OP_const1u:\n        *s_out = \"DW_OP_const1u\";\n        return DW_DLV_OK;\n    case DW_OP_const1s:\n        *s_out = \"DW_OP_const1s\";\n        return DW_DLV_OK;\n    case DW_OP_const2u:\n        *s_out = \"DW_OP_const2u\";\n        return DW_DLV_OK;\n    case DW_OP_const2s:\n        *s_out = \"DW_OP_const2s\";\n        return DW_DLV_OK;\n    case DW_OP_const4u:\n        *s_out = \"DW_OP_const4u\";\n        return DW_DLV_OK;\n    case DW_OP_const4s:\n        *s_out = \"DW_OP_const4s\";\n        return DW_DLV_OK;\n    case DW_OP_const8u:\n        *s_out = \"DW_OP_const8u\";\n        return DW_DLV_OK;\n    case DW_OP_const8s:\n        *s_out = \"DW_OP_const8s\";\n        return DW_DLV_OK;\n    case DW_OP_constu:\n        *s_out = \"DW_OP_constu\";\n        return DW_DLV_OK;\n    case DW_OP_consts:\n        *s_out = \"DW_OP_consts\";\n        return DW_DLV_OK;\n    case DW_OP_dup:\n        *s_out = \"DW_OP_dup\";\n        return DW_DLV_OK;\n    case DW_OP_drop:\n        *s_out = \"DW_OP_drop\";\n        return DW_DLV_OK;\n    case DW_OP_over:\n        *s_out = \"DW_OP_over\";\n        return DW_DLV_OK;\n    case DW_OP_pick:\n        *s_out = \"DW_OP_pick\";\n        return DW_DLV_OK;\n    case DW_OP_swap:\n        *s_out = \"DW_OP_swap\";\n        return DW_DLV_OK;\n    case DW_OP_rot:\n        *s_out = \"DW_OP_rot\";\n        return DW_DLV_OK;\n    case DW_OP_xderef:\n        *s_out = \"DW_OP_xderef\";\n        return DW_DLV_OK;\n    case DW_OP_abs:\n        *s_out = \"DW_OP_abs\";\n        return DW_DLV_OK;\n    case DW_OP_and:\n        *s_out = \"DW_OP_and\";\n        return DW_DLV_OK;\n    case DW_OP_div:\n        *s_out = \"DW_OP_div\";\n        return DW_DLV_OK;\n    case DW_OP_minus:\n        *s_out = \"DW_OP_minus\";\n        return DW_DLV_OK;\n    case DW_OP_mod:\n        *s_out = \"DW_OP_mod\";\n        return DW_DLV_OK;\n    case DW_OP_mul:\n        *s_out = \"DW_OP_mul\";\n        return DW_DLV_OK;\n    case DW_OP_neg:\n        *s_out = \"DW_OP_neg\";\n        return DW_DLV_OK;\n    case DW_OP_not:\n        *s_out = \"DW_OP_not\";\n        return DW_DLV_OK;\n    case DW_OP_or:\n        *s_out = \"DW_OP_or\";\n        return DW_DLV_OK;\n    case DW_OP_plus:\n        *s_out = \"DW_OP_plus\";\n        return DW_DLV_OK;\n    case DW_OP_plus_uconst:\n        *s_out = \"DW_OP_plus_uconst\";\n        return DW_DLV_OK;\n    case DW_OP_shl:\n        *s_out = \"DW_OP_shl\";\n        return DW_DLV_OK;\n    case DW_OP_shr:\n        *s_out = \"DW_OP_shr\";\n        return DW_DLV_OK;\n    case DW_OP_shra:\n        *s_out = \"DW_OP_shra\";\n        return DW_DLV_OK;\n    case DW_OP_xor:\n        *s_out = \"DW_OP_xor\";\n        return DW_DLV_OK;\n    case DW_OP_bra:\n        *s_out = \"DW_OP_bra\";\n        return DW_DLV_OK;\n    case DW_OP_eq:\n        *s_out = \"DW_OP_eq\";\n        return DW_DLV_OK;\n    case DW_OP_ge:\n        *s_out = \"DW_OP_ge\";\n        return DW_DLV_OK;\n    case DW_OP_gt:\n        *s_out = \"DW_OP_gt\";\n        return DW_DLV_OK;\n    case DW_OP_le:\n        *s_out = \"DW_OP_le\";\n        return DW_DLV_OK;\n    case DW_OP_lt:\n        *s_out = \"DW_OP_lt\";\n        return DW_DLV_OK;\n    case DW_OP_ne:\n        *s_out = \"DW_OP_ne\";\n        return DW_DLV_OK;\n    case DW_OP_skip:\n        *s_out = \"DW_OP_skip\";\n        return DW_DLV_OK;\n    case DW_OP_lit0:\n        *s_out = \"DW_OP_lit0\";\n        return DW_DLV_OK;\n    case DW_OP_lit1:\n        *s_out = \"DW_OP_lit1\";\n        return DW_DLV_OK;\n    case DW_OP_lit2:\n        *s_out = \"DW_OP_lit2\";\n        return DW_DLV_OK;\n    case DW_OP_lit3:\n        *s_out = \"DW_OP_lit3\";\n        return DW_DLV_OK;\n    case DW_OP_lit4:\n        *s_out = \"DW_OP_lit4\";\n        return DW_DLV_OK;\n    case DW_OP_lit5:\n        *s_out = \"DW_OP_lit5\";\n        return DW_DLV_OK;\n    case DW_OP_lit6:\n        *s_out = \"DW_OP_lit6\";\n        return DW_DLV_OK;\n    case DW_OP_lit7:\n        *s_out = \"DW_OP_lit7\";\n        return DW_DLV_OK;\n    case DW_OP_lit8:\n        *s_out = \"DW_OP_lit8\";\n        return DW_DLV_OK;\n    case DW_OP_lit9:\n        *s_out = \"DW_OP_lit9\";\n        return DW_DLV_OK;\n    case DW_OP_lit10:\n        *s_out = \"DW_OP_lit10\";\n        return DW_DLV_OK;\n    case DW_OP_lit11:\n        *s_out = \"DW_OP_lit11\";\n        return DW_DLV_OK;\n    case DW_OP_lit12:\n        *s_out = \"DW_OP_lit12\";\n        return DW_DLV_OK;\n    case DW_OP_lit13:\n        *s_out = \"DW_OP_lit13\";\n        return DW_DLV_OK;\n    case DW_OP_lit14:\n        *s_out = \"DW_OP_lit14\";\n        return DW_DLV_OK;\n    case DW_OP_lit15:\n        *s_out = \"DW_OP_lit15\";\n        return DW_DLV_OK;\n    case DW_OP_lit16:\n        *s_out = \"DW_OP_lit16\";\n        return DW_DLV_OK;\n    case DW_OP_lit17:\n        *s_out = \"DW_OP_lit17\";\n        return DW_DLV_OK;\n    case DW_OP_lit18:\n        *s_out = \"DW_OP_lit18\";\n        return DW_DLV_OK;\n    case DW_OP_lit19:\n        *s_out = \"DW_OP_lit19\";\n        return DW_DLV_OK;\n    case DW_OP_lit20:\n        *s_out = \"DW_OP_lit20\";\n        return DW_DLV_OK;\n    case DW_OP_lit21:\n        *s_out = \"DW_OP_lit21\";\n        return DW_DLV_OK;\n    case DW_OP_lit22:\n        *s_out = \"DW_OP_lit22\";\n        return DW_DLV_OK;\n    case DW_OP_lit23:\n        *s_out = \"DW_OP_lit23\";\n        return DW_DLV_OK;\n    case DW_OP_lit24:\n        *s_out = \"DW_OP_lit24\";\n        return DW_DLV_OK;\n    case DW_OP_lit25:\n        *s_out = \"DW_OP_lit25\";\n        return DW_DLV_OK;\n    case DW_OP_lit26:\n        *s_out = \"DW_OP_lit26\";\n        return DW_DLV_OK;\n    case DW_OP_lit27:\n        *s_out = \"DW_OP_lit27\";\n        return DW_DLV_OK;\n    case DW_OP_lit28:\n        *s_out = \"DW_OP_lit28\";\n        return DW_DLV_OK;\n    case DW_OP_lit29:\n        *s_out = \"DW_OP_lit29\";\n        return DW_DLV_OK;\n    case DW_OP_lit30:\n        *s_out = \"DW_OP_lit30\";\n        return DW_DLV_OK;\n    case DW_OP_lit31:\n        *s_out = \"DW_OP_lit31\";\n        return DW_DLV_OK;\n    case DW_OP_reg0:\n        *s_out = \"DW_OP_reg0\";\n        return DW_DLV_OK;\n    case DW_OP_reg1:\n        *s_out = \"DW_OP_reg1\";\n        return DW_DLV_OK;\n    case DW_OP_reg2:\n        *s_out = \"DW_OP_reg2\";\n        return DW_DLV_OK;\n    case DW_OP_reg3:\n        *s_out = \"DW_OP_reg3\";\n        return DW_DLV_OK;\n    case DW_OP_reg4:\n        *s_out = \"DW_OP_reg4\";\n        return DW_DLV_OK;\n    case DW_OP_reg5:\n        *s_out = \"DW_OP_reg5\";\n        return DW_DLV_OK;\n    case DW_OP_reg6:\n        *s_out = \"DW_OP_reg6\";\n        return DW_DLV_OK;\n    case DW_OP_reg7:\n        *s_out = \"DW_OP_reg7\";\n        return DW_DLV_OK;\n    case DW_OP_reg8:\n        *s_out = \"DW_OP_reg8\";\n        return DW_DLV_OK;\n    case DW_OP_reg9:\n        *s_out = \"DW_OP_reg9\";\n        return DW_DLV_OK;\n    case DW_OP_reg10:\n        *s_out = \"DW_OP_reg10\";\n        return DW_DLV_OK;\n    case DW_OP_reg11:\n        *s_out = \"DW_OP_reg11\";\n        return DW_DLV_OK;\n    case DW_OP_reg12:\n        *s_out = \"DW_OP_reg12\";\n        return DW_DLV_OK;\n    case DW_OP_reg13:\n        *s_out = \"DW_OP_reg13\";\n        return DW_DLV_OK;\n    case DW_OP_reg14:\n        *s_out = \"DW_OP_reg14\";\n        return DW_DLV_OK;\n    case DW_OP_reg15:\n        *s_out = \"DW_OP_reg15\";\n        return DW_DLV_OK;\n    case DW_OP_reg16:\n        *s_out = \"DW_OP_reg16\";\n        return DW_DLV_OK;\n    case DW_OP_reg17:\n        *s_out = \"DW_OP_reg17\";\n        return DW_DLV_OK;\n    case DW_OP_reg18:\n        *s_out = \"DW_OP_reg18\";\n        return DW_DLV_OK;\n    case DW_OP_reg19:\n        *s_out = \"DW_OP_reg19\";\n        return DW_DLV_OK;\n    case DW_OP_reg20:\n        *s_out = \"DW_OP_reg20\";\n        return DW_DLV_OK;\n    case DW_OP_reg21:\n        *s_out = \"DW_OP_reg21\";\n        return DW_DLV_OK;\n    case DW_OP_reg22:\n        *s_out = \"DW_OP_reg22\";\n        return DW_DLV_OK;\n    case DW_OP_reg23:\n        *s_out = \"DW_OP_reg23\";\n        return DW_DLV_OK;\n    case DW_OP_reg24:\n        *s_out = \"DW_OP_reg24\";\n        return DW_DLV_OK;\n    case DW_OP_reg25:\n        *s_out = \"DW_OP_reg25\";\n        return DW_DLV_OK;\n    case DW_OP_reg26:\n        *s_out = \"DW_OP_reg26\";\n        return DW_DLV_OK;\n    case DW_OP_reg27:\n        *s_out = \"DW_OP_reg27\";\n        return DW_DLV_OK;\n    case DW_OP_reg28:\n        *s_out = \"DW_OP_reg28\";\n        return DW_DLV_OK;\n    case DW_OP_reg29:\n        *s_out = \"DW_OP_reg29\";\n        return DW_DLV_OK;\n    case DW_OP_reg30:\n        *s_out = \"DW_OP_reg30\";\n        return DW_DLV_OK;\n    case DW_OP_reg31:\n        *s_out = \"DW_OP_reg31\";\n        return DW_DLV_OK;\n    case DW_OP_breg0:\n        *s_out = \"DW_OP_breg0\";\n        return DW_DLV_OK;\n    case DW_OP_breg1:\n        *s_out = \"DW_OP_breg1\";\n        return DW_DLV_OK;\n    case DW_OP_breg2:\n        *s_out = \"DW_OP_breg2\";\n        return DW_DLV_OK;\n    case DW_OP_breg3:\n        *s_out = \"DW_OP_breg3\";\n        return DW_DLV_OK;\n    case DW_OP_breg4:\n        *s_out = \"DW_OP_breg4\";\n        return DW_DLV_OK;\n    case DW_OP_breg5:\n        *s_out = \"DW_OP_breg5\";\n        return DW_DLV_OK;\n    case DW_OP_breg6:\n        *s_out = \"DW_OP_breg6\";\n        return DW_DLV_OK;\n    case DW_OP_breg7:\n        *s_out = \"DW_OP_breg7\";\n        return DW_DLV_OK;\n    case DW_OP_breg8:\n        *s_out = \"DW_OP_breg8\";\n        return DW_DLV_OK;\n    case DW_OP_breg9:\n        *s_out = \"DW_OP_breg9\";\n        return DW_DLV_OK;\n    case DW_OP_breg10:\n        *s_out = \"DW_OP_breg10\";\n        return DW_DLV_OK;\n    case DW_OP_breg11:\n        *s_out = \"DW_OP_breg11\";\n        return DW_DLV_OK;\n    case DW_OP_breg12:\n        *s_out = \"DW_OP_breg12\";\n        return DW_DLV_OK;\n    case DW_OP_breg13:\n        *s_out = \"DW_OP_breg13\";\n        return DW_DLV_OK;\n    case DW_OP_breg14:\n        *s_out = \"DW_OP_breg14\";\n        return DW_DLV_OK;\n    case DW_OP_breg15:\n        *s_out = \"DW_OP_breg15\";\n        return DW_DLV_OK;\n    case DW_OP_breg16:\n        *s_out = \"DW_OP_breg16\";\n        return DW_DLV_OK;\n    case DW_OP_breg17:\n        *s_out = \"DW_OP_breg17\";\n        return DW_DLV_OK;\n    case DW_OP_breg18:\n        *s_out = \"DW_OP_breg18\";\n        return DW_DLV_OK;\n    case DW_OP_breg19:\n        *s_out = \"DW_OP_breg19\";\n        return DW_DLV_OK;\n    case DW_OP_breg20:\n        *s_out = \"DW_OP_breg20\";\n        return DW_DLV_OK;\n    case DW_OP_breg21:\n        *s_out = \"DW_OP_breg21\";\n        return DW_DLV_OK;\n    case DW_OP_breg22:\n        *s_out = \"DW_OP_breg22\";\n        return DW_DLV_OK;\n    case DW_OP_breg23:\n        *s_out = \"DW_OP_breg23\";\n        return DW_DLV_OK;\n    case DW_OP_breg24:\n        *s_out = \"DW_OP_breg24\";\n        return DW_DLV_OK;\n    case DW_OP_breg25:\n        *s_out = \"DW_OP_breg25\";\n        return DW_DLV_OK;\n    case DW_OP_breg26:\n        *s_out = \"DW_OP_breg26\";\n        return DW_DLV_OK;\n    case DW_OP_breg27:\n        *s_out = \"DW_OP_breg27\";\n        return DW_DLV_OK;\n    case DW_OP_breg28:\n        *s_out = \"DW_OP_breg28\";\n        return DW_DLV_OK;\n    case DW_OP_breg29:\n        *s_out = \"DW_OP_breg29\";\n        return DW_DLV_OK;\n    case DW_OP_breg30:\n        *s_out = \"DW_OP_breg30\";\n        return DW_DLV_OK;\n    case DW_OP_breg31:\n        *s_out = \"DW_OP_breg31\";\n        return DW_DLV_OK;\n    case DW_OP_regx:\n        *s_out = \"DW_OP_regx\";\n        return DW_DLV_OK;\n    case DW_OP_fbreg:\n        *s_out = \"DW_OP_fbreg\";\n        return DW_DLV_OK;\n    case DW_OP_bregx:\n        *s_out = \"DW_OP_bregx\";\n        return DW_DLV_OK;\n    case DW_OP_piece:\n        *s_out = \"DW_OP_piece\";\n        return DW_DLV_OK;\n    case DW_OP_deref_size:\n        *s_out = \"DW_OP_deref_size\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_size:\n        *s_out = \"DW_OP_xderef_size\";\n        return DW_DLV_OK;\n    case DW_OP_nop:\n        *s_out = \"DW_OP_nop\";\n        return DW_DLV_OK;\n    case DW_OP_push_object_address:\n        *s_out = \"DW_OP_push_object_address\";\n        return DW_DLV_OK;\n    case DW_OP_call2:\n        *s_out = \"DW_OP_call2\";\n        return DW_DLV_OK;\n    case DW_OP_call4:\n        *s_out = \"DW_OP_call4\";\n        return DW_DLV_OK;\n    case DW_OP_call_ref:\n        *s_out = \"DW_OP_call_ref\";\n        return DW_DLV_OK;\n    case DW_OP_form_tls_address:\n        *s_out = \"DW_OP_form_tls_address\";\n        return DW_DLV_OK;\n    case DW_OP_call_frame_cfa:\n        *s_out = \"DW_OP_call_frame_cfa\";\n        return DW_DLV_OK;\n    case DW_OP_bit_piece:\n        *s_out = \"DW_OP_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_value:\n        *s_out = \"DW_OP_implicit_value\";\n        return DW_DLV_OK;\n    case DW_OP_stack_value:\n        *s_out = \"DW_OP_stack_value\";\n        return DW_DLV_OK;\n    case DW_OP_implicit_pointer:\n        *s_out = \"DW_OP_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_addrx:\n        *s_out = \"DW_OP_addrx\";\n        return DW_DLV_OK;\n    case DW_OP_constx:\n        *s_out = \"DW_OP_constx\";\n        return DW_DLV_OK;\n    case DW_OP_entry_value:\n        *s_out = \"DW_OP_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_const_type:\n        *s_out = \"DW_OP_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_regval_type:\n        *s_out = \"DW_OP_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_deref_type:\n        *s_out = \"DW_OP_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_xderef_type:\n        *s_out = \"DW_OP_xderef_type\";\n        return DW_DLV_OK;\n    case DW_OP_convert:\n        *s_out = \"DW_OP_convert\";\n        return DW_DLV_OK;\n    case DW_OP_reinterpret:\n        *s_out = \"DW_OP_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_push_tls_address:\n        *s_out = \"DW_OP_GNU_push_tls_address\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xe0. DW_OP_lo_user */\n    /* Skipping alternate spelling of value 0xe0. DW_OP_HP_unknown */\n    case DW_OP_HP_is_value:\n        *s_out = \"DW_OP_HP_is_value\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst4:\n        *s_out = \"DW_OP_HP_fltconst4\";\n        return DW_DLV_OK;\n    case DW_OP_HP_fltconst8:\n        *s_out = \"DW_OP_HP_fltconst8\";\n        return DW_DLV_OK;\n    case DW_OP_HP_mod_range:\n        *s_out = \"DW_OP_HP_mod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_unmod_range:\n        *s_out = \"DW_OP_HP_unmod_range\";\n        return DW_DLV_OK;\n    case DW_OP_HP_tls:\n        *s_out = \"DW_OP_HP_tls\";\n        return DW_DLV_OK;\n    case DW_OP_INTEL_bit_piece:\n        *s_out = \"DW_OP_INTEL_bit_piece\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_uninit:\n        *s_out = \"DW_OP_GNU_uninit\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xf0. DW_OP_APPLE_uninit */\n    case DW_OP_GNU_encoded_addr:\n        *s_out = \"DW_OP_GNU_encoded_addr\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_implicit_pointer:\n        *s_out = \"DW_OP_GNU_implicit_pointer\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_entry_value:\n        *s_out = \"DW_OP_GNU_entry_value\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_type:\n        *s_out = \"DW_OP_GNU_const_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_regval_type:\n        *s_out = \"DW_OP_GNU_regval_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_deref_type:\n        *s_out = \"DW_OP_GNU_deref_type\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_convert:\n        *s_out = \"DW_OP_GNU_convert\";\n        return DW_DLV_OK;\n    case DW_OP_PGI_omp_thread_num:\n        *s_out = \"DW_OP_PGI_omp_thread_num\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_reinterpret:\n        *s_out = \"DW_OP_GNU_reinterpret\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_parameter_ref:\n        *s_out = \"DW_OP_GNU_parameter_ref\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_addr_index:\n        *s_out = \"DW_OP_GNU_addr_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_const_index:\n        *s_out = \"DW_OP_GNU_const_index\";\n        return DW_DLV_OK;\n    case DW_OP_GNU_variable_value:\n        *s_out = \"DW_OP_GNU_variable_value\";\n        return DW_DLV_OK;\n    case DW_OP_hi_user:\n        *s_out = \"DW_OP_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATE_address:\n        *s_out = \"DW_ATE_address\";\n        return DW_DLV_OK;\n    case DW_ATE_boolean:\n        *s_out = \"DW_ATE_boolean\";\n        return DW_DLV_OK;\n    case DW_ATE_complex_float:\n        *s_out = \"DW_ATE_complex_float\";\n        return DW_DLV_OK;\n    case DW_ATE_float:\n        *s_out = \"DW_ATE_float\";\n        return DW_DLV_OK;\n    case DW_ATE_signed:\n        *s_out = \"DW_ATE_signed\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_char:\n        *s_out = \"DW_ATE_signed_char\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned:\n        *s_out = \"DW_ATE_unsigned\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_char:\n        *s_out = \"DW_ATE_unsigned_char\";\n        return DW_DLV_OK;\n    case DW_ATE_imaginary_float:\n        *s_out = \"DW_ATE_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_packed_decimal:\n        *s_out = \"DW_ATE_packed_decimal\";\n        return DW_DLV_OK;\n    case DW_ATE_numeric_string:\n        *s_out = \"DW_ATE_numeric_string\";\n        return DW_DLV_OK;\n    case DW_ATE_edited:\n        *s_out = \"DW_ATE_edited\";\n        return DW_DLV_OK;\n    case DW_ATE_signed_fixed:\n        *s_out = \"DW_ATE_signed_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_unsigned_fixed:\n        *s_out = \"DW_ATE_unsigned_fixed\";\n        return DW_DLV_OK;\n    case DW_ATE_decimal_float:\n        *s_out = \"DW_ATE_decimal_float\";\n        return DW_DLV_OK;\n    case DW_ATE_UTF:\n        *s_out = \"DW_ATE_UTF\";\n        return DW_DLV_OK;\n    case DW_ATE_UCS:\n        *s_out = \"DW_ATE_UCS\";\n        return DW_DLV_OK;\n    case DW_ATE_ASCII:\n        *s_out = \"DW_ATE_ASCII\";\n        return DW_DLV_OK;\n    case DW_ATE_ALTIUM_fract:\n        *s_out = \"DW_ATE_ALTIUM_fract\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_ATE_lo_user */\n    /* Skipping alternate spelling of value 0x80. DW_ATE_HP_float80 */\n    case DW_ATE_ALTIUM_accum:\n        *s_out = \"DW_ATE_ALTIUM_accum\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x81. DW_ATE_HP_complex_float80 */\n    case DW_ATE_HP_float128:\n        *s_out = \"DW_ATE_HP_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_complex_float128:\n        *s_out = \"DW_ATE_HP_complex_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_floathpintel:\n        *s_out = \"DW_ATE_HP_floathpintel\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float80:\n        *s_out = \"DW_ATE_HP_imaginary_float80\";\n        return DW_DLV_OK;\n    case DW_ATE_HP_imaginary_float128:\n        *s_out = \"DW_ATE_HP_imaginary_float128\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_interval_float:\n        *s_out = \"DW_ATE_SUN_interval_float\";\n        return DW_DLV_OK;\n    case DW_ATE_SUN_imaginary_float:\n        *s_out = \"DW_ATE_SUN_imaginary_float\";\n        return DW_DLV_OK;\n    case DW_ATE_hi_user:\n        *s_out = \"DW_ATE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DEFAULTED_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DEFAULTED_no:\n        *s_out = \"DW_DEFAULTED_no\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_in_class:\n        *s_out = \"DW_DEFAULTED_in_class\";\n        return DW_DLV_OK;\n    case DW_DEFAULTED_out_of_class:\n        *s_out = \"DW_DEFAULTED_out_of_class\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_IDX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_IDX_compile_unit:\n        *s_out = \"DW_IDX_compile_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_type_unit:\n        *s_out = \"DW_IDX_type_unit\";\n        return DW_DLV_OK;\n    case DW_IDX_die_offset:\n        *s_out = \"DW_IDX_die_offset\";\n        return DW_DLV_OK;\n    case DW_IDX_parent:\n        *s_out = \"DW_IDX_parent\";\n        return DW_DLV_OK;\n    case DW_IDX_type_hash:\n        *s_out = \"DW_IDX_type_hash\";\n        return DW_DLV_OK;\n    case DW_IDX_hi_user:\n        *s_out = \"DW_IDX_hi_user\";\n        return DW_DLV_OK;\n    case DW_IDX_lo_user:\n        *s_out = \"DW_IDX_lo_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLEX_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLEX_end_of_list_entry:\n        *s_out = \"DW_LLEX_end_of_list_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_base_address_selection_entry:\n        *s_out = \"DW_LLEX_base_address_selection_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_end_entry:\n        *s_out = \"DW_LLEX_start_end_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_start_length_entry:\n        *s_out = \"DW_LLEX_start_length_entry\";\n        return DW_DLV_OK;\n    case DW_LLEX_offset_pair_entry:\n        *s_out = \"DW_LLEX_offset_pair_entry\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LLE_end_of_list:\n        *s_out = \"DW_LLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_LLE_base_addressx:\n        *s_out = \"DW_LLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_endx:\n        *s_out = \"DW_LLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_LLE_startx_length:\n        *s_out = \"DW_LLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_LLE_offset_pair:\n        *s_out = \"DW_LLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_LLE_default_location:\n        *s_out = \"DW_LLE_default_location\";\n        return DW_DLV_OK;\n    case DW_LLE_base_address:\n        *s_out = \"DW_LLE_base_address\";\n        return DW_DLV_OK;\n    case DW_LLE_start_end:\n        *s_out = \"DW_LLE_start_end\";\n        return DW_DLV_OK;\n    case DW_LLE_start_length:\n        *s_out = \"DW_LLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_RLE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_RLE_end_of_list:\n        *s_out = \"DW_RLE_end_of_list\";\n        return DW_DLV_OK;\n    case DW_RLE_base_addressx:\n        *s_out = \"DW_RLE_base_addressx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_endx:\n        *s_out = \"DW_RLE_startx_endx\";\n        return DW_DLV_OK;\n    case DW_RLE_startx_length:\n        *s_out = \"DW_RLE_startx_length\";\n        return DW_DLV_OK;\n    case DW_RLE_offset_pair:\n        *s_out = \"DW_RLE_offset_pair\";\n        return DW_DLV_OK;\n    case DW_RLE_base_address:\n        *s_out = \"DW_RLE_base_address\";\n        return DW_DLV_OK;\n    case DW_RLE_start_end:\n        *s_out = \"DW_RLE_start_end\";\n        return DW_DLV_OK;\n    case DW_RLE_start_length:\n        *s_out = \"DW_RLE_start_length\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIVIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIVIS_global:\n        *s_out = \"DW_GNUIVIS_global\";\n        return DW_DLV_OK;\n    case DW_GNUIVIS_static:\n        *s_out = \"DW_GNUIVIS_static\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_GNUIKIND_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_GNUIKIND_none:\n        *s_out = \"DW_GNUIKIND_none\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_type:\n        *s_out = \"DW_GNUIKIND_type\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_variable:\n        *s_out = \"DW_GNUIKIND_variable\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_function:\n        *s_out = \"DW_GNUIKIND_function\";\n        return DW_DLV_OK;\n    case DW_GNUIKIND_other:\n        *s_out = \"DW_GNUIKIND_other\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_UT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_UT_compile:\n        *s_out = \"DW_UT_compile\";\n        return DW_DLV_OK;\n    case DW_UT_type:\n        *s_out = \"DW_UT_type\";\n        return DW_DLV_OK;\n    case DW_UT_partial:\n        *s_out = \"DW_UT_partial\";\n        return DW_DLV_OK;\n    case DW_UT_skeleton:\n        *s_out = \"DW_UT_skeleton\";\n        return DW_DLV_OK;\n    case DW_UT_split_compile:\n        *s_out = \"DW_UT_split_compile\";\n        return DW_DLV_OK;\n    case DW_UT_split_type:\n        *s_out = \"DW_UT_split_type\";\n        return DW_DLV_OK;\n    case DW_UT_lo_user:\n        *s_out = \"DW_UT_lo_user\";\n        return DW_DLV_OK;\n    case DW_UT_hi_user:\n        *s_out = \"DW_UT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_SECT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_SECT_INFO:\n        *s_out = \"DW_SECT_INFO\";\n        return DW_DLV_OK;\n    case DW_SECT_TYPES:\n        *s_out = \"DW_SECT_TYPES\";\n        return DW_DLV_OK;\n    case DW_SECT_ABBREV:\n        *s_out = \"DW_SECT_ABBREV\";\n        return DW_DLV_OK;\n    case DW_SECT_LINE:\n        *s_out = \"DW_SECT_LINE\";\n        return DW_DLV_OK;\n    case DW_SECT_LOCLISTS:\n        *s_out = \"DW_SECT_LOCLISTS\";\n        return DW_DLV_OK;\n    case DW_SECT_STR_OFFSETS:\n        *s_out = \"DW_SECT_STR_OFFSETS\";\n        return DW_DLV_OK;\n    case DW_SECT_MACRO:\n        *s_out = \"DW_SECT_MACRO\";\n        return DW_DLV_OK;\n    case DW_SECT_RNGLISTS:\n        *s_out = \"DW_SECT_RNGLISTS\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DS_unsigned:\n        *s_out = \"DW_DS_unsigned\";\n        return DW_DLV_OK;\n    case DW_DS_leading_overpunch:\n        *s_out = \"DW_DS_leading_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_overpunch:\n        *s_out = \"DW_DS_trailing_overpunch\";\n        return DW_DLV_OK;\n    case DW_DS_leading_separate:\n        *s_out = \"DW_DS_leading_separate\";\n        return DW_DLV_OK;\n    case DW_DS_trailing_separate:\n        *s_out = \"DW_DS_trailing_separate\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_END_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_END_default:\n        *s_out = \"DW_END_default\";\n        return DW_DLV_OK;\n    case DW_END_big:\n        *s_out = \"DW_END_big\";\n        return DW_DLV_OK;\n    case DW_END_little:\n        *s_out = \"DW_END_little\";\n        return DW_DLV_OK;\n    case DW_END_lo_user:\n        *s_out = \"DW_END_lo_user\";\n        return DW_DLV_OK;\n    case DW_END_hi_user:\n        *s_out = \"DW_END_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ATCF_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ATCF_lo_user:\n        *s_out = \"DW_ATCF_lo_user\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_bitfield:\n        *s_out = \"DW_ATCF_SUN_mop_bitfield\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_spill:\n        *s_out = \"DW_ATCF_SUN_mop_spill\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_scopy:\n        *s_out = \"DW_ATCF_SUN_mop_scopy\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_start:\n        *s_out = \"DW_ATCF_SUN_func_start\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_end_ctors:\n        *s_out = \"DW_ATCF_SUN_end_ctors\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_branch_target:\n        *s_out = \"DW_ATCF_SUN_branch_target\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_mop_stack_probe:\n        *s_out = \"DW_ATCF_SUN_mop_stack_probe\";\n        return DW_DLV_OK;\n    case DW_ATCF_SUN_func_epilog:\n        *s_out = \"DW_ATCF_SUN_func_epilog\";\n        return DW_DLV_OK;\n    case DW_ATCF_hi_user:\n        *s_out = \"DW_ATCF_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ACCESS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ACCESS_public:\n        *s_out = \"DW_ACCESS_public\";\n        return DW_DLV_OK;\n    case DW_ACCESS_protected:\n        *s_out = \"DW_ACCESS_protected\";\n        return DW_DLV_OK;\n    case DW_ACCESS_private:\n        *s_out = \"DW_ACCESS_private\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIS_local:\n        *s_out = \"DW_VIS_local\";\n        return DW_DLV_OK;\n    case DW_VIS_exported:\n        *s_out = \"DW_VIS_exported\";\n        return DW_DLV_OK;\n    case DW_VIS_qualified:\n        *s_out = \"DW_VIS_qualified\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_VIRTUALITY_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_VIRTUALITY_none:\n        *s_out = \"DW_VIRTUALITY_none\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_virtual:\n        *s_out = \"DW_VIRTUALITY_virtual\";\n        return DW_DLV_OK;\n    case DW_VIRTUALITY_pure_virtual:\n        *s_out = \"DW_VIRTUALITY_pure_virtual\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LANG_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LANG_C89:\n        *s_out = \"DW_LANG_C89\";\n        return DW_DLV_OK;\n    case DW_LANG_C:\n        *s_out = \"DW_LANG_C\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada83:\n        *s_out = \"DW_LANG_Ada83\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus:\n        *s_out = \"DW_LANG_C_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol74:\n        *s_out = \"DW_LANG_Cobol74\";\n        return DW_DLV_OK;\n    case DW_LANG_Cobol85:\n        *s_out = \"DW_LANG_Cobol85\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran77:\n        *s_out = \"DW_LANG_Fortran77\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran90:\n        *s_out = \"DW_LANG_Fortran90\";\n        return DW_DLV_OK;\n    case DW_LANG_Pascal83:\n        *s_out = \"DW_LANG_Pascal83\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula2:\n        *s_out = \"DW_LANG_Modula2\";\n        return DW_DLV_OK;\n    case DW_LANG_Java:\n        *s_out = \"DW_LANG_Java\";\n        return DW_DLV_OK;\n    case DW_LANG_C99:\n        *s_out = \"DW_LANG_C99\";\n        return DW_DLV_OK;\n    case DW_LANG_Ada95:\n        *s_out = \"DW_LANG_Ada95\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran95:\n        *s_out = \"DW_LANG_Fortran95\";\n        return DW_DLV_OK;\n    case DW_LANG_PLI:\n        *s_out = \"DW_LANG_PLI\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC:\n        *s_out = \"DW_LANG_ObjC\";\n        return DW_DLV_OK;\n    case DW_LANG_ObjC_plus_plus:\n        *s_out = \"DW_LANG_ObjC_plus_plus\";\n        return DW_DLV_OK;\n    case DW_LANG_UPC:\n        *s_out = \"DW_LANG_UPC\";\n        return DW_DLV_OK;\n    case DW_LANG_D:\n        *s_out = \"DW_LANG_D\";\n        return DW_DLV_OK;\n    case DW_LANG_Python:\n        *s_out = \"DW_LANG_Python\";\n        return DW_DLV_OK;\n    case DW_LANG_OpenCL:\n        *s_out = \"DW_LANG_OpenCL\";\n        return DW_DLV_OK;\n    case DW_LANG_Go:\n        *s_out = \"DW_LANG_Go\";\n        return DW_DLV_OK;\n    case DW_LANG_Modula3:\n        *s_out = \"DW_LANG_Modula3\";\n        return DW_DLV_OK;\n    case DW_LANG_Haskel:\n        *s_out = \"DW_LANG_Haskel\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_03:\n        *s_out = \"DW_LANG_C_plus_plus_03\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_11:\n        *s_out = \"DW_LANG_C_plus_plus_11\";\n        return DW_DLV_OK;\n    case DW_LANG_OCaml:\n        *s_out = \"DW_LANG_OCaml\";\n        return DW_DLV_OK;\n    case DW_LANG_Rust:\n        *s_out = \"DW_LANG_Rust\";\n        return DW_DLV_OK;\n    case DW_LANG_C11:\n        *s_out = \"DW_LANG_C11\";\n        return DW_DLV_OK;\n    case DW_LANG_Swift:\n        *s_out = \"DW_LANG_Swift\";\n        return DW_DLV_OK;\n    case DW_LANG_Julia:\n        *s_out = \"DW_LANG_Julia\";\n        return DW_DLV_OK;\n    case DW_LANG_Dylan:\n        *s_out = \"DW_LANG_Dylan\";\n        return DW_DLV_OK;\n    case DW_LANG_C_plus_plus_14:\n        *s_out = \"DW_LANG_C_plus_plus_14\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran03:\n        *s_out = \"DW_LANG_Fortran03\";\n        return DW_DLV_OK;\n    case DW_LANG_Fortran08:\n        *s_out = \"DW_LANG_Fortran08\";\n        return DW_DLV_OK;\n    case DW_LANG_RenderScript:\n        *s_out = \"DW_LANG_RenderScript\";\n        return DW_DLV_OK;\n    case DW_LANG_BLISS:\n        *s_out = \"DW_LANG_BLISS\";\n        return DW_DLV_OK;\n    case DW_LANG_lo_user:\n        *s_out = \"DW_LANG_lo_user\";\n        return DW_DLV_OK;\n    case DW_LANG_Mips_Assembler:\n        *s_out = \"DW_LANG_Mips_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_Upc:\n        *s_out = \"DW_LANG_Upc\";\n        return DW_DLV_OK;\n    case DW_LANG_SUN_Assembler:\n        *s_out = \"DW_LANG_SUN_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_ALTIUM_Assembler:\n        *s_out = \"DW_LANG_ALTIUM_Assembler\";\n        return DW_DLV_OK;\n    case DW_LANG_hi_user:\n        *s_out = \"DW_LANG_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ID_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ID_case_sensitive:\n        *s_out = \"DW_ID_case_sensitive\";\n        return DW_DLV_OK;\n    case DW_ID_up_case:\n        *s_out = \"DW_ID_up_case\";\n        return DW_DLV_OK;\n    case DW_ID_down_case:\n        *s_out = \"DW_ID_down_case\";\n        return DW_DLV_OK;\n    case DW_ID_case_insensitive:\n        *s_out = \"DW_ID_case_insensitive\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CC_normal:\n        *s_out = \"DW_CC_normal\";\n        return DW_DLV_OK;\n    case DW_CC_program:\n        *s_out = \"DW_CC_program\";\n        return DW_DLV_OK;\n    case DW_CC_nocall:\n        *s_out = \"DW_CC_nocall\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_reference:\n        *s_out = \"DW_CC_pass_by_reference\";\n        return DW_DLV_OK;\n    case DW_CC_pass_by_value:\n        *s_out = \"DW_CC_pass_by_value\";\n        return DW_DLV_OK;\n    case DW_CC_lo_user:\n        *s_out = \"DW_CC_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x40. DW_CC_GNU_renesas_sh */\n    case DW_CC_GNU_borland_fastcall_i386:\n        *s_out = \"DW_CC_GNU_borland_fastcall_i386\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_interrupt:\n        *s_out = \"DW_CC_ALTIUM_interrupt\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_system_stack:\n        *s_out = \"DW_CC_ALTIUM_near_system_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_near_user_stack:\n        *s_out = \"DW_CC_ALTIUM_near_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_ALTIUM_huge_user_stack:\n        *s_out = \"DW_CC_ALTIUM_huge_user_stack\";\n        return DW_DLV_OK;\n    case DW_CC_hi_user:\n        *s_out = \"DW_CC_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_INL_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_INL_not_inlined:\n        *s_out = \"DW_INL_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_inlined:\n        *s_out = \"DW_INL_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_not_inlined:\n        *s_out = \"DW_INL_declared_not_inlined\";\n        return DW_DLV_OK;\n    case DW_INL_declared_inlined:\n        *s_out = \"DW_INL_declared_inlined\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ORD_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ORD_row_major:\n        *s_out = \"DW_ORD_row_major\";\n        return DW_DLV_OK;\n    case DW_ORD_col_major:\n        *s_out = \"DW_ORD_col_major\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_DSC_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_DSC_label:\n        *s_out = \"DW_DSC_label\";\n        return DW_DLV_OK;\n    case DW_DSC_range:\n        *s_out = \"DW_DSC_range\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNCT_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNCT_path:\n        *s_out = \"DW_LNCT_path\";\n        return DW_DLV_OK;\n    case DW_LNCT_directory_index:\n        *s_out = \"DW_LNCT_directory_index\";\n        return DW_DLV_OK;\n    case DW_LNCT_timestamp:\n        *s_out = \"DW_LNCT_timestamp\";\n        return DW_DLV_OK;\n    case DW_LNCT_size:\n        *s_out = \"DW_LNCT_size\";\n        return DW_DLV_OK;\n    case DW_LNCT_MD5:\n        *s_out = \"DW_LNCT_MD5\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_subprogram_name:\n        *s_out = \"DW_LNCT_GNU_subprogram_name\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_file:\n        *s_out = \"DW_LNCT_GNU_decl_file\";\n        return DW_DLV_OK;\n    case DW_LNCT_GNU_decl_line:\n        *s_out = \"DW_LNCT_GNU_decl_line\";\n        return DW_DLV_OK;\n    case DW_LNCT_lo_user:\n        *s_out = \"DW_LNCT_lo_user\";\n        return DW_DLV_OK;\n    case DW_LNCT_hi_user:\n        *s_out = \"DW_LNCT_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNS_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNS_copy:\n        *s_out = \"DW_LNS_copy\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_pc:\n        *s_out = \"DW_LNS_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_advance_line:\n        *s_out = \"DW_LNS_advance_line\";\n        return DW_DLV_OK;\n    case DW_LNS_set_file:\n        *s_out = \"DW_LNS_set_file\";\n        return DW_DLV_OK;\n    case DW_LNS_set_column:\n        *s_out = \"DW_LNS_set_column\";\n        return DW_DLV_OK;\n    case DW_LNS_negate_stmt:\n        *s_out = \"DW_LNS_negate_stmt\";\n        return DW_DLV_OK;\n    case DW_LNS_set_basic_block:\n        *s_out = \"DW_LNS_set_basic_block\";\n        return DW_DLV_OK;\n    case DW_LNS_const_add_pc:\n        *s_out = \"DW_LNS_const_add_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_fixed_advance_pc:\n        *s_out = \"DW_LNS_fixed_advance_pc\";\n        return DW_DLV_OK;\n    case DW_LNS_set_prologue_end:\n        *s_out = \"DW_LNS_set_prologue_end\";\n        return DW_DLV_OK;\n    case DW_LNS_set_epilogue_begin:\n        *s_out = \"DW_LNS_set_epilogue_begin\";\n        return DW_DLV_OK;\n    case DW_LNS_set_isa:\n        *s_out = \"DW_LNS_set_isa\";\n        return DW_DLV_OK;\n    case DW_LNS_set_address_from_logical:\n        *s_out = \"DW_LNS_set_address_from_logical\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0xd. DW_LNS_set_subprogram */\n    case DW_LNS_inlined_call:\n        *s_out = \"DW_LNS_inlined_call\";\n        return DW_DLV_OK;\n    case DW_LNS_pop_context:\n        *s_out = \"DW_LNS_pop_context\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_LNE_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_LNE_end_sequence:\n        *s_out = \"DW_LNE_end_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_set_address:\n        *s_out = \"DW_LNE_set_address\";\n        return DW_DLV_OK;\n    case DW_LNE_define_file:\n        *s_out = \"DW_LNE_define_file\";\n        return DW_DLV_OK;\n    case DW_LNE_set_discriminator:\n        *s_out = \"DW_LNE_set_discriminator\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_is_UV_update:\n        *s_out = \"DW_LNE_HP_negate_is_UV_update\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_push_context:\n        *s_out = \"DW_LNE_HP_push_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_pop_context:\n        *s_out = \"DW_LNE_HP_pop_context\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_file_line_column:\n        *s_out = \"DW_LNE_HP_set_file_line_column\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_routine_name:\n        *s_out = \"DW_LNE_HP_set_routine_name\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_set_sequence:\n        *s_out = \"DW_LNE_HP_set_sequence\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_post_semantics:\n        *s_out = \"DW_LNE_HP_negate_post_semantics\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_function_exit:\n        *s_out = \"DW_LNE_HP_negate_function_exit\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_negate_front_end_logical:\n        *s_out = \"DW_LNE_HP_negate_front_end_logical\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_define_proc:\n        *s_out = \"DW_LNE_HP_define_proc\";\n        return DW_DLV_OK;\n    case DW_LNE_HP_source_file_correlation:\n        *s_out = \"DW_LNE_HP_source_file_correlation\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x80. DW_LNE_lo_user */\n    case DW_LNE_hi_user:\n        *s_out = \"DW_LNE_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ISA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ISA_UNKNOWN:\n        *s_out = \"DW_ISA_UNKNOWN\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_thumb:\n        *s_out = \"DW_ISA_ARM_thumb\";\n        return DW_DLV_OK;\n    case DW_ISA_ARM_arm:\n        *s_out = \"DW_ISA_ARM_arm\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACRO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACRO_define:\n        *s_out = \"DW_MACRO_define\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef:\n        *s_out = \"DW_MACRO_undef\";\n        return DW_DLV_OK;\n    case DW_MACRO_start_file:\n        *s_out = \"DW_MACRO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_end_file:\n        *s_out = \"DW_MACRO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strp:\n        *s_out = \"DW_MACRO_define_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strp:\n        *s_out = \"DW_MACRO_undef_strp\";\n        return DW_DLV_OK;\n    case DW_MACRO_import:\n        *s_out = \"DW_MACRO_import\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_sup:\n        *s_out = \"DW_MACRO_define_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_sup:\n        *s_out = \"DW_MACRO_undef_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_import_sup:\n        *s_out = \"DW_MACRO_import_sup\";\n        return DW_DLV_OK;\n    case DW_MACRO_define_strx:\n        *s_out = \"DW_MACRO_define_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_undef_strx:\n        *s_out = \"DW_MACRO_undef_strx\";\n        return DW_DLV_OK;\n    case DW_MACRO_lo_user:\n        *s_out = \"DW_MACRO_lo_user\";\n        return DW_DLV_OK;\n    case DW_MACRO_hi_user:\n        *s_out = \"DW_MACRO_hi_user\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_MACINFO_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_MACINFO_define:\n        *s_out = \"DW_MACINFO_define\";\n        return DW_DLV_OK;\n    case DW_MACINFO_undef:\n        *s_out = \"DW_MACINFO_undef\";\n        return DW_DLV_OK;\n    case DW_MACINFO_start_file:\n        *s_out = \"DW_MACINFO_start_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_end_file:\n        *s_out = \"DW_MACINFO_end_file\";\n        return DW_DLV_OK;\n    case DW_MACINFO_vendor_ext:\n        *s_out = \"DW_MACINFO_vendor_ext\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CFA_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CFA_extended:\n        *s_out = \"DW_CFA_extended\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_CFA_nop */\n    case DW_CFA_set_loc:\n        *s_out = \"DW_CFA_set_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc1:\n        *s_out = \"DW_CFA_advance_loc1\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc2:\n        *s_out = \"DW_CFA_advance_loc2\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc4:\n        *s_out = \"DW_CFA_advance_loc4\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended:\n        *s_out = \"DW_CFA_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_extended:\n        *s_out = \"DW_CFA_restore_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_undefined:\n        *s_out = \"DW_CFA_undefined\";\n        return DW_DLV_OK;\n    case DW_CFA_same_value:\n        *s_out = \"DW_CFA_same_value\";\n        return DW_DLV_OK;\n    case DW_CFA_register:\n        *s_out = \"DW_CFA_register\";\n        return DW_DLV_OK;\n    case DW_CFA_remember_state:\n        *s_out = \"DW_CFA_remember_state\";\n        return DW_DLV_OK;\n    case DW_CFA_restore_state:\n        *s_out = \"DW_CFA_restore_state\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa:\n        *s_out = \"DW_CFA_def_cfa\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_register:\n        *s_out = \"DW_CFA_def_cfa_register\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset:\n        *s_out = \"DW_CFA_def_cfa_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_expression:\n        *s_out = \"DW_CFA_def_cfa_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_expression:\n        *s_out = \"DW_CFA_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_offset_extended_sf:\n        *s_out = \"DW_CFA_offset_extended_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_sf:\n        *s_out = \"DW_CFA_def_cfa_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_def_cfa_offset_sf:\n        *s_out = \"DW_CFA_def_cfa_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset:\n        *s_out = \"DW_CFA_val_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_val_offset_sf:\n        *s_out = \"DW_CFA_val_offset_sf\";\n        return DW_DLV_OK;\n    case DW_CFA_val_expression:\n        *s_out = \"DW_CFA_val_expression\";\n        return DW_DLV_OK;\n    case DW_CFA_lo_user:\n        *s_out = \"DW_CFA_lo_user\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x1c. DW_CFA_low_user */\n    case DW_CFA_MIPS_advance_loc8:\n        *s_out = \"DW_CFA_MIPS_advance_loc8\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_window_save:\n        *s_out = \"DW_CFA_GNU_window_save\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_args_size:\n        *s_out = \"DW_CFA_GNU_args_size\";\n        return DW_DLV_OK;\n    case DW_CFA_GNU_negative_offset_extended:\n        *s_out = \"DW_CFA_GNU_negative_offset_extended\";\n        return DW_DLV_OK;\n    case DW_CFA_METAWARE_info:\n        *s_out = \"DW_CFA_METAWARE_info\";\n        return DW_DLV_OK;\n    case DW_CFA_high_user:\n        *s_out = \"DW_CFA_high_user\";\n        return DW_DLV_OK;\n    case DW_CFA_advance_loc:\n        *s_out = \"DW_CFA_advance_loc\";\n        return DW_DLV_OK;\n    case DW_CFA_offset:\n        *s_out = \"DW_CFA_offset\";\n        return DW_DLV_OK;\n    case DW_CFA_restore:\n        *s_out = \"DW_CFA_restore\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_EH_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_EH_PE_absptr:\n        *s_out = \"DW_EH_PE_absptr\";\n        return DW_DLV_OK;\n    case DW_EH_PE_uleb128:\n        *s_out = \"DW_EH_PE_uleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata2:\n        *s_out = \"DW_EH_PE_udata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata4:\n        *s_out = \"DW_EH_PE_udata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_udata8:\n        *s_out = \"DW_EH_PE_udata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sleb128:\n        *s_out = \"DW_EH_PE_sleb128\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata2:\n        *s_out = \"DW_EH_PE_sdata2\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata4:\n        *s_out = \"DW_EH_PE_sdata4\";\n        return DW_DLV_OK;\n    case DW_EH_PE_sdata8:\n        *s_out = \"DW_EH_PE_sdata8\";\n        return DW_DLV_OK;\n    case DW_EH_PE_pcrel:\n        *s_out = \"DW_EH_PE_pcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_textrel:\n        *s_out = \"DW_EH_PE_textrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_datarel:\n        *s_out = \"DW_EH_PE_datarel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_funcrel:\n        *s_out = \"DW_EH_PE_funcrel\";\n        return DW_DLV_OK;\n    case DW_EH_PE_aligned:\n        *s_out = \"DW_EH_PE_aligned\";\n        return DW_DLV_OK;\n    case DW_EH_PE_omit:\n        *s_out = \"DW_EH_PE_omit\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_FRAME_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_FRAME_CFA_COL:\n        *s_out = \"DW_FRAME_CFA_COL\";\n        return DW_DLV_OK;\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_LAST_REG_NUM */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_RA_COL */\n    /* Skipping alternate spelling of value 0x0. DW_FRAME_STATIC_LINK */\n    case DW_FRAME_REG1:\n        *s_out = \"DW_FRAME_REG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG2:\n        *s_out = \"DW_FRAME_REG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG3:\n        *s_out = \"DW_FRAME_REG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG4:\n        *s_out = \"DW_FRAME_REG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG5:\n        *s_out = \"DW_FRAME_REG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG6:\n        *s_out = \"DW_FRAME_REG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG7:\n        *s_out = \"DW_FRAME_REG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG8:\n        *s_out = \"DW_FRAME_REG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG9:\n        *s_out = \"DW_FRAME_REG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG10:\n        *s_out = \"DW_FRAME_REG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG11:\n        *s_out = \"DW_FRAME_REG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG12:\n        *s_out = \"DW_FRAME_REG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG13:\n        *s_out = \"DW_FRAME_REG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG14:\n        *s_out = \"DW_FRAME_REG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG15:\n        *s_out = \"DW_FRAME_REG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG16:\n        *s_out = \"DW_FRAME_REG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG17:\n        *s_out = \"DW_FRAME_REG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG18:\n        *s_out = \"DW_FRAME_REG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG19:\n        *s_out = \"DW_FRAME_REG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG20:\n        *s_out = \"DW_FRAME_REG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG21:\n        *s_out = \"DW_FRAME_REG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG22:\n        *s_out = \"DW_FRAME_REG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG23:\n        *s_out = \"DW_FRAME_REG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG24:\n        *s_out = \"DW_FRAME_REG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG25:\n        *s_out = \"DW_FRAME_REG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG26:\n        *s_out = \"DW_FRAME_REG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG27:\n        *s_out = \"DW_FRAME_REG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG28:\n        *s_out = \"DW_FRAME_REG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG29:\n        *s_out = \"DW_FRAME_REG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG30:\n        *s_out = \"DW_FRAME_REG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_REG31:\n        *s_out = \"DW_FRAME_REG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG0:\n        *s_out = \"DW_FRAME_FREG0\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG1:\n        *s_out = \"DW_FRAME_FREG1\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG2:\n        *s_out = \"DW_FRAME_FREG2\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG3:\n        *s_out = \"DW_FRAME_FREG3\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG4:\n        *s_out = \"DW_FRAME_FREG4\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG5:\n        *s_out = \"DW_FRAME_FREG5\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG6:\n        *s_out = \"DW_FRAME_FREG6\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG7:\n        *s_out = \"DW_FRAME_FREG7\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG8:\n        *s_out = \"DW_FRAME_FREG8\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG9:\n        *s_out = \"DW_FRAME_FREG9\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG10:\n        *s_out = \"DW_FRAME_FREG10\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG11:\n        *s_out = \"DW_FRAME_FREG11\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG12:\n        *s_out = \"DW_FRAME_FREG12\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG13:\n        *s_out = \"DW_FRAME_FREG13\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG14:\n        *s_out = \"DW_FRAME_FREG14\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG15:\n        *s_out = \"DW_FRAME_FREG15\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG16:\n        *s_out = \"DW_FRAME_FREG16\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG17:\n        *s_out = \"DW_FRAME_FREG17\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG18:\n        *s_out = \"DW_FRAME_FREG18\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG19:\n        *s_out = \"DW_FRAME_FREG19\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG20:\n        *s_out = \"DW_FRAME_FREG20\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG21:\n        *s_out = \"DW_FRAME_FREG21\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG22:\n        *s_out = \"DW_FRAME_FREG22\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG23:\n        *s_out = \"DW_FRAME_FREG23\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG24:\n        *s_out = \"DW_FRAME_FREG24\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG25:\n        *s_out = \"DW_FRAME_FREG25\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG26:\n        *s_out = \"DW_FRAME_FREG26\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG27:\n        *s_out = \"DW_FRAME_FREG27\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG28:\n        *s_out = \"DW_FRAME_FREG28\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG29:\n        *s_out = \"DW_FRAME_FREG29\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG30:\n        *s_out = \"DW_FRAME_FREG30\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG31:\n        *s_out = \"DW_FRAME_FREG31\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG32:\n        *s_out = \"DW_FRAME_FREG32\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG33:\n        *s_out = \"DW_FRAME_FREG33\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG34:\n        *s_out = \"DW_FRAME_FREG34\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG35:\n        *s_out = \"DW_FRAME_FREG35\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG36:\n        *s_out = \"DW_FRAME_FREG36\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG37:\n        *s_out = \"DW_FRAME_FREG37\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG38:\n        *s_out = \"DW_FRAME_FREG38\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG39:\n        *s_out = \"DW_FRAME_FREG39\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG40:\n        *s_out = \"DW_FRAME_FREG40\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG41:\n        *s_out = \"DW_FRAME_FREG41\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG42:\n        *s_out = \"DW_FRAME_FREG42\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG43:\n        *s_out = \"DW_FRAME_FREG43\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG44:\n        *s_out = \"DW_FRAME_FREG44\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG45:\n        *s_out = \"DW_FRAME_FREG45\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG46:\n        *s_out = \"DW_FRAME_FREG46\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG47:\n        *s_out = \"DW_FRAME_FREG47\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG48:\n        *s_out = \"DW_FRAME_FREG48\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG49:\n        *s_out = \"DW_FRAME_FREG49\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG50:\n        *s_out = \"DW_FRAME_FREG50\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG51:\n        *s_out = \"DW_FRAME_FREG51\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG52:\n        *s_out = \"DW_FRAME_FREG52\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG53:\n        *s_out = \"DW_FRAME_FREG53\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG54:\n        *s_out = \"DW_FRAME_FREG54\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG55:\n        *s_out = \"DW_FRAME_FREG55\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG56:\n        *s_out = \"DW_FRAME_FREG56\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG57:\n        *s_out = \"DW_FRAME_FREG57\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG58:\n        *s_out = \"DW_FRAME_FREG58\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG59:\n        *s_out = \"DW_FRAME_FREG59\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG60:\n        *s_out = \"DW_FRAME_FREG60\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG61:\n        *s_out = \"DW_FRAME_FREG61\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG62:\n        *s_out = \"DW_FRAME_FREG62\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG63:\n        *s_out = \"DW_FRAME_FREG63\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG64:\n        *s_out = \"DW_FRAME_FREG64\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG65:\n        *s_out = \"DW_FRAME_FREG65\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG66:\n        *s_out = \"DW_FRAME_FREG66\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG67:\n        *s_out = \"DW_FRAME_FREG67\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG68:\n        *s_out = \"DW_FRAME_FREG68\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG69:\n        *s_out = \"DW_FRAME_FREG69\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG70:\n        *s_out = \"DW_FRAME_FREG70\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG71:\n        *s_out = \"DW_FRAME_FREG71\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG72:\n        *s_out = \"DW_FRAME_FREG72\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG73:\n        *s_out = \"DW_FRAME_FREG73\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG74:\n        *s_out = \"DW_FRAME_FREG74\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG75:\n        *s_out = \"DW_FRAME_FREG75\";\n        return DW_DLV_OK;\n    case DW_FRAME_FREG76:\n        *s_out = \"DW_FRAME_FREG76\";\n        return DW_DLV_OK;\n    case DW_FRAME_HIGHEST_NORMAL_REGISTER:\n        *s_out = \"DW_FRAME_HIGHEST_NORMAL_REGISTER\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_CHILDREN_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_CHILDREN_no:\n        *s_out = \"DW_CHILDREN_no\";\n        return DW_DLV_OK;\n    case DW_CHILDREN_yes:\n        *s_out = \"DW_CHILDREN_yes\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n/* ARGSUSED */\nint\ndwarf_get_ADDR_name (unsigned int val,const char ** s_out)\n{\n    switch (val) {\n    case DW_ADDR_none:\n        *s_out = \"DW_ADDR_none\";\n        return DW_DLV_OK;\n    }\n    return DW_DLV_NO_ENTRY;\n}\n\n/* END FILE */\n", "/* Generated routines, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef DWARF_NAMES_H\n#define DWARF_NAMES_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif /* __cplusplus */\n\nextern int dwarf_get_TAG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_children_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FORM_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_AT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_OP_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DEFAULTED_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_IDX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLEX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_RLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIVIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIKIND_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_UT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_SECT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_END_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATCF_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ACCESS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIRTUALITY_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LANG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ID_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_INL_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ORD_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DSC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNCT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ISA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACRO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACINFO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CFA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_EH_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FRAME_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CHILDREN_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ADDR_name(unsigned int /*val_in*/, const char ** /*s_out */);\n\n#ifdef __cplusplus\n}\n#endif /* __cplusplus */\n\n#endif /* DWARF_NAMES_H */\n\n/* END FILE */\n", "/* Automatically generated, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n#ifndef __DWARF_NAMES_ENUM_H__\n#define __DWARF_NAMES_ENUM_H__\n\nenum Dwarf_TAG_e {\n    DW_TAG_array_type                        = 0x0001,\n    DW_TAG_class_type                        = 0x0002,\n    DW_TAG_entry_point                       = 0x0003,\n    DW_TAG_enumeration_type                  = 0x0004,\n    DW_TAG_formal_parameter                  = 0x0005,\n    DW_TAG_imported_declaration              = 0x0008,\n    DW_TAG_label                             = 0x000a,\n    DW_TAG_lexical_block                     = 0x000b,\n    DW_TAG_member                            = 0x000d,\n    DW_TAG_pointer_type                      = 0x000f,\n    DW_TAG_reference_type                    = 0x0010,\n    DW_TAG_compile_unit                      = 0x0011,\n    DW_TAG_string_type                       = 0x0012,\n    DW_TAG_structure_type                    = 0x0013,\n    DW_TAG_subroutine_type                   = 0x0015,\n    DW_TAG_typedef                           = 0x0016,\n    DW_TAG_union_type                        = 0x0017,\n    DW_TAG_unspecified_parameters            = 0x0018,\n    DW_TAG_variant                           = 0x0019,\n    DW_TAG_common_block                      = 0x001a,\n    DW_TAG_common_inclusion                  = 0x001b,\n    DW_TAG_inheritance                       = 0x001c,\n    DW_TAG_inlined_subroutine                = 0x001d,\n    DW_TAG_module                            = 0x001e,\n    DW_TAG_ptr_to_member_type                = 0x001f,\n    DW_TAG_set_type                          = 0x0020,\n    DW_TAG_subrange_type                     = 0x0021,\n    DW_TAG_with_stmt                         = 0x0022,\n    DW_TAG_access_declaration                = 0x0023,\n    DW_TAG_base_type                         = 0x0024,\n    DW_TAG_catch_block                       = 0x0025,\n    DW_TAG_const_type                        = 0x0026,\n    DW_TAG_constant                          = 0x0027,\n    DW_TAG_enumerator                        = 0x0028,\n    DW_TAG_file_type                         = 0x0029,\n    DW_TAG_friend                            = 0x002a,\n    DW_TAG_namelist                          = 0x002b,\n    DW_TAG_namelist_item                     = 0x002c,\n    DW_TAG_packed_type                       = 0x002d,\n    DW_TAG_subprogram                        = 0x002e,\n    DW_TAG_template_type_parameter           = 0x002f,\n    DW_TAG_template_value_parameter          = 0x0030,\n    DW_TAG_thrown_type                       = 0x0031,\n    DW_TAG_try_block                         = 0x0032,\n    DW_TAG_variant_part                      = 0x0033,\n    DW_TAG_variable                          = 0x0034,\n    DW_TAG_volatile_type                     = 0x0035,\n    DW_TAG_dwarf_procedure                   = 0x0036,\n    DW_TAG_restrict_type                     = 0x0037,\n    DW_TAG_interface_type                    = 0x0038,\n    DW_TAG_namespace                         = 0x0039,\n    DW_TAG_imported_module                   = 0x003a,\n    DW_TAG_unspecified_type                  = 0x003b,\n    DW_TAG_partial_unit                      = 0x003c,\n    DW_TAG_imported_unit                     = 0x003d,\n    DW_TAG_mutable_type                      = 0x003e,\n    DW_TAG_condition                         = 0x003f,\n    DW_TAG_shared_type                       = 0x0040,\n    DW_TAG_type_unit                         = 0x0041,\n    DW_TAG_rvalue_reference_type             = 0x0042,\n    DW_TAG_template_alias                    = 0x0043,\n    DW_TAG_coarray_type                      = 0x0044,\n    DW_TAG_generic_subrange                  = 0x0045,\n    DW_TAG_dynamic_type                      = 0x0046,\n    DW_TAG_atomic_type                       = 0x0047,\n    DW_TAG_call_site                         = 0x0048,\n    DW_TAG_call_site_parameter               = 0x0049,\n    DW_TAG_skeleton_unit                     = 0x004a,\n    DW_TAG_immutable_type                    = 0x004b,\n    DW_TAG_lo_user                           = 0x4080,\n    DW_TAG_MIPS_loop                         = 0x4081,\n    DW_TAG_HP_array_descriptor               = 0x4090,\n    DW_TAG_format_label                      = 0x4101,\n    DW_TAG_function_template                 = 0x4102,\n    DW_TAG_class_template                    = 0x4103,\n    DW_TAG_GNU_BINCL                         = 0x4104,\n    DW_TAG_GNU_EINCL                         = 0x4105,\n    DW_TAG_GNU_template_template_parameter   = 0x4106,\n    DW_TAG_GNU_template_parameter_pack       = 0x4107,\n    DW_TAG_GNU_formal_parameter_pack         = 0x4108,\n    DW_TAG_GNU_call_site                     = 0x4109,\n    DW_TAG_GNU_call_site_parameter           = 0x410a,\n    DW_TAG_SUN_function_template             = 0x4201,\n    DW_TAG_SUN_class_template                = 0x4202,\n    DW_TAG_SUN_struct_template               = 0x4203,\n    DW_TAG_SUN_union_template                = 0x4204,\n    DW_TAG_SUN_indirect_inheritance          = 0x4205,\n    DW_TAG_SUN_codeflags                     = 0x4206,\n    DW_TAG_SUN_memop_info                    = 0x4207,\n    DW_TAG_SUN_omp_child_func                = 0x4208,\n    DW_TAG_SUN_rtti_descriptor               = 0x4209,\n    DW_TAG_SUN_dtor_info                     = 0x420a,\n    DW_TAG_SUN_dtor                          = 0x420b,\n    DW_TAG_SUN_f90_interface                 = 0x420c,\n    DW_TAG_SUN_fortran_vax_structure         = 0x420d,\n    DW_TAG_SUN_hi                            = 0x42ff,\n    DW_TAG_ALTIUM_circ_type                  = 0x5101,\n    DW_TAG_ALTIUM_mwa_circ_type              = 0x5102,\n    DW_TAG_ALTIUM_rev_carry_type             = 0x5103,\n    DW_TAG_ALTIUM_rom                        = 0x5111,\n    DW_TAG_upc_shared_type                   = 0x8765,\n    DW_TAG_upc_strict_type                   = 0x8766,\n    DW_TAG_upc_relaxed_type                  = 0x8767,\n    DW_TAG_PGI_kanji_type                    = 0xa000,\n    DW_TAG_PGI_interface_block               = 0xa020,\n    DW_TAG_hi_user                           = 0xffff\n};\n\nenum Dwarf_children_e {\n    DW_children_no                           = 0x0000,\n    DW_children_yes                          = 0x0001\n};\n\nenum Dwarf_FORM_e {\n    DW_FORM_addr                             = 0x0001,\n    DW_FORM_block2                           = 0x0003,\n    DW_FORM_block4                           = 0x0004,\n    DW_FORM_data2                            = 0x0005,\n    DW_FORM_data4                            = 0x0006,\n    DW_FORM_data8                            = 0x0007,\n    DW_FORM_string                           = 0x0008,\n    DW_FORM_block                            = 0x0009,\n    DW_FORM_block1                           = 0x000a,\n    DW_FORM_data1                            = 0x000b,\n    DW_FORM_flag                             = 0x000c,\n    DW_FORM_sdata                            = 0x000d,\n    DW_FORM_strp                             = 0x000e,\n    DW_FORM_udata                            = 0x000f,\n    DW_FORM_ref_addr                         = 0x0010,\n    DW_FORM_ref1                             = 0x0011,\n    DW_FORM_ref2                             = 0x0012,\n    DW_FORM_ref4                             = 0x0013,\n    DW_FORM_ref8                             = 0x0014,\n    DW_FORM_ref_udata                        = 0x0015,\n    DW_FORM_indirect                         = 0x0016,\n    DW_FORM_sec_offset                       = 0x0017,\n    DW_FORM_exprloc                          = 0x0018,\n    DW_FORM_flag_present                     = 0x0019,\n    DW_FORM_strx                             = 0x001a,\n    DW_FORM_addrx                            = 0x001b,\n    DW_FORM_ref_sup4                         = 0x001c,\n    DW_FORM_strp_sup                         = 0x001d,\n    DW_FORM_data16                           = 0x001e,\n    DW_FORM_line_strp                        = 0x001f,\n    DW_FORM_ref_sig8                         = 0x0020,\n    DW_FORM_implicit_const                   = 0x0021,\n    DW_FORM_loclistx                         = 0x0022,\n    DW_FORM_rnglistx                         = 0x0023,\n    DW_FORM_ref_sup8                         = 0x0024,\n    DW_FORM_strx1                            = 0x0025,\n    DW_FORM_strx2                            = 0x0026,\n    DW_FORM_strx3                            = 0x0027,\n    DW_FORM_strx4                            = 0x0028,\n    DW_FORM_addrx1                           = 0x0029,\n    DW_FORM_addrx2                           = 0x002a,\n    DW_FORM_addrx3                           = 0x002b,\n    DW_FORM_addrx4                           = 0x002c,\n    DW_FORM_GNU_addr_index                   = 0x1f01,\n    DW_FORM_GNU_str_index                    = 0x1f02,\n    DW_FORM_GNU_ref_alt                      = 0x1f20,\n    DW_FORM_GNU_strp_alt                     = 0x1f21\n};\n\nenum Dwarf_AT_e {\n    DW_AT_sibling                            = 0x0001,\n    DW_AT_location                           = 0x0002,\n    DW_AT_name                               = 0x0003,\n    DW_AT_ordering                           = 0x0009,\n    DW_AT_subscr_data                        = 0x000a,\n    DW_AT_byte_size                          = 0x000b,\n    DW_AT_bit_offset                         = 0x000c,\n    DW_AT_bit_size                           = 0x000d,\n    DW_AT_element_list                       = 0x000f,\n    DW_AT_stmt_list                          = 0x0010,\n    DW_AT_low_pc                             = 0x0011,\n    DW_AT_high_pc                            = 0x0012,\n    DW_AT_language                           = 0x0013,\n    DW_AT_member                             = 0x0014,\n    DW_AT_discr                              = 0x0015,\n    DW_AT_discr_value                        = 0x0016,\n    DW_AT_visibility                         = 0x0017,\n    DW_AT_import                             = 0x0018,\n    DW_AT_string_length                      = 0x0019,\n    DW_AT_common_reference                   = 0x001a,\n    DW_AT_comp_dir                           = 0x001b,\n    DW_AT_const_value                        = 0x001c,\n    DW_AT_containing_type                    = 0x001d,\n    DW_AT_default_value                      = 0x001e,\n    DW_AT_inline                             = 0x0020,\n    DW_AT_is_optional                        = 0x0021,\n    DW_AT_lower_bound                        = 0x0022,\n    DW_AT_producer                           = 0x0025,\n    DW_AT_prototyped                         = 0x0027,\n    DW_AT_return_addr                        = 0x002a,\n    DW_AT_start_scope                        = 0x002c,\n    DW_AT_bit_stride                         = 0x002e,\n    DW_AT_upper_bound                        = 0x002f,\n    DW_AT_abstract_origin                    = 0x0031,\n    DW_AT_accessibility                      = 0x0032,\n    DW_AT_address_class                      = 0x0033,\n    DW_AT_artificial                         = 0x0034,\n    DW_AT_base_types                         = 0x0035,\n    DW_AT_calling_convention                 = 0x0036,\n    DW_AT_count                              = 0x0037,\n    DW_AT_data_member_location               = 0x0038,\n    DW_AT_decl_column                        = 0x0039,\n    DW_AT_decl_file                          = 0x003a,\n    DW_AT_decl_line                          = 0x003b,\n    DW_AT_declaration                        = 0x003c,\n    DW_AT_discr_list                         = 0x003d,\n    DW_AT_encoding                           = 0x003e,\n    DW_AT_external                           = 0x003f,\n    DW_AT_frame_base                         = 0x0040,\n    DW_AT_friend                             = 0x0041,\n    DW_AT_identifier_case                    = 0x0042,\n    DW_AT_macro_info                         = 0x0043,\n    DW_AT_namelist_item                      = 0x0044,\n    DW_AT_priority                           = 0x0045,\n    DW_AT_segment                            = 0x0046,\n    DW_AT_specification                      = 0x0047,\n    DW_AT_static_link                        = 0x0048,\n    DW_AT_type                               = 0x0049,\n    DW_AT_use_location                       = 0x004a,\n    DW_AT_variable_parameter                 = 0x004b,\n    DW_AT_virtuality                         = 0x004c,\n    DW_AT_vtable_elem_location               = 0x004d,\n    DW_AT_allocated                          = 0x004e,\n    DW_AT_associated                         = 0x004f,\n    DW_AT_data_location                      = 0x0050,\n    DW_AT_byte_stride                        = 0x0051,\n    DW_AT_entry_pc                           = 0x0052,\n    DW_AT_use_UTF8                           = 0x0053,\n    DW_AT_extension                          = 0x0054,\n    DW_AT_ranges                             = 0x0055,\n    DW_AT_trampoline                         = 0x0056,\n    DW_AT_call_column                        = 0x0057,\n    DW_AT_call_file                          = 0x0058,\n    DW_AT_call_line                          = 0x0059,\n    DW_AT_description                        = 0x005a,\n    DW_AT_binary_scale                       = 0x005b,\n    DW_AT_decimal_scale                      = 0x005c,\n    DW_AT_small                              = 0x005d,\n    DW_AT_decimal_sign                       = 0x005e,\n    DW_AT_digit_count                        = 0x005f,\n    DW_AT_picture_string                     = 0x0060,\n    DW_AT_mutable                            = 0x0061,\n    DW_AT_threads_scaled                     = 0x0062,\n    DW_AT_explicit                           = 0x0063,\n    DW_AT_object_pointer                     = 0x0064,\n    DW_AT_endianity                          = 0x0065,\n    DW_AT_elemental                          = 0x0066,\n    DW_AT_pure                               = 0x0067,\n    DW_AT_recursive                          = 0x0068,\n    DW_AT_signature                          = 0x0069,\n    DW_AT_main_subprogram                    = 0x006a,\n    DW_AT_data_bit_offset                    = 0x006b,\n    DW_AT_const_expr                         = 0x006c,\n    DW_AT_enum_class                         = 0x006d,\n    DW_AT_linkage_name                       = 0x006e,\n    DW_AT_string_length_bit_size             = 0x006f,\n    DW_AT_string_length_byte_size            = 0x0070,\n    DW_AT_rank                               = 0x0071,\n    DW_AT_str_offsets_base                   = 0x0072,\n    DW_AT_addr_base                          = 0x0073,\n    DW_AT_rnglists_base                      = 0x0074,\n    DW_AT_dwo_id                             = 0x0075,\n    DW_AT_dwo_name                           = 0x0076,\n    DW_AT_reference                          = 0x0077,\n    DW_AT_rvalue_reference                   = 0x0078,\n    DW_AT_macros                             = 0x0079,\n    DW_AT_call_all_calls                     = 0x007a,\n    DW_AT_call_all_source_calls              = 0x007b,\n    DW_AT_call_all_tail_calls                = 0x007c,\n    DW_AT_call_return_pc                     = 0x007d,\n    DW_AT_call_value                         = 0x007e,\n    DW_AT_call_origin                        = 0x007f,\n    DW_AT_call_parameter                     = 0x0080,\n    DW_AT_call_pc                            = 0x0081,\n    DW_AT_call_tail_call                     = 0x0082,\n    DW_AT_call_target                        = 0x0083,\n    DW_AT_call_target_clobbered              = 0x0084,\n    DW_AT_call_data_location                 = 0x0085,\n    DW_AT_call_data_value                    = 0x0086,\n    DW_AT_noreturn                           = 0x0087,\n    DW_AT_alignment                          = 0x0088,\n    DW_AT_export_symbols                     = 0x0089,\n    DW_AT_deleted                            = 0x008a,\n    DW_AT_defaulted                          = 0x008b,\n    DW_AT_loclists_base                      = 0x008c,\n    DW_AT_HP_block_index                     = 0x2000,\n    DW_AT_MIPS_fde                           = 0x2001,\n    DW_AT_MIPS_loop_begin                    = 0x2002,\n    DW_AT_MIPS_tail_loop_begin               = 0x2003,\n    DW_AT_MIPS_epilog_begin                  = 0x2004,\n    DW_AT_MIPS_loop_unroll_factor            = 0x2005,\n    DW_AT_MIPS_software_pipeline_depth       = 0x2006,\n    DW_AT_MIPS_linkage_name                  = 0x2007,\n    DW_AT_MIPS_stride                        = 0x2008,\n    DW_AT_MIPS_abstract_name                 = 0x2009,\n    DW_AT_MIPS_clone_origin                  = 0x200a,\n    DW_AT_MIPS_has_inlines                   = 0x200b,\n    DW_AT_MIPS_stride_byte                   = 0x200c,\n    DW_AT_MIPS_stride_elem                   = 0x200d,\n    DW_AT_MIPS_ptr_dopetype                  = 0x200e,\n    DW_AT_MIPS_allocatable_dopetype          = 0x200f,\n    DW_AT_MIPS_assumed_shape_dopetype        = 0x2010,\n    DW_AT_MIPS_assumed_size                  = 0x2011,\n    DW_AT_HP_raw_data_ptr                    = 0x2012,\n    DW_AT_HP_pass_by_reference               = 0x2013,\n    DW_AT_HP_opt_level                       = 0x2014,\n    DW_AT_HP_prof_version_id                 = 0x2015,\n    DW_AT_HP_opt_flags                       = 0x2016,\n    DW_AT_HP_cold_region_low_pc              = 0x2017,\n    DW_AT_HP_cold_region_high_pc             = 0x2018,\n    DW_AT_HP_all_variables_modifiable        = 0x2019,\n    DW_AT_HP_linkage_name                    = 0x201a,\n    DW_AT_HP_prof_flags                      = 0x201b,\n    DW_AT_INTEL_other_endian                 = 0x2026,\n    DW_AT_sf_names                           = 0x2101,\n    DW_AT_src_info                           = 0x2102,\n    DW_AT_mac_info                           = 0x2103,\n    DW_AT_src_coords                         = 0x2104,\n    DW_AT_body_begin                         = 0x2105,\n    DW_AT_body_end                           = 0x2106,\n    DW_AT_GNU_vector                         = 0x2107,\n    DW_AT_GNU_guarded_by                     = 0x2108,\n    DW_AT_GNU_pt_guarded_by                  = 0x2109,\n    DW_AT_GNU_guarded                        = 0x210a,\n    DW_AT_GNU_pt_guarded                     = 0x210b,\n    DW_AT_GNU_locks_excluded                 = 0x210c,\n    DW_AT_GNU_exclusive_locks_required       = 0x210d,\n    DW_AT_GNU_shared_locks_required          = 0x210e,\n    DW_AT_GNU_odr_signature                  = 0x210f,\n    DW_AT_GNU_template_name                  = 0x2110,\n    DW_AT_GNU_call_site_value                = 0x2111,\n    DW_AT_GNU_call_site_data_value           = 0x2112,\n    DW_AT_GNU_call_site_target               = 0x2113,\n    DW_AT_GNU_call_site_target_clobbered     = 0x2114,\n    DW_AT_GNU_tail_call                      = 0x2115,\n    DW_AT_GNU_all_tail_call_sites            = 0x2116,\n    DW_AT_GNU_all_call_sites                 = 0x2117,\n    DW_AT_GNU_all_source_call_sites          = 0x2118,\n    DW_AT_GNU_macros                         = 0x2119,\n    DW_AT_GNU_deleted                        = 0x211a,\n    DW_AT_GNU_dwo_name                       = 0x2130,\n    DW_AT_GNU_dwo_id                         = 0x2131,\n    DW_AT_GNU_ranges_base                    = 0x2132,\n    DW_AT_GNU_addr_base                      = 0x2133,\n    DW_AT_GNU_pubnames                       = 0x2134,\n    DW_AT_GNU_pubtypes                       = 0x2135,\n    DW_AT_GNU_discriminator                  = 0x2136,\n    DW_AT_GNU_locviews                       = 0x2137,\n    DW_AT_GNU_entry_view                     = 0x2138,\n    DW_AT_SUN_template                       = 0x2201,\n    DW_AT_SUN_alignment                      = 0x2202,\n    DW_AT_SUN_vtable                         = 0x2203,\n    DW_AT_SUN_count_guarantee                = 0x2204,\n    DW_AT_SUN_command_line                   = 0x2205,\n    DW_AT_SUN_vbase                          = 0x2206,\n    DW_AT_SUN_compile_options                = 0x2207,\n    DW_AT_SUN_language                       = 0x2208,\n    DW_AT_SUN_browser_file                   = 0x2209,\n    DW_AT_SUN_vtable_abi                     = 0x2210,\n    DW_AT_SUN_func_offsets                   = 0x2211,\n    DW_AT_SUN_cf_kind                        = 0x2212,\n    DW_AT_SUN_vtable_index                   = 0x2213,\n    DW_AT_SUN_omp_tpriv_addr                 = 0x2214,\n    DW_AT_SUN_omp_child_func                 = 0x2215,\n    DW_AT_SUN_func_offset                    = 0x2216,\n    DW_AT_SUN_memop_type_ref                 = 0x2217,\n    DW_AT_SUN_profile_id                     = 0x2218,\n    DW_AT_SUN_memop_signature                = 0x2219,\n    DW_AT_SUN_obj_dir                        = 0x2220,\n    DW_AT_SUN_obj_file                       = 0x2221,\n    DW_AT_SUN_original_name                  = 0x2222,\n    DW_AT_SUN_hwcprof_signature              = 0x2223,\n    DW_AT_SUN_amd64_parmdump                 = 0x2224,\n    DW_AT_SUN_part_link_name                 = 0x2225,\n    DW_AT_SUN_link_name                      = 0x2226,\n    DW_AT_SUN_pass_with_const                = 0x2227,\n    DW_AT_SUN_return_with_const              = 0x2228,\n    DW_AT_SUN_import_by_name                 = 0x2229,\n    DW_AT_SUN_f90_pointer                    = 0x222a,\n    DW_AT_SUN_pass_by_ref                    = 0x222b,\n    DW_AT_SUN_f90_allocatable                = 0x222c,\n    DW_AT_SUN_f90_assumed_shape_array        = 0x222d,\n    DW_AT_SUN_c_vla                          = 0x222e,\n    DW_AT_SUN_return_value_ptr               = 0x2230,\n    DW_AT_SUN_dtor_start                     = 0x2231,\n    DW_AT_SUN_dtor_length                    = 0x2232,\n    DW_AT_SUN_dtor_state_initial             = 0x2233,\n    DW_AT_SUN_dtor_state_final               = 0x2234,\n    DW_AT_SUN_dtor_state_deltas              = 0x2235,\n    DW_AT_SUN_import_by_lname                = 0x2236,\n    DW_AT_SUN_f90_use_only                   = 0x2237,\n    DW_AT_SUN_namelist_spec                  = 0x2238,\n    DW_AT_SUN_is_omp_child_func              = 0x2239,\n    DW_AT_SUN_fortran_main_alias             = 0x223a,\n    DW_AT_SUN_fortran_based                  = 0x223b,\n    DW_AT_ALTIUM_loclist                     = 0x2300,\n    DW_AT_use_GNAT_descriptive_type          = 0x2301,\n    DW_AT_GNAT_descriptive_type              = 0x2302,\n    DW_AT_GNU_numerator                      = 0x2303,\n    DW_AT_GNU_denominator                    = 0x2304,\n    DW_AT_GNU_bias                           = 0x2305,\n    DW_AT_go_kind                            = 0x2900,\n    DW_AT_go_key                             = 0x2901,\n    DW_AT_go_elem                            = 0x2902,\n    DW_AT_go_embedded_field                  = 0x2903,\n    DW_AT_go_runtime_type                    = 0x2904,\n    DW_AT_upc_threads_scaled                 = 0x3210,\n    DW_AT_PGI_lbase                          = 0x3a00,\n    DW_AT_PGI_soffset                        = 0x3a01,\n    DW_AT_PGI_lstride                        = 0x3a02,\n    DW_AT_APPLE_optimized                    = 0x3fe1,\n    DW_AT_APPLE_flags                        = 0x3fe2,\n    DW_AT_APPLE_isa                          = 0x3fe3,\n    DW_AT_APPLE_block                        = 0x3fe4,\n    DW_AT_APPLE_major_runtime_vers           = 0x3fe5,\n    DW_AT_APPLE_runtime_class                = 0x3fe6,\n    DW_AT_APPLE_omit_frame_ptr               = 0x3fe7,\n    DW_AT_hi_user                            = 0x3fff\n};\n\nenum Dwarf_OP_e {\n    DW_OP_addr                               = 0x0003,\n    DW_OP_deref                              = 0x0006,\n    DW_OP_const1u                            = 0x0008,\n    DW_OP_const1s                            = 0x0009,\n    DW_OP_const2u                            = 0x000a,\n    DW_OP_const2s                            = 0x000b,\n    DW_OP_const4u                            = 0x000c,\n    DW_OP_const4s                            = 0x000d,\n    DW_OP_const8u                            = 0x000e,\n    DW_OP_const8s                            = 0x000f,\n    DW_OP_constu                             = 0x0010,\n    DW_OP_consts                             = 0x0011,\n    DW_OP_dup                                = 0x0012,\n    DW_OP_drop                               = 0x0013,\n    DW_OP_over                               = 0x0014,\n    DW_OP_pick                               = 0x0015,\n    DW_OP_swap                               = 0x0016,\n    DW_OP_rot                                = 0x0017,\n    DW_OP_xderef                             = 0x0018,\n    DW_OP_abs                                = 0x0019,\n    DW_OP_and                                = 0x001a,\n    DW_OP_div                                = 0x001b,\n    DW_OP_minus                              = 0x001c,\n    DW_OP_mod                                = 0x001d,\n    DW_OP_mul                                = 0x001e,\n    DW_OP_neg                                = 0x001f,\n    DW_OP_not                                = 0x0020,\n    DW_OP_or                                 = 0x0021,\n    DW_OP_plus                               = 0x0022,\n    DW_OP_plus_uconst                        = 0x0023,\n    DW_OP_shl                                = 0x0024,\n    DW_OP_shr                                = 0x0025,\n    DW_OP_shra                               = 0x0026,\n    DW_OP_xor                                = 0x0027,\n    DW_OP_bra                                = 0x0028,\n    DW_OP_eq                                 = 0x0029,\n    DW_OP_ge                                 = 0x002a,\n    DW_OP_gt                                 = 0x002b,\n    DW_OP_le                                 = 0x002c,\n    DW_OP_lt                                 = 0x002d,\n    DW_OP_ne                                 = 0x002e,\n    DW_OP_skip                               = 0x002f,\n    DW_OP_lit0                               = 0x0030,\n    DW_OP_lit1                               = 0x0031,\n    DW_OP_lit2                               = 0x0032,\n    DW_OP_lit3                               = 0x0033,\n    DW_OP_lit4                               = 0x0034,\n    DW_OP_lit5                               = 0x0035,\n    DW_OP_lit6                               = 0x0036,\n    DW_OP_lit7                               = 0x0037,\n    DW_OP_lit8                               = 0x0038,\n    DW_OP_lit9                               = 0x0039,\n    DW_OP_lit10                              = 0x003a,\n    DW_OP_lit11                              = 0x003b,\n    DW_OP_lit12                              = 0x003c,\n    DW_OP_lit13                              = 0x003d,\n    DW_OP_lit14                              = 0x003e,\n    DW_OP_lit15                              = 0x003f,\n    DW_OP_lit16                              = 0x0040,\n    DW_OP_lit17                              = 0x0041,\n    DW_OP_lit18                              = 0x0042,\n    DW_OP_lit19                              = 0x0043,\n    DW_OP_lit20                              = 0x0044,\n    DW_OP_lit21                              = 0x0045,\n    DW_OP_lit22                              = 0x0046,\n    DW_OP_lit23                              = 0x0047,\n    DW_OP_lit24                              = 0x0048,\n    DW_OP_lit25                              = 0x0049,\n    DW_OP_lit26                              = 0x004a,\n    DW_OP_lit27                              = 0x004b,\n    DW_OP_lit28                              = 0x004c,\n    DW_OP_lit29                              = 0x004d,\n    DW_OP_lit30                              = 0x004e,\n    DW_OP_lit31                              = 0x004f,\n    DW_OP_reg0                               = 0x0050,\n    DW_OP_reg1                               = 0x0051,\n    DW_OP_reg2                               = 0x0052,\n    DW_OP_reg3                               = 0x0053,\n    DW_OP_reg4                               = 0x0054,\n    DW_OP_reg5                               = 0x0055,\n    DW_OP_reg6                               = 0x0056,\n    DW_OP_reg7                               = 0x0057,\n    DW_OP_reg8                               = 0x0058,\n    DW_OP_reg9                               = 0x0059,\n    DW_OP_reg10                              = 0x005a,\n    DW_OP_reg11                              = 0x005b,\n    DW_OP_reg12                              = 0x005c,\n    DW_OP_reg13                              = 0x005d,\n    DW_OP_reg14                              = 0x005e,\n    DW_OP_reg15                              = 0x005f,\n    DW_OP_reg16                              = 0x0060,\n    DW_OP_reg17                              = 0x0061,\n    DW_OP_reg18                              = 0x0062,\n    DW_OP_reg19                              = 0x0063,\n    DW_OP_reg20                              = 0x0064,\n    DW_OP_reg21                              = 0x0065,\n    DW_OP_reg22                              = 0x0066,\n    DW_OP_reg23                              = 0x0067,\n    DW_OP_reg24                              = 0x0068,\n    DW_OP_reg25                              = 0x0069,\n    DW_OP_reg26                              = 0x006a,\n    DW_OP_reg27                              = 0x006b,\n    DW_OP_reg28                              = 0x006c,\n    DW_OP_reg29                              = 0x006d,\n    DW_OP_reg30                              = 0x006e,\n    DW_OP_reg31                              = 0x006f,\n    DW_OP_breg0                              = 0x0070,\n    DW_OP_breg1                              = 0x0071,\n    DW_OP_breg2                              = 0x0072,\n    DW_OP_breg3                              = 0x0073,\n    DW_OP_breg4                              = 0x0074,\n    DW_OP_breg5                              = 0x0075,\n    DW_OP_breg6                              = 0x0076,\n    DW_OP_breg7                              = 0x0077,\n    DW_OP_breg8                              = 0x0078,\n    DW_OP_breg9                              = 0x0079,\n    DW_OP_breg10                             = 0x007a,\n    DW_OP_breg11                             = 0x007b,\n    DW_OP_breg12                             = 0x007c,\n    DW_OP_breg13                             = 0x007d,\n    DW_OP_breg14                             = 0x007e,\n    DW_OP_breg15                             = 0x007f,\n    DW_OP_breg16                             = 0x0080,\n    DW_OP_breg17                             = 0x0081,\n    DW_OP_breg18                             = 0x0082,\n    DW_OP_breg19                             = 0x0083,\n    DW_OP_breg20                             = 0x0084,\n    DW_OP_breg21                             = 0x0085,\n    DW_OP_breg22                             = 0x0086,\n    DW_OP_breg23                             = 0x0087,\n    DW_OP_breg24                             = 0x0088,\n    DW_OP_breg25                             = 0x0089,\n    DW_OP_breg26                             = 0x008a,\n    DW_OP_breg27                             = 0x008b,\n    DW_OP_breg28                             = 0x008c,\n    DW_OP_breg29                             = 0x008d,\n    DW_OP_breg30                             = 0x008e,\n    DW_OP_breg31                             = 0x008f,\n    DW_OP_regx                               = 0x0090,\n    DW_OP_fbreg                              = 0x0091,\n    DW_OP_bregx                              = 0x0092,\n    DW_OP_piece                              = 0x0093,\n    DW_OP_deref_size                         = 0x0094,\n    DW_OP_xderef_size                        = 0x0095,\n    DW_OP_nop                                = 0x0096,\n    DW_OP_push_object_address                = 0x0097,\n    DW_OP_call2                              = 0x0098,\n    DW_OP_call4                              = 0x0099,\n    DW_OP_call_ref                           = 0x009a,\n    DW_OP_form_tls_address                   = 0x009b,\n    DW_OP_call_frame_cfa                     = 0x009c,\n    DW_OP_bit_piece                          = 0x009d,\n    DW_OP_implicit_value                     = 0x009e,\n    DW_OP_stack_value                        = 0x009f,\n    DW_OP_implicit_pointer                   = 0x00a0,\n    DW_OP_addrx                              = 0x00a1,\n    DW_OP_constx                             = 0x00a2,\n    DW_OP_entry_value                        = 0x00a3,\n    DW_OP_const_type                         = 0x00a4,\n    DW_OP_regval_type                        = 0x00a5,\n    DW_OP_deref_type                         = 0x00a6,\n    DW_OP_xderef_type                        = 0x00a7,\n    DW_OP_convert                            = 0x00a8,\n    DW_OP_reinterpret                        = 0x00a9,\n    DW_OP_GNU_push_tls_address               = 0x00e0,\n    DW_OP_HP_is_value                        = 0x00e1,\n    DW_OP_HP_fltconst4                       = 0x00e2,\n    DW_OP_HP_fltconst8                       = 0x00e3,\n    DW_OP_HP_mod_range                       = 0x00e4,\n    DW_OP_HP_unmod_range                     = 0x00e5,\n    DW_OP_HP_tls                             = 0x00e6,\n    DW_OP_INTEL_bit_piece                    = 0x00e8,\n    DW_OP_GNU_uninit                         = 0x00f0,\n    DW_OP_GNU_encoded_addr                   = 0x00f1,\n    DW_OP_GNU_implicit_pointer               = 0x00f2,\n    DW_OP_GNU_entry_value                    = 0x00f3,\n    DW_OP_GNU_const_type                     = 0x00f4,\n    DW_OP_GNU_regval_type                    = 0x00f5,\n    DW_OP_GNU_deref_type                     = 0x00f6,\n    DW_OP_GNU_convert                        = 0x00f7,\n    DW_OP_PGI_omp_thread_num                 = 0x00f8,\n    DW_OP_GNU_reinterpret                    = 0x00f9,\n    DW_OP_GNU_parameter_ref                  = 0x00fa,\n    DW_OP_GNU_addr_index                     = 0x00fb,\n    DW_OP_GNU_const_index                    = 0x00fc,\n    DW_OP_GNU_variable_value                 = 0x00fd,\n    DW_OP_hi_user                            = 0x00ff\n};\n\nenum Dwarf_ATE_e {\n    DW_ATE_address                           = 0x0001,\n    DW_ATE_boolean                           = 0x0002,\n    DW_ATE_complex_float                     = 0x0003,\n    DW_ATE_float                             = 0x0004,\n    DW_ATE_signed                            = 0x0005,\n    DW_ATE_signed_char                       = 0x0006,\n    DW_ATE_unsigned                          = 0x0007,\n    DW_ATE_unsigned_char                     = 0x0008,\n    DW_ATE_imaginary_float                   = 0x0009,\n    DW_ATE_packed_decimal                    = 0x000a,\n    DW_ATE_numeric_string                    = 0x000b,\n    DW_ATE_edited                            = 0x000c,\n    DW_ATE_signed_fixed                      = 0x000d,\n    DW_ATE_unsigned_fixed                    = 0x000e,\n    DW_ATE_decimal_float                     = 0x000f,\n    DW_ATE_UTF                               = 0x0010,\n    DW_ATE_UCS                               = 0x0011,\n    DW_ATE_ASCII                             = 0x0012,\n    DW_ATE_ALTIUM_fract                      = 0x0080,\n    DW_ATE_ALTIUM_accum                      = 0x0081,\n    DW_ATE_HP_float128                       = 0x0082,\n    DW_ATE_HP_complex_float128               = 0x0083,\n    DW_ATE_HP_floathpintel                   = 0x0084,\n    DW_ATE_HP_imaginary_float80              = 0x0085,\n    DW_ATE_HP_imaginary_float128             = 0x0086,\n    DW_ATE_SUN_interval_float                = 0x0091,\n    DW_ATE_SUN_imaginary_float               = 0x0092,\n    DW_ATE_hi_user                           = 0x00ff\n};\n\nenum Dwarf_DEFAULTED_e {\n    DW_DEFAULTED_no                          = 0x0000,\n    DW_DEFAULTED_in_class                    = 0x0001,\n    DW_DEFAULTED_out_of_class                = 0x0002\n};\n\nenum Dwarf_IDX_e {\n    DW_IDX_compile_unit                      = 0x0001,\n    DW_IDX_type_unit                         = 0x0002,\n    DW_IDX_die_offset                        = 0x0003,\n    DW_IDX_parent                            = 0x0004,\n    DW_IDX_type_hash                         = 0x0005,\n    DW_IDX_hi_user                           = 0x0fff,\n    DW_IDX_lo_user                           = 0x2000\n};\n\nenum Dwarf_LLEX_e {\n    DW_LLEX_end_of_list_entry                = 0x0000,\n    DW_LLEX_base_address_selection_entry     = 0x0001,\n    DW_LLEX_start_end_entry                  = 0x0002,\n    DW_LLEX_start_length_entry               = 0x0003,\n    DW_LLEX_offset_pair_entry                = 0x0004\n};\n\nenum Dwarf_LLE_e {\n    DW_LLE_end_of_list                       = 0x0000,\n    DW_LLE_base_addressx                     = 0x0001,\n    DW_LLE_startx_endx                       = 0x0002,\n    DW_LLE_startx_length                     = 0x0003,\n    DW_LLE_offset_pair                       = 0x0004,\n    DW_LLE_default_location                  = 0x0005,\n    DW_LLE_base_address                      = 0x0006,\n    DW_LLE_start_end                         = 0x0007,\n    DW_LLE_start_length                      = 0x0008\n};\n\nenum Dwarf_RLE_e {\n    DW_RLE_end_of_list                       = 0x0000,\n    DW_RLE_base_addressx                     = 0x0001,\n    DW_RLE_startx_endx                       = 0x0002,\n    DW_RLE_startx_length                     = 0x0003,\n    DW_RLE_offset_pair                       = 0x0004,\n    DW_RLE_base_address                      = 0x0005,\n    DW_RLE_start_end                         = 0x0006,\n    DW_RLE_start_length                      = 0x0007\n};\n\nenum Dwarf_GNUIVIS_e {\n    DW_GNUIVIS_global                        = 0x0000,\n    DW_GNUIVIS_static                        = 0x0001\n};\n\nenum Dwarf_GNUIKIND_e {\n    DW_GNUIKIND_none                         = 0x0000,\n    DW_GNUIKIND_type                         = 0x0001,\n    DW_GNUIKIND_variable                     = 0x0002,\n    DW_GNUIKIND_function                     = 0x0003,\n    DW_GNUIKIND_other                        = 0x0004\n};\n\nenum Dwarf_UT_e {\n    DW_UT_compile                            = 0x0001,\n    DW_UT_type                               = 0x0002,\n    DW_UT_partial                            = 0x0003,\n    DW_UT_skeleton                           = 0x0004,\n    DW_UT_split_compile                      = 0x0005,\n    DW_UT_split_type                         = 0x0006,\n    DW_UT_lo_user                            = 0x0080,\n    DW_UT_hi_user                            = 0x00ff\n};\n\nenum Dwarf_SECT_e {\n    DW_SECT_INFO                             = 0x0001,\n    DW_SECT_TYPES                            = 0x0002,\n    DW_SECT_ABBREV                           = 0x0003,\n    DW_SECT_LINE                             = 0x0004,\n    DW_SECT_LOCLISTS                         = 0x0005,\n    DW_SECT_STR_OFFSETS                      = 0x0006,\n    DW_SECT_MACRO                            = 0x0007,\n    DW_SECT_RNGLISTS                         = 0x0008\n};\n\nenum Dwarf_DS_e {\n    DW_DS_unsigned                           = 0x0001,\n    DW_DS_leading_overpunch                  = 0x0002,\n    DW_DS_trailing_overpunch                 = 0x0003,\n    DW_DS_leading_separate                   = 0x0004,\n    DW_DS_trailing_separate                  = 0x0005\n};\n\nenum Dwarf_END_e {\n    DW_END_default                           = 0x0000,\n    DW_END_big                               = 0x0001,\n    DW_END_little                            = 0x0002,\n    DW_END_lo_user                           = 0x0040,\n    DW_END_hi_user                           = 0x00ff\n};\n\nenum Dwarf_ATCF_e {\n    DW_ATCF_lo_user                          = 0x0040,\n    DW_ATCF_SUN_mop_bitfield                 = 0x0041,\n    DW_ATCF_SUN_mop_spill                    = 0x0042,\n    DW_ATCF_SUN_mop_scopy                    = 0x0043,\n    DW_ATCF_SUN_func_start                   = 0x0044,\n    DW_ATCF_SUN_end_ctors                    = 0x0045,\n    DW_ATCF_SUN_branch_target                = 0x0046,\n    DW_ATCF_SUN_mop_stack_probe              = 0x0047,\n    DW_ATCF_SUN_func_epilog                  = 0x0048,\n    DW_ATCF_hi_user                          = 0x00ff\n};\n\nenum Dwarf_ACCESS_e {\n    DW_ACCESS_public                         = 0x0001,\n    DW_ACCESS_protected                      = 0x0002,\n    DW_ACCESS_private                        = 0x0003\n};\n\nenum Dwarf_VIS_e {\n    DW_VIS_local                             = 0x0001,\n    DW_VIS_exported                          = 0x0002,\n    DW_VIS_qualified                         = 0x0003\n};\n\nenum Dwarf_VIRTUALITY_e {\n    DW_VIRTUALITY_none                       = 0x0000,\n    DW_VIRTUALITY_virtual                    = 0x0001,\n    DW_VIRTUALITY_pure_virtual               = 0x0002\n};\n\nenum Dwarf_LANG_e {\n    DW_LANG_C89                              = 0x0001,\n    DW_LANG_C                                = 0x0002,\n    DW_LANG_Ada83                            = 0x0003,\n    DW_LANG_C_plus_plus                      = 0x0004,\n    DW_LANG_Cobol74                          = 0x0005,\n    DW_LANG_Cobol85                          = 0x0006,\n    DW_LANG_Fortran77                        = 0x0007,\n    DW_LANG_Fortran90                        = 0x0008,\n    DW_LANG_Pascal83                         = 0x0009,\n    DW_LANG_Modula2                          = 0x000a,\n    DW_LANG_Java                             = 0x000b,\n    DW_LANG_C99                              = 0x000c,\n    DW_LANG_Ada95                            = 0x000d,\n    DW_LANG_Fortran95                        = 0x000e,\n    DW_LANG_PLI                              = 0x000f,\n    DW_LANG_ObjC                             = 0x0010,\n    DW_LANG_ObjC_plus_plus                   = 0x0011,\n    DW_LANG_UPC                              = 0x0012,\n    DW_LANG_D                                = 0x0013,\n    DW_LANG_Python                           = 0x0014,\n    DW_LANG_OpenCL                           = 0x0015,\n    DW_LANG_Go                               = 0x0016,\n    DW_LANG_Modula3                          = 0x0017,\n    DW_LANG_Haskel                           = 0x0018,\n    DW_LANG_C_plus_plus_03                   = 0x0019,\n    DW_LANG_C_plus_plus_11                   = 0x001a,\n    DW_LANG_OCaml                            = 0x001b,\n    DW_LANG_Rust                             = 0x001c,\n    DW_LANG_C11                              = 0x001d,\n    DW_LANG_Swift                            = 0x001e,\n    DW_LANG_Julia                            = 0x001f,\n    DW_LANG_Dylan                            = 0x0020,\n    DW_LANG_C_plus_plus_14                   = 0x0021,\n    DW_LANG_Fortran03                        = 0x0022,\n    DW_LANG_Fortran08                        = 0x0023,\n    DW_LANG_RenderScript                     = 0x0024,\n    DW_LANG_BLISS                            = 0x0025,\n    DW_LANG_lo_user                          = 0x8000,\n    DW_LANG_Mips_Assembler                   = 0x8001,\n    DW_LANG_Upc                              = 0x8765,\n    DW_LANG_SUN_Assembler                    = 0x9001,\n    DW_LANG_ALTIUM_Assembler                 = 0x9101,\n    DW_LANG_hi_user                          = 0xffff\n};\n\nenum Dwarf_ID_e {\n    DW_ID_case_sensitive                     = 0x0000,\n    DW_ID_up_case                            = 0x0001,\n    DW_ID_down_case                          = 0x0002,\n    DW_ID_case_insensitive                   = 0x0003\n};\n\nenum Dwarf_CC_e {\n    DW_CC_normal                             = 0x0001,\n    DW_CC_program                            = 0x0002,\n    DW_CC_nocall                             = 0x0003,\n    DW_CC_pass_by_reference                  = 0x0004,\n    DW_CC_pass_by_value                      = 0x0005,\n    DW_CC_lo_user                            = 0x0040,\n    DW_CC_GNU_borland_fastcall_i386          = 0x0041,\n    DW_CC_ALTIUM_interrupt                   = 0x0065,\n    DW_CC_ALTIUM_near_system_stack           = 0x0066,\n    DW_CC_ALTIUM_near_user_stack             = 0x0067,\n    DW_CC_ALTIUM_huge_user_stack             = 0x0068,\n    DW_CC_hi_user                            = 0x00ff\n};\n\nenum Dwarf_INL_e {\n    DW_INL_not_inlined                       = 0x0000,\n    DW_INL_inlined                           = 0x0001,\n    DW_INL_declared_not_inlined              = 0x0002,\n    DW_INL_declared_inlined                  = 0x0003\n};\n\nenum Dwarf_ORD_e {\n    DW_ORD_row_major                         = 0x0000,\n    DW_ORD_col_major                         = 0x0001\n};\n\nenum Dwarf_DSC_e {\n    DW_DSC_label                             = 0x0000,\n    DW_DSC_range                             = 0x0001\n};\n\nenum Dwarf_LNCT_e {\n    DW_LNCT_path                             = 0x0001,\n    DW_LNCT_directory_index                  = 0x0002,\n    DW_LNCT_timestamp                        = 0x0003,\n    DW_LNCT_size                             = 0x0004,\n    DW_LNCT_MD5                              = 0x0005,\n    DW_LNCT_GNU_subprogram_name              = 0x0006,\n    DW_LNCT_GNU_decl_file                    = 0x0007,\n    DW_LNCT_GNU_decl_line                    = 0x0008,\n    DW_LNCT_lo_user                          = 0x2000,\n    DW_LNCT_hi_user                          = 0x3fff\n};\n\nenum Dwarf_LNS_e {\n    DW_LNS_copy                              = 0x0001,\n    DW_LNS_advance_pc                        = 0x0002,\n    DW_LNS_advance_line                      = 0x0003,\n    DW_LNS_set_file                          = 0x0004,\n    DW_LNS_set_column                        = 0x0005,\n    DW_LNS_negate_stmt                       = 0x0006,\n    DW_LNS_set_basic_block                   = 0x0007,\n    DW_LNS_const_add_pc                      = 0x0008,\n    DW_LNS_fixed_advance_pc                  = 0x0009,\n    DW_LNS_set_prologue_end                  = 0x000a,\n    DW_LNS_set_epilogue_begin                = 0x000b,\n    DW_LNS_set_isa                           = 0x000c,\n    DW_LNS_set_address_from_logical          = 0x000d,\n    DW_LNS_inlined_call                      = 0x000e,\n    DW_LNS_pop_context                       = 0x000f\n};\n\nenum Dwarf_LNE_e {\n    DW_LNE_end_sequence                      = 0x0001,\n    DW_LNE_set_address                       = 0x0002,\n    DW_LNE_define_file                       = 0x0003,\n    DW_LNE_set_discriminator                 = 0x0004,\n    DW_LNE_HP_negate_is_UV_update            = 0x0011,\n    DW_LNE_HP_push_context                   = 0x0012,\n    DW_LNE_HP_pop_context                    = 0x0013,\n    DW_LNE_HP_set_file_line_column           = 0x0014,\n    DW_LNE_HP_set_routine_name               = 0x0015,\n    DW_LNE_HP_set_sequence                   = 0x0016,\n    DW_LNE_HP_negate_post_semantics          = 0x0017,\n    DW_LNE_HP_negate_function_exit           = 0x0018,\n    DW_LNE_HP_negate_front_end_logical       = 0x0019,\n    DW_LNE_HP_define_proc                    = 0x0020,\n    DW_LNE_HP_source_file_correlation        = 0x0080,\n    DW_LNE_hi_user                           = 0x00ff\n};\n\nenum Dwarf_ISA_e {\n    DW_ISA_UNKNOWN                           = 0x0000,\n    DW_ISA_ARM_thumb                         = 0x0001,\n    DW_ISA_ARM_arm                           = 0x0002\n};\n\nenum Dwarf_MACRO_e {\n    DW_MACRO_define                          = 0x0001,\n    DW_MACRO_undef                           = 0x0002,\n    DW_MACRO_start_file                      = 0x0003,\n    DW_MACRO_end_file                        = 0x0004,\n    DW_MACRO_define_strp                     = 0x0005,\n    DW_MACRO_undef_strp                      = 0x0006,\n    DW_MACRO_import                          = 0x0007,\n    DW_MACRO_define_sup                      = 0x0008,\n    DW_MACRO_undef_sup                       = 0x0009,\n    DW_MACRO_import_sup                      = 0x000a,\n    DW_MACRO_define_strx                     = 0x000b,\n    DW_MACRO_undef_strx                      = 0x000c,\n    DW_MACRO_lo_user                         = 0x00e0,\n    DW_MACRO_hi_user                         = 0x00ff\n};\n\nenum Dwarf_MACINFO_e {\n    DW_MACINFO_define                        = 0x0001,\n    DW_MACINFO_undef                         = 0x0002,\n    DW_MACINFO_start_file                    = 0x0003,\n    DW_MACINFO_end_file                      = 0x0004,\n    DW_MACINFO_vendor_ext                    = 0x00ff\n};\n\nenum Dwarf_CFA_e {\n    DW_CFA_extended                          = 0x0000,\n    DW_CFA_set_loc                           = 0x0001,\n    DW_CFA_advance_loc1                      = 0x0002,\n    DW_CFA_advance_loc2                      = 0x0003,\n    DW_CFA_advance_loc4                      = 0x0004,\n    DW_CFA_offset_extended                   = 0x0005,\n    DW_CFA_restore_extended                  = 0x0006,\n    DW_CFA_undefined                         = 0x0007,\n    DW_CFA_same_value                        = 0x0008,\n    DW_CFA_register                          = 0x0009,\n    DW_CFA_remember_state                    = 0x000a,\n    DW_CFA_restore_state                     = 0x000b,\n    DW_CFA_def_cfa                           = 0x000c,\n    DW_CFA_def_cfa_register                  = 0x000d,\n    DW_CFA_def_cfa_offset                    = 0x000e,\n    DW_CFA_def_cfa_expression                = 0x000f,\n    DW_CFA_expression                        = 0x0010,\n    DW_CFA_offset_extended_sf                = 0x0011,\n    DW_CFA_def_cfa_sf                        = 0x0012,\n    DW_CFA_def_cfa_offset_sf                 = 0x0013,\n    DW_CFA_val_offset                        = 0x0014,\n    DW_CFA_val_offset_sf                     = 0x0015,\n    DW_CFA_val_expression                    = 0x0016,\n    DW_CFA_lo_user                           = 0x001c,\n    DW_CFA_MIPS_advance_loc8                 = 0x001d,\n    DW_CFA_GNU_window_save                   = 0x002d,\n    DW_CFA_GNU_args_size                     = 0x002e,\n    DW_CFA_GNU_negative_offset_extended      = 0x002f,\n    DW_CFA_METAWARE_info                     = 0x0034,\n    DW_CFA_high_user                         = 0x003f,\n    DW_CFA_advance_loc                       = 0x0040,\n    DW_CFA_offset                            = 0x0080,\n    DW_CFA_restore                           = 0x00c0\n};\n\nenum Dwarf_EH_e {\n    DW_EH_PE_absptr                          = 0x0000,\n    DW_EH_PE_uleb128                         = 0x0001,\n    DW_EH_PE_udata2                          = 0x0002,\n    DW_EH_PE_udata4                          = 0x0003,\n    DW_EH_PE_udata8                          = 0x0004,\n    DW_EH_PE_sleb128                         = 0x0009,\n    DW_EH_PE_sdata2                          = 0x000a,\n    DW_EH_PE_sdata4                          = 0x000b,\n    DW_EH_PE_sdata8                          = 0x000c,\n    DW_EH_PE_pcrel                           = 0x0010,\n    DW_EH_PE_textrel                         = 0x0020,\n    DW_EH_PE_datarel                         = 0x0030,\n    DW_EH_PE_funcrel                         = 0x0040,\n    DW_EH_PE_aligned                         = 0x0050,\n    DW_EH_PE_omit                            = 0x00ff\n};\n\nenum Dwarf_FRAME_e {\n    DW_FRAME_CFA_COL                         = 0x0000,\n    DW_FRAME_REG1                            = 0x0001,\n    DW_FRAME_REG2                            = 0x0002,\n    DW_FRAME_REG3                            = 0x0003,\n    DW_FRAME_REG4                            = 0x0004,\n    DW_FRAME_REG5                            = 0x0005,\n    DW_FRAME_REG6                            = 0x0006,\n    DW_FRAME_REG7                            = 0x0007,\n    DW_FRAME_REG8                            = 0x0008,\n    DW_FRAME_REG9                            = 0x0009,\n    DW_FRAME_REG10                           = 0x0010,\n    DW_FRAME_REG11                           = 0x0011,\n    DW_FRAME_REG12                           = 0x0012,\n    DW_FRAME_REG13                           = 0x0013,\n    DW_FRAME_REG14                           = 0x0014,\n    DW_FRAME_REG15                           = 0x0015,\n    DW_FRAME_REG16                           = 0x0016,\n    DW_FRAME_REG17                           = 0x0017,\n    DW_FRAME_REG18                           = 0x0018,\n    DW_FRAME_REG19                           = 0x0019,\n    DW_FRAME_REG20                           = 0x0020,\n    DW_FRAME_REG21                           = 0x0021,\n    DW_FRAME_REG22                           = 0x0022,\n    DW_FRAME_REG23                           = 0x0023,\n    DW_FRAME_REG24                           = 0x0024,\n    DW_FRAME_REG25                           = 0x0025,\n    DW_FRAME_REG26                           = 0x0026,\n    DW_FRAME_REG27                           = 0x0027,\n    DW_FRAME_REG28                           = 0x0028,\n    DW_FRAME_REG29                           = 0x0029,\n    DW_FRAME_REG30                           = 0x0030,\n    DW_FRAME_REG31                           = 0x0031,\n    DW_FRAME_FREG0                           = 0x0032,\n    DW_FRAME_FREG1                           = 0x0033,\n    DW_FRAME_FREG2                           = 0x0034,\n    DW_FRAME_FREG3                           = 0x0035,\n    DW_FRAME_FREG4                           = 0x0036,\n    DW_FRAME_FREG5                           = 0x0037,\n    DW_FRAME_FREG6                           = 0x0038,\n    DW_FRAME_FREG7                           = 0x0039,\n    DW_FRAME_FREG8                           = 0x0040,\n    DW_FRAME_FREG9                           = 0x0041,\n    DW_FRAME_FREG10                          = 0x0042,\n    DW_FRAME_FREG11                          = 0x0043,\n    DW_FRAME_FREG12                          = 0x0044,\n    DW_FRAME_FREG13                          = 0x0045,\n    DW_FRAME_FREG14                          = 0x0046,\n    DW_FRAME_FREG15                          = 0x0047,\n    DW_FRAME_FREG16                          = 0x0048,\n    DW_FRAME_FREG17                          = 0x0049,\n    DW_FRAME_FREG18                          = 0x0050,\n    DW_FRAME_FREG19                          = 0x0051,\n    DW_FRAME_FREG20                          = 0x0052,\n    DW_FRAME_FREG21                          = 0x0053,\n    DW_FRAME_FREG22                          = 0x0054,\n    DW_FRAME_FREG23                          = 0x0055,\n    DW_FRAME_FREG24                          = 0x0056,\n    DW_FRAME_FREG25                          = 0x0057,\n    DW_FRAME_FREG26                          = 0x0058,\n    DW_FRAME_FREG27                          = 0x0059,\n    DW_FRAME_FREG28                          = 0x0060,\n    DW_FRAME_FREG29                          = 0x0061,\n    DW_FRAME_FREG30                          = 0x0062,\n    DW_FRAME_FREG31                          = 0x0063,\n    DW_FRAME_FREG32                          = 0x0064,\n    DW_FRAME_FREG33                          = 0x0065,\n    DW_FRAME_FREG34                          = 0x0066,\n    DW_FRAME_FREG35                          = 0x0067,\n    DW_FRAME_FREG36                          = 0x0068,\n    DW_FRAME_FREG37                          = 0x0069,\n    DW_FRAME_FREG38                          = 0x0070,\n    DW_FRAME_FREG39                          = 0x0071,\n    DW_FRAME_FREG40                          = 0x0072,\n    DW_FRAME_FREG41                          = 0x0073,\n    DW_FRAME_FREG42                          = 0x0074,\n    DW_FRAME_FREG43                          = 0x0075,\n    DW_FRAME_FREG44                          = 0x0076,\n    DW_FRAME_FREG45                          = 0x0077,\n    DW_FRAME_FREG46                          = 0x0078,\n    DW_FRAME_FREG47                          = 0x0079,\n    DW_FRAME_FREG48                          = 0x0080,\n    DW_FRAME_FREG49                          = 0x0081,\n    DW_FRAME_FREG50                          = 0x0082,\n    DW_FRAME_FREG51                          = 0x0083,\n    DW_FRAME_FREG52                          = 0x0084,\n    DW_FRAME_FREG53                          = 0x0085,\n    DW_FRAME_FREG54                          = 0x0086,\n    DW_FRAME_FREG55                          = 0x0087,\n    DW_FRAME_FREG56                          = 0x0088,\n    DW_FRAME_FREG57                          = 0x0089,\n    DW_FRAME_FREG58                          = 0x0090,\n    DW_FRAME_FREG59                          = 0x0091,\n    DW_FRAME_FREG60                          = 0x0092,\n    DW_FRAME_FREG61                          = 0x0093,\n    DW_FRAME_FREG62                          = 0x0094,\n    DW_FRAME_FREG63                          = 0x0095,\n    DW_FRAME_FREG64                          = 0x0096,\n    DW_FRAME_FREG65                          = 0x0097,\n    DW_FRAME_FREG66                          = 0x0098,\n    DW_FRAME_FREG67                          = 0x0099,\n    DW_FRAME_FREG68                          = 0x0100,\n    DW_FRAME_FREG69                          = 0x0101,\n    DW_FRAME_FREG70                          = 0x0102,\n    DW_FRAME_FREG71                          = 0x0103,\n    DW_FRAME_FREG72                          = 0x0104,\n    DW_FRAME_FREG73                          = 0x0105,\n    DW_FRAME_FREG74                          = 0x0106,\n    DW_FRAME_FREG75                          = 0x0107,\n    DW_FRAME_FREG76                          = 0x0108,\n    DW_FRAME_HIGHEST_NORMAL_REGISTER         = 0x0188\n};\n\nenum Dwarf_CHILDREN_e {\n    DW_CHILDREN_no                           = 0x0000,\n    DW_CHILDREN_yes                          = 0x0001\n};\n\nenum Dwarf_ADDR_e {\n    DW_ADDR_none                             = 0x0000\n};\n#endif /* __DWARF_NAMES_ENUM_H__ */\n\n/* END FILE */\n", "/* Automatically generated, do not edit. */\n/* Generated sourcedate  2020-10-17 11:30:22-07:00   */\n\n/* BEGIN FILE */\n\n/* define DWARF_PRINT_PREFIX before this\n   point if you wish to.  */\n#ifndef DWARF_PRINT_PREFIX\n#define DWARF_PRINT_PREFIX dwarf_\n#endif\n#define dw_glue(x,y) x##y\n#define dw_glue2(x,y) dw_glue(x,y)\n#define DWPREFIX(x) dw_glue2(DWARF_PRINT_PREFIX,x)\nint DWPREFIX(get_TAG_name) (unsigned int, const char **);\nint DWPREFIX(get_children_name) (unsigned int, const char **);\nint DWPREFIX(get_FORM_name) (unsigned int, const char **);\nint DWPREFIX(get_AT_name) (unsigned int, const char **);\nint DWPREFIX(get_OP_name) (unsigned int, const char **);\nint DWPREFIX(get_ATE_name) (unsigned int, const char **);\nint DWPREFIX(get_DEFAULTED_name) (unsigned int, const char **);\nint DWPREFIX(get_IDX_name) (unsigned int, const char **);\nint DWPREFIX(get_LLEX_name) (unsigned int, const char **);\nint DWPREFIX(get_LLE_name) (unsigned int, const char **);\nint DWPREFIX(get_RLE_name) (unsigned int, const char **);\nint DWPREFIX(get_GNUIVIS_name) (unsigned int, const char **);\nint DWPREFIX(get_GNUIKIND_name) (unsigned int, const char **);\nint DWPREFIX(get_UT_name) (unsigned int, const char **);\nint DWPREFIX(get_SECT_name) (unsigned int, const char **);\nint DWPREFIX(get_DS_name) (unsigned int, const char **);\nint DWPREFIX(get_END_name) (unsigned int, const char **);\nint DWPREFIX(get_ATCF_name) (unsigned int, const char **);\nint DWPREFIX(get_ACCESS_name) (unsigned int, const char **);\nint DWPREFIX(get_VIS_name) (unsigned int, const char **);\nint DWPREFIX(get_VIRTUALITY_name) (unsigned int, const char **);\nint DWPREFIX(get_LANG_name) (unsigned int, const char **);\nint DWPREFIX(get_ID_name) (unsigned int, const char **);\nint DWPREFIX(get_CC_name) (unsigned int, const char **);\nint DWPREFIX(get_INL_name) (unsigned int, const char **);\nint DWPREFIX(get_ORD_name) (unsigned int, const char **);\nint DWPREFIX(get_DSC_name) (unsigned int, const char **);\nint DWPREFIX(get_LNCT_name) (unsigned int, const char **);\nint DWPREFIX(get_LNS_name) (unsigned int, const char **);\nint DWPREFIX(get_LNE_name) (unsigned int, const char **);\nint DWPREFIX(get_ISA_name) (unsigned int, const char **);\nint DWPREFIX(get_MACRO_name) (unsigned int, const char **);\nint DWPREFIX(get_MACINFO_name) (unsigned int, const char **);\nint DWPREFIX(get_CFA_name) (unsigned int, const char **);\nint DWPREFIX(get_EH_name) (unsigned int, const char **);\nint DWPREFIX(get_FRAME_name) (unsigned int, const char **);\nint DWPREFIX(get_CHILDREN_name) (unsigned int, const char **);\nint DWPREFIX(get_ADDR_name) (unsigned int, const char **);\n\n/* END FILE */\n", "/*\n\n  Copyright (C) 2000-2010 Silicon Graphics, Inc.  All Rights Reserved.\n  Portions Copyright 2007-2010 Sun Microsystems, Inc. All rights reserved.\n  Portions Copyright 2008-2018 David Anderson. All rights reserved.\n  Portions Copyright 2008-2010 Arxan Technologies, Inc. All rights reserved.\n  Portions Copyright 2010-2012 SN Systems Ltd. All rights reserved.\n\n  This program is free software; you can redistribute it\n  and/or modify it under the terms of version 2.1 of the\n  GNU Lesser General Public License as published by the Free\n  Software Foundation.\n\n  This program is distributed in the hope that it would be\n  useful, but WITHOUT ANY WARRANTY; without even the implied\n  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n  PURPOSE.\n\n  Further, this software is distributed without any warranty\n  that it is free of the rightful claim of any third person\n  regarding infringement or the like.  Any license provided\n  herein, whether implied or otherwise, applies only to this\n  software file.  Patent licenses, if any, provided herein\n  do not apply to combinations of this program with other\n  software, or any other product whatsoever.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this program; if not, write the\n  Free Software Foundation, Inc., 51 Franklin Street - Fifth\n  Floor, Boston MA 02110-1301, USA.\n\n*/\n\n\n#ifndef _LIBDWARF_H\n#define _LIBDWARF_H\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n/*\n    libdwarf.h\n    $Revision: #9 $ $Date: 2008/01/17 $\n\n    For libdwarf producers and consumers\n\n    The interface is defined as having 8-byte signed and unsigned\n    values so it can handle 64-or-32bit target on 64-or-32bit host.\n    Dwarf_Ptr is the native size: it represents pointers on\n    the host machine (not the target!).\n\n    This contains declarations for types and all producer\n    and consumer functions.\n\n    Function declarations are written on a single line each here\n    so one can use grep  to each declaration in its entirety.\n    The declarations are a little harder to read this way, but...\n\n    The seeming duplication of the Elf typedef allows\n    both verification we have the right struct name (when\n    libelf.h included before this) and\n    creation of a local handle so we have the struct pointer\n    here (if libelf.h is not included before this file).\n\n*/\n\ntypedef struct _Elf Elf;\ntypedef struct _Elf* dwarf_elf_handle;\n\n/* To enable printing with printf regardless of the\n   actual underlying data type, we define the DW_PR_xxx macros.\n   To ensure uses of DW_PR_DUx or DW_PR_DSx look the way you want\n   ensure the right DW_PR_XZEROS define is uncommented.\n*/\n/*#define DW_PR_XZEROS \"\" */\n#define DW_PR_XZEROS \"08\"\n\ntypedef unsigned long long Dwarf_Unsigned;\ntypedef signed   long long Dwarf_Signed;\ntypedef unsigned long long Dwarf_Off;\ntypedef unsigned long long Dwarf_Addr;\n    /*  Dwarf_Bool as int is wasteful, but for compatibility\n        it must stay as int, not unsigned char. */\ntypedef int                Dwarf_Bool;   /* boolean type */\ntypedef unsigned short     Dwarf_Half;   /* 2 byte unsigned value */\ntypedef unsigned char      Dwarf_Small;  /* 1 byte unsigned value */\n/*  If sizeof(Dwarf_Half) is greater than 2\n    we believe libdwarf still works properly. */\n\n#if defined(_WIN32) && defined(HAVE_NONSTANDARD_PRINTF_64_FORMAT)\n#define DW_PR_DUx \"I64x\"\n#define DW_PR_DSx \"I64x\"\n#define DW_PR_DUu \"I64u\"\n#define DW_PR_DSd \"I64d\"\n#else\n#define DW_PR_DUx \"llx\"\n#define DW_PR_DSx \"llx\"\n#define DW_PR_DUu \"llu\"\n#define DW_PR_DSd \"lld\"\n#endif /* DW_PR defines */\n\ntypedef void*        Dwarf_Ptr;          /* host machine pointer */\n\n/*  DWARF5: a container for a DW_FORM_data16 data item.\n    We have no integer types suitable so this special\n    struct is used instead.  It is up to consumers/producers\n    to deal with the contents.\n    New October 18, 2017 .  */\ntypedef struct Dwarf_Form_Data16_s {\n    unsigned char fd_data[16];\n} Dwarf_Form_Data16;\n\n\n\n/* Used for signatures where ever they appear.\n   It is not a string, it\n   is 8 bytes of a signature one would use to find\n   a type unit. See dwarf_formsig8()\n\n   Sometimes it is used in calculations as\n   Dwarf_Unsigned, but that is done inside libdwarf\n   and the endianness question makes it a bit sketchy.\n*/\nstruct Dwarf_Sig8_s  {\n    char signature[8];\n};\ntypedef struct Dwarf_Sig8_s Dwarf_Sig8;\n\n/* Contains info on an uninterpreted block of data\n   Used with certain frame information functions and\n   also used with DW_FORM_block<>.\n*/\ntypedef struct {\n    Dwarf_Unsigned  bl_len;         /* length of block bl_data points at */\n    Dwarf_Ptr       bl_data;        /* uninterpreted data */\n\n    /*  See libdwarf.h DW_LKIND*  */\n    Dwarf_Small     bl_from_loclist;\n\n    /* Section (not CU) offset which 'data' comes from. */\n    Dwarf_Unsigned  bl_section_offset;\n} Dwarf_Block;\n\n\n/*  NEW October 2015.  */\n/*  This provides access to Dwarf_Locdesc_c, a single\n    location description */\nstruct  Dwarf_Locdesc_c_s;\ntypedef struct Dwarf_Locdesc_c_s * Dwarf_Locdesc_c;\n\n/*  NEW October 2015.  */\n/*  This provides access to Dwarf_Locdesc_c, a single\n    location list entry (or for a locexpr, the fake\n    Loc_Head for the locexpr) */\nstruct Dwarf_Loc_Head_c_s;\ntypedef struct Dwarf_Loc_Head_c_s * Dwarf_Loc_Head_c;\n\n\n/*  NEW July 2020.  */\n/*  This provides access to data from sections\n    .debug_gnu_pubtypes or .debug_gnu_pubnames.\n    These are not standard DWARF, and can appear\n    with gcc -gdwarf-5\n    */\nstruct Dwarf_Gnu_Index_Head_s;\ntypedef struct Dwarf_Gnu_Index_Head_s * Dwarf_Gnu_Index_Head;\n\n\n/* NEW November 2015. For DWARF5 .debug_macro section */\nstruct Dwarf_Macro_Context_s;\ntypedef struct Dwarf_Macro_Context_s * Dwarf_Loc_Macro_Context;\n\n/*  NEW September 2016. Allows easy access to DW_AT_discr_list\n    array of discriminant values. Input in blockpointer\n    is a block with a list of uleb or sleb numbers\n    (all one or the other, lebunsignedflag instructs\n    how to read the leb values properly) */\ntypedef struct Dwarf_Dsc_Head_s * Dwarf_Dsc_Head;\n\n/*  Location record. Records up to 2 operand values.\n    Not usable with DWARF5 or DWARF4 with location\n    operator  extensions. */\ntypedef struct {\n    Dwarf_Small     lr_atom;        /* location operation */\n    Dwarf_Unsigned  lr_number;      /* operand */\n    Dwarf_Unsigned  lr_number2;     /* for OP_BREGx  and DW_OP_GNU_const_type*/\n    Dwarf_Unsigned  lr_offset;      /* offset in locexpr for OP_BRA etc */\n} Dwarf_Loc;\n\n\n/* Location description. DWARF 2,3,4.\n   When this is from a split-dwarf loclist (.debug_loc.dwo)\n   and no tied object is present\n   then ld_lowpc and ld_highpc are actually indices in\n   the .debug_addr section of the tied object).\n   If there is a tied object then these fields are actuall\n   addresses and DW_AT_addr_base in the skeleton CU DIE applies to\n   that .debug_addr.\n\n   Location record. Records up to 2 operand values.\n   Not usable with DWARF5 or DWARF4 with extensions.\n\n   If from DWARF2,3,4 non-split dwarf then things operate as\n   in DWARF2.\n   See dwarf_get_loclist_b() and the other related\n   new functions that\n   avoid using public structures Dwarf_Loc and Dwarf_Locdesc.\n*/\ntypedef struct {\n    /*  Beginning of active range. This is actually an offset\n        of an applicable base address, not a pc value.  */\n    Dwarf_Addr      ld_lopc;\n\n    /*  End of active range. This is actually an offset\n        of an applicable base address, not a pc value.  */\n    Dwarf_Addr      ld_hipc;\n\n    Dwarf_Half      ld_cents;       /* count of location records */\n    Dwarf_Loc*      ld_s;           /* pointer to list of same */\n\n    /*  non-0 if loclist, 1 if non-split (dwarf 2,3,4) */\n    Dwarf_Small     ld_from_loclist;\n\n    Dwarf_Unsigned  ld_section_offset; /* Section (not CU) offset\n        where loc-expr begins*/\n} Dwarf_Locdesc;\n\n/*  First appears in DWARF3, and only ranges entries exist.\n    The dwr_addr1/addr2 data is either an offset (DW_RANGES_ENTRY)\n    or an address (dwr_addr2 in DW_RANGES_ADDRESS_SELECTION) or\n    both are zero (DW_RANGES_END).\n    For DWARF5 each table starts with a header\n    followed by range list entries defined\n    as here.\n*/\nenum Dwarf_Ranges_Entry_Type { DW_RANGES_ENTRY,\n    DW_RANGES_ADDRESS_SELECTION,\n    DW_RANGES_END\n};\ntypedef struct {\n    Dwarf_Addr dwr_addr1;\n    Dwarf_Addr dwr_addr2;\n    enum Dwarf_Ranges_Entry_Type  dwr_type;\n} Dwarf_Ranges;\n\n/* Frame description instructions expanded.\n*/\ntypedef struct {\n    Dwarf_Small     fp_base_op;\n    Dwarf_Small     fp_extended_op;\n    Dwarf_Half      fp_register;\n\n    /*  Value may be signed, depends on op.\n        Any applicable data_alignment_factor has\n        not been applied, this is the  raw offset. */\n    Dwarf_Unsigned  fp_offset;\n    Dwarf_Off       fp_instr_offset;\n} Dwarf_Frame_Op; /* DWARF2 */\n\n/*  ***IMPORTANT NOTE, TARGET DEPENDENCY ****\n    DW_REG_TABLE_SIZE must be at least as large as\n    the number of registers\n    (DW_FRAME_LAST_REG_NUM) as defined in dwarf.h\n    Preferably identical to DW_FRAME_LAST_REG_NUM.\n    Ensure [0-DW_REG_TABLE_SIZE] does not overlap\n    DW_FRAME_UNDEFINED_VAL or DW_FRAME_SAME_VAL.\n    Also ensure DW_FRAME_REG_INITIAL_VALUE is set to what\n    is appropriate to your cpu.\n    For various CPUs  DW_FRAME_UNDEFINED_VAL is correct\n    as the value for DW_FRAME_REG_INITIAL_VALUE.\n\n    For consumer apps, this can be set dynamically: see\n    dwarf_set_frame_rule_table_size(); */\n#ifndef DW_REG_TABLE_SIZE\n#define DW_REG_TABLE_SIZE  66\n#endif\n\n/* For MIPS, DW_FRAME_SAME_VAL is the correct default value\n   for a frame register value. For other CPUS another value\n   may be better, such as DW_FRAME_UNDEFINED_VAL.\n   See dwarf_set_frame_rule_table_size\n*/\n#ifndef DW_FRAME_REG_INITIAL_VALUE\n#define DW_FRAME_REG_INITIAL_VALUE DW_FRAME_SAME_VAL\n#endif\n\n/* Taken as meaning 'undefined value', this is not\n   a column or register number.\n   Only present at libdwarf runtime in the consumer\n   interfaces. Never on disk.\n   DW_FRAME_* Values present on disk are in dwarf.h\n   Ensure this is > DW_REG_TABLE_SIZE (the reg table\n   size is changeable at runtime with the *reg3() interfaces,\n   and this value must be greater than the reg table size).\n*/\n#define DW_FRAME_UNDEFINED_VAL          1034\n\n/* Taken as meaning 'same value' as caller had, not a column\n   or register number.\n   Only present at libdwarf runtime in the consumer\n   interfaces. Never on disk.\n   DW_FRAME_* Values present on disk are in dwarf.h\n   Ensure this is > DW_REG_TABLE_SIZE (the reg table\n   size is changeable at runtime with the *reg3() interfaces,\n   and this value must be greater than the reg table size).\n*/\n#define DW_FRAME_SAME_VAL               1035\n\n/* For DWARF3 consumer interfaces, make the CFA a column with no\n   real table number.  This is what should have been done\n   for the DWARF2 interfaces.  This actually works for\n   both DWARF2 and DWARF3, but see the libdwarf documentation\n   on Dwarf_Regtable3 and  dwarf_get_fde_info_for_reg3()\n   and  dwarf_get_fde_info_for_all_regs3()\n   Do NOT use this with the older dwarf_get_fde_info_for_reg()\n   or dwarf_get_fde_info_for_all_regs() consumer interfaces.\n   Must be higher than any register count for *any* ABI\n   (ensures maximum applicability with minimum effort).\n   Ensure this is > DW_REG_TABLE_SIZE (the reg table\n   size is changeable at runtime with the *reg3() interfaces,\n   and this value must be greater than the reg table size).\n   Only present at libdwarf runtime in the consumer\n   interfaces. Never on disk.\n*/\n#define DW_FRAME_CFA_COL3               1436\n\n/* The following are all needed to evaluate DWARF3 register rules.\n*/\n#define DW_EXPR_OFFSET 0  /* DWARF2 only sees this. */\n#define DW_EXPR_VAL_OFFSET 1\n#define DW_EXPR_EXPRESSION 2\n#define DW_EXPR_VAL_EXPRESSION 3\n\ntypedef struct Dwarf_Regtable_Entry_s {\n    /*  For each index i (naming a hardware register with dwarf number\n        i) the following is true and defines the value of that register:\n\n        If dw_regnum is Register DW_FRAME_UNDEFINED_VAL\n            it is not DWARF register number but\n            a place holder indicating the register has no defined value.\n        If dw_regnum is Register DW_FRAME_SAME_VAL\n            it  is not DWARF register number but\n            a place holder indicating the register has the same\n            value in the previous frame.\n\n            DW_FRAME_UNDEFINED_VAL, DW_FRAME_SAME_VAL are\n            only present at libdwarf runtime. Never on disk.\n            DW_FRAME_* Values present on disk are in dwarf.h\n\n        Otherwise: the register number is a DWARF register number\n            (see ABI documents for how this translates to hardware/\n            software register numbers in the machine hardware)\n            and the following applies:\n\n            if dw_value_type == DW_EXPR_OFFSET (the only case for dwarf2):\n                If dw_offset_relevant is non-zero, then\n                    the value is stored at at the address CFA+N where\n                    N is a signed offset.\n                    Rule: Offset(N)\n                If dw_offset_relevant is zero, then the value of the register\n                    is the value of (DWARF) register number dw_regnum.\n                    Rule: register(F)\n            Other values of dw_value_type are an error.\n    */\n    Dwarf_Small         dw_offset_relevant;\n\n    /* For DWARF2, always 0 */\n    Dwarf_Small         dw_value_type;\n\n    Dwarf_Half          dw_regnum;\n\n    /*  The data type here should  the larger of Dwarf_Addr\n        and Dwarf_Unsigned and Dwarf_Signed. */\n    Dwarf_Addr          dw_offset;\n} Dwarf_Regtable_Entry;\n\ntypedef struct Dwarf_Regtable_s {\n    struct Dwarf_Regtable_Entry_s rules[DW_REG_TABLE_SIZE];\n} Dwarf_Regtable;\n\n/* opaque type. Functional interface shown later. */\nstruct Dwarf_Reg_value3_s;\ntypedef struct Dwarf_Reg_value3_s Dwarf_Reg_Value3;\n\ntypedef struct Dwarf_Regtable_Entry3_s {\n/*  For each index i (naming a hardware register with dwarf number\n    i) the following is true and defines the value of that register:\n\n        If dw_regnum is Register DW_FRAME_UNDEFINED_VAL\n            it is not DWARF register number but\n            a place holder indicating the register has no defined value.\n        If dw_regnum is Register DW_FRAME_SAME_VAL\n            it  is not DWARF register number but\n            a place holder indicating the register has the same\n            value in the previous frame.\n\n            DW_FRAME_UNDEFINED_VAL, DW_FRAME_SAME_VAL and\n            DW_FRAME_CFA_COL3 are only present at libdwarf runtime.\n            Never on disk.\n            DW_FRAME_* Values present on disk are in dwarf.h\n            Because DW_FRAME_SAME_VAL and DW_FRAME_UNDEFINED_VAL\n            and DW_FRAME_CFA_COL3 are definable at runtime\n            consider the names symbolic in this comment, not absolute.\n\n        Otherwise: the register number is a DWARF register number\n            (see ABI documents for how this translates to hardware/\n            software register numbers in the machine hardware)\n            and the following applies:\n\n        In a cfa-defining entry (rt3_cfa_rule) the regnum is the\n        CFA 'register number'. Which is some 'normal' register,\n        not DW_FRAME_CFA_COL3, nor DW_FRAME_SAME_VAL, nor\n        DW_FRAME_UNDEFINED_VAL.\n\n        If dw_value_type == DW_EXPR_OFFSET (the only  possible case for\n        dwarf2):\n            If dw_offset_relevant is non-zero, then\n                the value is stored at at the address\n                CFA+N where N is a signed offset.\n                dw_regnum is the cfa register rule which means\n                one ignores dw_regnum and uses the CFA appropriately.\n                So dw_offset_or_block_len is a signed value, really,\n                and must be printed/evaluated as such.\n                Rule: Offset(N)\n            If dw_offset_relevant is zero, then the value of the register\n                is the value of (DWARF) register number dw_regnum.\n                Rule: register(R)\n        If dw_value_type  == DW_EXPR_VAL_OFFSET\n            the  value of this register is CFA +N where N is a signed offset.\n            dw_regnum is the cfa register rule which means\n            one ignores dw_regnum and uses the CFA appropriately.\n            Rule: val_offset(N)\n        If dw_value_type  == DW_EXPR_EXPRESSION\n            The value of the register is the value at the address\n            computed by evaluating the DWARF expression E.\n            Rule: expression(E)\n            The expression E byte stream is pointed to by dw_block_ptr.\n            The expression length in bytes is given by\n            dw_offset_or_block_len.\n        If dw_value_type  == DW_EXPR_VAL_EXPRESSION\n            The value of the register is the value\n            computed by evaluating the DWARF expression E.\n            Rule: val_expression(E)\n            The expression E byte stream is pointed to by dw_block_ptr.\n            The expression length in bytes is given by\n            dw_offset_or_block_len.\n        Other values of dw_value_type are an error.\n*/\n    Dwarf_Small         dw_offset_relevant;\n    Dwarf_Small         dw_value_type;\n    Dwarf_Half          dw_regnum;\n    Dwarf_Unsigned      dw_offset_or_block_len;\n    Dwarf_Ptr           dw_block_ptr;\n\n}Dwarf_Regtable_Entry3;\n\n/*  For the DWARF3 version, moved the DW_FRAME_CFA_COL\n    out of the array and into its own struct.\n    Having it part of the array is not very easy to work\n    with from a portability point of view: changing\n    the number for every architecture is a pain (if one fails\n    to set it correctly a register rule gets clobbered when\n    setting CFA).  With MIPS it just happened to be easy to use\n    DW_FRAME_CFA_COL (it was wrong conceptually but it was easy...).\n\n    rt3_rules and rt3_reg_table_size must be filled in before\n    calling libdwarf.  Filled in with a pointer to an array\n    (pointer and array  set up by the calling application)\n    of rt3_reg_table_size Dwarf_Regtable_Entry3_s structs.\n    libdwarf does not allocate or deallocate space for the\n    rules, you must do so.   libdwarf will initialize the\n    contents rules array, you do not need to do so (though\n    if you choose to initialize the array somehow that is ok:\n    libdwarf will overwrite your initializations with its own).\n\n*/\ntypedef struct Dwarf_Regtable3_s {\n    struct Dwarf_Regtable_Entry3_s   rt3_cfa_rule;\n\n    Dwarf_Half                       rt3_reg_table_size;\n    struct Dwarf_Regtable_Entry3_s * rt3_rules;\n} Dwarf_Regtable3;\n\n\n/*  Use for DW_EPXR_STANDARD., DW_EXPR_VAL_OFFSET.\n    Returns DW_DLV_OK if the value is available.\n    If DW_DLV_OK returns the regnum and offset thru the pointers\n    (which the consumer must use appropriately).\n*/\nint dwarf_frame_get_reg_register(struct Dwarf_Regtable_Entry3_s *reg_in,\n    Dwarf_Small *offset_relevant,\n    Dwarf_Half *regnum_out,\n    Dwarf_Signed *offset_out);\n\n/*  Use for DW_EXPR_EXPRESSION, DW_EXPR_VAL_EXPRESSION.\n    Returns DW_DLV_OK if the value is available.\n    The caller must pass in the address of a valid\n    Dwarf_Block (the caller need not initialize it).\n*/\nint dwarf_frame_get_reg_expression(struct Dwarf_Regtable_Entry3_s *reg_in,\n    Dwarf_Block *block_out);\n\n\n/*  For DW_DLC_SYMBOLIC_RELOCATIONS output to caller\n    v2, adding drd_length: some relocations are 4 and\n    some 8 bytes (pointers are 8, section offsets 4) in\n    some dwarf environments. (MIPS relocations are all one\n    size in any given ABI.) Changing drd_type to an unsigned char\n    to keep struct size down.\n*/\nenum Dwarf_Rel_Type {\n    dwarf_drt_none,        /* Should not get to caller */\n    dwarf_drt_data_reloc,  /* Simple normal relocation. */\n    dwarf_drt_segment_rel, /* Special reloc, exceptions. */\n    /* dwarf_drt_first_of_length_pair  and drt_second\n        are for for the  .word end - begin case. */\n    dwarf_drt_first_of_length_pair,\n    dwarf_drt_second_of_length_pair\n};\n\ntypedef struct Dwarf_P_Marker_s * Dwarf_P_Marker;\nstruct Dwarf_P_Marker_s {\n    Dwarf_Unsigned ma_marker;\n    Dwarf_Unsigned ma_offset;\n};\n\ntypedef struct Dwarf_Relocation_Data_s  * Dwarf_Relocation_Data;\nstruct Dwarf_Relocation_Data_s {\n    unsigned char drd_type;   /* Cast to/from Dwarf_Rel_Type\n        to keep size small in struct. */\n    unsigned char drd_length; /* Length in bytes of data being\n        relocated. 4 for 32bit data,\n        8 for 64bit data. */\n    Dwarf_Unsigned       drd_offset; /* Where the data to reloc is. */\n    Dwarf_Unsigned       drd_symbol_index;\n};\n\ntypedef struct Dwarf_P_String_Attr_s  * Dwarf_P_String_Attr;\nstruct Dwarf_P_String_Attr_s {\n    Dwarf_Unsigned        sa_offset;  /* Offset of string attribute data */\n    Dwarf_Unsigned        sa_nbytes;\n};\n\n\n/* Opaque types for Consumer Library. */\ntypedef struct Dwarf_Debug_s*      Dwarf_Debug;\ntypedef struct Dwarf_Die_s*        Dwarf_Die;\ntypedef struct Dwarf_Line_s*       Dwarf_Line;\ntypedef struct Dwarf_Global_s*     Dwarf_Global;\ntypedef struct Dwarf_Func_s*       Dwarf_Func;\ntypedef struct Dwarf_Type_s*       Dwarf_Type;\ntypedef struct Dwarf_Var_s*        Dwarf_Var;\ntypedef struct Dwarf_Weak_s*       Dwarf_Weak;\ntypedef struct Dwarf_Error_s*      Dwarf_Error;\ntypedef struct Dwarf_Attribute_s*  Dwarf_Attribute;\ntypedef struct Dwarf_Abbrev_s*     Dwarf_Abbrev;\ntypedef struct Dwarf_Fde_s*        Dwarf_Fde;\ntypedef struct Dwarf_Cie_s*        Dwarf_Cie;\ntypedef struct Dwarf_Arange_s*     Dwarf_Arange;\ntypedef struct Dwarf_Gdbindex_s*   Dwarf_Gdbindex;\nstruct Dwarf_Xu_Index_Header_s;\ntypedef struct Dwarf_Xu_Index_Header_s  *Dwarf_Xu_Index_Header;\nstruct Dwarf_Line_Context_s;\ntypedef struct Dwarf_Line_Context_s     *Dwarf_Line_Context;\nstruct Dwarf_Macro_Context_s;\ntypedef struct Dwarf_Macro_Context_s    *Dwarf_Macro_Context;\nstruct Dwarf_Dnames_Head_s;\ntypedef struct Dwarf_Dnames_Head_s      *Dwarf_Dnames_Head;\n\n\n/* Opaque types for Producer Library. */\ntypedef struct Dwarf_P_Debug_s*       Dwarf_P_Debug;\ntypedef struct Dwarf_P_Die_s*         Dwarf_P_Die;\ntypedef struct Dwarf_P_Attribute_s*   Dwarf_P_Attribute;\ntypedef struct Dwarf_P_Fde_s*         Dwarf_P_Fde;\ntypedef struct Dwarf_P_Expr_s*        Dwarf_P_Expr;\ntypedef Dwarf_Unsigned                Dwarf_Tag;\n\n\n/* error handler function\n*/\ntypedef void  (*Dwarf_Handler)(Dwarf_Error /*error*/, Dwarf_Ptr /*errarg*/);\n\n\n/* Begin libdwarf Object File Interface declarations.\n\nAs of February 2008 there are multiple dwarf_reader object access\ninitialization methods available:\nThe traditional dwarf_elf_init() and dwarf_init()  and dwarf_finish()\n    which assume libelf and POSIX file access.\nAn object-file and library agnostic dwarf_object_init() and dwarf_object_finish()\n    which allow the coder to provide object access routines\n    abstracting away the elf interface.  So there is no dependence in the\n    reader code on the object format and no dependence on libelf.\n    See the code in dwarf_elf_access.c  and dwarf_original_elf_init.c\n    to see an example of initializing the structures mentioned below.\n\nProjects using dwarf_elf_init() or dwarf_init() can ignore\nthe Dwarf_Obj_Access* structures entirely as all these details\nare completed for you.\n\nAs of March 2017 additional\nfunctions dwarf_elf_init_b\nand dwarf_init_b\nand dwarf_object_init_b\nadd a groupnumber argument so DWARF5\nsplit-dwarf sections can be accessed.\n*/\n\ntypedef struct Dwarf_Obj_Access_Interface_s   Dwarf_Obj_Access_Interface;\ntypedef struct Dwarf_Obj_Access_Methods_s     Dwarf_Obj_Access_Methods;\ntypedef struct Dwarf_Obj_Access_Section_s     Dwarf_Obj_Access_Section;\n\n\n/*  Used in the get_section interface function\n    in Dwarf_Obj_Access_Section_s.  Since libdwarf\n    depends on standard DWARF section names an object\n    format that has no such names (but has some\n    method of setting up 'sections equivalents')\n    must arrange to return standard DWARF section\n    names in the 'name' field.  libdwarf does\n    not free the strings in 'name'. */\nstruct Dwarf_Obj_Access_Section_s {\n    /*  addr is the virtual address of the first byte of\n        the section data.  Usually zero when the address\n        makes no sense for a given section. */\n    Dwarf_Addr     addr;\n\n    /* Section type. */\n    Dwarf_Unsigned type;\n\n    /* Size in bytes of the section. */\n    Dwarf_Unsigned size;\n\n    /*  Having an accurate section name makes debugging of libdwarf easier.\n        and is essential to find the .debug_ sections.  */\n    const char*    name;\n    /*  Set link to zero if it is meaningless.  If non-zero\n        it should be a link to a rela section or from symtab\n        to strtab.  In Elf it is sh_link. */\n    Dwarf_Unsigned link;\n\n    /*  The section header index of the section to which the\n        relocation applies. In Elf it is sh_info. */\n    Dwarf_Unsigned info;\n\n    /*  Elf sections that are tables have a non-zero entrysize so\n        the count of entries can be calculated even without\n        the right structure definition. If your object format\n        does not have this data leave this zero. */\n    Dwarf_Unsigned entrysize;\n};\n\n/*  Returned by the get_endianness function in\n    Dwarf_Obj_Access_Methods_s. */\ntypedef enum {\n    DW_OBJECT_MSB,\n    DW_OBJECT_LSB\n} Dwarf_Endianness;\n\n/*  The functions we need to access object data from libdwarf are declared here.\n\n    In these function pointer declarations\n    'void *obj' is intended to be a pointer (the object field in\n    Dwarf_Obj_Access_Interface_s)\n    that hides the library-specific and object-specific data that makes\n    it possible to handle multiple object formats and multiple libraries.\n    It's not required that one handles multiple such in a single libdwarf\n    archive/shared-library (but not ruled out either).\n    See  dwarf_elf_object_access_internals_t and dwarf_elf_access.c\n    for an example.\n\n*/\nstruct Dwarf_Obj_Access_Methods_s {\n    /*\n        get_section_info\n\n        Get address, size, and name info about a section.\n\n        Parameters\n        section_index - Zero-based index.\n        return_section - Pointer to a structure in which section info\n            will be placed.   Caller must provide a valid pointer to a\n            structure area.  The structure's contents will be overwritten\n            by the call to get_section_info.\n        error - A pointer to an integer in which an error code may be stored.\n\n        Return\n        DW_DLV_OK - Everything ok.\n        DW_DLV_ERROR - Error occurred. Use 'error' to determine the\n            libdwarf defined error.\n        DW_DLV_NO_ENTRY - No such section.  */\n    int    (*get_section_info)(void* obj, Dwarf_Half section_index,\n        Dwarf_Obj_Access_Section* return_section, int* error);\n    /*\n        get_byte_order\n\n        Get whether the object file represented by this interface is big-endian\n        (DW_OBJECT_MSB) or little endian (DW_OBJECT_LSB).\n\n        Parameters\n        obj - Equivalent to 'this' in OO languages.\n\n        Return\n        Endianness of object. Cannot fail.  */\n    Dwarf_Endianness  (*get_byte_order)(void* obj);\n    /*\n        get_length_size\n\n        Get the size of a length field in the underlying object file.\n        libdwarf currently supports * 4 and 8 byte sizes, but may\n        support larger in the future.\n        Perhaps the return type should be an enumeration?\n\n        Parameters\n        obj - Equivalent to 'this' in OO languages.\n\n        Return\n        Size of length. Cannot fail.  */\n    Dwarf_Small   (*get_length_size)(void* obj);\n    /*\n        get_pointer_size\n\n        Get the size of a pointer field in the underlying object file.\n        libdwarf currently supports  4 and 8 byte sizes.\n        Perhaps the return type should be an enumeration?\n\n        Return\n        Size of pointer. Cannot fail.  */\n    Dwarf_Small   (*get_pointer_size)(void* obj);\n    /*\n        get_section_count\n\n        Get the number of sections in the object file.\n\n        Parameters\n\n        Return\n        Number of sections */\n    Dwarf_Unsigned  (*get_section_count)(void* obj);\n    /*\n        load_section\n\n        Get a pointer to an array of bytes that represent the section.\n\n        Parameters\n        section_index - Zero-based index.\n        return_data - The address of a pointer to which the section data block\n            will be assigned.\n        error - Pointer to an integer for returning libdwarf-defined\n            error numbers.\n\n        Return\n        DW_DLV_OK - No error.\n        DW_DLV_ERROR - Error. Use 'error' to indicate a libdwarf-defined\n            error number.\n        DW_DLV_NO_ENTRY - No such section.  */\n    int    (*load_section)(void* obj, Dwarf_Half section_index,\n        Dwarf_Small** return_data, int* error);\n\n    /**\n        relocate_a_section\n        If relocations are not supported leave this pointer NULL.\n\n        Get a pointer to an array of bytes that represent the section.\n\n        Parameters\n        section_index - Zero-based index of the section to be relocated.\n        error - Pointer to an integer for returning libdwarf-defined\n            error numbers.\n\n        Return\n        DW_DLV_OK - No error.\n        DW_DLV_ERROR - Error. Use 'error' to indicate a libdwarf-defined\n            error number.\n        DW_DLV_NO_ENTRY - No such section.  */\n    int    (*relocate_a_section)(void* obj, Dwarf_Half section_index,\n        Dwarf_Debug dbg,\n        int* error);\n\n};\n\n\n\n/*  These structures are allocated and deallocated by your code\n    when you are using the libdwarf Object File Interface\n    [dwarf_object_init and dwarf_object_finish)] directly.\n    dwarf_object_finish) does not free\n    struct Dwarf_Obj_Access_Interface_s or its content.\n    (libdwarf does record a pointer to this struct: you must\n    ensure that pointer remains valid for as long as\n    a libdwarf instance is open (meaning\n    after dwarf_init) and before dwarf_finish)).\n\n    If you are reading Elf objects and libelf use dwarf_init()\n    or dwarf_elf_init() which take care of these details.\n*/\nstruct Dwarf_Obj_Access_Interface_s {\n    /*  object is a void* as it hides the data the object access routines\n        need (which varies by library in use and object format).\n    */\n    void* object;\n    const Dwarf_Obj_Access_Methods * methods;\n};\n\n/* End libdwarf Object File Interface */\n\n/*\n    Dwarf_dealloc() alloc_type arguments.\n    Argument points to:\n*/\n#define DW_DLA_STRING          0x01     /* char* */\n#define DW_DLA_LOC             0x02     /* Dwarf_Loc */\n#define DW_DLA_LOCDESC         0x03     /* Dwarf_Locdesc */\n#define DW_DLA_ELLIST          0x04     /* Dwarf_Ellist (not used)*/\n#define DW_DLA_BOUNDS          0x05     /* Dwarf_Bounds (not used) */\n#define DW_DLA_BLOCK           0x06     /* Dwarf_Block */\n#define DW_DLA_DEBUG           0x07     /* Dwarf_Debug */\n#define DW_DLA_DIE             0x08     /* Dwarf_Die */\n#define DW_DLA_LINE            0x09     /* Dwarf_Line */\n#define DW_DLA_ATTR            0x0a     /* Dwarf_Attribute */\n#define DW_DLA_TYPE            0x0b     /* Dwarf_Type  (not used) */\n#define DW_DLA_SUBSCR          0x0c     /* Dwarf_Subscr (not used) */\n#define DW_DLA_GLOBAL          0x0d     /* Dwarf_Global */\n#define DW_DLA_ERROR           0x0e     /* Dwarf_Error */\n#define DW_DLA_LIST            0x0f     /* a list */\n#define DW_DLA_LINEBUF         0x10     /* Dwarf_Line* (not used) */\n#define DW_DLA_ARANGE          0x11     /* Dwarf_Arange */\n#define DW_DLA_ABBREV          0x12     /* Dwarf_Abbrev */\n#define DW_DLA_FRAME_OP        0x13     /* Dwarf_Frame_Op */\n#define DW_DLA_CIE             0x14     /* Dwarf_Cie */\n#define DW_DLA_FDE             0x15     /* Dwarf_Fde */\n#define DW_DLA_LOC_BLOCK       0x16     /* Dwarf_Loc */\n#define DW_DLA_FRAME_BLOCK     0x17     /* Dwarf_Frame Block (not used) */\n#define DW_DLA_FUNC            0x18     /* Dwarf_Func */\n#define DW_DLA_TYPENAME        0x19     /* Dwarf_Type */\n#define DW_DLA_VAR             0x1a     /* Dwarf_Var */\n#define DW_DLA_WEAK            0x1b     /* Dwarf_Weak */\n#define DW_DLA_ADDR            0x1c     /* Dwarf_Addr sized entries */\n#define DW_DLA_RANGES          0x1d     /* Dwarf_Ranges */\n/* 0x1e (30) to 0x34 (52) reserved for internal to libdwarf types. */\n#define DW_DLA_GNU_INDEX_HEAD  0x35     /* .debug_gnu_typenames/pubnames, 2020 */\n#define DW_DLA_RNGLISTS_HEAD   0x36     /* .debug_rnglists DW5 */\n#define DW_DLA_GDBINDEX        0x37     /* Dwarf_Gdbindex */\n#define DW_DLA_XU_INDEX        0x38     /* Dwarf_Xu_Index_Header */\n#define DW_DLA_LOC_BLOCK_C     0x39     /* Dwarf_Loc_c*/\n#define DW_DLA_LOCDESC_C       0x3a     /* Dwarf_Locdesc_c */\n#define DW_DLA_LOC_HEAD_C      0x3b     /* Dwarf_Loc_Head_c */\n#define DW_DLA_MACRO_CONTEXT   0x3c     /* Dwarf_Macro_Context */\n/*  0x3d (61) is for libdwarf internal use.               */\n#define DW_DLA_DSC_HEAD        0x3e     /* Dwarf_Dsc_Head */\n#define DW_DLA_DNAMES_HEAD     0x3f     /* Dwarf_Dnames_Head */\n#define DW_DLA_STR_OFFSETS     0x40     /* struct Dwarf_Str_Offsets_Table_s */\n\n/* The augmenter string for CIE */\n#define DW_CIE_AUGMENTER_STRING_V0              \"z\"\n\n/*  dwarf_init() 'access' argument values.\n    Used for reading/consuming DWARF, not\n    relevant to the producer portion of libdwarf.\n    None of the following three arguments do anything.\n    The following short set is useless.\n    Only DW_DLC_READ has a documented effect but...\n    it is useless and irrelevant as it means\n    'do the default'.\n    In the 1990's there was an option DW_DLC_MMAP\n    (deleted from libdwarf.h many years ago).\n    The old option libdwarf told IRIX libelf to mmap\n    the object file.\n*/\n#define DW_DLC_READ               0 /* Pointless. Ok to use. */\n#define DW_DLC_WRITE              1 /* DO NOT USE */\n#define DW_DLC_RDWR               2 /* DO NOT USE */\n\n/*  ===== the following DW_DLC options are for producing DWARF,\n    not used for reading/consuming DWARF. */\n/* dwarf_producer_init* access flag modifiers\n   No longer depends on compile-time settings for\n   how to produce 64bit offset. See DW_DLC_IRIX_OFFSET64.\n   Historic  versions. One of\n   If DW_DLC_POINTER64 is not set DW_DLC_POINTER32 is assumed.\n   If DW_DLC_OFFSET64 or DW_DLC_IRIX_OFFSET64 is not\n   set 32bit offset DWARF is assumed.\n   Non-MIPS Non IA64 should use DW_DLC_SYMBOLIC_RELOCATIONS\n   and handle the relocation creation for the target\n   itself using the symbolic relocations to do so.\n   See the Dwarf_Rel_Type enum relocation indicators.\n*/\n\n/*  64-bit address-size target */\n#define DW_DLC_SIZE_64            0x40000000 /* old spelling */\n#define DW_DLC_POINTER64          0x40000000 /* correct spelling */\n\n/*  32-bit address-size target */\n#define DW_DLC_SIZE_32            0x20000000 /* old spelling */\n#define DW_DLC_POINTER32          0x20000000 /* correct spelling */\n\n\n/*  32-bit offset-size ELF object (ELFCLASS32) */\n#define DW_DLC_ELF_OFFSET_SIZE_32 0x00400000 /* DO NOT USE */\n/*  DW_DLC_OFFSET32 is the default, the bit is not checked. */\n#define DW_DLC_OFFSET32           0x00010000 /* default offset size */\n\n/*  64-bit offset-size DWARF offsets  */\n#define DW_DLC_OFFSET_SIZE_64     0x10000000 /* old spelling */\n#define DW_DLC_OFFSET64           0x10000000 /* correct spelling */\n\n/*  64-bit offset-size ELF object (ELFCLASS64)  */\n#define DW_DLC_ELF_OFFSET_SIZE_64 0x00020000 /* DO NOT USE. */\n\n/*  Special for IRIX only. For producing DWARF with\n    Elf 64bit offset headers and non-standard IRIX\n    64bit offset DWARF .debug_info etc compilation unit headers. */\n#define DW_DLC_IRIX_OFFSET64      0x00200000\n\n/*  Old style Elf binary relocation (.rel) records. The default.\n    For producing DWARF */\n#define DW_DLC_STREAM_RELOCATIONS 0x02000000\n/*  Usable with assembly output because it is up to the producer to\n    deal with locations in whatever manner the calling producer\n    code wishes.  For example, when the libdwarf caller wishes\n    to produce relocations differently than the binary\n    relocation bits that libdwarf Stream Relocations generate.\n    */\n#define DW_DLC_SYMBOLIC_RELOCATIONS 0x04000000\n\n#define DW_DLC_TARGET_BIGENDIAN     0x08000000\n#define DW_DLC_TARGET_LITTLEENDIAN  0x00100000\n/* ===== END DW_DLC options LIBDWARF */\n\n\n/* dwarf_pcline function, slide arguments\n*/\n#define DW_DLS_BACKWARD   -1       /* slide backward to find line */\n#define DW_DLS_NOSLIDE     0       /* match exactly without sliding */\n#define DW_DLS_FORWARD     1       /* slide forward to find line */\n\n/* libdwarf error numbers\n*/\n#define DW_DLE_NE          0     /* no error */\n#define DW_DLE_VMM         1     /* dwarf format/library version mismatch */\n#define DW_DLE_MAP         2     /* memory map failure */\n#define DW_DLE_LEE         3     /* libelf error */\n#define DW_DLE_NDS         4     /* no debug section */\n#define DW_DLE_NLS         5     /* no line section */\n#define DW_DLE_ID          6     /* invalid descriptor for query */\n#define DW_DLE_IOF         7     /* I/O failure */\n#define DW_DLE_MAF         8     /* memory allocation failure */\n#define DW_DLE_IA          9     /* invalid argument */\n#define DW_DLE_MDE         10     /* mangled debugging entry */\n#define DW_DLE_MLE         11     /* mangled line number entry */\n#define DW_DLE_FNO         12     /* file not open */\n#define DW_DLE_FNR         13     /* file not a regular file */\n#define DW_DLE_FWA         14     /* file open with wrong access */\n#define DW_DLE_NOB         15     /* not an object file */\n#define DW_DLE_MOF         16     /* mangled object file header */\n#define DW_DLE_EOLL        17     /* end of location list entries */\n#define DW_DLE_NOLL        18     /* no location list section */\n#define DW_DLE_BADOFF      19     /* Invalid offset */\n#define DW_DLE_EOS         20     /* end of section  */\n#define DW_DLE_ATRUNC      21     /* abbreviations section appears truncated*/\n#define DW_DLE_BADBITC     22     /* Address size passed to dwarf bad*/\n                    /* It is not an allowed size (64 or 32) */\n    /* Error codes defined by the current Libdwarf Implementation. */\n#define DW_DLE_DBG_ALLOC                        23\n#define DW_DLE_FSTAT_ERROR                      24\n#define DW_DLE_FSTAT_MODE_ERROR                 25\n#define DW_DLE_INIT_ACCESS_WRONG                26\n#define DW_DLE_ELF_BEGIN_ERROR                  27\n#define DW_DLE_ELF_GETEHDR_ERROR                28\n#define DW_DLE_ELF_GETSHDR_ERROR                29\n#define DW_DLE_ELF_STRPTR_ERROR                 30\n#define DW_DLE_DEBUG_INFO_DUPLICATE             31\n#define DW_DLE_DEBUG_INFO_NULL                  32\n#define DW_DLE_DEBUG_ABBREV_DUPLICATE           33\n#define DW_DLE_DEBUG_ABBREV_NULL                34\n#define DW_DLE_DEBUG_ARANGES_DUPLICATE          35\n#define DW_DLE_DEBUG_ARANGES_NULL               36\n#define DW_DLE_DEBUG_LINE_DUPLICATE             37\n#define DW_DLE_DEBUG_LINE_NULL                  38\n#define DW_DLE_DEBUG_LOC_DUPLICATE              39\n#define DW_DLE_DEBUG_LOC_NULL                   40\n#define DW_DLE_DEBUG_MACINFO_DUPLICATE          41\n#define DW_DLE_DEBUG_MACINFO_NULL               42\n#define DW_DLE_DEBUG_PUBNAMES_DUPLICATE         43\n#define DW_DLE_DEBUG_PUBNAMES_NULL              44\n#define DW_DLE_DEBUG_STR_DUPLICATE              45\n#define DW_DLE_DEBUG_STR_NULL                   46\n#define DW_DLE_CU_LENGTH_ERROR                  47\n#define DW_DLE_VERSION_STAMP_ERROR              48\n#define DW_DLE_ABBREV_OFFSET_ERROR              49\n#define DW_DLE_ADDRESS_SIZE_ERROR               50\n#define DW_DLE_DEBUG_INFO_PTR_NULL              51\n#define DW_DLE_DIE_NULL                         52\n#define DW_DLE_STRING_OFFSET_BAD                53\n#define DW_DLE_DEBUG_LINE_LENGTH_BAD            54\n#define DW_DLE_LINE_PROLOG_LENGTH_BAD           55\n#define DW_DLE_LINE_NUM_OPERANDS_BAD            56\n#define DW_DLE_LINE_SET_ADDR_ERROR              57 /* No longer used. */\n#define DW_DLE_LINE_EXT_OPCODE_BAD              58\n#define DW_DLE_DWARF_LINE_NULL                  59\n#define DW_DLE_INCL_DIR_NUM_BAD                 60\n#define DW_DLE_LINE_FILE_NUM_BAD                61\n#define DW_DLE_ALLOC_FAIL                       62\n#define DW_DLE_NO_CALLBACK_FUNC                 63\n#define DW_DLE_SECT_ALLOC                       64\n#define DW_DLE_FILE_ENTRY_ALLOC                 65\n#define DW_DLE_LINE_ALLOC                       66\n#define DW_DLE_FPGM_ALLOC                       67\n#define DW_DLE_INCDIR_ALLOC                     68\n#define DW_DLE_STRING_ALLOC                     69\n#define DW_DLE_CHUNK_ALLOC                      70\n#define DW_DLE_BYTEOFF_ERR                      71\n#define DW_DLE_CIE_ALLOC                        72\n#define DW_DLE_FDE_ALLOC                        73\n#define DW_DLE_REGNO_OVFL                       74\n#define DW_DLE_CIE_OFFS_ALLOC                   75\n#define DW_DLE_WRONG_ADDRESS                    76\n#define DW_DLE_EXTRA_NEIGHBORS                  77\n#define DW_DLE_WRONG_TAG                        78\n#define DW_DLE_DIE_ALLOC                        79\n#define DW_DLE_PARENT_EXISTS                    80\n#define DW_DLE_DBG_NULL                         81\n#define DW_DLE_DEBUGLINE_ERROR                  82\n#define DW_DLE_DEBUGFRAME_ERROR                 83\n#define DW_DLE_DEBUGINFO_ERROR                  84\n#define DW_DLE_ATTR_ALLOC                       85\n#define DW_DLE_ABBREV_ALLOC                     86\n#define DW_DLE_OFFSET_UFLW                      87\n#define DW_DLE_ELF_SECT_ERR                     88\n#define DW_DLE_DEBUG_FRAME_LENGTH_BAD           89\n#define DW_DLE_FRAME_VERSION_BAD                90\n#define DW_DLE_CIE_RET_ADDR_REG_ERROR           91\n#define DW_DLE_FDE_NULL                         92\n#define DW_DLE_FDE_DBG_NULL                     93\n#define DW_DLE_CIE_NULL                         94\n#define DW_DLE_CIE_DBG_NULL                     95\n#define DW_DLE_FRAME_TABLE_COL_BAD              96\n#define DW_DLE_PC_NOT_IN_FDE_RANGE              97\n#define DW_DLE_CIE_INSTR_EXEC_ERROR             98\n#define DW_DLE_FRAME_INSTR_EXEC_ERROR           99\n#define DW_DLE_FDE_PTR_NULL                    100\n#define DW_DLE_RET_OP_LIST_NULL                101\n#define DW_DLE_LINE_CONTEXT_NULL               102\n#define DW_DLE_DBG_NO_CU_CONTEXT               103\n#define DW_DLE_DIE_NO_CU_CONTEXT               104\n#define DW_DLE_FIRST_DIE_NOT_CU                105\n#define DW_DLE_NEXT_DIE_PTR_NULL               106\n#define DW_DLE_DEBUG_FRAME_DUPLICATE           107\n#define DW_DLE_DEBUG_FRAME_NULL                108\n#define DW_DLE_ABBREV_DECODE_ERROR             109\n#define DW_DLE_DWARF_ABBREV_NULL               110\n#define DW_DLE_ATTR_NULL                       111\n#define DW_DLE_DIE_BAD                         112\n#define DW_DLE_DIE_ABBREV_BAD                  113\n#define DW_DLE_ATTR_FORM_BAD                   114\n#define DW_DLE_ATTR_NO_CU_CONTEXT              115\n#define DW_DLE_ATTR_FORM_SIZE_BAD              116\n#define DW_DLE_ATTR_DBG_NULL                   117\n#define DW_DLE_BAD_REF_FORM                    118\n#define DW_DLE_ATTR_FORM_OFFSET_BAD            119\n#define DW_DLE_LINE_OFFSET_BAD                 120\n#define DW_DLE_DEBUG_STR_OFFSET_BAD            121\n#define DW_DLE_STRING_PTR_NULL                 122\n#define DW_DLE_PUBNAMES_VERSION_ERROR          123\n#define DW_DLE_PUBNAMES_LENGTH_BAD             124\n#define DW_DLE_GLOBAL_NULL                     125\n#define DW_DLE_GLOBAL_CONTEXT_NULL             126\n#define DW_DLE_DIR_INDEX_BAD                   127\n#define DW_DLE_LOC_EXPR_BAD                    128\n#define DW_DLE_DIE_LOC_EXPR_BAD                129\n#define DW_DLE_ADDR_ALLOC                      130\n#define DW_DLE_OFFSET_BAD                      131\n#define DW_DLE_MAKE_CU_CONTEXT_FAIL            132\n#define DW_DLE_REL_ALLOC                       133\n#define DW_DLE_ARANGE_OFFSET_BAD               134\n#define DW_DLE_SEGMENT_SIZE_BAD                135\n#define DW_DLE_ARANGE_LENGTH_BAD               136\n#define DW_DLE_ARANGE_DECODE_ERROR             137\n#define DW_DLE_ARANGES_NULL                    138\n#define DW_DLE_ARANGE_NULL                     139\n#define DW_DLE_NO_FILE_NAME                    140\n#define DW_DLE_NO_COMP_DIR                     141\n#define DW_DLE_CU_ADDRESS_SIZE_BAD             142\n#define DW_DLE_INPUT_ATTR_BAD                  143\n#define DW_DLE_EXPR_NULL                       144\n#define DW_DLE_BAD_EXPR_OPCODE                 145\n#define DW_DLE_EXPR_LENGTH_BAD                 146\n#define DW_DLE_MULTIPLE_RELOC_IN_EXPR          147\n#define DW_DLE_ELF_GETIDENT_ERROR              148\n#define DW_DLE_NO_AT_MIPS_FDE                  149\n#define DW_DLE_NO_CIE_FOR_FDE                  150\n#define DW_DLE_DIE_ABBREV_LIST_NULL            151\n#define DW_DLE_DEBUG_FUNCNAMES_DUPLICATE       152\n#define DW_DLE_DEBUG_FUNCNAMES_NULL            153\n#define DW_DLE_DEBUG_FUNCNAMES_VERSION_ERROR   154\n#define DW_DLE_DEBUG_FUNCNAMES_LENGTH_BAD      155\n#define DW_DLE_FUNC_NULL                       156\n#define DW_DLE_FUNC_CONTEXT_NULL               157\n#define DW_DLE_DEBUG_TYPENAMES_DUPLICATE       158\n#define DW_DLE_DEBUG_TYPENAMES_NULL            159\n#define DW_DLE_DEBUG_TYPENAMES_VERSION_ERROR   160\n#define DW_DLE_DEBUG_TYPENAMES_LENGTH_BAD      161\n#define DW_DLE_TYPE_NULL                       162\n#define DW_DLE_TYPE_CONTEXT_NULL               163\n#define DW_DLE_DEBUG_VARNAMES_DUPLICATE        164\n#define DW_DLE_DEBUG_VARNAMES_NULL             165\n#define DW_DLE_DEBUG_VARNAMES_VERSION_ERROR    166\n#define DW_DLE_DEBUG_VARNAMES_LENGTH_BAD       167\n#define DW_DLE_VAR_NULL                        168\n#define DW_DLE_VAR_CONTEXT_NULL                169\n#define DW_DLE_DEBUG_WEAKNAMES_DUPLICATE       170\n#define DW_DLE_DEBUG_WEAKNAMES_NULL            171\n#define DW_DLE_DEBUG_WEAKNAMES_VERSION_ERROR   172\n#define DW_DLE_DEBUG_WEAKNAMES_LENGTH_BAD      173\n#define DW_DLE_WEAK_NULL                       174\n#define DW_DLE_WEAK_CONTEXT_NULL               175\n#define DW_DLE_LOCDESC_COUNT_WRONG             176\n#define DW_DLE_MACINFO_STRING_NULL             177\n#define DW_DLE_MACINFO_STRING_EMPTY            178\n#define DW_DLE_MACINFO_INTERNAL_ERROR_SPACE    179\n#define DW_DLE_MACINFO_MALLOC_FAIL             180\n#define DW_DLE_DEBUGMACINFO_ERROR              181\n#define DW_DLE_DEBUG_MACRO_LENGTH_BAD          182\n#define DW_DLE_DEBUG_MACRO_MAX_BAD             183\n#define DW_DLE_DEBUG_MACRO_INTERNAL_ERR        184\n#define DW_DLE_DEBUG_MACRO_MALLOC_SPACE        185\n#define DW_DLE_DEBUG_MACRO_INCONSISTENT        186\n#define DW_DLE_DF_NO_CIE_AUGMENTATION          187\n#define DW_DLE_DF_REG_NUM_TOO_HIGH             188\n#define DW_DLE_DF_MAKE_INSTR_NO_INIT           189\n#define DW_DLE_DF_NEW_LOC_LESS_OLD_LOC         190\n#define DW_DLE_DF_POP_EMPTY_STACK              191\n#define DW_DLE_DF_ALLOC_FAIL                   192\n#define DW_DLE_DF_FRAME_DECODING_ERROR         193\n#define DW_DLE_DEBUG_LOC_SECTION_SHORT         194\n#define DW_DLE_FRAME_AUGMENTATION_UNKNOWN      195\n#define DW_DLE_PUBTYPE_CONTEXT                 196 /* Unused. */\n#define DW_DLE_DEBUG_PUBTYPES_LENGTH_BAD       197\n#define DW_DLE_DEBUG_PUBTYPES_VERSION_ERROR    198\n#define DW_DLE_DEBUG_PUBTYPES_DUPLICATE        199\n#define DW_DLE_FRAME_CIE_DECODE_ERROR          200\n#define DW_DLE_FRAME_REGISTER_UNREPRESENTABLE  201\n#define DW_DLE_FRAME_REGISTER_COUNT_MISMATCH   202\n#define DW_DLE_LINK_LOOP                       203\n#define DW_DLE_STRP_OFFSET_BAD                 204\n#define DW_DLE_DEBUG_RANGES_DUPLICATE          205\n#define DW_DLE_DEBUG_RANGES_OFFSET_BAD         206\n#define DW_DLE_DEBUG_RANGES_MISSING_END        207\n#define DW_DLE_DEBUG_RANGES_OUT_OF_MEM         208\n#define DW_DLE_DEBUG_SYMTAB_ERR                209\n#define DW_DLE_DEBUG_STRTAB_ERR                210\n#define DW_DLE_RELOC_MISMATCH_INDEX            211\n#define DW_DLE_RELOC_MISMATCH_RELOC_INDEX      212\n#define DW_DLE_RELOC_MISMATCH_STRTAB_INDEX     213\n#define DW_DLE_RELOC_SECTION_MISMATCH          214\n#define DW_DLE_RELOC_SECTION_MISSING_INDEX     215\n#define DW_DLE_RELOC_SECTION_LENGTH_ODD        216\n#define DW_DLE_RELOC_SECTION_PTR_NULL          217\n#define DW_DLE_RELOC_SECTION_MALLOC_FAIL       218\n#define DW_DLE_NO_ELF64_SUPPORT                219\n#define DW_DLE_MISSING_ELF64_SUPPORT           220\n#define DW_DLE_ORPHAN_FDE                      221\n#define DW_DLE_DUPLICATE_INST_BLOCK            222\n#define DW_DLE_BAD_REF_SIG8_FORM               223\n#define DW_DLE_ATTR_EXPRLOC_FORM_BAD           224\n#define DW_DLE_FORM_SEC_OFFSET_LENGTH_BAD      225\n#define DW_DLE_NOT_REF_FORM                    226\n#define DW_DLE_DEBUG_FRAME_LENGTH_NOT_MULTIPLE 227\n#define DW_DLE_REF_SIG8_NOT_HANDLED            228\n#define DW_DLE_DEBUG_FRAME_POSSIBLE_ADDRESS_BOTCH 229\n#define DW_DLE_LOC_BAD_TERMINATION             230\n#define DW_DLE_SYMTAB_SECTION_LENGTH_ODD       231\n#define DW_DLE_RELOC_SECTION_SYMBOL_INDEX_BAD  232\n#define DW_DLE_RELOC_SECTION_RELOC_TARGET_SIZE_UNKNOWN  233\n#define DW_DLE_SYMTAB_SECTION_ENTRYSIZE_ZERO   234\n#define DW_DLE_LINE_NUMBER_HEADER_ERROR        235\n#define DW_DLE_DEBUG_TYPES_NULL                236\n#define DW_DLE_DEBUG_TYPES_DUPLICATE           237\n#define DW_DLE_DEBUG_TYPES_ONLY_DWARF4         238\n#define DW_DLE_DEBUG_TYPEOFFSET_BAD            239\n#define DW_DLE_GNU_OPCODE_ERROR                240\n#define DW_DLE_DEBUGPUBTYPES_ERROR             241\n#define DW_DLE_AT_FIXUP_NULL                   242\n#define DW_DLE_AT_FIXUP_DUP                    243\n#define DW_DLE_BAD_ABINAME                     244\n#define DW_DLE_TOO_MANY_DEBUG                  245\n#define DW_DLE_DEBUG_STR_OFFSETS_DUPLICATE     246\n#define DW_DLE_SECTION_DUPLICATION             247\n#define DW_DLE_SECTION_ERROR                   248\n#define DW_DLE_DEBUG_ADDR_DUPLICATE            249\n#define DW_DLE_DEBUG_CU_UNAVAILABLE_FOR_FORM   250\n#define DW_DLE_DEBUG_FORM_HANDLING_INCOMPLETE  251\n#define DW_DLE_NEXT_DIE_PAST_END               252\n#define DW_DLE_NEXT_DIE_WRONG_FORM             253\n#define DW_DLE_NEXT_DIE_NO_ABBREV_LIST         254\n#define DW_DLE_NESTED_FORM_INDIRECT_ERROR      255\n#define DW_DLE_CU_DIE_NO_ABBREV_LIST           256\n#define DW_DLE_MISSING_NEEDED_DEBUG_ADDR_SECTION 257\n#define DW_DLE_ATTR_FORM_NOT_ADDR_INDEX        258\n#define DW_DLE_ATTR_FORM_NOT_STR_INDEX         259\n#define DW_DLE_DUPLICATE_GDB_INDEX             260\n#define DW_DLE_ERRONEOUS_GDB_INDEX_SECTION     261\n#define DW_DLE_GDB_INDEX_COUNT_ERROR           262\n#define DW_DLE_GDB_INDEX_COUNT_ADDR_ERROR      263\n#define DW_DLE_GDB_INDEX_INDEX_ERROR           264\n#define DW_DLE_GDB_INDEX_CUVEC_ERROR           265\n#define DW_DLE_DUPLICATE_CU_INDEX              266\n#define DW_DLE_DUPLICATE_TU_INDEX              267\n#define DW_DLE_XU_TYPE_ARG_ERROR               268\n#define DW_DLE_XU_IMPOSSIBLE_ERROR             269\n#define DW_DLE_XU_NAME_COL_ERROR               270\n#define DW_DLE_XU_HASH_ROW_ERROR               271\n#define DW_DLE_XU_HASH_INDEX_ERROR             272\n/* ..._FAILSAFE_ERRVAL is an aid when out of memory. */\n#define DW_DLE_FAILSAFE_ERRVAL                 273\n#define DW_DLE_ARANGE_ERROR                    274\n#define DW_DLE_PUBNAMES_ERROR                  275\n#define DW_DLE_FUNCNAMES_ERROR                 276\n#define DW_DLE_TYPENAMES_ERROR                 277\n#define DW_DLE_VARNAMES_ERROR                  278\n#define DW_DLE_WEAKNAMES_ERROR                 279\n#define DW_DLE_RELOCS_ERROR                    280\n#define DW_DLE_ATTR_OUTSIDE_SECTION            281\n#define DW_DLE_FISSION_INDEX_WRONG             282\n#define DW_DLE_FISSION_VERSION_ERROR           283\n#define DW_DLE_NEXT_DIE_LOW_ERROR              284\n#define DW_DLE_CU_UT_TYPE_ERROR                285\n#define DW_DLE_NO_SUCH_SIGNATURE_FOUND         286\n#define DW_DLE_SIGNATURE_SECTION_NUMBER_WRONG  287\n#define DW_DLE_ATTR_FORM_NOT_DATA8             288\n#define DW_DLE_SIG_TYPE_WRONG_STRING           289\n#define DW_DLE_MISSING_REQUIRED_TU_OFFSET_HASH 290\n#define DW_DLE_MISSING_REQUIRED_CU_OFFSET_HASH 291\n#define DW_DLE_DWP_MISSING_DWO_ID              292\n#define DW_DLE_DWP_SIBLING_ERROR               293\n#define DW_DLE_DEBUG_FISSION_INCOMPLETE        294\n#define DW_DLE_FISSION_SECNUM_ERR              295\n#define DW_DLE_DEBUG_MACRO_DUPLICATE           296\n#define DW_DLE_DEBUG_NAMES_DUPLICATE           297\n#define DW_DLE_DEBUG_LINE_STR_DUPLICATE        298\n#define DW_DLE_DEBUG_SUP_DUPLICATE             299\n#define DW_DLE_NO_SIGNATURE_TO_LOOKUP          300\n#define DW_DLE_NO_TIED_ADDR_AVAILABLE          301\n#define DW_DLE_NO_TIED_SIG_AVAILABLE           302\n#define DW_DLE_STRING_NOT_TERMINATED           303\n#define DW_DLE_BAD_LINE_TABLE_OPERATION        304\n#define DW_DLE_LINE_CONTEXT_BOTCH              305\n#define DW_DLE_LINE_CONTEXT_INDEX_WRONG        306\n#define DW_DLE_NO_TIED_STRING_AVAILABLE        307\n#define DW_DLE_NO_TIED_FILE_AVAILABLE          308\n#define DW_DLE_CU_TYPE_MISSING                 309\n#define DW_DLE_LLE_CODE_UNKNOWN                310\n#define DW_DLE_LOCLIST_INTERFACE_ERROR         311\n#define DW_DLE_LOCLIST_INDEX_ERROR             312\n#define DW_DLE_INTERFACE_NOT_SUPPORTED         313\n#define DW_DLE_ZDEBUG_REQUIRES_ZLIB            314\n#define DW_DLE_ZDEBUG_INPUT_FORMAT_ODD         315\n#define DW_DLE_ZLIB_BUF_ERROR                  316\n#define DW_DLE_ZLIB_DATA_ERROR                 317\n#define DW_DLE_MACRO_OFFSET_BAD                318\n#define DW_DLE_MACRO_OPCODE_BAD                319\n#define DW_DLE_MACRO_OPCODE_FORM_BAD           320\n#define DW_DLE_UNKNOWN_FORM                    321\n#define DW_DLE_BAD_MACRO_HEADER_POINTER        322\n#define DW_DLE_BAD_MACRO_INDEX                 323\n#define DW_DLE_MACRO_OP_UNHANDLED              324\n#define DW_DLE_MACRO_PAST_END                  325\n#define DW_DLE_LINE_STRP_OFFSET_BAD            326\n#define DW_DLE_STRING_FORM_IMPROPER            327\n#define DW_DLE_ELF_FLAGS_NOT_AVAILABLE         328\n#define DW_DLE_LEB_IMPROPER                    329\n#define DW_DLE_DEBUG_LINE_RANGE_ZERO           330\n#define DW_DLE_READ_LITTLEENDIAN_ERROR         331\n#define DW_DLE_READ_BIGENDIAN_ERROR            332\n#define DW_DLE_RELOC_INVALID                   333\n#define DW_DLE_INFO_HEADER_ERROR               334\n#define DW_DLE_ARANGES_HEADER_ERROR            335\n#define DW_DLE_LINE_OFFSET_WRONG_FORM          336\n#define DW_DLE_FORM_BLOCK_LENGTH_ERROR         337\n#define DW_DLE_ZLIB_SECTION_SHORT              338\n#define DW_DLE_CIE_INSTR_PTR_ERROR             339\n#define DW_DLE_FDE_INSTR_PTR_ERROR             340\n#define DW_DLE_FISSION_ADDITION_ERROR          341\n#define DW_DLE_HEADER_LEN_BIGGER_THAN_SECSIZE  342\n#define DW_DLE_LOCEXPR_OFF_SECTION_END         343\n#define DW_DLE_POINTER_SECTION_UNKNOWN         344\n#define DW_DLE_ERRONEOUS_XU_INDEX_SECTION      345\n#define DW_DLE_DIRECTORY_FORMAT_COUNT_VS_DIRECTORIES_MISMATCH 346\n#define DW_DLE_COMPRESSED_EMPTY_SECTION        347\n#define DW_DLE_SIZE_WRAPAROUND                 348\n#define DW_DLE_ILLOGICAL_TSEARCH               349\n#define DW_DLE_BAD_STRING_FORM                 350\n#define DW_DLE_DEBUGSTR_ERROR                  351\n#define DW_DLE_DEBUGSTR_UNEXPECTED_REL         352\n#define DW_DLE_DISCR_ARRAY_ERROR               353\n#define DW_DLE_LEB_OUT_ERROR                   354\n#define DW_DLE_SIBLING_LIST_IMPROPER           355\n#define DW_DLE_LOCLIST_OFFSET_BAD              356\n#define DW_DLE_LINE_TABLE_BAD                  357\n#define DW_DLE_DEBUG_LOClISTS_DUPLICATE        358\n#define DW_DLE_DEBUG_RNGLISTS_DUPLICATE        359\n#define DW_DLE_ABBREV_OFF_END                  360\n#define DW_DLE_FORM_STRING_BAD_STRING          361\n#define DW_DLE_AUGMENTATION_STRING_OFF_END     362\n#define DW_DLE_STRING_OFF_END_PUBNAMES_LIKE    363\n#define DW_DLE_LINE_STRING_BAD                 364\n#define DW_DLE_DEFINE_FILE_STRING_BAD          365\n#define DW_DLE_MACRO_STRING_BAD                366\n#define DW_DLE_MACINFO_STRING_BAD              367\n#define DW_DLE_ZLIB_UNCOMPRESS_ERROR           368\n#define DW_DLE_IMPROPER_DWO_ID                 369\n#define DW_DLE_GROUPNUMBER_ERROR               370\n#define DW_DLE_ADDRESS_SIZE_ZERO               371\n#define DW_DLE_DEBUG_NAMES_HEADER_ERROR        372\n#define DW_DLE_DEBUG_NAMES_AUG_STRING_ERROR    373\n#define DW_DLE_DEBUG_NAMES_PAD_NON_ZERO        374\n#define DW_DLE_DEBUG_NAMES_OFF_END             375\n#define DW_DLE_DEBUG_NAMES_ABBREV_OVERFLOW     376\n#define DW_DLE_DEBUG_NAMES_ABBREV_CORRUPTION   377\n#define DW_DLE_DEBUG_NAMES_NULL_POINTER        378\n#define DW_DLE_DEBUG_NAMES_BAD_INDEX_ARG       379\n#define DW_DLE_DEBUG_NAMES_ENTRYPOOL_OFFSET    380\n#define DW_DLE_DEBUG_NAMES_UNHANDLED_FORM      381\n#define DW_DLE_LNCT_CODE_UNKNOWN               382\n#define DW_DLE_LNCT_FORM_CODE_NOT_HANDLED      383\n#define DW_DLE_LINE_HEADER_LENGTH_BOTCH        384\n#define DW_DLE_STRING_HASHTAB_IDENTITY_ERROR   385\n#define DW_DLE_UNIT_TYPE_NOT_HANDLED           386\n#define DW_DLE_GROUP_MAP_ALLOC                 387\n#define DW_DLE_GROUP_MAP_DUPLICATE             388\n#define DW_DLE_GROUP_COUNT_ERROR               389\n#define DW_DLE_GROUP_INTERNAL_ERROR            390\n#define DW_DLE_GROUP_LOAD_ERROR                391\n#define DW_DLE_GROUP_LOAD_READ_ERROR           392\n#define DW_DLE_AUG_DATA_LENGTH_BAD             393\n#define DW_DLE_ABBREV_MISSING                  394\n#define DW_DLE_NO_TAG_FOR_DIE                  395\n#define DW_DLE_LOWPC_WRONG_CLASS               396\n#define DW_DLE_HIGHPC_WRONG_FORM               397\n#define DW_DLE_STR_OFFSETS_BASE_WRONG_FORM     398\n#define DW_DLE_DATA16_OUTSIDE_SECTION          399\n#define DW_DLE_LNCT_MD5_WRONG_FORM             400\n#define DW_DLE_LINE_HEADER_CORRUPT             401\n#define DW_DLE_STR_OFFSETS_NULLARGUMENT        402\n#define DW_DLE_STR_OFFSETS_NULL_DBG            403\n#define DW_DLE_STR_OFFSETS_NO_MAGIC            404\n#define DW_DLE_STR_OFFSETS_ARRAY_SIZE          405\n#define DW_DLE_STR_OFFSETS_VERSION_WRONG       406\n#define DW_DLE_STR_OFFSETS_ARRAY_INDEX_WRONG   407\n#define DW_DLE_STR_OFFSETS_EXTRA_BYTES         408\n#define DW_DLE_DUP_ATTR_ON_DIE                 409\n#define DW_DLE_SECTION_NAME_BIG                410\n#define DW_DLE_FILE_UNAVAILABLE                411\n#define DW_DLE_FILE_WRONG_TYPE                 412\n#define DW_DLE_SIBLING_OFFSET_WRONG            413\n#define DW_DLE_OPEN_FAIL                       414\n#define DW_DLE_OFFSET_SIZE                     415\n#define DW_DLE_MACH_O_SEGOFFSET_BAD            416\n#define DW_DLE_FILE_OFFSET_BAD                 417\n#define DW_DLE_SEEK_ERROR                      418\n#define DW_DLE_READ_ERROR                      419\n#define DW_DLE_ELF_CLASS_BAD                   420\n#define DW_DLE_ELF_ENDIAN_BAD                  421\n#define DW_DLE_ELF_VERSION_BAD                 422\n#define DW_DLE_FILE_TOO_SMALL                  423\n#define DW_DLE_PATH_SIZE_TOO_SMALL             424\n#define DW_DLE_BAD_TYPE_SIZE                   425\n#define DW_DLE_PE_SIZE_SMALL                   426\n#define DW_DLE_PE_OFFSET_BAD                   427\n#define DW_DLE_PE_STRING_TOO_LONG              428\n#define DW_DLE_IMAGE_FILE_UNKNOWN_TYPE         429\n#define DW_DLE_LINE_TABLE_LINENO_ERROR         430\n#define DW_DLE_PRODUCER_CODE_NOT_AVAILABLE     431\n#define DW_DLE_NO_ELF_SUPPORT                  432\n#define DW_DLE_NO_STREAM_RELOC_SUPPORT         433\n#define DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR     434\n#define DW_DLE_SECTION_SIZE_ERROR              435\n#define DW_DLE_INTERNAL_NULL_POINTER           436\n#define DW_DLE_SECTION_STRING_OFFSET_BAD       437\n#define DW_DLE_SECTION_INDEX_BAD               438\n#define DW_DLE_INTEGER_TOO_SMALL               439\n#define DW_DLE_ELF_SECTION_LINK_ERROR          440\n#define DW_DLE_ELF_SECTION_GROUP_ERROR         441\n#define DW_DLE_ELF_SECTION_COUNT_MISMATCH      442\n#define DW_DLE_ELF_STRING_SECTION_MISSING      443\n#define DW_DLE_SEEK_OFF_END                    444\n#define DW_DLE_READ_OFF_END                    445\n#define DW_DLE_ELF_SECTION_ERROR               446\n#define DW_DLE_ELF_STRING_SECTION_ERROR        447\n#define DW_DLE_MIXING_SPLIT_DWARF_VERSIONS     448\n#define DW_DLE_TAG_CORRUPT                     449\n#define DW_DLE_FORM_CORRUPT                    450\n#define DW_DLE_ATTR_CORRUPT                    451\n#define DW_DLE_ABBREV_ATTR_DUPLICATION         452\n#define DW_DLE_DWP_SIGNATURE_MISMATCH          453\n#define DW_DLE_CU_UT_TYPE_VALUE                454\n#define DW_DLE_DUPLICATE_GNU_DEBUGLINK         455\n#define DW_DLE_CORRUPT_GNU_DEBUGLINK           456\n#define DW_DLE_CORRUPT_NOTE_GNU_DEBUGID        457\n#define DW_DLE_CORRUPT_GNU_DEBUGID_SIZE        458\n#define DW_DLE_CORRUPT_GNU_DEBUGID_STRING      459\n#define DW_DLE_HEX_STRING_ERROR                460\n#define DW_DLE_DECIMAL_STRING_ERROR            461\n#define DW_DLE_PRO_INIT_EXTRAS_UNKNOWN         462\n#define DW_DLE_PRO_INIT_EXTRAS_ERR             463\n#define DW_DLE_NULL_ARGS_DWARF_ADD_PATH        464\n#define DW_DLE_DWARF_INIT_DBG_NULL             465\n#define DW_DLE_ELF_RELOC_SECTION_ERROR         466\n#define DW_DLE_USER_DECLARED_ERROR             467\n#define DW_DLE_RNGLISTS_ERROR                  468\n#define DW_DLE_LOCLISTS_ERROR                  469\n#define DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE    470\n#define DW_DLE_GDBINDEX_STRING_ERROR           471\n#define DW_DLE_GNU_PUBNAMES_ERROR              472\n#define DW_DLE_GNU_PUBTYPES_ERROR              473\n#define DW_DLE_DUPLICATE_GNU_DEBUG_PUBNAMES    474\n#define DW_DLE_DUPLICATE_GNU_DEBUG_PUBTYPES    475\n#define DW_DLE_DEBUG_SUP_STRING_ERROR          476\n#define DW_DLE_DEBUG_SUP_ERROR                 477\n#define DW_DLE_LOCATION_ERROR                  478\n#define DW_DLE_DEBUGLINK_PATH_SHORT            479\n\n    /* LAST MUST EQUAL LAST ERROR NUMBER */\n#define DW_DLE_LAST        479\n\n#define DW_DLE_LO_USER     0x10000\n\n    /*  Taken as meaning 'undefined value', this is not\n        a column or register number.\n        Only present at libdwarf runtime. Never on disk.\n        DW_FRAME_* Values present on disk are in dwarf.h\n    */\n#define DW_FRAME_UNDEFINED_VAL          1034\n\n    /*  Taken as meaning 'same value' as caller had, not a column\n        or register number\n        Only present at libdwarf runtime. Never on disk.\n        DW_FRAME_* Values present on disk are in dwarf.h\n    */\n#define DW_FRAME_SAME_VAL               1035\n\n\n\n/* error return values\n*/\n#define DW_DLV_BADADDR     (~(Dwarf_Addr)0)\n    /* for functions returning target address */\n\n#define DW_DLV_NOCOUNT     ((Dwarf_Signed)-1)\n    /* for functions returning count */\n\n#define DW_DLV_BADOFFSET   (~(Dwarf_Off)0)\n    /* for functions returning offset */\n\n/* standard return values for functions */\n#define DW_DLV_NO_ENTRY -1\n#define DW_DLV_OK        0\n#define DW_DLV_ERROR     1\n\n/* Special values for offset_into_exception_table field of dwarf fde's. */\n/* The following value indicates that there is no Exception table offset\n   associated with a dwarf frame. */\n#define DW_DLX_NO_EH_OFFSET         (-1LL)\n/* The following value indicates that the producer was unable to analyse the\n   source file to generate Exception tables for this function. */\n#define DW_DLX_EH_OFFSET_UNAVAILABLE  (-2LL)\n\n/* The dwarf specification separates FORMs into\ndifferent classes.  To do the seperation properly\nrequires 4 pieces of data as of DWARF4 (thus the\nfunction arguments listed here).\nThe DWARF4 specification class definition suffices to\ndescribe all DWARF versions.\nSee section 7.5.4, Attribute Encodings.\nA return of DW_FORM_CLASS_UNKNOWN means we could not properly figure\nout what form-class it is.\n\n    DW_FORM_CLASS_FRAMEPTR is MIPS/IRIX only, and refers\n    to the DW_AT_MIPS_fde attribute (a reference to the\n    .debug_frame section).\n\n    DWARF5:\n    DW_FORM_CLASS_LOCLISTSPTR  is like DW_FORM_CLASS_LOCLIST\n    except that LOCLISTSPTR is aways a section offset,\n    never an index, and LOCLISTSPTR is only referenced\n    by DW_AT_loclists_base.\n    Note DW_FORM_CLASS_LOCLISTSPTR spelling to distinguish\n    from DW_FORM_CLASS_LOCLISTPTR.\n\n    DWARF5:\n    DW_FORM_CLASS_RNGLISTSPTR  is like DW_FORM_CLASS_RNGLIST\n    except that RNGLISTSPTR is aways a section offset,\n    never an index. DW_FORM_CLASS_RNGLISTSPTR is only\n    referenced by DW_AT_rnglists_base.\n*/\nenum Dwarf_Form_Class {\n    DW_FORM_CLASS_UNKNOWN,   DW_FORM_CLASS_ADDRESS,\n    DW_FORM_CLASS_BLOCK,     DW_FORM_CLASS_CONSTANT,\n    DW_FORM_CLASS_EXPRLOC,   DW_FORM_CLASS_FLAG,\n    DW_FORM_CLASS_LINEPTR,\n    DW_FORM_CLASS_LOCLISTPTR,   /* DWARF2,3,4 only */\n    DW_FORM_CLASS_MACPTR,       /* DWARF2,3,4 only */\n    DW_FORM_CLASS_RANGELISTPTR, /* DWARF2,3,4 only */\n    DW_FORM_CLASS_REFERENCE,\n    DW_FORM_CLASS_STRING,\n    DW_FORM_CLASS_FRAMEPTR,      /* MIPS/IRIX DWARF2 only */\n    DW_FORM_CLASS_MACROPTR,      /* DWARF5 */\n    DW_FORM_CLASS_ADDRPTR,       /* DWARF5 */\n    DW_FORM_CLASS_LOCLIST,       /* DWARF5 */\n    DW_FORM_CLASS_LOCLISTSPTR,   /* DWARF5 */\n    DW_FORM_CLASS_RNGLIST,       /* DWARF5 */\n    DW_FORM_CLASS_RNGLISTSPTR,   /* DWARF5 */\n    DW_FORM_CLASS_STROFFSETSPTR  /* DWARF5 */\n};\n\n/*  These support opening DWARF5 split dwarf objects. */\n#define DW_GROUPNUMBER_ANY  0\n#define DW_GROUPNUMBER_BASE 1\n#define DW_GROUPNUMBER_DWO  2\n\n/*===========================================================================*/\n/*  Dwarf consumer interface initialization and termination operations */\n\n/*  Initialization based on path. This is new October 2018.\n    The path actually used is copied to true_path_out\n    and in the case of MacOS dSYM may not match path.\n    If true_path_buffer len is zero or true_path_out_buffer\n    is zero  then the Special MacOS processing will not\n    occur, nor will the GNU_debuglink processing occur.\n    In case GNU debuglink data was followed or MacOS\n    dSYM applies the true_path_out\n    will not match path.\n    So consider the value put in true_path_out the\n    actual file name. reserved1,2,3 should all be passed\n    as zero. */\nint dwarf_init_path(const char * /*path*/,\n    char *            /*true_path_out_buffer*/,\n    unsigned int      /*true_path_bufferlen*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*groupnumber*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    const char *      /* reserved1 */,\n    Dwarf_Unsigned    /* reserved2 */,\n    Dwarf_Unsigned  * /* reserved3 */,\n    Dwarf_Error*      /*error*/);\n\n/*  New October 2020. Following GNU debuglink to the\n    true-path with DWARF if there is\n    appropriate debuglink data available.\n    The path actually used is copied to true_path_out\n    and in the case of MacOS dSYM may not match path.\n    In case GNU debuglink data was followed the true_path_out\n    will not match path.\n    If debuglink missing from the Elf executable\n    or shared-object (ie, it is a normal\n    object!) or unusable by libdwarf or\n    true_path_buffer len is zero or true_path_out_buffer\n    is zero the\n    accepts the path given as the object to report on.\n    Passing dl_path_array and dl_path_array size zero\n    suffices unless one has unusual locations for debuglink\n    objects.\n    If true_path_buffer len is zero or true_path_out_buffer\n    is zero  then the Special MacOS processing will not\n    occur either.\n    */\nint dwarf_init_path_dl(const char * /*path*/,\n    char *            /*true_path_out_buffer*/,\n    unsigned int      /*true_path_bufferlen*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*groupnumber*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    char **           /* dl_path array */,\n    unsigned int      /* dl_path array size */,\n    unsigned char   * /* path_source */,\n    const char      * /* reserved1 */,\n    Dwarf_Unsigned    /* reserved2 */,\n    Dwarf_Unsigned  * /* reserved3 */,\n    Dwarf_Error*      /*error*/);\n\n/*  Initialization based on Unix(etc) open fd */\n/*  New March 2017 */\nint dwarf_init_b(int    /*fd*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*groupnumber*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\n\nint dwarf_init(int    /*fd*/,\n    Dwarf_Unsigned    /*access*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\n\n/*  The dwarf_elf_init* functions continue to be supported,\n    but should be considered deprecated as they can ONLY\n    be used on Elf files. */\n/*  Initialization based on libelf/sgi-fastlibelf open pointer. */\n/*  New March 2017 */\nint dwarf_elf_init_b(dwarf_elf_handle /*elf*/,\n    Dwarf_Unsigned    /*access*/,\n    unsigned int      /*group_number*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\nint dwarf_elf_init(dwarf_elf_handle /*elf*/,\n    Dwarf_Unsigned    /*access*/,\n    Dwarf_Handler     /*errhand*/,\n    Dwarf_Ptr         /*errarg*/,\n    Dwarf_Debug*      /*dbg*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New September 2019.\n    When using dwarf_elf_init[_b]() we still want the file path\n    in the record. So we add it after the init phase.\n    Path is needed for buildid and debuglink to fully work.\n*/\nint  dwarf_add_file_path(Dwarf_Debug /*dbg*/,\n    const char * /*file_name*/,\n    Dwarf_Error*      /*error*/);\n\n/* Undocumented function for memory allocator. */\nvoid dwarf_print_memory_stats(Dwarf_Debug  /*dbg*/);\n\nint dwarf_get_elf(Dwarf_Debug /*dbg*/,\n    dwarf_elf_handle* /*return_elfptr*/,\n    Dwarf_Error*      /*error*/);\n\nint dwarf_finish(Dwarf_Debug /*dbg*/, Dwarf_Error* /*error*/);\n\n\n/*  NEW March 2017. */\nint dwarf_object_init_b(Dwarf_Obj_Access_Interface* /*obj*/,\n    Dwarf_Handler /*errhand*/,\n    Dwarf_Ptr     /*errarg*/,\n    unsigned int  /*groupnumber*/,\n    Dwarf_Debug*  /*dbg*/,\n    Dwarf_Error*  /*error*/);\n\nint dwarf_object_init(Dwarf_Obj_Access_Interface* /*obj*/,\n    Dwarf_Handler /*errhand*/,\n    Dwarf_Ptr     /*errarg*/,\n    Dwarf_Debug*  /*dbg*/,\n    Dwarf_Error*  /*error*/);\n\nint dwarf_set_tied_dbg(Dwarf_Debug /*basedbg*/,\n    Dwarf_Debug /*tied_dbg*/,\n    Dwarf_Error*  /*error*/);\n\n/*  Likely not very useful.? */\nint dwarf_get_tied_dbg(Dwarf_Debug /*dbg*/,\n    Dwarf_Debug * /*tieddbg_out*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_object_finish(Dwarf_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  Returns the version string. Example: \"20190922\"\n    which is in ISO date format. */\nconst char * dwarf_package_version(void);\n\n/*  Section name access.  Because sections might\n    now end with .dwo or be .zdebug  or might not.\n*/\nint dwarf_get_die_section_name(Dwarf_Debug /*dbg*/,\n    Dwarf_Bool    /*is_info*/,\n    const char ** /*sec_name*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_get_die_section_name_b(Dwarf_Die /*die*/,\n    const char ** /*sec_name*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_get_real_section_name(Dwarf_Debug /*dbg*/,\n    const char * /*std_section_name*/,\n    const char ** /*actual_sec_name_out*/,\n    Dwarf_Small * /*marked_compressed*/,  /* .zdebug... */\n    Dwarf_Small * /*marked_zlib_compressed */, /* ZLIB string */\n    Dwarf_Small * /*marked_shf_compressed*/, /* SHF_COMPRESSED */\n    Dwarf_Unsigned * /*compressed_length*/,\n    Dwarf_Unsigned * /*uncompressed_length*/,\n    Dwarf_Error * /*error*/);\n\n\n\n/*  dwarf_next_cu_header_d traverses debug_types CU headers.\n    New in May, 2015.\n    */\nint dwarf_next_cu_header_d(Dwarf_Debug /*dbg*/,\n    Dwarf_Bool      /*is_info*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Half*     /*length_size*/,\n    Dwarf_Half*     /*extension_size*/,\n    Dwarf_Sig8*     /*type signature*/,\n    Dwarf_Unsigned* /*typeoffset*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Half    * /*header_cu_type*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Die traversal operations.\n    dwarf_next_cu_header_b traverses debug_info CU headers.\n    Obsolete but supported.\n    */\nint dwarf_next_cu_header_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Half*     /*length_size*/,\n    Dwarf_Half*     /*extension_size*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Error*    /*error*/);\n\n/*  dwarf_next_cu_header_types traverses debug_types CU headers.\n    New in October, 2011. Obsolete but supported May 2015.\n    */\nint dwarf_next_cu_header_c(Dwarf_Debug /*dbg*/,\n    Dwarf_Bool      /*is_info*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Half*     /*length_size*/,\n    Dwarf_Half*     /*extension_size*/,\n    Dwarf_Sig8*     /*type signature*/,\n    Dwarf_Unsigned* /*typeoffset*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Error*    /*error*/);\n/* The following is obsolete, though supported. November 2009. */\nint dwarf_next_cu_header(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned* /*cu_header_length*/,\n    Dwarf_Half*     /*version_stamp*/,\n    Dwarf_Off*      /*abbrev_offset*/,\n    Dwarf_Half*     /*address_size*/,\n    Dwarf_Unsigned* /*next_cu_header_offset*/,\n    Dwarf_Error*    /*error*/);\n\nint dwarf_siblingof(Dwarf_Debug /*dbg*/,\n    Dwarf_Die        /*die*/,\n    Dwarf_Die*       /*return_siblingdie*/,\n    Dwarf_Error*     /*error*/);\n/* dwarf_siblingof_b new October 2011. */\nint dwarf_siblingof_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Die        /*die*/,\n    Dwarf_Bool       /*is_info*/,\n    Dwarf_Die*       /*return_siblingdie*/,\n    Dwarf_Error*     /*error*/);\n\n/* New 27 April 2015. */\nint dwarf_die_from_hash_signature(Dwarf_Debug /*dbg*/,\n    Dwarf_Sig8 *     /*hash_sig*/,\n    const char *     /*sig_type: \"tu\" or \"cu\"*/,\n    Dwarf_Die*       /*returned_CU_die */,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_child(Dwarf_Die /*die*/,\n    Dwarf_Die*       /*return_childdie*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Finding die given global (not CU-relative) offset.\n    Applies only to debug_info. */\nint dwarf_offdie(Dwarf_Debug /*dbg*/,\n    Dwarf_Off        /*offset*/,\n    Dwarf_Die*       /*return_die*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_offdie_b new October 2011 */\n/*  Finding die given global (not CU-relative) offset.\n    Applies to debug_info (is_info true) or debug_types (is_info false). */\nint dwarf_offdie_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Off        /*offset*/,\n    Dwarf_Bool       /*is_info*/,\n    Dwarf_Die*       /*return_die*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Returns the is_info flag through the pointer if the function returns\n    DW_DLV_OK. Needed so client software knows if a DIE is in debug_info\n    or debug_types.\n    New October 2011. */\nDwarf_Bool dwarf_get_die_infotypes_flag(Dwarf_Die /*die*/);\n\n/*  New March 2016.\n    So we can associate a DIE's abbreviations with the contents\n    the abbreviations section. */\nint dwarf_die_abbrev_global_offset(Dwarf_Die /*die*/,\n    Dwarf_Off       * /*abbrev_offset*/,\n    Dwarf_Unsigned  * /*abbrev_count*/,\n    Dwarf_Error*      /*error*/);\n\n/*  operations on DIEs */\nint dwarf_tag(Dwarf_Die /*die*/,\n    Dwarf_Half*      /*return_tag*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_dieoffset returns the global debug_info\n    section offset, not the CU relative offset. */\nint dwarf_dieoffset(Dwarf_Die /*die*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  NEW October 2015. DWARF5.\n    The DIE here can be any DIE in the relevant CU.\n    index is an index into .debug_addr.\n    This will look first for .debug_addr\n    in the dbg object DIE\n    and if not there (because the dbg object is\n    a dwo or dwp split dwarf object)\n    will look in the tied object if tied is available. */\nint dwarf_debug_addr_index_to_addr(Dwarf_Die /*die*/,\n    Dwarf_Unsigned  /*index*/,\n    Dwarf_Addr    * /*return_addr*/,\n    Dwarf_Error   * /*error*/);\n/*  Reading a CU DIE with DW_AT_low_pc an indexed value\n    can be problematic as that interacts with DW_AT_addr_base\n    in that DIE. Here is a test readers may find useful */\nDwarf_Bool dwarf_addr_form_is_indexed(int form);\n\n\n/*  dwarf_CU_dieoffset_given_die returns\n    the global debug_info section offset of the CU die\n    that is the CU containing the given_die\n    (the passed in DIE can be any DIE).\n    This information makes it possible for a consumer to\n    find and print CU context information for any die.\n    See also dwarf_get_cu_die_offset_given_cu_header_offset. */\nint dwarf_CU_dieoffset_given_die(Dwarf_Die /*given_die*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_die_CU_offset returns the CU relative offset\n    not the global debug_info section offset, given\n    any DIE in the CU.  See also dwarf_CU_dieoffset_given_die.\n    */\nint dwarf_die_CU_offset(Dwarf_Die /*die*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_die_CU_offset_range(Dwarf_Die /*die*/,\n    Dwarf_Off*       /*return_CU_header_offset*/,\n    Dwarf_Off*       /*return_CU_length_bytes*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_attr (Dwarf_Die /*die*/,\n    Dwarf_Half        /*attr*/,\n    Dwarf_Attribute * /*returned_attr*/,\n    Dwarf_Error*      /*error*/);\n\nint dwarf_die_text(Dwarf_Die /*die*/,\n    Dwarf_Half    /*attr*/,\n    char       ** /*ret_name*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_diename(Dwarf_Die /*die*/,\n    char   **        /*diename*/,\n    Dwarf_Error*     /*error*/);\n\n/* Returns the  abbrev code of the die. Cannot fail. */\nint dwarf_die_abbrev_code(Dwarf_Die /*die */);\n\n/*  Returns a flag through ab_has_child. Non-zero if\n    the DIE has children, zero if it does not.   */\nint dwarf_die_abbrev_children_flag(Dwarf_Die /*die*/,\n    Dwarf_Half * /*ab_has_child*/);\n\n/* Validate the sibling DIE. This only makes sense to call\n   if the sibling's DIEs have been travsersed and\n   dwarf_child called on each,\n   so that the last DIE dwarf_child saw was the last.\n   Essentially ensuring that (after such traversal) that we\n   are in the same place a sibling attribute would identify.\n   In case we return DW_DLV_ERROR, the global offset of the last\n   DIE traversed by dwarf_child is returned through *offset */\nint dwarf_validate_die_sibling(Dwarf_Die /*sibling*/,Dwarf_Off* /*offset*/);\n\n/* convenience functions, alternative to using dwarf_attrlist */\nint dwarf_hasattr(Dwarf_Die /*die*/,\n    Dwarf_Half   /*attr*/,\n    Dwarf_Bool * /*returned_bool*/,\n    Dwarf_Error* /*error*/);\n\n/* Returns the children offsets for the given offset */\nint dwarf_offset_list(Dwarf_Debug /*dbg*/,\n    Dwarf_Off         /*offset*/,\n    Dwarf_Bool        /*is_info*/,\n    Dwarf_Off      ** /*offbuf*/,\n    Dwarf_Unsigned *  /*offcnt*/,\n    Dwarf_Error    *  /*error*/);\n\n/* BEGIN: debug_gnu_pubnames/typenames access,\n   calling these  Gnu_Index as a general reference.\n*/\n\nint dwarf_get_gnu_index_head(Dwarf_Debug /*dbg*/,\n   /*  The following arg false to select gnu_pubtypes */\n   Dwarf_Bool             /*for_gdb_pubnames*/ ,\n   Dwarf_Gnu_Index_Head * /*index_head_out*/,\n   Dwarf_Unsigned       * /*index_block_count_out*/,\n   Dwarf_Error * /*error*/);\n/*  Frees all resources used for the indexes. */\nvoid dwarf_gnu_index_dealloc(Dwarf_Gnu_Index_Head /*head*/);\n\nint dwarf_get_gnu_index_block(Dwarf_Gnu_Index_Head /*head*/,\n    Dwarf_Unsigned     /*number*/,\n    Dwarf_Unsigned   * /*block_length */,\n    Dwarf_Half       * /*version */,\n    Dwarf_Unsigned   * /*offset_into_debug_info*/,\n    Dwarf_Unsigned   * /*size_of_debug_info_area*/,\n    Dwarf_Unsigned   * /*count_of_index_entries*/,\n    Dwarf_Error      * /*error*/);\n\nint dwarf_get_gnu_index_block_entry(Dwarf_Gnu_Index_Head /*head*/,\n    Dwarf_Unsigned    /*blocknumber*/,\n    Dwarf_Unsigned    /*entrynumber*/,\n    Dwarf_Unsigned  * /*offset_in_debug_info*/,\n    const char     ** /*name_string*/,\n    unsigned char   * /*flagbyte*/,\n    unsigned char   * /*staticorglobal*/,\n    unsigned char   * /*typeofentry*/,\n    Dwarf_Error     * /*error*/);\n/* END: debug_gnu_pubnames/typenames access, */\n\n/*  BEGIN: loclist_c interfaces\n    NEW October 2015.\n    This works for any attribute that identifies\n    a loclist or a locexpr. When the attribute is a locexpr\n    a single loclist (created by libdwarf)\n    is attached to loclist_head. */\nint dwarf_get_loclist_c (Dwarf_Attribute /*attr*/,\n   Dwarf_Loc_Head_c * /*loclist_head*/,\n   Dwarf_Unsigned   * /*locCount*/,\n   Dwarf_Error      * /*error*/);\n\n#define DW_LKIND_expression   0 /* DWARF2,3,4*/\n#define DW_LKIND_loclist      1 /* DWARF 2,3,4 */\n#define DW_LKIND_GNU_exp_list 2 /* GNU DWARF4 .dwo extension */\n#define DW_LKIND_loclists     5 /* DWARF5 loclists */\n#define DW_LKIND_unknown     99\n\n/* DWARF2 kind is 2. DWARF3/4 kind is 3, DWARF5 kind is 5 */\nint\ndwarf_get_loclist_head_kind(Dwarf_Loc_Head_c /*ll_header*/,\n    unsigned int  * /*lkind*/,\n    Dwarf_Error   * /*error*/);\n\nint dwarf_get_locdesc_entry_d(Dwarf_Loc_Head_c /*loclist_head*/,\n   Dwarf_Unsigned    /*index*/,\n   /* identifies type of locdesc entry*/\n   Dwarf_Small    *  /*lle_value_out*/,\n   Dwarf_Unsigned *  /*rawlowpc*/,\n   Dwarf_Unsigned *  /*rawhipc*/,\n   Dwarf_Bool     *  /*debug_addr_unavailable*/,\n   Dwarf_Addr     *  /*lowpc_out*/,\n   Dwarf_Addr     *  /*hipc_out*/,\n   Dwarf_Unsigned *  /*loclist_count_out*/,\n   Dwarf_Locdesc_c * /*locentry_out*/,\n   Dwarf_Small    *  /*loclist_source_out*/, /* 0,1, or 2 */\n   Dwarf_Unsigned *  /*expression_offset_out*/,\n   Dwarf_Unsigned *  /*locdesc_offset_out*/,\n   Dwarf_Error    *  /*error*/);\n\nint dwarf_get_locdesc_entry_c(Dwarf_Loc_Head_c /*loclist_head*/,\n   Dwarf_Unsigned    /*index*/,\n   /* identifies type of locdesc entry*/\n   Dwarf_Small    *  /*lle_value_out*/,\n   Dwarf_Addr     *  /*lowpc_out*/,\n   Dwarf_Addr     *  /*hipc_out*/,\n   Dwarf_Unsigned *  /*loclist_count_out*/,\n   Dwarf_Locdesc_c * /*locentry_out*/,\n   Dwarf_Small    *  /*loclist_source_out*/, /* 0,1, or 2 */\n   Dwarf_Unsigned *  /*expression_offset_out*/,\n   Dwarf_Unsigned *  /*locdesc_offset_out*/,\n   Dwarf_Error    *  /*error*/);\n\n/* New June 2020 for DWARF5 (and all earlier). */\nint\ndwarf_get_location_op_value_d(Dwarf_Locdesc_c /*locdesc*/,\n    Dwarf_Unsigned   /*index*/,\n    Dwarf_Small    * /*atom_out*/,\n    Dwarf_Unsigned * /*operand1*/,\n    Dwarf_Unsigned * /*operand2*/,\n    Dwarf_Unsigned * /*operand3*/,\n    Dwarf_Unsigned * /*rawop1*/,\n    Dwarf_Unsigned * /*rawop2*/,\n    Dwarf_Unsigned * /*rawop3*/,\n    Dwarf_Unsigned * /*offset_for_branch*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_location_op_value_c(Dwarf_Locdesc_c /*locdesc*/,\n   Dwarf_Unsigned   /*index*/,\n   Dwarf_Small    * /*atom_out*/,\n   Dwarf_Unsigned * /*operand1*/,\n   Dwarf_Unsigned * /*operand2*/,\n   Dwarf_Unsigned * /*operand3*/,\n   Dwarf_Unsigned * /*offset_for_branch*/,\n   Dwarf_Error*     /*error*/);\n\nint dwarf_loclist_from_expr_c(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /*expression_in*/,\n    Dwarf_Unsigned /*expression_length*/,\n    Dwarf_Half     /*address_size*/,\n    Dwarf_Half     /*offset_size*/,\n    Dwarf_Small    /*dwarf_version*/,\n    Dwarf_Loc_Head_c* /*loc_head*/,\n    Dwarf_Unsigned  * /*listlen*/,\n    Dwarf_Error     * /*error*/);\n\n/* This frees all memory allocated by the applicable\n    dwarf_get_loclist_c */\nvoid dwarf_loc_head_c_dealloc(Dwarf_Loc_Head_c /*loclist_head*/);\n\n/* END: loclist_c interfaces */\n\n\n/*  As of 2015 the preferred interface\n    is dwarf_get_loclist_c\n    and only dwarf_get_loclist_c will work\n    for DWARF5 (and also all earlier versions).  */\nint dwarf_loclist_n(Dwarf_Attribute /*attr*/,\n    Dwarf_Locdesc*** /*llbuf*/,\n    Dwarf_Signed *   /*locCount*/,\n    Dwarf_Error*     /*error*/);\n\n/*  The original interfaces.  Please do not use this. */\nint dwarf_loclist(Dwarf_Attribute /*attr*/,  /* inflexible! */\n    Dwarf_Locdesc**  /*llbuf*/,\n    Dwarf_Signed *   /*locCount*/,\n    Dwarf_Error*     /*error*/);\n\n/* Extracts a dwarf expression from an expression byte stream.\n   Useful to get expressions from DW_CFA_def_cfa_expression\n   DW_CFA_expression DW_CFA_val_expression expression bytes.\n   27 April 2009: dwarf_loclist_from_expr interface with\n   no addr_size is obsolete but supported,\n   use dwarf_loclist_from_expr_a instead.\n*/\nint dwarf_loclist_from_expr(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /* expression_in*/,\n    Dwarf_Unsigned /* expression_length*/,\n    Dwarf_Locdesc ** /* llbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Error *  /* error*/ );\n\n/*  dwarf_loclist_from_expr_a new 27 Apr 2009:\n    added addr_size argument. */\nint dwarf_loclist_from_expr_a(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /*expression_in*/,\n    Dwarf_Unsigned /*expression_length*/,\n    Dwarf_Half     /*addr_size*/,\n    Dwarf_Locdesc ** /*llbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Error *  /*error*/);\n\n/*  dwarf_loclist_from_expr_b new 13 Nov 2012:\n    added dwarf_version (DWARF version number\n    of the applicable compilation unit)\n    and offset_size arguments. Added for\n    DW_OP_GNU_implicit_pointer. */\nint dwarf_loclist_from_expr_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Ptr      /*expression_in*/ ,\n    Dwarf_Unsigned /*expression_length*/ ,\n    Dwarf_Half     /*addr_size*/ ,\n    Dwarf_Half     /*offset_size*/ ,\n    Dwarf_Small    /*dwarf_version*/ ,\n    Dwarf_Locdesc ** /*llbuf*/ ,\n    Dwarf_Signed * /*listlen*/ ,\n    Dwarf_Error *  /*error*/ );\n\nint dwarf_lowpc(Dwarf_Die /*die*/,\n    Dwarf_Addr  *    /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/*  When the highpc attribute is of class  'constant'\n    it is not an address, it is an offset from the\n    base address (such as lowpc) of the function.\n    This is therefore a required interface for DWARF4\n    style DW_AT_highpc.  */\nint dwarf_highpc_b(Dwarf_Die /*die*/,\n    Dwarf_Addr  *           /*return_value*/,\n    Dwarf_Half  *           /*return_form*/,\n    enum Dwarf_Form_Class * /*return_class*/,\n    Dwarf_Error *           /*error*/);\n\n/*  This works for DWARF2 and DWARF3 styles of DW_AT_highpc,\n    but not for the DWARF4 class constant forms.\n    If the FORM is of class constant this returns an error */\nint dwarf_highpc(Dwarf_Die /*die*/,\n    Dwarf_Addr  *    /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/*  New January 2016. */\nint dwarf_dietype_offset(Dwarf_Die /*die*/,\n    Dwarf_Off   * /*return_off*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_bytesize(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_size*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_bitsize(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_size*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_bitoffset(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_srclang(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_lang*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_arrayorder(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*returned_order*/,\n    Dwarf_Error*     /*error*/);\n\n/* end of convenience function list */\n\n/* this is the main interface to attributes of a DIE */\nint dwarf_attrlist(Dwarf_Die /*die*/,\n    Dwarf_Attribute** /*attrbuf*/,\n    Dwarf_Signed   * /*attrcount*/,\n    Dwarf_Error*     /*error*/);\n\n/* query operations for attributes */\nint dwarf_hasform(Dwarf_Attribute /*attr*/,\n    Dwarf_Half       /*form*/,\n    Dwarf_Bool *     /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_whatform(Dwarf_Attribute /*attr*/,\n    Dwarf_Half *     /*returned_final_form*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_whatform_direct(Dwarf_Attribute /*attr*/,\n    Dwarf_Half *     /*returned_initial_form*/,\n    Dwarf_Error*     /*error*/);\nint dwarf_whatattr(Dwarf_Attribute /*attr*/,\n    Dwarf_Half *     /*returned_attr_num*/,\n    Dwarf_Error*     /*error*/);\n\n/*\n    The following are concerned with the Primary Interface: getting\n    the actual data values. One function per 'kind' of FORM.\n*/\n/*  dwarf_formref returns, thru return_offset, a CU-relative offset\n    and does not allow DW_FORM_ref_addr*/\nint dwarf_formref(Dwarf_Attribute /*attr*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n/*  dwarf_global_formref returns, thru return_offset,\n    a debug_info-relative offset and does allow all reference forms*/\nint dwarf_global_formref(Dwarf_Attribute /*attr*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_formsig8 returns in the caller-provided 8 byte area\n    the 8 bytes of a DW_FORM_ref_sig8.  Not a string.  */\nint dwarf_formsig8(Dwarf_Attribute /*attr*/,\n    Dwarf_Sig8 * /*returned sig bytes*/,\n    Dwarf_Error*     /*error*/);\n/*  dwarf_formsig8_const returns in the caller-provided 8 byte area\n    the 8 bytes of a form const (DW_FORM_data8).  Not a string.  */\nint dwarf_formsig8_const(Dwarf_Attribute /*attr*/,\n    Dwarf_Sig8 * /*returned sig bytes*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formaddr(Dwarf_Attribute /*attr*/,\n    Dwarf_Addr   *   /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Part of DebugFission.  So a consumer can get the index when\n    the object with the actual .debug_addr section is\n    elsewhere. And so a print application can\n    print the index.  New May 2014*/\nint dwarf_get_debug_addr_index(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned * /*return_index*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_formflag(Dwarf_Attribute /*attr*/,\n    Dwarf_Bool *     /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formdata16(Dwarf_Attribute /*attr*/,\n    Dwarf_Form_Data16  * /*returned_val*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formudata(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned  * /*returned_val*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formsdata(Dwarf_Attribute     /*attr*/,\n    Dwarf_Signed  *  /*returned_val*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formblock(Dwarf_Attribute /*attr*/,\n    Dwarf_Block    ** /*returned_block*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_formstring(Dwarf_Attribute /*attr*/,\n    char   **        /*returned_string*/,\n    Dwarf_Error*     /*error*/);\n\n/* DebugFission.  So a DWARF print application can\n   get the string index (DW_FORM_strx) and print it.\n   A convenience function.\n   New May 2014. */\nint dwarf_get_debug_str_index(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned * /*return_index*/,\n    Dwarf_Error * /*error*/);\n\n\nint dwarf_formexprloc(Dwarf_Attribute /*attr*/,\n    Dwarf_Unsigned * /*return_exprlen*/,\n    Dwarf_Ptr  * /*block_ptr*/,\n    Dwarf_Error * /*error*/);\n\n\n/* end attribute query operations. */\n\n/* Start line number operations */\n/* dwarf_srclines  is the original interface from 1993. */\nint dwarf_srclines(Dwarf_Die /*die*/,\n    Dwarf_Line**     /*linebuf*/,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Error*     /*error*/);\n\n\n/* If we have two-level line tables, this will return the\n   logicals table in linebuf and the actuals table in\n   linebuf_actuals. For old-style (one-level) tables, it\n   will return the single table through linebuf, and the\n   value returned through linecount_actuals will be 0.\n   The actual version number is returned through version.\n   For two-level line tables, the version returned will\n   be 0xf006. This interface can return data from two-level\n   line tables, which are experimental.\n   Most users will not wish to use dwarf_srclines_two_level */\nint dwarf_srclines_two_level(Dwarf_Die /*die*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Line**     /*linebuf*/,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Line**     /*linebuf_actuals*/,\n    Dwarf_Signed *   /*linecount_actuals*/,\n    Dwarf_Error*     /*error*/);\n\n/* dwarf_srclines_dealloc, created July 2005, is the\n   appropriate method for deallocating what dwarf_srclines\n   and dwarf_srclines_two_level return.\n   More complete free than using dwarf_dealloc directly.\n\n   When dwarf_srclines_two_level returns two line tables\n   user code should call dwarf_srclines_dealloc\n   once on each linebuf returned by dwarf_srclines_two_level\n   first on linebuf_actuals and then on linebuf{_logicals}.   */\n\nvoid dwarf_srclines_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Line*       /*linebuf*/,\n    Dwarf_Signed      /*count */);\n\n\n/*  New October 2015, must be used to deallocating\n    what is allocated by dwarf_srclines_b and\n    dwarf_srclines_from_linecontext  use.\n    Works for DWARF2,3,4,5 and for experimental line tables.\n    New work should use the new Dwarf_Line_Context\n    interface.\n    This interface only reads the line table header, so\n    it takes relatively little time.\n    *is_single_table will be set non-zero for all standard dwarf line sections.\n    *is_single_table will be set zero for line sections with the\n    two_level line table extension (which will have *version_out 0xf006).  */\nint dwarf_srclines_b(Dwarf_Die /*die*/,\n    Dwarf_Unsigned     * /* version_out*/,\n    Dwarf_Small        * /* table_count */,\n    Dwarf_Line_Context * /* linecontext*/,\n    Dwarf_Error        * /* error*/);\n\n/*  Functions passing in a Dwarf_Line_Context  are only\n    available if dwarf_srclines_b() was used to access\n    line table information.  */\n/*  New October 2015.  Returns line details.\n    Works for DWARF2,3,4,5.  If linecount\n    returned is zero this is a line table with no lines.*/\nint dwarf_srclines_from_linecontext(\n    Dwarf_Line_Context /*line_context*/,\n    Dwarf_Line  **   /*linebuf*/,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Error  *   /* error*/);\n\n/*  New October 2015.  Returns line details.\n    Works for DWARF2,3,4,5 and for experimental\n    two-level line tables. A single level table will\n    have *linebuf_actuals and *linecount_actuals set\n    to 0. */\nint dwarf_srclines_two_level_from_linecontext(\n    Dwarf_Line_Context /*line_context*/,\n    Dwarf_Line  **   /*linebuf */,\n    Dwarf_Signed *   /*linecount*/,\n    Dwarf_Line  **   /*linebuf_actuals*/,\n    Dwarf_Signed *   /*linecount_actuals*/,\n    Dwarf_Error  *   /* error*/);\n\n/* dwarf_srclines_dealloc_b(), created October 2015, is the\n   appropriate method for deallocating everything\n   and dwarf_srclines_from_linecontext(),\n   dwarf_srclines_twolevel_from_linecontext(),\n   and dwarf_srclines_b()  allocate.  */\nvoid dwarf_srclines_dealloc_b(Dwarf_Line_Context /*line_context*/);\n\n/*  New October 2015. */\n/*    The offset is in the relevent .debug_line or .debug_line.dwo\n    section (and in a split dwarf package file includes)\n    the base line table offset). */\nint dwarf_srclines_table_offset(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Unsigned * /*offset*/,\n    Dwarf_Error  * /* error*/);\n\n/*  New October 2015. */\n/*  Compilation Directory name for the current CU.\n    section (and in a split dwarf package file includes)\n    the base line table offset).  Do not free() the string,\n    it is in a dwarf section. */\nint dwarf_srclines_comp_dir(Dwarf_Line_Context /*line_context*/,\n    const char ** /*compilation_directory*/,\n    Dwarf_Error  *  /*error*/);\n\n/*  New October 2015.  Part of the two-level line table extension. */\n/*  Count is the real count of suprogram array entries. */\nint dwarf_srclines_subprog_count(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed * /*count*/,\n    Dwarf_Error  * /*error*/);\n\n/*  New October 2015. */\n/*  Index starts with 1, last is 'count' */\nint dwarf_srclines_subprog_data(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed     /*index*/,\n    const char **    /*name*/,\n    Dwarf_Unsigned * /*decl_file*/,\n    Dwarf_Unsigned * /*decl_line*/,\n    Dwarf_Error   *  /*error*/);\n\n/*  New October 2015. */\n/*  Count is the real count of files array entries.\n    This remains supported though it is pretty useless for\n    DWARF5.  To process DWARF5 as well\n    as DWARF 2,3,4 (in a uniform fashion)\n    use dwarf_srclines_files_indexes() instead.\n*/\nint dwarf_srclines_files_count(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed  *  /*count*/,\n    Dwarf_Error   *  /*error*/);\n\n/*  New March 2018. */\n/*  Count is the real count of files array entries.\n    Since DWARF 2,3,4 are zero origin indexes and\n    DWARF5 and later are one origin, this function\n    replaces dwarf_srclines_files_count(). */\nint dwarf_srclines_files_indexes(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed  *  /*baseindex*/,\n    Dwarf_Signed  *  /*count*/,\n    Dwarf_Signed  *  /*endindex*/,\n    Dwarf_Error   *  /*error*/);\n\n\n/*  New March 2018. Same as dwarf_srclines_files_data,\n    but adds the md5ptr field so cases where DW_LNCT_MD5\n    is present can return pointer to the MD5 value.\n    With DWARF 5 index starts with 0.\n    See dwarf_srclines_files_indexes() which makes\n    indexing through the files easy. */\nint dwarf_srclines_files_data_b(Dwarf_Line_Context line_context,\n    Dwarf_Signed     index_in,\n    const char **    name,\n    Dwarf_Unsigned * directory_index,\n    Dwarf_Unsigned * last_mod_time,\n    Dwarf_Unsigned * file_length,\n    Dwarf_Form_Data16 ** md5ptr,\n    Dwarf_Error    * error);\n\n/*  New October 2015. */\n/*  Unlike dwarf_srcfiles() this returns the raw file table\n    strings without the directory being prefixed.\n    Index starts with 1, last is 'count' */\nint dwarf_srclines_files_data(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed     /*index*/,\n    const char **    /*name*/,\n    Dwarf_Unsigned * /*directory_index*/,\n    Dwarf_Unsigned * /*last_mod_time*/,\n    Dwarf_Unsigned * /*file_length*/,\n    Dwarf_Error    * /* error*/);\n\n/*  New October 2015. */\n/*  Count is the real count of include array entries. */\nint dwarf_srclines_include_dir_count(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed *  /*count*/,\n    Dwarf_Error  * /* error*/);\n\n/*  New October 2015. */\n/*  Index starts with 1, last is 'count' */\nint dwarf_srclines_include_dir_data(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Signed    /*index*/,\n    const char **   /*name*/,\n    Dwarf_Error   * /* error*/);\n\n/*  New October 2015. */\n/*  The DWARF version number of this compile-unit\n    in the .debug_lines section and the number of\n    actual tables:0 (header with no lines),\n    1 (standard table), or 2 (experimental). */\nint dwarf_srclines_version(Dwarf_Line_Context /*line_context*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Small    * /*table_count*/,\n    Dwarf_Error    * /*error*/);\n\n\nint dwarf_get_line_section_name_from_die(Dwarf_Die /*die*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\n\n/*  While 'filecount' is signed, the value\n    returned through the pointer is never negative.\n    Original libdwarf from 199x.  */\nint dwarf_srcfiles(Dwarf_Die /*die*/,\n    char***          /*srcfiles*/,\n    Dwarf_Signed *   /*filecount*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_linebeginstatement(Dwarf_Line /*line*/,\n    Dwarf_Bool  *    /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_lineendsequence(Dwarf_Line /*line*/,\n    Dwarf_Bool  *    /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_lineno(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_lineno*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_line_srcfileno(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*ret_fileno*/,\n    Dwarf_Error *    /*error*/);\n\n/* Is the line address from DW_LNS_set_address? */\nint dwarf_line_is_addr_set(Dwarf_Line /*line*/,\n    Dwarf_Bool *     /*is_addr_set*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_lineaddr(Dwarf_Line /*line*/,\n    Dwarf_Addr *     /*returned_addr*/,\n    Dwarf_Error*     /*error*/);\n\n/* dwarf_lineoff is OBSOLETE as of December 2011. Do not use. */\nint dwarf_lineoff(Dwarf_Line /*line*/,\n    Dwarf_Signed  *  /*returned_lineoffset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  dwarf_lineoff_b correctly returns an unsigned column number\n    through the pointer returned_lineoffset.\n    dwarf_lineoff_b() is new in December 2011.  */\nint dwarf_lineoff_b(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_lineoffset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_linesrc(Dwarf_Line /*line*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_lineblock(Dwarf_Line /*line*/,\n    Dwarf_Bool  *    /*returned_bool*/,\n    Dwarf_Error*     /*error*/);\n\n/* We gather these into one call as it's likely one\n   will want all or none of them.  */\nint dwarf_prologue_end_etc(Dwarf_Line /* line */,\n    Dwarf_Bool  *    /*prologue_end*/,\n    Dwarf_Bool  *    /*eplogue_begin*/,\n    Dwarf_Unsigned * /* isa */,\n    Dwarf_Unsigned * /* discriminator */,\n    Dwarf_Error *    /*error*/);\n/* End line table operations */\n\n/* Two-level line tables:\n   When reading from an actuals table, dwarf_line_logical()\n   returns the logical row number for the line. */\nint dwarf_linelogical(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_logical*/,\n    Dwarf_Error*     /*error*/);\n\n/* Two-level line tables:\n   When reading from a logicals table, dwarf_linecontext()\n   returns the logical row number corresponding the the\n   calling context for an inlined call. */\nint dwarf_linecontext(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*returned_context*/,\n    Dwarf_Error*     /*error*/);\n\n/* Two-level line tables:\n   When reading from a logicals table, dwarf_linesubprogno()\n   returns the index in the subprograms table of the inlined\n   subprogram. */\nint dwarf_line_subprogno(Dwarf_Line /*line*/,\n    Dwarf_Unsigned * /*ret_subprogno*/,\n    Dwarf_Error *    /*error*/);\n\n/* Two-level line tables:\n   When reading from a logicals table, dwarf_linesubprog()\n   returns the name of the inlined subprogram, its declaration\n   filename, and its declaration line number, if available. */\nint dwarf_line_subprog(Dwarf_Line /*line*/,\n    char   **        /*returned_subprog_name*/,\n    char   **        /*returned_filename*/,\n    Dwarf_Unsigned * /*returned_lineno*/,\n    Dwarf_Error *    /*error*/);\n/* End of line table interfaces. */\n\n/* .debug_names names table interfaces. DWARF5 */\n/*  New April 2017 */\nint dwarf_debugnames_header(Dwarf_Debug /*dbg*/,\n    Dwarf_Dnames_Head * /*dn_out*/,\n\n    /* *dn_count_out returns the number of name indexes\n        in the .debug_names section */\n    Dwarf_Unsigned    * /*dn_index_count_out*/,\n    Dwarf_Error *       /*error*/);\n\n/*  Since there may be multiple name indexes in a .debug_names\n    section we use index_number starting at 0 through\n    dn_index_count_out-1. */\nint dwarf_debugnames_sizes(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n\n    Dwarf_Unsigned * /*section_offset*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Unsigned * /*offset_size*/, /* 4 or 8 */\n\n    /* The counts are entry counts, not byte sizes. */\n    Dwarf_Unsigned * /*comp_unit_count*/,\n    Dwarf_Unsigned * /*local_type_unit_count*/,\n    Dwarf_Unsigned * /*foreign_type_unit_count*/,\n    Dwarf_Unsigned * /*bucket_count*/,\n    Dwarf_Unsigned * /*name_count*/,\n\n    /* The following are counted in bytes */\n    Dwarf_Unsigned * /*indextable_overall_length*/,\n    Dwarf_Unsigned * /*abbrev_table_size*/,\n    Dwarf_Unsigned * /*entry_pool_size*/,\n    Dwarf_Unsigned * /*augmentation_string_size*/,\n\n    Dwarf_Error *       /*error*/);\n\nint dwarf_debugnames_cu_entry(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*offset_number*/,\n    Dwarf_Unsigned    * /*offset_count*/,\n    Dwarf_Unsigned    * /*offset*/,\n    Dwarf_Error *       /*error*/);\nint dwarf_debugnames_local_tu_entry(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*offset_number*/,\n    Dwarf_Unsigned    * /*offset_count*/,\n    Dwarf_Unsigned    * /*offset*/,\n    Dwarf_Error *       /*error*/);\nint dwarf_debugnames_foreign_tu_entry(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*sig_number*/,\n    Dwarf_Unsigned    * /*sig_mininum*/,\n    Dwarf_Unsigned    * /*sig_count*/,\n    Dwarf_Sig8        * /*signature*/,\n    Dwarf_Error *       /*error*/);\nint dwarf_debugnames_bucket(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*bucket_number*/,\n    Dwarf_Unsigned    * /*bucket_count*/,\n    Dwarf_Unsigned    * /*index_of_name_entry*/,\n    Dwarf_Error *       /*error*/);\n\nint dwarf_debugnames_name(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*name_entry*/,\n    Dwarf_Unsigned    * /*names_count*/,\n    Dwarf_Sig8        * /*signature*/,\n    Dwarf_Unsigned    * /*offset_to_debug_str*/,\n    Dwarf_Unsigned    * /*offset_in_entrypool*/,\n    Dwarf_Error *       /*error*/);\n\nint dwarf_debugnames_abbrev_by_index(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned    /*index_number*/,\n    Dwarf_Unsigned    /*abbrev_entry*/,\n    Dwarf_Unsigned *  /*abbrev_code*/,\n    Dwarf_Unsigned *  /*tag*/,\n\n    /*  The number of valid abbrev_entry values: 0 to number_of_abbrev-1\n        */\n    Dwarf_Unsigned *  /*number_of_abbrev*/,\n\n    /*  The number of attr/form pairs, not counting the trailing\n        0,0 pair. */\n    Dwarf_Unsigned * /*number_of_attr_form_entries*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_debugnames_abbrev_by_code(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned    /*index_number*/,\n    Dwarf_Unsigned    /*abbrev_code*/,\n    Dwarf_Unsigned *  /*tag*/,\n\n    /*  The number of this code/tag as an array index. */\n    Dwarf_Unsigned *  /*index_of_abbrev*/,\n\n    /*  The number of attr/form pairs, not counting the trailing\n        0,0 pair. */\n    Dwarf_Unsigned * /*number_of_attr_form_entries*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_debugnames_abbrev_form_by_index(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned   /*index_number*/,\n    Dwarf_Unsigned   /*abbrev_entry_index*/,\n    Dwarf_Unsigned   /*abbrev_form_index*/,\n    Dwarf_Unsigned * /*name_index_attr*/,\n    Dwarf_Unsigned * /*form*/,\n    Dwarf_Unsigned * /*number_of_attr_form_entries*/,\n    Dwarf_Error    * /*error*/);\n\n\n/*  This, combined with dwarf_debugnames_entrypool_values(),\n    lets one examine as much or as little of an entrypool\n    as one wants to by alternately calling these two\n    functions. */\nint dwarf_debugnames_entrypool(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*offset_in_entrypool*/,\n    Dwarf_Unsigned *    /*abbrev_code*/,\n    Dwarf_Unsigned *    /*tag*/,\n    Dwarf_Unsigned *    /*value_count*/,\n    Dwarf_Unsigned *    /*index_of_abbrev*/,\n    Dwarf_Unsigned *    /*offset_of_initial_value*/,\n    Dwarf_Error *       /*error*/);\n\n/*  Caller, knowing array size needed, passes in arrays\n    it allocates of for idx, form, offset-size-values,\n    and signature values.  Caller must examine idx-number\n    and form to decide, for each array element, whether\n    the offset or the signature contains the value.\n    So this returns all the values for the abbrev code.\n    And points via offset_of_next to the next abbrev code.\n    */\nint dwarf_debugnames_entrypool_values(Dwarf_Dnames_Head /*dn*/,\n    Dwarf_Unsigned      /*index_number*/,\n    Dwarf_Unsigned      /*index_of_abbrev*/,\n    Dwarf_Unsigned      /*offset_in_entrypool_of_values*/,\n    Dwarf_Unsigned *    /*array_dw_idx_number*/,\n    Dwarf_Unsigned *    /*array_form*/,\n    Dwarf_Unsigned *    /*array_of_offsets*/,\n    Dwarf_Sig8     *    /*array_of_signatures*/,\n\n    /*  offset of the next entrypool entry. */\n    Dwarf_Unsigned *    /*offset_of_next_entrypool*/,\n    Dwarf_Error *       /*error*/);\n\n/*  FIXME: add interfaces for string search given hash and\n    string */\n\n\n\n/* end of .debug_names interfaces. */\n\n/*  New October 2019.  Access to the GNU section named\n    .gnu_debuglink  and/or the section .note.gnu.build-id.\n    See\n    https://sourceware.org/gdb/onlinedocs/gdb/\n        Separate-Debug-Files.html\n\n    If no debuglink then name_returned,crc_returned and\n    debuglink_path_returned will get set 0 through the pointers.\n\n    If no .note.gnu.build-id then  buildid_length_returned,\n    and buildid_returned will be set 0 through the pointers.\n\n    Caller frees space returned by debuglink_fullpath_returned.\n\n    See libdwarf2.1.mm revision 3.13 or later for\n    additional important details.\n*/\n\nint dwarf_gnu_debuglink(Dwarf_Debug /*dbg*/,\n    char     **    /*debuglink_path_returned */,\n    unsigned char ** /*crc_returned from the debuglink section*/,\n    char     **    /*debuglink_fullpath_returned free this*/,\n    unsigned int * /*debuglink_path_count_returned */,\n    unsigned int * /*buildid_type_returned */,\n    char     **    /*buildid_owner_name_returned*/,\n    unsigned char ** /*buildid_returned*/,\n    unsigned int * /*buildid_length_returned*/,\n    char     ***   /*paths_returned*/,\n    unsigned int * /*paths_length_returned*/,\n    Dwarf_Error*   /*error*/);\n\n/*  Only useful inside dwarfexample/dwdebuglink.c\n    so we can show all that is going on.\n*/\nint dwarf_add_debuglink_global_path(Dwarf_Debug /*dbg*/,\n    const char *pathname,\n    Dwarf_Error* /*error*/);\n\n/*  crc32 used for debuglink crc calculation.\n    Caller passes pointer to array of 4 unsigned char\n    provided by the caller and if this returns\n    DW_DLV_OK that is filled in. */\nint dwarf_crc32 (Dwarf_Debug /*dbg*/,unsigned char * /*crcbuf*/,\n    Dwarf_Error * /*error*/);\n\n/*  Public interface to the real crc calculation\n    just in case some find it useful. */\nunsigned int dwarf_basic_crc32 (const unsigned char * /*buf*/,\n    unsigned long /*len*/, unsigned int /*init*/);\n\n/*  global name space operations (.debug_pubnames access)\n    The pubnames and similar sections are rarely used. Few compilers\n    emit them. They are DWARF 2,3,4 only., not DWARF 5.  */\n\n/*  New March 2019. Special for dwarfdump.\n    Sets a flag in the dbg. Always returns DW_DLV_OK\n    and (as of March 2020) never touches error */\nint dwarf_return_empty_pubnames(Dwarf_Debug /*dbg*/,\n    int /* flag */,\n    Dwarf_Error* /*error*/);\n\nint dwarf_get_globals(Dwarf_Debug /*dbg*/,\n    Dwarf_Global**   /*globals*/,\n    Dwarf_Signed *   /*number_of_globals*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_globals_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Global*    /*globals*/,\n    Dwarf_Signed     /*number_of_globals*/);\n\nint dwarf_globname(Dwarf_Global /*glob*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_global_die_offset(Dwarf_Global /*global*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error *    /*error*/);\n\n/* This returns the CU die global offset if one knows the\n   CU header global offset.\n   See also dwarf_CU_dieoffset_given_die(). */\nint dwarf_get_cu_die_offset_given_cu_header_offset(\n    Dwarf_Debug      /*dbg*/,\n    Dwarf_Off        /*in_cu_header_offset*/,\n    Dwarf_Off *  /*out_cu_die_offset*/,\n    Dwarf_Error *    /*err*/);\n\n/*  The _b form is new October 2011. */\nint dwarf_get_cu_die_offset_given_cu_header_offset_b(\n    Dwarf_Debug      /*dbg*/,\n    Dwarf_Off        /*in_cu_header_offset*/,\n    Dwarf_Bool       /*is_info. True means look in debug_Info,\n        false use debug_types.*/,\n    Dwarf_Off *  /*out_cu_die_offset*/,\n    Dwarf_Error *    /*err*/);\n\n#ifdef __sgi /* pragma is sgi MIPS only */\n#pragma optional dwarf_get_cu_die_offset_given_cu_header_offset\n#endif\n\nint dwarf_global_cu_offset(Dwarf_Global /*global*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_global_name_offsets(Dwarf_Global /*global*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  New February 2019. For more complete dwarfdump printing.\n    For each CU represented in .debug_pubnames, etc,\n    there is a .debug_pubnames header.  For any given\n    Dwarf_Global this returns the content of the applicable\n    header. */\nint dwarf_get_globals_header(Dwarf_Global /*global*/,\n    Dwarf_Off      * /*offset_pub_header*/,\n    Dwarf_Unsigned * /*length_size*/,\n    Dwarf_Unsigned * /*length_pub*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Unsigned * /*header_info_offset*/,\n    Dwarf_Unsigned * /*info_length*/,\n    Dwarf_Error*   /*error*/);\n\n/* Static function name operations.  */\nint dwarf_get_funcs(Dwarf_Debug    /*dbg*/,\n    Dwarf_Func**     /*funcs*/,\n    Dwarf_Signed *   /*number_of_funcs*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_funcs_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Func*      /*funcs*/,\n    Dwarf_Signed     /*number_of_funcs*/);\n\nint dwarf_funcname(Dwarf_Func /*func*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_func_die_offset(Dwarf_Func /*func*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_func_cu_offset(Dwarf_Func /*func*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_func_name_offsets(Dwarf_Func /*func*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* User-defined type name operations, SGI IRIX .debug_typenames section.\n   Same content as DWARF3 .debug_pubtypes, but defined years before\n   .debug_pubtypes was defined.   SGI IRIX only. */\nint dwarf_get_types(Dwarf_Debug    /*dbg*/,\n    Dwarf_Type**     /*types*/,\n    Dwarf_Signed *   /*number_of_types*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_types_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Type*      /*types*/,\n    Dwarf_Signed     /*number_of_types*/);\n\n\nint dwarf_typename(Dwarf_Type /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_type_die_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_type_cu_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_type_name_offsets(Dwarf_Type    /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* User-defined type name operations, DWARF3  .debug_pubtypes section.\n*/\nint dwarf_get_pubtypes(Dwarf_Debug    /*dbg*/,\n    Dwarf_Type**     /*types*/,\n    Dwarf_Signed *   /*number_of_types*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_pubtypes_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Type*      /*pubtypes*/,\n    Dwarf_Signed     /*number_of_pubtypes*/);\n\n\nint dwarf_pubtypename(Dwarf_Type /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_pubtype_type_die_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_pubtype_cu_offset(Dwarf_Type /*type*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_pubtype_name_offsets(Dwarf_Type    /*type*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* File-scope static variable name operations.  */\nint dwarf_get_vars(Dwarf_Debug    /*dbg*/,\n    Dwarf_Var**      /*vars*/,\n    Dwarf_Signed *   /*number_of_vars*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_vars_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Var*       /*vars*/,\n    Dwarf_Signed     /*number_of_vars*/);\n\n\nint dwarf_varname(Dwarf_Var /*var*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_var_die_offset(Dwarf_Var /*var*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_var_cu_offset(Dwarf_Var /*var*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_var_name_offsets(Dwarf_Var /*var*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* weak name operations.  */\nint dwarf_get_weaks(Dwarf_Debug    /*dbg*/,\n    Dwarf_Weak**     /*weaks*/,\n    Dwarf_Signed *   /*number_of_weaks*/,\n    Dwarf_Error*     /*error*/);\nvoid dwarf_weaks_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Weak*      /*weaks*/,\n    Dwarf_Signed     /*number_of_weaks*/);\n\n\nint dwarf_weakname(Dwarf_Weak /*weak*/,\n    char   **        /*returned_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_weak_die_offset(Dwarf_Weak /*weak*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_weak_cu_offset(Dwarf_Weak /*weak*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_weak_name_offsets(Dwarf_Weak    /*weak*/,\n    char   **        /*returned_name*/,\n    Dwarf_Off*       /*die_offset*/,\n    Dwarf_Off*       /*cu_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  location list section operation.  (.debug_loc access)\n    DO NOT USE, it cannot deal with\n    recent dwarf or CUs with different\n    address sizes.  Use dwarf_get_locdesc_entry_c() instead.\n*/\nint dwarf_get_loclist_entry(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*offset*/,\n    Dwarf_Addr*      /*hipc*/,\n    Dwarf_Addr*      /*lopc*/,\n    Dwarf_Ptr*       /*data*/,\n    Dwarf_Unsigned*  /*entry_len*/,\n    Dwarf_Unsigned*  /*next_entry*/,\n    Dwarf_Error*     /*error*/);\n\n/* abbreviation section operations */\nint dwarf_get_abbrev(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*offset*/,\n    Dwarf_Abbrev  *  /*returned_abbrev*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Unsigned*  /*attr_count*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_abbrev_tag(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Half*      /*return_tag_number*/,\n    Dwarf_Error*     /*error*/);\nint dwarf_get_abbrev_code(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Unsigned*  /*return_code_number*/,\n    Dwarf_Error*     /*error*/);\n\n/* See comments in dwarf_abbrev.c. Not an entirely safe function. */\nint dwarf_get_abbrev_count(Dwarf_Debug /*dbg*/);\n\nint dwarf_get_abbrev_children_flag(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Signed*    /*return_flag*/,\n    Dwarf_Error*     /*error*/);\n\n/*  New August 2019.\n    Most uses will call with filter_outliers non-zero.\n    In that case impossible values return DW_DLV_ERROR.\n    Those doing extra things (like dwarfdump) will\n    call with filter_outliers zero to get the raw data\n    (effectively); */\nint dwarf_get_abbrev_entry_b(Dwarf_Abbrev abbrev,\n    Dwarf_Unsigned indx,\n    Dwarf_Bool     filter_outliers,\n    Dwarf_Unsigned * returned_attr_num,\n    Dwarf_Unsigned * returned_form,\n    Dwarf_Signed   * returned_implict_const,\n    Dwarf_Off      * offset,\n    Dwarf_Error    * error);\n\n/*  Obsolete because it cannot return the\n    DW_FORM_implicit_const value. */\nint dwarf_get_abbrev_entry(Dwarf_Abbrev /*abbrev*/,\n    Dwarf_Signed     /*index*/,\n    Dwarf_Half  *    /*returned_attr_num*/,\n    Dwarf_Signed*    /*form*/,\n    Dwarf_Off*       /*offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_string_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\n/* consumer string section operation */\nint dwarf_get_str(Dwarf_Debug /*dbg*/,\n    Dwarf_Off        /*offset*/,\n    char**           /*string*/,\n    Dwarf_Signed *   /*strlen_of_string*/,\n    Dwarf_Error*     /*error*/);\n\n/* New November 2015 */\nint dwarf_get_frame_section_name(Dwarf_Debug /*dbg*/,\n   const char ** /*section_name_out*/,\n   Dwarf_Error * /*error*/);\n\n/* New November 2015 */\nint dwarf_get_frame_section_name_eh_gnu(Dwarf_Debug /*dbg*/,\n   const char ** /*section_name_out*/,\n   Dwarf_Error * /*error*/);\n\n/* Consumer op on  gnu .eh_frame info */\nint dwarf_get_fde_list_eh(\n    Dwarf_Debug      /*dbg*/,\n    Dwarf_Cie**      /*cie_data*/,\n    Dwarf_Signed*    /*cie_element_count*/,\n    Dwarf_Fde**      /*fde_data*/,\n    Dwarf_Signed*    /*fde_element_count*/,\n    Dwarf_Error*     /*error*/);\n\n\n/* consumer operations on frame info: .debug_frame */\nint dwarf_get_fde_list(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie**      /*cie_data*/,\n    Dwarf_Signed*    /*cie_element_count*/,\n    Dwarf_Fde**      /*fde_data*/,\n    Dwarf_Signed*    /*fde_element_count*/,\n    Dwarf_Error*     /*error*/);\n\n/* Release storage gotten by dwarf_get_fde_list_eh() or\n   dwarf_get_fde_list() */\nvoid dwarf_fde_cie_list_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie *  /*cie_data*/,\n    Dwarf_Signed /*cie_element_count*/,\n    Dwarf_Fde *  /*fde_data*/,\n    Dwarf_Signed /*fde_element_count*/);\n\n\n\nint dwarf_get_fde_range(Dwarf_Fde /*fde*/,\n    Dwarf_Addr*      /*low_pc*/,\n    Dwarf_Unsigned*  /*func_length*/,\n    Dwarf_Ptr*       /*fde_bytes*/,\n    Dwarf_Unsigned*  /*fde_byte_length*/,\n    Dwarf_Off*       /*cie_offset*/,\n    Dwarf_Signed*    /*cie_index*/,\n    Dwarf_Off*       /*fde_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Useful for IRIX only:  see dwarf_get_cie_augmentation_data()\n    dwarf_get_fde_augmentation_data() for GNU .eh_frame. */\nint dwarf_get_fde_exception_info(Dwarf_Fde /*fde*/,\n    Dwarf_Signed*    /* offset_into_exception_tables */,\n    Dwarf_Error*     /*error*/);\n\n\nint dwarf_get_cie_of_fde(Dwarf_Fde /*fde*/,\n    Dwarf_Cie *      /*cie_returned*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_cie_info_b(Dwarf_Cie /*cie*/,\n    Dwarf_Unsigned * /*bytes_in_cie*/,\n    Dwarf_Small*     /*version*/,\n    char        **   /*augmenter*/,\n    Dwarf_Unsigned*  /*code_alignment_factor*/,\n    Dwarf_Signed*    /*data_alignment_factor*/,\n    Dwarf_Half*      /*return_address_register_rule*/,\n    Dwarf_Ptr*       /*initial_instructions*/,\n    Dwarf_Unsigned*  /*initial_instructions_length*/,\n    Dwarf_Half*      /*offset_size*/,\n    Dwarf_Error*     /*error*/);\nint dwarf_get_cie_info(Dwarf_Cie /*cie*/,\n    Dwarf_Unsigned * /*bytes_in_cie*/,\n    Dwarf_Small*     /*version*/,\n    char        **   /*augmenter*/,\n    Dwarf_Unsigned*  /*code_alignment_factor*/,\n    Dwarf_Signed*    /*data_alignment_factor*/,\n    Dwarf_Half*      /*return_address_register_rule*/,\n    Dwarf_Ptr*       /*initial_instructions*/,\n    Dwarf_Unsigned*  /*initial_instructions_length*/,\n    Dwarf_Error*     /*error*/);\n\n/* dwarf_get_cie_index new September 2009. */\nint dwarf_get_cie_index(\n    Dwarf_Cie /*cie*/,\n    Dwarf_Signed* /*index*/,\n    Dwarf_Error* /*error*/ );\n\n\nint dwarf_get_fde_instr_bytes(Dwarf_Fde /*fde*/,\n    Dwarf_Ptr *      /*outinstrs*/, Dwarf_Unsigned * /*outlen*/,\n    Dwarf_Error *    /*error*/);\n\nint dwarf_get_fde_info_for_all_regs(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Regtable*  /*reg_table*/,\n    Dwarf_Addr*      /*row_pc*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_info_for_all_regs3(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Regtable3* /*reg_table*/,\n    Dwarf_Addr*      /*row_pc*/,\n    Dwarf_Error*     /*error*/);\n\n/* In this older interface DW_FRAME_CFA_COL is a meaningful\n    column (which does not work well with DWARF3 or\n    non-MIPS architectures). */\nint dwarf_get_fde_info_for_reg(Dwarf_Fde /*fde*/,\n    Dwarf_Half       /*table_column*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Signed*    /*offset_relevant*/,\n    Dwarf_Signed*    /*register*/,\n    Dwarf_Signed*    /*offset*/,\n    Dwarf_Addr*      /*row_pc*/,\n    Dwarf_Error*     /*error*/);\n\n/* See discussion of dw_value_type, libdwarf.h.\n   Use of DW_FRAME_CFA_COL is not meaningful in this interface.\n   See dwarf_get_fde_info_for_cfa_reg3().\n*/\n/* dwarf_get_fde_info_for_reg3 is useful on a single column, but\n   it is inefficient to iterate across all table_columns using this\n   function.  Instead call dwarf_get_fde_info_for_all_regs3() and index\n   into the table it fills in. */\nint dwarf_get_fde_info_for_reg3(Dwarf_Fde /*fde*/,\n    Dwarf_Half       /*table_column*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed *   /*register*/,\n    Dwarf_Signed *   /*offset_or_block_len*/,\n    Dwarf_Ptr    *   /*block_ptr */,\n    Dwarf_Addr   *   /*row_pc_out*/,\n    Dwarf_Error  *    /*error*/);\n\nint dwarf_get_fde_info_for_reg3_b(Dwarf_Fde /*fde*/,\n    Dwarf_Half       /*table_column*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed *    /*register*/,\n    Dwarf_Signed *    /*offset_or_block_len*/,\n    Dwarf_Ptr    *    /*block_ptr */,\n    Dwarf_Addr   *    /*row_pc_out*/,\n    Dwarf_Bool   *    /* has_more_rows */,\n    Dwarf_Addr   *    /* subsequent_pc */,\n    Dwarf_Error  *    /*error*/);\n\n/*  Use this or the next function to get the cfa.\n    New function, June 11, 2016*/\nint dwarf_get_fde_info_for_cfa_reg3_b(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed*    /*register*/,\n    Dwarf_Signed*    /*offset_or_block_len*/,\n    Dwarf_Ptr   *    /*block_ptr */,\n    Dwarf_Addr*      /*row_pc_out*/,\n    Dwarf_Bool  *    /* has_more_rows */,\n    Dwarf_Addr  *    /* subsequent_pc */,\n    Dwarf_Error*     /*error*/);\n/* Use this to get the cfa. Or the above function. */\nint dwarf_get_fde_info_for_cfa_reg3(Dwarf_Fde /*fde*/,\n    Dwarf_Addr       /*pc_requested*/,\n    Dwarf_Small  *   /*value_type*/,\n    Dwarf_Signed *   /*offset_relevant*/,\n    Dwarf_Signed*    /*register*/,\n    Dwarf_Signed*    /*offset_or_block_len*/,\n    Dwarf_Ptr   *    /*block_ptr */,\n    Dwarf_Addr*      /*row_pc_out*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_for_die(Dwarf_Debug /*dbg*/,\n    Dwarf_Die        /*subr_die */,\n    Dwarf_Fde  *     /*returned_fde*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_n(Dwarf_Fde* /*fde_data*/,\n    Dwarf_Unsigned   /*fde_index*/,\n    Dwarf_Fde  *     /*returned_fde*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_fde_at_pc(Dwarf_Fde* /*fde_data*/,\n    Dwarf_Addr       /*pc_of_interest*/,\n    Dwarf_Fde  *     /*returned_fde*/,\n    Dwarf_Addr*      /*lopc*/,\n    Dwarf_Addr*      /*hipc*/,\n    Dwarf_Error*     /*error*/);\n\n/* GNU .eh_frame augmentation information, raw form, see\n   Linux Standard Base Core Specification version 3.0 . */\nint dwarf_get_cie_augmentation_data(Dwarf_Cie /* cie*/,\n    Dwarf_Small **   /* augdata */,\n    Dwarf_Unsigned * /* augdata_len */,\n    Dwarf_Error*     /*error*/);\n/* GNU .eh_frame augmentation information, raw form, see\n   Linux Standard Base Core Specification version 3.0 . */\nint dwarf_get_fde_augmentation_data(Dwarf_Fde /* fde*/,\n    Dwarf_Small **   /* augdata */,\n    Dwarf_Unsigned * /* augdata_len */,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_expand_frame_instructions(Dwarf_Cie /*cie*/,\n    Dwarf_Ptr        /*instruction*/,\n    Dwarf_Unsigned   /*i_length*/,\n    Dwarf_Frame_Op** /*returned_op_list*/,\n    Dwarf_Signed*    /*op_count*/,\n    Dwarf_Error*     /*error*/);\n\n/* Operations on .debug_aranges. */\nint dwarf_get_aranges(Dwarf_Debug /*dbg*/,\n    Dwarf_Arange**   /*aranges*/,\n    Dwarf_Signed *   /*arange_count*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_ranges_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\nint dwarf_get_aranges_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*section_name_out*/,\n    Dwarf_Error * /*error*/);\n\n\n\nint dwarf_get_arange(\n    Dwarf_Arange*    /*aranges*/,\n    Dwarf_Unsigned   /*arange_count*/,\n    Dwarf_Addr       /*address*/,\n    Dwarf_Arange *   /*returned_arange*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_cu_die_offset(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Off*       /*return_offset*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_arange_cu_header_offset(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Off*       /*return_cu_header_offset*/,\n    Dwarf_Error*     /*error*/);\n#ifdef __sgi /* pragma is sgi MIPS only */\n#pragma optional dwarf_get_arange_cu_header_offset\n#endif\n\n/* DWARF2,3 interface. No longer really adequate (it was never\n   right for segmented address spaces, please switch\n   to using dwarf_get_arange_info_b instead.\n   There is no effective difference between these\n   functions  if the address space\n   of the target is not segmented.  */\nint dwarf_get_arange_info(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Addr*      /*start*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Off*       /*cu_die_offset*/,\n    Dwarf_Error*     /*error*/ );\n\n/* New for DWARF4, entries may have segment information.\n   *segment is only meaningful if *segment_entry_size is non-zero. */\nint dwarf_get_arange_info_b(\n    Dwarf_Arange     /*arange*/,\n    Dwarf_Unsigned*  /*segment*/,\n    Dwarf_Unsigned*  /*segment_entry_size*/,\n    Dwarf_Addr    *  /*start*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Off     *  /*cu_die_offset*/,\n    Dwarf_Error   *  /*error*/ );\n\n/*  BEGIN: DWARF5 .debug_macro  interfaces\n    NEW November 2015.  */\nint dwarf_get_macro_context(Dwarf_Die /*die*/,\n    Dwarf_Unsigned      * /*version_out*/,\n    Dwarf_Macro_Context * /*macro_context*/,\n    Dwarf_Unsigned      * /*macro_unit_offset_out*/,\n    Dwarf_Unsigned      * /*macro_ops_count_out*/,\n    Dwarf_Unsigned      * /*macro_ops_data_length_out*/,\n    Dwarf_Error         * /*error*/);\n\n/*  Just like dwarf_get_macro_context, but instead of using\n    DW_AT_macros or DW_AT_GNU_macros to get the offset we just\n    take the offset given. */\nint dwarf_get_macro_context_by_offset(Dwarf_Die /*die*/,\n    Dwarf_Unsigned        /*offset*/,\n    Dwarf_Unsigned      * /*version_out*/,\n    Dwarf_Macro_Context * /*macro_context*/,\n    Dwarf_Unsigned      * /*macro_ops_count_out*/,\n    Dwarf_Unsigned      * /*macro_ops_data_length*/,\n    Dwarf_Error         * /*error*/);\n\nvoid dwarf_dealloc_macro_context(Dwarf_Macro_Context /*mc*/);\nint dwarf_get_macro_section_name(Dwarf_Debug /*dbg*/,\n    const char ** /*sec_name_out*/,\n    Dwarf_Error * /*err*/);\n\nint dwarf_macro_context_head(Dwarf_Macro_Context /*head*/,\n    Dwarf_Half     * /*version*/,\n    Dwarf_Unsigned * /*mac_offset*/,\n    Dwarf_Unsigned * /*mac_len*/,\n    Dwarf_Unsigned * /*mac_header_len*/,\n    unsigned int   * /*flags*/,\n    Dwarf_Bool     * /*has_line_offset*/,\n    Dwarf_Unsigned * /*line_offset*/,\n    Dwarf_Bool     * /*has_offset_size_64*/,\n    Dwarf_Bool     * /*has_operands_table*/,\n    Dwarf_Half     * /*opcode_count*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Returns data from the operands table\n    in the macro unit header. The last op has\n    0 as opcode_number,operand_count and operand_array */\nint dwarf_macro_operands_table(Dwarf_Macro_Context /*head*/,\n    Dwarf_Half    /*index*/, /* 0 to opcode_count -1 */\n    Dwarf_Half  * /*opcode_number*/,\n    Dwarf_Half  * /*operand_count*/,\n    const Dwarf_Small ** /*operand_array*/,\n    Dwarf_Error * /*error*/);\n\n/*  Access to the macro operations, 0 to macro_ops_count_out-1\n    Where the last of these will have macro_operator 0 (which appears\n    in the ops data and means end-of-ops).\n    op_start_section_offset is the section offset of\n    the macro operator (which is a single unsigned byte,\n    and is followed by the macro operand data). */\nint dwarf_get_macro_op(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*op_start_section_offset*/,\n    Dwarf_Half     * /*macro_operator*/,\n    Dwarf_Half     * /*forms_count*/,\n    const Dwarf_Small **  /*formcode_array*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_get_macro_defundef(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*line_number*/,\n    Dwarf_Unsigned * /*index*/,\n    Dwarf_Unsigned * /*offset*/,\n    Dwarf_Half     * /*forms_count*/,\n    const char    ** /*macro_string*/,\n    Dwarf_Error    * /*error*/);\nint dwarf_get_macro_startend_file(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*line_number*/,\n    Dwarf_Unsigned * /*name_index_to_line_tab*/,\n    const char    ** /*src_file_name*/,\n    Dwarf_Error    * /*error*/);\nint dwarf_get_macro_import(Dwarf_Macro_Context /*macro_context*/,\n    Dwarf_Unsigned   /*op_number*/,\n    Dwarf_Unsigned * /*target_offset*/,\n    Dwarf_Error    * /*error*/);\n\n/*  END: DWARF5 .debug_macro interfaces. */\n\n/* consumer .debug_macinfo information interface.\n*/\nstruct Dwarf_Macro_Details_s {\n    Dwarf_Off    dmd_offset; /* offset, in the section,\n        of this macro info */\n    Dwarf_Small  dmd_type;   /* the type, DW_MACINFO_define etc*/\n    Dwarf_Signed dmd_lineno; /* the source line number where\n        applicable and vend_def number if\n        vendor_extension op */\n\n    Dwarf_Signed dmd_fileindex;/* the source file index:\n        applies to define undef start_file */\n    char *       dmd_macro;  /* macro name (with value for defineop)\n        string from vendor ext */\n};\n\n/*  dwarf_print_lines is for use by dwarfdump: it prints\n    line info to stdout.\n    The _dwarf name is obsolete. Use dwarf_ instead.\n    Added extra argnument 2/2009 for better checking.\n*/\nint _dwarf_print_lines(Dwarf_Die /*cu_die*/,Dwarf_Error * /*error*/);\nint dwarf_print_lines(Dwarf_Die /*cu_die*/,Dwarf_Error * /*error*/,\n   int * /*error_count_out */);\n\n/*  As of August 2013, dwarf_print_lines() no longer uses printf.\n    Instead it calls back to the application using a function pointer\n    once per line-to-print.  The lines passed back already have any needed\n    newlines.    The following struct is used to initialize\n    the callback mechanism.\n\n    Failing to call the dwarf_register_printf_callback() function will\n    prevent the lines from being passed back but such omission\n    is not an error.\n    See libdwarf2.1.mm for further documentation.\n\n    The return value is the previous set of callback values.\n*/\n\ntypedef void (* dwarf_printf_callback_function_type)\n    (void * /*user_pointer*/, const char * /*linecontent*/);\n\nstruct Dwarf_Printf_Callback_Info_s {\n    void *                        dp_user_pointer;\n    dwarf_printf_callback_function_type dp_fptr;\n    char *                        dp_buffer;\n    unsigned int                  dp_buffer_len;\n    int                           dp_buffer_user_provided;\n    void *                        dp_reserved;\n};\n\n/*  If called with a NULL newvalues pointer, it simply returns\n    the current set of values for this Dwarf_Debug. */\nstruct  Dwarf_Printf_Callback_Info_s\ndwarf_register_printf_callback(Dwarf_Debug /*dbg*/,\n    struct  Dwarf_Printf_Callback_Info_s * /*newvalues*/);\n\n\n/*  dwarf_check_lineheader lets dwarfdump get detailed messages\n    about some compiler errors we detect.\n    We return the count of detected errors through the\n    pointer.\n\n    Use dwarf_check_lineheader_b() (new 14 April 2020)\n    in place of dwarf_check_lineheader().\n*/\nint dwarf_check_lineheader_b(Dwarf_Die /*cu_die*/,\n    int */*errcount_out*/,\n    Dwarf_Error * /*error*/);\nvoid dwarf_check_lineheader(Dwarf_Die /*cu_die*/,\n    int * /*errcount_out*/);\n\n/*  dwarf_ld_sort_lines helps SGI IRIX ld\n    rearrange lines in .debug_line in a .o created with a text\n    section per function.\n        -OPT:procedure_reorder=ON\n    where ld-cord (cord(1)ing by ld,\n    not by cord(1)) may have changed the function order.\n    The _dwarf name is obsolete. Use dwarf_ instead.\n*/\nint _dwarf_ld_sort_lines(\n    void *         /*orig_buffer*/,\n    unsigned long  /* buffer_len*/,\n    int            /*is_64_bit*/,\n    int *          /*any_change*/,\n    int *          /*err_code*/);\nint dwarf_ld_sort_lines(\n    void *         /*orig_buffer*/,\n    unsigned long  /*buffer_len*/,\n    int            /*is_64_bit*/,\n    int *          /*any_change*/,\n    int *          /*err_code*/);\n\n/* Used by dwarfdump -v to print fde offsets from debugging\n   info.\n   The _dwarf name is obsolete. Use dwarf_ instead.\n*/\nint _dwarf_fde_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Fde         /*in_fde*/,\n    Dwarf_Off *       /*fde_off*/,\n    Dwarf_Off *       /*cie_off*/,\n    Dwarf_Error *     /*err*/);\n\nint dwarf_fde_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Fde         /*in_fde*/,\n    Dwarf_Off *       /*fde_off*/,\n    Dwarf_Off *       /*cie_off*/,\n    Dwarf_Error *     /*err*/);\n\n/* Used by dwarfdump -v to print cie offsets from debugging\n   info.\n   The _dwarf name is obsolete. Use dwarf_ instead.\n*/\nint dwarf_cie_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie     /*in_cie*/,\n    Dwarf_Off *   /*cie_off */,\n    Dwarf_Error * /*err*/);\nint _dwarf_cie_section_offset(Dwarf_Debug /*dbg*/,\n    Dwarf_Cie     /*in_cie*/,\n    Dwarf_Off *   /*cie_off*/,\n    Dwarf_Error * /*err*/);\n\ntypedef struct Dwarf_Macro_Details_s Dwarf_Macro_Details;\n\nchar *dwarf_find_macro_value_start(char * /*macro_string*/);\n\nint dwarf_get_macro_details(Dwarf_Debug /*dbg*/,\n    Dwarf_Off            /*macro_offset*/,\n    Dwarf_Unsigned       /*maximum_count*/,\n    Dwarf_Signed         * /*entry_count*/,\n    Dwarf_Macro_Details ** /*details*/,\n    Dwarf_Error *        /*err*/);\n\n\n/*  dwarf_get_offset_size() New October 2015 */\nint dwarf_get_offset_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Half  *    /*offset_size*/,\n    Dwarf_Error *    /*error*/);\nint dwarf_get_address_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Half  *    /*addr_size*/,\n    Dwarf_Error *    /*error*/);\nint dwarf_get_die_address_size(Dwarf_Die /*die*/,\n    Dwarf_Half  *    /*addr_size*/,\n    Dwarf_Error *    /*error*/);\n\nenum Dwarf_Form_Class dwarf_get_form_class(\n    Dwarf_Half /* dwversion */,\n    Dwarf_Half /* attrnum */,\n    Dwarf_Half /*offset_size */,\n    Dwarf_Half /*form*/);\n\n\n/*   BEGIN gdbindex operations interfaces. */\n/*  .gdb_index section operations.\n    A GDB extension. Completely different than\n    .debug_gnu_pubnames or .debug_gnu_pubtypes sections.\n    The section is in some executables and if present\n    is used to quickly map an address or name to\n    a skeleton CU or TU.  If present then there are\n    .dwo or .dwp files somewhere to make detailed\n    debugging possible (up to user code to\n    find it/them and deal with them).\n\n    Version 8 built by gdb, so type entries are ok as is.\n    Version 7 built by the 'gold' linker and type index\n    entries for a CU must be derived othewise, the\n    type index is not correct... ? FIXME\n    */\n\n/*  Creates a Dwarf_Gdbindex, returning it and\n    its values through the pointers. */\nint dwarf_gdbindex_header(Dwarf_Debug /*dbg*/,\n    Dwarf_Gdbindex * /*gdbindexptr*/,\n    Dwarf_Unsigned * /*version*/,\n    Dwarf_Unsigned * /*cu_list_offset*/,\n    Dwarf_Unsigned * /*types_cu_list_offset*/,\n    Dwarf_Unsigned * /*address_area_offset*/,\n    Dwarf_Unsigned * /*symbol_table_offset*/,\n    Dwarf_Unsigned * /*constant_pool_offset*/,\n    Dwarf_Unsigned * /*section_size*/,\n    Dwarf_Unsigned * /*unused_reserved*/,\n    const char    ** /*section_name*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_culist_array(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned       * /*list_length*/,\n    Dwarf_Error          * /*error*/);\n\n/*  entryindex: 0 to list_length-1 */\nint dwarf_gdbindex_culist_entry(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*cu_offset*/,\n    Dwarf_Unsigned * /*cu_length*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_types_culist_array(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned            * /*types_list_length*/,\n    Dwarf_Error               * /*error*/);\n\n/*  entryindex: 0 to types_list_length -1 */\nint dwarf_gdbindex_types_culist_entry(\n    Dwarf_Gdbindex   /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*cu_offset*/,\n    Dwarf_Unsigned * /*tu_offset*/,\n    Dwarf_Unsigned * /*type_signature*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_addressarea(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned            * /*addressarea_list_length*/,\n    Dwarf_Error               * /*error*/);\n\n/*    entryindex: 0 to addressarea_list_length-1 */\nint dwarf_gdbindex_addressarea_entry(\n    Dwarf_Gdbindex   /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*low_adddress*/,\n    Dwarf_Unsigned * /*high_address*/,\n    Dwarf_Unsigned * /*cu_index*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_symboltable_array(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned            * /*symtab_list_length*/,\n    Dwarf_Error               * /*error*/);\n\n/*  entryindex: 0 to symtab_list_length-1 */\nint dwarf_gdbindex_symboltable_entry(\n    Dwarf_Gdbindex   /*gdbindexptr*/,\n    Dwarf_Unsigned   /*entryindex*/,\n    Dwarf_Unsigned * /*string_offset*/,\n    Dwarf_Unsigned * /*cu_vector_offset*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_cuvector_length(Dwarf_Gdbindex /*gdbindex*/,\n    Dwarf_Unsigned   /*cuvector_offset*/,\n    Dwarf_Unsigned * /*innercount*/,\n    Dwarf_Error    * /*error*/);\n\n\nint dwarf_gdbindex_cuvector_inner_attributes(Dwarf_Gdbindex /*gdbindex*/,\n    Dwarf_Unsigned   /*cuvector_offset*/,\n    Dwarf_Unsigned   /*innerindex*/,\n    /* The attr_value is a field of bits. For expanded version\n        use  dwarf_gdbindex_cuvector_expand_value() */\n    Dwarf_Unsigned * /*attr_value*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_gdbindex_cuvector_instance_expand_value(\n    Dwarf_Gdbindex /*gdbindex*/,\n    Dwarf_Unsigned   /*value*/,\n    Dwarf_Unsigned * /*cu_index*/,\n    Dwarf_Unsigned * /*reserved1*/,\n    Dwarf_Unsigned * /*symbol_kind*/,\n    Dwarf_Unsigned * /*is_static*/,\n    Dwarf_Error    * /*error*/);\n\n\n/*  The strings in the pool follow (in memory) the cu index\n    set and are NUL terminated. */\n\nint dwarf_gdbindex_string_by_offset(Dwarf_Gdbindex /*gdbindexptr*/,\n    Dwarf_Unsigned   /*stringoffset*/,\n    const char    ** /*string_ptr*/,\n    Dwarf_Error   *  /*error*/);\n\nvoid dwarf_gdbindex_free(Dwarf_Gdbindex /*gdbindexptr*/);\n\n/*  END gdbindex/debugfission operations. */\n\n/*  START debugfission dwp .debug_cu_index and .debug_tu_index operations. */\n\nint dwarf_get_xu_index_header(Dwarf_Debug /*dbg*/,\n    const char *  section_type, /* \"tu\" or \"cu\" */\n    Dwarf_Xu_Index_Header *     /*xuhdr*/,\n    Dwarf_Unsigned *            /*version_number*/,\n    Dwarf_Unsigned *            /*offsets_count L*/,\n    Dwarf_Unsigned *            /*units_count N*/,\n    Dwarf_Unsigned *            /*hash_slots_count M*/,\n    const char     **           /*sect_name*/,\n    Dwarf_Error *               /*err*/);\n\nint dwarf_get_xu_index_section_type(Dwarf_Xu_Index_Header /*xuhdr*/,\n    /*  the function returns a pointer to\n        the immutable string \"tu\" or \"cu\" via this arg. Do not free.  */\n    const char ** /*typename*/,\n    /*  the function returns a pointer to\n        the immutable section name. Do not free.\n        .debug_cu_index or .debug_tu_index */\n    const char ** /*sectionname*/,\n    Dwarf_Error * /*err*/);\n\n/*  Index values 0 to M-1 are valid. */\nint dwarf_get_xu_hash_entry(Dwarf_Xu_Index_Header /*xuhdr*/,\n    Dwarf_Unsigned     /*index*/,\n\n    /*  Returns the hash value. 64  bits.  */\n    Dwarf_Sig8 *      /*hash_value*/,\n\n    /* returns the index into rows of offset/size tables. */\n    Dwarf_Unsigned *  /*index_to_sections*/,\n    Dwarf_Error *     /*err*/);\n\n/*  Columns 0 to L-1,  valid. */\nint dwarf_get_xu_section_names(Dwarf_Xu_Index_Header /*xuhdr*/,\n    /* Row index defined to be row zero. */\n    Dwarf_Unsigned  /*column_index*/,\n    Dwarf_Unsigned* /*DW_SECT_ number*/,\n    const char **   /*DW_SECT_ name*/,\n    Dwarf_Error *   /*err*/);\n\n    /* Rows 1 to N col 0 to L-1  are valid */\nint dwarf_get_xu_section_offset(Dwarf_Xu_Index_Header /*xuhdr*/,\n    Dwarf_Unsigned  /*row_index*/,\n    Dwarf_Unsigned  /*column_index*/,\n    Dwarf_Unsigned* /*sec_offset*/,\n    Dwarf_Unsigned* /*sec_size*/,\n    Dwarf_Error *   /*err*/);\n\nvoid dwarf_xu_header_free(Dwarf_Xu_Index_Header /*xuhdr*/);\n\n/*  Defined larger than necessary. This struct, being visible,\n    will be difficult to change: binary compatibility. */\n#define DW_FISSION_SECT_COUNT 12\n\n/*  User must allocate this struct, zero it,\n    and pass a pointer to it\n    into dwarf_get_debugfission_for_cu .  */\nstruct Dwarf_Debug_Fission_Per_CU_s  {\n    /*  Do not free the string. It contains \"cu\" or \"tu\". */\n    /*  If this is not set (ie, not a CU/TU in  DWP Package File)\n        then pcu_type will be NULL.  */\n    const char   * pcu_type;\n    /*  pcu_index is the index (range 1 to N )\n        into the tu/cu table of offsets and the table\n        of sizes.  1 to N as the zero index is reserved\n        for special purposes.  Not a value one\n        actually needs. */\n    Dwarf_Unsigned pcu_index;\n    Dwarf_Sig8     pcu_hash;  /* 8 byte  */\n    /*  [0] has offset and size 0.\n        [1]-[8] are DW_SECT_* indexes and the\n        values are  the offset and size\n        of the respective section contribution\n        of a single .dwo object. When pcu_size[n] is\n        zero the corresponding section is not present. */\n    Dwarf_Unsigned pcu_offset[DW_FISSION_SECT_COUNT];\n    Dwarf_Unsigned pcu_size[DW_FISSION_SECT_COUNT];\n    Dwarf_Unsigned unused1;\n    Dwarf_Unsigned unused2;\n};\ntypedef struct Dwarf_Debug_Fission_Per_CU_s  Dwarf_Debug_Fission_Per_CU ;\n/*  For any Dwarf_Die in a compilation unit, return\n    the debug fission table data through\n    percu_out.   Usually applications\n    will pass in the CU die.\n    Calling code should zero all of the\n    struct Dwarf_Debug_Fission_Per_CU_s before calling this.\n    If there is no debugfission data this returns\n    DW_DLV_NO_ENTRY (only .dwp objects have debugfission data).  */\nint dwarf_get_debugfission_for_die(Dwarf_Die /* die */,\n    Dwarf_Debug_Fission_Per_CU * /* percu_out */,\n    Dwarf_Error * /* err */);\n\n/* Given a key (hash signature)  from a .o, find the per-cu information\n    for the CU with that key. */\nint dwarf_get_debugfission_for_key(Dwarf_Debug /*dbg*/,\n    Dwarf_Sig8 *                 /*key, hash signature */,\n    const char * key_type        /*\"cu\" or \"tu\" */,\n    Dwarf_Debug_Fission_Per_CU * /*percu_out */,\n    Dwarf_Error *                /*err */);\n\n/*  END debugfission dwp .debug_cu_index and .debug_tu_index operations. */\n\n\n/*  Utility operations */\nDwarf_Unsigned dwarf_errno(Dwarf_Error     /*error*/);\nchar* dwarf_errmsg(Dwarf_Error    /*error*/);\nchar* dwarf_errmsg_by_number(Dwarf_Unsigned /* errornum */);\nvoid  dwarf_error_creation(Dwarf_Debug /*dbg*/ ,\n    Dwarf_Error * /*error*/, char * /*errmsg*/);\n\n\n/*  stringcheck zero is default and means do all\n    string length validity checks.\n    Call with parameter value 1 to turn off many such checks (and\n    increase performance).\n    Call with zero for safest running.\n    Actual value saved and returned is only 8 bits! Upper bits\n    ignored by libdwarf (and zero on return).\n    Returns previous value.  */\nint dwarf_set_stringcheck(int /*stringcheck*/);\n\n/*  'apply' defaults to 1 and means do all\n    'rela' relocations on reading in a dwarf object section with\n    such relocations.\n    Call with parameter value 0 to turn off application of\n    such relocations.\n    Since the static linker leaves 'bogus' data in object sections\n    with a 'rela' relocation section such data cannot be read\n    sensibly without processing the relocations.  Such relocations\n    do not exist in executables and shared objects (.so), the\n    relocations only exist in plain .o relocatable object files.\n    Actual value saved and returned is only 8 bits! Upper bits\n    ignored by libdwarf (and zero on return).\n    Returns previous value.  */\nint dwarf_set_reloc_application(int /*apply*/);\n\n/* Never Implemented */\nDwarf_Handler dwarf_seterrhand(Dwarf_Debug /*dbg*/,\n    Dwarf_Handler /*errhand*/);\n\n/* Unimplemented */\nDwarf_Ptr dwarf_seterrarg(Dwarf_Debug /*dbg*/, Dwarf_Ptr /*errarg*/);\n\nvoid dwarf_dealloc(Dwarf_Debug /*dbg*/, void* /*space*/,\n    Dwarf_Unsigned /*type*/);\n/*  These convenience functions allow type checking at the call,\n    whereas dwarf_dealloc itself uses void * so ...\n    easy to misuse. */\nvoid dwarf_dealloc_error(Dwarf_Debug /*dbg*/, Dwarf_Error /*err*/);\nvoid dwarf_dealloc_die( Dwarf_Die /*die*/);\nvoid dwarf_dealloc_attribute(Dwarf_Attribute /*attr*/);\n\n\n/* DWARF Producer Interface */\n\n/*  New form June, 2011. Adds user_data argument. */\ntypedef int (*Dwarf_Callback_Func)(\n    const char*     /*name*/,\n    int             /*size*/,\n    Dwarf_Unsigned  /*type*/,\n    Dwarf_Unsigned  /*flags*/,\n    Dwarf_Unsigned  /*link*/,\n    Dwarf_Unsigned  /*info*/,\n    Dwarf_Unsigned* /*sect_name_index*/,\n    void *          /*user_data*/,\n    int*            /*error*/);\n\n/*  Returns DW_DLV_OK or DW_DLV_ERROR and\n    if DW_DLV_OK returns the Dwarf_P_Debug\n    pointer through the dbg_returned argument. */\nint dwarf_producer_init(\n    Dwarf_Unsigned        /*flags*/,\n    Dwarf_Callback_Func   /*func*/,\n    Dwarf_Handler         /*errhand*/,\n    Dwarf_Ptr             /*errarg*/,\n    void *                /*user_data*/,\n    const char *isa_name, /* See isa/abi names in pro_init.c */\n    const char *dwarf_version, /* V2 V3 V4 or V5. */\n    const char *extra,    /* Extra input strings, comma separated. */\n    Dwarf_P_Debug *,      /* dbg_returned */\n    Dwarf_Error *         /*error*/);\n\n/*  Returns DW_DLV_OK or DW_DLV_ERROR.\n    The desired form must be DW_FORM_string (the default)\n    or DW_FORM_strp.  */\nint dwarf_pro_set_default_string_form(Dwarf_P_Debug /*dbg*/,\n    int /*desired_form*/,\n    Dwarf_Error*     /*error*/);\n\n/*  the old interface. Still supported. */\nDwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error*     /*error*/);\n/*  New September 2016. The preferred interface. */\nint dwarf_transform_to_disk_form_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Signed *   /*nbufs_out*/,\n    Dwarf_Error*     /*error*/);\n\n/* New September 2016. Preferred. */\nint dwarf_get_section_bytes_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Signed     /*dwarf_section*/,\n    Dwarf_Signed*    /*elf_section_index*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Ptr     *  /*section_bytes*/,\n    Dwarf_Error*     /*error*/);\n\n/* Original function.  Checking for error is difficult. */\nDwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Signed     /*dwarf_section*/,\n    Dwarf_Signed*    /*elf_section_index*/,\n    Dwarf_Unsigned*  /*length*/,\n    Dwarf_Error*     /*error*/);\n\nint  dwarf_get_relocation_info_count(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Unsigned * /*count_of_relocation_sections*/,\n    int *                /*drd_buffer_version*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_get_relocation_info(\n    Dwarf_P_Debug           /*dbg*/,\n    Dwarf_Signed          * /*elf_section_index*/,\n    Dwarf_Signed          * /*elf_section_index_link*/,\n    Dwarf_Unsigned        * /*relocation_buffer_count*/,\n    Dwarf_Relocation_Data * /*reldata_buffer*/,\n    Dwarf_Error*            /*error*/);\n\n/* v1:  no drd_length field, enum explicit */\n/* v2:  has the drd_length field, enum value in uchar member */\n#define DWARF_DRD_BUFFER_VERSION 2\n\n/* Markers are not written  to DWARF2/3/4, they are user\n   defined and may be used for any purpose.\n*/\nDwarf_Signed dwarf_get_die_markers(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Marker *  /*marker_list*/,\n    Dwarf_Unsigned *  /*marker_count*/,\n    Dwarf_Error *     /*error*/);\n\n/* Preferred version December 2018. */\nint dwarf_get_die_markers_a(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Marker *  /*marker_list*/,\n    Dwarf_Unsigned *  /*marker_count*/,\n    Dwarf_Error *     /*error*/);\n\nint dwarf_get_string_attributes_count(Dwarf_P_Debug,\n    Dwarf_Unsigned *,\n    int *,\n    Dwarf_Error *);\n\nint dwarf_get_string_attributes_info(Dwarf_P_Debug,\n    Dwarf_Signed *,\n    Dwarf_Unsigned *,\n    Dwarf_P_String_Attr *,\n    Dwarf_Error *);\n\nvoid dwarf_reset_section_bytes(Dwarf_P_Debug /*dbg*/);\n\nDwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  Returns DW_DLV_OK or DW_DLV_ERROR */\nint dwarf_producer_finish_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/* New July 2020 for testing DWARF5 */\nint dwarf_add_debug_sup(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Half      /*version*/,\n    Dwarf_Small     /*is_supplementary*/,\n    char          * /*filename*/,\n    Dwarf_Unsigned  /*checksum_len*/,\n    Dwarf_Small   * /*checksum*/,\n    Dwarf_Error * /*error*/);\n\n/* Producer attribute addition functions. */\nDwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Signed    /*sym_index*/,\n    Dwarf_Error*    /*error*/);\nDwarf_P_Attribute dwarf_add_AT_targ_address_b(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Unsigned    /*sym_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_targ_address_c(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die         /*ownerdie*/,\n    Dwarf_Half          /*attr*/,\n    Dwarf_Unsigned      /*pc_value*/,\n    Dwarf_Unsigned      /*sym_index*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*        /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_block_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small*    /*block_data*/,\n    Dwarf_Unsigned  /*block_len*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_block(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small*    /*block_data*/,\n    Dwarf_Unsigned  /*block_len*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_ref_address(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_ref_address_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pc_value*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_unsigned_const_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*value*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_signed_const(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Signed    /*value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_signed_const_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Signed    /*value*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Die     /*otherdie*/,\n    Dwarf_Error*    /*error*/);\n\n/*  dwarf_add_AT_reference_b allows otherdie to be NULL with\n    the assumption the caller will then later call\n    dwarf_fixup_AT_reference_die() with a non-null target die.\n    New 22 October, 2013\n*/\nDwarf_P_Attribute dwarf_add_AT_reference_b(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Die     /*otherdie*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_reference_c(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Die     /*otherdie*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\n/* The following is for out-of-order cu-local\n   references.  Allowing nominating the target Dwarf_P_Die\n   after calling dwarf_add_AT_reference with a NULL otherdie\n   after a single pass thru the DIE generation. Needed\n   for forward-references.\n   New 22 October, 2013.\n*/\nint dwarf_fixup_AT_reference_die(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Half    /* attrnum */,\n    Dwarf_P_Die   /* sourcedie*/,\n    Dwarf_P_Die   /* targetdie*/,\n    Dwarf_Error * /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_dataref(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pcvalue*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_dataref_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Unsigned  /*pcvalue*/,\n    Dwarf_Unsigned  /*sym_index*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_const_value_string(\n    Dwarf_P_Die /*ownerdie*/,\n    char*           /*string_value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_const_value_string_a(\n    Dwarf_P_Die /*ownerdie*/,\n    char*           /*string_value*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Expr    /*loc_expr*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_location_expr_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_P_Expr    /*loc_expr*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    char*           /*string*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Preferred as of December 2018. */\nint dwarf_add_AT_string_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    char*           /*string*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*     /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_flag(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small     /*flag*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_flag_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Half      /*attr*/,\n    Dwarf_Small     /*flag*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_producer(Dwarf_P_Die /*ownerdie*/,\n    char*           /*producer_string*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_producer_a(Dwarf_P_Die /*ownerdie*/,\n    char*           /*producer_string*/,\n    Dwarf_P_Attribute * /*attr_out*/,\n    Dwarf_Error*    /*error*/);\n\n/*  October 2017 for DW_FORM_data16. Usable with any attribute,\n    though it should only be in limited use. DWARF5 only.\n    Returns DW_DLV_OK on success, DW_DLV_ERROR on failure.\n    Returns the new attribute pointer through *return_attr. */\nint dwarf_add_AT_data16(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half    /*attrnum*/,\n    Dwarf_Form_Data16 * /* pointstovalue */,\n    Dwarf_P_Attribute * /* return_attr */,\n    Dwarf_Error * /*error*/);\n\n/*  November 2018. DW_AT_implicit const generation. */\nint dwarf_add_AT_implicit_const(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half /*attrnum*/,\n    Dwarf_Signed /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error * /*error*/);\n\n/* August 2013 sleb creator. For any attribute. */\nDwarf_P_Attribute dwarf_add_AT_any_value_sleb(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half    /*attrnum*/,\n    Dwarf_Signed  /*signed_value*/,\n    Dwarf_Error * /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_any_value_sleb_a(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half    /*attrnum*/,\n    Dwarf_Signed  /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error * /*error*/);\n\n/* Original sleb creator. Only for DW_AT_const_value. */\nDwarf_P_Attribute dwarf_add_AT_const_value_signedint(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Signed    /*signed_value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Preferred as of December 2018. */\nint dwarf_add_AT_const_value_signedint_a(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Signed    /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\n/* August 2013 uleb creator. For any attribute. */\nDwarf_P_Attribute dwarf_add_AT_any_value_uleb(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half      /*attrnum*/,\n    Dwarf_Unsigned  /*signed_value*/,\n    Dwarf_Error *   /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_any_value_uleb_a(Dwarf_P_Die /*ownerdie*/,\n    Dwarf_Half      /*attrnum*/,\n    Dwarf_Unsigned  /*signed_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error *   /*error*/);\n\n/* Original uleb creator. Only for DW_AT_const_value. */\nDwarf_P_Attribute dwarf_add_AT_const_value_unsignedint(\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Unsigned  /*unsigned_value*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_const_value_unsignedint_a(\n    Dwarf_P_Die     /*ownerdie*/,\n    Dwarf_Unsigned  /*unsigned_value*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die /*ownerdie*/,\n    char*           /*current_working_directory*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_comp_dir_a(Dwarf_P_Die /*ownerdie*/,\n    char*           /*current_working_directory*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die    /*die*/,\n    char*           /*name*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_name_a(Dwarf_P_Die    /*die*/,\n    char*           /*name*/,\n    Dwarf_P_Attribute * /*outattr*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Attribute dwarf_add_AT_with_ref_sig8(\n   Dwarf_P_Die   /*ownerdie */,\n   Dwarf_Half    /*attrnum */,\n   const Dwarf_Sig8 *  /*sig8_in*/,\n   Dwarf_Error * /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_AT_with_ref_sig8_a(\n   Dwarf_P_Die   /*ownerdie */,\n   Dwarf_Half    /*attrnum */,\n   const Dwarf_Sig8 *  /*sig8_in*/,\n   Dwarf_P_Attribute * /*outattr*/,\n   Dwarf_Error * /*error*/);\n\n\n/* Producer line creation functions (.debug_line) */\nDwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_directory_decl_a(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Unsigned * /*index_in_directories*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Unsigned  /*dir_index*/,\n    Dwarf_Unsigned  /*time_last_modified*/,\n    Dwarf_Unsigned  /*length*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_file_decl_a(Dwarf_P_Debug /*dbg*/,\n    char*           /*name*/,\n    Dwarf_Unsigned  /*dir_index*/,\n    Dwarf_Unsigned  /*time_last_modified*/,\n    Dwarf_Unsigned  /*length*/,\n    Dwarf_Unsigned * /*file_entry_count_out*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_line_entry_c(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*file_index*/,\n    Dwarf_Addr      /*code_address*/,\n    Dwarf_Unsigned  /*lineno*/,\n    Dwarf_Signed    /*column_number*/,\n    Dwarf_Bool      /*is_source_stmt_begin*/,\n    Dwarf_Bool      /*is_basic_block_begin*/,\n    Dwarf_Bool      /*is_epilogue_begin*/,\n    Dwarf_Bool      /*is_prologue_end*/,\n    Dwarf_Unsigned  /*isa*/,\n    Dwarf_Unsigned  /*discriminator*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_line_entry_b(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*file_index*/,\n    Dwarf_Addr      /*code_address*/,\n    Dwarf_Unsigned  /*lineno*/,\n    Dwarf_Signed    /*column_number*/,\n    Dwarf_Bool      /*is_source_stmt_begin*/,\n    Dwarf_Bool      /*is_basic_block_begin*/,\n    Dwarf_Bool      /*is_epilogue_begin*/,\n    Dwarf_Bool      /*is_prologue_end*/,\n    Dwarf_Unsigned  /*isa*/,\n    Dwarf_Unsigned  /*discriminator*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*file_index*/,\n    Dwarf_Addr      /*code_address*/,\n    Dwarf_Unsigned  /*lineno*/,\n    Dwarf_Signed    /*column_number*/,\n    Dwarf_Bool      /*is_source_stmt_begin*/,\n    Dwarf_Bool      /*is_basic_block_begin*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*offset*/,\n    Dwarf_Unsigned  /*symbol_index*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_lne_set_address_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned  /*offset*/,\n    Dwarf_Unsigned  /*symbol_index*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_lne_end_sequence(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Addr      /*end_address*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_lne_end_sequence_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Addr      /*end_address*/,\n    Dwarf_Error*    /*error*/);\n\n/* Producer .debug_frame functions */\nDwarf_Unsigned dwarf_add_frame_cie(Dwarf_P_Debug /*dbg*/,\n    char*           /*augmenter*/,\n    Dwarf_Small     /*code_alignment_factor*/,\n    Dwarf_Small     /*data_alignment_factor*/,\n    Dwarf_Small     /*return_address_reg*/,\n    Dwarf_Ptr       /*initialization_bytes*/,\n    Dwarf_Unsigned  /*init_byte_len*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_frame_cie_a(Dwarf_P_Debug /*dbg*/,\n    char*           /*augmenter*/,\n    Dwarf_Small     /*code_alignment_factor*/,\n    Dwarf_Small     /*data_alignment_factor*/,\n    Dwarf_Small     /*return_address_reg*/,\n    Dwarf_Ptr       /*initialization_bytes*/,\n    Dwarf_Unsigned  /*init_byte_len*/,\n    Dwarf_Unsigned * /*cie_index_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_fde(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*corresponding subprogram die*/,\n    Dwarf_Unsigned  /*cie_to_use*/,\n    Dwarf_Unsigned  /*virt_addr_of_described_code*/,\n    Dwarf_Unsigned  /*length_of_code*/,\n    Dwarf_Unsigned  /*symbol_index*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_fde_b(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_P_Fde    /*fde*/,\n    Dwarf_P_Die    /*die*/,\n    Dwarf_Unsigned /*cie*/,\n    Dwarf_Addr     /*virt_addr*/,\n    Dwarf_Unsigned /*code_len*/,\n    Dwarf_Unsigned /*sym_idx*/,\n    Dwarf_Unsigned /*sym_idx_of_end*/,\n    Dwarf_Addr     /*offset_from_end_sym*/,\n    Dwarf_Error*   /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_frame_fde_c(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_P_Fde    /*fde*/,\n    Dwarf_P_Die    /*die*/,\n    Dwarf_Unsigned /*cie*/,\n    Dwarf_Addr     /*virt_addr*/,\n    Dwarf_Unsigned /*code_len*/,\n    Dwarf_Unsigned /*sym_idx*/,\n    Dwarf_Unsigned /*sym_idx_of_end*/,\n    Dwarf_Addr     /*offset_from_end_sym*/,\n    Dwarf_Unsigned * /*index_to_fde*/,\n    Dwarf_Error*   /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_frame_info_c(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*cie*/,\n    Dwarf_Addr      /*virt_addr*/,\n    Dwarf_Unsigned  /*code_len*/,\n    Dwarf_Unsigned  /*symidx*/,\n    Dwarf_Unsigned  /*end_symbol */,\n    Dwarf_Addr      /*offset_from_end_symbol */,\n    Dwarf_Signed    /*offset_into_exception_tables*/,\n    Dwarf_Unsigned  /*exception_table_symbol*/,\n    Dwarf_Unsigned * /*fde_index_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_info_b(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*cie*/,\n    Dwarf_Addr      /*virt_addr*/,\n    Dwarf_Unsigned  /*code_len*/,\n    Dwarf_Unsigned  /*symidx*/,\n    Dwarf_Unsigned  /*end_symbol */,\n    Dwarf_Addr      /*offset_from_end_symbol */,\n    Dwarf_Signed    /*offset_into_exception_tables*/,\n    Dwarf_Unsigned  /*exception_table_symbol*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_Unsigned dwarf_add_frame_info(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*cie*/,\n    Dwarf_Addr      /*virt_addr*/,\n    Dwarf_Unsigned  /*code_len*/,\n    Dwarf_Unsigned  /*symidx*/,\n    Dwarf_Signed    /*offset_into_exception_tables*/,\n    Dwarf_Unsigned  /*exception_table_symbol*/,\n    Dwarf_Error*    /*error*/);\n\n/* The fde returned is just the one passed in. Silly. */\nDwarf_P_Fde dwarf_add_fde_inst(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Small     /*op*/,\n    Dwarf_Unsigned  /*val1*/,\n    Dwarf_Unsigned  /*val2*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_fde_inst_a(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Small     /*op*/,\n    Dwarf_Unsigned  /*val1*/,\n    Dwarf_Unsigned  /*val2*/,\n    Dwarf_Error*    /*error*/);\n\n/* New September 17, 2009 */\nint dwarf_insert_fde_inst_bytes(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_P_Fde    /*fde*/,\n    Dwarf_Unsigned /*len*/,\n    Dwarf_Ptr      /*ibytes*/,\n    Dwarf_Error*   /*error*/);\n\nDwarf_P_Fde dwarf_new_fde(Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_new_fde_a(Dwarf_P_Debug    /*dbg*/,\n    Dwarf_P_Fde * /*fde_out*/,\n    Dwarf_Error* /*error*/);\n\nDwarf_P_Fde dwarf_fde_cfa_offset(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Unsigned  /*register_number*/,\n    Dwarf_Signed    /*offset*/,\n    Dwarf_Error*    /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_fde_cfa_offset_a(\n    Dwarf_P_Fde     /*fde*/,\n    Dwarf_Unsigned  /*register_number*/,\n    Dwarf_Signed    /*offset*/,\n    Dwarf_Error*    /*error*/);\n\n/*  die creation & addition routines\n    dwarf_new_die_a() new September 2016.\n    Preferred over dwarf_new_die(). */\nint dwarf_new_die_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_Tag       /*tag*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left */,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_P_Die   * /*die_out*/,\n    Dwarf_Error*    /*error*/);\n\nDwarf_P_Die dwarf_new_die(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Tag         /*tag*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left */,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_Error*    /*error*/);\n\n/* New September 2016. */\nint dwarf_add_die_to_debug_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Original form.  */\nDwarf_Unsigned dwarf_add_die_to_debug(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Error*    /*error*/);\n\n/* Markers are not written  to DWARF2/3/4, they are user\n   defined and may be used for any purpose.\n*/\nDwarf_Unsigned dwarf_add_die_marker(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned  /*marker*/,\n    Dwarf_Error *   /*error*/);\n\n/*  Preferred version, new December 2018. */\nint dwarf_add_die_marker_a(Dwarf_P_Debug dbg,\n    Dwarf_P_Die die,\n    Dwarf_Unsigned marker,\n    Dwarf_Error * error);\n\nDwarf_Unsigned dwarf_get_die_marker(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned *  /*marker*/,\n    Dwarf_Error *   /*error*/);\n\n/*  Preferred version, new December 2018. */\nint dwarf_get_die_marker_a(\n    Dwarf_P_Debug   /*dbg*/,\n    Dwarf_P_Die     /*die*/,\n    Dwarf_Unsigned *  /*marker*/,\n    Dwarf_Error *   /*error*/);\n\n/*  New September 2016. Preferred version */\nint dwarf_die_link_a(\n    Dwarf_P_Die     /*die*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left*/,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_Error*    /*error*/);\n\n/*  Original version. Use dwarf_die_link_a() instead. */\nDwarf_P_Die dwarf_die_link(\n    Dwarf_P_Die     /*die*/,\n    Dwarf_P_Die     /*parent*/,\n    Dwarf_P_Die     /*child*/,\n    Dwarf_P_Die     /*left*/,\n    Dwarf_P_Die     /*right*/,\n    Dwarf_Error*    /*error*/);\n\nvoid dwarf_dealloc_compressed_block(\n    Dwarf_P_Debug,\n    void *\n);\n\n/*  Call this passing in return value from\n    dwarf_uncompress_integer_block()\n    to free the space the decompression allocated. */\nvoid dwarf_dealloc_uncompressed_block(\n    Dwarf_Debug,\n    void *\n);\n\n/*  dwarf_compress_integer_block_a( new 11 February 2019.\n    Like the earlier version this turns an array of signed\n    integers into a block of sleb values (and if the\n    values are small enough it might be a compression!\n    Or it could be an expansion...). Return DW_DLV_OK\n    on success. Supercedes dwarf_compress_integer_block():\n    as no ugly cast needed to know if\n    dwarf_compress_integer_block_a() succeeds or not. */\nint\ndwarf_compress_integer_block_a(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_Unsigned   /*input_array_length*/,\n    Dwarf_Signed   * /*input_array*/,\n    Dwarf_Unsigned * /*output_block_len*/,\n    void          ** /*output_block_returned*/,\n    Dwarf_Error    * /*error */);\n/*  The following should be avoided as of February 2019. */\nvoid * dwarf_compress_integer_block(\n    Dwarf_P_Debug,    /*dbg*/\n    Dwarf_Bool,       /*signed==true (or unsigned)*/\n    Dwarf_Small,      /*size of integer units: 8, 16, 32, 64*/\n    void*,            /*data*/\n    Dwarf_Unsigned,   /*number of elements*/\n    Dwarf_Unsigned*,  /*number of bytes in output block*/\n    Dwarf_Error*      /*error*/\n);\n\n/*  New February 2019.  On success returns DW_DLV_OK\n    and creates an array of Dwarf_Signed values\n    from the block of sleb numbers.\n    This interface supercedes\n    dwarf_uncompress_integer_block(). No ugly\n    cast needed to know if\n    dwarf_uncompress_integer_block_a() succeeds or not. */\nint\ndwarf_uncompress_integer_block_a(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned     /*input_length_in_bytes*/,\n    void             * /*input_block*/,\n    Dwarf_Unsigned   * /*value_count*/,\n    Dwarf_Signed    ** /*value_array*/,\n    Dwarf_Error      * /*error*/);\n\n/*  Decode an array of signed leb integers (so of course the\n    array is not composed of fixed length values, but is instead\n    a sequence of sleb values).\n    Returns a DW_DLV_BADADDR on error.\n    Otherwise returns a pointer to an array of 32bit integers.\n    The signed argument must be non-zero (the decode\n    assumes sleb integers in the input data) at this time.\n    Size of integer units must be 32 (32 bits each) at this time.\n    Number of bytes in block is a byte count (not array count).\n    Returns number of units in output block (ie, number of elements\n    of the array that the return value points to) thru the\n    argument.  */\nvoid * dwarf_uncompress_integer_block(\n    Dwarf_Debug,      /*dbg */\n    Dwarf_Bool,       /*signed==true (or unsigned) */\n    Dwarf_Small,      /*size of integer units: 8, 16, 32, 64 */\n    void*,            /*input data */\n    Dwarf_Unsigned,   /*number of bytes in input */\n    Dwarf_Unsigned*,  /*number of units in output block */\n    Dwarf_Error*      /*error */\n);\n\n/* Operations to create location expressions. */\nDwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error* /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_new_expr_a(Dwarf_P_Debug /*dbg*/,\n    Dwarf_P_Expr * /*expr_out*/,\n    Dwarf_Error* /*error*/);\n\nvoid dwarf_expr_reset(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_expr_gen(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Small       /*opcode*/,\n    Dwarf_Unsigned    /*val1*/,\n    Dwarf_Unsigned    /*val2*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_expr_gen_a(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Small       /*opcode*/,\n    Dwarf_Unsigned    /*val1*/,\n    Dwarf_Unsigned    /*val2*/,\n    Dwarf_Unsigned  * /*next_byte_offset*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_expr_addr(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned    /*addr*/,\n    Dwarf_Signed      /*sym_index*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_expr_addr_b(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned    /*addr*/,\n    Dwarf_Unsigned    /*sym_index*/,\n    Dwarf_Error*      /*error*/);\n\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_expr_addr_c(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned    /*addr*/,\n    Dwarf_Unsigned    /*sym_index*/,\n    Dwarf_Unsigned * /*next_byte_offset_out*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_expr_current_offset(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_expr_current_offset_a(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned * /*next_byte_offset_out*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Addr dwarf_expr_into_block(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned*   /*length*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_expr_into_block_a(\n    Dwarf_P_Expr      /*expr*/,\n    Dwarf_Unsigned*   /*length*/,\n    Dwarf_Small    ** /*start_address*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_arange(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Addr        /*begin_address*/,\n    Dwarf_Unsigned    /*length*/,\n    Dwarf_Signed      /*symbol_index*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_arange_b(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_Addr     /*begin_address*/,\n    Dwarf_Unsigned /*length*/,\n    Dwarf_Unsigned /*symbol_index*/,\n    Dwarf_Unsigned /*end_symbol_index*/,\n    Dwarf_Addr     /*offset_from_end_symbol*/,\n    Dwarf_Error *  /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_arange_c(\n    Dwarf_P_Debug  /*dbg*/,\n    Dwarf_Addr     /*begin_address*/,\n    Dwarf_Unsigned /*length*/,\n    Dwarf_Unsigned /*symbol_index*/,\n    Dwarf_Unsigned /*end_symbol_index*/,\n    Dwarf_Addr     /*offset_from_end_symbol*/,\n    Dwarf_Error *  /*error*/);\n\nDwarf_Unsigned dwarf_add_pubname(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubname_name*/,\n    Dwarf_Error*       /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_pubname_a(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubname_name*/,\n    Dwarf_Error*       /*error*/);\n\n/* Added 17 October 2013.  Introduced in DWARF3. */\nDwarf_Unsigned dwarf_add_pubtype(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubtype_name*/,\n    Dwarf_Error*       /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_pubtype_a(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*pubtype_name*/,\n    Dwarf_Error*       /*error*/);\n\nDwarf_Unsigned dwarf_add_funcname(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*func_name*/,\n    Dwarf_Error*       /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_funcname_a(\n    Dwarf_P_Debug      /*dbg*/,\n    Dwarf_P_Die        /*die*/,\n    char*              /*func_name*/,\n    Dwarf_Error*       /*error*/);\n\nDwarf_Unsigned dwarf_add_typename(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*type_name*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_typename_a(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*type_name*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_varname(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*var_name*/,\n    Dwarf_Error*      /*error*/);\n\n/*  New December 2018. Preferred version. */\nint dwarf_add_varname_a(\n    Dwarf_P_Debug     /*dbg*/,\n    Dwarf_P_Die       /*die*/,\n    char*             /*var_name*/,\n    Dwarf_Error*      /*error*/);\n\nDwarf_Unsigned dwarf_add_weakname(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_P_Die      /*die*/,\n    char*            /*weak_name*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_add_weakname_a(\n    Dwarf_P_Debug    /*dbg*/,\n    Dwarf_P_Die      /*die*/,\n    char*            /*weak_name*/,\n    Dwarf_Error*     /*error*/);\n\n/*  .debug_names producer functions */\n\n/*  dwarf_force_debug_names forces creation\n    of .debug_names (if DWARF5 being produced)\n    even if empty. Only for testing libdwarf. */\nint dwarf_force_debug_names(Dwarf_P_Debug /* dbg */,\n    Dwarf_Error*     /*error*/);\n\n/*  Other debug_names functions are needed... FIXME */\n\n/*  end .debug_names producer functions */\n\n/*  .debug_macinfo producer functions\n    Functions must be called in right order: the section is output\n    In the order these are presented.\n*/\nint dwarf_def_macro(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*line*/,\n    char *           /*macname, with (arglist), no space before (*/,\n    char *           /*macvalue*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_undef_macro(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*line*/,\n    char *           /*macname, no arglist, of course*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_start_macro_file(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*fileindex*/,\n    Dwarf_Unsigned   /*linenumber*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_end_macro_file(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Error*     /*error*/);\n\nint dwarf_vendor_ext(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned   /*constant*/,\n    char *           /*string*/,\n    Dwarf_Error*     /*error*/);\n\n/* end macinfo producer functions */\n\nint dwarf_attr_offset(Dwarf_Die /*die*/,\n    Dwarf_Attribute /*attr of above die*/,\n    Dwarf_Off     * /*returns offset thru this ptr */,\n    Dwarf_Error   * /*error*/);\n\n/*  This is a hack so clients can verify offsets.\n    Added April 2005 so that debugger can detect broken offsets\n    (which happened in an IRIX executable larger than 2GB\n    with MIPSpro 7.3.1.3 toolchain.).\n*/\nint dwarf_get_section_max_offsets(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/);\n\n/*  New October 2011., adds .debug_types section to the sizes\n    returned. */\nint dwarf_get_section_max_offsets_b(Dwarf_Debug /*dbg*/,\n\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/,\n    Dwarf_Unsigned * /*debug_types_size*/);\n\nint dwarf_get_section_max_offsets_c(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/,\n    Dwarf_Unsigned * /*debug_types_size*/,\n    Dwarf_Unsigned * /*debug_macro_size*/,\n    Dwarf_Unsigned * /*debug_str_offsets_size*/,\n    Dwarf_Unsigned * /*debug_sup_size*/,\n    Dwarf_Unsigned * /*debug_cu_index_size*/,\n    Dwarf_Unsigned * /*debug_tu_index_size*/);\nint dwarf_get_section_max_offsets_d(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*debug_info_size*/,\n    Dwarf_Unsigned * /*debug_abbrev_size*/,\n    Dwarf_Unsigned * /*debug_line_size*/,\n    Dwarf_Unsigned * /*debug_loc_size*/,\n    Dwarf_Unsigned * /*debug_aranges_size*/,\n    Dwarf_Unsigned * /*debug_macinfo_size*/,\n    Dwarf_Unsigned * /*debug_pubnames_size*/,\n    Dwarf_Unsigned * /*debug_str_size*/,\n    Dwarf_Unsigned * /*debug_frame_size*/,\n    Dwarf_Unsigned * /*debug_ranges_size*/,\n    Dwarf_Unsigned * /*debug_pubtypes_size*/,\n    Dwarf_Unsigned * /*debug_types_size*/,\n    Dwarf_Unsigned * /*debug_macro_size*/,\n    Dwarf_Unsigned * /*debug_str_offsets_size*/,\n    Dwarf_Unsigned * /*debug_sup_size*/,\n    Dwarf_Unsigned * /*debug_cu_index_size*/,\n    Dwarf_Unsigned * /*debug_tu_index_size*/,\n    Dwarf_Unsigned * /*debug_names_size*/,\n    Dwarf_Unsigned * /*debug_loclists_size*/,\n    Dwarf_Unsigned * /*debug_rnglists_size*/);\n\n/*  The 'set' calls here return the original (before any change\n    by these set routines) of the respective fields. */\n/*  Multiple releases spelled 'initial' as 'inital' .\n    The 'inital' spelling should not be used. */\nDwarf_Half dwarf_set_frame_rule_inital_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\n/*  Additional interface with correct 'initial' spelling. */\n/*  It is likely you will want to call the following 6 functions\n    before accessing any frame information.  All are useful\n    to tailor handling of pseudo-registers needed to turn\n    frame operation references into simpler forms and to\n    reflect ABI specific data.  Of course altering libdwarf.h\n    and dwarf.h allow the same capabilities, but header changes\n    in the distribution would require you re-integrate your\n    libdwarf.h changes into the distributed libdwarf.h ...\n    so use the following functions instead.*/\nDwarf_Half dwarf_set_frame_rule_initial_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_rule_table_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_cfa_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_same_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\nDwarf_Half dwarf_set_frame_undefined_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Half /*value*/);\n/*  dwarf_set_default_address_size only sets 'value' if value is\n    greater than zero. */\nDwarf_Small dwarf_set_default_address_size(Dwarf_Debug /*dbg*/,\n    Dwarf_Small /* value */);\n\n/*  As of April 27, 2009, this version with no diepointer is\n    obsolete though supported.  Use dwarf_get_ranges_a() instead. */\nint dwarf_get_ranges(Dwarf_Debug /*dbg*/,\n    Dwarf_Off /*rangesoffset*/,\n    Dwarf_Ranges ** /*rangesbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Unsigned * /*bytecount*/,\n    Dwarf_Error * /*error*/);\n\n/* This adds the address_size argument. New April 27, 2009 */\nint dwarf_get_ranges_a(Dwarf_Debug /*dbg*/,\n    Dwarf_Off /*rangesoffset*/,\n    Dwarf_Die  /* diepointer */,\n    Dwarf_Ranges ** /*rangesbuf*/,\n    Dwarf_Signed * /*listlen*/,\n    Dwarf_Unsigned * /*bytecount*/,\n    Dwarf_Error * /*error*/);\n\n/*  Adds return of the final offset to accomodate\n    DWARF4 GNU split-dwarf. Other than for split-dwarf\n    the realoffset will be set by the function\n    to be the same as rangesoffset.\n    New September 10, 2020.\n*/\nint dwarf_get_ranges_b(Dwarf_Debug /*dbg*/,\n    Dwarf_Off       /*rangesoffset*/,\n    Dwarf_Die       /*diepointer */,\n    Dwarf_Off *     /*realoffset */,\n    Dwarf_Ranges ** /*rangesbuf*/,\n    Dwarf_Signed *  /*listlen*/,\n    Dwarf_Unsigned * /*bytecount*/,\n    Dwarf_Error *   /*error*/);\n\nvoid dwarf_ranges_dealloc(Dwarf_Debug /*dbg*/,\n    Dwarf_Ranges * /*rangesbuf*/,\n    Dwarf_Signed /*rangecount*/);\n\n/* New July 2020 for DWARF5 */\nint dwarf_get_debug_sup(Dwarf_Debug /*dbg*/,\n    Dwarf_Half     * /*version*/,\n    Dwarf_Small    * /*is_supplementary*/,\n    char          ** /*filename*/,\n    Dwarf_Unsigned * /*checksum_len*/,\n    Dwarf_Small   ** /*checksum*/,\n    Dwarf_Error * /*error*/);\n\n/* ======= START .debug_rnglists interfaces.  New May 2020 */\nstruct Dwarf_Rnglists_Entry_s;\ntypedef struct Dwarf_Rnglists_Entry_s * Dwarf_Rnglists_Entry;\nstruct Dwarf_Rnglists_Head_s;\ntypedef struct Dwarf_Rnglists_Head_s * Dwarf_Rnglists_Head;\n\n/*  For DWARF5 DW_AT_ranges: DW_FORM_sec_offset DW_FORM_rnglistx */\nint dwarf_rnglists_get_rle_head(Dwarf_Attribute       /*attr*/,\n    Dwarf_Half            /*theform*/,\n    Dwarf_Unsigned        /*index_or_offset_value*/,\n    Dwarf_Rnglists_Head * /*head_out*/,\n    Dwarf_Unsigned *      /*count_of_entries_in_head*/,\n    Dwarf_Unsigned *      /*global_offset_of_rle_set*/,\n    Dwarf_Error    *      /*error*/);\n\n/*  Get the rnglist entries details */\nint dwarf_get_rnglists_entry_fields_a(\n    Dwarf_Rnglists_Head /*head*/,\n    Dwarf_Unsigned   /*entrynum*/,\n    unsigned       * /*entrylen*/,\n    unsigned       * /*rle_value_out*/,\n    Dwarf_Unsigned * /*raw1*/,\n    Dwarf_Unsigned * /*raw2*/,\n    Dwarf_Bool     * /*debug_addr_unavailable*/,\n    Dwarf_Unsigned * /*cooked1*/,\n    Dwarf_Unsigned * /*cooked2*/,\n    Dwarf_Error *    /*err*/);\n\n/* The following is not complete. DO NOT USE.\n    Use dwarf_get_rnglists_entry_fields_a() instead. */\nint dwarf_get_rnglists_entry_fields(Dwarf_Rnglists_Head /*head*/,\n    Dwarf_Unsigned   /*entrynum*/,\n    unsigned int   * /*entrylen*/,\n    unsigned int   * /*code*/,\n    Dwarf_Unsigned * /*raw1*/,\n    Dwarf_Unsigned * /*raw2*/,\n    Dwarf_Unsigned * /*cooked1*/,\n    Dwarf_Unsigned * /*cooked2*/,\n    Dwarf_Error    * /*error*/);\n\nint dwarf_dealloc_rnglists_head(Dwarf_Rnglists_Head );\n\n/*  Loads all the rnglists headers and\n    returns DW_DLV_NO_ENTRY if the section\n    is missing or empty.\n    Intended to be done quite early and\n    it is automatically\n    done if .debug_info is loaded.\n    Doing it more than once is never necessary\n    or harmful. There is no deallocation call\n    made visible, deallocation happens\n    when dwarf_finish() is called.\n    With DW_DLV_OK it returns the number of\n    rnglists headers in the section through\n    rnglists_count. */\nint dwarf_load_rnglists(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*rnglists_count*/,\n    Dwarf_Error * /*err*/);\n\n/*  Retrieve the offset from the context-index'th\n    rangelists context  and the offsetentry_index\n    element of the array of offsets.\n    If an index is too large to be correct\n    this returns DW_DLV_NO_ENTRY.\n    If all is correct it returns DW_DLV_OK and\n    sets *offset_value_out to the offset of\n    the range list from the base of the offset\n    array, and *global_offset_value_out is set\n    to the .debug_rnglists section offset of\n    the range list. */\nint dwarf_get_rnglist_offset_index_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*context_index*/,\n    Dwarf_Unsigned   /*offsetentry_index*/,\n    Dwarf_Unsigned * /*offset_value_out*/,\n    Dwarf_Unsigned * /*global_offset_value_out*/,\n    Dwarf_Error * /*error*/);\n\n\n/*  Used by dwarfdump to print basic data from the\n    data generated to look at a specific rangelist\n    as returned by  dwarf_rnglists_index_get_rle_head()\n    or dwarf_rnglists_offset_get_rle_head. */\nint dwarf_get_rnglist_head_basics(Dwarf_Rnglists_Head /*head*/,\n    Dwarf_Unsigned * /*rle_count*/,\n    Dwarf_Unsigned * /*rnglists_version*/,\n    Dwarf_Unsigned * /*rnglists_index_returned*/,\n    Dwarf_Unsigned * /*bytes_total_in_rle*/,\n    Dwarf_Half     * /*offset_size*/,\n    Dwarf_Half     * /*address_size*/,\n    Dwarf_Half     * /*segment_selector_size*/,\n    Dwarf_Unsigned * /*overall offset_of_this_context*/,\n    Dwarf_Unsigned * /*total_length of this context*/,\n    Dwarf_Unsigned * /*offset_table_offset*/,\n    Dwarf_Unsigned * /*offset_table_entrycount*/,\n    Dwarf_Bool     * /*rnglists_base_present*/,\n    Dwarf_Unsigned * /*rnglists_base*/,\n    Dwarf_Bool     * /*rnglists_base_address_present*/,\n    Dwarf_Unsigned * /*rnglists_base_address*/,\n    Dwarf_Bool     * /*rnglists_debug_addr_base_present*/,\n    Dwarf_Unsigned * /*rnglists_debug_addr_base*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Enables printing of details about the Range List Table\n    Headers, one header per call. Index starting at 0.\n    Returns DW_DLV_NO_ENTRY if index is too high for the table.\n    A .debug_rnglists section may contain any number\n    of Range List Table Headers with their details.  */\nint dwarf_get_rnglist_context_basics(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*index*/,\n    Dwarf_Unsigned * /*header_offset*/,\n    Dwarf_Small  *   /*offset_size*/,\n    Dwarf_Small  *   /*extension_size*/,\n    unsigned int *   /*version*/, /* 5 */\n    Dwarf_Small  *   /*address_size*/,\n    Dwarf_Small  *   /*segment_selector_size*/,\n    Dwarf_Unsigned * /*offset_entry_count*/,\n    Dwarf_Unsigned * /*offset_of_offset_array*/,\n    Dwarf_Unsigned * /*offset_of_first_rangeentry*/,\n    Dwarf_Unsigned * /*offset_past_last_rangeentry*/,\n    Dwarf_Error *    /*err*/);\n\n/*  entry offset is offset_of_first_rangeentry.\n    Stop when the returned *next_entry_offset\n    is == offset_past_last_rangentry (from\n    dwarf_get_rnglist_context_plus).\n    This only makes sense within those ranges.\n    This retrieves raw detail from the section,\n    no base values or anything are added.\n    So this returns raw individual entries\n    for a single rnglist header, meaning a\n    a single Dwarf_Rnglists_Context.\n\n    This interface assumes there is no\n    segment selector. */\nint dwarf_get_rnglist_raw_entry_detail(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*entry_offset*/,\n    Dwarf_Unsigned * /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Unsigned *  /*next_entry_offset*/,\n    Dwarf_Error * /*err*/);\n\n/*  If no error, returns DW_DLV_OK and sets\n    the entry length,kind, and operands through\n    the pointers. If any missing operands assign\n    zero back through tye operand pointers. */\n\nint dwarf_get_rnglist_rle( Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned /*contextnumber*/,\n    Dwarf_Unsigned /*entry_offset*/,\n    Dwarf_Unsigned /*endoffset*/,\n    unsigned int   * /*entrylen*/,\n    unsigned int   * /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Error * /*err*/);\n\n/* ======= END .debug_rnglists interfaces.  */\n/* ======= START .debug_loclists interfaces.  New May 2020 */\n/*  These interfaces allow reading the .debug_loclists\n    section.  Normal use of .debug_loclists uses\n    dwarf_get_loclist_c() to open access to any kind of location\n    or loclist and uses dwarf_loc_head_c_dealloc() to\n    deallocate that memory once one is finished with\n    that data. So for most purposes you do not need\n    to use these functions  */\nstruct Dwarf_Loclists_Entry_s;\ntypedef struct Dwarf_Loclists_Entry_s * Dwarf_Loclists_Entry;\n\n/*  See dwarf_get_loclist_c() to open a Dwarf_Loc_Head_c\n    on any type of location list or expression. */\n\n/*  Get the loclists entries details */\nint dwarf_get_loclists_entry_fields(Dwarf_Loc_Head_c /*head*/,\n    Dwarf_Unsigned   /*entrynum*/,\n    unsigned int   * /*entrylen*/,\n    unsigned int   * /*code*/,\n    Dwarf_Unsigned * /*raw1*/,\n    Dwarf_Unsigned * /*raw2*/,\n    Dwarf_Unsigned * /*cooked1*/,\n    Dwarf_Unsigned * /*cooked2*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Loads all the loclists headers and\n    returns DW_DLV_NO_ENTRY if the section\n    is missing or empty.\n    Intended to be done quite early and\n    it is automatically\n    done if .debug_info is loaded.\n    Doing it more than once is never necessary\n    or harmful. There is no deallocation call\n    made visible, deallocation happens\n    when dwarf_finish() is called.\n    With DW_DLV_OK it returns the number of\n    loclists headers in the section through\n    loclists_count. */\nint dwarf_load_loclists(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*loclists_count*/,\n    Dwarf_Error * /*err*/);\n\n/*  Retrieve the offset from the context-index'th\n    loclists context  and the offsetentry_index\n    element of the array of offsets.\n    If an index is too large to be correct\n    this returns DW_DLV_NO_ENTRY.\n    If all is correct it returns DW_DLV_OK and\n    sets *offset_value_out to the offset of\n    the range list from the base of the offset\n    array, and *global_offset_value_out is set\n    to the .debug_loclists section offset of\n    the range list. */\nint dwarf_get_loclist_offset_index_value(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*context_index*/,\n    Dwarf_Unsigned   /*offsetentry_index*/,\n    Dwarf_Unsigned * /*offset_value_out*/,\n    Dwarf_Unsigned * /*global_offset_value_out*/,\n    Dwarf_Error * /*error*/);\n\n/*  Used by dwarfdump to print basic data from the\n    data generated to look at a specific rangelist\n    as returned by  dwarf_loclists_index_get_lle_head()\n    or dwarf_loclists_offset_get_lle_head. */\nint dwarf_get_loclist_head_basics(Dwarf_Loc_Head_c /*head*/,\n    Dwarf_Small    * /*lkind*/,\n    Dwarf_Unsigned * /*lle_count*/,\n    Dwarf_Unsigned * /*loclists_version*/,\n    Dwarf_Unsigned * /*loclists_index_returned*/,\n    Dwarf_Unsigned * /*bytes_total_in_rle*/,\n    Dwarf_Half     * /*offset_size*/,\n    Dwarf_Half     * /*address_size*/,\n    Dwarf_Half     * /*segment_selector_size*/,\n    Dwarf_Unsigned * /*overall offset_of_this_context*/,\n    Dwarf_Unsigned * /*total_length of this context*/,\n    Dwarf_Unsigned * /*offset_table_offset*/,\n    Dwarf_Unsigned * /*offset_table_entrycount*/,\n    Dwarf_Bool     * /*loclists_base_present*/,\n    Dwarf_Unsigned * /*loclists_base*/,\n    Dwarf_Bool     * /*loclists_base_address_present*/,\n    Dwarf_Unsigned * /*loclists_base_address*/,\n    Dwarf_Bool     * /*loclists_debug_addr_base_present*/,\n    Dwarf_Unsigned * /*loclists_debug_addr_base*/,\n    Dwarf_Unsigned * /*offset_this_lle_area*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Enables printing of details about the Range List Table\n    Headers, one header per call. Index starting at 0.\n    Returns DW_DLV_NO_ENTRY if index is too high for the table.\n    A .debug_loclists section may contain any number\n    of Location  List Table Headers with their details.  */\nint dwarf_get_loclist_context_basics(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*index*/,\n    Dwarf_Unsigned * /*header_offset*/,\n    Dwarf_Small  *   /*offset_size*/,\n    Dwarf_Small  *   /*extension_size*/,\n    unsigned int *   /*version*/, /* 5 */\n    Dwarf_Small  *   /*address_size*/,\n    Dwarf_Small  *   /*segment_selector_size*/,\n    Dwarf_Unsigned * /*offset_entry_count*/,\n    Dwarf_Unsigned * /*offset_of_offset_array*/,\n    Dwarf_Unsigned * /*offset_of_first_locentry*/,\n    Dwarf_Unsigned * /*offset_past_last_locentry*/,\n    Dwarf_Error *    /*err*/);\n\n/*  entry offset is offset_of_first_locentry.\n    Stop when the returned *next_entry_offset\n    is == offset_past_last_locentry (from\n    dwarf_get_loclist_context_plus).\n    This only makes sense within those ranges.\n    This retrieves raw detail from the section,\n    no base values or anything are added.\n    So this returns raw individual entries\n    for a single loclist header, meaning a\n    a single Dwarf_Loclists_Context.\n\n    This interface assumes there is no\n    segment selector. */\nint dwarf_get_loclist_raw_entry_detail(Dwarf_Debug  /*dbg*/,\n    Dwarf_Unsigned  /*entry_offset*/,\n    Dwarf_Unsigned * /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Unsigned *  /*next_entry_offset*/,\n    Dwarf_Error * /*err*/);\n\n/*  If no error, returns DW_DLV_OK and sets\n    the entry length,kind, and operands through\n    the pointers. If any missing operands assign\n    zero back through tye operand pointers. */\n\nint dwarf_get_loclist_lle( Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*contextnumber*/,\n    Dwarf_Unsigned   /*entry_offset*/,\n    Dwarf_Unsigned   /*endoffset*/,\n    unsigned int *   /*entrylen*/,\n    unsigned int *   /*entry_kind*/,\n    Dwarf_Unsigned * /*entry_operand1*/,\n    Dwarf_Unsigned * /*entry_operand2*/,\n    Dwarf_Unsigned * /*expr_ops_blocksize*/,\n    Dwarf_Unsigned * /*expr_ops_offset*/,\n    Dwarf_Small   ** /*expr_opsdata*/,\n    Dwarf_Error * /*err*/);\n\n/* ======= END .debug_loclists interfaces.  */\n\n/*  New April 2018.\n    Allows applications to print the .debug_str_offsets\n    section.\n    Beginning at starting_offset zero,\n    returns data about the first table found.\n    The value *next_table_offset is the value\n    of the next table (if any), one byte past\n    the end of the table whose data is returned..\n    Returns DW_DLV_NO_ENTRY if the starting offset\n    is past the end of valid data.\n\n    There is no guarantee that there are no non-0 nonsense\n    bytes in the section outside of useful tables,\n    so this can fail and return nonsense or\n    DW_DLV_ERROR  if such garbage exists.\n*/\n\nstruct Dwarf_Str_Offsets_Table_s;\ntypedef struct  Dwarf_Str_Offsets_Table_s *  Dwarf_Str_Offsets_Table;\n\n/*  Allocates a struct Dwarf_Str_Offsets_Table_s for the section\n    and returns DW_DLV_OK and sets a pointer to the struct through\n    the table_data pointer if successful.\n\n    If there is no such section it returns DW_DLV_NO_ENTRY. */\nint dwarf_open_str_offsets_table_access(Dwarf_Debug  /*dbg*/,\n    Dwarf_Str_Offsets_Table * /*table_data*/,\n    Dwarf_Error             * /*error*/);\n\n/*  Close access, free table_data. */\nint dwarf_close_str_offsets_table_access(\n    Dwarf_Str_Offsets_Table   /*table_data*/,\n    Dwarf_Error             * /*error*/);\n\n/*  Call till it returns DW_DLV_NO_ENTRY (normal end)\n    or DW_DLV_ERROR (error) and stop.\n\n    On successful call, call dwarf_str_offsets_table_entry()\n    to get the individual table values on the now-active table. */\nint dwarf_next_str_offsets_table( Dwarf_Str_Offsets_Table /*table_data*/,\n    Dwarf_Unsigned * /*unit_length*/,\n    Dwarf_Unsigned * /*unit_length_offset*/,\n    Dwarf_Unsigned * /*table_start_offset*/,\n    Dwarf_Half     * /*entry_size*/,\n    Dwarf_Half     * /*version*/,\n    Dwarf_Half     * /*padding*/,\n    Dwarf_Unsigned * /*table_value_count*/,\n    Dwarf_Error    * /*error*/);\n\n/*  Valid index values n:  0 <= n <  table_entry_count\n    for the active table */\nint dwarf_str_offsets_value_by_index(Dwarf_Str_Offsets_Table /*table_data*/,\n    Dwarf_Unsigned   /*index_to_entry*/,\n    Dwarf_Unsigned * /*entry_value*/,\n    Dwarf_Error    * /*error*/);\n\n/*  After all str_offsets read this reports final\n    wasted-bytes count. */\nint dwarf_str_offsets_statistics(Dwarf_Str_Offsets_Table /*table_data*/,\n    Dwarf_Unsigned * /*wasted_byte_count*/,\n    Dwarf_Unsigned * /*table_count*/,\n    Dwarf_Error    * /*error*/);\n\n/* The harmless error list is a circular buffer of\n   errors we note but which do not stop us from processing\n   the object.  Created so dwarfdump or other tools\n   can report such inconsequential errors without causing\n   anything to stop early. */\n#define DW_HARMLESS_ERROR_CIRCULAR_LIST_DEFAULT_SIZE 4\n#define DW_HARMLESS_ERROR_MSG_STRING_SIZE   300\n/* User code supplies size of array of pointers errmsg_ptrs_array\n    in count and the array of pointers (the pointers themselves\n    need not be initialized).\n    The pointers returned in the array of pointers\n    are invalidated by ANY call to libdwarf.\n    Use them before making another libdwarf call!\n    The array of string pointers passed in always has\n    a final null pointer, so if there are N pointers the\n    and M actual strings, then MIN(M,N-1) pointers are\n    set to point to error strings.  The array of pointers\n    to strings always terminates with a NULL pointer.\n    If 'count' is passed in zero then errmsg_ptrs_array\n    is not touched.\n\n    The function returns DW_DLV_NO_ENTRY if no harmless errors\n    were noted so far.  Returns DW_DLV_OK if there are errors.\n    Never returns DW_DLV_ERROR.\n\n    Each call empties the error list (discarding all current entries).\n    If newerr_count is non-NULL the count of harmless errors\n    since the last call is returned through the pointer\n    (some may have been discarded or not returned, it is a circular\n    list...).\n    If DW_DLV_NO_ENTRY is returned none of the arguments\n    here are touched or used.\n    */\nint dwarf_get_harmless_error_list(Dwarf_Debug /*dbg*/,\n    unsigned int   /*count*/,\n    const char **  /*errmsg_ptrs_array*/,\n    unsigned int * /*newerr_count*/);\n\n/*  Insertion is only for testing the harmless error code, it is not\n    necessarily useful otherwise. */\nvoid dwarf_insert_harmless_error(Dwarf_Debug /*dbg*/,\n    char * /*newerror*/);\n\n/*  The size of the circular list of strings may be set\n    and reset as needed.  If it is shortened excess\n    messages are simply dropped.  It returns the previous\n    size. If zero passed in the size is unchanged\n    and it simply returns the current size  */\nunsigned int dwarf_set_harmless_error_list_size(Dwarf_Debug /*dbg*/,\n    unsigned int /*maxcount*/);\n/*  The harmless error strings (if any) are freed when the dbg\n    is dwarf_finish()ed. */\n\n/*  When the val_in is known these dwarf_get_TAG_name (etc)\n    functions return the string corresponding to the val_in passed in\n    through the pointer s_out and the value returned is DW_DLV_OK.\n    The strings are in static storage\n    and must not be freed.\n    If DW_DLV_NO_ENTRY is returned the val_in is not known and\n    *s_out is not set.  DW_DLV_ERROR is never returned.*/\n\n/* The following copied from a generated dwarf_names.h */\n\n/* BEGIN FILE */\nextern int dwarf_get_ACCESS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ADDR_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATCF_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ATE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_AT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CFA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_children_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_CHILDREN_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DEFAULTED_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DSC_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_DS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_EH_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_END_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FORM_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_FRAME_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIKIND_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_GNUIVIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ID_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_IDX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_INL_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ISA_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LANG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\n/*  dwarf_get_LLEX_name is likely just temporary. Not standard. */\nextern int dwarf_get_LLEX_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNCT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_LNS_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACINFO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_MACRO_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_OP_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_ORD_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_RLE_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_SECT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_TAG_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_UT_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIRTUALITY_name(unsigned int /*val_in*/, const char ** /*s_out */);\nextern int dwarf_get_VIS_name(unsigned int /*val_in*/, const char ** /*s_out */);\n/* END FILE */\n\n/* Convert local offset into global offset */\nint dwarf_convert_to_global_offset(Dwarf_Attribute  /*attr*/,\n    Dwarf_Off        /*offset*/,\n    Dwarf_Off*       /*ret_offset*/,\n    Dwarf_Error*     /*error*/);\n\n/* Get both offsets (local and global) */\nint dwarf_die_offsets(Dwarf_Die     /*die*/,\n    Dwarf_Off*    /*global_offset*/,\n    Dwarf_Off*    /*local_offset*/,\n    Dwarf_Error*  /*error*/);\n\n/* Giving a section name, get its size and address */\nint dwarf_get_section_info_by_name(Dwarf_Debug      /*dbg*/,\n    const char *     /*section_name*/,\n    Dwarf_Addr*      /*section_addr*/,\n    Dwarf_Unsigned*  /*section_size*/,\n    Dwarf_Error*     /*error*/);\n\n/* Giving a section index, get its size and address */\nint dwarf_get_section_info_by_index(Dwarf_Debug      /*dbg*/,\n    int              /*section_index*/,\n    const char **    /*section_name*/,\n    Dwarf_Addr*      /*section_addr*/,\n    Dwarf_Unsigned*  /*section_size*/,\n    Dwarf_Error*     /*error*/);\n\n/*  Get section count, of object file sections. */\nint dwarf_get_section_count(Dwarf_Debug /*dbg*/);\n\n/*  Get the version and offset size of a CU context.\n    This is useful as a precursor to\n    calling dwarf_get_form_class() at times.  */\nint dwarf_get_version_of_die(Dwarf_Die /*die*/,\n    Dwarf_Half * /*version*/,\n    Dwarf_Half * /*offset_size*/);\n\nint dwarf_discr_list(Dwarf_Debug /*dbg*/,\n    Dwarf_Small    * /*blockpointer*/,\n    Dwarf_Unsigned   /*blocklen*/,\n    Dwarf_Dsc_Head * /*dsc_head_out*/,\n    Dwarf_Unsigned * /*dsc_array_length_out*/,\n    Dwarf_Error    * /*error*/);\n\n/*  NEW September 2016. Allows easy access to DW_AT_discr_list\n    entry. Callers must know which is the appropriate\n    one of the following two interfaces, though both\n    will work. */\nint dwarf_discr_entry_u(Dwarf_Dsc_Head /* dsc */,\n    Dwarf_Unsigned   /*entrynum*/,\n    Dwarf_Half     * /*out_type*/,\n    Dwarf_Unsigned * /*out_discr_low*/,\n    Dwarf_Unsigned * /*out_discr_high*/,\n    Dwarf_Error    * /*error*/);\n\n/*  NEW September 2016. Allows easy access to DW_AT_discr_list\n    entry. */\nint dwarf_discr_entry_s(Dwarf_Dsc_Head /* dsc */,\n    Dwarf_Unsigned   /*entrynum*/,\n    Dwarf_Half     * /*out_type*/,\n    Dwarf_Signed   * /*out_discr_low*/,\n    Dwarf_Signed   * /*out_discr_high*/,\n    Dwarf_Error    * /*error*/);\n\n/*  New May 2017.  So users can find out what groups (dwo or COMDAT)\n    are in the object and how much to allocate so one can get the\n    group-section map data. */\nint dwarf_sec_group_sizes(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned * /*section_count_out*/,\n    Dwarf_Unsigned * /*group_count_out*/,\n    Dwarf_Unsigned * /*selected_group_out*/,\n    Dwarf_Unsigned * /*map_entry_count_out*/,\n    Dwarf_Error    * /*error*/);\n\n/*  New May 2017. Reveals the map between group numbers and section numbers.\n    Caller must allocate the arrays with space for 'map_entry_count'\n    values and this function fills in the array entries.\n    Output ordered by group number and section number.\n    */\nint dwarf_sec_group_map(Dwarf_Debug /*dbg*/,\n    Dwarf_Unsigned   /*map_entry_count*/,\n    Dwarf_Unsigned * /*group_numbers_array*/,\n    Dwarf_Unsigned * /*sec_numbers_array*/,\n    const char    ** /*sec_names_array*/,\n    Dwarf_Error    * /*error*/);\n\n/*  dwarf_get_endian_copy_function new. December 2019. */\nvoid (*dwarf_get_endian_copy_function(Dwarf_Debug /*dbg*/))(void *, const void * /*src*/, unsigned long /*srclen*/);\n\n/*  These make the  LEB encoding routines visible to libdwarf\n    callers. Added November, 2012. */\nint dwarf_encode_leb128(Dwarf_Unsigned /*val*/,\n    int * /*nbytes*/,\n    char * /*space*/,\n    int /*splen*/);\nint dwarf_encode_signed_leb128(Dwarf_Signed /*val*/,\n    int * /*nbytes*/,\n    char * /*space*/,\n    int /*splen*/);\n\n/*  Record some application command line options in libdwarf.\n    This is not arc/argv processing, just precooked setting\n    of a flag in libdwarf based on something the application\n    wants.  check_verbose_mode of TRUE means do more checking\n    and sometimes print errors (from libdwarf).\n    Not restricted to a single Dwarf_Debug, it applies\n    to the libdwarf the executable is using.\n*/\ntypedef struct {\n    Dwarf_Bool check_verbose_mode;\n} Dwarf_Cmdline_Options;\nextern Dwarf_Cmdline_Options dwarf_cmdline_options;\n\n/* Set libdwarf to reflect some application command line options. */\nvoid dwarf_record_cmdline_options(Dwarf_Cmdline_Options /*options*/);\n\nint dwarf_pro_get_string_stats(Dwarf_P_Debug /*dbg*/,\n    Dwarf_Unsigned * /*str_count*/,\n    Dwarf_Unsigned * /*str_total_length*/,\n    Dwarf_Unsigned * /*count_debug_str*/,\n    Dwarf_Unsigned * /*len_debug_str*/,\n    Dwarf_Unsigned * /*reused_count*/,\n    Dwarf_Unsigned * /*reused_len*/,\n    Dwarf_Error    * /*error*/);\n\n#ifndef DW_FTYPE_UNKNOWN\n#define DW_FTYPE_UNKNOWN    0\n#define DW_FTYPE_ELF        1  /* Unix/Linux/etc */\n#define DW_FTYPE_MACH_O     2  /* MacOS. */\n#define DW_FTYPE_PE         3  /* Windows */\n#define DW_FTYPE_ARCHIVE    4  /* unix archive */\n#define DW_FTYPE_CUSTOM_ELF 5  /* Custom ELF format. Ignore this. */\n#endif /* DW_FTYPE_UNKNOWN */\n\n#ifndef DW_ENDIAN_UNKNOWN\n#define DW_ENDIAN_UNKNOWN  0\n#define DW_ENDIAN_BIG      1\n#define DW_ENDIAN_LITTLE   2\n#endif /* DW_ENDIAN_UNKNOWN */\n\n/*  Defined March 7 2020. Allows a caller to\n    avoid most tracking by the de_alloc_tree hash\n    table if called with v of zero.\n    Returns the value the flag was before this call. */\nint dwarf_set_de_alloc_flag(int v);\n\n/* Solely looks for debuglink */\nint dwarf_object_detector_path(const char  * /*path*/,\n    char           * /*outpath_buffer*/,\n    unsigned long    /*outpathlen*/,\n    unsigned int   * /*ftype*/,\n    unsigned int   * /*endian*/,\n    unsigned int   * /*offsetsize*/,\n    Dwarf_Unsigned * /*filesize*/,\n    int *  /*errcode*/);\n\n/* Solely looks for debuglink */\nint dwarf_object_detector_path_b(const char  * /*path*/,\n    char         * /*outpath_buffer*/,\n    unsigned long  /*outpathlen*/,\n    char **        /* gl_pathnames*/,\n    unsigned       /* gl_pathcount*/,\n    unsigned int * /*ftype*/,\n    unsigned int * /*endian*/,\n    unsigned int * /*offsetsize*/,\n    Dwarf_Unsigned * /*filesize*/,\n    unsigned char * /*pathsource*/,\n    int * /*errcode*/);\n\n/* Solely looks for dSYM */\nint dwarf_object_detector_path_dSYM(\n    const char  *path,\n    char *outpath, unsigned long outpath_len,\n    char ** gl_pathnames,\n    unsigned gl_pathcount,\n    unsigned *ftype,\n    unsigned *endian,\n    unsigned *offsetsize,\n    Dwarf_Unsigned  *filesize,\n    unsigned char *pathsource,\n    int *errcode);\n\n\n#define DW_PATHSOURCE_unspecified 0\n#define DW_PATHSOURCE_basic     1\n#define DW_PATHSOURCE_dsym      2 /* MacOS dSYM */\n#define DW_PATHSOURCE_debuglink 3 /* GNU debuglink */\n\n/*  Returns the pathsource value set up at init time*/\nint dwarf_get_path_source_type(Dwarf_Debug /* dbg*/,\n    unsigned char * /*path_source*/,\n    Dwarf_Error   * /*error*/);\n\nint dwarf_object_detector_fd(int /*fd*/,\n    unsigned int * /*ftype*/,\n    unsigned int * /*endian*/,\n    unsigned int * /*offsetsize*/,\n    Dwarf_Unsigned  * /*filesize*/,\n    int *  /*errcode*/);\n\n#ifdef __cplusplus\n}\n#endif\n#endif /* _LIBDWARF_H */\n", "/*\n    This date string is hereby put into the public domain.\n    Copyrighting this is crazy. It's just a date string\n    and is modified from time to time.\n*/\n\n#define DW_VERSION_DATE_STR \" 2020-10-17 11:30:22-07:00  \"\n"], "filenames": ["ChangeLog", "configure", "configure.ac", "dwarfdump/ChangeLog", "dwarfdump/dwarf_names.c", "dwarfdump/dwarf_names.h", "dwarfdump/dwarfdump-ta-ext-table.h", "dwarfdump/dwarfdump-ta-table.h", "dwarfdump/dwarfdump-tt-ext-table.h", "dwarfdump/dwarfdump-tt-table.h", "libdwarf/ChangeLog", "libdwarf/dwarf_names.c", "libdwarf/dwarf_names.h", "libdwarf/dwarf_names_enum.h", "libdwarf/dwarf_names_new.h", "libdwarf/generated_libdwarf.h.in", "libdwarf/libdwarf_version.h"], "buggy_code_start_loc": [0, 3, 19, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 3323, 7], "buggy_code_end_loc": [0, 19473, 20, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3324, 8], "fixing_code_start_loc": [1, 3, 19, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 3323, 7], "fixing_code_end_loc": [4, 19473, 20, 6, 3, 3, 3, 3, 3, 3, 5, 3, 3, 3, 3, 3325, 8], "type": "CWE-763", "message": "libdwarf before 20201017 has a one-byte out-of-bounds read because of an invalid pointer dereference via an invalid line table in a crafted object.", "other": {"cve": {"id": "CVE-2020-27545", "sourceIdentifier": "cve@mitre.org", "published": "2023-04-16T00:15:07.273", "lastModified": "2023-04-26T15:08:10.527", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "libdwarf before 20201017 has a one-byte out-of-bounds read because of an invalid pointer dereference via an invalid line table in a crafted object."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-763"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:libdwarf_project:libdwarf:*:*:*:*:*:*:*:*", "versionEndExcluding": "2020-10-17", "matchCriteriaId": "6630BE8D-91E7-4051-821E-E226DDAF768A"}]}]}], "references": [{"url": "http://web.archive.org/web/20190601140703/https://sourceforge.net/projects/libdwarf/", "source": "cve@mitre.org", "tags": ["Product"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2025694", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Permissions Required", "Third Party Advisory"]}, {"url": "https://github.com/davea42/libdwarf-code/commit/95f634808c01f1c61bbec56ed2395af997f397ea", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://sourceforge.net/projects/libdwarf/", "source": "cve@mitre.org", "tags": ["Product"]}, {"url": "https://www.prevanders.net/dwarfbug.html#DW202010-001", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/davea42/libdwarf-code/commit/95f634808c01f1c61bbec56ed2395af997f397ea"}}