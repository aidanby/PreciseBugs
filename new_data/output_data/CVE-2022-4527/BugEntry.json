{"buggy_code": ["Changelog\n=========\n\n3.0.9 (unreleased)\n------------------\n\n- Nothing changed yet.\n\n\n3.0.8 (2022-05-13)\n------------------\n\n- Added `get_methods_adapter` on Task content class. So it's possible to get the adapter\n  in an expression by example.\n  [sgeulette]\n\n3.0.7 (2022-02-09)\n------------------\n\n- Removed useless atct config.\n  [sgeulette]\n- Changed `task description` translation\n  [sgeulette]\n\n3.0.6 (2021-04-20)\n------------------\n\n- Removed bad step containing empty dependency (persisted now).\n  [sgeulette]\n- Set allowed_mime_types on task_description\n  [sgeulette]\n\n3.0.5 (2019-09-09)\n------------------\n\n- Removed bad step containing empty dependency.\n  [sgeulette]\n\n3.0.4 (2019-03-08)\n------------------\n\n- Added batch actions (collective.eeafaceted.batchactions) to change assigned group or assigned user.\n  [sgeulette]\n\n3.0.3 (2019-02-22)\n------------------\n\n- Corrected bug when a parent field is multivalued.\n  [sgeulette]\n\n3.0.2 (2018-08-22)\n------------------\n\n- Use imio.prettylink column for title if imio.prettylink product is present.\n  [sgeulette]\n\n3.0.1 (2018-07-30)\n------------------\n\n- Added validator on assigned_user\n  [sgeulette]\n- Corrected table column style.\n  [sgeulette]\n- pep8 on imports\n  [sgeulette]\n\n3.0 (2017-05-30)\n----------------\n\n- Modified enquirer field to be LocalRoleField. Use overridable vocabulary.\n  [sgeulette]\n- Added parents_assigned_groups and parents_enquirers field to manage parents rights\n  [sgeulette]\n- Block local roles on task content\n  [sgeulette]\n- Added special index value for empty field.\n  [sgeulette]\n- Use Owner role in workflow\n  [sgeulette]\n\n2.5 (2016-12-07)\n----------------\n\n- Set initial_trigger to true.\n  [sgeulette]\n\n2.4 (2016-06-22)\n----------------\n\n- Add a get_full_tree_title method returning the path title of a task until its parent container.\n  [fngaha]\n\n\n2.3 (2016-04-15)\n----------------\n\n- Adapted ITask to add method getting the highest parent.\n  [sgeulette]\n- Colorize states\n  [sgeulette]\n- Add icons for transitions\n  [sgeulette]\n- Add viewlet displaying task parents\n  [sgeulette]\n\n2.2.1 (2016-01-13)\n------------------\n\n- Modify a copy of the field.\n  [sgeulette]\n\n2.2 (2015-11-24)\n----------------\n\n- Added TaskContainer related search utility\n  [sgeulette]\n- Added task content interface to differentiate from behavior\n  [sgeulette]\n- Added task_description field\n  [sgeulette]\n- Added assigned_group and due_date indexes. Added indexer methods avoiding acquisition for children. Do not store None in catalog\n  [sgeulette]\n- Added assigned_group default value. default_value decorator didn't worked.\n  Schema defaultFactory is used but is called also in view mode when field is None and can't be less easily overrided !\n  [sgeulette]\n- Changed workflow to use 'Request review' guard permission to differentiate Reviewer and editor transitions (like in plone workflows)\n  [sgeulette]\n- Added item_view as default: use simple item view on task content\n  [sgeulette]\n- Added colorized warning when no assigned user\n  [sgeulette]\n- Added transition between to_do and realized\n  [sgeulette]\n- Replaced workflow title ids. Added english translations\n  [sgeulette]\n- Return unicode in table column\n  [sgeulette]\n\n2.1 (2015-06-30)\n----------------\n\n- Added uninstall 1.0 profile.\n  [sgeulette]\n- Corrected bad classifier\n  [sgeulette]\n\n\n2.0 (2015-06-03)\n----------------\n\n- Complete refactoring to propose a more generic task content and behaviors.\n  [cedricmessiant, sgeulette]\n\n\n1.0 (2015-03-16)\n----------------\n\n- Initial release.\n  [cedricmessiant]\n", "# -*- coding: utf-8 -*-\n\"\"\"Installer for the collective.task package.\"\"\"\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\n\nsetup(\n    name='collective.task',\n    version='3.0.9.dev0',\n    description=\"Tasks management for Plone.\",\n    long_description=long_description,\n    # Get more from http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.3\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n    ],\n    keywords='Plone Python',\n    author='C\u00e9dric Messiant',\n    author_email='cedricmessiant@ecreall.com',\n    url='http://pypi.python.org/pypi/collective.task',\n    license='GPL',\n    packages=find_packages('src', exclude=['ez_setup']),\n    namespace_packages=['collective'],\n    package_dir={'': 'src'},\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'dexterity.localrolesfield',\n        'plone.api',\n        'plone.app.lockingbehavior',\n        'plone.directives.form',\n        'plone.formwidget.masterselect',\n        'plone.principalsource',\n        'imio.helpers',\n        'imio.migrator',\n        'setuptools',\n        'z3c.table',\n    ],\n    extras_require={\n        'test': [\n            'collective.eeafaceted.batchactions',\n            'imio.prettylink',\n            'plone.app.testing',\n            'plone.app.contenttypes',\n            'plone.app.robotframework[debug]',\n        ],\n    },\n    entry_points=\"\"\"\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "# -*- coding: utf-8 -*-\n\"\"\"Define tables and columns.\"\"\"\n\nfrom collective.task import _\nfrom collective.task import PMF\nfrom collective.task.adapters import EMPTY_STRING\nfrom plone import api\nfrom Products.CMFPlone.utils import normalizeString\nfrom Products.CMFPlone.utils import safe_unicode\nfrom z3c.table.column import Column\nfrom z3c.table.column import LinkColumn\nfrom z3c.table.table import Table\nfrom zope.cachedescriptors.property import CachedProperty\nfrom zope.i18n import translate\n\ntry:\n    from imio.prettylink.interfaces import IPrettyLink\nexcept ImportError:\n    pass\n\n\nclass TasksTable(Table):\n\n    \"\"\"Table that displays tasks info.\"\"\"\n\n    cssClassEven = u'even'\n    cssClassOdd = u'odd'\n    cssClasses = {'table': 'listing taskContainerListing icons-on'}\n\n    batchSize = 20\n    startBatchingAt = 30\n    results = []\n\n    @CachedProperty\n    def translation_service(self):\n        return api.portal.get_tool('translation_service')\n\n    @CachedProperty\n    def wtool(self):\n        return api.portal.get_tool('portal_workflow')\n\n    @CachedProperty\n    def portal_url(self):\n        return api.portal.get().absolute_url()\n\n    @CachedProperty\n    def values(self):\n        return self.results\n\n\nclass UserColumn(Column):\n\n    \"\"\"Base user column.\"\"\"\n\n    field = NotImplemented\n\n    def renderCell(self, value):\n        username = getattr(value, self.field, '')\n        if username and username != EMPTY_STRING:\n            member = api.user.get(username)\n            return member.getUser().getProperty('fullname').decode('utf-8')\n\n        return \"\"\n\n\nclass TitleColumn(LinkColumn):\n\n    \"\"\"Column that displays title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkCSS(self, item):\n        return ' class=\"state-%s contenttype-%s\"' % (api.content.get_state(obj=item),\n                                                     normalizeString(item.portal_type))\n\n    def getLinkContent(self, item):\n        return safe_unicode(item.title)\n\n\nclass PrettyLinkTitleColumn(TitleColumn):\n\n    \"\"\"Column that displays prettylink title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    params = {}\n\n    def getPrettyLink(self, obj):\n        pl = IPrettyLink(obj)\n        for k, v in self.params.items():\n            setattr(pl, k, v)\n        return pl.getLink()\n\n    def renderCell(self, item):\n        \"\"\" \"\"\"\n        return self.getPrettyLink(item)\n\n\nclass EnquirerColumn(UserColumn):\n\n    \"\"\"Column that displays enquirer.\"\"\"\n\n    header = _(\"Enquirer\")\n    weight = 20\n    field = 'enquirer'\n\n\nclass AssignedGroupColumn(Column):\n\n    \"\"\"Column that displays assigned group.\"\"\"\n\n    header = _(\"Assigned group\")\n    weight = 30\n\n    def renderCell(self, value):\n        if value.assigned_group:\n            group = api.group.get(value.assigned_group).getGroup()\n            return group.getProperty('title').decode('utf-8')\n\n        return \"\"\n\n\nclass AssignedUserColumn(UserColumn):\n\n    \"\"\"Column that displays assigned user.\"\"\"\n\n    header = _(\"Assigned user\")\n    weight = 40\n    field = 'assigned_user'\n\n\nclass DueDateColumn(Column):\n\n    \"\"\"Column that displays due date.\"\"\"\n\n    header = _(\"Due date\")\n    weight = 50\n    long_format = False\n    time_only = False\n\n    def renderCell(self, value):\n        if value.due_date:\n            return api.portal.get_localized_time(datetime=value.due_date, long_format=self.long_format,\n                                                 time_only=self.time_only)\n\n        return \"\"\n\n\nclass ReviewStateColumn(Column):\n\n    \"\"\"Column that displays value's review state.\"\"\"\n\n    header = PMF(\"Review state\")\n    weight = 60\n\n    def renderCell(self, value):\n        state = api.content.get_state(value)\n        if state:\n            wtool = api.portal.get_tool('portal_workflow')\n            state_title = wtool.getTitleForStateOnType(state, value.portal_type)\n            return translate(PMF(state_title), context=self.request)\n\n        return ''\n"], "fixing_code": ["Changelog\n=========\n\n3.0.9 (unreleased)\n------------------\n\n- Required z3c.table 2.2 to include escaping, to avoid xss.\n  Escaped some columns.\n  [sgeulette]\n\n3.0.8 (2022-05-13)\n------------------\n\n- Added `get_methods_adapter` on Task content class. So it's possible to get the adapter\n  in an expression by example.\n  [sgeulette]\n\n3.0.7 (2022-02-09)\n------------------\n\n- Removed useless atct config.\n  [sgeulette]\n- Changed `task description` translation\n  [sgeulette]\n\n3.0.6 (2021-04-20)\n------------------\n\n- Removed bad step containing empty dependency (persisted now).\n  [sgeulette]\n- Set allowed_mime_types on task_description\n  [sgeulette]\n\n3.0.5 (2019-09-09)\n------------------\n\n- Removed bad step containing empty dependency.\n  [sgeulette]\n\n3.0.4 (2019-03-08)\n------------------\n\n- Added batch actions (collective.eeafaceted.batchactions) to change assigned group or assigned user.\n  [sgeulette]\n\n3.0.3 (2019-02-22)\n------------------\n\n- Corrected bug when a parent field is multivalued.\n  [sgeulette]\n\n3.0.2 (2018-08-22)\n------------------\n\n- Use imio.prettylink column for title if imio.prettylink product is present.\n  [sgeulette]\n\n3.0.1 (2018-07-30)\n------------------\n\n- Added validator on assigned_user\n  [sgeulette]\n- Corrected table column style.\n  [sgeulette]\n- pep8 on imports\n  [sgeulette]\n\n3.0 (2017-05-30)\n----------------\n\n- Modified enquirer field to be LocalRoleField. Use overridable vocabulary.\n  [sgeulette]\n- Added parents_assigned_groups and parents_enquirers field to manage parents rights\n  [sgeulette]\n- Block local roles on task content\n  [sgeulette]\n- Added special index value for empty field.\n  [sgeulette]\n- Use Owner role in workflow\n  [sgeulette]\n\n2.5 (2016-12-07)\n----------------\n\n- Set initial_trigger to true.\n  [sgeulette]\n\n2.4 (2016-06-22)\n----------------\n\n- Add a get_full_tree_title method returning the path title of a task until its parent container.\n  [fngaha]\n\n\n2.3 (2016-04-15)\n----------------\n\n- Adapted ITask to add method getting the highest parent.\n  [sgeulette]\n- Colorize states\n  [sgeulette]\n- Add icons for transitions\n  [sgeulette]\n- Add viewlet displaying task parents\n  [sgeulette]\n\n2.2.1 (2016-01-13)\n------------------\n\n- Modify a copy of the field.\n  [sgeulette]\n\n2.2 (2015-11-24)\n----------------\n\n- Added TaskContainer related search utility\n  [sgeulette]\n- Added task content interface to differentiate from behavior\n  [sgeulette]\n- Added task_description field\n  [sgeulette]\n- Added assigned_group and due_date indexes. Added indexer methods avoiding acquisition for children. Do not store None in catalog\n  [sgeulette]\n- Added assigned_group default value. default_value decorator didn't worked.\n  Schema defaultFactory is used but is called also in view mode when field is None and can't be less easily overrided !\n  [sgeulette]\n- Changed workflow to use 'Request review' guard permission to differentiate Reviewer and editor transitions (like in plone workflows)\n  [sgeulette]\n- Added item_view as default: use simple item view on task content\n  [sgeulette]\n- Added colorized warning when no assigned user\n  [sgeulette]\n- Added transition between to_do and realized\n  [sgeulette]\n- Replaced workflow title ids. Added english translations\n  [sgeulette]\n- Return unicode in table column\n  [sgeulette]\n\n2.1 (2015-06-30)\n----------------\n\n- Added uninstall 1.0 profile.\n  [sgeulette]\n- Corrected bad classifier\n  [sgeulette]\n\n\n2.0 (2015-06-03)\n----------------\n\n- Complete refactoring to propose a more generic task content and behaviors.\n  [cedricmessiant, sgeulette]\n\n\n1.0 (2015-03-16)\n----------------\n\n- Initial release.\n  [cedricmessiant]\n", "# -*- coding: utf-8 -*-\n\"\"\"Installer for the collective.task package.\"\"\"\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\n\nlong_description = (\n    open('README.rst').read()\n    + '\\n' +\n    'Contributors\\n'\n    '============\\n'\n    + '\\n' +\n    open('CONTRIBUTORS.rst').read()\n    + '\\n' +\n    open('CHANGES.rst').read()\n    + '\\n')\n\n\nsetup(\n    name='collective.task',\n    version='3.0.9.dev0',\n    description=\"Tasks management for Plone.\",\n    long_description=long_description,\n    # Get more from http://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        \"Environment :: Web Environment\",\n        \"Framework :: Plone\",\n        \"Framework :: Plone :: 4.3\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2.7\",\n    ],\n    keywords='Plone Python',\n    author='C\u00e9dric Messiant',\n    author_email='cedricmessiant@ecreall.com',\n    url='http://pypi.python.org/pypi/collective.task',\n    license='GPL',\n    packages=find_packages('src', exclude=['ez_setup']),\n    namespace_packages=['collective'],\n    package_dir={'': 'src'},\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=[\n        'dexterity.localrolesfield',\n        'plone.api',\n        'plone.app.lockingbehavior',\n        'plone.directives.form',\n        'plone.formwidget.masterselect',\n        'plone.principalsource',\n        'future',\n        'imio.helpers',\n        'imio.migrator',\n        'setuptools',\n        'z3c.table>=2.2',\n    ],\n    extras_require={\n        'test': [\n            'collective.eeafaceted.batchactions',\n            'imio.prettylink',\n            'plone.app.testing',\n            'plone.app.contenttypes',\n            'plone.app.robotframework[debug]',\n        ],\n    },\n    entry_points=\"\"\"\n    [z3c.autoinclude.plugin]\n    target = plone\n    \"\"\",\n)\n", "# -*- coding: utf-8 -*-\n\"\"\"Define tables and columns.\"\"\"\n\nfrom collective.task import _\nfrom collective.task import PMF\nfrom collective.task.adapters import EMPTY_STRING\nfrom html import escape\nfrom imio.helpers.adapters import NoEscapeLinkColumn\nfrom plone import api\nfrom Products.CMFPlone.utils import normalizeString\nfrom Products.CMFPlone.utils import safe_unicode\nfrom z3c.table.column import Column\nfrom z3c.table.column import LinkColumn\nfrom z3c.table.table import Table\nfrom zope.cachedescriptors.property import CachedProperty\nfrom zope.i18n import translate\n\ntry:\n    from imio.prettylink.interfaces import IPrettyLink\nexcept ImportError:\n    pass\n\n\nclass TasksTable(Table):\n    \"\"\"Table that displays tasks info.\"\"\"\n\n    cssClassEven = u'even'\n    cssClassOdd = u'odd'\n    cssClasses = {'table': 'listing taskContainerListing icons-on'}\n\n    batchSize = 20\n    startBatchingAt = 30\n    results = []\n\n    @CachedProperty\n    def translation_service(self):\n        return api.portal.get_tool('translation_service')\n\n    @CachedProperty\n    def wtool(self):\n        return api.portal.get_tool('portal_workflow')\n\n    @CachedProperty\n    def portal_url(self):\n        return api.portal.get().absolute_url()\n\n    @CachedProperty\n    def values(self):\n        return self.results\n\n\nclass UserColumn(Column):\n    \"\"\"Base user column.\"\"\"\n\n    field = NotImplemented\n\n    def renderCell(self, value):\n        username = getattr(value, self.field, '')\n        if username and username != EMPTY_STRING:\n            member = api.user.get(username)\n            return escape(member.getUser().getProperty('fullname').decode('utf-8'))\n\n        return \"\"\n\n\nclass TitleColumn(LinkColumn):\n    \"\"\"Column that displays title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    def getLinkCSS(self, item):\n        return ' class=\"state-%s contenttype-%s\"' % (api.content.get_state(obj=item),\n                                                     normalizeString(item.portal_type))\n\n    def getLinkContent(self, item):\n        return safe_unicode(item.title)\n\n\nclass PrettyLinkTitleColumn(TitleColumn):\n    \"\"\"Column that displays prettylink title.\"\"\"\n\n    header = PMF(\"Title\")\n    weight = 10\n\n    params = {}\n\n    def getPrettyLink(self, obj):\n        pl = IPrettyLink(obj)\n        for k, v in self.params.items():\n            setattr(pl, k, v)\n        return pl.getLink()\n\n    def renderCell(self, item):\n        \"\"\" \"\"\"\n        return self.getPrettyLink(item)\n\n\nclass EnquirerColumn(UserColumn):\n    \"\"\"Column that displays enquirer.\"\"\"\n\n    header = _(\"Enquirer\")\n    weight = 20\n    field = 'enquirer'\n\n\nclass AssignedGroupColumn(Column):\n    \"\"\"Column that displays assigned group.\"\"\"\n\n    header = _(\"Assigned group\")\n    weight = 30\n\n    def renderCell(self, value):\n        if value.assigned_group:\n            group = api.group.get(value.assigned_group).getGroup()\n            return escape(group.getProperty('title').decode('utf-8'))\n        return \"\"\n\n\nclass AssignedUserColumn(UserColumn):\n    \"\"\"Column that displays assigned user.\"\"\"\n\n    header = _(\"Assigned user\")\n    weight = 40\n    field = 'assigned_user'\n\n\nclass DueDateColumn(Column):\n    \"\"\"Column that displays due date.\"\"\"\n\n    header = _(\"Due date\")\n    weight = 50\n    long_format = False\n    time_only = False\n\n    def renderCell(self, value):\n        if value.due_date:\n            return api.portal.get_localized_time(datetime=value.due_date, long_format=self.long_format,\n                                                 time_only=self.time_only)\n        return \"\"\n\n\nclass ReviewStateColumn(Column):\n    \"\"\"Column that displays value's review state.\"\"\"\n\n    header = PMF(\"Review state\")\n    weight = 60\n\n    def renderCell(self, value):\n        state = api.content.get_state(value)\n        if state:\n            wtool = api.portal.get_tool('portal_workflow')\n            state_title = wtool.getTitleForStateOnType(state, value.portal_type)\n            return escape(translate(PMF(state_title), context=self.request))\n        return ''\n"], "filenames": ["CHANGES.rst", "setup.py", "src/collective/task/browser/table.py"], "buggy_code_start_loc": [7, 49, 6], "buggy_code_end_loc": [9, 54, 165], "fixing_code_start_loc": [7, 50, 7], "fixing_code_end_loc": [10, 55, 155], "type": "CWE-79", "message": "A vulnerability was found in collective.task up to 3.0.8. It has been classified as problematic. This affects the function renderCell/AssignedGroupColumn of the file src/collective/task/browser/table.py. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.0.9 is able to address this issue. The name of the patch is 1aac7f83fa2c2b41d59ba02748912953461f3fac. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-215907.", "other": {"cve": {"id": "CVE-2022-4527", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-15T21:15:13.290", "lastModified": "2023-01-09T16:33:17.197", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in collective.task up to 3.0.8. It has been classified as problematic. This affects the function renderCell/AssignedGroupColumn of the file src/collective/task/browser/table.py. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.0.9 is able to address this issue. The name of the patch is 1aac7f83fa2c2b41d59ba02748912953461f3fac. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-215907."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:collective.task_project:collective.task:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.0.9", "matchCriteriaId": "109C18E6-420F-4822-91C7-CC3B7ED9EA22"}]}]}], "references": [{"url": "https://github.com/collective/collective.task/commit/1aac7f83fa2c2b41d59ba02748912953461f3fac", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/collective/collective.task/releases/tag/3.0.9", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.215907", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/collective/collective.task/commit/1aac7f83fa2c2b41d59ba02748912953461f3fac"}}