{"buggy_code": ["/* ========================================================================\n * PlantUML : a free UML diagram generator\n * ========================================================================\n *\n * (C) Copyright 2009-2023, Arnaud Roques\n *\n * Project Info:  http://plantuml.com\n * \n * If you like this project or if you find it useful, you can support us at:\n * \n * http://plantuml.com/patreon (only 1$ per month!)\n * http://plantuml.com/paypal\n * \n * This file is part of PlantUML.\n *\n * PlantUML is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * PlantUML distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public\n * License for more details.\n *\n * You should have received a copy of the GNU General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,\n * USA.\n *\n *\n * Original Author:  Arnaud Roques\n * \n *\n */\npackage net.sourceforge.plantuml.ugraphic;\n\nimport java.util.Objects;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport net.sourceforge.plantuml.SignatureUtils;\n\npublic class UImageSvg implements UShape {\n\n\tprivate static final String EMPTY_SVG = \"<svg width=10 height=10></svg>\";\n\tprivate final String svg;\n\tprivate final double scale;\n\n\tpublic UImageSvg(String svg, double scale) {\n\t\tthis.svg = clean(Objects.requireNonNull(svg));\n\t\tthis.scale = scale;\n\t}\n\n\tprivate String clean(String svg) {\n\t\tsvg = svg.toLowerCase().replaceAll(\"\\\\s\", \"\");\n\t\tif (svg.contains(\"<script>\"))\n\t\t\treturn EMPTY_SVG;\n\t\tif (svg.contains(\"</script>\"))\n\t\t\treturn EMPTY_SVG;\n\t\tif (svg.contains(\"<foreignobject\"))\n\t\t\treturn EMPTY_SVG;\n\t\tif (svg.contains(\"</foreignobject>\"))\n\t\t\treturn EMPTY_SVG;\n\t\treturn svg;\n\t}\n\n\tpublic String getMD5Hex() {\n\t\treturn SignatureUtils.getMD5Hex(svg);\n\t}\n\n\tpublic String getSvg(boolean raw) {\n\t\tString result = svg;\n\t\tif (raw) {\n\t\t\treturn result;\n\t\t}\n\t\tif (result.startsWith(\"<?xml\")) {\n\t\t\tfinal int idx = result.indexOf(\"<svg\");\n\t\t\tresult = result.substring(idx);\n\t\t}\n\t\tif (result.startsWith(\"<svg\")) {\n\t\t\tfinal int idx = result.indexOf(\">\");\n\t\t\tresult = \"<svg>\" + result.substring(idx + 1);\n\t\t}\n\t\tfinal String style = extractSvgStyle();\n\t\tif (style != null) {\n\t\t\tfinal String background = extractBackground(style);\n\t\t\tif (background != null) {\n\t\t\t\tresult = result.replaceFirst(\"<g>\", \"<g><rect fill=\\\"\" + background + \"\\\" style=\\\"\" + style + \"\\\" /> \");\n\t\t\t}\n\t\t}\n\t\tif (result.startsWith(\"<svg>\") == false) {\n\t\t\tthrow new IllegalArgumentException();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate String extractBackground(String style) {\n\t\tfinal Pattern p = Pattern.compile(\"background:([^;]+)\");\n\t\tfinal Matcher m = p.matcher(style);\n\t\tif (m.find()) {\n\t\t\treturn m.group(1);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate String extractSvgStyle() {\n\t\tfinal Pattern p = Pattern.compile(\"(?i)\\\\<svg[^>]+style=\\\"([^\\\">]+)\\\"\");\n\t\tfinal Matcher m = p.matcher(svg);\n\t\tif (m.find()) {\n\t\t\treturn m.group(1);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic int getData(String name) {\n\t\tfinal Pattern p = Pattern.compile(\"(?i)<svg[^>]+\" + name + \"\\\\W+(\\\\d+)\");\n\t\tfinal Matcher m = p.matcher(svg);\n\t\tif (m.find()) {\n\t\t\tfinal String s = m.group(1);\n\t\t\treturn Integer.parseInt(s);\n\t\t}\n\t\tfinal Pattern p2 = Pattern.compile(\"viewBox[= \\\"\\']+([0-9.]+)[\\\\s,]+([0-9.]+)[\\\\s,]+([0-9.]+)[\\\\s,]+([0-9.]+)\");\n\t\tfinal Matcher m2 = p2.matcher(svg);\n\t\tif (m2.find()) {\n\t\t\tif (\"width\".equals(name)) {\n\t\t\t\tfinal String s = m2.group(3);\n\t\t\t\tfinal int width = (int) Double.parseDouble(s);\n\t\t\t\treturn width;\n\t\t\t}\n\t\t\tif (\"height\".equals(name)) {\n\t\t\t\tfinal String s = m2.group(4);\n\t\t\t\tfinal int result = (int) Double.parseDouble(s);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tthrow new IllegalStateException(\"Cannot find \" + name);\n\t}\n\n\tpublic int getHeight() {\n\t\treturn this.getData(\"height\");\n\t}\n\n\tpublic int getWidth() {\n\t\treturn this.getData(\"width\");\n\t}\n\n\tpublic double getScale() {\n\t\treturn scale;\n\t}\n\n}\n"], "fixing_code": ["/* ========================================================================\n * PlantUML : a free UML diagram generator\n * ========================================================================\n *\n * (C) Copyright 2009-2023, Arnaud Roques\n *\n * Project Info:  http://plantuml.com\n * \n * If you like this project or if you find it useful, you can support us at:\n * \n * http://plantuml.com/patreon (only 1$ per month!)\n * http://plantuml.com/paypal\n * \n * This file is part of PlantUML.\n *\n * PlantUML is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * PlantUML distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public\n * License for more details.\n *\n * You should have received a copy of the GNU General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,\n * USA.\n *\n *\n * Original Author:  Arnaud Roques\n * \n *\n */\npackage net.sourceforge.plantuml.ugraphic;\n\nimport java.util.Objects;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport net.sourceforge.plantuml.SignatureUtils;\n\npublic class UImageSvg implements UShape {\n\n\tprivate static final String EMPTY_SVG = \"<svg width=10 height=10></svg>\";\n\tprivate final String svg;\n\tprivate final double scale;\n\n\tpublic UImageSvg(String svg, double scale) {\n\t\tthis.svg = clean(Objects.requireNonNull(svg));\n\t\tthis.scale = scale;\n\t}\n\n\tprivate String clean(final String svg) {\n\t\tfinal String svg2 = svg.toLowerCase().replaceAll(\"\\\\s\", \"\");\n\t\tif (svg2.contains(\"<script>\"))\n\t\t\treturn EMPTY_SVG;\n\t\tif (svg2.contains(\"</script>\"))\n\t\t\treturn EMPTY_SVG;\n\t\tif (svg2.contains(\"<foreignobject\"))\n\t\t\treturn EMPTY_SVG;\n\t\tif (svg2.contains(\"</foreignobject>\"))\n\t\t\treturn EMPTY_SVG;\n\t\treturn svg;\n\t}\n\n\tpublic String getMD5Hex() {\n\t\treturn SignatureUtils.getMD5Hex(svg);\n\t}\n\n\tpublic String getSvg(boolean raw) {\n\t\tString result = svg;\n\t\tif (raw) {\n\t\t\treturn result;\n\t\t}\n\t\tif (result.startsWith(\"<?xml\")) {\n\t\t\tfinal int idx = result.indexOf(\"<svg\");\n\t\t\tresult = result.substring(idx);\n\t\t}\n\t\tif (result.startsWith(\"<svg\")) {\n\t\t\tfinal int idx = result.indexOf(\">\");\n\t\t\tresult = \"<svg>\" + result.substring(idx + 1);\n\t\t}\n\t\tfinal String style = extractSvgStyle();\n\t\tif (style != null) {\n\t\t\tfinal String background = extractBackground(style);\n\t\t\tif (background != null) {\n\t\t\t\tresult = result.replaceFirst(\"<g>\", \"<g><rect fill=\\\"\" + background + \"\\\" style=\\\"\" + style + \"\\\" /> \");\n\t\t\t}\n\t\t}\n\t\tif (result.startsWith(\"<svg>\") == false) {\n\t\t\tthrow new IllegalArgumentException();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate String extractBackground(String style) {\n\t\tfinal Pattern p = Pattern.compile(\"background:([^;]+)\");\n\t\tfinal Matcher m = p.matcher(style);\n\t\tif (m.find()) {\n\t\t\treturn m.group(1);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate String extractSvgStyle() {\n\t\tfinal Pattern p = Pattern.compile(\"(?i)\\\\<svg[^>]+style=\\\"([^\\\">]+)\\\"\");\n\t\tfinal Matcher m = p.matcher(svg);\n\t\tif (m.find()) {\n\t\t\treturn m.group(1);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic int getData(String name) {\n\t\tfinal Pattern p = Pattern.compile(\"(?i)<svg[^>]+\" + name + \"\\\\W+(\\\\d+)\");\n\t\tfinal Matcher m = p.matcher(svg);\n\t\tif (m.find()) {\n\t\t\tfinal String s = m.group(1);\n\t\t\treturn Integer.parseInt(s);\n\t\t}\n\t\tfinal Pattern p2 = Pattern.compile(\"viewBox[= \\\"\\']+([0-9.]+)[\\\\s,]+([0-9.]+)[\\\\s,]+([0-9.]+)[\\\\s,]+([0-9.]+)\");\n\t\tfinal Matcher m2 = p2.matcher(svg);\n\t\tif (m2.find()) {\n\t\t\tif (\"width\".equals(name)) {\n\t\t\t\tfinal String s = m2.group(3);\n\t\t\t\tfinal int width = (int) Double.parseDouble(s);\n\t\t\t\treturn width;\n\t\t\t}\n\t\t\tif (\"height\".equals(name)) {\n\t\t\t\tfinal String s = m2.group(4);\n\t\t\t\tfinal int result = (int) Double.parseDouble(s);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tthrow new IllegalStateException(\"Cannot find \" + name);\n\t}\n\n\tpublic int getHeight() {\n\t\treturn this.getData(\"height\");\n\t}\n\n\tpublic int getWidth() {\n\t\treturn this.getData(\"width\");\n\t}\n\n\tpublic double getScale() {\n\t\treturn scale;\n\t}\n\n}\n"], "filenames": ["src/net/sourceforge/plantuml/ugraphic/UImageSvg.java"], "buggy_code_start_loc": [55], "buggy_code_end_loc": [64], "fixing_code_start_loc": [55], "fixing_code_end_loc": [64], "type": "CWE-79", "message": "XSS via Embedded SVG in SVG Diagram Format in GitHub repository plantuml/plantuml prior to 1.2022.4. Stored XSS in the context of the diagram embedder. Depending on the actual context, this ranges from stealing secrets to account hijacking or even to code execution for example in desktop applications. Web based applications are the ones most affected. Since the SVG format allows clickable links in diagrams, it is commonly used in plugins for web based projects (like the Confluence plugin, etc. see https://plantuml.com/de/running).", "other": {"cve": {"id": "CVE-2022-1231", "sourceIdentifier": "security@huntr.dev", "published": "2022-04-15T15:15:12.133", "lastModified": "2022-05-13T12:38:16.310", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XSS via Embedded SVG in SVG Diagram Format in GitHub repository plantuml/plantuml prior to 1.2022.4. Stored XSS in the context of the diagram embedder. Depending on the actual context, this ranges from stealing secrets to account hijacking or even to code execution for example in desktop applications. Web based applications are the ones most affected. Since the SVG format allows clickable links in diagrams, it is commonly used in plugins for web based projects (like the Confluence plugin, etc. see https://plantuml.com/de/running)."}, {"lang": "es", "value": "Una vulnerabilidad de tipo XSS por medio de SVG insertado en el formato de diagrama SVG en el repositorio GitHub plantuml/plantuml versiones anteriores a 1.2022.4. Una vulnerabilidad de tipo XSS almacenado en el contexto del insertador de diagramas. Dependiendo del contexto real, esto va desde el robo de secretos hasta el secuestro de cuentas o incluso una ejecuci\u00f3n de c\u00f3digo, por ejemplo en aplicaciones de escritorio. Las aplicaciones basadas en la web son las m\u00e1s afectadas. Dado que el formato SVG permite enlaces clicables en los diagramas, es com\u00fanmente usado en plugins para proyectos basados en la web (como el plugin de Confluence, etc. vea https://plantuml.com/de/running)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 9.3, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 4.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:plantuml:plantuml:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2022.4", "matchCriteriaId": "0879CF5E-1364-4E9D-93DE-058948B8969F"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:36:*:*:*:*:*:*:*", "matchCriteriaId": "5C675112-476C-4D7C-BCB9-A2FB2D0BC9FD"}]}]}], "references": [{"url": "https://github.com/plantuml/plantuml/commit/c9137be051ce98b3e3e27f65f54ec7d9f8886903", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/27db9509-6cd3-4148-8d70-5942f3837604", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EO26WBHQRMWTS44M5VLZJIJZOIGJYL3A/", "source": "security@huntr.dev", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FQMHXN5BVBK433C5SVSSBXWB5JLJ7NID/", "source": "security@huntr.dev", "tags": ["Mailing List", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/plantuml/plantuml/commit/c9137be051ce98b3e3e27f65f54ec7d9f8886903"}}