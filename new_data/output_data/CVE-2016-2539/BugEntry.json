{"buggy_code": ["<?php\n/************************************************************************/\n/* ATutor                                                               */\n/************************************************************************/\n/* Copyright (c) 2002-2010                                              */\n/* Inclusive Design Institute                                           */\n/* http://atutor.ca                                                     */\n/*                                                                      */\n/* This program is free software. You can redistribute it and/or        */\n/* modify it under the terms of the GNU General Public License          */\n/* as published by the Free Software Foundation.                        */\n/************************************************************************/\n// $Id: \n\ndefine('AT_INCLUDE_PATH', '../../../include/');\nrequire (AT_INCLUDE_PATH.'vitals.inc.php');\nadmin_authenticate(AT_ADMIN_PRIV_MODULES);\nrequire(AT_INCLUDE_PATH.'../mods/_core/modules/classes/ModuleListParser.class.php');\nrequire_once(AT_INCLUDE_PATH.'../mods/_core/file_manager/filemanager.inc.php');\n// delete all folders and files in $dir\nfunction clear_dir($dir)\n{\n\tif ($dh = opendir($dir)) \n\t{\n\t\twhile (($file = readdir($dh)) !== false)\n\t\t{\n\t\t\tif (($file == '.') || ($file == '..'))\n\t\t\t\tcontinue;\n\n\t\t\tif (is_dir($dir.$file)) \n\t\t\t\tclr_dir($dir.$file);\n\t\t\telse \n\t\t\t\tunlink($dir.$file);\n\t\t}\n\t\t\n\t\tclosedir($dh);\n\t}\n}\n\nset_time_limit(0);\n\n// check the connection to server update.atutor.ca\n$update_server = \"http://update.atutor.ca\"; \n$connection_test_file = $update_server . '/index.php';\n$connection = @file_get_contents($connection_test_file);\n\nif (!$connection) \n{\n\t$msg->addInfo(array('CANNOT_CONNECT_MOD_SERVER'));\n}\nelse\n{\n\t// get module list\n\t$module_folder = $update_server . '/modules/';\n\t\n\t$module_list_xml = @file_get_contents($module_folder . 'module_list.xml');\n\t\n\tif ($module_list_xml) \n\t{\n\t\t$moduleListParser = new ModuleListParser();\n\t\t$moduleListParser->parse($module_list_xml);\n\t\t$module_list_array = $moduleListParser->getParsedArray();                                   \n\n\t}\n\t// end of get module list\n\t\n\t$module_content_folder = AT_CONTENT_DIR . \"module/\";\n\t\n\tif (!is_dir($module_content_folder)) mkdir($module_content_folder);\n}\n// end of get module list\n\n$module_content_folder = AT_CONTENT_DIR . \"module/\";\n\nif (!is_dir($module_content_folder)) mkdir($module_content_folder);\n\n// Installation process\nif ((isset($_POST['install']) || isset($_POST[\"download\"]) || isset($_POST[\"version_history\"])) && !isset($_POST[\"id\"]))\n{\n\t$msg->addError('NO_ITEM_SELECTED');\n}\nelse if (isset($_POST['install']) || isset($_POST[\"download\"]) || isset($_POST[\"version_history\"]) || isset($_POST[\"install_upload\"]))\n{\n\tif ($_POST['version_history'])\n\t{\n\t\theader('Location: '.AT_BASE_HREF.'mods/_core/modules/version_history.php?id='.$_POST[\"id\"]);\n\t\texit;\n\t}\n\n\t// install and download\n\tif ($_POST[\"install_upload\"])\n\t\t$module_zip_file = $_FILES['modulefile']['tmp_name'];\n\telse\n\t\t$module_zip_file = $module_folder . $module_list_array[$_POST[\"id\"]]['history'][0]['location'].$module_list_array[$_POST[\"id\"]]['history'][0]['filename'];\n\t\t\n\t$file_content = file_get_contents($module_zip_file);\n\n\tif (!$file_content & ($_POST['install'] || $_POST['download']))\n\t{\n\t\t$msg->addError('FILE_NOT_EXIST');\n\t}\n\telse\n\t{\n\t\tif ($_POST['install'] || $_POST['install_upload'])\n\t\t{\n\t\t\tclear_dir($module_content_folder);\n\t\t\t\n\t\t\t// download zip file from update.atutor.ca and write into module content folder\n\t\t\tif ($_POST[\"install_upload\"])\n\t\t\t\t$local_module_zip_file = $module_content_folder . $_FILES['modulefile']['name'];\n\t\t\telse\n\t\t\t\t$local_module_zip_file = $module_content_folder. $module_list_array[$_POST[\"id\"]]['history'][0]['filename'];\n\t\t\t\n\t\t\t$fp = fopen($local_module_zip_file, \"w\");\n\t\t\tfwrite($fp, $file_content);\n\t\t\tfclose($fp);\n\t\t\t\n\t\t\t// unzip uploaded file to module's content directory\n\t\t\tinclude_once(AT_INCLUDE_PATH . '/classes/pclzip.lib.php');\n\t\t\t\n\t\t\t$archive = new PclZip($local_module_zip_file);\n\t\t\n\t\t\tif ($archive->extract(PCLZIP_OPT_PATH, $module_content_folder) == 0)\n\t\t\t{\n\t\t\t\tclear_dir($module_content_folder);\n\t\t\t\t$msg->addError('CANNOT_UNZIP');\n\t\t\t}\n\t\t\n\t\t\tif (!$msg->containsErrors())\n\t\t\t{\n\t\t\t\t// find unzip module folder name\n\t\t\t\tclearstatcache();\n\t\t\t\t\n\t\t\t\tif ($dh = opendir($module_content_folder)) \n\t\t\t\t{\n\t\t\t\t\twhile (($module_folder = readdir($dh)) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($module_folder <> \".\" && $module_folder <> \"..\" && is_dir($module_content_folder.$module_folder)) break;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tclosedir($dh);\n\t\t\t\t}\n\n\t\t\t\tif ($module_folder == \".\" || $module_folder == \"..\" || !isset($module_folder))\n\t\t\t\t\t$msg->addError('EMPTY_ZIP_FILE');\n\t\t\t}\n\t\t\n\t\t\t// check if the same module exists in \"mods\" folder. If exists, it has been installed\n\t\t\tif (!$msg->containsErrors())\n\t\t\t{\n\t\t\t\tif (is_dir(AT_SUBSITE_MODULE_PATH. $module_folder))\n\t\t\t\t\t$msg->addError('ALREADY_INSTALLED');\n\t\t\t}\n\n\t\t\tif (!$msg->containsErrors())\n\t\t\t{\n\t\t\t\theader('Location: module_install_step_1.php?mod='.urlencode($module_folder).SEP.'new=1');\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ($_POST['download'])\n\t\t{\n\t\t\t$id = intval($_POST['id']);\n\t\t\n\t\t\theader('Content-Type: application/x-zip');\n\t\t\theader('Content-transfer-encoding: binary'); \n\t\t\theader('Content-Disposition: attachment; filename=\"'.htmlspecialchars($module_list_array[$id]['history'][0]['filename']).'\"');\n\t\t\theader('Expires: 0');\n\t\t\theader('Cache-Control: must-revalidate, post-check=0, pre-check=0');\n\t\t\theader('Pragma: public');\n\t\t\theader('Content-Length: '.strlen($file_content));\n\t\t\n\t\t\techo $file_content;\n\t\t\texit;\n\t\t}\n\t}\n}\n\nif (isset($_POST['mod'])) {\n\t$dir_name = str_replace(array('.','..'), '', $_POST['mod']);\n\n\tif (isset($_POST['install_manually'])) {\n\t\theader('Location: '.AT_BASE_HREF.'mods/_core/modules/module_install_step_2.php?mod='.urlencode($dir_name).SEP.'new=1'.SEP.'mod_in=1');\n\t\texit;\n\t}\n\n} else if (isset($_POST['install_manually'])) {\n\t$msg->addError('NO_ITEM_SELECTED');\n}\n\nif (defined('IS_SUBSITE')) {\n\t$enable_upload = false;\n\t$enable_remote_installtion = false;  // Disallow subsites to download and install the remote modules from update.atutor.ca\n} else {\n\t$enable_upload = true;\n\t$enable_remote_installtion = true;\n}\n$module_list = $moduleFactory->getModules(AT_MODULE_TYPE_EXTRA);\n$keys = array_keys($module_list);\nnatsort($keys);\n\nrequire (AT_INCLUDE_PATH.'header.inc.php');\n\nif (defined('IS_SUBSITE') && defined('SUBSITE_SUPPORT_EMAIL')) {\n\t$msg->addFeedback(array('SUBSITE_INSTALL_MODULE', SUBSITE_SUPPORT_EMAIL));\n}\n$msg->printAll();\n\n?>\n\n\n<script language=\"JavaScript\">\n<!--\n\nString.prototype.trim = function() {\n\treturn this.replace(/^\\s+|\\s+$/g,\"\");\n}\n\n// This function validates if and only if a zip file is given\nfunction validate_filename() {\n  // check file type\n  var file = document.frm_upload.modulefile.value;\n  if (!file || file.trim()=='') {\n    alert('Please give a zip file!');\n    return false;\n  }\n  \n  if(file.slice(file.lastIndexOf(\".\")).toLowerCase() != '.zip') {\n    alert('Please upload ZIP file only!');\n    return false;\n  }\n}\n\n//  End -->\n//-->\n</script>\n\n<?php \n\n// Create a list of install modules\n$installed_mods = array();\n$sql = \"SELECT dir_name FROM %smodules\";\n$rows_installed_mods = queryDB($sql, array(TABLE_PREFIX));\n\tforeach($rows_installed_mods as $installed){\n\t    array_push($installed_mods, $installed['dir_name']);\n\t}\n\t\n    // Sort the data with atutor_version descending\n\tforeach ($module_list_array as $key => $row) {\n                $version[$key]  = $row['atutor_version'];\n        }\n        $sort_versions = array_unique($version, SORT_REGULAR);\n        rsort($sort_versions);\n\n    // Add $module_list_array as the last parameter, to sort by the common key\n    // Sorts by original $module_list_array by reference, then returns true|false\n    $sort_by_version = array_multisort($version, SORT_DESC, $module_list_array);\n\n// Create menu for filter ATutor versions\nfunction select_atversion(){ \n    global $sort_versions;\n    $menu = '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"post\">'; \n    $menu.= '<select name=\"atversions\">';\n    $menu.= '<option value=\"0\">'._AT(\"all\").'</option>';\n    foreach($sort_versions as $version){\n        if($version == VERSION){\n            $menu .= '<option value=\"'.$version.'\" selected=\"selected\">'.$version.'</option>';\n        }else{\n            $menu .= '<option value=\"'.$version.'\" >'.$version.'</option>';\n        }\n    }\n    $menu .='</select>';\n    $menu .='<input type=\"submit\"  value=\"'. _AT('filter').'\"/></form>';\n    return $menu;\n}\n\n$savant->assign('atversions', select_atversion());\n$savant->assign('enable_upload', $enable_upload);\n$savant->assign('enable_remote_installation', $enable_remote_installtion);\n$savant->assign('keys', $keys);\n$savant->assign('module_list', $module_list);\n$savant->assign('installed_mods', $installed_mods);\n$savant->assign('module_list_array', $module_list_array);\n$savant->display('admin/modules/install_modules.tmpl.php');\nrequire (AT_INCLUDE_PATH.'footer.inc.php'); ?>\n", "<?php\nif ($this->enable_upload) {\n?>\n<form name=\"frm_upload\" enctype=\"multipart/form-data\" method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" >\n\t\n<div class=\"input-form\">\n\t\t<div class=\"row\"><?php echo _AT(\"upload_module\"); ?></div>\n\n\t\t<div class=\"row\">\n\t\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"52428800\" />\n\t\t\t<input type=\"file\" name=\"modulefile\"  size=\"50\" />\n\t\t</div>\n\t\t\n\t\t<div class=\"row buttons\">\n\t\t\t<input type=\"submit\" name=\"install_upload\" value=\"<?php echo _AT('install'); ?>\" onclick=\"javascript: return validate_filename(); \" class=\"submit\" />\n\t\t\t<input type=\"hidden\" name=\"uploading\" value=\"1\" />\n\t\t</div>\n</div>\n\n</form>\n\n<?php \n} // end of enable_upload\n\nif (count($this->keys) > 0)\n{\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\" name=\"installform\">\n<table class=\"data\" summary=\"\">\n<thead>\n<tr>\n\t<th scope=\"col\">&nbsp;</th>\n\t<th scope=\"col\"><?php echo _AT('module_name'); ?></th>\n\t<th scope=\"col\"><?php echo _AT('directory_name'); ?></th>\n\t<th scope=\"col\"><?php echo _AT('description'); ?></th>\n</tr>\n</thead>\n\n<tfoot>\n<tr>\n\t<td colspan=\"4\">\n\t\t<input type=\"submit\" name=\"install_manually\"  value=\"<?php echo _AT('install'); ?>\" />\n\t</td>\n</tr>\n</tfoot>\n\n<tbody>\n<?php if (!empty($this->keys)): ?>\n\t<?php foreach($this->keys as $dir_name) : $module =& $this->module_list[$dir_name]; ?>\n\t\t<tr onmousedown=\"document.installform['m_<?php echo $dir_name; ?>'].checked = true; rowselect(this);\" id=\"r_<?php echo $dir_name; ?>\">\n\t\t\t<td valign=\"top\"><input type=\"radio\" id=\"m_<?php echo $dir_name; ?>\" name=\"mod\" value=\"<?php echo $dir_name; ?>\" /></td>\n\t\t\t<td valign=\"top\"><label for=\"m_<?php echo $row['dir_name']; ?>\"><?php echo $module->getName(); ?></label></td>\n\t\t\t<td valign=\"top\"><code><?php echo $dir_name; ?>/</code></td>\n\t\t\t<td valign=\"top\"><?php echo $module->getDescription($_SESSION['lang']); ?></td>\n\t\t</tr>\n\t<?php endforeach; ?>\n<?php else: ?>\n\t<tr>\n\t\t<td colspan=\"4\"><?php echo _AT('none_found'); ?></td>\n\t</tr>\n<?php endif; ?>\n</tbody>\n</table>\n</form>\n<br />\n<?php \n} else {\n?>\n<div style=\"border:1p solid #F6F4DA\">\n<p> No modules available to install</p>\n\n</div>\n\n<?php } // end of displaying local modules\n\n// Disallow subsites to download and install the remote modules from update.atutor.ca\nif ($this->enable_remote_installation === true) {\n?>\n<fieldset>\n    <legend><?php echo _AT('filter'); ?></legend>\n    <div class=\"input-form\">\n    <div class=\"row\">\n    <?php echo _AT('old_module_notes'); ?>\n    </div>\n<?php echo select_atversion(); ?>\n</div>\n</fieldset>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\" name=\"form\">\n<table class=\"data\" summary=\"\">\n<thead>\n\t<tr>\n\t\t<th scope=\"col\">&nbsp;</th>\n\t\t<th scope=\"col\"><?php echo _AT('module_name');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('description');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('version');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('atutor_version_tested_with');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('maintainers');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('installed').'?';?></th>\n\t</tr>\n</thead>\n\t\n<tfoot>\n<tr>\n\t<td colspan=\"7\">\n\t\t<input type=\"submit\" name=\"install\" value=\"<?php echo _AT('install'); ?>\" />\n\t\t<input type=\"submit\" name=\"download\" value=\"<?php echo _AT('download'); ?>\" />\n\t\t<input type=\"submit\" name=\"version_history\" value=\"<?php echo _AT('version_history'); ?>\" />\n\t</td>\n</tr>\n</tfoot>\n\n<tbody>\n<?php \n$num_of_modules = count($this->module_list_array);\n\nif ($num_of_modules == 0)\n{\n?>\n\n<tr>\n\t<td colspan=\"7\"><?php echo _AT('none_found'); ?></td>\n</tr>\n\n<?php \n}\nelse\n{\n\t// display modules\n\tif(is_array($this->module_list_array))\n\t{\n\t\tfor ($i=0; $i < $num_of_modules; $i++)\n\t\t{\n\t\t\t$installed = false;\n\t\t\tif(in_array($this->module_list_array[$i][\"history\"][0][\"install_folder\"],  $this->keys)){\n\t\t\t    $installed = true;\n\t\t\t} \n\t\t\t\n\t\t\tif((isset($_POST['atversions']) && $_POST['atversions'] == $this->module_list_array[$i][\"atutor_version\"]) || $_POST['atversions'] == 0){\n?>\n            <tr onmousedown=\"document.form['m<?php echo $i; ?>'].checked = true; rowselect(this);\"  id=\"r_<?php echo $i; ?>\">\n                <td><input type=\"radio\" name=\"id\" value=\"<?php echo $i; ?>\" id=\"m<?php echo $i; ?>\" <?php if ($installed) echo 'disabled=\"disabled\"'; ?> /></td>\n                <td><label for=\"m<?php echo $i; ?>\"><?php echo $this->module_list_array[$i][\"name\"]; ?></label></td>\n                <td style=\"width:45%;\"><?php echo $this->module_list_array[$i][\"description\"]; ?></td>\n                <td><?php echo $this->module_list_array[$i][\"history\"][0][\"version\"]; ?></td>\n                <td><?php echo $this->module_list_array[$i][\"atutor_version\"]; ?></td>\n                <td><?php echo $this->module_list_array[$i][\"history\"][0][\"maintainer\"]; ?></td>\n                <td><?php if ($installed) echo _AT(\"installed\"); else echo _AT(\"not_installed\"); ?></td>\n            </tr>\n\n<?php \n            } // end if\n\t\t}\n\t}\n\n?>\n</tbody>\n\n<?php \n}\n?>\n</table>\n</form>\n<?php } // end of enable_remote_installation ?>"], "fixing_code": ["<?php\n/************************************************************************/\n/* ATutor                                                               */\n/************************************************************************/\n/* Copyright (c) 2002-2010                                              */\n/* Inclusive Design Institute                                           */\n/* http://atutor.ca                                                     */\n/*                                                                      */\n/* This program is free software. You can redistribute it and/or        */\n/* modify it under the terms of the GNU General Public License          */\n/* as published by the Free Software Foundation.                        */\n/************************************************************************/\n// $Id: \n\ndefine('AT_INCLUDE_PATH', '../../../include/');\nrequire (AT_INCLUDE_PATH.'vitals.inc.php');\nadmin_authenticate(AT_ADMIN_PRIV_MODULES);\nrequire(AT_INCLUDE_PATH.'../mods/_core/modules/classes/ModuleListParser.class.php');\nrequire_once(AT_INCLUDE_PATH.'../mods/_core/file_manager/filemanager.inc.php');\n// delete all folders and files in $dir\n\n\nfunction clear_dir($dir)\n{\n\tif ($dh = opendir($dir)) \n\t{\n\t\twhile (($file = readdir($dh)) !== false)\n\t\t{\n\t\t\tif (($file == '.') || ($file == '..'))\n\t\t\t\tcontinue;\n\n\t\t\tif (is_dir($dir.$file)) \n\t\t\t\tclr_dir($dir.$file);\n\t\t\telse \n\t\t\t\tunlink($dir.$file);\n\t\t}\n\t\t\n\t\tclosedir($dh);\n\t}\n}\n\nset_time_limit(0);\n\n// check the connection to server update.atutor.ca\n$update_server = \"http://update.atutor.ca\"; \n$connection_test_file = $update_server . '/index.php';\n$connection = @file_get_contents($connection_test_file);\n\nif (!$connection) \n{\n\t$msg->addInfo(array('CANNOT_CONNECT_MOD_SERVER'));\n}\nelse\n{\n\t// get module list\n\t$module_folder = $update_server . '/modules/';\n\t\n\t$module_list_xml = @file_get_contents($module_folder . 'module_list.xml');\n\t\n\tif ($module_list_xml) \n\t{\n\t\t$moduleListParser = new ModuleListParser();\n\t\t$moduleListParser->parse($module_list_xml);\n\t\t$module_list_array = $moduleListParser->getParsedArray();                                   \n\n\t}\n\t// end of get module list\n\t\n\t$module_content_folder = AT_CONTENT_DIR . \"module/\";\n\t\n\tif (!is_dir($module_content_folder)) mkdir($module_content_folder);\n}\n// end of get module list\n\n$module_content_folder = AT_CONTENT_DIR . \"module/\";\n\nif (!is_dir($module_content_folder)) mkdir($module_content_folder);\n\n// Installation process\nif ((isset($_POST['install']) || isset($_POST[\"download\"]) || isset($_POST[\"version_history\"])) && !isset($_POST[\"id\"]))\n{\n\t$msg->addError('NO_ITEM_SELECTED');\n}\nelse if (isset($_POST['install']) || isset($_POST[\"download\"]) || isset($_POST[\"version_history\"]) || isset($_POST[\"install_upload\"]))\n{\n\tif ($_POST['version_history'])\n\t{\n\t\theader('Location: '.AT_BASE_HREF.'mods/_core/modules/version_history.php?id='.$_POST[\"id\"]);\n\t\texit;\n\t}\n\n\t// install and download\n\tif ($_POST[\"install_upload\"])\n\t\t$module_zip_file = $_FILES['modulefile']['tmp_name'];\n\telse\n\t\t$module_zip_file = $module_folder . $module_list_array[$_POST[\"id\"]]['history'][0]['location'].$module_list_array[$_POST[\"id\"]]['history'][0]['filename'];\n\t\t\n\t$file_content = file_get_contents($module_zip_file);\n\n\tif (!$file_content & ($_POST['install'] || $_POST['download']))\n\t{\n\t\t$msg->addError('FILE_NOT_EXIST');\n\t}\n\telse\n\t{\n\t\tif ($_POST['install'] || $_POST['install_upload'])\n\t\t{\n\t\t\tclear_dir($module_content_folder);\n\t\t\t\n\t\t\t// download zip file from update.atutor.ca and write into module content folder\n\t\t\tif ($_POST[\"install_upload\"])\n\t\t\t\t$local_module_zip_file = $module_content_folder . $_FILES['modulefile']['name'];\n\t\t\telse\n\t\t\t\t$local_module_zip_file = $module_content_folder. $module_list_array[$_POST[\"id\"]]['history'][0]['filename'];\n\t\t\t\n\t\t\t$fp = fopen($local_module_zip_file, \"w\");\n\t\t\tfwrite($fp, $file_content);\n\t\t\tfclose($fp);\n\t\t\t\n\t\t\t// unzip uploaded file to module's content directory\n\t\t\tinclude_once(AT_INCLUDE_PATH . '/classes/pclzip.lib.php');\n\t\t\t\n\t\t\t$archive = new PclZip($local_module_zip_file);\n\t\t\n\t\t\tif ($archive->extract(PCLZIP_OPT_PATH, $module_content_folder) == 0)\n\t\t\t{\n\t\t\t\tclear_dir($module_content_folder);\n\t\t\t\t$msg->addError('CANNOT_UNZIP');\n\t\t\t}\n\t\t\n\t\t\tif (!$msg->containsErrors())\n\t\t\t{\n\t\t\t\t// find unzip module folder name\n\t\t\t\tclearstatcache();\n\t\t\t\t\n\t\t\t\tif ($dh = opendir($module_content_folder)) \n\t\t\t\t{\n\t\t\t\t\twhile (($module_folder = readdir($dh)) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($module_folder <> \".\" && $module_folder <> \"..\" && is_dir($module_content_folder.$module_folder)) break;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tclosedir($dh);\n\t\t\t\t}\n\n\t\t\t\tif ($module_folder == \".\" || $module_folder == \"..\" || !isset($module_folder))\n\t\t\t\t\t$msg->addError('EMPTY_ZIP_FILE');\n\t\t\t}\n\t\t\n\t\t\t// check if the same module exists in \"mods\" folder. If exists, it has been installed\n\t\t\tif (!$msg->containsErrors())\n\t\t\t{\n\t\t\t\tif (is_dir(AT_SUBSITE_MODULE_PATH. $module_folder))\n\t\t\t\t\t$msg->addError('ALREADY_INSTALLED');\n\t\t\t}\n\n\t\t\tif (!$msg->containsErrors())\n\t\t\t{\n\t\t\t        if($_POST['csrftoken'] != $_SESSION['token']){\n                        $msg->addError('ACCESS_DENIED');\n                    } else {\n                    \n                        header('Location: module_install_step_1.php?mod='.urlencode($module_folder).SEP.'new=1');                        \n                        exit;\n                    }\n\t\t\t\t//header('Location: module_install_step_1.php?mod='.urlencode($module_folder).SEP.'new=1');\n\t\t\t\t//exit;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ($_POST['download'])\n\t\t{\n\t\t\t$id = intval($_POST['id']);\n\t\t\n\t\t\theader('Content-Type: application/x-zip');\n\t\t\theader('Content-transfer-encoding: binary'); \n\t\t\theader('Content-Disposition: attachment; filename=\"'.htmlspecialchars($module_list_array[$id]['history'][0]['filename']).'\"');\n\t\t\theader('Expires: 0');\n\t\t\theader('Cache-Control: must-revalidate, post-check=0, pre-check=0');\n\t\t\theader('Pragma: public');\n\t\t\theader('Content-Length: '.strlen($file_content));\n\t\t\n\t\t\techo $file_content;\n\t\t\texit;\n\t\t}\n\t}\n}\n\nif (isset($_POST['mod'])) {\n\t$dir_name = str_replace(array('.','..'), '', $_POST['mod']);\n\n\tif (isset($_POST['install_manually'])) {\n\t// Check for potential  CSRF\n        if($_POST['csrftoken'] != $_SESSION['token']){\n                $msg->addError('ACCESS_DENIED');\n        } else {\n            header('Location: '.AT_BASE_HREF.'mods/_core/modules/module_install_step_2.php?mod='.urlencode($dir_name).SEP.'new=1'.SEP.'mod_in=1');\n            exit;\n        }\n\t}\n\n} else if (isset($_POST['install_manually'])) {\n\t$msg->addError('NO_ITEM_SELECTED');\n}\n\nif (defined('IS_SUBSITE')) {\n\t$enable_upload = false;\n\t$enable_remote_installtion = false;  // Disallow subsites to download and install the remote modules from update.atutor.ca\n} else {\n\t$enable_upload = true;\n\t$enable_remote_installtion = true;\n}\n$module_list = $moduleFactory->getModules(AT_MODULE_TYPE_EXTRA);\n$keys = array_keys($module_list);\nnatsort($keys);\n\nrequire (AT_INCLUDE_PATH.'header.inc.php');\n\nif (defined('IS_SUBSITE') && defined('SUBSITE_SUPPORT_EMAIL')) {\n\t$msg->addFeedback(array('SUBSITE_INSTALL_MODULE', SUBSITE_SUPPORT_EMAIL));\n}\n$msg->printAll();\n\n?>\n\n\n<script language=\"JavaScript\">\n<!--\n\nString.prototype.trim = function() {\n\treturn this.replace(/^\\s+|\\s+$/g,\"\");\n}\n\n// This function validates if and only if a zip file is given\nfunction validate_filename() {\n  // check file type\n  var file = document.frm_upload.modulefile.value;\n  if (!file || file.trim()=='') {\n    alert('Please give a zip file!');\n    return false;\n  }\n  \n  if(file.slice(file.lastIndexOf(\".\")).toLowerCase() != '.zip') {\n    alert('Please upload ZIP file only!');\n    return false;\n  }\n}\n\n//  End -->\n//-->\n</script>\n\n<?php \n\n// Create a list of install modules\n$installed_mods = array();\n$sql = \"SELECT dir_name FROM %smodules\";\n$rows_installed_mods = queryDB($sql, array(TABLE_PREFIX));\n\tforeach($rows_installed_mods as $installed){\n\t    array_push($installed_mods, $installed['dir_name']);\n\t}\n\t\n    // Sort the data with atutor_version descending\n\tforeach ($module_list_array as $key => $row) {\n                $version[$key]  = $row['atutor_version'];\n        }\n        $sort_versions = array_unique($version, SORT_REGULAR);\n        rsort($sort_versions);\n\n    // Add $module_list_array as the last parameter, to sort by the common key\n    // Sorts by original $module_list_array by reference, then returns true|false\n    //$sort_by_version = array_multisort($version, SORT_DESC, $module_list_array);\n\n// Create menu for filter ATutor versions\nfunction select_atversion($v=0){ \n    global $sort_versions;\n    $menu = '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"post\">'; \n    $menu.= '<select name=\"atversions\">';\n    $menu.= '<option value=\"0\">'._AT(\"all\").'</option>';\n    foreach($sort_versions as $version){\n        if($version == $v){\n            $menu .= '<option value=\"'.$version.'\" selected=\"selected\">'.$version.'</option>';\n        }else if($version == VERSION){\n            $menu .= '<option value=\"'.$version.'\" selected=\"selected\">'.$version.'</option>';\n        }else{\n            $menu .= '<option value=\"'.$version.'\" >'.$version.'</option>';\n        }\n    }\n    $menu .='</select>';\n    $menu .='<input type=\"submit\"  value=\"'. _AT('filter').'\"/></form>';\n    return $menu;\n}\n\n$savant->assign('atversions', select_atversion());\n$savant->assign('enable_upload', $enable_upload);\n$savant->assign('enable_remote_installation', $enable_remote_installtion);\n$savant->assign('keys', $keys);\n$savant->assign('module_list', $module_list);\n$savant->assign('installed_mods', $installed_mods);\n$savant->assign('module_list_array', $module_list_array);\n$savant->display('admin/modules/install_modules.tmpl.php');\nrequire (AT_INCLUDE_PATH.'footer.inc.php'); ?>\n", "<?php\nif ($this->enable_upload) {\n?>\n<form name=\"frm_upload\" enctype=\"multipart/form-data\" method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" >\n\t\n<div class=\"input-form\">\n\t\t<div class=\"row\"><?php echo _AT(\"upload_module\"); ?></div>\n\n\t\t<div class=\"row\">\n\t\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"52428800\" />\n\t\t\t<input type=\"hidden\" name=\"csrftoken\"  value=\"<?php echo $_SESSION['token'];?>\" />\n\t\t\t<input type=\"file\" name=\"modulefile\"  size=\"50\" />\n\t\t</div>\n\t\t\n\t\t<div class=\"row buttons\">\n\t\t\t<input type=\"submit\" name=\"install_upload\" value=\"<?php echo _AT('install'); ?>\" onclick=\"javascript: return validate_filename(); \" class=\"submit\" />\n\t\t\t<input type=\"hidden\" name=\"uploading\" value=\"1\" />\n\t\t</div>\n</div>\n\n</form>\n\n<?php \n} // end of enable_upload\n\nif (count($this->keys) > 0)\n{\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\" name=\"installform\">\n<input type=\"hidden\" name=\"csrftoken\"  value=\"<?php echo $_SESSION['token'];?>\" />\n<table class=\"data\" summary=\"\">\n<thead>\n<tr>\n\t<th scope=\"col\">&nbsp;</th>\n\t<th scope=\"col\"><?php echo _AT('module_name'); ?></th>\n\t<th scope=\"col\"><?php echo _AT('directory_name'); ?></th>\n\t<th scope=\"col\"><?php echo _AT('description'); ?></th>\n</tr>\n</thead>\n\n<tfoot>\n<tr>\n\t<td colspan=\"4\">\n\t\t<input type=\"submit\" name=\"install_manually\"  value=\"<?php echo _AT('install'); ?>\" />\n\t</td>\n</tr>\n</tfoot>\n\n<tbody>\n<?php if (!empty($this->keys)): ?>\n\t<?php foreach($this->keys as $dir_name) : $module =& $this->module_list[$dir_name]; ?>\n\t\t<tr onmousedown=\"document.installform['m_<?php echo $dir_name; ?>'].checked = true; rowselect(this);\" id=\"r_<?php echo $dir_name; ?>\">\n\t\t\t<td valign=\"top\"><input type=\"radio\" id=\"m_<?php echo $dir_name; ?>\" name=\"mod\" value=\"<?php echo $dir_name; ?>\" /></td>\n\t\t\t<td valign=\"top\"><label for=\"m_<?php echo $row['dir_name']; ?>\"><?php echo $module->getName(); ?></label></td>\n\t\t\t<td valign=\"top\"><code><?php echo $dir_name; ?>/</code></td>\n\t\t\t<td valign=\"top\"><?php echo $module->getDescription($_SESSION['lang']); ?></td>\n\t\t</tr>\n\t<?php endforeach; ?>\n<?php else: ?>\n\t<tr>\n\t\t<td colspan=\"4\"><?php echo _AT('none_found'); ?></td>\n\t</tr>\n<?php endif; ?>\n</tbody>\n</table>\n</form>\n<br />\n<?php \n} else {\n?>\n<div style=\"border:1p solid #F6F4DA\">\n<p> No modules available to install</p>\n\n</div>\n\n<?php } // end of displaying local modules\n\n// Disallow subsites to download and install the remote modules from update.atutor.ca\nif ($this->enable_remote_installation === true) {\n?>\n<fieldset>\n    <legend><?php echo _AT('filter'); ?></legend>\n    <div class=\"input-form\">\n    <div class=\"row\">\n    <?php echo _AT('old_module_notes'); ?>\n    </div>\n<?php \n\nif(isset($_POST['atversions'])){\n    $v = htmlspecialchars($_POST['atversions']);\n    $_SESSION['atversion'] = $_POST['atversions'];\n} elseif(isset($_SESSION['atversion'] )){\n    $v = substr($_SESSION['atversion'], 0, 3);\n} else {\n    $v = substr(VERSION, 0, 3);\n}\necho select_atversion($v); \n\n?>\n</div>\n</fieldset>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\" name=\"form\">\n<input type=\"hidden\" name=\"csrftoken\"  value=\"<?php echo $_SESSION['token'];?>\" />\n<table class=\"data\" summary=\"\">\n<thead>\n\t<tr>\n\t\t<th scope=\"col\">&nbsp;</th>\n\t\t<th scope=\"col\"><?php echo _AT('module_name');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('description');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('version');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('atutor_version_tested_with');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('maintainers');?></th>\n\t\t<th scope=\"col\"><?php echo _AT('installed').'?';?></th>\n\t</tr>\n</thead>\n\t\n<tfoot>\n<tr>\n\t<td colspan=\"7\">\n\t\t<input type=\"submit\" name=\"install\" value=\"<?php echo _AT('install'); ?>\" />\n\t\t<input type=\"submit\" name=\"download\" value=\"<?php echo _AT('download'); ?>\" />\n\t\t<input type=\"submit\" name=\"version_history\" value=\"<?php echo _AT('version_history'); ?>\" />\n\t</td>\n</tr>\n</tfoot>\n\n<tbody>\n<?php \n$num_of_modules = count($this->module_list_array);\n\nif ($num_of_modules == 0)\n{\n?>\n\n<tr>\n\t<td colspan=\"7\"><?php echo _AT('none_found'); ?></td>\n</tr>\n\n<?php \n}\nelse\n{\n\t// display modules\n\tif(is_array($this->module_list_array))\n\t{\n\t\tfor ($i=0; $i < $num_of_modules; $i++)\n\t\t{\n\t\t\t$installed = false;\n\t\t\tif(in_array($this->module_list_array[$i][\"history\"][0][\"install_folder\"],  $this->keys)){\n\t\t\t    $installed = true;\n\t\t\t} \n\t\t\t\n\t\t\tif((isset($_POST['atversions']) && $_POST['atversions'] == $this->module_list_array[$i][\"atutor_version\"]) || $_POST['atversions'] == 0){\n?>\n            <tr onmousedown=\"document.form['m<?php echo $i; ?>'].checked = true; rowselect(this);\"  id=\"r_<?php echo $i; ?>\">\n                <td><input type=\"radio\" name=\"id\" value=\"<?php echo $i; ?>\" id=\"m<?php echo $i; ?>\" <?php if ($installed) echo 'disabled=\"disabled\"'; ?> /></td>\n                <td><label for=\"m<?php echo $i; ?>\"><?php echo $this->module_list_array[$i][\"name\"]; ?></label></td>\n                <td style=\"width:45%;\"><?php echo $this->module_list_array[$i][\"description\"]; ?></td>\n                <td><?php echo $this->module_list_array[$i][\"history\"][0][\"version\"]; ?></td>\n                <td><?php echo $this->module_list_array[$i][\"atutor_version\"]; ?></td>\n                <td><?php echo $this->module_list_array[$i][\"history\"][0][\"maintainer\"]; ?></td>\n                <td><?php if ($installed) echo _AT(\"installed\"); else echo _AT(\"not_installed\"); ?></td>\n            </tr>\n\n<?php \n            } // end if\n\t\t}\n\t}\n\n?>\n</tbody>\n\n<?php \n}\n?>\n</table>\n</form>\n<?php } // end of enable_remote_installation ?>"], "filenames": ["mods/_core/modules/install_modules.php", "themes/default/admin/modules/install_modules.tmpl.php"], "buggy_code_start_loc": [20, 10], "buggy_code_end_loc": [268, 88], "fixing_code_start_loc": [21, 11], "fixing_code_end_loc": [284, 104], "type": "CWE-352", "message": "Cross-site request forgery (CSRF) vulnerability in install_modules.php in ATutor before 2.2.2 allows remote attackers to hijack the authentication of users for requests that upload arbitrary files and execute arbitrary PHP code via vectors involving a crafted zip file.", "other": {"cve": {"id": "CVE-2016-2539", "sourceIdentifier": "cve@mitre.org", "published": "2017-02-07T15:59:00.257", "lastModified": "2017-09-08T01:29:54.857", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Cross-site request forgery (CSRF) vulnerability in install_modules.php in ATutor before 2.2.2 allows remote attackers to hijack the authentication of users for requests that upload arbitrary files and execute arbitrary PHP code via vectors involving a crafted zip file."}, {"lang": "es", "value": "Vulnerabilidad de CSRF en install_modules.php en ATutor en versiones anteriores a 2.2.2 permite a atacantes remotos secuestrar la autenticaci\u00f3n de usuarios para peticiones que cargan archivos arbitrarios y ejecutan c\u00f3digo PHP arbitrario a trav\u00e9s de vectores que implican un archivo zip manipulado."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:atutor:atutor:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.2.1", "matchCriteriaId": "477E8516-CADE-4D79-85C3-E64736C03CA7"}]}]}], "references": [{"url": "https://github.com/atutor/ATutor/commit/bfc6c80c6c217c5515172f3cc949e13dfa1a92ac", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://packetstormsecurity.com/files/136109/ATutor-LMS-2.2.1-CSRF-Remote-Code-Execution.html", "source": "cve@mitre.org", "tags": ["Exploit", "Patch", "Third Party Advisory", "VDB Entry"]}, {"url": "https://www.exploit-db.com/exploits/39524/", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/atutor/ATutor/commit/bfc6c80c6c217c5515172f3cc949e13dfa1a92ac"}}