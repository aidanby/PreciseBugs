{"buggy_code": ["<?php // WonderCMS - MIT license: wondercms.com/license\r\n\r\nsession_start();\r\ndefine('version', '2.4.0');\r\nmb_internal_encoding('UTF-8');\r\n\r\nclass wCMS\r\n{\r\n\tpublic static $loggedIn = false;\r\n\tpublic static $currentPage;\r\n\tpublic static $currentPageExists = false;\r\n\tprivate static $listeners = [];\r\n\tprivate static $db = false;\r\n\r\n\tpublic static function init()\r\n\t{\r\n\t\twCMS::createDatabase(); \r\n\t\twCMS::installThemePluginAction();\r\n\t\twCMS::loadPlugins();\r\n\t\tif (isset($_SESSION['l'], $_SESSION['i']) && $_SESSION['i'] == __DIR__) {\r\n\t\t\twCMS::$loggedIn = true;\r\n\t\t}\r\n\t\twCMS::$currentPage = empty(wCMS::parseUrl()) ? wCMS::get('config', 'defaultPage') : wCMS::parseUrl();\r\n\t\tif (isset(wCMS::get('pages')->{wCMS::$currentPage})) {\r\n\t\t\twCMS::$currentPageExists = true;\r\n\t\t}\r\n\t\tif (isset($_GET['page']) && ! wCMS::$loggedIn) {\r\n\t\t\tif (wCMS::$currentPage !== wCMS::slugify($_GET['page'])) {\r\n\t\t\t\twCMS::$currentPageExists = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (wCMS::get('config','dbVersion') < '2.4.0') {\r\n\t\t\tif (! isset(wCMS::get('pages','404')->content)) {\r\n\t\t\t\twCMS::set('pages', '404', 'title', '404');\r\n\t\t\t\twCMS::set('pages', '404', 'content', '<h1>Sorry, page not found. :(</h1>');\r\n\t\t\t}\r\n\t\t\twCMS::set('config', 'dbVersion', '2.4.0');\r\n\t\t}\r\n\t\twCMS::backupAction();\r\n\t\twCMS::changePasswordAction();\r\n\t\twCMS::deleteFileThemePluginAction();\r\n\t\twCMS::deletePageAction();\r\n\t\twCMS::loginAction();\r\n\t\twCMS::logoutAction();\r\n\t\twCMS::notifyAction();\r\n\t\twCMS::saveAction();\r\n\t\twCMS::upgradeAction();\r\n\t\twCMS::uploadFileAction();\r\n\t\tif (! wCMS::$loggedIn && ! wCMS::$currentPageExists) {\r\n\t\t\theader(\"HTTP/1.1 404 Not Found\");\r\n\t\t}\r\n\t\tif (file_exists(__DIR__ . '/themes/' . wCMS::get('config', 'theme') . '/functions.php')) {\r\n\t\t\trequire_once __DIR__ . '/themes/' . wCMS::get('config', 'theme') . '/functions.php';\r\n\t\t}\r\n\t\trequire_once __DIR__ . '/themes/' . wCMS::get('config', 'theme') . '/theme.php';\r\n\t}\r\n\r\n\tprivate static function addListener($hook, $functionName)\r\n\t{\r\n\t\twCMS::$listeners[$hook][] = $functionName;\r\n\t}\r\n\r\n\tprivate static function alert($class, $message, $sticky = false)\r\n\t{\r\n\t\tif (isset($_SESSION['alert'][$class])) {\r\n\t\t\tforeach ($_SESSION['alert'][$class] as $k => $v) {\r\n\t\t\t\tif ($v['message'] == $message) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t$_SESSION['alert'][$class][] = ['class' => $class, 'message' => $message, 'sticky' => $sticky];\r\n\t}\r\n\r\n\tprivate static function alerts()\r\n\t{\r\n\t\tif (! isset($_SESSION['alert'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$session = $_SESSION['alert'];\r\n\t\t$output = '';\r\n\t\tunset($_SESSION['alert']);\r\n\t\tforeach ($session as $key => $value) {\r\n\t\t\tforeach ($value as $key => $val) {\r\n\t\t\t\t$output .= '<div class=\"alert alert-'.$val['class'].(! $val['sticky'] ? ' alert-dismissible' : '').'\">'.(! $val['sticky'] ? '<button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>' : '').$val['message'].'</div>';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn $output;\r\n\t}\r\n\r\n\tpublic static function asset($location)\r\n\t{\r\n\t\treturn wCMS::url('themes/' . wCMS::get('config', 'theme') . '/' . $location);\r\n\t}\r\n\r\n\tprivate static function backupAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$backupList = glob(__DIR__ . '/files/backup-*.zip');\r\n\t\tif (! empty($backupList)) {\r\n\t\t\twCMS::alert('danger', 'Delete backup files. (<i>Settings -> Files</i>)');\r\n\t\t}\r\n\t\t$backup = 'backup-' . date('Y-m-d-') . substr(md5(microtime()), rand(0, 26), 5) . '.zip';\r\n\t\tif (! isset($_POST['backup'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (hash_equals($_POST['token'], wCMS::generateToken())) {\r\n\t\t\tif (wCMS::zipBackup(__DIR__, __DIR__ . '/files/' . $backup) !== false) {\r\n\t\t\t\twCMS::redirect('files/'.$backup);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function block($key)\r\n\t{\r\n\t\t$blocks = wCMS::get('blocks');\r\n\t\treturn isset($blocks->{$key}) ? (wCMS::$loggedIn ? wCMS::editable($key, $blocks->{$key}->content, 'blocks') : $blocks->{$key}->content) : '';\r\n\t}\r\n\r\n\tprivate static function changePasswordAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn || ! isset($_POST['old_password']) || ! isset($_POST['new_password'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ($_SESSION['token'] === $_REQUEST['token'] && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\tif (! password_verify($_POST['old_password'], wCMS::get('config', 'password'))) {\r\n\t\t\t\twCMS::alert('danger', 'Wrong password.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t\tif (strlen($_POST['new_password']) < 4) {\r\n\t\t\t\twCMS::alert('danger', 'Password must be longer than 4 characters.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t\twCMS::set('config', 'password', password_hash($_POST['new_password'], PASSWORD_DEFAULT));\r\n\t\t\twCMS::alert('success', 'Password changed.');\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function createDatabase()\r\n\t{\r\n\t\tif (wCMS::db() !== false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\twCMS::save([\r\n\t\t\t'config' => [\r\n\t\t\t\t'dbVersion' => '2.4.0',\r\n\t\t\t\t'siteTitle' => 'Website title',\r\n\t\t\t\t'theme' => 'default',\r\n\t\t\t\t'defaultPage' => 'home',\r\n\t\t\t\t'login' => 'loginURL',\r\n\t\t\t\t'password' => password_hash('admin', PASSWORD_DEFAULT),\r\n\t\t\t\t'menuItems' => [\r\n\t\t\t\t\t'0' => [\r\n\t\t\t\t\t\t'name' => 'Home',\r\n\t\t\t\t\t\t'slug' => 'home',\r\n\t\t\t\t\t\t'visibility' => 'show'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'1' => [\r\n\t\t\t\t\t\t'name' => 'Example',\r\n\t\t\t\t\t\t'slug' => 'example',\r\n\t\t\t\t\t\t'visibility' => 'show'\r\n\t\t\t\t\t]\r\n\t\t\t\t]\r\n\t\t\t],\r\n\t\t\t'pages' => [\r\n\t\t\t\t'404' => [\r\n\t\t\t\t\t'title' => '404',\r\n\t\t\t\t\t'keywords' => '',\r\n\t\t\t\t\t'description' => '',\r\n\t\t\t\t\t'content' => '<h1>Sorry, page not found. :(</h1>'\r\n\t\t\t\t],\r\n\t\t\t\t'home' => [\r\n\t\t\t\t\t'title' => 'Home',\r\n\t\t\t\t\t'keywords' => 'Keywords, are, good, for, search, engines',\r\n\t\t\t\t\t'description' => 'A short description is also good.',\r\n\t\t\t\t\t'content' => '<h1>Website alive!</h1>\r\n\r\n<h4><a href=\"' . wCMS::url('loginURL') . '\">Click to login, the password is <b>admin</b>.</a></h4>'\r\n\t\t\t\t],\r\n\t\t\t\t'example' => [\r\n\t\t\t\t\t'title' => 'Example',\r\n\t\t\t\t\t'keywords' => 'Keywords, are, good, for, search, engines',\r\n\t\t\t\t\t'description' => 'A short description is also good.',\r\n\t\t\t\t\t'content' => '<h1>How to create new pages</h1>\r\n<p><i>Settings -> General -> Add page</i></p>\r\n\r\n<h1>How to edit anything</h1>\r\n<p>Click anywhere inside the gray dashed area to edit. Click outside the area to save.</p>\r\n\r\n<h1>How to install/update themes and plugins</h1>\r\n<p>1. Copy link/URL to ZIP file.</p>\r\n<p>2. Paste link in <i>Settings -> Themes and plugins</i> and click <i>Install/update</i>.</p>\r\n<p><a href=\"https://wondercms.com/themes\" target=\"_blank\">WonderCMS themes</a> | <a href=\"https://wondercms.com/plugins\" target=\"_blank\">WonderCMS plugins</a></p>'\r\n\t\t\t\t]\r\n\t\t\t],\r\n\t\t\t'blocks' => [\r\n\t\t\t\t'subside' => [\r\n\t\t\t\t\t'content' => '<h3>About your website</h3>\r\n\r\n<p>Website description, photo, contact information, mini map or anything else.</p>\r\n<p>This block is visible on all pages.</p>'\r\n\t\t\t\t],\r\n\t\t\t\t'footer' => [\r\n\t\t\t\t\t'content' => '&copy;' . date('Y') . ' Your website'\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t]);\r\n\t}\r\n\r\n\tprivate static function createMenuItem($content, $menu, $visibility)\r\n\t{\r\n\t\t$conf = 'config';\r\n\t\t$field = 'menuItems';\r\n\t\t$exist = is_numeric($menu);\r\n\t\t$visibility = (isset($visibility) && $visibility == \"show\") ? \"show\" : \"hide\";\r\n\t\t$content = empty($content) ? \"empty\" : str_replace(array(PHP_EOL, '<br>'), '', $content);\r\n\t\t$slug = wCMS::slugify($content);\r\n\t\t$menuCount = count(get_object_vars(wCMS::get($conf, $field)));\r\n\t\tif (! $exist) {\r\n\t\t\t$db = wCMS::db();\r\n\t\t\t$slug.= ($menu) ? \"-\" . $menuCount : \"\";\r\n\t\t\tforeach ($db->config->{$field} as $key=>$value) {\r\n\t\t\t\tif ($value->slug == $slug) {\r\n\t\t\t\t\t$slug.= \"-extra\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$db->config->{$field}->{$menuCount} = new stdClass;\r\n\t\t\twCMS::save($db);\r\n\t\t\twCMS::set($conf, $field, $menuCount, 'name', str_replace(\"-\", \" \", $content));\r\n\t\t\twCMS::set($conf, $field, $menuCount, 'slug', $slug);\r\n\t\t\twCMS::set($conf, $field, $menuCount, 'visibility', $visibility);\r\n\t\t\tif ($menu) {\r\n\t\t\t\twCMS::createPage($slug);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t$oldSlug = wCMS::get($conf, $field, $menu, 'slug');\r\n\t\t\twCMS::set($conf, $field, $menu, 'name', $content);\r\n\t\t\twCMS::set($conf, $field, $menu, 'slug', $slug);\r\n\t\t\twCMS::set($conf, $field, $menu, 'visibility', $visibility);\r\n\t\t\tif ($slug !== $oldSlug) {\r\n\t\t\t\twCMS::createPage($slug);\r\n\t\t\t\twCMS::deletePageAction($oldSlug, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function createPage($slug = false)\r\n\t{\r\n\t\t$db = wCMS::db();\r\n\t\t$db->pages->{(! $slug) ? wCMS::$currentPage : $slug} = new stdClass;\r\n\t\twCMS::save($db);\r\n\t\twCMS::set('pages', (! $slug) ? wCMS::slugify(wCMS::$currentPage) : $slug, 'title', (! $slug) ? mb_convert_case(str_replace(\"-\", \" \", wCMS::$currentPage), MB_CASE_TITLE) : mb_convert_case(str_replace(\"-\", \" \", $slug), MB_CASE_TITLE));\r\n\t\twCMS::set('pages', (! $slug) ? wCMS::slugify(wCMS::$currentPage) : $slug, 'keywords', 'Keywords, are, good, for, search, engines');\r\n\t\twCMS::set('pages', (! $slug) ? wCMS::slugify(wCMS::$currentPage) : $slug, 'description', 'A short description is also good.');\r\n\t\tif (! $slug) {\r\n\t\t\twCMS::createMenuItem(wCMS::slugify(wCMS::$currentPage), null, \"show\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function css()\r\n\t{\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\t$styles = <<<'EOT'\r\n<style>#adminPanel{background:#e5e5e5;color:#aaa;font-family:\"Lucida Sans Unicode\",Verdana;font-size:14px;text-align:left;font-variant:small-caps}#adminPanel .fontSize21{font-size:21px}.alert{margin-bottom:0}#adminPanel a{color:#aaa;outline:0;border:0;text-decoration:none;}#adminpanel .alert a{color:#fff}#adminPanel a.btn{color:#fff}#adminPanel div.editText{color:#555;font-variant:normal}#adminPanel .normalFont{font-variant:normal}div.editText{word-wrap:break-word;cursor:pointer;border:2px dashed #ccc;display:block}.cursorPointer{cursor:pointer}div.editText textarea{outline:0;border:none;width:100%;resize:none;color:inherit;font-size:inherit;font-family:inherit;background-color:transparent;overflow:hidden;box-sizing:content-box}div.editText:empty{min-height:20px}#save{color:#ccc;left:0;width:100%;height:100%;display:none;position:fixed;text-align:center;padding-top:100px;background:rgba(51,51,51,.8);z-index:2448}.change{padding-left:15px}.marginTop5{margin-top:5px}.marginTop20{margin-top:20px}.marginLeft5{margin-left:5px}.padding20{padding:20px}.subTitle{color:#aaa;font-size:24px;margin:10px 0 5px;font-variant:all-small-caps}.menu-item-hide{color:#5bc0de}.menu-item-delete,.menu-item-hide,.menu-item-show{padding:0 10%}#adminPanel .nav-tabs{border-bottom:2px solid #ddd}#adminPanel .nav-tabs>li>a::after{content:\"\";background:#1ab;height:2px;position:absolute;width:100%;left:0;bottom:-1px;transition:all 250ms ease 0s;transform:scale(0)}#adminPanel .nav-tabs>li>a::hover{border-bottom:1px solid #1ab!important:}#adminPanel .nav-tabs>li.active>a::after,#adminPanel .nav-tabs>li:hover>a::after{transform:scale(1)}.tab-content{padding:20px}#adminPanel .modal-content{background-color:#eee}#adminPanel .modal-header{border:0}#adminPanel .nav li{font-size:30px;float:none;display:inline-block}#adminPanel .tab-pane.active a.btn{color:#fff}#adminPanel .nav-tabs>li.active a,#adminPanel .tab-pane.active{background:0!important;border:0!important;color:#aaa!important}#adminPanel .clear{clear:both}@media(min-width:768px){#adminPanel .modal-xl{width:90%;max-width:1200px}}</style>\r\nEOT;\r\n\t\t\treturn wCMS::hook('css', $styles)[0];\r\n\t\t}\r\n\t\treturn wCMS::hook('css', '')[0];\r\n\t}\r\n\r\n\tpublic static function db()\r\n\t{\r\n\t\treturn file_exists(__DIR__ . '/database.js') ? json_decode(file_get_contents(__DIR__ . '/database.js')) : false;\r\n\t}\r\n\r\n\tprivate static function deleteFileThemePluginAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isset($_REQUEST['deleteFile']) || isset($_REQUEST['deleteTheme']) || isset($_REQUEST['deletePlugin']) && isset($_REQUEST['token'])) {\r\n\t\t\tif (hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t\t$deleteList = [\r\n\t\t\t\t\t[__DIR__.'/files', 'deleteFile'],\r\n\t\t\t\t\t[__DIR__.'/themes', 'deleteTheme'],\r\n\t\t\t\t\t[__DIR__.'/plugins', 'deletePlugin'],\r\n\t\t\t\t];\r\n\t\t\t\tforeach($deleteList as $entry) {\r\n\t\t\t\t\tlist($folder, $request) = $entry;\r\n\t\t\t\t\t$filename = isset($_REQUEST[$request]) ? trim($_REQUEST[$request]) : false;\r\n\t\t\t\t\tif (!$filename || empty($filename)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($filename == wCMS::get('config', 'theme')) {\r\n\t\t\t\t\t\twCMS::alert('danger', 'Cannot delete currently active theme.');\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (file_exists(\"{$folder}/{$filename}\")) {\r\n\t\t\t\t\t\twCMS::recursiveDelete(\"{$folder}/{$filename}\");\r\n\t\t\t\t\t\twCMS::alert('success', \"Deleted {$filename}.\");\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function deletePageAction($needle = false, $menu = true)\r\n\t{\r\n\t\tif (! $needle) {\r\n\t\t\tif (wCMS::$loggedIn && isset($_GET['delete']) && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t\t$needle = $_GET['delete'];\r\n\t\t\t}\r\n\t\t}\r\n\t\t$db = wCMS::db();\r\n\t\tif (isset(wCMS::get('pages')->{$needle})) {\r\n\t\t\tunset($db->pages->{$needle});\r\n\t\t}\r\n\t\tif ($menu) {\r\n\t\t\t$menuItems = json_decode(json_encode(wCMS::get('config', 'menuItems')), true);\r\n\t\t\tif (false === ($index = array_search($needle, array_column($menuItems, \"slug\")))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tunset($menuItems[$index]);\r\n\t\t\t$newMenu=array_values($menuItems);\r\n\t\t\t$db->config->menuItems = json_decode(json_encode($newMenu));\r\n\t\t}\r\n\t\twCMS::save($db);\r\n\t\twCMS::alert('success', 'Page deleted.');\r\n\t\twCMS::redirect();\r\n\t}\r\n\r\n\tpublic static function editable($id, $content, $dataTarget = '')\r\n\t{\r\n\t\treturn '<div' . ($dataTarget != '' ? ' data-target=\"' . $dataTarget . '\"' : '') . ' id=\"' . $id . '\" class=\"editText editable\">' . $content . '</div>';\r\n\t}\r\n\r\n\tpublic static function footer()\r\n\t{\r\n\t\t$output = wCMS::get('blocks', 'footer')->content . (! wCMS::$loggedIn ? ((wCMS::get('config', 'login') == 'loginURL') ? ' &bull; <a href=\"' . wCMS::url('loginURL') . '\">Login</a>' : '') : '');\r\n\t\treturn wCMS::hook('footer', $output)[0];\r\n\t}\r\n\r\n\tpublic static function generateToken()\r\n\t{\r\n\t\treturn (isset($_SESSION[\"token\"])) ? $_SESSION[\"token\"] : $_SESSION[\"token\"] = bin2hex(openssl_random_pseudo_bytes(32));\r\n\t}\r\n\r\n\tpublic static function get()\r\n\t{\r\n\t\t$numArgs = func_num_args();\r\n\t\t$args = func_get_args();\r\n\t\tif (! wCMS::$db) {\r\n\t\t\twCMS::$db = wCMS::db();\r\n\t\t}\r\n\t\tswitch ($numArgs) {\r\n\t\t\tcase 1: return wCMS::$db->{$args[0]}; break;\r\n\t\t\tcase 2: return wCMS::$db->{$args[0]}->{$args[1]}; break;\r\n\t\t\tcase 3: return wCMS::$db->{$args[0]}->{$args[1]}->{$args[2]}; break;\r\n\t\t\tcase 4: return wCMS::$db->{$args[0]}->{$args[1]}->{$args[2]}->{$args[3]}; break;\r\n\t\t\tdefault: return false; break;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function getExternalFile($url)\r\n\t{\r\n\t\t$ch = curl_init();\r\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n\t\tcurl_setopt($ch, CURLOPT_URL, $url);\r\n\t\t$data = curl_exec($ch);\r\n\t\tcurl_close($ch);\r\n\t\treturn $data;\r\n\t}\r\n\r\n\tprivate static function getMenuSettings()\r\n\t{\r\n\t\treturn wCMS::hook('getMenuSettings', $output)[0];\r\n\t}\r\n\r\n\tprivate static function getOfficialVersion()\r\n\t{\r\n\t\t$data = trim(wCMS::getExternalFile('https://raw.githubusercontent.com/robiso/wondercms/master/version'));\r\n\t\treturn $data;\r\n\t}\r\n\r\n\tprivate static function hook()\r\n\t{\r\n\t\t$numArgs = func_num_args();\r\n\t\t$args = func_get_args();\r\n\t\tif ($numArgs < 2) {\r\n\t\t\ttrigger_error('Insufficient arguments', E_USER_ERROR);\r\n\t\t}\r\n\t\t$hookName = array_shift($args);\r\n\t\tif (! isset(wCMS::$listeners[$hookName])) {\r\n\t\t\treturn $args;\r\n\t\t}\r\n\t\tforeach (wCMS::$listeners[$hookName] as $func) {\r\n\t\t\t$args = $func($args);\r\n\t\t}\r\n\t\treturn $args;\r\n\t}\r\n\r\n\tprivate static function installThemePluginAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn && ! isset($_POST['installAddon'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t$installLocation = trim(strtolower($_POST['installLocation']));\r\n\t\t\t$addonURL = $_POST['addonURL'];\r\n\t\t\t$validPaths = array(\"themes\", \"plugins\");\r\n\t\t\tif (in_array($installLocation, $validPaths) && ! empty($addonURL)) {\r\n\t\t\t\t$zipFile = __DIR__ . '/files/ZIPFromURL.zip';\r\n\t\t\t\t$zipResource = fopen($zipFile, \"w\");\r\n\t\t\t\t$ch = curl_init();\r\n\t\t\t\tcurl_setopt($ch, CURLOPT_URL, $addonURL);\r\n\t\t\t\tcurl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\r\n\t\t\t\tcurl_setopt($ch, CURLOPT_FILE, $zipResource);\r\n\t\t\t\tcurl_exec($ch);\r\n\t\t\t\tcurl_close($ch);\r\n\t\t\t\t$zip = new ZipArchive;\r\n\t\t\t\t$extractPath = __DIR__ . '/' . $installLocation . '/';\r\n\t\t\t\tif ($zip->open($zipFile) != 'true' || (stripos($addonURL, '.zip') != true)) {\r\n\t\t\t\t\twCMS::recursiveDelete(__DIR__ . '/files/ZIPFromURL.zip');\r\n\t\t\t\t\twCMS::alert('danger', 'Error opening ZIP file.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\t$zip->extractTo($extractPath);\r\n\t\t\t\t$zip->close();\r\n\t\t\t\twCMS::recursiveDelete(__DIR__ . '/files/ZIPFromURL.zip');\r\n\t\t\t\twCMS::alert('success', 'Installed successfully.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t} elseif (empty($installLocation)) {\r\n\t\t\t\twCMS::alert('danger', 'Choose between theme or plugin.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t} else {\r\n\t\t\t\twCMS::alert('danger', 'Enter URL to ZIP file.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function js()\r\n\t{\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\t$scripts = <<<'EOT'\r\n<script src=\"https://cdn.jsdelivr.net/npm/autosize@4.0.0/dist/autosize.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/taboverride@4.0.3/build/output/taboverride.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/jquery.taboverride@4.0.0/build/jquery.taboverride.min.js\"></script>\r\n<script>$(document).tabOverride(!0,\"textarea\");function nl2br(a){return(a+\"\").replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\"$1<br>$2\")}function fieldSave(a,b,c,d,e){$(\"#save\").show(),$.post(\"\",{fieldname:a,token:token,content:b,target:c,menu:d,visibility:e},function(a){}).always(function(){window.location.reload()})}var changing=!1;$(document).ready(function(){$('body').on('click','div.editText',function(){changing||(a=$(this),title=a.attr(\"title\")?title='\"'+a.attr(\"title\")+'\" ':\"\",a.hasClass(\"editable\")?a.html(\"<textarea \"+title+' id=\"'+a.attr(\"id\")+'_field\" onblur=\"fieldSave(a.attr(\\'id\\'),this.value,a.data(\\'target\\'),a.data(\\'menu\\'),a.data(\\'visibility\\'));\">'+a.html()+\"</textarea>\"):a.html(\"<textarea \"+title+' id=\"'+a.attr(\"id\")+'_field\" onblur=\"fieldSave(a.attr(\\'id\\'),nl2br(this.value),a.data(\\'target\\'),a.data(\\'menu\\'),a.data(\\'visibility\\'));\">'+a.html().replace(/<br>/gi,\"\\n\")+\"</textarea>\"),a.children(\":first\").focus(),autosize($(\"textarea\")),changing=!0)});$('body').on('click','i.menu-toggle',function(){var a=$(this),c=(setTimeout(function(){window.location.reload()},500),a.attr(\"data-menu\"));a.hasClass(\"menu-item-hide\")?(a.removeClass(\"glyphicon-eye-open menu-item-hide\").addClass(\"glyphicon-eye-close menu-item-show\"),a.attr(\"title\",\"Hide page from menu\").attr(\"data-visibility\",\"hide\"),$.post(\"\",{fieldname:\"menuItems\", token:token, content:\" \",target:\"menuItemVsbl\",menu:c,visibility:\"hide\"},function(a){})):a.hasClass(\"menu-item-show\")&&(a.removeClass(\"glyphicon-eye-close menu-item-show\").addClass(\"glyphicon-eye-open menu-item-hide\"),a.attr(\"title\",\"Show page in menu\").attr(\"data-visibility\",\"show\"),$.post(\"\",{fieldname:\"menuItems\",token:token,content:\" \",target:\"menuItemVsbl\",menu:c,visibility:\"show\"},function(a){}))}),$('body').on('click','.menu-item-add',function(){$.post(\"\",{fieldname:\"menuItems\",token:token,content:\"New page\",target:\"menuItem\",menu:\"none\",visibility:\"show\"},function(a){}).done(setTimeout(function(){window.location.reload()},500))});$('body').on('click','.menu-item-up,.menu-item-down',function(){var a=$(this),b=(a.hasClass('menu-item-up'))?'-1':'1',c=a.attr(\"data-menu\");$.post(\"\",{fieldname:\"menuItems\",token:token,content:b,target:\"menuItemOrder\",menu:c,visibility:\"\"},function(a){}).done(function(){$('#menuSettings').parent().load(\"index.php #menuSettings\",{func:\"getMenuSettings\"})})})});</script>\r\nEOT;\r\n\t\t\t$scripts .= '<script>var token = \"'.wCMS::generateToken().'\";</script>';\r\n\t\t\treturn wCMS::hook('js', $scripts)[0];\r\n\t\t}\r\n\t\treturn wCMS::hook('js', '')[0];\r\n\t}\r\n\r\n\tprivate static function loadPlugins()\r\n\t{\r\n\t\tif (! is_dir(__DIR__ . '/plugins')) {\r\n\t\t\tmkdir(__DIR__ . '/plugins');\r\n\t\t}\r\n\t\tif (! is_dir(__DIR__ . '/files')) {\r\n\t\t\tmkdir(__DIR__ . '/files');\r\n\t\t}\r\n\t\tforeach (glob(__DIR__ . '/plugins/*', GLOB_ONLYDIR) as $dir) {\r\n\t\t\tif (file_exists($dir . '/' . basename($dir) . '.php')) {\r\n\t\t\t\tinclude $dir . '/' . basename($dir) . '.php';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function loginAction()\r\n\t{\r\n\t\tif (wCMS::$currentPage !== wCMS::get('config', 'login')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t\tif ($_SERVER['REQUEST_METHOD'] !== 'POST') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$password = isset($_POST['password']) ? $_POST['password'] : '';\r\n\t\tif (password_verify($password, wCMS::get('config', 'password'))) {\r\n\t\t\t$_SESSION['l'] = true;\r\n\t\t\t$_SESSION['i'] = __DIR__;\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t\twCMS::alert('danger', 'Wrong password.');\r\n\t\twCMS::redirect(wCMS::get('config', 'login'));\r\n\t}\r\n\r\n\tpublic static function loginView()\r\n\t{\r\n\t\treturn ['title' => 'Login', 'description' => '', 'keywords' => '', 'content' => '<form action=\"' . wCMS::url(wCMS::get('config', 'login')) . '\" method=\"post\"><div class=\"input-group\"><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Login</button></span></div></form>'];\r\n\t}\r\n\r\n\tprivate static function logoutAction()\r\n\t{\r\n\t\tif (wCMS::$currentPage === 'logout' && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\tunset($_SESSION['l'], $_SESSION['i'], $_SESSION['u'], $_SESSION['token']);\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function menu()\r\n\t{\r\n\t\t$output = '';\r\n\t\tforeach (wCMS::get('config', 'menuItems') as $key => $value) {\r\n\t\t\tif ($value->visibility == \"hide\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t$output .= '<li' . (wCMS::$currentPage === $value->slug ? ' class=\"active\"' : '') . '><a href=\"' . wCMS::url($value->slug) . '\">' . $value->name . '</a></li>';\r\n\t\t}\r\n\t\treturn wCMS::hook('menu', $output)[0];\r\n\t}\r\n\r\n\tpublic static function notFoundView()\r\n\t{\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\treturn ['title' => str_replace(\"-\", \" \", wCMS::$currentPage), 'description' => '', 'keywords' => '', 'content' => '<h2>Click here to create some content</h2><p>Once you do that, this page will be eventually visited by search engines.</p>'];\r\n\t\t}\r\n\t\treturn wCMS::get('pages','404');\r\n\t}\r\n\r\n\tprivate static function notifyAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (! wCMS::$currentPageExists) {\r\n\t\t\twCMS::alert('info', '<b>This page (' . wCMS::$currentPage . ') doesn\\'t exist.</b> Click inside the content below to create it.');\r\n\t\t}\r\n\t\tif (wCMS::get('config', 'login') === 'loginURL') {\r\n\t\t\twCMS::alert('warning', 'Change the default admin login URL. (<i>Settings -> Security</i>)', true);\r\n\t\t}\r\n\t\tif (password_verify('admin', wCMS::get('config', 'password'))) {\r\n\t\t\twCMS::alert('danger', 'Change the default password. (<i>Settings -> Security</i>)', true);\r\n\t\t}\r\n\t\t$repoVersion = wCMS::getOfficialVersion();\r\n\t\tif ($repoVersion != version) {\r\n\t\t\twCMS::alert('info', '<b>New WonderCMS update available.</b><p>- Backup your website and check <a href=\"https://wondercms.com/whatsnew\" target=\"_blank\">what\\'s new</a> before updating.</p><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\" class=\"marginTop5\"><button type=\"submit\" class=\"btn btn-info\" name=\"backup\">Create backup</button><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form><form action=\"\" method=\"post\" class=\"marginTop5\"><button class=\"btn btn-info\" name=\"upgrade\">Update WonderCMS</button><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form>', true);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function orderMenuItem($content, $menu)\r\n\t{\r\n\t\t$conf = 'config';\r\n\t\t$field = 'menuItems';\r\n\t\t$content = (int) trim(htmlentities($content, ENT_QUOTES, 'UTF-8'));\r\n\t\t$move = wCMS::get($conf, $field, $menu);\r\n\t\t$menu += $content;\r\n\t\t$tmp = wCMS::get($conf, $field, $menu);\r\n\t\twCMS::set($conf, $field, $menu, 'name', $move->name);\r\n\t\twCMS::set($conf, $field, $menu, 'slug', $move->slug);\r\n\t\twCMS::set($conf, $field, $menu, 'visibility', $move->visibility);\r\n\t\t$menu -= $content;\r\n\t\twCMS::set($conf, $field, $menu, 'name', $tmp->name);\r\n\t\twCMS::set($conf, $field, $menu, 'slug', $tmp->slug);\r\n\t\twCMS::set($conf, $field, $menu, 'visibility', $tmp->visibility);\r\n\t}\r\n\r\n\tpublic static function page($key)\r\n\t{\r\n\t\t$segments = wCMS::$currentPageExists ? wCMS::get('pages', wCMS::$currentPage) : (wCMS::get('config','login') == wCMS::$currentPage ? (object) wCMS::loginView() : (object) wCMS::notFoundView());\r\n\t\t$segments->content = isset($segments->content) ? $segments->content: '<h2>Click here to create some content</h2><p>Once you do that, this page will be eventually visited by search engines.</p>';\r\n\t\t$keys = ['title' => $segments->title, 'description' => $segments->description, 'keywords' => $segments->keywords, 'content' => (wCMS::$loggedIn ? wCMS::editable('content', $segments->content, 'pages') : $segments->content)];\r\n\t\t$content = isset($keys[$key]) ? $keys[$key] : '';\r\n\t\treturn wCMS::hook('page', $content, $key)[0];\r\n\t}\r\n\t\r\n\tpublic static function parseUrl()\r\n\t{\r\n\t\tif (isset($_GET['page']) && $_GET['page'] == wCMS::get('config', 'login')) {\r\n\t\t\treturn htmlspecialchars($_GET['page'], ENT_QUOTES);\r\n\t\t}\r\n\t\treturn isset($_GET['page']) ? wCMS::slugify($_GET['page']) : '';\r\n\t}\r\n\r\n\tprivate static function recursiveDelete($file)\r\n\t{\r\n\t\tif (is_dir($file)) {\r\n\t\t\t$list = glob($file . '*', GLOB_MARK);\r\n\t\t\tforeach ($list as $dir) {\r\n\t\t\t\twCMS::recursiveDelete($dir);\r\n\t\t\t}\r\n\t\t\trmdir($file);\r\n\t\t} elseif (is_file($file)) {\r\n\t\t\tunlink($file);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function redirect($location = '')\r\n\t{\r\n\t\theader('Location: '.wCMS::url($location));\r\n\t\tdie();\r\n\t}\r\n\r\n\tpublic static function save($db)\r\n\t{\r\n\t\tfile_put_contents(__DIR__ . '/database.js', json_encode($db, JSON_FORCE_OBJECT | JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT));\r\n\t}\r\n\r\n\tprivate static function saveAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isset($_POST['fieldname']) && isset($_POST['content']) && isset($_POST['target']) && isset($_REQUEST['token']) && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\tlist($fieldname, $content, $target, $menu, $visibility) = wCMS::hook('save', $_POST['fieldname'], $_POST['content'], $_POST['target'], $_POST['menu'], $_POST['visibility']);\r\n\t\t\tif ($target === 'menuItem') {\r\n\t\t\t\twCMS::createMenuItem($content, $menu, $visibility);\r\n\t\t\t}\r\n\t\t\tif ($target === 'menuItemVsbl') {\r\n\t\t\t\twCMS::set('config', $fieldname, $menu, 'visibility', $visibility);\r\n\t\t\t}\r\n\t\t\tif ($target === 'menuItemOrder') {\r\n\t\t\t\twCMS::orderMenuItem($content, $menu);\r\n\t\t\t}\r\n\t\t\tif ($fieldname === 'defaultPage') {\r\n\t\t\t\tif (! isset(wCMS::get('pages')->$content)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($fieldname === 'login') {\r\n\t\t\t\tif (empty($content) || isset(wCMS::get('pages')->$content)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($fieldname === 'theme') {\r\n\t\t\t\tif (! is_dir(__DIR__ . '/themes/' . $content)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($target === 'config') {\r\n\t\t\t\twCMS::set('config', $fieldname, $content);\r\n\t\t\t} elseif ($target === 'blocks') {\r\n\t\t\t\twCMS::set('blocks', $fieldname, 'content', $content);\r\n\t\t\t} elseif ($target === 'pages') {\r\n\t\t\t\tif (! isset(wCMS::get('pages')->{wCMS::$currentPage})) {\r\n\t\t\t\t\twCMS::createPage();\r\n\t\t\t\t}\r\n\t\t\t\twCMS::set('pages', wCMS::$currentPage, $fieldname, $content);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function set()\r\n\t{\r\n\t\t$numArgs = func_num_args();\r\n\t\t$args = func_get_args();\r\n\t\t$db = wCMS::db();\r\n\t\tswitch ($numArgs) {\r\n\t\t\tcase 2: $db->{$args[0]} = $args[1]; break;\r\n\t\t\tcase 3: $db->{$args[0]}->{$args[1]} = $args[2]; break;\r\n\t\t\tcase 4: $db->{$args[0]}->{$args[1]}->{$args[2]} = $args[3]; break;\r\n\t\t\tcase 5: $db->{$args[0]}->{$args[1]}->{$args[2]}->{$args[3]} = $args[4]; break;\r\n\t\t}\r\n\t\twCMS::save($db);\r\n\t}\r\n\r\n\tpublic static function settings()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$fileList = array_slice(scandir(__DIR__ . '/files/'), 2);\r\n\t\t$themeList = array_slice(scandir(__DIR__ . '/themes/'), 2);\r\n\t\t$pluginList = array_slice(scandir(__DIR__ . '/plugins/'), 2);\r\n\t\t$output = '<div id=\"save\"><h2>Saving...</h2></div><div id=\"adminPanel\" class=\"container-fluid\"><div class=\"text-right padding20\"><a data-toggle=\"modal\" class=\"padding20\" href=\"#settingsModal\"><b>Settings</b></a><a href=\"' . wCMS::url('logout&token='.wCMS::generateToken()).'\">Logout</a></div><div class=\"modal\" id=\"settingsModal\"><div class=\"modal-dialog modal-xl\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button></div><div class=\"modal-body col-xs-12\"><ul class=\"nav nav-tabs text-center\" role=\"tablist\"><li role=\"presentation\" class=\"active\"><a href=\"#currentPage\" aria-controls=\"currentPage\" role=\"tab\" data-toggle=\"tab\">Current page</a></li><li role=\"presentation\"><a href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\">General</a></li><li role=\"presentation\"><a href=\"#files\" aria-controls=\"files\" role=\"tab\" data-toggle=\"tab\">Files</a></li><li role=\"presentation\"><a href=\"#themesAndPlugins\" aria-controls=\"themesAndPlugins\" role=\"tab\" data-toggle=\"tab\">Themes & plugins</a></li><li role=\"presentation\"><a href=\"#security\" aria-controls=\"security\" role=\"tab\" data-toggle=\"tab\">Security</a></li></ul><div class=\"tab-content col-md-8 col-md-offset-2\"><div role=\"tabpanel\" class=\"tab-pane active\" id=\"currentPage\">';\r\n\t\tif (wCMS::$currentPageExists) {\r\n\t\t\t$output .= '<p class=\"subTitle\">Page title</p><div class=\"change\"><div data-target=\"pages\" id=\"title\" class=\"editText\">' . (wCMS::get('pages', wCMS::$currentPage)->title != '' ? wCMS::get('pages', wCMS::$currentPage)->title : '') . '</div></div><p class=\"subTitle\">Page keywords</p><div class=\"change\"><div data-target=\"pages\" id=\"keywords\" class=\"editText\">' . (wCMS::get('pages', wCMS::$currentPage)->keywords != '' ? wCMS::get('pages', wCMS::$currentPage)->keywords : '') . '</div></div><p class=\"subTitle\">Page description</p><div class=\"change\"><div data-target=\"pages\" id=\"description\" class=\"editText\">' . (wCMS::get('pages', wCMS::$currentPage)->description != '' ? wCMS::get('pages', wCMS::$currentPage)->description : '') . '</div></div><a href=\"' . wCMS::url('?delete=' . wCMS::$currentPage . '&token=' . wCMS::generateToken()) . '\" class=\"btn btn-danger marginTop20\" title=\"Delete page\" onclick=\"return confirm(\\'Delete ' . wCMS::$currentPage . '?\\')\">Delete page (' . wCMS::$currentPage . ')</a>';\r\n\t\t} else {\r\n\t\t\t$output .= 'This page doesn\\'t exist. More settings will be displayed here after this page is created.';\r\n\t\t}\r\n\t\t$output .= '</div><div role=\"tabpanel\" class=\"tab-pane\" id=\"general\">';\r\n\t\t$items = wCMS::get('config', 'menuItems');\r\n\t\treset($items);\r\n\t\t$first = key($items);\r\n\t\tend($items);\r\n\t\t$end = key($items);\r\n\t\t$output .= '<p class=\"subTitle\">Menu</p><div><div id=\"menuSettings\" class=\"container-fluid\">';\r\n\t\tforeach ($items as $key => $value) {\r\n\t\t\t$output .= '<div class=\"row marginTop5\"><div class=\"col-xs-1 col-sm-1 text-right\"><i class=\"btn menu-toggle glyphicon' . ($value->visibility == \"show\" ? ' glyphicon-eye-open menu-item-hide' : ' glyphicon-eye-close menu-item-show') . '\" data-toggle=\"tooltip\" title=\"' . ($value->visibility == \"show\" ? 'Hide page from menu' : 'Show page in menu') . '\" data-menu=\"' . $key . '\"></i></div><div class=\"col-xs-4 col-sm-8\"><div data-target=\"menuItem\" data-menu=\"' . $key . '\" data-visibility=\"' . ($value->visibility) . '\" id=\"menuItems\" class=\"editText\">' . $value->name . '</div></div><div class=\"col-xs-2 col-sm-1 text-left\">';\r\n\t\t\t$output .= ($key === $first) ? '' : '<a class=\"glyphicon glyphicon-arrow-up toolbar menu-item-up cursorPointer\" data-toggle=\"tooltip\" data-menu=\"' . $key . '\" title=\"Move up\"></a>';\r\n\t\t\t$output .= ($key === $end) ?'' : '<a class=\"glyphicon glyphicon-arrow-down toolbar menu-item-down cursorPointer\" data-toggle=\"tooltip\" data-menu=\"' . $key . '\" title=\"Move down\"></a>';\r\n\t\t\t$output .= '</div><div class=\"col-xs-2 col-sm-1 text-left\"><a class=\"glyphicon glyphicon-link\" href=\"' . wCMS::url($value->slug) . '\" title=\"Visit page\">visit</a></div><div class=\"col-xs-2 col-sm-1 text-right\"><a href=\"' . wCMS::url('?delete=' . $value->slug.'&token='.wCMS::generateToken()) . '\" title=\"Delete page\" class=\"btn btn-xs btn-danger\" data-menu=\"' . $key . '\" onclick=\"return confirm(\\'Delete ' . $value->slug . '?\\')\">&times;</a></div></div>';\r\n\t\t}\r\n\t\t$output .= '<a class=\"menu-item-add btn btn-info marginTop20\" data-toggle=\"tooltip\" title=\"Add new page\">Add page</a></div></div><p class=\"subTitle\">Theme</p><div class=\"form-group\"><div class=\"change\"><select class=\"form-control\" name=\"themeSelect\" onchange=\"fieldSave(\\'theme\\',this.value,\\'config\\');\">';\r\n\t\tforeach (glob(__DIR__ . '/themes/*', GLOB_ONLYDIR) as $dir) {\r\n\t\t\t$output .= '<option value=\"' . basename($dir) . '\"' . (basename($dir) == wCMS::get('config', 'theme') ? ' selected' : '') . '>' . basename($dir) . ' theme'.'</option>';\r\n\t\t}\r\n\t\t$output .= '</select></div></div><p class=\"subTitle\">Main website title</p><div class=\"change\"><div data-target=\"config\" id=\"siteTitle\" class=\"editText\">' . (wCMS::get('config', 'siteTitle') != '' ? wCMS::get('config', 'siteTitle') : '') . '</div></div><p class=\"subTitle\">Page to display on homepage</p><div class=\"change\"><div data-target=\"config\" id=\"defaultPage\" class=\"editText\">' . wCMS::get('config', 'defaultPage') . '</div></div><p class=\"subTitle\">Footer</p><div class=\"change\"><div data-target=\"blocks\" id=\"footer\" class=\"editText\">' . (wCMS::get('blocks', 'footer')->content != '' ? wCMS::get('blocks', 'footer')->content : '') . '</div></div></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"files\"><p class=\"subTitle\">Upload</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\" enctype=\"multipart/form-data\"><div class=\"input-group\"><input type=\"file\" name=\"uploadFile\" class=\"form-control\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Upload</button></span><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></div></form></div><p class=\"subTitle marginTop20\">Delete files</p><div class=\"change\">';\r\n\t\tforeach ($fileList as $file) {\r\n\t\t\t$output .= '<a href=\"' . wCMS::url('?deleteFile='.$file.'&token='.wCMS::generateToken()).'\" class=\"btn btn-xs btn-danger\" onclick=\"return confirm(\\'Delete ' . $file . '?\\')\" title=\"Delete file\">&times;</a><span class=\"marginLeft5\"><a href=\"'. wCMS::url('files/'). $file.'\" class=\"normalFont\" target=\"_blank\">'.wCMS::url('files/').'<b class=\"fontSize21\">'.$file.'</b></a></span><p></p>';\r\n\t\t}\r\n\t\t$output .= '</div></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"security\"><p class=\"subTitle\">Admin login URL</p><div class=\"change\"><div data-target=\"config\" id=\"login\" class=\"editText\">' . wCMS::get('config', 'login') . '</div><p class=\"text-right marginTop5\">Important: bookmark your login URL after changing<br /><span class=\"normalFont text-right\"><b>' . wCMS::url(wCMS::get('config', 'login')) . '</b></span></div><p class=\"subTitle\">Password</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\"><div class=\"input-group\"><input type=\"password\" name=\"old_password\" class=\"form-control\" placeholder=\"Old password\"><span class=\"input-group-btn\"></span><input type=\"password\" name=\"new_password\" class=\"form-control\" placeholder=\"New password\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Change password</button></span></div><input type=\"hidden\" name=\"fieldname\" value=\"password\"><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form></div><p class=\"subTitle\">Backup</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\"><button type=\"submit\" class=\"btn btn-block btn-info\" name=\"backup\">Backup website</button><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form></div><p class=\"text-right marginTop5\"><a href=\"https://github.com/robiso/wondercms/wiki/Restore-backup#how-to-restore-a-backup-in-3-steps\" target=\"_blank\">How to restore backup</a></p></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"themesAndPlugins\"><p class=\"subTitle\">Install or update</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\"><div class=\"form-group\"><label class=\"radio-inline\"><input type=\"radio\" name=\"installLocation\" value=\"themes\">Theme</label><label class=\"radio-inline\"><input type=\"radio\" name=\"installLocation\" value=\"plugins\">Plugin</label><p></p><div class=\"input-group\"><input type=\"text\" name=\"addonURL\" class=\"form-control normalFont\" placeholder=\"Paste link/URL to ZIP file\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Install/Update</button></span></div></div><input type=\"hidden\" value=\"true\" name=\"installAddon\"><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form></div><p class=\"subTitle\">Delete themes</p><div class=\"change\">';\r\n\t\tforeach ($themeList as $theme) {\r\n\t\t\t$output .= '<a href=\"' . wCMS::url('?deleteTheme='.$theme.'&token='.wCMS::generateToken()).'\" class=\"btn btn-xs btn-danger\" onclick=\"return confirm(\\'Delete ' . $theme . '?\\')\" title=\"Delete theme\">&times;</a> '.$theme.'<p></p>';\r\n\t\t}\r\n\t\t$output .= '</div><p class=\"subTitle\">Delete plugins</p><div class=\"change\">';\r\n\t\tforeach ($pluginList as $plugin) {\r\n\t\t\t$output .= '<a href=\"' . wCMS::url('?deletePlugin='.$plugin.'&token='.wCMS::generateToken()).'\" class=\"btn btn-xs btn-danger\" onclick=\"return confirm(\\'Delete ' . $plugin . '?\\')\" title=\"Delete plugin\">&times;</a> '.$plugin.'<p></p>';\r\n\t\t}\r\n\t\t$output .= '</div></div></div></div><div class=\"modal-footer clear\"><p class=\"small\"><a href=\"https://wondercms.com\" target=\"_blank\">WonderCMS</a> '. version . ' &nbsp; <b><a href=\"https://wondercms.com/themes\" target=\"_blank\">Themes</a> &nbsp; <a href=\"https://wondercms.com/plugins\" target=\"_blank\">Plugins</a> &nbsp; <a href=\"https://wondercms.com/community\" target=\"_blank\">Community</a> &nbsp; <a href=\"https://github.com/robiso/wondercms/wiki#wondercms-documentation\" target=\"_blank\">Documentation</a> &nbsp; <a href=\"https://wondercms.com/donate\" target=\"_blank\">Donate</a></b></p></div></div></div></div></div>';\r\n\t\treturn wCMS::hook('settings', $output)[0];\r\n\t}\r\n\r\n\tpublic static function slugify($text)\r\n\t{\r\n\t\t$text = preg_replace('~[^\\\\pL\\d]+~u', '-', $text);\r\n\t\t$text = trim(htmlspecialchars(mb_strtolower($text), ENT_QUOTES), '/');\r\n\t\t$text = trim($text, '-');\r\n\t\treturn empty($text) ? \"-\" : $text;\r\n\t}\r\n\r\n\tprivate static function upgradeAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn || ! isset($_POST['upgrade'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t$contents = wCMS::getExternalFile('https://raw.githubusercontent.com/robiso/wondercms/master/index.php');\r\n\t\t\tif ($contents) {\r\n\t\t\t\tfile_put_contents(__FILE__, $contents);\r\n\t\t\t}\r\n\t\t\twCMS::alert('success', 'WonderCMS successfully updated. Wohoo!');\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function uploadFileAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn && ! isset($_FILES['uploadFile']) && ! isset($_REQUEST['token'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$allowed = ['gif' => 'image/gif', 'jpg' => 'image/jpeg', 'ico' => 'image/x-icon', 'png' => 'image/png', 'svg' => 'image/svg+xml', 'txt' => 'text/plain', 'doc' => 'application/vnd.ms-word', 'docx' => 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'kdbx' => 'application/octet-stream', 'ods' => 'application/vnd.oasis.opendocument.spreadsheet', 'odt' => 'application/vnd.oasis.opendocument.text', 'ogg' => 'application/ogg', 'pdf' => 'application/pdf', 'ppt' => 'application/vnd.ms-powerpoint', 'pptx' => 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'psd' => 'application/photoshop', 'rar' => 'application/rar', 'xls' => 'application/vnd.ms-excel', 'xlsx' => 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'zip' => 'application/zip', 'm4a' => 'audio/mp4', 'mp3' => 'audio/mpeg', 'avi' => 'video/avi', 'flv' => 'video/x-flv', 'mkv' => 'video/x-matroska', 'mov' => 'video/quicktime', 'mp4' => 'video/mp4', 'mpg' => 'video/mpeg', 'ogv' => 'video/ogg', 'webm' => 'video/webm', 'wmv' => 'video/x-ms-wmv'];\r\n\t\tif (isset($_REQUEST['token']) && hash_equals($_REQUEST['token'], wCMS::generateToken()) && isset($_FILES['uploadFile'])) {\r\n\t\t\ttry {\r\n\t\t\t\tif (! isset($_FILES['uploadFile']['error']) || is_array($_FILES['uploadFile']['error'])) {\r\n\t\t\t\t\twCMS::alert('danger', 'Invalid parameters.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\tswitch ($_FILES['uploadFile']['error']) {\r\n\t\t\t\t\tcase UPLOAD_ERR_OK:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase UPLOAD_ERR_NO_FILE:\r\n\t\t\t\t\t\twCMS::alert('danger', 'No file selected.');\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\tcase UPLOAD_ERR_INI_SIZE:\r\n\t\t\t\t\tcase UPLOAD_ERR_FORM_SIZE:\r\n\t\t\t\t\t\twCMS::alert('danger', 'File too large. Change maximum upload size limit or contact your host.');\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\twCMS::alert('danger', 'Unknown error.');\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\t$mimeType = '';\r\n\t\t\t\tif (class_exists('finfo')) {\r\n\t\t\t\t\t$finfo = new finfo(FILEINFO_MIME_TYPE);\r\n\t\t\t\t\t$mimeType = $finfo->file($_FILES['uploadFile']['tmp_name']);\r\n\t\t\t\t} elseif (function_exists('mime_content_type')) {\r\n\t\t\t\t\t$mimeType = mime_content_type($_FILES['uploadFile']['tmp_name']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$ext = strtolower(array_pop(explode('.', $_FILES['uploadFile']['name'])));\r\n\t\t\t\t\tif (array_key_exists($ext, $allowed)) {\r\n\t\t\t\t\t\t$mimeType = $allowed[$ext];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (false === $ext = array_search($mimeType, $allowed, true)) {\r\n\t\t\t\t\twCMS::alert('danger', 'File format is not allowed.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\tif (! move_uploaded_file($_FILES['uploadFile']['tmp_name'], sprintf(__DIR__ . '/files/%s', $_FILES['uploadFile']['name']))) {\r\n\t\t\t\t\twCMS::alert('danger', 'Failed to move uploaded file.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\twCMS::alert('success', 'File uploaded.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t} catch (RuntimeException $e) {\r\n\t\t\t\twCMS::alert('danger', 'Error: ' . $e->getMessage());\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function url($location = '')\r\n\t{\r\n\t\treturn 'http' . (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on' ? 's' : '') . '://' . $_SERVER['SERVER_NAME'] . ((($_SERVER['SERVER_PORT'] == '80') || ($_SERVER['SERVER_PORT'] == '443')) ? '' : ':' . $_SERVER['SERVER_PORT']) . ((dirname($_SERVER['SCRIPT_NAME']) == '/') ? '' : dirname($_SERVER['SCRIPT_NAME'])) . '/' . $location;\r\n\t}\r\n\r\n\tprivate static function zipBackup($source, $destination)\r\n\t{\r\n\t\tif (extension_loaded('zip')) {\r\n\t\t\tif (file_exists($source)) {\r\n\t\t\t\t$zip = new ZipArchive();\r\n\t\t\t\tif ($zip->open($destination, ZIPARCHIVE::CREATE)) {\r\n\t\t\t\t\t$source = realpath($source);\r\n\t\t\t\t\tif (is_dir($source)) {\r\n\t\t\t\t\t\t$iterator = new RecursiveDirectoryIterator($source);\r\n\t\t\t\t\t\t$iterator->setFlags(RecursiveDirectoryIterator::SKIP_DOTS);\r\n\t\t\t\t\t\t$files = new RecursiveIteratorIterator($iterator, RecursiveIteratorIterator::SELF_FIRST);\r\n\t\t\t\t\t\tforeach ($files as $file) {\r\n\t\t\t\t\t\t\t$file = realpath($file);\r\n\t\t\t\t\t\t\tif (is_dir($file)) {\r\n\t\t\t\t\t\t\t\t$zip->addEmptyDir(str_replace($source . '/', '', $file . '/'));\r\n\t\t\t\t\t\t\t} elseif (is_file($file)) {\r\n\t\t\t\t\t\t\t\t$zip->addFromString(str_replace($source . '/', '', $file), file_get_contents($file));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} elseif (is_file($source)) {\r\n\t\t\t\t\t\t$zip->addFromString(basename($source), file_get_contents($source));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn $zip->close();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nwCMS::init();\r\n"], "fixing_code": ["<?php // WonderCMS - MIT license: wondercms.com/license\r\n\r\nsession_start();\r\ndefine('version', '2.4.1');\r\nmb_internal_encoding('UTF-8');\r\n\r\nclass wCMS\r\n{\r\n\tpublic static $loggedIn = false;\r\n\tpublic static $currentPage;\r\n\tpublic static $currentPageExists = false;\r\n\tprivate static $listeners = [];\r\n\tprivate static $db = false;\r\n\r\n\tpublic static function init()\r\n\t{\r\n\t\twCMS::createDatabase(); \r\n\t\twCMS::installThemePluginAction();\r\n\t\twCMS::loadPlugins();\r\n\t\tif (isset($_SESSION['l'], $_SESSION['i']) && $_SESSION['i'] == __DIR__) {\r\n\t\t\twCMS::$loggedIn = true;\r\n\t\t}\r\n\t\twCMS::$currentPage = empty(wCMS::parseUrl()) ? wCMS::get('config', 'defaultPage') : wCMS::parseUrl();\r\n\t\tif (isset(wCMS::get('pages')->{wCMS::$currentPage})) {\r\n\t\t\twCMS::$currentPageExists = true;\r\n\t\t}\r\n\t\tif (isset($_GET['page']) && ! wCMS::$loggedIn) {\r\n\t\t\tif (wCMS::$currentPage !== wCMS::slugify($_GET['page'])) {\r\n\t\t\t\twCMS::$currentPageExists = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (wCMS::get('config','dbVersion') < '2.4.0') {\r\n\t\t\tif (! isset(wCMS::get('pages','404')->content)) {\r\n\t\t\t\twCMS::set('pages', '404', 'title', '404');\r\n\t\t\t\twCMS::set('pages', '404', 'content', '<h1>Sorry, page not found. :(</h1>');\r\n\t\t\t}\r\n\t\t\twCMS::set('config', 'dbVersion', '2.4.0');\r\n\t\t}\r\n\t\twCMS::backupAction();\r\n\t\twCMS::changePasswordAction();\r\n\t\twCMS::deleteFileThemePluginAction();\r\n\t\twCMS::deletePageAction();\r\n\t\twCMS::loginAction();\r\n\t\twCMS::logoutAction();\r\n\t\twCMS::notifyAction();\r\n\t\twCMS::saveAction();\r\n\t\twCMS::upgradeAction();\r\n\t\twCMS::uploadFileAction();\r\n\t\tif (! wCMS::$loggedIn && ! wCMS::$currentPageExists) {\r\n\t\t\theader(\"HTTP/1.1 404 Not Found\");\r\n\t\t}\r\n\t\tif (file_exists(__DIR__ . '/themes/' . wCMS::get('config', 'theme') . '/functions.php')) {\r\n\t\t\trequire_once __DIR__ . '/themes/' . wCMS::get('config', 'theme') . '/functions.php';\r\n\t\t}\r\n\t\trequire_once __DIR__ . '/themes/' . wCMS::get('config', 'theme') . '/theme.php';\r\n\t}\r\n\r\n\tprivate static function addListener($hook, $functionName)\r\n\t{\r\n\t\twCMS::$listeners[$hook][] = $functionName;\r\n\t}\r\n\r\n\tprivate static function alert($class, $message, $sticky = false)\r\n\t{\r\n\t\tif (isset($_SESSION['alert'][$class])) {\r\n\t\t\tforeach ($_SESSION['alert'][$class] as $k => $v) {\r\n\t\t\t\tif ($v['message'] == $message) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t$_SESSION['alert'][$class][] = ['class' => $class, 'message' => $message, 'sticky' => $sticky];\r\n\t}\r\n\r\n\tprivate static function alerts()\r\n\t{\r\n\t\tif (! isset($_SESSION['alert'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$session = $_SESSION['alert'];\r\n\t\t$output = '';\r\n\t\tunset($_SESSION['alert']);\r\n\t\tforeach ($session as $key => $value) {\r\n\t\t\tforeach ($value as $key => $val) {\r\n\t\t\t\t$output .= '<div class=\"alert alert-'.$val['class'].(! $val['sticky'] ? ' alert-dismissible' : '').'\">'.(! $val['sticky'] ? '<button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>' : '').$val['message'].'</div>';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn $output;\r\n\t}\r\n\r\n\tpublic static function asset($location)\r\n\t{\r\n\t\treturn wCMS::url('themes/' . wCMS::get('config', 'theme') . '/' . $location);\r\n\t}\r\n\r\n\tprivate static function backupAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$backupList = glob(__DIR__ . '/files/backup-*.zip');\r\n\t\tif (! empty($backupList)) {\r\n\t\t\twCMS::alert('danger', 'Delete backup files. (<i>Settings -> Files</i>)');\r\n\t\t}\r\n\t\t$backup = 'backup-' . date('Y-m-d-') . substr(md5(microtime()), rand(0, 26), 5) . '.zip';\r\n\t\tif (! isset($_POST['backup'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (hash_equals($_POST['token'], wCMS::generateToken())) {\r\n\t\t\tif (wCMS::zipBackup(__DIR__, __DIR__ . '/files/' . $backup) !== false) {\r\n\t\t\t\twCMS::redirect('files/'.$backup);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function block($key)\r\n\t{\r\n\t\t$blocks = wCMS::get('blocks');\r\n\t\treturn isset($blocks->{$key}) ? (wCMS::$loggedIn ? wCMS::editable($key, $blocks->{$key}->content, 'blocks') : $blocks->{$key}->content) : '';\r\n\t}\r\n\r\n\tprivate static function changePasswordAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn || ! isset($_POST['old_password']) || ! isset($_POST['new_password'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ($_SESSION['token'] === $_REQUEST['token'] && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\tif (! password_verify($_POST['old_password'], wCMS::get('config', 'password'))) {\r\n\t\t\t\twCMS::alert('danger', 'Wrong password.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t\tif (strlen($_POST['new_password']) < 4) {\r\n\t\t\t\twCMS::alert('danger', 'Password must be longer than 4 characters.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t\twCMS::set('config', 'password', password_hash($_POST['new_password'], PASSWORD_DEFAULT));\r\n\t\t\twCMS::alert('success', 'Password changed.');\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function createDatabase()\r\n\t{\r\n\t\tif (wCMS::db() !== false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\twCMS::save([\r\n\t\t\t'config' => [\r\n\t\t\t\t'dbVersion' => '2.4.0',\r\n\t\t\t\t'siteTitle' => 'Website title',\r\n\t\t\t\t'theme' => 'default',\r\n\t\t\t\t'defaultPage' => 'home',\r\n\t\t\t\t'login' => 'loginURL',\r\n\t\t\t\t'password' => password_hash('admin', PASSWORD_DEFAULT),\r\n\t\t\t\t'menuItems' => [\r\n\t\t\t\t\t'0' => [\r\n\t\t\t\t\t\t'name' => 'Home',\r\n\t\t\t\t\t\t'slug' => 'home',\r\n\t\t\t\t\t\t'visibility' => 'show'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'1' => [\r\n\t\t\t\t\t\t'name' => 'Example',\r\n\t\t\t\t\t\t'slug' => 'example',\r\n\t\t\t\t\t\t'visibility' => 'show'\r\n\t\t\t\t\t]\r\n\t\t\t\t]\r\n\t\t\t],\r\n\t\t\t'pages' => [\r\n\t\t\t\t'404' => [\r\n\t\t\t\t\t'title' => '404',\r\n\t\t\t\t\t'keywords' => '',\r\n\t\t\t\t\t'description' => '',\r\n\t\t\t\t\t'content' => '<h1>Sorry, page not found. :(</h1>'\r\n\t\t\t\t],\r\n\t\t\t\t'home' => [\r\n\t\t\t\t\t'title' => 'Home',\r\n\t\t\t\t\t'keywords' => 'Keywords, are, good, for, search, engines',\r\n\t\t\t\t\t'description' => 'A short description is also good.',\r\n\t\t\t\t\t'content' => '<h1>Website alive!</h1>\r\n\r\n<h4><a href=\"' . wCMS::url('loginURL') . '\">Click to login, the password is <b>admin</b>.</a></h4>'\r\n\t\t\t\t],\r\n\t\t\t\t'example' => [\r\n\t\t\t\t\t'title' => 'Example',\r\n\t\t\t\t\t'keywords' => 'Keywords, are, good, for, search, engines',\r\n\t\t\t\t\t'description' => 'A short description is also good.',\r\n\t\t\t\t\t'content' => '<h1>How to create new pages</h1>\r\n<p><i>Settings -> General -> Add page</i></p>\r\n\r\n<h1>How to edit anything</h1>\r\n<p>Click anywhere inside the gray dashed area to edit. Click outside the area to save.</p>\r\n\r\n<h1>How to install/update themes and plugins</h1>\r\n<p>1. Copy link/URL to ZIP file.</p>\r\n<p>2. Paste link in <i>Settings -> Themes and plugins</i> and click <i>Install/update</i>.</p>\r\n<p><a href=\"https://wondercms.com/themes\" target=\"_blank\">WonderCMS themes</a> | <a href=\"https://wondercms.com/plugins\" target=\"_blank\">WonderCMS plugins</a></p>'\r\n\t\t\t\t]\r\n\t\t\t],\r\n\t\t\t'blocks' => [\r\n\t\t\t\t'subside' => [\r\n\t\t\t\t\t'content' => '<h3>About your website</h3>\r\n\r\n<p>Website description, photo, contact information, mini map or anything else.</p>\r\n<p>This block is visible on all pages.</p>'\r\n\t\t\t\t],\r\n\t\t\t\t'footer' => [\r\n\t\t\t\t\t'content' => '&copy;' . date('Y') . ' Your website'\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t]);\r\n\t}\r\n\r\n\tprivate static function createMenuItem($content, $menu, $visibility)\r\n\t{\r\n\t\t$conf = 'config';\r\n\t\t$field = 'menuItems';\r\n\t\t$exist = is_numeric($menu);\r\n\t\t$visibility = (isset($visibility) && $visibility == \"show\") ? \"show\" : \"hide\";\r\n\t\t$content = empty($content) ? \"empty\" : str_replace(array(PHP_EOL, '<br>'), '', $content);\r\n\t\t$slug = wCMS::slugify($content);\r\n\t\t$menuCount = count(get_object_vars(wCMS::get($conf, $field)));\r\n\t\tif (! $exist) {\r\n\t\t\t$db = wCMS::db();\r\n\t\t\t$slug.= ($menu) ? \"-\" . $menuCount : \"\";\r\n\t\t\tforeach ($db->config->{$field} as $key=>$value) {\r\n\t\t\t\tif ($value->slug == $slug) {\r\n\t\t\t\t\t$slug.= \"-extra\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$db->config->{$field}->{$menuCount} = new stdClass;\r\n\t\t\twCMS::save($db);\r\n\t\t\twCMS::set($conf, $field, $menuCount, 'name', str_replace(\"-\", \" \", $content));\r\n\t\t\twCMS::set($conf, $field, $menuCount, 'slug', $slug);\r\n\t\t\twCMS::set($conf, $field, $menuCount, 'visibility', $visibility);\r\n\t\t\tif ($menu) {\r\n\t\t\t\twCMS::createPage($slug);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t$oldSlug = wCMS::get($conf, $field, $menu, 'slug');\r\n\t\t\twCMS::set($conf, $field, $menu, 'name', $content);\r\n\t\t\twCMS::set($conf, $field, $menu, 'slug', $slug);\r\n\t\t\twCMS::set($conf, $field, $menu, 'visibility', $visibility);\r\n\t\t\tif ($slug !== $oldSlug) {\r\n\t\t\t\twCMS::createPage($slug);\r\n\t\t\t\twCMS::deletePageAction($oldSlug, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function createPage($slug = false)\r\n\t{\r\n\t\t$db = wCMS::db();\r\n\t\t$db->pages->{(! $slug) ? wCMS::$currentPage : $slug} = new stdClass;\r\n\t\twCMS::save($db);\r\n\t\twCMS::set('pages', (! $slug) ? wCMS::slugify(wCMS::$currentPage) : $slug, 'title', (! $slug) ? mb_convert_case(str_replace(\"-\", \" \", wCMS::$currentPage), MB_CASE_TITLE) : mb_convert_case(str_replace(\"-\", \" \", $slug), MB_CASE_TITLE));\r\n\t\twCMS::set('pages', (! $slug) ? wCMS::slugify(wCMS::$currentPage) : $slug, 'keywords', 'Keywords, are, good, for, search, engines');\r\n\t\twCMS::set('pages', (! $slug) ? wCMS::slugify(wCMS::$currentPage) : $slug, 'description', 'A short description is also good.');\r\n\t\tif (! $slug) {\r\n\t\t\twCMS::createMenuItem(wCMS::slugify(wCMS::$currentPage), null, \"show\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function css()\r\n\t{\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\t$styles = <<<'EOT'\r\n<style>#adminPanel{background:#e5e5e5;color:#aaa;font-family:\"Lucida Sans Unicode\",Verdana;font-size:14px;text-align:left;font-variant:small-caps}#adminPanel .fontSize21{font-size:21px}.alert{margin-bottom:0}#adminPanel a{color:#aaa;outline:0;border:0;text-decoration:none;}#adminpanel .alert a{color:#fff}#adminPanel a.btn{color:#fff}#adminPanel div.editText{color:#555;font-variant:normal}#adminPanel .normalFont{font-variant:normal}div.editText{word-wrap:break-word;cursor:pointer;border:2px dashed #ccc;display:block}.cursorPointer{cursor:pointer}div.editText textarea{outline:0;border:none;width:100%;resize:none;color:inherit;font-size:inherit;font-family:inherit;background-color:transparent;overflow:hidden;box-sizing:content-box}div.editText:empty{min-height:20px}#save{color:#ccc;left:0;width:100%;height:100%;display:none;position:fixed;text-align:center;padding-top:100px;background:rgba(51,51,51,.8);z-index:2448}.change{padding-left:15px}.marginTop5{margin-top:5px}.marginTop20{margin-top:20px}.marginLeft5{margin-left:5px}.padding20{padding:20px}.subTitle{color:#aaa;font-size:24px;margin:10px 0 5px;font-variant:all-small-caps}.menu-item-hide{color:#5bc0de}.menu-item-delete,.menu-item-hide,.menu-item-show{padding:0 10%}#adminPanel .nav-tabs{border-bottom:2px solid #ddd}#adminPanel .nav-tabs>li>a::after{content:\"\";background:#1ab;height:2px;position:absolute;width:100%;left:0;bottom:-1px;transition:all 250ms ease 0s;transform:scale(0)}#adminPanel .nav-tabs>li>a::hover{border-bottom:1px solid #1ab!important:}#adminPanel .nav-tabs>li.active>a::after,#adminPanel .nav-tabs>li:hover>a::after{transform:scale(1)}.tab-content{padding:20px}#adminPanel .modal-content{background-color:#eee}#adminPanel .modal-header{border:0}#adminPanel .nav li{font-size:30px;float:none;display:inline-block}#adminPanel .tab-pane.active a.btn{color:#fff}#adminPanel .nav-tabs>li.active a,#adminPanel .tab-pane.active{background:0!important;border:0!important;color:#aaa!important}#adminPanel .clear{clear:both}@media(min-width:768px){#adminPanel .modal-xl{width:90%;max-width:1200px}}</style>\r\nEOT;\r\n\t\t\treturn wCMS::hook('css', $styles)[0];\r\n\t\t}\r\n\t\treturn wCMS::hook('css', '')[0];\r\n\t}\r\n\r\n\tpublic static function db()\r\n\t{\r\n\t\treturn file_exists(__DIR__ . '/database.js') ? json_decode(file_get_contents(__DIR__ . '/database.js')) : false;\r\n\t}\r\n\r\n\tprivate static function deleteFileThemePluginAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isset($_REQUEST['deleteFile']) || isset($_REQUEST['deleteTheme']) || isset($_REQUEST['deletePlugin']) && isset($_REQUEST['token'])) {\r\n\t\t\tif (hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t\t$deleteList = [\r\n\t\t\t\t\t[__DIR__.'/files', 'deleteFile'],\r\n\t\t\t\t\t[__DIR__.'/themes', 'deleteTheme'],\r\n\t\t\t\t\t[__DIR__.'/plugins', 'deletePlugin'],\r\n\t\t\t\t];\r\n\t\t\t\tforeach($deleteList as $entry) {\r\n\t\t\t\t\tlist($folder, $request) = $entry;\r\n\t\t\t\t\t$filename = isset($_REQUEST[$request]) ? trim($_REQUEST[$request]) : false;\r\n\t\t\t\t\t$basePath = $folder . \"/\";\r\n\t\t\t\t\t$realBase = realpath($basePath);\r\n\t\t\t\t\t$userPath = $basePath . $filename;\r\n\t\t\t\t\t$realUserPath = realpath($userPath);\r\n\t\t\t\t\tif ($realUserPath != true || strpos($realUserPath, $realBase) === 0) {\r\n\t\t\t\t\t\tif (!$filename || empty($filename)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($filename == wCMS::get('config', 'theme')) {\r\n\t\t\t\t\t\t\twCMS::alert('danger', 'Cannot delete currently active theme.');\r\n\t\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (file_exists(\"{$folder}/{$filename}\")) {\r\n\t\t\t\t\t\t\twCMS::recursiveDelete(\"{$folder}/{$filename}\");\r\n\t\t\t\t\t\t\twCMS::alert('success', \"Deleted {$filename}.\");\r\n\t\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function deletePageAction($needle = false, $menu = true)\r\n\t{\r\n\t\tif (! $needle) {\r\n\t\t\tif (wCMS::$loggedIn && isset($_GET['delete']) && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t\t$needle = $_GET['delete'];\r\n\t\t\t}\r\n\t\t}\r\n\t\t$db = wCMS::db();\r\n\t\tif (isset(wCMS::get('pages')->{$needle})) {\r\n\t\t\tunset($db->pages->{$needle});\r\n\t\t}\r\n\t\tif ($menu) {\r\n\t\t\t$menuItems = json_decode(json_encode(wCMS::get('config', 'menuItems')), true);\r\n\t\t\tif (false === ($index = array_search($needle, array_column($menuItems, \"slug\")))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tunset($menuItems[$index]);\r\n\t\t\t$newMenu=array_values($menuItems);\r\n\t\t\t$db->config->menuItems = json_decode(json_encode($newMenu));\r\n\t\t}\r\n\t\twCMS::save($db);\r\n\t\twCMS::alert('success', 'Page deleted.');\r\n\t\twCMS::redirect();\r\n\t}\r\n\r\n\tpublic static function editable($id, $content, $dataTarget = '')\r\n\t{\r\n\t\treturn '<div' . ($dataTarget != '' ? ' data-target=\"' . $dataTarget . '\"' : '') . ' id=\"' . $id . '\" class=\"editText editable\">' . $content . '</div>';\r\n\t}\r\n\r\n\tpublic static function footer()\r\n\t{\r\n\t\t$output = wCMS::get('blocks', 'footer')->content . (! wCMS::$loggedIn ? ((wCMS::get('config', 'login') == 'loginURL') ? ' &bull; <a href=\"' . wCMS::url('loginURL') . '\">Login</a>' : '') : '');\r\n\t\treturn wCMS::hook('footer', $output)[0];\r\n\t}\r\n\r\n\tpublic static function generateToken()\r\n\t{\r\n\t\treturn (isset($_SESSION[\"token\"])) ? $_SESSION[\"token\"] : $_SESSION[\"token\"] = bin2hex(openssl_random_pseudo_bytes(32));\r\n\t}\r\n\r\n\tpublic static function get()\r\n\t{\r\n\t\t$numArgs = func_num_args();\r\n\t\t$args = func_get_args();\r\n\t\tif (! wCMS::$db) {\r\n\t\t\twCMS::$db = wCMS::db();\r\n\t\t}\r\n\t\tswitch ($numArgs) {\r\n\t\t\tcase 1: return wCMS::$db->{$args[0]}; break;\r\n\t\t\tcase 2: return wCMS::$db->{$args[0]}->{$args[1]}; break;\r\n\t\t\tcase 3: return wCMS::$db->{$args[0]}->{$args[1]}->{$args[2]}; break;\r\n\t\t\tcase 4: return wCMS::$db->{$args[0]}->{$args[1]}->{$args[2]}->{$args[3]}; break;\r\n\t\t\tdefault: return false; break;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function getExternalFile($url)\r\n\t{\r\n\t\t$ch = curl_init();\r\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n\t\tcurl_setopt($ch, CURLOPT_URL, $url);\r\n\t\t$data = curl_exec($ch);\r\n\t\tcurl_close($ch);\r\n\t\treturn $data;\r\n\t}\r\n\r\n\tprivate static function getMenuSettings()\r\n\t{\r\n\t\treturn wCMS::hook('getMenuSettings', $output)[0];\r\n\t}\r\n\r\n\tprivate static function getOfficialVersion()\r\n\t{\r\n\t\t$data = trim(wCMS::getExternalFile('https://raw.githubusercontent.com/robiso/wondercms/master/version'));\r\n\t\treturn $data;\r\n\t}\r\n\r\n\tprivate static function hook()\r\n\t{\r\n\t\t$numArgs = func_num_args();\r\n\t\t$args = func_get_args();\r\n\t\tif ($numArgs < 2) {\r\n\t\t\ttrigger_error('Insufficient arguments', E_USER_ERROR);\r\n\t\t}\r\n\t\t$hookName = array_shift($args);\r\n\t\tif (! isset(wCMS::$listeners[$hookName])) {\r\n\t\t\treturn $args;\r\n\t\t}\r\n\t\tforeach (wCMS::$listeners[$hookName] as $func) {\r\n\t\t\t$args = $func($args);\r\n\t\t}\r\n\t\treturn $args;\r\n\t}\r\n\r\n\tprivate static function installThemePluginAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn && ! isset($_POST['installAddon'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t$installLocation = trim(strtolower($_POST['installLocation']));\r\n\t\t\t$addonURL = $_POST['addonURL'];\r\n\t\t\t$validPaths = array(\"themes\", \"plugins\");\r\n\t\t\tif (in_array($installLocation, $validPaths) && ! empty($addonURL)) {\r\n\t\t\t\t$zipFile = __DIR__ . '/files/ZIPFromURL.zip';\r\n\t\t\t\t$zipResource = fopen($zipFile, \"w\");\r\n\t\t\t\t$ch = curl_init();\r\n\t\t\t\tcurl_setopt($ch, CURLOPT_URL, $addonURL);\r\n\t\t\t\tcurl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\r\n\t\t\t\tcurl_setopt($ch, CURLOPT_FILE, $zipResource);\r\n\t\t\t\tcurl_exec($ch);\r\n\t\t\t\tcurl_close($ch);\r\n\t\t\t\t$zip = new ZipArchive;\r\n\t\t\t\t$extractPath = __DIR__ . '/' . $installLocation . '/';\r\n\t\t\t\tif ($zip->open($zipFile) != 'true' || (stripos($addonURL, '.zip') != true)) {\r\n\t\t\t\t\twCMS::recursiveDelete(__DIR__ . '/files/ZIPFromURL.zip');\r\n\t\t\t\t\twCMS::alert('danger', 'Error opening ZIP file.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\t$zip->extractTo($extractPath);\r\n\t\t\t\t$zip->close();\r\n\t\t\t\twCMS::recursiveDelete(__DIR__ . '/files/ZIPFromURL.zip');\r\n\t\t\t\twCMS::alert('success', 'Installed successfully.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t} elseif (empty($installLocation)) {\r\n\t\t\t\twCMS::alert('danger', 'Choose between theme or plugin.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t} else {\r\n\t\t\t\twCMS::alert('danger', 'Enter URL to ZIP file.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function js()\r\n\t{\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\t$scripts = <<<'EOT'\r\n<script src=\"https://cdn.jsdelivr.net/npm/autosize@4.0.0/dist/autosize.min.js\" integrity=\"sha384-ne8qhd4dK8kbCS8Wj5TQeUmxPGohiEsOjjyycp/BBl3l3f8K11l9ggrTdNmoPkHc\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/taboverride@4.0.3/build/output/taboverride.min.js\" integrity=\"sha384-fYHyZra+saKYZN+7O59tPxgkgfujmYExoI6zUvvvrKVT1b7krdcdEpTLVJoF/ap1\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/jquery.taboverride@4.0.0/build/jquery.taboverride.min.js\" integrity=\"sha384-RU4BFEU2qmLJ+oImSowhm+0Py9sT+HUD71kZz1i0aWjBfPx+15Y1jmC8gMk1+1W4\" crossorigin=\"anonymous\"></script>\r\n<script>$(document).tabOverride(!0,\"textarea\");function nl2br(a){return(a+\"\").replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g,\"$1<br>$2\")}function fieldSave(a,b,c,d,e){$(\"#save\").show(),$.post(\"\",{fieldname:a,token:token,content:b,target:c,menu:d,visibility:e},function(a){}).always(function(){window.location.reload()})}var changing=!1;$(document).ready(function(){$('body').on('click','div.editText',function(){changing||(a=$(this),title=a.attr(\"title\")?title='\"'+a.attr(\"title\")+'\" ':\"\",a.hasClass(\"editable\")?a.html(\"<textarea \"+title+' id=\"'+a.attr(\"id\")+'_field\" onblur=\"fieldSave(a.attr(\\'id\\'),this.value,a.data(\\'target\\'),a.data(\\'menu\\'),a.data(\\'visibility\\'));\">'+a.html()+\"</textarea>\"):a.html(\"<textarea \"+title+' id=\"'+a.attr(\"id\")+'_field\" onblur=\"fieldSave(a.attr(\\'id\\'),nl2br(this.value),a.data(\\'target\\'),a.data(\\'menu\\'),a.data(\\'visibility\\'));\">'+a.html().replace(/<br>/gi,\"\\n\")+\"</textarea>\"),a.children(\":first\").focus(),autosize($(\"textarea\")),changing=!0)});$('body').on('click','i.menu-toggle',function(){var a=$(this),c=(setTimeout(function(){window.location.reload()},500),a.attr(\"data-menu\"));a.hasClass(\"menu-item-hide\")?(a.removeClass(\"glyphicon-eye-open menu-item-hide\").addClass(\"glyphicon-eye-close menu-item-show\"),a.attr(\"title\",\"Hide page from menu\").attr(\"data-visibility\",\"hide\"),$.post(\"\",{fieldname:\"menuItems\", token:token, content:\" \",target:\"menuItemVsbl\",menu:c,visibility:\"hide\"},function(a){})):a.hasClass(\"menu-item-show\")&&(a.removeClass(\"glyphicon-eye-close menu-item-show\").addClass(\"glyphicon-eye-open menu-item-hide\"),a.attr(\"title\",\"Show page in menu\").attr(\"data-visibility\",\"show\"),$.post(\"\",{fieldname:\"menuItems\",token:token,content:\" \",target:\"menuItemVsbl\",menu:c,visibility:\"show\"},function(a){}))}),$('body').on('click','.menu-item-add',function(){$.post(\"\",{fieldname:\"menuItems\",token:token,content:\"New page\",target:\"menuItem\",menu:\"none\",visibility:\"show\"},function(a){}).done(setTimeout(function(){window.location.reload()},500))});$('body').on('click','.menu-item-up,.menu-item-down',function(){var a=$(this),b=(a.hasClass('menu-item-up'))?'-1':'1',c=a.attr(\"data-menu\");$.post(\"\",{fieldname:\"menuItems\",token:token,content:b,target:\"menuItemOrder\",menu:c,visibility:\"\"},function(a){}).done(function(){$('#menuSettings').parent().load(\"index.php #menuSettings\",{func:\"getMenuSettings\"})})})});</script>\r\nEOT;\r\n\t\t\t$scripts .= '<script>var token = \"'.wCMS::generateToken().'\";</script>';\r\n\t\t\treturn wCMS::hook('js', $scripts)[0];\r\n\t\t}\r\n\t\treturn wCMS::hook('js', '')[0];\r\n\t}\r\n\r\n\tprivate static function loadPlugins()\r\n\t{\r\n\t\tif (! is_dir(__DIR__ . '/plugins')) {\r\n\t\t\tmkdir(__DIR__ . '/plugins');\r\n\t\t}\r\n\t\tif (! is_dir(__DIR__ . '/files')) {\r\n\t\t\tmkdir(__DIR__ . '/files');\r\n\t\t}\r\n\t\tforeach (glob(__DIR__ . '/plugins/*', GLOB_ONLYDIR) as $dir) {\r\n\t\t\tif (file_exists($dir . '/' . basename($dir) . '.php')) {\r\n\t\t\t\tinclude $dir . '/' . basename($dir) . '.php';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function loginAction()\r\n\t{\r\n\t\tif (wCMS::$currentPage !== wCMS::get('config', 'login')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t\tif ($_SERVER['REQUEST_METHOD'] !== 'POST') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$password = isset($_POST['password']) ? $_POST['password'] : '';\r\n\t\tif (password_verify($password, wCMS::get('config', 'password'))) {\r\n\t\t\t$_SESSION['l'] = true;\r\n\t\t\t$_SESSION['i'] = __DIR__;\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t\twCMS::alert('danger', 'Wrong password.');\r\n\t\twCMS::redirect(wCMS::get('config', 'login'));\r\n\t}\r\n\r\n\tpublic static function loginView()\r\n\t{\r\n\t\treturn ['title' => 'Login', 'description' => '', 'keywords' => '', 'content' => '<form action=\"' . wCMS::url(wCMS::get('config', 'login')) . '\" method=\"post\"><div class=\"input-group\"><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Login</button></span></div></form>'];\r\n\t}\r\n\r\n\tprivate static function logoutAction()\r\n\t{\r\n\t\tif (wCMS::$currentPage === 'logout' && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\tunset($_SESSION['l'], $_SESSION['i'], $_SESSION['token']);\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function menu()\r\n\t{\r\n\t\t$output = '';\r\n\t\tforeach (wCMS::get('config', 'menuItems') as $key => $value) {\r\n\t\t\tif ($value->visibility == \"hide\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t$output .= '<li' . (wCMS::$currentPage === $value->slug ? ' class=\"active\"' : '') . '><a href=\"' . wCMS::url($value->slug) . '\">' . $value->name . '</a></li>';\r\n\t\t}\r\n\t\treturn wCMS::hook('menu', $output)[0];\r\n\t}\r\n\r\n\tpublic static function notFoundView()\r\n\t{\r\n\t\tif (wCMS::$loggedIn) {\r\n\t\t\treturn ['title' => str_replace(\"-\", \" \", wCMS::$currentPage), 'description' => '', 'keywords' => '', 'content' => '<h2>Click here to create some content</h2><p>Once you do that, this page will be eventually visited by search engines.</p>'];\r\n\t\t}\r\n\t\treturn wCMS::get('pages','404');\r\n\t}\r\n\r\n\tprivate static function notifyAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (! wCMS::$currentPageExists) {\r\n\t\t\twCMS::alert('info', '<b>This page (' . wCMS::$currentPage . ') doesn\\'t exist.</b> Click inside the content below to create it.');\r\n\t\t}\r\n\t\tif (wCMS::get('config', 'login') === 'loginURL') {\r\n\t\t\twCMS::alert('warning', 'Change the default admin login URL. (<i>Settings -> Security</i>)', true);\r\n\t\t}\r\n\t\tif (password_verify('admin', wCMS::get('config', 'password'))) {\r\n\t\t\twCMS::alert('danger', 'Change the default password. (<i>Settings -> Security</i>)', true);\r\n\t\t}\r\n\t\t$repoVersion = wCMS::getOfficialVersion();\r\n\t\tif ($repoVersion != version) {\r\n\t\t\twCMS::alert('info', '<b>New WonderCMS update available</b><p>- Backup your website and check <a href=\"https://wondercms.com/whatsnew\" target=\"_blank\"><u>what\\'s new</u></a> before updating.</p><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\" class=\"marginTop5\"><button type=\"submit\" class=\"btn btn-info\" name=\"backup\">Download backup</button><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form><form action=\"\" method=\"post\" class=\"marginTop5\"><button class=\"btn btn-info\" name=\"upgrade\">Update WonderCMS</button><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form>', true);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function orderMenuItem($content, $menu)\r\n\t{\r\n\t\t$conf = 'config';\r\n\t\t$field = 'menuItems';\r\n\t\t$content = (int) trim(htmlentities($content, ENT_QUOTES, 'UTF-8'));\r\n\t\t$move = wCMS::get($conf, $field, $menu);\r\n\t\t$menu += $content;\r\n\t\t$tmp = wCMS::get($conf, $field, $menu);\r\n\t\twCMS::set($conf, $field, $menu, 'name', $move->name);\r\n\t\twCMS::set($conf, $field, $menu, 'slug', $move->slug);\r\n\t\twCMS::set($conf, $field, $menu, 'visibility', $move->visibility);\r\n\t\t$menu -= $content;\r\n\t\twCMS::set($conf, $field, $menu, 'name', $tmp->name);\r\n\t\twCMS::set($conf, $field, $menu, 'slug', $tmp->slug);\r\n\t\twCMS::set($conf, $field, $menu, 'visibility', $tmp->visibility);\r\n\t}\r\n\r\n\tpublic static function page($key)\r\n\t{\r\n\t\t$segments = wCMS::$currentPageExists ? wCMS::get('pages', wCMS::$currentPage) : (wCMS::get('config','login') == wCMS::$currentPage ? (object) wCMS::loginView() : (object) wCMS::notFoundView());\r\n\t\t$segments->content = isset($segments->content) ? $segments->content: '<h2>Click here to create some content</h2><p>Once you do that, this page will be eventually visited by search engines.</p>';\r\n\t\t$keys = ['title' => $segments->title, 'description' => $segments->description, 'keywords' => $segments->keywords, 'content' => (wCMS::$loggedIn ? wCMS::editable('content', $segments->content, 'pages') : $segments->content)];\r\n\t\t$content = isset($keys[$key]) ? $keys[$key] : '';\r\n\t\treturn wCMS::hook('page', $content, $key)[0];\r\n\t}\r\n\t\r\n\tpublic static function parseUrl()\r\n\t{\r\n\t\tif (isset($_GET['page']) && $_GET['page'] == wCMS::get('config', 'login')) {\r\n\t\t\treturn htmlspecialchars($_GET['page'], ENT_QUOTES);\r\n\t\t}\r\n\t\treturn isset($_GET['page']) ? wCMS::slugify($_GET['page']) : '';\r\n\t}\r\n\r\n\tprivate static function recursiveDelete($file)\r\n\t{\r\n\t\tif (is_dir($file)) {\r\n\t\t\t$list = glob($file . '*', GLOB_MARK);\r\n\t\t\tforeach ($list as $dir) {\r\n\t\t\t\twCMS::recursiveDelete($dir);\r\n\t\t\t}\r\n\t\t\trmdir($file);\r\n\t\t} elseif (is_file($file)) {\r\n\t\t\tunlink($file);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function redirect($location = '')\r\n\t{\r\n\t\theader('Location: '.wCMS::url($location));\r\n\t\tdie();\r\n\t}\r\n\r\n\tpublic static function save($db)\r\n\t{\r\n\t\tfile_put_contents(__DIR__ . '/database.js', json_encode($db, JSON_FORCE_OBJECT | JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT));\r\n\t}\r\n\r\n\tprivate static function saveAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isset($_POST['fieldname']) && isset($_POST['content']) && isset($_POST['target']) && isset($_REQUEST['token']) && hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\tlist($fieldname, $content, $target, $menu, $visibility) = wCMS::hook('save', $_POST['fieldname'], $_POST['content'], $_POST['target'], $_POST['menu'], $_POST['visibility']);\r\n\t\t\tif ($target === 'menuItem') {\r\n\t\t\t\twCMS::createMenuItem($content, $menu, $visibility);\r\n\t\t\t}\r\n\t\t\tif ($target === 'menuItemVsbl') {\r\n\t\t\t\twCMS::set('config', $fieldname, $menu, 'visibility', $visibility);\r\n\t\t\t}\r\n\t\t\tif ($target === 'menuItemOrder') {\r\n\t\t\t\twCMS::orderMenuItem($content, $menu);\r\n\t\t\t}\r\n\t\t\tif ($fieldname === 'defaultPage') {\r\n\t\t\t\tif (! isset(wCMS::get('pages')->$content)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($fieldname === 'login') {\r\n\t\t\t\tif (empty($content) || isset(wCMS::get('pages')->$content)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($fieldname === 'theme') {\r\n\t\t\t\tif (! is_dir(__DIR__ . '/themes/' . $content)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($target === 'config') {\r\n\t\t\t\twCMS::set('config', $fieldname, $content);\r\n\t\t\t} elseif ($target === 'blocks') {\r\n\t\t\t\twCMS::set('blocks', $fieldname, 'content', $content);\r\n\t\t\t} elseif ($target === 'pages') {\r\n\t\t\t\tif (! isset(wCMS::get('pages')->{wCMS::$currentPage})) {\r\n\t\t\t\t\twCMS::createPage();\r\n\t\t\t\t}\r\n\t\t\t\twCMS::set('pages', wCMS::$currentPage, $fieldname, $content);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function set()\r\n\t{\r\n\t\t$numArgs = func_num_args();\r\n\t\t$args = func_get_args();\r\n\t\t$db = wCMS::db();\r\n\t\tswitch ($numArgs) {\r\n\t\t\tcase 2: $db->{$args[0]} = $args[1]; break;\r\n\t\t\tcase 3: $db->{$args[0]}->{$args[1]} = $args[2]; break;\r\n\t\t\tcase 4: $db->{$args[0]}->{$args[1]}->{$args[2]} = $args[3]; break;\r\n\t\t\tcase 5: $db->{$args[0]}->{$args[1]}->{$args[2]}->{$args[3]} = $args[4]; break;\r\n\t\t}\r\n\t\twCMS::save($db);\r\n\t}\r\n\r\n\tpublic static function settings()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$fileList = array_slice(scandir(__DIR__ . '/files/'), 2);\r\n\t\t$themeList = array_slice(scandir(__DIR__ . '/themes/'), 2);\r\n\t\t$pluginList = array_slice(scandir(__DIR__ . '/plugins/'), 2);\r\n\t\t$output = '<div id=\"save\"><h2>Saving...</h2></div><div id=\"adminPanel\" class=\"container-fluid\"><div class=\"text-right padding20\"><a data-toggle=\"modal\" class=\"padding20\" href=\"#settingsModal\"><b>Settings</b></a><a href=\"' . wCMS::url('logout&token='.wCMS::generateToken()).'\">Logout</a></div><div class=\"modal\" id=\"settingsModal\"><div class=\"modal-dialog modal-xl\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button></div><div class=\"modal-body col-xs-12\"><ul class=\"nav nav-tabs text-center\" role=\"tablist\"><li role=\"presentation\" class=\"active\"><a href=\"#currentPage\" aria-controls=\"currentPage\" role=\"tab\" data-toggle=\"tab\">Current page</a></li><li role=\"presentation\"><a href=\"#general\" aria-controls=\"general\" role=\"tab\" data-toggle=\"tab\">General</a></li><li role=\"presentation\"><a href=\"#files\" aria-controls=\"files\" role=\"tab\" data-toggle=\"tab\">Files</a></li><li role=\"presentation\"><a href=\"#themesAndPlugins\" aria-controls=\"themesAndPlugins\" role=\"tab\" data-toggle=\"tab\">Themes & plugins</a></li><li role=\"presentation\"><a href=\"#security\" aria-controls=\"security\" role=\"tab\" data-toggle=\"tab\">Security</a></li></ul><div class=\"tab-content col-md-8 col-md-offset-2\"><div role=\"tabpanel\" class=\"tab-pane active\" id=\"currentPage\">';\r\n\t\tif (wCMS::$currentPageExists) {\r\n\t\t\t$output .= '<p class=\"subTitle\">Page title</p><div class=\"change\"><div data-target=\"pages\" id=\"title\" class=\"editText\">' . (wCMS::get('pages', wCMS::$currentPage)->title != '' ? wCMS::get('pages', wCMS::$currentPage)->title : '') . '</div></div><p class=\"subTitle\">Page keywords</p><div class=\"change\"><div data-target=\"pages\" id=\"keywords\" class=\"editText\">' . (wCMS::get('pages', wCMS::$currentPage)->keywords != '' ? wCMS::get('pages', wCMS::$currentPage)->keywords : '') . '</div></div><p class=\"subTitle\">Page description</p><div class=\"change\"><div data-target=\"pages\" id=\"description\" class=\"editText\">' . (wCMS::get('pages', wCMS::$currentPage)->description != '' ? wCMS::get('pages', wCMS::$currentPage)->description : '') . '</div></div><a href=\"' . wCMS::url('?delete=' . wCMS::$currentPage . '&token=' . wCMS::generateToken()) . '\" class=\"btn btn-danger marginTop20\" title=\"Delete page\" onclick=\"return confirm(\\'Delete ' . wCMS::$currentPage . '?\\')\">Delete page (' . wCMS::$currentPage . ')</a>';\r\n\t\t} else {\r\n\t\t\t$output .= 'This page doesn\\'t exist. More settings will be displayed here after this page is created.';\r\n\t\t}\r\n\t\t$output .= '</div><div role=\"tabpanel\" class=\"tab-pane\" id=\"general\">';\r\n\t\t$items = wCMS::get('config', 'menuItems');\r\n\t\treset($items);\r\n\t\t$first = key($items);\r\n\t\tend($items);\r\n\t\t$end = key($items);\r\n\t\t$output .= '<p class=\"subTitle\">Menu</p><div><div id=\"menuSettings\" class=\"container-fluid\">';\r\n\t\tforeach ($items as $key => $value) {\r\n\t\t\t$output .= '<div class=\"row marginTop5\"><div class=\"col-xs-1 col-sm-1 text-right\"><i class=\"btn menu-toggle glyphicon' . ($value->visibility == \"show\" ? ' glyphicon-eye-open menu-item-hide' : ' glyphicon-eye-close menu-item-show') . '\" data-toggle=\"tooltip\" title=\"' . ($value->visibility == \"show\" ? 'Hide page from menu' : 'Show page in menu') . '\" data-menu=\"' . $key . '\"></i></div><div class=\"col-xs-4 col-sm-8\"><div data-target=\"menuItem\" data-menu=\"' . $key . '\" data-visibility=\"' . ($value->visibility) . '\" id=\"menuItems\" class=\"editText\">' . $value->name . '</div></div><div class=\"col-xs-2 col-sm-1 text-left\">';\r\n\t\t\t$output .= ($key === $first) ? '' : '<a class=\"glyphicon glyphicon-arrow-up toolbar menu-item-up cursorPointer\" data-toggle=\"tooltip\" data-menu=\"' . $key . '\" title=\"Move up\"></a>';\r\n\t\t\t$output .= ($key === $end) ?'' : '<a class=\"glyphicon glyphicon-arrow-down toolbar menu-item-down cursorPointer\" data-toggle=\"tooltip\" data-menu=\"' . $key . '\" title=\"Move down\"></a>';\r\n\t\t\t$output .= '</div><div class=\"col-xs-2 col-sm-1 text-left\"><a class=\"glyphicon glyphicon-link\" href=\"' . wCMS::url($value->slug) . '\" title=\"Visit page\">visit</a></div><div class=\"col-xs-2 col-sm-1 text-right\"><a href=\"' . wCMS::url('?delete=' . $value->slug.'&token='.wCMS::generateToken()) . '\" title=\"Delete page\" class=\"btn btn-xs btn-danger\" data-menu=\"' . $key . '\" onclick=\"return confirm(\\'Delete ' . $value->slug . '?\\')\">&times;</a></div></div>';\r\n\t\t}\r\n\t\t$output .= '<a class=\"menu-item-add btn btn-info marginTop20\" data-toggle=\"tooltip\" title=\"Add new page\">Add page</a></div></div><p class=\"subTitle\">Theme</p><div class=\"form-group\"><div class=\"change\"><select class=\"form-control\" name=\"themeSelect\" onchange=\"fieldSave(\\'theme\\',this.value,\\'config\\');\">';\r\n\t\tforeach (glob(__DIR__ . '/themes/*', GLOB_ONLYDIR) as $dir) {\r\n\t\t\t$output .= '<option value=\"' . basename($dir) . '\"' . (basename($dir) == wCMS::get('config', 'theme') ? ' selected' : '') . '>' . basename($dir) . ' theme'.'</option>';\r\n\t\t}\r\n\t\t$output .= '</select></div></div><p class=\"subTitle\">Main website title</p><div class=\"change\"><div data-target=\"config\" id=\"siteTitle\" class=\"editText\">' . (wCMS::get('config', 'siteTitle') != '' ? wCMS::get('config', 'siteTitle') : '') . '</div></div><p class=\"subTitle\">Page to display on homepage</p><div class=\"change\"><div data-target=\"config\" id=\"defaultPage\" class=\"editText\">' . wCMS::get('config', 'defaultPage') . '</div></div><p class=\"subTitle\">Footer</p><div class=\"change\"><div data-target=\"blocks\" id=\"footer\" class=\"editText\">' . (wCMS::get('blocks', 'footer')->content != '' ? wCMS::get('blocks', 'footer')->content : '') . '</div></div></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"files\"><p class=\"subTitle\">Upload</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\" enctype=\"multipart/form-data\"><div class=\"input-group\"><input type=\"file\" name=\"uploadFile\" class=\"form-control\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Upload</button></span><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></div></form></div><p class=\"subTitle marginTop20\">Delete files</p><div class=\"change\">';\r\n\t\tforeach ($fileList as $file) {\r\n\t\t\t$output .= '<a href=\"' . wCMS::url('?deleteFile='.$file.'&token='.wCMS::generateToken()).'\" class=\"btn btn-xs btn-danger\" onclick=\"return confirm(\\'Delete ' . $file . '?\\')\" title=\"Delete file\">&times;</a><span class=\"marginLeft5\"><a href=\"'. wCMS::url('files/'). $file.'\" class=\"normalFont\" target=\"_blank\">'.wCMS::url('files/').'<b class=\"fontSize21\">'.$file.'</b></a></span><p></p>';\r\n\t\t}\r\n\t\t$output .= '</div></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"security\"><p class=\"subTitle\">Admin login URL</p><div class=\"change\"><div data-target=\"config\" id=\"login\" class=\"editText\">' . wCMS::get('config', 'login') . '</div><p class=\"text-right marginTop5\">Important: bookmark your login URL after changing<br /><span class=\"normalFont text-right\"><b>' . wCMS::url(wCMS::get('config', 'login')) . '</b></span></div><p class=\"subTitle\">Password</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\"><div class=\"input-group\"><input type=\"password\" name=\"old_password\" class=\"form-control\" placeholder=\"Old password\"><span class=\"input-group-btn\"></span><input type=\"password\" name=\"new_password\" class=\"form-control\" placeholder=\"New password\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Change password</button></span></div><input type=\"hidden\" name=\"fieldname\" value=\"password\"><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form></div><p class=\"subTitle\">Backup</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\"><button type=\"submit\" class=\"btn btn-block btn-info\" name=\"backup\">Backup website</button><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form></div><p class=\"text-right marginTop5\"><a href=\"https://github.com/robiso/wondercms/wiki/Restore-backup#how-to-restore-a-backup-in-3-steps\" target=\"_blank\">How to restore backup</a></p></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"themesAndPlugins\"><p class=\"subTitle\">Install or update</p><div class=\"change\"><form action=\"' . wCMS::url(wCMS::$currentPage) . '\" method=\"post\"><div class=\"form-group\"><label class=\"radio-inline\"><input type=\"radio\" name=\"installLocation\" value=\"themes\">Theme</label><label class=\"radio-inline\"><input type=\"radio\" name=\"installLocation\" value=\"plugins\">Plugin</label><p></p><div class=\"input-group\"><input type=\"text\" name=\"addonURL\" class=\"form-control normalFont\" placeholder=\"Paste link/URL to ZIP file\"><span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-info\">Install/Update</button></span></div></div><input type=\"hidden\" value=\"true\" name=\"installAddon\"><input type=\"hidden\" name=\"token\" value=\"' . wCMS::generateToken() . '\"></form></div><p class=\"subTitle\">Delete themes</p><div class=\"change\">';\r\n\t\tforeach ($themeList as $theme) {\r\n\t\t\t$output .= '<a href=\"' . wCMS::url('?deleteTheme='.$theme.'&token='.wCMS::generateToken()).'\" class=\"btn btn-xs btn-danger\" onclick=\"return confirm(\\'Delete ' . $theme . '?\\')\" title=\"Delete theme\">&times;</a> '.$theme.'<p></p>';\r\n\t\t}\r\n\t\t$output .= '</div><p class=\"subTitle\">Delete plugins</p><div class=\"change\">';\r\n\t\tforeach ($pluginList as $plugin) {\r\n\t\t\t$output .= '<a href=\"' . wCMS::url('?deletePlugin='.$plugin.'&token='.wCMS::generateToken()).'\" class=\"btn btn-xs btn-danger\" onclick=\"return confirm(\\'Delete ' . $plugin . '?\\')\" title=\"Delete plugin\">&times;</a> '.$plugin.'<p></p>';\r\n\t\t}\r\n\t\t$output .= '</div></div></div></div><div class=\"modal-footer clear\"><p class=\"small\"><a href=\"https://wondercms.com\" target=\"_blank\">WonderCMS</a> '. version . ' &nbsp; <b><a href=\"https://wondercms.com/themes\" target=\"_blank\">Themes</a> &nbsp; <a href=\"https://wondercms.com/plugins\" target=\"_blank\">Plugins</a> &nbsp; <a href=\"https://wondercms.com/community\" target=\"_blank\">Community</a> &nbsp; <a href=\"https://github.com/robiso/wondercms/wiki#wondercms-documentation\" target=\"_blank\">Documentation</a> &nbsp; <a href=\"https://wondercms.com/donate\" target=\"_blank\">Donate</a></b></p></div></div></div></div></div>';\r\n\t\treturn wCMS::hook('settings', $output)[0];\r\n\t}\r\n\r\n\tpublic static function slugify($text)\r\n\t{\r\n\t\t$text = preg_replace('~[^\\\\pL\\d]+~u', '-', $text);\r\n\t\t$text = trim(htmlspecialchars(mb_strtolower($text), ENT_QUOTES), '/');\r\n\t\t$text = trim($text, '-');\r\n\t\treturn empty($text) ? \"-\" : $text;\r\n\t}\r\n\r\n\tprivate static function upgradeAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn || ! isset($_POST['upgrade'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (hash_equals($_REQUEST['token'], wCMS::generateToken())) {\r\n\t\t\t$contents = wCMS::getExternalFile('https://raw.githubusercontent.com/robiso/wondercms/master/index.php');\r\n\t\t\tif ($contents) {\r\n\t\t\t\tfile_put_contents(__FILE__, $contents);\r\n\t\t\t}\r\n\t\t\twCMS::alert('success', 'WonderCMS successfully updated. Wohoo!');\r\n\t\t\twCMS::redirect();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function uploadFileAction()\r\n\t{\r\n\t\tif (! wCMS::$loggedIn && ! isset($_FILES['uploadFile']) && ! isset($_REQUEST['token'])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$allowed = ['gif' => 'image/gif', 'jpg' => 'image/jpeg', 'ico' => 'image/x-icon', 'png' => 'image/png', 'svg' => 'image/svg+xml', 'txt' => 'text/plain', 'doc' => 'application/vnd.ms-word', 'docx' => 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'kdbx' => 'application/octet-stream', 'ods' => 'application/vnd.oasis.opendocument.spreadsheet', 'odt' => 'application/vnd.oasis.opendocument.text', 'ogg' => 'application/ogg', 'pdf' => 'application/pdf', 'ppt' => 'application/vnd.ms-powerpoint', 'pptx' => 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'psd' => 'application/photoshop', 'rar' => 'application/rar', 'xls' => 'application/vnd.ms-excel', 'xlsx' => 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'zip' => 'application/zip', 'm4a' => 'audio/mp4', 'mp3' => 'audio/mpeg', 'avi' => 'video/avi', 'flv' => 'video/x-flv', 'mkv' => 'video/x-matroska', 'mov' => 'video/quicktime', 'mp4' => 'video/mp4', 'mpg' => 'video/mpeg', 'ogv' => 'video/ogg', 'webm' => 'video/webm', 'wmv' => 'video/x-ms-wmv'];\r\n\t\tif (isset($_REQUEST['token']) && hash_equals($_REQUEST['token'], wCMS::generateToken()) && isset($_FILES['uploadFile'])) {\r\n\t\t\ttry {\r\n\t\t\t\tif (! isset($_FILES['uploadFile']['error']) || is_array($_FILES['uploadFile']['error'])) {\r\n\t\t\t\t\twCMS::alert('danger', 'Invalid parameters.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\tswitch ($_FILES['uploadFile']['error']) {\r\n\t\t\t\t\tcase UPLOAD_ERR_OK:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase UPLOAD_ERR_NO_FILE:\r\n\t\t\t\t\t\twCMS::alert('danger', 'No file selected.');\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\tcase UPLOAD_ERR_INI_SIZE:\r\n\t\t\t\t\tcase UPLOAD_ERR_FORM_SIZE:\r\n\t\t\t\t\t\twCMS::alert('danger', 'File too large. Change maximum upload size limit or contact your host.');\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\twCMS::alert('danger', 'Unknown error.');\r\n\t\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\t$mimeType = '';\r\n\t\t\t\tif (class_exists('finfo')) {\r\n\t\t\t\t\t$finfo = new finfo(FILEINFO_MIME_TYPE);\r\n\t\t\t\t\t$mimeType = $finfo->file($_FILES['uploadFile']['tmp_name']);\r\n\t\t\t\t} elseif (function_exists('mime_content_type')) {\r\n\t\t\t\t\t$mimeType = mime_content_type($_FILES['uploadFile']['tmp_name']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$ext = strtolower(array_pop(explode('.', $_FILES['uploadFile']['name'])));\r\n\t\t\t\t\tif (array_key_exists($ext, $allowed)) {\r\n\t\t\t\t\t\t$mimeType = $allowed[$ext];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (false === $ext = array_search($mimeType, $allowed, true)) {\r\n\t\t\t\t\twCMS::alert('danger', 'File format is not allowed.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\tif (! move_uploaded_file($_FILES['uploadFile']['tmp_name'], sprintf(__DIR__ . '/files/%s', $_FILES['uploadFile']['name']))) {\r\n\t\t\t\t\twCMS::alert('danger', 'Failed to move uploaded file.');\r\n\t\t\t\t\twCMS::redirect();\r\n\t\t\t\t}\r\n\t\t\t\twCMS::alert('success', 'File uploaded.');\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t} catch (RuntimeException $e) {\r\n\t\t\t\twCMS::alert('danger', 'Error: ' . $e->getMessage());\r\n\t\t\t\twCMS::redirect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function url($location = '')\r\n\t{\r\n\t\treturn 'http' . (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on' ? 's' : '') . '://' . $_SERVER['SERVER_NAME'] . ((($_SERVER['SERVER_PORT'] == '80') || ($_SERVER['SERVER_PORT'] == '443')) ? '' : ':' . $_SERVER['SERVER_PORT']) . ((dirname($_SERVER['SCRIPT_NAME']) == '/') ? '' : dirname($_SERVER['SCRIPT_NAME'])) . '/' . $location;\r\n\t}\r\n\r\n\tprivate static function zipBackup($source, $destination)\r\n\t{\r\n\t\tif (extension_loaded('zip')) {\r\n\t\t\tif (file_exists($source)) {\r\n\t\t\t\t$zip = new ZipArchive();\r\n\t\t\t\tif ($zip->open($destination, ZIPARCHIVE::CREATE)) {\r\n\t\t\t\t\t$source = realpath($source);\r\n\t\t\t\t\tif (is_dir($source)) {\r\n\t\t\t\t\t\t$iterator = new RecursiveDirectoryIterator($source);\r\n\t\t\t\t\t\t$iterator->setFlags(RecursiveDirectoryIterator::SKIP_DOTS);\r\n\t\t\t\t\t\t$files = new RecursiveIteratorIterator($iterator, RecursiveIteratorIterator::SELF_FIRST);\r\n\t\t\t\t\t\tforeach ($files as $file) {\r\n\t\t\t\t\t\t\t$file = realpath($file);\r\n\t\t\t\t\t\t\tif (is_dir($file)) {\r\n\t\t\t\t\t\t\t\t$zip->addEmptyDir(str_replace($source . '/', '', $file . '/'));\r\n\t\t\t\t\t\t\t} elseif (is_file($file)) {\r\n\t\t\t\t\t\t\t\t$zip->addFromString(str_replace($source . '/', '', $file), file_get_contents($file));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} elseif (is_file($source)) {\r\n\t\t\t\t\t\t$zip->addFromString(basename($source), file_get_contents($source));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn $zip->close();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nwCMS::init();\r\n"], "filenames": ["index.php"], "buggy_code_start_loc": [4], "buggy_code_end_loc": [548], "fixing_code_start_loc": [4], "fixing_code_end_loc": [554], "type": "CWE-22", "message": "In index.php in WonderCMS before 2.4.1, remote attackers can delete arbitrary files via directory traversal.", "other": {"cve": {"id": "CVE-2018-7172", "sourceIdentifier": "cve@mitre.org", "published": "2018-02-27T15:29:00.553", "lastModified": "2018-03-23T15:06:05.983", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In index.php in WonderCMS before 2.4.1, remote attackers can delete arbitrary files via directory traversal."}, {"lang": "es", "value": "En index.php en WonderCMS, en versiones anteriores a la 2.4.1, los atacantes remotos pueden eliminar archivos arbitrarios mediante salto de directorio."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 4.9, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wondercms:wondercms:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.4.0", "matchCriteriaId": "176BA27D-D437-4A79-9BE4-9CC7DAFA82B8"}]}]}], "references": [{"url": "http://foreversong.cn/archives/1070", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/robiso/wondercms/commit/64efdc4fd974c83cedd221b46e7c3854a81650ec", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.wondercms.com/whatsnew", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/robiso/wondercms/commit/64efdc4fd974c83cedd221b46e7c3854a81650ec"}}