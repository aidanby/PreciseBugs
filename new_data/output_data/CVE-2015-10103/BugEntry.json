{"buggy_code": ["\t/*\n\n\t\t\t\t\tThe MIT License (MIT)\n\n\t\t\t\t\tCopyright (c) 2015 8pecxstudios.com \n\n\t\t\t\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\t\t\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\t\t\t\tin the Software without restriction, including without limitation the rights\n\t\t\t\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\t\t\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\t\t\t\tfurnished to do so, subject to the following conditions:\n\n\t\t\t\t\tThe above copyright notice and this permission notice shall be included in\n\t\t\t\t\tall copies or substantial portions of the Software.\n\n\t\t\t\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\t\t\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\t\t\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\t\t\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\t\t\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\t\t\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t\t\t\t\tTHE SOFTWARE.\n\n\t\t\t\t*/\n\tvar forgetitoptions = {\n\n\t    //Load up localised content\t\n\t    init: function() {\n\t        document.getElementById('confirmHeading').textContent = chrome.i18n.getMessage(\"appOptionsConfirmations\");\n\t        document.getElementById('browsingDataHeading').textContent = chrome.i18n.getMessage(\"appOptionsClearData\");\n\t        document.getElementById('confirmDataLabel').textContent = chrome.i18n.getMessage(\"appOptionsEnableConfirmData\");\n\t        document.getElementById('clearDataFromHeading').textContent = chrome.i18n.getMessage(\"appOptionsclearDataFromHeading\");\n\t        document.getElementById('hour').textContent = chrome.i18n.getMessage(\"appOptionsDataFromHour\");\n\t        document.getElementById('day').textContent = chrome.i18n.getMessage(\"appOptionsDataFromDay\");\n\t        document.getElementById('week').textContent = chrome.i18n.getMessage(\"appOptionsDataFromWeek\");\n\t        document.getElementById('month').textContent = chrome.i18n.getMessage(\"appOptionsDataFromMonth\");\n\t        document.getElementById('forever').textContent = chrome.i18n.getMessage(\"appOptionsDataFromForever\");\n\t        document.getElementById('dataAppCacheLabel').textContent = chrome.i18n.getMessage(\"appOptionsAppCache\");\n\t        document.getElementById('dataCacheLabel').textContent = chrome.i18n.getMessage(\"appOptionsCache\");\n\t        document.getElementById('dataCookiesLabel').textContent = chrome.i18n.getMessage(\"appOptionsCookies\");\n\t        document.getElementById('dataDownloadsLabel').textContent = chrome.i18n.getMessage(\"appOptionsDownloads\");\n\t        document.getElementById('dataFileSystemsLabel').textContent = chrome.i18n.getMessage(\"appOptionsFileSystems\");\n\t        document.getElementById('dataFormDataLabel').textContent = chrome.i18n.getMessage(\"appOptionsFormData\");\n\t        document.getElementById('dataHistoryLabel').textContent = chrome.i18n.getMessage(\"appOptionsHistory\");\n\t        document.getElementById('dataIndexedDBLabel').textContent = chrome.i18n.getMessage(\"appOptionsIndexedDB\");\n\t        document.getElementById('dataLocalStorageLabel').textContent = chrome.i18n.getMessage(\"appOptionsLocalStorage\");\n\t        document.getElementById('dataPluginDataLabel').textContent = chrome.i18n.getMessage(\"appOptionsPluginData\");\n\t        document.getElementById('dataPasswordsLabel').textContent = chrome.i18n.getMessage(\"appOptionsPasswords\");\n\t        document.getElementById('dataWebSQLLabel').textContent = chrome.i18n.getMessage(\"appOptionsWebSQL\");\n\t        document.getElementById('sAll').textContent = chrome.i18n.getMessage(\"appOptionsSelectAll\");\n\t        document.getElementById('dAll').textContent = chrome.i18n.getMessage(\"appOptionsDeSelectAll\");\n\t        document.getElementById('learnMore').textContent = chrome.i18n.getMessage(\"appOptionsLearnMore\");\n\t        document.getElementById('disclaimer').textContent = chrome.i18n.getMessage(\"appOptionsDisclaimer\");\n\t        document.getElementById('enableTimedForgetLabel').textContent = chrome.i18n.getMessage(\"appOptionsEnableTimedForget\");\n\t        document.getElementById('forgetTimeHourLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetTimeHour\");\n\t        document.getElementById('forgetTimeMinuteLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetMinuteTime\");\n\t        document.getElementById('timedForgetTimeLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetTime\");\n\t        document.getElementById('forgetInLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetIn\");\n\t        document.getElementById('forgetInMinutesLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetInMinutes\");\n\t        document.getElementById('supportTitle').textContent = chrome.i18n.getMessage(\"appOptionsSupportTitle\");\n\t        document.getElementById('contact-us').textContent = chrome.i18n.getMessage(\"appOptionsContactUs\");\n\t        document.getElementById('changelog').textContent = chrome.i18n.getMessage(\"appOptionsChangeLog\");\t\t\t\n\t        \n\t\n\t\t\t forgetitoptions.forget_restore_options();\n\n\t        $('#timedForgetHour, #timedForgetMinute').change(function() {\n\t            //For hours limit to 24h as maximum.\n\t            if (document.getElementById('timedForgetHour').checked === true) {\n\t                document.getElementById('setForgetTime').setAttribute(\"max\", \"24\");\n\t            } else if (document.getElementById('timedForgetMinute').checked === true) {\n\t                document.getElementById('setForgetTime').setAttribute(\"max\", \"60\");\n\t            }\n\t        });\n\n\t        $('#enableTimedForget').change(function() {\n\t            if (document.getElementById('enableTimedForget').checked === true) {\n\t                document.getElementById('enableConfirmData').disabled = true;\n\t                document.getElementById('enableConfirmData').checked = false;\n\t                document.getElementById('confirmDataLabel').className = \"uk-text-muted\";\n\t            } else {\n\t                document.getElementById('enableConfirmData').disabled = false;\n\t                document.getElementById('confirmDataLabel').className = \"\";\n\t            }\n                chrome.browserAction.setBadgeText({\n                    text: \"\"\n                });\n\t        });\n\n\t        //Save settings as they are changed.\t\n\t        $(\"#enableConfirmData, \\\n\t\t\t#clearDataFrom, \\\n\t\t\t#dataAppCache, #dataCache, \\\n\t\t\t#dataCookies, #dataDownloads, \\\n\t\t\t#dataFileSystems, #dataFormData, \\\n\t\t\t#dataHistory, #dataIndexedDB, \\\n\t\t\t#dataLocalStorage, #dataPluginData, \\\n\t\t\t#dataPasswords, #dataWebSQL, \\\n\t\t\t#enableTimedForget, #timedForgetHour, \\\n\t\t\t#timedForgetMinute, #timedForgetTime, \\\n\t\t\t#setForgetTime\").change(function() {\n\t            forgetitoptions.forget_save_options();\n\t        });\n\t\t\t\n\t\t\t//Select|Deselect buttons\n\t\t\t$('#sAll').click(function(){\n\t\t\t\tforgetitoptions.forget_toggledata_options(true);\n\t\t\t});\n\t\t\t$('#dAll').click(function(){\n\t\t\t\tforgetitoptions.forget_toggledata_options(false);\n\t\t\t});\t\n\n\t        chrome.runtime.onMessage.addListener(\n\t            function(request, sender, sendResponse) {\n\t                document.getElementById('remainingTime').textContent = request.aTime[0] + \":\" + request.aTime[1];\n\t            }\n\t        );\n\t    },\n\t    // Saves options.\n\t    forget_save_options: function() {\n\t        try {\n\t            chrome.storage.sync.set({\n\t                confirmDataForget: document.getElementById('enableConfirmData').checked,\n\t                clearDataFrom: document.getElementById('clearDataFrom').value,\n\t                clearAllDataAppCache: document.getElementById('dataAppCache').checked,\n\t                clearAllDataCache: document.getElementById('dataCache').checked,\n\t                clearAllDataCookies: document.getElementById('dataCookies').checked,\n\t                clearAllDataDownloads: document.getElementById('dataDownloads').checked,\n\t                clearAllDataFileSystems: document.getElementById('dataFileSystems').checked,\n\t                clearAllDataFormData: document.getElementById('dataFormData').checked,\n\t                clearAllDataHistory: document.getElementById('dataHistory').checked,\n\t                clearAllDataIndexedDB: document.getElementById('dataIndexedDB').checked,\n\t                clearAllDataLocalStorage: document.getElementById('dataLocalStorage').checked,\n\t                clearAllDataPluginData: document.getElementById('dataPluginData').checked,\n\t                clearAllDataPasswords: document.getElementById('dataPasswords').checked,\n\t                clearAllDatadataWebSQL: document.getElementById('dataWebSQL').checked,\n\t                timedForget: document.getElementById('enableTimedForget').checked,\n\t                timedForgetFromType: $('input:radio[name=timedForgetTime]:checked').val(),\n\t                timedForgetFrom: document.getElementById('setForgetTime').value\n\t            });\n\t\t\t\tforgetitoptions.sendNotification(\"success\", \"Saved\", \"<i class='uk-icon-check'></i>\", true);\n\t        } catch (e) {\n\t            alert(\"An error was encountered while attempting to save settings! \" + e);\n\t        }\n\t    },\n\n\t    // Restores saved options.\n\t    forget_restore_options: function() {\n\n\t        try {\n\t            chrome.storage.sync.get({\n\t                confirmDataForget: true,\n\t                clearDataFrom: \"hour\",\n\t                clearAllDataAppCache: true,\n\t                clearAllDataCache: true,\n\t                clearAllDataCookies: true,\n\t                clearAllDataDownloads: true,\n\t                clearAllDataFileSystems: true,\n\t                clearAllDataFormData: true,\n\t                clearAllDataHistory: true,\n\t                clearAllDataIndexedDB: true,\n\t                clearAllDataLocalStorage: true,\n\t                clearAllDataPluginData: true,\n\t                clearAllDataPasswords: true,\n\t                clearAllDatadataWebSQL: true,\n\t                timedForget: false,\n\t                timedForgetFromType: 2,\n\t                timedForgetFrom: 1\n\t            }, function(key) {\n\t                document.getElementById('enableConfirmData').checked = key.confirmDataForget;\n\t                document.getElementById('clearDataFrom').value = key.clearDataFrom;\n\t                document.getElementById('dataAppCache').checked = key.clearAllDataAppCache;\n\t                document.getElementById('dataCache').checked = key.clearAllDataCache;\n\t                document.getElementById('dataCookies').checked = key.clearAllDataCookies;\n\t                document.getElementById('dataDownloads').checked = key.clearAllDataDownloads;\n\t                document.getElementById('dataFileSystems').checked = key.clearAllDataFileSystems;\n\t                document.getElementById('dataFormData').checked = key.clearAllDataFormData;\n\t                document.getElementById('dataHistory').checked = key.clearAllDataHistory;\n\t                document.getElementById('dataIndexedDB').checked = key.clearAllDataIndexedDB;\n\t                document.getElementById('dataLocalStorage').checked = key.clearAllDataLocalStorage;\n\t                document.getElementById('dataPluginData').checked = key.clearAllDataPluginData;\n\t                document.getElementById('dataPasswords').checked = key.clearAllDataPasswords;\n\t                document.getElementById('dataWebSQL').checked = key.clearAllDatadataWebSQL;\t\t\t\t\t\t\t\t\n\t                document.getElementById('enableTimedForget').checked = key.timedForget;\n\t                $('input:radio[name=\"timedForgetTime\"]').filter('[value=\"' + key.timedForgetFromType + '\"]').attr('checked', true);\n\t                //For hours limit to 24h as maximum.\n\t                if (key.timedForgetFromType == 1) {\n\t                    document.getElementById('setForgetTime').setAttribute(\"max\", \"24\");\n\t                }\n\t                document.getElementById('setForgetTime').value = key.timedForgetFrom;\n\n\t                if (document.getElementById('enableTimedForget').checked === true) {\n\t                    document.getElementById('enableConfirmData').disabled = true;\n\t                    document.getElementById('enableConfirmData').checked = false;\n\t                    document.getElementById('confirmDataLabel').className = \"uk-text-muted\";\n\t                } else {\n\t                    document.getElementById('enableConfirmData').disabled = false;\n\t                    document.getElementById('confirmDataLabel').className = \"\";\n\t                }\n\n\t            });\n\t        } catch (e) {\n\t            alert(\"An error was encountered while attempting to restore settings! \" + e);\n\t        }\n\t    },\n\n\t    //lets select or deselect all clear data items\n\t    forget_toggledata_options: function(aToggle) {\n\t        try {\n\t            document.getElementById('dataAppCache').checked = aToggle;\n\t            document.getElementById('dataCache').checked = aToggle;\n\t            document.getElementById('dataCookies').checked = aToggle;\n\t            document.getElementById('dataDownloads').checked = aToggle;\n\t            document.getElementById('dataFileSystems').checked = aToggle;\n\t            document.getElementById('dataFormData').checked = aToggle;\n\t            document.getElementById('dataHistory').checked = aToggle;\n\t            document.getElementById('dataIndexedDB').checked = aToggle;\n\t            document.getElementById('dataLocalStorage').checked = aToggle;\n\t            document.getElementById('dataPluginData').checked = aToggle;\n\t            document.getElementById('dataPasswords').checked = aToggle;\n\t            document.getElementById('dataWebSQL').checked = aToggle;\n\t\t\t\tforgetitoptions.forget_save_options();\n\t        } catch (e) {\n\t            alert(\"An error was encountered while toggling all data options! \" + e);\n\t        }\n\t    },\n\t\t\n\t\tsendNotification : function (aType, aMessage, aIcon, aUseIcon){\n\t\t\tif (aUseIcon === true){\n\t\t\t\tUIkit.notify(aIcon + \" \"+ aMessage, {status:aType, timeout : 1000, pos:'bottom-right'});\n\t\t\t}else{\n\t\t\t\tUIkit.notify(aMessage, {status:aType, timeout : 1000, pos:'bottom-right'});\n\t\t\t}\t\n\t\t}\t\n\n\t};\n\t\ndocument.addEventListener('DOMContentLoaded', function() {\n\tdocument.removeEventListener('DOMContentLoaded');\n\tforgetitoptions.init();\n});\t"], "fixing_code": ["\t/*\n\n\t\t\t\t\tThe MIT License (MIT)\n\n\t\t\t\t\tCopyright (c) 2015 8pecxstudios.com \n\n\t\t\t\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\t\t\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\t\t\t\tin the Software without restriction, including without limitation the rights\n\t\t\t\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\t\t\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\t\t\t\tfurnished to do so, subject to the following conditions:\n\n\t\t\t\t\tThe above copyright notice and this permission notice shall be included in\n\t\t\t\t\tall copies or substantial portions of the Software.\n\n\t\t\t\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\t\t\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\t\t\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\t\t\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\t\t\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\t\t\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t\t\t\t\tTHE SOFTWARE.\n\n\t\t\t\t*/\n\tvar forgetitoptions = {\n\n\t    //Load up localised content\t\n\t    init: function() {\n\t        document.getElementById('confirmHeading').textContent = chrome.i18n.getMessage(\"appOptionsConfirmations\");\n\t        document.getElementById('browsingDataHeading').textContent = chrome.i18n.getMessage(\"appOptionsClearData\");\n\t        document.getElementById('confirmDataLabel').textContent = chrome.i18n.getMessage(\"appOptionsEnableConfirmData\");\n\t        document.getElementById('clearDataFromHeading').textContent = chrome.i18n.getMessage(\"appOptionsclearDataFromHeading\");\n\t        document.getElementById('hour').textContent = chrome.i18n.getMessage(\"appOptionsDataFromHour\");\n\t        document.getElementById('day').textContent = chrome.i18n.getMessage(\"appOptionsDataFromDay\");\n\t        document.getElementById('week').textContent = chrome.i18n.getMessage(\"appOptionsDataFromWeek\");\n\t        document.getElementById('month').textContent = chrome.i18n.getMessage(\"appOptionsDataFromMonth\");\n\t        document.getElementById('forever').textContent = chrome.i18n.getMessage(\"appOptionsDataFromForever\");\n\t        document.getElementById('dataAppCacheLabel').textContent = chrome.i18n.getMessage(\"appOptionsAppCache\");\n\t        document.getElementById('dataCacheLabel').textContent = chrome.i18n.getMessage(\"appOptionsCache\");\n\t        document.getElementById('dataCookiesLabel').textContent = chrome.i18n.getMessage(\"appOptionsCookies\");\n\t        document.getElementById('dataDownloadsLabel').textContent = chrome.i18n.getMessage(\"appOptionsDownloads\");\n\t        document.getElementById('dataFileSystemsLabel').textContent = chrome.i18n.getMessage(\"appOptionsFileSystems\");\n\t        document.getElementById('dataFormDataLabel').textContent = chrome.i18n.getMessage(\"appOptionsFormData\");\n\t        document.getElementById('dataHistoryLabel').textContent = chrome.i18n.getMessage(\"appOptionsHistory\");\n\t        document.getElementById('dataIndexedDBLabel').textContent = chrome.i18n.getMessage(\"appOptionsIndexedDB\");\n\t        document.getElementById('dataLocalStorageLabel').textContent = chrome.i18n.getMessage(\"appOptionsLocalStorage\");\n\t        document.getElementById('dataPluginDataLabel').textContent = chrome.i18n.getMessage(\"appOptionsPluginData\");\n\t        document.getElementById('dataPasswordsLabel').textContent = chrome.i18n.getMessage(\"appOptionsPasswords\");\n\t        document.getElementById('dataWebSQLLabel').textContent = chrome.i18n.getMessage(\"appOptionsWebSQL\");\n\t        document.getElementById('sAll').textContent = chrome.i18n.getMessage(\"appOptionsSelectAll\");\n\t        document.getElementById('dAll').textContent = chrome.i18n.getMessage(\"appOptionsDeSelectAll\");\n\t        document.getElementById('learnMore').textContent = chrome.i18n.getMessage(\"appOptionsLearnMore\");\n\t        document.getElementById('disclaimer').textContent = chrome.i18n.getMessage(\"appOptionsDisclaimer\");\n\t        document.getElementById('enableTimedForgetLabel').textContent = chrome.i18n.getMessage(\"appOptionsEnableTimedForget\");\n\t        document.getElementById('forgetTimeHourLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetTimeHour\");\n\t        document.getElementById('forgetTimeMinuteLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetMinuteTime\");\n\t        document.getElementById('timedForgetTimeLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetTime\");\n\t        document.getElementById('forgetInLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetIn\");\n\t        document.getElementById('forgetInMinutesLabel').textContent = chrome.i18n.getMessage(\"appOptionsForgetInMinutes\");\n\t        document.getElementById('supportTitle').textContent = chrome.i18n.getMessage(\"appOptionsSupportTitle\");\n\t        document.getElementById('contact-us').textContent = chrome.i18n.getMessage(\"appOptionsContactUs\");\n\t        document.getElementById('changelog').textContent = chrome.i18n.getMessage(\"appOptionsChangeLog\");\t\t\t\n\t        \n\t\n\t\t\t forgetitoptions.forget_restore_options();\n\n\t        $('#timedForgetHour, #timedForgetMinute').change(function() {\n\t            //For hours limit to 24h as maximum.\n\t            if (document.getElementById('timedForgetHour').checked === true) {\n\t                document.getElementById('setForgetTime').setAttribute(\"max\", \"24\");\n\t            } else if (document.getElementById('timedForgetMinute').checked === true) {\n\t                document.getElementById('setForgetTime').setAttribute(\"max\", \"60\");\n\t            }\n\t        });\n\n\t        $('#enableTimedForget').change(function() {\n\t            if (document.getElementById('enableTimedForget').checked === true) {\n\t                document.getElementById('enableConfirmData').disabled = true;\n\t                document.getElementById('enableConfirmData').checked = false;\n\t                document.getElementById('confirmDataLabel').className = \"uk-text-muted\";\n\t            } else {\n\t                document.getElementById('enableConfirmData').disabled = false;\n\t                document.getElementById('confirmDataLabel').className = \"\";\n\t            }\n                chrome.browserAction.setBadgeText({\n                    text: \"\"\n                });\n\t        });\n\t\t\t\n\t\t\t//Important: setForgetTime can't be less then 1 minute (denial of service loop)\n\t\t\t$('#setForgetTime').change(function() {\n\t\t\t\tif(document.getElementById('setForgetTime').value > 0){\n\t\t\t\t\tforgetitoptions.forget_save_options();\n\t\t\t\t}else{\n\t\t\t\t\tdocument.getElementById('setForgetTime').value = 1;\n\t\t\t\t}\t\n\t\t\t});\n\t\t\t\n\t        //Save settings as they are changed.\t\n\t        $(\"#enableConfirmData, \\\n\t\t\t#clearDataFrom, \\\n\t\t\t#dataAppCache, #dataCache, \\\n\t\t\t#dataCookies, #dataDownloads, \\\n\t\t\t#dataFileSystems, #dataFormData, \\\n\t\t\t#dataHistory, #dataIndexedDB, \\\n\t\t\t#dataLocalStorage, #dataPluginData, \\\n\t\t\t#dataPasswords, #dataWebSQL, \\\n\t\t\t#enableTimedForget, #timedForgetHour, \\\n\t\t\t#timedForgetMinute, #timedForgetTime\").change(function() {\n\t            forgetitoptions.forget_save_options();\n\t        });\n\t\t\t\n\t\t\t//Select|Deselect buttons\n\t\t\t$('#sAll').click(function(){\n\t\t\t\tforgetitoptions.forget_toggledata_options(true);\n\t\t\t});\n\t\t\t$('#dAll').click(function(){\n\t\t\t\tforgetitoptions.forget_toggledata_options(false);\n\t\t\t});\t\n\n\t        chrome.runtime.onMessage.addListener(\n\t            function(request, sender, sendResponse) {\n\t                document.getElementById('remainingTime').textContent = request.aTime[0] + \":\" + request.aTime[1];\n\t            }\n\t        );\n\t    },\n\t    // Saves options.\n\t    forget_save_options: function() {\n\t        try {\n\t            chrome.storage.sync.set({\n\t                confirmDataForget: document.getElementById('enableConfirmData').checked,\n\t                clearDataFrom: document.getElementById('clearDataFrom').value,\n\t                clearAllDataAppCache: document.getElementById('dataAppCache').checked,\n\t                clearAllDataCache: document.getElementById('dataCache').checked,\n\t                clearAllDataCookies: document.getElementById('dataCookies').checked,\n\t                clearAllDataDownloads: document.getElementById('dataDownloads').checked,\n\t                clearAllDataFileSystems: document.getElementById('dataFileSystems').checked,\n\t                clearAllDataFormData: document.getElementById('dataFormData').checked,\n\t                clearAllDataHistory: document.getElementById('dataHistory').checked,\n\t                clearAllDataIndexedDB: document.getElementById('dataIndexedDB').checked,\n\t                clearAllDataLocalStorage: document.getElementById('dataLocalStorage').checked,\n\t                clearAllDataPluginData: document.getElementById('dataPluginData').checked,\n\t                clearAllDataPasswords: document.getElementById('dataPasswords').checked,\n\t                clearAllDatadataWebSQL: document.getElementById('dataWebSQL').checked,\n\t                timedForget: document.getElementById('enableTimedForget').checked,\n\t                timedForgetFromType: $('input:radio[name=timedForgetTime]:checked').val(),\n\t                timedForgetFrom: document.getElementById('setForgetTime').value\n\t            });\n\t\t\t\tforgetitoptions.sendNotification(\"success\", \"Saved\", \"<i class='uk-icon-check'></i>\", true);\n\t        } catch (e) {\n\t            alert(\"An error was encountered while attempting to save settings! \" + e);\n\t        }\n\t    },\n\n\t    // Restores saved options.\n\t    forget_restore_options: function() {\n\n\t        try {\n\t            chrome.storage.sync.get({\n\t                confirmDataForget: true,\n\t                clearDataFrom: \"hour\",\n\t                clearAllDataAppCache: true,\n\t                clearAllDataCache: true,\n\t                clearAllDataCookies: true,\n\t                clearAllDataDownloads: true,\n\t                clearAllDataFileSystems: true,\n\t                clearAllDataFormData: true,\n\t                clearAllDataHistory: true,\n\t                clearAllDataIndexedDB: true,\n\t                clearAllDataLocalStorage: true,\n\t                clearAllDataPluginData: true,\n\t                clearAllDataPasswords: true,\n\t                clearAllDatadataWebSQL: true,\n\t                timedForget: false,\n\t                timedForgetFromType: 2,\n\t                timedForgetFrom: 1\n\t            }, function(key) {\n\t                document.getElementById('enableConfirmData').checked = key.confirmDataForget;\n\t                document.getElementById('clearDataFrom').value = key.clearDataFrom;\n\t                document.getElementById('dataAppCache').checked = key.clearAllDataAppCache;\n\t                document.getElementById('dataCache').checked = key.clearAllDataCache;\n\t                document.getElementById('dataCookies').checked = key.clearAllDataCookies;\n\t                document.getElementById('dataDownloads').checked = key.clearAllDataDownloads;\n\t                document.getElementById('dataFileSystems').checked = key.clearAllDataFileSystems;\n\t                document.getElementById('dataFormData').checked = key.clearAllDataFormData;\n\t                document.getElementById('dataHistory').checked = key.clearAllDataHistory;\n\t                document.getElementById('dataIndexedDB').checked = key.clearAllDataIndexedDB;\n\t                document.getElementById('dataLocalStorage').checked = key.clearAllDataLocalStorage;\n\t                document.getElementById('dataPluginData').checked = key.clearAllDataPluginData;\n\t                document.getElementById('dataPasswords').checked = key.clearAllDataPasswords;\n\t                document.getElementById('dataWebSQL').checked = key.clearAllDatadataWebSQL;\t\t\t\t\t\t\t\t\n\t                document.getElementById('enableTimedForget').checked = key.timedForget;\n\t                $('input:radio[name=\"timedForgetTime\"]').filter('[value=\"' + key.timedForgetFromType + '\"]').attr('checked', true);\n\t                //For hours limit to 24h as maximum.\n\t                if (key.timedForgetFromType == 1) {\n\t                    document.getElementById('setForgetTime').setAttribute(\"max\", \"24\");\n\t                }\n\t                document.getElementById('setForgetTime').value = key.timedForgetFrom;\n\n\t                if (document.getElementById('enableTimedForget').checked === true) {\n\t                    document.getElementById('enableConfirmData').disabled = true;\n\t                    document.getElementById('enableConfirmData').checked = false;\n\t                    document.getElementById('confirmDataLabel').className = \"uk-text-muted\";\n\t                } else {\n\t                    document.getElementById('enableConfirmData').disabled = false;\n\t                    document.getElementById('confirmDataLabel').className = \"\";\n\t                }\n\n\t            });\n\t        } catch (e) {\n\t            alert(\"An error was encountered while attempting to restore settings! \" + e);\n\t        }\n\t    },\n\n\t    //lets select or deselect all clear data items\n\t    forget_toggledata_options: function(aToggle) {\n\t        try {\n\t            document.getElementById('dataAppCache').checked = aToggle;\n\t            document.getElementById('dataCache').checked = aToggle;\n\t            document.getElementById('dataCookies').checked = aToggle;\n\t            document.getElementById('dataDownloads').checked = aToggle;\n\t            document.getElementById('dataFileSystems').checked = aToggle;\n\t            document.getElementById('dataFormData').checked = aToggle;\n\t            document.getElementById('dataHistory').checked = aToggle;\n\t            document.getElementById('dataIndexedDB').checked = aToggle;\n\t            document.getElementById('dataLocalStorage').checked = aToggle;\n\t            document.getElementById('dataPluginData').checked = aToggle;\n\t            document.getElementById('dataPasswords').checked = aToggle;\n\t            document.getElementById('dataWebSQL').checked = aToggle;\n\t\t\t\tforgetitoptions.forget_save_options();\n\t        } catch (e) {\n\t            alert(\"An error was encountered while toggling all data options! \" + e);\n\t        }\n\t    },\n\t\t\n\t\tsendNotification : function (aType, aMessage, aIcon, aUseIcon){\n\t\t\tif (aUseIcon === true){\n\t\t\t\tUIkit.notify(aIcon + \" \"+ aMessage, {status:aType, timeout : 1000, pos:'bottom-right'});\n\t\t\t}else{\n\t\t\t\tUIkit.notify(aMessage, {status:aType, timeout : 1000, pos:'bottom-right'});\n\t\t\t}\t\n\t\t}\t\n\n\t};\n\t\ndocument.addEventListener('DOMContentLoaded', function() {\n\tdocument.removeEventListener('DOMContentLoaded');\n\tforgetitoptions.init();\n});\t"], "filenames": ["js/settings.js"], "buggy_code_start_loc": [90], "buggy_code_end_loc": [103], "fixing_code_start_loc": [90], "fixing_code_end_loc": [111], "type": "CWE-835", "message": "A vulnerability, which was classified as problematic, was found in InternalError503 Forget It up to 1.3. This affects an unknown part of the file js/settings.js. The manipulation of the argument setForgetTime with the input 0 leads to infinite loop. It is possible to launch the attack on the local host. Upgrading to version 1.4 is able to address this issue. The name of the patch is adf0c7fd59b9c935b4fd675c556265620124999c. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-226119.", "other": {"cve": {"id": "CVE-2015-10103", "sourceIdentifier": "cna@vuldb.com", "published": "2023-04-17T19:15:07.227", "lastModified": "2023-04-26T16:50:47.143", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, was found in InternalError503 Forget It up to 1.3. This affects an unknown part of the file js/settings.js. The manipulation of the argument setForgetTime with the input 0 leads to infinite loop. It is possible to launch the attack on the local host. Upgrading to version 1.4 is able to address this issue. The name of the patch is adf0c7fd59b9c935b4fd675c556265620124999c. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-226119."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:L", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 2.8, "baseSeverity": "LOW"}, "exploitabilityScore": 1.3, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:S/C:N/I:N/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 1.7}, "baseSeverity": "LOW", "exploitabilityScore": 3.1, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-835"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:forget_it_project:forget_it:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.4", "matchCriteriaId": "1FF5EBCC-1729-411D-88D3-CE5CEAFC1D2E"}]}]}], "references": [{"url": "https://github.com/InternalError503/forget-it/commit/adf0c7fd59b9c935b4fd675c556265620124999c", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/InternalError503/forget-it/releases/tag/1.4", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.226119", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.226119", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/InternalError503/forget-it/commit/adf0c7fd59b9c935b4fd675c556265620124999c"}}