{"buggy_code": ["<?php\r\n\r\n/*\r\n * This file is part of MailSo.\r\n *\r\n * (c) 2014 Usenko Timur\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nnamespace MailSo\\Base;\r\n\r\n/**\r\n * @category MailSo\r\n * @package Base\r\n */\r\nclass HtmlUtils\r\n{\r\n\tstatic $KOS = '@@_KOS_@@';\r\n\r\n\t/**\r\n\t * @access private\r\n\t */\r\n\tprivate function __construct()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMElement $oElement\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tpublic static function GetElementAttributesAsArray($oElement)\r\n\t{\r\n\t\t$aResult = array();\r\n\t\tif ($oElement)\r\n\t\t{\r\n\t\t\tif ($oElement->hasAttributes() && isset($oElement->attributes) && $oElement->attributes)\r\n\t\t\t{\r\n\t\t\t\tforeach ($oElement->attributes as $oAttr)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oAttr && !empty($oAttr->nodeName))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sAttrName = \\trim(\\strtolower($oAttr->nodeName));\r\n\t\t\t\t\t\t$aResult[$sAttrName] = $oAttr->nodeValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $aResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sText\r\n\t *\r\n\t * @return \\DOMDocument|bool\r\n\t */\r\n\tpublic static function GetDomFromText($sText)\r\n\t{\r\n\t\t$bState = true;\r\n\t\tif (\\MailSo\\Base\\Utils::FunctionExistsAndEnabled('libxml_use_internal_errors'))\r\n\t\t{\r\n\t\t\t$bState = \\libxml_use_internal_errors(true);\r\n\t\t}\r\n\r\n\t\t$sHtmlAttrs = $sBodyAttrs = '';\r\n\r\n\t\t$sText = \\MailSo\\Base\\HtmlUtils::FixSchemas($sText);\r\n\t\t$sText = \\MailSo\\Base\\HtmlUtils::ClearFastTags($sText);\r\n\t\t$sText = \\MailSo\\Base\\HtmlUtils::ClearBodyAndHtmlTag($sText, $sHtmlAttrs, $sBodyAttrs);\r\n\r\n\t\t$oDom = self::createDOMDocument();\r\n\t\t@$oDom->loadHTML('<'.'?xml version=\"1.0\" encoding=\"utf-8\"?'.'>'.\r\n\t\t\t'<html '.$sHtmlAttrs.'><head>'.\r\n\t\t\t'<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"></head>'.\r\n\t\t\t'<body '.$sBodyAttrs.'>'.\\MailSo\\Base\\Utils::Utf8Clear($sText).'</body></html>');\r\n\r\n\t\t@$oDom->normalizeDocument();\r\n\r\n\t\tif (\\MailSo\\Base\\Utils::FunctionExistsAndEnabled('libxml_clear_errors'))\r\n\t\t{\r\n\t\t\t@\\libxml_clear_errors();\r\n\t\t}\r\n\r\n\t\tif (\\MailSo\\Base\\Utils::FunctionExistsAndEnabled('libxml_use_internal_errors'))\r\n\t\t{\r\n\t\t\t\\libxml_use_internal_errors($bState);\r\n\t\t}\r\n\r\n\t\treturn $oDom;\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\DOMDocument\r\n\t */\r\n\tprivate static function createDOMDocument()\r\n\t{\r\n\t\t$oDoc = new \\DOMDocument('1.0', 'UTF-8');\r\n\t\t$oDoc->encoding = 'UTF-8';\r\n\t\t$oDoc->strictErrorChecking = false;\r\n\t\t$oDoc->formatOutput = false;\r\n\t\t$oDoc->preserveWhiteSpace = false;\r\n\r\n\t\treturn $oDoc;\r\n\t}\r\n\r\n\t/**\r\n\t * @return boolean\r\n\t */\r\n\tprivate static function comparedVersion()\r\n\t{\r\n\t\treturn \\version_compare(PHP_VERSION, '5.3.6') >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument|\\DOMElement $oElem\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate static function domToString($oElem, $oDom = null)\r\n\t{\r\n\t\t$sResult = '';\r\n\t\tif ($oElem instanceof \\DOMDocument)\r\n\t\t{\r\n\t\t\tif (isset($oElem->documentElement) && self::comparedVersion())\r\n\t\t\t{\r\n\t\t\t\t$sResult = $oElem->saveHTML($oElem->documentElement);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$sResult = $oElem->saveHTML();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($oElem)\r\n\t\t{\r\n\t\t\tif ($oDom && self::comparedVersion())\r\n\t\t\t{\r\n\t\t\t\t$sResult = $oDom->saveHTML($oElem);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$oTempDoc = self::createDOMDocument();\r\n\t\t\t\t$oTempDoc->appendChild($oTempDoc->importNode($oElem->cloneNode(true), true));\r\n\t\t\t\t$sResult = $oTempDoc->saveHTML();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn \\trim($sResult);\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument $oDom\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function GetTextFromDom_($oDom, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$aHtmlAttrs = $aBodylAttrs = array();\r\n\t\tif ($bWrapByFakeHtmlAndBodyDiv)\r\n\t\t{\r\n\t\t\t$oHtml = $oDom->getElementsByTagName('html')->item(0);\r\n\t\t\t$oBody = $oDom->getElementsByTagName('body')->item(0);\r\n\r\n\t\t\t$aHtmlAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oHtml);\r\n\t\t\t$aBodylAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oBody);\r\n\t\t}\r\n\r\n\t\t$oDiv = $oDom->getElementsByTagName('div')->item(0);\r\n\t\tif ($oDiv && $oDiv->hasAttribute('data-wrp') && 'rainloop' === $oDiv->getAttribute('data-wrp'))\r\n\t\t{\r\n\t\t\t$oDiv->removeAttribute('data-wrp');\r\n\t\t\tif ($bWrapByFakeHtmlAndBodyDiv)\r\n\t\t\t{\r\n\t\t\t\t$oWrap = $oDom->createElement('div');\r\n\r\n\t\t\t\t$oWrap->setAttribute('data-x-div-type', 'html');\r\n\t\t\t\tforeach ($aHtmlAttrs as $sKey => $sValue)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oWrap->setAttribute($sKey, $sValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$oDiv->setAttribute('data-x-div-type', 'body');\r\n\t\t\t\tforeach ($aBodylAttrs as $sKey => $sValue)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oDiv->setAttribute($sKey, $sValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$oWrap->appendChild($oDiv);\r\n\t\t\t\t$sResult = self::domToString($oWrap, $oDom);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$sResult = self::domToString($oDiv, $oDom);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$sResult = self::domToString($oDom);\r\n\t\t}\r\n\r\n\t\t$sResult = \\str_replace(\\MailSo\\Base\\HtmlUtils::$KOS, ':', $sResult);\r\n\t\t$sResult = \\MailSo\\Base\\Utils::StripSpaces($sResult);\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument $oDom\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function GetTextFromDom($oDom, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$oHtml = $oDom->getElementsByTagName('html')->item(0);\r\n\t\t$oBody = $oDom->getElementsByTagName('body')->item(0);\r\n\r\n\t\tforeach ($oBody->childNodes as $oChild)\r\n\t\t{\r\n\t\t\t$sResult .= $oDom->saveHTML($oChild);\r\n\t\t}\r\n\r\n\t\tif ($bWrapByFakeHtmlAndBodyDiv)\r\n\t\t{\r\n\t\t\t$aHtmlAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oHtml);\r\n\t\t\t$aBodylAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oBody);\r\n\r\n\t\t\t$oWrapHtml = $oDom->createElement('div');\r\n\t\t\t$oWrapHtml->setAttribute('data-x-div-type', 'html');\r\n\t\t\tforeach ($aHtmlAttrs as $sKey => $sValue)\r\n\t\t\t{\r\n\t\t\t\t$oWrapHtml->setAttribute($sKey, $sValue);\r\n\t\t\t}\r\n\r\n\t\t\t$oWrapDom = $oDom->createElement('div', '___xxx___');\r\n\t\t\t$oWrapDom->setAttribute('data-x-div-type', 'body');\r\n\t\t\tforeach ($aBodylAttrs as $sKey => $sValue)\r\n\t\t\t{\r\n\t\t\t\t$oWrapDom->setAttribute($sKey, $sValue);\r\n\t\t\t}\r\n\r\n\t\t\t$oWrapHtml->appendChild($oWrapDom);\r\n\r\n\t\t\t$sWrp = $oDom->saveHTML($oWrapHtml);\r\n\r\n\t\t\t$sResult = \\str_replace('___xxx___', $sResult, $sWrp);\r\n\t\t}\r\n\r\n\t\t$sResult = \\str_replace(\\MailSo\\Base\\HtmlUtils::$KOS, ':', $sResult);\r\n\t\t$sResult = \\MailSo\\Base\\Utils::StripSpaces($sResult);\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param string $sHtmlAttrs = ''\r\n\t * @param string $sBodyAttrs = ''\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearBodyAndHtmlTag($sHtml, &$sHtmlAttrs = '', &$sBodyAttrs = '')\r\n\t{\r\n\t\t$aMatch = array();\r\n\t\tif (\\preg_match('/<html([^>]+)>/im', $sHtml, $aMatch) && !empty($aMatch[1]))\r\n\t\t{\r\n\t\t\t$sHtmlAttrs = $aMatch[1];\r\n\t\t}\r\n\r\n\t\t$aMatch = array();\r\n\t\tif (\\preg_match('/<body([^>]+)>/im', $sHtml, $aMatch) && !empty($aMatch[1]))\r\n\t\t{\r\n\t\t\t$sBodyAttrs = $aMatch[1];\r\n\t\t}\r\n\r\n\t\t$sHtml = \\preg_replace('/<head([^>]*)>/si', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<body([^>]*)>/si', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<\\/body>/i', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<html([^>]*)>/i', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<\\/html>/i', '', $sHtml);\r\n\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns:[a-z]=\"[^\"]*\"/i', '', $sHtmlAttrs);\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns:[a-z]=\\'[^\\']*\\'/i', '', $sHtmlAttrs);\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns=\"[^\"]*\"/i', '', $sHtmlAttrs);\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns=\\'[^\\']*\\'/i', '', $sHtmlAttrs);\r\n\t\t$sBodyAttrs = \\preg_replace('/xmlns:[a-z]=\"[^\"]*\"/i', '', $sBodyAttrs);\r\n\t\t$sBodyAttrs = \\preg_replace('/xmlns:[a-z]=\\'[^\\']*\\'/i', '', $sBodyAttrs);\r\n\r\n\t\t$sHtmlAttrs = trim($sHtmlAttrs);\r\n\t\t$sBodyAttrs = trim($sBodyAttrs);\r\n\r\n\t\treturn $sHtml;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param bool $bClearEmpty = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function FixSchemas($sHtml, $bClearEmpty = true)\r\n\t{\r\n\t\tif ($bClearEmpty)\r\n\t\t{\r\n\t\t\t$sHtml = \\str_replace('<o:p></o:p>', '', $sHtml);\r\n\t\t}\r\n\r\n\t\t$sHtml = \\str_replace('<o:p>', '<span>', $sHtml);\r\n\t\t$sHtml = \\str_replace('</o:p>', '</span>', $sHtml);\r\n\r\n\t\treturn $sHtml;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearFastTags($sHtml)\r\n\t{\r\n\t\treturn \\preg_replace(array(\r\n\t\t\t'/<p[^>]*><\\/p>/i',\r\n\t\t\t'/<!doctype[^>]*>/i',\r\n\t\t\t'/<\\?xml [^>]*\\?>/i'\r\n\t\t), '', $sHtml);\r\n\t}\r\n\r\n\t/**\r\n\t * @param mixed $oDom\r\n\t */\r\n\tpublic static function ClearComments(&$oDom)\r\n\t{\r\n\t\t$aRemove = array();\r\n\r\n\t\t$oXpath = new \\DOMXpath($oDom);\r\n\t\t$oComments = $oXpath->query('//comment()');\r\n\t\tif ($oComments)\r\n\t\t{\r\n\t\t\tforeach ($oComments as $oComment)\r\n\t\t\t{\r\n\t\t\t\t$aRemove[] = $oComment;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tunset($oXpath, $oComments);\r\n\r\n\t\tforeach ($aRemove as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\tif (isset($oElement->parentNode))\r\n\t\t\t{\r\n\t\t\t\t@$oElement->parentNode->removeChild($oElement);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param mixed $oDom\r\n\t * @param bool $bClearStyleAndHead = true\r\n\t */\r\n\tpublic static function ClearTags(&$oDom, $bClearStyleAndHead = true)\r\n\t{\r\n\t\t$aRemoveTags = array(\r\n\t\t\t'svg', 'link', 'base', 'meta', 'title', 'x-script', 'script', 'bgsound', 'keygen', 'source',\r\n\t\t\t'object', 'embed', 'applet', 'mocha', 'iframe', 'frame', 'frameset', 'video', 'audio', 'area', 'map'\r\n\t\t);\r\n\r\n\t\tif ($bClearStyleAndHead)\r\n\t\t{\r\n\t\t\t$aRemoveTags[] = 'head';\r\n\t\t\t$aRemoveTags[] = 'style';\r\n\t\t}\r\n\r\n\t\t$aHtmlAllowedTags = isset(\\MailSo\\Config::$HtmlStrictAllowedTags) &&\r\n\t\t\t\\is_array(\\MailSo\\Config::$HtmlStrictAllowedTags) && 0 < \\count(\\MailSo\\Config::$HtmlStrictAllowedTags) ?\r\n\t\t\t\t\\MailSo\\Config::$HtmlStrictAllowedTags : null;\r\n\r\n\t\t$aRemove = array();\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\tif ($oElement)\r\n\t\t\t{\r\n\t\t\t\t$sTagNameLower = \\trim(\\strtolower($oElement->tagName));\r\n\t\t\t\tif ('' !== $sTagNameLower)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\\in_array($sTagNameLower, $aRemoveTags) || ($aHtmlAllowedTags && !\\in_array($sTagNameLower, $aHtmlAllowedTags)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aRemove[] = @$oElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tforeach ($aRemove as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\tif (isset($oElement->parentNode))\r\n\t\t\t{\r\n\t\t\t\t@$oElement->parentNode->removeChild($oElement);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n/*\r\n//\tpublic static function ClearStyleUrlValueParserHelper($oUrlValue, $oRule, $oRuleSet,\r\n//\t\t$oElem = null,\r\n//\t\t&$bHasExternals = false, &$aFoundCIDs = array(),\r\n//\t\t$aContentLocationUrls = array(), &$aFoundedContentLocationUrls = array(),\r\n//\t\t$bDoNotReplaceExternalUrl = false, $fAdditionalExternalFilter = null\r\n//\t)\r\n//\t{\r\n//\t\tif ($oUrlValue instanceof \\Sabberworm\\CSS\\Value\\URL)\r\n//\t\t{\r\n//\t\t\t$oNewRule = new \\Sabberworm\\CSS\\Rule\\Rule('x-rl-orig-'.$oRule->getRule());\r\n//\t\t\t$oNewRule->setValue((string) $oRule->getValue());\r\n//\t\t\t$oNewRule->setIsImportant($oRule->getIsImportant());\r\n//\r\n//\t\t\t$oRuleSet->addRule($oNewRule);\r\n//\r\n//\t\t\t$oUrl = $oUrlValue->getURL();\r\n//\t\t\t$sUrl = $oUrl ? $oUrl->getString() : '';\r\n//\r\n//\t\t\tif ('cid:' === \\strtolower(\\substr($sUrl, 0, 4)))\r\n//\t\t\t{\r\n//\t\t\t\t$aFoundCIDs[] = \\substr($sUrl, 4);\r\n//\r\n//\t\t\t\t$oRule->setRule('x-rl-mod-'.$oRule->getRule());\r\n//\r\n//\t\t\t\tif ($oElem)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oElem->setAttribute('data-x-style-mod', '1');\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t\telse\r\n//\t\t\t{\r\n//\t\t\t\tif (\\preg_match('/http[s]?:\\/\\//i', $sUrl) || '//' === \\substr($sUrl, 0, 2))\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oRule->setRule('x-rl-mod-'.$oRule->getRule());\r\n//\r\n//\t\t\t\t\tif (\\in_array($sUrl, $aContentLocationUrls))\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$aFoundedContentLocationUrls[] = $sUrl;\r\n//\t\t\t\t\t}\r\n//\t\t\t\t\telse\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$bHasExternals = true;\r\n//\t\t\t\t\t\tif (!$bDoNotReplaceExternalUrl)\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\tif ($fAdditionalExternalFilter)\r\n//\t\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\t$sAdditionalResult = \\call_user_func($fAdditionalExternalFilter, $sUrl);\r\n//\t\t\t\t\t\t\t\tif (0 < \\strlen($sAdditionalResult) && $oUrl)\r\n//\t\t\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\t\t$oUrl->setString($sAdditionalResult);\r\n//\t\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\r\n//\t\t\t\t\tif ($oElem)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$oElem->setAttribute('data-x-style-mod', '1');\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t\telse if ('data:image/' !== \\strtolower(\\substr(\\trim($sUrl), 0, 11)))\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oRuleSet->removeRule($oRule);\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n//\t\telse if ($oRule instanceof \\Sabberworm\\CSS\\Rule\\Rule)\r\n//\t\t{\r\n//\t\t\tif ('x-rl-' !== \\substr($oRule->getRule(), 0, 5))\r\n//\t\t\t{\r\n//\t\t\t\t$oValue = $oRule->getValue();\r\n//\t\t\t\tif ($oValue instanceof \\Sabberworm\\CSS\\Value\\URL)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyleUrlValueParserHelper($oValue, $oRule, $oRuleSet, $oElem,\r\n//\t\t\t\t\t\t$bHasExternals, $aFoundCIDs,\r\n//\t\t\t\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls,\r\n//\t\t\t\t\t\t$bDoNotReplaceExternalUrl, $fAdditionalExternalFilter);\r\n//\t\t\t\t}\r\n//\t\t\t\telse if ($oValue instanceof \\Sabberworm\\CSS\\Value\\RuleValueList)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$aComps = $oValue->getListComponents();\r\n//\t\t\t\t\tforeach ($aComps as $oValue)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\tif ($oValue instanceof \\Sabberworm\\CSS\\Value\\URL)\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyleUrlValueParserHelper($oValue, $oRule, $oRuleSet, $oElem,\r\n//\t\t\t\t\t\t\t\t$bHasExternals, $aFoundCIDs,\r\n//\t\t\t\t\t\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls,\r\n//\t\t\t\t\t\t\t\t$bDoNotReplaceExternalUrl, $fAdditionalExternalFilter);\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n//\t}\r\n//\r\n//\tpublic static function ClearStyleSmart($sStyle, $oElement = null,\r\n//\t\t&$bHasExternals = false, &$aFoundCIDs = array(),\r\n//\t\t$aContentLocationUrls = array(), &$aFoundedContentLocationUrls = array(),\r\n//\t\t$bDoNotReplaceExternalUrl = false, $fAdditionalExternalFilter = null,\r\n//\t\t$sSelectorPrefix = '')\r\n//\t{\r\n//\t\t$mResult = false;\r\n//\t\t$oCss = null;\r\n//\r\n//\t\tif (!\\class_exists('Sabberworm\\CSS\\Parser'))\r\n//\t\t{\r\n//\t\t\treturn $mResult;\r\n//\t\t}\r\n//\r\n//\t\t$sStyle = \\trim($sStyle);\r\n//\t\tif (empty($sStyle))\r\n//\t\t{\r\n//\t\t\treturn '';\r\n//\t\t}\r\n//\r\n//\t\t$sStyle = \\trim(\\preg_replace('/[\\r\\n\\t\\s]+/', ' ', $sStyle));\r\n//\r\n//\t\ttry\r\n//\t\t{\r\n//\t\t\t$oSettings = \\Sabberworm\\CSS\\Settings::create();\r\n//\t\t\t$oSettings->beStrict();\r\n//\t\t\t$oSettings->withMultibyteSupport(false);\r\n//\r\n//\t\t\t$oCssParser = new \\Sabberworm\\CSS\\Parser($sStyle, $oSettings);\r\n//\t\t\t$oCss = $oCssParser->parse();\r\n//\t\t}\r\n//\t\tcatch (\\Exception $oEception)\r\n//\t\t{\r\n//\t\t\tunset($oEception);\r\n//\t\t\t$mResult = false;\r\n//\t\t}\r\n//\r\n//\t\tif ($oCss)\r\n//\t\t{\r\n//\t\t\tforeach ($oCss->getAllDeclarationBlocks() as $oBlock)\r\n//\t\t\t{\r\n//\t\t\t\tforeach($oBlock->getSelectors() as $oSelector)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$sS = ' '.\\trim($oSelector->getSelector()).' ';\r\n//\t\t\t\t\t$sS = \\preg_replace('/ body([\\.# ])/i', ' [data-x-div-type=\"body\"]$1', $sS);\r\n//\t\t\t\t\t$sS = \\preg_replace('/ html([\\.# ])/i', ' [data-x-div-type=\"html\"]$1', $sS);\r\n//\r\n//\t\t\t\t\tif (0 < \\strlen($sSelectorPrefix))\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$sS = \\trim($sSelectorPrefix.' '.\\trim($sS));\r\n//\t\t\t\t\t}\r\n//\r\n//\t\t\t\t\t$oSelector->setSelector(\\trim($sS));\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\r\n//\t\t\t$aRulesToRemove = array(\r\n//\t\t\t\t'pointer-events', 'content', 'behavior', 'cursor',\r\n//\t\t\t);\r\n//\r\n//\t\t\tforeach($oCss->getAllRuleSets() as $oRuleSet)\r\n//\t\t\t{\r\n//\t\t\t\tforeach ($aRulesToRemove as $sRuleToRemove)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oRuleSet->removeRule($sRuleToRemove);\r\n//\t\t\t\t}\r\n//\r\n//\t\t\t\t// position: fixed -> position: fixed -> absolute\r\n//\t\t\t\t$aRules = $oRuleSet->getRules('position');\r\n//\t\t\t\tif (\\is_array($aRules))\r\n//\t\t\t\t{\r\n//\t\t\t\t\tforeach ($aRules as $oRule)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$mValue = $oRule->getValue();\r\n//\t\t\t\t\t\tif (\\is_string($mValue) && 'fixed' === \\trim(\\strtolower($mValue)))\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t$oRule->setValue('absolute');\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\r\n//\t\t\tforeach($oCss->getAllDeclarationBlocks() as $oRuleSet)\r\n//\t\t\t{\r\n//\t\t\t\tif ($oRuleSet instanceof \\Sabberworm\\CSS\\RuleSet\\RuleSet)\r\n//\t\t\t\t{\r\n//\t\t\t\t\tif ($oRuleSet instanceof \\Sabberworm\\CSS\\RuleSet\\DeclarationBlock)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$oRuleSet->expandBackgroundShorthand();\r\n//\t\t\t\t\t\t$oRuleSet->expandListStyleShorthand();\r\n//\t\t\t\t\t}\r\n//\r\n//\t\t\t\t\t$aRules = $oRuleSet->getRules();\r\n//\t\t\t\t\tif (\\is_array($aRules) && 0 < \\count($aRules))\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\tforeach ($aRules as $oRule)\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\tif ($oRule instanceof \\Sabberworm\\CSS\\Rule\\Rule)\r\n//\t\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyleUrlValueParserHelper(null, $oRule, $oRuleSet,\r\n//\t\t\t\t\t\t\t\t\t$oElement,\r\n//\t\t\t\t\t\t\t\t\t$bHasExternals, $aFoundCIDs,\r\n//\t\t\t\t\t\t\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls,\r\n//\t\t\t\t\t\t\t\t\t$bDoNotReplaceExternalUrl, $fAdditionalExternalFilter\r\n//\t\t\t\t\t\t\t\t);\r\n//\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\r\n//\t\t\ttry\r\n//\t\t\t{\r\n//\t\t\t\t$mResult = $oCss->render(\\Sabberworm\\CSS\\OutputFormat::createCompact());\r\n//\t\t\t}\r\n//\t\t\tcatch (\\Exception $oEception)\r\n//\t\t\t{\r\n//\t\t\t\tunset($oEception);\r\n//\t\t\t\t$mResult = false;\r\n//\t\t\t}\r\n//\t\t}\r\n//\r\n//\t\treturn $mResult;\r\n//\t}\r\n*/\r\n\r\n\t/**\r\n\t *\r\n\t * @param string $sStyle\r\n\t * @param \\DOMElement $oElement\r\n\t * @param bool $bHasExternals\r\n\t * @param array $aFoundCIDs\r\n\t * @param array $aContentLocationUrls\r\n\t * @param array $aFoundedContentLocationUrls\r\n\t * @param bool $bDoNotReplaceExternalUrl = false\r\n\t * @param callback|null $fAdditionalExternalFilter = null\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearStyle($sStyle, $oElement, &$bHasExternals, &$aFoundCIDs,\r\n\t\t$aContentLocationUrls, &$aFoundedContentLocationUrls, $bDoNotReplaceExternalUrl = false, $fAdditionalExternalFilter = null)\r\n\t{\r\n\t\t$sStyle = \\trim($sStyle);\r\n\t\t$aOutStyles = array();\r\n\t\t$aStyles = \\explode(';', $sStyle);\r\n\r\n\t\tif ($fAdditionalExternalFilter && !\\is_callable($fAdditionalExternalFilter))\r\n\t\t{\r\n\t\t\t$fAdditionalExternalFilter = null;\r\n\t\t}\r\n\r\n\t\t$aMatch = array();\r\n\t\tforeach ($aStyles as $sStyleItem)\r\n\t\t{\r\n\t\t\t$aStyleValue = \\explode(':', $sStyleItem, 2);\r\n\t\t\t$sName = \\trim(\\strtolower($aStyleValue[0]));\r\n\t\t\t$sValue = isset($aStyleValue[1]) ? \\trim($aStyleValue[1]) : '';\r\n\r\n\t\t\tif ('position' === $sName && 'fixed' === \\strtolower($sValue))\r\n\t\t\t{\r\n\t\t\t\t$sValue = 'absolute';\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sName) || 0 === \\strlen($sValue))\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t$sStyleItem = $sName.': '.$sValue;\r\n\t\t\t$aStyleValue = array($sName, $sValue);\r\n\r\n\t\t\t/*if (\\in_array($sName, array('position', 'left', 'right', 'top', 'bottom', 'behavior', 'cursor')))\r\n\t\t\t{\r\n\t\t\t\t// skip\r\n\t\t\t}\r\n\t\t\telse */if (\\in_array($sName, array('behavior', 'pointer-events')) ||\r\n\t\t\t\t('cursor' === $sName && !\\in_array(\\strtolower($sValue), array('none', 'cursor'))) ||\r\n\t\t\t\t('display' === $sName && 'none' === \\strtolower($sValue)) ||\r\n\t\t\t\t\\preg_match('/expression/i', $sValue) ||\r\n\t\t\t\t('text-indent' === $sName && '-' === \\substr(trim($sValue), 0, 1))\r\n\t\t\t)\r\n\t\t\t{\r\n\t\t\t\t// skip\r\n\t\t\t}\r\n\t\t\telse if (\\in_array($sName, array('background-image', 'background', 'list-style', 'list-style-image', 'content'))\r\n\t\t\t\t&& \\preg_match('/url[\\s]?\\(([^)]+)\\)/im', $sValue, $aMatch) && !empty($aMatch[1]))\r\n\t\t\t{\r\n\t\t\t\t$sFullUrl = \\trim($aMatch[0], '\"\\' ');\r\n\t\t\t\t$sUrl = \\trim($aMatch[1], '\"\\' ');\r\n\t\t\t\t$sStyleValue = \\trim(\\preg_replace('/[\\s]+/', ' ', \\str_replace($sFullUrl, '', $sValue)));\r\n\t\t\t\t$sStyleItem = empty($sStyleValue) ? '' : $sName.': '.$sStyleValue;\r\n\r\n\t\t\t\tif ('cid:' === \\strtolower(\\substr($sUrl, 0, 4)))\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oElement)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-style-cid-name',\r\n\t\t\t\t\t\t\t'background' === $sName ? 'background-image' : $sName);\r\n\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-style-cid', \\substr($sUrl, 4));\r\n\r\n\t\t\t\t\t\t$aFoundCIDs[] = \\substr($sUrl, 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oElement)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (\\preg_match('/http[s]?:\\/\\//i', $sUrl) || '//' === \\substr($sUrl, 0, 2))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$bHasExternals = true;\r\n\t\t\t\t\t\t\tif (!$bDoNotReplaceExternalUrl)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (\\in_array($sName, array('background-image', 'list-style-image', 'content')))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sStyleItem = '';\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t$sTemp = '';\r\n\t\t\t\t\t\t\t\tif ($oElement->hasAttribute('data-x-style-url'))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sTemp = \\trim($oElement->getAttribute('data-x-style-url'));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t$sTemp = empty($sTemp) ? '' : (';' === \\substr($sTemp, -1) ? $sTemp.' ' : $sTemp.'; ');\r\n\r\n\t\t\t\t\t\t\t\t$oElement->setAttribute('data-x-style-url', \\trim($sTemp.\r\n\t\t\t\t\t\t\t\t\t('background' === $sName ? 'background-image' : $sName).': '.$sFullUrl, ' ;'));\r\n\r\n\t\t\t\t\t\t\t\tif ($fAdditionalExternalFilter)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sAdditionalResult = \\call_user_func($fAdditionalExternalFilter, $sUrl);\r\n\t\t\t\t\t\t\t\t\tif (0 < \\strlen($sAdditionalResult))\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$oElement->setAttribute('data-x-additional-style-url',\r\n\t\t\t\t\t\t\t\t\t\t\t('background' === $sName ? 'background-image' : $sName).': url('.$sAdditionalResult.')');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ('data:image/' !== \\strtolower(\\substr(\\trim($sUrl), 0, 11)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oElement->setAttribute('data-x-broken-style-src', $sFullUrl);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!empty($sStyleItem))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aOutStyles[] = $sStyleItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ('height' === $sName)\r\n\t\t\t{\r\n//\t\t\t\t$aOutStyles[] = 'min-'.ltrim($sStyleItem);\r\n\t\t\t\t$aOutStyles[] = $sStyleItem;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$aOutStyles[] = $sStyleItem;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn \\implode(';', $aOutStyles);\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument $oDom\r\n\t */\r\n\tpublic static function FindLinksInDOM(&$oDom)\r\n\t{\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\t$sTagNameLower = \\strtolower($oElement->tagName);\r\n\t\t\t$sParentTagNameLower = isset($oElement->parentNode) && isset($oElement->parentNode->tagName) ?\r\n\t\t\t\t\\strtolower($oElement->parentNode->tagName) : '';\r\n\r\n\t\t\tif (!\\in_array($sTagNameLower, array('html', 'meta', 'head', 'style', 'script', 'img', 'button', 'input', 'textarea', 'a')) &&\r\n\t\t\t\t'a' !== $sParentTagNameLower && $oElement->childNodes && 0 < $oElement->childNodes->length)\r\n\t\t\t{\r\n\t\t\t\t$oSubItem = null;\r\n\t\t\t\t$aTextNodes = array();\r\n\t\t\t\t$iIndex = $oElement->childNodes->length - 1;\r\n\t\t\t\twhile ($iIndex > -1)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oSubItem = $oElement->childNodes->item($iIndex);\r\n\t\t\t\t\tif ($oSubItem && XML_TEXT_NODE === $oSubItem->nodeType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aTextNodes[] = $oSubItem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$iIndex--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tunset($oSubItem);\r\n\r\n\t\t\t\tforeach ($aTextNodes as $oTextNode)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oTextNode && 0 < \\strlen($oTextNode->wholeText)/* && \\preg_match('/http[s]?:\\/\\//i', $oTextNode->wholeText)*/)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sText = \\MailSo\\Base\\LinkFinder::NewInstance()\r\n\t\t\t\t\t\t\t->Text($oTextNode->wholeText)\r\n\t\t\t\t\t\t\t->UseDefaultWrappers(true)\r\n\t\t\t\t\t\t\t->CompileText()\r\n\t\t\t\t\t\t;\r\n\r\n\t\t\t\t\t\t$oSubDom = \\MailSo\\Base\\HtmlUtils::GetDomFromText($sText);\r\n\t\t\t\t\t\tif ($oSubDom)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oBodyNodes = $oSubDom->getElementsByTagName('body');\r\n\t\t\t\t\t\t\tif ($oBodyNodes && 0 < $oBodyNodes->length)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$oBodyChildNodes = $oBodyNodes->item(0)->childNodes;\r\n\t\t\t\t\t\t\t\tif ($oBodyChildNodes && $oBodyChildNodes->length)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfor ($iIndex = 0, $iLen = $oBodyChildNodes->length; $iIndex < $iLen; $iIndex++)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$oSubItem = $oBodyChildNodes->item($iIndex);\r\n\t\t\t\t\t\t\t\t\t\tif ($oSubItem)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tif (XML_ELEMENT_NODE === $oSubItem->nodeType &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t'a' === \\strtolower($oSubItem->tagName))\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t$oLink = $oDom->createElement('a',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\\str_replace(':', \\MailSo\\Base\\HtmlUtils::$KOS, \\htmlspecialchars($oSubItem->nodeValue)));\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t$sHref = $oSubItem->getAttribute('href');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ($sHref)\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$oLink->setAttribute('href', $sHref);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t$oElement->insertBefore($oLink, $oTextNode);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t$oElement->insertBefore($oDom->importNode($oSubItem), $oTextNode);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t$oElement->removeChild($oTextNode);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tunset($oBodyNodes);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tunset($oSubDom, $sText);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tunset($aNodes);\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param bool $bDoNotReplaceExternalUrl = false\r\n\t * @param bool $bFindLinksInHtml = false\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearHtmlSimple($sHtml, $bDoNotReplaceExternalUrl = false, $bFindLinksInHtml = false, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$bHasExternals = false;\r\n\t\t$aFoundCIDs = array();\r\n\t\t$aContentLocationUrls = array();\r\n\t\t$aFoundedContentLocationUrls = array();\r\n\t\t$fAdditionalExternalFilter = null;\r\n\t\t$fAdditionalDomReader = null;\r\n\t\t$bTryToDetectHiddenImages = false;\r\n\r\n\t\treturn \\MailSo\\Base\\HtmlUtils::ClearHtml($sHtml, $bHasExternals, $aFoundCIDs,\r\n\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls, $bDoNotReplaceExternalUrl, $bFindLinksInHtml,\r\n\t\t\t$fAdditionalExternalFilter, $fAdditionalDomReader, $bTryToDetectHiddenImages,\r\n\t\t\t$bWrapByFakeHtmlAndBodyDiv);\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param bool $bHasExternals = false\r\n\t * @param array $aFoundCIDs = array()\r\n\t * @param array $aContentLocationUrls = array()\r\n\t * @param array $aFoundedContentLocationUrls = array()\r\n\t * @param bool $bDoNotReplaceExternalUrl = false\r\n\t * @param bool $bFindLinksInHtml = false\r\n\t * @param callback|null $fAdditionalExternalFilter = null\r\n\t * @param callback|null $fAdditionalDomReader = null\r\n\t * @param bool $bTryToDetectHiddenImages = false\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearHtml($sHtml, &$bHasExternals = false, &$aFoundCIDs = array(),\r\n\t\t$aContentLocationUrls = array(), &$aFoundedContentLocationUrls = array(),\r\n\t\t$bDoNotReplaceExternalUrl = false, $bFindLinksInHtml = false,\r\n\t\t$fAdditionalExternalFilter = null, $fAdditionalDomReader = false,\r\n\t\t$bTryToDetectHiddenImages = false, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$sHtml = null === $sHtml ? '' : (string) $sHtml;\r\n\t\t$sHtml = \\trim($sHtml);\r\n\t\tif (0 === \\strlen($sHtml))\r\n\t\t{\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif ($fAdditionalExternalFilter && !\\is_callable($fAdditionalExternalFilter))\r\n\t\t{\r\n\t\t\t$fAdditionalExternalFilter = null;\r\n\t\t}\r\n\r\n\t\tif ($fAdditionalDomReader && !\\is_callable($fAdditionalDomReader))\r\n\t\t{\r\n\t\t\t$fAdditionalDomReader = null;\r\n\t\t}\r\n\r\n\t\t$bHasExternals = false;\r\n\r\n\t\t// Dom Part\r\n\t\t$oDom = \\MailSo\\Base\\HtmlUtils::GetDomFromText($sHtml);\r\n\t\tunset($sHtml);\r\n\r\n\t\tif (!$oDom)\r\n\t\t{\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif ($fAdditionalDomReader)\r\n\t\t{\r\n\t\t\t$oResDom = \\call_user_func($fAdditionalDomReader, $oDom);\r\n\t\t\tif ($oResDom)\r\n\t\t\t{\r\n\t\t\t\t$oDom = $oResDom;\r\n\t\t\t}\r\n\r\n\t\t\tunset($oResDom);\r\n\t\t}\r\n\r\n\t\tif ($bFindLinksInHtml)\r\n\t\t{\r\n\t\t\t\\MailSo\\Base\\HtmlUtils::FindLinksInDOM($oDom);\r\n\t\t}\r\n\r\n\t\t\\MailSo\\Base\\HtmlUtils::ClearComments($oDom);\r\n\t\t\\MailSo\\Base\\HtmlUtils::ClearTags($oDom);\r\n\r\n\t\t$sLinkColor = '';\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\t$aRemovedAttrs = array();\r\n\t\t\t$sTagNameLower = \\strtolower($oElement->tagName);\r\n\r\n\t\t\t// convert body attributes to styles\r\n\t\t\tif ('body' === $sTagNameLower)\r\n\t\t\t{\r\n\t\t\t\t$aAttrs = array(\r\n\t\t\t\t\t'link' => '',\r\n\t\t\t\t\t'text' => '',\r\n\t\t\t\t\t'topmargin' => '',\r\n\t\t\t\t\t'leftmargin' => '',\r\n\t\t\t\t\t'bottommargin' => '',\r\n\t\t\t\t\t'rightmargin' => ''\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (isset($oElement->attributes))\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach ($oElement->attributes as $sAttrName => /* @var $oAttributeNode \\DOMNode */ $oAttributeNode)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ($oAttributeNode && isset($oAttributeNode->nodeValue))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sAttrNameLower = \\trim(\\strtolower($sAttrName));\r\n\t\t\t\t\t\t\tif (isset($aAttrs[$sAttrNameLower]) && '' === $aAttrs[$sAttrNameLower])\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$aAttrs[$sAttrNameLower] = array($sAttrName, \\trim($oAttributeNode->nodeValue));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$aStyles = array();\r\n\t\t\t\tforeach ($aAttrs as $sIndex => $aItem)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\\is_array($aItem))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->removeAttribute($aItem[0]);\r\n\r\n\t\t\t\t\t\tswitch ($sIndex)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase 'link':\r\n\t\t\t\t\t\t\t\t$sLinkColor = \\trim($aItem[1]);\r\n\t\t\t\t\t\t\t\tif (!\\preg_match('/^#[abcdef0-9]{3,6}$/i', $sLinkColor))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sLinkColor = '';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'text':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'color: '.$aItem[1];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'topmargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-top: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'leftmargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-left: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'bottommargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-bottom: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'rightmargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-right: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (0 < \\count($aStyles))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sStyles = $oElement->hasAttribute('style') ? \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';')) : '';\r\n\t\t\t\t\t$oElement->setAttribute('style', (empty($sStyles) ? '' : $sStyles.'; ').\\implode('; ', $aStyles));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ('iframe' === $sTagNameLower || 'frame' === $sTagNameLower)\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('src', 'javascript:false');\r\n\t\t\t}\r\n\r\n\t\t\tif ('a' === $sTagNameLower && !empty($sLinkColor))\r\n\t\t\t{\r\n\t\t\t\t$sStyles = $oElement->hasAttribute('style')\r\n\t\t\t\t\t?  \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';')) : '';\r\n\r\n\t\t\t\t$oElement->setAttribute('style',\r\n\t\t\t\t\t'color: '.$sLinkColor.\\trim((empty($sStyles) ? '' : '; '.$sStyles)));\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttributes() && isset($oElement->attributes) && $oElement->attributes)\r\n\t\t\t{\r\n\t\t\t\t$aHtmlAllowedAttributes = isset(\\MailSo\\Config::$HtmlStrictAllowedAttributes) &&\r\n\t\t\t\t\t\\is_array(\\MailSo\\Config::$HtmlStrictAllowedAttributes) && 0 < \\count(\\MailSo\\Config::$HtmlStrictAllowedAttributes) ?\r\n\t\t\t\t\t\t\\MailSo\\Config::$HtmlStrictAllowedAttributes : null;\r\n\r\n\t\t\t\t$sAttrsForRemove = array();\r\n\t\t\t\tforeach ($oElement->attributes as $sAttrName => $oAttr)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($sAttrName && $oAttr)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sAttrNameLower = \\trim(\\strtolower($sAttrName));\r\n\t\t\t\t\t\tif ($aHtmlAllowedAttributes && !\\in_array($sAttrNameLower, $aHtmlAllowedAttributes))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sAttrsForRemove[] = $sAttrName;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ('on' === \\substr($sAttrNameLower, 0, 2) || in_array($sAttrNameLower, array(\r\n\t\t\t\t\t\t\t'id', 'class', 'contenteditable', 'designmode', 'formaction', 'manifest', 'action',\r\n\t\t\t\t\t\t\t'data-bind', 'data-reactid', 'xmlns', 'srcset', 'data-x-skip-style',\r\n\t\t\t\t\t\t\t'fscommand', 'seeksegmenttime'\r\n\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sAttrsForRemove[] = $sAttrName;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (0 < \\count($sAttrsForRemove))\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach ($sAttrsForRemove as $sName)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t@$oElement->removeAttribute($sName);\r\n\t\t\t\t\t\t$aRemovedAttrs[\\trim(\\strtolower($sName))] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tunset($sAttrsForRemove);\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('href'))\r\n\t\t\t{\r\n\t\t\t\t$sHref = \\trim($oElement->getAttribute('href'));\r\n\t\t\t\tif (!\\preg_match('/^(http[s]?|ftp|skype|mailto):/i', $sHref) && '//' !== \\substr($sHref, 0, 2))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-x-broken-href', $sHref);\r\n\t\t\t\t\t$oElement->setAttribute('href', 'javascript:false');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ('a' === $sTagNameLower)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('rel', 'external nofollow noopener noreferrer');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (\\in_array($sTagNameLower, array('a', 'form', 'area')))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('target', '_blank');\r\n\t\t\t}\r\n\r\n\t\t\tif (\\in_array($sTagNameLower, array('a', 'form', 'area', 'input', 'button', 'textarea')))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('tabindex', '-1');\r\n\t\t\t}\r\n\r\n\t\t\tif ($bTryToDetectHiddenImages && 'img' === $sTagNameLower)\r\n\t\t\t{\r\n\t\t\t\t$sAlt = $oElement->hasAttribute('alt')\r\n\t\t\t\t\t? \\trim($oElement->getAttribute('alt')) : '';\r\n\r\n\t\t\t\tif ($oElement->hasAttribute('src') && '' === $sAlt)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aH = array(\r\n\t\t\t\t\t\t'email.microsoftemail.com/open',\r\n\t\t\t\t\t\t'github.com/notifications/beacon/',\r\n\t\t\t\t\t\t'mandrillapp.com/track/open',\r\n\t\t\t\t\t\t'list-manage.com/track/open'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t$sH = $oElement->hasAttribute('height')\r\n\t\t\t\t\t\t? \\trim($oElement->getAttribute('height')) : '';\r\n\r\n//\t\t\t\t\t\t$sW = $oElement->hasAttribute('width')\r\n//\t\t\t\t\t\t\t? \\trim($oElement->getAttribute('width')) : '';\r\n\r\n\t\t\t\t\t$sStyles = $oElement->hasAttribute('style')\r\n\t\t\t\t\t\t? \\preg_replace('/[\\s]+/', '', \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';'))) : '';\r\n\r\n\t\t\t\t\t$sSrc = \\trim($oElement->getAttribute('src'));\r\n\r\n\t\t\t\t\t$bC = \\in_array($sH, array('1', '0', '1px', '0px')) ||\r\n\t\t\t\t\t\t\\preg_match('/(display:none|visibility:hidden|height:0|height:[01][a-z][a-z])/i', $sStyles);\r\n\r\n\t\t\t\t\tif (!$bC)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sSrcLower = \\strtolower($sSrc);\r\n\t\t\t\t\t\tforeach ($aH as $sLine)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (false !== \\strpos($sSrcLower, $sLine))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$bC = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($bC)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('style', 'display:none');\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-skip-style', 'true');\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-hidden-src', $sSrc);\r\n\r\n\t\t\t\t\t\t$oElement->removeAttribute('src');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('src'))\r\n\t\t\t{\r\n\t\t\t\t$sSrc = \\trim($oElement->getAttribute('src'));\r\n\t\t\t\t$oElement->removeAttribute('src');\r\n\r\n\t\t\t\tif (\\in_array($sSrc, $aContentLocationUrls))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-x-src-location', $sSrc);\r\n\t\t\t\t\t$aFoundedContentLocationUrls[] = $sSrc;\r\n\t\t\t\t}\r\n\t\t\t\telse if ('cid:' === \\strtolower(\\substr($sSrc, 0, 4)))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-x-src-cid', \\substr($sSrc, 4));\r\n\t\t\t\t\t$aFoundCIDs[] = \\substr($sSrc, 4);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\\preg_match('/^http[s]?:\\/\\//i', $sSrc) || '//' === \\substr($sSrc, 0, 2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ($bDoNotReplaceExternalUrl)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oElement->setAttribute('src', $sSrc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oElement->setAttribute('data-x-src', $sSrc);\r\n\t\t\t\t\t\t\tif ($fAdditionalExternalFilter)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$sCallResult = \\call_user_func($fAdditionalExternalFilter, $sSrc);\r\n\t\t\t\t\t\t\t\tif (0 < \\strlen($sCallResult))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$oElement->setAttribute('data-x-additional-src', $sCallResult);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$bHasExternals = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ('data:image/' === \\strtolower(\\substr($sSrc, 0, 11)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('src', $sSrc);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-broken-src', $sSrc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$sBackground = $oElement->hasAttribute('background')\r\n\t\t\t\t? \\trim($oElement->getAttribute('background')) : '';\r\n\t\t\t$sBackgroundColor = $oElement->hasAttribute('bgcolor')\r\n\t\t\t\t? \\trim($oElement->getAttribute('bgcolor')) : '';\r\n\r\n\t\t\tif (!empty($sBackground) || !empty($sBackgroundColor))\r\n\t\t\t{\r\n\t\t\t\t$aStyles = array();\r\n\t\t\t\t$sStyles = $oElement->hasAttribute('style')\r\n\t\t\t\t\t? \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';')) : '';\r\n\r\n\t\t\t\tif (!empty($sBackground))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aStyles[] = 'background-image: url(\\''.$sBackground.'\\')';\r\n\t\t\t\t\t$oElement->removeAttribute('background');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!empty($sBackgroundColor))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aStyles[] = 'background-color: '.$sBackgroundColor;\r\n\t\t\t\t\t$oElement->removeAttribute('bgcolor');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$oElement->setAttribute('style', (empty($sStyles) ? '' : $sStyles.'; ').\\implode('; ', $aStyles));\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('style') && !$oElement->hasAttribute('data-x-skip-style'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('style',\r\n\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyle($oElement->getAttribute('style'), $oElement, $bHasExternals,\r\n\t\t\t\t\t\t$aFoundCIDs, $aContentLocationUrls, $aFoundedContentLocationUrls, $bDoNotReplaceExternalUrl, $fAdditionalExternalFilter));\r\n\t\t\t}\r\n\r\n\t\t\t$oElement->removeAttribute('data-x-skip-style');\r\n\r\n\t\t\tif (\\MailSo\\Config::$HtmlStrictDebug && 0 < \\count($aRemovedAttrs))\r\n\t\t\t{\r\n\t\t\t\tunset($aRemovedAttrs['class'], $aRemovedAttrs['target'], $aRemovedAttrs['id'], $aRemovedAttrs['name'],\r\n\t\t\t\t\t$aRemovedAttrs['itemprop'], $aRemovedAttrs['itemscope'], $aRemovedAttrs['itemtype']);\r\n\r\n\t\t\t\t$aRemovedAttrs = \\array_keys($aRemovedAttrs);\r\n\t\t\t\tif (0 < \\count($aRemovedAttrs))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-removed-attrs', \\implode(',', $aRemovedAttrs));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$sResult = \\MailSo\\Base\\HtmlUtils::GetTextFromDom($oDom, $bWrapByFakeHtmlAndBodyDiv);\r\n\t\tunset($oDom);\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param array $aFoundCids = array()\r\n\t * @param array|null $mFoundDataURL = null\r\n\t * @param array $aFoundedContentLocationUrls = array()\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function BuildHtml($sHtml, &$aFoundCids = array(), &$mFoundDataURL = null, &$aFoundedContentLocationUrls = array())\r\n\t{\r\n\t\t$oDom = \\MailSo\\Base\\HtmlUtils::GetDomFromText($sHtml);\r\n\r\n\t\t\\MailSo\\Base\\HtmlUtils::ClearTags($oDom);\r\n\t\tunset($sHtml);\r\n\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\t$sTagNameLower = \\strtolower($oElement->tagName);\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-src-cid'))\r\n\t\t\t{\r\n\t\t\t\t$sCid = $oElement->getAttribute('data-x-src-cid');\r\n\t\t\t\t$oElement->removeAttribute('data-x-src-cid');\r\n\r\n\t\t\t\tif (!empty($sCid))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aFoundCids[] = $sCid;\r\n\r\n\t\t\t\t\t@$oElement->removeAttribute('src');\r\n\t\t\t\t\t$oElement->setAttribute('src', 'cid:'.$sCid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-src-location'))\r\n\t\t\t{\r\n\t\t\t\t$sSrc = $oElement->getAttribute('data-x-src-location');\r\n\t\t\t\t$oElement->removeAttribute('data-x-src-location');\r\n\r\n\t\t\t\tif (!empty($sSrc))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aFoundedContentLocationUrls[] = $sSrc;\r\n\r\n\t\t\t\t\t@$oElement->removeAttribute('src');\r\n\t\t\t\t\t$oElement->setAttribute('src', $sSrc);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-broken-src'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('src', $oElement->getAttribute('data-x-broken-src'));\r\n\t\t\t\t$oElement->removeAttribute('data-x-broken-src');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-src'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('src', $oElement->getAttribute('data-x-src'));\r\n\t\t\t\t$oElement->removeAttribute('data-x-src');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-href'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('href', $oElement->getAttribute('data-x-href'));\r\n\t\t\t\t$oElement->removeAttribute('data-x-href');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-style-cid-name') && $oElement->hasAttribute('data-x-style-cid'))\r\n\t\t\t{\r\n\t\t\t\t$sCidName = $oElement->getAttribute('data-x-style-cid-name');\r\n\t\t\t\t$sCid = $oElement->getAttribute('data-x-style-cid');\r\n\r\n\t\t\t\t$oElement->removeAttribute('data-x-style-cid-name');\r\n\t\t\t\t$oElement->removeAttribute('data-x-style-cid');\r\n\t\t\t\tif (!empty($sCidName) && !empty($sCid) && \\in_array($sCidName,\r\n\t\t\t\t\tarray('background-image', 'background', 'list-style-image', 'content')))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sStyles = '';\r\n\t\t\t\t\tif ($oElement->hasAttribute('style'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sStyles = \\trim(\\trim($oElement->getAttribute('style')), ';');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$sBack = $sCidName.': url(cid:'.$sCid.')';\r\n\t\t\t\t\t$sStyles = \\preg_replace('/'.\\preg_quote($sCidName, '/').':\\s?[^;]+/i', $sBack, $sStyles);\r\n\t\t\t\t\tif (false === \\strpos($sStyles, $sBack))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sStyles .= empty($sStyles) ? '': '; ';\r\n\t\t\t\t\t\t$sStyles .= $sBack;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$oElement->setAttribute('style', $sStyles);\r\n\t\t\t\t\t$aFoundCids[] = $sCid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tforeach (array(\r\n\t\t\t\t'data-x-additional-src', 'data-x-additional-style-url', 'data-removed-attrs',\r\n\t\t\t\t'data-original', 'data-x-div-type', 'data-wrp', 'data-bind'\r\n\t\t\t) as $sName)\r\n\t\t\t{\r\n\t\t\t\tif ($oElement->hasAttribute($sName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->removeAttribute($sName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-style-url'))\r\n\t\t\t{\r\n\t\t\t\t$sAddStyles = $oElement->getAttribute('data-x-style-url');\r\n\t\t\t\t$oElement->removeAttribute('data-x-style-url');\r\n\r\n\t\t\t\tif (!empty($sAddStyles))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sStyles = '';\r\n\t\t\t\t\tif ($oElement->hasAttribute('style'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sStyles = \\trim(\\trim($oElement->getAttribute('style')), ';');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$oElement->setAttribute('style', (empty($sStyles) ? '' : $sStyles.'; ').$sAddStyles);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ('img' === $sTagNameLower && \\is_array($mFoundDataURL))\r\n\t\t\t{\r\n\t\t\t\t$sSrc = $oElement->getAttribute('src');\r\n\t\t\t\tif ('data:image/' === \\strtolower(\\substr($sSrc, 0, 11)))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sHash = \\md5($sSrc);\r\n\t\t\t\t\t$mFoundDataURL[$sHash] = $sSrc;\r\n\r\n\t\t\t\t\t$oElement->setAttribute('src', 'cid:'.$sHash);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$sResult = \\MailSo\\Base\\HtmlUtils::GetTextFromDom($oDom, false);\r\n\t\tunset($oDom);\r\n\r\n\t\treturn '<!DOCTYPE html><html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /></head>'.\r\n\t\t\t'<body>'.$sResult.'</body></html>';\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sText\r\n\t * @param bool $bLinksWithTargetBlank = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ConvertPlainToHtml($sText, $bLinksWithTargetBlank = true)\r\n\t{\r\n\t\t$sText = \\trim($sText);\r\n\t\tif (0 === \\strlen($sText))\r\n\t\t{\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\t$sText = \\MailSo\\Base\\LinkFinder::NewInstance()\r\n\t\t\t->Text($sText)\r\n\t\t\t->UseDefaultWrappers($bLinksWithTargetBlank)\r\n\t\t\t->CompileText()\r\n\t\t;\r\n\r\n\t\t$sText = \\str_replace(\"\\r\", '', $sText);\r\n\r\n\t\t$aText = \\explode(\"\\n\", $sText);\r\n\t\tunset($sText);\r\n\r\n\t\t$bIn = false;\r\n\t\t$bDo = true;\r\n\t\tdo\r\n\t\t{\r\n\t\t\t$bDo = false;\r\n\t\t\t$aNextText = array();\r\n\t\t\tforeach ($aText as $sTextLine)\r\n\t\t\t{\r\n\t\t\t\t$bStart = 0 === \\strpos(\\ltrim($sTextLine), '&gt;');\r\n\t\t\t\tif ($bStart && !$bIn)\r\n\t\t\t\t{\r\n\t\t\t\t\t$bDo = true;\r\n\t\t\t\t\t$bIn = true;\r\n\t\t\t\t\t$aNextText[] = '<blockquote>';\r\n\t\t\t\t\t$aNextText[] = \\substr(\\ltrim($sTextLine), 4);\r\n\t\t\t\t}\r\n\t\t\t\telse if (!$bStart && $bIn)\r\n\t\t\t\t{\r\n\t\t\t\t\t$bIn = false;\r\n\t\t\t\t\t$aNextText[] = '</blockquote>';\r\n\t\t\t\t\t$aNextText[] = $sTextLine;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($bStart && $bIn)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aNextText[] = \\substr(\\ltrim($sTextLine), 4);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$aNextText[] = $sTextLine;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($bIn)\r\n\t\t\t{\r\n\t\t\t\t$bIn = false;\r\n\t\t\t\t$aNextText[] = '</blockquote>';\r\n\t\t\t}\r\n\r\n\t\t\t$aText = $aNextText;\r\n\t\t}\r\n\t\twhile ($bDo);\r\n\r\n\t\t$sText = \\join(\"\\n\", $aText);\r\n\t\tunset($aText);\r\n\r\n\t\t$sText = \\preg_replace('/[\\n][ ]+/', \"\\n\", $sText);\r\n//\t\t$sText = \\preg_replace('/[\\s]+([\\s])/', '\\\\1', $sText);\r\n\r\n\t\t$sText = \\preg_replace('/<blockquote>[\\s]+/i', '<blockquote>', $sText);\r\n\t\t$sText = \\preg_replace('/[\\s]+<\\/blockquote>/i', '</blockquote>', $sText);\r\n\r\n\t\t$sText = \\preg_replace('/<\\/blockquote>([\\n]{0,2})<blockquote>/i', '\\\\1', $sText);\r\n\t\t$sText = \\preg_replace('/[\\n]{3,}/', \"\\n\\n\", $sText);\r\n\r\n\t\t$sText = \\strtr($sText, array(\r\n\t\t\t\"\\n\" => \"<br />\",\r\n\t\t\t\"\\t\" => '&nbsp;&nbsp;&nbsp;',\r\n\t\t\t'  ' => '&nbsp;&nbsp;'\r\n\t\t));\r\n\r\n\t\treturn $sText;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sText\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ConvertHtmlToPlain($sText)\r\n\t{\r\n\t\t$sText = \\trim(\\stripslashes($sText));\r\n\t\t$sText = \\MailSo\\Base\\Utils::StripSpaces($sText);\r\n\r\n\t\t$sText = \\preg_replace(array(\r\n\t\t\t\"/\\r/\",\r\n\t\t\t\"/[\\n\\t]+/\",\r\n\t\t\t'/<script[^>]*>.*?<\\/script>/i',\r\n\t\t\t'/<style[^>]*>.*?<\\/style>/i',\r\n\t\t\t'/<title[^>]*>.*?<\\/title>/i',\r\n\t\t\t'/<h[123][^>]*>(.+?)<\\/h[123]>/i',\r\n\t\t\t'/<h[456][^>]*>(.+?)<\\/h[456]>/i',\r\n\t\t\t'/<p[^>]*>/i',\r\n\t\t\t'/<br[^>]*>/i',\r\n\t\t\t'/<b[^>]*>(.+?)<\\/b>/i',\r\n\t\t\t'/<i[^>]*>(.+?)<\\/i>/i',\r\n\t\t\t'/(<ul[^>]*>|<\\/ul>)/i',\r\n\t\t\t'/(<ol[^>]*>|<\\/ol>)/i',\r\n\t\t\t'/<li[^>]*>/i',\r\n\t\t\t'/<a[^>]*href=\"([^\"]+)\"[^>]*>(.+?)<\\/a>/i',\r\n\t\t\t'/<hr[^>]*>/i',\r\n\t\t\t'/(<table[^>]*>|<\\/table>)/i',\r\n\t\t\t'/(<tr[^>]*>|<\\/tr>)/i',\r\n\t\t\t'/<td[^>]*>(.+?)<\\/td>/i',\r\n\t\t\t'/<th[^>]*>(.+?)<\\/th>/i',\r\n\t\t\t'/&nbsp;/i',\r\n\t\t\t'/&quot;/i',\r\n\t\t\t'/&amp;/i',\r\n\t\t\t'/&copy;/i',\r\n\t\t\t'/&trade;/i',\r\n\t\t\t'/&#8220;/',\r\n\t\t\t'/&#8221;/',\r\n\t\t\t'/&#8211;/',\r\n\t\t\t'/&#8217;/',\r\n\t\t\t'/&#38;/',\r\n\t\t\t'/&#169;/',\r\n\t\t\t'/&#8482;/',\r\n\t\t\t'/&#151;/',\r\n\t\t\t'/&#147;/',\r\n\t\t\t'/&#148;/',\r\n\t\t\t'/&#149;/',\r\n\t\t\t'/&reg;/i',\r\n\t\t\t'/&bull;/i',\r\n\t\t\t'/&[&;]+;/i',\r\n\t\t\t'/&#39;/',\r\n\t\t\t'/&#160;/'\r\n\t\t), array(\r\n\t\t\t'',\r\n\t\t\t' ',\r\n\t\t\t'',\r\n\t\t\t'',\r\n\t\t\t'',\r\n\t\t\t\"\\n\\n\\\\1\\n\\n\",\r\n\t\t\t\"\\n\\n\\\\1\\n\\n\",\r\n\t\t\t\"\\n\\n\\t\",\r\n\t\t\t\"\\n\",\r\n\t\t\t'\\\\1',\r\n\t\t\t'\\\\1',\r\n\t\t\t\"\\n\\n\",\r\n\t\t\t\"\\n\\n\",\r\n\t\t\t\"\\n\\t* \",\r\n\t\t\t'\\\\2 (\\\\1)',\r\n\t\t\t\"\\n------------------------------------\\n\",\r\n\t\t\t\"\\n\",\r\n\t\t\t\"\\n\",\r\n\t\t\t\"\\t\\\\1\\n\",\r\n\t\t\t\"\\t\\\\1\\n\",\r\n\t\t\t' ',\r\n\t\t\t'\"',\r\n\t\t\t'&',\r\n\t\t\t'(c)',\r\n\t\t\t'(tm)',\r\n\t\t\t'\"',\r\n\t\t\t'\"',\r\n\t\t\t'-',\r\n\t\t\t\"'\",\r\n\t\t\t'&',\r\n\t\t\t'(c)',\r\n\t\t\t'(tm)',\r\n\t\t\t'--',\r\n\t\t\t'\"',\r\n\t\t\t'\"',\r\n\t\t\t'*',\r\n\t\t\t'(R)',\r\n\t\t\t'*',\r\n\t\t\t'',\r\n\t\t\t'\\'',\r\n\t\t\t''\r\n\t\t), $sText);\r\n\r\n\t\t$sText = \\str_ireplace('<div>',\"\\n<div>\", $sText);\r\n\t\t$sText = \\strip_tags($sText, '');\r\n\t\t$sText = \\preg_replace(\"/\\n\\\\s+\\n/\", \"\\n\", $sText);\r\n\t\t$sText = \\preg_replace(\"/[\\n]{3,}/\", \"\\n\\n\", $sText);\r\n\r\n\t\t$sText = \\preg_replace(array(\r\n\t\t\t'/&gt;/i',\r\n\t\t\t'/&lt;/i'\r\n\t\t), array(\r\n\t\t\t'>',\r\n\t\t\t'<'\r\n\t\t), $sText);\r\n\r\n\t\treturn \\trim($sText);\r\n\t}\r\n}\r\n", "<?php\r\n\r\nnamespace RainLoop\\Config;\r\n\r\nclass Application extends \\RainLoop\\Config\\AbstractConfig\r\n{\r\n\tprivate $aReplaceEnv = null;\r\n\r\n\t/**\r\n\t * @return void\r\n\t */\r\n\tpublic function __construct()\r\n\t{\r\n\t\tparent::__construct('application.ini',\r\n\t\t\t'; RainLoop Webmail configuration file\r\n; Please don\\'t add custom parameters here, those will be overwritten',\r\n\t\t\tdefined('APP_ADDITIONAL_CONFIGURATION_NAME') ? APP_ADDITIONAL_CONFIGURATION_NAME : '');\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sSection\r\n\t * @param string $sName\r\n\t * @param mixed $mDefault = null\r\n\t * @param bool $bUseEnvReplace = true\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tpublic function Load()\r\n\t{\r\n\t\tparent::Load();\r\n\r\n\t\t$this->aReplaceEnv = null;\r\n\t\tif ((isset($_ENV) && \\is_array($_ENV) && 0 < \\count($_ENV)) ||\r\n\t\t\t(isset($_SERVER) && \\is_array($_SERVER) && 0 < \\count($_SERVER)))\r\n\t\t{\r\n\t\t\t$sEnvNames = $this->Get('labs', 'replace_env_in_configuration', '');\r\n\t\t\tif (0 < \\strlen($sEnvNames))\r\n\t\t\t{\r\n\t\t\t\t$this->aReplaceEnv = \\explode(',', $sEnvNames);\r\n\t\t\t\tif (\\is_array($this->aReplaceEnv))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->aReplaceEnv = \\array_map('trim', $this->aReplaceEnv);\r\n\t\t\t\t\t$this->aReplaceEnv = \\array_map('strtolower', $this->aReplaceEnv);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!\\is_array($this->aReplaceEnv) || 0 === \\count($this->aReplaceEnv))\r\n\t\t{\r\n\t\t\t$this->aReplaceEnv = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sSection\r\n\t * @param string $sName\r\n\t * @param mixed $mDefault = null\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tpublic function Get($sSection, $sName, $mDefault = null)\r\n\t{\r\n\t\t$mResult = parent::Get($sSection, $sName, $mDefault);\r\n\t\tif ($this->aReplaceEnv && \\is_string($mResult))\r\n\t\t{\r\n\t\t\t$sKey = \\strtolower($sSection.'.'.$sName);\r\n\t\t\tif (\\in_array($sKey, $this->aReplaceEnv) && false !== strpos($mResult, '$'))\r\n\t\t\t{\r\n\t\t\t\t$mResult = \\preg_replace_callback('/\\$([^\\s]+)/', function($aMatch) {\r\n\r\n\t\t\t\t\tif (!empty($aMatch[0]) && !empty($aMatch[1]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (!empty($_ENV[$aMatch[1]]))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn $_SERVER[$aMatch[1]];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!empty($_SERVER[$aMatch[1]]))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn $_SERVER[$aMatch[1]];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn $aMatch[0];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn '';\r\n\r\n\t\t\t\t}, $mResult);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $mResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sPassword\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tpublic function SetPassword($sPassword)\r\n\t{\r\n\t\treturn $this->Set('security', 'admin_password', \\md5(APP_SALT.$sPassword.APP_SALT));\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sPassword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tpublic function ValidatePassword($sPassword)\r\n\t{\r\n\t\t$sPassword = (string) $sPassword;\r\n\t\t$sConfigPassword = (string) $this->Get('security', 'admin_password', '');\r\n\r\n\t\treturn 0 < \\strlen($sPassword) &&\r\n\t\t\t(($sPassword === $sConfigPassword && '12345' === $sConfigPassword) || \\md5(APP_SALT.$sPassword.APP_SALT) === $sConfigPassword);\r\n\t}\r\n\r\n\t/**\r\n\t * @return bool\r\n\t */\r\n\tpublic function Save()\r\n\t{\r\n\t\t$this->Set('version', 'current', APP_VERSION);\r\n\t\t$this->Set('version', 'saved', \\gmdate('r'));\r\n\r\n\t\treturn parent::Save();\r\n\t}\r\n\r\n\t/**\r\n\t * @return array\r\n\t */\r\n\tprotected function defaultValues()\r\n\t{\r\n\t\treturn array(\r\n\r\n\t\t\t'webmail' => array(\r\n\r\n\t\t\t\t'title'\t\t\t\t\t\t\t=> array('RainLoop Webmail', 'Text displayed as page title'),\r\n\t\t\t\t'loading_description'\t\t\t=> array('RainLoop', 'Text displayed on startup'),\r\n\t\t\t\t'favicon_url'\t\t\t\t\t=> array('', ''),\r\n\r\n\t\t\t\t'theme'\t\t\t\t\t\t\t=> array('Default', 'Theme used by default'),\r\n\t\t\t\t'allow_themes'\t\t\t\t\t=> array(true, 'Allow theme selection on settings screen'),\r\n\t\t\t\t'allow_user_background'\t\t\t=> array(false),\r\n\r\n\t\t\t\t'language'\t\t\t\t\t\t=> array('en', 'Language used by default'),\r\n\t\t\t\t'language_admin'\t\t\t\t=> array('en', 'Admin Panel interface language'),\r\n\t\t\t\t'allow_languages_on_settings'\t=> array(true, 'Allow language selection on settings screen'),\r\n\r\n\t\t\t\t'allow_additional_accounts'\t\t=> array(true, ''),\r\n\t\t\t\t'allow_additional_identities'\t=> array(true, ''),\r\n\r\n\t\t\t\t'messages_per_page'\t\t=> array(20, ' Number of messages displayed on page by default'),\r\n\r\n\t\t\t\t'attachment_size_limit'\t=> array(25,\r\n\t\t\t\t\t'File size limit (MB) for file upload on compose screen\r\n0 for unlimited.')\r\n\t\t\t),\r\n\r\n\t\t\t'interface' => array(\r\n\t\t\t\t'show_attachment_thumbnail' => array(true, ''),\r\n\t\t\t\t'use_native_scrollbars' => array(false),\r\n\t\t\t\t'new_move_to_folder_button' => array(true)\r\n\t\t\t),\r\n\r\n\t\t\t'branding' => array(\r\n\t\t\t\t'login_logo'\t\t=> array(''),\r\n\t\t\t\t'login_background'\t=> array(''),\r\n\t\t\t\t'login_desc'\t\t=> array(''),\r\n\t\t\t\t'login_css'\t\t\t=> array(''),\r\n\t\t\t\t'login_powered'\t\t=> array(true),\r\n\r\n\t\t\t\t'user_css'\t\t\t=> array(''),\r\n\t\t\t\t'user_logo'\t\t\t=> array(''),\r\n\t\t\t\t'user_logo_title'\t=> array(''),\r\n\t\t\t\t'user_logo_message'\t=> array(''),\r\n\t\t\t\t'user_iframe_message'\t=> array(''),\r\n\r\n\t\t\t\t'welcome_page_url'\t\t=> array(''),\r\n\t\t\t\t'welcome_page_display'\t=> array('none')\r\n\t\t\t),\r\n\r\n\t\t\t'contacts' => array(\r\n\t\t\t\t'enable'\t\t\t=> array(false, 'Enable contacts'),\r\n\t\t\t\t'allow_sync'\t\t=> array(false),\r\n\t\t\t\t'sync_interval'\t\t=> array(20),\r\n\t\t\t\t'type'\t\t\t\t=> array('sqlite', ''),\r\n\t\t\t\t'pdo_dsn'\t\t\t=> array('mysql:host=127.0.0.1;port=3306;dbname=rainloop', ''),\r\n\t\t\t\t'pdo_user'\t\t\t=> array('root', ''),\r\n\t\t\t\t'pdo_password'\t\t=> array('', ''),\r\n\t\t\t\t'suggestions_limit' => array(30)\r\n\t\t\t),\r\n\r\n\t\t\t'security' => array(\r\n\t\t\t\t'csrf_protection'\t=> array(true,\r\n\t\t\t\t\t'Enable CSRF protection (http://en.wikipedia.org/wiki/Cross-site_request_forgery)'),\r\n\r\n\t\t\t\t'custom_server_signature'\t=> array('RainLoop'),\r\n\t\t\t\t'x_frame_options_header'\t=> array(''),\r\n\r\n\t\t\t\t'openpgp'\t\t\t\t\t=> array(false),\r\n\r\n\t\t\t\t'admin_login'\t\t\t\t=> array('admin', 'Login and password for web admin panel'),\r\n\t\t\t\t'admin_password'\t\t\t=> array('12345'),\r\n\t\t\t\t'allow_admin_panel'\t\t\t=> array(true, 'Access settings'),\r\n\t\t\t\t'allow_two_factor_auth'\t\t=> array(false),\r\n\t\t\t\t'force_two_factor_auth'\t\t=> array(false),\r\n\t\t\t\t'hide_x_mailer_header'\t\t=> array(false),\r\n\t\t\t\t'admin_panel_host'\t\t\t=> array(''),\r\n\t\t\t\t'admin_panel_key'\t\t\t=> array('admin'),\r\n\t\t\t\t'content_security_policy'\t=> array(''),\r\n\t\t\t\t'core_install_access_domain' => array('')\r\n\t\t\t),\r\n\r\n\t\t\t'ssl' => array(\r\n\t\t\t\t'verify_certificate'\t=> array(false, 'Require verification of SSL certificate used.'),\r\n\t\t\t\t'allow_self_signed'\t\t=> array(true, 'Allow self-signed certificates. Requires verify_certificate.'),\r\n\t\t\t\t'cafile'\t\t\t=> array('', 'Location of Certificate Authority file on local filesystem (/etc/ssl/certs/ca-certificates.crt)'),\r\n\t\t\t\t'capath'\t\t\t=> array('', 'capath must be a correctly hashed certificate directory. (/etc/ssl/certs/)'),\r\n\t\t\t\t'client_cert'\t\t\t=> array('', 'Location of client certificate file (pem format with private key) on local filesystem'),\r\n\t\t\t),\r\n\r\n\t\t\t'capa' => array(\r\n\t\t\t\t'folders' => array(true),\r\n\t\t\t\t'composer' => array(true),\r\n\t\t\t\t'contacts' => array(true),\r\n\t\t\t\t'settings' => array(true),\r\n\t\t\t\t'quota' => array(true),\r\n\t\t\t\t'help' => array(true),\r\n\t\t\t\t'reload' => array(true),\r\n\t\t\t\t'search' => array(true),\r\n\t\t\t\t'search_adv' => array(true),\r\n\t\t\t\t'filters' => array(true),\r\n\t\t\t\t'x-templates' => array(false),\r\n\t\t\t\t'dangerous_actions' => array(true),\r\n\t\t\t\t'message_actions' => array(true),\r\n\t\t\t\t'messagelist_actions' => array(true),\r\n\t\t\t\t'attachments_actions' => array(true)\r\n\t\t\t),\r\n\r\n\t\t\t'login' => array(\r\n\r\n\t\t\t\t'default_domain' => array('', ''),\r\n\r\n\t\t\t\t'allow_languages_on_login' => array(true,\r\n\t\t\t\t\t'Allow language selection on webmail login screen'),\r\n\r\n\t\t\t\t'determine_user_language' => array(true, ''),\r\n\t\t\t\t'determine_user_domain' => array(false, ''),\r\n\r\n\t\t\t\t'welcome_page' => array(false, ''),\r\n\r\n\t\t\t\t'hide_submit_button' => array(true),\r\n\r\n\t\t\t\t'forgot_password_link_url' => array('', ''),\r\n\t\t\t\t'registration_link_url' => array('', ''),\r\n\r\n\t\t\t\t'login_lowercase' => array(true, ''),\r\n\r\n\t\t\t\t'sign_me_auto'\t=> array(\\RainLoop\\Enumerations\\SignMeType::DEFAILT_OFF,\r\n\t\t\t\t\t'This option allows webmail to remember the logged in user\r\nonce they closed the browser window.\r\n\r\nValues:\r\n  \"DefaultOff\" - can be used, disabled by default;\r\n  \"DefaultOn\"  - can be used, enabled by default;\r\n  \"Unused\"     - cannot be used')\r\n\t\t\t),\r\n\r\n\t\t\t'plugins' => array(\r\n\t\t\t\t'enable'\t\t=> array(false, 'Enable plugin support'),\r\n\t\t\t\t'enabled_list'\t=> array('', 'List of enabled plugins'),\r\n\t\t\t),\r\n\r\n\t\t\t'defaults' => array(\r\n\t\t\t\t'view_editor_type'\t\t=> array('Html', 'Editor mode used by default (Plain, Html, HtmlForced or PlainForced)'),\r\n\t\t\t\t'view_layout'\t\t\t=> array(1, 'layout: 0 - no preview, 1 - side preview, 2 - bottom preview'),\r\n\t\t\t\t'view_use_checkboxes'\t=> array(true),\r\n\t\t\t\t'autologout'\t\t\t=> array(30),\r\n\t\t\t\t'show_images'\t\t\t=> array(false),\r\n\t\t\t\t'contacts_autosave'\t\t=> array(true),\r\n\t\t\t\t'mail_use_threads'\t\t=> array(false),\r\n\t\t\t\t'allow_draft_autosave'\t=> array(true),\r\n\t\t\t\t'mail_reply_same_folder' => array(false)\r\n\t\t\t),\r\n\r\n\t\t\t'logs' => array(\r\n\r\n\t\t\t\t'enable' => array(false, 'Enable logging'),\r\n\r\n\t\t\t\t'write_on_error_only' => array(false, 'Logs entire request only if error occured (php requred)'),\r\n\t\t\t\t'write_on_php_error_only' => array(false, 'Logs entire request only if php error occured'),\r\n\t\t\t\t'write_on_timeout_only' => array(0, 'Logs entire request only if request timeout (in seconds) occured.'),\r\n\r\n\t\t\t\t'hide_passwords' => array(true, 'Required for development purposes only.\r\nDisabling this option is not recommended.'),\r\n\r\n\t\t\t\t'time_offset' => array('0'),\r\n\t\t\t\t'session_filter' => array(''),\r\n\r\n\t\t\t\t'sentry_dsn' => array(''),\r\n\r\n\t\t\t\t'filename' => array('log-{date:Y-m-d}.txt',\r\n\t\t\t\t\t'Log filename.\r\nFor security reasons, some characters are removed from filename.\r\nAllows for pattern-based folder creation (see examples below).\r\n\r\nPatterns:\r\n  {date:Y-m-d}  - Replaced by pattern-based date\r\n                  Detailed info: http://www.php.net/manual/en/function.date.php\r\n  {user:email}  - Replaced by user\\'s email address\r\n                  If user is not logged in, value is set to \"unknown\"\r\n  {user:login}  - Replaced by user\\'s login (the user part of an email)\r\n                  If user is not logged in, value is set to \"unknown\"\r\n  {user:domain} - Replaced by user\\'s domain name (the domain part of an email)\r\n                  If user is not logged in, value is set to \"unknown\"\r\n  {user:uid}    - Replaced by user\\'s UID regardless of account currently used\r\n\r\n  {user:ip}\r\n  {request:ip}  - Replaced by user\\'s IP address\r\n\r\nOthers:\r\n  {imap:login} {imap:host} {imap:port}\r\n  {smtp:login} {smtp:host} {smtp:port}\r\n\r\nExamples:\r\n  filename = \"log-{date:Y-m-d}.txt\"\r\n  filename = \"{date:Y-m-d}/{user:domain}/{user:email}_{user:uid}.log\"\r\n  filename = \"{user:email}-{date:Y-m-d}.txt\"'),\r\n\r\n\t\t\t\t'auth_logging' => array(false, 'Enable auth logging in a separate file (for fail2ban)'),\r\n\t\t\t\t'auth_logging_filename' => array('fail2ban/auth-{date:Y-m-d}.txt'),\r\n\t\t\t\t'auth_logging_format' => array('[{date:Y-m-d H:i:s}] Auth failed: ip={request:ip} user={imap:login} host={imap:host} port={imap:port}')\r\n\t\t\t),\r\n\r\n\t\t\t'debug' => array(\r\n\t\t\t\t'enable'\t=> array(false, 'Special option required for development purposes')\r\n\t\t\t),\r\n\r\n\t\t\t'social' => array(\r\n\t\t\t\t'google_enable' => array(false, 'Google'),\r\n\t\t\t\t'google_enable_auth' => array(false),\r\n\t\t\t\t'google_enable_auth_fast' => array(false),\r\n\t\t\t\t'google_enable_drive' => array(false),\r\n\t\t\t\t'google_enable_preview' => array(false),\r\n\t\t\t\t'google_client_id' => array(''),\r\n\t\t\t\t'google_client_secret' => array(''),\r\n\t\t\t\t'google_api_key' => array(''),\r\n\r\n\t\t\t\t'fb_enable' => array(false, 'Facebook'),\r\n\t\t\t\t'fb_app_id' => array(''),\r\n\t\t\t\t'fb_app_secret' => array(''),\r\n\r\n\t\t\t\t'twitter_enable' => array(false, 'Twitter'),\r\n\t\t\t\t'twitter_consumer_key' => array(''),\r\n\t\t\t\t'twitter_consumer_secret' => array(''),\r\n\r\n\t\t\t\t'dropbox_enable' => array(false, 'Dropbox'),\r\n\t\t\t\t'dropbox_api_key' => array('')\r\n\t\t\t),\r\n\r\n\t\t\t'cache' => array(\r\n\t\t\t\t'enable' => array(true,\r\n\t\t\t\t\t'The section controls caching of the entire application.\r\n\r\nEnables caching in the system'),\r\n\r\n\t\t\t\t'index' => array('v1', 'Additional caching key. If changed, cache is purged'),\r\n\r\n\t\t\t\t'fast_cache_driver' => array('files', 'Can be: files, APC, memcache, redis (beta)'),\r\n\t\t\t\t'fast_cache_index' => array('v1', 'Additional caching key. If changed, fast cache is purged'),\r\n\r\n\t\t\t\t'http' => array(true, 'Browser-level cache. If enabled, caching is maintainted without using files'),\r\n\t\t\t\t'http_expires' => array(3600, 'Browser-level cache time (seconds, Expires header)'),\r\n\r\n\t\t\t\t'server_uids' => array(true, 'Caching message UIDs when searching and sorting (threading)')\r\n\t\t\t),\r\n\r\n\t\t\t'labs' => array(\r\n\t\t\t\t'allow_mobile_version' => array(true,\r\n\t\t\t\t\t'Experimental settings. Handle with care.\r\n'),\r\n\t\t\t\t'ignore_folders_subscription' => array(false),\r\n\t\t\t\t'check_new_password_strength' => array(true),\r\n\t\t\t\t'update_channel' => array('stable'),\r\n\t\t\t\t'allow_gravatar' => array(true),\r\n\t\t\t\t'allow_prefetch' => array(true),\r\n\t\t\t\t'allow_smart_html_links' => array(true),\r\n\t\t\t\t'cache_system_data' => array(true),\r\n\t\t\t\t'date_from_headers' => array(true),\r\n\t\t\t\t'autocreate_system_folders' => array(true),\r\n\t\t\t\t'allow_message_append' => array(false),\r\n\t\t\t\t'disable_iconv_if_mbstring_supported' => array(false),\r\n\t\t\t\t'login_fault_delay' => array(1),\r\n\t\t\t\t'log_ajax_response_write_limit' => array(300),\r\n\t\t\t\t'allow_html_editor_source_button' => array(false),\r\n\t\t\t\t'allow_html_editor_biti_buttons' => array(false),\r\n\t\t\t\t'allow_ctrl_enter_on_compose' => array(true),\r\n\t\t\t\t'try_to_detect_hidden_images' => array(false),\r\n\t\t\t\t'hide_dangerous_actions' => array(false),\r\n\t\t\t\t'use_app_debug_js' => array(false),\r\n\t\t\t\t'use_mobile_version_for_tablets' => array(false),\r\n\t\t\t\t'use_app_debug_css' => array(false),\r\n\t\t\t\t'use_imap_sort' => array(true),\r\n\t\t\t\t'use_imap_force_selection' => array(false),\r\n\t\t\t\t'use_imap_list_subscribe' => array(true),\r\n\t\t\t\t'use_imap_thread' => array(true),\r\n\t\t\t\t'use_imap_move' => array(false),\r\n\t\t\t\t'use_imap_expunge_all_on_delete' => array(false),\r\n\t\t\t\t'imap_forwarded_flag' => array('$Forwarded'),\r\n\t\t\t\t'imap_read_receipt_flag' => array('$ReadReceipt'),\r\n\t\t\t\t'imap_body_text_limit' => array(555000),\r\n\t\t\t\t'imap_message_list_fast_simple_search' => array(true),\r\n\t\t\t\t'imap_message_list_count_limit_trigger' => array(0),\r\n\t\t\t\t'imap_message_list_date_filter' => array(0),\r\n\t\t\t\t'imap_message_list_permanent_filter' => array(''),\r\n\t\t\t\t'imap_message_all_headers' => array(false),\r\n\t\t\t\t'imap_large_thread_limit' => array(50),\r\n\t\t\t\t'imap_folder_list_limit' => array(200),\r\n\t\t\t\t'imap_show_login_alert' => array(true),\r\n\t\t\t\t'imap_use_auth_plain' => array(true),\r\n\t\t\t\t'imap_use_auth_cram_md5' => array(false),\r\n\t\t\t\t'smtp_show_server_errors' => array(false),\r\n\t\t\t\t'smtp_use_auth_plain' => array(true),\r\n\t\t\t\t'smtp_use_auth_cram_md5' => array(false),\r\n\t\t\t\t'sieve_allow_raw_script' => array(false),\r\n\t\t\t\t'sieve_utf8_folder_name' => array(true),\r\n\t\t\t\t'sieve_auth_plain_initial' => array(true),\r\n\t\t\t\t'sieve_allow_fileinto_inbox' => array(false),\r\n\t\t\t\t'imap_timeout' => array(300),\r\n\t\t\t\t'smtp_timeout' => array(60),\r\n\t\t\t\t'sieve_timeout' => array(10),\r\n\t\t\t\t'domain_list_limit' => array(99),\r\n\t\t\t\t'mail_func_clear_headers' => array(true),\r\n\t\t\t\t'mail_func_additional_parameters' => array(false),\r\n\t\t\t\t'favicon_status' => array(true),\r\n\t\t\t\t'folders_spec_limit' => array(50),\r\n\t\t\t\t'owncloud_save_folder' => array('Attachments'),\r\n\t\t\t\t'owncloud_suggestions' => array(true),\r\n\t\t\t\t'curl_proxy' => array(''),\r\n\t\t\t\t'curl_proxy_auth' => array(''),\r\n\t\t\t\t'in_iframe' => array(false),\r\n\t\t\t\t'force_https' => array(false),\r\n\t\t\t\t'custom_login_link' => array(''),\r\n\t\t\t\t'custom_logout_link' => array(''),\r\n\t\t\t\t'allow_external_login' => array(false),\r\n\t\t\t\t'allow_external_sso' => array(false),\r\n\t\t\t\t'external_sso_key' => array(''),\r\n\t\t\t\t'http_client_ip_check_proxy' => array(false),\r\n\t\t\t\t'fast_cache_memcache_host' => array('127.0.0.1'),\r\n\t\t\t\t'fast_cache_memcache_port' => array(11211),\r\n\t\t\t\t'fast_cache_redis_host' => array('127.0.0.1'),\r\n\t\t\t\t'fast_cache_redis_port' => array(6379),\r\n\t\t\t\t'use_local_proxy_for_external_images' => array(false),\r\n\t\t\t\t'detect_image_exif_orientation' => array(true),\r\n\t\t\t\t'cookie_default_path' => array(''),\r\n\t\t\t\t'cookie_default_secure' => array(false),\r\n\t\t\t\t'check_new_messages' => array(true),\r\n\t\t\t\t'replace_env_in_configuration' => array(''),\r\n\t\t\t\t'startup_url' => array(''),\r\n\t\t\t\t'strict_html_parser' => array(false),\r\n\t\t\t\t'allow_cmd' => array(false),\r\n\t\t\t\t'dev_email' => array(''),\r\n\t\t\t\t'dev_password' => array('')\r\n\t\t\t),\r\n\r\n\t\t\t'version' => array(\r\n\t\t\t\t'current' => array(''),\r\n\t\t\t\t'saved' => array('')\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n", "<?php\r\n\r\nnamespace RainLoop;\r\n\r\nclass Service\r\n{\r\n\t/**\r\n\t * @var \\MailSo\\Base\\Http\r\n\t */\r\n\tprivate $oHttp;\r\n\r\n\t/**\r\n\t * @var \\RainLoop\\Actions\r\n\t */\r\n\tprivate $oActions;\r\n\r\n\t/**\r\n\t * @var \\RainLoop\\ServiceActions\r\n\t */\r\n\tprivate $oServiceActions;\r\n\r\n\t/**\r\n\t * @return void\r\n\t */\r\n\tprivate function __construct()\r\n\t{\r\n\t\t$this->oHttp = \\MailSo\\Base\\Http::SingletonInstance();\r\n\t\t$this->oActions = \\RainLoop\\Api::Actions();\r\n\r\n\t\t$this->oServiceActions = new \\RainLoop\\ServiceActions($this->oHttp, $this->oActions);\r\n\r\n\t\tif ($this->oActions->Config()->Get('debug', 'enable', false))\r\n\t\t{\r\n\t\t\t\\error_reporting(E_ALL);\r\n\t\t\t\\ini_set('display_errors', 1);\r\n\t\t}\r\n\r\n\t\t$sServer = \\trim($this->oActions->Config()->Get('security', 'custom_server_signature', ''));\r\n\t\tif (0 < \\strlen($sServer))\r\n\t\t{\r\n\t\t\t@\\header('Server: '.$sServer, true);\r\n\t\t}\r\n\r\n\t\t$sXFrameOptionsHeader = \\trim($this->oActions->Config()->Get('security', 'x_frame_options_header', ''));\r\n\t\tif (0 < \\strlen($sXFrameOptionsHeader))\r\n\t\t{\r\n\t\t\t@\\header('X-Frame-Options: '.$sXFrameOptionsHeader, true);\r\n\t\t}\r\n\r\n\t\tif ($this->oActions->Config()->Get('labs', 'force_https', false) && !$this->oHttp->IsSecure())\r\n\t\t{\r\n\t\t\t@\\header('Location: https://'.$this->oHttp->GetHost(false, false).$this->oHttp->GetUrl(), true);\r\n\t\t\texit(0);\r\n\t\t}\r\n\r\n\t\t$this->localHandle();\r\n\t}\r\n\r\n\t/**\r\n\t * @return bool\r\n\t */\r\n\tpublic function RunResult()\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @staticvar bool $bOne\r\n\t * @return bool\r\n\t */\r\n\tpublic static function Handle()\r\n\t{\r\n\t\tstatic $bOne = null;\r\n\t\tif (null === $bOne)\r\n\t\t{\r\n\t\t\t$oService = null;\r\n\t\t\tif (\\class_exists('MailSo\\Version'))\r\n\t\t\t{\r\n\t\t\t\t$oService = new self();\r\n\t\t\t}\r\n\r\n\t\t\t$bOne = $oService->RunResult();\r\n\t\t}\r\n\r\n\t\treturn $bOne;\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Service\r\n\t */\r\n\tprivate function localHandle()\r\n\t{\r\n\t\tif (!\\class_exists('MailSo\\Version'))\r\n\t\t{\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\t$this->oActions->BootStart();\r\n\r\n\t\t$sResult = '';\r\n\t\t$bCached = false;\r\n\r\n\t\t$sQuery = $this->oActions->ParseQueryAuthString();\r\n\r\n\t\t$this->oActions->Plugins()->RunHook('filter.http-query', array(&$sQuery));\r\n\t\t$aPaths = \\explode('/', $sQuery);\r\n\t\t$this->oActions->Plugins()->RunHook('filter.http-paths', array(&$aPaths));\r\n\r\n\t\t$bAdmin = false;\r\n\t\t$sAdminPanelHost = $this->oActions->Config()->Get('security', 'admin_panel_host', '');\r\n\t\tif (empty($sAdminPanelHost))\r\n\t\t{\r\n\t\t\t$sAdminPanelKey = \\strtolower($this->oActions->Config()->Get('security', 'admin_panel_key', 'admin'));\r\n\t\t\t$bAdmin = !empty($aPaths[0]) && \\strtolower($aPaths[0]) === $sAdminPanelKey;\r\n\t\t}\r\n\t\telse if (empty($aPaths[0]) &&\r\n\t\t\t\\MailSo\\Base\\Utils::StrToLowerIfAscii($sAdminPanelHost) === \\MailSo\\Base\\Utils::StrToLowerIfAscii($this->oHttp->GetHost()))\r\n\t\t{\r\n\t\t\t$bAdmin = true;\r\n\t\t}\r\n\r\n\t\tif ($this->oHttp->IsPost())\r\n\t\t{\r\n\t\t\t$this->oHttp->ServerNoCache();\r\n\t\t}\r\n\r\n\t\tif ($bAdmin && !$this->oActions->Config()->Get('security', 'allow_admin_panel', true))\r\n\t\t{\r\n\t\t\techo $this->oServiceActions->ErrorTemplates('Access Denied.',\r\n\t\t\t\t'Access to the RainLoop Webmail Admin Panel is not allowed!', true);\r\n\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\t$bIndex = true;\r\n\t\tif (0 < \\count($aPaths) && !empty($aPaths[0]) && !$bAdmin && 'index' !== \\strtolower($aPaths[0]))\r\n\t\t{\r\n\t\t\t$bIndex = false;\r\n\t\t\t$sMethodName = 'Service'.\\preg_replace('/@.+$/', '', $aPaths[0]);\r\n\t\t\t$sMethodExtra = 0 < \\strpos($aPaths[0], '@') ? \\preg_replace('/^[^@]+@/', '', $aPaths[0]) : '';\r\n\r\n\t\t\tif (\\method_exists($this->oServiceActions, $sMethodName) &&\r\n\t\t\t\t\\is_callable(array($this->oServiceActions, $sMethodName)))\r\n\t\t\t{\r\n\t\t\t\t$this->oServiceActions->SetQuery($sQuery)->SetPaths($aPaths);\r\n\t\t\t\t$sResult = \\call_user_func(array($this->oServiceActions, $sMethodName), $sMethodExtra);\r\n\t\t\t}\r\n\t\t\telse if (!$this->oActions->Plugins()->RunAdditionalPart($aPaths[0], $aPaths))\r\n\t\t\t{\r\n\t\t\t\t$bIndex = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$bMobile = false;\r\n\t\t$bMobileDevice = false;\r\n\r\n\t\tif ($this->oActions->Config()->Get('labs', 'allow_mobile_version', false))\r\n\t\t{\r\n\t\t\t$bUseMobileVersionForTablets = $this->oActions->Config()->Get('labs', 'use_mobile_version_for_tablets', false);\r\n\r\n\t\t\t$oMobileDetect = new \\Detection\\MobileDetect();\r\n\t\t\t$bMobileDevice = $oMobileDetect->isMobile() &&\r\n\t\t\t\t($bUseMobileVersionForTablets ? true : !$oMobileDetect->isTablet());\r\n\r\n\t\t\tif ($bIndex)\r\n\t\t\t{\r\n\t\t\t\t$sMobileType = (string) \\RainLoop\\Utils::GetCookie(\\RainLoop\\Actions::RL_MOBILE_TYPE, '');\r\n\t\t\t\tswitch ($sMobileType) {\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t$sMobileType = '';\r\n\t\t\t\t\t\t$bMobile = $bMobileDevice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mobile':\r\n\t\t\t\t\t\t$bMobile = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'desktop':\r\n\t\t\t\t\t\t$bMobile = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bIndex)\r\n\t\t{\r\n\t\t\t@\\header('Content-Security-Policy:');\r\n\t\t\t@\\header_remove('Content-Security-Policy');\r\n\r\n\t\t\t@header('Content-Type: text/html; charset=utf-8');\r\n\t\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t\tif (!@\\is_dir(APP_DATA_FOLDER_PATH) || !@\\is_writable(APP_DATA_FOLDER_PATH))\r\n\t\t\t{\r\n\t\t\t\techo $this->oServiceActions->ErrorTemplates(\r\n\t\t\t\t\t'Permission denied!',\r\n\t\t\t\t\t'RainLoop Webmail cannot access to the data folder \"'.APP_DATA_FOLDER_PATH.'\"'\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn $this;\r\n\t\t\t}\r\n\r\n\t\t\t$aTemplateParameters = $this->indexTemplateParameters($bAdmin, $bMobile, $bMobileDevice);\r\n\r\n\t\t\t$sCacheFileName = '';\r\n\t\t\tif ($this->oActions->Config()->Get('labs', 'cache_system_data', true) && !empty($aTemplateParameters['{{BaseHash}}']))\r\n\t\t\t{\r\n\t\t\t\t$sCacheFileName = 'TMPL:'.$aTemplateParameters['{{BaseHash}}'];\r\n\t\t\t\t$sResult = $this->oActions->Cacher()->Get($sCacheFileName);\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sResult))\r\n\t\t\t{\r\n//\t\t\t\t$aTemplateParameters['{{BaseTemplates}}'] = $this->oServiceActions->compileTemplates($bAdmin, false);\r\n\t\t\t\t$sResult = \\strtr(\\file_get_contents(APP_VERSION_ROOT_PATH.'app/templates/Index.html'), $aTemplateParameters);\r\n\r\n\t\t\t\t$sResult = \\RainLoop\\Utils::ClearHtmlOutput($sResult);\r\n\t\t\t\tif (0 < \\strlen($sCacheFileName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->oActions->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$bCached = true;\r\n\t\t\t}\r\n\r\n\t\t\t$sResult .= '<!--';\r\n\t\t\t$sResult .= '[time:'.\\substr(\\microtime(true) - APP_START, 0, 6);\r\n\r\n//\t\t\t$sResult .= '][version:'.APP_VERSION;\r\n\t\t\tif ($this->oActions->IsOpen())\r\n\t\t\t{\r\n\t\t\t\t$sResult .= '][AGPLv3';\r\n\t\t\t}\r\n\r\n\t\t\t$sResult .= '][cached:'.($bCached ? 'true' : 'false');\r\n//\t\t\t$sResult .= '][hash:'.$aTemplateParameters['{{BaseHash}}'];\r\n//\t\t\t$sResult .= '][session:'.\\md5(\\RainLoop\\Utils::GetShortToken());\r\n\r\n\t\t\tif ($bMobile)\r\n\t\t\t{\r\n\t\t\t\t$sResult .= '][mobile:true';\r\n\t\t\t}\r\n\r\n\t\t\tif (\\RainLoop\\Utils::IsOwnCloud())\r\n\t\t\t{\r\n\t\t\t\t$sResult .= '][cloud:true';\r\n\t\t\t}\r\n\r\n\t\t\t$sResult .= ']-->';\r\n\t\t}\r\n\r\n\t\t// Output result\r\n\t\techo $sResult;\r\n\t\tunset($sResult);\r\n\r\n\t\t$this->oActions->BootEnd();\r\n\t\treturn $this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sPath\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function staticPath($sPath)\r\n\t{\r\n\t\treturn $this->oActions->StaticPath($sPath);\r\n\t}\r\n\r\n\t/**\r\n\t * @param bool $bAdmin = false\r\n\t * @param bool $bMobile = false\r\n\t * @param bool $bMobileDevice = false\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tprivate function indexTemplateParameters($bAdmin = false, $bMobile = false, $bMobileDevice = false)\r\n\t{\r\n\t\t$sLanguage = 'en';\r\n\t\t$sTheme = 'Default';\r\n\r\n\t\tlist($sLanguage, $sTheme) = $this->oActions->GetLanguageAndTheme($bAdmin, $bMobile);\r\n\r\n\t\t$bAppJsDebug = !!$this->oActions->Config()->Get('labs', 'use_app_debug_js', false);\r\n\t\t$bAppCssDebug = !!$this->oActions->Config()->Get('labs', 'use_app_debug_css', false);\r\n\r\n\t\t$sFaviconUrl = (string) $this->oActions->Config()->Get('webmail', 'favicon_url', '');\r\n\r\n\t\t$sFaviconPngLink = $sFaviconUrl ? $sFaviconUrl : $this->staticPath('apple-touch-icon.png');\r\n\t\t$sAppleTouchLink = $sFaviconUrl ? '' : $this->staticPath('apple-touch-icon.png');\r\n\r\n\t\t$sContentSecurityPolicy = $this->oActions->Config()->Get('security', 'content_security_policy', '');\r\n\t\t$sSentryDsn = $this->oActions->Config()->Get('logs', 'sentry_dsn', '');\r\n\r\n\t\t$aTemplateParameters = array(\r\n\t\t\t'{{BaseAppHeadScriptLink}}' => $sSentryDsn ?\r\n\t\t\t\t'<script type=\"text/javascript\" data-cfasync=\"false\" src=\"https://browser.sentry-cdn.com/5.0.8/bundle.min.js\" crossorigin=\"anonymous\"></script>' : '',\r\n\t\t\t'{{BaseAppBodyScript}}' => $sSentryDsn ?\r\n\t\t\t\t'<script type=\"text/javascript\" data-cfasync=\"false\">window && window.Sentry && window.Sentry.init({dsn:\\''.$sSentryDsn.'\\',ignoreErrors:[\\'Document not active\\']});</script>' : '',\r\n\t\t\t'{{BaseAppFaviconPngLinkTag}}' => $sFaviconPngLink ? '<link type=\"image/png\" rel=\"shortcut icon\" href=\"'.$sFaviconPngLink.'\" />' : '',\r\n\t\t\t'{{BaseAppFaviconTouchLinkTag}}' => $sAppleTouchLink ? '<link type=\"image/png\" rel=\"apple-touch-icon\" href=\"'.$sAppleTouchLink.'\" />' : '',\r\n\t\t\t'{{BaseAppMainCssLink}}' => $this->staticPath('css/app'.($bAppCssDebug ? '' : '.min').'.css'),\r\n\t\t\t'{{BaseAppThemeCssLink}}' => $this->oActions->ThemeLink($sTheme, $bAdmin),\r\n\t\t\t'{{BaseAppPolyfillsScriptLink}}' => $this->staticPath('js/'.($bAppJsDebug ? '' : 'min/').'polyfills'.($bAppJsDebug ? '' : '.min').'.js'),\r\n\t\t\t'{{BaseAppBootScriptLink}}' => $this->staticPath('js/'.($bAppJsDebug ? '' : 'min/').'boot'.($bAppJsDebug ? '' : '.min').'.js'),\r\n\t\t\t'{{BaseViewport}}' => $bMobile ? 'width=device-width,initial-scale=1,user-scalable=no' : 'width=950,maximum-scale=2',\r\n\t\t\t'{{BaseContentSecurityPolicy}}' => $sContentSecurityPolicy ?\r\n\t\t\t\t'<meta http-equiv=\"Content-Security-Policy\" content=\"'.$sContentSecurityPolicy.'\" />' : '',\r\n\t\t\t'{{BaseDir}}' => false && \\in_array($sLanguage, array('ar', 'he', 'ur')) ? 'rtl' : 'ltr',\r\n\t\t\t'{{BaseAppManifestLink}}' => $this->staticPath('manifest.json')\r\n\t\t);\r\n\r\n\t\t$aTemplateParameters['{{RainloopBootData}}'] = \\json_encode(array(\r\n\t\t\t'admin' => $bAdmin,\r\n\t\t\t'language' => $sLanguage,\r\n\t\t\t'theme' => $sTheme,\r\n\t\t\t'mobile' => $bMobile,\r\n\t\t\t'mobileDevice' => $bMobileDevice\r\n\t\t));\r\n\r\n\t\t$aTemplateParameters['{{BaseHash}}'] = \\md5(\r\n\t\t\t\\implode('~', array(\r\n\t\t\t\t$bAdmin ? '1' : '0',\r\n\t\t\t\t\\md5($this->oActions->Config()->Get('cache', 'index', '')),\r\n\t\t\t\t$this->oActions->Plugins()->Hash(),\r\n\t\t\t\t\\RainLoop\\Utils::WebVersionPath(),\r\n\t\t\t\tAPP_VERSION,\r\n\t\t\t)).\r\n\t\t\t\\implode('~', $aTemplateParameters)\r\n\t\t);\r\n\r\n\t\treturn $aTemplateParameters;\r\n\t}\r\n}\r\n", "<?php\r\n\r\nnamespace RainLoop;\r\n\r\nclass ServiceActions\r\n{\r\n\t/**\r\n\t * @var \\MailSo\\Base\\Http\r\n\t */\r\n\tprotected $oHttp;\r\n\r\n\t/**\r\n\t * @var \\RainLoop\\Actions\r\n\t */\r\n\tprotected $oActions;\r\n\r\n\t/**\r\n\t * @var array\r\n\t */\r\n\tprotected $aPaths;\r\n\r\n\t/**\r\n\t * @var string\r\n\t */\r\n\tprotected $sQuery;\r\n\r\n\t/**\r\n\t * @param \\MailSo\\Base\\Http $oHttp\r\n\t * @param \\RainLoop\\Actions $oActions\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tpublic function __construct($oHttp, $oActions)\r\n\t{\r\n\t\t$this->oHttp = $oHttp;\r\n\t\t$this->oActions = $oActions;\r\n\t\t$this->aPaths = array();\r\n\t\t$this->sQuery = '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\MailSo\\Log\\Logger\r\n\t */\r\n\tpublic function Logger()\r\n\t{\r\n\t\treturn $this->oActions->Logger();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Plugins\\Manager\r\n\t */\r\n\tpublic function Plugins()\r\n\t{\r\n\t\treturn $this->oActions->Plugins();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Application\r\n\t */\r\n\tpublic function Config()\r\n\t{\r\n\t\treturn $this->oActions->Config();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\MailSo\\Cache\\CacheClient\r\n\t */\r\n\tpublic function Cacher()\r\n\t{\r\n\t\treturn $this->oActions->Cacher();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Providers\\Storage\r\n\t */\r\n\tpublic function StorageProvider()\r\n\t{\r\n\t\treturn $this->oActions->StorageProvider();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Providers\\Settings\r\n\t */\r\n\tpublic function SettingsProvider()\r\n\t{\r\n\t\treturn $this->oActions->SettingsProvider();\r\n\t}\r\n\r\n\t/**\r\n\t * @param array $aPaths\r\n\t *\r\n\t * @return \\RainLoop\\ServiceActions\r\n\t */\r\n\tpublic function SetPaths($aPaths)\r\n\t{\r\n\t\t$this->aPaths = \\is_array($aPaths) ? $aPaths : array();\r\n\t\treturn $this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sQuery\r\n\t *\r\n\t * @return \\RainLoop\\ServiceActions\r\n\t */\r\n\tpublic function SetQuery($sQuery)\r\n\t{\r\n\t\t$this->sQuery = $sQuery;\r\n\t\treturn $this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAjax()\r\n\t{\r\n\t\t@\\ob_start();\r\n\r\n\t\t$aResponseItem = null;\r\n\t\t$oException = null;\r\n\r\n\t\t$sAction = $this->oHttp->GetPost('Action', null);\r\n\t\tif (empty($sAction) && $this->oHttp->IsGet() && !empty($this->aPaths[2]))\r\n\t\t{\r\n\t\t\t$sAction = $this->aPaths[2];\r\n\t\t}\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif ($this->oHttp->IsPost() && !in_array($sAction, array('JsInfo', 'JsError')) &&\r\n\t\t\t\t$this->Config()->Get('security', 'csrf_protection', false) &&\r\n\t\t\t\t$this->oHttp->GetPost('XToken', '') !== \\RainLoop\\Utils::GetCsrfToken())\r\n\t\t\t{\r\n\t\t\t\tthrow new \\RainLoop\\Exceptions\\ClientException(\\RainLoop\\Notifications::InvalidToken);\r\n\t\t\t}\r\n\t\t\telse if (!empty($sAction))\r\n\t\t\t{\r\n\t\t\t\t$sMethodName = 'Do'.$sAction;\r\n\r\n\t\t\t\t$this->Logger()->Write('Action: '.$sMethodName, \\MailSo\\Log\\Enumerations\\Type::NOTE, 'AJAX');\r\n\r\n\t\t\t\t$aPost = $this->oHttp->GetPostAsArray();\r\n\t\t\t\tif (\\is_array($aPost) && 0 < \\count($aPost))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->oActions->SetActionParams($aPost, $sMethodName);\r\n\t\t\t\t\tswitch ($sMethodName)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'DoLogin':\r\n\t\t\t\t\t\tcase 'DoAdminLogin':\r\n\t\t\t\t\t\tcase 'DoAccountAdd':\r\n\t\t\t\t\t\t\t$this->Logger()->AddSecret($this->oActions->GetActionParam('Password', ''));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DoChangePassword':\r\n\t\t\t\t\t\t\t$this->Logger()->AddSecret($this->oActions->GetActionParam('PrevPassword', ''));\r\n\t\t\t\t\t\t\t$this->Logger()->AddSecret($this->oActions->GetActionParam('NewPassword', ''));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$this->Logger()->Write(\\MailSo\\Base\\Utils::Php2js($aPost, $this->Logger()),\r\n\t\t\t\t\t\t\\MailSo\\Log\\Enumerations\\Type::INFO, 'POST', true);\r\n\t\t\t\t}\r\n\t\t\t\telse if (3 < \\count($this->aPaths) && $this->oHttp->IsGet())\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->oActions->SetActionParams(array(\r\n\t\t\t\t\t\t'RawKey' => empty($this->aPaths[3]) ? '' : $this->aPaths[3]\r\n\t\t\t\t\t), $sMethodName);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\\method_exists($this->oActions, $sMethodName) &&\r\n\t\t\t\t\t\\is_callable(array($this->oActions, $sMethodName)))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-pre-call', array($sAction));\r\n\t\t\t\t\t$aResponseItem = \\call_user_func(array($this->oActions, $sMethodName));\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-post-call', array($sAction, &$aResponseItem));\r\n\t\t\t\t}\r\n\t\t\t\telse if ($this->Plugins()->HasAdditionalAjax($sMethodName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-pre-call', array($sAction));\r\n\t\t\t\t\t$aResponseItem = $this->Plugins()->RunAdditionalAjax($sMethodName);\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-post-call', array($sAction, &$aResponseItem));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!\\is_array($aResponseItem))\r\n\t\t\t{\r\n\t\t\t\tthrow new \\RainLoop\\Exceptions\\ClientException(\\RainLoop\\Notifications::UnknownError);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$aResponseItem = $this->oActions->ExceptionResponse(\r\n\t\t\t\tempty($sAction) ? 'Unknown' : $sAction, $oException);\r\n\r\n\t\t\tif (\\is_array($aResponseItem) && $oException instanceof \\RainLoop\\Exceptions\\ClientException)\r\n\t\t\t{\r\n\t\t\t\tif ('Folders' === $sAction)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aResponseItem['ClearAuth'] = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($oException->getLogoutOnException())\r\n\t\t\t\t{\r\n\t\t\t\t\t$aResponseItem['Logout'] = true;\r\n\t\t\t\t\tif ($oException->getAdditionalMessage())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this->oActions->SetSpecLogoutCustomMgsWithDeletion($oException->getAdditionalMessage());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\\is_array($aResponseItem))\r\n\t\t{\r\n\t\t\t$aResponseItem['Time'] = (int) ((\\microtime(true) - APP_START) * 1000);\r\n\t\t}\r\n\r\n\t\t$this->Plugins()->RunHook('filter.ajax-response', array($sAction, &$aResponseItem));\r\n\r\n\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\r\n\t\t$sResult = \\MailSo\\Base\\Utils::Php2js($aResponseItem, $this->Logger());\r\n\r\n\t\t$sObResult = @\\ob_get_clean();\r\n\r\n\t\tif ($this->Logger()->IsEnabled())\r\n\t\t{\r\n\t\t\tif (0 < \\strlen($sObResult))\r\n\t\t\t{\r\n\t\t\t\t$this->Logger()->Write($sObResult, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'OB-DATA');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oException)\r\n\t\t\t{\r\n\t\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR);\r\n\t\t\t}\r\n\r\n\t\t\t$iLimit = (int) $this->Config()->Get('labs', 'log_ajax_response_write_limit', 0);\r\n\t\t\t$this->Logger()->Write(0 < $iLimit && $iLimit < \\strlen($sResult)\r\n\t\t\t\t\t? \\substr($sResult, 0, $iLimit).'...' : $sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'AJAX');\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceOwnCloudAuth()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\tif (!\\RainLoop\\Utils::IsOwnCloud() ||\r\n\t\t\t!isset($_ENV['___rainloop_owncloud_email']) ||\r\n\t\t\t!isset($_ENV['___rainloop_owncloud_password']) ||\r\n\t\t\tempty($_ENV['___rainloop_owncloud_email'])\r\n\t\t)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t\t$this->oActions->Location('./');\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\t$bLogout = true;\r\n\r\n\t\t$sEmail = $_ENV['___rainloop_owncloud_email'];\r\n\t\t$sPassword = $_ENV['___rainloop_owncloud_password'];\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\t\t\t$this->oActions->AuthToken($oAccount);\r\n\r\n\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAppend()\r\n\t{\r\n\t\t@\\ob_start();\r\n\t\t$bResponse = false;\r\n\t\t$oException = null;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif (\\method_exists($this->oActions, 'Append') &&\r\n\t\t\t\t\\is_callable(array($this->oActions, 'Append')))\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->SetActionParams($this->oHttp->GetPostAsArray(), 'Append');\r\n\t\t\t\t$bResponse = \\call_user_func(array($this->oActions, 'Append'));\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$bResponse = false;\r\n\t\t}\r\n\r\n\t\t@\\header('Content-Type: text/plain; charset=utf-8');\r\n\t\t$sResult = true === $bResponse ? '1' : '0';\r\n\r\n\t\t$sObResult = @\\ob_get_clean();\r\n\t\tif (0 < \\strlen($sObResult))\r\n\t\t{\r\n\t\t\t$this->Logger()->Write($sObResult, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'OB-DATA');\r\n\t\t}\r\n\r\n\t\tif ($oException)\r\n\t\t{\r\n\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR);\r\n\t\t}\r\n\r\n\t\t$this->Logger()->Write($sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'APPEND');\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sAction\r\n\t * @param int $iSizeLimit = 0\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function privateUpload($sAction, $iSizeLimit = 0)\r\n\t{\r\n\t\t$oConfig = $this->Config();\r\n\r\n\t\t@\\ob_start();\r\n\t\t$aResponseItem = null;\r\n\t\ttry\r\n\t\t{\r\n\t\t\t$aFile = null;\r\n\t\t\t$sInputName = 'uploader';\r\n\t\t\t$iError = \\RainLoop\\Enumerations\\UploadError::UNKNOWN;\r\n\t\t\t$iSizeLimit = (0 < $iSizeLimit ? $iSizeLimit : ((int) $oConfig->Get('webmail', 'attachment_size_limit', 0))) * 1024 * 1024;\r\n\r\n\t\t\t$iError = UPLOAD_ERR_OK;\r\n\t\t\t$_FILES = isset($_FILES) ? $_FILES : null;\r\n\t\t\tif (isset($_FILES, $_FILES[$sInputName], $_FILES[$sInputName]['name'], $_FILES[$sInputName]['tmp_name'], $_FILES[$sInputName]['size']))\r\n\t\t\t{\r\n\t\t\t\t$iError = (isset($_FILES[$sInputName]['error'])) ? (int) $_FILES[$sInputName]['error'] : UPLOAD_ERR_OK;\r\n\r\n\t\t\t\tif (UPLOAD_ERR_OK === $iError && 0 < $iSizeLimit && $iSizeLimit < (int) $_FILES[$sInputName]['size'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$iError = \\RainLoop\\Enumerations\\UploadError::CONFIG_SIZE;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (UPLOAD_ERR_OK === $iError)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aFile = $_FILES[$sInputName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!isset($_FILES) || !is_array($_FILES) || 0 === count($_FILES))\r\n\t\t\t{\r\n\t\t\t\t$iError = UPLOAD_ERR_INI_SIZE;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$iError = \\RainLoop\\Enumerations\\UploadError::EMPTY_FILES_DATA;\r\n\t\t\t}\r\n\r\n\t\t\tif (\\method_exists($this->oActions, $sAction) &&\r\n\t\t\t\t\\is_callable(array($this->oActions, $sAction)))\r\n\t\t\t{\r\n\t\t\t\t$aActionParams = $this->oHttp->GetQueryAsArray();\r\n\r\n\t\t\t\t$aActionParams['File'] = $aFile;\r\n\t\t\t\t$aActionParams['Error'] = $iError;\r\n\r\n\t\t\t\t$this->oActions->SetActionParams($aActionParams, $sAction);\r\n\r\n\t\t\t\t$aResponseItem = \\call_user_func(array($this->oActions, $sAction));\r\n\t\t\t}\r\n\r\n\t\t\tif (!is_array($aResponseItem))\r\n\t\t\t{\r\n\t\t\t\tthrow new \\RainLoop\\Exceptions\\ClientException(\\RainLoop\\Notifications::UnknownError);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$aResponseItem = $this->oActions->ExceptionResponse($sAction, $oException);\r\n\t\t}\r\n\r\n\t\tif ('iframe' === $this->oHttp->GetPost('jua-post-type', ''))\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: text/html; charset=utf-8');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\t\t}\r\n\r\n\t\t$this->Plugins()->RunHook('filter.upload-response', array(&$aResponseItem));\r\n\t\t$sResult = \\MailSo\\Base\\Utils::Php2js($aResponseItem, $this->Logger());\r\n\r\n\t\t$sObResult = @\\ob_get_clean();\r\n\t\tif (0 < \\strlen($sObResult))\r\n\t\t{\r\n\t\t\t$this->Logger()->Write($sObResult, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'OB-DATA');\r\n\t\t}\r\n\r\n\t\t$this->Logger()->Write($sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'UPLOAD');\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceUpload()\r\n\t{\r\n\t\treturn $this->privateUpload('Upload');\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceUploadContacts()\r\n\t{\r\n\t\treturn $this->privateUpload('UploadContacts', 5);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceUploadBackground()\r\n\t{\r\n\t\treturn $this->privateUpload('UploadBackground', 1);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceProxyExternal()\r\n\t{\r\n\t\t$bResult = false;\r\n\t\t$sData = empty($this->aPaths[1]) ? '' : $this->aPaths[1];\r\n\t\tif (!empty($sData) && $this->oActions->Config()->Get('labs', 'use_local_proxy_for_external_images', false))\r\n\t\t{\r\n\t\t\t$this->oActions->verifyCacheByKey($sData);\r\n\r\n\t\t\t$aData = \\RainLoop\\Utils::DecodeKeyValuesQ($sData);\r\n\t\t\tif (\\is_array($aData) && !empty($aData['Token']) && !empty($aData['Url']) && $aData['Token'] === \\RainLoop\\Utils::GetConnectionToken())\r\n\t\t\t{\r\n\t\t\t\t$iCode = 404;\r\n\t\t\t\t$sContentType = '';\r\n\t\t\t\t$mResult = $this->oHttp->GetUrlAsString($aData['Url'], 'RainLoop External Proxy', $sContentType, $iCode);\r\n\r\n\t\t\t\tif (false !== $mResult && 200 === $iCode &&\r\n\t\t\t\t\t\\in_array($sContentType, array('image/png', 'image/jpeg', 'image/jpg', 'image/bmp', 'image/gif')))\r\n\t\t\t\t{\r\n\t\t\t\t\t$bResult = true;\r\n\r\n\t\t\t\t\t$this->oActions->cacheByKey($sData);\r\n\r\n\t\t\t\t\t\\header('Content-Type: '.$sContentType);\r\n\t\t\t\t\techo $mResult;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$bResult)\r\n\t\t{\r\n\t\t\t$this->oHttp->StatusHeader(404);\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceRaw()\r\n\t{\r\n\t\t$sResult = '';\r\n\t\t$sRawError = '';\r\n\t\t$sAction = empty($this->aPaths[2]) ? '' : $this->aPaths[2];\r\n\t\t$oException = null;\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\t$sRawError = 'Invalid action';\r\n\t\t\tif (0 !== \\strlen($sAction))\r\n\t\t\t{\r\n\t\t\t\t$sMethodName = 'Raw'.$sAction;\r\n\t\t\t\tif (\\method_exists($this->oActions, $sMethodName))\r\n\t\t\t\t{\r\n\t\t\t\t\t@\\header('X-Raw-Action: '.$sMethodName, true);\r\n\r\n\t\t\t\t\t$sRawError = '';\r\n\t\t\t\t\t$this->oActions->SetActionParams(array(\r\n\t\t\t\t\t\t'RawKey' => empty($this->aPaths[3]) ? '' : $this->aPaths[3],\r\n\t\t\t\t\t\t'Params' => $this->aPaths\r\n\t\t\t\t\t), $sMethodName);\r\n\r\n\t\t\t\t\tif (!\\call_user_func(array($this->oActions, $sMethodName)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sRawError = 'False result';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sRawError = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$sRawError = 'Unknown action \"'.$sAction.'\"';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$sRawError = 'Empty action';\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\RainLoop\\Exceptions\\ClientException $oException)\r\n\t\t{\r\n\t\t\t$sRawError = 'Exception as result';\r\n\t\t\tswitch ($oException->getCode())\r\n\t\t\t{\r\n\t\t\t\tcase \\RainLoop\\Notifications::AuthError:\r\n\t\t\t\t\t$sRawError = 'Authentication failed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$sRawError = 'Exception as result';\r\n\t\t}\r\n\r\n\t\tif (0 < \\strlen($sRawError))\r\n\t\t{\r\n\t\t\t$this->oActions->Logger()->Write($sRawError, \\MailSo\\Log\\Enumerations\\Type::ERROR);\r\n\t\t\t$this->oActions->Logger()->WriteDump($this->aPaths, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'PATHS');\r\n\t\t}\r\n\r\n\t\tif ($oException)\r\n\t\t{\r\n\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'RAW');\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceLang()\r\n\t{\r\n//\t\tsleep(2);\r\n\t\t$sResult = '';\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\r\n\t\tif (!empty($this->aPaths[3]))\r\n\t\t{\r\n\t\t\t$bAdmim =  'Admin' === (isset($this->aPaths[2]) ? (string) $this->aPaths[2] : 'App');\r\n\t\t\t$sLanguage = $this->oActions->ValidateLanguage($this->aPaths[3], '', $bAdmim);\r\n\r\n\t\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\t\tif (!empty($sLanguage) && $bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t\t}\r\n\r\n\t\t\t$sCacheFileName = '';\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::LangCache(\r\n\t\t\t\t\t$sLanguage, $bAdmim, $this->oActions->Plugins()->Hash());\r\n\r\n\t\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sResult))\r\n\t\t\t{\r\n\t\t\t\t$sResult = $this->compileLanguage($sLanguage, $bAdmim, false);\r\n\t\t\t\tif ($bCacheEnabled && 0 < \\strlen($sCacheFileName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceTemplates()\r\n\t{\r\n\t\t$sResult = '';\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\r\n\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\t$bAdmin = false !== \\strpos($this->sQuery, 'Admin');\r\n\r\n\t\t$sCacheFileName = '';\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::TemplatesCache($bAdmin, $this->oActions->Plugins()->Hash());\r\n\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t}\r\n\r\n\t\tif (0 === \\strlen($sResult))\r\n\t\t{\r\n\t\t\t$sResult = $this->compileTemplates($bAdmin);\r\n\t\t\tif ($bCacheEnabled && 0 < \\strlen($sCacheFileName))\r\n\t\t\t{\r\n\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServicePlugins()\r\n\t{\r\n\t\t$sResult = '';\r\n\t\t$bAdmin = !empty($this->aPaths[2]) && 'Admin' === $this->aPaths[2];\r\n\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\r\n\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\t$sCacheFileName = '';\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::PluginsJsCache($this->oActions->Plugins()->Hash());\r\n\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t}\r\n\r\n\t\tif (0 === strlen($sResult))\r\n\t\t{\r\n\t\t\t$sResult = $this->Plugins()->CompileJs($bAdmin);\r\n\t\t\tif ($bCacheEnabled && 0 < \\strlen($sCacheFileName))\r\n\t\t\t{\r\n\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceCss()\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$bAdmin = !empty($this->aPaths[2]) && 'Admin' === $this->aPaths[2];\r\n\t\t$bJson = !empty($this->aPaths[9]) && 'Json' === $this->aPaths[9];\r\n\r\n\t\tif ($bJson)\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: text/css; charset=utf-8');\r\n\t\t}\r\n\r\n\t\t$sTheme = '';\r\n\t\tif (!empty($this->aPaths[4]))\r\n\t\t{\r\n\t\t\t$sTheme = $this->oActions->ValidateTheme($this->aPaths[4]);\r\n\t\t\t$sRealTheme = $sTheme;\r\n\r\n\t\t\t$bCustomTheme = '@custom' === \\substr($sTheme, -7);\r\n\t\t\tif ($bCustomTheme)\r\n\t\t\t{\r\n\t\t\t\t$sRealTheme = \\substr($sTheme, 0, -7);\r\n\t\t\t}\r\n\r\n\t\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t\t}\r\n\r\n\t\t\t$sCacheFileName = '';\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::CssCache($sTheme, $this->oActions->Plugins()->Hash());\r\n\t\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sResult))\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tinclude_once APP_VERSION_ROOT_PATH.'app/libraries/lessphp/ctype.php';\r\n\t\t\t\t\tinclude_once APP_VERSION_ROOT_PATH.'app/libraries/lessphp/lessc.inc.php';\r\n\r\n\t\t\t\t\t$oLess = new \\RainLoopVendor\\lessc();\r\n\t\t\t\t\t$oLess->setFormatter('compressed');\r\n\r\n\t\t\t\t\t$aResult = array();\r\n\r\n\t\t\t\t\t$sThemeFile = ($bCustomTheme ? APP_INDEX_ROOT_PATH : APP_VERSION_ROOT_PATH).'themes/'.$sRealTheme.'/styles.less';\r\n\t\t\t\t\t$sThemeExtFile = ($bCustomTheme ? APP_INDEX_ROOT_PATH : APP_VERSION_ROOT_PATH).'themes/'.$sRealTheme.'/ext.less';\r\n\r\n\t\t\t\t\t$sThemeValuesFile = APP_VERSION_ROOT_PATH.'app/templates/Themes/values.less';\r\n\t\t\t\t\t$sThemeTemplateFile = APP_VERSION_ROOT_PATH.'app/templates/Themes/template.less';\r\n\r\n\t\t\t\t\tif (\\file_exists($sThemeFile) && \\file_exists($sThemeTemplateFile) && \\file_exists($sThemeValuesFile))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aResult[] = '@base: \"'.\r\n\t\t\t\t\t\t\t($bCustomTheme ? \\RainLoop\\Utils::WebPath() : \\RainLoop\\Utils::WebVersionPath()).\r\n\t\t\t\t\t\t\t'themes/'.$sRealTheme.'/\";';\r\n\r\n\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeValuesFile);\r\n\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeFile);\r\n\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeTemplateFile);\r\n\r\n\t\t\t\t\t\tif (\\file_exists($sThemeExtFile))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeExtFile);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$aResult[] = $this->Plugins()->CompileCss($bAdmin);\r\n\r\n\t\t\t\t\t$sResult = $oLess->compile(\\implode(\"\\n\", $aResult));\r\n\r\n\t\t\t\t\tif ($bCacheEnabled)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (0 < \\strlen($sCacheFileName))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (\\Exception $oException)\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'LESS');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $bJson ? \\MailSo\\Base\\Utils::Php2js(array($sTheme, $sResult), $this->Logger()) : $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSocialGoogle()\r\n\t{\r\n\t\t$bXAuth = '1' === (string) $this->oHttp->GetQuery('xauth', '0');\r\n\t\treturn $this->oActions->Social()->GooglePopupService($bXAuth);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSocialFacebook()\r\n\t{\r\n\t\treturn $this->oActions->Social()->FacebookPopupService();\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSocialTwitter()\r\n\t{\r\n\t\treturn $this->oActions->Social()->TwitterPopupService();\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAppData($sAdd = '')\r\n\t{\r\n\t\treturn $this->localAppData(false, $sAdd);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAdminAppData($sAdd = '')\r\n\t{\r\n\t\treturn $this->localAppData(true, $sAdd);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceMobileVersion()\r\n\t{\r\n\t\t\\RainLoop\\Utils::SetCookie(\\RainLoop\\Actions::RL_MOBILE_TYPE, 'mobile');\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceDesktopVersion()\r\n\t{\r\n\t\t\\RainLoop\\Utils::SetCookie(\\RainLoop\\Actions::RL_MOBILE_TYPE, 'desktop');\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceNoScript()\r\n\t{\r\n\t\treturn $this->localError($this->oActions->StaticI18N('STATIC/NO_SCRIPT_TITLE'), $this->oActions->StaticI18N('STATIC/NO_SCRIPT_DESC'));\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceNoCookie()\r\n\t{\r\n\t\treturn $this->localError($this->oActions->StaticI18N('STATIC/NO_COOKIE_TITLE'), $this->oActions->StaticI18N('STATIC/NO_COOKIE_DESC'));\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceBadBrowser()\r\n\t{\r\n\t\t$sTitle = $this->oActions->StaticI18N('STATIC/BAD_BROWSER_TITLE');\r\n\t\t$sDesc = \\nl2br($this->oActions->StaticI18N('STATIC/BAD_BROWSER_DESC'));\r\n\r\n\t\t@\\header('Content-Type: text/html; charset=utf-8');\r\n\t\treturn \\strtr(\\file_get_contents(APP_VERSION_ROOT_PATH.'app/templates/BadBrowser.html'), array(\r\n\t\t\t'{{BaseWebStaticPath}}' => \\RainLoop\\Utils::WebStaticPath(),\r\n\t\t\t'{{ErrorTitle}}' => $sTitle,\r\n\t\t\t'{{ErrorHeader}}' => $sTitle,\r\n\t\t\t'{{ErrorDesc}}' => $sDesc\r\n\t\t));\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceMailto()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$sTo = \\trim($this->oHttp->GetQuery('to', ''));\r\n\t\tif (!empty($sTo) && \\preg_match('/^mailto:/i', $sTo))\r\n\t\t{\r\n\t\t\t$oAccount = $this->oActions->GetAccountFromSignMeToken();\r\n\t\t\tif ($oAccount)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->SetMailtoRequest($sTo);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServicePing()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t@\\header('Content-Type: text/plain; charset=utf-8');\r\n\t\t$this->oActions->Logger()->Write('Pong', \\MailSo\\Log\\Enumerations\\Type::INFO, 'PING');\r\n\t\treturn 'Pong';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceInfo()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\tif ($this->oActions->IsAdminLoggined(false))\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: text/html; charset=utf-8');\r\n\t\t\t\\phpinfo();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSso()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$oException = null;\r\n\t\t$oAccount = null;\r\n\t\t$bLogout = true;\r\n\r\n\t\t$sSsoHash = $this->oHttp->GetRequest('hash', '');\r\n\t\tif (!empty($sSsoHash))\r\n\t\t{\r\n\t\t\t$mData = null;\r\n\r\n\t\t\t$sSsoSubData = $this->Cacher()->Get(\\RainLoop\\KeyPathHelper::SsoCacherKey($sSsoHash));\r\n\t\t\tif (!empty($sSsoSubData))\r\n\t\t\t{\r\n\t\t\t\t$mData = \\RainLoop\\Utils::DecodeKeyValuesQ($sSsoSubData);\r\n\t\t\t\t$this->Cacher()->Delete(\\RainLoop\\KeyPathHelper::SsoCacherKey($sSsoHash));\r\n\r\n\t\t\t\tif (\\is_array($mData) && !empty($mData['Email']) && isset($mData['Password'], $mData['Time']) &&\r\n\t\t\t\t\t(0 === $mData['Time'] || \\time() - 10 < $mData['Time']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sEmail = \\trim($mData['Email']);\r\n\t\t\t\t\t$sPassword = $mData['Password'];\r\n\r\n\t\t\t\t\t$aAdditionalOptions = isset($mData['AdditionalOptions']) && \\is_array($mData['AdditionalOptions']) &&\r\n\t\t\t\t\t\t0 < \\count($mData['AdditionalOptions']) ? $mData['AdditionalOptions'] : null;\r\n\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\r\n\t\t\t\t\t\tif ($oAccount instanceof \\RainLoop\\Model\\Account && $aAdditionalOptions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$bNeedToSettings = false;\r\n\r\n\t\t\t\t\t\t\t$oSettings = $this->SettingsProvider()->Load($oAccount);\r\n\t\t\t\t\t\t\tif ($oSettings)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$sLanguage = isset($aAdditionalOptions['Language']) ?\r\n\t\t\t\t\t\t\t\t\t$aAdditionalOptions['Language'] : '';\r\n\r\n\t\t\t\t\t\t\t\tif ($sLanguage)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sLanguage = $this->oActions->ValidateLanguage($sLanguage);\r\n\t\t\t\t\t\t\t\t\tif ($sLanguage !== $oSettings->GetConf('Language', ''))\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$bNeedToSettings = true;\r\n\t\t\t\t\t\t\t\t\t\t$oSettings->SetConf('Language', $sLanguage);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($bNeedToSettings)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$this->SettingsProvider()->Save($oAccount, $oSettings);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\r\n\t\t\t\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (\\Exception $oException)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceRemoteAutoLogin()\r\n\t{\r\n\t\t$oException = null;\r\n\t\t$oAccount = null;\r\n\t\t$bLogout = true;\r\n\r\n\t\t$sEmail = $this->oHttp->GetEnv('REMOTE_USER', '');\r\n\t\t$sPassword = $this->oHttp->GetEnv('REMOTE_PASSWORD', '');\r\n\r\n\t\tif (0 < \\strlen($sEmail) && 0 < \\strlen(\\trim($sPassword)))\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\t\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t\t}\r\n\t\t\tcatch (\\Exception $oException)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceExternalLogin()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$oException = null;\r\n\t\t$oAccount = null;\r\n\t\t$bLogout = true;\r\n\r\n\t\tif ($this->oActions->Config()->Get('labs', 'allow_external_login', false))\r\n\t\t{\r\n\t\t\t$sEmail = \\trim($this->oHttp->GetRequest('Email', ''));\r\n\t\t\t$sPassword = $this->oHttp->GetRequest('Password', '');\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\t\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t\t}\r\n\t\t\tcatch (\\Exception $oException)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t\t}\r\n\r\n\t\t\tif ($bLogout)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (\\strtolower($this->oHttp->GetRequest('Output', 'Redirect')))\r\n\t\t{\r\n\t\t\tcase 'json':\r\n\r\n\t\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\r\n\t\t\t\t$aResult = array(\r\n\t\t\t\t\t'Action' => 'ExternalLogin',\r\n\t\t\t\t\t'Result' => $oAccount instanceof \\RainLoop\\Model\\Account ? true : false,\r\n\t\t\t\t\t'ErrorCode' => 0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!$aResult['Result'])\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oException instanceof \\RainLoop\\Exceptions\\ClientException)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aResult['ErrorCode'] = $oException->getCode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aResult['ErrorCode'] = \\RainLoop\\Notifications::AuthError;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn \\MailSo\\Base\\Utils::Php2js($aResult, $this->Logger());\r\n\r\n\t\t\tcase 'redirect':\r\n\t\t\tdefault:\r\n\t\t\t\t$this->oActions->Location('./');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceExternalSso()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$sResult = '';\r\n\t\t$bLogout = true;\r\n\t\t$sKey = $this->oActions->Config()->Get('labs', 'external_sso_key', '');\r\n\t\tif ($this->oActions->Config()->Get('labs', 'allow_external_sso', false) &&\r\n\t\t\t!empty($sKey) && $sKey === \\trim($this->oHttp->GetRequest('SsoKey', '')))\r\n\t\t{\r\n\t\t\t$sEmail = \\trim($this->oHttp->GetRequest('Email', ''));\r\n\t\t\t$sPassword = $this->oHttp->GetRequest('Password', '');\r\n\r\n\t\t\t$sResult = \\RainLoop\\Api::GetUserSsoHash($sEmail, $sPassword);\r\n\t\t\t$bLogout = 0 === \\strlen($sResult);\r\n\r\n\t\t\tswitch (\\strtolower($this->oHttp->GetRequest('Output', 'Plain')))\r\n\t\t\t{\r\n\t\t\t\tcase 'plain':\r\n\t\t\t\t\t@\\header('Content-Type: text/plain');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'json':\r\n\t\t\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\t\t\t\t\t$sResult = \\MailSo\\Base\\Utils::Php2js(array(\r\n\t\t\t\t\t\t'Action' => 'ExternalSso',\r\n\t\t\t\t\t\t'Result' => $sResult\r\n\t\t\t\t\t), $this->Logger());\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\tprivate function changeAction()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$oAccount = $this->oActions->GetAccount();\r\n\r\n\t\tif ($oAccount && $this->oActions->GetCapa(false, false, \\RainLoop\\Enumerations\\Capa::ADDITIONAL_ACCOUNTS, $oAccount))\r\n\t\t{\r\n\t\t\t$oAccountToLogin = null;\r\n\t\t\t$sEmail = empty($this->aPaths[2]) ? '' : \\urldecode(\\trim($this->aPaths[2]));\r\n\t\t\tif (!empty($sEmail))\r\n\t\t\t{\r\n\t\t\t\t$sEmail = \\MailSo\\Base\\Utils::IdnToAscii($sEmail);\r\n\r\n\t\t\t\t$aAccounts = $this->oActions->GetAccounts($oAccount);\r\n\t\t\t\tif (isset($aAccounts[$sEmail]))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oAccountToLogin = $this->oActions->GetAccountFromCustomToken($aAccounts[$sEmail], false, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oAccountToLogin)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->AuthToken($oAccountToLogin);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceChange()\r\n\t{\r\n\t\t$this->changeAction();\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sTitle\r\n\t * @param string $sDesc\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tpublic function ErrorTemplates($sTitle, $sDesc, $bShowBackLink = true)\r\n\t{\r\n\t\treturn strtr(file_get_contents(APP_VERSION_ROOT_PATH.'app/templates/Error.html'), array(\r\n\t\t\t'{{BaseWebStaticPath}}' => \\RainLoop\\Utils::WebStaticPath(),\r\n\t\t\t'{{ErrorTitle}}' => $sTitle,\r\n\t\t\t'{{ErrorHeader}}' => $sTitle,\r\n\t\t\t'{{ErrorDesc}}' => $sDesc,\r\n\t\t\t'{{BackLinkVisibilityStyle}}' => $bShowBackLink ? 'display:inline-block' : 'display:none',\r\n\t\t\t'{{BackLink}}' => $this->oActions->StaticI18N('STATIC/BACK_LINK'),\r\n\t\t\t'{{BackHref}}' => './'\r\n\t\t));\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sTitle\r\n\t * @param string $sDesc\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function localError($sTitle, $sDesc)\r\n\t{\r\n\t\t@header('Content-Type: text/html; charset=utf-8');\r\n\t\treturn $this->ErrorTemplates($sTitle, \\nl2br($sDesc));\r\n\t}\r\n\r\n\t/**\r\n\t * @param bool $bAdmin = true\r\n\t * @param string $sAdd = ''\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function localAppData($bAdmin = false, $sAdd = '')\r\n\t{\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$sAuthAccountHash = '';\r\n\t\tif (!$bAdmin && 0 === \\strlen($this->oActions->GetSpecAuthLogoutTokenWithDeletion()))\r\n\t\t{\r\n\t\t\t$sAuthAccountHash = $this->oActions->GetSpecAuthTokenWithDeletion();\r\n\t\t\tif (empty($sAuthAccountHash))\r\n\t\t\t{\r\n\t\t\t\t$sAuthAccountHash = $this->oActions->GetSpecAuthToken();\r\n\t\t\t}\r\n\r\n\t\t\tif (empty($sAuthAccountHash))\r\n\t\t\t{\r\n\t\t\t\t$oAccount = $this->oActions->GetAccountFromSignMeToken();\r\n\t\t\t\tif ($oAccount)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this->oActions->CheckMailConnection($oAccount);\r\n\r\n\t\t\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\r\n\t\t\t\t\t\t$sAuthAccountHash = $this->oActions->GetSpecAuthToken();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (\\Exception $oException)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oException = null;\r\n\t\t\t\t\t\t$this->oActions->ClearSignMeData($oAccount);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$this->oActions->SetSpecAuthToken($sAuthAccountHash);\r\n\t\t}\r\n\r\n\t\t$sResult = $this->compileAppData($this->oActions->AppData($bAdmin,\r\n\t\t\t0 === \\strpos($sAdd, 'mobile'), '1' === \\substr($sAdd, -1),\r\n\t\t\t$sAuthAccountHash), false);\r\n\r\n\t\t$this->Logger()->Write($sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'APPDATA');\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param bool $bAdmin = false\r\n\t * @param bool $bJsOutput = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic function compileTemplates($bAdmin = false, $bJsOutput = true)\r\n\t{\r\n\t\t$aTemplates = array();\r\n\r\n\t\t\\RainLoop\\Utils::CompileTemplates($aTemplates, APP_VERSION_ROOT_PATH.'app/templates/Views/Components', 'Component');\r\n\t\t\\RainLoop\\Utils::CompileTemplates($aTemplates, APP_VERSION_ROOT_PATH.'app/templates/Views/'.($bAdmin ? 'Admin' : 'User'));\r\n\t\t\\RainLoop\\Utils::CompileTemplates($aTemplates, APP_VERSION_ROOT_PATH.'app/templates/Views/Common');\r\n\r\n\t\t$this->oActions->Plugins()->CompileTemplate($aTemplates, $bAdmin);\r\n\r\n\t\t$sHtml = '';\r\n\t\tforeach ($aTemplates as $sName => $sFile)\r\n\t\t{\r\n\t\t\t$sName = \\preg_replace('/[^a-zA-Z0-9]/', '', $sName);\r\n\t\t\t$sHtml .= '<script id=\"'.$sName.'\" type=\"text/html\" data-cfasync=\"false\">'.\r\n\t\t\t\t$this->oActions->ProcessTemplate($sName, \\file_get_contents($sFile)).'</script>';\r\n\t\t}\r\n\r\n\t\tunset($aTemplates);\r\n\r\n\t\treturn $bJsOutput ? 'window.rainloopTEMPLATES='.\\MailSo\\Base\\Utils::Php2js(array($sHtml), $this->Logger()).';' : $sHtml;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sLanguage\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function convertLanguageNameToMomentLanguageName($sLanguage)\r\n\t{\r\n\t\t$aHelper = array('en_gb' => 'en-gb', 'fr_ca' => 'fr-ca', 'pt_br' => 'pt-br',\r\n\t\t\t'uk_ua' => 'ua', 'zh_cn' => 'zh-cn', 'zh_tw' => 'zh-tw', 'fa_ir' => 'fa');\r\n\r\n\t\treturn isset($aHelper[$sLanguage]) ? $aHelper[$sLanguage] : \\substr($sLanguage, 0, 2);\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sLanguage\r\n\t * @param bool $bAdmin = false\r\n\t * @param bool $bWrapByScriptTag = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function compileLanguage($sLanguage, $bAdmin = false, $bWrapByScriptTag = true)\r\n\t{\r\n\t\t$aResultLang = array();\r\n\r\n\t\t$sMoment = 'window.moment && window.moment.locale && window.moment.locale(\\'en\\');';\r\n\t\t$sMomentFileName = APP_VERSION_ROOT_PATH.'app/localization/moment/'.\r\n\t\t\t$this->convertLanguageNameToMomentLanguageName($sLanguage).'.js';\r\n\r\n\t\tif (\\file_exists($sMomentFileName))\r\n\t\t{\r\n\t\t\t$sMoment = \\file_get_contents($sMomentFileName);\r\n\t\t\t$sMoment = \\preg_replace('/\\/\\/[^\\n]+\\n/', '', $sMoment);\r\n\t\t}\r\n\r\n\t\t\\RainLoop\\Utils::ReadAndAddLang(APP_VERSION_ROOT_PATH.'app/localization/langs.yml', $aResultLang);\r\n\t\t\\RainLoop\\Utils::ReadAndAddLang(APP_VERSION_ROOT_PATH.'app/localization/'.\r\n\t\t\t($bAdmin ? 'admin' : 'webmail').'/_source.en.yml', $aResultLang);\r\n\t\t\\RainLoop\\Utils::ReadAndAddLang(APP_VERSION_ROOT_PATH.'app/localization/'.\r\n\t\t\t($bAdmin ? 'admin' : 'webmail').'/'.$sLanguage.'.yml', $aResultLang);\r\n\r\n\t\t$this->Plugins()->ReadLang($sLanguage, $aResultLang);\r\n\r\n\t\t$sLangJs = '';\r\n\t\t$aLangKeys = \\array_keys($aResultLang);\r\n\t\tforeach ($aLangKeys as $sKey)\r\n\t\t{\r\n\t\t\t$sString = isset($aResultLang[$sKey]) ? $aResultLang[$sKey] : $sKey;\r\n\t\t\tif (\\is_array($sString))\r\n\t\t\t{\r\n\t\t\t\t$sString = \\implode(\"\\n\", $sString);\r\n\t\t\t}\r\n\r\n\t\t\t$sLangJs .= '\"'.\\str_replace('\"', '\\\\\"', \\str_replace('\\\\', '\\\\\\\\', $sKey)).'\":'\r\n\t\t\t\t.'\"'.\\str_replace(array(\"\\r\", \"\\n\", \"\\t\"), array('\\r', '\\n', '\\t'),\r\n\t\t\t\t\t\\str_replace('\"', '\\\\\"', \\str_replace('\\\\', '\\\\\\\\', $sString))).'\",';\r\n\t\t}\r\n\r\n\t\t$sResult = empty($sLangJs) ? 'null' : '{'.\\substr($sLangJs, 0, -1).'}';\r\n\r\n\t\treturn\r\n\t\t\t($bWrapByScriptTag ? '<script data-cfasync=\"false\">' : '').\r\n\t\t\t'window.rainloopI18N='.$sResult.';'.$sMoment.\r\n\t\t\t($bWrapByScriptTag ? '</script>' : '')\r\n\t\t;\r\n\t}\r\n\r\n\t/**\r\n\t * @param array $aAppData\r\n\t * @param bool $bWrapByScriptTag = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function compileAppData($aAppData, $bWrapByScriptTag = true)\r\n\t{\r\n\t\treturn\r\n\t\t\t($bWrapByScriptTag ? '<script type=\"text/javascript\" data-cfasync=\"false\">' : '').\r\n\t\t\t'if(window.__initAppData){window.__initAppData('.\\json_encode($aAppData).');}'.\r\n\t\t\t($bWrapByScriptTag ? '</script>' : '')\r\n\t\t;\r\n\t}\r\n}\r\n"], "fixing_code": ["<?php\r\n\r\n/*\r\n * This file is part of MailSo.\r\n *\r\n * (c) 2014 Usenko Timur\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nnamespace MailSo\\Base;\r\n\r\n/**\r\n * @category MailSo\r\n * @package Base\r\n */\r\nclass HtmlUtils\r\n{\r\n\tstatic $KOS = '@@_KOS_@@';\r\n\r\n\t/**\r\n\t * @access private\r\n\t */\r\n\tprivate function __construct()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMElement $oElement\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tpublic static function GetElementAttributesAsArray($oElement)\r\n\t{\r\n\t\t$aResult = array();\r\n\t\tif ($oElement)\r\n\t\t{\r\n\t\t\tif ($oElement->hasAttributes() && isset($oElement->attributes) && $oElement->attributes)\r\n\t\t\t{\r\n\t\t\t\tforeach ($oElement->attributes as $oAttr)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oAttr && !empty($oAttr->nodeName))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sAttrName = \\trim(\\strtolower($oAttr->nodeName));\r\n\t\t\t\t\t\t$aResult[$sAttrName] = $oAttr->nodeValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $aResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sText\r\n\t *\r\n\t * @return \\DOMDocument|bool\r\n\t */\r\n\tpublic static function GetDomFromText($sText)\r\n\t{\r\n\t\t$bState = true;\r\n\t\tif (\\MailSo\\Base\\Utils::FunctionExistsAndEnabled('libxml_use_internal_errors'))\r\n\t\t{\r\n\t\t\t$bState = \\libxml_use_internal_errors(true);\r\n\t\t}\r\n\r\n\t\t$sHtmlAttrs = $sBodyAttrs = '';\r\n\r\n\t\t$sText = \\MailSo\\Base\\HtmlUtils::FixSchemas($sText);\r\n\t\t$sText = \\MailSo\\Base\\HtmlUtils::ClearFastTags($sText);\r\n\t\t$sText = \\MailSo\\Base\\HtmlUtils::ClearBodyAndHtmlTag($sText, $sHtmlAttrs, $sBodyAttrs);\r\n\r\n\t\t$oDom = self::createDOMDocument();\r\n\t\t@$oDom->loadHTML('<'.'?xml version=\"1.0\" encoding=\"utf-8\"?'.'>'.\r\n\t\t\t'<html '.$sHtmlAttrs.'><head>'.\r\n\t\t\t'<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"></head>'.\r\n\t\t\t'<body '.$sBodyAttrs.'>'.\\MailSo\\Base\\Utils::Utf8Clear($sText).'</body></html>');\r\n\r\n\t\t@$oDom->normalizeDocument();\r\n\r\n\t\tif (\\MailSo\\Base\\Utils::FunctionExistsAndEnabled('libxml_clear_errors'))\r\n\t\t{\r\n\t\t\t@\\libxml_clear_errors();\r\n\t\t}\r\n\r\n\t\tif (\\MailSo\\Base\\Utils::FunctionExistsAndEnabled('libxml_use_internal_errors'))\r\n\t\t{\r\n\t\t\t\\libxml_use_internal_errors($bState);\r\n\t\t}\r\n\r\n\t\treturn $oDom;\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\DOMDocument\r\n\t */\r\n\tprivate static function createDOMDocument()\r\n\t{\r\n\t\t$oDoc = new \\DOMDocument('1.0', 'UTF-8');\r\n\t\t$oDoc->encoding = 'UTF-8';\r\n\t\t$oDoc->strictErrorChecking = false;\r\n\t\t$oDoc->formatOutput = false;\r\n\t\t$oDoc->preserveWhiteSpace = false;\r\n\r\n\t\treturn $oDoc;\r\n\t}\r\n\r\n\t/**\r\n\t * @return boolean\r\n\t */\r\n\tprivate static function comparedVersion()\r\n\t{\r\n\t\treturn \\version_compare(PHP_VERSION, '5.3.6') >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument|\\DOMElement $oElem\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate static function domToString($oElem, $oDom = null)\r\n\t{\r\n\t\t$sResult = '';\r\n\t\tif ($oElem instanceof \\DOMDocument)\r\n\t\t{\r\n\t\t\tif (isset($oElem->documentElement) && self::comparedVersion())\r\n\t\t\t{\r\n\t\t\t\t$sResult = $oElem->saveHTML($oElem->documentElement);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$sResult = $oElem->saveHTML();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($oElem)\r\n\t\t{\r\n\t\t\tif ($oDom && self::comparedVersion())\r\n\t\t\t{\r\n\t\t\t\t$sResult = $oDom->saveHTML($oElem);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$oTempDoc = self::createDOMDocument();\r\n\t\t\t\t$oTempDoc->appendChild($oTempDoc->importNode($oElem->cloneNode(true), true));\r\n\t\t\t\t$sResult = $oTempDoc->saveHTML();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn \\trim($sResult);\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument $oDom\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function GetTextFromDom_($oDom, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$aHtmlAttrs = $aBodylAttrs = array();\r\n\t\tif ($bWrapByFakeHtmlAndBodyDiv)\r\n\t\t{\r\n\t\t\t$oHtml = $oDom->getElementsByTagName('html')->item(0);\r\n\t\t\t$oBody = $oDom->getElementsByTagName('body')->item(0);\r\n\r\n\t\t\t$aHtmlAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oHtml);\r\n\t\t\t$aBodylAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oBody);\r\n\t\t}\r\n\r\n\t\t$oDiv = $oDom->getElementsByTagName('div')->item(0);\r\n\t\tif ($oDiv && $oDiv->hasAttribute('data-wrp') && 'rainloop' === $oDiv->getAttribute('data-wrp'))\r\n\t\t{\r\n\t\t\t$oDiv->removeAttribute('data-wrp');\r\n\t\t\tif ($bWrapByFakeHtmlAndBodyDiv)\r\n\t\t\t{\r\n\t\t\t\t$oWrap = $oDom->createElement('div');\r\n\r\n\t\t\t\t$oWrap->setAttribute('data-x-div-type', 'html');\r\n\t\t\t\tforeach ($aHtmlAttrs as $sKey => $sValue)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oWrap->setAttribute($sKey, $sValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$oDiv->setAttribute('data-x-div-type', 'body');\r\n\t\t\t\tforeach ($aBodylAttrs as $sKey => $sValue)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oDiv->setAttribute($sKey, $sValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$oWrap->appendChild($oDiv);\r\n\t\t\t\t$sResult = self::domToString($oWrap, $oDom);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$sResult = self::domToString($oDiv, $oDom);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$sResult = self::domToString($oDom);\r\n\t\t}\r\n\r\n\t\t$sResult = \\str_replace(\\MailSo\\Base\\HtmlUtils::$KOS, ':', $sResult);\r\n\t\t$sResult = \\MailSo\\Base\\Utils::StripSpaces($sResult);\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument $oDom\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function GetTextFromDom($oDom, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$oHtml = $oDom->getElementsByTagName('html')->item(0);\r\n\t\t$oBody = $oDom->getElementsByTagName('body')->item(0);\r\n\r\n\t\tforeach ($oBody->childNodes as $oChild)\r\n\t\t{\r\n\t\t\t$sResult .= $oDom->saveHTML($oChild);\r\n\t\t}\r\n\r\n\t\tif ($bWrapByFakeHtmlAndBodyDiv)\r\n\t\t{\r\n\t\t\t$aHtmlAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oHtml);\r\n\t\t\t$aBodylAttrs = \\MailSo\\Base\\HtmlUtils::GetElementAttributesAsArray($oBody);\r\n\r\n\t\t\t$oWrapHtml = $oDom->createElement('div');\r\n\t\t\t$oWrapHtml->setAttribute('data-x-div-type', 'html');\r\n\t\t\tforeach ($aHtmlAttrs as $sKey => $sValue)\r\n\t\t\t{\r\n\t\t\t\t$oWrapHtml->setAttribute($sKey, $sValue);\r\n\t\t\t}\r\n\r\n\t\t\t$oWrapDom = $oDom->createElement('div', '___xxx___');\r\n\t\t\t$oWrapDom->setAttribute('data-x-div-type', 'body');\r\n\t\t\tforeach ($aBodylAttrs as $sKey => $sValue)\r\n\t\t\t{\r\n\t\t\t\t$oWrapDom->setAttribute($sKey, $sValue);\r\n\t\t\t}\r\n\r\n\t\t\t$oWrapHtml->appendChild($oWrapDom);\r\n\r\n\t\t\t$sWrp = $oDom->saveHTML($oWrapHtml);\r\n\r\n\t\t\t$sResult = \\str_replace('___xxx___', $sResult, $sWrp);\r\n\t\t}\r\n\r\n\t\t$sResult = \\str_replace(\\MailSo\\Base\\HtmlUtils::$KOS, ':', $sResult);\r\n\t\t$sResult = \\MailSo\\Base\\Utils::StripSpaces($sResult);\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param string $sHtmlAttrs = ''\r\n\t * @param string $sBodyAttrs = ''\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearBodyAndHtmlTag($sHtml, &$sHtmlAttrs = '', &$sBodyAttrs = '')\r\n\t{\r\n\t\t$aMatch = array();\r\n\t\tif (\\preg_match('/<html([^>]+)>/im', $sHtml, $aMatch) && !empty($aMatch[1]))\r\n\t\t{\r\n\t\t\t$sHtmlAttrs = $aMatch[1];\r\n\t\t}\r\n\r\n\t\t$aMatch = array();\r\n\t\tif (\\preg_match('/<body([^>]+)>/im', $sHtml, $aMatch) && !empty($aMatch[1]))\r\n\t\t{\r\n\t\t\t$sBodyAttrs = $aMatch[1];\r\n\t\t}\r\n\r\n\t\t$sHtml = \\preg_replace('/<head([^>]*)>/si', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<body([^>]*)>/si', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<\\/body>/i', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<html([^>]*)>/i', '', $sHtml);\r\n\t\t$sHtml = \\preg_replace('/<\\/html>/i', '', $sHtml);\r\n\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns:[a-z]=\"[^\"]*\"/i', '', $sHtmlAttrs);\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns:[a-z]=\\'[^\\']*\\'/i', '', $sHtmlAttrs);\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns=\"[^\"]*\"/i', '', $sHtmlAttrs);\r\n\t\t$sHtmlAttrs = \\preg_replace('/xmlns=\\'[^\\']*\\'/i', '', $sHtmlAttrs);\r\n\t\t$sBodyAttrs = \\preg_replace('/xmlns:[a-z]=\"[^\"]*\"/i', '', $sBodyAttrs);\r\n\t\t$sBodyAttrs = \\preg_replace('/xmlns:[a-z]=\\'[^\\']*\\'/i', '', $sBodyAttrs);\r\n\r\n\t\t$sHtmlAttrs = trim($sHtmlAttrs);\r\n\t\t$sBodyAttrs = trim($sBodyAttrs);\r\n\r\n\t\treturn $sHtml;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param bool $bClearEmpty = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function FixSchemas($sHtml, $bClearEmpty = true)\r\n\t{\r\n\t\tif ($bClearEmpty)\r\n\t\t{\r\n\t\t\t$sHtml = \\str_replace('<o:p></o:p>', '', $sHtml);\r\n\t\t}\r\n\r\n\t\t$sHtml = \\str_replace('<o:p>', '<span>', $sHtml);\r\n\t\t$sHtml = \\str_replace('</o:p>', '</span>', $sHtml);\r\n\r\n\t\treturn $sHtml;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearFastTags($sHtml)\r\n\t{\r\n\t\treturn \\preg_replace(array(\r\n\t\t\t'/<p[^>]*><\\/p>/i',\r\n\t\t\t'/<!doctype[^>]*>/i',\r\n\t\t\t'/<\\?xml [^>]*\\?>/i'\r\n\t\t), '', $sHtml);\r\n\t}\r\n\r\n\t/**\r\n\t * @param mixed $oDom\r\n\t */\r\n\tpublic static function ClearComments(&$oDom)\r\n\t{\r\n\t\t$aRemove = array();\r\n\r\n\t\t$oXpath = new \\DOMXpath($oDom);\r\n\t\t$oComments = $oXpath->query('//comment()');\r\n\t\tif ($oComments)\r\n\t\t{\r\n\t\t\tforeach ($oComments as $oComment)\r\n\t\t\t{\r\n\t\t\t\t$aRemove[] = $oComment;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tunset($oXpath, $oComments);\r\n\r\n\t\tforeach ($aRemove as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\tif (isset($oElement->parentNode))\r\n\t\t\t{\r\n\t\t\t\t@$oElement->parentNode->removeChild($oElement);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param mixed $oDom\r\n\t * @param bool $bClearStyleAndHead = true\r\n\t */\r\n\tpublic static function ClearTags(&$oDom, $bClearStyleAndHead = true)\r\n\t{\r\n\t\t$aRemoveTags = array(\r\n\t\t\t'svg', 'link', 'base', 'meta', 'title', 'x-script', 'script', 'bgsound', 'keygen', 'source',\r\n\t\t\t'object', 'embed', 'applet', 'mocha', 'iframe', 'frame', 'frameset', 'video', 'audio', 'area', 'map'\r\n\t\t);\r\n\r\n\t\tif ($bClearStyleAndHead)\r\n\t\t{\r\n\t\t\t$aRemoveTags[] = 'head';\r\n\t\t\t$aRemoveTags[] = 'style';\r\n\t\t}\r\n\r\n\t\t$aHtmlAllowedTags = isset(\\MailSo\\Config::$HtmlStrictAllowedTags) &&\r\n\t\t\t\\is_array(\\MailSo\\Config::$HtmlStrictAllowedTags) && 0 < \\count(\\MailSo\\Config::$HtmlStrictAllowedTags) ?\r\n\t\t\t\t\\MailSo\\Config::$HtmlStrictAllowedTags : null;\r\n\r\n\t\t$aRemove = array();\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\tif ($oElement)\r\n\t\t\t{\r\n\t\t\t\t$sTagNameLower = \\trim(\\strtolower($oElement->tagName));\r\n\t\t\t\tif ('' !== $sTagNameLower)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\\in_array($sTagNameLower, $aRemoveTags) || ($aHtmlAllowedTags && !\\in_array($sTagNameLower, $aHtmlAllowedTags)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aRemove[] = @$oElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tforeach ($aRemove as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\tif (isset($oElement->parentNode))\r\n\t\t\t{\r\n\t\t\t\t@$oElement->parentNode->removeChild($oElement);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n/*\r\n//\tpublic static function ClearStyleUrlValueParserHelper($oUrlValue, $oRule, $oRuleSet,\r\n//\t\t$oElem = null,\r\n//\t\t&$bHasExternals = false, &$aFoundCIDs = array(),\r\n//\t\t$aContentLocationUrls = array(), &$aFoundedContentLocationUrls = array(),\r\n//\t\t$bDoNotReplaceExternalUrl = false, $fAdditionalExternalFilter = null\r\n//\t)\r\n//\t{\r\n//\t\tif ($oUrlValue instanceof \\Sabberworm\\CSS\\Value\\URL)\r\n//\t\t{\r\n//\t\t\t$oNewRule = new \\Sabberworm\\CSS\\Rule\\Rule('x-rl-orig-'.$oRule->getRule());\r\n//\t\t\t$oNewRule->setValue((string) $oRule->getValue());\r\n//\t\t\t$oNewRule->setIsImportant($oRule->getIsImportant());\r\n//\r\n//\t\t\t$oRuleSet->addRule($oNewRule);\r\n//\r\n//\t\t\t$oUrl = $oUrlValue->getURL();\r\n//\t\t\t$sUrl = $oUrl ? $oUrl->getString() : '';\r\n//\r\n//\t\t\tif ('cid:' === \\strtolower(\\substr($sUrl, 0, 4)))\r\n//\t\t\t{\r\n//\t\t\t\t$aFoundCIDs[] = \\substr($sUrl, 4);\r\n//\r\n//\t\t\t\t$oRule->setRule('x-rl-mod-'.$oRule->getRule());\r\n//\r\n//\t\t\t\tif ($oElem)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oElem->setAttribute('data-x-style-mod', '1');\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t\telse\r\n//\t\t\t{\r\n//\t\t\t\tif (\\preg_match('/http[s]?:\\/\\//i', $sUrl) || '//' === \\substr($sUrl, 0, 2))\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oRule->setRule('x-rl-mod-'.$oRule->getRule());\r\n//\r\n//\t\t\t\t\tif (\\in_array($sUrl, $aContentLocationUrls))\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$aFoundedContentLocationUrls[] = $sUrl;\r\n//\t\t\t\t\t}\r\n//\t\t\t\t\telse\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$bHasExternals = true;\r\n//\t\t\t\t\t\tif (!$bDoNotReplaceExternalUrl)\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\tif ($fAdditionalExternalFilter)\r\n//\t\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\t$sAdditionalResult = \\call_user_func($fAdditionalExternalFilter, $sUrl);\r\n//\t\t\t\t\t\t\t\tif (0 < \\strlen($sAdditionalResult) && $oUrl)\r\n//\t\t\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\t\t$oUrl->setString($sAdditionalResult);\r\n//\t\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\r\n//\t\t\t\t\tif ($oElem)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$oElem->setAttribute('data-x-style-mod', '1');\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t\telse if ('data:image/' !== \\strtolower(\\substr(\\trim($sUrl), 0, 11)))\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oRuleSet->removeRule($oRule);\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n//\t\telse if ($oRule instanceof \\Sabberworm\\CSS\\Rule\\Rule)\r\n//\t\t{\r\n//\t\t\tif ('x-rl-' !== \\substr($oRule->getRule(), 0, 5))\r\n//\t\t\t{\r\n//\t\t\t\t$oValue = $oRule->getValue();\r\n//\t\t\t\tif ($oValue instanceof \\Sabberworm\\CSS\\Value\\URL)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyleUrlValueParserHelper($oValue, $oRule, $oRuleSet, $oElem,\r\n//\t\t\t\t\t\t$bHasExternals, $aFoundCIDs,\r\n//\t\t\t\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls,\r\n//\t\t\t\t\t\t$bDoNotReplaceExternalUrl, $fAdditionalExternalFilter);\r\n//\t\t\t\t}\r\n//\t\t\t\telse if ($oValue instanceof \\Sabberworm\\CSS\\Value\\RuleValueList)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$aComps = $oValue->getListComponents();\r\n//\t\t\t\t\tforeach ($aComps as $oValue)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\tif ($oValue instanceof \\Sabberworm\\CSS\\Value\\URL)\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyleUrlValueParserHelper($oValue, $oRule, $oRuleSet, $oElem,\r\n//\t\t\t\t\t\t\t\t$bHasExternals, $aFoundCIDs,\r\n//\t\t\t\t\t\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls,\r\n//\t\t\t\t\t\t\t\t$bDoNotReplaceExternalUrl, $fAdditionalExternalFilter);\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n//\t}\r\n//\r\n//\tpublic static function ClearStyleSmart($sStyle, $oElement = null,\r\n//\t\t&$bHasExternals = false, &$aFoundCIDs = array(),\r\n//\t\t$aContentLocationUrls = array(), &$aFoundedContentLocationUrls = array(),\r\n//\t\t$bDoNotReplaceExternalUrl = false, $fAdditionalExternalFilter = null,\r\n//\t\t$sSelectorPrefix = '')\r\n//\t{\r\n//\t\t$mResult = false;\r\n//\t\t$oCss = null;\r\n//\r\n//\t\tif (!\\class_exists('Sabberworm\\CSS\\Parser'))\r\n//\t\t{\r\n//\t\t\treturn $mResult;\r\n//\t\t}\r\n//\r\n//\t\t$sStyle = \\trim($sStyle);\r\n//\t\tif (empty($sStyle))\r\n//\t\t{\r\n//\t\t\treturn '';\r\n//\t\t}\r\n//\r\n//\t\t$sStyle = \\trim(\\preg_replace('/[\\r\\n\\t\\s]+/', ' ', $sStyle));\r\n//\r\n//\t\ttry\r\n//\t\t{\r\n//\t\t\t$oSettings = \\Sabberworm\\CSS\\Settings::create();\r\n//\t\t\t$oSettings->beStrict();\r\n//\t\t\t$oSettings->withMultibyteSupport(false);\r\n//\r\n//\t\t\t$oCssParser = new \\Sabberworm\\CSS\\Parser($sStyle, $oSettings);\r\n//\t\t\t$oCss = $oCssParser->parse();\r\n//\t\t}\r\n//\t\tcatch (\\Exception $oEception)\r\n//\t\t{\r\n//\t\t\tunset($oEception);\r\n//\t\t\t$mResult = false;\r\n//\t\t}\r\n//\r\n//\t\tif ($oCss)\r\n//\t\t{\r\n//\t\t\tforeach ($oCss->getAllDeclarationBlocks() as $oBlock)\r\n//\t\t\t{\r\n//\t\t\t\tforeach($oBlock->getSelectors() as $oSelector)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$sS = ' '.\\trim($oSelector->getSelector()).' ';\r\n//\t\t\t\t\t$sS = \\preg_replace('/ body([\\.# ])/i', ' [data-x-div-type=\"body\"]$1', $sS);\r\n//\t\t\t\t\t$sS = \\preg_replace('/ html([\\.# ])/i', ' [data-x-div-type=\"html\"]$1', $sS);\r\n//\r\n//\t\t\t\t\tif (0 < \\strlen($sSelectorPrefix))\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$sS = \\trim($sSelectorPrefix.' '.\\trim($sS));\r\n//\t\t\t\t\t}\r\n//\r\n//\t\t\t\t\t$oSelector->setSelector(\\trim($sS));\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\r\n//\t\t\t$aRulesToRemove = array(\r\n//\t\t\t\t'pointer-events', 'content', 'behavior', 'cursor',\r\n//\t\t\t);\r\n//\r\n//\t\t\tforeach($oCss->getAllRuleSets() as $oRuleSet)\r\n//\t\t\t{\r\n//\t\t\t\tforeach ($aRulesToRemove as $sRuleToRemove)\r\n//\t\t\t\t{\r\n//\t\t\t\t\t$oRuleSet->removeRule($sRuleToRemove);\r\n//\t\t\t\t}\r\n//\r\n//\t\t\t\t// position: fixed -> position: fixed -> absolute\r\n//\t\t\t\t$aRules = $oRuleSet->getRules('position');\r\n//\t\t\t\tif (\\is_array($aRules))\r\n//\t\t\t\t{\r\n//\t\t\t\t\tforeach ($aRules as $oRule)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$mValue = $oRule->getValue();\r\n//\t\t\t\t\t\tif (\\is_string($mValue) && 'fixed' === \\trim(\\strtolower($mValue)))\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t$oRule->setValue('absolute');\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\r\n//\t\t\tforeach($oCss->getAllDeclarationBlocks() as $oRuleSet)\r\n//\t\t\t{\r\n//\t\t\t\tif ($oRuleSet instanceof \\Sabberworm\\CSS\\RuleSet\\RuleSet)\r\n//\t\t\t\t{\r\n//\t\t\t\t\tif ($oRuleSet instanceof \\Sabberworm\\CSS\\RuleSet\\DeclarationBlock)\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\t$oRuleSet->expandBackgroundShorthand();\r\n//\t\t\t\t\t\t$oRuleSet->expandListStyleShorthand();\r\n//\t\t\t\t\t}\r\n//\r\n//\t\t\t\t\t$aRules = $oRuleSet->getRules();\r\n//\t\t\t\t\tif (\\is_array($aRules) && 0 < \\count($aRules))\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\tforeach ($aRules as $oRule)\r\n//\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\tif ($oRule instanceof \\Sabberworm\\CSS\\Rule\\Rule)\r\n//\t\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyleUrlValueParserHelper(null, $oRule, $oRuleSet,\r\n//\t\t\t\t\t\t\t\t\t$oElement,\r\n//\t\t\t\t\t\t\t\t\t$bHasExternals, $aFoundCIDs,\r\n//\t\t\t\t\t\t\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls,\r\n//\t\t\t\t\t\t\t\t\t$bDoNotReplaceExternalUrl, $fAdditionalExternalFilter\r\n//\t\t\t\t\t\t\t\t);\r\n//\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\r\n//\t\t\ttry\r\n//\t\t\t{\r\n//\t\t\t\t$mResult = $oCss->render(\\Sabberworm\\CSS\\OutputFormat::createCompact());\r\n//\t\t\t}\r\n//\t\t\tcatch (\\Exception $oEception)\r\n//\t\t\t{\r\n//\t\t\t\tunset($oEception);\r\n//\t\t\t\t$mResult = false;\r\n//\t\t\t}\r\n//\t\t}\r\n//\r\n//\t\treturn $mResult;\r\n//\t}\r\n*/\r\n\r\n\t/**\r\n\t *\r\n\t * @param string $sStyle\r\n\t * @param \\DOMElement $oElement\r\n\t * @param bool $bHasExternals\r\n\t * @param array $aFoundCIDs\r\n\t * @param array $aContentLocationUrls\r\n\t * @param array $aFoundedContentLocationUrls\r\n\t * @param bool $bDoNotReplaceExternalUrl = false\r\n\t * @param callback|null $fAdditionalExternalFilter = null\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearStyle($sStyle, $oElement, &$bHasExternals, &$aFoundCIDs,\r\n\t\t$aContentLocationUrls, &$aFoundedContentLocationUrls, $bDoNotReplaceExternalUrl = false, $fAdditionalExternalFilter = null)\r\n\t{\r\n\t\t$sStyle = \\trim($sStyle);\r\n\t\t$aOutStyles = array();\r\n\t\t$aStyles = \\explode(';', $sStyle);\r\n\r\n\t\tif ($fAdditionalExternalFilter && !\\is_callable($fAdditionalExternalFilter))\r\n\t\t{\r\n\t\t\t$fAdditionalExternalFilter = null;\r\n\t\t}\r\n\r\n\t\t$aMatch = array();\r\n\t\tforeach ($aStyles as $sStyleItem)\r\n\t\t{\r\n\t\t\t$aStyleValue = \\explode(':', $sStyleItem, 2);\r\n\t\t\t$sName = \\trim(\\strtolower($aStyleValue[0]));\r\n\t\t\t$sValue = isset($aStyleValue[1]) ? \\trim($aStyleValue[1]) : '';\r\n\r\n\t\t\tif ('position' === $sName && 'fixed' === \\strtolower($sValue))\r\n\t\t\t{\r\n\t\t\t\t$sValue = 'absolute';\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sName) || 0 === \\strlen($sValue))\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t$sStyleItem = $sName.': '.$sValue;\r\n\t\t\t$aStyleValue = array($sName, $sValue);\r\n\r\n\t\t\t/*if (\\in_array($sName, array('position', 'left', 'right', 'top', 'bottom', 'behavior', 'cursor')))\r\n\t\t\t{\r\n\t\t\t\t// skip\r\n\t\t\t}\r\n\t\t\telse */if (\\in_array($sName, array('behavior', 'pointer-events')) ||\r\n\t\t\t\t('cursor' === $sName && !\\in_array(\\strtolower($sValue), array('none', 'cursor'))) ||\r\n\t\t\t\t('display' === $sName && 'none' === \\strtolower($sValue)) ||\r\n\t\t\t\t\\preg_match('/expression/i', $sValue) ||\r\n\t\t\t\t('text-indent' === $sName && '-' === \\substr(trim($sValue), 0, 1))\r\n\t\t\t)\r\n\t\t\t{\r\n\t\t\t\t// skip\r\n\t\t\t}\r\n\t\t\telse if (\\in_array($sName, array('background-image', 'background', 'list-style', 'list-style-image', 'content'))\r\n\t\t\t\t&& \\preg_match('/url[\\s]?\\(([^)]+)\\)/im', $sValue, $aMatch) && !empty($aMatch[1]))\r\n\t\t\t{\r\n\t\t\t\t$sFullUrl = \\trim($aMatch[0], '\"\\' ');\r\n\t\t\t\t$sUrl = \\trim($aMatch[1], '\"\\' ');\r\n\t\t\t\t$sStyleValue = \\trim(\\preg_replace('/[\\s]+/', ' ', \\str_replace($sFullUrl, '', $sValue)));\r\n\t\t\t\t$sStyleItem = empty($sStyleValue) ? '' : $sName.': '.$sStyleValue;\r\n\r\n\t\t\t\tif ('cid:' === \\strtolower(\\substr($sUrl, 0, 4)))\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oElement)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-style-cid-name',\r\n\t\t\t\t\t\t\t'background' === $sName ? 'background-image' : $sName);\r\n\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-style-cid', \\substr($sUrl, 4));\r\n\r\n\t\t\t\t\t\t$aFoundCIDs[] = \\substr($sUrl, 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oElement)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (\\preg_match('/http[s]?:\\/\\//i', $sUrl) || '//' === \\substr($sUrl, 0, 2))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$bHasExternals = true;\r\n\t\t\t\t\t\t\tif (!$bDoNotReplaceExternalUrl)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (\\in_array($sName, array('background-image', 'list-style-image', 'content')))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sStyleItem = '';\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t$sTemp = '';\r\n\t\t\t\t\t\t\t\tif ($oElement->hasAttribute('data-x-style-url'))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sTemp = \\trim($oElement->getAttribute('data-x-style-url'));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t$sTemp = empty($sTemp) ? '' : (';' === \\substr($sTemp, -1) ? $sTemp.' ' : $sTemp.'; ');\r\n\r\n\t\t\t\t\t\t\t\t$oElement->setAttribute('data-x-style-url', \\trim($sTemp.\r\n\t\t\t\t\t\t\t\t\t('background' === $sName ? 'background-image' : $sName).': '.$sFullUrl, ' ;'));\r\n\r\n\t\t\t\t\t\t\t\tif ($fAdditionalExternalFilter)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sAdditionalResult = \\call_user_func($fAdditionalExternalFilter, $sUrl);\r\n\t\t\t\t\t\t\t\t\tif (0 < \\strlen($sAdditionalResult))\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$oElement->setAttribute('data-x-additional-style-url',\r\n\t\t\t\t\t\t\t\t\t\t\t('background' === $sName ? 'background-image' : $sName).': url('.$sAdditionalResult.')');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ('data:image/' !== \\strtolower(\\substr(\\trim($sUrl), 0, 11)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oElement->setAttribute('data-x-broken-style-src', $sFullUrl);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!empty($sStyleItem))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aOutStyles[] = $sStyleItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ('height' === $sName)\r\n\t\t\t{\r\n//\t\t\t\t$aOutStyles[] = 'min-'.ltrim($sStyleItem);\r\n\t\t\t\t$aOutStyles[] = $sStyleItem;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$aOutStyles[] = $sStyleItem;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn \\implode(';', $aOutStyles);\r\n\t}\r\n\r\n\t/**\r\n\t * @param \\DOMDocument $oDom\r\n\t */\r\n\tpublic static function FindLinksInDOM(&$oDom)\r\n\t{\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\t$sTagNameLower = \\strtolower($oElement->tagName);\r\n\t\t\t$sParentTagNameLower = isset($oElement->parentNode) && isset($oElement->parentNode->tagName) ?\r\n\t\t\t\t\\strtolower($oElement->parentNode->tagName) : '';\r\n\r\n\t\t\tif (!\\in_array($sTagNameLower, array('html', 'meta', 'head', 'style', 'script', 'img', 'button', 'input', 'textarea', 'a')) &&\r\n\t\t\t\t'a' !== $sParentTagNameLower && $oElement->childNodes && 0 < $oElement->childNodes->length)\r\n\t\t\t{\r\n\t\t\t\t$oSubItem = null;\r\n\t\t\t\t$aTextNodes = array();\r\n\t\t\t\t$iIndex = $oElement->childNodes->length - 1;\r\n\t\t\t\twhile ($iIndex > -1)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oSubItem = $oElement->childNodes->item($iIndex);\r\n\t\t\t\t\tif ($oSubItem && XML_TEXT_NODE === $oSubItem->nodeType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aTextNodes[] = $oSubItem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$iIndex--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tunset($oSubItem);\r\n\r\n\t\t\t\tforeach ($aTextNodes as $oTextNode)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oTextNode && 0 < \\strlen($oTextNode->wholeText)/* && \\preg_match('/http[s]?:\\/\\//i', $oTextNode->wholeText)*/)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sText = \\MailSo\\Base\\LinkFinder::NewInstance()\r\n\t\t\t\t\t\t\t->Text($oTextNode->wholeText)\r\n\t\t\t\t\t\t\t->UseDefaultWrappers(true)\r\n\t\t\t\t\t\t\t->CompileText()\r\n\t\t\t\t\t\t;\r\n\r\n\t\t\t\t\t\t$oSubDom = \\MailSo\\Base\\HtmlUtils::GetDomFromText($sText);\r\n\t\t\t\t\t\tif ($oSubDom)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oBodyNodes = $oSubDom->getElementsByTagName('body');\r\n\t\t\t\t\t\t\tif ($oBodyNodes && 0 < $oBodyNodes->length)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$oBodyChildNodes = $oBodyNodes->item(0)->childNodes;\r\n\t\t\t\t\t\t\t\tif ($oBodyChildNodes && $oBodyChildNodes->length)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfor ($iIndex = 0, $iLen = $oBodyChildNodes->length; $iIndex < $iLen; $iIndex++)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$oSubItem = $oBodyChildNodes->item($iIndex);\r\n\t\t\t\t\t\t\t\t\t\tif ($oSubItem)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tif (XML_ELEMENT_NODE === $oSubItem->nodeType &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t'a' === \\strtolower($oSubItem->tagName))\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t$oLink = $oDom->createElement('a',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\\str_replace(':', \\MailSo\\Base\\HtmlUtils::$KOS, \\htmlspecialchars($oSubItem->nodeValue)));\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t$sHref = $oSubItem->getAttribute('href');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ($sHref)\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$oLink->setAttribute('href', $sHref);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t$oElement->insertBefore($oLink, $oTextNode);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t$oElement->insertBefore($oDom->importNode($oSubItem), $oTextNode);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t$oElement->removeChild($oTextNode);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tunset($oBodyNodes);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tunset($oSubDom, $sText);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tunset($aNodes);\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param bool $bDoNotReplaceExternalUrl = false\r\n\t * @param bool $bFindLinksInHtml = false\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearHtmlSimple($sHtml, $bDoNotReplaceExternalUrl = false, $bFindLinksInHtml = false, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$bHasExternals = false;\r\n\t\t$aFoundCIDs = array();\r\n\t\t$aContentLocationUrls = array();\r\n\t\t$aFoundedContentLocationUrls = array();\r\n\t\t$fAdditionalExternalFilter = null;\r\n\t\t$fAdditionalDomReader = null;\r\n\t\t$bTryToDetectHiddenImages = false;\r\n\r\n\t\treturn \\MailSo\\Base\\HtmlUtils::ClearHtml($sHtml, $bHasExternals, $aFoundCIDs,\r\n\t\t\t$aContentLocationUrls, $aFoundedContentLocationUrls, $bDoNotReplaceExternalUrl, $bFindLinksInHtml,\r\n\t\t\t$fAdditionalExternalFilter, $fAdditionalDomReader, $bTryToDetectHiddenImages,\r\n\t\t\t$bWrapByFakeHtmlAndBodyDiv);\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param bool $bHasExternals = false\r\n\t * @param array $aFoundCIDs = array()\r\n\t * @param array $aContentLocationUrls = array()\r\n\t * @param array $aFoundedContentLocationUrls = array()\r\n\t * @param bool $bDoNotReplaceExternalUrl = false\r\n\t * @param bool $bFindLinksInHtml = false\r\n\t * @param callback|null $fAdditionalExternalFilter = null\r\n\t * @param callback|null $fAdditionalDomReader = null\r\n\t * @param bool $bTryToDetectHiddenImages = false\r\n\t * @param bool $bWrapByFakeHtmlAndBodyDiv = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ClearHtml($sHtml, &$bHasExternals = false, &$aFoundCIDs = array(),\r\n\t\t$aContentLocationUrls = array(), &$aFoundedContentLocationUrls = array(),\r\n\t\t$bDoNotReplaceExternalUrl = false, $bFindLinksInHtml = false,\r\n\t\t$fAdditionalExternalFilter = null, $fAdditionalDomReader = false,\r\n\t\t$bTryToDetectHiddenImages = false, $bWrapByFakeHtmlAndBodyDiv = true)\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$sHtml = null === $sHtml ? '' : (string) $sHtml;\r\n\t\t$sHtml = \\trim($sHtml);\r\n\t\tif (0 === \\strlen($sHtml))\r\n\t\t{\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif ($fAdditionalExternalFilter && !\\is_callable($fAdditionalExternalFilter))\r\n\t\t{\r\n\t\t\t$fAdditionalExternalFilter = null;\r\n\t\t}\r\n\r\n\t\tif ($fAdditionalDomReader && !\\is_callable($fAdditionalDomReader))\r\n\t\t{\r\n\t\t\t$fAdditionalDomReader = null;\r\n\t\t}\r\n\r\n\t\t$bHasExternals = false;\r\n\r\n\t\t// Dom Part\r\n\t\t$oDom = \\MailSo\\Base\\HtmlUtils::GetDomFromText($sHtml);\r\n\t\tunset($sHtml);\r\n\r\n\t\tif (!$oDom)\r\n\t\t{\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif ($fAdditionalDomReader)\r\n\t\t{\r\n\t\t\t$oResDom = \\call_user_func($fAdditionalDomReader, $oDom);\r\n\t\t\tif ($oResDom)\r\n\t\t\t{\r\n\t\t\t\t$oDom = $oResDom;\r\n\t\t\t}\r\n\r\n\t\t\tunset($oResDom);\r\n\t\t}\r\n\r\n\t\tif ($bFindLinksInHtml)\r\n\t\t{\r\n\t\t\t\\MailSo\\Base\\HtmlUtils::FindLinksInDOM($oDom);\r\n\t\t}\r\n\r\n\t\t\\MailSo\\Base\\HtmlUtils::ClearComments($oDom);\r\n\t\t\\MailSo\\Base\\HtmlUtils::ClearTags($oDom);\r\n\r\n\t\t$sLinkColor = '';\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\t$aRemovedAttrs = array();\r\n\t\t\t$sTagNameLower = \\strtolower($oElement->tagName);\r\n\r\n\t\t\t// convert body attributes to styles\r\n\t\t\tif ('body' === $sTagNameLower)\r\n\t\t\t{\r\n\t\t\t\t$aAttrs = array(\r\n\t\t\t\t\t'link' => '',\r\n\t\t\t\t\t'text' => '',\r\n\t\t\t\t\t'topmargin' => '',\r\n\t\t\t\t\t'leftmargin' => '',\r\n\t\t\t\t\t'bottommargin' => '',\r\n\t\t\t\t\t'rightmargin' => ''\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (isset($oElement->attributes))\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach ($oElement->attributes as $sAttrName => /* @var $oAttributeNode \\DOMNode */ $oAttributeNode)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ($oAttributeNode && isset($oAttributeNode->nodeValue))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sAttrNameLower = \\trim(\\strtolower($sAttrName));\r\n\t\t\t\t\t\t\tif (isset($aAttrs[$sAttrNameLower]) && '' === $aAttrs[$sAttrNameLower])\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$aAttrs[$sAttrNameLower] = array($sAttrName, \\trim($oAttributeNode->nodeValue));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$aStyles = array();\r\n\t\t\t\tforeach ($aAttrs as $sIndex => $aItem)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\\is_array($aItem))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->removeAttribute($aItem[0]);\r\n\r\n\t\t\t\t\t\tswitch ($sIndex)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase 'link':\r\n\t\t\t\t\t\t\t\t$sLinkColor = \\trim($aItem[1]);\r\n\t\t\t\t\t\t\t\tif (!\\preg_match('/^#[abcdef0-9]{3,6}$/i', $sLinkColor))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sLinkColor = '';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'text':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'color: '.$aItem[1];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'topmargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-top: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'leftmargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-left: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'bottommargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-bottom: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'rightmargin':\r\n\t\t\t\t\t\t\t\t$aStyles[] = 'margin-right: '.((int) $aItem[1]).'px';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (0 < \\count($aStyles))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sStyles = $oElement->hasAttribute('style') ? \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';')) : '';\r\n\t\t\t\t\t$oElement->setAttribute('style', (empty($sStyles) ? '' : $sStyles.'; ').\\implode('; ', $aStyles));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ('iframe' === $sTagNameLower || 'frame' === $sTagNameLower)\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('src', 'javascript:false');\r\n\t\t\t}\r\n\r\n\t\t\tif ('a' === $sTagNameLower && !empty($sLinkColor))\r\n\t\t\t{\r\n\t\t\t\t$sStyles = $oElement->hasAttribute('style')\r\n\t\t\t\t\t?  \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';')) : '';\r\n\r\n\t\t\t\t$oElement->setAttribute('style',\r\n\t\t\t\t\t'color: '.$sLinkColor.\\trim((empty($sStyles) ? '' : '; '.$sStyles)));\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttributes() && isset($oElement->attributes) && $oElement->attributes)\r\n\t\t\t{\r\n\t\t\t\t$aHtmlAllowedAttributes = isset(\\MailSo\\Config::$HtmlStrictAllowedAttributes) &&\r\n\t\t\t\t\t\\is_array(\\MailSo\\Config::$HtmlStrictAllowedAttributes) && 0 < \\count(\\MailSo\\Config::$HtmlStrictAllowedAttributes) ?\r\n\t\t\t\t\t\t\\MailSo\\Config::$HtmlStrictAllowedAttributes : null;\r\n\r\n\t\t\t\t$sAttrsForRemove = array();\r\n\t\t\t\tforeach ($oElement->attributes as $sAttrName => $oAttr)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($sAttrName && $oAttr)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sAttrNameLower = \\trim(\\strtolower($sAttrName));\r\n\t\t\t\t\t\tif ($aHtmlAllowedAttributes && !\\in_array($sAttrNameLower, $aHtmlAllowedAttributes))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sAttrsForRemove[] = $sAttrName;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ('on' === \\substr($sAttrNameLower, 0, 2) || in_array($sAttrNameLower, array(\r\n\t\t\t\t\t\t\t'id', 'class', 'contenteditable', 'designmode', 'formaction', 'manifest', 'action',\r\n\t\t\t\t\t\t\t'data-bind', 'data-reactid', 'xmlns', 'srcset', 'data-x-skip-style',\r\n\t\t\t\t\t\t\t'fscommand', 'seeksegmenttime'\r\n\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sAttrsForRemove[] = $sAttrName;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (0 < \\count($sAttrsForRemove))\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach ($sAttrsForRemove as $sName)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t@$oElement->removeAttribute($sName);\r\n\t\t\t\t\t\t$aRemovedAttrs[\\trim(\\strtolower($sName))] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tunset($sAttrsForRemove);\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('href'))\r\n\t\t\t{\r\n\t\t\t\t$sHref = \\trim($oElement->getAttribute('href'));\r\n\t\t\t\tif (!\\preg_match('/^(http[s]?|ftp|skype|mailto):/i', $sHref) && '//' !== \\substr($sHref, 0, 2))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-x-broken-href', $sHref);\r\n\t\t\t\t\t$oElement->setAttribute('href', 'javascript:false');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ('a' === $sTagNameLower)\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('rel', 'external nofollow noopener noreferrer');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$sLinkHref = \\trim($oElement->getAttribute('xlink:href'));\r\n\t\t\tif ($sLinkHref && !\\preg_match('/^(http[s]?):/i', $sLinkHref) && '//' !== \\substr($sLinkHref, 0, 2))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('data-x-blocked-xlink-href', $sLinkHref);\r\n\t\t\t\t$oElement->removeAttribute('xlink:href');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (\\in_array($sTagNameLower, array('a', 'form', 'area')))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('target', '_blank');\r\n\t\t\t}\r\n\r\n\t\t\tif (\\in_array($sTagNameLower, array('a', 'form', 'area', 'input', 'button', 'textarea')))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('tabindex', '-1');\r\n\t\t\t}\r\n\r\n\t\t\tif ($bTryToDetectHiddenImages && 'img' === $sTagNameLower)\r\n\t\t\t{\r\n\t\t\t\t$sAlt = $oElement->hasAttribute('alt')\r\n\t\t\t\t\t? \\trim($oElement->getAttribute('alt')) : '';\r\n\r\n\t\t\t\tif ($oElement->hasAttribute('src') && '' === $sAlt)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aH = array(\r\n\t\t\t\t\t\t'email.microsoftemail.com/open',\r\n\t\t\t\t\t\t'github.com/notifications/beacon/',\r\n\t\t\t\t\t\t'mandrillapp.com/track/open',\r\n\t\t\t\t\t\t'list-manage.com/track/open'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t$sH = $oElement->hasAttribute('height')\r\n\t\t\t\t\t\t? \\trim($oElement->getAttribute('height')) : '';\r\n\r\n//\t\t\t\t\t\t$sW = $oElement->hasAttribute('width')\r\n//\t\t\t\t\t\t\t? \\trim($oElement->getAttribute('width')) : '';\r\n\r\n\t\t\t\t\t$sStyles = $oElement->hasAttribute('style')\r\n\t\t\t\t\t\t? \\preg_replace('/[\\s]+/', '', \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';'))) : '';\r\n\r\n\t\t\t\t\t$sSrc = \\trim($oElement->getAttribute('src'));\r\n\r\n\t\t\t\t\t$bC = \\in_array($sH, array('1', '0', '1px', '0px')) ||\r\n\t\t\t\t\t\t\\preg_match('/(display:none|visibility:hidden|height:0|height:[01][a-z][a-z])/i', $sStyles);\r\n\r\n\t\t\t\t\tif (!$bC)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sSrcLower = \\strtolower($sSrc);\r\n\t\t\t\t\t\tforeach ($aH as $sLine)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (false !== \\strpos($sSrcLower, $sLine))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$bC = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($bC)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('style', 'display:none');\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-skip-style', 'true');\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-hidden-src', $sSrc);\r\n\r\n\t\t\t\t\t\t$oElement->removeAttribute('src');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('src'))\r\n\t\t\t{\r\n\t\t\t\t$sSrc = \\trim($oElement->getAttribute('src'));\r\n\t\t\t\t$oElement->removeAttribute('src');\r\n\r\n\t\t\t\tif (\\in_array($sSrc, $aContentLocationUrls))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-x-src-location', $sSrc);\r\n\t\t\t\t\t$aFoundedContentLocationUrls[] = $sSrc;\r\n\t\t\t\t}\r\n\t\t\t\telse if ('cid:' === \\strtolower(\\substr($sSrc, 0, 4)))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-x-src-cid', \\substr($sSrc, 4));\r\n\t\t\t\t\t$aFoundCIDs[] = \\substr($sSrc, 4);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\\preg_match('/^http[s]?:\\/\\//i', $sSrc) || '//' === \\substr($sSrc, 0, 2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ($bDoNotReplaceExternalUrl)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oElement->setAttribute('src', $sSrc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$oElement->setAttribute('data-x-src', $sSrc);\r\n\t\t\t\t\t\t\tif ($fAdditionalExternalFilter)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$sCallResult = \\call_user_func($fAdditionalExternalFilter, $sSrc);\r\n\t\t\t\t\t\t\t\tif (0 < \\strlen($sCallResult))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$oElement->setAttribute('data-x-additional-src', $sCallResult);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$bHasExternals = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ('data:image/' === \\strtolower(\\substr($sSrc, 0, 11)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('src', $sSrc);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oElement->setAttribute('data-x-broken-src', $sSrc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$sBackground = $oElement->hasAttribute('background')\r\n\t\t\t\t? \\trim($oElement->getAttribute('background')) : '';\r\n\t\t\t$sBackgroundColor = $oElement->hasAttribute('bgcolor')\r\n\t\t\t\t? \\trim($oElement->getAttribute('bgcolor')) : '';\r\n\r\n\t\t\tif (!empty($sBackground) || !empty($sBackgroundColor))\r\n\t\t\t{\r\n\t\t\t\t$aStyles = array();\r\n\t\t\t\t$sStyles = $oElement->hasAttribute('style')\r\n\t\t\t\t\t? \\trim(\\trim(\\trim($oElement->getAttribute('style')), ';')) : '';\r\n\r\n\t\t\t\tif (!empty($sBackground))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aStyles[] = 'background-image: url(\\''.$sBackground.'\\')';\r\n\t\t\t\t\t$oElement->removeAttribute('background');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!empty($sBackgroundColor))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aStyles[] = 'background-color: '.$sBackgroundColor;\r\n\t\t\t\t\t$oElement->removeAttribute('bgcolor');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$oElement->setAttribute('style', (empty($sStyles) ? '' : $sStyles.'; ').\\implode('; ', $aStyles));\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('style') && !$oElement->hasAttribute('data-x-skip-style'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('style',\r\n\t\t\t\t\t\\MailSo\\Base\\HtmlUtils::ClearStyle($oElement->getAttribute('style'), $oElement, $bHasExternals,\r\n\t\t\t\t\t\t$aFoundCIDs, $aContentLocationUrls, $aFoundedContentLocationUrls, $bDoNotReplaceExternalUrl, $fAdditionalExternalFilter));\r\n\t\t\t}\r\n\r\n\t\t\t$oElement->removeAttribute('data-x-skip-style');\r\n\r\n\t\t\tif (\\MailSo\\Config::$HtmlStrictDebug && 0 < \\count($aRemovedAttrs))\r\n\t\t\t{\r\n\t\t\t\tunset($aRemovedAttrs['class'], $aRemovedAttrs['target'], $aRemovedAttrs['id'], $aRemovedAttrs['name'],\r\n\t\t\t\t\t$aRemovedAttrs['itemprop'], $aRemovedAttrs['itemscope'], $aRemovedAttrs['itemtype']);\r\n\r\n\t\t\t\t$aRemovedAttrs = \\array_keys($aRemovedAttrs);\r\n\t\t\t\tif (0 < \\count($aRemovedAttrs))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->setAttribute('data-removed-attrs', \\implode(',', $aRemovedAttrs));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$sResult = \\MailSo\\Base\\HtmlUtils::GetTextFromDom($oDom, $bWrapByFakeHtmlAndBodyDiv);\r\n\t\tunset($oDom);\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sHtml\r\n\t * @param array $aFoundCids = array()\r\n\t * @param array|null $mFoundDataURL = null\r\n\t * @param array $aFoundedContentLocationUrls = array()\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function BuildHtml($sHtml, &$aFoundCids = array(), &$mFoundDataURL = null, &$aFoundedContentLocationUrls = array())\r\n\t{\r\n\t\t$oDom = \\MailSo\\Base\\HtmlUtils::GetDomFromText($sHtml);\r\n\r\n\t\t\\MailSo\\Base\\HtmlUtils::ClearTags($oDom);\r\n\t\tunset($sHtml);\r\n\r\n\t\t$aNodes = $oDom->getElementsByTagName('*');\r\n\t\tforeach ($aNodes as /* @var $oElement \\DOMElement */ $oElement)\r\n\t\t{\r\n\t\t\t$sTagNameLower = \\strtolower($oElement->tagName);\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-src-cid'))\r\n\t\t\t{\r\n\t\t\t\t$sCid = $oElement->getAttribute('data-x-src-cid');\r\n\t\t\t\t$oElement->removeAttribute('data-x-src-cid');\r\n\r\n\t\t\t\tif (!empty($sCid))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aFoundCids[] = $sCid;\r\n\r\n\t\t\t\t\t@$oElement->removeAttribute('src');\r\n\t\t\t\t\t$oElement->setAttribute('src', 'cid:'.$sCid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-src-location'))\r\n\t\t\t{\r\n\t\t\t\t$sSrc = $oElement->getAttribute('data-x-src-location');\r\n\t\t\t\t$oElement->removeAttribute('data-x-src-location');\r\n\r\n\t\t\t\tif (!empty($sSrc))\r\n\t\t\t\t{\r\n\t\t\t\t\t$aFoundedContentLocationUrls[] = $sSrc;\r\n\r\n\t\t\t\t\t@$oElement->removeAttribute('src');\r\n\t\t\t\t\t$oElement->setAttribute('src', $sSrc);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-broken-src'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('src', $oElement->getAttribute('data-x-broken-src'));\r\n\t\t\t\t$oElement->removeAttribute('data-x-broken-src');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-src'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('src', $oElement->getAttribute('data-x-src'));\r\n\t\t\t\t$oElement->removeAttribute('data-x-src');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-href'))\r\n\t\t\t{\r\n\t\t\t\t$oElement->setAttribute('href', $oElement->getAttribute('data-x-href'));\r\n\t\t\t\t$oElement->removeAttribute('data-x-href');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-style-cid-name') && $oElement->hasAttribute('data-x-style-cid'))\r\n\t\t\t{\r\n\t\t\t\t$sCidName = $oElement->getAttribute('data-x-style-cid-name');\r\n\t\t\t\t$sCid = $oElement->getAttribute('data-x-style-cid');\r\n\r\n\t\t\t\t$oElement->removeAttribute('data-x-style-cid-name');\r\n\t\t\t\t$oElement->removeAttribute('data-x-style-cid');\r\n\t\t\t\tif (!empty($sCidName) && !empty($sCid) && \\in_array($sCidName,\r\n\t\t\t\t\tarray('background-image', 'background', 'list-style-image', 'content')))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sStyles = '';\r\n\t\t\t\t\tif ($oElement->hasAttribute('style'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sStyles = \\trim(\\trim($oElement->getAttribute('style')), ';');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$sBack = $sCidName.': url(cid:'.$sCid.')';\r\n\t\t\t\t\t$sStyles = \\preg_replace('/'.\\preg_quote($sCidName, '/').':\\s?[^;]+/i', $sBack, $sStyles);\r\n\t\t\t\t\tif (false === \\strpos($sStyles, $sBack))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sStyles .= empty($sStyles) ? '': '; ';\r\n\t\t\t\t\t\t$sStyles .= $sBack;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$oElement->setAttribute('style', $sStyles);\r\n\t\t\t\t\t$aFoundCids[] = $sCid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tforeach (array(\r\n\t\t\t\t'data-x-additional-src', 'data-x-additional-style-url', 'data-removed-attrs',\r\n\t\t\t\t'data-original', 'data-x-div-type', 'data-wrp', 'data-bind'\r\n\t\t\t) as $sName)\r\n\t\t\t{\r\n\t\t\t\tif ($oElement->hasAttribute($sName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oElement->removeAttribute($sName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oElement->hasAttribute('data-x-style-url'))\r\n\t\t\t{\r\n\t\t\t\t$sAddStyles = $oElement->getAttribute('data-x-style-url');\r\n\t\t\t\t$oElement->removeAttribute('data-x-style-url');\r\n\r\n\t\t\t\tif (!empty($sAddStyles))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sStyles = '';\r\n\t\t\t\t\tif ($oElement->hasAttribute('style'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sStyles = \\trim(\\trim($oElement->getAttribute('style')), ';');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$oElement->setAttribute('style', (empty($sStyles) ? '' : $sStyles.'; ').$sAddStyles);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ('img' === $sTagNameLower && \\is_array($mFoundDataURL))\r\n\t\t\t{\r\n\t\t\t\t$sSrc = $oElement->getAttribute('src');\r\n\t\t\t\tif ('data:image/' === \\strtolower(\\substr($sSrc, 0, 11)))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sHash = \\md5($sSrc);\r\n\t\t\t\t\t$mFoundDataURL[$sHash] = $sSrc;\r\n\r\n\t\t\t\t\t$oElement->setAttribute('src', 'cid:'.$sHash);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$sResult = \\MailSo\\Base\\HtmlUtils::GetTextFromDom($oDom, false);\r\n\t\tunset($oDom);\r\n\r\n\t\treturn '<!DOCTYPE html><html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /></head>'.\r\n\t\t\t'<body>'.$sResult.'</body></html>';\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sText\r\n\t * @param bool $bLinksWithTargetBlank = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ConvertPlainToHtml($sText, $bLinksWithTargetBlank = true)\r\n\t{\r\n\t\t$sText = \\trim($sText);\r\n\t\tif (0 === \\strlen($sText))\r\n\t\t{\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\t$sText = \\MailSo\\Base\\LinkFinder::NewInstance()\r\n\t\t\t->Text($sText)\r\n\t\t\t->UseDefaultWrappers($bLinksWithTargetBlank)\r\n\t\t\t->CompileText()\r\n\t\t;\r\n\r\n\t\t$sText = \\str_replace(\"\\r\", '', $sText);\r\n\r\n\t\t$aText = \\explode(\"\\n\", $sText);\r\n\t\tunset($sText);\r\n\r\n\t\t$bIn = false;\r\n\t\t$bDo = true;\r\n\t\tdo\r\n\t\t{\r\n\t\t\t$bDo = false;\r\n\t\t\t$aNextText = array();\r\n\t\t\tforeach ($aText as $sTextLine)\r\n\t\t\t{\r\n\t\t\t\t$bStart = 0 === \\strpos(\\ltrim($sTextLine), '&gt;');\r\n\t\t\t\tif ($bStart && !$bIn)\r\n\t\t\t\t{\r\n\t\t\t\t\t$bDo = true;\r\n\t\t\t\t\t$bIn = true;\r\n\t\t\t\t\t$aNextText[] = '<blockquote>';\r\n\t\t\t\t\t$aNextText[] = \\substr(\\ltrim($sTextLine), 4);\r\n\t\t\t\t}\r\n\t\t\t\telse if (!$bStart && $bIn)\r\n\t\t\t\t{\r\n\t\t\t\t\t$bIn = false;\r\n\t\t\t\t\t$aNextText[] = '</blockquote>';\r\n\t\t\t\t\t$aNextText[] = $sTextLine;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($bStart && $bIn)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aNextText[] = \\substr(\\ltrim($sTextLine), 4);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$aNextText[] = $sTextLine;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($bIn)\r\n\t\t\t{\r\n\t\t\t\t$bIn = false;\r\n\t\t\t\t$aNextText[] = '</blockquote>';\r\n\t\t\t}\r\n\r\n\t\t\t$aText = $aNextText;\r\n\t\t}\r\n\t\twhile ($bDo);\r\n\r\n\t\t$sText = \\join(\"\\n\", $aText);\r\n\t\tunset($aText);\r\n\r\n\t\t$sText = \\preg_replace('/[\\n][ ]+/', \"\\n\", $sText);\r\n//\t\t$sText = \\preg_replace('/[\\s]+([\\s])/', '\\\\1', $sText);\r\n\r\n\t\t$sText = \\preg_replace('/<blockquote>[\\s]+/i', '<blockquote>', $sText);\r\n\t\t$sText = \\preg_replace('/[\\s]+<\\/blockquote>/i', '</blockquote>', $sText);\r\n\r\n\t\t$sText = \\preg_replace('/<\\/blockquote>([\\n]{0,2})<blockquote>/i', '\\\\1', $sText);\r\n\t\t$sText = \\preg_replace('/[\\n]{3,}/', \"\\n\\n\", $sText);\r\n\r\n\t\t$sText = \\strtr($sText, array(\r\n\t\t\t\"\\n\" => \"<br />\",\r\n\t\t\t\"\\t\" => '&nbsp;&nbsp;&nbsp;',\r\n\t\t\t'  ' => '&nbsp;&nbsp;'\r\n\t\t));\r\n\r\n\t\treturn $sText;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sText\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic static function ConvertHtmlToPlain($sText)\r\n\t{\r\n\t\t$sText = \\trim(\\stripslashes($sText));\r\n\t\t$sText = \\MailSo\\Base\\Utils::StripSpaces($sText);\r\n\r\n\t\t$sText = \\preg_replace(array(\r\n\t\t\t\"/\\r/\",\r\n\t\t\t\"/[\\n\\t]+/\",\r\n\t\t\t'/<script[^>]*>.*?<\\/script>/i',\r\n\t\t\t'/<style[^>]*>.*?<\\/style>/i',\r\n\t\t\t'/<title[^>]*>.*?<\\/title>/i',\r\n\t\t\t'/<h[123][^>]*>(.+?)<\\/h[123]>/i',\r\n\t\t\t'/<h[456][^>]*>(.+?)<\\/h[456]>/i',\r\n\t\t\t'/<p[^>]*>/i',\r\n\t\t\t'/<br[^>]*>/i',\r\n\t\t\t'/<b[^>]*>(.+?)<\\/b>/i',\r\n\t\t\t'/<i[^>]*>(.+?)<\\/i>/i',\r\n\t\t\t'/(<ul[^>]*>|<\\/ul>)/i',\r\n\t\t\t'/(<ol[^>]*>|<\\/ol>)/i',\r\n\t\t\t'/<li[^>]*>/i',\r\n\t\t\t'/<a[^>]*href=\"([^\"]+)\"[^>]*>(.+?)<\\/a>/i',\r\n\t\t\t'/<hr[^>]*>/i',\r\n\t\t\t'/(<table[^>]*>|<\\/table>)/i',\r\n\t\t\t'/(<tr[^>]*>|<\\/tr>)/i',\r\n\t\t\t'/<td[^>]*>(.+?)<\\/td>/i',\r\n\t\t\t'/<th[^>]*>(.+?)<\\/th>/i',\r\n\t\t\t'/&nbsp;/i',\r\n\t\t\t'/&quot;/i',\r\n\t\t\t'/&amp;/i',\r\n\t\t\t'/&copy;/i',\r\n\t\t\t'/&trade;/i',\r\n\t\t\t'/&#8220;/',\r\n\t\t\t'/&#8221;/',\r\n\t\t\t'/&#8211;/',\r\n\t\t\t'/&#8217;/',\r\n\t\t\t'/&#38;/',\r\n\t\t\t'/&#169;/',\r\n\t\t\t'/&#8482;/',\r\n\t\t\t'/&#151;/',\r\n\t\t\t'/&#147;/',\r\n\t\t\t'/&#148;/',\r\n\t\t\t'/&#149;/',\r\n\t\t\t'/&reg;/i',\r\n\t\t\t'/&bull;/i',\r\n\t\t\t'/&[&;]+;/i',\r\n\t\t\t'/&#39;/',\r\n\t\t\t'/&#160;/'\r\n\t\t), array(\r\n\t\t\t'',\r\n\t\t\t' ',\r\n\t\t\t'',\r\n\t\t\t'',\r\n\t\t\t'',\r\n\t\t\t\"\\n\\n\\\\1\\n\\n\",\r\n\t\t\t\"\\n\\n\\\\1\\n\\n\",\r\n\t\t\t\"\\n\\n\\t\",\r\n\t\t\t\"\\n\",\r\n\t\t\t'\\\\1',\r\n\t\t\t'\\\\1',\r\n\t\t\t\"\\n\\n\",\r\n\t\t\t\"\\n\\n\",\r\n\t\t\t\"\\n\\t* \",\r\n\t\t\t'\\\\2 (\\\\1)',\r\n\t\t\t\"\\n------------------------------------\\n\",\r\n\t\t\t\"\\n\",\r\n\t\t\t\"\\n\",\r\n\t\t\t\"\\t\\\\1\\n\",\r\n\t\t\t\"\\t\\\\1\\n\",\r\n\t\t\t' ',\r\n\t\t\t'\"',\r\n\t\t\t'&',\r\n\t\t\t'(c)',\r\n\t\t\t'(tm)',\r\n\t\t\t'\"',\r\n\t\t\t'\"',\r\n\t\t\t'-',\r\n\t\t\t\"'\",\r\n\t\t\t'&',\r\n\t\t\t'(c)',\r\n\t\t\t'(tm)',\r\n\t\t\t'--',\r\n\t\t\t'\"',\r\n\t\t\t'\"',\r\n\t\t\t'*',\r\n\t\t\t'(R)',\r\n\t\t\t'*',\r\n\t\t\t'',\r\n\t\t\t'\\'',\r\n\t\t\t''\r\n\t\t), $sText);\r\n\r\n\t\t$sText = \\str_ireplace('<div>',\"\\n<div>\", $sText);\r\n\t\t$sText = \\strip_tags($sText, '');\r\n\t\t$sText = \\preg_replace(\"/\\n\\\\s+\\n/\", \"\\n\", $sText);\r\n\t\t$sText = \\preg_replace(\"/[\\n]{3,}/\", \"\\n\\n\", $sText);\r\n\r\n\t\t$sText = \\preg_replace(array(\r\n\t\t\t'/&gt;/i',\r\n\t\t\t'/&lt;/i'\r\n\t\t), array(\r\n\t\t\t'>',\r\n\t\t\t'<'\r\n\t\t), $sText);\r\n\r\n\t\treturn \\trim($sText);\r\n\t}\r\n}\r\n", "<?php\r\n\r\nnamespace RainLoop\\Config;\r\n\r\nclass Application extends \\RainLoop\\Config\\AbstractConfig\r\n{\r\n\tprivate $aReplaceEnv = null;\r\n\r\n\t/**\r\n\t * @return void\r\n\t */\r\n\tpublic function __construct()\r\n\t{\r\n\t\tparent::__construct('application.ini',\r\n\t\t\t'; RainLoop Webmail configuration file\r\n; Please don\\'t add custom parameters here, those will be overwritten',\r\n\t\t\tdefined('APP_ADDITIONAL_CONFIGURATION_NAME') ? APP_ADDITIONAL_CONFIGURATION_NAME : '');\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sSection\r\n\t * @param string $sName\r\n\t * @param mixed $mDefault = null\r\n\t * @param bool $bUseEnvReplace = true\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tpublic function Load()\r\n\t{\r\n\t\tparent::Load();\r\n\r\n\t\t$this->aReplaceEnv = null;\r\n\t\tif ((isset($_ENV) && \\is_array($_ENV) && 0 < \\count($_ENV)) ||\r\n\t\t\t(isset($_SERVER) && \\is_array($_SERVER) && 0 < \\count($_SERVER)))\r\n\t\t{\r\n\t\t\t$sEnvNames = $this->Get('labs', 'replace_env_in_configuration', '');\r\n\t\t\tif (0 < \\strlen($sEnvNames))\r\n\t\t\t{\r\n\t\t\t\t$this->aReplaceEnv = \\explode(',', $sEnvNames);\r\n\t\t\t\tif (\\is_array($this->aReplaceEnv))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->aReplaceEnv = \\array_map('trim', $this->aReplaceEnv);\r\n\t\t\t\t\t$this->aReplaceEnv = \\array_map('strtolower', $this->aReplaceEnv);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!\\is_array($this->aReplaceEnv) || 0 === \\count($this->aReplaceEnv))\r\n\t\t{\r\n\t\t\t$this->aReplaceEnv = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sSection\r\n\t * @param string $sName\r\n\t * @param mixed $mDefault = null\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tpublic function Get($sSection, $sName, $mDefault = null)\r\n\t{\r\n\t\t$mResult = parent::Get($sSection, $sName, $mDefault);\r\n\t\tif ($this->aReplaceEnv && \\is_string($mResult))\r\n\t\t{\r\n\t\t\t$sKey = \\strtolower($sSection.'.'.$sName);\r\n\t\t\tif (\\in_array($sKey, $this->aReplaceEnv) && false !== strpos($mResult, '$'))\r\n\t\t\t{\r\n\t\t\t\t$mResult = \\preg_replace_callback('/\\$([^\\s]+)/', function($aMatch) {\r\n\r\n\t\t\t\t\tif (!empty($aMatch[0]) && !empty($aMatch[1]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (!empty($_ENV[$aMatch[1]]))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn $_SERVER[$aMatch[1]];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!empty($_SERVER[$aMatch[1]]))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn $_SERVER[$aMatch[1]];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn $aMatch[0];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn '';\r\n\r\n\t\t\t\t}, $mResult);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $mResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sPassword\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tpublic function SetPassword($sPassword)\r\n\t{\r\n\t\treturn $this->Set('security', 'admin_password', \\md5(APP_SALT.$sPassword.APP_SALT));\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sPassword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tpublic function ValidatePassword($sPassword)\r\n\t{\r\n\t\t$sPassword = (string) $sPassword;\r\n\t\t$sConfigPassword = (string) $this->Get('security', 'admin_password', '');\r\n\r\n\t\treturn 0 < \\strlen($sPassword) &&\r\n\t\t\t(($sPassword === $sConfigPassword && '12345' === $sConfigPassword) || \\md5(APP_SALT.$sPassword.APP_SALT) === $sConfigPassword);\r\n\t}\r\n\r\n\t/**\r\n\t * @return bool\r\n\t */\r\n\tpublic function Save()\r\n\t{\r\n\t\t$this->Set('version', 'current', APP_VERSION);\r\n\t\t$this->Set('version', 'saved', \\gmdate('r'));\r\n\r\n\t\treturn parent::Save();\r\n\t}\r\n\r\n\t/**\r\n\t * @return array\r\n\t */\r\n\tprotected function defaultValues()\r\n\t{\r\n\t\treturn array(\r\n\r\n\t\t\t'webmail' => array(\r\n\r\n\t\t\t\t'title'\t\t\t\t\t\t\t=> array('RainLoop Webmail', 'Text displayed as page title'),\r\n\t\t\t\t'loading_description'\t\t\t=> array('RainLoop', 'Text displayed on startup'),\r\n\t\t\t\t'favicon_url'\t\t\t\t\t=> array('', ''),\r\n\r\n\t\t\t\t'theme'\t\t\t\t\t\t\t=> array('Default', 'Theme used by default'),\r\n\t\t\t\t'allow_themes'\t\t\t\t\t=> array(true, 'Allow theme selection on settings screen'),\r\n\t\t\t\t'allow_user_background'\t\t\t=> array(false),\r\n\r\n\t\t\t\t'language'\t\t\t\t\t\t=> array('en', 'Language used by default'),\r\n\t\t\t\t'language_admin'\t\t\t\t=> array('en', 'Admin Panel interface language'),\r\n\t\t\t\t'allow_languages_on_settings'\t=> array(true, 'Allow language selection on settings screen'),\r\n\r\n\t\t\t\t'allow_additional_accounts'\t\t=> array(true, ''),\r\n\t\t\t\t'allow_additional_identities'\t=> array(true, ''),\r\n\r\n\t\t\t\t'messages_per_page'\t\t=> array(20, ' Number of messages displayed on page by default'),\r\n\r\n\t\t\t\t'attachment_size_limit'\t=> array(25,\r\n\t\t\t\t\t'File size limit (MB) for file upload on compose screen\r\n0 for unlimited.')\r\n\t\t\t),\r\n\r\n\t\t\t'interface' => array(\r\n\t\t\t\t'show_attachment_thumbnail' => array(true, ''),\r\n\t\t\t\t'use_native_scrollbars' => array(false),\r\n\t\t\t\t'new_move_to_folder_button' => array(true)\r\n\t\t\t),\r\n\r\n\t\t\t'branding' => array(\r\n\t\t\t\t'login_logo'\t\t=> array(''),\r\n\t\t\t\t'login_background'\t=> array(''),\r\n\t\t\t\t'login_desc'\t\t=> array(''),\r\n\t\t\t\t'login_css'\t\t\t=> array(''),\r\n\t\t\t\t'login_powered'\t\t=> array(true),\r\n\r\n\t\t\t\t'user_css'\t\t\t=> array(''),\r\n\t\t\t\t'user_logo'\t\t\t=> array(''),\r\n\t\t\t\t'user_logo_title'\t=> array(''),\r\n\t\t\t\t'user_logo_message'\t=> array(''),\r\n\t\t\t\t'user_iframe_message'\t=> array(''),\r\n\r\n\t\t\t\t'welcome_page_url'\t\t=> array(''),\r\n\t\t\t\t'welcome_page_display'\t=> array('none')\r\n\t\t\t),\r\n\r\n\t\t\t'contacts' => array(\r\n\t\t\t\t'enable'\t\t\t=> array(false, 'Enable contacts'),\r\n\t\t\t\t'allow_sync'\t\t=> array(false),\r\n\t\t\t\t'sync_interval'\t\t=> array(20),\r\n\t\t\t\t'type'\t\t\t\t=> array('sqlite', ''),\r\n\t\t\t\t'pdo_dsn'\t\t\t=> array('mysql:host=127.0.0.1;port=3306;dbname=rainloop', ''),\r\n\t\t\t\t'pdo_user'\t\t\t=> array('root', ''),\r\n\t\t\t\t'pdo_password'\t\t=> array('', ''),\r\n\t\t\t\t'suggestions_limit' => array(30)\r\n\t\t\t),\r\n\r\n\t\t\t'security' => array(\r\n\t\t\t\t'csrf_protection'\t=> array(true,\r\n\t\t\t\t\t'Enable CSRF protection (http://en.wikipedia.org/wiki/Cross-site_request_forgery)'),\r\n\r\n\t\t\t\t'custom_server_signature'\t=> array('RainLoop'),\r\n\t\t\t\t'x_frame_options_header'\t=> array(''),\r\n\t\t\t\t'x_xss_protection_header'\t=> array('1; mode=block'),\r\n\t\t\t\t\r\n\t\t\t\t'openpgp'\t\t\t\t\t=> array(false),\r\n\r\n\t\t\t\t'admin_login'\t\t\t\t=> array('admin', 'Login and password for web admin panel'),\r\n\t\t\t\t'admin_password'\t\t\t=> array('12345'),\r\n\t\t\t\t'allow_admin_panel'\t\t\t=> array(true, 'Access settings'),\r\n\t\t\t\t'allow_two_factor_auth'\t\t=> array(false),\r\n\t\t\t\t'force_two_factor_auth'\t\t=> array(false),\r\n\t\t\t\t'hide_x_mailer_header'\t\t=> array(false),\r\n\t\t\t\t'admin_panel_host'\t\t\t=> array(''),\r\n\t\t\t\t'admin_panel_key'\t\t\t=> array('admin'),\r\n\t\t\t\t'content_security_policy'\t=> array(''),\r\n\t\t\t\t'core_install_access_domain' => array('')\r\n\t\t\t),\r\n\r\n\t\t\t'ssl' => array(\r\n\t\t\t\t'verify_certificate'\t=> array(false, 'Require verification of SSL certificate used.'),\r\n\t\t\t\t'allow_self_signed'\t\t=> array(true, 'Allow self-signed certificates. Requires verify_certificate.'),\r\n\t\t\t\t'cafile'\t\t\t=> array('', 'Location of Certificate Authority file on local filesystem (/etc/ssl/certs/ca-certificates.crt)'),\r\n\t\t\t\t'capath'\t\t\t=> array('', 'capath must be a correctly hashed certificate directory. (/etc/ssl/certs/)'),\r\n\t\t\t\t'client_cert'\t\t\t=> array('', 'Location of client certificate file (pem format with private key) on local filesystem'),\r\n\t\t\t),\r\n\r\n\t\t\t'capa' => array(\r\n\t\t\t\t'folders' => array(true),\r\n\t\t\t\t'composer' => array(true),\r\n\t\t\t\t'contacts' => array(true),\r\n\t\t\t\t'settings' => array(true),\r\n\t\t\t\t'quota' => array(true),\r\n\t\t\t\t'help' => array(true),\r\n\t\t\t\t'reload' => array(true),\r\n\t\t\t\t'search' => array(true),\r\n\t\t\t\t'search_adv' => array(true),\r\n\t\t\t\t'filters' => array(true),\r\n\t\t\t\t'x-templates' => array(false),\r\n\t\t\t\t'dangerous_actions' => array(true),\r\n\t\t\t\t'message_actions' => array(true),\r\n\t\t\t\t'messagelist_actions' => array(true),\r\n\t\t\t\t'attachments_actions' => array(true)\r\n\t\t\t),\r\n\r\n\t\t\t'login' => array(\r\n\r\n\t\t\t\t'default_domain' => array('', ''),\r\n\r\n\t\t\t\t'allow_languages_on_login' => array(true,\r\n\t\t\t\t\t'Allow language selection on webmail login screen'),\r\n\r\n\t\t\t\t'determine_user_language' => array(true, ''),\r\n\t\t\t\t'determine_user_domain' => array(false, ''),\r\n\r\n\t\t\t\t'welcome_page' => array(false, ''),\r\n\r\n\t\t\t\t'hide_submit_button' => array(true),\r\n\r\n\t\t\t\t'forgot_password_link_url' => array('', ''),\r\n\t\t\t\t'registration_link_url' => array('', ''),\r\n\r\n\t\t\t\t'login_lowercase' => array(true, ''),\r\n\r\n\t\t\t\t'sign_me_auto'\t=> array(\\RainLoop\\Enumerations\\SignMeType::DEFAILT_OFF,\r\n\t\t\t\t\t'This option allows webmail to remember the logged in user\r\nonce they closed the browser window.\r\n\r\nValues:\r\n  \"DefaultOff\" - can be used, disabled by default;\r\n  \"DefaultOn\"  - can be used, enabled by default;\r\n  \"Unused\"     - cannot be used')\r\n\t\t\t),\r\n\r\n\t\t\t'plugins' => array(\r\n\t\t\t\t'enable'\t\t=> array(false, 'Enable plugin support'),\r\n\t\t\t\t'enabled_list'\t=> array('', 'List of enabled plugins'),\r\n\t\t\t),\r\n\r\n\t\t\t'defaults' => array(\r\n\t\t\t\t'view_editor_type'\t\t=> array('Html', 'Editor mode used by default (Plain, Html, HtmlForced or PlainForced)'),\r\n\t\t\t\t'view_layout'\t\t\t=> array(1, 'layout: 0 - no preview, 1 - side preview, 2 - bottom preview'),\r\n\t\t\t\t'view_use_checkboxes'\t=> array(true),\r\n\t\t\t\t'autologout'\t\t\t=> array(30),\r\n\t\t\t\t'show_images'\t\t\t=> array(false),\r\n\t\t\t\t'contacts_autosave'\t\t=> array(true),\r\n\t\t\t\t'mail_use_threads'\t\t=> array(false),\r\n\t\t\t\t'allow_draft_autosave'\t=> array(true),\r\n\t\t\t\t'mail_reply_same_folder' => array(false)\r\n\t\t\t),\r\n\r\n\t\t\t'logs' => array(\r\n\r\n\t\t\t\t'enable' => array(false, 'Enable logging'),\r\n\r\n\t\t\t\t'write_on_error_only' => array(false, 'Logs entire request only if error occured (php requred)'),\r\n\t\t\t\t'write_on_php_error_only' => array(false, 'Logs entire request only if php error occured'),\r\n\t\t\t\t'write_on_timeout_only' => array(0, 'Logs entire request only if request timeout (in seconds) occured.'),\r\n\r\n\t\t\t\t'hide_passwords' => array(true, 'Required for development purposes only.\r\nDisabling this option is not recommended.'),\r\n\r\n\t\t\t\t'time_offset' => array('0'),\r\n\t\t\t\t'session_filter' => array(''),\r\n\r\n\t\t\t\t'sentry_dsn' => array(''),\r\n\r\n\t\t\t\t'filename' => array('log-{date:Y-m-d}.txt',\r\n\t\t\t\t\t'Log filename.\r\nFor security reasons, some characters are removed from filename.\r\nAllows for pattern-based folder creation (see examples below).\r\n\r\nPatterns:\r\n  {date:Y-m-d}  - Replaced by pattern-based date\r\n                  Detailed info: http://www.php.net/manual/en/function.date.php\r\n  {user:email}  - Replaced by user\\'s email address\r\n                  If user is not logged in, value is set to \"unknown\"\r\n  {user:login}  - Replaced by user\\'s login (the user part of an email)\r\n                  If user is not logged in, value is set to \"unknown\"\r\n  {user:domain} - Replaced by user\\'s domain name (the domain part of an email)\r\n                  If user is not logged in, value is set to \"unknown\"\r\n  {user:uid}    - Replaced by user\\'s UID regardless of account currently used\r\n\r\n  {user:ip}\r\n  {request:ip}  - Replaced by user\\'s IP address\r\n\r\nOthers:\r\n  {imap:login} {imap:host} {imap:port}\r\n  {smtp:login} {smtp:host} {smtp:port}\r\n\r\nExamples:\r\n  filename = \"log-{date:Y-m-d}.txt\"\r\n  filename = \"{date:Y-m-d}/{user:domain}/{user:email}_{user:uid}.log\"\r\n  filename = \"{user:email}-{date:Y-m-d}.txt\"'),\r\n\r\n\t\t\t\t'auth_logging' => array(false, 'Enable auth logging in a separate file (for fail2ban)'),\r\n\t\t\t\t'auth_logging_filename' => array('fail2ban/auth-{date:Y-m-d}.txt'),\r\n\t\t\t\t'auth_logging_format' => array('[{date:Y-m-d H:i:s}] Auth failed: ip={request:ip} user={imap:login} host={imap:host} port={imap:port}')\r\n\t\t\t),\r\n\r\n\t\t\t'debug' => array(\r\n\t\t\t\t'enable'\t=> array(false, 'Special option required for development purposes')\r\n\t\t\t),\r\n\r\n\t\t\t'social' => array(\r\n\t\t\t\t'google_enable' => array(false, 'Google'),\r\n\t\t\t\t'google_enable_auth' => array(false),\r\n\t\t\t\t'google_enable_auth_fast' => array(false),\r\n\t\t\t\t'google_enable_drive' => array(false),\r\n\t\t\t\t'google_enable_preview' => array(false),\r\n\t\t\t\t'google_client_id' => array(''),\r\n\t\t\t\t'google_client_secret' => array(''),\r\n\t\t\t\t'google_api_key' => array(''),\r\n\r\n\t\t\t\t'fb_enable' => array(false, 'Facebook'),\r\n\t\t\t\t'fb_app_id' => array(''),\r\n\t\t\t\t'fb_app_secret' => array(''),\r\n\r\n\t\t\t\t'twitter_enable' => array(false, 'Twitter'),\r\n\t\t\t\t'twitter_consumer_key' => array(''),\r\n\t\t\t\t'twitter_consumer_secret' => array(''),\r\n\r\n\t\t\t\t'dropbox_enable' => array(false, 'Dropbox'),\r\n\t\t\t\t'dropbox_api_key' => array('')\r\n\t\t\t),\r\n\r\n\t\t\t'cache' => array(\r\n\t\t\t\t'enable' => array(true,\r\n\t\t\t\t\t'The section controls caching of the entire application.\r\n\r\nEnables caching in the system'),\r\n\r\n\t\t\t\t'index' => array('v1', 'Additional caching key. If changed, cache is purged'),\r\n\r\n\t\t\t\t'fast_cache_driver' => array('files', 'Can be: files, APC, memcache, redis (beta)'),\r\n\t\t\t\t'fast_cache_index' => array('v1', 'Additional caching key. If changed, fast cache is purged'),\r\n\r\n\t\t\t\t'http' => array(true, 'Browser-level cache. If enabled, caching is maintainted without using files'),\r\n\t\t\t\t'http_expires' => array(3600, 'Browser-level cache time (seconds, Expires header)'),\r\n\r\n\t\t\t\t'server_uids' => array(true, 'Caching message UIDs when searching and sorting (threading)')\r\n\t\t\t),\r\n\r\n\t\t\t'labs' => array(\r\n\t\t\t\t'allow_mobile_version' => array(true,\r\n\t\t\t\t\t'Experimental settings. Handle with care.\r\n'),\r\n\t\t\t\t'ignore_folders_subscription' => array(false),\r\n\t\t\t\t'check_new_password_strength' => array(true),\r\n\t\t\t\t'update_channel' => array('stable'),\r\n\t\t\t\t'allow_gravatar' => array(true),\r\n\t\t\t\t'allow_prefetch' => array(true),\r\n\t\t\t\t'allow_smart_html_links' => array(true),\r\n\t\t\t\t'cache_system_data' => array(true),\r\n\t\t\t\t'date_from_headers' => array(true),\r\n\t\t\t\t'autocreate_system_folders' => array(true),\r\n\t\t\t\t'allow_message_append' => array(false),\r\n\t\t\t\t'disable_iconv_if_mbstring_supported' => array(false),\r\n\t\t\t\t'login_fault_delay' => array(1),\r\n\t\t\t\t'log_ajax_response_write_limit' => array(300),\r\n\t\t\t\t'allow_html_editor_source_button' => array(false),\r\n\t\t\t\t'allow_html_editor_biti_buttons' => array(false),\r\n\t\t\t\t'allow_ctrl_enter_on_compose' => array(true),\r\n\t\t\t\t'try_to_detect_hidden_images' => array(false),\r\n\t\t\t\t'hide_dangerous_actions' => array(false),\r\n\t\t\t\t'use_app_debug_js' => array(false),\r\n\t\t\t\t'use_mobile_version_for_tablets' => array(false),\r\n\t\t\t\t'use_app_debug_css' => array(false),\r\n\t\t\t\t'use_imap_sort' => array(true),\r\n\t\t\t\t'use_imap_force_selection' => array(false),\r\n\t\t\t\t'use_imap_list_subscribe' => array(true),\r\n\t\t\t\t'use_imap_thread' => array(true),\r\n\t\t\t\t'use_imap_move' => array(false),\r\n\t\t\t\t'use_imap_expunge_all_on_delete' => array(false),\r\n\t\t\t\t'imap_forwarded_flag' => array('$Forwarded'),\r\n\t\t\t\t'imap_read_receipt_flag' => array('$ReadReceipt'),\r\n\t\t\t\t'imap_body_text_limit' => array(555000),\r\n\t\t\t\t'imap_message_list_fast_simple_search' => array(true),\r\n\t\t\t\t'imap_message_list_count_limit_trigger' => array(0),\r\n\t\t\t\t'imap_message_list_date_filter' => array(0),\r\n\t\t\t\t'imap_message_list_permanent_filter' => array(''),\r\n\t\t\t\t'imap_message_all_headers' => array(false),\r\n\t\t\t\t'imap_large_thread_limit' => array(50),\r\n\t\t\t\t'imap_folder_list_limit' => array(200),\r\n\t\t\t\t'imap_show_login_alert' => array(true),\r\n\t\t\t\t'imap_use_auth_plain' => array(true),\r\n\t\t\t\t'imap_use_auth_cram_md5' => array(false),\r\n\t\t\t\t'smtp_show_server_errors' => array(false),\r\n\t\t\t\t'smtp_use_auth_plain' => array(true),\r\n\t\t\t\t'smtp_use_auth_cram_md5' => array(false),\r\n\t\t\t\t'sieve_allow_raw_script' => array(false),\r\n\t\t\t\t'sieve_utf8_folder_name' => array(true),\r\n\t\t\t\t'sieve_auth_plain_initial' => array(true),\r\n\t\t\t\t'sieve_allow_fileinto_inbox' => array(false),\r\n\t\t\t\t'imap_timeout' => array(300),\r\n\t\t\t\t'smtp_timeout' => array(60),\r\n\t\t\t\t'sieve_timeout' => array(10),\r\n\t\t\t\t'domain_list_limit' => array(99),\r\n\t\t\t\t'mail_func_clear_headers' => array(true),\r\n\t\t\t\t'mail_func_additional_parameters' => array(false),\r\n\t\t\t\t'favicon_status' => array(true),\r\n\t\t\t\t'folders_spec_limit' => array(50),\r\n\t\t\t\t'owncloud_save_folder' => array('Attachments'),\r\n\t\t\t\t'owncloud_suggestions' => array(true),\r\n\t\t\t\t'curl_proxy' => array(''),\r\n\t\t\t\t'curl_proxy_auth' => array(''),\r\n\t\t\t\t'in_iframe' => array(false),\r\n\t\t\t\t'force_https' => array(false),\r\n\t\t\t\t'custom_login_link' => array(''),\r\n\t\t\t\t'custom_logout_link' => array(''),\r\n\t\t\t\t'allow_external_login' => array(false),\r\n\t\t\t\t'allow_external_sso' => array(false),\r\n\t\t\t\t'external_sso_key' => array(''),\r\n\t\t\t\t'http_client_ip_check_proxy' => array(false),\r\n\t\t\t\t'fast_cache_memcache_host' => array('127.0.0.1'),\r\n\t\t\t\t'fast_cache_memcache_port' => array(11211),\r\n\t\t\t\t'fast_cache_redis_host' => array('127.0.0.1'),\r\n\t\t\t\t'fast_cache_redis_port' => array(6379),\r\n\t\t\t\t'use_local_proxy_for_external_images' => array(false),\r\n\t\t\t\t'detect_image_exif_orientation' => array(true),\r\n\t\t\t\t'cookie_default_path' => array(''),\r\n\t\t\t\t'cookie_default_secure' => array(false),\r\n\t\t\t\t'check_new_messages' => array(true),\r\n\t\t\t\t'replace_env_in_configuration' => array(''),\r\n\t\t\t\t'startup_url' => array(''),\r\n\t\t\t\t'strict_html_parser' => array(false),\r\n\t\t\t\t'allow_cmd' => array(false),\r\n\t\t\t\t'dev_email' => array(''),\r\n\t\t\t\t'dev_password' => array('')\r\n\t\t\t),\r\n\r\n\t\t\t'version' => array(\r\n\t\t\t\t'current' => array(''),\r\n\t\t\t\t'saved' => array('')\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n", "<?php\r\n\r\nnamespace RainLoop;\r\n\r\nclass Service\r\n{\r\n\t/**\r\n\t * @var \\MailSo\\Base\\Http\r\n\t */\r\n\tprivate $oHttp;\r\n\r\n\t/**\r\n\t * @var \\RainLoop\\Actions\r\n\t */\r\n\tprivate $oActions;\r\n\r\n\t/**\r\n\t * @var \\RainLoop\\ServiceActions\r\n\t */\r\n\tprivate $oServiceActions;\r\n\r\n\t/**\r\n\t * @return void\r\n\t */\r\n\tprivate function __construct()\r\n\t{\r\n\t\t$this->oHttp = \\MailSo\\Base\\Http::SingletonInstance();\r\n\t\t$this->oActions = \\RainLoop\\Api::Actions();\r\n\r\n\t\t$this->oServiceActions = new \\RainLoop\\ServiceActions($this->oHttp, $this->oActions);\r\n\r\n\t\tif ($this->oActions->Config()->Get('debug', 'enable', false))\r\n\t\t{\r\n\t\t\t\\error_reporting(E_ALL);\r\n\t\t\t\\ini_set('display_errors', 1);\r\n\t\t}\r\n\r\n\t\t$sServer = \\trim($this->oActions->Config()->Get('security', 'custom_server_signature', ''));\r\n\t\tif (0 < \\strlen($sServer))\r\n\t\t{\r\n\t\t\t@\\header('Server: '.$sServer, true);\r\n\t\t}\r\n\r\n\t\t$sXFrameOptionsHeader = \\trim($this->oActions->Config()->Get('security', 'x_frame_options_header', ''));\r\n\t\tif (0 < \\strlen($sXFrameOptionsHeader))\r\n\t\t{\r\n\t\t\t@\\header('X-Frame-Options: '.$sXFrameOptionsHeader, true);\r\n\t\t}\r\n\r\n\t\t$sXssProtectionOptionsHeader = \\trim($this->oActions->Config()->Get('security', 'x_xss_protection_header', ''));\r\n\t\tif (0 < \\strlen($sXssProtectionOptionsHeader))\r\n\t\t{\r\n\t\t\t@\\header('X-XSS-Protection: '.$sXssProtectionOptionsHeader, true);\r\n\t\t}\r\n\r\n\t\tif ($this->oActions->Config()->Get('labs', 'force_https', false) && !$this->oHttp->IsSecure())\r\n\t\t{\r\n\t\t\t@\\header('Location: https://'.$this->oHttp->GetHost(false, false).$this->oHttp->GetUrl(), true);\r\n\t\t\texit(0);\r\n\t\t}\r\n\r\n\t\t$this->localHandle();\r\n\t}\r\n\r\n\t/**\r\n\t * @return bool\r\n\t */\r\n\tpublic function RunResult()\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @staticvar bool $bOne\r\n\t * @return bool\r\n\t */\r\n\tpublic static function Handle()\r\n\t{\r\n\t\tstatic $bOne = null;\r\n\t\tif (null === $bOne)\r\n\t\t{\r\n\t\t\t$oService = null;\r\n\t\t\tif (\\class_exists('MailSo\\Version'))\r\n\t\t\t{\r\n\t\t\t\t$oService = new self();\r\n\t\t\t}\r\n\r\n\t\t\t$bOne = $oService->RunResult();\r\n\t\t}\r\n\r\n\t\treturn $bOne;\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Service\r\n\t */\r\n\tprivate function localHandle()\r\n\t{\r\n\t\tif (!\\class_exists('MailSo\\Version'))\r\n\t\t{\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\t$this->oActions->BootStart();\r\n\r\n\t\t$sResult = '';\r\n\t\t$bCached = false;\r\n\r\n\t\t$sQuery = $this->oActions->ParseQueryAuthString();\r\n\r\n\t\t$this->oActions->Plugins()->RunHook('filter.http-query', array(&$sQuery));\r\n\t\t$aPaths = \\explode('/', $sQuery);\r\n\t\t$this->oActions->Plugins()->RunHook('filter.http-paths', array(&$aPaths));\r\n\r\n\t\t$bAdmin = false;\r\n\t\t$sAdminPanelHost = $this->oActions->Config()->Get('security', 'admin_panel_host', '');\r\n\t\tif (empty($sAdminPanelHost))\r\n\t\t{\r\n\t\t\t$sAdminPanelKey = \\strtolower($this->oActions->Config()->Get('security', 'admin_panel_key', 'admin'));\r\n\t\t\t$bAdmin = !empty($aPaths[0]) && \\strtolower($aPaths[0]) === $sAdminPanelKey;\r\n\t\t}\r\n\t\telse if (empty($aPaths[0]) &&\r\n\t\t\t\\MailSo\\Base\\Utils::StrToLowerIfAscii($sAdminPanelHost) === \\MailSo\\Base\\Utils::StrToLowerIfAscii($this->oHttp->GetHost()))\r\n\t\t{\r\n\t\t\t$bAdmin = true;\r\n\t\t}\r\n\r\n\t\tif ($this->oHttp->IsPost())\r\n\t\t{\r\n\t\t\t$this->oHttp->ServerNoCache();\r\n\t\t}\r\n\r\n\t\tif ($bAdmin && !$this->oActions->Config()->Get('security', 'allow_admin_panel', true))\r\n\t\t{\r\n\t\t\techo $this->oServiceActions->ErrorTemplates('Access Denied.',\r\n\t\t\t\t'Access to the RainLoop Webmail Admin Panel is not allowed!', true);\r\n\r\n\t\t\treturn $this;\r\n\t\t}\r\n\r\n\t\t$bIndex = true;\r\n\t\tif (0 < \\count($aPaths) && !empty($aPaths[0]) && !$bAdmin && 'index' !== \\strtolower($aPaths[0]))\r\n\t\t{\r\n\t\t\t$bIndex = false;\r\n\t\t\t$sMethodName = 'Service'.\\preg_replace('/@.+$/', '', $aPaths[0]);\r\n\t\t\t$sMethodExtra = 0 < \\strpos($aPaths[0], '@') ? \\preg_replace('/^[^@]+@/', '', $aPaths[0]) : '';\r\n\r\n\t\t\tif (\\method_exists($this->oServiceActions, $sMethodName) &&\r\n\t\t\t\t\\is_callable(array($this->oServiceActions, $sMethodName)))\r\n\t\t\t{\r\n\t\t\t\t$this->oServiceActions->SetQuery($sQuery)->SetPaths($aPaths);\r\n\t\t\t\t$sResult = \\call_user_func(array($this->oServiceActions, $sMethodName), $sMethodExtra);\r\n\t\t\t}\r\n\t\t\telse if (!$this->oActions->Plugins()->RunAdditionalPart($aPaths[0], $aPaths))\r\n\t\t\t{\r\n\t\t\t\t$bIndex = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$bMobile = false;\r\n\t\t$bMobileDevice = false;\r\n\r\n\t\tif ($this->oActions->Config()->Get('labs', 'allow_mobile_version', false))\r\n\t\t{\r\n\t\t\t$bUseMobileVersionForTablets = $this->oActions->Config()->Get('labs', 'use_mobile_version_for_tablets', false);\r\n\r\n\t\t\t$oMobileDetect = new \\Detection\\MobileDetect();\r\n\t\t\t$bMobileDevice = $oMobileDetect->isMobile() &&\r\n\t\t\t\t($bUseMobileVersionForTablets ? true : !$oMobileDetect->isTablet());\r\n\r\n\t\t\tif ($bIndex)\r\n\t\t\t{\r\n\t\t\t\t$sMobileType = (string) \\RainLoop\\Utils::GetCookie(\\RainLoop\\Actions::RL_MOBILE_TYPE, '');\r\n\t\t\t\tswitch ($sMobileType) {\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t$sMobileType = '';\r\n\t\t\t\t\t\t$bMobile = $bMobileDevice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mobile':\r\n\t\t\t\t\t\t$bMobile = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'desktop':\r\n\t\t\t\t\t\t$bMobile = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bIndex)\r\n\t\t{\r\n\t\t\t@\\header('Content-Security-Policy:');\r\n\t\t\t@\\header_remove('Content-Security-Policy');\r\n\r\n\t\t\t@header('Content-Type: text/html; charset=utf-8');\r\n\t\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t\tif (!@\\is_dir(APP_DATA_FOLDER_PATH) || !@\\is_writable(APP_DATA_FOLDER_PATH))\r\n\t\t\t{\r\n\t\t\t\techo $this->oServiceActions->ErrorTemplates(\r\n\t\t\t\t\t'Permission denied!',\r\n\t\t\t\t\t'RainLoop Webmail cannot access to the data folder \"'.APP_DATA_FOLDER_PATH.'\"'\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn $this;\r\n\t\t\t}\r\n\r\n\t\t\t$aTemplateParameters = $this->indexTemplateParameters($bAdmin, $bMobile, $bMobileDevice);\r\n\r\n\t\t\t$sCacheFileName = '';\r\n\t\t\tif ($this->oActions->Config()->Get('labs', 'cache_system_data', true) && !empty($aTemplateParameters['{{BaseHash}}']))\r\n\t\t\t{\r\n\t\t\t\t$sCacheFileName = 'TMPL:'.$aTemplateParameters['{{BaseHash}}'];\r\n\t\t\t\t$sResult = $this->oActions->Cacher()->Get($sCacheFileName);\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sResult))\r\n\t\t\t{\r\n//\t\t\t\t$aTemplateParameters['{{BaseTemplates}}'] = $this->oServiceActions->compileTemplates($bAdmin, false);\r\n\t\t\t\t$sResult = \\strtr(\\file_get_contents(APP_VERSION_ROOT_PATH.'app/templates/Index.html'), $aTemplateParameters);\r\n\r\n\t\t\t\t$sResult = \\RainLoop\\Utils::ClearHtmlOutput($sResult);\r\n\t\t\t\tif (0 < \\strlen($sCacheFileName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->oActions->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$bCached = true;\r\n\t\t\t}\r\n\r\n\t\t\t$sResult .= '<!--';\r\n\t\t\t$sResult .= '[time:'.\\substr(\\microtime(true) - APP_START, 0, 6);\r\n\r\n//\t\t\t$sResult .= '][version:'.APP_VERSION;\r\n\t\t\tif ($this->oActions->IsOpen())\r\n\t\t\t{\r\n\t\t\t\t$sResult .= '][AGPLv3';\r\n\t\t\t}\r\n\r\n\t\t\t$sResult .= '][cached:'.($bCached ? 'true' : 'false');\r\n//\t\t\t$sResult .= '][hash:'.$aTemplateParameters['{{BaseHash}}'];\r\n//\t\t\t$sResult .= '][session:'.\\md5(\\RainLoop\\Utils::GetShortToken());\r\n\r\n\t\t\tif ($bMobile)\r\n\t\t\t{\r\n\t\t\t\t$sResult .= '][mobile:true';\r\n\t\t\t}\r\n\r\n\t\t\tif (\\RainLoop\\Utils::IsOwnCloud())\r\n\t\t\t{\r\n\t\t\t\t$sResult .= '][cloud:true';\r\n\t\t\t}\r\n\r\n\t\t\t$sResult .= ']-->';\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t@\\header('X-XSS-Protection: 1; mode=block');\r\n\t\t}\r\n\r\n\t\t// Output result\r\n\t\techo $sResult;\r\n\t\tunset($sResult);\r\n\r\n\t\t$this->oActions->BootEnd();\r\n\t\treturn $this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sPath\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function staticPath($sPath)\r\n\t{\r\n\t\treturn $this->oActions->StaticPath($sPath);\r\n\t}\r\n\r\n\t/**\r\n\t * @param bool $bAdmin = false\r\n\t * @param bool $bMobile = false\r\n\t * @param bool $bMobileDevice = false\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tprivate function indexTemplateParameters($bAdmin = false, $bMobile = false, $bMobileDevice = false)\r\n\t{\r\n\t\t$sLanguage = 'en';\r\n\t\t$sTheme = 'Default';\r\n\r\n\t\tlist($sLanguage, $sTheme) = $this->oActions->GetLanguageAndTheme($bAdmin, $bMobile);\r\n\r\n\t\t$bAppJsDebug = !!$this->oActions->Config()->Get('labs', 'use_app_debug_js', false);\r\n\t\t$bAppCssDebug = !!$this->oActions->Config()->Get('labs', 'use_app_debug_css', false);\r\n\r\n\t\t$sFaviconUrl = (string) $this->oActions->Config()->Get('webmail', 'favicon_url', '');\r\n\r\n\t\t$sFaviconPngLink = $sFaviconUrl ? $sFaviconUrl : $this->staticPath('apple-touch-icon.png');\r\n\t\t$sAppleTouchLink = $sFaviconUrl ? '' : $this->staticPath('apple-touch-icon.png');\r\n\r\n\t\t$sContentSecurityPolicy = $this->oActions->Config()->Get('security', 'content_security_policy', '');\r\n\t\t$sSentryDsn = $this->oActions->Config()->Get('logs', 'sentry_dsn', '');\r\n\r\n\t\t$aTemplateParameters = array(\r\n\t\t\t'{{BaseAppHeadScriptLink}}' => $sSentryDsn ?\r\n\t\t\t\t'<script type=\"text/javascript\" data-cfasync=\"false\" src=\"https://browser.sentry-cdn.com/5.0.8/bundle.min.js\" crossorigin=\"anonymous\"></script>' : '',\r\n\t\t\t'{{BaseAppBodyScript}}' => $sSentryDsn ?\r\n\t\t\t\t'<script type=\"text/javascript\" data-cfasync=\"false\">window && window.Sentry && window.Sentry.init({dsn:\\''.$sSentryDsn.'\\',ignoreErrors:[\\'Document not active\\']});</script>' : '',\r\n\t\t\t'{{BaseAppFaviconPngLinkTag}}' => $sFaviconPngLink ? '<link type=\"image/png\" rel=\"shortcut icon\" href=\"'.$sFaviconPngLink.'\" />' : '',\r\n\t\t\t'{{BaseAppFaviconTouchLinkTag}}' => $sAppleTouchLink ? '<link type=\"image/png\" rel=\"apple-touch-icon\" href=\"'.$sAppleTouchLink.'\" />' : '',\r\n\t\t\t'{{BaseAppMainCssLink}}' => $this->staticPath('css/app'.($bAppCssDebug ? '' : '.min').'.css'),\r\n\t\t\t'{{BaseAppThemeCssLink}}' => $this->oActions->ThemeLink($sTheme, $bAdmin),\r\n\t\t\t'{{BaseAppPolyfillsScriptLink}}' => $this->staticPath('js/'.($bAppJsDebug ? '' : 'min/').'polyfills'.($bAppJsDebug ? '' : '.min').'.js'),\r\n\t\t\t'{{BaseAppBootScriptLink}}' => $this->staticPath('js/'.($bAppJsDebug ? '' : 'min/').'boot'.($bAppJsDebug ? '' : '.min').'.js'),\r\n\t\t\t'{{BaseViewport}}' => $bMobile ? 'width=device-width,initial-scale=1,user-scalable=no' : 'width=950,maximum-scale=2',\r\n\t\t\t'{{BaseContentSecurityPolicy}}' => $sContentSecurityPolicy ?\r\n\t\t\t\t'<meta http-equiv=\"Content-Security-Policy\" content=\"'.$sContentSecurityPolicy.'\" />' : '',\r\n\t\t\t'{{BaseDir}}' => false && \\in_array($sLanguage, array('ar', 'he', 'ur')) ? 'rtl' : 'ltr',\r\n\t\t\t'{{BaseAppManifestLink}}' => $this->staticPath('manifest.json')\r\n\t\t);\r\n\r\n\t\t$aTemplateParameters['{{RainloopBootData}}'] = \\json_encode(array(\r\n\t\t\t'admin' => $bAdmin,\r\n\t\t\t'language' => $sLanguage,\r\n\t\t\t'theme' => $sTheme,\r\n\t\t\t'mobile' => $bMobile,\r\n\t\t\t'mobileDevice' => $bMobileDevice\r\n\t\t));\r\n\r\n\t\t$aTemplateParameters['{{BaseHash}}'] = \\md5(\r\n\t\t\t\\implode('~', array(\r\n\t\t\t\t$bAdmin ? '1' : '0',\r\n\t\t\t\t\\md5($this->oActions->Config()->Get('cache', 'index', '')),\r\n\t\t\t\t$this->oActions->Plugins()->Hash(),\r\n\t\t\t\t\\RainLoop\\Utils::WebVersionPath(),\r\n\t\t\t\tAPP_VERSION,\r\n\t\t\t)).\r\n\t\t\t\\implode('~', $aTemplateParameters)\r\n\t\t);\r\n\r\n\t\treturn $aTemplateParameters;\r\n\t}\r\n}\r\n", "<?php\r\n\r\nnamespace RainLoop;\r\n\r\nclass ServiceActions\r\n{\r\n\t/**\r\n\t * @var \\MailSo\\Base\\Http\r\n\t */\r\n\tprotected $oHttp;\r\n\r\n\t/**\r\n\t * @var \\RainLoop\\Actions\r\n\t */\r\n\tprotected $oActions;\r\n\r\n\t/**\r\n\t * @var array\r\n\t */\r\n\tprotected $aPaths;\r\n\r\n\t/**\r\n\t * @var string\r\n\t */\r\n\tprotected $sQuery;\r\n\r\n\t/**\r\n\t * @param \\MailSo\\Base\\Http $oHttp\r\n\t * @param \\RainLoop\\Actions $oActions\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tpublic function __construct($oHttp, $oActions)\r\n\t{\r\n\t\t$this->oHttp = $oHttp;\r\n\t\t$this->oActions = $oActions;\r\n\t\t$this->aPaths = array();\r\n\t\t$this->sQuery = '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\MailSo\\Log\\Logger\r\n\t */\r\n\tpublic function Logger()\r\n\t{\r\n\t\treturn $this->oActions->Logger();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Plugins\\Manager\r\n\t */\r\n\tpublic function Plugins()\r\n\t{\r\n\t\treturn $this->oActions->Plugins();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Application\r\n\t */\r\n\tpublic function Config()\r\n\t{\r\n\t\treturn $this->oActions->Config();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\MailSo\\Cache\\CacheClient\r\n\t */\r\n\tpublic function Cacher()\r\n\t{\r\n\t\treturn $this->oActions->Cacher();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Providers\\Storage\r\n\t */\r\n\tpublic function StorageProvider()\r\n\t{\r\n\t\treturn $this->oActions->StorageProvider();\r\n\t}\r\n\r\n\t/**\r\n\t * @return \\RainLoop\\Providers\\Settings\r\n\t */\r\n\tpublic function SettingsProvider()\r\n\t{\r\n\t\treturn $this->oActions->SettingsProvider();\r\n\t}\r\n\r\n\t/**\r\n\t * @param array $aPaths\r\n\t *\r\n\t * @return \\RainLoop\\ServiceActions\r\n\t */\r\n\tpublic function SetPaths($aPaths)\r\n\t{\r\n\t\t$this->aPaths = \\is_array($aPaths) ? $aPaths : array();\r\n\t\treturn $this;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sQuery\r\n\t *\r\n\t * @return \\RainLoop\\ServiceActions\r\n\t */\r\n\tpublic function SetQuery($sQuery)\r\n\t{\r\n\t\t$this->sQuery = $sQuery;\r\n\t\treturn $this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAjax()\r\n\t{\r\n\t\t@\\ob_start();\r\n\r\n\t\t$aResponseItem = null;\r\n\t\t$oException = null;\r\n\r\n\t\t$sAction = $this->oHttp->GetPost('Action', null);\r\n\t\tif (empty($sAction) && $this->oHttp->IsGet() && !empty($this->aPaths[2]))\r\n\t\t{\r\n\t\t\t$sAction = $this->aPaths[2];\r\n\t\t}\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif ($this->oHttp->IsPost() && !in_array($sAction, array('JsInfo', 'JsError')) &&\r\n\t\t\t\t$this->Config()->Get('security', 'csrf_protection', false) &&\r\n\t\t\t\t$this->oHttp->GetPost('XToken', '') !== \\RainLoop\\Utils::GetCsrfToken())\r\n\t\t\t{\r\n\t\t\t\tthrow new \\RainLoop\\Exceptions\\ClientException(\\RainLoop\\Notifications::InvalidToken);\r\n\t\t\t}\r\n\t\t\telse if (!empty($sAction))\r\n\t\t\t{\r\n\t\t\t\t$sMethodName = 'Do'.$sAction;\r\n\r\n\t\t\t\t$this->Logger()->Write('Action: '.$sMethodName, \\MailSo\\Log\\Enumerations\\Type::NOTE, 'AJAX');\r\n\r\n\t\t\t\t$aPost = $this->oHttp->GetPostAsArray();\r\n\t\t\t\tif (\\is_array($aPost) && 0 < \\count($aPost))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->oActions->SetActionParams($aPost, $sMethodName);\r\n\t\t\t\t\tswitch ($sMethodName)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'DoLogin':\r\n\t\t\t\t\t\tcase 'DoAdminLogin':\r\n\t\t\t\t\t\tcase 'DoAccountAdd':\r\n\t\t\t\t\t\t\t$this->Logger()->AddSecret($this->oActions->GetActionParam('Password', ''));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DoChangePassword':\r\n\t\t\t\t\t\t\t$this->Logger()->AddSecret($this->oActions->GetActionParam('PrevPassword', ''));\r\n\t\t\t\t\t\t\t$this->Logger()->AddSecret($this->oActions->GetActionParam('NewPassword', ''));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$this->Logger()->Write(\\MailSo\\Base\\Utils::Php2js($aPost, $this->Logger()),\r\n\t\t\t\t\t\t\\MailSo\\Log\\Enumerations\\Type::INFO, 'POST', true);\r\n\t\t\t\t}\r\n\t\t\t\telse if (3 < \\count($this->aPaths) && $this->oHttp->IsGet())\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->oActions->SetActionParams(array(\r\n\t\t\t\t\t\t'RawKey' => empty($this->aPaths[3]) ? '' : $this->aPaths[3]\r\n\t\t\t\t\t), $sMethodName);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\\method_exists($this->oActions, $sMethodName) &&\r\n\t\t\t\t\t\\is_callable(array($this->oActions, $sMethodName)))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-pre-call', array($sAction));\r\n\t\t\t\t\t$aResponseItem = \\call_user_func(array($this->oActions, $sMethodName));\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-post-call', array($sAction, &$aResponseItem));\r\n\t\t\t\t}\r\n\t\t\t\telse if ($this->Plugins()->HasAdditionalAjax($sMethodName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-pre-call', array($sAction));\r\n\t\t\t\t\t$aResponseItem = $this->Plugins()->RunAdditionalAjax($sMethodName);\r\n\t\t\t\t\t$this->Plugins()->RunHook('ajax.action-post-call', array($sAction, &$aResponseItem));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!\\is_array($aResponseItem))\r\n\t\t\t{\r\n\t\t\t\tthrow new \\RainLoop\\Exceptions\\ClientException(\\RainLoop\\Notifications::UnknownError);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$aResponseItem = $this->oActions->ExceptionResponse(\r\n\t\t\t\tempty($sAction) ? 'Unknown' : $sAction, $oException);\r\n\r\n\t\t\tif (\\is_array($aResponseItem) && $oException instanceof \\RainLoop\\Exceptions\\ClientException)\r\n\t\t\t{\r\n\t\t\t\tif ('Folders' === $sAction)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aResponseItem['ClearAuth'] = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($oException->getLogoutOnException())\r\n\t\t\t\t{\r\n\t\t\t\t\t$aResponseItem['Logout'] = true;\r\n\t\t\t\t\tif ($oException->getAdditionalMessage())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this->oActions->SetSpecLogoutCustomMgsWithDeletion($oException->getAdditionalMessage());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\\is_array($aResponseItem))\r\n\t\t{\r\n\t\t\t$aResponseItem['Time'] = (int) ((\\microtime(true) - APP_START) * 1000);\r\n\t\t}\r\n\r\n\t\t$this->Plugins()->RunHook('filter.ajax-response', array($sAction, &$aResponseItem));\r\n\r\n\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\r\n\t\t$sResult = \\MailSo\\Base\\Utils::Php2js($aResponseItem, $this->Logger());\r\n\r\n\t\t$sObResult = @\\ob_get_clean();\r\n\r\n\t\tif ($this->Logger()->IsEnabled())\r\n\t\t{\r\n\t\t\tif (0 < \\strlen($sObResult))\r\n\t\t\t{\r\n\t\t\t\t$this->Logger()->Write($sObResult, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'OB-DATA');\r\n\t\t\t}\r\n\r\n\t\t\tif ($oException)\r\n\t\t\t{\r\n\t\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR);\r\n\t\t\t}\r\n\r\n\t\t\t$iLimit = (int) $this->Config()->Get('labs', 'log_ajax_response_write_limit', 0);\r\n\t\t\t$this->Logger()->Write(0 < $iLimit && $iLimit < \\strlen($sResult)\r\n\t\t\t\t\t? \\substr($sResult, 0, $iLimit).'...' : $sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'AJAX');\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceOwnCloudAuth()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\tif (!\\RainLoop\\Utils::IsOwnCloud() ||\r\n\t\t\t!isset($_ENV['___rainloop_owncloud_email']) ||\r\n\t\t\t!isset($_ENV['___rainloop_owncloud_password']) ||\r\n\t\t\tempty($_ENV['___rainloop_owncloud_email'])\r\n\t\t)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t\t$this->oActions->Location('./');\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\t$bLogout = true;\r\n\r\n\t\t$sEmail = $_ENV['___rainloop_owncloud_email'];\r\n\t\t$sPassword = $_ENV['___rainloop_owncloud_password'];\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\t\t\t$this->oActions->AuthToken($oAccount);\r\n\r\n\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAppend()\r\n\t{\r\n\t\t@\\ob_start();\r\n\t\t$bResponse = false;\r\n\t\t$oException = null;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif (\\method_exists($this->oActions, 'Append') &&\r\n\t\t\t\t\\is_callable(array($this->oActions, 'Append')))\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->SetActionParams($this->oHttp->GetPostAsArray(), 'Append');\r\n\t\t\t\t$bResponse = \\call_user_func(array($this->oActions, 'Append'));\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$bResponse = false;\r\n\t\t}\r\n\r\n\t\t@\\header('Content-Type: text/plain; charset=utf-8');\r\n\t\t$sResult = true === $bResponse ? '1' : '0';\r\n\r\n\t\t$sObResult = @\\ob_get_clean();\r\n\t\tif (0 < \\strlen($sObResult))\r\n\t\t{\r\n\t\t\t$this->Logger()->Write($sObResult, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'OB-DATA');\r\n\t\t}\r\n\r\n\t\tif ($oException)\r\n\t\t{\r\n\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR);\r\n\t\t}\r\n\r\n\t\t$this->Logger()->Write($sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'APPEND');\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sAction\r\n\t * @param int $iSizeLimit = 0\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function privateUpload($sAction, $iSizeLimit = 0)\r\n\t{\r\n\t\t$oConfig = $this->Config();\r\n\r\n\t\t@\\ob_start();\r\n\t\t$aResponseItem = null;\r\n\t\ttry\r\n\t\t{\r\n\t\t\t$aFile = null;\r\n\t\t\t$sInputName = 'uploader';\r\n\t\t\t$iError = \\RainLoop\\Enumerations\\UploadError::UNKNOWN;\r\n\t\t\t$iSizeLimit = (0 < $iSizeLimit ? $iSizeLimit : ((int) $oConfig->Get('webmail', 'attachment_size_limit', 0))) * 1024 * 1024;\r\n\r\n\t\t\t$iError = UPLOAD_ERR_OK;\r\n\t\t\t$_FILES = isset($_FILES) ? $_FILES : null;\r\n\t\t\tif (isset($_FILES, $_FILES[$sInputName], $_FILES[$sInputName]['name'], $_FILES[$sInputName]['tmp_name'], $_FILES[$sInputName]['size']))\r\n\t\t\t{\r\n\t\t\t\t$iError = (isset($_FILES[$sInputName]['error'])) ? (int) $_FILES[$sInputName]['error'] : UPLOAD_ERR_OK;\r\n\r\n\t\t\t\tif (UPLOAD_ERR_OK === $iError && 0 < $iSizeLimit && $iSizeLimit < (int) $_FILES[$sInputName]['size'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$iError = \\RainLoop\\Enumerations\\UploadError::CONFIG_SIZE;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (UPLOAD_ERR_OK === $iError)\r\n\t\t\t\t{\r\n\t\t\t\t\t$aFile = $_FILES[$sInputName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!isset($_FILES) || !is_array($_FILES) || 0 === count($_FILES))\r\n\t\t\t{\r\n\t\t\t\t$iError = UPLOAD_ERR_INI_SIZE;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$iError = \\RainLoop\\Enumerations\\UploadError::EMPTY_FILES_DATA;\r\n\t\t\t}\r\n\r\n\t\t\tif (\\method_exists($this->oActions, $sAction) &&\r\n\t\t\t\t\\is_callable(array($this->oActions, $sAction)))\r\n\t\t\t{\r\n\t\t\t\t$aActionParams = $this->oHttp->GetQueryAsArray();\r\n\r\n\t\t\t\t$aActionParams['File'] = $aFile;\r\n\t\t\t\t$aActionParams['Error'] = $iError;\r\n\r\n\t\t\t\t$this->oActions->SetActionParams($aActionParams, $sAction);\r\n\r\n\t\t\t\t$aResponseItem = \\call_user_func(array($this->oActions, $sAction));\r\n\t\t\t}\r\n\r\n\t\t\tif (!is_array($aResponseItem))\r\n\t\t\t{\r\n\t\t\t\tthrow new \\RainLoop\\Exceptions\\ClientException(\\RainLoop\\Notifications::UnknownError);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$aResponseItem = $this->oActions->ExceptionResponse($sAction, $oException);\r\n\t\t}\r\n\r\n\t\tif ('iframe' === $this->oHttp->GetPost('jua-post-type', ''))\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: text/html; charset=utf-8');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\t\t}\r\n\r\n\t\t$this->Plugins()->RunHook('filter.upload-response', array(&$aResponseItem));\r\n\t\t$sResult = \\MailSo\\Base\\Utils::Php2js($aResponseItem, $this->Logger());\r\n\r\n\t\t$sObResult = @\\ob_get_clean();\r\n\t\tif (0 < \\strlen($sObResult))\r\n\t\t{\r\n\t\t\t$this->Logger()->Write($sObResult, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'OB-DATA');\r\n\t\t}\r\n\r\n\t\t$this->Logger()->Write($sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'UPLOAD');\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceUpload()\r\n\t{\r\n\t\treturn $this->privateUpload('Upload');\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceUploadContacts()\r\n\t{\r\n\t\treturn $this->privateUpload('UploadContacts', 5);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceUploadBackground()\r\n\t{\r\n\t\treturn $this->privateUpload('UploadBackground', 1);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceProxyExternal()\r\n\t{\r\n\t\t$bResult = false;\r\n\t\t$sData = empty($this->aPaths[1]) ? '' : $this->aPaths[1];\r\n\t\tif (!empty($sData) && $this->oActions->Config()->Get('labs', 'use_local_proxy_for_external_images', false))\r\n\t\t{\r\n\t\t\t$this->oActions->verifyCacheByKey($sData);\r\n\r\n\t\t\t$aData = \\RainLoop\\Utils::DecodeKeyValuesQ($sData);\r\n\t\t\tif (\\is_array($aData) && !empty($aData['Token']) && !empty($aData['Url']) && $aData['Token'] === \\RainLoop\\Utils::GetConnectionToken())\r\n\t\t\t{\r\n\t\t\t\t$iCode = 404;\r\n\t\t\t\t$sContentType = '';\r\n\t\t\t\t$mResult = $this->oHttp->GetUrlAsString($aData['Url'], 'RainLoop External Proxy', $sContentType, $iCode);\r\n\r\n\t\t\t\tif (false !== $mResult && 200 === $iCode &&\r\n\t\t\t\t\t\\in_array($sContentType, array('image/png', 'image/jpeg', 'image/jpg', 'image/bmp', 'image/gif')))\r\n\t\t\t\t{\r\n\t\t\t\t\t$bResult = true;\r\n\r\n\t\t\t\t\t$this->oActions->cacheByKey($sData);\r\n\r\n\t\t\t\t\t\\header('Content-Type: '.$sContentType);\r\n\t\t\t\t\techo $mResult;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$bResult)\r\n\t\t{\r\n\t\t\t$this->oHttp->StatusHeader(404);\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceRaw()\r\n\t{\r\n\t\t$sResult = '';\r\n\t\t$sRawError = '';\r\n\t\t$sAction = empty($this->aPaths[2]) ? '' : $this->aPaths[2];\r\n\t\t$oException = null;\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\t$sRawError = 'Invalid action';\r\n\t\t\tif (0 !== \\strlen($sAction))\r\n\t\t\t{\r\n\t\t\t\t$sMethodName = 'Raw'.$sAction;\r\n\t\t\t\tif (\\method_exists($this->oActions, $sMethodName))\r\n\t\t\t\t{\r\n\t\t\t\t\t@\\header('X-Raw-Action: '.$sMethodName, true);\r\n\t\t\t\t\t@\\header('Content-Security-Policy: default-src \\'self\\'; script-src \\'none\\'; style-src \\'none\\'; frame-src \\'none\\'; child-src \\'none\\'', true);\r\n\r\n\t\t\t\t\t$sRawError = '';\r\n\t\t\t\t\t$this->oActions->SetActionParams(array(\r\n\t\t\t\t\t\t'RawKey' => empty($this->aPaths[3]) ? '' : $this->aPaths[3],\r\n\t\t\t\t\t\t'Params' => $this->aPaths\r\n\t\t\t\t\t), $sMethodName);\r\n\r\n\t\t\t\t\tif (!\\call_user_func(array($this->oActions, $sMethodName)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sRawError = 'False result';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sRawError = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$sRawError = 'Unknown action \"'.$sAction.'\"';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$sRawError = 'Empty action';\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\RainLoop\\Exceptions\\ClientException $oException)\r\n\t\t{\r\n\t\t\t$sRawError = 'Exception as result';\r\n\t\t\tswitch ($oException->getCode())\r\n\t\t\t{\r\n\t\t\t\tcase \\RainLoop\\Notifications::AuthError:\r\n\t\t\t\t\t$sRawError = 'Authentication failed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (\\Exception $oException)\r\n\t\t{\r\n\t\t\t$sRawError = 'Exception as result';\r\n\t\t}\r\n\r\n\t\tif (0 < \\strlen($sRawError))\r\n\t\t{\r\n\t\t\t$this->oActions->Logger()->Write($sRawError, \\MailSo\\Log\\Enumerations\\Type::ERROR);\r\n\t\t\t$this->oActions->Logger()->WriteDump($this->aPaths, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'PATHS');\r\n\t\t}\r\n\r\n\t\tif ($oException)\r\n\t\t{\r\n\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'RAW');\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceLang()\r\n\t{\r\n//\t\tsleep(2);\r\n\t\t$sResult = '';\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\r\n\t\tif (!empty($this->aPaths[3]))\r\n\t\t{\r\n\t\t\t$bAdmim =  'Admin' === (isset($this->aPaths[2]) ? (string) $this->aPaths[2] : 'App');\r\n\t\t\t$sLanguage = $this->oActions->ValidateLanguage($this->aPaths[3], '', $bAdmim);\r\n\r\n\t\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\t\tif (!empty($sLanguage) && $bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t\t}\r\n\r\n\t\t\t$sCacheFileName = '';\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::LangCache(\r\n\t\t\t\t\t$sLanguage, $bAdmim, $this->oActions->Plugins()->Hash());\r\n\r\n\t\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sResult))\r\n\t\t\t{\r\n\t\t\t\t$sResult = $this->compileLanguage($sLanguage, $bAdmim, false);\r\n\t\t\t\tif ($bCacheEnabled && 0 < \\strlen($sCacheFileName))\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceTemplates()\r\n\t{\r\n\t\t$sResult = '';\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\r\n\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\t$bAdmin = false !== \\strpos($this->sQuery, 'Admin');\r\n\r\n\t\t$sCacheFileName = '';\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::TemplatesCache($bAdmin, $this->oActions->Plugins()->Hash());\r\n\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t}\r\n\r\n\t\tif (0 === \\strlen($sResult))\r\n\t\t{\r\n\t\t\t$sResult = $this->compileTemplates($bAdmin);\r\n\t\t\tif ($bCacheEnabled && 0 < \\strlen($sCacheFileName))\r\n\t\t\t{\r\n\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServicePlugins()\r\n\t{\r\n\t\t$sResult = '';\r\n\t\t$bAdmin = !empty($this->aPaths[2]) && 'Admin' === $this->aPaths[2];\r\n\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\r\n\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\t$sCacheFileName = '';\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::PluginsJsCache($this->oActions->Plugins()->Hash());\r\n\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t}\r\n\r\n\t\tif (0 === strlen($sResult))\r\n\t\t{\r\n\t\t\t$sResult = $this->Plugins()->CompileJs($bAdmin);\r\n\t\t\tif ($bCacheEnabled && 0 < \\strlen($sCacheFileName))\r\n\t\t\t{\r\n\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bCacheEnabled)\r\n\t\t{\r\n\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceCss()\r\n\t{\r\n\t\t$sResult = '';\r\n\r\n\t\t$bAdmin = !empty($this->aPaths[2]) && 'Admin' === $this->aPaths[2];\r\n\t\t$bJson = !empty($this->aPaths[9]) && 'Json' === $this->aPaths[9];\r\n\r\n\t\tif ($bJson)\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: text/css; charset=utf-8');\r\n\t\t}\r\n\r\n\t\t$sTheme = '';\r\n\t\tif (!empty($this->aPaths[4]))\r\n\t\t{\r\n\t\t\t$sTheme = $this->oActions->ValidateTheme($this->aPaths[4]);\r\n\t\t\t$sRealTheme = $sTheme;\r\n\r\n\t\t\t$bCustomTheme = '@custom' === \\substr($sTheme, -7);\r\n\t\t\tif ($bCustomTheme)\r\n\t\t\t{\r\n\t\t\t\t$sRealTheme = \\substr($sTheme, 0, -7);\r\n\t\t\t}\r\n\r\n\t\t\t$bCacheEnabled = $this->Config()->Get('labs', 'cache_system_data', true);\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->verifyCacheByKey($this->sQuery);\r\n\t\t\t}\r\n\r\n\t\t\t$sCacheFileName = '';\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$sCacheFileName = \\RainLoop\\KeyPathHelper::CssCache($sTheme, $this->oActions->Plugins()->Hash());\r\n\t\t\t\t$sResult = $this->Cacher()->Get($sCacheFileName);\r\n\t\t\t}\r\n\r\n\t\t\tif (0 === \\strlen($sResult))\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tinclude_once APP_VERSION_ROOT_PATH.'app/libraries/lessphp/ctype.php';\r\n\t\t\t\t\tinclude_once APP_VERSION_ROOT_PATH.'app/libraries/lessphp/lessc.inc.php';\r\n\r\n\t\t\t\t\t$oLess = new \\RainLoopVendor\\lessc();\r\n\t\t\t\t\t$oLess->setFormatter('compressed');\r\n\r\n\t\t\t\t\t$aResult = array();\r\n\r\n\t\t\t\t\t$sThemeFile = ($bCustomTheme ? APP_INDEX_ROOT_PATH : APP_VERSION_ROOT_PATH).'themes/'.$sRealTheme.'/styles.less';\r\n\t\t\t\t\t$sThemeExtFile = ($bCustomTheme ? APP_INDEX_ROOT_PATH : APP_VERSION_ROOT_PATH).'themes/'.$sRealTheme.'/ext.less';\r\n\r\n\t\t\t\t\t$sThemeValuesFile = APP_VERSION_ROOT_PATH.'app/templates/Themes/values.less';\r\n\t\t\t\t\t$sThemeTemplateFile = APP_VERSION_ROOT_PATH.'app/templates/Themes/template.less';\r\n\r\n\t\t\t\t\tif (\\file_exists($sThemeFile) && \\file_exists($sThemeTemplateFile) && \\file_exists($sThemeValuesFile))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aResult[] = '@base: \"'.\r\n\t\t\t\t\t\t\t($bCustomTheme ? \\RainLoop\\Utils::WebPath() : \\RainLoop\\Utils::WebVersionPath()).\r\n\t\t\t\t\t\t\t'themes/'.$sRealTheme.'/\";';\r\n\r\n\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeValuesFile);\r\n\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeFile);\r\n\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeTemplateFile);\r\n\r\n\t\t\t\t\t\tif (\\file_exists($sThemeExtFile))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$aResult[] = \\file_get_contents($sThemeExtFile);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$aResult[] = $this->Plugins()->CompileCss($bAdmin);\r\n\r\n\t\t\t\t\t$sResult = $oLess->compile(\\implode(\"\\n\", $aResult));\r\n\r\n\t\t\t\t\tif ($bCacheEnabled)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (0 < \\strlen($sCacheFileName))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$this->Cacher()->Set($sCacheFileName, $sResult);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (\\Exception $oException)\r\n\t\t\t\t{\r\n\t\t\t\t\t$this->Logger()->WriteException($oException, \\MailSo\\Log\\Enumerations\\Type::ERROR, 'LESS');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($bCacheEnabled)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->cacheByKey($this->sQuery);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $bJson ? \\MailSo\\Base\\Utils::Php2js(array($sTheme, $sResult), $this->Logger()) : $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSocialGoogle()\r\n\t{\r\n\t\t$bXAuth = '1' === (string) $this->oHttp->GetQuery('xauth', '0');\r\n\t\treturn $this->oActions->Social()->GooglePopupService($bXAuth);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSocialFacebook()\r\n\t{\r\n\t\treturn $this->oActions->Social()->FacebookPopupService();\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSocialTwitter()\r\n\t{\r\n\t\treturn $this->oActions->Social()->TwitterPopupService();\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAppData($sAdd = '')\r\n\t{\r\n\t\treturn $this->localAppData(false, $sAdd);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceAdminAppData($sAdd = '')\r\n\t{\r\n\t\treturn $this->localAppData(true, $sAdd);\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceMobileVersion()\r\n\t{\r\n\t\t\\RainLoop\\Utils::SetCookie(\\RainLoop\\Actions::RL_MOBILE_TYPE, 'mobile');\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceDesktopVersion()\r\n\t{\r\n\t\t\\RainLoop\\Utils::SetCookie(\\RainLoop\\Actions::RL_MOBILE_TYPE, 'desktop');\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceNoScript()\r\n\t{\r\n\t\treturn $this->localError($this->oActions->StaticI18N('STATIC/NO_SCRIPT_TITLE'), $this->oActions->StaticI18N('STATIC/NO_SCRIPT_DESC'));\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceNoCookie()\r\n\t{\r\n\t\treturn $this->localError($this->oActions->StaticI18N('STATIC/NO_COOKIE_TITLE'), $this->oActions->StaticI18N('STATIC/NO_COOKIE_DESC'));\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceBadBrowser()\r\n\t{\r\n\t\t$sTitle = $this->oActions->StaticI18N('STATIC/BAD_BROWSER_TITLE');\r\n\t\t$sDesc = \\nl2br($this->oActions->StaticI18N('STATIC/BAD_BROWSER_DESC'));\r\n\r\n\t\t@\\header('Content-Type: text/html; charset=utf-8');\r\n\t\treturn \\strtr(\\file_get_contents(APP_VERSION_ROOT_PATH.'app/templates/BadBrowser.html'), array(\r\n\t\t\t'{{BaseWebStaticPath}}' => \\RainLoop\\Utils::WebStaticPath(),\r\n\t\t\t'{{ErrorTitle}}' => $sTitle,\r\n\t\t\t'{{ErrorHeader}}' => $sTitle,\r\n\t\t\t'{{ErrorDesc}}' => $sDesc\r\n\t\t));\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceMailto()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$sTo = \\trim($this->oHttp->GetQuery('to', ''));\r\n\t\tif (!empty($sTo) && \\preg_match('/^mailto:/i', $sTo))\r\n\t\t{\r\n\t\t\t$oAccount = $this->oActions->GetAccountFromSignMeToken();\r\n\t\t\tif ($oAccount)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->SetMailtoRequest($sTo);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServicePing()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t@\\header('Content-Type: text/plain; charset=utf-8');\r\n\t\t$this->oActions->Logger()->Write('Pong', \\MailSo\\Log\\Enumerations\\Type::INFO, 'PING');\r\n\t\treturn 'Pong';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceInfo()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\tif ($this->oActions->IsAdminLoggined(false))\r\n\t\t{\r\n\t\t\t@\\header('Content-Type: text/html; charset=utf-8');\r\n\t\t\t\\phpinfo();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceSso()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$oException = null;\r\n\t\t$oAccount = null;\r\n\t\t$bLogout = true;\r\n\r\n\t\t$sSsoHash = $this->oHttp->GetRequest('hash', '');\r\n\t\tif (!empty($sSsoHash))\r\n\t\t{\r\n\t\t\t$mData = null;\r\n\r\n\t\t\t$sSsoSubData = $this->Cacher()->Get(\\RainLoop\\KeyPathHelper::SsoCacherKey($sSsoHash));\r\n\t\t\tif (!empty($sSsoSubData))\r\n\t\t\t{\r\n\t\t\t\t$mData = \\RainLoop\\Utils::DecodeKeyValuesQ($sSsoSubData);\r\n\t\t\t\t$this->Cacher()->Delete(\\RainLoop\\KeyPathHelper::SsoCacherKey($sSsoHash));\r\n\r\n\t\t\t\tif (\\is_array($mData) && !empty($mData['Email']) && isset($mData['Password'], $mData['Time']) &&\r\n\t\t\t\t\t(0 === $mData['Time'] || \\time() - 10 < $mData['Time']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$sEmail = \\trim($mData['Email']);\r\n\t\t\t\t\t$sPassword = $mData['Password'];\r\n\r\n\t\t\t\t\t$aAdditionalOptions = isset($mData['AdditionalOptions']) && \\is_array($mData['AdditionalOptions']) &&\r\n\t\t\t\t\t\t0 < \\count($mData['AdditionalOptions']) ? $mData['AdditionalOptions'] : null;\r\n\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\r\n\t\t\t\t\t\tif ($oAccount instanceof \\RainLoop\\Model\\Account && $aAdditionalOptions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$bNeedToSettings = false;\r\n\r\n\t\t\t\t\t\t\t$oSettings = $this->SettingsProvider()->Load($oAccount);\r\n\t\t\t\t\t\t\tif ($oSettings)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$sLanguage = isset($aAdditionalOptions['Language']) ?\r\n\t\t\t\t\t\t\t\t\t$aAdditionalOptions['Language'] : '';\r\n\r\n\t\t\t\t\t\t\t\tif ($sLanguage)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$sLanguage = $this->oActions->ValidateLanguage($sLanguage);\r\n\t\t\t\t\t\t\t\t\tif ($sLanguage !== $oSettings->GetConf('Language', ''))\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t$bNeedToSettings = true;\r\n\t\t\t\t\t\t\t\t\t\t$oSettings->SetConf('Language', $sLanguage);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($bNeedToSettings)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$this->SettingsProvider()->Save($oAccount, $oSettings);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\r\n\t\t\t\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (\\Exception $oException)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceRemoteAutoLogin()\r\n\t{\r\n\t\t$oException = null;\r\n\t\t$oAccount = null;\r\n\t\t$bLogout = true;\r\n\r\n\t\t$sEmail = $this->oHttp->GetEnv('REMOTE_USER', '');\r\n\t\t$sPassword = $this->oHttp->GetEnv('REMOTE_PASSWORD', '');\r\n\r\n\t\tif (0 < \\strlen($sEmail) && 0 < \\strlen(\\trim($sPassword)))\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\t\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t\t}\r\n\t\t\tcatch (\\Exception $oException)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceExternalLogin()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$oException = null;\r\n\t\t$oAccount = null;\r\n\t\t$bLogout = true;\r\n\r\n\t\tif ($this->oActions->Config()->Get('labs', 'allow_external_login', false))\r\n\t\t{\r\n\t\t\t$sEmail = \\trim($this->oHttp->GetRequest('Email', ''));\r\n\t\t\t$sPassword = $this->oHttp->GetRequest('Password', '');\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\t$oAccount = $this->oActions->LoginProcess($sEmail, $sPassword);\r\n\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\t\t\t\t$bLogout = !($oAccount instanceof \\RainLoop\\Model\\Account);\r\n\t\t\t}\r\n\t\t\tcatch (\\Exception $oException)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->Logger()->WriteException($oException);\r\n\t\t\t}\r\n\r\n\t\t\tif ($bLogout)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (\\strtolower($this->oHttp->GetRequest('Output', 'Redirect')))\r\n\t\t{\r\n\t\t\tcase 'json':\r\n\r\n\t\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\r\n\t\t\t\t$aResult = array(\r\n\t\t\t\t\t'Action' => 'ExternalLogin',\r\n\t\t\t\t\t'Result' => $oAccount instanceof \\RainLoop\\Model\\Account ? true : false,\r\n\t\t\t\t\t'ErrorCode' => 0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!$aResult['Result'])\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($oException instanceof \\RainLoop\\Exceptions\\ClientException)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aResult['ErrorCode'] = $oException->getCode();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$aResult['ErrorCode'] = \\RainLoop\\Notifications::AuthError;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn \\MailSo\\Base\\Utils::Php2js($aResult, $this->Logger());\r\n\r\n\t\t\tcase 'redirect':\r\n\t\t\tdefault:\r\n\t\t\t\t$this->oActions->Location('./');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceExternalSso()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$sResult = '';\r\n\t\t$bLogout = true;\r\n\t\t$sKey = $this->oActions->Config()->Get('labs', 'external_sso_key', '');\r\n\t\tif ($this->oActions->Config()->Get('labs', 'allow_external_sso', false) &&\r\n\t\t\t!empty($sKey) && $sKey === \\trim($this->oHttp->GetRequest('SsoKey', '')))\r\n\t\t{\r\n\t\t\t$sEmail = \\trim($this->oHttp->GetRequest('Email', ''));\r\n\t\t\t$sPassword = $this->oHttp->GetRequest('Password', '');\r\n\r\n\t\t\t$sResult = \\RainLoop\\Api::GetUserSsoHash($sEmail, $sPassword);\r\n\t\t\t$bLogout = 0 === \\strlen($sResult);\r\n\r\n\t\t\tswitch (\\strtolower($this->oHttp->GetRequest('Output', 'Plain')))\r\n\t\t\t{\r\n\t\t\t\tcase 'plain':\r\n\t\t\t\t\t@\\header('Content-Type: text/plain');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'json':\r\n\t\t\t\t\t@\\header('Content-Type: application/json; charset=utf-8');\r\n\t\t\t\t\t$sResult = \\MailSo\\Base\\Utils::Php2js(array(\r\n\t\t\t\t\t\t'Action' => 'ExternalSso',\r\n\t\t\t\t\t\t'Result' => $sResult\r\n\t\t\t\t\t), $this->Logger());\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($bLogout)\r\n\t\t{\r\n\t\t\t$this->oActions->SetAuthLogoutToken();\r\n\t\t}\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\tprivate function changeAction()\r\n\t{\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$oAccount = $this->oActions->GetAccount();\r\n\r\n\t\tif ($oAccount && $this->oActions->GetCapa(false, false, \\RainLoop\\Enumerations\\Capa::ADDITIONAL_ACCOUNTS, $oAccount))\r\n\t\t{\r\n\t\t\t$oAccountToLogin = null;\r\n\t\t\t$sEmail = empty($this->aPaths[2]) ? '' : \\urldecode(\\trim($this->aPaths[2]));\r\n\t\t\tif (!empty($sEmail))\r\n\t\t\t{\r\n\t\t\t\t$sEmail = \\MailSo\\Base\\Utils::IdnToAscii($sEmail);\r\n\r\n\t\t\t\t$aAccounts = $this->oActions->GetAccounts($oAccount);\r\n\t\t\t\tif (isset($aAccounts[$sEmail]))\r\n\t\t\t\t{\r\n\t\t\t\t\t$oAccountToLogin = $this->oActions->GetAccountFromCustomToken($aAccounts[$sEmail], false, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($oAccountToLogin)\r\n\t\t\t{\r\n\t\t\t\t$this->oActions->AuthToken($oAccountToLogin);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return string\r\n\t */\r\n\tpublic function ServiceChange()\r\n\t{\r\n\t\t$this->changeAction();\r\n\t\t$this->oActions->Location('./');\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sTitle\r\n\t * @param string $sDesc\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tpublic function ErrorTemplates($sTitle, $sDesc, $bShowBackLink = true)\r\n\t{\r\n\t\treturn strtr(file_get_contents(APP_VERSION_ROOT_PATH.'app/templates/Error.html'), array(\r\n\t\t\t'{{BaseWebStaticPath}}' => \\RainLoop\\Utils::WebStaticPath(),\r\n\t\t\t'{{ErrorTitle}}' => $sTitle,\r\n\t\t\t'{{ErrorHeader}}' => $sTitle,\r\n\t\t\t'{{ErrorDesc}}' => $sDesc,\r\n\t\t\t'{{BackLinkVisibilityStyle}}' => $bShowBackLink ? 'display:inline-block' : 'display:none',\r\n\t\t\t'{{BackLink}}' => $this->oActions->StaticI18N('STATIC/BACK_LINK'),\r\n\t\t\t'{{BackHref}}' => './'\r\n\t\t));\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sTitle\r\n\t * @param string $sDesc\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function localError($sTitle, $sDesc)\r\n\t{\r\n\t\t@header('Content-Type: text/html; charset=utf-8');\r\n\t\treturn $this->ErrorTemplates($sTitle, \\nl2br($sDesc));\r\n\t}\r\n\r\n\t/**\r\n\t * @param bool $bAdmin = true\r\n\t * @param string $sAdd = ''\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function localAppData($bAdmin = false, $sAdd = '')\r\n\t{\r\n\t\t@\\header('Content-Type: application/javascript; charset=utf-8');\r\n\t\t$this->oHttp->ServerNoCache();\r\n\r\n\t\t$sAuthAccountHash = '';\r\n\t\tif (!$bAdmin && 0 === \\strlen($this->oActions->GetSpecAuthLogoutTokenWithDeletion()))\r\n\t\t{\r\n\t\t\t$sAuthAccountHash = $this->oActions->GetSpecAuthTokenWithDeletion();\r\n\t\t\tif (empty($sAuthAccountHash))\r\n\t\t\t{\r\n\t\t\t\t$sAuthAccountHash = $this->oActions->GetSpecAuthToken();\r\n\t\t\t}\r\n\r\n\t\t\tif (empty($sAuthAccountHash))\r\n\t\t\t{\r\n\t\t\t\t$oAccount = $this->oActions->GetAccountFromSignMeToken();\r\n\t\t\t\tif ($oAccount)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$this->oActions->CheckMailConnection($oAccount);\r\n\r\n\t\t\t\t\t\t$this->oActions->AuthToken($oAccount);\r\n\r\n\t\t\t\t\t\t$sAuthAccountHash = $this->oActions->GetSpecAuthToken();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (\\Exception $oException)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$oException = null;\r\n\t\t\t\t\t\t$this->oActions->ClearSignMeData($oAccount);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$this->oActions->SetSpecAuthToken($sAuthAccountHash);\r\n\t\t}\r\n\r\n\t\t$sResult = $this->compileAppData($this->oActions->AppData($bAdmin,\r\n\t\t\t0 === \\strpos($sAdd, 'mobile'), '1' === \\substr($sAdd, -1),\r\n\t\t\t$sAuthAccountHash), false);\r\n\r\n\t\t$this->Logger()->Write($sResult, \\MailSo\\Log\\Enumerations\\Type::INFO, 'APPDATA');\r\n\r\n\t\treturn $sResult;\r\n\t}\r\n\r\n\t/**\r\n\t * @param bool $bAdmin = false\r\n\t * @param bool $bJsOutput = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tpublic function compileTemplates($bAdmin = false, $bJsOutput = true)\r\n\t{\r\n\t\t$aTemplates = array();\r\n\r\n\t\t\\RainLoop\\Utils::CompileTemplates($aTemplates, APP_VERSION_ROOT_PATH.'app/templates/Views/Components', 'Component');\r\n\t\t\\RainLoop\\Utils::CompileTemplates($aTemplates, APP_VERSION_ROOT_PATH.'app/templates/Views/'.($bAdmin ? 'Admin' : 'User'));\r\n\t\t\\RainLoop\\Utils::CompileTemplates($aTemplates, APP_VERSION_ROOT_PATH.'app/templates/Views/Common');\r\n\r\n\t\t$this->oActions->Plugins()->CompileTemplate($aTemplates, $bAdmin);\r\n\r\n\t\t$sHtml = '';\r\n\t\tforeach ($aTemplates as $sName => $sFile)\r\n\t\t{\r\n\t\t\t$sName = \\preg_replace('/[^a-zA-Z0-9]/', '', $sName);\r\n\t\t\t$sHtml .= '<script id=\"'.$sName.'\" type=\"text/html\" data-cfasync=\"false\">'.\r\n\t\t\t\t$this->oActions->ProcessTemplate($sName, \\file_get_contents($sFile)).'</script>';\r\n\t\t}\r\n\r\n\t\tunset($aTemplates);\r\n\r\n\t\treturn $bJsOutput ? 'window.rainloopTEMPLATES='.\\MailSo\\Base\\Utils::Php2js(array($sHtml), $this->Logger()).';' : $sHtml;\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sLanguage\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function convertLanguageNameToMomentLanguageName($sLanguage)\r\n\t{\r\n\t\t$aHelper = array('en_gb' => 'en-gb', 'fr_ca' => 'fr-ca', 'pt_br' => 'pt-br',\r\n\t\t\t'uk_ua' => 'ua', 'zh_cn' => 'zh-cn', 'zh_tw' => 'zh-tw', 'fa_ir' => 'fa');\r\n\r\n\t\treturn isset($aHelper[$sLanguage]) ? $aHelper[$sLanguage] : \\substr($sLanguage, 0, 2);\r\n\t}\r\n\r\n\t/**\r\n\t * @param string $sLanguage\r\n\t * @param bool $bAdmin = false\r\n\t * @param bool $bWrapByScriptTag = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function compileLanguage($sLanguage, $bAdmin = false, $bWrapByScriptTag = true)\r\n\t{\r\n\t\t$aResultLang = array();\r\n\r\n\t\t$sMoment = 'window.moment && window.moment.locale && window.moment.locale(\\'en\\');';\r\n\t\t$sMomentFileName = APP_VERSION_ROOT_PATH.'app/localization/moment/'.\r\n\t\t\t$this->convertLanguageNameToMomentLanguageName($sLanguage).'.js';\r\n\r\n\t\tif (\\file_exists($sMomentFileName))\r\n\t\t{\r\n\t\t\t$sMoment = \\file_get_contents($sMomentFileName);\r\n\t\t\t$sMoment = \\preg_replace('/\\/\\/[^\\n]+\\n/', '', $sMoment);\r\n\t\t}\r\n\r\n\t\t\\RainLoop\\Utils::ReadAndAddLang(APP_VERSION_ROOT_PATH.'app/localization/langs.yml', $aResultLang);\r\n\t\t\\RainLoop\\Utils::ReadAndAddLang(APP_VERSION_ROOT_PATH.'app/localization/'.\r\n\t\t\t($bAdmin ? 'admin' : 'webmail').'/_source.en.yml', $aResultLang);\r\n\t\t\\RainLoop\\Utils::ReadAndAddLang(APP_VERSION_ROOT_PATH.'app/localization/'.\r\n\t\t\t($bAdmin ? 'admin' : 'webmail').'/'.$sLanguage.'.yml', $aResultLang);\r\n\r\n\t\t$this->Plugins()->ReadLang($sLanguage, $aResultLang);\r\n\r\n\t\t$sLangJs = '';\r\n\t\t$aLangKeys = \\array_keys($aResultLang);\r\n\t\tforeach ($aLangKeys as $sKey)\r\n\t\t{\r\n\t\t\t$sString = isset($aResultLang[$sKey]) ? $aResultLang[$sKey] : $sKey;\r\n\t\t\tif (\\is_array($sString))\r\n\t\t\t{\r\n\t\t\t\t$sString = \\implode(\"\\n\", $sString);\r\n\t\t\t}\r\n\r\n\t\t\t$sLangJs .= '\"'.\\str_replace('\"', '\\\\\"', \\str_replace('\\\\', '\\\\\\\\', $sKey)).'\":'\r\n\t\t\t\t.'\"'.\\str_replace(array(\"\\r\", \"\\n\", \"\\t\"), array('\\r', '\\n', '\\t'),\r\n\t\t\t\t\t\\str_replace('\"', '\\\\\"', \\str_replace('\\\\', '\\\\\\\\', $sString))).'\",';\r\n\t\t}\r\n\r\n\t\t$sResult = empty($sLangJs) ? 'null' : '{'.\\substr($sLangJs, 0, -1).'}';\r\n\r\n\t\treturn\r\n\t\t\t($bWrapByScriptTag ? '<script data-cfasync=\"false\">' : '').\r\n\t\t\t'window.rainloopI18N='.$sResult.';'.$sMoment.\r\n\t\t\t($bWrapByScriptTag ? '</script>' : '')\r\n\t\t;\r\n\t}\r\n\r\n\t/**\r\n\t * @param array $aAppData\r\n\t * @param bool $bWrapByScriptTag = true\r\n\t *\r\n\t * @return string\r\n\t */\r\n\tprivate function compileAppData($aAppData, $bWrapByScriptTag = true)\r\n\t{\r\n\t\treturn\r\n\t\t\t($bWrapByScriptTag ? '<script type=\"text/javascript\" data-cfasync=\"false\">' : '').\r\n\t\t\t'if(window.__initAppData){window.__initAppData('.\\json_encode($aAppData).');}'.\r\n\t\t\t($bWrapByScriptTag ? '</script>' : '')\r\n\t\t;\r\n\t}\r\n}\r\n"], "filenames": ["rainloop/v/0.0.0/app/libraries/MailSo/Base/HtmlUtils.php", "rainloop/v/0.0.0/app/libraries/RainLoop/Config/Application.php", "rainloop/v/0.0.0/app/libraries/RainLoop/Service.php", "rainloop/v/0.0.0/app/libraries/RainLoop/ServiceActions.php"], "buggy_code_start_loc": [1102, 201, 47, 500], "buggy_code_end_loc": [1102, 202, 249, 500], "fixing_code_start_loc": [1103, 201, 48, 501], "fixing_code_end_loc": [1110, 203, 260, 502], "type": "CWE-79", "message": "RainLoop Webmail before 1.13.0 lacks XSS protection mechanisms such as xlink:href validation, the X-XSS-Protection header, and the Content-Security-Policy header.", "other": {"cve": {"id": "CVE-2019-13389", "sourceIdentifier": "cve@mitre.org", "published": "2020-03-20T19:15:12.580", "lastModified": "2023-05-28T01:15:24.797", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "RainLoop Webmail before 1.13.0 lacks XSS protection mechanisms such as xlink:href validation, the X-XSS-Protection header, and the Content-Security-Policy header."}, {"lang": "es", "value": "RainLoop Webmail versiones anteriores a 1.13.0, carece de mecanismos de protecci\u00f3n de XSS, tal y como xlink: comprobaci\u00f3n de href, el encabezado X-XSS-Protection y el encabezado Content-Security-Policy."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:rainloop:webmail:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.13.0", "matchCriteriaId": "B595FC9B-7F60-4ACC-A084-2754999289C5"}]}]}], "references": [{"url": "https://github.com/RainLoop/rainloop-webmail/commit/8eb4588917b4741889fdd905d4c32e3e86317693", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2023/05/msg00027.html", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/RainLoop/rainloop-webmail/commit/8eb4588917b4741889fdd905d4c32e3e86317693"}}