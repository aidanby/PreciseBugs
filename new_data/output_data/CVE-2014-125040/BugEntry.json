{"buggy_code": ["<?php\n\nrequire_once 'php/model/remotehtml/RemoteHTMLContent.php';\nrequire_once 'php/model/remotehtml/dateparsing/DateFieldInformationFactory.php';\n\nclass RemoteHtmlContentDataAccess {\n    public static function getAll() {\n        return self::getForQueryString('SELECT * FROM \"DevNewsAggregatorConfiguration_htmlcontent\" WHERE enabled = true');\n    }\n\n    public static function getForUser($userId) {\n        $query = ' SELECT html_content.* ' .\n                    ' FROM \"DevNewsAggregatorConfiguration_htmlcontent\" html_content ' .\n                    ' INNER JOIN \"DevNewsAggregatorConfiguration_htmlcontent_users\" htmlcontent_users ' .\n                    ' ON html_content.id = htmlcontent_users.htmlcontent_id ' .\n                    ' WHERE html_content.enabled = true ' .\n                    \" AND htmlcontent_users.user_id = $1 \";\n\n        return self::getForQueryString($query, array($userId));\n    }\n\n    public static function getByName($name) {\n        return self::getForQueryString(\"SELECT * FROM \\\"DevNewsAggregatorConfiguration_htmlcontent\\\" WHERE name = $name\");\n    }\n\n    private static function getForQueryString($query, $params=array()) {\n        $connection = pg_connect(\"host=localhost port=5432 dbname=DevNewsAggregator user=DevNews password=DevNews\") or die(\"Could not connect to Postgres\");\n        $result = pg_query_params($connection, $query, $params) or die(\"Could not execute query\");\n\n        $remoteHTMLContent = array();\n\n        while($row = pg_fetch_array($result)) {\n            $dateFieldInformation = DateFieldInformationFactory::create($row);\n            $remoteHTMLContent[] =  new RemoteHTMLContent($row['url'], $row['name'], $row['scraping_strategy'], $row['outer_content_selector'], $row['inner_content_selector'], $row['title_selector'],\n                $dateFieldInformation, $row['ignore_first_n_posts'], $row['ignore_last_n_posts']);\n        }\n\n        pg_close($connection);\n\n        return $remoteHTMLContent;\n    }\n} "], "fixing_code": ["<?php\n\nrequire_once 'php/model/remotehtml/RemoteHTMLContent.php';\nrequire_once 'php/model/remotehtml/dateparsing/DateFieldInformationFactory.php';\n\nclass RemoteHtmlContentDataAccess {\n    public static function getAll() {\n        return self::getForQueryString('SELECT * FROM \"DevNewsAggregatorConfiguration_htmlcontent\" WHERE enabled = true');\n    }\n\n    public static function getForUser($userId) {\n        $query = ' SELECT html_content.* ' .\n                    ' FROM \"DevNewsAggregatorConfiguration_htmlcontent\" html_content ' .\n                    ' INNER JOIN \"DevNewsAggregatorConfiguration_htmlcontent_users\" htmlcontent_users ' .\n                    ' ON html_content.id = htmlcontent_users.htmlcontent_id ' .\n                    ' WHERE html_content.enabled = true ' .\n                    \" AND htmlcontent_users.user_id = $1 \";\n\n        return self::getForQueryString($query, array($userId));\n    }\n\n    public static function getByName($name) {\n        return self::getForQueryString(\"SELECT * FROM \\\"DevNewsAggregatorConfiguration_htmlcontent\\\" WHERE name = $1\", array($name));\n    }\n\n    private static function getForQueryString($query, $params=array()) {\n        $connection = pg_connect(\"host=localhost port=5432 dbname=DevNewsAggregator user=DevNews password=DevNews\") or die(\"Could not connect to Postgres\");\n        $result = pg_query_params($connection, $query, $params) or die(\"Could not execute query\");\n\n        $remoteHTMLContent = array();\n\n        while($row = pg_fetch_array($result)) {\n            $dateFieldInformation = DateFieldInformationFactory::create($row);\n            $remoteHTMLContent[] =  new RemoteHTMLContent($row['url'], $row['name'], $row['scraping_strategy'], $row['outer_content_selector'], $row['inner_content_selector'], $row['title_selector'],\n                $dateFieldInformation, $row['ignore_first_n_posts'], $row['ignore_last_n_posts']);\n        }\n\n        pg_close($connection);\n\n        return $remoteHTMLContent;\n    }\n} "], "filenames": ["php/data_access/RemoteHtmlContentDataAccess.php"], "buggy_code_start_loc": [23], "buggy_code_end_loc": [24], "fixing_code_start_loc": [23], "fixing_code_end_loc": [24], "type": "CWE-89", "message": "A vulnerability was found in stevejagodzinski DevNewsAggregator. It has been rated as critical. Affected by this issue is the function getByName of the file php/data_access/RemoteHtmlContentDataAccess.php. The manipulation of the argument name leads to sql injection. The name of the patch is b9de907e7a8c9ca9d75295da675e58c5bf06b172. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217484.", "other": {"cve": {"id": "CVE-2014-125040", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-05T14:15:08.517", "lastModified": "2023-01-11T20:01:23.130", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in stevejagodzinski DevNewsAggregator. It has been rated as critical. Affected by this issue is the function getByName of the file php/data_access/RemoteHtmlContentDataAccess.php. The manipulation of the argument name leads to sql injection. The name of the patch is b9de907e7a8c9ca9d75295da675e58c5bf06b172. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217484."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:devnewsaggregator_project:devnewsaggregator:*:*:*:*:*:*:*:*", "versionEndExcluding": "2014-11-30", "matchCriteriaId": "1388259B-B3D7-46C2-A0B1-3C5477E55C3A"}]}]}], "references": [{"url": "https://github.com/stevejagodzinski/DevNewsAggregator/commit/b9de907e7a8c9ca9d75295da675e58c5bf06b172", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217484", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217484", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/stevejagodzinski/DevNewsAggregator/commit/b9de907e7a8c9ca9d75295da675e58c5bf06b172"}}