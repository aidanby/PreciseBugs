{"buggy_code": ["<?php\n/*\n  @package Freshdesk Official\n  @version 1.7\n*/\n/*\n  Plugin Name: Freshdesk Official\n  Plugin URI: \n  Description: Freshdesk Official is a seamless way to add your helpdesk account to your website. Supports various useful functions.\n  Author: hjohnpaul,sathishfreshdesk,balakumars,shreyasns\n  Version: 1.7\n  Author URI: http://freshdesk.com/\n*/\n\n\nif ( ! defined( 'ABSPATH' ) ) {\n\tdie(); //Die if accessed directly.\n}\n\n#include freshdesk api class.\ndefine( 'FD_PLUGIN_URL', plugin_dir_url( __FILE__ ) );\ndefine( 'FD_PAGE_BASENAME', 'freshdesk-menu-handle' );\nrequire_once( plugin_dir_path( __FILE__ ) . 'freshdesk-plugin-api.php' );\n\nadd_action( 'init', 'fd_login' ); //Sso handler and comment action handler\nadd_action( 'admin_menu', 'freshdesk_plugin_menu' ); //Plugin Menu\nadd_filter( 'comment_row_actions', 'freshdesk_comment_action', 10, 2 ); // This adds the comment action menu.\nadd_action( 'wp_ajax_fd_ticket_action', 'fd_action_callback' ); // This is the ajax action handler\nadd_filter( 'login_redirect', 'fd_login_redirect', 10, 3 ); // This is used to redirect to Freshdesk on SSO.\nadd_filter( 'login_message', \"show_login_message\" );\n// admin messages hook!\nadd_action( 'admin_notices', 'freshdesk_admin_msgs' );\n?>\n<?php\nfunction show_login_message() {\n\t$freshdesk_options= get_option('freshdesk_options');\n\tif ( $freshdesk_options['freshdesk_enable_sso'] != 'checked' && $_GET['action'] == 'freshdesk-login' ){\n\t\t//ToDO change the login message\n\t\treturn \"<div style='padding:12px;border-left:4px solid #feba11; background:#fff; margin-bottom:4px'>We are not able to log you in, please contact your Wordpress administrator to enable SSO in your account.</div>\";\n\t}\n}\nfunction fd_login_redirect( $url, $request, $user ) {\n\tparse_str( $request, $params );\n\t$fd_redirect_to = $params['fd_redirect_to'];\n\tif ( ! $fd_redirect_to ) {\n\t\treturn $url;\n\t}\n\t// For handling Redirect to Freshdesk on login.\n\tif ( $_REQUEST['wp-submit'] == \"Log In\" && is_a( $user, 'WP_User' ) ) {\n\t\t$user_name = $user->data->display_name;\n\t\t$freshdesk_options = get_option( 'freshdesk_options' );\n\t\t$secret = $freshdesk_options['freshdesk_sso_key'];\n\t\t$data = $user_name.$user->data->user_email.time();\n\t\t$hash_key = hash_hmac(\"md5\", $data, $secret);\n\t\t$ssl_url = $fd_redirect_to.\"/login/sso?name=\".urlencode($user->data->display_name).\"&email=\".urlencode($user->data->user_email).\"&timestamp=\".time().\"&hash=\".urlencode($hash_key);\n\t\tsleep(1); // holding a bit so that it falls within FD 30 mins bar.\n\t\theader(\"Location: \".$ssl_url);\n\t\tdie();\n\t}\n\treturn  $request;\n}\n\nfunction freshdesk_plugin_menu() {\n\tadd_menu_page( 'Freshdesk Settings', 'Freshdesk', 'manage_options', 'freshdesk-menu-handle', 'freshdesk_settings_page');\n\tadd_action( 'admin_init', 'freshdesk_settings_init' );\n}\n\nfunction freshdesk_settings_page() {\n?>\n\t<div class=\"wrap\">\n\t\t<h2><?php echo __(\"Freshdesk Settings\") ?></h2>\n\t\t<form class=\"form-table\" method=\"post\" action=\"options.php\"> \n\t\t\t<?php settings_fields('freshdesk_options_group'); //setting fields group?>\n\t\t\t<?php do_settings_sections('freshdesk-menu-handle'); ?>\n\t\t\t<p class=\"submit\"><input class=\"wp-core-ui button-primary\" name=\"Submit\" type=\"submit\" value=\"<?php esc_attr_e('Save Changes'); ?>\" /></p>\n\t\t</form>\n\t</div>\n<?php\n} //Function End\n\nfunction freshdesk_settings_init() {\n\tregister_setting( 'freshdesk_options_group', 'freshdesk_options', 'validate_freshdesk_settings' );\n\tadd_settings_section( 'freshdesk_settings_section', '', '', 'freshdesk-menu-handle' );\n\t//Domain url.\n\tadd_settings_field( 'freshdesk_domain_url', __('Helpdesk URL'), 'freshdesk_domain_callback' ,'freshdesk-menu-handle', 'freshdesk_settings_section' );\n\t\n\t//Freshdesk Api Key.\n\tadd_settings_field( 'freshdesk_api_key', 'API Key', 'freshdesk_api_callback' , 'freshdesk-menu-handle', 'freshdesk_settings_section' );\n\t\n\t//Enable SSO\n\tadd_settings_field( 'freshdesk_enable_sso', '', 'freshdesk_enable_sso_callback' , 'freshdesk-menu-handle', 'freshdesk_settings_section' );\n\t\n\t//Enable/disable freshdesk widget code.\n\tregister_setting( 'freshdesk_options_group','freshdesk_feedback_options','validate_freshdesk_fb_settings' );\n\tadd_settings_field( 'freshdesk_enable_feedback', '', 'freshdesk_enable_fb_callback' , 'freshdesk-menu-handle', 'freshdesk_settings_section' );\n}\n\n// Callback Functions that constructs the UI.\nfunction freshdesk_domain_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo \"<input class='fd_ui_element' id='freshdesk_domain_url' name='freshdesk_options[freshdesk_domain_url]' size='72' type='text' value='{$options['freshdesk_domain_url']}' />\";\n\techo '<div class=\"info-data fd_ui_element\">Eg: https://yourcompany.freshdesk.com</div>';\n}\n\nfunction freshdesk_enable_sso_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo '<tr><td colspan=\"2\"><ul class=\"fd-form-table\"><li><div><label><input class=\"fd_button\" type=\"checkbox\" name=\"freshdesk_options[freshdesk_enable_sso]\" id=\"freshdesk_enable_sso\" '.$options['freshdesk_enable_sso'].' /><span class=\"fd_ui_element fd-bold\">Enable SSO Login </span></label><div><div class=\"info-data fd_lmargin\">Enabling this will let your users to login using their wordpress credentials</div></li>';\n\t\n\t//SSO Secret\n\techo '<div id=\"freshdesk_sso_options\" style=\"display: none;padding-left:45px\">';\n\tfreshdesk_sso_callback();\n\t\n\t//Remote login and Logout Urls\n\tfreshdesk_sso_urls_callback();\n\techo '</div>';\n\t\n}\n\nfunction freshdesk_sso_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo \"<div class='freshdesk_sso_settings' style='display: none;' ><div class='info-title'>\".__(\"SSO Shared Secret\").\"</div><input class='fd_ui_element' id='freshdesk_sso_key' name='freshdesk_options[freshdesk_sso_key]' size='72' type='text' value='{$options['freshdesk_sso_key']}' />\";\n\techo '<div class=\"info-data fd_ui_element freshdesk_helpdesk_url\">Enable SSO on your Helpdesk account and copy the <a href=\"'.$options['freshdesk_domain_url'].'/admin/security\" target=\"_blank\" >SSO shared secret</a> above.</div></div>';\n}\n\nfunction freshdesk_sso_urls_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo '<ul class=\"fd-content freshdesk_sso_settings\" style=\"display: none;\"><li><div class=\"info-title\">'.__('Remote Login URL').'</div>';\n\techo '<input class=\"fd-code\" value=\"' . wp_login_url() . '?action=freshdesk-login\" type=\"button\"/>';\n\techo '<div class=\"info-data freshdesk_helpdesk_url\">'.__(\"Copy the above <i>Remote Login Url</i> to your\").' <a href=\"'.$options['freshdesk_domain_url'].'/admin/security\" target=\"_blank\" >Single Sign On settings.</a></div></li>';\n\techo '<li><div class=\"info-title\">'.__('Remote Logout URL').'</div>';\n\techo '<input class=\"fd-code\" value=\"' . wp_login_url() . '?action=freshdesk-logout\" type=\"button\"/>';\n\techo '<div class=\"info-data freshdesk_helpdesk_url\" id=\"freshdesk_redirect_url\">'.__(\"Copy the above <i>Remote Logout Url</i> to your\").' <a href=\"'.$options['freshdesk_domain_url'].'/admin/security\" target=\"_blank\" >Single Sign On settings.</a></div></li></ul>';\n}\n\nfunction freshdesk_api_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo \"<input class='fd_ui_element' type='text' name='freshdesk_options[freshdesk_api_key]' size='72' value='{$options['freshdesk_api_key']}' />\";\n\techo '<div class=\"info-data fd_ui_element\">'.__(\"Your Helpdesk's Apikey will be available under Agent profile settings.\").'</div>';\n}\n\nfunction freshdesk_enable_fb_callback() {\n\t$options = get_option( 'freshdesk_feedback_options' );\n\techo '<tr><td colspan=\"2\"><ul class=\"fd-form-table\"><li><div><label><input class=\"fd_button\" type=\"checkbox\" name=\"freshdesk_feedback_options[freshdesk_enable_feedback]\" id=\"freshdesk_enable_feedback\" '.$options['freshdesk_enable_feedback'].' /><span class=\"fd_ui_element fd-bold\">Show FeedBack Widget </span></label><div><div class=\"info-data fd_lmargin\">This widget will be shown on your wordpress site for Visitors to post feedback</div></li>';\n\tfreshdesk_fb_widget_callback();\n}\n\nfunction freshdesk_fb_widget_callback() {\n\t$options = get_option( 'freshdesk_feedback_options' );\n\t$fd_options = get_option( 'freshdesk_options' );\n\t\n\techo '<li><div id=\"freshdesk_feedback_widget_id\" style=\"display: none;\"><div class=\"info-data  fd_text fd_ui_element freshdesk_widget_url\"><a href=\"'.$fd_options['freshdesk_domain_url'].'/admin/widget_config\" target=\"_blank\">Copy feedback widget code</a> from your helpdesk and paste it below.</div>';\n\techo '<textarea class=\"fd_ui_element fd_text\" name=\"freshdesk_feedback_options[freshdesk_fb_widget_code]\" id=\"freshdesk_fb_widget_code\" rows=\"7\">'.$options['freshdesk_fb_widget_code'].'</textarea></div></li></ul></td></tr>';\n}\n\n/* This is the validation(db before_save) callback */\nfunction validate_freshdesk_settings( $input ) {\n\t$freshdesk_options = get_option( 'freshdesk_options' );\n\t$error = 0;\n\t$url=trim($input['freshdesk_domain_url']);\n\tif ( ! preg_match(\"/\\b(?:(?:https?):\\/\\/|www\\.)[-a-z0-9+&@#\\/%?=~_|!:,.;]*[-a-z0-9+&@#\\/%=~_|]/i\", $url ) ) {\n\t\t$url ='';\n\t}\n\t$sso_secret = $input['freshdesk_sso_key'];\n\t$api_key = $input['freshdesk_api_key'];\n\t$enable_feedback = validate_checkbox( $input['freshdesk_enable_feedback'] );\n\t$enable_sso = validate_checkbox( $input['freshdesk_enable_sso'] );\n\t\n\tif ( ! $url ) {\n\t\tadd_settings_error(\n\t\t\t'freshdesk_domain_url', // setting title\n\t\t\t'fd_domain_url_not_present', // error ID\n\t\t\t'Domain url cannot be blank', // error message\n\t\t\t'error' // type of message\n\t\t);\n\t\t$error=1;\n\t}\n\t\n\tif ( ! $api_key ) {\n\t\tadd_settings_error(\n\t\t\t'freshdesk_api_key', // setting title\n\t\t\t'fd_api_key_not_present', // error ID\n\t\t\t'API key cannot be blank', // error message\n\t\t\t'error' // type of message\n\t\t);\n\t\t$error=1;\n\t}\n\t\n\tif ( $enable_sso == 'checked' && ! $sso_secret ) {\n\t\tadd_settings_error(\n\t\t\t'freshdesk_sso_key', // setting title\n\t\t\t'fd_sso_key_not_present', // error ID\n\t\t\t'Please enter the sso secret to enable sso', // error message\n\t\t\t'error' // type of message\n\t\t);\n\t\t$error=1;\n\t}\n\t\n\tif ( $error ) {\n\t\treturn $freshdesk_options;\n\t}\n\t$settings = array( 'freshdesk_domain_url' => $url, 'freshdesk_enable_sso' => $enable_sso, 'freshdesk_sso_key' => $sso_secret, 'freshdesk_api_key' => $api_key, 'freshdesk_enable_feedback' => $enable_feedback );\n\t\n\treturn $settings;\t\n}\n\nfunction validate_freshdesk_fb_settings( $input ) {\n\t$enable_feedback = validate_checkbox( $input['freshdesk_enable_feedback'] );\n\t$fb_widget_code = $input['freshdesk_fb_widget_code'];\n\t$settings = array( 'freshdesk_fb_widget_code' => $fb_widget_code, 'freshdesk_enable_feedback' => $enable_feedback );\n\treturn $settings;\n}\n\nfunction validate_checkbox( $input ){\n\tif($input == 'on'){\n\t\t$input = 'checked';\n\t}\n\treturn $input;\n}\n/* Validation callback End. */\n\n/* Adding 'Create Ticket' Action for the Comments*/\nfunction freshdesk_comment_action( $actions, $comment ) {\n\t$options = get_option( 'freshdesk_options' );\n\tif (current_user_can( 'administrator') ) {\n\t\tif( (trim( get_comment_meta( $comment->comment_ID, \"fd_ticket_id\", true) ) == false ) ){\n\t\t\t$actions['freshdesk'] = '<a class=\"fd_convert_ticket\" href=\"#\" domain_url='.$options['freshdesk_domain_url'].' id=\"' . $comment->comment_ID . '\">' . __( 'Convert to Ticket', 'fd_ticket' ) . '</a>';\n\t\t}\n\t\telse {\n\t\t\t$actions['freshdesk'] = '<a class=\"fd_convert_ticket\" href=\"#\" title=\"hello\" ticket_id=\"'.get_comment_meta($comment->comment_ID,\"fd_ticket_id\", true).'\"domain_url='.$options['freshdesk_domain_url'].' id=\"' . $comment->comment_ID . '\">' . __( 'View Ticket', 'fd_ticket_link' ) . '</a>';\n\t\t}\n\t}\n\treturn $actions;\n}\n\n\n//freshdesk login sso handler/feedback widget handler.\n//and css/js loader for settings and comments page.\nfunction fd_login() {\n\tglobal $pagenow, $display_name , $user_email;\n\tif ( 'wp-login.php' == $pagenow ){\n\t\tif ( $_GET['action'] == 'freshdesk-login' ) {\n\t\t\t// NOTE: is_user_logged_in dont't work during  [wp-submit] => Log In\n\t\t\t$freshdesk_options = get_option( 'freshdesk_options' );\n\t\t\tif( $freshdesk_options['freshdesk_enable_sso'] != 'checked' ){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( is_user_logged_in() ) {\n\t\t\t\t// For the case when user has already logged into Wordpress and then in another tab opens Freshdesk and click on login then he should be logged into FD with out entering credentials.\n\t\t\t\t$current_user = wp_get_current_user();\n\t\t\t\t$secret = $freshdesk_options['freshdesk_sso_key'];\n\t\t\t\t$user_name= $current_user->data->display_name;\n\t\t\t\t$user_email = $current_user->user_email;\n\t\t\t\t$data = $user_name.$user_email.time();\n\t\t\t\t$hash_key = hash_hmac( \"md5\", $data, $secret );\n\t\t\t\t$url = freshdesk_sso_login_url( $user_name, $user_email ,$hash_key );\n\t\t\t\theader( 'Location: '.$url ) ;\t\n\t\t\t\tdie();\n\t\t\t}\n\t\t\telse{ // if wordpress is not logged in.\n\t\t\t\t$domain = ( $_REQUEST['host_url'] ) ? get_domain_protocol().\"://\".$_REQUEST['host_url'] : $freshdesk_options['freshdesk_domain_url']; // Redirect to the host url if host url option is present with the request.\n\t\t\t\tif (isset($domain)){\n\t\t\t\t\theader( \"Location: \" .wp_login_url().\"?redirect_to=fd_redirect_to=\".$domain );\n\t\t\t\t\tdie();\n\t\t\t\t}\n\t\t \t}\n\t\t}\n\t\tif ( $_GET['action'] == 'freshdesk-logout' ) {\n\t\t\t$redirect_url = wp_login_url();\n\t\t\t// Sometimes we get the http referer and some times don't so to find if it is coming from Freshdesk we do a two condition check and if one is satisfied then Freshdesk is the referer.\n\t\t\t// Condition-1) Host url is a substring of http referer\n\t\t\t// Condition-2) Host url exists and the http_referer is empty because request from within wordpress seems to always have a referer.\n\t\t\t$condition_one = ( strpos($_SERVER['HTTP_REFERER'], $_REQUEST['host_url']) !== FALSE ) ? TRUE : FALSE;\n\t\t\t$condition_two = ( $_REQUEST['host_url'] && empty( $_SERVER['HTTP_REFERER'] ) );\n\t\t\tif ( $condition_one || $condition_two ) {\n\t\t\t\t$redirect_url = get_domain_protocol().\"://\".$_REQUEST['host_url'];\n\t\t\t}\n\t\t\twp_logout();\n\t\t\theader( 'Location: '.$redirect_url );\n\t\t\tdie();\n\t\t}\n\t}\n\tif ( 'edit-comments.php' == $pagenow ||  ( $_GET['page'] == 'freshdesk-menu-handle' ) ){\n\t\tif ( current_user_can( 'manage_options' ) ) {\n\t\t\twp_enqueue_script( 'fd_plugin_js',FD_PLUGIN_URL . 'js/freshdesk_plugin_js.js', array( 'jquery' ) );\n\t\t\twp_localize_script( 'fd_plugin_js', 'myAjax', array( 'ajaxurl' => admin_url( 'admin-ajax.php' ) ) );\n\t\t}\n\t}\n\twp_enqueue_style( 'fd_plugin_css',FD_PLUGIN_URL . 'css/freshdesk_plugin.css' );\n\t$feedback_options=get_option( 'freshdesk_feedback_options' );\n\tif ( $feedback_options['freshdesk_enable_feedback'] == \"checked\" ) {\n\t\tadd_action( 'wp_footer', 'freshdesk_widget_code' );\n\t}\n}\n\n//Feedback widget code snippet include.\nfunction freshdesk_widget_code() {\n\t$options = get_option( 'freshdesk_feedback_options' );\n\techo $options['freshdesk_fb_widget_code'];\n}\n\nfunction freshdesk_handshake_secret() {\n\t\n}\n\nfunction get_domain_protocol() {\n\t$freshdesk_options= get_option( 'freshdesk_options' );\n\t$domain_url = $freshdesk_options['freshdesk_domain_url'];\n\t$temp_array = explode( \":\", $domain_url );\n\t$protocol = $temp_array[0];\n\treturn $protocol;\n}\n\nfunction freshdesk_sso_login_url($user_name,$email,$hash_key){\n\t$host_url = $_GET['host_url'];\n\t$protocol = get_domain_protocol().\"://\";\n\t$domain = (empty($host_url) === true) ? $domain_url : $host_url; // Take the domain_url if host_url is null.\n\treturn $protocol.$domain.\"/login/sso?name=\".urlencode($user_name).\"&email=\".urlencode($email).\"&timestamp=\".time().\"&hash=\".urlencode($hash_key);\n}\n\n//Ajax Action handler. Freshdesk Ticket creation handled here.\nfunction fd_action_callback() {\n\t$id = $_POST['commentId'];\t\n\t$comment = get_comment($id);\n\t$comment_link = get_comment_link( $comment, 'all' );\n\t$email = $comment->comment_author_email;\n\t$description = $comment->comment_content;\n\t$description = $description . \"<br/><br/><a href=\" . htmlentities($comment_link) . \">Go to comment</a>\";\n\t$type = $comment->comment_type;\n\t$comment_meta = $comment->comment_agent;\n\t$comment_date = $comment->comment_date;\n\t$comment_post = $comment->comment_post_ID;\n\t$comment_author_name = $comment->comment_author;\n\t$subject = \"comment id :\".$id;\n\t$options = get_option( 'freshdesk_options' );\n\t$fd_api_handle = new Freshdesk_Plugin_Api( $options['freshdesk_api_key'], $options['freshdesk_domain_url'] );\n\t$result = $fd_api_handle->create_ticket( $email, $subject, $description );\n\t$response = array(\n\t\t'what'=>'helpdesk_ticket',\n\t\t'action'=>'create',\n\t\t'id'=>'1',\n\t\t'data'=>$result\n\t);\n\t\n\t$resp = add_comment_meta( $id, 'fd_ticket_id', $result, false );\n\t$xmlResponse = new WP_Ajax_Response( $response );\n\t$xmlResponse->send();\n}\n\n\nfunction freshdesk_show_msg( $message, $msgclass = 'info' ) {\n\techo \"<div id='message' class='$msgclass'>$message</div>\";\n}\n\nfunction freshdesk_admin_msgs() {\n\t// check for our settings page - need this in conditional further down\n\t$wptuts_settings_pg = strpos( $_GET['page'], FD_PAGE_BASENAME );\n\t// collect setting errors/notices: //http://codex.wordpress.org/Function_Reference/get_settings_errors\n\t$set_errors = get_settings_errors();\n\n\t//display admin message only for the admin to see, only on our settings page and only when setting errors/notices are returned!\n\tif ( current_user_can ('manage_options') && $wptuts_settings_pg !== FALSE && ! empty( $set_errors ) ){\n\t\t// have our settings succesfully been updated?\n\t\tif ( $set_errors[0]['code'] == 'settings_updated' && isset( $_GET['settings-updated'] ) ) {\n\t\t\tfreshdesk_show_msg(\"<p>\" . $set_errors[0]['message'] . \"</p>\", 'updated');\n\t\t} else {\n\t\t\t// there maybe more than one so run a foreach loop.\n\t\t\tforeach ( $set_errors as $set_error ) {\n\t\t\t\t// set the title attribute to match the error \"setting title\" - need this in js file\n\t\t\t\tfreshdesk_show_msg(\"<p class='setting-error-message' title='\" . $set_error['setting'] . \"'>\" . $set_error['message'] . \"</p>\", 'error');\n\t\t\t}\n\t\t}\n\t}\n}\n?>\n", "=== Freshdesk Official===\nContributors: hjohnpaul, sathishfreshdesk, balakumars, shreyasns\nDonate link: \nTags: freshdesk, helpdesk, support tool\nRequires at least: 3.4\nTested up to: 4.1.5\nStable tag: 1.7\nLicense: GPLv2 or later\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\n\n\nFreshdesk Official plugin is a seamless way to add your helpdesk account to your website. Supports various useful functions.\n\n==Description==\n\nFreshdesk Official plugin enables users to achieve three important functions:\n\n- Avoid additional login to helpdesk if the user has already logged in to WP(Single Sign On).\n- Effortlessly integrate the helpdesk' s feedback widget along with solutions search to his wordpress site.\n- Allows the site admin to convert comments into helpdesk tickets.\n- Adding the comment link to ticket description.\n\n1. Single Sign On:\nUsers can now login to their helpdesk(freshdesk) support portal using Wordpress authentication. The single sign on feature ensures that users who have already logged into their Wordpress site can start working in their Freshdesk support portal as well without having to log in separately. \n\n2. Feedback Pop-up Widget:\nThe plugin allows Wordpress users to have a Freshdesk feedback widget embedded in their wordpress site. The widget allows people visiting the site to provide feedback and search for answers.\n\n3. Convert Comments to Tickets on helpdesk:\nUsers with admin access to their Wordpress sites can convert comments into \u201cTickets\u201d. The marked comments are sent to the user\u2019s support portal that can be solved or responded to later.\n\n4. Adding the comment link-back in the ticket added:\n   Comments converted to tickets in freshdesk will now have the link-back url to the actual comment in the wordpress site appended in its description.\n\n== Installation ==\n* For an automatic installation through WordPress\n1. Go to the 'Add New' plugins screen in your WordPress admin area.\n2. Search for 'Freshdesk Official' plugin.\n3. Click 'Install Now' and activate the plugin.\n\n\nManual Installation:\n\n1. Download the latest version of 'Freshdesk Official'  plugin from the WordPress Plugin Directory.\n2. Extract the zip and Upload the freshdesk_support directory to your /wp-content/plugins directory\n3. Go to the plugins management page and activate the plugin\n4. You now have a new admin menu 'Freshdesk Official' in your WordPress admin menu bar. Click on it and Configure your settings as mentioned in the info comments in the screen.\n\n== Frequently Asked Questions ==\n1. Where do i find sso shared secret ?\n\n  SSO shared secret will be available in your helpdesk account's admin -> security -> sso section.\n\n2. How can login to my helpdesk using normal login screen after enabling sso ?\n\n  You can always access your help desk's normal login screen using http://yourcompany.freshdesk.com/login/normal link.\n\n3. Where can I find the feedback widget code snippet ?\n\n  Feedback widget code has to be copied from the admin -> feedback section. You can configure the alignment and kbase search hide and much more here and copy the generate code snippet.\n\n== Screenshots ==\n1. This screen shot shows the Settings Screen.\n2. This shows the comments page where a new action('Convert to ticket') added to make the comment as a ticket.\n3. This shows the comments page with 'View Ticket' option showing if the comment is already converted to ticket.\n4. This shows the comment link in the ticket description.\n\n== Changelog ==\n= 1.7 =\n  Added option to enable/disable sso.\n  Logging out of wordpress no longer logs out the Freshdesk session.\n  Added validations for the settings page.\n  Fixed the error showing up on the plugin settings page.\n= 1.6 =\n  Fix the SSO login redirect to Freshdesk and on wordpress logout, logout of Freshdesk as well.\n= 1.5 =\n  Includes fix for SSO and Vanity URL redirect.\n= 1.4 =\n  Bug fix for SSO and Vanity URL redirect.\n= 1.3 =\n Added comment link to ticket description\n= 1.2 =\n Fix for the error message(\"The plugin does not have a valid header.\") on enabling plugin \n= 1.1 =\nPrevious revision. \nBug Fix:\n - Freshdesk remote log-in failing for new users.\n - Sign-out from freshdesk does not logout wordpress session. \n= 1.0 =\nFirst Release Version.\n\n== Upgrade Notice ==\n  Added option to enable/disable sso.\n  Logging out of wordpress will no longer logout the Freshdesk session.\n  Added validations for the settings page.\n  Fixed the error showing up on the plugin settings page.\n== 1.7 ==\n  Added option to enable/disable sso.\n  Logging out of wordpress will no longer logout the Freshdesk session.\n  Added validations for the settings page.\n  Fixed the error showing up on the plugin settings page.\n== 1.6 ==\n  Fix for SSO login redirect back to Freshdesk.\n  Change logout url to Freshdesk logout url so that Freshdesk is also logged out.\n== 1.5 ==\n  Fixing problem with 1.4 getting listed as development version.\n  Includes bug fix for SSO and Vanity URL redirect.\n== 1.4 ==\n  Bug fix for SSO and Vanity URL redirect.\n  Now works with SSO and Vanity URL.\n== 1.3 ==\n Added comment link to ticket description.\n== 1.2 ==\n Fix for the error message on enabling the plugin.\n== 1.1 ==\n  Revision with bugs addressed.\n== 1.0 ==\nThis is the First release version.\n"], "fixing_code": ["<?php\n/*\n  @package Freshdesk Official\n  @version 1.8\n*/\n/*\n  Plugin Name: Freshdesk Official\n  Plugin URI: \n  Description: Freshdesk Official is a seamless way to add your helpdesk account to your website. Supports various useful functions.\n  Author: hjohnpaul,sathishfreshdesk,balakumars,shreyasns\n  Version: 1.8\n  Author URI: http://freshdesk.com/\n*/\n\n\nif ( ! defined( 'ABSPATH' ) ) {\n\tdie(); //Die if accessed directly.\n}\n\n#include freshdesk api class.\ndefine( 'FD_PLUGIN_URL', plugin_dir_url( __FILE__ ) );\ndefine( 'FD_PAGE_BASENAME', 'freshdesk-menu-handle' );\ndefine( 'DOMAIN_REGEX', '/\\bhttps?:\\/\\/([-a-z0-9+&@#\\/%?=~_|!:,.;]*[-a-z0-9+&@#\\/%=~_|])/i' );\nrequire_once( plugin_dir_path( __FILE__ ) . 'freshdesk-plugin-api.php' );\n\nadd_action( 'init', 'fd_login' ); //Sso handler and comment action handler\nadd_action( 'admin_menu', 'freshdesk_plugin_menu' ); //Plugin Menu\nadd_filter( 'comment_row_actions', 'freshdesk_comment_action', 10, 2 ); // This adds the comment action menu.\nadd_action( 'wp_ajax_fd_ticket_action', 'fd_action_callback' ); // This is the ajax action handler\nadd_filter( 'login_redirect', 'fd_login_redirect', 10, 3 ); // This is used to redirect to Freshdesk on SSO.\nadd_filter( 'login_message', \"show_login_message\" );\n// admin messages hook!\nadd_action( 'admin_notices', 'freshdesk_admin_msgs' );\n?>\n<?php\nfunction show_login_message() {\n\t$freshdesk_options= get_option('freshdesk_options');\n\tif ( $freshdesk_options['freshdesk_enable_sso'] != 'checked' && $_GET['action'] == 'freshdesk-login' ){\n\t\t//ToDO change the login message\n\t\treturn \"<div style='padding:12px;border-left:4px solid #feba11; background:#fff; margin-bottom:4px'>We are not able to log you in, please contact your Wordpress administrator to enable SSO in your account.</div>\";\n\t}\n}\nfunction fd_login_redirect( $url, $request, $user ) {\n\tparse_str( $request, $params );\n\t$fd_redirect_to = $params['fd_redirect_to'];\n\tif ( ! $fd_redirect_to ) {\n\t\treturn $url;\n\t}\n\t$redirect_url = get_redirect_url( $fd_redirect_to );\n\n\t// For handling Redirect to Freshdesk on login.\n\tif ( $_REQUEST['wp-submit'] == \"Log In\" && is_a( $user, 'WP_User' ) && $redirect_url ) {\n\t\t$freshdesk_options = get_option( 'freshdesk_options' );\t\t\n\t\t\n\t\t$user_name = $user->data->display_name;\n\t\t$secret = $freshdesk_options['freshdesk_sso_key'];\n\t\t$data = $user_name.$user->data->user_email.time();\n\t\t$hash_key = hash_hmac(\"md5\", $data, $secret);\n\t\t$ssl_url = $redirect_url.\"/login/sso?name=\".urlencode($user->data->display_name).\"&email=\".urlencode($user->data->user_email).\"&timestamp=\".time().\"&hash=\".urlencode($hash_key);\n\t\tsleep(1); // holding a bit so that it falls within FD 30 mins bar.\n\t\theader(\"Location: \".$ssl_url);\n\t\tdie();\n\t}\n\treturn  $request;\n}\n\nfunction get_redirect_url($host_url) {\n\t$freshdesk_options = get_option( 'freshdesk_options' );\n\n\t//Stripping protocols from urls to match the host url correctly.\n\t$host_url = preg_replace( DOMAIN_REGEX, \"$1\", trim($host_url) );\n\t$domains = split( \",\", $freshdesk_options['freshdesk_cname'] );\n\tarray_push( $domains, $freshdesk_options['freshdesk_domain_url'] );\n\n\t//Checking the host url against the provided helpdesk/portal url to avoid Open-redirect vulnerability\n\tforeach ( $domains as $domain ) {\n\t\t$domain = trim($domain);\n\t\t$url = preg_replace( DOMAIN_REGEX, \"$1\", $domain);\n\t\tif ( $url == $host_url ) {\n\t\t\treturn $domain;\n\t\t}\n\t}\n}\nfunction freshdesk_plugin_menu() {\n\tadd_menu_page( 'Freshdesk Settings', 'Freshdesk', 'manage_options', 'freshdesk-menu-handle', 'freshdesk_settings_page');\n\tadd_action( 'admin_init', 'freshdesk_settings_init' );\n}\n\nfunction freshdesk_settings_page() {\n?>\n\t<div class=\"wrap\">\n\t\t<h2><?php echo __(\"Freshdesk Settings\") ?></h2>\n\t\t<form class=\"form-table\" method=\"post\" action=\"options.php\"> \n\t\t\t<?php settings_fields('freshdesk_options_group'); //setting fields group?>\n\t\t\t<?php do_settings_sections('freshdesk-menu-handle'); ?>\n\t\t\t<p class=\"submit\"><input class=\"wp-core-ui button-primary\" name=\"Submit\" type=\"submit\" value=\"<?php esc_attr_e('Save Changes'); ?>\" /></p>\n\t\t</form>\n\t</div>\n<?php\n} //Function End\n\nfunction freshdesk_settings_init() {\n\tregister_setting( 'freshdesk_options_group', 'freshdesk_options', 'validate_freshdesk_settings' );\n\tadd_settings_section( 'freshdesk_settings_section', '', '', 'freshdesk-menu-handle' );\n\t//Domain url.\n\tadd_settings_field( 'freshdesk_domain_url', __('Helpdesk URL'), 'freshdesk_domain_callback' ,'freshdesk-menu-handle', 'freshdesk_settings_section' );\n\t//Host url\n\tadd_settings_field( 'freshdesk_cname', __('Portal URLs'), 'freshdesk_cname_callback' ,'freshdesk-menu-handle', 'freshdesk_settings_section' );\n\t\n\t//Freshdesk Api Key.\n\tadd_settings_field( 'freshdesk_api_key', 'API Key', 'freshdesk_api_callback' , 'freshdesk-menu-handle', 'freshdesk_settings_section' );\n\t\n\t//Enable SSO\n\tadd_settings_field( 'freshdesk_enable_sso', '', 'freshdesk_enable_sso_callback' , 'freshdesk-menu-handle', 'freshdesk_settings_section' );\n\t\n\t//Enable/disable freshdesk widget code.\n\tregister_setting( 'freshdesk_options_group','freshdesk_feedback_options','validate_freshdesk_fb_settings' );\n\tadd_settings_field( 'freshdesk_enable_feedback', '', 'freshdesk_enable_fb_callback' , 'freshdesk-menu-handle', 'freshdesk_settings_section' );\n}\n\n// Callback Functions that constructs the UI.\nfunction freshdesk_domain_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo \"<input class='fd_ui_element' id='freshdesk_domain_url' name='freshdesk_options[freshdesk_domain_url]' size='72' type='text' value='{$options['freshdesk_domain_url']}' />\";\n\techo '<div class=\"info-data fd_ui_element\">Eg: https://yourcompany.freshdesk.com</div>';\n}\n\nfunction freshdesk_cname_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo \"<input class='fd_ui_element' id='freshdesk_cname' name='freshdesk_options[freshdesk_cname]' size='72' type='text' value='{$options['freshdesk_cname']}' />\";\n\techo '<div class=\"info-data fd_ui_element\">Eg: https://support.yourdomain.com,https://support2.yourdomain.com</div>';\n}\n\nfunction freshdesk_enable_sso_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo '<tr><td colspan=\"2\"><ul class=\"fd-form-table\"><li><div><label><input class=\"fd_button\" type=\"checkbox\" name=\"freshdesk_options[freshdesk_enable_sso]\" id=\"freshdesk_enable_sso\" '.$options['freshdesk_enable_sso'].' /><span class=\"fd_ui_element fd-bold\">Enable SSO Login </span></label><div><div class=\"info-data fd_lmargin\">Enabling this will let your users to login using their wordpress credentials</div></li>';\n\t\n\t//SSO Secret\n\techo '<div id=\"freshdesk_sso_options\" style=\"display: none;padding-left:45px\">';\n\tfreshdesk_sso_callback();\n\t\n\t//Remote login and Logout Urls\n\tfreshdesk_sso_urls_callback();\n\techo '</div>';\n\t\n}\n\nfunction freshdesk_sso_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo \"<div class='freshdesk_sso_settings' style='display: none;' ><div class='info-title'>\".__(\"SSO Shared Secret\").\"</div><input class='fd_ui_element' id='freshdesk_sso_key' name='freshdesk_options[freshdesk_sso_key]' size='72' type='text' value='{$options['freshdesk_sso_key']}' />\";\n\techo '<div class=\"info-data fd_ui_element freshdesk_helpdesk_url\">Enable SSO on your Helpdesk account and copy the <a href=\"'.$options['freshdesk_domain_url'].'/admin/security\" target=\"_blank\" >SSO shared secret</a> above.</div></div>';\n}\n\nfunction freshdesk_sso_urls_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo '<ul class=\"fd-content freshdesk_sso_settings\" style=\"display: none;\"><li><div class=\"info-title\">'.__('Remote Login URL').'</div>';\n\techo '<input class=\"fd-code\" value=\"' . wp_login_url() . '?action=freshdesk-login\" type=\"button\"/>';\n\techo '<div class=\"info-data freshdesk_helpdesk_url\">'.__(\"Copy the above <i>Remote Login Url</i> to your\").' <a href=\"'.$options['freshdesk_domain_url'].'/admin/security\" target=\"_blank\" >Single Sign On settings.</a></div></li>';\n\techo '<li><div class=\"info-title\">'.__('Remote Logout URL').'</div>';\n\techo '<input class=\"fd-code\" value=\"' . wp_login_url() . '?action=freshdesk-logout\" type=\"button\"/>';\n\techo '<div class=\"info-data freshdesk_helpdesk_url\" id=\"freshdesk_redirect_url\">'.__(\"Copy the above <i>Remote Logout Url</i> to your\").' <a href=\"'.$options['freshdesk_domain_url'].'/admin/security\" target=\"_blank\" >Single Sign On settings.</a></div></li></ul>';\n}\n\nfunction freshdesk_api_callback() {\n\t$options = get_option( 'freshdesk_options' );\n\techo \"<input class='fd_ui_element' type='text' name='freshdesk_options[freshdesk_api_key]' size='72' value='{$options['freshdesk_api_key']}' />\";\n\techo '<div class=\"info-data fd_ui_element\">'.__(\"Your Helpdesk's Apikey will be available under Agent profile settings.\").'</div>';\n}\n\nfunction freshdesk_enable_fb_callback() {\n\t$options = get_option( 'freshdesk_feedback_options' );\n\techo '<tr><td colspan=\"2\"><ul class=\"fd-form-table\"><li><div><label><input class=\"fd_button\" type=\"checkbox\" name=\"freshdesk_feedback_options[freshdesk_enable_feedback]\" id=\"freshdesk_enable_feedback\" '.$options['freshdesk_enable_feedback'].' /><span class=\"fd_ui_element fd-bold\">Show FeedBack Widget </span></label><div><div class=\"info-data fd_lmargin\">This widget will be shown on your wordpress site for Visitors to post feedback</div></li>';\n\tfreshdesk_fb_widget_callback();\n}\n\nfunction freshdesk_fb_widget_callback() {\n\t$options = get_option( 'freshdesk_feedback_options' );\n\t$fd_options = get_option( 'freshdesk_options' );\n\t\n\techo '<li><div id=\"freshdesk_feedback_widget_id\" style=\"display: none;\"><div class=\"info-data  fd_text fd_ui_element freshdesk_widget_url\"><a href=\"'.$fd_options['freshdesk_domain_url'].'/admin/widget_config\" target=\"_blank\">Copy feedback widget code</a> from your helpdesk and paste it below.</div>';\n\techo '<textarea class=\"fd_ui_element fd_text\" name=\"freshdesk_feedback_options[freshdesk_fb_widget_code]\" id=\"freshdesk_fb_widget_code\" rows=\"7\">'.$options['freshdesk_fb_widget_code'].'</textarea></div></li></ul></td></tr>';\n}\n\n/* This is the validation(db before_save) callback */\nfunction validate_freshdesk_settings( $input ) {\n\t$freshdesk_options = get_option( 'freshdesk_options' );\n\t$error = 0;\n\t$url=trim($input['freshdesk_domain_url']);\n\tif ( $url && ! preg_match( DOMAIN_REGEX, $url )  ) {\n\t\tadd_settings_error(\n\t\t\t'freshdesk_domain_url', // setting title\n\t\t\t'fd_invalid_domain', // error ID\n\t\t\t\"$url is an invalid  Helpdesk url\", // error message\n\t\t\t'error' // type of message\n\t\t);\n\t\t$error=1;\n\t}\n\t$cnames = split( \",\", trim($input['freshdesk_cname'] ) );\n\tforeach ( $cnames as $cname ) {\n\t\t$cname = trim($cname);\n\t\tif ( ! preg_match( DOMAIN_REGEX, $cname ) && $cname ) {\n\t\t\tadd_settings_error(\n\t\t\t\t'freshdesk_cname', // setting title\n\t\t\t\t'fd_cname_invalid_domain', // error ID\n\t\t\t\t\"$cname is an invalid  domain url\", // error message\n\t\t\t\t'error' // type of message\n\t\t\t);\n\t\t\t$error=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\t$cname = trim($input['freshdesk_cname'] );\n\t\n\t$sso_secret = $input['freshdesk_sso_key'];\n\t$api_key = $input['freshdesk_api_key'];\n\t$enable_feedback = validate_checkbox( $input['freshdesk_enable_feedback'] );\n\t$enable_sso = validate_checkbox( $input['freshdesk_enable_sso'] );\n\t\n\tif ( ! $url ) {\n\t\tadd_settings_error(\n\t\t\t'freshdesk_domain_url', // setting title\n\t\t\t'fd_domain_url_not_present', // error ID\n\t\t\t'Helpdesk url cannot be blank', // error message\n\t\t\t'error' // type of message\n\t\t);\n\t\t$error=1;\n\t}\n\t\n\tif ( ! $api_key ) {\n\t\tadd_settings_error(\n\t\t\t'freshdesk_api_key', // setting title\n\t\t\t'fd_api_key_not_present', // error ID\n\t\t\t'API key cannot be blank', // error message\n\t\t\t'error' // type of message\n\t\t);\n\t\t$error=1;\n\t}\n\t\n\tif ( $enable_sso == 'checked' && ! $sso_secret ) {\n\t\tadd_settings_error(\n\t\t\t'freshdesk_sso_key', // setting title\n\t\t\t'fd_sso_key_not_present', // error ID\n\t\t\t'Please enter the sso secret to enable sso', // error message\n\t\t\t'error' // type of message\n\t\t);\n\t\t$error=1;\n\t}\n\t\n\tif ( $error ) {\n\t\treturn $freshdesk_options;\n\t}\n\t$settings = array( 'freshdesk_domain_url' => $url, 'freshdesk_cname' => $cname, 'freshdesk_enable_sso' => $enable_sso, 'freshdesk_sso_key' => $sso_secret, 'freshdesk_api_key' => $api_key, 'freshdesk_enable_feedback' => $enable_feedback );\n\t\n\treturn $settings;\t\n}\n\nfunction validate_freshdesk_fb_settings( $input ) {\n\t$enable_feedback = validate_checkbox( $input['freshdesk_enable_feedback'] );\n\t$fb_widget_code = $input['freshdesk_fb_widget_code'];\n\t$settings = array( 'freshdesk_fb_widget_code' => $fb_widget_code, 'freshdesk_enable_feedback' => $enable_feedback );\n\treturn $settings;\n}\n\nfunction validate_checkbox( $input ){\n\tif($input == 'on'){\n\t\t$input = 'checked';\n\t}\n\treturn $input;\n}\n/* Validation callback End. */\n\n/* Adding 'Create Ticket' Action for the Comments*/\nfunction freshdesk_comment_action( $actions, $comment ) {\n\t$options = get_option( 'freshdesk_options' );\n\tif (current_user_can( 'administrator') ) {\n\t\tif( (trim( get_comment_meta( $comment->comment_ID, \"fd_ticket_id\", true) ) == false ) ){\n\t\t\t$actions['freshdesk'] = '<a class=\"fd_convert_ticket\" href=\"#\" domain_url='.$options['freshdesk_domain_url'].' id=\"' . $comment->comment_ID . '\">' . __( 'Convert to Ticket', 'fd_ticket' ) . '</a>';\n\t\t}\n\t\telse {\n\t\t\t$actions['freshdesk'] = '<a class=\"fd_convert_ticket\" href=\"#\" title=\"hello\" ticket_id=\"'.get_comment_meta($comment->comment_ID,\"fd_ticket_id\", true).'\"domain_url='.$options['freshdesk_domain_url'].' id=\"' . $comment->comment_ID . '\">' . __( 'View Ticket', 'fd_ticket_link' ) . '</a>';\n\t\t}\n\t}\n\treturn $actions;\n}\n\n\n//freshdesk login sso handler/feedback widget handler.\n//and css/js loader for settings and comments page.\nfunction fd_login() {\n\tglobal $pagenow, $display_name , $user_email;\n\tif ( 'wp-login.php' == $pagenow ){\n\t\t$freshdesk_options = get_option( 'freshdesk_options' );\n\t\t$domain = get_redirect_url($_REQUEST['host_url']);\n\t\terror_log(\"Domain : $domain \");\n\t\tif( ! $domain ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( $_GET['action'] == 'freshdesk-login' ) {\n\t\t\t// NOTE: is_user_logged_in dont't work during  [wp-submit] => Log In\n\t\t\tif( $freshdesk_options['freshdesk_enable_sso'] != 'checked' ){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( is_user_logged_in() ) {\n\t\t\t\t// For the case when user has already logged into Wordpress and then in another tab opens Freshdesk and click on login then he should be logged into FD with out entering credentials.\n\t\t\t\t$current_user = wp_get_current_user();\n\t\t\t\t$secret = $freshdesk_options['freshdesk_sso_key'];\n\t\t\t\t$user_name= $current_user->data->display_name;\n\t\t\t\t$user_email = $current_user->user_email;\n\t\t\t\t$data = $user_name.$user_email.time();\n\t\t\t\t$hash_key = hash_hmac( \"md5\", $data, $secret );\n\t\t\t\t$url = freshdesk_sso_login_url( $domain, $user_name, $user_email ,$hash_key );\n\t\t\t\theader( 'Location: '.$url ) ;\t\n\t\t\t\tdie();\n\t\t\t}\n\t\t\telse{ // if wordpress is not logged in.\n\t\t\t\t\n\t\t\t\tif (isset($domain)){\n\t\t\t\t\theader( \"Location: \" .wp_login_url().\"?redirect_to=fd_redirect_to=\".$domain );\n\t\t\t\t\tdie();\n\t\t\t\t}\n\t\t \t}\n\t\t}\n\t\tif ( $_GET['action'] == 'freshdesk-logout' ) {\n\t\t\twp_logout();\n\t\t\theader( 'Location: '.$domain );\n\t\t\tdie();\n\t\t}\n\t}\n\tif ( 'edit-comments.php' == $pagenow ||  ( $_GET['page'] == 'freshdesk-menu-handle' ) ){\n\t\tif ( current_user_can( 'manage_options' ) ) {\n\t\t\twp_enqueue_script( 'fd_plugin_js',FD_PLUGIN_URL . 'js/freshdesk_plugin_js.js', array( 'jquery' ) );\n\t\t\twp_localize_script( 'fd_plugin_js', 'myAjax', array( 'ajaxurl' => admin_url( 'admin-ajax.php' ) ) );\n\t\t}\n\t}\n\twp_enqueue_style( 'fd_plugin_css',FD_PLUGIN_URL . 'css/freshdesk_plugin.css' );\n\t$feedback_options=get_option( 'freshdesk_feedback_options' );\n\tif ( $feedback_options['freshdesk_enable_feedback'] == \"checked\" ) {\n\t\tadd_action( 'wp_footer', 'freshdesk_widget_code' );\n\t}\n}\n\n//Feedback widget code snippet include.\nfunction freshdesk_widget_code() {\n\t$options = get_option( 'freshdesk_feedback_options' );\n\techo $options['freshdesk_fb_widget_code'];\n}\n\nfunction freshdesk_handshake_secret() {\n\t\n}\n\nfunction freshdesk_sso_login_url($domain, $user_name, $email, $hash_key){\n\treturn $domain.\"/login/sso?name=\".urlencode($user_name).\"&email=\".urlencode($email).\"&timestamp=\".time().\"&hash=\".urlencode($hash_key);\n}\n\n//Ajax Action handler. Freshdesk Ticket creation handled here.\nfunction fd_action_callback() {\n\t$id = $_POST['commentId'];\t\n\t$comment = get_comment($id);\n\t$comment_link = get_comment_link( $comment, 'all' );\n\t$email = $comment->comment_author_email;\n\t$description = $comment->comment_content;\n\t$description = $description . \"<br/><br/><a href=\" . htmlentities($comment_link) . \">Go to comment</a>\";\n\t$type = $comment->comment_type;\n\t$comment_meta = $comment->comment_agent;\n\t$comment_date = $comment->comment_date;\n\t$comment_post = $comment->comment_post_ID;\n\t$comment_author_name = $comment->comment_author;\n\t$subject = \"comment id :\".$id;\n\t$options = get_option( 'freshdesk_options' );\n\t$fd_api_handle = new Freshdesk_Plugin_Api( $options['freshdesk_api_key'], $options['freshdesk_domain_url'] );\n\t$result = $fd_api_handle->create_ticket( $email, $subject, $description );\n\t$response = array(\n\t\t'what'=>'helpdesk_ticket',\n\t\t'action'=>'create',\n\t\t'id'=>'1',\n\t\t'data'=>$result\n\t);\n\t\n\t$resp = add_comment_meta( $id, 'fd_ticket_id', $result, false );\n\t$xmlResponse = new WP_Ajax_Response( $response );\n\t$xmlResponse->send();\n}\n\n\nfunction freshdesk_show_msg( $message, $msgclass = 'info' ) {\n\techo \"<div id='message' class='$msgclass'>$message</div>\";\n}\n\nfunction freshdesk_admin_msgs() {\n\t// check for our settings page - need this in conditional further down\n\t$wptuts_settings_pg = strpos( $_GET['page'], FD_PAGE_BASENAME );\n\t// collect setting errors/notices: //http://codex.wordpress.org/Function_Reference/get_settings_errors\n\t$set_errors = get_settings_errors();\n\n\t//display admin message only for the admin to see, only on our settings page and only when setting errors/notices are returned!\n\tif ( current_user_can ('manage_options') && $wptuts_settings_pg !== FALSE && ! empty( $set_errors ) ){\n\t\t// have our settings succesfully been updated?\n\t\tif ( $set_errors[0]['code'] == 'settings_updated' && isset( $_GET['settings-updated'] ) ) {\n\t\t\tfreshdesk_show_msg(\"<p>\" . $set_errors[0]['message'] . \"</p>\", 'updated');\n\t\t} else {\n\t\t\t// there maybe more than one so run a foreach loop.\n\t\t\tforeach ( $set_errors as $set_error ) {\n\t\t\t\t// set the title attribute to match the error \"setting title\" - need this in js file\n\t\t\t\tfreshdesk_show_msg(\"<p class='setting-error-message' title='\" . $set_error['setting'] . \"'>\" . $set_error['message'] . \"</p>\", 'error');\n\t\t\t}\n\t\t}\n\t}\n}\n?>\n", "=== Freshdesk Official===\nContributors: hjohnpaul, sathishfreshdesk, balakumars, shreyasns\nDonate link: \nTags: freshdesk, helpdesk, support tool\nRequires at least: 3.4\nTested up to: 4.1.5\nStable tag: 1.8\nLicense: GPLv2 or later\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\n\n\nFreshdesk Official plugin is a seamless way to add your helpdesk account to your website. Supports various useful functions.\n\n==Description==\n\nFreshdesk Official plugin enables users to achieve three important functions:\n\n- Avoid additional login to helpdesk if the user has already logged in to WP(Single Sign On).\n- Effortlessly integrate the helpdesk' s feedback widget along with solutions search to his wordpress site.\n- Allows the site admin to convert comments into helpdesk tickets.\n- Adding the comment link to ticket description.\n\n1. Single Sign On:\nUsers can now login to their helpdesk(freshdesk) support portal using Wordpress authentication. The single sign on feature ensures that users who have already logged into their Wordpress site can start working in their Freshdesk support portal as well without having to log in separately. \n\n2. Feedback Pop-up Widget:\nThe plugin allows Wordpress users to have a Freshdesk feedback widget embedded in their wordpress site. The widget allows people visiting the site to provide feedback and search for answers.\n\n3. Convert Comments to Tickets on helpdesk:\nUsers with admin access to their Wordpress sites can convert comments into \u201cTickets\u201d. The marked comments are sent to the user\u2019s support portal that can be solved or responded to later.\n\n4. Adding the comment link-back in the ticket added:\n   Comments converted to tickets in freshdesk will now have the link-back url to the actual comment in the wordpress site appended in its description.\n\n== Installation ==\n* For an automatic installation through WordPress\n1. Go to the 'Add New' plugins screen in your WordPress admin area.\n2. Search for 'Freshdesk Official' plugin.\n3. Click 'Install Now' and activate the plugin.\n\n\nManual Installation:\n\n1. Download the latest version of 'Freshdesk Official'  plugin from the WordPress Plugin Directory.\n2. Extract the zip and Upload the freshdesk_support directory to your /wp-content/plugins directory\n3. Go to the plugins management page and activate the plugin\n4. You now have a new admin menu 'Freshdesk Official' in your WordPress admin menu bar. Click on it and Configure your settings as mentioned in the info comments in the screen.\n\n== Frequently Asked Questions ==\n1. Where do i find sso shared secret ?\n\n  SSO shared secret will be available in your helpdesk account's admin -> security -> sso section.\n\n2. How can login to my helpdesk using normal login screen after enabling sso ?\n\n  You can always access your help desk's normal login screen using http://yourcompany.freshdesk.com/login/normal link.\n\n3. Where can I find the feedback widget code snippet ?\n\n  Feedback widget code has to be copied from the admin -> feedback section. You can configure the alignment and kbase search hide and much more here and copy the generate code snippet.\n\n== Screenshots ==\n1. This screen shot shows the Settings Screen.\n2. This shows the comments page where a new action('Convert to ticket') added to make the comment as a ticket.\n3. This shows the comments page with 'View Ticket' option showing if the comment is already converted to ticket.\n4. This shows the comment link in the ticket description.\n\n== Changelog ==\n= 1.8 =\n  Security fix for open redirect vulnerablity. Now users are required to configure all the portal urls in the settings page.\n= 1.7 =\n  Added option to enable/disable sso.\n  Logging out of wordpress no longer logs out the Freshdesk session.\n  Added validations for the settings page.\n  Fixed the error showing up on the plugin settings page.\n= 1.6 =\n  Fix the SSO login redirect to Freshdesk and on wordpress logout, logout of Freshdesk as well.\n= 1.5 =\n  Includes fix for SSO and Vanity URL redirect.\n= 1.4 =\n  Bug fix for SSO and Vanity URL redirect.\n= 1.3 =\n Added comment link to ticket description\n= 1.2 =\n Fix for the error message(\"The plugin does not have a valid header.\") on enabling plugin \n= 1.1 =\nPrevious revision. \nBug Fix:\n - Freshdesk remote log-in failing for new users.\n - Sign-out from freshdesk does not logout wordpress session. \n= 1.0 =\nFirst Release Version.\n\n== Upgrade Notice ==\n  Security fix for open redirect vulnerablity. Now users are required to configure all the portal urls in the settings page.\n= 1.8 =\n  Security fix for open redirect vulnerablity. Now users are required to configure all the portal urls in the settings page.  \n== 1.7 ==\n  Added option to enable/disable sso.\n  Logging out of wordpress will no longer logout the Freshdesk session.\n  Added validations for the settings page.\n  Fixed the error showing up on the plugin settings page.\n== 1.6 ==\n  Fix for SSO login redirect back to Freshdesk.\n  Change logout url to Freshdesk logout url so that Freshdesk is also logged out.\n== 1.5 ==\n  Fixing problem with 1.4 getting listed as development version.\n  Includes bug fix for SSO and Vanity URL redirect.\n== 1.4 ==\n  Bug fix for SSO and Vanity URL redirect.\n  Now works with SSO and Vanity URL.\n== 1.3 ==\n Added comment link to ticket description.\n== 1.2 ==\n Fix for the error message on enabling the plugin.\n== 1.1 ==\n  Revision with bugs addressed.\n== 1.0 ==\nThis is the First release version.\n"], "filenames": ["freshdesk-ext.php", "readme.txt"], "buggy_code_start_loc": [4, 7], "buggy_code_end_loc": [318, 97], "fixing_code_start_loc": [4, 7], "fixing_code_end_loc": [354, 98], "type": "CWE-601", "message": "A vulnerability, which was classified as critical, has been found in Freshdesk Plugin 1.7 on WordPress. Affected by this issue is some unknown functionality. The manipulation leads to open redirect. The attack may be launched remotely. Upgrading to version 1.8 is able to address this issue. The name of the patch is 2aaecd4e0c7c6c1dc4e6a593163d5f7aa0fa5d5b. It is recommended to upgrade the affected component. VDB-226118 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2015-10102", "sourceIdentifier": "cna@vuldb.com", "published": "2023-04-17T18:15:07.197", "lastModified": "2023-04-26T16:36:21.973", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as critical, has been found in Freshdesk Plugin 1.7 on WordPress. Affected by this issue is some unknown functionality. The manipulation leads to open redirect. The attack may be launched remotely. Upgrading to version 1.8 is able to address this issue. The name of the patch is 2aaecd4e0c7c6c1dc4e6a593163d5f7aa0fa5d5b. It is recommended to upgrade the affected component. VDB-226118 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-601"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:freshworks:freshdesk:1.7:*:*:*:*:wordpress:*:*", "matchCriteriaId": "EC0BB0BA-A469-4E1E-91B0-2D331535141E"}]}]}], "references": [{"url": "https://github.com/wp-plugins/freshdesk-support/commit/2aaecd4e0c7c6c1dc4e6a593163d5f7aa0fa5d5b", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.226118", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.226118", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/wp-plugins/freshdesk-support/commit/2aaecd4e0c7c6c1dc4e6a593163d5f7aa0fa5d5b"}}