{"buggy_code": ["<?php\n\n/**\n * This provides for manual posting of EOBs.  It is invoked from\n * sl_eob_search.php.  For automated (X12 835) remittance posting\n * see sl_eob_process.php.\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Rod Roark <rod@sunsetsystems.com>\n * @author    Roberto Vasquez <robertogagliotta@gmail.com>\n * @author    Terry Hill <terry@lillysystems.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @author    Stephen Waite <stephen.waite@cmsvt.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2005-2020 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2018-2020 Stephen Waite <stephen.waite@cmsvt.com>\n * @copyright Copyright (c) 2019-2020 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../globals.php\");\nrequire_once(\"$srcdir/patient.inc\");\nrequire_once(\"$srcdir/forms.inc\");\nrequire_once(\"../../custom/code_types.inc.php\");\nrequire_once \"$srcdir/user.inc\";\nrequire_once(\"$srcdir/payment.inc.php\");\n\nuse OpenEMR\\Billing\\InvoiceSummary;\nuse OpenEMR\\Billing\\SLEOB;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Logging\\EventAuditLogger;\nuse OpenEMR\\Core\\Header;\n\n$debug = 0; // set to 1 for debugging mode\n$save_stay = (!empty($_REQUEST['form_save']) && ($_REQUEST['form_save'] == '1')) ? true : false;\n$from_posting = (0 + ($_REQUEST['isPosting'] ?? null)) ? 1 : 0;\n$g_posting_adj_disable = $GLOBALS['posting_adj_disable'] ? 'checked' : '';\nif ($from_posting) {\n    $posting_adj_disable = prevSetting('sl_eob_search.', 'posting_adj_disable', 'posting_adj_disable', $g_posting_adj_disable);\n} else {\n    $posting_adj_disable = $g_posting_adj_disable;\n}\n\n// If we permit deletion of transactions.  Might change this later.\n$ALLOW_DELETE = true;\n\n$info_msg = \"\";\n\n// Format money for display.\n//\nfunction bucks($amount)\n{\n    if ($amount) {\n        return sprintf(\"%.2f\", $amount);\n    }\n}\n\n?>\n<html>\n<head>\n    <?php Header::setupHeader(['datetime-picker', 'opener', 'no_dialog']); ?>\n    <title><?php echo xlt('EOB Posting - Invoice') ?></title>\n    <script>\n\n        const adjDisable = <?php echo js_escape($posting_adj_disable); ?>;\n        // An insurance radio button is selected.\n        function setins(istr) {\n            return true;\n        }\n\n        function goEncounterSummary(pid) {\n            if(pid) {\n                if(typeof opener.toEncSummary  === 'function') {\n                    opener.toEncSummary(pid);\n                }\n            }\n            doClose();\n        }\n\n        function doClose() {\n            window.close();\n        }\n\n        // Compute an adjustment that writes off the balance:\n        function writeoff(code) {\n            const f = document.forms[0];\n            const belement = f['form_line[' + code + '][bal]'];\n            const pelement = f['form_line[' + code + '][pay]'];\n            const aelement = f['form_line[' + code + '][adj]'];\n            const relement = f['form_line[' + code + '][reason]'];\n            const tmp = belement.value - pelement.value;\n            aelement.value = Number(tmp).toFixed(2);\n            if (aelement.value && !relement.value) {\n                relement.selectedIndex = 1;\n            }\n            return false;\n        }\n\n        // Onsubmit handler.  A good excuse to write some JavaScript.\n        function validate(f) {\n            let delcount = 0;\n            let allempty = true;\n\n            for (let i = 0; i < f.elements.length; ++i) {\n                let ename = f.elements[i].name;\n                // Count deletes.\n                if (ename.substring(0, 9) == 'form_del[') {\n                    if (f.elements[i].checked) {\n                        ++delcount;\n                    }\n                    continue;\n                }\n                let pfxlen = ename.indexOf('[pay]');\n                if (pfxlen < 0) {\n                    continue\n                };\n                let pfx = ename.substring(0, pfxlen);\n                let code = pfx.substring(pfx.indexOf('[') + 1, pfxlen - 1);\n                let cPay = parseFloat(f[pfx + '[pay]'].value).toFixed(2);\n                let cAdjust = parseFloat(f[pfx + '[adj]'].value).toFixed(2);\n\n                if ((cPay !== 0) || cAdjust !== 0) {\n                    allempty = false;\n                }\n                if(adjDisable) {\n                    if ((cAdjust == 0 && ins_done.value == 'changed')) {\n                        allempty = false;\n                    }\n                }\n                if ((cPay !== 0) && isNaN(parseFloat(f[pfx + '[pay]'].value))) {\n                    let message = <?php echo xlj('Payment value for code') ?> + \" \" + code + \" \" + <?php echo xlj('is not a number') ?>;\n                    (async (message, time) => {\n                        await asyncAlertMsg(message, time, 'danger', 'lg');\n                    })(message, 3000)\n                    .then(res => { });\n                    return false;\n                }\n                if ((cAdjust !== 0) && isNaN(parseFloat(f[pfx + '[adj]'].value))) {\n                    let message = <?php echo xlj('Adjustment value for code') ?> + \" \" + code  + \" \" + <?php echo xlj('is not a number') ?>;\n                    (async (message, time) => {\n                        await asyncAlertMsg(message, time, 'danger', 'lg');\n                    })(message, 3000)\n                    .then(res => { });\n                    return false;\n                }\n                if ((cAdjust !== 0) && !f[pfx + '[reason]'].value && !adjDisable) {\n                    let message = <?php echo xlj('Please select an adjustment reason for code') ?> + \" \" + code;\n                    (async (message, time) => {\n                        await asyncAlertMsg(message, time, 'danger', 'lg');\n                    })(message, 3000)\n                    .then(res => { });\n                    return false;\n                }\n            // TBD: validate the date format\n            }\n            // Check if save is clicked with nothing to post.\n            if (allempty && delcount === 0) {\n                let message = <?php echo xlj('Nothing to Post! Please review entries or use Cancel to exit transaction') ?>;\n                (async (message, time) => {\n                    await asyncAlertMsg(message, time, 'danger', 'lg');\n                })(message, 3000)\n                .then(res => { });\n                return false;\n            }\n            // Demand confirmation if deleting anything.\n            if (delcount > 0) {\n                if (!confirm(<?php echo xlj('Really delete'); ?> + ' ' + delcount +\n                    ' ' + <?php echo xlj('transactions'); ?> + '?' +\n                    ' ' + <?php echo xlj('This action will be logged'); ?> + '!')\n                ) return false;\n            }\n            return true;\n        }\n\n        // Get current date\n        function getFormattedToday() {\n            let today = new Date();\n            let dd = today.getDate();\n            let mm = today.getMonth() + 1; //January is 0!\n            let yyyy = today.getFullYear();\n            if (dd < 10) {\n                dd = '0' + dd;\n            }\n            if (mm < 10) {\n                mm = '0' + mm;\n            }\n            return (yyyy + '-' + mm + '-' + dd);\n        }\n\n        // Update Payment Fields\n        function updateFields(payField, adjField, balField, coPayField, isFirstProcCode) {\n            let payAmount = 0.0;\n            let adjAmount = 0.0;\n            let balAmount = 0.0;\n            let coPayAmount = 0.0;\n\n            // coPayFiled will be null if there is no co-pay entry in the fee sheet\n            if (coPayField) {\n                coPayAmount = coPayField.value;\n            }\n\n            // if balance field is 0.00, its value comes back as null, so check for nul-ness first\n            if (balField) {\n                balAmount = (balField.value) ? balField.value : 0;\n            }\n\n            if (payField) {\n                payAmount = (payField.value) ? payField.value : 0;\n            }\n\n            // alert('balance = >' + balAmount +'<  payAmount = ' + payAmount + '  copay = ' + coPayAmount + '  isFirstProcCode = ' + isFirstProcCode);\n\n            // subtract the co-pay only from the first procedure code\n            if (isFirstProcCode == 1) {\n                balAmount = parseFloat(balAmount) + parseFloat(coPayAmount);\n            }\n\n            if (adjDisable) {\n                return;\n            }\n\n            adjAmount = balAmount - payAmount;\n            // Assign rounded adjustment value back to TextField\n            adjField.value = adjAmount = Math.round(adjAmount * 100) / 100;\n        }\n\n        $(function () {\n            $('.datepicker').datetimepicker({\n                <?php $datetimepicker_timepicker = false; ?>\n                <?php $datetimepicker_showseconds = false; ?>\n                <?php $datetimepicker_formatInput = true; ?>\n                <?php require($GLOBALS['srcdir'] . '/js/xl/jquery-datetimepicker-2-5-4.js.php'); ?>\n                <?php // can add any additional javascript settings to datetimepicker here; need to prepend first setting with a comma ?>\n            });\n        });\n\n        $(\"#ins_done\").on(\"change\", function() {\n            $(\"#ins_done\").val('changed');\n        });\n\n    </script>\n    <style>\n        @media only screen and (max-width: 768px) {\n            [class*=\"col-\"] {\n                width: 100%;\n                text-align: left !Important;\n            }\n        }\n\n        .table {\n            margin: auto;\n            width: 99%;\n        }\n\n        .table > tbody > tr > td {\n            border-top: none;\n        }\n\n        .last_detail {\n            border-bottom: 1px var(--black) solid;\n            margin-top: 2px;\n        }\n\n        @media (min-width: 992px) {\n            .modal-lg {\n                width: 1000px !Important;\n            }\n        }\n    </style>\n</head>\n<body>\n<?php\n$trans_id = 0 + $_GET['id'];\nif (!$trans_id) {\n    die(xlt(\"You cannot access this page directly.\"));\n}\n\n// A/R case, $trans_id matches form_encounter.id.\n$ferow = sqlQuery(\"SELECT e.*, p.fname, p.mname, p.lname FROM form_encounter AS e, patient_data AS p WHERE e.id = ? AND p.pid = e.pid\", array($trans_id));\nif (empty($ferow)) {\n    die(\"There is no encounter with form_encounter.id = '\" . text($trans_id) . \"'.\");\n}\n$patient_id = 0 + $ferow['pid'];\n$encounter_id = 0 + $ferow['encounter'];\n$svcdate = substr($ferow['date'], 0, 10);\n$form_payer_id = (!empty($_POST['form_payer_id'])) ? (0 + $_POST['form_payer_id']) : 0;\n$form_reference = $_POST['form_reference'] ?? null;\n$form_check_date   = fixDate(($_POST['form_check_date'] ?? ''), date('Y-m-d'));\n$form_deposit_date = fixDate(($_POST['form_deposit_date'] ?? ''), $form_check_date);\n$form_pay_total = (!empty($_POST['form_pay_total'])) ? (0 + $_POST['form_pay_total']) : 0;\n\n$payer_type = 0;\nif (preg_match('/^Ins(\\d)/i', ($_POST['form_insurance'] ?? ''), $matches)) {\n    $payer_type = $matches[1];\n}\n\nif (!empty($_POST['form_save']) || !empty($_POST['form_cancel']) || !empty($_POST['isLastClosed'])) {\n    if (!empty($_POST['form_save'])) {\n        if (!CsrfUtils::verifyCsrfToken($_POST[\"csrf_token_form\"])) {\n            CsrfUtils::csrfNotVerified();\n        }\n\n        if ($debug) {\n            echo \"<p><b>\" . xlt(\"This module is in test mode. The database will not be changed.\") . \"</b><p>\\n\";\n        }\n\n        $session_id = SLEOB::arGetSession($form_payer_id, $form_reference, $form_check_date, $form_deposit_date, $form_pay_total);\n// The sl_eob_search page needs its invoice links modified to invoke\n// javascript to load form parms for all the above and submit.\n// At the same time that page would be modified to work off the\n// openemr database exclusively.\n// And back to the sl_eob_invoice page, I think we may want to move\n// the source input fields from row level to header level.\n\n// Handle deletes. row_delete() is borrowed from deleter.php.\n        if ($ALLOW_DELETE && !$debug) {\n            if (!empty($_POST['form_del']) && is_array($_POST['form_del'])) {\n                foreach ($_POST['form_del'] as $arseq => $dummy) {\n                    row_modify(\n                        \"ar_activity\",\n                        \"deleted = NOW()\",\n                        \"pid = '\" . add_escape_custom($patient_id) .\n                        \"' AND encounter = '\" . add_escape_custom($encounter_id) .\n                        \"' AND sequence_no = '\" . add_escape_custom($arseq) .\n                        \"' AND deleted IS NULL\"\n                    );\n                }\n            }\n        }\n\n        $paytotal = 0;\n        foreach ($_POST['form_line'] as $code => $cdata) {\n            $thispay = trim($cdata['pay']);\n            $thisadj = trim($cdata['adj']);\n            $thisins = trim($cdata['ins']);\n            $thiscodetype = trim($cdata['code_type']);\n            $reason = $cdata['reason'];\n\n// Get the adjustment reason type.  Possible values are:\n// 1 = Charge adjustment\n// 2 = Coinsurance\n// 3 = Deductible\n// 4 = Other pt resp\n// 5 = Comment\n            $reason_type = '1';\n            if ($reason) {\n                $tmp = sqlQuery(\"SELECT option_value FROM list_options WHERE list_id = 'adjreason' AND activity = 1 AND option_id = ?\", array($reason));\n                if (empty($tmp['option_value'])) {\n// This should not happen but if it does, apply old logic.\n                    if (preg_match(\"/To copay/\", $reason)) {\n                        $reason_type = 2;\n                    } elseif (preg_match(\"/To ded'ble/\", $reason)) {\n                        $reason_type = 3;\n                    }\n                    $info_msg .= xl(\"No adjustment reason type found for\") . \" \\\"$reason\\\". \";\n                } else {\n                    $reason_type = $tmp['option_value'];\n                }\n            }\n\n            if (!$thisins) {\n                $thisins = 0;\n            }\n\n            if (0.0 + $thispay) {\n                SLEOB::arPostPayment($patient_id, $encounter_id, $session_id, $thispay, $code, $payer_type, '', $debug, '', $thiscodetype);\n                $paytotal += $thispay;\n            }\n\n// Be sure to record adjustment reasons, even for zero adjustments if\n// they happen to be comments.\n            if (\n                (0.0 + $thisadj) ||\n                ($reason && $reason_type == 5) ||\n                ($reason && ($reason_type > 1 && $reason_type < 6))\n            ) {\n// \"To copay\" and \"To ded'ble\" need to become a comment in a zero\n// adjustment, formatted just like sl_eob_process.php.\n                if ($reason_type == '2') {\n                    $reason = $_POST['form_insurance'] . \" coins: $thisadj\";\n                    $thisadj = 0;\n                } elseif ($reason_type == '3') {\n                    $reason = $_POST['form_insurance'] . \" dedbl: $thisadj\";\n                    $thisadj = 0;\n                } elseif ($reason_type == '4') {\n                    $reason = $_POST['form_insurance'] . \" ptresp: $thisadj $reason\";\n                    $thisadj = 0;\n                } elseif ($reason_type == '5') {\n                    $reason = $_POST['form_insurance'] . \" note: $thisadj $reason\";\n                    $thisadj = 0;\n                } else {\n// An adjustment reason including \"Ins\" is assumed to be assigned by\n// insurance, and in that case we identify which one by appending\n// Ins1, Ins2 or Ins3.\n                    if (strpos(strtolower($reason), 'ins') != false) {\n                        $reason .= ' ' . $_POST['form_insurance'];\n                    }\n                }\n                SLEOB::arPostAdjustment($patient_id, $encounter_id, $session_id, $thisadj, $code, $payer_type, $reason, $debug, '', $thiscodetype);\n            }\n        }\n\n// Maintain which insurances are marked as finished.\n\n        $form_done = 0 + $_POST['form_done'];\n        $form_stmt_count = 0 + $_POST['form_stmt_count'];\n        sqlStatement(\"UPDATE form_encounter SET last_level_closed = ?, stmt_count = ? WHERE pid = ? AND encounter = ?\", array($form_done, $form_stmt_count, $patient_id, $encounter_id));\n\n        if (!empty($_POST['form_secondary'])) {\n            SLEOB::arSetupSecondary($patient_id, $encounter_id, $debug);\n        }\n        echo \"<script>\\n\";\n        echo \" if (opener.document.forms[0] != undefined) {\\n\";\n        echo \"   if (opener.document.forms[0].form_amount) {\\n\";\n        echo \"     var tmp = opener.document.forms[0].form_amount.value - \" . attr($paytotal) . \";\\n\";\n        echo \"     opener.document.forms[0].form_amount.value = Number(tmp).toFixed(2);\\n\";\n        echo \"   }\\n\";\n        echo \" }\\n\";\n    } else {\n        echo \"<script>\\n\";\n    }\n    if ($info_msg) {\n        echo \" alert(\" . js_escape($info_msg) . \");\\n\";\n    }\n    if (!$debug && !$save_stay && !$_POST['isLastClosed']) {\n        echo \"doClose();\\n\";\n    }\n    if (!$debug && ($save_stay || $_POST['isLastClosed'])) {\n        if ($_POST['isLastClosed']) {\n            // save last closed level\n            $form_done = 0 + $_POST['form_done'];\n            $form_stmt_count = 0 + $_POST['form_stmt_count'];\n            sqlStatement(\"UPDATE form_encounter SET last_level_closed = ?, stmt_count = ? WHERE pid = ? AND encounter = ?\", array($form_done, $form_stmt_count, $patient_id, $encounter_id));\n        }\n        // will reload page w/o reposting\n        echo \"location.replace(location)\\n\";\n    }\n    echo \"</script>\\n\";\n    if (!$save_stay && !$_POST['isLastClosed']) {\n        exit();\n    }\n}\n\n// Get invoice charge details.\n$codes = InvoiceSummary::arGetInvoiceSummary($patient_id, $encounter_id, true);\n$pdrow = sqlQuery(\"select billing_note from patient_data where pid = ? limit 1\", array($patient_id));\n?>\n\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <h2><?php echo xlt('EOB Invoice'); ?></h2>\n    </div>\n    <div class=\"container-fluid\">\n        <form class=\"form\" action='sl_eob_invoice.php?id=<?php echo attr_url($trans_id); ?>' method='post' onsubmit='return validate(this)'>\n            <input type=\"hidden\" name=\"csrf_token_form\" value=\"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\"/>\n            <input type=\"hidden\" name=\"isPosting\" value=\"<?php echo attr($from_posting); ?>\"/>\n            <input type=\"hidden\" name=\"isLastClosed\" value=\"\" />\n            <fieldset>\n                <legend><?php echo xlt('Invoice Actions'); ?></legend>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_name\"><?php echo xlt('Patient'); ?>:</label>\n                        <input type=\"text\" class=\"form-control\" id='form_name'\n                               name='form_name'\n                               value=\"<?php echo attr($ferow['fname']) . ' ' . attr($ferow['mname']) . ' ' . attr($ferow['lname']); ?>\"\n                               disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_provider\"><?php echo xlt('Provider'); ?>:</label>\n                        <?php\n                        $tmp = sqlQuery(\"SELECT fname, mname, lname \" .\n                            \"FROM users WHERE id = ?\", array($ferow['provider_id']));\n                        $provider = text($tmp['fname']) . ' ' . text($tmp['mname']) . ' ' . text($tmp['lname']);\n                        $tmp = sqlQuery(\"SELECT bill_date FROM billing WHERE \" .\n                            \"pid = ? AND encounter = ? AND \" .\n                            \"activity = 1 ORDER BY fee DESC, id ASC LIMIT 1\", array($patient_id, $encounter_id));\n                        $billdate = substr(($tmp['bill_date'] . \"Not Billed\"), 0, 10);\n                        ?>\n                        <input type=\"text\" class=\"form-control\" id='form_provider'\n                               name='form_provider' value=\"<?php echo attr($provider); ?>\" disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_invoice\"><?php echo xlt('Invoice'); ?>:</label>\n                        <input type=\"text\" class=\"form-control\" id='form_provider'\n                               name='form_provider' value='<?php echo attr($patient_id) . \".\" . attr($encounter_id); ?>'\n                               disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"svc_date\"><?php echo xlt('Svc Date'); ?>:</label>\n                        <input type=\"text\" class=\"form-control\" id='svc_date' name='form_provider'\n                               value='<?php echo attr($svcdate); ?>' disabled />\n                    </div>\n                    <div class=\"card bg-light col-lg-4\">\n                        <div class=\"card-title mx-auto\"><?php echo xlt('Insurance'); ?></div>\n                        <?php\n                        for ($i = 1; $i <= 3; ++$i) {\n                            $payerid = SLEOB::arGetPayerID($patient_id, $svcdate, $i);\n                            if ($payerid) {\n                                $tmp = sqlQuery(\"SELECT name FROM insurance_companies WHERE id = ?\", array($payerid));\n                                echo \"$i: \" . $tmp['name'] . \"<br />\";\n                            }\n                        }\n                        ?>\n                    </div>\n                </div>\n                <div class=\"form-group mt-3\">\n                     <textarea name=\"insurance_name\" id=\"insurance_name\" class=\"form-control\" cols=\"5\" rows=\"2\" readonly><?php echo attr($insurance ?? ''); ?></textarea>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_stmt_count\"><?php echo xlt('Statements Sent'); ?>:</label>\n                        <input type='text' name='form_stmt_count' id='form_stmt_count' class=\"form-control\" value='<?php echo attr((0 + $ferow['stmt_count'])); ?>' />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_last_bill\"><?php echo xlt('Last Bill Date'); ?>:</label>\n                        <input type='text' name=\"form_last_bill\" id='form_last_bill' class=\"form-control\"\n                               value ='<?php echo attr($billdate); ?>' disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_reference\"><?php echo xlt('Check/EOB No.'); ?>:</label>\n                        <input type='text' name='form_reference' id='form_reference' class=\"form-control\" value='' />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_check_date\"><?php echo xlt('Check/EOB Date'); ?>:</label>\n                        <input type='text' name='form_check_date' id='form_check_date' class='form-control datepicker' value='' />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_deposit_date\"><?php echo xlt('Deposit Date'); ?>:</label>\n                        <input type='text' name='form_deposit_date' id='form_deposit_date' class='form-control datepicker' value='' />\n                        <input type='hidden' name='form_payer_id' value='' />\n                        <input type='hidden' name='form_orig_reference' value='' />\n                        <input type='hidden' name='form_orig_check_date' value='' />\n                        <input type='hidden' name='form_orig_deposit_date' value='' />\n                        <input type='hidden' name='form_pay_total' value='' />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"type_code\"><?php echo xlt('Now posting for'); ?>:</label>\n                        <div class=\"pl-3\">\n                            <?php\n                                $last_level_closed = 0 + $ferow['last_level_closed'];\n                            ?>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 0 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Ins1\")' type='radio'\n                                    value='Ins1' /><?php echo xlt('Ins1') ?>\n                            </label>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 1 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Ins2\")' type='radio'\n                                    value='Ins2' /><?php echo xlt('Ins2') ?>\n                            </label>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 2 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Ins3\")' type='radio'\n                                    value='Ins3' /><?php echo xlt('Ins3') ?>\n                            </label>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 3 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Pt\")' type='radio'\n                                    value='Pt' /><?php echo xlt('Patient') ?>\n                            </label>\n                            <?php\n                            // TBD: I think the following is unused and can be removed.\n                            ?>\n                            <input name='form_eobs' type='hidden' value='<?php echo attr($arrow['shipvia'] ?? '') ?>'/>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-lg\" id='ins_done'>\n                        <label class=\"col-form-label\" for=\"\"><?php echo xlt('Done with'); ?>:</label>\n                        <a class=\"btn btn-save bg-light text-primary\"\n                            onclick=\"document.forms[0].isLastClosed.value='3'; document.forms[0].submit()\"><?php echo xlt(\"Save Level\"); ?>\n                        </a>\n                        <div class=\"pl-3\">\n                            <?php\n                            // Write a checkbox for each insurance.  It is to be checked when\n                            // we no longer expect any payments from that company for the claim.\n                            $last_level_closed = 0 + $ferow['last_level_closed'];\n                            foreach (array(0 => 'None', 1 => 'Ins1', 2 => 'Ins2', 3 => 'Ins3') as $key => $value) {\n                                if ($key && !SLEOB::arGetPayerID($patient_id, $svcdate, $key)) {\n                                    continue;\n                                }\n                                $checked = ($last_level_closed == $key) ? \" checked\" : \"\";\n                                echo \"<label class='radio-inline'>\";\n                                echo \"<input type='radio' name='form_done' value='\" . attr($key) . \"'$checked />\" . text($value);\n                                echo \"</label>\";\n                            }\n                            ?>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"\"><?php echo xlt('Secondary billing'); ?>:</label>\n                        <div class=\"pl-3\">\n                            <label class=\"checkbox-inline\">\n                                <input name=\"form_secondary\" type=\"checkbox\" value=\"1\" /><?php echo xlt('Needs secondary billing') ?>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n            <fieldset>\n                <legend><?php echo xlt('Invoice Details'); ?></legend>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-sm\">\n                        <thead>\n                            <tr>\n                                <th><?php echo xlt('Code') ?></th>\n                                <th class=\"text-right\"><?php echo xlt('Charge') ?></th>\n                                <th class=\"text-right\"><?php echo xlt('Balance') ?>&nbsp;</th>\n                                <th><?php echo xlt('By/Source') ?></th>\n                                <th><?php echo xlt('Date') ?></th>\n                                <th><?php echo xlt('Pay') ?></th>\n                                <th><?php echo xlt('Adjust') ?></th>\n                                <th>&nbsp;</th>\n                                <th><?php echo xlt('Reason') ?></th>\n                                <?php\n                                if ($ALLOW_DELETE) { ?>\n                                    <th><?php echo xlt('Del') ?></th>\n                                    <?php\n                                } ?>\n                            </tr>\n                        </thead>\n                        <?php\n                        $firstProcCodeIndex = -1;\n                        $encount = 0;\n                        foreach ($codes as $code => $cdata) {\n                            ++$encount;\n                            $dispcode = $code;\n\n                            // remember the index of the first entry whose code is not \"CO-PAY\", i.e. it's a legitimate proc code\n                            if ($firstProcCodeIndex == -1 && strcmp($code, \"CO-PAY\") != 0) {\n                                $firstProcCodeIndex = $encount;\n                            }\n\n                            // this sorts the details more or less chronologically:\n                            ksort($cdata['dtl']);\n                            foreach ($cdata['dtl'] as $dkey => $ddata) {\n                                $ddate = substr($dkey, 0, 10);\n                                if (preg_match('/^(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)\\s*$/', $ddate, $matches)) {\n                                    $ddate = $matches[1] . '-' . $matches[2] . '-' . $matches[3];\n                                }\n                                $tmpchg = \"\";\n                                $tmpadj = \"\";\n                                if (!empty($ddata['chg']) && ($ddata['chg'] != 0)) {\n                                    if (isset($ddata['rsn'])) {\n                                        $tmpadj = 0 - $ddata['chg'];\n                                    } else {\n                                        $tmpchg = $ddata['chg'];\n                                    }\n                                }\n                                ?>\n                                <tr>\n                                    <td class=\"detail\" style=\"background:<?php echo $dispcode ? 'lightyellow' : ''; ?>\"><?php echo text($dispcode); $dispcode = \"\" ?></td>\n                                    <td class=\"detail\"><?php echo text(bucks($tmpchg)); ?></td>\n                                    <td class=\"detail\">&nbsp;</td>\n                                    <td class=\"detail\">\n                                        <?php\n                                        if (isset($ddata['plv'])) {\n                                            if (!$ddata['plv']) {\n                                                echo 'Pt/';\n                                            } else {\n                                                echo 'Ins' . text($ddata['plv']) . '/';\n                                            }\n                                        }\n                                        echo text($ddata['src'] ?? '');\n                                        ?>\n                                    </td>\n                                    <td class=\"detail\"><?php echo text($ddate); ?></td>\n                                    <td class=\"detail\"><?php echo text(bucks($ddata['pmt'] ?? '')); ?></td>\n                                    <td class=\"detail\"><?php echo text(bucks($tmpadj)); ?></td>\n                                    <td class=\"detail\">&nbsp;</td>\n                                    <td class=\"detail\"><?php echo text($ddata['rsn'] ?? ''); ?></td>\n                                    <?php\n                                    if ($ALLOW_DELETE) { ?>\n                                        <td class=\"detail\">\n                                            <?php\n                                            if (!empty($ddata['arseq'])) { ?>\n                                                <input name=\"form_del[<?php echo attr($ddata['arseq']); ?>]\"\n                                                       type=\"checkbox\" />\n                                                <?php\n                                            } else {\n                                                ?> &nbsp;\n                                                <?php\n                                            } ?>\n                                        </td>\n                                    <?php } ?>\n                                </tr>\n                            <?php } // end of prior detail line ?>\n                            <tr>\n                                <td class=\"last_detail\"><?php echo text($dispcode);\n                                    $dispcode = \"\" ?>\n                                </td>\n                                <td class=\"last_detail\">&nbsp;</td>\n                                <td class=\"last_detail\">\n                                    <input name=\"form_line[<?php echo attr($code); ?>][bal]\" type=\"hidden\"\n                                           value=\"<?php echo attr(bucks($cdata['bal'])); ?>\" />\n                                    <input name=\"form_line[<?php echo attr($code); ?>][ins]\" type=\"hidden\"\n                                           value=\"<?php echo attr($cdata['ins'] ?? ''); ?>\" />\n                                    <input name=\"form_line[<?php echo attr($code); ?>][code_type]\" type=\"hidden\"\n                                           value=\"<?php echo attr($cdata['code_type']); ?>\" /> <?php echo text(sprintf(\"%.2f\", $cdata['bal'])); ?>\n                                    &nbsp;\n                                </td>\n                                <td class=\"last_detail\"></td>\n                                <td class=\"last_detail\"></td>\n                                <td class=\"last_detail\">\n                                    <input name=\"form_line[<?php echo attr($code); ?>][pay]\"\n                                           onkeyup=\"updateFields(document.forms[0]['form_line[<?php echo attr($code); ?>][pay]'], document.forms[0]['form_line[<?php echo attr($code); ?>][adj]'], document.forms[0]['form_line[<?php echo attr($code); ?>][bal]'], document.forms[0]['form_line[CO-PAY][bal]'], <?php echo ($firstProcCodeIndex == $encount) ? 1 : 0 ?>)\"\n                                           onfocus=\"this.select()\" autofocus size=\"10\" type=\"text\" class=\"form-control\"\n                                           value=\"0.00\" />\n                                </td>\n                                <td class=\"last_detail\">\n                                    <input name=\"form_line[<?php echo attr($code); ?>][adj]\" size=\"10\" type=\"text\"\n                                           class=\"form-control\"\n                                           value='<?php echo attr((!empty($totalAdjAmount)) ? $totalAdjAmount : '0.00'); ?>'\n                                           onclick=\"this.select()\" />\n                                </td>\n                                <td class=\"last_detail text-center\">\n                                    <a href=\"#\" class=\"text-decoration-none\" onclick=\"return writeoff(<?php echo attr_js($code); ?>)\">WO</a>\n                                </td>\n                                <td class=\"last_detail\">\n                                    <select class=\"form-control\" name=\"form_line[<?php echo attr($code); ?>][reason]\">\n                                        <?php\n                                        // Adjustment reasons are now taken from the list_options table.\n                                        echo \"    <option value=''></option>\\n\";\n                                        $ores = sqlStatement(\"SELECT option_id, title, is_default FROM list_options \" .\n                                            \"WHERE list_id = 'adjreason' AND activity = 1 ORDER BY seq, title\");\n                                        while ($orow = sqlFetchArray($ores)) {\n                                            echo \"    <option value='\" . attr($orow['option_id']) . \"'\";\n                                            if ($orow['is_default']) {\n                                                echo \" selected\";\n                                            }\n                                            echo \">\" . text($orow['title']) . \"</option>\\n\";\n                                        }\n                                        ?>\n                                    </select>\n                                    <?php\n                                    // TBD: Maybe a comment field would be good here, for appending\n                                    // to the reason.\n                                    ?>\n                                </td>\n                                <?php if ($ALLOW_DELETE) { ?>\n                                    <td class=\"last_detail\">&nbsp;</td>\n                                <?php } ?>\n                            </tr>\n                        <?php } // end of code ?>\n                    </table>\n                </div>\n            </fieldset>\n            <?php //can change position of buttons by creating a class 'position-override' and adding rule text-align:center or right as the case may be in individual stylesheets ?>\n            <div class=\"form-group col-lg clearfix\">\n                <div class=\"col-sm-12 text-left position-override\" id=\"search-btn\">\n                    <div class=\"btn-group\" role=\"group\">\n                        <!-- @todo leave as I may still use sjp 08/2020 -->\n                        <!--<button type='submit' class=\"btn btn-primary btn-save\" name='form_save' id=\"btn-save-stay\"\n                            onclick=\"this.value='1';\"><?php /*echo xlt(\"Save Current\"); */?></button>-->\n                        <button type='submit' class=\"btn btn-primary btn-save\" name='form_save' id=\"btn-save\"\n                            onclick=\"this.value='2';\"><?php echo xlt(\"Save\"); ?></button>\n                        <button type='button' class=\"btn btn-secondary btn-cancel\" name='form_cancel'\n                            id=\"btn-cancel\" onclick='doClose()'><?php echo xlt(\"Close\"); ?></button>\n                    </div>\n                    <?php if ($from_posting) { ?>\n                        <button type='button' class=\"btn btn-secondary btn-view float-right\" name='form_goto' id=\"btn-goto\"\n                            onclick=\"goEncounterSummary(<?php echo attr_js($patient_id) ?>)\"><?php echo xlt(\"Past Encounters\"); ?></button>\n                    <?php } ?>\n                </div>\n            </div>\n        </form>\n    </div>\n</div><!--End of container div-->\n<?php if ($from_posting) { ?>\n<script>\n    var f1 = opener.document.forms[0];\n    var f2 = document.forms[0];\n    if (f1.form_source) {\n        <?php\n        // These support creation and lookup of ar_session table entries:\n        echo \"  f2.form_reference.value         = f1.form_source.value;\\n\";\n        echo \"  f2.form_check_date.value        = f1.form_paydate.value;\\n\";\n        echo \"  //f2.form_deposit_date.value      = f1.form_deposit_date.value;\\n\";\n        echo \"  if (f1.form_deposit_date.value != '')\\n\";\n        echo \"     f2.form_deposit_date.value      = f1.form_deposit_date.value;\\n\";\n        echo \"  else\\n\";\n        echo \"     f2.form_deposit_date.value      = getFormattedToday();\\n\";\n        echo \"  f2.form_payer_id.value          = f1.form_payer_id.value;\\n\";\n        echo \"  f2.form_pay_total.value         = f1.form_amount.value;\\n\";\n        echo \"  f2.form_orig_reference.value    = f1.form_source.value;\\n\";\n        echo \"  f2.form_orig_check_date.value   = f1.form_paydate.value;\\n\";\n        echo \"  f2.form_orig_deposit_date.value = f1.form_deposit_date.value;\\n\";\n\n        // While I'm thinking about it, some notes about eob sessions.\n        // If they do not have all of the session key fields in the search\n        // page, then show a warning at the top of the invoice page.\n        // Also when they go to save the invoice page and a session key\n        // field has changed, alert them to that and allow a cancel.\n\n        // Another point... when posting EOBs, the incoming payer ID might\n        // not match the payer ID for the patient's insurance.  This is\n        // because the same payer might be entered more than once into the\n        // insurance_companies table.  I don't think it matters much.\n        ?>\n    }\n    setins(\"Ins1\");\n</script>\n<?php } ?>\n</body>\n</html>\n", "/**\n * Javascript utility functions for openemr\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2019 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2019-2020 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n/* We should really try to keep this library jQuery free ie javaScript only! */\n\n// Translation function\n// This calls the i18next.t function that has been set up in main.php\nfunction xl(string) {\n    if (typeof top.i18next.t == 'function') {\n        return top.i18next.t(string);\n    } else {\n        // Unable to find the i18next.t function, so log error\n        console.log(\"xl function is unable to translate since can not find the i18next.t function\");\n        return string;\n    }\n}\n\n// html escaping functions - special case when sending js string to html (see codebase for examples)\n//   jsText (equivalent to text() )\n//   jsAttr (equivalent to attr() )\nconst htmlEscapesText = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nconst htmlEscapesAttr = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;'\n};\nconst htmlEscaperText = /[&<>]/g;\nconst htmlEscaperAttr = /[&<>\"']/g;\njsText = function(string) {\n    return ('' + string).replace(htmlEscaperText, function(match) {\n        return htmlEscapesText[match];\n    });\n};\njsAttr = function(string) {\n    return ('' + string).replace(htmlEscaperAttr, function(match) {\n        return htmlEscapesAttr[match];\n    });\n};\n\n// another useful function\nasync function syncFetchFile(fileUrl, type = 'text') {\n    let content = '';\n    let response = await fetch(fileUrl);\n    if (type == 'text') {\n        content = await response.text();\n    }\n    if (type == 'json') {\n        content = await response.json();\n    }\n\n    return content;\n}\n\n/*\n* function includeScript(srcUrl, type)\n*\n* @summary Dynamically include JS Scripts or Css.\n*\n* @param {string} url file location.\n* @param {string} 'script' | 'link'.\n*\n* */\nfunction includeScript(srcUrl, type) {\n    return new Promise(function (resolve, reject) {\n        if (type == 'script') {\n            let newScriptElement = document.createElement('script');\n            newScriptElement.src = srcUrl;\n            newScriptElement.onload = () => resolve(newScriptElement);\n            newScriptElement.onerror = () => reject(new Error(`Script load error for ${srcUrl}`));\n\n            document.head.append(newScriptElement);\n            console.log('Needed to load:[' + srcUrl + '] For: [' + location + ']');\n        }\n        if (type === \"link\") {\n            let newScriptElement = document.createElement(\"link\")\n            newScriptElement.type = \"text/css\";\n            newScriptElement.rel = \"stylesheet\";\n            newScriptElement.href = srcUrl;\n            newScriptElement.onload = () => resolve(newScriptElement);\n            newScriptElement.onerror = () => reject(new Error(`Link load error for ${srcUrl}`));\n\n            document.head.append(newScriptElement);\n            console.log('Needed to load:[' + srcUrl + '] For: [' + location + ']');\n        }\n    });\n}\n\n/*\n*  This is where we want to decide what we need for the instance\n*  We only want to load any needed dependencies.\n*\n*/\ndocument.addEventListener('DOMContentLoaded', function () {\n    let isNeeded = document.querySelectorAll('.drag-action').length;\n    let isNeededResize = document.querySelectorAll('.resize-action').length;\n    if (isNeeded || isNeededResize) {\n        initDragResize();\n    }\n\n}, false);\n\n/*\n* @function initDragResize(dragContext, resizeContext)\n* @summary call this function from scripts you may want to provide a different\n*  context other than the page context of this utility\n*\n* @param {object} context of element to apply drag.\n* @param {object} optional context of element. document is default.\n*/\nfunction initDragResize(dragContext, resizeContext = document) {\n    let isLoaded = typeof window.interact;\n    if (isLoaded !== 'function') {\n        (async (utilfn) => {\n            await includeScript(utilfn, 'script');\n        })(top.webroot_url + '/public/assets/interactjs/dist/interact.js')\n        .then(() => {\n            initInteractors(dragContext, resizeContext);\n        });\n    } else {\n        initInteractors(dragContext, resizeContext);\n    }\n}\n\n/* function to init all page drag/resize elements.*/\nfunction initInteractors(dragContext = document, resizeContext = '') {\n    resizeContext = resizeContext ? resizeContext : dragContext;\n\n    /* Draggable */\n    // reset\n    interact(\".drag-action\", {context: dragContext}).unset();\n    // init\n    interact(\".drag-action\", {context: dragContext}).draggable({\n        enabled: true,\n        inertia: true,\n        modifiers: [\n            interact.modifiers.snap({\n                targets: [\n                    interact.createSnapGrid({x: 30, y: 30})\n                ],\n                range: Infinity,\n                relativePoints: [{x: 0, y: 0}]\n            }),\n            interact.modifiers.restrict({\n                restriction: \"parent\",\n                elementRect: {top: 0, left: 0, bottom: 1, right: 1},\n                endOnly: true\n            })\n        ],\n        autoScroll: false,\n        maxPerElement: 2\n    }).on('dragstart', function (event) {\n        event.preventDefault();\n    }).on('dragmove', dragMoveListener);\n\n    /* Resizable */\n    interact(\".resize-action\", {context: resizeContext}).unset();\n\n    interact(\".resize-action\", {context: resizeContext}).resizable({\n        enabled: true,\n        preserveAspectRatio: false,\n        edges: {\n            left: '.resize-s',\n            right: true,\n            bottom: true,\n            top: '.resize-s'\n        },\n        inertia: {\n            resistance: 30,\n            minSpeed: 100,\n            endSpeed: 50\n        },\n        snap: {\n            targets: [\n                interact.createSnapGrid({\n                    x: 5, y: 5\n                })\n            ],\n            range: Infinity,\n            relativePoints: [{x: 0, y: 0}]\n        },\n    }).on('resizestart', function (event) {\n        event.preventDefault();\n    }).on('resizemove', function (event) {\n        let target = event.target;\n        let x = (parseFloat(target.getAttribute('data-x')) || 0);\n        let y = (parseFloat(target.getAttribute('data-y')) || 0);\n\n        target.style.width = event.rect.width + 'px';\n        target.style.height = event.rect.height + 'px';\n        x += event.deltaRect.left;\n        y += event.deltaRect.top;\n\n        target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px,' + y + 'px)';\n        target.setAttribute('data-x', x);\n        target.setAttribute('data-y', y);\n    });\n\n    function dragMoveListener(event) {\n        let target = event.target;\n        let x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n        let y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n        if ('webkitTransform' in target.style || 'transform' in target.style) {\n            target.style.webkitTransform =\n                target.style.transform =\n                    'translate(' + x + 'px, ' + y + 'px)';\n        } else {\n            target.style.left = x + 'px';\n            target.style.top = y + 'px';\n        }\n\n        target.setAttribute('data-x', x);\n        target.setAttribute('data-y', y);\n    }\n}\n\n/*\n* @function oeSortable(callBackFn)\n* @summary call this function from scripts you may need to use sortable\n*\n* @param function A callback function which is called with the sorted elements as parameter\n*/\nfunction oeSortable(callBackFn) {\n    if (typeof window.interact !== 'function') {\n        (async (interactfn) => {\n            await includeScript(interactfn, 'script');\n        })(top.webroot_url + '/public/assets/interactjs/dist/interact.js').then(() => {\n            load();\n        });\n    } else {\n        load();\n    }\n    function clearTranslate(elem){\n        elem.style.webkitTransform =\n            elem.style.transform =\n            'translate(' + 0 + 'px, ' + 0 + 'px)'\n        elem.setAttribute('data-x', 0)\n        elem.setAttribute('data-y', 0)\n    }\n    function switchElem(elem1, elem2, clear = false){\n        $(elem2).append($(elem1).children()[0]);\n        $(elem1).append($(elem2).children()[0]);\n        if(clear){\n             clearTranslate($(elem2).children()[0]);\n             clearTranslate($(elem1).children()[0]);\n        }\n    }\n    function moveUp(elem){\n        if(elem){\n            let prevElem = $(elem).prev(\".droppable\");\n            if(prevElem.length > 0){\n                let childIsDragging = prevElem.children(\"li.is-dragging\")[0];\n                if(childIsDragging){\n                    switchElem(elem, prevElem[0], true);\n                    return true;\n                }else{\n                    if(prevElem[0]){\n                        if(moveUp(prevElem[0])){\n                            switchElem(elem, prevElem[0]);\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    function moveDown(elem){\n        if(elem){\n            let nxtElem = $(elem).next(\".droppable\");\n            if(nxtElem.length > 0){\n                let childIsDragging = nxtElem.children(\"li.is-dragging\")[0];\n                if(childIsDragging){\n                    switchElem(elem, nxtElem[0], true);\n                    return true;\n                }else{\n                    if(nxtElem[0]){\n                        if(moveDown(nxtElem[0])){\n                            switchElem(elem, nxtElem[0]);\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    function dragMoveListener (event) {\n        var target = event.target\n        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\n        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\n        target.style.webkitTransform =\n            target.style.transform =\n            'translate(' + x + 'px, ' + y + 'px)'\n        target.setAttribute('data-x', x)\n        target.setAttribute('data-y', y)\n    }\n    function load(){\n        interact('.droppable').dropzone({\n            accept: null,\n            overlap: 0.9,\n            ondropactivate: function (event) {\n                event.relatedTarget.classList.add('is-dragging');\n            },\n            ondragenter: function (event) {\n                let isUpper = moveUp(event.target);\n                if(!isUpper){\n                    moveDown(event.target);\n                }\n            },\n            ondropdeactivate: function (event) {\n                if(event.target.firstChild.classList.contains('is-dragging')){\n                    let items = event.target.parentNode.children;\n                    event.relatedTarget.classList.remove('is-dragging');\n                    clearTranslate(event.relatedTarget);\n                    callBackFn && callBackFn(items);\n                }\n            }\n        })\n\n        interact('.draggable')\n            .draggable({\n                inertia: true,\n                modifiers: [\n                interact.modifiers.restrictRect({\n                    restriction: null,\n                    endOnly: true\n                })\n                ],\n                autoScroll: true,\n                listeners: { move: dragMoveListener }\n        })\n    }\n\n};\n\n\n/*\n* Universal async BS alert message with promise\n* Note the use of new javaScript translate function xl().\n*\n*/\nif (typeof asyncAlertMsg !== \"function\") {\n    function asyncAlertMsg(message, timer = 5000, type = 'danger', size = '') {\n        let alertMsg = xl(\"Alert Notice\");\n        $('#alert_box').remove();\n        size = (size == 'lg') ? 'left:25%;width:50%;' : 'left:35%;width:30%;';\n        let style = \"position:fixed;top:25%;\" + size + \" bottom:0;z-index:9999;\";\n        $(\"body\").prepend(\"<div class='container text-center' id='alert_box' style='\" + style + \"'></div>\");\n        let mHtml = '<div id=\"alertmsg\" class=\"alert alert-' + type + ' alert-dismissable\">' +\n            '<button type=\"button\" class=\"close btn btn-link btn-cancel\" data-dismiss=\"alert\" aria-hidden=\"true\"></button>' +\n            '<h5 class=\"alert-heading text-center\">' + alertMsg + '</h5><hr>' +\n            '<p>' + message + '</p>' +\n            '</div>';\n        $('#alert_box').append(mHtml);\n        return new Promise(resolve => {\n            $('#alertmsg').on('closed.bs.alert', function () {\n                clearTimeout(AlertMsg);\n                $('#alert_box').remove();\n                resolve('closed');\n            });\n            let AlertMsg = setTimeout(function () {\n                $('#alertmsg').fadeOut(800, function () {\n                    $('#alert_box').remove();\n                    resolve('timedout');\n                });\n            }, timer);\n        })\n    }\n}\n\n/*\n* function syncAlertMsg(()\n*\n* Universal sync BS alert message returns promise after resolve.\n* Call below to return a promise after alert is resolved.\n* Example: syncAlertMsg('Hello, longtime, 'success', 'lg').then( asyncRtn => ( ... log something });\n*\n* Or use as IIFE to run inline.\n* Example:\n*   (async (time) => {\n*       await asyncAlertMsg('Waiting till x'ed out or timeout!', time); ...now go;\n*   })(3000).then(rtn => { ... but then could be more });\n*\n* */\nasync function syncAlertMsg(message, timer = 5000, type = 'danger', size = '') {\n    return await asyncAlertMsg(message, timer, type, size);\n}\n\n/* Handy function to set values in globals user_settings table */\nif (typeof persistUserOption !== \"function\") {\n    const persistUserOption = function (option, value) {\n        return $.ajax({\n            url: top.webroot_url + \"/library/ajax/user_settings.php\",\n            type: 'post',\n            contentType: 'application/x-www-form-urlencoded',\n            data: {\n                csrf_token_form: top.csrf_token_js,\n                target: option,\n                setting: value\n            },\n            beforeSend: function () {\n                top.restoreSession();\n            },\n            error: function (jqxhr, status, errorThrown) {\n                console.log(errorThrown);\n            }\n        });\n    };\n}\n\n/**\n * User Debugging Javascript Errors\n * Turn on/off in Globals->Logging\n *\n * @package   OpenEMR Utilities\n * @link      http://www.open-emr.org\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n */\n\nif (typeof top.userDebug !== 'undefined' && (top.userDebug === '1' || top.userDebug === '3')) {\n    window.onerror = function (msg, url, lineNo, columnNo, error) {\n        const is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n        const is_firefox = navigator.userAgent.indexOf('Firefox') > -1;\n        const is_safari = navigator.userAgent.indexOf(\"Safari\") > -1;\n\n        var showDebugAlert = function (message) {\n            let errorMsg = [\n                'URL: ' + message.URL,\n                'Line: ' + message.Line + ' Column: ' + message.Column,\n                'Error object: ' + JSON.stringify(message.Error)\n            ].join(\"\\n\");\n\n            let msg = message.Message + \"\\n\" + errorMsg;\n            console.error(xl('User Debug Error Catch'), message);\n            alert(msg);\n\n            return false;\n        };\n\n        let string = msg.toLowerCase();\n        let substring = xl(\"script error\"); // translate to catch for language of browser.\n        if (string.indexOf(substring) > -1) {\n            let xlated = xl('Script Error: See Browser Console for Detail');\n            showDebugAlert(xlated);\n        } else {\n            let message = {\n                Message: msg,\n                URL: url,\n                Line: lineNo,\n                Column: columnNo,\n                Error: JSON.stringify(error)\n            };\n\n            showDebugAlert(message);\n        }\n\n        return false;\n    };\n}\n\n", "<?php\n\n/**\n * OemrUI class.\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Ranganath Pathak <pathak@scrs1.org>\n * @copyright Copyright (c) 2018 Ranganath Pathak <pathak@scrs1.org>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nnamespace OpenEMR\\OeUI;\n\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Core\\Header;\n\n// Special case where not setting up the header for a script, so using setupAssets function,\n//  which does not autoload anything. The actual header is set up in another script.\nHeader::setupAssets();\n\nclass OemrUI\n{\n    private $action;\n    private $action_bot_js;\n    private $action_href;\n    private $action_icon;\n    private $action_title;\n    private $action_top_js;\n    private $arrAction;\n    private $arrexpandIcon;\n    private $arrFiles;\n    private $arrOeUiSettings;\n    private $arrow_direction;\n    private $close;\n    private $collectToken;\n    private $container;\n    private $contractTitle;\n    private $current_state;\n    private $display_help_icon;\n    private $expand_icon_class;\n    private $expand_title;\n    private $expandable;\n    private $expandable_icon;\n    private $expandTitle;\n    private $header_expand_js;\n    private $heading;\n    private $help_file;\n    private $help_icon;\n    private $help_modal;\n    private $jquery_draggable;\n    private $modal_body;\n    private $print;\n    private $target;\n    private $web_root;\n\n    /**\n    * Create the html string that will display the formatted heading with selected icons - expandable,\n    * action and help and generate the html code for the help modal and output all the jQuery needed to make it work.\n    *\n    * @param array $arrOeUiSettings is an associative array that contains 9 elements, string 'heading_title',\n    * int|bool 'include_patient_name', int|bool 'expandable', array 'expandable_files', string 'action', string 'action_title',\n    * string 'action_href', int|bool 'show_help_icon' and string 'help_file_name'.\n    * The int|bool 'current_state' (expanded = 1, centered = 0) value is obtained from function collectAndOrganizeExpandSetting(array(\"\")),\n    * this function needs an indexed array as an argument (array ('expandable_files')) that contains the file name\n    * of the current file as the first element, the name of any other file that needs to open in a similar state\n    * needs to be included in this array,all names must be unique and have a '_xpd' suffix.\n    * It will be used to generate up to 4 values - string $heading, string $expandable_icon, string $action_icon and string $help_icon\n    * that will form the html string used to output the formatted heading of the page.\n    * If a feature is not required set the corresponding element in the array to an empty string\n    */\n    public function __construct($arrOeUiSettings = array())\n    {\n        global $v_js_includes;\n\n        $this->heading = (!empty($arrOeUiSettings['include_patient_name']) && !empty($arrOeUiSettings['heading_title'])) ? ($arrOeUiSettings['heading_title'] ?? '') . \" - \" . getPatientNameFirstLast($_SESSION['pid']) : ($arrOeUiSettings['heading_title'] ?? '');\n        $this->expandable = $arrOeUiSettings['expandable'] ?? null;\n        $this->arrFiles = $arrOeUiSettings['expandable_files'] ?? null;\n        $this->arrAction = array(($arrOeUiSettings['action'] ?? null), ($arrOeUiSettings['action_title'] ?? null), ($arrOeUiSettings['action_href'] ?? null));\n        $this->display_help_icon = $arrOeUiSettings['show_help_icon'] ?? null;\n        $this->help_file = $arrOeUiSettings['help_file_name'] ?? null;\n        if (!empty($arrOeUiSettings['expandable']) && !empty($arrOeUiSettings['expandable_files'])) {\n            $this->current_state = collectAndOrganizeExpandSetting($arrOeUiSettings['expandable_files']);\n        }\n    }\n\n    /**\n    * Creates the html string that will display the formatted heading with selected icons - expandable, action and help.\n    *\n    * @return array containing string $heading - the formatted html string of the actual heading and string $container\n    * - the value of the container class 'container' or 'container-fluid'\n    *\n    */\n    public function pageHeading()\n    {\n        $heading = text($this->heading);\n        if (!empty($heading)) {\n            $arrexpandIcon = $this->expandIcon();// returns and array containing expandable icon string and container class string\n            $action_icon = $this->actionIcon();\n            $help_icon = $this->helpIcon();\n            $expandable_icon = $arrexpandIcon[0];\n            $heading = \"<h2>$heading $expandable_icon $action_icon $help_icon</h2>\";\n        } else {\n            $heading = \"<h2>\" . xlt(\"Please supply a heading\") . \" <i class='fa fa-oe-smile-o' aria-hidden='true'></i></h2>\";\n        }\n        return $heading;\n    }\n\n    /**\n    * Creates the html string that will display the formatted expandable icon - fa-expand or fa-compress.\n    *\n    * @param $expandable - int|bool - whether form is expandable or not and $current_state int|bool - the current state of the form\n    *\n    * @return array containing string $expandable_icon - the formatted html string of the expand icon and string\n    * $container - the value of the container class 'container' or 'container-fluid'\n    *\n    */\n    private function expandIcon($expandable = '', $current_state = '')\n    {\n        $current_state = $this->current_state;\n        $expandable = $this->expandable;\n\n        if ($current_state) {\n            $container = 'container-fluid';\n            $expand_title = xl('Click to Contract and set to henceforth open in Centered mode');\n            $expand_icon_class = 'fa-compress oe-center';\n        } else {\n            $container = 'container';\n            $expand_title = xl('Click to Expand and set to henceforth open in Expanded mode');\n            $expand_icon_class = 'fa-expand oe-expand';\n        }\n        $expandable_icon = '';\n        if ($expandable) {\n            $expandable_icon = \"<a href='#' id='exp_cont_icon' class='text-dark text-decoration-none oe-superscript-small expand_contract fa \" .  attr($expand_icon_class) . \"'\" . \" title='\" . attr($expand_title) . \"'\n            aria-hidden='true'></a>\";\n        }\n        return array($expandable_icon, $container);\n    }\n\n    /**\n    * Will return the container class value either 'container' or 'container-fluid'\n    *\n    * @return string $container that will reflect the current state of the page i.e. expanded = 'container-fluid' or centered = 'container'\n    */\n    public function oeContainer()\n    {\n        $arrexpandIcon = $this->expandIcon();\n        $container = $arrexpandIcon[1] ? $arrexpandIcon[1] : 'container';\n        return $container;\n    }\n\n    /**\n    * Creates the html string that will display the formatted action/re-direction icon - for conceal, reveal, search, reset, link and back.\n    *\n    * @param array $arrAction has 3 elements - string - type of action, string - optional title to be used in tooltip\n    * and string - the file name or url to be redirected to, only the 3 re-directions reset, link or back need a href value\n    * the 3 actions conceal, reveal, search will only use the default title strings\n    *\n    * @return string $action_icon that will output the action icon html string\n    *\n    */\n    private function actionIcon($arrAction = array())\n    {\n        $arrAction = $this->arrAction;\n        if ($arrAction) {\n            $action = $arrAction[0];\n            $action_title = $arrAction[1];\n            $action_href = $arrAction[2];\n        }\n        $action_href = ($action_href) ? $action_href : \"#\";\n        switch ($action) {\n            case \"reset\":\n                $action_title = ($action_title) ? $action_title : xl(\"Reset\");\n                $action_icon = \"<a href='\" . attr($action_href) . \"' onclick='top.restoreSession()'><i id='advanced-action' class='fa fa-undo fa-oe-sm' title='\" . attr($action_title) . \"' aria-hidden='true'></i></a>\";\n                break;\n            case \"conceal\":\n                $action_title = xl(\"Click to Hide\"); // default needed for jQuery to function\n                $action_icon = \"<i id='show_hide' class='fa fa-oe-sm fa-eye-slash' title='\" . attr($action_title) . \"'></i>\";\n                break;\n            case \"reveal\":\n                $action_title = xl(\"Click to Show\"); // default needed for jQuery to function\n                $action_icon = \"<i id='show_hide' class='fa fa-oe-sm fa-eye' title='\" . attr($action_title) . \"'></i>\";\n                break;\n            case \"search\":\n                $action_title = xl(\"Click to show search\"); // default needed for jQuery to function\n                $action_icon = \"<i id='show_hide' class='fa fa-search-plus fa-oe-sm' title='\" . attr($action_title) . \"'></i>\";\n                break;\n            case \"link\":\n                if (strpos($action_href, 'http') !== false) {\n                    $target = '_blank';\n                } else {\n                    $target = '_self';\n                }\n                $action_title = ($action_title) ? $action_title : xl(\"Click to go to page\");\n                $action_icon = \"<a href='\" . attr($action_href) . \"' target = '\" . attr($target) . \"' onclick='top.restoreSession()'><i id='advanced-action' class='fa fa-external-link-alt fa-oe-sm' title='\" . attr($action_title) . \"' aria-hidden='true'></i></a>\";\n                break;\n            case \"back\":\n                $action_title = ($action_title) ? $action_title : xl(\"Go Back\");\n                if ($_SESSION ['language_direction'] == 'ltr') {\n                    $arrow_direction = 'fa-arrow-circle-left';\n                } elseif ($_SESSION ['language_direction'] == 'rtl') {\n                    $arrow_direction = 'fa-arrow-circle-right';\n                }\n                $action_icon = \"<a href='\" . attr($action_href) . \"' onclick='top.restoreSession()'><i id='advanced-action' class='fa \" . attr($arrow_direction) . \" fa-oe-sm' title='\" . attr($action_title) . \"' aria-hidden='true'></i></a>\";\n                break;\n            default:\n                $action_icon = '';\n        }\n        return $action_icon;\n    }\n\n    /**\n    * Creates the html string that will display the formatted help icon - fa-question-circle.\n    *\n    * @param int|bool  $display_help_icon\n    *\n    * @return string $help_icon that will output the help icon html string\n    *\n    */\n    private function helpIcon($display_help_icon = '')\n    {\n        $help_icon = '';\n        $display_help_icon = $this->display_help_icon;\n        if ($display_help_icon) {\n            if ($_SESSION ['language_direction'] == 'ltr') {\n                $help_icon_title = xl(\"To enable help - Go to the User Name on top right > Settings > Features > Enable Help Modal\");\n            } elseif ($_SESSION ['language_direction'] == 'rtl') {\n                $help_icon_title = xl(\"To enable help - Go to the User Name on top left > Settings > Features > Enable Help Modal\");\n            }\n            if ($GLOBALS['enable_help'] == 1) {\n                $help_icon = '<a class=\"oe-pull-away oe-help-redirect\" data-target=\"#myModal\" data-toggle=\"modal\" href=\"#\" id=\"help-href\" name=\"help-href\" style=\"color:#676666\" title=\"' . xla(\"Click to view Help\") . '\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>';\n            } elseif ($GLOBALS['enable_help'] == 2) {\n                $help_icon = '<a class=\"oe-pull-away oe-help-redirect\" data-target=\"#myModal\" data-toggle=\"modal\" href=\"#\" id=\"help-href\" name=\"help-href\" style=\"color:#DCD6D0 !Important\" title=\"' . attr($help_icon_title) . '\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>';\n            } elseif ($GLOBALS['enable_help'] == 0) {\n                 $help_icon = '';\n            }\n        }\n        return $help_icon;\n    }\n\n    /**\n    * Output the help modal html along with the jQuery to make it work.\n    *\n    * $param string $help_file - name of the help file to be displayed, must exists in Documentation/help_files\n    * will echo the entire html string of the help modal and the jQuery, needs to be used as the first line after the container div\n    *\n    * @return void\n    *\n    */\n    private function helpFileModal($help_file = '')\n    {\n        $help_file = $this->help_file;\n        $close = xla(\"Close\");\n        $print = xla(\"Print\");\n        if ($help_file) {\n            $help_file = attr($help_file);\n            $help_file = $GLOBALS['webroot'] . \"/Documentation/help_files/$help_file\";\n            $modal_body = \"<iframe src=\\\"$help_file\\\" id='targetiframe' class='w-100 h-100 border-0' style='overflow-x: hidden;'\n                                allowtransparency='true'></iframe>\";\n        } else {\n            $modal_body = \"<h3> <i class='fa fa-exclamation-triangle  oe-text-red' aria-hidden='true'></i> \" . xlt(\"Check if a help file exists for this page in\") . \" \" . text(\"Documentation/help_files\") . \".<br /><br />\" . xlt(\"Then pass it's name as a value to the element\" . \" \" . text(\"'help_file_name'\") . \" \"  .  \"in the associative array\") . \" \" . text(\"\\$arrOeUiSettings\") . \".<br /><br />\" . xlt(\"If the help file does not exist create one and place it in\") . \" \" . text(\"Documentation/help_files\") . \".<br />\" . \"</h3>\";\n        }\n        $help_modal = <<<HELP\n        <div class=\"row\">\n            <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content  oe-modal-content\" style=\"height:700px\">\n                        <div class=\"modal-header clearfix\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"$close\">\n                            <span aria-hidden=\"true\" class='text-black' style='font-size:1.5em;'>\u00d7</span></button>\n                        </div>\n                        <div class=\"modal-body\" style=\"height:80%;\">\n                            $modal_body\n                        </div>\n                        <div class=\"modal-footer mt-0\">\n                           <button class=\"btn btn-link btn-cancel oe-pull-away\" data-dismiss=\"modal\" type=\"button\">$close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\nHELP;\n        echo $help_modal . \"\\r\\n\";\n\n        $jquery_draggable = <<<JQD\n        <script>\n        // Jquery draggable\n            $(\".modal-dialog\").addClass('drag-action');\n            $(\".modal-content\").addClass('resize-action');\n            var helpTitle = $('#help-href').prop('title');\n            $('#myModal').on('hidden.bs.modal', function (e) {\n                $('#help-href').prop('title', '');\n            });\n            $('#help-href').focus( function() {\n                $('#help-href').prop('title', helpTitle);\n            });\n        </script>\nJQD;\n        echo $jquery_draggable . \"\\r\\n\";\n        return;\n    }\n\n    /**\n    * Generates the jQuery for the form to toggle between 'expanded' and 'centered' states.\n    *\n    * @param array $arrFiles - that contains the files names that need to be toggled between 'expanded' and 'centered' states\n    * will generate the jQuery that will be outputted on the page by function oeBelowContainerDiv()\n    *\n    * @return void\n    *\n    */\n    private function headerExpandJs($arrFiles = array())\n    {\n        $expandTitle = xlj(\"Click to Contract and set to henceforth open in Centered mode\");\n        $contractTitle = xlj(\"Click to Expand and set to henceforth open in Expanded mode\");\n        $arrFiles = json_encode($this->arrFiles);\n        $web_root = $GLOBALS['webroot'];\n        $collectToken = js_escape(CsrfUtils::collectCsrfToken());\n        $header_expand_js = <<<EXP\n        <script>\n        $(window).on('resize', function() {//hide icon on smaller devices as width is almost 100%\n            var winWidth = $(this).width();\n            if (winWidth <  900) {\n                $(\"#exp_cont_icon\").addClass (\"hidden\");\n            } else {\n                $(\"#exp_cont_icon\").removeClass (\"hidden\");\n            }\n        });\n        $(function () {\n            $(window).trigger('resize');// to avoid repeating code triggers above on page open\n        });\n\n        $(function () {\n            $('.expand_contract').click(function () {\n                var elementTitle;\n                var expandTitle = {$expandTitle};\n                var contractTitle = {$contractTitle};\n                var arrFiles = {$arrFiles};\n                if ($(this).is('.oe-expand')) {\n                    elementTitle = expandTitle;\n                    $(this).toggleClass('fa-expand fa-compress');\n                    $(this).toggleClass('oe-expand oe-center');\n                    $('#container_div').toggleClass('container container-fluid');\n                    if ($(arrFiles).length) {\n                        $.each(arrFiles, function (index, value) {\n\n                            $.post(\n                                \"{$web_root}/library/ajax/user_settings.php\",\n                                {\n                                    target: arrFiles[index].trim(),\n                                    setting: 1,\n                                    csrf_token_form: {$collectToken}\n                                }\n                            );\n                        });\n                    }\n                } else if ($(this).is('.oe-center')) {\n                    elementTitle = contractTitle;\n                    $(this).toggleClass('fa-compress fa-expand');\n                    $(this).toggleClass('oe-center oe-expand');\n                    $('#container_div').toggleClass('container-fluid container');\n                    if ($(arrFiles).length) {\n                        $.each(arrFiles, function (index, value) {\n                            $.post(\n                                \"{$web_root}/library/ajax/user_settings.php\",\n                                {\n                                    target: arrFiles[index].trim(),\n                                    setting: 0,\n                                    csrf_token_form: {$collectToken}\n                                }\n                            );\n                        });\n                    }\n                }\n                $(this).prop('title', elementTitle);\n            });\n        });\n        </script>\nEXP;\n        echo $header_expand_js . \"\\r\\n\";\n        return;\n    }\n\n    /**\n    * Generates the jQuery to enable an element to toggle between hidden and revealed states.\n    *\n    * @param array $arrAction - first element contains the string for type of action - needed only for actions search, reveal and conceal\n    * will generate the jQuery that will be outputted on the page by function oeBelowContainerDiv()\n    *\n    * @return void\n    *\n    */\n    private function headerActionJs($arrAction = array())\n    {\n        $arrAction = $this->arrAction;\n        $page = str_replace(\" \", \"\", $this->heading);\n\n        // Build the labels for when the icon is moused-over\n        $labels = \"\";\n        if ($arrAction[0] == 'search') {\n            $labels .= \"var showTitle = \" .  xlj('Click to show search') . \"\\r\\n;\";\n            $labels .= \"var hideTitle = \" . xlj('Click to hide search') . \"\\r\\n;\";\n        } elseif ($arrAction[0] == 'reveal' || $arrAction[0] == 'conceal') {\n            $labels .= \"var hideTitle = \" .  xlj('Click to Hide') . \"\\r\\n;\";\n            $labels .= \"var showTitle = \" . xlj('Click to Show') . \"\\r\\n;\";\n        }\n\n        // Build the classes for which icon to display whien hiding, showing, etc.\n        $actionClasses = \"\";\n        if ($arrAction[0] == 'search') {\n            $actionClasses .= \"var showActionClass = 'fa-search-plus'; \\r\\n\";\n            $actionClasses .= \"var hideActionClass = 'fa-search-minus'; \\r\\n\";\n        } elseif ($arrAction[0] == 'reveal') {\n            $actionClasses .= \"var showActionClass = 'fa-eye'; \\r\\n\";\n            $actionClasses .= \"var hideActionClass = 'fa-eye-slash'; \\r\\n\";\n        } elseif ($arrAction[0] == 'conceal') {\n            $actionClasses .= \"var showActionClass = 'fa-eye-slash'; \\r\\n\";\n            $actionClasses .= \"var hideActionClass = 'fa-eye'; \\r\\n\";\n        }\n\n        $action_top_js = <<<SHWTOP\n        <script>\n        $(function () {\n            $labels\n            $actionClasses\n            $('#show_hide').click(function () {\n                var elementTitle = '';\nSHWTOP;\n        echo $action_top_js . \"\\r\\n\";\n\n                $action_bot_js = <<<SHWBOT\n\n                $(this).toggleClass(showActionClass + ' ' + hideActionClass);\n\n                $('.hideaway').toggle(500);\n                if ($(this).is('.' + showActionClass)) {\n                    elementTitle = showTitle;\n                } else if ($(this).is('.' + hideActionClass)) {\n                    elementTitle = hideTitle;\n                }\n                $(this).prop('title', elementTitle);\n\n                // Remember our hideaway setting in local storage. If it's visible, show it on next page load\n                localStorage.setItem('display#$page', elementTitle);\n            }); // End of show_hide click()\n\n            // Use localStorage to remember your last setting\n            // Simulate 'click-to-show' if display is set to 'true', or null if there's no setting (default)\n            // getItem() returns a string which is why we have to check for the string 'true'\n            const elementTitle = localStorage.getItem('display#$page');\n            let shouldDisplay = false;\n            if (typeof hideTitle != 'undefined' &&\n                (elementTitle == hideTitle || elementTitle == null)) {\n                shouldDisplay = true\n            }\n\n            // We display if we remember we're showing it, but we don't intentionally hide it (no else here to hide)\n            // Because the hideaway is probably shown by default for a reason like in the billing manager\n            if (shouldDisplay) {\n                $('.hideaway').show(500);\n                $('#show_hide').removeClass(showActionClass);\n                $('#show_hide').addClass(hideActionClass);\n            }\n        });\n        </script>\nSHWBOT;\n        echo $action_bot_js . \"\\r\\n\";\n        return;\n    }\n\n    /**\n    * Output the help modal html with needed jQuery, jQuery to enable an element to toggle between 'hidden' and 'revealed states'\n    * and/or 'expand' and 'centered' states.\n    *\n    * based on the values in the associative array $arrOeUiSettings the relevant code will be outputted to the page\n    * for consistency always call this function just below the container div on the page\n    *\n    * @return void\n    *\n    */\n    public function oeBelowContainerDiv()\n    {\n        $this->display_help_icon ? $this->helpFileModal() : '';\n        $this->expandable ? $this->headerExpandJs() : '';\n        $this->arrAction[0] ? $this->headerActionJs() : '';\n        return;\n    }\n}\n"], "fixing_code": ["<?php\n\n/**\n * This provides for manual posting of EOBs.  It is invoked from\n * sl_eob_search.php.  For automated (X12 835) remittance posting\n * see sl_eob_process.php.\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Rod Roark <rod@sunsetsystems.com>\n * @author    Roberto Vasquez <robertogagliotta@gmail.com>\n * @author    Terry Hill <terry@lillysystems.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @author    Stephen Waite <stephen.waite@cmsvt.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2005-2020 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2018-2020 Stephen Waite <stephen.waite@cmsvt.com>\n * @copyright Copyright (c) 2019-2020 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../globals.php\");\nrequire_once(\"$srcdir/patient.inc\");\nrequire_once(\"$srcdir/forms.inc\");\nrequire_once(\"../../custom/code_types.inc.php\");\nrequire_once \"$srcdir/user.inc\";\nrequire_once(\"$srcdir/payment.inc.php\");\n\nuse OpenEMR\\Billing\\InvoiceSummary;\nuse OpenEMR\\Billing\\SLEOB;\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Common\\Logging\\EventAuditLogger;\nuse OpenEMR\\Core\\Header;\n\n$debug = 0; // set to 1 for debugging mode\n$save_stay = (!empty($_REQUEST['form_save']) && ($_REQUEST['form_save'] == '1')) ? true : false;\n$from_posting = (0 + ($_REQUEST['isPosting'] ?? null)) ? 1 : 0;\n$g_posting_adj_disable = $GLOBALS['posting_adj_disable'] ? 'checked' : '';\nif ($from_posting) {\n    $posting_adj_disable = prevSetting('sl_eob_search.', 'posting_adj_disable', 'posting_adj_disable', $g_posting_adj_disable);\n} else {\n    $posting_adj_disable = $g_posting_adj_disable;\n}\n\n// If we permit deletion of transactions.  Might change this later.\n$ALLOW_DELETE = true;\n\n$info_msg = \"\";\n\n// Format money for display.\n//\nfunction bucks($amount)\n{\n    if ($amount) {\n        return sprintf(\"%.2f\", $amount);\n    }\n}\n\n?>\n<html>\n<head>\n    <?php Header::setupHeader(['datetime-picker', 'opener', 'no_dialog']); ?>\n    <title><?php echo xlt('EOB Posting - Invoice') ?></title>\n    <script>\n\n        const adjDisable = <?php echo js_escape($posting_adj_disable); ?>;\n        // An insurance radio button is selected.\n        function setins(istr) {\n            return true;\n        }\n\n        function goEncounterSummary(pid) {\n            if(pid) {\n                if(typeof opener.toEncSummary  === 'function') {\n                    opener.toEncSummary(pid);\n                }\n            }\n            doClose();\n        }\n\n        function doClose() {\n            window.close();\n        }\n\n        // Compute an adjustment that writes off the balance:\n        function writeoff(code) {\n            const f = document.forms[0];\n            const belement = f['form_line[' + code + '][bal]'];\n            const pelement = f['form_line[' + code + '][pay]'];\n            const aelement = f['form_line[' + code + '][adj]'];\n            const relement = f['form_line[' + code + '][reason]'];\n            const tmp = belement.value - pelement.value;\n            aelement.value = Number(tmp).toFixed(2);\n            if (aelement.value && !relement.value) {\n                relement.selectedIndex = 1;\n            }\n            return false;\n        }\n\n        // Onsubmit handler.  A good excuse to write some JavaScript.\n        function validate(f) {\n            let delcount = 0;\n            let allempty = true;\n\n            for (let i = 0; i < f.elements.length; ++i) {\n                let ename = f.elements[i].name;\n                // Count deletes.\n                if (ename.substring(0, 9) == 'form_del[') {\n                    if (f.elements[i].checked) {\n                        ++delcount;\n                    }\n                    continue;\n                }\n                let pfxlen = ename.indexOf('[pay]');\n                if (pfxlen < 0) {\n                    continue\n                };\n                let pfx = ename.substring(0, pfxlen);\n                let code = pfx.substring(pfx.indexOf('[') + 1, pfxlen - 1);\n                let cPay = parseFloat(f[pfx + '[pay]'].value).toFixed(2);\n                let cAdjust = parseFloat(f[pfx + '[adj]'].value).toFixed(2);\n\n                if ((cPay !== 0) || cAdjust !== 0) {\n                    allempty = false;\n                }\n                if(adjDisable) {\n                    if ((cAdjust == 0 && ins_done.value == 'changed')) {\n                        allempty = false;\n                    }\n                }\n                if ((cPay !== 0) && isNaN(parseFloat(f[pfx + '[pay]'].value))) {\n                    let message = <?php echo xlj('Payment value for code') ?> + \" \" + code + \" \" + <?php echo xlj('is not a number') ?>;\n                    (async (message, time) => {\n                        await asyncAlertMsg(message, time, 'danger', 'lg');\n                    })(message, 3000)\n                    .then(res => { });\n                    return false;\n                }\n                if ((cAdjust !== 0) && isNaN(parseFloat(f[pfx + '[adj]'].value))) {\n                    let message = <?php echo xlj('Adjustment value for code') ?> + \" \" + code  + \" \" + <?php echo xlj('is not a number') ?>;\n                    (async (message, time) => {\n                        await asyncAlertMsg(message, time, 'danger', 'lg');\n                    })(message, 3000)\n                    .then(res => { });\n                    return false;\n                }\n                if ((cAdjust !== 0) && !f[pfx + '[reason]'].value && !adjDisable) {\n                    let message = <?php echo xlj('Please select an adjustment reason for code') ?> + \" \" + code;\n                    (async (message, time) => {\n                        await asyncAlertMsg(message, time, 'danger', 'lg');\n                    })(message, 3000)\n                    .then(res => { });\n                    return false;\n                }\n            // TBD: validate the date format\n            }\n            // Check if save is clicked with nothing to post.\n            if (allempty && delcount === 0) {\n                let message = <?php echo xlj('Nothing to Post! Please review entries or use Cancel to exit transaction') ?>;\n                (async (message, time) => {\n                    await asyncAlertMsg(message, time, 'danger', 'lg');\n                })(message, 3000)\n                .then(res => { });\n                return false;\n            }\n            // Demand confirmation if deleting anything.\n            if (delcount > 0) {\n                if (!confirm(<?php echo xlj('Really delete'); ?> + ' ' + delcount +\n                    ' ' + <?php echo xlj('transactions'); ?> + '?' +\n                    ' ' + <?php echo xlj('This action will be logged'); ?> + '!')\n                ) return false;\n            }\n            return true;\n        }\n\n        // Get current date\n        function getFormattedToday() {\n            let today = new Date();\n            let dd = today.getDate();\n            let mm = today.getMonth() + 1; //January is 0!\n            let yyyy = today.getFullYear();\n            if (dd < 10) {\n                dd = '0' + dd;\n            }\n            if (mm < 10) {\n                mm = '0' + mm;\n            }\n            return (yyyy + '-' + mm + '-' + dd);\n        }\n\n        // Update Payment Fields\n        function updateFields(payField, adjField, balField, coPayField, isFirstProcCode) {\n            let payAmount = 0.0;\n            let adjAmount = 0.0;\n            let balAmount = 0.0;\n            let coPayAmount = 0.0;\n\n            // coPayFiled will be null if there is no co-pay entry in the fee sheet\n            if (coPayField) {\n                coPayAmount = coPayField.value;\n            }\n\n            // if balance field is 0.00, its value comes back as null, so check for nul-ness first\n            if (balField) {\n                balAmount = (balField.value) ? balField.value : 0;\n            }\n\n            if (payField) {\n                payAmount = (payField.value) ? payField.value : 0;\n            }\n\n            // alert('balance = >' + balAmount +'<  payAmount = ' + payAmount + '  copay = ' + coPayAmount + '  isFirstProcCode = ' + isFirstProcCode);\n\n            // subtract the co-pay only from the first procedure code\n            if (isFirstProcCode == 1) {\n                balAmount = parseFloat(balAmount) + parseFloat(coPayAmount);\n            }\n\n            if (adjDisable) {\n                return;\n            }\n\n            adjAmount = balAmount - payAmount;\n            // Assign rounded adjustment value back to TextField\n            adjField.value = adjAmount = Math.round(adjAmount * 100) / 100;\n        }\n\n        $(function () {\n            $('.datepicker').datetimepicker({\n                <?php $datetimepicker_timepicker = false; ?>\n                <?php $datetimepicker_showseconds = false; ?>\n                <?php $datetimepicker_formatInput = true; ?>\n                <?php require($GLOBALS['srcdir'] . '/js/xl/jquery-datetimepicker-2-5-4.js.php'); ?>\n                <?php // can add any additional javascript settings to datetimepicker here; need to prepend first setting with a comma ?>\n            });\n        });\n\n        $(\"#ins_done\").on(\"change\", function() {\n            $(\"#ins_done\").val('changed');\n        });\n\n    </script>\n    <style>\n        @media only screen and (max-width: 768px) {\n            [class*=\"col-\"] {\n                width: 100%;\n                text-align: left !Important;\n            }\n        }\n\n        .table {\n            margin: auto;\n            width: 99%;\n        }\n\n        .table > tbody > tr > td {\n            border-top: none;\n        }\n\n        .last_detail {\n            border-bottom: 1px var(--black) solid;\n            margin-top: 2px;\n        }\n\n        @media (min-width: 992px) {\n            .modal-lg {\n                width: 1000px !Important;\n            }\n        }\n    </style>\n</head>\n<body>\n<?php\n$trans_id = 0 + $_GET['id'];\nif (!$trans_id) {\n    die(xlt(\"You cannot access this page directly.\"));\n}\n\n// A/R case, $trans_id matches form_encounter.id.\n$ferow = sqlQuery(\"SELECT e.*, p.fname, p.mname, p.lname FROM form_encounter AS e, patient_data AS p WHERE e.id = ? AND p.pid = e.pid\", array($trans_id));\nif (empty($ferow)) {\n    die(\"There is no encounter with form_encounter.id = '\" . text($trans_id) . \"'.\");\n}\n$patient_id = 0 + $ferow['pid'];\n$encounter_id = 0 + $ferow['encounter'];\n$svcdate = substr($ferow['date'], 0, 10);\n$form_payer_id = (!empty($_POST['form_payer_id'])) ? (0 + $_POST['form_payer_id']) : 0;\n$form_reference = $_POST['form_reference'] ?? null;\n$form_check_date   = fixDate(($_POST['form_check_date'] ?? ''), date('Y-m-d'));\n$form_deposit_date = fixDate(($_POST['form_deposit_date'] ?? ''), $form_check_date);\n$form_pay_total = (!empty($_POST['form_pay_total'])) ? (0 + $_POST['form_pay_total']) : 0;\n\n$payer_type = 0;\nif (preg_match('/^Ins(\\d)/i', ($_POST['form_insurance'] ?? ''), $matches)) {\n    $payer_type = $matches[1];\n}\n\nif (!empty($_POST['form_save']) || !empty($_POST['form_cancel']) || !empty($_POST['isLastClosed'])) {\n    if (!empty($_POST['form_save'])) {\n        if (!CsrfUtils::verifyCsrfToken($_POST[\"csrf_token_form\"])) {\n            CsrfUtils::csrfNotVerified();\n        }\n\n        if ($debug) {\n            echo \"<p><b>\" . xlt(\"This module is in test mode. The database will not be changed.\") . \"</b><p>\\n\";\n        }\n\n        $session_id = SLEOB::arGetSession($form_payer_id, $form_reference, $form_check_date, $form_deposit_date, $form_pay_total);\n// The sl_eob_search page needs its invoice links modified to invoke\n// javascript to load form parms for all the above and submit.\n// At the same time that page would be modified to work off the\n// openemr database exclusively.\n// And back to the sl_eob_invoice page, I think we may want to move\n// the source input fields from row level to header level.\n\n// Handle deletes. row_delete() is borrowed from deleter.php.\n        if ($ALLOW_DELETE && !$debug) {\n            if (!empty($_POST['form_del']) && is_array($_POST['form_del'])) {\n                foreach ($_POST['form_del'] as $arseq => $dummy) {\n                    row_modify(\n                        \"ar_activity\",\n                        \"deleted = NOW()\",\n                        \"pid = '\" . add_escape_custom($patient_id) .\n                        \"' AND encounter = '\" . add_escape_custom($encounter_id) .\n                        \"' AND sequence_no = '\" . add_escape_custom($arseq) .\n                        \"' AND deleted IS NULL\"\n                    );\n                }\n            }\n        }\n\n        $paytotal = 0;\n        foreach ($_POST['form_line'] as $code => $cdata) {\n            $thispay = trim($cdata['pay']);\n            $thisadj = trim($cdata['adj']);\n            $thisins = trim($cdata['ins']);\n            $thiscodetype = trim($cdata['code_type']);\n            $reason = $cdata['reason'];\n\n// Get the adjustment reason type.  Possible values are:\n// 1 = Charge adjustment\n// 2 = Coinsurance\n// 3 = Deductible\n// 4 = Other pt resp\n// 5 = Comment\n            $reason_type = '1';\n            if ($reason) {\n                $tmp = sqlQuery(\"SELECT option_value FROM list_options WHERE list_id = 'adjreason' AND activity = 1 AND option_id = ?\", array($reason));\n                if (empty($tmp['option_value'])) {\n// This should not happen but if it does, apply old logic.\n                    if (preg_match(\"/To copay/\", $reason)) {\n                        $reason_type = 2;\n                    } elseif (preg_match(\"/To ded'ble/\", $reason)) {\n                        $reason_type = 3;\n                    }\n                    $info_msg .= xl(\"No adjustment reason type found for\") . \" \\\"$reason\\\". \";\n                } else {\n                    $reason_type = $tmp['option_value'];\n                }\n            }\n\n            if (!$thisins) {\n                $thisins = 0;\n            }\n\n            if (0.0 + $thispay) {\n                SLEOB::arPostPayment($patient_id, $encounter_id, $session_id, $thispay, $code, $payer_type, '', $debug, '', $thiscodetype);\n                $paytotal += $thispay;\n            }\n\n// Be sure to record adjustment reasons, even for zero adjustments if\n// they happen to be comments.\n            if (\n                (0.0 + $thisadj) ||\n                ($reason && $reason_type == 5) ||\n                ($reason && ($reason_type > 1 && $reason_type < 6))\n            ) {\n// \"To copay\" and \"To ded'ble\" need to become a comment in a zero\n// adjustment, formatted just like sl_eob_process.php.\n                if ($reason_type == '2') {\n                    $reason = $_POST['form_insurance'] . \" coins: $thisadj\";\n                    $thisadj = 0;\n                } elseif ($reason_type == '3') {\n                    $reason = $_POST['form_insurance'] . \" dedbl: $thisadj\";\n                    $thisadj = 0;\n                } elseif ($reason_type == '4') {\n                    $reason = $_POST['form_insurance'] . \" ptresp: $thisadj $reason\";\n                    $thisadj = 0;\n                } elseif ($reason_type == '5') {\n                    $reason = $_POST['form_insurance'] . \" note: $thisadj $reason\";\n                    $thisadj = 0;\n                } else {\n// An adjustment reason including \"Ins\" is assumed to be assigned by\n// insurance, and in that case we identify which one by appending\n// Ins1, Ins2 or Ins3.\n                    if (strpos(strtolower($reason), 'ins') != false) {\n                        $reason .= ' ' . $_POST['form_insurance'];\n                    }\n                }\n                SLEOB::arPostAdjustment($patient_id, $encounter_id, $session_id, $thisadj, $code, $payer_type, $reason, $debug, '', $thiscodetype);\n            }\n        }\n\n// Maintain which insurances are marked as finished.\n\n        $form_done = 0 + $_POST['form_done'];\n        $form_stmt_count = 0 + $_POST['form_stmt_count'];\n        sqlStatement(\"UPDATE form_encounter SET last_level_closed = ?, stmt_count = ? WHERE pid = ? AND encounter = ?\", array($form_done, $form_stmt_count, $patient_id, $encounter_id));\n\n        if (!empty($_POST['form_secondary'])) {\n            SLEOB::arSetupSecondary($patient_id, $encounter_id, $debug);\n        }\n        echo \"<script>\\n\";\n        echo \" if (opener.document.forms[0] != undefined) {\\n\";\n        echo \"   if (opener.document.forms[0].form_amount) {\\n\";\n        echo \"     var tmp = opener.document.forms[0].form_amount.value - \" . attr($paytotal) . \";\\n\";\n        echo \"     opener.document.forms[0].form_amount.value = Number(tmp).toFixed(2);\\n\";\n        echo \"   }\\n\";\n        echo \" }\\n\";\n    } else {\n        echo \"<script>\\n\";\n    }\n    if ($info_msg) {\n        echo \" alert(\" . js_escape($info_msg) . \");\\n\";\n    }\n    if (!$debug && !$save_stay && !$_POST['isLastClosed']) {\n        echo \"doClose();\\n\";\n    }\n    if (!$debug && ($save_stay || $_POST['isLastClosed'])) {\n        if ($_POST['isLastClosed']) {\n            // save last closed level\n            $form_done = 0 + $_POST['form_done'];\n            $form_stmt_count = 0 + $_POST['form_stmt_count'];\n            sqlStatement(\"UPDATE form_encounter SET last_level_closed = ?, stmt_count = ? WHERE pid = ? AND encounter = ?\", array($form_done, $form_stmt_count, $patient_id, $encounter_id));\n        }\n        // will reload page w/o reposting\n        echo \"location.replace(location)\\n\";\n    }\n    echo \"</script>\\n\";\n    if (!$save_stay && !$_POST['isLastClosed']) {\n        exit();\n    }\n}\n\n// Get invoice charge details.\n$codes = InvoiceSummary::arGetInvoiceSummary($patient_id, $encounter_id, true);\n$pdrow = sqlQuery(\"select billing_note from patient_data where pid = ? limit 1\", array($patient_id));\n?>\n\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <h2><?php echo xlt('EOB Invoice'); ?></h2>\n    </div>\n    <div class=\"container-fluid\">\n        <form class=\"form\" action='sl_eob_invoice.php?id=<?php echo attr_url($trans_id); ?>' method='post' onsubmit='return validate(this)'>\n            <input type=\"hidden\" name=\"csrf_token_form\" value=\"<?php echo attr(CsrfUtils::collectCsrfToken()); ?>\"/>\n            <input type=\"hidden\" name=\"isPosting\" value=\"<?php echo attr($from_posting); ?>\"/>\n            <input type=\"hidden\" name=\"isLastClosed\" value=\"\" />\n            <fieldset>\n                <legend><?php echo xlt('Invoice Actions'); ?></legend>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_name\"><?php echo xlt('Patient'); ?>:</label>\n                        <input type=\"text\" class=\"form-control\" id='form_name'\n                               name='form_name'\n                               value=\"<?php echo attr($ferow['fname']) . ' ' . attr($ferow['mname']) . ' ' . attr($ferow['lname']); ?>\"\n                               disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_provider\"><?php echo xlt('Provider'); ?>:</label>\n                        <?php\n                        $tmp = sqlQuery(\"SELECT fname, mname, lname \" .\n                            \"FROM users WHERE id = ?\", array($ferow['provider_id']));\n                        $provider = text($tmp['fname']) . ' ' . text($tmp['mname']) . ' ' . text($tmp['lname']);\n                        $tmp = sqlQuery(\"SELECT bill_date FROM billing WHERE \" .\n                            \"pid = ? AND encounter = ? AND \" .\n                            \"activity = 1 ORDER BY fee DESC, id ASC LIMIT 1\", array($patient_id, $encounter_id));\n                        $billdate = substr(($tmp['bill_date'] . \"Not Billed\"), 0, 10);\n                        ?>\n                        <input type=\"text\" class=\"form-control\" id='form_provider'\n                               name='form_provider' value=\"<?php echo attr($provider); ?>\" disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_invoice\"><?php echo xlt('Invoice'); ?>:</label>\n                        <input type=\"text\" class=\"form-control\" id='form_provider'\n                               name='form_provider' value='<?php echo attr($patient_id) . \".\" . attr($encounter_id); ?>'\n                               disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"svc_date\"><?php echo xlt('Svc Date'); ?>:</label>\n                        <input type=\"text\" class=\"form-control\" id='svc_date' name='form_provider'\n                               value='<?php echo attr($svcdate); ?>' disabled />\n                    </div>\n                    <div class=\"card bg-light col-lg-4\">\n                        <div class=\"card-title mx-auto\"><?php echo xlt('Insurance'); ?></div>\n                        <?php\n                        for ($i = 1; $i <= 3; ++$i) {\n                            $payerid = SLEOB::arGetPayerID($patient_id, $svcdate, $i);\n                            if ($payerid) {\n                                $tmp = sqlQuery(\"SELECT name FROM insurance_companies WHERE id = ?\", array($payerid));\n                                echo \"$i: \" . $tmp['name'] . \"<br />\";\n                            }\n                        }\n                        ?>\n                    </div>\n                </div>\n                <div class=\"form-group mt-3\">\n                     <textarea name=\"insurance_name\" id=\"insurance_name\" class=\"form-control\" cols=\"5\" rows=\"2\" readonly><?php echo attr($insurance ?? ''); ?></textarea>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_stmt_count\"><?php echo xlt('Statements Sent'); ?>:</label>\n                        <input type='text' name='form_stmt_count' id='form_stmt_count' class=\"form-control\" value='<?php echo attr((0 + $ferow['stmt_count'])); ?>' />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_last_bill\"><?php echo xlt('Last Bill Date'); ?>:</label>\n                        <input type='text' name=\"form_last_bill\" id='form_last_bill' class=\"form-control\"\n                               value ='<?php echo attr($billdate); ?>' disabled />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_reference\"><?php echo xlt('Check/EOB No.'); ?>:</label>\n                        <input type='text' name='form_reference' id='form_reference' class=\"form-control\" value='' />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_check_date\"><?php echo xlt('Check/EOB Date'); ?>:</label>\n                        <input type='text' name='form_check_date' id='form_check_date' class='form-control datepicker' value='' />\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"form_deposit_date\"><?php echo xlt('Deposit Date'); ?>:</label>\n                        <input type='text' name='form_deposit_date' id='form_deposit_date' class='form-control datepicker' value='' />\n                        <input type='hidden' name='form_payer_id' value='' />\n                        <input type='hidden' name='form_orig_reference' value='' />\n                        <input type='hidden' name='form_orig_check_date' value='' />\n                        <input type='hidden' name='form_orig_deposit_date' value='' />\n                        <input type='hidden' name='form_pay_total' value='' />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"type_code\"><?php echo xlt('Now posting for'); ?>:</label>\n                        <div class=\"pl-3\">\n                            <?php\n                                $last_level_closed = 0 + $ferow['last_level_closed'];\n                            ?>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 0 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Ins1\")' type='radio'\n                                    value='Ins1' /><?php echo xlt('Ins1') ?>\n                            </label>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 1 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Ins2\")' type='radio'\n                                    value='Ins2' /><?php echo xlt('Ins2') ?>\n                            </label>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 2 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Ins3\")' type='radio'\n                                    value='Ins3' /><?php echo xlt('Ins3') ?>\n                            </label>\n                            <label class=\"radio-inline\">\n                                <input <?php echo $last_level_closed === 3 ? attr('checked') : ''; ?> name='form_insurance' onclick='setins(\"Pt\")' type='radio'\n                                    value='Pt' /><?php echo xlt('Patient') ?>\n                            </label>\n                            <?php\n                            // TBD: I think the following is unused and can be removed.\n                            ?>\n                            <input name='form_eobs' type='hidden' value='<?php echo attr($arrow['shipvia'] ?? '') ?>'/>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-lg\" id='ins_done'>\n                        <label class=\"col-form-label\" for=\"\"><?php echo xlt('Done with'); ?>:</label>\n                        <a class=\"btn btn-save bg-light text-primary\"\n                            onclick=\"document.forms[0].isLastClosed.value='3'; document.forms[0].submit()\"><?php echo xlt(\"Save Level\"); ?>\n                        </a>\n                        <div class=\"pl-3\">\n                            <?php\n                            // Write a checkbox for each insurance.  It is to be checked when\n                            // we no longer expect any payments from that company for the claim.\n                            $last_level_closed = 0 + $ferow['last_level_closed'];\n                            foreach (array(0 => 'None', 1 => 'Ins1', 2 => 'Ins2', 3 => 'Ins3') as $key => $value) {\n                                if ($key && !SLEOB::arGetPayerID($patient_id, $svcdate, $key)) {\n                                    continue;\n                                }\n                                $checked = ($last_level_closed == $key) ? \" checked\" : \"\";\n                                echo \"<label class='radio-inline'>\";\n                                echo \"<input type='radio' name='form_done' value='\" . attr($key) . \"'$checked />\" . text($value);\n                                echo \"</label>\";\n                            }\n                            ?>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-lg\">\n                        <label class=\"col-form-label\" for=\"\"><?php echo xlt('Secondary billing'); ?>:</label>\n                        <div class=\"pl-3\">\n                            <label class=\"checkbox-inline\">\n                                <input name=\"form_secondary\" type=\"checkbox\" value=\"1\" /><?php echo xlt('Needs secondary billing') ?>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n            <fieldset>\n                <legend><?php echo xlt('Invoice Details'); ?></legend>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-sm\">\n                        <thead>\n                            <tr>\n                                <th><?php echo xlt('Code') ?></th>\n                                <th class=\"text-left\"><?php echo xlt('Charge') ?></th>\n                                <th class=\"text-left\"><?php echo xlt('Balance') ?>&nbsp;</th>\n                                <th><?php echo xlt('By/Source') ?></th>\n                                <th><?php echo xlt('Date') ?></th>\n                                <th><?php echo xlt('Pay') ?></th>\n                                <th><?php echo xlt('Adjust') ?></th>\n                                <th>&nbsp;</th>\n                                <th><?php echo xlt('Reason') ?></th>\n                                <?php\n                                if ($ALLOW_DELETE) { ?>\n                                    <th><?php echo xlt('Del') ?></th>\n                                    <?php\n                                } ?>\n                            </tr>\n                        </thead>\n                        <?php\n                        $firstProcCodeIndex = -1;\n                        $encount = 0;\n                        foreach ($codes as $code => $cdata) {\n                            ++$encount;\n                            $dispcode = $code;\n\n                            // remember the index of the first entry whose code is not \"CO-PAY\", i.e. it's a legitimate proc code\n                            if ($firstProcCodeIndex == -1 && strcmp($code, \"CO-PAY\") != 0) {\n                                $firstProcCodeIndex = $encount;\n                            }\n\n                            // this sorts the details more or less chronologically:\n                            ksort($cdata['dtl']);\n                            foreach ($cdata['dtl'] as $dkey => $ddata) {\n                                $ddate = substr($dkey, 0, 10);\n                                if (preg_match('/^(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)\\s*$/', $ddate, $matches)) {\n                                    $ddate = $matches[1] . '-' . $matches[2] . '-' . $matches[3];\n                                }\n                                $tmpchg = \"\";\n                                $tmpadj = \"\";\n                                if (!empty($ddata['chg']) && ($ddata['chg'] != 0)) {\n                                    if (isset($ddata['rsn'])) {\n                                        $tmpadj = 0 - $ddata['chg'];\n                                    } else {\n                                        $tmpchg = $ddata['chg'];\n                                    }\n                                }\n                                ?>\n                                <tr>\n                                    <td class=\"detail\" style=\"background:<?php echo $dispcode ? 'lightyellow' : ''; ?>\"><?php echo text($dispcode); $dispcode = \"\" ?></td>\n                                    <td class=\"detail\"><?php echo text(bucks($tmpchg)); ?></td>\n                                    <td class=\"detail\">&nbsp;</td>\n                                    <td class=\"detail\">\n                                        <?php\n                                        if (isset($ddata['plv'])) {\n                                            if (!$ddata['plv']) {\n                                                echo 'Pt/';\n                                            } else {\n                                                echo 'Ins' . text($ddata['plv']) . '/';\n                                            }\n                                        }\n                                        echo text($ddata['src'] ?? '');\n                                        ?>\n                                    </td>\n                                    <td class=\"detail\"><?php echo text($ddate); ?></td>\n                                    <td class=\"detail\"><?php echo text(bucks($ddata['pmt'] ?? '')); ?></td>\n                                    <td class=\"detail\"><?php echo text(bucks($tmpadj)); ?></td>\n                                    <td class=\"detail\">&nbsp;</td>\n                                    <td class=\"detail\"><?php echo text($ddata['rsn'] ?? ''); ?></td>\n                                    <?php\n                                    if ($ALLOW_DELETE) { ?>\n                                        <td class=\"detail\">\n                                            <?php\n                                            if (!empty($ddata['arseq'])) { ?>\n                                                <input name=\"form_del[<?php echo attr($ddata['arseq']); ?>]\"\n                                                       type=\"checkbox\" />\n                                                <?php\n                                            } else {\n                                                ?> &nbsp;\n                                                <?php\n                                            } ?>\n                                        </td>\n                                    <?php } ?>\n                                </tr>\n                            <?php } // end of prior detail line ?>\n                            <tr>\n                                <td class=\"last_detail\"><?php echo text($dispcode);\n                                    $dispcode = \"\" ?>\n                                </td>\n                                <td class=\"last_detail\">&nbsp;</td>\n                                <td class=\"last_detail\">\n                                    <input name=\"form_line[<?php echo attr($code); ?>][bal]\" type=\"hidden\"\n                                           value=\"<?php echo attr(bucks($cdata['bal'])); ?>\" />\n                                    <input name=\"form_line[<?php echo attr($code); ?>][ins]\" type=\"hidden\"\n                                           value=\"<?php echo attr($cdata['ins'] ?? ''); ?>\" />\n                                    <input name=\"form_line[<?php echo attr($code); ?>][code_type]\" type=\"hidden\"\n                                           value=\"<?php echo attr($cdata['code_type']); ?>\" /> <?php echo text(sprintf(\"%.2f\", $cdata['bal'])); ?>\n                                    &nbsp;\n                                </td>\n                                <td class=\"last_detail\"></td>\n                                <td class=\"last_detail\"></td>\n                                <td class=\"last_detail\">\n                                    <input name=\"form_line[<?php echo attr($code); ?>][pay]\"\n                                           onkeyup=\"updateFields(document.forms[0]['form_line[<?php echo attr($code); ?>][pay]'], document.forms[0]['form_line[<?php echo attr($code); ?>][adj]'], document.forms[0]['form_line[<?php echo attr($code); ?>][bal]'], document.forms[0]['form_line[CO-PAY][bal]'], <?php echo ($firstProcCodeIndex == $encount) ? 1 : 0 ?>)\"\n                                           onfocus=\"this.select()\" autofocus size=\"10\" type=\"text\" class=\"form-control\"\n                                           value=\"0.00\" />\n                                </td>\n                                <td class=\"last_detail\">\n                                    <input name=\"form_line[<?php echo attr($code); ?>][adj]\" size=\"10\" type=\"text\"\n                                           class=\"form-control\"\n                                           value='<?php echo attr((!empty($totalAdjAmount)) ? $totalAdjAmount : '0.00'); ?>'\n                                           onclick=\"this.select()\" />\n                                </td>\n                                <td class=\"last_detail text-center\">\n                                    <a href=\"#\" class=\"text-decoration-none\" onclick=\"return writeoff(<?php echo attr_js($code); ?>)\">WO</a>\n                                </td>\n                                <td class=\"last_detail\">\n                                    <select class=\"form-control\" name=\"form_line[<?php echo attr($code); ?>][reason]\">\n                                        <?php\n                                        // Adjustment reasons are now taken from the list_options table.\n                                        echo \"    <option value=''></option>\\n\";\n                                        $ores = sqlStatement(\"SELECT option_id, title, is_default FROM list_options \" .\n                                            \"WHERE list_id = 'adjreason' AND activity = 1 ORDER BY seq, title\");\n                                        while ($orow = sqlFetchArray($ores)) {\n                                            echo \"    <option value='\" . attr($orow['option_id']) . \"'\";\n                                            if ($orow['is_default']) {\n                                                echo \" selected\";\n                                            }\n                                            echo \">\" . text($orow['title']) . \"</option>\\n\";\n                                        }\n                                        ?>\n                                    </select>\n                                    <?php\n                                    // TBD: Maybe a comment field would be good here, for appending\n                                    // to the reason.\n                                    ?>\n                                </td>\n                                <?php if ($ALLOW_DELETE) { ?>\n                                    <td class=\"last_detail\">&nbsp;</td>\n                                <?php } ?>\n                            </tr>\n                        <?php } // end of code ?>\n                    </table>\n                </div>\n            </fieldset>\n            <?php //can change position of buttons by creating a class 'position-override' and adding rule text-align:center or right as the case may be in individual stylesheets ?>\n            <div class=\"form-group col-lg clearfix\">\n                <div class=\"col-sm-12 text-left position-override\" id=\"search-btn\">\n                    <div class=\"btn-group\" role=\"group\">\n                        <!-- @todo leave as I may still use sjp 08/2020 -->\n                        <!--<button type='submit' class=\"btn btn-primary btn-save\" name='form_save' id=\"btn-save-stay\"\n                            onclick=\"this.value='1';\"><?php /*echo xlt(\"Save Current\"); */?></button>-->\n                        <button type='submit' class=\"btn btn-primary btn-save\" name='form_save' id=\"btn-save\"\n                            onclick=\"this.value='2';\"><?php echo xlt(\"Save\"); ?></button>\n                        <button type='button' class=\"btn btn-secondary btn-cancel\" name='form_cancel'\n                            id=\"btn-cancel\" onclick='doClose()'><?php echo xlt(\"Close\"); ?></button>\n                    </div>\n                    <?php if ($from_posting) { ?>\n                        <button type='button' class=\"btn btn-secondary btn-view float-right\" name='form_goto' id=\"btn-goto\"\n                            onclick=\"goEncounterSummary(<?php echo attr_js($patient_id) ?>)\"><?php echo xlt(\"Past Encounters\"); ?></button>\n                    <?php } ?>\n                </div>\n            </div>\n        </form>\n    </div>\n</div><!--End of container div-->\n<?php if ($from_posting) { ?>\n<script>\n    var f1 = opener.document.forms[0];\n    var f2 = document.forms[0];\n    if (f1.form_source) {\n        <?php\n        // These support creation and lookup of ar_session table entries:\n        echo \"  f2.form_reference.value         = f1.form_source.value;\\n\";\n        echo \"  f2.form_check_date.value        = f1.form_paydate.value;\\n\";\n        echo \"  //f2.form_deposit_date.value      = f1.form_deposit_date.value;\\n\";\n        echo \"  if (f1.form_deposit_date.value != '')\\n\";\n        echo \"     f2.form_deposit_date.value      = f1.form_deposit_date.value;\\n\";\n        echo \"  else\\n\";\n        echo \"     f2.form_deposit_date.value      = getFormattedToday();\\n\";\n        echo \"  f2.form_payer_id.value          = f1.form_payer_id.value;\\n\";\n        echo \"  f2.form_pay_total.value         = f1.form_amount.value;\\n\";\n        echo \"  f2.form_orig_reference.value    = f1.form_source.value;\\n\";\n        echo \"  f2.form_orig_check_date.value   = f1.form_paydate.value;\\n\";\n        echo \"  f2.form_orig_deposit_date.value = f1.form_deposit_date.value;\\n\";\n\n        // While I'm thinking about it, some notes about eob sessions.\n        // If they do not have all of the session key fields in the search\n        // page, then show a warning at the top of the invoice page.\n        // Also when they go to save the invoice page and a session key\n        // field has changed, alert them to that and allow a cancel.\n\n        // Another point... when posting EOBs, the incoming payer ID might\n        // not match the payer ID for the patient's insurance.  This is\n        // because the same payer might be entered more than once into the\n        // insurance_companies table.  I don't think it matters much.\n        ?>\n    }\n    setins(\"Ins1\");\n</script>\n<?php } ?>\n</body>\n</html>\n", "/**\n * Javascript utility functions for openemr\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2019 Brady Miller <brady.g.miller@gmail.com>\n * @copyright Copyright (c) 2019-2020 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n/* We should really try to keep this library jQuery free ie javaScript only! */\n\n// Translation function\n// This calls the i18next.t function that has been set up in main.php\nfunction xl(string) {\n    if (typeof top.i18next.t == 'function') {\n        return top.i18next.t(string);\n    } else {\n        // Unable to find the i18next.t function, so log error\n        console.log(\"xl function is unable to translate since can not find the i18next.t function\");\n        return string;\n    }\n}\n\n// html escaping functions - special case when sending js string to html (see codebase for examples)\n//   jsText (equivalent to text() )\n//   jsAttr (equivalent to attr() )\n// must be careful assigning const in this script. can't reinit a constant\nif (typeof htmlEscapesText === 'undefined') {\n    const htmlEscapesText = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;'\n    };\n    const htmlEscapesAttr = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;'\n    };\n    const htmlEscaperText = /[&<>]/g;\n    const htmlEscaperAttr = /[&<>\"']/g;\n    jsText = function (string) {\n        return ('' + string).replace(htmlEscaperText, function (match) {\n            return htmlEscapesText[match];\n        });\n    };\n    jsAttr = function (string) {\n        return ('' + string).replace(htmlEscaperAttr, function (match) {\n            return htmlEscapesAttr[match];\n        });\n    };\n}\n\n// another useful function\nasync function syncFetchFile(fileUrl, type = 'text') {\n    let content = '';\n    let response = await fetch(fileUrl);\n    if (type == 'text') {\n        content = await response.text();\n    }\n    if (type == 'json') {\n        content = await response.json();\n    }\n\n    return content;\n}\n\n/*\n* function includeScript(srcUrl, type)\n*\n* @summary Dynamically include JS Scripts or Css.\n*\n* @param {string} url file location.\n* @param {string} 'script' | 'link'.\n*\n* */\nfunction includeScript(srcUrl, type) {\n    return new Promise(function (resolve, reject) {\n        if (type == 'script') {\n            let newScriptElement = document.createElement('script');\n            newScriptElement.src = srcUrl;\n            newScriptElement.onload = () => resolve(newScriptElement);\n            newScriptElement.onerror = () => reject(new Error(`Script load error for ${srcUrl}`));\n\n            document.head.append(newScriptElement);\n            console.log('Needed to load:[' + srcUrl + '] For: [' + location + ']');\n        }\n        if (type === \"link\") {\n            let newScriptElement = document.createElement(\"link\")\n            newScriptElement.type = \"text/css\";\n            newScriptElement.rel = \"stylesheet\";\n            newScriptElement.href = srcUrl;\n            newScriptElement.onload = () => resolve(newScriptElement);\n            newScriptElement.onerror = () => reject(new Error(`Link load error for ${srcUrl}`));\n\n            document.head.append(newScriptElement);\n            console.log('Needed to load:[' + srcUrl + '] For: [' + location + ']');\n        }\n    });\n}\n\n/*\n*  This is where we want to decide what we need for the instance\n*  We only want to load any needed dependencies.\n*\n*/\ndocument.addEventListener('DOMContentLoaded', function () {\n    let isNeeded = document.querySelectorAll('.drag-action').length;\n    let isNeededResize = document.querySelectorAll('.resize-action').length;\n    if (isNeeded || isNeededResize) {\n        initDragResize();\n    }\n\n}, false);\n\n/*\n* @function initDragResize(dragContext, resizeContext)\n* @summary call this function from scripts you may want to provide a different\n*  context other than the page context of this utility\n*\n* @param {object} context of element to apply drag.\n* @param {object} optional context of element. document is default.\n*/\nfunction initDragResize(dragContext, resizeContext = document) {\n    let isLoaded = typeof window.interact;\n    if (isLoaded !== 'function') {\n        (async (utilfn) => {\n            await includeScript(utilfn, 'script');\n        })(top.webroot_url + '/public/assets/interactjs/dist/interact.js')\n        .then(() => {\n            initInteractors(dragContext, resizeContext);\n        });\n    } else {\n        initInteractors(dragContext, resizeContext);\n    }\n}\n\n/* function to init all page drag/resize elements.*/\nfunction initInteractors(dragContext = document, resizeContext = '') {\n    resizeContext = resizeContext ? resizeContext : dragContext;\n\n    /* Draggable */\n    // reset\n    interact(\".drag-action\", {context: dragContext}).unset();\n    // init\n    interact(\".drag-action\", {context: dragContext}).draggable({\n        enabled: true,\n        inertia: true,\n        modifiers: [\n            interact.modifiers.snap({\n                targets: [\n                    interact.createSnapGrid({x: 30, y: 30})\n                ],\n                range: Infinity,\n                relativePoints: [{x: 0, y: 0}]\n            }),\n            interact.modifiers.restrict({\n                restriction: \"parent\",\n                elementRect: {top: 0, left: 0, bottom: 1, right: 1},\n                endOnly: true\n            })\n        ],\n        autoScroll: false,\n        maxPerElement: 2\n    }).on('dragstart', function (event) {\n        event.preventDefault();\n    }).on('dragmove', dragMoveListener);\n\n    /* Resizable */\n    interact(\".resize-action\", {context: resizeContext}).unset();\n\n    interact(\".resize-action\", {context: resizeContext}).resizable({\n        enabled: true,\n        preserveAspectRatio: false,\n        edges: {\n            left: '.resize-s',\n            right: true,\n            bottom: true,\n            top: '.resize-s'\n        },\n        inertia: {\n            resistance: 30,\n            minSpeed: 100,\n            endSpeed: 50\n        },\n        snap: {\n            targets: [\n                interact.createSnapGrid({\n                    x: 5, y: 5\n                })\n            ],\n            range: Infinity,\n            relativePoints: [{x: 0, y: 0}]\n        },\n    }).on('resizestart', function (event) {\n        event.preventDefault();\n    }).on('resizemove', function (event) {\n        let target = event.target;\n        let x = (parseFloat(target.getAttribute('data-x')) || 0);\n        let y = (parseFloat(target.getAttribute('data-y')) || 0);\n\n        target.style.width = event.rect.width + 'px';\n        target.style.height = event.rect.height + 'px';\n        x += event.deltaRect.left;\n        y += event.deltaRect.top;\n\n        target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px,' + y + 'px)';\n        target.setAttribute('data-x', x);\n        target.setAttribute('data-y', y);\n    });\n\n    function dragMoveListener(event) {\n        let target = event.target;\n        let x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n        let y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n        if ('webkitTransform' in target.style || 'transform' in target.style) {\n            target.style.webkitTransform =\n                target.style.transform =\n                    'translate(' + x + 'px, ' + y + 'px)';\n        } else {\n            target.style.left = x + 'px';\n            target.style.top = y + 'px';\n        }\n\n        target.setAttribute('data-x', x);\n        target.setAttribute('data-y', y);\n    }\n}\n\n/*\n* @function oeSortable(callBackFn)\n* @summary call this function from scripts you may need to use sortable\n*\n* @param function A callback function which is called with the sorted elements as parameter\n*/\nfunction oeSortable(callBackFn) {\n    if (typeof window.interact !== 'function') {\n        (async (interactfn) => {\n            await includeScript(interactfn, 'script');\n        })(top.webroot_url + '/public/assets/interactjs/dist/interact.js').then(() => {\n            load();\n        });\n    } else {\n        load();\n    }\n    function clearTranslate(elem){\n        elem.style.webkitTransform =\n            elem.style.transform =\n            'translate(' + 0 + 'px, ' + 0 + 'px)'\n        elem.setAttribute('data-x', 0)\n        elem.setAttribute('data-y', 0)\n    }\n    function switchElem(elem1, elem2, clear = false){\n        $(elem2).append($(elem1).children()[0]);\n        $(elem1).append($(elem2).children()[0]);\n        if(clear){\n             clearTranslate($(elem2).children()[0]);\n             clearTranslate($(elem1).children()[0]);\n        }\n    }\n    function moveUp(elem){\n        if(elem){\n            let prevElem = $(elem).prev(\".droppable\");\n            if(prevElem.length > 0){\n                let childIsDragging = prevElem.children(\"li.is-dragging\")[0];\n                if(childIsDragging){\n                    switchElem(elem, prevElem[0], true);\n                    return true;\n                }else{\n                    if(prevElem[0]){\n                        if(moveUp(prevElem[0])){\n                            switchElem(elem, prevElem[0]);\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    function moveDown(elem){\n        if(elem){\n            let nxtElem = $(elem).next(\".droppable\");\n            if(nxtElem.length > 0){\n                let childIsDragging = nxtElem.children(\"li.is-dragging\")[0];\n                if(childIsDragging){\n                    switchElem(elem, nxtElem[0], true);\n                    return true;\n                }else{\n                    if(nxtElem[0]){\n                        if(moveDown(nxtElem[0])){\n                            switchElem(elem, nxtElem[0]);\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    function dragMoveListener (event) {\n        var target = event.target\n        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\n        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\n        target.style.webkitTransform =\n            target.style.transform =\n            'translate(' + x + 'px, ' + y + 'px)'\n        target.setAttribute('data-x', x)\n        target.setAttribute('data-y', y)\n    }\n    function load(){\n        interact('.droppable').dropzone({\n            accept: null,\n            overlap: 0.9,\n            ondropactivate: function (event) {\n                event.relatedTarget.classList.add('is-dragging');\n            },\n            ondragenter: function (event) {\n                let isUpper = moveUp(event.target);\n                if(!isUpper){\n                    moveDown(event.target);\n                }\n            },\n            ondropdeactivate: function (event) {\n                if(event.target.firstChild.classList.contains('is-dragging')){\n                    let items = event.target.parentNode.children;\n                    event.relatedTarget.classList.remove('is-dragging');\n                    clearTranslate(event.relatedTarget);\n                    callBackFn && callBackFn(items);\n                }\n            }\n        })\n\n        interact('.draggable')\n            .draggable({\n                inertia: true,\n                modifiers: [\n                interact.modifiers.restrictRect({\n                    restriction: null,\n                    endOnly: true\n                })\n                ],\n                autoScroll: true,\n                listeners: { move: dragMoveListener }\n        })\n    }\n\n}\n\n\n/*\n* Universal async BS alert message with promise\n* Note the use of new javaScript translate function xl().\n*\n*/\nif (typeof asyncAlertMsg !== \"function\") {\n    function asyncAlertMsg(message, timer = 5000, type = 'danger', size = '') {\n        let alertMsg = xl(\"Alert Notice\");\n        $('#alert_box').remove();\n        size = (size == 'lg') ? 'left:25%;width:50%;' : 'left:35%;width:30%;';\n        let style = \"position:fixed;top:25%;\" + size + \" bottom:0;z-index:9999;\";\n        $(\"body\").prepend(\"<div class='container text-center' id='alert_box' style='\" + style + \"'></div>\");\n        let mHtml = '<div id=\"alertmsg\" class=\"alert alert-' + type + ' alert-dismissable\">' +\n            '<button type=\"button\" class=\"close btn btn-link btn-cancel\" data-dismiss=\"alert\" aria-hidden=\"true\"></button>' +\n            '<h5 class=\"alert-heading text-center\">' + alertMsg + '</h5><hr>' +\n            '<p>' + message + '</p>' +\n            '</div>';\n        $('#alert_box').append(mHtml);\n        return new Promise(resolve => {\n            $('#alertmsg').on('closed.bs.alert', function () {\n                clearTimeout(AlertMsg);\n                $('#alert_box').remove();\n                resolve('closed');\n            });\n            let AlertMsg = setTimeout(function () {\n                $('#alertmsg').fadeOut(800, function () {\n                    $('#alert_box').remove();\n                    resolve('timedout');\n                });\n            }, timer);\n        })\n    }\n}\n\n/*\n* function syncAlertMsg(()\n*\n* Universal sync BS alert message returns promise after resolve.\n* Call below to return a promise after alert is resolved.\n* Example: syncAlertMsg('Hello, longtime, 'success', 'lg').then( asyncRtn => ( ... log something });\n*\n* Or use as IIFE to run inline.\n* Example:\n*   (async (time) => {\n*       await asyncAlertMsg('Waiting till x'ed out or timeout!', time); ...now go;\n*   })(3000).then(rtn => { ... but then could be more });\n*\n* */\nasync function syncAlertMsg(message, timer = 5000, type = 'danger', size = '') {\n    return await asyncAlertMsg(message, timer, type, size);\n}\n\n/* Handy function to set values in globals user_settings table */\nif (typeof persistUserOption !== \"function\") {\n    const persistUserOption = function (option, value) {\n        return $.ajax({\n            url: top.webroot_url + \"/library/ajax/user_settings.php\",\n            type: 'post',\n            contentType: 'application/x-www-form-urlencoded',\n            data: {\n                csrf_token_form: top.csrf_token_js,\n                target: option,\n                setting: value\n            },\n            beforeSend: function () {\n                top.restoreSession();\n            },\n            error: function (jqxhr, status, errorThrown) {\n                console.log(errorThrown);\n            }\n        });\n    };\n}\n\n/**\n * User Debugging Javascript Errors\n * Turn on/off in Globals->Logging\n *\n * @package   OpenEMR Utilities\n * @link      http://www.open-emr.org\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n */\n\nif (typeof top.userDebug !== 'undefined' && (top.userDebug === '1' || top.userDebug === '3')) {\n    window.onerror = function (msg, url, lineNo, columnNo, error) {\n        const is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n        const is_firefox = navigator.userAgent.indexOf('Firefox') > -1;\n        const is_safari = navigator.userAgent.indexOf(\"Safari\") > -1;\n\n        var showDebugAlert = function (message) {\n            let errorMsg = [\n                'URL: ' + message.URL,\n                'Line: ' + message.Line + ' Column: ' + message.Column,\n                'Error object: ' + JSON.stringify(message.Error)\n            ].join(\"\\n\");\n\n            let msg = message.Message + \"\\n\" + errorMsg;\n            console.error(xl('User Debug Error Catch'), message);\n            alert(msg);\n\n            return false;\n        };\n\n        let string = msg.toLowerCase();\n        let substring = xl(\"script error\"); // translate to catch for language of browser.\n        if (string.indexOf(substring) > -1) {\n            let xlated = xl('Script Error: See Browser Console for Detail');\n            showDebugAlert(xlated);\n        } else {\n            let message = {\n                Message: msg,\n                URL: url,\n                Line: lineNo,\n                Column: columnNo,\n                Error: JSON.stringify(error)\n            };\n\n            showDebugAlert(message);\n        }\n\n        return false;\n    };\n}\n\n", "<?php\n\n/**\n * OemrUI class.\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Ranganath Pathak <pathak@scrs1.org>\n * @copyright Copyright (c) 2018 Ranganath Pathak <pathak@scrs1.org>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nnamespace OpenEMR\\OeUI;\n\nuse OpenEMR\\Common\\Csrf\\CsrfUtils;\nuse OpenEMR\\Core\\Header;\n\n// Special case where not setting up the header for a script, so using setupAssets function,\n//  which does not autoload anything. The actual header is set up in another script.\nHeader::setupAssets();\n\nclass OemrUI\n{\n    private $action;\n    private $action_bot_js;\n    private $action_href;\n    private $action_icon;\n    private $action_title;\n    private $action_top_js;\n    private $arrAction;\n    private $arrexpandIcon;\n    private $arrFiles;\n    private $arrOeUiSettings;\n    private $arrow_direction;\n    private $close;\n    private $collectToken;\n    private $container;\n    private $contractTitle;\n    private $current_state;\n    private $display_help_icon;\n    private $expand_icon_class;\n    private $expand_title;\n    private $expandable;\n    private $expandable_icon;\n    private $expandTitle;\n    private $header_expand_js;\n    private $heading;\n    private $help_file;\n    private $help_icon;\n    private $help_modal;\n    private $jquery_draggable;\n    private $modal_body;\n    private $print;\n    private $target;\n    private $web_root;\n\n    /**\n    * Create the html string that will display the formatted heading with selected icons - expandable,\n    * action and help and generate the html code for the help modal and output all the jQuery needed to make it work.\n    *\n    * @param array $arrOeUiSettings is an associative array that contains 9 elements, string 'heading_title',\n    * int|bool 'include_patient_name', int|bool 'expandable', array 'expandable_files', string 'action', string 'action_title',\n    * string 'action_href', int|bool 'show_help_icon' and string 'help_file_name'.\n    * The int|bool 'current_state' (expanded = 1, centered = 0) value is obtained from function collectAndOrganizeExpandSetting(array(\"\")),\n    * this function needs an indexed array as an argument (array ('expandable_files')) that contains the file name\n    * of the current file as the first element, the name of any other file that needs to open in a similar state\n    * needs to be included in this array,all names must be unique and have a '_xpd' suffix.\n    * It will be used to generate up to 4 values - string $heading, string $expandable_icon, string $action_icon and string $help_icon\n    * that will form the html string used to output the formatted heading of the page.\n    * If a feature is not required set the corresponding element in the array to an empty string\n    */\n    public function __construct($arrOeUiSettings = array())\n    {\n        global $v_js_includes;\n\n        $this->heading = (!empty($arrOeUiSettings['include_patient_name']) && !empty($arrOeUiSettings['heading_title'])) ? ($arrOeUiSettings['heading_title'] ?? '') . \" - \" . getPatientNameFirstLast($_SESSION['pid']) : ($arrOeUiSettings['heading_title'] ?? '');\n        $this->expandable = $arrOeUiSettings['expandable'] ?? null;\n        $this->arrFiles = $arrOeUiSettings['expandable_files'] ?? null;\n        $this->arrAction = array(($arrOeUiSettings['action'] ?? null), ($arrOeUiSettings['action_title'] ?? null), ($arrOeUiSettings['action_href'] ?? null));\n        $this->display_help_icon = $arrOeUiSettings['show_help_icon'] ?? null;\n        $this->help_file = $arrOeUiSettings['help_file_name'] ?? null;\n        if (!empty($arrOeUiSettings['expandable']) && !empty($arrOeUiSettings['expandable_files'])) {\n            $this->current_state = collectAndOrganizeExpandSetting($arrOeUiSettings['expandable_files']);\n        }\n    }\n\n    /**\n    * Creates the html string that will display the formatted heading with selected icons - expandable, action and help.\n    *\n    * @return array containing string $heading - the formatted html string of the actual heading and string $container\n    * - the value of the container class 'container' or 'container-fluid'\n    *\n    */\n    public function pageHeading()\n    {\n        $heading = text($this->heading);\n        if (!empty($heading)) {\n            $arrexpandIcon = $this->expandIcon();// returns and array containing expandable icon string and container class string\n            $action_icon = $this->actionIcon();\n            $help_icon = $this->helpIcon();\n            $expandable_icon = $arrexpandIcon[0];\n            $heading = \"<h2>$heading $expandable_icon $action_icon $help_icon</h2>\";\n        } else {\n            $heading = \"<h2>\" . xlt(\"Please supply a heading\") . \" <i class='fa fa-oe-smile-o' aria-hidden='true'></i></h2>\";\n        }\n        return $heading;\n    }\n\n    /**\n    * Creates the html string that will display the formatted expandable icon - fa-expand or fa-compress.\n    *\n    * @param $expandable - int|bool - whether form is expandable or not and $current_state int|bool - the current state of the form\n    *\n    * @return array containing string $expandable_icon - the formatted html string of the expand icon and string\n    * $container - the value of the container class 'container' or 'container-fluid'\n    *\n    */\n    private function expandIcon($expandable = '', $current_state = '')\n    {\n        $current_state = $this->current_state;\n        $expandable = $this->expandable;\n\n        if ($current_state) {\n            $container = 'container-fluid';\n            $expand_title = xl('Click to Contract and set to henceforth open in Centered mode');\n            $expand_icon_class = 'fa-compress oe-center';\n        } else {\n            $container = 'container';\n            $expand_title = xl('Click to Expand and set to henceforth open in Expanded mode');\n            $expand_icon_class = 'fa-expand oe-expand';\n        }\n        $expandable_icon = '';\n        if ($expandable) {\n            $expandable_icon = \"<a href='#' id='exp_cont_icon' class='text-dark text-decoration-none oe-superscript-small expand_contract fa \" .  attr($expand_icon_class) . \"'\" . \" title='\" . attr($expand_title) . \"'\n            aria-hidden='true'></a>\";\n        }\n        return array($expandable_icon, $container);\n    }\n\n    /**\n    * Will return the container class value either 'container' or 'container-fluid'\n    *\n    * @return string $container that will reflect the current state of the page i.e. expanded = 'container-fluid' or centered = 'container'\n    */\n    public function oeContainer()\n    {\n        $arrexpandIcon = $this->expandIcon();\n        $container = $arrexpandIcon[1] ? $arrexpandIcon[1] : 'container';\n        return $container;\n    }\n\n    /**\n    * Creates the html string that will display the formatted action/re-direction icon - for conceal, reveal, search, reset, link and back.\n    *\n    * @param array $arrAction has 3 elements - string - type of action, string - optional title to be used in tooltip\n    * and string - the file name or url to be redirected to, only the 3 re-directions reset, link or back need a href value\n    * the 3 actions conceal, reveal, search will only use the default title strings\n    *\n    * @return string $action_icon that will output the action icon html string\n    *\n    */\n    private function actionIcon($arrAction = array())\n    {\n        $arrAction = $this->arrAction;\n        if ($arrAction) {\n            $action = $arrAction[0];\n            $action_title = $arrAction[1];\n            $action_href = $arrAction[2];\n        }\n        $action_href = ($action_href) ? $action_href : \"#\";\n        switch ($action) {\n            case \"reset\":\n                $action_title = ($action_title) ? $action_title : xl(\"Reset\");\n                $action_icon = \"<a href='\" . attr($action_href) . \"' onclick='top.restoreSession()'><i id='advanced-action' class='fa fa-undo fa-oe-sm' title='\" . attr($action_title) . \"' aria-hidden='true'></i></a>\";\n                break;\n            case \"conceal\":\n                $action_title = xl(\"Click to Hide\"); // default needed for jQuery to function\n                $action_icon = \"<i id='show_hide' class='fa fa-oe-sm fa-eye-slash' title='\" . attr($action_title) . \"'></i>\";\n                break;\n            case \"reveal\":\n                $action_title = xl(\"Click to Show\"); // default needed for jQuery to function\n                $action_icon = \"<i id='show_hide' class='fa fa-oe-sm fa-eye' title='\" . attr($action_title) . \"'></i>\";\n                break;\n            case \"search\":\n                $action_title = xl(\"Click to show search\"); // default needed for jQuery to function\n                $action_icon = \"<i id='show_hide' class='fa fa-search-plus fa-oe-sm' title='\" . attr($action_title) . \"'></i>\";\n                break;\n            case \"link\":\n                if (strpos($action_href, 'http') !== false) {\n                    $target = '_blank';\n                } else {\n                    $target = '_self';\n                }\n                $action_title = ($action_title) ? $action_title : xl(\"Click to go to page\");\n                $action_icon = \"<a href='\" . attr($action_href) . \"' target = '\" . attr($target) . \"' onclick='top.restoreSession()'><i id='advanced-action' class='fa fa-external-link-alt fa-oe-sm' title='\" . attr($action_title) . \"' aria-hidden='true'></i></a>\";\n                break;\n            case \"back\":\n                $action_title = ($action_title) ? $action_title : xl(\"Go Back\");\n                if ($_SESSION ['language_direction'] == 'ltr') {\n                    $arrow_direction = 'fa-arrow-circle-left';\n                } elseif ($_SESSION ['language_direction'] == 'rtl') {\n                    $arrow_direction = 'fa-arrow-circle-right';\n                }\n                $action_icon = \"<a href='\" . attr($action_href) . \"' onclick='top.restoreSession()'><i id='advanced-action' class='fa \" . attr($arrow_direction) . \" fa-oe-sm' title='\" . attr($action_title) . \"' aria-hidden='true'></i></a>\";\n                break;\n            default:\n                $action_icon = '';\n        }\n        return $action_icon;\n    }\n\n    /**\n    * Creates the html string that will display the formatted help icon - fa-question-circle.\n    *\n    * @param int|bool  $display_help_icon\n    *\n    * @return string $help_icon that will output the help icon html string\n    *\n    */\n    private function helpIcon($display_help_icon = '')\n    {\n        $help_icon = '';\n        $display_help_icon = $this->display_help_icon;\n        if ($display_help_icon) {\n            if ($_SESSION ['language_direction'] == 'ltr') {\n                $help_icon_title = xl(\"To enable help - Go to the User Name on top right > Settings > Features > Enable Help Modal\");\n            } elseif ($_SESSION ['language_direction'] == 'rtl') {\n                $help_icon_title = xl(\"To enable help - Go to the User Name on top left > Settings > Features > Enable Help Modal\");\n            }\n            if ($GLOBALS['enable_help'] == 1) {\n                $help_icon = '<a class=\"oe-pull-away oe-help-redirect\" data-target=\"#myModal\" data-toggle=\"modal\" href=\"#\" id=\"help-href\" name=\"help-href\" style=\"color:#676666\" title=\"' . xla(\"Click to view Help\") . '\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>';\n            } elseif ($GLOBALS['enable_help'] == 2) {\n                $help_icon = '<a class=\"oe-pull-away oe-help-redirect\" data-target=\"#myModal\" data-toggle=\"modal\" href=\"#\" id=\"help-href\" name=\"help-href\" style=\"color:#DCD6D0 !Important\" title=\"' . attr($help_icon_title) . '\"><i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i></a>';\n            } elseif ($GLOBALS['enable_help'] == 0) {\n                 $help_icon = '';\n            }\n        }\n        return $help_icon;\n    }\n\n    /**\n    * Output the help modal html along with the jQuery to make it work.\n    *\n    * $param string $help_file - name of the help file to be displayed, must exists in Documentation/help_files\n    * will echo the entire html string of the help modal and the jQuery, needs to be used as the first line after the container div\n    *\n    * @return void\n    *\n    */\n    private function helpFileModal($help_file = '')\n    {\n        $help_file = $this->help_file;\n        $close = xla(\"Close\");\n        $print = xla(\"Print\");\n        if ($help_file) {\n            $help_file = attr($help_file);\n            $help_file = $GLOBALS['webroot'] . \"/Documentation/help_files/$help_file\";\n            $modal_body = \"<iframe src=\\\"$help_file\\\" id='targetiframe' class='w-100 h-100 border-0' style='overflow-x: hidden;'\n                                allowtransparency='true'></iframe>\";\n        } else {\n            $modal_body = \"<h3> <i class='fa fa-exclamation-triangle  oe-text-red' aria-hidden='true'></i> \" . xlt(\"Check if a help file exists for this page in\") . \" \" . text(\"Documentation/help_files\") . \".<br /><br />\" . xlt(\"Then pass it's name as a value to the element\" . \" \" . text(\"'help_file_name'\") . \" \"  .  \"in the associative array\") . \" \" . text(\"\\$arrOeUiSettings\") . \".<br /><br />\" . xlt(\"If the help file does not exist create one and place it in\") . \" \" . text(\"Documentation/help_files\") . \".<br />\" . \"</h3>\";\n        }\n        $help_modal = <<<HELP\n        <div class=\"row\">\n            <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content  oe-modal-content\" style=\"height:700px\">\n                        <div class=\"modal-header clearfix\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"$close\">\n                            <span aria-hidden=\"true\" class='text-black' style='font-size:1.5em;'>\u00d7</span></button>\n                        </div>\n                        <div class=\"modal-body\" style=\"height:80%;\">\n                            $modal_body\n                        </div>\n                        <div class=\"modal-footer mt-0\">\n                           <button class=\"btn btn-link btn-cancel oe-pull-away\" data-dismiss=\"modal\" type=\"button\">$close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\nHELP;\n        echo $help_modal . \"\\r\\n\";\n\n        $jquery_draggable = <<<JQD\n        <script>\n        // Jquery draggable\n            $(\".modal-dialog\").addClass('drag-action');\n            $(\".modal-content\").addClass('resize-action');\n            var helpTitle = $('#help-href').prop('title');\n            $('#myModal').on('hidden.bs.modal', function (e) {\n                $('#help-href').prop('title', '');\n            });\n            $('#help-href').focus( function() {\n                $('#help-href').prop('title', helpTitle);\n            });\n        </script>\nJQD;\n        echo $jquery_draggable . \"\\r\\n\";\n        return;\n    }\n\n    /**\n    * Generates the jQuery for the form to toggle between 'expanded' and 'centered' states.\n    *\n    * @param array $arrFiles - that contains the files names that need to be toggled between 'expanded' and 'centered' states\n    * will generate the jQuery that will be outputted on the page by function oeBelowContainerDiv()\n    *\n    * @return void\n    *\n    */\n    private function headerExpandJs($arrFiles = array())\n    {\n        $expandTitle = xlj(\"Click to Contract and set to henceforth open in Centered mode\");\n        $contractTitle = xlj(\"Click to Expand and set to henceforth open in Expanded mode\");\n        $arrFiles = json_encode($this->arrFiles);\n        $web_root = $GLOBALS['webroot'];\n        $collectToken = js_escape(CsrfUtils::collectCsrfToken());\n        $header_expand_js = <<<EXP\n        <script>\n        $(window).on('resize', function() {//hide icon on smaller devices as width is almost 100%\n            var winWidth = $(this).width();\n            if (winWidth <  900) {\n                $(\"#exp_cont_icon\").addClass (\"hidden\");\n            } else {\n                $(\"#exp_cont_icon\").removeClass (\"hidden\");\n            }\n        });\n        $(function () {\n            $(window).trigger('resize');// to avoid repeating code triggers above on page open\n        });\n\n        $(function () {\n            $('.expand_contract').click(function () {\n                var elementTitle;\n                var expandTitle = {$expandTitle};\n                var contractTitle = {$contractTitle};\n                var arrFiles = {$arrFiles};\n                if ($(this).is('.oe-expand')) {\n                    elementTitle = expandTitle;\n                    $(this).toggleClass('fa-expand fa-compress');\n                    $(this).toggleClass('oe-expand oe-center');\n                    $('#container_div').toggleClass('container container-fluid');\n                    if ($(arrFiles).length) {\n                        $.each(arrFiles, function (index, value) {\n\n                            $.post(\n                                \"{$web_root}/library/ajax/user_settings.php\",\n                                {\n                                    target: arrFiles[index].trim(),\n                                    setting: 1,\n                                    csrf_token_form: {$collectToken}\n                                }\n                            );\n                        });\n                    }\n                } else if ($(this).is('.oe-center')) {\n                    elementTitle = contractTitle;\n                    $(this).toggleClass('fa-compress fa-expand');\n                    $(this).toggleClass('oe-center oe-expand');\n                    $('#container_div').toggleClass('container-fluid container');\n                    if ($(arrFiles).length) {\n                        $.each(arrFiles, function (index, value) {\n                            $.post(\n                                \"{$web_root}/library/ajax/user_settings.php\",\n                                {\n                                    target: arrFiles[index].trim(),\n                                    setting: 0,\n                                    csrf_token_form: {$collectToken}\n                                }\n                            );\n                        });\n                    }\n                }\n                $(this).prop('title', elementTitle);\n            });\n        });\n        </script>\nEXP;\n        echo $header_expand_js . \"\\r\\n\";\n        return;\n    }\n\n    /**\n    * Generates the jQuery to enable an element to toggle between hidden and revealed states.\n    *\n    * @param array $arrAction - first element contains the string for type of action - needed only for actions search, reveal and conceal\n    * will generate the jQuery that will be outputted on the page by function oeBelowContainerDiv()\n    *\n    * @return void\n    *\n    */\n    private function headerActionJs($arrAction = array())\n    {\n        $arrAction = $this->arrAction;\n        $page = attr(str_replace(\" \", \"\", $this->heading));\n\n        // Build the labels for when the icon is moused-over\n        $labels = \"\";\n        if ($arrAction[0] == 'search') {\n            $labels .= \"var showTitle = \" .  xlj('Click to show search') . \"\\r\\n;\";\n            $labels .= \"var hideTitle = \" . xlj('Click to hide search') . \"\\r\\n;\";\n        } elseif ($arrAction[0] == 'reveal' || $arrAction[0] == 'conceal') {\n            $labels .= \"var hideTitle = \" .  xlj('Click to Hide') . \"\\r\\n;\";\n            $labels .= \"var showTitle = \" . xlj('Click to Show') . \"\\r\\n;\";\n        }\n\n        // Build the classes for which icon to display whien hiding, showing, etc.\n        $actionClasses = \"\";\n        if ($arrAction[0] == 'search') {\n            $actionClasses .= \"var showActionClass = 'fa-search-plus'; \\r\\n\";\n            $actionClasses .= \"var hideActionClass = 'fa-search-minus'; \\r\\n\";\n        } elseif ($arrAction[0] == 'reveal') {\n            $actionClasses .= \"var showActionClass = 'fa-eye'; \\r\\n\";\n            $actionClasses .= \"var hideActionClass = 'fa-eye-slash'; \\r\\n\";\n        } elseif ($arrAction[0] == 'conceal') {\n            $actionClasses .= \"var showActionClass = 'fa-eye-slash'; \\r\\n\";\n            $actionClasses .= \"var hideActionClass = 'fa-eye'; \\r\\n\";\n        }\n\n        $action_top_js = <<<SHWTOP\n        <script>\n        $(function () {\n            $labels\n            $actionClasses\n            $('#show_hide').click(function () {\n                var elementTitle = '';\nSHWTOP;\n        echo $action_top_js . \"\\r\\n\";\n\n                $action_bot_js = <<<SHWBOT\n\n                $(this).toggleClass(showActionClass + ' ' + hideActionClass);\n\n                $('.hideaway').toggle(500);\n                if ($(this).is('.' + showActionClass)) {\n                    elementTitle = showTitle;\n                } else if ($(this).is('.' + hideActionClass)) {\n                    elementTitle = hideTitle;\n                }\n                $(this).prop('title', elementTitle);\n\n                // Remember our hideaway setting in local storage. If it's visible, show it on next page load\n                localStorage.setItem('display#$page', elementTitle);\n            }); // End of show_hide click()\n\n            // Use localStorage to remember your last setting\n            // Simulate 'click-to-show' if display is set to 'true', or null if there's no setting (default)\n            // getItem() returns a string which is why we have to check for the string 'true'\n            const elementTitle = localStorage.getItem('display#$page');\n            let shouldDisplay = false;\n            if (typeof hideTitle != 'undefined' &&\n                (elementTitle == hideTitle || elementTitle == null)) {\n                shouldDisplay = true\n            }\n\n            // We display if we remember we're showing it, but we don't intentionally hide it (no else here to hide)\n            // Because the hideaway is probably shown by default for a reason like in the billing manager\n            if (shouldDisplay) {\n                $('.hideaway').show(500);\n                $('#show_hide').removeClass(showActionClass);\n                $('#show_hide').addClass(hideActionClass);\n            }\n        });\n        </script>\nSHWBOT;\n        echo $action_bot_js . \"\\r\\n\";\n        return;\n    }\n\n    /**\n    * Output the help modal html with needed jQuery, jQuery to enable an element to toggle between 'hidden' and 'revealed states'\n    * and/or 'expand' and 'centered' states.\n    *\n    * based on the values in the associative array $arrOeUiSettings the relevant code will be outputted to the page\n    * for consistency always call this function just below the container div on the page\n    *\n    * @return void\n    *\n    */\n    public function oeBelowContainerDiv()\n    {\n        $this->display_help_icon ? $this->helpFileModal() : '';\n        $this->expandable ? $this->headerExpandJs() : '';\n        $this->arrAction[0] ? $this->headerActionJs() : '';\n        return;\n    }\n}\n"], "filenames": ["interface/billing/sl_eob_invoice.php", "library/js/utility.js", "src/OeUI/OemrUI.php"], "buggy_code_start_loc": [606, 29, 396], "buggy_code_end_loc": [608, 348, 397], "fixing_code_start_loc": [606, 29, 396], "fixing_code_end_loc": [608, 351, 397], "type": "CWE-79", "message": "Stored Cross Site Scripting in GitHub repository openemr/openemr prior to 6.0.0.2.", "other": {"cve": {"id": "CVE-2022-1181", "sourceIdentifier": "security@huntr.dev", "published": "2022-03-30T12:15:08.193", "lastModified": "2022-04-04T19:52:46.737", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Stored Cross Site Scripting in GitHub repository openemr/openemr prior to 6.0.0.2."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross Site Scripting Almacenado en el repositorio de GitHub openemr/openemr versiones anteriores a 6.0.0.2"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.0, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.1, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "6.0.0.2", "matchCriteriaId": "E03E6495-8B2E-415F-B8F4-D0496EF6D13E"}]}]}], "references": [{"url": "https://github.com/openemr/openemr/commit/2835cc397610fc28037302dad948c38fda032022", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/2534e0fb-f503-4a4b-aed1-ec448c98bf60", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/openemr/openemr/commit/2835cc397610fc28037302dad948c38fda032022"}}