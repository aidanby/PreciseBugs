{"buggy_code": ["<?php\n/**\n * Abstract page view controller file.\n *\n * @package   Controller\n *\n * @copyright YetiForce Sp. z o.o\n * @license   YetiForce Public License 4.0 (licenses/LicenseEN.txt or yetiforce.com)\n * @author    Mariusz Krzaczkowski <m.krzaczkowski@yetiforce.com>\n * @author    Rados\u0142aw Skrzypczak <r.skrzypczak@yetiforce.com>\n */\n\nnamespace App\\Controller\\View;\n\n/**\n * Abstract page view controller class.\n */\nabstract class Page extends Base\n{\n\t/** {@inheritdoc} */\n\tprotected function showBodyHeader()\n\t{\n\t\treturn true;\n\t}\n\n\t/** {@inheritdoc} */\n\tprotected function showFooter()\n\t{\n\t\treturn true;\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function preProcess(\\App\\Request $request, $display = true)\n\t{\n\t\tparent::preProcess($request, false);\n\t\t$view = $this->getViewer($request);\n\t\tif (\\App\\Config::performance('BROWSING_HISTORY_WORKING')) {\n\t\t\t\\Vtiger_BrowsingHistory_Helper::saveHistory($view->getTemplateVars('PAGETITLE'));\n\t\t}\n\t\t$view->assign('BREADCRUMB_TITLE', $this->getBreadcrumbTitle($request));\n\t\t$view->assign('SHOW_BREAD_CRUMBS', $this->showBreadCrumbLine());\n\t\tif ($activeReminder = \\App\\Module::isModuleActive('Calendar')) {\n\t\t\t$userPrivilegesModel = \\Users_Privileges_Model::getCurrentUserPrivilegesModel();\n\t\t\t$activeReminder = $userPrivilegesModel->hasModulePermission('Calendar');\n\t\t}\n\t\t$view->assign('REMINDER_ACTIVE', $activeReminder);\n\t\t$view->assign('QUALIFIED_MODULE', $request->getModule(false));\n\t\t$view->assign('MENUS', $this->getMenu());\n\t\t$view->assign('SHOW_FOOTER_BAR', $this->showFooter() && 8 !== \\App\\YetiForce\\Register::getStatus());\n\t\tif (!$request->isEmpty('mid')) {\n\t\t\t$view->assign('MID', $request->getInteger('mid'));\n\t\t}\n\t\t$view->assign('BROWSING_HISTORY', \\Vtiger_BrowsingHistory_Helper::getHistory());\n\t\t$view->assign('HOME_MODULE_MODEL', \\Vtiger_Module_Model::getInstance('Home'));\n\t\t$view->assign('MENU_HEADER_LINKS', $this->getMenuHeaderLinks($request));\n\t\t$view->assign('USER_QUICK_MENU_LINKS', $this->getUserQuickMenuLinks($request));\n\t\tif (\\App\\Config::performance('GLOBAL_SEARCH')) {\n\t\t\t$view->assign('SEARCHABLE_MODULES', \\App\\RecordSearch::getSearchableModules());\n\t\t}\n\t\tif (\\App\\Config::search('GLOBAL_SEARCH_SELECT_MODULE')) {\n\t\t\t$view->assign('SEARCHED_MODULE', $request->getModule());\n\t\t}\n\t\tif ($display) {\n\t\t\t$this->preProcessDisplay($request);\n\t\t}\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function postProcess(\\App\\Request $request, $display = true)\n\t{\n\t\tparent::postProcess($request, false);\n\t\t$view = $this->getViewer($request);\n\t\t$view->assign('ACTIVITY_REMINDER', \\Users_Record_Model::getCurrentUserModel()->getCurrentUserActivityReminderInSeconds());\n\t\t$view->assign('SHOW_FOOTER', true);\n\t\tif ($display) {\n\t\t\t$view->view('PageFooter.tpl');\n\t\t}\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function getFooterScripts(\\App\\Request $request)\n\t{\n\t\t$moduleName = $request->getModule();\n\t\t$jsFileNames = [\n\t\t\t'modules.Vtiger.resources.Menu',\n\t\t\t'modules.Vtiger.resources.Header',\n\t\t\t'modules.Vtiger.resources.Edit',\n\t\t\t'~layouts/resources/Field.js',\n\t\t\t'~layouts/resources/validator/BaseValidator.js',\n\t\t\t'~layouts/resources/validator/FieldValidator.js',\n\t\t\t'modules.Vtiger.resources.BasicSearch',\n\t\t\t'modules.Vtiger.resources.ConditionBuilder',\n\t\t\t'modules.Vtiger.resources.AdvanceFilter',\n\t\t\t'modules.Vtiger.resources.AdvanceSearch',\n\t\t];\n\t\tif ('AppComponents' !== $moduleName) {\n\t\t\t$jsFileNames[] = \"modules.$moduleName.resources.Edit\";\n\t\t\t$jsFileNames[] = \"modules.$moduleName.resources.AdvanceFilter\";\n\t\t}\n\t\tif (\\App\\Privilege::isPermitted('OSSMail')) {\n\t\t\t$jsFileNames[] = '~layouts/basic/modules/OSSMail/resources/checkmails.js';\n\t\t}\n\t\tif (!\\App\\RequestUtil::getBrowserInfo()->ie) {\n\t\t\tif (\\App\\User::getCurrentUserRealId() === \\App\\User::getCurrentUserId() && \\App\\Privilege::isPermitted('Chat')) {\n\t\t\t\t$jsFileNames[] = '~layouts/basic/modules/Chat/Chat.vue.js';\n\t\t\t}\n\t\t\tif (\\App\\Privilege::isPermitted('KnowledgeBase')) {\n\t\t\t\t$jsFileNames[] = '~layouts/resources/views/KnowledgeBase/KnowledgeBase.vue.js';\n\t\t\t}\n\t\t}\n\t\tforeach (\\Vtiger_Link_Model::getAllByType(\\vtlib\\Link::IGNORE_MODULE, ['HEADERSCRIPT']) as $headerScripts) {\n\t\t\tforeach ($headerScripts as $headerScript) {\n\t\t\t\t$jsFileNames[] = $headerScript->linkurl;\n\t\t\t}\n\t\t}\n\t\treturn array_merge(parent::getFooterScripts($request), $this->checkAndConvertJsScripts($jsFileNames));\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function getHeaderCss(\\App\\Request $request)\n\t{\n\t\t$headerCssInstances = parent::getHeaderCss($request);\n\t\t$prefix = '';\n\t\tif (!IS_PUBLIC_DIR) {\n\t\t\t$prefix = 'public_html/';\n\t\t}\n\t\tforeach (\\Vtiger_Link_Model::getAllByType(\\vtlib\\Link::IGNORE_MODULE, ['HEADERCSS']) as $cssLinks) {\n\t\t\tforeach ($cssLinks as $cssLink) {\n\t\t\t\t$cssScriptModel = new \\Vtiger_CssScript_Model();\n\t\t\t\t$headerCssInstances[] = $cssScriptModel->set('href', $prefix . $cssLink->linkurl);\n\t\t\t}\n\t\t}\n\t\treturn $headerCssInstances;\n\t}\n\n\t/**\n\t * Function to get the list of Header Links.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @return Vtiger_Link_Model[] - List of Vtiger_Link_Model instances\n\t */\n\tprotected function getMenuHeaderLinks(\\App\\Request $request): array\n\t{\n\t\t$userModel = \\App\\User::getCurrentUserModel();\n\t\t$headerLinks = [];\n\t\tif (\\App\\MeetingService::getInstance()->isActive() && \\App\\Privilege::isPermitted('Users', 'MeetingUrl', false, \\App\\User::getCurrentUserRealId())) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'LBL_VIDEO_CONFERENCE',\n\t\t\t\t'linkdata' => ['url' => 'index.php?module=Users&view=MeetingModal&record=' . \\App\\User::getCurrentUserRealId()],\n\t\t\t\t'icon' => 'mdi mdi-card-account-phone c-mdi',\n\t\t\t\t'linkclass' => 'js-show-modal',\n\t\t\t];\n\t\t}\n\t\tif ($userModel->isAdmin() || $userModel->isSuperUser()) {\n\t\t\tif ('Settings' !== $request->getByType('parent', 2)) {\n\t\t\t\t$headerLinks[] = [\n\t\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t\t'linklabel' => 'LBL_SYSTEM_SETTINGS',\n\t\t\t\t\t'linkurl' => 'index.php?module=YetiForce&parent=Settings&view=Shop',\n\t\t\t\t\t'icon' => 'fas fa-cog fa-fw',\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t$headerLinks[] = [\n\t\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t\t'linklabel' => 'LBL_USER_PANEL',\n\t\t\t\t\t'linkurl' => 'index.php',\n\t\t\t\t\t'icon' => 'fas fa-house-user fa-fw',\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t'linklabel' => 'LBL_SIGN_OUT',\n\t\t\t'linkurl' => 'index.php?module=Users&parent=Settings&action=Logout',\n\t\t\t'icon' => 'fas fa-power-off fa-fw',\n\t\t\t'linkclass' => 'btn-danger d-md-none',\n\t\t];\n\t\t$headerLinkInstances = [];\n\t\tforeach ($headerLinks as $headerLink) {\n\t\t\t$headerLinkInstance = \\Vtiger_Link_Model::getInstanceFromValues($headerLink);\n\t\t\tif (isset($headerLink['childlinks'])) {\n\t\t\t\tforeach ($headerLink['childlinks'] as $childLink) {\n\t\t\t\t\t$headerLinkInstance->addChildLink(\\Vtiger_Link_Model::getInstanceFromValues($childLink));\n\t\t\t\t}\n\t\t\t}\n\t\t\t$headerLinkInstances[] = $headerLinkInstance;\n\t\t}\n\t\t$headerLinks = \\Vtiger_Link_Model::getAllByType(\\vtlib\\Link::IGNORE_MODULE, ['HEADERLINK']);\n\t\tforeach ($headerLinks as $headerLinks) {\n\t\t\tforeach ($headerLinks as $headerLink) {\n\t\t\t\t$headerLinkInstances[] = \\Vtiger_Link_Model::getInstanceFromLinkObject($headerLink);\n\t\t\t}\n\t\t}\n\t\treturn $headerLinkInstances;\n\t}\n\n\t/**\n\t * Function to get the list of User Quick Menu Links.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @return Vtiger_Link_Model[] - List of Vtiger_Link_Model instances\n\t */\n\tprotected function getUserQuickMenuLinks(\\App\\Request $request): array\n\t{\n\t\t$userModel = \\Users_Record_Model::getCurrentUserModel();\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'GROUPNAME',\n\t\t\t'linklabel' => 'LBL_ACCOUNT_SETTINGS',\n\t\t];\n\t\tif (\\App\\Config::security('SHOW_MY_PREFERENCES')) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'LBL_MY_PREFERENCES',\n\t\t\t\t'linkurl' => $userModel->getPreferenceDetailViewUrl(),\n\t\t\t\t'linkclass' => 'd-block',\n\t\t\t\t'icon' => 'fas fa-user-cog fa-fw',\n\t\t\t];\n\t\t}\n\t\tif (\\App\\Config::security('CHANGE_LOGIN_PASSWORD') && \\App\\User::getCurrentUserId() === \\App\\User::getCurrentUserRealId()) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'LBL_CHANGE_PASSWORD',\n\t\t\t\t'linkdata' => ['url' => 'index.php?module=Users&view=PasswordModal&mode=change&record=' . $userModel->get('id')],\n\t\t\t\t'linkclass' => 'showModal d-block',\n\t\t\t\t'icon' => 'yfi yfi-change-passowrd',\n\t\t\t];\n\t\t}\n\t\tif (\\Users_Module_Model::getSwitchUsers()) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'SwitchUsers',\n\t\t\t\t'linkurl' => '',\n\t\t\t\t'icon' => 'fas fa-exchange-alt fa-fw',\n\t\t\t\t'linkdata' => ['url' => $userModel->getSwitchUsersUrl()],\n\t\t\t\t'linkclass' => 'showModal d-block',\n\t\t\t];\n\t\t}\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t'linklabel' => 'BTN_YOUR_ACCOUNT_ACCESS_HISTORY',\n\t\t\t'linkdata' => ['url' => 'index.php?module=Users&view=LoginHistoryModal&mode=change&record=' . $userModel->get('id')],\n\t\t\t'linkclass' => 'showModal d-block',\n\t\t\t'icon' => 'yfi yfi-login-history',\n\t\t];\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'SEPARATOR',\n\t\t\t'linkclass' => 'd-none d-sm-none d-md-block',\n\t\t];\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t'linklabel' => 'LBL_SIGN_OUT',\n\t\t\t'linkurl' => 'index.php?module=Users&parent=Settings&action=Logout',\n\t\t\t'icon' => 'fas fa-power-off fa-fw',\n\t\t\t'linkclass' => 'd-none d-sm-none d-md-block',\n\t\t];\n\t\t$headerLinkInstances = [];\n\t\tforeach ($headerLinks as $headerLink) {\n\t\t\t$headerLinkInstances[] = \\Vtiger_Link_Model::getInstanceFromValues($headerLink);\n\t\t}\n\t\treturn $headerLinkInstances;\n\t}\n\n\t/**\n\t * Function to get the list of menu.\n\t *\n\t * @return array\n\t */\n\tprotected function getMenu()\n\t{\n\t\treturn \\Vtiger_Menu_Model::getAll();\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function loadJsConfig(\\App\\Request $request)\n\t{\n\t\tparent::loadJsConfig($request);\n\t\tif ('Settings' !== $request->getRaw('parent')) {\n\t\t\t$moduleModel = \\Vtiger_Module_Model::getInstance($request->getModule());\n\t\t\tforeach ([\n\t\t\t\t'isQuickCreateSupported' => $moduleModel->isQuickCreateSupported(),\n\t\t\t\t'isEntityModule' => $moduleModel->isEntityModule(),\n\t\t\t] as $key => $value) {\n\t\t\t\t\\App\\Config::setJsEnv($key, $value);\n\t\t\t}\n\t\t}\n\t}\n}\n", "<?php\n\nreturn [\n\t'appVersion' => '6.2.262',\n\t'patchVersion' => '2021.12.09',\n\t'lib_roundcube' => '0.2.3',\n];\n", "{*<!-- {[The file is published on the basis of YetiForce Public License 4.0 that can be found in the following directory: licenses/LicenseEN.txt or yetiforce.com]} -->*}\n{strip}\n<!-- tpl-Users-Modals-PasswordModalFooter -->\n<div class=\"modal-footer\">\n\t{if ($MODE === 'massReset' || $MODE === 'reset') &&  $ACTIVE_SMTP}\n\t\t<button class=\"btn btn-success\" type=\"submit\" name=\"saveButton\"\n\t\t\t\t{if App\\Config::main('systemMode') === 'demo'}disabled=\"disabled\"{/if}>\n\t\t\t<span class=\"fas fa-redo-alt mr-2\"></span><strong>{\\App\\Language::translate('BTN_RESET_PASSWORD', $MODULE_NAME)}</strong>\n\t\t</button>\n\t{/if}\n\t{if $MODE === 'change'}\n\t\t<button class=\"btn btn-success\" type=\"submit\" name=\"saveButton\"\n\t\t\t\t{if App\\Config::main('systemMode') === 'demo'}disabled=\"disabled\"{/if}>\n\t\t\t<span class=\"fas fa-redo-alt mr-2\"></span><strong>{\\App\\Language::translate('LBL_CHANGE_PASSWORD', $MODULE_NAME)}</strong>\n\t\t</button>\n\t{/if}\n\t{if $LOCK_EXIT}\n\t\t<a class=\"btn btn-danger\" role=\"button\" href=\"index.php?module=Users&amp;parent=Settings&amp;action=Logout\">\n\t\t\t<span class=\"fas fa-power-off mr-2\"></span><strong>{\\App\\Language::translate('LBL_SIGN_OUT', $MODULE_NAME)}</strong>\n\t\t</a>\n\t{else}\n\t\t<button class=\"btn btn-danger\" type=\"reset\" data-dismiss=\"modal\">\n\t\t\t<span class=\"fas fa-times mr-2\"></span><strong>{\\App\\Language::translate('LBL_CANCEL', $MODULE_NAME)}</strong>\n\t\t</button>\n\t{/if}\n</div>\n</form>\n<!-- /tpl-Users-Modals-PasswordModalFooter -->\n{/strip}\n", "{*<!--\n/*********************************************************************************\n** The contents of this file are subject to the vtiger CRM Public License Version 1.0\n* (\"License\"); You may not use this file except in compliance with the License\n* The Original Code is:  vtiger CRM Open Source\n* The Initial Developer of the Original Code is vtiger.\n* Portions created by vtiger are Copyright (C) vtiger.\n* All Rights Reserved.\n*\n********************************************************************************/\n-->*}\n{strip}\n\t<div class=\"mainContainer container\">\n\t\t<div class=\"jumbotron mt-5\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t\t<h1><span class=\"far fa-times-circle u-fs-10x\"></span></h1>\n\t\t\t\t\t<h2>{\\App\\Language::translate('LBL_NO_FOUND_VIEW')}</h2>\n\t\t\t\t\t<p class=\"my-5\">\n\t\t\t\t\t\t<a class=\"btn btn-success mr-2\" role=\"button\" href=\"javascript:window.history.back();\">\n\t\t\t\t\t\t\t<span class=\"fas fa-chevron-left mr-2\"></span>{\\App\\Language::translate('LBL_GO_BACK')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a class=\"btn btn-warning mr-2\" role=\"button\" href=\"?module=Users&action=Logout\">\n\t\t\t\t\t\t\t<span class=\"fas fa-power-off fa-fw mr-2\"></span>{\\App\\Language::translate('LBL_SIGN_OUT')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a class=\"btn btn-primary\" role=\"button\" href=\"?module=Users&action=Logout\">\n\t\t\t\t\t\t\t<i class=\"fas fa-home mr-2\"></i>{\\App\\Language::translate('LBL_MAIN_PAGE')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/strip}\n", "<?php\n/* +**********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.1\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * ********************************************************************************** */\n\nclass Users_Logout_Action extends \\App\\Controller\\Action\n{\n\t/**\n\t * {@inheritdoc}\n\t */\n\tpublic function checkPermission(App\\Request $request)\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * {@inheritdoc}\n\t */\n\tpublic function process(App\\Request $request)\n\t{\n\t\t//Track the logout History\n\t\t$moduleName = $request->getModule();\n\t\t$moduleModel = Users_Module_Model::getInstance($moduleName);\n\t\t$moduleModel->saveLogoutHistory();\n\n\t\t$eventHandler = new App\\EventHandler();\n\t\t$eventHandler->trigger('UserLogoutBefore');\n\t\tif (\\Config\\Security::$loginSessionRegenerate) {\n\t\t\tApp\\Session::regenerateId(true); // to overcome session id reuse.\n\t\t}\n\t\tOSSMail_Logout_Model::logoutCurrentUser();\n\t\tApp\\Session::destroy();\n\t\t//End\n\t\theader('location: index.php');\n\t}\n\n\t/**\n\t * {@inheritdoc}\n\t */\n\tpublic function validateRequest(App\\Request $request)\n\t{\n\t\t$request->validateReadAccess();\n\t}\n}\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\n$.Class(\n\t'Vtiger_List_Js',\n\t{\n\t\tlistInstance: false,\n\t\tgetRelatedModulesContainer: false,\n\t\tmassEditPreSave: 'Vtiger.MassEdit.PreSave',\n\t\tgetInstance: function () {\n\t\t\tif (Vtiger_List_Js.listInstance === false) {\n\t\t\t\tlet module = app.getModuleName(),\n\t\t\t\t\tparentModule = app.getParentModuleName(),\n\t\t\t\t\tmoduleClassName,\n\t\t\t\t\tfallbackClassName,\n\t\t\t\t\tinstance;\n\t\t\t\tif (parentModule == 'Settings') {\n\t\t\t\t\tmoduleClassName = parentModule + '_' + module + '_List_Js';\n\t\t\t\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\t\t\t\tmoduleClassName = module + '_List_Js';\n\t\t\t\t\t}\n\t\t\t\t\tfallbackClassName = parentModule + '_Vtiger_List_Js';\n\t\t\t\t\tif (typeof window[fallbackClassName] === 'undefined') {\n\t\t\t\t\t\tfallbackClassName = 'Vtiger_List_Js';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmoduleClassName = module + '_List_Js';\n\t\t\t\t\tfallbackClassName = 'Vtiger_List_Js';\n\t\t\t\t}\n\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\tinstance = new window[moduleClassName]();\n\t\t\t\t} else {\n\t\t\t\t\tinstance = new window[fallbackClassName]();\n\t\t\t\t}\n\t\t\t\tVtiger_List_Js.listInstance = instance;\n\t\t\t\treturn instance;\n\t\t\t}\n\t\t\treturn Vtiger_List_Js.listInstance;\n\t\t},\n\t\t/**\n\t\t * function to trigger send Email\n\t\t * @param {Object} params - a split object.\n\t\t * @param {function} callBackFunction - a split object.\n\t\t * @param {$} row - current container for reference.\n\t\t */\n\t\ttriggerSendEmail: function (params, callBackFunction, row) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (row) {\n\t\t\t\tlistInstance.listViewContentContainer = row.closest('.js-list__form');\n\t\t\t}\n\t\t\tif ((params && params['selected_ids']) || listInstance.checkListRecordSelected() !== true) {\n\t\t\t\tlet postData = listInstance.getSearchParams();\n\t\t\t\tdelete postData.parent;\n\t\t\t\tdelete postData.mode;\n\t\t\t\tpostData.view = 'SendMailModal';\n\t\t\t\tpostData.cvid = listInstance.getCurrentCvId();\n\t\t\t\tif (params) {\n\t\t\t\t\t$.extend(postData, params);\n\t\t\t\t}\n\t\t\t\tAppConnector.request(postData).done(function (response) {\n\t\t\t\t\tapp.showModalWindow(response, function (data) {\n\t\t\t\t\t\tdata.find('[name=\"saveButton\"]').on('click', function (e) {\n\t\t\t\t\t\t\tif (data.find('form').validationEngine('validate')) {\n\t\t\t\t\t\t\t\t$.extend(postData, {\n\t\t\t\t\t\t\t\t\tfield: data.find('#field').val(),\n\t\t\t\t\t\t\t\t\ttemplate: data.find('#template').val(),\n\t\t\t\t\t\t\t\t\tmailNotes: data.find('#mail_notes').val(),\n\t\t\t\t\t\t\t\t\taction: 'Mail',\n\t\t\t\t\t\t\t\t\tmode: 'sendMails'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tdelete postData.view;\n\t\t\t\t\t\t\t\tAppConnector.request(postData)\n\t\t\t\t\t\t\t\t\t.done(function (response) {\n\t\t\t\t\t\t\t\t\t\tif (response.result == true) {\n\t\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\t\t\t\t\tif (typeof callBackFunction == 'function') {\n\t\t\t\t\t\t\t\t\t\t\t\tcallBackFunction(response);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * function to trigger Send Sms\n\t\t * @params: send email url , module name.\n\t\t */\n\t\ttriggerSendSms: function (massActionUrl, module) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (!listInstance.checkListRecordSelected()) {\n\t\t\t\tVtiger_List_Js.triggerMassAction(massActionUrl, (data) => {\n\t\t\t\t\tnew App.Fields.Text.Completions($(data).find('.js-completions').eq(0), {\n\t\t\t\t\t\temojiPanel: true,\n\t\t\t\t\t\tcompletionsCollection: {}\n\t\t\t\t\t});\n\t\t\t\t\tdata.on('submit', 'form', (e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlet form = $(e.currentTarget);\n\t\t\t\t\t\tform.find('.js-modal__save').attr('disabled', 'disabled');\n\t\t\t\t\t\tlistInstance.massActionSave(form).done(function (response) {\n\t\t\t\t\t\t\tif (response.result && response.result.message) {\n\t\t\t\t\t\t\t\tapp.showNotify({ text: response.result.message, type: 'info' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\ttriggerMassQuickCreate: function (moduleName, data) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (listInstance.checkListRecordSelected() != true) {\n\t\t\t\tlet progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tlet params = {\n\t\t\t\t\tcallbackFunction: function () {},\n\t\t\t\t\tnoCache: true,\n\t\t\t\t\tdata: $.extend(data, listInstance.getSearchParams(), { sourceView: 'ListView' })\n\t\t\t\t};\n\t\t\t\tApp.Components.QuickCreate.getForm(\n\t\t\t\t\t'index.php?module=' + moduleName + '&view=MassQuickCreateModal&sourceModule=' + app.getModuleName(),\n\t\t\t\t\tmoduleName,\n\t\t\t\t\tparams\n\t\t\t\t).done((data) => {\n\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tApp.Components.QuickCreate.showModal(data, params);\n\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\ttriggerTransferOwnership: function (massActionUrl) {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet validationResult = listInstance.checkListRecordSelected();\n\t\t\tif (validationResult != true) {\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator();\n\t\t\t\tthisInstance.getRelatedModulesContainer = false;\n\t\t\t\tlet actionParams = {\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: massActionUrl,\n\t\t\t\t\tdataType: 'html',\n\t\t\t\t\tdata: {}\n\t\t\t\t};\n\t\t\t\tAppConnector.request(actionParams).done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tlet callback = function (data) {\n\t\t\t\t\t\t\tlet params = app.validationEngineOptions;\n\t\t\t\t\t\t\tparams.onValidationComplete = function (form, valid) {\n\t\t\t\t\t\t\t\tif (valid) {\n\t\t\t\t\t\t\t\t\tthisInstance.transferOwnershipSave(form);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdata.find('#changeOwner').validationEngine(app.validationEngineOptions);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tapp.showModalWindow(data, function (data) {\n\t\t\t\t\t\t\tlet selectElement = thisInstance.getRelatedModuleContainer();\n\t\t\t\t\t\t\tApp.Fields.Picklist.changeSelectElementView(selectElement, 'select2');\n\t\t\t\t\t\t\tif (typeof callback == 'function') {\n\t\t\t\t\t\t\t\tcallback(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\ttriggerQuickExport: function (module) {\n\t\t\tconst progressIndicatorElement = $.progressIndicator();\n\t\t\tlet url = 'index.php?module=' + module + '&view=ExportRecords';\n\t\t\tapp.showModalWindow(null, url, function (container) {\n\t\t\t\tcontainer.find('.js-modal__save').on('click', (e) => {\n\t\t\t\t\tlet formData = container.find('.js-modal-form').serializeFormData();\n\t\t\t\t\tconst listInstance = Vtiger_List_Js.getInstance();\n\t\t\t\t\t$.extend(formData, listInstance.getSearchParams());\n\t\t\t\t\tapp.openUrlMethodPost('index.php', formData);\n\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\ttext: app.vtranslate('JS_STARTED_GENERATING_FILE'),\n\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t});\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t});\n\t\t\t});\n\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t},\n\t\ttransferOwnershipSave: function (form) {\n\t\t\tconst listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet transferOwner = $('#transferOwnerId').val(),\n\t\t\t\trelatedModules = $('#related_modules').val(),\n\t\t\t\tparams = {\n\t\t\t\t\tmodule: app.getModuleName(),\n\t\t\t\t\taction: 'TransferOwnership',\n\t\t\t\t\ttransferOwnerId: transferOwner,\n\t\t\t\t\trelated_modules: relatedModules\n\t\t\t\t};\n\t\t\tparams = $.extend(params, listInstance.getSearchParams());\n\t\t\tdelete params.view;\n\t\t\tAppConnector.request(params).done((response) => {\n\t\t\t\tapp.hideModalWindow();\n\t\t\t\tlistInstance.getListViewRecords();\n\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\tif (response.result.success) {\n\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\t\ttext: app.vtranslate('JS_RECORDS_TRANSFERRED_SUCCESSFULLY'),\n\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tVtiger_Helper_Js.showMessage(response.result.notify);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to get the related module container\n\t\t */\n\t\tgetRelatedModuleContainer: function () {\n\t\t\tif (this.getRelatedModulesContainer == false) {\n\t\t\t\tthis.getRelatedModulesContainer = $('#related_modules');\n\t\t\t}\n\t\t\treturn this.getRelatedModulesContainer;\n\t\t},\n\t\ttriggerMassAction: function (massActionUrl, callBackFunction, beforeShowCb, css) {\n\t\t\tif (typeof beforeShowCb === 'undefined') {\n\t\t\t\tbeforeShowCb = function () {\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (typeof beforeShowCb == 'object') {\n\t\t\t\tcss = beforeShowCb;\n\t\t\t\tbeforeShowCb = function () {\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet actionParams = {\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: massActionUrl,\n\t\t\t\tdataType: 'html',\n\t\t\t\tdata: Vtiger_List_Js.getInstance().getSearchParams()\n\t\t\t};\n\t\t\tif (typeof css === 'undefined') {\n\t\t\t\tcss = {};\n\t\t\t}\n\t\t\tcss = $.extend({ 'text-align': 'left' }, css);\n\t\t\tAppConnector.request(actionParams)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tlet result = beforeShowCb(data);\n\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tapp.showModalWindow(\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t\t\tif (typeof callBackFunction == 'function') {\n\t\t\t\t\t\t\t\t\tcallBackFunction(data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcss\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\t\ttext: err,\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\ttriggerMassEdit: function (massEditUrl) {\n\t\t\tlet selectedCount = this.getSelectedRecordCount();\n\t\t\tif (selectedCount > $('#listMaxEntriesMassEdit').val()) {\n\t\t\t\tlet params = {\n\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\ttext: app.vtranslate('JS_MASS_EDIT_LIMIT'),\n\t\t\t\t\ttype: 'error'\n\t\t\t\t};\n\t\t\t\tapp.showNotify(params);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tVtiger_List_Js.triggerMassAction(\n\t\t\t\tmassEditUrl,\n\t\t\t\tfunction (container) {\n\t\t\t\t\tapp.event.trigger('MassEditModal.AfterLoad', container, massEditUrl);\n\t\t\t\t\tlet massEditForm = container.find('#massEdit');\n\t\t\t\t\tmassEditForm.validationEngine(app.validationEngineOptions);\n\t\t\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\t\t\tlistInstance.registerEventForTabClick(massEditForm);\n\t\t\t\t\tlet editInstance = Vtiger_Edit_Js.getInstance();\n\t\t\t\t\teditInstance.registerBasicEvents(massEditForm);\n\t\t\t\t\tlistInstance.postMassEdit(container);\n\t\t\t\t\tlistInstance.registerSlimScrollMassEdit();\n\n\t\t\t\t\tif ($('#massEditContainer').length) {\n\t\t\t\t\t\tlistInstance.inactiveFieldsValidation($('#massEditContainer').find('form'));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ width: '65%' }\n\t\t\t);\n\t\t},\n\t\tgetSelectedRecordCount: function () {\n\t\t\tlet count;\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet cvId = listInstance.getCurrentCvId();\n\t\t\tlet selectedIdObj = $('#selectedIds').data(cvId + 'selectedIds');\n\t\t\tif (selectedIdObj != undefined) {\n\t\t\t\tif (selectedIdObj != 'all') {\n\t\t\t\t\tcount = selectedIdObj.length;\n\t\t\t\t} else {\n\t\t\t\t\tlet excludedIdsCount = $('#excludedIds').data(cvId + 'Excludedids').length;\n\t\t\t\t\tlet totalRecords = $('#recordsCount').val();\n\t\t\t\t\tcount = totalRecords - excludedIdsCount;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\t\t/**\n\t\t * function to trigger export action\n\t\t * returns UI\n\t\t */\n\t\ttriggerExportAction: function (exportActionUrl, newTab) {\n\t\t\tlet formAttr = {};\n\t\t\tif (newTab) {\n\t\t\t\tformAttr['target'] = '_blank';\n\t\t\t}\n\t\t\tlet params = Vtiger_List_Js.getInstance().getSearchParams();\n\t\t\tdelete params.view;\n\t\t\tapp.openUrlMethodPost(exportActionUrl, params, formAttr);\n\t\t},\n\t\t/**\n\t\t * Function to reload list\n\t\t */\n\t\tclearList: function () {\n\t\t\t$('#deSelectAllMsg').trigger('click');\n\t\t\t$('#selectAllMsgDiv').hide();\n\t\t},\n\t\ttriggerListSearch: function () {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet listViewContainer = listInstance.getListViewContentContainer();\n\t\t\tlistViewContainer.find('[data-trigger=\"listSearch\"]').trigger('click');\n\t\t},\n\t\tgetSelectedRecordsParams: function (checkList) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (checkList == false || listInstance.checkListRecordSelected() !== true) {\n\t\t\t\treturn listInstance.getSearchParams();\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\ttriggerGenerateRecords: function () {\n\t\t\tlet selected = Vtiger_List_Js.getSelectedRecordsParams();\n\t\t\tif (selected === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tselected.view = 'GenerateModal';\n\t\t\tselected.fromview = 'List';\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tapp.showModalWindow(null, 'index.php?' + $.param(selected), function () {\n\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t});\n\t\t},\n\t\tshowMap: function () {\n\t\t\tlet selectedParams = Vtiger_List_Js.getSelectedRecordsParams(false);\n\t\t\tlet url = 'index.php?module=OpenStreetMap&view=MapModal&srcModule=' + app.getModuleName();\n\t\t\tapp.showModalWindow(null, url, function (container) {\n\t\t\t\tlet mapView = new OpenStreetMap_Map_Js();\n\t\t\t\tmapView.setSelectedParams(selectedParams);\n\t\t\t\tmapView.registerModalView(container);\n\t\t\t});\n\t\t},\n\t\ttriggerReviewChanges: function (reviewUrl) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet validationResult = listInstance.checkListRecordSelected();\n\t\t\tif (validationResult != true) {\n\t\t\t\tlet message = app.vtranslate('JS_MASS_REVIEWING_CHANGES_CONFIRMATION');\n\t\t\t\tlet title = '<i class=\"fa fa-check-circle\"></i> ' + app.vtranslate('JS_LBL_REVIEW_CHANGES');\n\t\t\t\tVtiger_Helper_Js.showConfirmationBox({ message: message, title: title })\n\t\t\t\t\t.done(function (e) {\n\t\t\t\t\t\tlet params = listInstance.getSearchParams();\n\t\t\t\t\t\tlet url =\n\t\t\t\t\t\t\treviewUrl +\n\t\t\t\t\t\t\t'&viewname=' +\n\t\t\t\t\t\t\tparams.viewname +\n\t\t\t\t\t\t\t'&selected_ids=' +\n\t\t\t\t\t\t\tparams.selected_ids +\n\t\t\t\t\t\t\t'&excluded_ids=' +\n\t\t\t\t\t\t\tparams.excluded_ids +\n\t\t\t\t\t\t\t'&entityState=' +\n\t\t\t\t\t\t\tparams.entityState;\n\t\t\t\t\t\tif (listInstance.getListSearchInstance()) {\n\t\t\t\t\t\t\turl += '&search_params=' + params.search_params;\n\t\t\t\t\t\t\tif (typeof searchValue !== 'undefined' && params.search_value.length > 0) {\n\t\t\t\t\t\t\t\turl += '&search_key=' + params.search_key;\n\t\t\t\t\t\t\t\turl += '&search_value=' + params.search_value;\n\t\t\t\t\t\t\t\turl += '&operator=s';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet deleteMessage = app.vtranslate('JS_LOADING_PLEASE_WAIT');\n\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\t\tmessage: deleteMessage,\n\t\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tAppConnector.request(url)\n\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({\n\t\t\t\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (data.result) {\n\t\t\t\t\t\t\t\t\tlet params = {\n\t\t\t\t\t\t\t\t\t\ttext: data.result,\n\t\t\t\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tapp.showNotify(params);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlistInstance.getListViewRecords();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to register the submit event for mass comment\n\t\t */\n\t\ttriggerMassComment: function (massActionUrl) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (!listInstance.checkListRecordSelected()) {\n\t\t\t\tVtiger_List_Js.triggerMassAction(massActionUrl, (data) => {\n\t\t\t\t\tnew App.Fields.Text.Completions($(data).find('.js-completions').eq(0), { emojiPanel: false });\n\t\t\t\t\t$(data).on('submit', '#massSave', (e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlet form = $(e.currentTarget),\n\t\t\t\t\t\t\tcommentContent = form.find('.js-comment-content'),\n\t\t\t\t\t\t\tcommentContentValue = commentContent.html();\n\t\t\t\t\t\tif (commentContentValue === '') {\n\t\t\t\t\t\t\tlet errorMsg = app.vtranslate('JS_LBL_COMMENT_VALUE_CANT_BE_EMPTY');\n\t\t\t\t\t\t\tcommentContent.validationEngine('showPrompt', errorMsg, 'error', 'bottomLeft', true);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tform.find('.js-comment-value').val(commentContentValue);\n\t\t\t\t\t\tcommentContent.validationEngine('hide');\n\t\t\t\t\t\tform.find('[name=saveButton]').attr('disabled', 'disabled');\n\t\t\t\t\t\tlistInstance.massActionSave(form).done(function () {\n\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t//contains the List View element.\n\t\tlistViewContainer: false,\n\t\t//Contains list view top menu element\n\t\tlistViewTopMenuContainer: false,\n\t\t//Contains list view content element\n\t\tlistViewContentContainer: false,\n\t\t//Contains filter Block Element\n\t\tfilterBlock: false,\n\t\tfilterSelectElement: false,\n\t\tlistSearchInstance: false,\n\t\tnoEventsListSearch: true,\n\t\t//Contains float table head\n\t\tlistFloatThead: false,\n\t\tgetListSearchInstance: function (events) {\n\t\t\tif (events != undefined) {\n\t\t\t\tthis.noEventsListSearch = events;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.listSearchInstance == false &&\n\t\t\t\t(this.getListViewContainer().find('.searchField').length ||\n\t\t\t\t\tthis.getListViewContainer().find('.picklistSearchField').length)\n\t\t\t) {\n\t\t\t\tthis.listSearchInstance = YetiForce_ListSearch_Js.getInstance(\n\t\t\t\t\tthis.getListViewContainer(),\n\t\t\t\t\tthis.noEventsListSearch\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn this.listSearchInstance;\n\t\t},\n\t\tgetListViewContainer: function () {\n\t\t\tif (this.listViewContainer == false) {\n\t\t\t\tthis.listViewContainer = $('div.listViewPageDiv');\n\t\t\t}\n\t\t\treturn this.listViewContainer;\n\t\t},\n\t\tgetListViewTopMenuContainer: function () {\n\t\t\tif (this.listViewTopMenuContainer == false) {\n\t\t\t\tthis.listViewTopMenuContainer = $('.listViewTopMenuDiv');\n\t\t\t}\n\t\t\treturn this.listViewTopMenuContainer;\n\t\t},\n\t\tgetListViewContentContainer: function () {\n\t\t\tif (this.listViewContentContainer == false) {\n\t\t\t\tthis.listViewContentContainer = $('.listViewContentDiv');\n\t\t\t}\n\t\t\treturn this.listViewContentContainer;\n\t\t},\n\t\tgetFilterBlock: function () {\n\t\t\tif (this.filterBlock == false) {\n\t\t\t\tlet filterSelectElement = this.getFilterSelectElement();\n\t\t\t\tif (filterSelectElement.length <= 0) {\n\t\t\t\t\tthis.filterBlock = $();\n\t\t\t\t} else if (filterSelectElement.is('select')) {\n\t\t\t\t\tthis.filterBlock = filterSelectElement.data('select2').$dropdown;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.filterBlock;\n\t\t},\n\t\tgetFilterSelectElement: function () {\n\t\t\tif (this.filterSelectElement == false) {\n\t\t\t\tthis.filterSelectElement = $('#customFilter');\n\t\t\t}\n\t\t\treturn this.filterSelectElement;\n\t\t},\n\t\tgetSearchParams() {\n\t\t\tlet params = this.getDefaultParams();\n\t\t\tif (this.checkListRecordSelected() !== true) {\n\t\t\t\tparams.selected_ids = this.readSelectedIds(true);\n\t\t\t\tparams.excluded_ids = this.readExcludedIds(true);\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\t\tgetDefaultParams: function () {\n\t\t\tlet params = {\n\t\t\t\tmodule: app.getModuleName(),\n\t\t\t\tview: app.getViewName(),\n\t\t\t\tviewname: this.getCurrentCvId(),\n\t\t\t\tpage: $('#pageNumber').val(),\n\t\t\t\torderby: $('#orderBy').val(),\n\t\t\t\tentityState: $('#entityState').val()\n\t\t\t};\n\t\t\tif (app.getUrlVar('mid')) {\n\t\t\t\tparams.mid = app.getUrlVar('mid');\n\t\t\t}\n\t\t\tif (app.getParentModuleName()) {\n\t\t\t\tparams.parent = app.getParentModuleName();\n\t\t\t}\n\t\t\tif ($('#sortOrder').length) {\n\t\t\t\tparams.sortorder = $('#sortOrder').val();\n\t\t\t}\n\t\t\tlet listSearchInstance = this.getListSearchInstance();\n\t\t\tif (listSearchInstance !== false) {\n\t\t\t\tlet searchValue = listSearchInstance.getAlphabetSearchValue();\n\t\t\t\tparams.search_params = listSearchInstance.getListSearchParams(true);\n\t\t\t\tif (typeof searchValue !== 'undefined' && searchValue.length > 0) {\n\t\t\t\t\tparams.search_key = listSearchInstance.getAlphabetSearchField();\n\t\t\t\t\tparams.search_value = searchValue;\n\t\t\t\t\tparams.operator = 's';\n\t\t\t\t}\n\t\t\t\tlistSearchInstance.parseConditions(params);\n\t\t\t\tparams.search_params = JSON.stringify(params.search_params);\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\n\t\t/*\n\t\t * Function which will give you all the list view params\n\t\t */\n\t\tgetListViewRecords: function (urlParams) {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tif (typeof urlParams === 'undefined') {\n\t\t\t\turlParams = {};\n\t\t\t}\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewContentsContainer = $('#listViewContents');\n\t\t\tlet loadingMessage = $('.listViewLoadingMsg').text();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tmessage: loadingMessage,\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet defaultParams = this.getDefaultParams();\n\t\t\turlParams = $.extend(defaultParams, urlParams);\n\t\t\tAppConnector.requestPjax(urlParams)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tlistViewContentsContainer.html(data);\n\t\t\t\t\tapp.event.trigger('RecordListView.AfterLoad', data, thisInstance);\n\t\t\t\t\tthisInstance.calculatePages().done(function (data) {\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t\t// Let listeners know about page state change.\n\t\t\t\t\t\tapp.notifyPostAjaxReady();\n\t\t\t\t\t});\n\t\t\t\t\tthisInstance.postLoadListViewRecordsEvents(listViewContentsContainer);\n\t\t\t\t\tthisInstance.massUpdatePagination(urlParams);\n\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_NOT_ALLOWED_VALUE'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tpostLoadListViewRecordsEvents: function (container) {\n\t\t\tconst self = this;\n\t\t\tthis.registerPostLoadDesktopEvents(container);\n\t\t\tApp.Fields.Picklist.showSelect2ElementView(container.find('select.select2'));\n\t\t\tApp.Fields.Picklist.changeSelectElementView(container);\n\t\t\tlet searchInstance = self.getListSearchInstance();\n\t\t\tif (searchInstance !== false) {\n\t\t\t\tsearchInstance.registerBasicEvents();\n\t\t\t}\n\t\t\tVtiger_Index_Js.registerMailButtons(container);\n\t\t\tVtiger_Helper_Js.showHorizontalTopScrollBar();\n\t\t\tlet selectedIds = self.readSelectedIds();\n\t\t\tif (selectedIds != '') {\n\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t});\n\t\t\t\t\t$('#deSelectAllMsgDiv').show();\n\t\t\t\t\tlet excludedIds = self.readExcludedIds();\n\t\t\t\t\tif (excludedIds != '') {\n\t\t\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t\tif ($.inArray($(element).val(), excludedIds) != -1) {\n\t\t\t\t\t\t\t\t$(element).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\tif ($.inArray($(element).val(), selectedIds) != -1) {\n\t\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tself.checkSelectAll();\n\t\t\t}\n\t\t\tself.registerUnreviewedCountEvent();\n\t\t\tself.registerLastRelationsEvent();\n\t\t},\n\t\t/**\n\t\t * Function to calculate number of pages\n\t\t */\n\t\tcalculatePages: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet element = $('#totalPageCount');\n\t\t\tlet totalPageNumber = element.text();\n\t\t\tif (totalPageNumber == '') {\n\t\t\t\tlet totalRecordCount = $('#totalCount').val();\n\t\t\t\tif (totalRecordCount != '') {\n\t\t\t\t\tlet pageLimit = $('#pageLimit').val();\n\t\t\t\t\tif (pageLimit == '0') pageLimit = 1;\n\t\t\t\t\tlet pageCount = Math.ceil(totalRecordCount / pageLimit);\n\t\t\t\t\tif (pageCount == 0) {\n\t\t\t\t\t\tpageCount = 1;\n\t\t\t\t\t}\n\t\t\t\t\telement.text(pageCount);\n\t\t\t\t\taDeferred.resolve();\n\t\t\t\t\treturn aDeferred.promise();\n\t\t\t\t}\n\t\t\t\taDeferred.resolve();\n\t\t\t} else {\n\t\t\t\taDeferred.resolve();\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/*\n\t\t * Function to return alerts if no records selected.\n\t\t */\n\t\tnoRecordSelectedAlert: function (text = 'JS_PLEASE_SELECT_ONE_RECORD') {\n\t\t\tapp.showNotify({\n\t\t\t\ttext: app.vtranslate(text),\n\t\t\t\ttype: 'error'\n\t\t\t});\n\t\t},\n\t\tmassActionSave: function (form, isMassEdit) {\n\t\t\tif (typeof isMassEdit === 'undefined') {\n\t\t\t\tisMassEdit = false;\n\t\t\t}\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tif (isMassEdit) {\n\t\t\t\tlet massEditPreSaveEvent = $.Event(Vtiger_List_Js.massEditPreSave);\n\t\t\t\tform.trigger(massEditPreSaveEvent);\n\t\t\t\tif (massEditPreSaveEvent.isDefaultPrevented()) {\n\t\t\t\t\tform.find('[name=\"saveButton\"]').removeAttr('disabled');\n\t\t\t\t\taDeferred.reject();\n\t\t\t\t\treturn aDeferred.promise();\n\t\t\t\t}\n\t\t\t\tform.find('[id^=\"selectRow\"]').each(function (index, checkbox) {\n\t\t\t\t\tcheckbox = $(checkbox);\n\t\t\t\t\tif (!checkbox.prop('checked')) {\n\t\t\t\t\t\tcheckbox\n\t\t\t\t\t\t\t.closest('.js-form-row-container')\n\t\t\t\t\t\t\t.find('.fieldValue [name]')\n\t\t\t\t\t\t\t.each(function (index, element) {\n\t\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\t\telement.attr('data-element-name', element.attr('name')).removeAttr('name');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet massActionUrl = form.serializeFormData();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tAppConnector.request(massActionUrl)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\tif (!data.result) {\n\t\t\t\t\t\tlet params = {\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_MASS_EDIT_NOT_SUCCESSFUL'),\n\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tapp.showNotify(params);\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\taDeferred.reject(error, err);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tcheckSelectAll: function () {\n\t\t\tlet state = true;\n\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\tif ($(element).is(':checked')) {\n\t\t\t\t\tstate = true;\n\t\t\t\t} else {\n\t\t\t\t\tstate = false;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (state == true) {\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', true);\n\t\t\t} else {\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t}\n\t\t},\n\t\tgetRecordsCount: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet recordCountVal = $('#recordsCount').val();\n\t\t\tif (recordCountVal != '') {\n\t\t\t\taDeferred.resolve(recordCountVal);\n\t\t\t} else {\n\t\t\t\tlet count = '';\n\t\t\t\tlet params = this.getDefaultParams();\n\t\t\t\tparams.view = 'ListAjax';\n\t\t\t\tparams.mode = 'getRecordsCount';\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\tlet response = JSON.parse(data);\n\t\t\t\t\t$('#recordsCount').val(response['result']['count']);\n\t\t\t\t\tcount = response['result']['count'];\n\t\t\t\t\taDeferred.resolve(count);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tgetSelectOptionFromChosenOption: function (liElement) {\n\t\t\tlet id = liElement.attr('id');\n\t\t\tlet idArr = id.split('-');\n\t\t\tlet currentOptionId = '';\n\t\t\tif (idArr.length > 0) {\n\t\t\t\tcurrentOptionId = idArr[idArr.length - 1];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $('#filterOptionId_' + currentOptionId);\n\t\t},\n\t\treadSelectedIds: function (decode) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\tlet selectedIdsElement = $('#selectedIds');\n\t\t\tif (selectedIdsElement.length <= 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet selectedIdsDataAttr = cvId + 'selectedIds';\n\t\t\tlet selectedIdsElementDataAttributes = selectedIdsElement.data();\n\t\t\tlet selectedIds = [];\n\t\t\tif (!(selectedIdsDataAttr in selectedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeSelectedIds(selectedIds);\n\t\t\t} else {\n\t\t\t\tselectedIds = selectedIdsElementDataAttributes[selectedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true) {\n\t\t\t\tif (typeof selectedIds == 'object') {\n\t\t\t\t\treturn JSON.stringify(selectedIds);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selectedIds;\n\t\t},\n\t\treadExcludedIds: function (decode) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\tlet excludedIds = [];\n\t\t\tlet exlcudedIdsElement = $('#excludedIds');\n\t\t\tlet excludedIdsDataAttr = cvId + 'Excludedids';\n\t\t\tlet excludedIdsElementDataAttributes = exlcudedIdsElement.data();\n\t\t\tif (!(excludedIdsDataAttr in excludedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeExcludedIds(excludedIds);\n\t\t\t} else {\n\t\t\t\texcludedIds = excludedIdsElementDataAttributes[excludedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true) {\n\t\t\t\tif (typeof excludedIds == 'object') {\n\t\t\t\t\treturn JSON.stringify(excludedIds);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn excludedIds;\n\t\t},\n\t\twriteSelectedIds: function (selectedIds) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\tif (!Array.isArray(selectedIds)) {\n\t\t\t\tselectedIds = [selectedIds];\n\t\t\t}\n\t\t\t$('#selectedIds').data(cvId + 'selectedIds', selectedIds);\n\t\t},\n\t\twriteExcludedIds: function (excludedIds) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\t$('#excludedIds').data(cvId + 'Excludedids', excludedIds);\n\t\t},\n\t\tgetCurrentCvId: function () {\n\t\t\treturn $('#customFilter').find('option:selected').data('id');\n\t\t},\n\t\tgetAlphabetSearchField: function () {\n\t\t\treturn $('#alphabetSearchKey').val();\n\t\t},\n\t\tgetAlphabetSearchValue: function () {\n\t\t\treturn $('#alphabetValue').val();\n\t\t},\n\t\t/**\n\t\t * Function to check whether atleast minNumberOfRecords is checked\n\t\t * @param {number} minNumberOfRecords\n\t\t * @returns {boolean}\n\t\t */\n\t\tcheckListRecordSelected(minNumberOfRecords = 1) {\n\t\t\tif (\n\t\t\t\t(this.listViewContentContainer != false &&\n\t\t\t\t\tthis.listViewContentContainer.length != 0 &&\n\t\t\t\t\tthis.listViewContentContainer.find('#selectedIds').length == 0) ||\n\t\t\t\t((this.listViewContentContainer == false || this.listViewContentContainer.length == 0) &&\n\t\t\t\t\t$('#selectedIds').length == 0)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet selectedIds = this.readSelectedIds();\n\t\t\tif (typeof selectedIds === 'object' && selectedIds.length < minNumberOfRecords) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinactiveFieldValidation: function (field) {\n\t\t\tfield.validationEngine('hide');\n\t\t\tlet form = field.closest('form');\n\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\tlet fields = [field.get(0)];\n\t\t\tfield.attr('data-invalid-validation-engine', field.attr('data-validation-engine'));\n\t\t\tfield.removeAttr('data-validation-engine');\n\n\t\t\tif (field.is('select') && field.hasClass('select2')) {\n\t\t\t\tlet selectElement = app.getSelect2ElementFromSelect(field);\n\t\t\t\tselectElement.validationEngine('hide');\n\t\t\t\tfields.push(selectElement.get(0));\n\t\t\t}\n\t\t\tfor (let i in fields) {\n\t\t\t\tlet response = $.inArray(fields[i], invalidFields);\n\t\t\t\tif (response != '-1') {\n\t\t\t\t\tinvalidFields.splice(response, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tactiveFieldValidation: function (field) {\n\t\t\tlet validationVal = field.attr('data-invalid-validation-engine');\n\t\t\tif (typeof validationVal === 'undefined') return;\n\t\t\tfield.attr('data-validation-engine', validationVal);\n\t\t\tfield.removeAttr('data-invalid-validation-engine');\n\t\t},\n\t\tpostMassEdit: function (massEditContainer) {\n\t\t\tlet thisInstance = this;\n\t\t\tlet editInstance = Vtiger_Edit_Js.getInstance();\n\t\t\tmassEditContainer.find('.selectRow').on('change', function (e) {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet blockElement = element.closest('.js-form-row-container').find('.fieldValue');\n\t\t\t\tlet fieldElement = blockElement.find('[data-validation-engine],[data-invalid-validation-engine]');\n\t\t\t\tlet fieldInfo = fieldElement.data('fieldinfo');\n\t\t\t\tif (element.prop('checked')) {\n\t\t\t\t\tthisInstance.activeFieldValidation(fieldElement);\n\t\t\t\t} else {\n\t\t\t\t\tthisInstance.inactiveFieldValidation(fieldElement);\n\t\t\t\t}\n\t\t\t\tif (fieldInfo !== undefined && fieldInfo.type === 'reference') {\n\t\t\t\t\tlet mapFields = editInstance.getMappingRelatedField(\n\t\t\t\t\t\tfieldInfo.name,\n\t\t\t\t\t\teditInstance.getReferencedModuleName(blockElement),\n\t\t\t\t\t\tmassEditContainer\n\t\t\t\t\t);\n\t\t\t\t\t$.each(mapFields, function (key, value) {\n\t\t\t\t\t\tlet checkboxElement = massEditContainer.find('[id=\"selectRow' + key + '\"]');\n\t\t\t\t\t\tif (checkboxElement.length && checkboxElement.prop('disabled')) {\n\t\t\t\t\t\t\tcheckboxElement.prop('disabled', false);\n\t\t\t\t\t\t\tcheckboxElement.trigger('click');\n\t\t\t\t\t\t\tcheckboxElement.prop('disabled', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tmassEditContainer.find('form').on('submit', function (e) {\n\t\t\t\tlet form = $(e.currentTarget);\n\t\t\t\tif (typeof form.data('submit') !== 'undefined') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (form.validationEngine('validate')) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (!form.find('input[id^=\"selectRow\"]:checked').length) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_NONE_FIELD_MARKED_IN_MASS_EDIT'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\t\t\tif (invalidFields.length == 0) {\n\t\t\t\t\t\tform.find('[name=\"saveButton\"]').prop('disabled', true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthisInstance\n\t\t\t\t\t\t.massActionSave(form, true)\n\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\tthisInstance.getListViewRecords();\n\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\tapp.formAlignmentAfterValidation(form);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to go to page\n\t\t * @param {int} page\n\t\t */\n\t\tpaginationGoToPage(page) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = self.getListViewContainer();\n\t\t\tlet aDeferred = $.Deferred(),\n\t\t\t\tpageNumber = listViewPageDiv.find('#pageNumber');\n\t\t\tpageNumber.val(page);\n\t\t\tlistViewPageDiv.find('.js-page-jump').val(page);\n\t\t\tself\n\t\t\t\t.getListViewRecords({\n\t\t\t\t\torderby: listViewPageDiv.find('#orderBy').val(),\n\t\t\t\t\tsortorder: listViewPageDiv.find('#sortOrder').val(),\n\t\t\t\t\tviewname: self.getCurrentCvId()\n\t\t\t\t})\n\t\t\t\t.done(function (data) {\n\t\t\t\t\taDeferred.resolve();\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to register List view Page Navigation\n\t\t */\n\t\tregisterPageNavigationEvents() {\n\t\t\tconst listViewPageDiv = this.getListViewContainer();\n\t\t\tlistViewPageDiv.find('.js-next-page').on('click', (e) => {\n\t\t\t\tthis.jumpToNextPage(e);\n\t\t\t});\n\t\t\tlistViewPageDiv.find('.js-page--previous').on('click', () => {\n\t\t\t\tthis.jumpToPreviousPage();\n\t\t\t});\n\t\t\tlistViewPageDiv.find('.pageNumber').on('click', (e) => {\n\t\t\t\tthis.jumpToClickedPage($(e.currentTarget));\n\t\t\t});\n\t\t\tlistViewPageDiv.find('.js-count-number-records').on('click', () => {\n\t\t\t\tthis.updatePaginationAjax(true);\n\t\t\t});\n\t\t\tlistViewPageDiv\n\t\t\t\t.find('.js-page--jump-drop-down')\n\t\t\t\t.on('click', 'li', (e) => {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t})\n\t\t\t\t.on('keypress', '.js-page-jump', (e) => {\n\t\t\t\t\tthis.jumpToPage(e);\n\t\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Jump to next page\n\t\t * @param {$} element\n\t\t */\n\t\tjumpToNextPage(element) {\n\t\t\tif ($(element.currentTarget).hasClass('disabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst listViewPageDiv = this.getListViewContainer();\n\t\t\tif (listViewPageDiv.find('#noOfEntries').val() === listViewPageDiv.find('#pageLimit').val()) {\n\t\t\t\tthis.paginationGoToPage(parseInt(listViewPageDiv.find('#pageNumber').val()) + 1);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Jump to previous page\n\t\t */\n\t\tjumpToPreviousPage() {\n\t\t\tlet pageNumber = this.getListViewContainer().find('#pageNumber');\n\t\t\tif (pageNumber.val() > 1) {\n\t\t\t\tthis.paginationGoToPage(parseInt(pageNumber.val()) - 1);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Jump to clicked page function\n\t\t * @param {$} element\n\t\t */\n\t\tjumpToClickedPage(element) {\n\t\t\tif (element.hasClass('disabled')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.paginationGoToPage(element.data('id'));\n\t\t},\n\t\t/**\n\t\t * Jump to page function\n\t\t * @param {$.Event} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tjumpToPage(e) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = this.getListViewContainer();\n\t\t\tif (13 === e.which) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tlet element = $(e.currentTarget),\n\t\t\t\t\tresponse = Vtiger_WholeNumberGreaterThanZero_Validator_Js.invokeValidation(element);\n\t\t\t\tif (typeof response !== 'undefined') {\n\t\t\t\t\telement.validationEngine('showPrompt', response, '', 'topLeft', true);\n\t\t\t\t} else {\n\t\t\t\t\telement.validationEngine('hideAll');\n\t\t\t\t\tlet currentPageElement = listViewPageDiv.find('#pageNumber'),\n\t\t\t\t\t\tcurrentPageNumber = parseInt(currentPageElement.val()),\n\t\t\t\t\t\tnewPageNumber = parseInt(element.val()),\n\t\t\t\t\t\ttotalPages = parseInt(listViewPageDiv.find('.js-page--total').text());\n\t\t\t\t\tif (newPageNumber > totalPages) {\n\t\t\t\t\t\telement.validationEngine('showPrompt', app.vtranslate('JS_PAGE_NOT_EXIST'), '', 'topLeft', true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (newPageNumber === currentPageNumber) {\n\t\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_YOU_ARE_IN_PAGE_NUMBER') + ' ' + newPageNumber,\n\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentPageElement.val(newPageNumber);\n\t\t\t\t\tself.getListViewRecords();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to get page count and total number of records in list\n\t\t */\n\t\tgetPageCount: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet pageCountParams = this.getPageJumpParams();\n\t\t\tAppConnector.request(pageCountParams)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tlet response;\n\t\t\t\t\tif (typeof data != 'object') {\n\t\t\t\t\t\tresponse = JSON.parse(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresponse = data;\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(response);\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to get Page Jump Params\n\t\t */\n\t\tgetPageJumpParams: function () {\n\t\t\tlet params = this.getDefaultParams();\n\t\t\tparams.view = 'ListAjax';\n\t\t\tparams.mode = 'getPageCount';\n\n\t\t\treturn params;\n\t\t},\n\t\t/**\n\t\t * Function to update Pagining status\n\t\t */\n\t\tupdatePagination: function (pageNumber) {\n\t\t\tpageNumber = typeof pageNumber !== 'undefined' ? pageNumber : 1;\n\t\t\tAppConnector.request(\n\t\t\t\tObject.assign(this.getDefaultParams(), {\n\t\t\t\t\tmodule: app.getModuleName(),\n\t\t\t\t\tview: 'Pagination',\n\t\t\t\t\tpage: pageNumber,\n\t\t\t\t\tmode: 'getPagination',\n\t\t\t\t\tsourceModule: $('#moduleFilter').val(),\n\t\t\t\t\ttotalCount: $('.pagination').data('totalCount'),\n\t\t\t\t\tnoOfEntries: $('#noOfEntries').val()\n\t\t\t\t})\n\t\t\t).done((data) => {\n\t\t\t\t$('.paginationDiv').html(data);\n\t\t\t\tthis.registerPageNavigationEvents();\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to update pagination page numer\n\t\t * @param {boolean} force\n\t\t */\n\t\tupdatePaginationAjax(force = false) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = this.getListViewContainer();\n\t\t\tlet params = self.getDefaultParams(),\n\t\t\t\tcontainer = listViewPageDiv.find('.paginationDiv');\n\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\ttitle: app.vtranslate('JS_LBL_PERMISSION'),\n\t\t\t\ttext: app.vtranslate('JS_GET_PAGINATION_INFO'),\n\t\t\t\ttype: 'info'\n\t\t\t});\n\t\t\tif (container.find('.js-pagination-list').data('total-count') > 0 || force) {\n\t\t\t\tparams.totalCount = -1;\n\t\t\t\tparams.view = 'Pagination';\n\t\t\t\tparams.mode = 'getPagination';\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\tcontainer.html(data);\n\t\t\t\t\tself.registerPageNavigationEvents();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the event for changing the custom Filter\n\t\t */\n\t\tregisterChangeCustomFilterEvent: function (event) {\n\t\t\tlet target = $(event.currentTarget);\n\t\t\tlet selectOption = '';\n\t\t\tlet selectOptionId = '';\n\t\t\tlet textOption = '';\n\t\t\tif (target.is('option')) {\n\t\t\t\tselectOption = target;\n\t\t\t} else if (event.type === 'select2:selecting') {\n\t\t\t\tselectOptionId = event.params.args.data.id;\n\t\t\t\tselectOption = $(`#filterOptionId_${selectOptionId}`);\n\t\t\t} else if (event.type === 'mouseup') {\n\t\t\t\tselectOptionId = event.currentTarget.id.split('-').pop();\n\t\t\t\tselectOption = $(`#filterOptionId_${selectOptionId}`);\n\t\t\t\tthis.getFilterSelectElement().val(event.currentTarget.id.split('-').pop()).trigger('change');\n\t\t\t}\n\n\t\t\tif ($(`.nav-item[data-cvid='${selectOptionId}'] .nav-link`).tab('show').length === 0) {\n\t\t\t\t$('.js-filter-tab .active').removeClass('active');\n\t\t\t}\n\n\t\t\tif (typeof selectOption === 'object') {\n\t\t\t\ttextOption = selectOption.text();\n\t\t\t}\n\n\t\t\t$('#select2-customFilter-container span').contents().last().replaceWith(textOption);\n\t\t\tapp.setMainParams('pageNumber', '1');\n\t\t\tapp.setMainParams('pageToJump', '1');\n\t\t\tapp.setMainParams('orderBy', selectOption.data('orderby'));\n\t\t\tapp.setMainParams('sortOrder', selectOption.data('sortorder'));\n\t\t\tlet urlParams = {\n\t\t\t\tviewname: selectOption.val(),\n\t\t\t\t//to make alphabetic search empty\n\t\t\t\tsearch_key: this.getAlphabetSearchField(),\n\t\t\t\tsearch_value: '',\n\t\t\t\tsearch_params: ''\n\t\t\t};\n\t\t\t//Make the select all count as empty\n\t\t\t$('#recordsCount').val('');\n\t\t\t//Make total number of pages as empty\n\t\t\t$('#totalPageCount').text('');\n\t\t\t$('.pagination').data('totalCount', 0);\n\t\t\tthis.getListViewRecords(urlParams).done(() => {\n\t\t\t\tthis.breadCrumbsFilter(selectOption.text());\n\t\t\t\tthis.ListViewPostOperation();\n\t\t\t\tthis.updatePagination(1);\n\t\t\t});\n\t\t\tevent.stopPropagation();\n\t\t},\n\t\t/*\n\t\t * Function to register the event listeners for changing the custom Filter\n\t\t */\n\t\tregisterChangeCustomFilterEventListeners() {\n\t\t\tlet filterSelect = this.getFilterSelectElement();\n\t\t\tfilterSelect.on('select2:selecting', (event) => {\n\t\t\t\t//prevent default select2 event if it isn't keyboard event\n\t\t\t\tif (!$(':focus').length) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tfilterSelect.select2('close');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.registerChangeCustomFilterEvent(event);\n\t\t\t});\n\t\t\t// select change event must be replaced by click to avoid triggering while clicking on options' buttons\n\t\t\tfilterSelect.on('click', 'option', this.registerChangeCustomFilterEvent.bind(this));\n\t\t\t// event triggered by tab filter click\n\t\t\tthis.getFilterBlock().on('mouseup', '.select2-results__option', this.registerChangeCustomFilterEvent.bind(this));\n\t\t\tthis.getListViewTopMenuContainer()\n\t\t\t\t.find('.js-filter-tab')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tconst cvId = $(e.currentTarget).data('cvid');\n\t\t\t\t\tlet selectOption = filterSelect.find(`[value=${cvId}]`);\n\t\t\t\t\tselectOption.trigger('click');\n\t\t\t\t\t$('#select2-customFilter-container span').contents().last().replaceWith(selectOption.text());\n\t\t\t\t\tfilterSelect.val(cvId).trigger('change');\n\t\t\t\t});\n\t\t},\n\t\tbreadCrumbsFilter: function (text) {\n\t\t\tlet breadCrumbs = $('.breadcrumbsContainer');\n\t\t\tlet breadCrumbsLastSpan = breadCrumbs.last('span');\n\t\t\tlet filterExist = breadCrumbsLastSpan.find('.breadCrumbsFilter');\n\t\t\tif (filterExist.length && text != undefined) {\n\t\t\t\tfilterExist.text(' [' + app.vtranslate('JS_FILTER') + ': ' + text + ']');\n\t\t\t} else if (filterExist.length < 1) {\n\t\t\t\ttext = text == undefined ? this.getFilterSelectElement().find(':selected').text() : text;\n\t\t\t\tif (breadCrumbsLastSpan.hasClass('breadCrumbsFilter')) {\n\t\t\t\t\tbreadCrumbsLastSpan.text(': ' + text);\n\t\t\t\t} else {\n\t\t\t\t\tbreadCrumbs.append(\n\t\t\t\t\t\t'<small class=\"breadCrumbsFilter hideToHistory p-1 js-text-content u-text-ellipsis--no-hover\" data-js=\"text\"> [' +\n\t\t\t\t\t\t\tapp.vtranslate('JS_FILTER') +\n\t\t\t\t\t\t\t': ' +\n\t\t\t\t\t\t\ttext +\n\t\t\t\t\t\t\t']</small>'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tListViewPostOperation: function () {\n\t\t\treturn true;\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for list view main check box.\n\t\t */\n\t\tregisterMainCheckBoxClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '#listViewEntriesMainCheckBox', function () {\n\t\t\t\tlet selectedIds = thisInstance.readSelectedIds();\n\t\t\t\tlet excludedIds = thisInstance.readExcludedIds();\n\t\t\t\tif ($('#listViewEntriesMainCheckBox').is(':checked')) {\n\t\t\t\t\tlet recordCountObj = thisInstance.getRecordsCount();\n\t\t\t\t\trecordCountObj.done(function (data) {\n\t\t\t\t\t\t$('#totalRecordsCount').text(data);\n\t\t\t\t\t\tif ($('#deSelectAllMsgDiv').css('display') == 'none') {\n\t\t\t\t\t\t\t$('#selectAllMsgDiv').show();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\t\tif ($.inArray($(element).val(), excludedIds) != -1) {\n\t\t\t\t\t\t\t\texcludedIds.splice($.inArray($(element).val(), excludedIds), 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if ($.inArray($(element).val(), selectedIds) == -1) {\n\t\t\t\t\t\t\tselectedIds.push($(element).val());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\t\texcludedIds.push($(element).val());\n\t\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedIds.splice($.inArray($(element).val(), selectedIds), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthisInstance.writeSelectedIds(selectedIds);\n\t\t\t\tthisInstance.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function  to register click event for list view check box.\n\t\t */\n\t\tregisterCheckBoxClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '.listViewEntriesCheckBox', function (e) {\n\t\t\t\tlet selectedIds = thisInstance.readSelectedIds();\n\t\t\t\tlet excludedIds = thisInstance.readExcludedIds();\n\t\t\t\tlet elem = $(e.currentTarget);\n\t\t\t\tif (elem.is(':checked')) {\n\t\t\t\t\telem.closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.splice($.inArray(elem.val(), excludedIds), 1);\n\t\t\t\t\t} else if ($.inArray(elem.val(), selectedIds) == -1) {\n\t\t\t\t\t\tselectedIds.push(elem.val());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telem.closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.push(elem.val());\n\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselectedIds.splice($.inArray(elem.val(), selectedIds), 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthisInstance.checkSelectAll();\n\t\t\t\tthisInstance.writeSelectedIds(selectedIds);\n\t\t\t\tthisInstance.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for select all.\n\t\t */\n\t\tregisterSelectAllClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '#selectAllMsg', function () {\n\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t$('#deSelectAllMsgDiv').show();\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', true);\n\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tthisInstance.writeSelectedIds('all');\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for deselect All.\n\t\t */\n\t\tregisterDeselectAllClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '#deSelectAllMsg', function () {\n\t\t\t\t$('#deSelectAllMsgDiv').hide();\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tlet excludedIds = [];\n\t\t\t\tlet selectedIds = [];\n\t\t\t\tthisInstance.writeSelectedIds(selectedIds);\n\t\t\t\tthisInstance.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for listView headers\n\t\t */\n\t\tregisterHeadersClickEvent: function () {\n\t\t\tYetiForce_ListSearch_Js.registerSearch(this.getListViewContainer(), (data) => {\n\t\t\t\tthis.getListViewRecords(data);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * function to register the click event event for create filter\n\t\t */\n\t\tcreateFilterClickEvent: function (event) {\n\t\t\t//to close the dropdown\n\t\t\tthis.getFilterSelectElement().data('select2').close();\n\t\t\tnew CustomView($(event.currentTarget).find('#createFilter').data('createurl'));\n\t\t},\n\t\tregisterFeaturedFilterClickEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-favorites', function (event) {\n\t\t\t\t\tlet liElement = $(this).closest('.select2-results__option');\n\t\t\t\t\tlet currentOptionElement = thisInstance.getSelectOptionFromChosenOption(liElement);\n\t\t\t\t\tlet params = {\n\t\t\t\t\t\tcvid: currentOptionElement.attr('value'),\n\t\t\t\t\t\tmodule: 'CustomView',\n\t\t\t\t\t\taction: 'Featured',\n\t\t\t\t\t\tsorceModuleName: app.getModuleName()\n\t\t\t\t\t};\n\t\t\t\t\tif (currentOptionElement.data('featured') === 1) {\n\t\t\t\t\t\tparams.actions = 'remove';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparams.actions = 'add';\n\t\t\t\t\t}\n\t\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for duplicate filter\n\t\t */\n\t\tregisterDuplicateFilterClickEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-duplicate', function (event) {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tlet liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tlet currentOptionElement = thisInstance.getSelectOptionFromChosenOption(liElement);\n\t\t\t\t\tlet editUrl = currentOptionElement.data('duplicateurl');\n\t\t\t\t\tnew CustomView(editUrl);\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for edit filter\n\t\t */\n\t\tregisterEditFilterClickEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-edit', function (event) {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tlet liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tlet currentOptionElement = thisInstance.getSelectOptionFromChosenOption(liElement);\n\t\t\t\t\tlet editUrl = currentOptionElement.data('editurl');\n\t\t\t\t\tnew CustomView(editUrl);\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for delete filter\n\t\t */\n\t\tregisterDeleteFilterClickEvent: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tconst listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\t//used mouseup event to stop the propagation of customfilter select change event.\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-delete', (event) => {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tconst liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tVtiger_Helper_Js.showConfirmationBox({\n\t\t\t\t\t\tmessage: app.vtranslate('JS_LBL_ARE_YOU_SURE_YOU_WANT_TO_DELETE_FILTER')\n\t\t\t\t\t}).done((e) => {\n\t\t\t\t\t\tapp.openUrlMethodPost(thisInstance.getSelectOptionFromChosenOption(liElement).data('deleteurl'));\n\t\t\t\t\t});\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for approve filter\n\t\t */\n\t\tregisterApproveFilterClickEvent: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tconst listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-approve', (event) => {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tconst liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tapp.openUrlMethodPost(thisInstance.getSelectOptionFromChosenOption(liElement).data('approveurl'));\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for deny filter\n\t\t */\n\t\tregisterDenyFilterClickEvent: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tconst listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-deny', (event) => {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tconst liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tapp.openUrlMethodPost(thisInstance.getSelectOptionFromChosenOption(liElement).data('denyurl'));\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to generate filter actions template\n\t\t */\n\t\tappendFilterActionsTemplate: function (liElement) {\n\t\t\tlet currentOptionElement = this.getSelectOptionFromChosenOption(liElement);\n\t\t\tlet template = $(`<span class=\"js-filter-actions o-filter-actions noWrap float-right\">\n\t\t\t\t\t<span ${\n\t\t\t\t\t\tcurrentOptionElement.data('featured') === 1\n\t\t\t\t\t\t\t? 'title=\"' + app.vtranslate('JS_REMOVE_TO_FAVORITES') + '\"'\n\t\t\t\t\t\t\t: 'title=\"' + app.vtranslate('JS_ADD_TO_FAVORITES') + '\"'\n\t\t\t\t\t} data-value=\"favorites\" data-js=\"click\"\n\t\t\t\t\t\t  class=\" mr-1 js-filter-favorites ${currentOptionElement.data('featured') === 1 ? 'fas fa-star' : 'far fa-star'}\n\t\t\t\t\t\t  \t\t ${currentOptionElement.data('featured') === undefined ? 'd-none' : ''}\"\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_DUPLICATE')}\" data-value=\"duplicate\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-retweet mr-1 js-filter-duplicate ${$('#createFilter').length !== 0 ? '' : 'd-none'}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_EDIT')}\" data-value=\"edit\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-pencil-alt mr-1 js-filter-edit ${currentOptionElement.data('editable') === 1 ? '' : 'd-none'}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_DELETE')}\" data-value=\"delete\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-trash-alt mr-1 js-filter-delete ${currentOptionElement.data('deletable') === 1 ? '' : 'd-none'}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_DENY')}\" data-value=\"deny\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-exclamation-circle mr-1 js-filter-deny ${\n\t\t\t\t\t\t\t\tcurrentOptionElement.data('public') === 1 ? '' : 'd-none'\n\t\t\t\t\t\t\t}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_APPROVE')}\" data-value=\"approve\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-check mr-1 js-filter-approve ${currentOptionElement.data('pending') === 1 ? '' : 'd-none'}\"></span>\n\t\t\t\t</span>`);\n\t\t\ttemplate.appendTo(liElement.find('.js-filter__title'));\n\t\t},\n\t\t/*\n\t\t * Function to register the hover event for customview filter options\n\t\t */\n\t\tregisterCustomFilterOptionsHoverEvent: function () {\n\t\t\tlet filterBlock = this.getFilterBlock();\n\t\t\tif (filterBlock != false) {\n\t\t\t\tfilterBlock.on('mouseenter mouseleave', 'li.select2-results__option[role=\"option\"]', (event) => {\n\t\t\t\t\tlet liElement = $(event.currentTarget);\n\t\t\t\t\tlet liFilterImages = liElement.find('.js-filter-actions');\n\t\t\t\t\tif (liElement.hasClass('group-result')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.type === 'mouseenter' && liFilterImages.length === 0) {\n\t\t\t\t\t\tthis.appendFilterActionsTemplate(liElement);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the list view row click event\n\t\t */\n\t\tregisterRowClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.listViewEntries', function (e) {\n\t\t\t\tif ($(e.target).hasClass('js-no-link')) return;\n\t\t\t\tif ($(e.target).closest('div').hasClass('actions')) return;\n\t\t\t\tif ($(e.target).is('button') || $(e.target).parent().is('button')) return;\n\t\t\t\tif ($(e.target).closest('a').hasClass('noLinkBtn')) return;\n\t\t\t\tif ($(e.target, $(e.currentTarget)).is('td:first-child')) return;\n\t\t\t\tif ($(e.target).is('input[type=\"checkbox\"]')) return;\n\t\t\t\tif ($.contains($(e.currentTarget).find('td:last-child').get(0), e.target)) return;\n\t\t\t\tif ($.contains($(e.currentTarget).find('td:first-child').get(0), e.target)) return;\n\t\t\t\tlet elem = $(e.currentTarget);\n\t\t\t\tlet recordUrl = elem.data('recordurl');\n\t\t\t\tif (typeof recordUrl === 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twindow.location.href = recordUrl;\n\t\t\t});\n\t\t},\n\t\tregisterMassRecordsEvents: function () {\n\t\t\tconst self = this;\n\t\t\tthis.getListViewContainer().on('click', '.js-mass-record-event', function () {\n\t\t\t\tlet target = $(this);\n\t\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\t\tif (listInstance.checkListRecordSelected() != true) {\n\t\t\t\t\tif (target.data('type') === 'modal') {\n\t\t\t\t\t\tlet vars = {};\n\t\t\t\t\t\ttarget.data('url').replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\t\t\t\t\t\t\tvars[key] = value;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\turl: target.data('url'),\n\t\t\t\t\t\t\tdata: $.extend(self.getSearchParams(), vars)\n\t\t\t\t\t\t}).done(function (modal) {\n\t\t\t\t\t\t\tapp.showModalWindow(modal);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet params = {};\n\t\t\t\t\t\tif (target.data('confirm')) {\n\t\t\t\t\t\t\tparams.message = target.data('confirm');\n\t\t\t\t\t\t\tparams.title = target.html();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparams.message = target.html();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tVtiger_Helper_Js.showConfirmationBox(params).done(function (e) {\n\t\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator(),\n\t\t\t\t\t\t\t\tdataParams = self.getSearchParams();\n\t\t\t\t\t\t\tdelete dataParams.view;\n\t\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\t\turl: target.data('url'),\n\t\t\t\t\t\t\t\tdata: dataParams\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\tif (data && data.result && data.result.notify) {\n\t\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(data.result.notify);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tself.getListViewRecords();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Update pagination row\n\t\t * @param {Array} urlParams\n\t\t */\n\t\tmassUpdatePagination(urlParams = []) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = this.getListViewContainer();\n\t\t\tlet paginationObject = listViewPageDiv.find('.js-pagination-list'),\n\t\t\t\ttotalCount = paginationObject.data('totalCount'),\n\t\t\t\tpageNumber = parseInt(listViewPageDiv.find('#pageNumber').val()),\n\t\t\t\ttempPageNumber = pageNumber,\n\t\t\t\tselectedIds = self.readSelectedIds(false);\n\t\t\tif ('all' === selectedIds[0]) {\n\t\t\t\tpageNumber = 1;\n\t\t\t\ttotalCount = 0;\n\t\t\t} else {\n\t\t\t\tif ('' !== totalCount && 0 !== totalCount) {\n\t\t\t\t\ttotalCount = totalCount - selectedIds.length;\n\t\t\t\t}\n\t\t\t\tif (listViewPageDiv.find('#noOfEntries').val() <= 0 && pageNumber !== 1) {\n\t\t\t\t\tpageNumber--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpaginationObject.data('totalCount', totalCount);\n\t\t\tself.updatePagination(pageNumber);\n\t\t\tif (tempPageNumber !== pageNumber) {\n\t\t\t\tif (!$.isEmptyObject(urlParams)) {\n\t\t\t\t\turlParams['page'] = pageNumber;\n\t\t\t\t}\n\t\t\t\tself.getListViewRecords(urlParams);\n\t\t\t}\n\t\t\tself.writeSelectedIds([]);\n\t\t},\n\t\t/*\n\t\t * Function to register the click event of email field\n\t\t */\n\t\tregisterEmailFieldClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.emailField', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event of phone field\n\t\t */\n\t\tregisterPhoneFieldClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.phoneField', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event of url field\n\t\t */\n\t\tregisterUrlFieldClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.urlField', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to inactive field for validation in a form\n\t\t * this will remove data-validation-engine attr of all the elements\n\t\t * @param Accepts form as a parameter\n\t\t */\n\t\tinactiveFieldsValidation: function (form) {\n\t\t\tlet massEditFieldList = $('#massEditFieldsNameList').data('value');\n\t\t\tfor (let fieldName in massEditFieldList) {\n\t\t\t\tlet fieldInfo = massEditFieldList[fieldName];\n\n\t\t\t\tlet fieldElement = form.find('[name=\"' + fieldInfo.name + '\"]');\n\t\t\t\tif (fieldInfo.type == 'reference') {\n\t\t\t\t\t//get the element which will be shown which has \"_display\" appended to actual field name\n\t\t\t\t\tfieldElement = form.find('[name=\"' + fieldInfo.name + '_display\"]');\n\t\t\t\t} else if (fieldInfo.type == 'multipicklist' || fieldInfo.type == 'sharedOwner') {\n\t\t\t\t\tfieldElement = form.find('[name=\"' + fieldInfo.name + '[]\"]');\n\t\t\t\t}\n\n\t\t\t\t//Not all the fields will be enabled for mass edit\n\t\t\t\tif (fieldElement.length == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet elemData = fieldElement.data();\n\n\t\t\t\t//Blank validation by default\n\t\t\t\tlet validationVal = 'validate[]';\n\t\t\t\tif ('validationEngine' in elemData) {\n\t\t\t\t\tvalidationVal = elemData.validationEngine;\n\t\t\t\t\tdelete elemData.validationEngine;\n\t\t\t\t}\n\t\t\t\tfieldElement.attr('data-invalid-validation-engine', validationVal);\n\t\t\t\tfieldElement.removeAttr('data-validation-engine');\n\t\t\t}\n\t\t},\n\t\tregisterEventForTabClick: function (form) {\n\t\t\tlet ulContainer = form.find('.massEditTabs');\n\t\t\tulContainer.on('click', 'a[data-toggle=\"tab\"]', function (e) {\n\t\t\t\tform.validationEngine('validate');\n\t\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\t\tif (invalidFields.length > 0) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterSlimScrollMassEdit: function () {\n\t\t\tapp.showScrollBar($('div[name=\"massEditContent\"]'), {\n\t\t\t\theight: app.getScreenHeight(70) + 'px'\n\t\t\t});\n\t\t},\n\t\tchangeCustomFilterElementView: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tlet filterSelectElement = this.getFilterSelectElement();\n\t\t\tif (filterSelectElement.length > 0 && filterSelectElement.is('select')) {\n\t\t\t\tApp.Fields.Picklist.showSelect2ElementView(filterSelectElement, {\n\t\t\t\t\ttemplateSelection: function (data) {\n\t\t\t\t\t\tlet resultContainer = $('<span></span>');\n\t\t\t\t\t\tresultContainer.append($($('.filterImage').clone().get(0)).show());\n\t\t\t\t\t\tresultContainer.append(data.text);\n\t\t\t\t\t\treturn resultContainer;\n\t\t\t\t\t},\n\t\t\t\t\tcustomSortOptGroup: true,\n\t\t\t\t\ttemplateResult: function (data) {\n\t\t\t\t\t\tlet actualElement = $(data.element);\n\t\t\t\t\t\tif (actualElement.is('option')) {\n\t\t\t\t\t\t\tlet additionalText = '';\n\t\t\t\t\t\t\tif (actualElement.data('option') !== undefined) {\n\t\t\t\t\t\t\t\tadditionalText =\n\t\t\t\t\t\t\t\t\t'<div class=\"u-max-w-lg-100 u-text-ellipsis--no-hover d-inline-block small\">' +\n\t\t\t\t\t\t\t\t\tactualElement.data('option') +\n\t\t\t\t\t\t\t\t\t'</div>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t'<div class=\"js-filter__title d-flex justify-content-between\" data-js=\"appendTo\"><div class=\"u-text-ellipsis--no-hover\">' +\n\t\t\t\t\t\t\t\tactualElement.text() +\n\t\t\t\t\t\t\t\t'</div></div>' +\n\t\t\t\t\t\t\t\tadditionalText\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn actualElement.attr('label');\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tescapeMarkup: function (markup) {\n\t\t\t\t\t\treturn markup;\n\t\t\t\t\t},\n\t\t\t\t\tcloseOnSelect: true\n\t\t\t\t});\n\n\t\t\t\tlet select2Instance = filterSelectElement.data('select2');\n\t\t\t\t$('.filterActionsDiv')\n\t\t\t\t\t.appendTo(select2Instance.$dropdown.find('.select2-dropdown:last'))\n\t\t\t\t\t.removeClass('d-none')\n\t\t\t\t\t.on('click', function (e) {\n\t\t\t\t\t\tthisInstance.createFilterClickEvent(e);\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to show total records count in listview on hover\n\t\t * of pageNumber text\n\t\t */\n\t\tregisterEventForTotalRecordsCount: function () {\n\t\t\tlet thisInstance = this;\n\t\t\t$('.totalNumberOfRecords').on('click', function (e) {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet totalRecordsElement = $('#totalCount');\n\t\t\t\tlet totalNumberOfRecords = totalRecordsElement.val();\n\t\t\t\telement.addClass('d-none');\n\t\t\t\telement.parent().progressIndicator({});\n\t\t\t\tif (totalNumberOfRecords == '') {\n\t\t\t\t\tthisInstance.getPageCount().done(function (data) {\n\t\t\t\t\t\ttotalNumberOfRecords = data['result']['numberOfRecords'];\n\t\t\t\t\t\ttotalRecordsElement.val(totalNumberOfRecords);\n\t\t\t\t\t\tthisInstance.showPagingInfo();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthisInstance.showPagingInfo();\n\t\t\t\t}\n\t\t\t\telement.parent().progressIndicator({ mode: 'hide' });\n\t\t\t});\n\t\t},\n\t\tshowPagingInfo: function () {\n\t\t\tlet totalNumberOfRecords = $('#totalCount').val();\n\t\t\tlet pageNumberElement = $('.pageNumbersText');\n\t\t\tlet pageRange = pageNumberElement.text();\n\t\t\tlet newPagingInfo = pageRange + ' (' + totalNumberOfRecords + ')';\n\t\t\tlet listViewEntriesCount = parseInt($('#noOfEntries').val());\n\t\t\tif (listViewEntriesCount != 0) {\n\t\t\t\t$('.pageNumbersText').html(newPagingInfo);\n\t\t\t} else {\n\t\t\t\t$('.pageNumbersText').html('');\n\t\t\t}\n\t\t},\n\t\tregisterUnreviewedCountEvent: function () {\n\t\t\tlet ids = [],\n\t\t\t\tlistViewContentDiv = this.getListViewContentContainer(),\n\t\t\t\tisUnreviewedActive = listViewContentDiv.find('.unreviewed').length;\n\t\t\tlistViewContentDiv.find('tr.listViewEntries').each(function () {\n\t\t\t\tlet id = $(this).data('id');\n\t\t\t\tif (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!ids || isUnreviewedActive < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\taction: 'ChangesReviewedOn',\n\t\t\t\tmode: 'getUnreviewed',\n\t\t\t\tmodule: 'ModTracker',\n\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\trecordsId: ids\n\t\t\t}).done((appData) => {\n\t\t\t\tlet data = appData.result;\n\t\t\t\t$.each(data, function (id, value) {\n\t\t\t\t\tif (value.a > 0) {\n\t\t\t\t\t\tlistViewContentDiv\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.all')\n\t\t\t\t\t\t\t.text(value.a)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t\tif (value.m > 0) {\n\t\t\t\t\t\tlistViewContentDiv\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.mail')\n\t\t\t\t\t\t\t.text(value.m)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.reflowThead();\n\t\t\t});\n\t\t},\n\t\tregisterLastRelationsEvent: function () {\n\t\t\tlet ids = [],\n\t\t\t\tlistViewContentDiv = this.getListViewContentContainer(),\n\t\t\t\tisTimeLineActive = listViewContentDiv.find('.timeLineIconList').length;\n\t\t\tlistViewContentDiv.find('tr.listViewEntries').each(function () {\n\t\t\t\tlet id = $(this).data('id');\n\t\t\t\tif (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!ids || isTimeLineActive < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\taction: 'LastRelation',\n\t\t\t\tmodule: 'ModTracker',\n\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\trecordsId: ids\n\t\t\t}).done((appData) => {\n\t\t\t\tlet data = appData.result;\n\t\t\t\t$.each(data, function (id, value) {\n\t\t\t\t\tif (value.type) {\n\t\t\t\t\t\tlistViewContentDiv\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .timeLineIconList')\n\t\t\t\t\t\t\t.addClass(value.color + ' yfm-' + value.type)\n\t\t\t\t\t\t\t.removeClass('d-none')\n\t\t\t\t\t\t\t.on('click', function (e) {\n\t\t\t\t\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\t\t\t\t\tlet url = element.data('url');\n\t\t\t\t\t\t\t\tapp.showModalWindow(null, url, function (data) {\n\t\t\t\t\t\t\t\t\tVtiger_Index_Js.registerMailButtons(data);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.reflowThead();\n\t\t\t});\n\t\t},\n\t\tregisterChangeEntityStateEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\t$('.dropdownEntityState a').on('click', function (e) {\n\t\t\t\tlet element = $(this);\n\t\t\t\telement.closest('ul').find('a').removeClass('active');\n\t\t\t\telement.addClass('active');\n\t\t\t\t$('#entityState').val(element.data('value'));\n\t\t\t\tapp.setMainParams('pageNumber', '1');\n\t\t\t\tapp.setMainParams('pageToJump', '1');\n\t\t\t\t$('#recordsCount').val('');\n\t\t\t\t$('#totalPageCount').text('');\n\t\t\t\t$('.pagination').data('totalCount', 0);\n\t\t\t\t$('#dropdownEntityState').find('.js-icon').attr('class', element.find('.js-icon').attr('class'));\n\t\t\t\tthisInstance.getListViewRecords().done(function (data) {\n\t\t\t\t\tthisInstance.calculatePages().done(function () {\n\t\t\t\t\t\tthisInstance.updatePagination();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterSummationEvent: function () {\n\t\t\tlet self = this;\n\t\t\tlet listContainer = this.getListViewContentContainer();\n\t\t\tlistContainer.on('click', '.listViewSummation button', function () {\n\t\t\t\tlet button = $(this);\n\t\t\t\tlet calculateValue = button.closest('td').find('.calculateValue');\n\t\t\t\tlet params = self.getSearchParams();\n\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\tmessage: app.vtranslate('JS_CALCULATING_IN_PROGRESS'),\n\t\t\t\t\tposition: 'html',\n\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tparams.action = 'List';\n\t\t\t\tparams.mode = 'calculate';\n\t\t\t\tparams.fieldName = button.data('field');\n\t\t\t\tparams.calculateType = button.data('operator');\n\t\t\t\tdelete params.view;\n\t\t\t\tapp.hidePopover(button);\n\t\t\t\tlet scrollLeft = listContainer.scrollLeft();\n\t\t\t\tlet scrollTop = listContainer.scrollTop();\n\t\t\t\tAppConnector.request(params).done((response) => {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\tcalculateValue.html(response.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcalculateValue.html('');\n\t\t\t\t\t}\n\t\t\t\t\tself.registerFixedThead(listContainer);\n\t\t\t\t\tlistContainer.scrollLeft(scrollLeft);\n\t\t\t\t\tlistContainer.scrollTop(scrollTop);\n\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterListScroll: function (container) {\n\t\t\tconst containerH = container.height(),\n\t\t\t\tcontainerOffsetTop = container.offset().top,\n\t\t\t\tfooterH = $('.js-footer').height(),\n\t\t\t\twindowH = $(window).height();\n\t\t\t//\tif list is bigger than window fit its height to it\n\t\t\tif (containerH + containerOffsetTop + footerH > windowH) {\n\t\t\t\tcontainer.height(windowH - (containerOffsetTop + footerH));\n\t\t\t}\n\t\t\tcontainer.find('.js-fixed-thead').floatThead('destroy');\n\t\t\tcontainer.siblings('.floatThead-container').remove();\n\t\t\tapp.showNewScrollbarTopBottomRight(container);\n\t\t\tapp.registerMiddleClickScroll(container);\n\t\t},\n\t\tregisterFixedThead(container) {\n\t\t\tif (!Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tthis.listFloatThead = container.find('.js-fixed-thead');\n\t\t\t\tthis.listFloatThead.floatThead('destroy');\n\t\t\t\tthis.listFloatThead.floatThead({\n\t\t\t\t\tscrollContainer: function () {\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.listFloatThead.floatThead('reflow');\n\t\t\t}\n\t\t},\n\t\tgetFloatTheadContainer(container = this.getListViewContentContainer()) {\n\t\t\tif (this.listFloatThead === false) {\n\t\t\t\tthis.listFloatThead = container.find('.js-fixed-thead');\n\t\t\t}\n\t\t\treturn this.listFloatThead;\n\t\t},\n\t\treflowThead() {\n\t\t\tif (Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tthis.getFloatTheadContainer().floatThead('reflow');\n\t\t\t}\n\t\t},\n\t\tregisterMassActionsBtnEvents() {\n\t\t\tthis.getListViewContainer().on('click', '.js-mass-action', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet url = element.data('url');\n\t\t\t\tif (typeof url != 'undefined') {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(element.data('checkSelected') !== undefined && element.data('checkSelected') == 0) ||\n\t\t\t\t\t\tthis.checkListRecordSelected() !== true\n\t\t\t\t\t) {\n\t\t\t\t\t\tswitch (element.data('type')) {\n\t\t\t\t\t\t\tcase 'modal':\n\t\t\t\t\t\t\t\tVtiger_List_Js.triggerMassAction(url);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'formRedirect':\n\t\t\t\t\t\t\t\tVtiger_List_Js.triggerExportAction(url, element.data('tab') === 'new');\n\t\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'reload':\n\t\t\t\t\t\t\t\tlet params = self.getSearchParams();\n\t\t\t\t\t\t\t\tdelete params.view;\n\t\t\t\t\t\t\t\tdelete params.action;\n\t\t\t\t\t\t\t\tparams.sourceModule = params.module;\n\t\t\t\t\t\t\t\tdelete params.module;\n\t\t\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t\t\t\tdata: params\n\t\t\t\t\t\t\t\t}).done((response) => {\n\t\t\t\t\t\t\t\t\tself.getListViewRecords();\n\t\t\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t\t\t\tif (response.result) {\n\t\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(response.result.message);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.noRecordSelectedAlert();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\tregisterMassActionsBtnMergeEvents() {\n\t\t\tthis.getListViewContainer().on('click', '.js-mass-action--merge', (e) => {\n\t\t\t\tlet url = $(e.target).data('url');\n\t\t\t\tif (typeof url !== 'undefined') {\n\t\t\t\t\tif (this.checkListRecordSelected(2) !== true) {\n\t\t\t\t\t\tVtiger_List_Js.triggerMassAction(url);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.noRecordSelectedAlert('JS_SELECT_ATLEAST_TWO_RECORD_FOR_MERGING');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register desktop events\n\t\t * @param {$} listViewContainer\n\t\t */\n\t\tregisterDesktopEvents(listViewContainer) {\n\t\t\tif (Quasar.plugins.Platform.is.desktop && listViewContainer.length) {\n\t\t\t\tthis.registerListScroll(listViewContainer);\n\t\t\t\tthis.registerFixedThead(listViewContainer);\n\t\t\t}\n\t\t},\n\t\tregisterPostLoadDesktopEvents(listViewContainer) {\n\t\t\tif (Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tnew PerfectScrollbar(listViewContainer[0]).destroy();\n\t\t\t\tlistViewContainer.find('.js-fixed-thead').floatThead('destroy');\n\t\t\t\tlistViewContainer.siblings('.floatThead-container').remove();\n\t\t\t\tnew PerfectScrollbar(listViewContainer[0]);\n\t\t\t\tthis.registerFixedThead(listViewContainer);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Register keyboard shortcuts events\n\t\t */\n\t\tregisterKeyboardShortcutsEvent: function () {\n\t\t\tdocument.addEventListener('keydown', (event) => {\n\t\t\t\tif (event.altKey && event.code === 'KeyA' && $('.js-add-record').length) {\n\t\t\t\t\twindow.location.href = 'index.php?module=' + app.getModuleName() + '&view=Edit';\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterEvents: function () {\n\t\t\tthis.registerRowClickEvent();\n\t\t\tthis.registerPageNavigationEvents();\n\t\t\tthis.registerMainCheckBoxClickEvent();\n\t\t\tthis.registerCheckBoxClickEvent();\n\t\t\tthis.registerSelectAllClickEvent();\n\t\t\tthis.registerDeselectAllClickEvent();\n\t\t\tthis.registerMassRecordsEvents();\n\t\t\tthis.registerMassActionsBtnMergeEvents();\n\t\t\tthis.registerHeadersClickEvent();\n\t\t\tthis.changeCustomFilterElementView();\n\t\t\tthis.registerFeaturedFilterClickEvent();\n\t\t\tthis.registerChangeCustomFilterEventListeners();\n\t\t\tthis.registerChangeEntityStateEvent();\n\t\t\tthis.registerDuplicateFilterClickEvent();\n\t\t\tthis.registerEditFilterClickEvent();\n\t\t\tthis.registerDeleteFilterClickEvent();\n\t\t\tthis.registerApproveFilterClickEvent();\n\t\t\tthis.registerDenyFilterClickEvent();\n\t\t\tthis.registerCustomFilterOptionsHoverEvent();\n\t\t\tthis.registerEmailFieldClickEvent();\n\t\t\tthis.registerPhoneFieldClickEvent();\n\t\t\tthis.registerMassActionsBtnEvents();\n\t\t\tVtiger_Helper_Js.showHorizontalTopScrollBar();\n\t\t\tthis.registerUrlFieldClickEvent();\n\t\t\tthis.registerEventForTotalRecordsCount();\n\t\t\tthis.registerSummationEvent();\n\t\t\t//Just reset all the checkboxes on page load: added for chrome issue.\n\t\t\tlet listViewContainer = this.getListViewContentContainer();\n\t\t\tlistViewContainer.find('#listViewEntriesMainCheckBox,.listViewEntriesCheckBox').prop('checked', false);\n\t\t\tthis.getListSearchInstance(false);\n\t\t\tthis.registerDesktopEvents(listViewContainer);\n\t\t\tthis.registerUnreviewedCountEvent();\n\t\t\tthis.registerLastRelationsEvent();\n\t\t\tthis.registerKeyboardShortcutsEvent();\n\t\t\tVtiger_Index_Js.registerMailButtons(listViewContainer);\n\t\t},\n\t\t/**\n\t\t * Function that executes after the mass delete action\n\t\t */\n\t\tpostMassDeleteRecords: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tapp.hideModalWindow();\n\t\t\tlistInstance.getListViewRecords().done(function (data) {\n\t\t\t\t$('#recordsCount').val('');\n\t\t\t\t$('#totalPageCount').text('');\n\t\t\t\t$('#deSelectAllMsg').trigger('click');\n\t\t\t\tlistInstance.calculatePages().done(function () {\n\t\t\t\t\tlistInstance.updatePagination();\n\t\t\t\t});\n\t\t\t\taDeferred.resolve();\n\t\t\t});\n\t\t\t$('#recordsCount').val('');\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t}\n);\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\njQuery.Class(\n\t'Vtiger_RelatedList_Js',\n\t{\n\t\trelatedListInstance: false,\n\t\tgetInstance: function (parentId, parentModule, selectedRelatedTabElement, relatedModuleName, url) {\n\t\t\tif (\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance === false ||\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance.moduleName !== relatedModuleName\n\t\t\t) {\n\t\t\t\tlet moduleClassName = app.getModuleName() + '_RelatedList_Js',\n\t\t\t\t\tfallbackClassName = Vtiger_RelatedList_Js,\n\t\t\t\t\tinstance;\n\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\tinstance = new window[moduleClassName]();\n\t\t\t\t} else {\n\t\t\t\t\tinstance = new fallbackClassName();\n\t\t\t\t}\n\t\t\t\tinstance.parentRecordId = parentId;\n\t\t\t\tinstance.parentModuleName = parentModule;\n\t\t\t\tinstance.selectedRelatedTabElement = selectedRelatedTabElement;\n\t\t\t\tinstance.moduleName = relatedModuleName;\n\t\t\t\tinstance.relatedTabsContainer = selectedRelatedTabElement.closest('div.related');\n\t\t\t\tinstance.content = $('div.contents', instance.relatedTabsContainer.closest('div.detailViewContainer'));\n\t\t\t\tinstance.relatedView = instance.content.find('input.relatedView').val();\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance = instance;\n\t\t\t}\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.parseUrlParams(url);\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.setSelectedTabElement(selectedRelatedTabElement);\n\t\t\treturn Vtiger_RelatedList_Js.relatedListInstance;\n\t\t},\n\t\tgetInstanceByUrl: function (url, selectedRelatedTabElement) {\n\t\t\tlet params = app.convertUrlToObject(url);\n\t\t\tif (\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance === false ||\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance.moduleName !== params['relatedModule']\n\t\t\t) {\n\t\t\t\tlet moduleClassName = app.getModuleName() + '_RelatedList_Js',\n\t\t\t\t\tfallbackClassName = Vtiger_RelatedList_Js,\n\t\t\t\t\tinstance;\n\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\tinstance = new window[moduleClassName]();\n\t\t\t\t} else {\n\t\t\t\t\tinstance = new fallbackClassName();\n\t\t\t\t}\n\t\t\t\tinstance.selectedRelatedTabElement = selectedRelatedTabElement;\n\t\t\t\tinstance.relatedTabsContainer = selectedRelatedTabElement.closest('div.related');\n\t\t\t\tinstance.content = $('div.contents', instance.relatedTabsContainer.closest('div.detailViewContainer'));\n\t\t\t\tinstance.relatedView = instance.content.find('input.relatedView').val();\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance = instance;\n\t\t\t}\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.parentRecordId = params['record'];\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.parentModuleName = params['module'];\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.moduleName = params['relatedModule'];\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.defaultParams = params;\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.setSelectedTabElement(selectedRelatedTabElement);\n\t\t\treturn Vtiger_RelatedList_Js.relatedListInstance;\n\t\t},\n\t\ttriggerMassAction: function (massActionUrl, type) {\n\t\t\tconst self = this.relatedListInstance;\n\t\t\tlet validationResult = self.checkListRecordSelected();\n\t\t\tif (validationResult != true) {\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator(),\n\t\t\t\t\tselectedIds = self.readSelectedIds(true),\n\t\t\t\t\texcludedIds = self.readExcludedIds(true),\n\t\t\t\t\tcvId = self.getCurrentCvId(),\n\t\t\t\t\tpostData = self.getCompleteParams();\n\t\t\t\tdelete postData.mode;\n\t\t\t\tdelete postData.view;\n\t\t\t\tpostData.viewname = cvId;\n\t\t\t\tpostData.selected_ids = selectedIds;\n\t\t\t\tpostData.excluded_ids = excludedIds;\n\t\t\t\tlet actionParams = {\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: massActionUrl,\n\t\t\t\t\tdata: postData\n\t\t\t\t};\n\t\t\t\tif (type === 'sendByForm') {\n\t\t\t\t\tapp.openUrlMethodPost(massActionUrl, postData);\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t} else {\n\t\t\t\t\tAppConnector.request(actionParams)\n\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\tif (responseData && responseData.result !== null) {\n\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (responseData.result.reloadList) {\n\t\t\t\t\t\t\t\t\tVtiger_Detail_Js.reloadRelatedList();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (responseData.result.processStop) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Method to verify if selected files exist\n\t\t * @return boolean\n\t\t */\n\t\tverifyFileExist: function () {\n\t\t\tconst self = this.relatedListInstance;\n\t\t\tlet aDeferred = jQuery.Deferred(),\n\t\t\t\tselectedIds = self.readSelectedIds(true),\n\t\t\t\texcludedIds = self.readExcludedIds(true),\n\t\t\t\tcvId = self.getCurrentCvId(),\n\t\t\t\tpostData = self.getCompleteParams();\n\t\t\tdelete postData.mode;\n\t\t\tdelete postData.view;\n\t\t\tpostData.viewname = cvId;\n\t\t\tpostData.selected_ids = selectedIds;\n\t\t\tpostData.excluded_ids = excludedIds;\n\t\t\tpostData.action = 'RelationAjax';\n\t\t\tpostData.mode = 'checkFilesIntegrity';\n\t\t\tAppConnector.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: postData\n\t\t\t}).done(function (responseData) {\n\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t}\n\t\t\t\taDeferred.resolve(true);\n\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Method to trigger mass download action\n\t\t * @param massActionUrl\n\t\t * @param type\n\t\t */\n\t\ttriggerMassDownload: function (massActionUrl, type) {\n\t\t\tconst self = this.relatedListInstance,\n\t\t\t\tthisInstance = this;\n\t\t\tthis.verifyFileExist().done(function (data) {\n\t\t\t\tif (true === data) {\n\t\t\t\t\tthisInstance.triggerMassAction(massActionUrl.substring(0, massActionUrl.indexOf('&mode=multiple')), type);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\ttriggerMassQuickCreate: function (moduleName, data) {\n\t\t\tconst self = this.relatedListInstance;\n\t\t\tif (self.checkListRecordSelected() != true) {\n\t\t\t\tlet listParams = self.getSelectedParams();\n\t\t\t\tlet progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tlet params = {\n\t\t\t\t\tcallbackFunction: function () {\n\t\t\t\t\t\tself.loadRelatedList();\n\t\t\t\t\t},\n\t\t\t\t\tnoCache: true,\n\t\t\t\t\tdata: $.extend(data, {\n\t\t\t\t\t\tsourceView: 'RelatedListView',\n\t\t\t\t\t\tsourceModule: listParams.relatedModule,\n\t\t\t\t\t\tentityState: listParams.entityState,\n\t\t\t\t\t\tsearch_params: listParams.search_params,\n\t\t\t\t\t\texcluded_ids: listParams.excluded_ids,\n\t\t\t\t\t\tselected_ids: listParams.selected_ids,\n\t\t\t\t\t\trelationId: listParams.relationId,\n\t\t\t\t\t\trelatedRecord: listParams.record,\n\t\t\t\t\t\trelatedModule: listParams.module\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tApp.Components.QuickCreate.getForm(\n\t\t\t\t\t'index.php?module=' + moduleName + '&view=MassQuickCreateModal',\n\t\t\t\t\tmoduleName,\n\t\t\t\t\tparams\n\t\t\t\t).done((data) => {\n\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tApp.Components.QuickCreate.showModal(data, params);\n\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to trigger mass send email modal\n\t\t */\n\t\ttriggerSendEmail: function () {\n\t\t\tlet params = Vtiger_RelatedList_Js.relatedListInstance.getDefaultParams();\n\t\t\tVtiger_List_Js.triggerSendEmail(\n\t\t\t\t$.extend(params, {\n\t\t\t\t\trelatedLoad: true,\n\t\t\t\t\tmodule: Vtiger_RelatedList_Js.relatedListInstance.moduleName,\n\t\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\t\tsourceRecord: app.getRecordId()\n\t\t\t\t}),\n\t\t\t\tfunction () {\n\t\t\t\t\tVtiger_Detail_Js.reloadRelatedList();\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\t/**\n\t\t * Function to trigger mass send email modal by row\n\t\t */\n\t\ttriggerSendEmailByRow: function (row) {\n\t\t\tif (!(row instanceof jQuery)) {\n\t\t\t\trow = $(row);\n\t\t\t}\n\t\t\tlet params = Vtiger_RelatedList_Js.relatedListInstance.getDefaultParams();\n\t\t\tVtiger_List_Js.triggerSendEmail(\n\t\t\t\t$.extend(params, {\n\t\t\t\t\trelatedLoad: true,\n\t\t\t\t\tmodule: Vtiger_RelatedList_Js.relatedListInstance.moduleName,\n\t\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\t\tsourceRecord: app.getRecordId(),\n\t\t\t\t\tselected_ids: '[\"' + $(row).closest('.js-list__row').data('id') + '\"]'\n\t\t\t\t}),\n\t\t\t\tfunction () {\n\t\t\t\t\tVtiger_Detail_Js.reloadRelatedList();\n\t\t\t\t},\n\t\t\t\trow\n\t\t\t);\n\t\t}\n\t},\n\t{\n\t\tselectedRelatedTabElement: false,\n\t\tparentRecordId: false,\n\t\tparentModuleName: false,\n\t\tmoduleName: false,\n\t\trelatedTabsContainer: false,\n\t\tcontent: false,\n\t\tlistSearchInstance: false,\n\t\tdetailViewContentHolder: false,\n\t\trelatedView: false,\n\t\tframeProgress: false,\n\t\tnoEventsListSearch: false,\n\t\tlistViewContainer: false,\n\t\tdefaultParams: {},\n\t\tsetSelectedTabElement: function (tabElement) {\n\t\t\tthis.selectedRelatedTabElement = tabElement;\n\t\t},\n\t\tgetSelectedTabElement: function () {\n\t\t\treturn this.selectedRelatedTabElement;\n\t\t},\n\t\tgetParentId: function () {\n\t\t\treturn this.parentRecordId;\n\t\t},\n\t\tgetRelatedContainer: function () {\n\t\t\treturn this.content;\n\t\t},\n\t\tsetRelatedContainer: function (container) {\n\t\t\tthis.content = container;\n\t\t\tthis.relatedView = container.find('input.relatedView').val();\n\t\t},\n\t\tgetContentHolder: function () {\n\t\t\tif (this.detailViewContentHolder == false) {\n\t\t\t\tthis.detailViewContentHolder = $('div.details div.contents');\n\t\t\t}\n\t\t\treturn this.detailViewContentHolder;\n\t\t},\n\t\tgetCurrentPageNum: function () {\n\t\t\treturn $('input[name=\"currentPageNum\"]', this.content).val();\n\t\t},\n\t\tsetCurrentPageNumber: function (pageNumber) {\n\t\t\t$('input[name=\"currentPageNum\"]', this.content).val(pageNumber);\n\t\t},\n\t\tgetOrderBy: function () {\n\t\t\treturn $('#orderBy', this.content).val();\n\t\t},\n\t\tgetDefaultParams: function () {\n\t\t\tlet container = this.getRelatedContainer();\n\t\t\tlet params = Object.assign({}, this.defaultParams);\n\t\t\tparams['page'] = this.getCurrentPageNum();\n\t\t\tparams['orderby'] = this.getOrderBy();\n\t\t\tif (container.find('#relationId').val()) {\n\t\t\t\tparams['relationId'] = container.find('#relationId').val();\n\t\t\t}\n\t\t\tif (container.find('.js-relation-cv-id').val()) {\n\t\t\t\tparams['cvId'] = container.find('.js-relation-cv-id').val();\n\t\t\t}\n\t\t\tif (container.find('.pagination').length) {\n\t\t\t\tparams['totalCount'] = container.find('.pagination').data('totalCount');\n\t\t\t}\n\t\t\tif (container.find('.entityState').length) {\n\t\t\t\tparams['entityState'] = container.find('.entityState').val();\n\t\t\t}\n\t\t\tif (this.listSearchInstance) {\n\t\t\t\tparams.search_params = this.listSearchInstance.getListSearchParams();\n\t\t\t\tlet searchValue = this.listSearchInstance.getAlphabetSearchValue();\n\t\t\t\tif (typeof searchValue !== 'undefined' && searchValue.length > 0) {\n\t\t\t\t\tparams['search_key'] = this.listSearchInstance.getAlphabetSearchField();\n\t\t\t\t\tparams['search_value'] = searchValue;\n\t\t\t\t\tparams['operator'] = 's';\n\t\t\t\t}\n\t\t\t\tthis.listSearchInstance.parseConditions(params);\n\t\t\t\tparams.search_params = JSON.stringify(params.search_params);\n\t\t\t}\n\t\t\tif (this.moduleName == 'Calendar') {\n\t\t\t\tlet switchBtn = container.find('.js-switch--calendar');\n\t\t\t\tif (switchBtn.length) {\n\t\t\t\t\tparams.time = switchBtn.first().prop('checked') ? 'current' : 'history';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\t\tgetCompleteParams: function () {\n\t\t\tlet container = this.getRelatedContainer();\n\t\t\tlet params = {\n\t\t\t\tview: 'Detail',\n\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\trecord: this.getParentId(),\n\t\t\t\trelatedModule: this.moduleName,\n\t\t\t\trelatedView: this.relatedView,\n\t\t\t\tmode: 'showRelatedList',\n\t\t\t\ttab_label: container.find('#tab_label').val()\n\t\t\t};\n\t\t\treturn $.extend(this.getDefaultParams(), params);\n\t\t},\n\t\tgetSelectedParams: function () {\n\t\t\treturn $.extend(this.getCompleteParams(), {\n\t\t\t\tselected_ids: this.readSelectedIds(true),\n\t\t\t\texcluded_ids: this.readExcludedIds(true),\n\t\t\t\tcvid: this.getCurrentCvId()\n\t\t\t});\n\t\t},\n\t\tparseUrlParams: function (url) {\n\t\t\tif (url) {\n\t\t\t\tthis.defaultParams = app.convertUrlToObject(url);\n\t\t\t} else {\n\t\t\t\tthis.defaultParams = {};\n\t\t\t}\n\t\t},\n\t\tloadRelatedList: function (params) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet thisInstance = this;\n\t\t\tif (typeof thisInstance.moduleName === 'undefined' || thisInstance.moduleName.length <= 0) {\n\t\t\t\tlet currentInstance = Vtiger_Detail_Js.getInstance();\n\t\t\t\tcurrentInstance.loadWidgets();\n\t\t\t\treturn aDeferred.promise();\n\t\t\t}\n\t\t\tlet progressInstance = jQuery.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet completeParams = this.getCompleteParams();\n\t\t\tlet activeTabsReference = thisInstance.relatedTabsContainer.find('li.active').data('reference');\n\t\t\tAppConnector.request($.extend(completeParams, params))\n\t\t\t\t.done(function (responseData) {\n\t\t\t\t\tlet currentInstance = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\tcurrentInstance.loadWidgets();\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (activeTabsReference !== 'ProductsAndServices') {\n\t\t\t\t\t\tthisInstance.relatedTabsContainer.find('li').removeClass('active');\n\t\t\t\t\t\tthisInstance.selectedRelatedTabElement.addClass('active');\n\t\t\t\t\t\tthisInstance.content.html(responseData);\n\t\t\t\t\t\t$('.pageNumbers', thisInstance.content).tooltip();\n\t\t\t\t\t\tthisInstance.registerPostLoadEvents();\n\t\t\t\t\t\tthisInstance.registerListEvents();\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(responseData);\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_NOT_ALLOWED_VALUE'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tshowSelectRelation: function (extendParams) {\n\t\t\tlet params = $.extend(this.getRecordsListParams(), extendParams);\n\t\t\tapp.showRecordsList(params, (modal, instance) => {\n\t\t\t\tinstance.setSelectEvent((responseData) => {\n\t\t\t\t\tthis.addRelations(Object.keys(responseData)).done(() => {\n\t\t\t\t\t\tapp.event.trigger('RelatedListView.AfterSelectRelation', responseData, this, instance, params);\n\t\t\t\t\t\tlet detail = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\t\tthis.loadRelatedList().done(function () {\n\t\t\t\t\t\t\tdetail.registerRelatedModulesRecordCount();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (this.getSelectedTabElement().data('link-key') === 'LBL_RECORD_SUMMARY') {\n\t\t\t\t\t\t\tdetail.loadWidgets();\n\t\t\t\t\t\t\tdetail.registerRelatedModulesRecordCount();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tgetRecordsListParams: function () {\n\t\t\treturn {\n\t\t\t\tmodule: this.moduleName,\n\t\t\t\tsrc_module: this.parentModuleName,\n\t\t\t\tsrc_record: this.parentRecordId,\n\t\t\t\tmulti_select: true\n\t\t\t};\n\t\t},\n\t\taddRelations: function (idList, params = {}) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tAppConnector.request(\n\t\t\t\t$.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\t\tmode: 'addRelation',\n\t\t\t\t\t\trelated_module: this.moduleName,\n\t\t\t\t\t\tsrc_record: this.parentRecordId,\n\t\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\t\trelated_record_list: $.isArray(idList) ? JSON.stringify(idList) : idList\n\t\t\t\t\t},\n\t\t\t\t\tparams\n\t\t\t\t)\n\t\t\t)\n\t\t\t\t.done(function (responseData) {\n\t\t\t\t\taDeferred.resolve(responseData);\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tdeleteRelation(target) {\n\t\t\tlet params = {};\n\t\t\tif (target.data('url')) {\n\t\t\t\tparams = target.data('url');\n\t\t\t} else {\n\t\t\t\tlet id = target.data('id') ? target.data('id') : target.closest('tr').data('id');\n\t\t\t\tparams = {\n\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\tmode: 'deleteRelation',\n\t\t\t\t\trelated_module: this.moduleName,\n\t\t\t\t\tsrc_record: this.parentRecordId,\n\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\trelated_record_list: JSON.stringify([id])\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet progressInstance = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: { enabled: true }\n\t\t\t});\n\t\t\tAppConnector.request(params)\n\t\t\t\t.done((response) => {\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (response.result) {\n\t\t\t\t\t\tlet widget = target.closest('.widgetContentBlock');\n\t\t\t\t\t\tconst detail = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\t\tif (widget.length) {\n\t\t\t\t\t\t\tdetail.loadWidget(widget);\n\t\t\t\t\t\t\tlet updatesWidget = this.getContentHolder().find('[data-type=\"Updates\"]');\n\t\t\t\t\t\t\tif (updatesWidget.length > 0) {\n\t\t\t\t\t\t\t\tdetail.loadWidget(updatesWidget);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.loadRelatedList();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdetail.registerRelatedModulesRecordCount();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_CANNOT_REMOVE_RELATION'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(function (err, errThrow) {\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_CANNOT_REMOVE_RELATION'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to handle next page navigation\n\t\t */\n\t\tnextPageHandler: function () {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet thisInstance = this;\n\t\t\tlet pageLimit = jQuery('#pageLimit', this.content).val();\n\t\t\tlet noOfEntries = jQuery('#noOfEntries', this.content).val();\n\t\t\tif (noOfEntries == pageLimit) {\n\t\t\t\tlet pageNumber = this.getCurrentPageNum();\n\t\t\t\tlet nextPage = parseInt(pageNumber) + 1;\n\t\t\t\tthis.loadRelatedList({\n\t\t\t\t\tpage: nextPage\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tthisInstance.setCurrentPageNumber(nextPage);\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to handle next page navigation\n\t\t */\n\t\tpreviousPageHandler: function () {\n\t\t\tconst thisInstance = this,\n\t\t\t\taDeferred = jQuery.Deferred();\n\t\t\tlet pageNumber = this.getCurrentPageNum();\n\t\t\tif (pageNumber > 1) {\n\t\t\t\tlet previousPage = parseInt(pageNumber) - 1;\n\t\t\t\tthis.loadRelatedList({\n\t\t\t\t\tpage: previousPage\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tthisInstance.setCurrentPageNumber(previousPage);\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to handle select page jump in related list\n\t\t */\n\t\tselectPageHandler: function (pageNumber) {\n\t\t\tconst thisInstance = this,\n\t\t\t\taDeferred = jQuery.Deferred();\n\t\t\tthis.loadRelatedList({\n\t\t\t\tpage: pageNumber\n\t\t\t})\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tthisInstance.setCurrentPageNumber(pageNumber);\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to handle page jump in related list\n\t\t */\n\t\tpageJumpHandler: function (e) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet thisInstance = this;\n\t\t\tif (e.which == 13) {\n\t\t\t\tlet element = jQuery(e.currentTarget);\n\t\t\t\tlet response = Vtiger_WholeNumberGreaterThanZero_Validator_Js.invokeValidation(element);\n\t\t\t\tif (typeof response !== 'undefined') {\n\t\t\t\t\telement.validationEngine('showPrompt', response, '', 'topLeft', true);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\telement.validationEngine('hideAll');\n\t\t\t\t\tlet jumpToPage = parseInt(element.val());\n\t\t\t\t\tlet totalPages = parseInt(jQuery('#totalPageCount', thisInstance.content).text());\n\t\t\t\t\tif (jumpToPage > totalPages) {\n\t\t\t\t\t\tlet error = app.vtranslate('JS_PAGE_NOT_EXIST');\n\t\t\t\t\t\telement.validationEngine('showPrompt', error, '', 'topLeft', true);\n\t\t\t\t\t}\n\t\t\t\t\tlet invalidFields = element.parent().find('.formError');\n\t\t\t\t\tif (invalidFields.length < 1) {\n\t\t\t\t\t\tlet currentPage = jQuery('input[name=\"currentPageNum\"]', thisInstance.content).val();\n\t\t\t\t\t\tif (jumpToPage == currentPage) {\n\t\t\t\t\t\t\tlet message = app.vtranslate('JS_YOU_ARE_IN_PAGE_NUMBER') + ' ' + jumpToPage;\n\t\t\t\t\t\t\tlet params = {\n\t\t\t\t\t\t\t\ttext: message,\n\t\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(params);\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.loadRelatedList({\n\t\t\t\t\t\t\tpage: jumpToPage\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\tthisInstance.setCurrentPageNumber(jumpToPage);\n\t\t\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to add related record for the module\n\t\t */\n\t\taddRelatedRecord: function (element, callback) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet referenceModuleName = this.moduleName;\n\t\t\tlet parentId = this.getParentId();\n\t\t\tlet parentModule = this.parentModuleName;\n\t\t\tlet quickCreateParams = {};\n\t\t\tlet relatedParams = {};\n\t\t\tlet relatedField = element.data('name');\n\t\t\tlet fullFormUrl = element.data('url');\n\t\t\tif (relatedField) {\n\t\t\t\trelatedParams[relatedField] = parentId;\n\t\t\t}\n\t\t\tlet eliminatedKeys = new Array('view', 'module', 'mode', 'action');\n\t\t\tlet preQuickCreateSave = function (data) {\n\t\t\t\tlet index, queryParam, queryParamComponents;\n\t\t\t\tlet queryParameters = [];\n\n\t\t\t\t//To handle switch to task tab when click on add task from related list of activities\n\t\t\t\t//As this is leading to events tab intially even clicked on add task\n\t\t\t\tif (typeof fullFormUrl !== 'undefined' && fullFormUrl.indexOf('?') !== -1) {\n\t\t\t\t\tlet urlSplit = fullFormUrl.split('?');\n\t\t\t\t\tlet queryString = urlSplit[1];\n\t\t\t\t\tqueryParameters = queryString.split('&');\n\t\t\t\t\tfor (index = 0; index < queryParameters.length; index++) {\n\t\t\t\t\t\tqueryParam = queryParameters[index];\n\t\t\t\t\t\tqueryParamComponents = queryParam.split('=');\n\t\t\t\t\t\tif (queryParamComponents[0] == 'mode' && queryParamComponents[1] == 'Calendar') {\n\t\t\t\t\t\t\tdata.find('a[data-tab-name=\"Task\"]').trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjQuery('<input type=\"hidden\" name=\"sourceModule\" value=\"' + parentModule + '\" />').appendTo(data);\n\t\t\t\tjQuery('<input type=\"hidden\" name=\"sourceRecord\" value=\"' + parentId + '\" />').appendTo(data);\n\t\t\t\tjQuery('<input type=\"hidden\" name=\"relationOperation\" value=\"true\" />').appendTo(data);\n\n\t\t\t\tif (typeof relatedField !== 'undefined') {\n\t\t\t\t\tlet field = data.find('[name=\"' + relatedField + '\"]');\n\t\t\t\t\t//If their is no element with the relatedField name,we are adding hidden element with\n\t\t\t\t\t//name as relatedField name,for saving of record with relation to parent record\n\t\t\t\t\tif (field.length == 0) {\n\t\t\t\t\t\tjQuery('<input type=\"hidden\" name=\"' + relatedField + '\" value=\"' + parentId + '\" />').appendTo(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (index = 0; index < queryParameters.length; index++) {\n\t\t\t\t\tqueryParam = queryParameters[index];\n\t\t\t\t\tqueryParamComponents = queryParam.split('=');\n\t\t\t\t\tif (\n\t\t\t\t\t\tjQuery.inArray(queryParamComponents[0], eliminatedKeys) == '-1' &&\n\t\t\t\t\t\tdata.find('[name=\"' + queryParamComponents[0] + '\"]').length == 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tjQuery(\n\t\t\t\t\t\t\t'<input type=\"hidden\" name=\"' + queryParamComponents[0] + '\" value=\"' + queryParamComponents[1] + '\" />'\n\t\t\t\t\t\t).appendTo(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof callback !== 'undefined') {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\t//If url contains params then seperate them and make them as relatedParams\n\t\t\tif (typeof fullFormUrl !== 'undefined' && fullFormUrl.indexOf('?') !== -1) {\n\t\t\t\tlet urlSplit = fullFormUrl.split('?');\n\t\t\t\tlet queryString = urlSplit[1];\n\t\t\t\tlet queryParameters = queryString.split('&');\n\t\t\t\tfor (let index = 0; index < queryParameters.length; index++) {\n\t\t\t\t\tlet queryParam = queryParameters[index];\n\t\t\t\t\tlet queryParamComponents = queryParam.split('=');\n\t\t\t\t\tif (jQuery.inArray(queryParamComponents[0], eliminatedKeys) == '-1') {\n\t\t\t\t\t\trelatedParams[queryParamComponents[0]] = queryParamComponents[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tquickCreateParams['data'] = relatedParams;\n\t\t\tquickCreateParams['callbackFunction'] = function (data) {\n\t\t\t\taDeferred.resolve(data);\n\t\t\t};\n\t\t\tquickCreateParams['callbackPostShown'] = preQuickCreateSave;\n\t\t\tquickCreateParams['noCache'] = true;\n\t\t\tApp.Components.QuickCreate.createRecord(referenceModuleName, quickCreateParams);\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tgetRelatedPageCount: function () {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet element = this.content.find('#totalPageCount');\n\t\t\tlet totalCountElem = this.content.find('#totalCount');\n\t\t\tlet totalPageNumber = element.text();\n\t\t\tif (totalPageNumber == '') {\n\t\t\t\telement.progressIndicator({});\n\t\t\t\tAppConnector.request({\n\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\tmode: 'getRelatedListPageCount',\n\t\t\t\t\trecord: this.getParentId(),\n\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\trelatedModule: this.moduleName\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tlet pageCount = data['result']['page'];\n\t\t\t\t\t\tlet numberOfRecords = data['result']['numberOfRecords'];\n\t\t\t\t\t\ttotalCountElem.val(numberOfRecords);\n\t\t\t\t\t\telement.text(pageCount);\n\t\t\t\t\t\telement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\taDeferred.resolve();\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\taDeferred.reject(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taDeferred.resolve();\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tfavoritesRelation: function (relcrmId, state) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tif (relcrmId) {\n\t\t\t\tAppConnector.request({\n\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\tmode: 'updateFavoriteForRecord',\n\t\t\t\t\trecord: this.getParentId(),\n\t\t\t\t\trelcrmid: relcrmId,\n\t\t\t\t\trelatedModule: this.moduleName,\n\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\tactionMode: state ? 'delete' : 'add'\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tif (data.result) aDeferred.resolve(true);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\taDeferred.reject(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taDeferred.reject(false);\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tupdatePreview: function (url) {\n\t\t\tlet frame = this.content.find('.listPreviewframe');\n\t\t\tthis.frameProgress = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tmessage: app.vtranslate('JS_FRAME_IN_PROGRESS'),\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet defaultView = '';\n\t\t\tif (app.getMainParams('defaultDetailViewName')) {\n\t\t\t\tdefaultView =\n\t\t\t\t\tdefaultView + '&mode=showDetailViewByMode&requestMode=' + app.getMainParams('defaultDetailViewName'); // full, summary\n\t\t\t}\n\t\t\tframe.attr('src', url.replace('view=Detail', 'view=DetailPreview') + defaultView);\n\t\t},\n\t\tregisterUnreviewedCountEvent: function () {\n\t\t\tlet ids = [];\n\t\t\tlet relatedContent = this.content;\n\t\t\tlet isUnreviewedActive = relatedContent.find('.unreviewed').length;\n\t\t\trelatedContent.find('tr.listViewEntries').each(function () {\n\t\t\t\tlet id = jQuery(this).data('id');\n\t\t\t\tif (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!ids || isUnreviewedActive < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\taction: 'ChangesReviewedOn',\n\t\t\t\tmode: 'getUnreviewed',\n\t\t\t\tmodule: 'ModTracker',\n\t\t\t\tsourceModule: this.moduleName,\n\t\t\t\trecordsId: ids\n\t\t\t}).done(function (appData) {\n\t\t\t\tlet data = appData.result;\n\t\t\t\t$.each(data, function (id, value) {\n\t\t\t\t\tif (value.a > 0) {\n\t\t\t\t\t\trelatedContent\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.all')\n\t\t\t\t\t\t\t.text(value.a)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t\tif (value.m > 0) {\n\t\t\t\t\t\trelatedContent\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.mail')\n\t\t\t\t\t\t\t.text(value.m)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterChangeEntityStateEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet relatedContent = this.content;\n\t\t\trelatedContent.on('click', '.dropdownEntityState a', function (e) {\n\t\t\t\tlet element = $(this);\n\t\t\t\trelatedContent.find('.entityState').val(element.data('value'));\n\t\t\t\trelatedContent.find('.pagination').data('totalCount', 0);\n\t\t\t\trelatedContent\n\t\t\t\t\t.find('.dropdownEntityState button')\n\t\t\t\t\t.find('span')\n\t\t\t\t\t.attr('class', element.find('span').attr('class'));\n\t\t\t\tthisInstance.loadRelatedList({ page: 1 });\n\t\t\t});\n\t\t},\n\t\tregisterRowsEvent: function () {\n\t\t\tconst self = this;\n\t\t\tif (this.relatedView === 'List' || this.relatedView === 'Detail') {\n\t\t\t\tthis.content.find('.listViewEntries').on('click', function (e) {\n\t\t\t\t\tif ($(e.target).hasClass('js-no-link')) return;\n\t\t\t\t\tif ($(e.target).closest('div').hasClass('actions')) return;\n\t\t\t\t\tif ($(e.target).is('button') || $(e.target).parent().is('button') || $(e.target).is('a')) return;\n\t\t\t\t\tif ($(e.target).closest('a').hasClass('noLinkBtn')) return;\n\t\t\t\t\tif ($(e.target, $(e.currentTarget)).is('td:first-child')) return;\n\t\t\t\t\tif ($(e.target).is('input')) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:last-child').get(0), e.target)) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:first-child').get(0), e.target)) return;\n\t\t\t\t\tlet recordUrl = $(e.target).closest('tr').data('recordurl');\n\t\t\t\t\tif (!recordUrl) return;\n\t\t\t\t\tif (app.getViewName() === 'DetailPreview') {\n\t\t\t\t\t\ttop.document.location.href = recordUrl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdocument.location.href = recordUrl;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.content.find('.js-toggle-hidden-row').on('click', function (e) {\n\t\t\t\t\tlet target = $(this);\n\t\t\t\t\tlet row = target.closest('tr');\n\t\t\t\t\tlet inventoryRow = row.next('.js-hidden-row');\n\t\t\t\t\tif (inventoryRow.length) {\n\t\t\t\t\t\tlet block = inventoryRow.find('.js-hidden-row__block[data-element=\"' + target.data('element') + '\"]');\n\t\t\t\t\t\tif (block.is(':visible') || !inventoryRow.is(':visible')) {\n\t\t\t\t\t\t\tinventoryRow.toggleClass('d-none');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinventoryRow.find('.js-hidden-row__block').addClass('d-none');\n\t\t\t\t\t\tblock.removeClass('d-none');\n\t\t\t\t\t\tif (block.is(':visible')) {\n\t\t\t\t\t\t\tself.registerWidgets(block);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (this.relatedView === 'ListPreview') {\n\t\t\t\tthis.content.find('.listViewEntries').on('click', function (e) {\n\t\t\t\t\tlet target = $(e.target);\n\t\t\t\t\tif (target.closest('div').hasClass('actions')) return;\n\t\t\t\t\tif (target.is('button') || target.parent().is('button')) return;\n\t\t\t\t\tif (target.closest('a').hasClass('noLinkBtn')) return;\n\t\t\t\t\tif ($(e.target, $(e.currentTarget)).is('td:first-child')) return;\n\t\t\t\t\tif (target.is('input[type=\"checkbox\"]')) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:last-child').get(0), target[0])) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:first-child').get(0), target[0])) return;\n\t\t\t\t\tlet recordUrl = $(this).data('recordurl');\n\t\t\t\t\tself.content.find('.listViewEntriesTable .listViewEntries').removeClass('active');\n\t\t\t\t\t$(this).addClass('active');\n\t\t\t\t\tself.updatePreview(recordUrl);\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet widgetsContainer = this.content.find('.js-hidden-row .js-hidden-row__block[data-element=\"widgets\"]');\n\t\t\tif (widgetsContainer.length) {\n\t\t\t\tself.registerWidgets(widgetsContainer);\n\t\t\t}\n\t\t},\n\t\tregisterWidgets: function (content) {\n\t\t\tlet widgetList = $('[class^=\"widgetContainer_\"]', content);\n\t\t\tlet detailInstance = Vtiger_Detail_Js.getInstance();\n\t\t\twidgetList.each(function (index, widget) {\n\t\t\t\twidget = $(widget);\n\t\t\t\tif (widget.is(':visible')) {\n\t\t\t\t\tdetailInstance.loadWidget(widget);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterSummationEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tthis.content.on('click', '.listViewSummation button', function () {\n\t\t\t\tlet button = $(this);\n\t\t\t\tlet calculateValue = button.closest('td').find('.calculateValue');\n\t\t\t\tlet params = thisInstance.getCompleteParams();\n\t\t\t\tparams['action'] = 'RelationAjax';\n\t\t\t\tparams['mode'] = 'calculate';\n\t\t\t\tparams['fieldName'] = button.data('field');\n\t\t\t\tparams['calculateType'] = button.data('operator');\n\t\t\t\tdelete params['view'];\n\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\tmessage: app.vtranslate('JS_CALCULATING_IN_PROGRESS'),\n\t\t\t\t\tposition: 'html',\n\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tapp.hidePopover(button);\n\t\t\t\tAppConnector.request(params).done(function (response) {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\tcalculateValue.html(response.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcalculateValue.html('');\n\t\t\t\t\t}\n\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t});\n\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t});\n\t\t},\n\t\tregisterPreviewEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet contentHeight = this.content.find('.js-detail-preview,.js-list-preview');\n\t\t\tcontentHeight.height(app.getScreenHeight() - (this.content.offset().top + $('.js-footer').height()));\n\t\t\tthis.content.find('.listPreviewframe').on('load', function () {\n\t\t\t\tif (thisInstance.frameProgress) {\n\t\t\t\t\tthisInstance.frameProgress.progressIndicator({ mode: 'hide' });\n\t\t\t\t}\n\t\t\t\tcontentHeight.height($(this).contents().find('.bodyContents').height() + 2);\n\t\t\t});\n\t\t\tthis.content.find('.listViewEntriesTable .listViewEntries').first().trigger('click');\n\t\t},\n\t\tregisterPaginationEvents: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet relatedContent = this.content;\n\t\t\tthis.content.on('click', '#relatedViewNextPageButton', function (e) {\n\t\t\t\tif ($(this).hasClass('disabled')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthisInstance.nextPageHandler();\n\t\t\t});\n\t\t\tthis.content.on('click', '#relatedViewPreviousPageButton', function () {\n\t\t\t\tthisInstance.previousPageHandler();\n\t\t\t});\n\t\t\tthis.content.on('click', '#relatedListPageJump', function (e) {\n\t\t\t\tthisInstance.getRelatedPageCount();\n\t\t\t});\n\t\t\tthis.content\n\t\t\t\t.on('click', '#relatedListPageJumpDropDown > li', function (e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t})\n\t\t\t\t.on('keypress', '#pageToJump', function (e) {\n\t\t\t\t\tthisInstance.pageJumpHandler(e);\n\t\t\t\t});\n\t\t\tthis.content.on('click', '.pageNumber', function () {\n\t\t\t\tif ($(this).hasClass('disabled')) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthisInstance.selectPageHandler($(this).data('id'));\n\t\t\t});\n\t\t\tthis.content.on('click', '#totalCountBtn', function () {\n\t\t\t\tapp.hidePopover($(this));\n\t\t\t\tlet params = {\n\t\t\t\t\tmodule: thisInstance.parentModuleName,\n\t\t\t\t\tview: 'Pagination',\n\t\t\t\t\tmode: 'getRelationPagination',\n\t\t\t\t\trecord: thisInstance.getParentId(),\n\t\t\t\t\trelatedModule: thisInstance.moduleName,\n\t\t\t\t\tnoOfEntries: $('#noOfEntries', relatedContent).val(),\n\t\t\t\t\tpage: relatedContent.find('[name=\"currentPageNum\"]').val()\n\t\t\t\t};\n\t\t\t\tif (relatedContent.find('.entityState').length) {\n\t\t\t\t\tparams['entityState'] = relatedContent.find('.entityState').val();\n\t\t\t\t}\n\t\t\t\tAppConnector.request(params).done(function (response) {\n\t\t\t\t\trelatedContent.find('.paginationDiv').html(response);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterListEvents: function () {\n\t\t\tlet relatedContent = this.content;\n\t\t\tlet thisInstance = this;\n\t\t\tthis.content.find('a.favorites').on('click', function (e) {\n\t\t\t\tlet progressInstance = jQuery.progressIndicator({\n\t\t\t\t\tposition: 'html',\n\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet element = $(this);\n\t\t\t\tlet row = element.closest('tr');\n\t\t\t\tthisInstance.favoritesRelation(row.data('id'), element.data('state')).done(function (response) {\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tlet state = element.data('state') ? 0 : 1;\n\t\t\t\t\t\telement.data('state', state);\n\t\t\t\t\t\tif (state) {\n\t\t\t\t\t\t\telement.find('.far').addClass('d-none');\n\t\t\t\t\t\t\telement.find('.fas').removeClass('d-none');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement.find('.fas').addClass('d-none');\n\t\t\t\t\t\t\telement.find('.far').removeClass('d-none');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\tlet text = app.vtranslate('JS_REMOVED_FROM_FAVORITES');\n\t\t\t\t\t\tif (state) {\n\t\t\t\t\t\t\ttext = app.vtranslate('JS_ADDED_TO_FAVORITES');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tapp.showNotify({ text: text, type: 'success' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.content.find('[name=\"addButton\"]').on('click', function (e) {\n\t\t\t\tconst element = $(this);\n\t\t\t\tif (element.hasClass('quickCreateSupported') !== true) {\n\t\t\t\t\tapp.openUrl(element.data('url'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthisInstance.addRelatedRecord(element);\n\t\t\t});\n\t\t\tthis.content.find('.relatedHeader button.selectRelation').on('click', function (e) {\n\t\t\t\tlet restrictionsField = $(this).data('rf');\n\t\t\t\tlet params = {\n\t\t\t\t\trelationId: thisInstance.getCompleteParams()['relationId']\n\t\t\t\t};\n\t\t\t\tif (restrictionsField && Object.keys(restrictionsField).length > 0) {\n\t\t\t\t\tparams = {\n\t\t\t\t\t\tsearch_key: restrictionsField.key,\n\t\t\t\t\t\tsearch_value: restrictionsField.name,\n\t\t\t\t\t\trelationId: thisInstance.getCompleteParams()['relationId']\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tthisInstance.showSelectRelation(params);\n\t\t\t});\n\t\t\tthis.content.find('button.relationDelete').on('click', function (e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tlet target = $(e.currentTarget);\n\t\t\t\tlet params = {};\n\t\t\t\tif (target.data('confirm')) {\n\t\t\t\t\tparams.message = target.data('confirm');\n\t\t\t\t\tparams.title = target.html() + ' ' + target.data('content');\n\t\t\t\t} else if (target.data('content')) {\n\t\t\t\t\tparams.message = target.data('content');\n\t\t\t\t} else {\n\t\t\t\t\tparams.message = app.vtranslate('JS_DELETE_CONFIRMATION');\n\t\t\t\t}\n\t\t\t\tVtiger_Helper_Js.showConfirmationBox(params).done(function () {\n\t\t\t\t\tthisInstance.deleteRelation(target);\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.content.find('.js-switch--calendar,select.js-relation-cv-id').on('change', function (e) {\n\t\t\t\tthisInstance.loadRelatedList();\n\t\t\t});\n\t\t},\n\t\tregisterPostLoadEvents: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tthis.registerRowsEvent();\n\t\t\tthis.registerListScroll();\n\t\t\tif (this.relatedView === 'ListPreview') {\n\t\t\t\tthis.registerPreviewEvent();\n\t\t\t\tif (!this.content.find('.gutter').length) {\n\t\t\t\t\tif (!this.content.find('.js-list-preview').length) return;\n\t\t\t\t\tthis.setDomParams(this.content);\n\t\t\t\t\tthis.toggleSplit(this.content);\n\t\t\t\t\tthis.registerListPreviewEvents();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.content.find('.listViewSearchTd [data-trigger=\"listSearch\"]').length) {\n\t\t\t\tthis.listSearchInstance = YetiForce_ListSearch_Js.getInstance(this.content, false, this);\n\t\t\t} else {\n\t\t\t\tthis.listSearchInstance = false;\n\t\t\t}\n\t\t\tapp.event.trigger('RelatedList.AfterLoad', thisInstance);\n\t\t},\n\t\tgetListColumnWidth: function () {\n\t\t\tlet width = 300;\n\t\t\tlet column = this.container.find('.listViewEntriesDiv .listViewHeaders th:eq(1)');\n\t\t\tif (column.length) {\n\t\t\t\twidth = column.offset().left + column.width();\n\t\t\t}\n\t\t\treturn width;\n\t\t},\n\t\tsetDomParams: function (container) {\n\t\t\tthis.container = container;\n\t\t\tthis.listColumnWidth = this.getListColumnWidth();\n\t\t\tthis.windowW = $(window).width();\n\t\t\tthis.mainBody = container.closest('.mainBody');\n\t\t\tthis.windowMinWidth = (15 / this.windowW) * 100;\n\t\t\tthis.windowMaxWidth = 100 - this.minWidth;\n\t\t\tthis.sideBlocks = container.find('.js-side-block');\n\t\t\tthis.sideBlockLeft = this.sideBlocks.first();\n\t\t\tthis.sideBlockRight = this.sideBlocks.last();\n\t\t\tthis.list = container.find('.js-list-preview');\n\t\t\tthis.preview = container.find('.js-detail-preview');\n\t\t\tthis.rotatedText = container.find('.u-rotate-90');\n\t\t\tthis.footerH = $('.js-footer').outerHeight();\n\t\t\tthis.headerH = $('.js-header').outerHeight();\n\t\t},\n\t\tgetDefaultSplitSizes: function () {\n\t\t\tlet thWidth = (this.listColumnWidth / this.windowW) * 100;\n\t\t\treturn [thWidth, 100 - thWidth];\n\t\t},\n\t\tgetSplitSizes() {\n\t\t\tconst cachedParams = app.moduleCacheGet('userRelatedSplitSet');\n\t\t\tif (cachedParams !== undefined) {\n\t\t\t\treturn cachedParams;\n\t\t\t} else {\n\t\t\t\treturn this.getDefaultSplitSizes();\n\t\t\t}\n\t\t},\n\t\tregisterListPreviewEvents() {\n\t\t\tapp.showNewScrollbarTopBottom(this.content.find('.js-list-preview--scroll'));\n\t\t\tapp.showNewScrollbarLeft(this.list);\n\t\t\tthis.list.on('click', '.listViewEntries', () => {\n\t\t\t\tif (this.split.getSizes()[1] < 10) {\n\t\t\t\t\tconst defaultGutterPosition = this.getDefaultSplitSizes();\n\t\t\t\t\tthis.split.setSizes(defaultGutterPosition);\n\t\t\t\t\tthis.preview.show();\n\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', defaultGutterPosition);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!this.list.parents('.blockContent').length) {\n\t\t\t\tthis.registerScrollEvent();\n\t\t\t}\n\t\t},\n\t\tregisterScrollEvent() {\n\t\t\tthis.gutter.addClass('js-fixed-scroll');\n\t\t\tlet scrollContainer = App.Components.Scrollbar.page.element;\n\t\t\tlet listOffsetTop = this.list.offset().top - this.headerH;\n\t\t\tlet initialH = this.sideBlocks.height();\n\t\t\tlet mainViewPortHeightCss = { height: this.mainBody.height() };\n\t\t\tlet mainViewPortWidthCss = { width: this.mainBody.height() };\n\t\t\tlet fixedElements = this.mainBody.find('.js-fixed-scroll');\n\t\t\tif (!this.mainBody.length) {\n\t\t\t\tthis.mainBody = $(top.document).find('.mainBody');\n\t\t\t\tthis.headerH = $(top.document).find('.js-header').outerHeight();\n\t\t\t\tscrollContainer = top.window.App.Components.Scrollbar.page.element;\n\t\t\t\tlet iframe = $(top.document).find('.js-detail-preview');\n\t\t\t\tlistOffsetTop = this.list.offset().top + iframe.offset().top - this.headerH + 1;\n\t\t\t\tmainViewPortHeightCss = { height: this.mainBody.height() };\n\t\t\t\tmainViewPortWidthCss = { width: this.mainBody.height() };\n\t\t\t}\n\t\t\tconst onScroll = () => {\n\t\t\t\tif (scrollContainer.scrollTop() >= listOffsetTop) {\n\t\t\t\t\tfixedElements.css({ top: scrollContainer.scrollTop() - listOffsetTop });\n\t\t\t\t\tthis.sideBlocks.css({ top: scrollContainer.scrollTop() - listOffsetTop + 56 });\n\t\t\t\t\tfixedElements.css(mainViewPortHeightCss);\n\t\t\t\t\tthis.rotatedText.css(mainViewPortHeightCss);\n\t\t\t\t\tthis.rotatedText.css(mainViewPortWidthCss);\n\t\t\t\t} else {\n\t\t\t\t\tfixedElements.css({ top: 'initial' });\n\t\t\t\t\tfixedElements.css({ height: initialH + scrollContainer.scrollTop() });\n\t\t\t\t\tthis.rotatedText.css({\n\t\t\t\t\t\twidth: initialH + scrollContainer.scrollTop(),\n\t\t\t\t\t\theight: initialH + scrollContainer.scrollTop()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tscrollContainer.on('scroll', onScroll);\n\t\t},\n\t\t/**\n\t\t * Registers split's events.\n\t\t * @param {jQuery} container - current container for reference.\n\t\t * @param {Split} split - a split object.\n\t\t */\n\t\tregisterSplitEvents: function (container, split) {\n\t\t\tlet rightSplitMaxWidth = (400 / this.windowW) * 100;\n\t\t\tlet minWindowWidth = (23 / this.windowW) * 100;\n\t\t\tlet maxWindowWidth = 100 - minWindowWidth;\n\t\t\tlet listPreview = container.find('.js-detail-preview');\n\t\t\tthis.gutter.on('dblclick', () => {\n\t\t\t\tlet gutterRelatedMidPosition = app.moduleCacheGet('gutterRelatedMidPosition');\n\t\t\t\tif (isNaN(this.split.getSizes()[0])) {\n\t\t\t\t\tthis.split.setSizes(gutterRelatedMidPosition);\n\t\t\t\t}\n\t\t\t\tif (split.getSizes()[0] < 7) {\n\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-left');\n\t\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\t\tthis.list.removeClass('u-hide-underneath');\n\t\t\t\t\tif (gutterRelatedMidPosition[0] > 11) {\n\t\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t\t}\n\t\t\t\t} else if (split.getSizes()[1] < 20) {\n\t\t\t\t\tif (gutterRelatedMidPosition[1] > rightSplitMaxWidth + 1) {\n\t\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t\t}\n\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-right');\n\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\tlistPreview.show();\n\t\t\t\t} else if (split.getSizes()[0] > 7 && split.getSizes()[0] < 50) {\n\t\t\t\t\tsplit.setSizes([minWindowWidth, maxWindowWidth]);\n\t\t\t\t\tthis.gutter.addClass('js-gutter-corr-left');\n\t\t\t\t\tthis.sideBlockLeft.addClass('d-block');\n\t\t\t\t\tthis.list.addClass('u-hide-underneath');\n\t\t\t\t} else if (split.getSizes()[1] > 10 && split.getSizes()[1] < 50) {\n\t\t\t\t\tsplit.setSizes([maxWindowWidth, minWindowWidth]);\n\t\t\t\t\tthis.gutter.addClass('js-gutter-corr-right');\n\t\t\t\t\tthis.sideBlockRight.addClass('d-block');\n\t\t\t\t\tlistPreview.hide();\n\t\t\t\t\t//this.list.width(this.list.width() - 10);\n\t\t\t\t}\n\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t});\n\t\t\tthis.sideBlockLeft.on('click', () => {\n\t\t\t\tlet gutterRelatedMidPosition = app.moduleCacheGet('gutterRelatedMidPosition');\n\t\t\t\tif (gutterRelatedMidPosition[0] > 11) {\n\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t} else {\n\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t}\n\t\t\t\tthis.gutter.removeClass('js-gutter-corr-left');\n\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\tthis.list.removeClass('u-hide-underneath');\n\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t});\n\t\t\tthis.sideBlockRight.on('click', () => {\n\t\t\t\tlet gutterRelatedMidPosition = app.moduleCacheGet('gutterRelatedMidPosition');\n\t\t\t\tif (gutterRelatedMidPosition[1] > rightSplitMaxWidth + 1) {\n\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t} else {\n\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t}\n\t\t\t\tthis.gutter.removeClass('js-gutter-corr-right');\n\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\tlistPreview.show();\n\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t});\n\t\t},\n\t\tregisterSplit: function (container) {\n\t\t\tlet rightSplitMaxWidth = (400 / this.windowW) * 100;\n\t\t\tconst splitSizes = this.getSplitSizes();\n\t\t\tapp.moduleCacheSet('gutterRelatedMidPosition', splitSizes);\n\t\t\tlet split = Split([this.list[0], this.preview[0]], {\n\t\t\t\tsizes: splitSizes,\n\t\t\t\tminSize: 10,\n\t\t\t\tgutterSize: 24,\n\t\t\t\tsnapOffset: 100,\n\t\t\t\tonDrag: () => {\n\t\t\t\t\tif (split.getSizes()[1] < rightSplitMaxWidth) {\n\t\t\t\t\t\tsplit.collapse(1);\n\t\t\t\t\t}\n\t\t\t\t\tif (split.getSizes()[0] < 7) {\n\t\t\t\t\t\tthis.sideBlockLeft.addClass('d-block');\n\t\t\t\t\t\tthis.list.addClass('u-hide-underneath');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-left');\n\t\t\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\t\t\tthis.list.removeClass('u-hide-underneath');\n\t\t\t\t\t}\n\t\t\t\t\tif (split.getSizes()[1] < 10) {\n\t\t\t\t\t\tthis.sideBlockRight.addClass('d-block');\n\t\t\t\t\t\tthis.preview.hide();\n\t\t\t\t\t\tthis.list.width(this.list.width() - 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-right');\n\t\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\t\tthis.preview.show();\n\t\t\t\t\t}\n\t\t\t\t\tif (split.getSizes()[0] > 10 && split.getSizes()[1] > rightSplitMaxWidth) {\n\t\t\t\t\t\tapp.moduleCacheSet('gutterRelatedMidPosition', split.getSizes());\n\t\t\t\t\t}\n\t\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (splitSizes[0] < 10) {\n\t\t\t\tthis.gutter.addClass('js-gutter-corr-left');\n\t\t\t\tthis.sideBlockLeft.addClass('d-block');\n\t\t\t\tthis.list.addClass('u-hide-underneath');\n\t\t\t} else if (splitSizes[1] < rightSplitMaxWidth) {\n\t\t\t\tthis.gutter.addClass('js-gutter-corr-right');\n\t\t\t\tthis.sideBlockRight.addClass('d-block');\n\t\t\t\tthis.preview.hide();\n\t\t\t}\n\t\t\tthis.gutter = container.find('.gutter');\n\t\t\tlet mainWindowHeightCss = {\n\t\t\t\theight: $(window).height() - this.list.offset().top - this.footerH\n\t\t\t};\n\t\t\tif (!container.closest('.mainBody').length) {\n\t\t\t\tlet mainBody = $(top.document).find('.mainBody').height();\n\t\t\t\tlet iframe = $(top.document).find('.js-detail-preview');\n\t\t\t\tmainWindowHeightCss = {\n\t\t\t\t\theight: mainBody - this.list.offset().top - iframe.offset().top + 50\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!this.list.parents('.blockContent').length) {\n\t\t\t\tthis.gutter.css(mainWindowHeightCss);\n\t\t\t\tthis.list.css(mainWindowHeightCss);\n\t\t\t\tthis.sideBlocks.css(mainWindowHeightCss);\n\t\t\t\tthis.rotatedText.css({\n\t\t\t\t\twidth: this.sideBlockLeft.height(),\n\t\t\t\t\theight: this.sideBlockLeft.height()\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.registerSplitEvents(container, split);\n\t\t\treturn split;\n\t\t},\n\t\ttoggleSplit: function (container) {\n\t\t\tlet commactHeight = container.closest('.commonActionsContainer').height();\n\t\t\tlet splitsArray = [];\n\t\t\tthis.split = this.registerSplit(container);\n\t\t\tsplitsArray.push(this.split);\n\t\t\t$(window).on('resize', () => {\n\t\t\t\tif (this.windowW < 993) {\n\t\t\t\t\tif (container.find('.gutter').length) {\n\t\t\t\t\t\tsplitsArray[splitsArray.length - 1].destroy();\n\t\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (container.find('.gutter').length !== 1) {\n\t\t\t\t\t\tthis.split = this.registerSplit(container);\n\t\t\t\t\t\tlet gutter = container.find('.gutter');\n\t\t\t\t\t\tif (this.mainBody.scrollTop() >= this.list.offset().top + commactHeight) {\n\t\t\t\t\t\t\tgutter.addClass('gutterOnScroll');\n\t\t\t\t\t\t\tgutter.css('left', this.preview.offset().left - 8);\n\t\t\t\t\t\t\tgutter.on('mousedown', function () {\n\t\t\t\t\t\t\t\t$(this).on('mousemove', function (e) {\n\t\t\t\t\t\t\t\t\t$(this).css('left', this.preview.offset().left - 8);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsplitsArray.push(this.split);\n\t\t\t\t\t}\n\t\t\t\t\tlet currentSplit = splitsArray[splitsArray.length - 1];\n\t\t\t\t\tlet minWidth = (15 / this.windowW) * 100;\n\t\t\t\t\tlet maxWidth = 100 - minWidth;\n\t\t\t\t\tif (typeof currentSplit === 'undefined') return;\n\t\t\t\t\tif (currentSplit.getSizes()[0] < minWidth + 5) {\n\t\t\t\t\t\tcurrentSplit.setSizes([minWidth, maxWidth]);\n\t\t\t\t\t} else if (currentSplit.getSizes()[1] < minWidth + 5) {\n\t\t\t\t\t\tcurrentSplit.setSizes([maxWidth, minWidth]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterListScroll: function () {\n\t\t\tlet container = $('.listViewEntriesDiv');\n\t\t\tif (this.relatedView !== 'ListPreview' && Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tcontainer.each((index, element) => {\n\t\t\t\t\tif (container.closest('.js-detail-widget-content').length) {\n\t\t\t\t\t\telement = container.closest('.js-detail-widget-content');\n\t\t\t\t\t\telement.each((i, el) => {\n\t\t\t\t\t\t\tApp.Components.Scrollbar.xy($(el));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tApp.Components.Scrollbar.xy($(element));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgetRecordsCount: function () {\n\t\t\tlet aDeferred = $.Deferred(),\n\t\t\t\trecordCountVal = $('#recordsCount').val();\n\t\t\tif (recordCountVal != '') {\n\t\t\t\taDeferred.resolve(recordCountVal);\n\t\t\t} else {\n\t\t\t\tlet params = this.getCompleteParams();\n\t\t\t\tdelete params.view;\n\t\t\t\tparams.action = 'DetailAjax';\n\t\t\t\tparams.mode = 'getRecordsCount';\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\t$('#recordsCount').val(data['result']['count']);\n\t\t\t\t\taDeferred.resolve(data['result']['count']);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tnoRecordSelectedAlert: function (text = 'JS_PLEASE_SELECT_ONE_RECORD') {\n\t\t\tapp.showNotify({\n\t\t\t\ttext: app.vtranslate(text),\n\t\t\t\ttype: 'error'\n\t\t\t});\n\t\t},\n\t\tgetCurrentCvId: function () {\n\t\t\treturn $('#customFilter').find('option:selected').data('id');\n\t\t},\n\t\tcheckListRecordSelected: function (minNumberOfRecords = 1) {\n\t\t\tlet selectedIds = this.readSelectedIds();\n\t\t\tif (typeof selectedIds === 'object' && selectedIds.length < minNumberOfRecords) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\treadSelectedIds: function (decode) {\n\t\t\tlet selectedIdsDataAttr = this.getCurrentCvId() + 'selectedIds',\n\t\t\t\tselectedIdsElementDataAttributes = $('#selectedIds').data(),\n\t\t\t\tselectedIds = [];\n\t\t\tif (!(selectedIdsDataAttr in selectedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeSelectedIds(selectedIds);\n\t\t\t} else {\n\t\t\t\tselectedIds = selectedIdsElementDataAttributes[selectedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true && typeof selectedIds == 'object') {\n\t\t\t\treturn JSON.stringify(selectedIds);\n\t\t\t}\n\t\t\treturn selectedIds;\n\t\t},\n\t\twriteSelectedIds: function (selectedIds) {\n\t\t\tif (!Array.isArray(selectedIds)) {\n\t\t\t\tselectedIds = [selectedIds];\n\t\t\t}\n\t\t\t$('#selectedIds').data(this.getCurrentCvId() + 'selectedIds', selectedIds);\n\t\t},\n\t\treadExcludedIds: function (decode) {\n\t\t\tlet excludedIdsDataAttr = this.getCurrentCvId() + 'Excludedids',\n\t\t\t\texcludedIdsElementDataAttributes = $('#excludedIds').data(),\n\t\t\t\texcludedIds = [];\n\t\t\tif (!(excludedIdsDataAttr in excludedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeExcludedIds(excludedIds);\n\t\t\t} else {\n\t\t\t\texcludedIds = excludedIdsElementDataAttributes[excludedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true && typeof excludedIds == 'object') {\n\t\t\t\treturn JSON.stringify(excludedIds);\n\t\t\t}\n\t\t\treturn excludedIds;\n\t\t},\n\t\twriteExcludedIds: function (excludedIds) {\n\t\t\t$('#excludedIds').data(this.getCurrentCvId() + 'Excludedids', excludedIds);\n\t\t},\n\t\tcheckSelectAll: function () {\n\t\t\tlet state = true;\n\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\tif ($(element).is(':checked')) {\n\t\t\t\t\tstate = true;\n\t\t\t\t} else {\n\t\t\t\t\tstate = false;\n\t\t\t\t}\n\t\t\t});\n\t\t\t$('#relatedListViewEntriesMainCheckBox').prop('checked', state);\n\t\t\treturn state;\n\t\t},\n\t\tregisterCheckBoxClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tthis.getRelatedContainer().on('click', '.relatedListViewEntriesCheckBox', function (e) {\n\t\t\t\tlet selectedIds = self.readSelectedIds(),\n\t\t\t\t\texcludedIds = self.readExcludedIds(),\n\t\t\t\t\telem = $(e.currentTarget);\n\t\t\t\tif (elem.is(':checked')) {\n\t\t\t\t\telem.closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.splice($.inArray(elem.val(), excludedIds), 1);\n\t\t\t\t\t} else if ($.inArray(elem.val(), selectedIds) == -1) {\n\t\t\t\t\t\tselectedIds.push(elem.val());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telem.closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.push(elem.val());\n\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselectedIds.splice($.inArray(elem.val(), selectedIds), 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.checkSelectAll();\n\t\t\t\tself.writeSelectedIds(selectedIds);\n\t\t\t\tself.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\tregisterMainCheckBoxClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tthis.getRelatedContainer().on('click', '#relatedListViewEntriesMainCheckBox', function () {\n\t\t\t\tlet selectedIds = self.readSelectedIds(),\n\t\t\t\t\texcludedIds = self.readExcludedIds();\n\t\t\t\tif ($('#relatedListViewEntriesMainCheckBox').is(':checked')) {\n\t\t\t\t\tlet progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\t\tlet recordCountObj = self.getRecordsCount();\n\t\t\t\t\trecordCountObj\n\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t$('#totalRecordsCount').text(data);\n\t\t\t\t\t\t\tif ($('#deSelectAllMsgDiv').css('display') == 'none') {\n\t\t\t\t\t\t\t\t$('#selectAllMsgDiv').show();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all' && $.inArray($(element).val(), excludedIds) != -1) {\n\t\t\t\t\t\t\texcludedIds.splice($.inArray($(element).val(), excludedIds), 1);\n\t\t\t\t\t\t} else if ($.inArray($(element).val(), selectedIds) == -1) {\n\t\t\t\t\t\t\tselectedIds.push($(element).val());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\t\texcludedIds.push($(element).val());\n\t\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedIds.splice($.inArray($(element).val(), selectedIds), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tself.writeSelectedIds(selectedIds);\n\t\t\t\tself.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\tregisterSelectAllClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tself.getRelatedContainer().on('click', '#selectAllMsg', function () {\n\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t$('#deSelectAllMsgDiv').show();\n\t\t\t\t$('#relatedListViewEntriesMainCheckBox').prop('checked', true);\n\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tself.writeSelectedIds('all');\n\t\t\t});\n\t\t},\n\t\tregisterDeselectAllClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tself.getRelatedContainer().on('click', '#deSelectAllMsg', function () {\n\t\t\t\t$('#deSelectAllMsgDiv').hide();\n\t\t\t\t$('#relatedListViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tself.writeSelectedIds([]);\n\t\t\t\tself.writeExcludedIds([]);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register quick edit save event description.\n\t\t */\n\t\tregisterQuickEditSaveEvent() {\n\t\t\tapp.event.on('QuickEdit.AfterSaveFinal', (e, data, instance, element) => {\n\t\t\t\tif (this.moduleName === instance.data('moduleName')) {\n\t\t\t\t\tif (element.closest('.js-detail-widget').length) {\n\t\t\t\t\t\tVtiger_Detail_Js.getInstance().postSummaryWidgetAddRecord(data, element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.loadRelatedList();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register change related view.\n\t\t */\n\t\tregisterChangeViewEvent() {\n\t\t\tconst self = this;\n\t\t\tself.getRelatedContainer().on('click', '.js-change-related-view', function () {\n\t\t\t\tself.relatedView = this.dataset.view;\n\t\t\t\tself.loadRelatedList();\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register related events\n\t\t */\n\t\tregisterRelatedEvents: function () {\n\t\t\tthis.registerUnreviewedCountEvent();\n\t\t\tthis.registerChangeEntityStateEvent();\n\t\t\tthis.registerPaginationEvents();\n\t\t\tthis.registerListEvents();\n\t\t\tthis.registerPostLoadEvents();\n\t\t\tthis.registerSummationEvent();\n\t\t\tthis.registerCheckBoxClickEvent();\n\t\t\tthis.registerMainCheckBoxClickEvent();\n\t\t\tthis.registerSelectAllClickEvent();\n\t\t\tthis.registerDeselectAllClickEvent();\n\t\t\tthis.registerQuickEditSaveEvent();\n\t\t\tthis.registerChangeViewEvent();\n\t\t\tYetiForce_ListSearch_Js.registerSearch(this.content, (data) => {\n\t\t\t\tthis.loadRelatedList(data);\n\t\t\t});\n\t\t}\n\t}\n);\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\nvar Vtiger_Index_Js = {\n\tshowLocation: function (element) {\n\t\tapp.showModalWindow(null, 'index.php?module=OpenStreetMap&view=MapModal', function (container) {\n\t\t\tlet mapView = new OpenStreetMap_Map_Js();\n\t\t\tmapView.registerModalView(container);\n\t\t\tcontainer.find('.searchValue').val($(element).data('location'));\n\t\t\tcontainer.find('.searchBtn').trigger('click');\n\t\t});\n\t},\n\tmassAddDocuments: function (url) {\n\t\tapp.showModalWindow(null, url, function (container) {\n\t\t\tlet uploadButton = container.find('#filesToUpload');\n\t\t\tlet template = container.find('.fileContainer');\n\t\t\tlet uploadContainer = container.find('.uploadFileContainer');\n\t\t\tlet form = container.find('form');\n\t\t\tuploadButton.on('change', function () {\n\t\t\t\tuploadContainer.find('.fileItem').remove();\n\t\t\t\tlet files = uploadButton[0].files;\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\tuploadContainer.append(template.html());\n\t\t\t\t\tuploadContainer.find('[name=\"nameFile[]\"]:last').val(files[i].name);\n\t\t\t\t}\n\t\t\t});\n\t\t\tform.on('submit', function (e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tapp.removeEmptyFilesInput(form[0]);\n\t\t\t\tlet formData = new FormData(form[0]);\n\t\t\t\turl = 'index.php';\n\t\t\t\tif (app.getViewName() === 'Detail') {\n\t\t\t\t\tformData.append('createmode', 'link');\n\t\t\t\t\tformData.append('return_module', app.getModuleName());\n\t\t\t\t\tformData.append('return_id', app.getRecordId());\n\t\t\t\t}\n\t\t\t\tlet params = {\n\t\t\t\t\turl: url,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdata: formData,\n\t\t\t\t\tprocessData: false,\n\t\t\t\t\tcontentType: false\n\t\t\t\t};\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t});\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\tlet relatedModuleName = 'Documents';\n\t\t\t\t\tif (app.getViewName() === 'Detail') {\n\t\t\t\t\t\tlet detailView = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\t\tlet selectedTabElement = detailView.getSelectedTab();\n\t\t\t\t\t\tif (selectedTabElement.data('reference') === relatedModuleName) {\n\t\t\t\t\t\t\tdetailView.reloadTabContent();\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tdetailView.getContentHolder().find('.detailViewBlockLink').data('reference') === relatedModuleName\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tVtiger_RelatedList_Js.getInstance(\n\t\t\t\t\t\t\t\tdetailView.getRecordId(),\n\t\t\t\t\t\t\t\tapp.getModuleName(),\n\t\t\t\t\t\t\t\tselectedTabElement,\n\t\t\t\t\t\t\t\trelatedModuleName\n\t\t\t\t\t\t\t).loadRelatedList();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet updatesWidget = detailView\n\t\t\t\t\t\t\t\t.getContentHolder()\n\t\t\t\t\t\t\t\t.find(\"[data-type='RelatedModule'][data-name='Documents']\");\n\t\t\t\t\t\t\tif (updatesWidget.length > 0) {\n\t\t\t\t\t\t\t\tlet params = detailView.getFiltersData(updatesWidget);\n\t\t\t\t\t\t\t\tdetailView.loadWidget(updatesWidget, params['params']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVtiger_List_Js.getInstance().getListViewRecords();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t},\n\tgetEmailFromRecord(record, module, maxEmails) {\n\t\tconst aDeferred = $.Deferred();\n\t\tconst progress = $.progressIndicator({ position: 'html', blockInfo: { enabled: true } });\n\t\tAppConnector.request({\n\t\t\tdataType: 'html',\n\t\t\tdata: {\n\t\t\t\tmodule: 'OSSMail',\n\t\t\t\taction: 'GetMail',\n\t\t\t\tsourceModule: module,\n\t\t\t\tsourceRecord: record,\n\t\t\t\tmaxEmails: maxEmails\n\t\t\t}\n\t\t})\n\t\t\t.done((data) => {\n\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\tif (data.substring(0, 1) == '{') {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t\tdata = data['result'];\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t} else {\n\t\t\t\t\tapp.showModalWindow(data, (data) => {\n\t\t\t\t\t\tdata.find('.selectButton').on('click', (e) => {\n\t\t\t\t\t\t\tif (data.find('input:checked').length) {\n\t\t\t\t\t\t\t\tlet email = data.find('input:checked').val();\n\t\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\t\taDeferred.resolve(email);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_SELECT_AN_OPTION'),\n\t\t\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.fail((error, err) => {\n\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\taDeferred.reject(error);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\tregisterMailButtons: function (container) {\n\t\tlet thisInstance = this;\n\t\tcontainer.find('.sendMailBtn:not(.mailBtnActive)').each(function (e) {\n\t\t\tlet sendButton = $(this);\n\t\t\tsendButton.addClass('mailBtnActive');\n\t\t\tsendButton.on('click', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tlet url = sendButton.data('url');\n\t\t\t\tlet popup = sendButton.data('popup');\n\t\t\t\tlet toMail = sendButton.data('to');\n\t\t\t\tif (toMail) {\n\t\t\t\t\turl += '&to=' + encodeURIComponent(toMail);\n\t\t\t\t}\n\t\t\t\tif (app.getRecordId() && sendButton.data('record') !== app.getRecordId()) {\n\t\t\t\t\turl += '&crmModule=' + app.getModuleName() + '&crmRecord=' + app.getRecordId();\n\t\t\t\t}\n\t\t\t\tthisInstance.sendMailWindow(url, popup);\n\t\t\t});\n\t\t});\n\t},\n\tsendMailWindow: function (url, popup, postData) {\n\t\tif (popup) {\n\t\t\tlet width = screen.width - 15;\n\t\t\tlet height = screen.height - 150;\n\t\t\tlet left = 0;\n\t\t\tlet top = 30;\n\t\t\tlet popupParams = 'width=' + width + ', height=' + height + ', left=' + left + ', top=' + top;\n\t\t\tif (postData == undefined) {\n\t\t\t\twindow.open(\n\t\t\t\t\turl,\n\t\t\t\t\t'_blank',\n\t\t\t\t\tpopupParams + ',resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,status=no,menubar=no'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet form = $('<form/>', { action: 'index.php' });\n\t\t\turl.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\t\t\t\tform.append($('<input>', { name: key, value: value }));\n\t\t\t});\n\t\t\tfor (let i in postData) {\n\t\t\t\tform.append($('<input>', { name: i, value: JSON.stringify(postData[i]) }));\n\t\t\t}\n\t\t\t$('body').append(form);\n\t\t\tform.submit();\n\t\t} else {\n\t\t\twindow.location.href = url;\n\t\t}\n\t},\n\tregisterWidgetsEvents: function () {\n\t\tlet widgets = $('div.widgetContainer');\n\t\twidgets.on('shown.bs.collapse', function (e) {\n\t\t\tlet widgetContainer = $(e.currentTarget);\n\t\t\tVtiger_Index_Js.loadWidgets(widgetContainer);\n\t\t\tlet key = widgetContainer.attr('id');\n\t\t\tapp.cacheSet(key, 1);\n\t\t});\n\t\twidgets.on('hidden.bs.collapse', function (e) {\n\t\t\tlet widgetContainer = $(e.currentTarget);\n\t\t\tlet imageEle = widgetContainer.parent().find('.imageElement');\n\t\t\tlet imagePath = imageEle.data('rightimage');\n\t\t\timageEle.attr('src', imagePath);\n\t\t\tlet key = widgetContainer.attr('id');\n\t\t\tapp.cacheSet(key, 0);\n\t\t});\n\t},\n\t/**\n\t * Function is used to load the sidebar widgets\n\t * @param widgetContainer - widget container\n\t * @param open - widget should be open or closed\n\t */\n\tloadWidgets: function (widgetContainer, open) {\n\t\tlet message = $('.loadingWidgetMsg').html();\n\t\tif (widgetContainer.find('.card-body').html().trim()) {\n\t\t\tlet imageEle = widgetContainer.parent().find('.imageElement');\n\t\t\tlet imagePath = imageEle.data('downimage');\n\t\t\timageEle.attr('src', imagePath);\n\t\t\twidgetContainer.css('height', 'auto');\n\t\t\treturn;\n\t\t}\n\n\t\twidgetContainer.progressIndicator({ message: message });\n\t\tlet url = widgetContainer.data('url');\n\t\tlet listViewWidgetParams = {\n\t\t\ttype: 'GET',\n\t\t\turl: 'index.php',\n\t\t\tdataType: 'html',\n\t\t\tdata: url\n\t\t};\n\t\tAppConnector.request(listViewWidgetParams).done(function (data) {\n\t\t\tif (typeof open === 'undefined') open = true;\n\t\t\tif (open) {\n\t\t\t\twidgetContainer.progressIndicator({ mode: 'hide' });\n\t\t\t\tlet imageEle = widgetContainer.parent().find('.imageElement');\n\t\t\t\tlet imagePath = imageEle.data('downimage');\n\t\t\t\timageEle.attr('src', imagePath);\n\t\t\t\twidgetContainer.css('height', 'auto');\n\t\t\t}\n\t\t\twidgetContainer.html(data);\n\t\t\tif (data == '') {\n\t\t\t\twidgetContainer.closest('.quickWidget').addClass('d-none');\n\t\t\t} else {\n\t\t\t\tlet label = widgetContainer.closest('.quickWidget').find('.quickWidgetHeader').data('label');\n\t\t\t}\n\t\t\t$('.bodyContents').trigger('Vtiger.Widget.Load.' + label, $(widgetContainer));\n\t\t});\n\t},\n\tloadWidgetsOnLoad: function () {\n\t\tlet widgets = $('div.widgetContainer');\n\t\twidgets.each(function (index, element) {\n\t\t\tVtiger_Index_Js.loadWidgets($(element));\n\t\t});\n\t},\n\t/**\n\t * Function to change user theme(colour)\n\t * @params : colour name\n\t */\n\tchangeSkin: function () {\n\t\t$('.themeElement').on('click', function (e) {\n\t\t\te.stopPropagation();\n\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\tcurrentElement.closest('#themeContainer').hide();\n\t\t\tlet progressElement = $('#progressDiv');\n\t\t\tprogressElement.progressIndicator();\n\t\t\tlet params = {\n\t\t\t\tmodule: 'Users',\n\t\t\t\taction: 'SaveAjax',\n\t\t\t\trecord: CONFIG.userId,\n\t\t\t\tfield: 'theme',\n\t\t\t\tvalue: currentElement.data('skinName')\n\t\t\t};\n\t\t\tAppConnector.request(params)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tif (data.success && data.result) {\n\t\t\t\t\t\tprogressElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t$('.settingIcons').removeClass('open');\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {});\n\t\t});\n\t},\n\tmarkNotifications: function (id) {\n\t\tlet aDeferred = $.Deferred();\n\t\tlet thisInstance = this;\n\t\tlet params = {\n\t\t\tmodule: 'Notification',\n\t\t\taction: 'Notification',\n\t\t\tmode: 'setMark',\n\t\t\tids: id\n\t\t};\n\t\tAppConnector.request(params)\n\t\t\t.done(function (data) {\n\t\t\t\tlet row = $('.notificationEntries .noticeRow[data-id=\"' + id + '\"]');\n\t\t\t\tapp.showNotify({\n\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\ttext: app.vtranslate('JS_MARKED_AS_READ'),\n\t\t\t\t\ttype: 'info'\n\t\t\t\t});\n\t\t\t\tif (row.length) {\n\t\t\t\t\trow.fadeOut(300, function () {\n\t\t\t\t\t\tlet entries = row.closest('.notificationEntries');\n\t\t\t\t\t\trow.remove();\n\t\t\t\t\t\tentries.each(function (index) {\n\t\t\t\t\t\t\tlet block = $(this);\n\t\t\t\t\t\t\tif (block.find('.noticeRow').length == 0) {\n\t\t\t\t\t\t\t\tblock.closest('.panel').hide();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tthisInstance.getNotificationsForReminder();\n\t\t\t\t}\n\t\t\t\taDeferred.resolve(data);\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\tapp.errorLog(textStatus, errorThrown);\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\tmarkAllNotifications: function (element) {\n\t\tlet ids = [];\n\t\tlet li = $(element).closest('.notificationContainer');\n\t\tli.find('.notificationEntries .noticeRow').each(function (index) {\n\t\t\tids.push($(this).data('id'));\n\t\t});\n\t\tif (ids.length == 0) {\n\t\t\telement.remove();\n\t\t\treturn false;\n\t\t}\n\t\tlet params = {\n\t\t\tmodule: 'Notification',\n\t\t\taction: 'Notification',\n\t\t\tmode: 'setMark',\n\t\t\tids: ids\n\t\t};\n\t\tli.progressIndicator({ position: 'html' });\n\t\tAppConnector.request(params).done(function (data) {\n\t\t\tli.progressIndicator({ mode: 'hide' });\n\t\t\tapp.showNotify({\n\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\ttext: app.vtranslate('JS_MARKED_AS_READ'),\n\t\t\t\ttype: 'info'\n\t\t\t});\n\t\t\tVtiger_Index_Js.getNotificationsForReminder();\n\t\t});\n\t},\n\t/**\n\t * Function registers event for Reminder popups\n\t */\n\tregisterReminders: function () {\n\t\tlet activityReminder = (parseInt(app.getMainParams('activityReminder')) || 0) * 1000;\n\t\tif (activityReminder != 0 && $('.remindersNotice.autoRefreshing').length) {\n\t\t\tVtiger_Index_Js.requestReminder();\n\t\t\twindow.reminder = setInterval(function () {\n\t\t\t\tVtiger_Index_Js.requestReminder();\n\t\t\t}, activityReminder);\n\t\t}\n\t\tlet reminder = (parseInt(app.getMainParams('intervalForNotificationNumberCheck')) || 0) * 1000;\n\t\tif (reminder != 0 && $('.notificationsNotice.autoRefreshing').length) {\n\t\t\tVtiger_Index_Js.getNotificationsForReminder();\n\t\t\twindow.reminderNotifications = setInterval(function () {\n\t\t\t\tVtiger_Index_Js.getNotificationsForReminder();\n\t\t\t}, reminder);\n\t\t}\n\t},\n\tgetNotificationsForReminder: function () {\n\t\tlet thisInstance = this;\n\t\tlet content = $('.remindersNotificationContainer');\n\t\tlet element = $('.notificationsNotice');\n\t\tlet url = 'index.php?module=Notification&view=Reminders';\n\t\tAppConnector.request(url)\n\t\t\t.done(function (data) {\n\t\t\t\tcontent.html(data);\n\t\t\t\tthisInstance.refreshReminderCount(content, element, 'js-count-notifications-reminder');\n\t\t\t\tcontent.find('.js-set-marked').on('click', function (e) {\n\t\t\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\t\t\tlet recordID = currentElement.closest('.js-notification-panel').data('record');\n\t\t\t\t\tthisInstance.markNotifications(recordID).done(function (data) {\n\t\t\t\t\t\tcurrentElement.closest('.js-notification-panel').fadeOut(300, function () {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t\tthisInstance.refreshReminderCount(content, element, 'js-count-notifications-reminder');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.fail(function (data, err) {\n\t\t\t\tclearInterval(window.reminderNotifications);\n\t\t\t});\n\t},\n\t/**\n\t * Function request for reminder popups\n\t */\n\trequestReminder: function () {\n\t\tlet thisInstance = this;\n\t\tlet content = $('.remindersNoticeContainer');\n\t\tlet element = $('.remindersNotice');\n\t\tlet url = 'index.php?module=Calendar&view=Reminders&type_remainder=true';\n\t\tAppConnector.request(url)\n\t\t\t.done(function (data) {\n\t\t\t\tcontent.html(data);\n\t\t\t\tthisInstance.refreshReminderCount(content, element, 'countRemindersNotice');\n\t\t\t\tapp.registerModal(content);\n\t\t\t\tcontent.find('.reminderPostpone').on('click', function (e) {\n\t\t\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\t\t\tlet recordID = currentElement.closest('.js-toggle-panel').data('record');\n\t\t\t\t\tlet url =\n\t\t\t\t\t\t'index.php?module=Calendar&action=ActivityReminder&mode=postpone&record=' +\n\t\t\t\t\t\trecordID +\n\t\t\t\t\t\t'&time=' +\n\t\t\t\t\t\tcurrentElement.data('time');\n\t\t\t\t\tAppConnector.request(url).done(function (data) {\n\t\t\t\t\t\tcurrentElement.closest('.js-toggle-panel').fadeOut(300, function () {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t\tthisInstance.refreshReminderCount(content, element, 'countRemindersNotice');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.fail(function (data, err) {\n\t\t\t\tclearInterval(window.reminder);\n\t\t\t});\n\t},\n\trefreshReminderCount: function (content, element, tag) {\n\t\tlet badge = element.find('.badge');\n\t\tlet count = content.find('.js-toggle-panel').length;\n\t\tbadge.text(count);\n\t\tbadge.removeClass('d-none');\n\t\tif (count > 0 && element.hasClass('autoRefreshing')) {\n\t\t\telement.effect('pulsate', 1500);\n\t\t\tif (app.cacheGet(tag) != count) {\n\t\t\t\tapp.playSound('REMINDERS');\n\t\t\t\tapp.cacheSet(tag, count);\n\t\t\t}\n\t\t} else {\n\t\t\tbadge.addClass('d-none');\n\t\t}\n\t},\n\tregisterResizeEvent: function () {\n\t\t$(window).on('resize', function () {\n\t\t\tif (this.resizeTO) clearTimeout(this.resizeTO);\n\t\t\tthis.resizeTO = setTimeout(function () {\n\t\t\t\t$(this).trigger('resizeEnd');\n\t\t\t}, 600);\n\t\t});\n\t},\n\tchangeWatching: function (instance) {\n\t\tlet value, module, state, className, user, record;\n\t\tif (instance != undefined) {\n\t\t\tinstance = $(instance);\n\t\t\tvalue = instance.data('value');\n\t\t\tif (instance.data('module') != undefined) {\n\t\t\t\tmodule = instance.data('module');\n\t\t\t} else {\n\t\t\t\tmodule = app.getModuleName();\n\t\t\t}\n\t\t\tif (instance.data('user') != undefined) {\n\t\t\t\tuser = instance.data('user');\n\t\t\t}\n\t\t\tif (instance.data('record') != undefined) {\n\t\t\t\trecord = instance.data('record');\n\t\t\t}\n\t\t}\n\t\tapp.showConfirmModal({\n\t\t\ttitle: app.vtranslate('JS_WATCHING_TITLE'),\n\t\t\ttext: app.vtranslate('JS_WATCHING_MESSAGE' + value),\n\t\t\ticon: 'fas fa-eye',\n\t\t\tconfirmButtonLabel: 'LBL_YES',\n\t\t\trejectedButtonLabel: 'LBL_NO',\n\t\t\tconfirmedCallback: () => {\n\t\t\t\tVtiger_Index_Js.updateWatching(module, value, user, record).done(function (data) {\n\t\t\t\t\tif (instance != undefined) {\n\t\t\t\t\t\tlet buttonIcon = instance.find('.fas');\n\t\t\t\t\t\tstate = data.result == 1 ? 0 : 1;\n\t\t\t\t\t\tinstance.data('value', state);\n\t\t\t\t\t\tif (state == 1) {\n\t\t\t\t\t\t\tinstance.toggleClass(instance.data('off') + ' ' + instance.data('on'));\n\t\t\t\t\t\t\tbuttonIcon.removeClass('fas fa-eye');\n\t\t\t\t\t\t\tbuttonIcon.addClass('fas fa-eye-slash');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinstance.toggleClass(instance.data('on') + ' ' + instance.data('off'));\n\t\t\t\t\t\t\tbuttonIcon.removeClass('fas fa-eye-slash');\n\t\t\t\t\t\t\tbuttonIcon.addClass('fas fa-eye');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\tupdateWatching: function (module, value, user, record) {\n\t\tlet aDeferred = $.Deferred();\n\t\tlet params = {\n\t\t\tmodule: module,\n\t\t\taction: 'Watchdog',\n\t\t\tstate: value\n\t\t};\n\t\tif (user != undefined) {\n\t\t\tparams['user'] = user;\n\t\t}\n\t\tif (record != undefined && record != 0) {\n\t\t\tparams['record'] = record;\n\t\t}\n\t\tAppConnector.request(params)\n\t\t\t.done(function (data) {\n\t\t\t\taDeferred.resolve(data);\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\tapp.errorLog(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\tassignToOwner: function (element, userId) {\n\t\telement = $(element);\n\t\tif (userId == undefined) {\n\t\t\tuserId = CONFIG.userId;\n\t\t}\n\t\tlet params = {\n\t\t\tmodule: element.data('module'),\n\t\t\trecord: element.data('record'),\n\t\t\tfield: 'assigned_user_id',\n\t\t\tvalue: userId\n\t\t};\n\t\tapp.saveAjax('', null, params).done(function (e) {\n\t\t\tapp.hideModalWindow();\n\t\t\tif (app.getViewName() === 'List') {\n\t\t\t\tlet listinstance = new Vtiger_List_Js();\n\t\t\t\tlistinstance.getListViewRecords();\n\t\t\t} else if (app.getViewName() === 'Detail') {\n\t\t\t\tdocument.location.reload();\n\t\t\t}\n\t\t});\n\t},\n\tsendNotification: function () {\n\t\tApp.Components.QuickCreate.createRecord('Notification');\n\t},\n\tperformPhoneCall: function (phoneNumber, record) {\n\t\tAppConnector.request({\n\t\t\tmodule: app.getModuleName(),\n\t\t\tview: 'BasicAjax',\n\t\t\tmode: 'performPhoneCall',\n\t\t\tphoneNumber: phoneNumber,\n\t\t\trecord: record\n\t\t}).done(function (response) {\n\t\t\tresponse = JSON.parse(response);\n\t\t\tVtiger_Helper_Js.showMessage({ text: response.result });\n\t\t});\n\t},\n\tregisterEvents: function () {\n\t\tVtiger_Index_Js.registerWidgetsEvents();\n\t\tVtiger_Index_Js.loadWidgetsOnLoad();\n\t\tVtiger_Index_Js.registerReminders();\n\t\tVtiger_Index_Js.changeSkin();\n\t\tVtiger_Index_Js.registerResizeEvent();\n\t}\n};\n//On Page Load\njQuery(function () {\n\tVtiger_Index_Js.registerEvents();\n});\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n *************************************************************************************/\n'use strict';\n\nwindow.AppConnector = {\n\t/**\n\t * Sends a pjax request (push state +ajax)\n\t * The function is deferred. it will be resolved on success and error on failure\n\t *  Success - if request is success it will send you data that it recieved\n\t *  error - it will send two parameters first gives string regarding error\n\t *                   Second gives you error object if exists\n\t *\n\t *  @return - deferred promise\n\t */\n\trequestPjax: function (params) {\n\t\treturn AppConnector._request(params, true);\n\t},\n\n\t/**\n\t *  Sends ajax request to the specified url.\n\t *  The function is deferred. it will be resolved on success and error on failure\n\t *  Success - if request is success it will send you data that it recieved\n\t *  error - it will send two parameters first gives string regarding error\n\t *                   Second gives you error object if exists\n\t *\n\t *  @return - deferred promise\n\t */\n\trequest: function (params, rawData) {\n\t\treturn AppConnector._request(params, false, rawData);\n\t},\n\n\t_request: function (params, pjaxMode, rawData) {\n\t\tconst aDeferred = jQuery.Deferred();\n\t\tif (typeof rawData === 'undefined') {\n\t\t\trawData = false;\n\t\t}\n\t\tif (typeof pjaxMode === 'undefined') {\n\t\t\tpjaxMode = false;\n\t\t}\n\t\tif (typeof params === 'undefined') {\n\t\t\tparams = {};\n\t\t}\n\t\tlet fullUrl = '',\n\t\t\tindex,\n\t\t\tcallerParams;\n\t\t//caller has send only data\n\t\tif (typeof params.data === 'undefined' || rawData) {\n\t\t\tif (typeof params === 'string') {\n\t\t\t\tcallerParams = fullUrl = params;\n\t\t\t\tindex = callerParams.indexOf('?');\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlet subStr = callerParams.substr(0, index + 1); //need to replace only \"index.php?\" or \"?\"\n\t\t\t\t\tcallerParams = callerParams.replace(subStr, '');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallerParams = $.extend({}, params);\n\t\t\t}\n\t\t\tparams = {};\n\t\t\tparams.data = callerParams;\n\t\t}\n\t\t//Make the request as post by default\n\t\tif (typeof params.type === 'undefined' || rawData) params.type = 'POST';\n\t\tif (typeof params.jsonp === 'undefined' || rawData) params.jsonp = false;\n\n\t\t//By default we expect json from the server\n\t\tif (typeof params.dataType === 'undefined' || rawData) {\n\t\t\tlet data = params.data;\n\t\t\t//view will return html\n\t\t\tparams.dataType = 'json';\n\t\t\tif (data.hasOwnProperty('view')) {\n\t\t\t\tparams.dataType = 'html';\n\t\t\t} else if (typeof data === 'string' && data.indexOf('&view=') !== -1) {\n\t\t\t\tparams.dataType = 'html';\n\t\t\t}\n\t\t\tif (typeof params.url !== 'undefined' && params.url.indexOf('&view=') !== -1) {\n\t\t\t\tparams.dataType = 'html';\n\t\t\t}\n\t\t}\n\t\t//If url contains params then seperate them and make them as data\n\t\tif (typeof params.url !== 'undefined' && params.url.indexOf('?') !== -1) {\n\t\t\tfullUrl = params.url;\n\t\t\tlet urlSplit = params.url.split('?'),\n\t\t\t\tqueryString = urlSplit[1];\n\t\t\tparams.url = urlSplit[0];\n\t\t\tlet queryParameters = queryString.split('&');\n\t\t\tfor (index = 0; index < queryParameters.length; index++) {\n\t\t\t\tlet queryParam = queryParameters[index],\n\t\t\t\t\tqueryParamComponents = queryParam.split('=');\n\t\t\t\tparams.data[queryParamComponents[0]] = queryParamComponents[1];\n\t\t\t}\n\t\t}\n\t\tif (typeof params.url === 'undefined' || params.url.length <= 0) {\n\t\t\tparams.url = 'index.php';\n\t\t}\n\t\tparams.success = function (data, status, jqXHR) {\n\t\t\tif (data !== null && typeof data === 'object' && data.error) {\n\t\t\t\tapp.errorLog(data.error);\n\t\t\t\tif (data.error.message) {\n\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\ttext: data.error.message,\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\taDeferred.resolve(data);\n\t\t};\n\t\tparams.error = function (jqXHR, textStatus, errorThrown) {\n\t\t\tlet action = jqXHR.getResponseHeader('yf-action');\n\t\t\tif (action === 'logout') {\n\t\t\t\twindow.location.href = 'index.php';\n\t\t\t}\n\t\t\tif (CONFIG.debug) {\n\t\t\t\tif (jqXHR.status === 406) {\n\t\t\t\t\tlet sep = '-'.repeat(150);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'%cYetiForce debug mode!!!',\n\t\t\t\t\t\t'color: red; font-family: sans-serif; font-size: 1.5em; font-weight: bolder; text-shadow: #000 1px 1px;'\n\t\t\t\t\t);\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Error: ' + errorThrown,\n\t\t\t\t\t\t'\\n' + sep + '\\nTrace:\\n' + sep + '\\n' + (jqXHR.responseJSON ? jqXHR.responseJSON.error.trace : ''),\n\t\t\t\t\t\t'\\n' + sep + '\\nParams:\\n' + sep + '\\n' + JSON.stringify(params, null, '\\t')\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tapp.errorLog(jqXHR, textStatus, errorThrown);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (textStatus == 'error' && jqXHR.responseJSON) {\n\t\t\t\ttextStatus = jqXHR.responseJSON.error.message;\n\t\t\t}\n\t\t\taDeferred.reject(textStatus, errorThrown, jqXHR);\n\t\t};\n\t\tif (params.data === '') {\n\t\t\tapp.showNotify({ type: 'error', title: app.vtranslate('JS_ERROR') });\n\t\t\treturn aDeferred.reject();\n\t\t}\n\t\tjQuery.ajax(params);\n\t\tif (pjaxMode) {\n\t\t\tapp.changeUrl(params);\n\t\t}\n\t\treturn aDeferred.promise();\n\t},\n\n\trequestForm: function (url, params = {}) {\n\t\tapp.openUrlMethodPost(url, params);\n\t}\n};\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\nvar App = (window.App = {\n\tComponents: {\n\t\tTree: {\n\t\t\tBasic: class {\n\t\t\t\tconstructor(container = $('.js-tree-container')) {\n\t\t\t\t\tthis.treeInstance = false;\n\t\t\t\t\tthis.treeData = false;\n\t\t\t\t\tthis.generateTree(container);\n\t\t\t\t}\n\n\t\t\t\tgenerateTree(container) {\n\t\t\t\t\tconst slef = this;\n\t\t\t\t\tif (slef.treeInstance === false) {\n\t\t\t\t\t\tslef.treeInstance = container;\n\t\t\t\t\t\tslef.treeInstance\n\t\t\t\t\t\t\t.on('select_node.jstree', function (e, data) {\n\t\t\t\t\t\t\t\tif (data.event !== undefined && $(data.event.target).hasClass('jstree-checkbox')) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata.instance.select_node(data.node.children_d);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.on('deselect_node.jstree', function (e, data) {\n\t\t\t\t\t\t\t\tif (data.event !== undefined && $(data.event.target).hasClass('jstree-checkbox')) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata.instance.deselect_node(data.node.children_d);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.jstree({\n\t\t\t\t\t\t\t\tcore: {\n\t\t\t\t\t\t\t\t\tdata: slef.getRecords(container),\n\t\t\t\t\t\t\t\t\tthemes: {\n\t\t\t\t\t\t\t\t\t\tname: 'proton',\n\t\t\t\t\t\t\t\t\t\tresponsive: true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tplugins: ['search', 'checkbox']\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.registerSearchEvent();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tregisterSearchEvent() {\n\t\t\t\t\tconst self = this;\n\t\t\t\t\tlet searchTimeout = false,\n\t\t\t\t\t\ttreeSearch = $('.js-tree-search');\n\t\t\t\t\ttreeSearch.on('keyup', () => {\n\t\t\t\t\t\tif (searchTimeout) {\n\t\t\t\t\t\t\tclearTimeout(searchTimeout);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsearchTimeout = setTimeout(function () {\n\t\t\t\t\t\t\tvar searchValue = treeSearch.val();\n\t\t\t\t\t\t\tself.treeInstance.jstree(true).search(searchValue);\n\t\t\t\t\t\t}, 250);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tgetRecords(container) {\n\t\t\t\t\tif (this.treeData === false && container !== 'undefined') {\n\t\t\t\t\t\tthis.treeData = JSON.parse(container.find('.js-tree-data').val());\n\t\t\t\t\t}\n\t\t\t\t\treturn this.treeData;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Quick create object used by Header.js and yf plugins\n\t\t *\n\t\t */\n\t\tQuickCreate: {\n\t\t\t/**\n\t\t\t * module quick create data cache\n\t\t\t */\n\t\t\tmoduleCache: {},\n\t\t\t/**\n\t\t\t * Register function\n\t\t\t * @param {jQuery} container\n\t\t\t */\n\t\t\tregister(container) {\n\t\t\t\tif (typeof container === 'undefined') {\n\t\t\t\t\tcontainer = $('body');\n\t\t\t\t} else {\n\t\t\t\t\tcontainer = $(container);\n\t\t\t\t}\n\t\t\t\tcontainer.on('click', '.js-quick-create-modal', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tlet element = $(this);\n\t\t\t\t\tif (element.data('module')) {\n\t\t\t\t\t\tApp.Components.QuickCreate.createRecord(element.data('module'));\n\t\t\t\t\t}\n\t\t\t\t\tif (element.data('url')) {\n\t\t\t\t\t\tlet url = element.data('url');\n\t\t\t\t\t\tlet urlObject = app.convertUrlToObject(url);\n\t\t\t\t\t\tlet params = { callbackFunction: function () {} };\n\t\t\t\t\t\tconst progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\t\t\tApp.Components.QuickCreate.getForm(url, urlObject.module, params).done((data) => {\n\t\t\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tApp.Components.QuickCreate.showModal(data, params, element);\n\t\t\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * createRecord\n\t\t\t *\n\t\t\t * @param   {string}  moduleName\n\t\t\t * @param   {object}  params\n\t\t\t */\n\t\t\tcreateRecord(moduleName, params = {}) {\n\t\t\t\tif ('parentIframe' === CONFIG.modalTarget) {\n\t\t\t\t\twindow.parent.App.Components.QuickCreate.createRecord(moduleName, params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet url = 'index.php?module=' + moduleName + '&view=QuickCreateAjax';\n\t\t\t\tif (undefined === params.callbackFunction) {\n\t\t\t\t\tparams.callbackFunction = function () {};\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t(app.getViewName() === 'Detail' || (app.getViewName() === 'Edit' && app.getRecordId() !== undefined)) &&\n\t\t\t\t\tapp.getParentModuleName() != 'Settings'\n\t\t\t\t) {\n\t\t\t\t\turl += '&sourceModule=' + app.getModuleName();\n\t\t\t\t\turl += '&sourceRecord=' + app.getRecordId();\n\t\t\t\t}\n\t\t\t\tconst progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tthis.getForm(url, moduleName, params).done((data) => {\n\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tthis.showModal(data, params);\n\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Get quick create form\n\t\t\t *\n\t\t\t * @param   {string}  url\n\t\t\t * @param   {string}  moduleName\n\t\t\t * @param   {object}  params\n\t\t\t *\n\t\t\t * @return  {Promise} aDeferred\n\t\t\t */\n\t\t\tgetForm(url, moduleName, params = {}) {\n\t\t\t\tconst aDeferred = $.Deferred();\n\t\t\t\tlet requestParams;\n\t\t\t\tlet isCacheActive = !params.noCache || undefined === params.noCache;\n\t\t\t\tif (isCacheActive) {\n\t\t\t\t\tif (App.Components.QuickCreate.moduleCache[moduleName]) {\n\t\t\t\t\t\taDeferred.resolve(App.Components.QuickCreate.moduleCache[moduleName]);\n\t\t\t\t\t\treturn aDeferred.promise();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trequestParams = url;\n\t\t\t\tif (typeof params.data !== 'undefined') {\n\t\t\t\t\trequestParams = {};\n\t\t\t\t\trequestParams['data'] = params.data;\n\t\t\t\t\trequestParams['url'] = url;\n\t\t\t\t}\n\t\t\t\tAppConnector.request(requestParams).done(function (data) {\n\t\t\t\t\tif (isCacheActive) {\n\t\t\t\t\t\tApp.Components.QuickCreate.moduleCache[moduleName] = data;\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t});\n\t\t\t\treturn aDeferred.promise();\n\t\t\t},\n\t\t\t/**\n\t\t\t * Show modal\n\t\t\t *\n\t\t\t * @param   {string}  html\n\t\t\t * @param   {object}  params\n\t\t\t * @param   {jQuery}  element\n\t\t\t */\n\t\t\tshowModal(html, params = {}, element = null) {\n\t\t\t\tapp.showModalWindow(html, (container) => {\n\t\t\t\t\tconst quickCreateForm = container.find('form.js-form');\n\t\t\t\t\tconst moduleName = quickCreateForm.find('[name=\"module\"]').val();\n\t\t\t\t\tconst editViewInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\tconst moduleClassName = moduleName + '_QuickCreate_Js';\n\t\t\t\t\teditViewInstance.setForm(quickCreateForm);\n\t\t\t\t\teditViewInstance.registerBasicEvents(quickCreateForm);\n\t\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\t\tnew window[moduleClassName]().registerEvents(container);\n\t\t\t\t\t}\n\t\t\t\t\tquickCreateForm.validationEngine(app.validationEngineOptionsForRecord);\n\t\t\t\t\tif (typeof params.callbackPostShown !== 'undefined') {\n\t\t\t\t\t\tparams.callbackPostShown(quickCreateForm);\n\t\t\t\t\t}\n\t\t\t\t\tthis.registerPostLoadEvents(quickCreateForm, params, element);\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Register post load events\n\t\t\t *\n\t\t\t * @param   {jQuery}  form\n\t\t\t * @param   {object}  params\n\t\t\t * @param   {jQuery}  element\n\t\t\t *\n\t\t\t * @return  {boolean}\n\t\t\t */\n\t\t\tregisterPostLoadEvents(form, params, element) {\n\t\t\t\tconst submitSuccessCallback = params.callbackFunction || function () {};\n\t\t\t\tconst goToFullFormCallBack = params.goToFullFormcallback || function () {};\n\t\t\t\tform.on('submit', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget);\n\t\t\t\t\tif (form.hasClass('not_validation')) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tconst moduleName = form.find('[name=\"module\"]').val();\n\t\t\t\t\t//Form should submit only once for multiple clicks also\n\t\t\t\t\tif (typeof form.data('submit') !== 'undefined') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\t\t\t//If validation fails, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Once the form is submiting add data attribute to that form element\n\t\t\t\t\t\t\tform.data('submit', 'true');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst recordPreSaveEvent = $.Event(Vtiger_Edit_Js.recordPreSave);\n\t\t\t\t\t\tform.trigger(recordPreSaveEvent, {\n\t\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\t\tmodule: moduleName\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!recordPreSaveEvent.isDefaultPrevented()) {\n\t\t\t\t\t\t\tconst moduleInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\t\t\tconst saveHandler = !!moduleInstance.quickCreateSave ? moduleInstance.quickCreateSave : this.save;\n\t\t\t\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\t\t\t\tmessage: app.vtranslate('JS_SAVE_LOADER_INFO'),\n\t\t\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsaveHandler(form)\n\t\t\t\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\t\t\t\tlet modalContainer = form.closest('.modalContainer');\n\t\t\t\t\t\t\t\t\tif (modalContainer.length) {\n\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow(false, modalContainer[0].id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsubmitSuccessCallback(data);\n\t\t\t\t\t\t\t\t\tapp.event.trigger('QuickCreate.AfterSaveFinal', data, form);\n\t\t\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_SAVE_NOTIFY_SUCCESS'),\n\t\t\t\t\t\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tapp.reloadAfterSave(data, params, form, element);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\t\ttext: errorThrown,\n\t\t\t\t\t\t\t\t\t\ttitle: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//If validation fails in recordPreSaveEvent, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tform.find('.js-full-editlink').on('click', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget).closest('form');\n\t\t\t\t\tconst editViewUrl = $(e.currentTarget).data('url');\n\t\t\t\t\tgoToFullFormCallBack(form);\n\t\t\t\t\tthis.goToFullForm(form, editViewUrl);\n\t\t\t\t});\n\n\t\t\t\tthis.registerTabEvents(form);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Function to navigate from quick create to edit iew full form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t */\n\t\t\tgoToFullForm(form) {\n\t\t\t\t//As formData contains information about both view and action removed action and directed to view\n\t\t\t\tform.find('input[name=\"action\"]').remove();\n\t\t\t\tform.append('<input type=\"hidden\" name=\"view\" value=\"Edit\" />');\n\t\t\t\t$.each(form.find('[data-validation-engine]'), function (key, data) {\n\t\t\t\t\t$(data).removeAttr('data-validation-engine');\n\t\t\t\t});\n\t\t\t\tform.addClass('not_validation');\n\t\t\t\tform.submit();\n\t\t\t},\n\t\t\t/**\n\t\t\t * Register tab events\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t */\n\t\t\tregisterTabEvents(form) {\n\t\t\t\tconst tabElements = form.find('.nav.nav-pills , .nav.nav-tabs').find('a');\n\t\t\t\t//This will remove the name attributes and assign it to data-element-name . We are doing this to avoid\n\t\t\t\t//Multiple element to send as in calendar\n\t\t\t\tconst quickCreateTabOnHide = function (target) {\n\t\t\t\t\t$(target)\n\t\t\t\t\t\t.find('[name]')\n\t\t\t\t\t\t.each(function (index, element) {\n\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\telement.attr('data-element-name', element.attr('name')).removeAttr('name');\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t//This will add the name attributes and get value from data-element-name . We are doing this to avoid\n\t\t\t\t//Multiple element to send as in calendar\n\t\t\t\tconst quickCreateTabOnShow = function (target) {\n\t\t\t\t\t$(target)\n\t\t\t\t\t\t.find('[data-element-name]')\n\t\t\t\t\t\t.each(function (index, element) {\n\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\telement.attr('name', element.attr('data-element-name')).removeAttr('data-element-name');\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\ttabElements.on('click', function (e) {\n\t\t\t\t\tquickCreateTabOnHide(tabElements.not('[aria-expanded=\"false\"]').attr('data-target'));\n\t\t\t\t\tquickCreateTabOnShow($(this).attr('data-target'));\n\t\t\t\t\t//while switching tabs we have to clear the invalid fields list\n\t\t\t\t\tform.data('jqv').InvalidFields = [];\n\t\t\t\t});\n\t\t\t\t//To show aleady non active element , this we are doing so that on load we can remove name attributes for other fields\n\t\t\t\ttabElements.filter('a:not(.active)').each(function (e) {\n\t\t\t\t\tquickCreateTabOnHide($(this).attr('data-target'));\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Save quick create form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t *\n\t\t\t * @return  {Promise}        aDeferred\n\t\t\t */\n\t\t\tsave(form) {\n\t\t\t\tlet aDeferred = $.Deferred();\n\t\t\t\tAppConnector.request(form.serializeFormData())\n\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t\treturn aDeferred.promise();\n\t\t\t}\n\t\t},\n\t\tQuickEdit: {\n\t\t\t/**\n\t\t\t * Show modal\n\t\t\t *\n\t\t\t * @param   {string}  html\n\t\t\t * @param   {object}  params\n\t\t\t */\n\t\t\tshowModal(params = {}, element) {\n\t\t\t\tconst self = this;\n\t\t\t\tparams['view'] = 'QuickEditModal';\n\t\t\t\tAppConnector.request(params).done(function (html) {\n\t\t\t\t\tapp.showModalWindow(html, (container) => {\n\t\t\t\t\t\tlet form = container.find('form[name=\"QuickEdit\"]');\n\t\t\t\t\t\tlet moduleName = form.find('[name=\"module\"]').val();\n\t\t\t\t\t\tlet editViewInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\t\tlet moduleClassName = moduleName + '_QuickEdit_Js';\n\t\t\t\t\t\teditViewInstance.setForm(form);\n\t\t\t\t\t\teditViewInstance.registerBasicEvents(form);\n\t\t\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\t\t\tnew window[moduleClassName]().registerEvents(container);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tform.validationEngine(app.validationEngineOptionsForRecord);\n\t\t\t\t\t\tif (typeof params.callbackPostShown !== 'undefined') {\n\t\t\t\t\t\t\tparams.callbackPostShown(form, params);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.registerPostLoadEvents(form, params, element);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Register post load events\n\t\t\t *\n\t\t\t * @param   {jQuery}  form jQuery\n\t\t\t * @param   {object}  params\n\t\t\t * @param   {jQuery}  element\n\t\t\t */\n\t\t\tregisterPostLoadEvents(form, params, element) {\n\t\t\t\tconst submitSuccessCallback = params.callbackFunction || function () {};\n\t\t\t\tconst goToFullFormCallBack = params.goToFullFormcallback || function () {};\n\t\t\t\tform.on('submit', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget);\n\t\t\t\t\tif (form.hasClass('not_validation')) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tconst moduleName = form.find('[name=\"module\"]').val();\n\t\t\t\t\t//Form should submit only once for multiple clicks also\n\t\t\t\t\tif (typeof form.data('submit') !== 'undefined') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\t\t\t//If validation fails, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Once the form is submiting add data attribute to that form element\n\t\t\t\t\t\t\tform.data('submit', 'true');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst recordPreSaveEvent = $.Event(Vtiger_Edit_Js.recordPreSave);\n\t\t\t\t\t\tform.trigger(recordPreSaveEvent, {\n\t\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\t\tmodule: moduleName\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!recordPreSaveEvent.isDefaultPrevented()) {\n\t\t\t\t\t\t\tconst moduleInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\t\t\tconst saveHandler = !!moduleInstance.quickEditSave ? moduleInstance.quickEditSave : this.save;\n\t\t\t\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\t\t\t\tmessage: app.vtranslate('JS_SAVE_LOADER_INFO'),\n\t\t\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsaveHandler(form).done((data) => {\n\t\t\t\t\t\t\t\tconst modalContainer = form.closest('.modalContainer');\n\t\t\t\t\t\t\t\tif (modalContainer.length) {\n\t\t\t\t\t\t\t\t\tapp.hideModalWindow(false, modalContainer[0].id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsubmitSuccessCallback(data);\n\t\t\t\t\t\t\t\tapp.event.trigger('QuickEdit.AfterSaveFinal', data, form, element);\n\t\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_SAVE_NOTIFY_SUCCESS'),\n\t\t\t\t\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tapp.reloadAfterSave(data, params, form, element);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//If validation fails in recordPreSaveEvent, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tform.find('.js-full-editlink').on('click', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget).closest('form');\n\t\t\t\t\tconst editViewUrl = $(e.currentTarget).data('url');\n\t\t\t\t\tgoToFullFormCallBack(form);\n\t\t\t\t\tthis.goToFullForm(form, editViewUrl);\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Function to navigate from quick create to edit iew full form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t */\n\t\t\tgoToFullForm(form) {\n\t\t\t\tform.find('input[name=\"action\"]').remove();\n\t\t\t\tform.append('<input type=\"hidden\" name=\"view\" value=\"Edit\" />');\n\t\t\t\t$.each(form.find('[data-validation-engine]'), function (key, data) {\n\t\t\t\t\t$(data).removeAttr('data-validation-engine');\n\t\t\t\t});\n\t\t\t\tform.addClass('not_validation');\n\t\t\t\tform.submit();\n\t\t\t},\n\t\t\t/**\n\t\t\t * Save quick create form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t *\n\t\t\t * @return  {Promise}        aDeferred\n\t\t\t */\n\t\t\tsave(form) {\n\t\t\t\tconst aDeferred = $.Deferred();\n\t\t\t\tform.serializeFormData();\n\t\t\t\tlet formData = new FormData(form[0]);\n\t\t\t\tAppConnector.request({\n\t\t\t\t\turl: 'index.php',\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdata: formData,\n\t\t\t\t\tprocessData: false,\n\t\t\t\t\tcontentType: false\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t\treturn aDeferred.promise();\n\t\t\t}\n\t\t},\n\t\tScrollbar: {\n\t\t\tactive: true,\n\t\t\tdefaults: {\n\t\t\t\tscrollbars: {\n\t\t\t\t\tautoHide: 'leave'\n\t\t\t\t}\n\t\t\t},\n\t\t\tpage: {\n\t\t\t\tinstance: {},\n\t\t\t\telement: null\n\t\t\t},\n\t\t\tinitPage() {\n\t\t\t\tlet scrollbarContainer = $('.mainBody');\n\t\t\t\tif (!scrollbarContainer.length) {\n\t\t\t\t\tscrollbarContainer = $('#page');\n\t\t\t\t}\n\t\t\t\tif (!scrollbarContainer.length) {\n\t\t\t\t\tscrollbarContainer = $('body');\n\t\t\t\t}\n\t\t\t\tif (this.active) {\n\t\t\t\t\tthis.page.instance = this.y(scrollbarContainer);\n\t\t\t\t\tthis.page.element = $(this.page.instance.getElements().viewport);\n\t\t\t\t}\n\t\t\t},\n\t\t\txy(element, options = {}) {\n\t\t\t\treturn element.overlayScrollbars(options).overlayScrollbars();\n\t\t\t},\n\t\t\ty(element, options) {\n\t\t\t\tconst yOptions = {\n\t\t\t\t\toverflowBehavior: {\n\t\t\t\t\t\tx: 'h'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst mergedOptions = Object.assign(this.defaults, options, yOptions);\n\t\t\t\treturn element.overlayScrollbars(mergedOptions).overlayScrollbars();\n\t\t\t}\n\t\t},\n\t\tDropFile: class {\n\t\t\tconstructor(container, params) {\n\t\t\t\tthis.container = container;\n\t\t\t\tthis.init(params);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Register function\n\t\t\t * @param {jQuery} container\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tstatic register(container, params = {}) {\n\t\t\t\tif (typeof container === 'undefined') {\n\t\t\t\t\tcontainer = $('body');\n\t\t\t\t}\n\t\t\t\tif (container.hasClass('js-drop-container') && !container.prop('disabled')) {\n\t\t\t\t\treturn new App.Components.DropFile(container, params);\n\t\t\t\t}\n\t\t\t\tconst instances = [];\n\t\t\t\tcontainer.find('.js-drop-container').each((_, e) => {\n\t\t\t\t\tinstances.push(new App.Components.DropFile($(e), params));\n\t\t\t\t});\n\t\t\t\treturn instances;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Initiation\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tinit(params) {\n\t\t\t\tlet css = {\n\t\t\t\t\tborder: this.container.css('border'),\n\t\t\t\t\topacity: 'unset'\n\t\t\t\t};\n\t\t\t\tthis.container.bind('dragenter dragover', (e) => {\n\t\t\t\t\t$(e.currentTarget).css({\n\t\t\t\t\t\tborder: '2px dashed #4aa1f3',\n\t\t\t\t\t\topacity: 0.4\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t\t\tthis.container.bind('dragleave', (e) => {\n\t\t\t\t\t$(e.currentTarget).css(css);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t\t\tthis.container.bind('drop', (e) => {\n\t\t\t\t\tlet element = $(e.currentTarget).css(css);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst files = e.originalEvent.dataTransfer.files;\n\t\t\t\t\tif (files.length < 1) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tparams.callback =\n\t\t\t\t\t\tparams.callback ||\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet formData = new FormData();\n\t\t\t\t\t\t\tfor (let file of files) {\n\t\t\t\t\t\t\t\tformData.append(element.data('field-name'), file, file.name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tformData.append('action', 'SaveAjax');\n\t\t\t\t\t\t\tformData.append('record', element.data('id'));\n\t\t\t\t\t\t\tformData.append('module', element.data('module'));\n\t\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\tdata: formData,\n\t\t\t\t\t\t\t\tprocessData: false,\n\t\t\t\t\t\t\t\tcontentType: false\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_SAVE_NOTIFY_SUCCESS'), type: 'success' });\n\t\t\t\t\t\t\t\t\t\tif (element.closest('.js-detail-widget').length) {\n\t\t\t\t\t\t\t\t\t\t\tVtiger_Detail_Js.getInstance().getFiltersDataAndLoad(e);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_UNEXPECTED_ERROR'), type: 'error' });\n\t\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_ERROR'), type: 'error' });\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\tapp.showConfirmModal({\n\t\t\t\t\t\ttext: app.vtranslate('JS_CHANGE_CONFIRMATION'),\n\t\t\t\t\t\tconfirmedCallback: () => {\n\t\t\t\t\t\t\tparams.callback(e, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tNotify: {\n\t\t/**\n\t\t * Check if notifications are allowed\n\t\t */\n\t\tisDesktopPermitted: function () {\n\t\t\treturn typeof Notification !== 'undefined' && Notification.permission === 'granted';\n\t\t},\n\t\t/**\n\t\t * Show desktop notification\n\t\t * @param {Object} params\n\t\t */\n\t\tdesktop: function (params) {\n\t\t\tlet type = 'error';\n\t\t\tparams.modules = new Map([\n\t\t\t\t...PNotify.defaultModules,\n\t\t\t\t[\n\t\t\t\t\tPNotifyDesktop,\n\t\t\t\t\t{\n\t\t\t\t\t\tfallback: false,\n\t\t\t\t\t\ticon: params.icon\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]);\n\t\t\tif (typeof params.type !== 'undefined') {\n\t\t\t\ttype = params.type;\n\t\t\t\tif (params.type != 'error') {\n\t\t\t\t\tparams.hide = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn PNotify[type](params);\n\t\t}\n\t},\n\tClipboard: class Clipboard {\n\t\tconstructor(container) {\n\t\t\tthis.text = null;\n\t\t\tthis.oClipboard = null;\n\t\t\tthis.container = container;\n\t\t}\n\t\t/**\n\t\t * Register\n\t\t * @param {jQuery} params\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (typeof container === 'undefined') {\n\t\t\t\tcontainer = $('body');\n\t\t\t}\n\t\t\tcontainer.on('dblclick', '.js-copy-clipboard', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tnew Clipboard($(e.currentTarget)).load().then((instance) => {\n\t\t\t\t\tinstance.createClipboard();\n\t\t\t\t\tinstance.copy();\n\t\t\t\t\tinstance.destroy();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tload() {\n\t\t\tconst aDeferred = $.Deferred();\n\t\t\tlet url = this.container.data('url');\n\t\t\tif (url) {\n\t\t\t\tthis.getTextFromUrl(url).then((response) => {\n\t\t\t\t\tthis.text = response.result.text;\n\t\t\t\t\taDeferred.resolve(this);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taDeferred.resolve(this);\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t\t/**\n\t\t * Create ClipboardJS\n\t\t */\n\t\tcreateClipboard() {\n\t\t\tlet id = this.container.attr('id');\n\t\t\tthis.oClipboard = new ClipboardJS(`#${id}`, {\n\t\t\t\ttext: (_) => {\n\t\t\t\t\treturn this.text;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Get text to Clipboard from URL\n\t\t */\n\t\tgetTextFromUrl(url) {\n\t\t\tconst aDeferred = $.Deferred();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\tAppConnector.request(url)\n\t\t\t\t.done((response) => {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\taDeferred.resolve(response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taDeferred.reject(response);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail((_) => {\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\taDeferred.reject(_);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t\t/**\n\t\t * Set text to Clipboard\n\t\t */\n\t\tcopy() {\n\t\t\tthis.container.trigger('click');\n\t\t\tapp.showNotify({\n\t\t\t\ttext: app.vtranslate('JS_NOTIFY_COPY_TEXT'),\n\t\t\t\ttype: 'success'\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Destroy ClipboardJS object\n\t\t */\n\t\tdestroy() {\n\t\t\tthis.oClipboard.destroy();\n\t\t}\n\t}\n});\n\nvar app = (window.app = {\n\t/**\n\t * variable stores client side language strings\n\t */\n\tlanguageString: [],\n\tbreakpoints: {\n\t\txs: 0,\n\t\tsm: 576,\n\t\tmd: 768,\n\t\tlg: 992,\n\t\txl: 1200,\n\t\txxl: 1300,\n\t\txxxl: 1700\n\t},\n\tcacheParams: [],\n\tmodalEvents: [],\n\tmousePosition: { x: 0, y: 0 },\n\tchildFrame: false,\n\ttouchDevice: false,\n\tevent: new (function () {\n\t\tthis.el = $({});\n\t\tthis.trigger = function () {\n\t\t\tthis.el.trigger(arguments[0], Array.prototype.slice.call(arguments, 1));\n\t\t};\n\t\tthis.on = function () {\n\t\t\tthis.el.on.apply(this.el, arguments);\n\t\t};\n\t\tthis.one = function () {\n\t\t\tthis.el.one.apply(this.el, arguments);\n\t\t};\n\t\tthis.off = function () {\n\t\t\tthis.el.off.apply(this.el, arguments);\n\t\t};\n\t})(),\n\t/**\n\t * Function to get the module name. This function will get the value from element which has id module\n\t * @return : string - module name\n\t */\n\tgetModuleName: function () {\n\t\treturn this.getMainParams('module');\n\t},\n\t/**\n\t * Function to get the module name. This function will get the value from element which has id module\n\t * @return : string - module name\n\t */\n\tgetParentModuleName: function () {\n\t\treturn this.getMainParams('parent');\n\t},\n\t/**\n\t * Function returns the current view name\n\t */\n\tgetViewName: function () {\n\t\treturn this.getMainParams('view');\n\t},\n\t/**\n\t * Function returns the record id\n\t */\n\tgetRecordId: function () {\n\t\tlet recordId;\n\t\tif (\n\t\t\t$.inArray(this.getViewName(), ['Edit', 'PreferenceEdit', 'Detail', 'PreferenceDetail', 'DetailPreview']) !== -1\n\t\t) {\n\t\t\trecordId = this.getMainParams('recordId');\n\t\t}\n\t\treturn recordId;\n\t},\n\t/**\n\t * Function which will give you all details of the selected record\n\t * @params {object} params - an object of values like {'record' : recordId, 'module' : searchModule, 'fieldType' : 'email'}\n\t */\n\tgetRecordDetails: function (params) {\n\t\tlet aDeferred = $.Deferred();\n\t\tif (app.getParentModuleName() === 'Settings') {\n\t\t\tparams.parent = 'Settings';\n\t\t}\n\t\tAppConnector.request(Object.assign(params, { action: 'GetData' }))\n\t\t\t.done(function (data) {\n\t\t\t\tif (data.success) {\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t} else {\n\t\t\t\t\taDeferred.reject(data.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.fail(function (error) {\n\t\t\t\taDeferred.reject();\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\t/**\n\t * Function to get language\n\t */\n\tgetLanguage: function () {\n\t\treturn $('body').data('language');\n\t},\n\t/**\n\t * Function to get page title\n\t */\n\tgetPageTitle: function () {\n\t\treturn document.title;\n\t},\n\t/**\n\t * Function gets current window parent\n\t * @returns {object}\n\t */\n\tgetWindowParent() {\n\t\tif (\n\t\t\ttypeof window.frames[0] !== 'undefined' &&\n\t\t\ttypeof window.frames[0].app !== 'undefined' &&\n\t\t\twindow.frames[0].app.childFrame\n\t\t) {\n\t\t\treturn window.frames[0];\n\t\t} else {\n\t\t\treturn window;\n\t\t}\n\t},\n\t/**\n\t * Check if current window is window top\n\t */\n\tisWindowTop() {\n\t\treturn window.top === window.self;\n\t},\n\t/**\n\t * Function gets current window parent\n\t * @returns {boolean}\n\t */\n\tisTouchDevice() {\n\t\tlet supportsTouch = false;\n\t\tif ('ontouchstart' in window) {\n\t\t\t// iOS & android\n\t\t\tsupportsTouch = true;\n\t\t} else if (window.navigator.msPointerEnabled) {\n\t\t\t// Win8\n\t\t\tsupportsTouch = true;\n\t\t} else if ('ontouchstart' in document.documentElement) {\n\t\t\t//additional check\n\t\t\tsupportsTouch = true;\n\t\t}\n\t\tif (supportsTouch) {\n\t\t\t//remove browser scrollbar visibility (doesn't work in firefox, edge and ie)\n\t\t\t$(\"<style type='text/css'> ::-webkit-scrollbar { display: none;} </style>\").appendTo('head');\n\t\t}\n\t\treturn supportsTouch;\n\t},\n\t/**\n\t * Check if string is json\n\t * @param {string} str\n\t * @returns {boolean}\n\t */\n\tisJsonString(str) {\n\t\ttry {\n\t\t\tJSON.parse(str);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\t/**\n\t * Function to set page title\n\t */\n\tsetPageTitle: function (title) {\n\t\tdocument.title = title;\n\t},\n\t/**\n\t * Function to get the contents container\n\t * @returns jQuery object\n\t */\n\tgetContentsContainer: function () {\n\t\treturn $('.bodyContents');\n\t},\n\thidePopover: function (element) {\n\t\tif (typeof element === 'undefined') {\n\t\t\telement = $('body .js-popover-tooltip');\n\t\t}\n\t\telement.popover('hide');\n\t},\n\thidePopoversAfterClick(popoverParent) {\n\t\tpopoverParent.on('mousedown', (e) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tpopoverParent.popover('hide');\n\t\t\t}, 100);\n\t\t});\n\t},\n\tregisterPopoverManualTrigger(element, manualTriggerDelay) {\n\t\tconst hideDelay = 500;\n\t\telement.on('mouseleave', (e) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet currentPopover = this.getBindedPopover(element);\n\t\t\t\tif (\n\t\t\t\t\t!$(':hover').filter(currentPopover).length &&\n\t\t\t\t\t!currentPopover.find('.js-popover-tooltip--record[aria-describedby]').length\n\t\t\t\t) {\n\t\t\t\t\tcurrentPopover.popover('hide');\n\t\t\t\t}\n\t\t\t}, hideDelay);\n\t\t});\n\n\t\telement.on('mouseenter', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (element.is(':hover')) {\n\t\t\t\t\telement.popover('show');\n\t\t\t\t\tlet currentPopover = this.getBindedPopover(element);\n\t\t\t\t\tcurrentPopover.on('mouseleave', () => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!$(':hover').filter(currentPopover).length &&\n\t\t\t\t\t\t\t\t!currentPopover.find('.js-popover-tooltip--record[aria-describedby]').length\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcurrentPopover.popover('hide'); //close current popover\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!$(':hover').filter($('.popover')).length) {\n\t\t\t\t\t\t\t\t$('.popover').popover('hide'); //close all popovers\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, hideDelay);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, manualTriggerDelay);\n\t\t});\n\n\t\tapp.hidePopoversAfterClick(element);\n\t},\n\tisEllipsisActive(element) {\n\t\tlet clone = element\n\t\t\t.clone()\n\t\t\t.addClass('u-text-ellipsis--not-active')\n\t\t\t.css(element.css(['font-size', 'font-weight', 'font-family']))\n\t\t\t.appendTo('body');\n\t\tclone.find('.u-text-ellipsis').removeClass('u-text-ellipsis').addClass('u-text-ellipsis--not-active');\n\t\tif (clone.width() - 1 > element.width()) {\n\t\t\tclone.remove();\n\t\t\treturn true;\n\t\t}\n\t\tclone.remove();\n\t\treturn false;\n\t},\n\tshowPopoverElementView: function (selectElement = $('.js-popover-tooltip'), params = {}) {\n\t\tlet defaultParams = {\n\t\t\ttrigger: 'manual',\n\t\t\tmanualTriggerDelay: 500,\n\t\t\tplacement: 'auto',\n\t\t\thtml: true,\n\t\t\ttemplate:\n\t\t\t\t'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>',\n\t\t\tcontainer: 'body',\n\t\t\tboundary: 'viewport',\n\t\t\tdelay: { show: 300, hide: 100 }\n\t\t};\n\t\tselectElement.each(function (index, domElement) {\n\t\t\tlet element = $(domElement);\n\t\t\tlet elementParams = $.extend(true, defaultParams, params, element.data());\n\t\t\tif (element.data('class')) {\n\t\t\t\telementParams.template =\n\t\t\t\t\t'<div class=\"popover ' +\n\t\t\t\t\telement.data('class') +\n\t\t\t\t\t'\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>';\n\t\t\t}\n\t\t\tif (element.hasClass('delay0')) {\n\t\t\t\telementParams.delay = { show: 0, hide: 0 };\n\t\t\t}\n\t\t\telement.popover(elementParams);\n\t\t\tif (elementParams.trigger === 'manual' || typeof elementParams.trigger === 'undefined') {\n\t\t\t\tapp.registerPopoverManualTrigger(element, elementParams.manualTriggerDelay);\n\t\t\t}\n\t\t\tif (elementParams.callbackShown) {\n\t\t\t\telement.on('shown.bs.popover', function (e) {\n\t\t\t\t\telementParams.callbackShown(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\telement.addClass('popover-triggered');\n\t\t});\n\t\treturn selectElement;\n\t},\n\tregisterPopoverEllipsis({\n\t\telement = $('.js-popover-tooltip--ellipsis'),\n\t\tparams = { trigger: 'hover focus' },\n\t\tcontainer = $(window)\n\t} = {}) {\n\t\tconst self = this;\n\t\tparams = {\n\t\t\tcallbackShown: () => {\n\t\t\t\tself.setPopoverPosition(element, container);\n\t\t\t},\n\t\t\ttrigger: 'manual',\n\t\t\tplacement: 'right',\n\t\t\ttemplate:\n\t\t\t\t'<div class=\"popover js-popover--before-positioned\" role=\"tooltip\"><div class=\"popover-body\"></div></div>'\n\t\t};\n\t\tlet popoverText = element.find('.js-popover-text').length ? element.find('.js-popover-text') : element;\n\t\tif (!app.isEllipsisActive(popoverText)) {\n\t\t\telement.addClass('popover-triggered');\n\t\t\treturn;\n\t\t}\n\t\tapp.showPopoverElementView(element, params);\n\t},\n\tregisterPopoverEllipsisIcon(\n\t\tselectElement = $('.js-popover-tooltip--ellipsis-icon'),\n\t\tparams = { trigger: 'hover focus' }\n\t) {\n\t\tselectElement.each(function (index, domElement) {\n\t\t\tlet element = $(domElement);\n\t\t\tlet popoverText = element.find('.js-popover-text').length ? element.find('.js-popover-text') : element;\n\t\t\tif (!app.isEllipsisActive(popoverText)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet iconElement = element.find('.js-popover-icon');\n\t\t\tif (iconElement.length) {\n\t\t\t\telement.find('.js-popover-icon').removeClass('d-none');\n\t\t\t\tparams.selector = '.js-popover-icon';\n\t\t\t}\n\t\t\tapp.showPopoverElementView(element, params);\n\t\t});\n\t},\n\t/**\n\t * Register popover record\n\t * @param {jQuery} selectElement\n\t * @param {object} customParams\n\t */\n\tregisterPopoverRecord: function (\n\t\tselectElement = $('.js-popover-tooltip--record'),\n\t\tcustomParams = {},\n\t\tcontainer = $(document)\n\t) {\n\t\tconst self = this;\n\t\tapp.showPopoverElementView(selectElement, {\n\t\t\ttemplate:\n\t\t\t\t'<div class=\"popover c-popover--link js-popover--before-positioned\" role=\"tooltip\"><div class=\"popover-body\"></div></div>',\n\t\t\tcontent: '<div class=\"d-none\"></div>',\n\t\t\tmanualTriggerDelay: app.getMainParams('recordPopoverDelay'),\n\t\t\tplacement: 'right',\n\t\t\tcallbackShown: () => {\n\t\t\t\tif (\n\t\t\t\t\t!selectElement.attr('href') ||\n\t\t\t\t\tselectElement.closest('.ui-sortable-handle').hasClass('ui-sortable-helper')\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlet link = new URL(selectElement.eq(0).attr('href'), window.location.origin);\n\t\t\t\tif (!link.searchParams.get('record') || !link.searchParams.get('view')) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlet url = link.href;\n\t\t\t\turl = url.replace('view=', 'xview=') + '&view=RecordPopover';\n\t\t\t\tlet currentPopover = self.getBindedPopover(selectElement);\n\t\t\t\tlet popoverBody = currentPopover.find('.popover-body');\n\t\t\t\tpopoverBody.progressIndicator({});\n\t\t\t\tlet appendPopoverData = (data) => {\n\t\t\t\t\tpopoverBody.progressIndicator({ mode: 'hide' }).html(data);\n\t\t\t\t\tif (typeof customParams.callback === 'function') {\n\t\t\t\t\t\tcustomParams.callback(popoverBody);\n\t\t\t\t\t}\n\t\t\t\t\tself.setPopoverPosition(selectElement, container);\n\t\t\t\t};\n\t\t\t\tlet cacheData = window.popoverCache[url];\n\t\t\t\tif (typeof cacheData !== 'undefined') {\n\t\t\t\t\tappendPopoverData(cacheData);\n\t\t\t\t} else {\n\t\t\t\t\tAppConnector.request(url).done((data) => {\n\t\t\t\t\t\twindow.popoverCache[url] = data;\n\t\t\t\t\t\tappendPopoverData(data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Update popover record position (overwrite bootstrap positioning, failing on huge elements)\n\t * @param {jQuery} popover\n\t * @param {number} offsetLeft\n\t */\n\tsetPopoverPosition(popoverElement, container = $(window)) {\n\t\tlet popover = this.getBindedPopover(popoverElement);\n\t\tif (!popover.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst iframeOffset = this.computePopoverIframeOffset(popoverElement);\n\t\tlet windowHeight = $(window).height(),\n\t\t\twindowWidth = $(window).width(),\n\t\t\tpopoverPadding = 10,\n\t\t\tpopoverBody = popover.find('.popover-body'),\n\t\t\tpopoverHeight = popoverBody.height(),\n\t\t\tpopoverWidth = popoverBody.width(),\n\t\t\toffsetTop = app.mousePosition.y + iframeOffset.top,\n\t\t\toffsetLeft = app.mousePosition.x + iframeOffset.left;\n\t\tif (popoverHeight + offsetTop + popoverPadding > windowHeight) {\n\t\t\toffsetTop = offsetTop - popoverHeight - popoverPadding;\n\t\t}\n\t\tif (popoverWidth + offsetLeft + popoverPadding > windowWidth) {\n\t\t\toffsetLeft = windowWidth - popoverWidth;\n\t\t}\n\t\tpopover.css({\n\t\t\ttransform: `translate3d(${offsetLeft}px, ${offsetTop}px, 0)`\n\t\t});\n\t\tpopover.removeClass('js-popover--before-positioned');\n\t\tpopoverElement.one('hide.bs.popover', () => {\n\t\t\tpopover.addClass('js-popover--before-positioned');\n\t\t});\n\t},\n\t/**\n\t * Compute popover iframe offset\n\t *\n\t * @param   {Object}  popoverElement  jquery\n\t *\n\t * @return  {Object}                  offset top and left\n\t */\n\tcomputePopoverIframeOffset(popoverElement) {\n\t\tlet iframeOffsetTop = 0;\n\t\tlet iframeOffsetLeft = 0;\n\t\tif (!$(document).find(popoverElement).length) {\n\t\t\tlet iframe = $(document).find('iframe');\n\t\t\tconst iframeOffset = iframe.offset();\n\t\t\tiframeOffsetTop += iframeOffset.top;\n\t\t\tiframeOffsetLeft += iframeOffset.left;\n\t\t\tif (!iframe.contents().find(popoverElement).length) {\n\t\t\t\tlet iframe2 = iframe.contents().find('iframe');\n\t\t\t\tconst iframeOffset2 = iframe2.offset();\n\t\t\t\tiframeOffsetTop += iframeOffset2.top;\n\t\t\t\tiframeOffsetLeft += iframeOffset2.left;\n\t\t\t}\n\t\t}\n\t\treturn { top: iframeOffsetTop, left: iframeOffsetLeft };\n\t},\n\t/**\n\t * Get binded popover\n\t * @param {jQuery} element\n\t * @returns {Mixed|jQuery|HTMLElement}\n\t */\n\tgetBindedPopover(element) {\n\t\treturn $(`#${element.attr('aria-describedby')}`);\n\t},\n\t/**\n\t * Function to check the maximum selection size of multiselect and update the results\n\t * @params <object> multiSelectElement\n\t * @params <object> select2 params\n\t */\n\tregisterChangeEventForMultiSelect: function (selectElement, params) {\n\t\tif (typeof selectElement === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tvar instance = selectElement.data('select2');\n\t\tvar limit = params.maximumSelectionLength;\n\t\tselectElement.on('change', function (e) {\n\t\t\tvar data = instance.data();\n\t\t\tif ($.isArray(data) && data.length >= limit) {\n\t\t\t\tinstance.updateResults();\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Function to get data of the child elements in serialized format\n\t * @params <object> parentElement - element in which the data should be serialized. Can be selector , domelement or jquery object\n\t * @params <String> returnFormat - optional which will indicate which format return value should be valid values \"object\" and \"string\"\n\t * @return <object> - encoded string or value map\n\t */\n\tgetSerializedData: function (parentElement, returnFormat) {\n\t\tif (typeof returnFormat === 'undefined') {\n\t\t\treturnFormat = 'string';\n\t\t}\n\n\t\tparentElement = $(parentElement);\n\n\t\tvar encodedString = parentElement.children().serialize();\n\t\tif (returnFormat == 'string') {\n\t\t\treturn encodedString;\n\t\t}\n\t\tvar keyValueMap = {};\n\t\tvar valueList = encodedString.split('&');\n\n\t\tfor (var index in valueList) {\n\t\t\tvar keyValueString = valueList[index];\n\t\t\tvar keyValueArr = keyValueString.split('=');\n\t\t\tvar nameOfElement = keyValueArr[0];\n\t\t\tvar valueOfElement = keyValueArr[1];\n\t\t\tkeyValueMap[nameOfElement] = decodeURIComponent(valueOfElement);\n\t\t}\n\t\treturn keyValueMap;\n\t},\n\tshowModalData(data, container, paramsObject, cb, url, sendByAjaxCb) {\n\t\tconst thisInstance = this;\n\t\tlet params = {\n\t\t\tshow: true\n\t\t};\n\t\tif (!app.getMainParams('backgroundClosingModal')) {\n\t\t\tparams.backdrop = 'static';\n\t\t\tparams.keyboard = false;\n\t\t}\n\t\tif (typeof paramsObject === 'object') {\n\t\t\tcontainer.css(paramsObject);\n\t\t\tparams = $.extend(params, paramsObject);\n\t\t}\n\t\tcontainer.html(data);\n\t\tif (container.find('.modal').hasClass('static')) {\n\t\t\tparams.backdrop = 'static';\n\t\t}\n\t\t// In a modal dialog elements can be specified which can receive focus even though they are not descendants of the modal dialog.\n\t\t$.fn.modal.Constructor.prototype.enforceFocus = function (e) {\n\t\t\t$(document)\n\t\t\t\t.off('focusin.bs.modal') // guard against infinite focus loop\n\t\t\t\t.on(\n\t\t\t\t\t'focusin.bs.modal',\n\t\t\t\t\t$.proxy(function (e) {\n\t\t\t\t\t\tif ($(e.target).hasClass('select2-search__field')) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this)\n\t\t\t\t);\n\t\t};\n\t\tconst modalContainer = container.find('.modal:first');\n\t\tmodalContainer.one('shown.bs.modal', function () {\n\t\t\tthisInstance.registerDataTables(modalContainer.find('.js-modal-data-table'));\n\t\t\tcb(modalContainer);\n\t\t\tApp.Fields.Picklist.changeSelectElementView(modalContainer);\n\t\t\tApp.Fields.Date.register(modalContainer);\n\t\t\tApp.Fields.Text.Editor.register(modalContainer.find('.js-editor'), {\n\t\t\t\theight: '5em',\n\t\t\t\ttoolbar: 'Min'\n\t\t\t});\n\t\t\tapp.registesterScrollbar(modalContainer);\n\t\t\tapp.registerIframeEvents(modalContainer);\n\t\t\tmodalContainer.find('.modal-dialog').draggable({\n\t\t\t\thandle: '.modal-title'\n\t\t\t});\n\t\t\tmodalContainer.find('.modal-title').css('cursor', 'move');\n\t\t});\n\t\t$('body').append(container);\n\t\tmodalContainer.modal(params);\n\t\tapp.registerFormsEvents(modalContainer);\n\t\tthisInstance.registerModalEvents(modalContainer, sendByAjaxCb);\n\t},\n\tshowModalWindow: function (data, url, cb, paramsObject = {}) {\n\t\tif (!app.isCurrentWindowTarget('app.showModalWindow', arguments)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst thisInstance = this;\n\t\tlet sendByAjaxCb, modalId;\n\t\tmodalId = 'modal_' + Math.random().toString(36).substr(2, 9);\n\t\t//null is also an object\n\t\tif (typeof data === 'object' && data != null && !(data instanceof $)) {\n\t\t\tif (data.id != undefined) {\n\t\t\t\tmodalId = data.id;\n\t\t\t}\n\t\t\tparamsObject = data.css;\n\t\t\tcb = data.cb;\n\t\t\turl = data.url;\n\t\t\tif (data.sendByAjaxCb !== 'undefined') {\n\t\t\t\tsendByAjaxCb = data.sendByAjaxCb;\n\t\t\t}\n\t\t\tdata = data.data;\n\t\t} else if (typeof data === 'string') {\n\t\t\tlet modalData = $(data).last();\n\t\t\tif (modalData.data('modalid')) {\n\t\t\t\tmodalId = modalData.data('modalid');\n\t\t\t}\n\t\t}\n\t\tif (typeof url === 'function') {\n\t\t\tif (typeof cb === 'object') {\n\t\t\t\tparamsObject = cb;\n\t\t\t}\n\t\t\tcb = url;\n\t\t\turl = false;\n\t\t} else if (typeof url === 'object') {\n\t\t\tcb = function () {};\n\t\t\tparamsObject = url;\n\t\t\turl = false;\n\t\t}\n\t\tif (typeof cb !== 'function') {\n\t\t\tcb = function () {};\n\t\t}\n\t\tif (typeof sendByAjaxCb !== 'function') {\n\t\t\tsendByAjaxCb = function () {};\n\t\t}\n\t\tif (paramsObject !== undefined && paramsObject.modalId !== undefined) {\n\t\t\tmodalId = paramsObject.modalId;\n\t\t}\n\t\t// prevent duplicate hash generation\n\t\tlet container = $('#' + modalId);\n\t\tif (container.length) {\n\t\t\tcontainer.remove();\n\t\t}\n\t\tcontainer = $('<div></div>');\n\t\tcontainer.attr('id', modalId).addClass('modalContainer js-modal-container');\n\t\tcontainer.one('hidden.bs.modal', function () {\n\t\t\tcontainer.remove();\n\t\t\tlet backdrop = $('.modal-backdrop');\n\t\t\tif (!$('.modal.show').length) {\n\t\t\t\tbackdrop.remove();\n\t\t\t}\n\t\t\tif (backdrop.length > 0) {\n\t\t\t\t$('body').addClass('modal-open');\n\t\t\t}\n\t\t});\n\t\tWindow.lastModalId = modalId;\n\t\tif (data) {\n\t\t\tthisInstance.showModalData(data, container, paramsObject, cb, url, sendByAjaxCb);\n\t\t} else {\n\t\t\t$.get(url).done(function (response) {\n\t\t\t\tthisInstance.showModalData(response, container, paramsObject, cb, url, sendByAjaxCb);\n\t\t\t});\n\t\t}\n\t\treturn container;\n\t},\n\t/**\n\t * Check if current window is target for a modal and trigger in correct window if not\n\t *\n\t * @param   {String}  sourceFunction  source function name in dot prop notation object\n\t * @param   {Array}  args            source function arguments\n\t *\n\t * @return  {Boolean}                  isCurrentWindowTarget\n\t */\n\tisCurrentWindowTarget(sourceFunction, args) {\n\t\tlet isCurrentWindowTarget = true;\n\t\tif (CONFIG.modalTarget === 'parentIframe') {\n\t\t\tthis.childFrame = true;\n\t\t\tsourceFunction = sourceFunction.split('.');\n\t\t\tsourceFunction.unshift('parent');\n\t\t\tsourceFunction = sourceFunction.reduce((o, i) => o[i], window);\n\t\t\tsourceFunction.apply(window.parent.app, args);\n\t\t\tisCurrentWindowTarget = false;\n\t\t}\n\t\treturn isCurrentWindowTarget;\n\t},\n\t/**\n\t * Function which you can use to hide the modal\n\t * This api assumes that we are using block ui plugin and uses unblock api to unblock it\n\t */\n\thideModalWindow: function (callback, id) {\n\t\tif (!app.isCurrentWindowTarget('app.hideModalWindow', arguments)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet container;\n\t\tif (callback && typeof callback === 'object') {\n\t\t\tcontainer = callback;\n\t\t} else if (id == undefined) {\n\t\t\tcontainer = $('.modalContainer');\n\t\t} else {\n\t\t\tcontainer = $('#' + id);\n\t\t}\n\t\tif (container.length <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof callback !== 'function') {\n\t\t\tcallback = function () {};\n\t\t}\n\t\tlet modalContainer = container.find('.modal');\n\t\tmodalContainer.modal('hide');\n\t\tlet backdrop = $('.modal-backdrop:last');\n\t\tif ($('.modalContainer').length == 0 && backdrop.length) {\n\t\t\tbackdrop.remove();\n\t\t}\n\t\tmodalContainer.one('hidden.bs.modal', callback);\n\t},\n\tregisterModalController: function (modalId, modalContainer, cb) {\n\t\tlet windowParent = this.childFrame ? window.parent : window;\n\t\tif (!modalId) {\n\t\t\tmodalId = Window.lastModalId;\n\t\t}\n\t\tif (!modalContainer) {\n\t\t\tmodalContainer = $('#' + modalId + ' .js-modal-data');\n\t\t}\n\t\tlet moduleName = modalContainer.data('module') || 'Base';\n\t\tlet modalClass = moduleName.replace(':', '_') + '_' + modalContainer.data('view') + '_JS';\n\t\tif (typeof windowParent[modalClass] === 'undefined') {\n\t\t\tmodalClass = 'Base_' + modalContainer.data('view') + '_JS';\n\t\t}\n\t\tif (typeof windowParent[modalClass] !== 'undefined') {\n\t\t\tlet instance = new windowParent[modalClass]();\n\t\t\tif (typeof cb === 'function') {\n\t\t\t\tcb(modalContainer, instance);\n\t\t\t}\n\t\t\tinstance.registerEvents(modalContainer);\n\t\t\tif (modalId && app.modalEvents[modalId]) {\n\t\t\t\tapp.modalEvents[modalId](modalContainer, instance);\n\t\t\t}\n\t\t}\n\t},\n\tregisterModalEvents: function (container, sendByAjaxCb) {\n\t\tlet form = container.find('form');\n\t\tlet validationForm = false;\n\t\tif (form.hasClass('validateForm') || form.hasClass('js-validate-form')) {\n\t\t\tform.validationEngine(app.validationEngineOptions);\n\t\t\tvalidationForm = true;\n\t\t}\n\t\tif (container.data('view') === 'QuickDetailModal') {\n\t\t\tthis.registerBlockAnimationEvent(container);\n\t\t}\n\t\tif (form.hasClass('sendByAjax') || form.hasClass('js-send-by-ajax')) {\n\t\t\tform.on('submit', function (e) {\n\t\t\t\tlet save = true;\n\t\t\t\te.preventDefault();\n\t\t\t\tif (validationForm && form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\tapp.formAlignmentAfterValidation(form);\n\t\t\t\t\tsave = false;\n\t\t\t\t}\n\t\t\t\tif (save) {\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t});\n\t\t\t\t\tlet formData = form.serializeFormData();\n\t\t\t\t\tAppConnector.request(formData)\n\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\tsendByAjaxCb(formData, responseData);\n\t\t\t\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (responseData.result.processStop) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_UNEXPECTED_ERROR'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tregisterFormsEvents: function (container) {\n\t\tlet forms = container.find('form.js-form-ajax-submit,form.js-form-single-save');\n\t\tforms.each((i, form) => {\n\t\t\tform = $(form);\n\t\t\tlet validationForm = false;\n\t\t\tif (form.hasClass('js-validate-form')) {\n\t\t\t\tform.validationEngine(app.validationEngineOptions);\n\t\t\t\tvalidationForm = true;\n\t\t\t}\n\t\t\tif (form.hasClass('js-form-single-save')) {\n\t\t\t\tform.find('select,input').on('change', function () {\n\t\t\t\t\tlet element = $(this);\n\t\t\t\t\tif (validationForm && element.validationEngine('validate')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t});\n\t\t\t\t\tlet formData = form.serializeFormData();\n\t\t\t\t\tlet name = element.attr('name').replace('[]', '');\n\t\t\t\t\tformData['updateField'] = name;\n\t\t\t\t\tformData['updateValue'] = formData[name];\n\t\t\t\t\tAppConnector.request(formData)\n\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\tapp.showNotify(responseData.result.notify);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error) {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttitle: app.vtranslate('JS_UNEXPECTED_ERROR'),\n\t\t\t\t\t\t\t\ttext: error,\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (form.hasClass('js-form-ajax-submit')) {\n\t\t\t\tform.on('submit', function (e) {\n\t\t\t\t\tlet save = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (validationForm && form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\t\tapp.formAlignmentAfterValidation(form);\n\t\t\t\t\t\tsave = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (save) {\n\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t\t});\n\t\t\t\t\t\tAppConnector.request(form.serializeFormData())\n\t\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (responseData.result.closeModal) {\n\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow(null, container.closest('.js-modal-container').attr('id'));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_UNEXPECTED_ERROR'),\n\t\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\tisHidden: function (element) {\n\t\tif (element.css('display') == 'none') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tisInvisible: function (element) {\n\t\tif (element.css('visibility') == 'hidden') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\t/**\n\t * Default validation eninge options\n\t */\n\tvalidationEngineOptions: {\n\t\t// Avoid scroll decision and let it scroll up page when form is too big\n\t\t// Reference: http://www.position-absolute.com/articles/jquery-form-validator-because-form-validation-is-a-mess/\n\t\tscroll: false,\n\t\tpromptPosition: 'topLeft',\n\t\t//to support validation for select2 select box\n\t\tprettySelect: true,\n\t\tusePrefix: 's2id_'\n\t},\n\tvalidationEngineOptionsForRecord: {\n\t\tscroll: false,\n\t\tpromptPosition: 'topLeft',\n\t\t//to support validation for select2 select box\n\t\tprettySelect: true,\n\t\tusePrefix: 's2id_',\n\t\tonBeforePromptType: function (field) {\n\t\t\tvar block = field.closest('.js-toggle-panel');\n\t\t\tif (block.find('.blockContent').is(':hidden')) {\n\t\t\t\tblock.find('.blockHeader').click();\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Default scroll options\n\t */\n\tscrollOptions: {\n\t\twheelSpeed: 0.1\n\t},\n\t/**\n\t * Function to push down the error message size when validation is invoked\n\t * @params : form Element\n\t */\n\tformAlignmentAfterValidation: function (form) {\n\t\t// to avoid hiding of error message under the fixed nav bar\n\t\tvar formError = form.find(\".formError:not('.greenPopup'):first\");\n\t\tif (formError.length > 0) {\n\t\t\tvar destination = formError.offset().top;\n\t\t\tvar resizedDestnation = destination - 105;\n\t\t\t$('html').animate(\n\t\t\t\t{\n\t\t\t\t\tscrollTop: resizedDestnation\n\t\t\t\t},\n\t\t\t\t'slow'\n\t\t\t);\n\t\t}\n\t},\n\tconvertToDatePickerFormat: function (dateFormat) {\n\t\tswitch (dateFormat) {\n\t\t\tcase 'yyyy-mm-dd':\n\t\t\t\treturn 'Y-m-d';\n\t\t\tcase 'mm-dd-yyyy':\n\t\t\t\treturn 'm-d-Y';\n\t\t\tcase 'dd-mm-yyyy':\n\t\t\t\treturn 'd-m-Y';\n\t\t\tcase 'yyyy.mm.dd':\n\t\t\t\treturn 'Y.m.d';\n\t\t\tcase 'mm.dd.yyyy':\n\t\t\t\treturn 'm.d.Y';\n\t\t\tcase 'dd.mm.yyyy':\n\t\t\t\treturn 'd.m.Y';\n\t\t\tcase 'yyyy/mm/dd':\n\t\t\t\treturn 'Y/m/d';\n\t\t\tcase 'mm/dd/yyyy':\n\t\t\t\treturn 'm/d/Y';\n\t\t\tcase 'dd/mm/yyyy':\n\t\t\t\treturn 'd/m/Y';\n\t\t}\n\t},\n\tconvertTojQueryDatePickerFormat: function (dateFormat) {\n\t\tlet i,\n\t\t\tdotMode = '-';\n\t\tif (dateFormat.indexOf('-') !== -1) {\n\t\t\tdotMode = '-';\n\t\t}\n\t\tif (dateFormat.indexOf('.') !== -1) {\n\t\t\tdotMode = '.';\n\t\t}\n\t\tif (dateFormat.indexOf('/') !== -1) {\n\t\t\tdotMode = '/';\n\t\t}\n\t\tlet splitDateFormat = dateFormat.split(dotMode);\n\t\tfor (i in splitDateFormat) {\n\t\t\tlet sectionDate = splitDateFormat[i];\n\t\t\tif (sectionDate.length === 4) {\n\t\t\t\tsplitDateFormat[i] = sectionDate.substring(0, 2);\n\t\t\t}\n\t\t}\n\t\treturn splitDateFormat.join(dotMode);\n\t},\n\t/*\n\t * Converts user formated date to database format yyyy-mm-dd\n\t */\n\tgetDateInDBInsertFormat: function (dateFormat, dateString) {\n\t\tvar i = 0;\n\t\tvar dotMode = '-';\n\t\tif (dateFormat.indexOf('-') !== -1) {\n\t\t\tdotMode = '-';\n\t\t} else if (dateFormat.indexOf('.') !== -1) {\n\t\t\tdotMode = '.';\n\t\t} else if (dateFormat.indexOf('/') !== -1) {\n\t\t\tdotMode = '/';\n\t\t}\n\t\tvar dateFormatParts = dateFormat.split(dotMode);\n\t\tvar day = '',\n\t\t\tmonth = '',\n\t\t\tyear = '';\n\t\tvar dateParts = dateString.split(dotMode);\n\t\tfor (i in dateFormatParts) {\n\t\t\tvar sectionDate = dateFormatParts[i];\n\t\t\tswitch (sectionDate) {\n\t\t\t\tcase 'dd':\n\t\t\t\t\tday = dateParts[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mm':\n\t\t\t\t\tmonth = dateParts[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'yyyy':\n\t\t\t\t\tyear = dateParts[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn year + '-' + month + '-' + day;\n\t},\n\n\tregisterBlockAnimationEvent: function (container = false) {\n\t\tlet detailViewContentHolder = $('div.details div.contents');\n\t\tlet blockHeader = detailViewContentHolder.find('.blockHeader');\n\t\tif (container !== false) {\n\t\t\tblockHeader = container.find('.blockHeader');\n\t\t}\n\t\tblockHeader.on('click', function (e) {\n\t\t\tconst target = $(e.target);\n\t\t\tif (\n\t\t\t\ttarget.is('input') ||\n\t\t\t\ttarget.is('button') ||\n\t\t\t\ttarget.parents().is('button') ||\n\t\t\t\ttarget.hasClass('js-stop-propagation') ||\n\t\t\t\ttarget.parents().hasClass('js-stop-propagation')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet currentTarget = $(this).find('.js-block-toggle').not('.d-none');\n\t\t\tlet blockId = currentTarget.data('id');\n\t\t\tlet closestBlock = currentTarget.closest('.js-toggle-panel');\n\t\t\tlet bodyContents = closestBlock.find('.blockContent');\n\t\t\tlet data = currentTarget.data();\n\t\t\tlet module = app.getModuleName();\n\t\t\tif (data.mode === 'show') {\n\t\t\t\tbodyContents.addClass('d-none');\n\t\t\t\tapp.cacheSet(module + '.' + blockId, 0);\n\t\t\t\tcurrentTarget.addClass('d-none');\n\t\t\t\tclosestBlock.find('[data-mode=\"hide\"]').removeClass('d-none');\n\t\t\t} else {\n\t\t\t\tbodyContents.removeClass('d-none');\n\t\t\t\tapp.cacheSet(module + '.' + blockId, 1);\n\t\t\t\tcurrentTarget.addClass('d-none');\n\t\t\t\tclosestBlock.find('[data-mode=\"show\"]').removeClass('d-none');\n\t\t\t}\n\t\t});\n\t},\n\n\tregisterEventForDateFields: function (parentElement) {\n\t\tif (typeof parentElement === 'undefined') {\n\t\t\tparentElement = $('body');\n\t\t}\n\n\t\tparentElement = $(parentElement);\n\t\tlet element;\n\t\tif (parentElement.hasClass('dateField')) {\n\t\t\telement = parentElement;\n\t\t} else {\n\t\t\telement = $('.dateField', parentElement);\n\t\t}\n\t\telement.datepicker({ autoclose: true }).on('changeDate', function (ev) {\n\t\t\tlet currentElement = $(ev.currentTarget),\n\t\t\t\tdateFormat = currentElement.data('dateFormat').toUpperCase(),\n\t\t\t\tdate = $.datepicker.formatDate(moment(ev.date).format(dateFormat), ev.date);\n\t\t\tcurrentElement.val(date);\n\t\t});\n\t\tApp.Fields.Utils.hideMobileKeyboard(element);\n\t},\n\tregisterEventForClockPicker: function (timeInputs = $('.clockPicker')) {\n\t\tif (!timeInputs.hasClass('clockPicker')) {\n\t\t\ttimeInputs = timeInputs.find('.clockPicker');\n\t\t}\n\t\tif (!timeInputs.length) {\n\t\t\treturn;\n\t\t}\n\t\tlet params = {\n\t\t\tplacement: 'bottom',\n\t\t\tautoclose: true,\n\t\t\tminutestep: 5\n\t\t};\n\n\t\t$('.js-clock__btn').on('click', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tlet tempElement = $(e.currentTarget).closest('.time').find('input.clockPicker');\n\t\t\tif (tempElement.attr('disabled') !== 'disabled' && tempElement.attr('readonly') !== 'readonly') {\n\t\t\t\ttempElement.clockpicker('show');\n\t\t\t}\n\t\t});\n\n\t\tlet formatTimeString = (timeInput) => {\n\t\t\tif (params.twelvehour) {\n\t\t\t\tlet meridiemTime = '';\n\t\t\t\tparams.afterDone = () => {\n\t\t\t\t\t//format time string after picking a value\n\t\t\t\t\tlet timeString = timeInput.val(),\n\t\t\t\t\t\ttimeStringFormatted = timeString.slice(0, timeString.length - 2) + ' ' + meridiemTime;\n\t\t\t\t\ttimeInput.val(timeStringFormatted);\n\t\t\t\t\tapp.event.trigger('Clockpicker.changed', timeInput);\n\t\t\t\t};\n\t\t\t\tparams.beforeHide = () => {\n\t\t\t\t\tmeridiemTime = $('.clockpicker-buttons-am-pm:visible').find('a:not(.text-white-50)').text();\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tparams.afterDone = () => {\n\t\t\t\t\tapp.event.trigger('Clockpicker.changed', timeInput);\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\ttimeInputs.each((i, e) => {\n\t\t\tlet timeInput = $(e);\n\t\t\tlet formatTime = timeInputs.data('format') || CONFIG.hourFormat;\n\t\t\tparams.twelvehour = parseInt(formatTime) === 12 ? true : false;\n\t\t\tformatTimeString(timeInput);\n\t\t\ttimeInput.clockpicker(params);\n\t\t});\n\t\tApp.Fields.Utils.hideMobileKeyboard(timeInputs);\n\t},\n\tregisterDataTables: function (table, options = {}) {\n\t\tif ($.fn.dataTable == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tif (table.length == 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$.extend($.fn.dataTable.defaults, {\n\t\t\tlanguage: {\n\t\t\t\tsLengthMenu: app.vtranslate('JS_S_LENGTH_MENU'),\n\t\t\t\tsZeroRecords: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\tsInfo: app.vtranslate('JS_S_INFO'),\n\t\t\t\tsInfoEmpty: app.vtranslate('JS_S_INFO_EMPTY'),\n\t\t\t\tsSearch: app.vtranslate('JS_SEARCH'),\n\t\t\t\tsEmptyTable: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\tsInfoFiltered: app.vtranslate('JS_S_INFO_FILTERED'),\n\t\t\t\tsLoadingRecords: app.vtranslate('JS_LOADING_OF_RECORDS'),\n\t\t\t\tsProcessing: app.vtranslate('JS_LOADING_OF_RECORDS'),\n\t\t\t\toPaginate: {\n\t\t\t\t\tsFirst: app.vtranslate('JS_S_FIRST'),\n\t\t\t\t\tsPrevious: app.vtranslate('JS_S_PREVIOUS'),\n\t\t\t\t\tsNext: app.vtranslate('JS_S_NEXT'),\n\t\t\t\t\tsLast: app.vtranslate('JS_S_LAST')\n\t\t\t\t},\n\t\t\t\toAria: {\n\t\t\t\t\tsSortAscending: app.vtranslate('JS_S_SORT_ASCENDING'),\n\t\t\t\t\tsSortDescending: app.vtranslate('JS_S_SORT_DESCENDING')\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (!Object.keys(options).length) {\n\t\t\toptions = Object.assign({ searching: true, ordering: true, paging: true, info: true }, table.data());\n\t\t}\n\t\treturn table.DataTable(options);\n\t},\n\t/**\n\t * Function to get the select2 element from the raw select element\n\t * @params: select element\n\t * @return : select2Element - corresponding select2 element\n\t */\n\tgetSelect2ElementFromSelect: function (selectElement) {\n\t\tvar selectId = selectElement.attr('id');\n\t\t//since select2 will add s2id_ to the id of select element\n\t\tvar select2EleId = 'select2-' + selectId + '-container';\n\t\treturn $('#' + select2EleId).closest('.select2-container');\n\t},\n\t/**\n\t * Function to set with of the element to parent width\n\t * @params : jQuery element for which the action to take place\n\t */\n\tsetInheritWidth: function (elements) {\n\t\t$(elements).each(function (index, element) {\n\t\t\tvar parentWidth = $(element).parent().width();\n\t\t\t$(element).width(parentWidth);\n\t\t});\n\t},\n\tshowNewScrollbar: function (element, options = { wheelPropagation: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\treturn new PerfectScrollbar(element[0], Object.assign(this.scrollOptions, options));\n\t},\n\tshowNewScrollbarTopBottomRight: function (element, options = {}) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(options, this.scrollOptions);\n\t\tlet scrollbarTopLeftInit = new PerfectScrollbar(element[0], options);\n\t\tlet scrollbarTopElement = element.find('.ps__rail-x').first();\n\t\tscrollbarTopElement.css({\n\t\t\ttop: 0,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tscrollbarTopElement.find('.ps__thumb-x').css({\n\t\t\ttop: 2,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tlet scrollbarBottomRightInit = new PerfectScrollbar(element[0], options);\n\t\treturn [scrollbarTopLeftInit, scrollbarBottomRightInit];\n\t},\n\tshowNewScrollbarTopBottom: function (element, options = { wheelPropagation: true, suppressScrollY: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(options, this.scrollOptions);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tvar scrollbarTopElement = element.find('.ps__rail-x').first();\n\t\tscrollbarTopElement.css({\n\t\t\ttop: 0,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tscrollbarTopElement.find('.ps__thumb-x').css({\n\t\t\ttop: 2,\n\t\t\tbottom: 'auto'\n\t\t});\n\t},\n\tshowNewScrollbarTop: function (element, options = { wheelPropagation: true, suppressScrollY: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(this.scrollOptions, options);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tvar scrollbarTopElement = element.find('.ps__rail-x').first();\n\t\tscrollbarTopElement.css({\n\t\t\ttop: 0,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tscrollbarTopElement.find('.ps__thumb-x').css({\n\t\t\ttop: 2,\n\t\t\tbottom: 'auto'\n\t\t});\n\t},\n\tshowNewScrollbarLeft: function (element, options = { wheelPropagation: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(this.scrollOptions, options);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tvar scrollbarLeftElement = element.children('.ps__rail-y').first();\n\t\tscrollbarLeftElement.css({\n\t\t\tleft: 0,\n\t\t\tright: 'auto'\n\t\t});\n\t\tscrollbarLeftElement.find('.ps__thumb-y').css({\n\t\t\tleft: 2,\n\t\t\tright: 'auto'\n\t\t});\n\t},\n\tshowScrollBar: function (element, options = {}) {\n\t\tif (typeof options.height === 'undefined') options.height = element.css('height');\n\t\treturn element.slimScroll(options);\n\t},\n\t/**\n\t * Register middle scroll hack for scrollbar libraries\n\t * @param {jQuery} container\n\t */\n\tregisterMiddleClickScroll(container) {\n\t\tlet middleScroll = false;\n\t\tcontainer.on('mousedown', (e) => {\n\t\t\tlet clickedMouseButton = e.which; // get clicked button id\n\t\t\tif (clickedMouseButton == 2 && middleScroll == false) {\n\t\t\t\tmiddleScroll = true;\n\t\t\t\tlet mouseY = e.pageY,\n\t\t\t\t\tmouseX = e.pageX;\n\t\t\t\t$(document).on('mousemove', (e) => {\n\t\t\t\t\tif (middleScroll == true) {\n\t\t\t\t\t\t$('body').addClass('u-cursor-scroll-all');\n\t\t\t\t\t\tlet mouseMoveY = mouseY - e.pageY,\n\t\t\t\t\t\t\tscrollSlowerRate = 100, // higher number = slower scroll\n\t\t\t\t\t\t\tcontentScrollY = container.scrollTop(),\n\t\t\t\t\t\t\tscrollerY = contentScrollY - mouseMoveY - scrollSlowerRate,\n\t\t\t\t\t\t\tmouseMoveX = mouseX - e.pageX,\n\t\t\t\t\t\t\tcontentScrollX = container.scrollLeft(),\n\t\t\t\t\t\t\tscrollerX = contentScrollX - mouseMoveX - scrollSlowerRate;\n\t\t\t\t\t\tcontainer.scrollTop(scrollerY);\n\t\t\t\t\t\tcontainer.scrollLeft(scrollerX);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tcontainer.on('mouseup', () => {\n\t\t\t$('body').removeClass('u-cursor-scroll-all');\n\t\t\tmiddleScroll = false;\n\t\t});\n\t},\n\t/**\n\t * Function returns translated string\n\t */\n\tvtranslate: function (key) {\n\t\tif (key in LANG) {\n\t\t\treturn LANG[key];\n\t\t}\n\t\treturn key;\n\t},\n\t/*\n\t * Cache API on client-side\n\t */\n\tcacheNSKey: function (key) {\n\t\t// Namespace in client-storage\n\t\treturn 'yf.' + key;\n\t},\n\tcacheGet: function (key) {\n\t\tkey = this.cacheNSKey(key);\n\t\treturn store.get(key);\n\t},\n\tcacheSet: function (key, value) {\n\t\tkey = this.cacheNSKey(key);\n\t\tstore.set(key, value);\n\t},\n\tcacheClear: function (key) {\n\t\tkey = this.cacheNSKey(key);\n\t\treturn store.remove(key);\n\t},\n\tmoduleCacheSet: function (key, value) {\n\t\tvar orgKey = key;\n\t\tkey = this.getModuleName() + '_' + key;\n\t\tthis.cacheSet(key, value);\n\n\t\tvar cacheKey = 'mCache' + this.getModuleName();\n\t\tvar moduleCache = this.cacheGet(cacheKey);\n\t\tif (moduleCache == null) {\n\t\t\tmoduleCache = [];\n\t\t} else {\n\t\t\tmoduleCache = moduleCache.split(',');\n\t\t}\n\t\tmoduleCache.push(orgKey);\n\t\tthis.cacheSet(cacheKey, Vtiger_Helper_Js.unique(moduleCache).join(','));\n\t},\n\tmoduleCacheGet: function (key) {\n\t\treturn this.cacheGet(this.getModuleName() + '_' + key);\n\t},\n\tmoduleCacheKeys: function () {\n\t\tvar cacheKey = 'mCache' + this.getModuleName();\n\t\tvar modules = this.cacheGet(cacheKey);\n\t\tif (modules) {\n\t\t\treturn modules.split(',');\n\t\t}\n\t\treturn [];\n\t},\n\tmoduleCacheClear: function (key) {\n\t\tvar thisInstance = this;\n\t\tvar moduleName = this.getModuleName();\n\t\tvar cacheKey = 'mCache' + moduleName;\n\t\tvar moduleCache = this.cacheGet(cacheKey);\n\t\tif (moduleCache == null) {\n\t\t\tmoduleCache = [];\n\t\t} else {\n\t\t\tmoduleCache = moduleCache.split(',');\n\t\t}\n\t\t$.each(moduleCache, function (index, value) {\n\t\t\tthisInstance.cacheClear(moduleName + '_' + value);\n\t\t});\n\t\tthisInstance.cacheClear(cacheKey);\n\t},\n\thtmlEncode: function (value) {\n\t\tif (value) {\n\t\t\treturn $('<div />').text(value).html();\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t},\n\thtmlDecode: function (value) {\n\t\tif (value) {\n\t\t\treturn $('<div />').html(value).text();\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t},\n\t/**\n\t * Function places an element at the center of the page\n\t * @param <jQuery Element> element\n\t */\n\tplaceAtCenter: function (element) {\n\t\telement.css('position', 'absolute');\n\t\telement.css('top', ($(window).height() - element.outerHeight()) / 2 + $(window).scrollTop() + 'px');\n\t\telement.css('left', ($(window).width() - element.outerWidth()) / 2 + $(window).scrollLeft() + 'px');\n\t},\n\tgetvalidationEngineOptions: function (select2Status) {\n\t\treturn Object.assign({}, app.validationEngineOptions);\n\t},\n\t/**\n\t * Function to notify UI page ready after AJAX changes.\n\t * This can help in re-registering the event handlers (which was done during ready event).\n\t */\n\tnotifyPostAjaxReady: function () {\n\t\t$(document).trigger('postajaxready');\n\t},\n\t/**\n\t * Listen to xready notiications.\n\t */\n\tlistenPostAjaxReady: function (callback) {\n\t\t$(document).on('postajaxready', callback);\n\t},\n\t/**\n\t * Form function handlers\n\t */\n\tsetFormValues: function (kv) {\n\t\tfor (var k in kv) {\n\t\t\t$(k).val(kv[k]);\n\t\t}\n\t},\n\tsetRTEValues: function (kv) {\n\t\tfor (var k in kv) {\n\t\t\tvar rte = CKEDITOR.instances[k];\n\t\t\tif (rte) rte.setData(kv[k]);\n\t\t}\n\t},\n\t/**\n\t * Function returns the javascript controller based on the current view\n\t */\n\tgetPageController: function () {\n\t\tif (window.pageController) {\n\t\t\treturn window.pageController;\n\t\t}\n\t\tconst moduleName = app.getModuleName();\n\t\tconst view = app.getViewName();\n\t\tconst parentModule = app.getParentModuleName();\n\t\tlet moduleClassName = parentModule + '_' + moduleName + '_' + view + '_Js';\n\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\tmoduleClassName = parentModule + '_Vtiger_' + view + '_Js';\n\t\t}\n\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\tmoduleClassName = moduleName + '_' + view + '_Js';\n\t\t}\n\t\tvar extendModules = $('#extendModules').val();\n\t\tif (typeof window[moduleClassName] === 'undefined' && extendModules != undefined) {\n\t\t\tmoduleClassName = extendModules + '_' + view + '_Js';\n\t\t}\n\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\tmoduleClassName = 'Vtiger_' + view + '_Js';\n\t\t}\n\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\tif (typeof window[moduleClassName] === 'function') {\n\t\t\t\treturn (window.pageController = new window[moduleClassName]());\n\t\t\t}\n\t\t\tif (typeof window[moduleClassName] === 'object') {\n\t\t\t\treturn (window.pageController = window[moduleClassName]);\n\t\t\t}\n\t\t}\n\t\tlet moduleBaseClassName = parentModule + '_' + moduleName + '_' + 'Index_Js';\n\t\tif (typeof window[moduleBaseClassName] !== 'undefined') {\n\t\t\tif (typeof window[moduleBaseClassName] === 'function') {\n\t\t\t\treturn (window.pageController = new window[moduleBaseClassName]());\n\t\t\t}\n\t\t\tif (typeof window[moduleBaseClassName] === 'object') {\n\t\t\t\treturn (window.pageController = window[moduleBaseClassName]);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Function to decode the encoded htmlentities values\n\t */\n\tgetDecodedValue: function (value) {\n\t\treturn $('<div></div>').html(value).text();\n\t},\n\tgetCookie: function (c_name) {\n\t\tvar c_value = document.cookie;\n\t\tvar c_start = c_value.indexOf(' ' + c_name + '=');\n\t\tif (c_start === -1) {\n\t\t\tc_start = c_value.indexOf(c_name + '=');\n\t\t}\n\t\tif (c_start === -1) {\n\t\t\tc_value = null;\n\t\t} else {\n\t\t\tc_start = c_value.indexOf('=', c_start) + 1;\n\t\t\tvar c_end = c_value.indexOf(';', c_start);\n\t\t\tif (c_end === -1) {\n\t\t\t\tc_end = c_value.length;\n\t\t\t}\n\t\t\tc_value = unescape(c_value.substring(c_start, c_end));\n\t\t}\n\t\treturn c_value;\n\t},\n\tsetCookie: function (c_name, value, exdays) {\n\t\tvar exdate = new Date();\n\t\texdate.setDate(exdate.getDate() + exdays);\n\t\tvar c_value = escape(value) + (exdays == null ? '' : '; expires=' + exdate.toUTCString());\n\t\tdocument.cookie = c_name + '=' + c_value;\n\t},\n\tgetUrlVar: function (varName) {\n\t\tvar getVar = function () {\n\t\t\tvar vars = {};\n\t\t\twindow.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\t\t\t\tvars[key] = value;\n\t\t\t});\n\t\t\treturn vars;\n\t\t};\n\n\t\treturn getVar()[varName];\n\t},\n\tgetStringDate: function (date) {\n\t\tvar d = date.getDate();\n\t\tvar m = date.getMonth() + 1;\n\t\tvar y = date.getFullYear();\n\n\t\td = d <= 9 ? '0' + d : d;\n\t\tm = m <= 9 ? '0' + m : m;\n\t\treturn y + '-' + m + '-' + d;\n\t},\n\tformatDate: function (date) {\n\t\tvar y = date.getFullYear(),\n\t\t\tm = date.getMonth() + 1,\n\t\t\td = date.getDate(),\n\t\t\th = date.getHours(),\n\t\t\ti = date.getMinutes(),\n\t\t\ts = date.getSeconds();\n\t\treturn (\n\t\t\ty +\n\t\t\t'-' +\n\t\t\tthis.formatDateZ(m) +\n\t\t\t'-' +\n\t\t\tthis.formatDateZ(d) +\n\t\t\t' ' +\n\t\t\tthis.formatDateZ(h) +\n\t\t\t':' +\n\t\t\tthis.formatDateZ(i) +\n\t\t\t':' +\n\t\t\tthis.formatDateZ(s)\n\t\t);\n\t},\n\tformatDateZ: function (i) {\n\t\treturn i <= 9 ? '0' + i : i;\n\t},\n\thowManyDaysFromDate: function (time) {\n\t\tvar fromTime = time.getTime();\n\t\tvar today = new Date();\n\t\tvar toTime = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime();\n\t\treturn Math.floor((toTime - fromTime) / (1000 * 60 * 60 * 24)) + 1;\n\t},\n\tsaveAjax: function (mode, param, addToParams) {\n\t\tvar aDeferred = $.Deferred();\n\t\tvar params = {};\n\t\tparams['module'] = app.getModuleName();\n\t\tparams['parent'] = app.getParentModuleName();\n\t\tparams['action'] = 'SaveAjax';\n\t\tif (mode) {\n\t\t\tparams['mode'] = mode;\n\t\t}\n\t\tparams['param'] = param;\n\t\tif (addToParams != undefined) {\n\t\t\tfor (var i in addToParams) {\n\t\t\t\tparams[i] = addToParams[i];\n\t\t\t}\n\t\t}\n\t\tAppConnector.request(params)\n\t\t\t.done(function (data) {\n\t\t\t\taDeferred.resolve(data);\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\t/**\n\t * Hack for Safari breaking down, when sending empty file input\n\t * @param html\n\t */\n\tremoveEmptyFilesInput(form) {\n\t\tfor (let i = 0; i < form.elements.length; i++) {\n\t\t\tif (form.elements[i].type === 'file') {\n\t\t\t\tif (form.elements[i].value === '') {\n\t\t\t\t\tform.elements[i].parentNode.removeChild(form.elements[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetMainParams: function (param, json) {\n\t\tif (param in CONFIG) {\n\t\t\treturn CONFIG[param];\n\t\t}\n\t\tif (app.cacheParams[param] === undefined) {\n\t\t\tapp.cacheParams[param] = $('#' + param).val();\n\t\t}\n\t\tlet value = app.cacheParams[param];\n\t\tif (json) {\n\t\t\tif (value) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t} else {\n\t\t\t\tvalue = [];\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t},\n\tsetMainParams: function (param, value) {\n\t\tapp.cacheParams[param] = value;\n\t\t$('#' + param).val(value);\n\t},\n\terrorLog: function (error, err, errorThrown) {\n\t\tif (!CONFIG.debug) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn(\n\t\t\t'%cYetiForce debug mode!!!',\n\t\t\t'color: red; font-family: sans-serif; font-size: 1.5em; font-weight: bolder; text-shadow: #000 1px 1px;'\n\t\t);\n\t\tif (typeof error === 'object' && error.responseText) {\n\t\t\terror = error.responseText;\n\t\t}\n\t\tif (typeof error === 'object' && error.statusText) {\n\t\t\terror = error.statusText;\n\t\t}\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t\tif (err && err !== 'error') {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tif (errorThrown) {\n\t\t\tconsole.error(errorThrown);\n\t\t}\n\t},\n\tregisterQuickEditModal: function (container) {\n\t\tif (typeof container === 'undefined') {\n\t\t\tcontainer = $('body');\n\t\t}\n\t\tcontainer.on('click', '.js-quick-edit-modal', function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet element = $(this);\n\t\t\tlet data = {\n\t\t\t\tmodule: element.data('module'),\n\t\t\t\trecord: element.data('record'),\n\t\t\t\tremoveFromUrl: 'step'\n\t\t\t};\n\t\t\tif (element.data('values')) {\n\t\t\t\t$.extend(data, element.data('values'));\n\t\t\t}\n\t\t\t$.each(['mandatoryFields', 'modalTitle', 'showLayout', 'editFields', 'picklistValues'], function (index, value) {\n\t\t\t\tif (element.data(value)) {\n\t\t\t\t\tdata[value] = element.data(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\tApp.Components.QuickEdit.showModal(data, element);\n\t\t});\n\t},\n\tregisterModal: function (container) {\n\t\tif (typeof container === 'undefined') {\n\t\t\tcontainer = $('body');\n\t\t}\n\t\tcontainer\n\t\t\t.off('click', 'button.showModal, a.showModal, .js-show-modal')\n\t\t\t.on('click', 'button.showModal, a.showModal, .js-show-modal', function (e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar currentElement = $(e.currentTarget);\n\t\t\t\tvar url = currentElement.data('url');\n\n\t\t\t\tif (typeof url !== 'undefined') {\n\t\t\t\t\tif (currentElement.hasClass('js-popover-tooltip')) {\n\t\t\t\t\t\tcurrentElement.popover('hide');\n\t\t\t\t\t}\n\t\t\t\t\tif (currentElement.hasClass('disabledOnClick')) {\n\t\t\t\t\t\tcurrentElement.attr('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t\tvar modalWindowParams = {\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tcb: function (container) {\n\t\t\t\t\t\t\tvar call = currentElement.data('cb');\n\t\t\t\t\t\t\tif (typeof call !== 'undefined') {\n\t\t\t\t\t\t\t\tif (call.indexOf('.') !== -1) {\n\t\t\t\t\t\t\t\t\tvar callerArray = call.split('.');\n\t\t\t\t\t\t\t\t\tif (typeof window[callerArray[0]] === 'object' || typeof window[callerArray[0]] === 'function') {\n\t\t\t\t\t\t\t\t\t\twindow[callerArray[0]][callerArray[1]](container);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (typeof window[call] === 'function') {\n\t\t\t\t\t\t\t\t\t\twindow[call](container);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentElement.removeAttr('disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tif (currentElement.data('modalid')) {\n\t\t\t\t\t\tmodalWindowParams['id'] = currentElement.data('modalid');\n\t\t\t\t\t}\n\t\t\t\t\tapp.showModalWindow(modalWindowParams);\n\t\t\t\t}\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\tcontainer.off('click', '.js-show-modal-content').on('click', '.js-show-modal-content', function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\tlet content = currentElement.data('content');\n\t\t\tlet title = '',\n\t\t\t\tmodalClass = '';\n\t\t\tif (currentElement.data('title')) {\n\t\t\t\ttitle = currentElement.data('title');\n\t\t\t}\n\t\t\tif (currentElement.data('class')) {\n\t\t\t\tmodalClass = currentElement.data('class');\n\t\t\t}\n\t\t\tapp.showModalWindow(`<div class=\"modal\" tabindex=\"-1\" role=\"dialog\"><div class=\"modal-dialog ${modalClass}\" role=\"document\"><div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\"> <h5 class=\"modal-title\">${title}</h5>\n\t\t\t  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n\t\t\t</div><div class=\"modal-body text-break\">${content}</div></div></div></div>`);\n\t\t\te.stopPropagation();\n\t\t});\n\t},\n\tplaySound: function (action) {\n\t\tvar soundsConfig = app.getMainParams('sounds');\n\t\tif (soundsConfig['IS_ENABLED']) {\n\t\t\tvar audio = new Audio(app.getMainParams('soundFilesPath') + soundsConfig[action]);\n\t\t\taudio.play();\n\t\t}\n\t},\n\tregisterIframeAndMoreContent(container = $(document)) {\n\t\tcontainer.on('click', '.js-more', (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tconst btn = $(e.currentTarget);\n\t\t\tapp.showModalWindow(\n\t\t\t\t`<div class=\"modal\" tabindex=\"-1\" role=\"dialog\"><div class=\"modal-dialog modal-fullscreen\" role=\"document\"><div class=\"modal-content js-modal-content\">\n\t\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t\t<h5 class=\"modal-title\"><span class=\"mdi mdi-overscan\"></span>${app.vtranslate('JS_FULL_TEXT')}</h5>\n\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"modal-body text-break u-word-break pb-0 pt-1\"></div>\n\t\t\t\t\t<div class=\"modal-footer py-1\">\n\t\t\t\t\t\t<button class=\"btn btn-danger\" type=\"reset\" data-dismiss=\"modal\">\n\t\t\t\t\t\t\t<span class=\"fas fa-times mr-1\"></span>${app.vtranslate('JS_CLOSE')}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div></div>`,\n\t\t\t\t(container) => {\n\t\t\t\t\tif (btn.data('iframe')) {\n\t\t\t\t\t\tlet iframe = btn.siblings('iframe');\n\t\t\t\t\t\tlet message = iframe.clone();\n\t\t\t\t\t\tlet isHidden = iframe.is(':hidden');\n\t\t\t\t\t\tlet height = 0;\n\t\t\t\t\t\tif (iframe.data('height')) {\n\t\t\t\t\t\t\tif (iframe.data('height') === 'full') {\n\t\t\t\t\t\t\t\theight = $(window).height() - 185;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\theight = iframe.data('height');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (isHidden) {\n\t\t\t\t\t\t\t\tmessage.css('display', '');\n\t\t\t\t\t\t\t\tiframe.css('display', '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\theight = iframe.contents().height() ?? iframe.contents().find('body').height();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (height) {\n\t\t\t\t\t\t\tmessage.height(height);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isHidden) {\n\t\t\t\t\t\t\tiframe.css('display', 'none');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontainer.find('.modal-body').html(message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.find('.modal-body').html(btn.closest('.js-more-content').find('.fullContent').html());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t},\n\tregisterIframeEvents(content) {\n\t\tcontent.find('.js-iframe-full-height').each(function () {\n\t\t\tlet iframe = $(this);\n\t\t\tiframe.on('load', (e) => {\n\t\t\t\tiframe.height(iframe.contents().find('body').height() + 50);\n\t\t\t});\n\t\t});\n\t\tcontent.find('.js-modal-iframe').each(function () {\n\t\t\tlet iframe = $(this);\n\t\t\tiframe.on('load', (e) => {\n\t\t\t\tlet height = iframe.contents().find('body').height();\n\t\t\t\tif (height && height < iframe.height()) {\n\t\t\t\t\tiframe.height(height + 50);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\tregisterMenu: function () {\n\t\tconst self = this;\n\t\tself.keyboard = { DOWN: 40, ESCAPE: 27, LEFT: 37, RIGHT: 39, SPACE: 32, UP: 38 };\n\t\tself.sidebarBtn = $('.js-sidebar-btn').first();\n\t\tself.sidebar = $('.js-sidebar').first();\n\t\tself.sidebarBtn.on('click', self.toggleSidebar.bind(self));\n\t\t$(`a.nav-link,[tabindex],input,select,textarea,button`).on('focus', (e) => {\n\t\t\tif (self.sidebarBtn[0] == e.target || self.sidebar.find(e.target).length) return;\n\t\t\tif (self.sidebar.find(':focus').length) {\n\t\t\t\tself.openSidebar();\n\t\t\t} else if (self.sidebar.hasClass('js-expand')) {\n\t\t\t\tself.closeSidebar();\n\t\t\t}\n\t\t});\n\t\tself.sidebar.on('mouseenter', self.openSidebar.bind(self)).on('mouseleave', self.closeSidebar.bind(self));\n\t\tself.sidebar.find('.js-menu__content').on('keydown', self.sidebarKeyboard.bind(self));\n\t\tself.sidebar.on('keydown', (e) => {\n\t\t\tif (e.which == self.keyboard.ESCAPE) {\n\t\t\t\tself.closeSidebar();\n\t\t\t\tif (self.sidebarBtn.is(':tabbable')) self.sidebarBtn.focus();\n\t\t\t\telse\n\t\t\t\t\t$(':tabbable')\n\t\t\t\t\t\t.eq(parseInt($(':tabbable').index(self.sidebar.find(':tabbable').last())) + 1)\n\t\t\t\t\t\t.focus();\n\t\t\t}\n\t\t});\n\t\t$('.js-submenu-toggler').on('click', (e) => {\n\t\t\tif (!$(e.currentTarget).hasClass('collapsed') && !$(e.target).closest('.toggler').length) {\n\t\t\t\twindow.location = $(e.currentTarget).attr('href');\n\t\t\t}\n\t\t});\n\t\tself.registerPinEvent();\n\t},\n\topenSidebar: function () {\n\t\tthis.sidebar.addClass('js-expand');\n\t\tthis.sidebarBtn.attr('aria-expanded', true);\n\t},\n\tcloseSidebar: function () {\n\t\tthis.sidebar.removeClass('js-expand');\n\t\tthis.sidebarBtn.attr('aria-expanded', false);\n\t},\n\ttoggleSidebar: function () {\n\t\tif (this.sidebar.hasClass('js-expand')) {\n\t\t\tthis.closeSidebar();\n\t\t} else {\n\t\t\tthis.openSidebar();\n\t\t\tthis.sidebar.find('.js-menu__content :tabbable').first().focus();\n\t\t}\n\t},\n\tregisterPinEvent: function () {\n\t\tconst self = this;\n\t\tlet pinButton = self.sidebar.find('.js-menu--pin');\n\t\tlet baseContainer = self.sidebar.closest('.js-base-container');\n\t\tpinButton.on('click', () => {\n\t\t\tlet hideMenu = 0;\n\t\t\tbaseContainer.removeClass('c-menu--animation');\n\t\t\tif (pinButton.attr('data-show') === '0') {\n\t\t\t\thideMenu = 'on';\n\t\t\t\tpinButton.removeClass('u-opacity-muted');\n\t\t\t\tbaseContainer.addClass('c-menu--open');\n\t\t\t\tself.sidebar.off('mouseleave mouseenter');\n\t\t\t} else {\n\t\t\t\tpinButton.addClass('u-opacity-muted');\n\t\t\t\tbaseContainer.removeClass('c-menu--open');\n\t\t\t\tself.sidebar.on('mouseenter', self.openSidebar.bind(self)).on('mouseleave', self.closeSidebar.bind(self));\n\t\t\t\tself.closeSidebar.bind(self);\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\tmodule: 'Users',\n\t\t\t\taction: 'SaveAjax',\n\t\t\t\tfield: 'leftpanelhide',\n\t\t\t\trecord: CONFIG.userId,\n\t\t\t\tvalue: hideMenu\n\t\t\t}).done(function (responseData) {\n\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\tpinButton.attr('data-show', hideMenu);\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tbaseContainer.addClass('c-menu--animation');\n\t\t\t}, 300);\n\t\t});\n\t},\n\tsidebarKeyboard: function (e) {\n\t\tlet target = $(e.target);\n\t\tif (e.which == this.keyboard.LEFT) {\n\t\t\tif (target.hasClass('js-submenu-toggler') && !target.hasClass('collapsed')) {\n\t\t\t\ttarget.click();\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tlet toggler = $(e.target).closest('.js-submenu').prev('.js-submenu-toggler');\n\t\t\t\tif (toggler.length && !toggler.hasClass('collapsed')) {\n\t\t\t\t\ttoggler.click().focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\n\t\t\t(target.hasClass('js-submenu-toggler') && e.which == this.keyboard.RIGHT && target.hasClass('collapsed')) ||\n\t\t\t(target.hasClass('js-submenu-toggler') && e.which == this.keyboard.SPACE)\n\t\t) {\n\t\t\ttarget.click();\n\t\t\treturn false;\n\t\t} else if (e.which == this.keyboard.UP) {\n\t\t\tthis.sidebar\n\t\t\t\t.find('.js-menu__content :tabbable')\n\t\t\t\t.eq(parseInt(this.sidebar.find('.js-menu__content :tabbable').index(target)) - 1)\n\t\t\t\t.focus();\n\t\t\treturn false;\n\t\t} else if (e.which == this.keyboard.DOWN) {\n\t\t\tthis.sidebar\n\t\t\t\t.find('.js-menu__content :tabbable')\n\t\t\t\t.eq(parseInt(this.sidebar.find('.js-menu__content :tabbable').index(target)) + 1)\n\t\t\t\t.focus();\n\t\t\treturn false;\n\t\t}\n\t},\n\tregisterTabdrop: function () {\n\t\tlet tabs = $('.js-tabdrop');\n\t\tif (!tabs.length) return;\n\t\tlet tab = tabs.find('> li');\n\t\ttab.each(function () {\n\t\t\t$(this).removeClass('d-none');\n\t\t});\n\t\ttabs.tabdrop({\n\t\t\ttext: app.vtranslate('JS_MORE')\n\t\t});\n\t\t//change position to the last element (wcag keyboard navigation)\n\t\tlet dropdown = tabs.find('> li.dropdown');\n\t\tdropdown.appendTo(tabs);\n\t\t//fix for toggle button text not changing\n\t\ttab.on('click', function (e) {\n\t\t\tsetTimeout(function () {\n\t\t\t\t$(window).trigger('resize');\n\t\t\t}, 500);\n\t\t});\n\t\t$(window).trigger('resize');\n\t},\n\tgetScreenHeight: function (percantage) {\n\t\tif (typeof percantage === 'undefined') {\n\t\t\tpercantage = 100;\n\t\t}\n\t\treturn ($(window).height() * percantage) / 100;\n\t},\n\tclearBrowsingHistory: function () {\n\t\tAppConnector.request({\n\t\t\tmodule: 'Home',\n\t\t\taction: 'BrowsingHistory'\n\t\t}).done(function (response) {\n\t\t\t$('.historyList').html(\n\t\t\t\t`<a class=\"item dropdown-item\" href=\"#\" role=\"listitem\">${app.vtranslate('JS_NO_RECORDS')}</a>`\n\t\t\t);\n\t\t});\n\t},\n\t/**\n\t * Open url in top window\n\t * @param string url\n\t */\n\topenUrl(url) {\n\t\tif (CONFIG.openUrlTarget === 'parentIframe') {\n\t\t\twindow.parent.location.href = url;\n\t\t} else {\n\t\t\twindow.location.href = url;\n\t\t}\n\t},\n\topenUrlMethodPost(url, postData = {}, formAttr = {}) {\n\t\t$.extend(formAttr, {\n\t\t\tmethod: 'post',\n\t\t\taction: url,\n\t\t\tstyle: 'display:none;'\n\t\t});\n\t\tlet form = $('<form></form>', formAttr);\n\t\tif (typeof csrfMagicName !== 'undefined') {\n\t\t\tpostData[csrfMagicName] = csrfMagicToken;\n\t\t}\n\t\t$.each(postData, (index, value) => {\n\t\t\tlet input = $(document.createElement('input'));\n\t\t\tinput.attr('type', 'hidden');\n\t\t\tinput.attr('name', index);\n\t\t\tinput.val(value);\n\t\t\tform.append(input);\n\t\t});\n\t\t$('body').append(form);\n\t\tform.submit();\n\t\tform.remove();\n\t},\n\t/**\n\t * Convert url string to object\n\t *\n\t * @param   {string}  url  example: index.php?module=LayoutEditor&parent=Settings\n\t */\n\tchangeUrl(params) {\n\t\tlet fullUrl = '';\n\t\tif (params.data && typeof params.data.historyUrl !== 'undefined') {\n\t\t\tfullUrl = params.data.historyUrl;\n\t\t}\n\t\tif (fullUrl === '') {\n\t\t\tif (params.data) {\n\t\t\t\tif (typeof params.data == 'string') {\n\t\t\t\t\tfullUrl = 'index.php?' + params.data;\n\t\t\t\t} else {\n\t\t\t\t\tfullUrl = 'index.php?' + $.param(params.data);\n\t\t\t\t}\n\t\t\t} else if (typeof params === 'object') {\n\t\t\t\tfullUrl = 'index.php?' + $.param(params);\n\t\t\t}\n\t\t} else if (fullUrl.indexOf('index.php?') === -1) {\n\t\t\tfullUrl = 'index.php?' + fullUrl;\n\t\t}\n\t\tif (app.isWindowTop() && history && history.pushState && fullUrl !== '') {\n\t\t\tif (!history.state) {\n\t\t\t\tlet currentHref = window.location.href;\n\t\t\t\thistory.replaceState(currentHref, 'title 1', currentHref);\n\t\t\t}\n\t\t\thistory.pushState(fullUrl, 'title 2', fullUrl);\n\t\t}\n\t},\n\t/**\n\t * Convert url string to object\n\t *\n\t * @param   {string}  url  example: index.php?module=LayoutEditor&parent=Settings\n\t *\n\t * @return  {object}       urlObject\n\t */\n\tconvertUrlToObject(url) {\n\t\tlet urlObject = {};\n\t\tif (url.indexOf('index.php?') !== -1) {\n\t\t\turl = url.split('index.php?')[1];\n\t\t}\n\t\turl.split('&').forEach((el) => {\n\t\t\tif (el.includes('=')) {\n\t\t\t\tlet values = el.split('=');\n\t\t\t\turlObject[values[0]] = values[1];\n\t\t\t}\n\t\t});\n\t\treturn urlObject;\n\t},\n\t/**\n\t * Convert object to url string\n\t *\n\t * @param   {object}  urlData\n\t * @param   {string}  entryFile\n\t *\n\t * @return  {string}          url\n\t */\n\tconvertObjectToUrl(urlData = {}, entryFile = 'index.php?') {\n\t\tlet url = entryFile;\n\t\tObject.keys(urlData).forEach((key) => {\n\t\t\tlet value = urlData[key];\n\t\t\tif (typeof value === 'object' || (typeof value === 'string' && value.startsWith('<'))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\turl += key + '=' + value + '&';\n\t\t});\n\t\treturn url;\n\t},\n\tformatToHourText: function (decTime, type = 'short', withSeconds = false, withMinutes = true) {\n\t\tconst short = type === 'short';\n\t\tconst hour = Math.floor(decTime);\n\t\tconst min = Math.floor((decTime - hour) * 60);\n\t\tconst sec = Math.round(((decTime - hour) * 60 - min) * 60);\n\t\tlet result = '';\n\t\tif (hour) {\n\t\t\tresult += short ? hour + app.vtranslate('JS_H') : `${hour} ` + app.vtranslate('JS_H_LONG');\n\t\t}\n\t\tif ((hour || min) && withMinutes) {\n\t\t\tresult += short ? ` ${min}` + app.vtranslate('JS_M') : ` ${min} ` + app.vtranslate('JS_M_LONG');\n\t\t}\n\t\tif (withSeconds !== false) {\n\t\t\tresult += short ? ` ${sec}` + app.vtranslate('JS_S') : ` ${sec} ` + app.vtranslate('JS_S_LONG');\n\t\t}\n\t\tif (!hour && !min && withSeconds === false && withMinutes) {\n\t\t\tresult += short ? '0' + app.vtranslate('JS_M') : '0 ' + app.vtranslate('JS_M_LONG');\n\t\t}\n\t\tif (!hour && !min && withSeconds === false && !withMinutes) {\n\t\t\tresult += short ? '0' + app.vtranslate('JS_H') : '0 ' + app.vtranslate('JS_H_LONG');\n\t\t}\n\t\treturn result.trim();\n\t},\n\tshowRecordsList: function (params, cb, afterShowModal) {\n\t\tif (typeof params === 'object' && !params.view) {\n\t\t\tparams.view = 'RecordsList';\n\t\t}\n\t\tthis.showRecordsListModal(params).done(function (modal) {\n\t\t\tif (typeof afterShowModal === 'function') {\n\t\t\t\tafterShowModal(modal);\n\t\t\t}\n\t\t\tapp.registerModalController(false, modal, cb);\n\t\t});\n\t},\n\t/**\n\t * Show records list modal\n\t * @param {object} params\n\t * @returns {Promise}\n\t */\n\tshowRecordsListModal: function (params) {\n\t\tconst aDeferred = $.Deferred();\n\t\tAppConnector.request(params)\n\t\t\t.done(function (requestData) {\n\t\t\t\tapp.showModalWindow(requestData, function (modal) {\n\t\t\t\t\taDeferred.resolve(modal);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\t/**\n\t * Convert html content to base64 image\n\t * This function can be used in promise chain or with callback if specified\n\t *\n\t * @param {HTMLElement} element\n\t * @param {function} callback with imageString argument which contains an image in base64 string format\n\t * @param {object} options see: https://html2canvas.hertzen.com/configuration , imageType is our custom option\n\t * @return {Promise} with base64 string image as argument\n\t */\n\thtmlToImage(element, callback, options = { imageType: 'image/png', logging: false }) {\n\t\telement = $(element).get(0); // make sure we have HTMLElement not jQuery because it will not work\n\t\tconst imageType = options.imageType;\n\t\tdelete options.imageType;\n\t\treturn html2canvas(element, options).then((canvas) => {\n\t\t\tconst base64Image = canvas.toDataURL(imageType);\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback(base64Image);\n\t\t\t}\n\t\t\treturn base64Image;\n\t\t});\n\t},\n\tregisterHtmlToImageDownloader: function (container) {\n\t\tconst self = this;\n\t\tcontainer.on('click', '.js-download-html', function (e) {\n\t\t\tlet element = $(this);\n\t\t\tlet fileName = element.data('fileName');\n\t\t\tself.htmlToImage($(element.data('html'))).then((img) => {\n\t\t\t\t$(`<a href=\"${img}\" download=\"${fileName}.png\"></a>`).get(0).click();\n\t\t\t});\n\t\t});\n\t},\n\tdecodeHTML(html) {\n\t\tvar txt = document.createElement('textarea');\n\t\ttxt.innerHTML = html;\n\t\treturn txt.value;\n\t},\n\tshowAlert: function (text) {\n\t\treturn this.showNotify({\n\t\t\ttitle: text,\n\t\t\ttype: 'error',\n\t\t\tcloser: false,\n\t\t\tsticker: false,\n\t\t\tdestroy: false,\n\t\t\tmodules: new Map([\n\t\t\t\t...PNotify.defaultModules,\n\t\t\t\t[\n\t\t\t\t\tPNotifyConfirm,\n\t\t\t\t\t{\n\t\t\t\t\t\tconfirm: true,\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_OK'),\n\t\t\t\t\t\t\t\tprimary: true,\n\t\t\t\t\t\t\t\tclick: (notice) => notice.close()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]),\n\t\t\tstack: new PNotify.Stack({\n\t\t\t\tdir1: 'down',\n\t\t\t\tmodal: true,\n\t\t\t\tfirstpos1: 25,\n\t\t\t\toverlayClose: false\n\t\t\t})\n\t\t});\n\t},\n\tshowNotify: function (customParams) {\n\t\tlet params = {\n\t\t\thide: false\n\t\t};\n\t\tlet userParams = customParams;\n\t\tlet type = 'info';\n\t\tif (typeof customParams === 'string') {\n\t\t\tuserParams = {\n\t\t\t\ttitle: customParams\n\t\t\t};\n\t\t}\n\t\tif (typeof customParams.type !== 'undefined') {\n\t\t\ttype = customParams.type;\n\t\t}\n\t\tif (type !== 'error') {\n\t\t\tparams.hide = true;\n\t\t}\n\t\treturn PNotify[type]($.extend(params, userParams));\n\t},\n\t/**\n\t * Set Pnotify defaults options\n\t */\n\tsetPnotifyDefaultOptions() {\n\t\tPNotify.defaults.textTrusted = true; // *Trusted option enables html as parameter's value\n\t\tPNotify.defaults.titleTrusted = true;\n\t\tPNotify.defaults.sticker = false;\n\t\tPNotify.defaults.styling = 'bootstrap4';\n\t\tPNotify.defaults.icons = 'fontawesome5';\n\t\tPNotify.defaults.delay = 3000;\n\t\tPNotify.defaults.stack.maxOpen = 10;\n\t\tPNotify.defaults.stack.spacing1 = 5;\n\t\tPNotify.defaults.stack.spacing2 = 5;\n\t\tPNotify.defaults.labels.close = app.vtranslate('JS_CLOSE');\n\t\tPNotify.defaultModules.set(PNotifyBootstrap4, {});\n\t\tPNotify.defaultModules.set(PNotifyFontAwesome5, {});\n\t\tPNotify.defaultModules.set(PNotifyMobile, {});\n\t},\n\tshowConfirmModal: function (params) {\n\t\tlet confirmButtonLabel = 'JS_OK';\n\t\tlet rejectedButtonLabel = 'JS_CANCEL';\n\t\tif (typeof params.confirmButtonLabel !== 'undefined') {\n\t\t\tconfirmButtonLabel = params.confirmButtonLabel;\n\t\t}\n\t\tif (typeof params.rejectedButtonLabel !== 'undefined') {\n\t\t\trejectedButtonLabel = params.rejectedButtonLabel;\n\t\t}\n\t\treturn this.showNotify(\n\t\t\t$.extend(\n\t\t\t\t{\n\t\t\t\t\ticon: 'fas fa-question-circle',\n\t\t\t\t\tcloser: false,\n\t\t\t\t\tsticker: false,\n\t\t\t\t\tdestroy: false,\n\t\t\t\t\thide: false,\n\t\t\t\t\twidth: 'auto',\n\t\t\t\t\tanimateSpeed: 'fast',\n\t\t\t\t\taddModalClass: 'c-confirm-modal',\n\t\t\t\t\tmodules: new Map([\n\t\t\t\t\t\t...PNotify.defaultModules,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tPNotifyConfirm,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconfirm: true,\n\t\t\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttext: '<span class=\"fas fa-check mr-2\"></span>' + app.vtranslate(confirmButtonLabel),\n\t\t\t\t\t\t\t\t\t\ttextTrusted: true,\n\t\t\t\t\t\t\t\t\t\tprimary: true,\n\t\t\t\t\t\t\t\t\t\tpromptTrigger: true,\n\t\t\t\t\t\t\t\t\t\tclick: function (notice) {\n\t\t\t\t\t\t\t\t\t\t\tif (typeof params.confirmedCallback !== 'undefined') {\n\t\t\t\t\t\t\t\t\t\t\t\tparams.confirmedCallback(notice);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tnotice.close();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttext: '<span class=\"fas fa-times mr-2\"></span>' + app.vtranslate(rejectedButtonLabel),\n\t\t\t\t\t\t\t\t\t\ttextTrusted: true,\n\t\t\t\t\t\t\t\t\t\tclick: function (notice) {\n\t\t\t\t\t\t\t\t\t\t\tif (typeof params.rejectedCallback !== 'undefined') {\n\t\t\t\t\t\t\t\t\t\t\t\tparams.rejectedCallback(notice);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tnotice.close();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t]),\n\t\t\t\t\tstack: new PNotify.Stack({\n\t\t\t\t\t\tdir1: 'down',\n\t\t\t\t\t\tfirstpos1: 50,\n\t\t\t\t\t\tspacing1: 0,\n\t\t\t\t\t\tpush: 'top',\n\t\t\t\t\t\tmodal: true,\n\t\t\t\t\t\toverlayClose: false\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tparams\n\t\t\t)\n\t\t);\n\t},\n\tregistesterScrollbar(container) {\n\t\tcontainer.find('.js-scrollbar').each(function () {\n\t\t\tlet element = $(this),\n\t\t\t\tscrollbarFnName = element.data('scrollbarFnName');\n\n\t\t\tif (typeof app[scrollbarFnName] === 'function') {\n\t\t\t\tapp[scrollbarFnName](element);\n\t\t\t} else {\n\t\t\t\tapp.showNewScrollbar(element);\n\t\t\t}\n\t\t});\n\t},\n\tregisterPopover(container = $(document)) {\n\t\twindow.popoverCache = {};\n\t\tcontainer.on('mousemove', (e) => {\n\t\t\tapp.mousePosition = { x: e.pageX, y: e.pageY };\n\t\t});\n\t\tcontainer.on(\n\t\t\t'mouseenter',\n\t\t\t'.js-popover-tooltip, .js-popover-tooltip--record, .js-popover-tooltip--ellipsis, [data-field-type=\"reference\"], [data-field-type=\"multireference\"]',\n\t\t\t(e) => {\n\t\t\t\tlet currentTarget = $(e.currentTarget);\n\t\t\t\tif (!currentTarget.hasClass('popover-triggered')) {\n\t\t\t\t\tif (currentTarget.hasClass('js-popover-tooltip--record')) {\n\t\t\t\t\t\tapp.registerPopoverRecord(currentTarget, {}, container);\n\t\t\t\t\t\tcurrentTarget.trigger('mouseenter');\n\t\t\t\t\t} else if (!currentTarget.hasClass('js-popover-tooltip--record') && currentTarget.data('field-type')) {\n\t\t\t\t\t\tapp.registerPopoverRecord(currentTarget.children('a'), {}, container); //popoverRecord on children doesn't need triggering\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!currentTarget.hasClass('js-popover-tooltip--record') &&\n\t\t\t\t\t\t!currentTarget.find('.js-popover-tooltip--record').length &&\n\t\t\t\t\t\t!currentTarget.data('field-type')\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (currentTarget.hasClass('js-popover-tooltip--ellipsis')) {\n\t\t\t\t\t\t\tapp.registerPopoverEllipsis({ element: currentTarget, container });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapp.showPopoverElementView(currentTarget);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentTarget.trigger('mouseenter');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\t/**\n\t * Register auto format number value\n\t */\n\tregisterFormatNumber() {\n\t\t$(document).on('focusout', '.js-format-numer', (e) => {\n\t\t\t$(e.currentTarget).formatNumber();\n\t\t});\n\t},\n\t/**\n\t * Register toggle icon click event\n\t * @param container\n\t */\n\tregisterToggleIconClick(container) {\n\t\tcontainer.on('click', '.js-toggle-icon, .js-toggle-icon__container', (e) => {\n\t\t\tlet icon = $(e.target);\n\t\t\tif (icon.hasClass('js-toggle-icon__container')) {\n\t\t\t\ticon = icon.find('.js-toggle-icon');\n\t\t\t}\n\t\t\tlet iconData = icon.data();\n\t\t\ticon.toggleClass(`${iconData.active} ${iconData.inactive}`);\n\t\t\te.stopPropagation();\n\t\t});\n\t},\n\tstripHtml(html) {\n\t\tconst temporalDiv = document.createElement('div');\n\t\ttemporalDiv.innerHTML = html;\n\t\treturn temporalDiv.textContent || temporalDiv.innerText || '';\n\t},\n\tregisterShowHideBlock(container) {\n\t\tcontainer.on('click', '.js-hb__btn', (e) => {\n\t\t\t$(e.currentTarget).closest('.js-hb__container').toggleClass('u-hidden-block__opened');\n\t\t});\n\t\tcontainer.find('.js-fab__container').on('clickoutside', (e) => {\n\t\t\t$(e.currentTarget).removeClass('u-hidden-block__opened');\n\t\t});\n\t},\n\tprocessEvents: false,\n\tregisterAfterLoginEvents: function () {\n\t\tif (this.processEvents === false) {\n\t\t\tlet processEvents = $('#processEvents');\n\t\t\tif (processEvents.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.processEvents = JSON.parse(processEvents.val());\n\t\t}\n\t\tif (this.processEvents.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet event = this.processEvents.shift();\n\t\tswitch (event.type) {\n\t\t\tcase 'modal':\n\t\t\t\tAppConnector.request(event.url)\n\t\t\t\t\t.done(function (requestData) {\n\t\t\t\t\t\tapp.showModalWindow(requestData).one('hidden.bs.modal', function () {\n\t\t\t\t\t\t\tapp.registerAfterLoginEvents();\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttitle: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\ttext: errorThrown,\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'notify':\n\t\t\t\tapp.showNotify(event.notify);\n\t\t\t\tapp.registerAfterLoginEvents();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t},\n\t/**\n\t * Function to reload view after save event\n\t *\n\t * @param {object} responseData - Save responses data.\n\t * @param {object} params - Save params.\n\t * @param {jQuery} form - Jquery form container.\n\t * @param {jQuery} element - Jquery trigger element.\n\t */\n\treloadAfterSave: function (responseData, params, form, element) {\n\t\tconst moduleName = params['module'];\n\t\tconst parentModuleName = app.getModuleName();\n\t\tconst viewName = app.getViewName();\n\t\tif ('List' === viewName) {\n\t\t\tif (moduleName === parentModuleName) {\n\t\t\t\tapp.pageController.getListViewRecords();\n\t\t\t}\n\t\t} else if ('Kanban' === viewName) {\n\t\t\tapp.pageController.loadKanban(false);\n\t\t} else if ('Detail' === viewName) {\n\t\t\tif (form && app.getRecordId() === form.find('[name=\"record\"]').val()) {\n\t\t\t\tif (responseData.result._isViewable == false) {\n\t\t\t\t\tif (window !== window.parent) {\n\t\t\t\t\t\twindow.parent.location.href = 'index.php?module=' + moduleName + '&view=ListPreview';\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.location.href = 'index.php?module=' + moduleName + '&view=List';\n\t\t\t\t\t}\n\t\t\t\t} else if (params && params.removeFromUrl) {\n\t\t\t\t\tlet searchParams = new URLSearchParams(window.location.search);\n\t\t\t\t\tsearchParams.delete('step');\n\t\t\t\t\twindow.location.href = 'index.php?' + searchParams.toString();\n\t\t\t\t} else {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet widget, block;\n\t\t\t\tif (responseData.result._reload) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else if (app.getUrlVar('mode') === 'showRelatedList') {\n\t\t\t\t\tapp.pageController.loadRelatedList();\n\t\t\t\t} else if (element && (widget = element.closest('.widgetContentBlock')) && widget.length !== 0) {\n\t\t\t\t\tapp.pageController.loadWidget(widget);\n\t\t\t\t} else if (element && (block = element.closest('.detailViewBlockLink')) && block.length !== 0) {\n\t\t\t\t\tapp.pageController.reloadDetailViewBlock(block);\n\t\t\t\t} else if (params && params.data) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else {\n\t\t\t\t\tapp.pageController.reloadTabContent();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Function to register the records events\n\t * @param {jQuery} container - Jquery container.\n\t */\n\tregisterRecordActionsEvents: function (container) {\n\t\tcontainer.on('click', '.js-action-confirm', function (event) {\n\t\t\tevent.stopPropagation();\n\t\t\tlet target = $(this),\n\t\t\t\tsourceView = target.data('sourceView'),\n\t\t\t\taddBtnIcon = target.data('addBtnIcon');\n\t\t\tlet params = {\n\t\t\t\ticon: false,\n\t\t\t\ttitle: target.data('content'),\n\t\t\t\tconfirmedCallback: () => {\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tlet url = target.data('url') + '&sourceView=' + sourceView;\n\t\t\t\t\tAppConnector.request(url).done(function (data) {\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({\n\t\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (data && data.success) {\n\t\t\t\t\t\t\tif (data.result.notify) {\n\t\t\t\t\t\t\t\tapp.showNotify(data.result.notify);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (sourceView === 'Href') {\n\t\t\t\t\t\t\t\tapp.openUrl(data.result);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tapp.reloadAfterSave(data, app.convertUrlToObject(url), null, target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate(data.error.message),\n\t\t\t\t\t\t\t\ttitle: app.vtranslate('JS_LBL_PERMISSION'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (target.data('confirm')) {\n\t\t\t\tparams.text = target.data('confirm');\n\t\t\t\taddBtnIcon = 1;\n\t\t\t}\n\t\t\tif (addBtnIcon == 1) {\n\t\t\t\tparams.title = target.html() + ' ' + params.title;\n\t\t\t}\n\t\t\tapp.showConfirmModal(params);\n\t\t});\n\t},\n\t/**\n\t * Register keyboard shortcuts events\n\t * @param {jQuery} container\n\t */\n\tregisterKeyboardShortcutsEvent: function (container) {\n\t\tif (app.getUrlVar('parent') !== 'Settings') {\n\t\t\tdocument.addEventListener('keydown', (event) => {\n\t\t\t\tif (CONFIG['isEntityModule'] && event.altKey && event.code === 'KeyL') {\n\t\t\t\t\twindow.location.href = 'index.php?module=' + app.getModuleName() + '&view=List';\n\t\t\t\t}\n\t\t\t\tif (CONFIG['isQuickCreateSupported'] && event.altKey && event.code === 'KeyQ') {\n\t\t\t\t\tApp.Components.QuickCreate.createRecord(app.getModuleName());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\nCKEDITOR.disableAutoInline = true;\n$(function () {\n\tQuasar.iconSet.set(Quasar.iconSet.mdiV3);\n\tlet document = $(this);\n\tapp.registerToggleIconClick(document);\n\tapp.touchDevice = app.isTouchDevice();\n\tapp.setPnotifyDefaultOptions();\n\tApp.Fields.Picklist.changeSelectElementView();\n\tapp.registerPopoverEllipsisIcon();\n\tapp.registerPopover();\n\tapp.registerFormatNumber();\n\tapp.registerIframeAndMoreContent();\n\tapp.registerModal();\n\tapp.registerQuickEditModal(document);\n\tapp.registerMenu();\n\tapp.registerTabdrop();\n\tapp.registerIframeEvents(document);\n\tapp.registesterScrollbar(document);\n\tapp.registerHtmlToImageDownloader(document);\n\tapp.registerShowHideBlock(document);\n\tapp.registerAfterLoginEvents(document);\n\tapp.registerFormsEvents(document);\n\tapp.registerRecordActionsEvents(document);\n\tapp.registerKeyboardShortcutsEvent(document);\n\tApp.Components.QuickCreate.register(document);\n\tApp.Components.Scrollbar.initPage();\n\tApp.Clipboard.register(document);\n\tString.prototype.toCamelCase = function () {\n\t\tlet value = this.valueOf();\n\t\treturn value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n\t};\n\t// in IE resize option for textarea is not there, so we have to use .resizable() api\n\tif (/MSIE/.test(navigator.userAgent) || /Trident/.test(navigator.userAgent)) {\n\t\t$('textarea').resizable();\n\t}\n\t// Instantiate Page Controller\n\tapp.pageController = app.getPageController();\n\tif (app.pageController) {\n\t\tapp.pageController.registerEvents();\n\t}\n});\n(function ($) {\n\t$.fn.getNumberFromValue = function () {\n\t\treturn App.Fields.Double.formatToDb($(this).val());\n\t};\n\t$.fn.getNumberFromText = function () {\n\t\treturn App.Fields.Double.formatToDb($(this).text());\n\t};\n\t$.fn.setValue = function (value, type = 'value') {\n\t\treturn App.Fields.Utils.setValue($(this), value, type);\n\t};\n\t$.fn.formatNumber = function () {\n\t\tlet element = $(this);\n\t\telement.val(App.Fields.Double.formatToDisplay(App.Fields.Double.formatToDb(element.val()), false));\n\t};\n\t$.fn.disable = function () {\n\t\tthis.attr('disabled', 'disabled');\n\t};\n\t$.fn.enable = function () {\n\t\tthis.removeAttr('disabled');\n\t};\n\t$.fn.serializeFormData = function () {\n\t\tlet form = this;\n\t\tfor (var instance in CKEDITOR.instances) {\n\t\t\tCKEDITOR.instances[instance].updateElement();\n\t\t}\n\t\tlet values = form.serializeArray();\n\t\tlet data = {};\n\t\tif (values) {\n\t\t\t$(values).each(function (k, v) {\n\t\t\t\tlet element = form.find('[name=\"' + v.name + '\"]');\n\t\t\t\tif (element.is('select') && element.attr('multiple') != undefined) {\n\t\t\t\t\tif (data[v.name] == undefined) {\n\t\t\t\t\t\tdata[v.name] = [];\n\t\t\t\t\t}\n\t\t\t\t\tdata[v.name].push(v.value);\n\t\t\t\t} else {\n\t\t\t\t\tdata[v.name] = v.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// If data-type=\"autocomplete\", pickup data-value=\"...\" set\n\t\tlet autocompletes = $('[data-type=\"autocomplete\"]', $(this));\n\t\t$(autocompletes).each(function (i) {\n\t\t\tlet ac = $(autocompletes[i]);\n\t\t\tdata[ac.attr('name')] = ac.data('value');\n\t\t});\n\t\treturn data;\n\t};\n\t// Case-insensitive :icontains expression\n\t$.expr[':'].icontains = function (obj, index, meta, stack) {\n\t\treturn (\n\t\t\t(obj.textContent || obj.innerText || $(obj).text() || '').toLowerCase().indexOf(meta[3].toLowerCase()) !== -1\n\t\t);\n\t};\n\t$.fn.removeTextNode = function () {\n\t\t$(this)\n\t\t\t.contents()\n\t\t\t.filter(function () {\n\t\t\t\treturn this.nodeType == 3; //Node.TEXT_NODE\n\t\t\t})\n\t\t\t.remove();\n\t};\n\tbootbox.setLocale(CONFIG.langKey);\n})($);\n"], "fixing_code": ["<?php\n/**\n * Abstract page view controller file.\n *\n * @package   Controller\n *\n * @copyright YetiForce Sp. z o.o\n * @license   YetiForce Public License 4.0 (licenses/LicenseEN.txt or yetiforce.com)\n * @author    Mariusz Krzaczkowski <m.krzaczkowski@yetiforce.com>\n * @author    Rados\u0142aw Skrzypczak <r.skrzypczak@yetiforce.com>\n */\n\nnamespace App\\Controller\\View;\n\n/**\n * Abstract page view controller class.\n */\nabstract class Page extends Base\n{\n\t/** {@inheritdoc} */\n\tprotected function showBodyHeader()\n\t{\n\t\treturn true;\n\t}\n\n\t/** {@inheritdoc} */\n\tprotected function showFooter()\n\t{\n\t\treturn true;\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function preProcess(\\App\\Request $request, $display = true)\n\t{\n\t\tparent::preProcess($request, false);\n\t\t$view = $this->getViewer($request);\n\t\tif (\\App\\Config::performance('BROWSING_HISTORY_WORKING')) {\n\t\t\t\\Vtiger_BrowsingHistory_Helper::saveHistory($view->getTemplateVars('PAGETITLE'));\n\t\t}\n\t\t$view->assign('BREADCRUMB_TITLE', $this->getBreadcrumbTitle($request));\n\t\t$view->assign('SHOW_BREAD_CRUMBS', $this->showBreadCrumbLine());\n\t\tif ($activeReminder = \\App\\Module::isModuleActive('Calendar')) {\n\t\t\t$userPrivilegesModel = \\Users_Privileges_Model::getCurrentUserPrivilegesModel();\n\t\t\t$activeReminder = $userPrivilegesModel->hasModulePermission('Calendar');\n\t\t}\n\t\t$view->assign('REMINDER_ACTIVE', $activeReminder);\n\t\t$view->assign('QUALIFIED_MODULE', $request->getModule(false));\n\t\t$view->assign('MENUS', $this->getMenu());\n\t\t$view->assign('SHOW_FOOTER_BAR', $this->showFooter() && 8 !== \\App\\YetiForce\\Register::getStatus());\n\t\tif (!$request->isEmpty('mid')) {\n\t\t\t$view->assign('MID', $request->getInteger('mid'));\n\t\t}\n\t\t$view->assign('BROWSING_HISTORY', \\Vtiger_BrowsingHistory_Helper::getHistory());\n\t\t$view->assign('HOME_MODULE_MODEL', \\Vtiger_Module_Model::getInstance('Home'));\n\t\t$view->assign('MENU_HEADER_LINKS', $this->getMenuHeaderLinks($request));\n\t\t$view->assign('USER_QUICK_MENU_LINKS', $this->getUserQuickMenuLinks($request));\n\t\tif (\\App\\Config::performance('GLOBAL_SEARCH')) {\n\t\t\t$view->assign('SEARCHABLE_MODULES', \\App\\RecordSearch::getSearchableModules());\n\t\t}\n\t\tif (\\App\\Config::search('GLOBAL_SEARCH_SELECT_MODULE')) {\n\t\t\t$view->assign('SEARCHED_MODULE', $request->getModule());\n\t\t}\n\t\tif ($display) {\n\t\t\t$this->preProcessDisplay($request);\n\t\t}\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function postProcess(\\App\\Request $request, $display = true)\n\t{\n\t\tparent::postProcess($request, false);\n\t\t$view = $this->getViewer($request);\n\t\t$view->assign('ACTIVITY_REMINDER', \\Users_Record_Model::getCurrentUserModel()->getCurrentUserActivityReminderInSeconds());\n\t\t$view->assign('SHOW_FOOTER', true);\n\t\tif ($display) {\n\t\t\t$view->view('PageFooter.tpl');\n\t\t}\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function getFooterScripts(\\App\\Request $request)\n\t{\n\t\t$moduleName = $request->getModule();\n\t\t$jsFileNames = [\n\t\t\t'modules.Vtiger.resources.Menu',\n\t\t\t'modules.Vtiger.resources.Header',\n\t\t\t'modules.Vtiger.resources.Edit',\n\t\t\t'~layouts/resources/Field.js',\n\t\t\t'~layouts/resources/validator/BaseValidator.js',\n\t\t\t'~layouts/resources/validator/FieldValidator.js',\n\t\t\t'modules.Vtiger.resources.BasicSearch',\n\t\t\t'modules.Vtiger.resources.ConditionBuilder',\n\t\t\t'modules.Vtiger.resources.AdvanceFilter',\n\t\t\t'modules.Vtiger.resources.AdvanceSearch',\n\t\t];\n\t\tif ('AppComponents' !== $moduleName) {\n\t\t\t$jsFileNames[] = \"modules.$moduleName.resources.Edit\";\n\t\t\t$jsFileNames[] = \"modules.$moduleName.resources.AdvanceFilter\";\n\t\t}\n\t\tif (\\App\\Privilege::isPermitted('OSSMail')) {\n\t\t\t$jsFileNames[] = '~layouts/basic/modules/OSSMail/resources/checkmails.js';\n\t\t}\n\t\tif (!\\App\\RequestUtil::getBrowserInfo()->ie) {\n\t\t\tif (\\App\\User::getCurrentUserRealId() === \\App\\User::getCurrentUserId() && \\App\\Privilege::isPermitted('Chat')) {\n\t\t\t\t$jsFileNames[] = '~layouts/basic/modules/Chat/Chat.vue.js';\n\t\t\t}\n\t\t\tif (\\App\\Privilege::isPermitted('KnowledgeBase')) {\n\t\t\t\t$jsFileNames[] = '~layouts/resources/views/KnowledgeBase/KnowledgeBase.vue.js';\n\t\t\t}\n\t\t}\n\t\tforeach (\\Vtiger_Link_Model::getAllByType(\\vtlib\\Link::IGNORE_MODULE, ['HEADERSCRIPT']) as $headerScripts) {\n\t\t\tforeach ($headerScripts as $headerScript) {\n\t\t\t\t$jsFileNames[] = $headerScript->linkurl;\n\t\t\t}\n\t\t}\n\t\treturn array_merge(parent::getFooterScripts($request), $this->checkAndConvertJsScripts($jsFileNames));\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function getHeaderCss(\\App\\Request $request)\n\t{\n\t\t$headerCssInstances = parent::getHeaderCss($request);\n\t\t$prefix = '';\n\t\tif (!IS_PUBLIC_DIR) {\n\t\t\t$prefix = 'public_html/';\n\t\t}\n\t\tforeach (\\Vtiger_Link_Model::getAllByType(\\vtlib\\Link::IGNORE_MODULE, ['HEADERCSS']) as $cssLinks) {\n\t\t\tforeach ($cssLinks as $cssLink) {\n\t\t\t\t$cssScriptModel = new \\Vtiger_CssScript_Model();\n\t\t\t\t$headerCssInstances[] = $cssScriptModel->set('href', $prefix . $cssLink->linkurl);\n\t\t\t}\n\t\t}\n\t\treturn $headerCssInstances;\n\t}\n\n\t/**\n\t * Function to get the list of Header Links.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @return Vtiger_Link_Model[] - List of Vtiger_Link_Model instances\n\t */\n\tprotected function getMenuHeaderLinks(\\App\\Request $request): array\n\t{\n\t\t$userModel = \\App\\User::getCurrentUserModel();\n\t\t$headerLinks = [];\n\t\tif (\\App\\MeetingService::getInstance()->isActive() && \\App\\Privilege::isPermitted('Users', 'MeetingUrl', false, \\App\\User::getCurrentUserRealId())) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'LBL_VIDEO_CONFERENCE',\n\t\t\t\t'linkdata' => ['url' => 'index.php?module=Users&view=MeetingModal&record=' . \\App\\User::getCurrentUserRealId()],\n\t\t\t\t'icon' => 'mdi mdi-card-account-phone c-mdi',\n\t\t\t\t'linkclass' => 'js-show-modal',\n\t\t\t];\n\t\t}\n\t\tif ($userModel->isAdmin() || $userModel->isSuperUser()) {\n\t\t\tif ('Settings' !== $request->getByType('parent', 2)) {\n\t\t\t\t$headerLinks[] = [\n\t\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t\t'linklabel' => 'LBL_SYSTEM_SETTINGS',\n\t\t\t\t\t'linkurl' => 'index.php?module=YetiForce&parent=Settings&view=Shop',\n\t\t\t\t\t'icon' => 'fas fa-cog fa-fw',\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t$headerLinks[] = [\n\t\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t\t'linklabel' => 'LBL_USER_PANEL',\n\t\t\t\t\t'linkurl' => 'index.php',\n\t\t\t\t\t'icon' => 'fas fa-house-user fa-fw',\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t'linklabel' => 'LBL_SIGN_OUT',\n\t\t\t'linkurl' => 'index.php?module=Users&parent=Settings&action=Logout',\n\t\t\t'icon' => 'fas fa-power-off fa-fw',\n\t\t\t'linkclass' => 'btn-danger d-md-none js-post-action',\n\t\t];\n\t\t$headerLinkInstances = [];\n\t\tforeach ($headerLinks as $headerLink) {\n\t\t\t$headerLinkInstance = \\Vtiger_Link_Model::getInstanceFromValues($headerLink);\n\t\t\tif (isset($headerLink['childlinks'])) {\n\t\t\t\tforeach ($headerLink['childlinks'] as $childLink) {\n\t\t\t\t\t$headerLinkInstance->addChildLink(\\Vtiger_Link_Model::getInstanceFromValues($childLink));\n\t\t\t\t}\n\t\t\t}\n\t\t\t$headerLinkInstances[] = $headerLinkInstance;\n\t\t}\n\t\t$headerLinks = \\Vtiger_Link_Model::getAllByType(\\vtlib\\Link::IGNORE_MODULE, ['HEADERLINK']);\n\t\tforeach ($headerLinks as $headerLinks) {\n\t\t\tforeach ($headerLinks as $headerLink) {\n\t\t\t\t$headerLinkInstances[] = \\Vtiger_Link_Model::getInstanceFromLinkObject($headerLink);\n\t\t\t}\n\t\t}\n\t\treturn $headerLinkInstances;\n\t}\n\n\t/**\n\t * Function to get the list of User Quick Menu Links.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @return Vtiger_Link_Model[] - List of Vtiger_Link_Model instances\n\t */\n\tprotected function getUserQuickMenuLinks(\\App\\Request $request): array\n\t{\n\t\t$userModel = \\Users_Record_Model::getCurrentUserModel();\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'GROUPNAME',\n\t\t\t'linklabel' => 'LBL_ACCOUNT_SETTINGS',\n\t\t];\n\t\tif (\\App\\Config::security('SHOW_MY_PREFERENCES')) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'LBL_MY_PREFERENCES',\n\t\t\t\t'linkurl' => $userModel->getPreferenceDetailViewUrl(),\n\t\t\t\t'linkclass' => 'd-block',\n\t\t\t\t'icon' => 'fas fa-user-cog fa-fw',\n\t\t\t];\n\t\t}\n\t\tif (\\App\\Config::security('CHANGE_LOGIN_PASSWORD') && \\App\\User::getCurrentUserId() === \\App\\User::getCurrentUserRealId()) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'LBL_CHANGE_PASSWORD',\n\t\t\t\t'linkdata' => ['url' => 'index.php?module=Users&view=PasswordModal&mode=change&record=' . $userModel->get('id')],\n\t\t\t\t'linkclass' => 'showModal d-block',\n\t\t\t\t'icon' => 'yfi yfi-change-passowrd',\n\t\t\t];\n\t\t}\n\t\tif (\\Users_Module_Model::getSwitchUsers()) {\n\t\t\t$headerLinks[] = [\n\t\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t\t'linklabel' => 'SwitchUsers',\n\t\t\t\t'linkurl' => '',\n\t\t\t\t'icon' => 'fas fa-exchange-alt fa-fw',\n\t\t\t\t'linkdata' => ['url' => $userModel->getSwitchUsersUrl()],\n\t\t\t\t'linkclass' => 'showModal d-block',\n\t\t\t];\n\t\t}\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t'linklabel' => 'BTN_YOUR_ACCOUNT_ACCESS_HISTORY',\n\t\t\t'linkdata' => ['url' => 'index.php?module=Users&view=LoginHistoryModal&mode=change&record=' . $userModel->get('id')],\n\t\t\t'linkclass' => 'showModal d-block',\n\t\t\t'icon' => 'yfi yfi-login-history',\n\t\t];\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'SEPARATOR',\n\t\t\t'linkclass' => 'd-none d-sm-none d-md-block',\n\t\t];\n\t\t$headerLinks[] = [\n\t\t\t'linktype' => 'HEADERLINK',\n\t\t\t'linklabel' => 'LBL_SIGN_OUT',\n\t\t\t'linkurl' => 'index.php?module=Users&parent=Settings&action=Logout',\n\t\t\t'icon' => 'fas fa-power-off fa-fw',\n\t\t\t'linkclass' => 'd-none d-sm-none d-md-block js-post-action',\n\t\t];\n\t\t$headerLinkInstances = [];\n\t\tforeach ($headerLinks as $headerLink) {\n\t\t\t$headerLinkInstances[] = \\Vtiger_Link_Model::getInstanceFromValues($headerLink);\n\t\t}\n\t\treturn $headerLinkInstances;\n\t}\n\n\t/**\n\t * Function to get the list of menu.\n\t *\n\t * @return array\n\t */\n\tprotected function getMenu()\n\t{\n\t\treturn \\Vtiger_Menu_Model::getAll();\n\t}\n\n\t/** {@inheritdoc} */\n\tpublic function loadJsConfig(\\App\\Request $request)\n\t{\n\t\tparent::loadJsConfig($request);\n\t\tif ('Settings' !== $request->getRaw('parent')) {\n\t\t\t$moduleModel = \\Vtiger_Module_Model::getInstance($request->getModule());\n\t\t\tforeach ([\n\t\t\t\t'isQuickCreateSupported' => $moduleModel->isQuickCreateSupported(),\n\t\t\t\t'isEntityModule' => $moduleModel->isEntityModule(),\n\t\t\t] as $key => $value) {\n\t\t\t\t\\App\\Config::setJsEnv($key, $value);\n\t\t\t}\n\t\t}\n\t}\n}\n", "<?php\n\nreturn [\n\t'appVersion' => '6.2.263',\n\t'patchVersion' => '2021.12.10',\n\t'lib_roundcube' => '0.2.3',\n];\n", "{*<!-- {[The file is published on the basis of YetiForce Public License 4.0 that can be found in the following directory: licenses/LicenseEN.txt or yetiforce.com]} -->*}\n{strip}\n\t<!-- tpl-Users-Modals-PasswordModalFooter -->\n\t<div class=\"modal-footer\">\n\t\t{if ($MODE === 'massReset' || $MODE === 'reset') &&  $ACTIVE_SMTP}\n\t\t\t<button class=\"btn btn-success\" type=\"submit\" name=\"saveButton\"\n\t\t\t\t{if App\\Config::main('systemMode') === 'demo'}disabled=\"disabled\" {/if}>\n\t\t\t\t<span class=\"fas fa-redo-alt mr-2\"></span><strong>{\\App\\Language::translate('BTN_RESET_PASSWORD', $MODULE_NAME)}</strong>\n\t\t\t</button>\n\t\t{/if}\n\t\t{if $MODE === 'change'}\n\t\t\t<button class=\"btn btn-success\" type=\"submit\" name=\"saveButton\"\n\t\t\t\t{if App\\Config::main('systemMode') === 'demo'}disabled=\"disabled\" {/if}>\n\t\t\t\t<span class=\"fas fa-redo-alt mr-2\"></span><strong>{\\App\\Language::translate('LBL_CHANGE_PASSWORD', $MODULE_NAME)}</strong>\n\t\t\t</button>\n\t\t{/if}\n\t\t{if $LOCK_EXIT}\n\t\t\t<a class=\"btn btn-danger js-post-action\" role=\"button\" href=\"index.php?module=Users&amp;parent=Settings&amp;action=Logout\">\n\t\t\t\t<span class=\"fas fa-power-off mr-2\"></span><strong>{\\App\\Language::translate('LBL_SIGN_OUT', $MODULE_NAME)}</strong>\n\t\t\t</a>\n\t\t{else}\n\t\t\t<button class=\"btn btn-danger\" type=\"reset\" data-dismiss=\"modal\">\n\t\t\t\t<span class=\"fas fa-times mr-2\"></span><strong>{\\App\\Language::translate('LBL_CANCEL', $MODULE_NAME)}</strong>\n\t\t\t</button>\n\t\t{/if}\n\t</div>\n\t</form>\n\t<!-- /tpl-Users-Modals-PasswordModalFooter -->\n{/strip}\n", "{*<!--\n/*********************************************************************************\n** The contents of this file are subject to the vtiger CRM Public License Version 1.0\n* (\"License\"); You may not use this file except in compliance with the License\n* The Original Code is:  vtiger CRM Open Source\n* The Initial Developer of the Original Code is vtiger.\n* Portions created by vtiger are Copyright (C) vtiger.\n* All Rights Reserved.\n*\n********************************************************************************/\n-->*}\n{strip}\n\t<div class=\"mainContainer container\">\n\t\t<div class=\"jumbotron mt-5\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-12 text-center\">\n\t\t\t\t\t<h1><span class=\"far fa-times-circle u-fs-10x\"></span></h1>\n\t\t\t\t\t<h2>{\\App\\Language::translate('LBL_NO_FOUND_VIEW')}</h2>\n\t\t\t\t\t<p class=\"my-5\">\n\t\t\t\t\t\t<a class=\"btn btn-success mr-2\" role=\"button\" href=\"javascript:window.history.back();\">\n\t\t\t\t\t\t\t<span class=\"fas fa-chevron-left mr-2\"></span>{\\App\\Language::translate('LBL_GO_BACK')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a class=\"btn btn-warning mr-2 js-post-action\" role=\"button\" href=\"index.php?module=Users&action=Logout\">\n\t\t\t\t\t\t\t<span class=\"fas fa-power-off fa-fw mr-2\"></span>{\\App\\Language::translate('LBL_SIGN_OUT')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a class=\"btn btn-primary\" role=\"button\" href=\"index.php\">\n\t\t\t\t\t\t\t<i class=\"fas fa-home mr-2\"></i>{\\App\\Language::translate('LBL_MAIN_PAGE')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{/strip}\n", "<?php\n/* +**********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.1\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * ********************************************************************************** */\n\nclass Users_Logout_Action extends \\App\\Controller\\Action\n{\n\t/**\n\t * {@inheritdoc}\n\t */\n\tpublic function checkPermission(App\\Request $request)\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * {@inheritdoc}\n\t */\n\tpublic function process(App\\Request $request)\n\t{\n\t\t//Track the logout History\n\t\t$moduleName = $request->getModule();\n\t\t$moduleModel = Users_Module_Model::getInstance($moduleName);\n\t\t$moduleModel->saveLogoutHistory();\n\n\t\t$eventHandler = new App\\EventHandler();\n\t\t$eventHandler->trigger('UserLogoutBefore');\n\t\tif (\\Config\\Security::$loginSessionRegenerate) {\n\t\t\tApp\\Session::regenerateId(true); // to overcome session id reuse.\n\t\t}\n\t\tOSSMail_Logout_Model::logoutCurrentUser();\n\t\tApp\\Session::destroy();\n\t\t//End\n\t\theader('location: index.php');\n\t}\n}\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\n$.Class(\n\t'Vtiger_List_Js',\n\t{\n\t\tlistInstance: false,\n\t\tgetRelatedModulesContainer: false,\n\t\tmassEditPreSave: 'Vtiger.MassEdit.PreSave',\n\t\tgetInstance: function () {\n\t\t\tif (Vtiger_List_Js.listInstance === false) {\n\t\t\t\tlet module = app.getModuleName(),\n\t\t\t\t\tparentModule = app.getParentModuleName(),\n\t\t\t\t\tmoduleClassName,\n\t\t\t\t\tfallbackClassName,\n\t\t\t\t\tinstance;\n\t\t\t\tif (parentModule == 'Settings') {\n\t\t\t\t\tmoduleClassName = parentModule + '_' + module + '_List_Js';\n\t\t\t\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\t\t\t\tmoduleClassName = module + '_List_Js';\n\t\t\t\t\t}\n\t\t\t\t\tfallbackClassName = parentModule + '_Vtiger_List_Js';\n\t\t\t\t\tif (typeof window[fallbackClassName] === 'undefined') {\n\t\t\t\t\t\tfallbackClassName = 'Vtiger_List_Js';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmoduleClassName = module + '_List_Js';\n\t\t\t\t\tfallbackClassName = 'Vtiger_List_Js';\n\t\t\t\t}\n\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\tinstance = new window[moduleClassName]();\n\t\t\t\t} else {\n\t\t\t\t\tinstance = new window[fallbackClassName]();\n\t\t\t\t}\n\t\t\t\tVtiger_List_Js.listInstance = instance;\n\t\t\t\treturn instance;\n\t\t\t}\n\t\t\treturn Vtiger_List_Js.listInstance;\n\t\t},\n\t\t/**\n\t\t * function to trigger send Email\n\t\t * @param {Object} params - a split object.\n\t\t * @param {function} callBackFunction - a split object.\n\t\t * @param {$} row - current container for reference.\n\t\t */\n\t\ttriggerSendEmail: function (params, callBackFunction, row) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (row) {\n\t\t\t\tlistInstance.listViewContentContainer = row.closest('.js-list__form');\n\t\t\t}\n\t\t\tif ((params && params['selected_ids']) || listInstance.checkListRecordSelected() !== true) {\n\t\t\t\tlet postData = listInstance.getSearchParams();\n\t\t\t\tdelete postData.parent;\n\t\t\t\tdelete postData.mode;\n\t\t\t\tpostData.view = 'SendMailModal';\n\t\t\t\tpostData.cvid = listInstance.getCurrentCvId();\n\t\t\t\tif (params) {\n\t\t\t\t\t$.extend(postData, params);\n\t\t\t\t}\n\t\t\t\tAppConnector.request(postData).done(function (response) {\n\t\t\t\t\tapp.showModalWindow(response, function (data) {\n\t\t\t\t\t\tdata.find('[name=\"saveButton\"]').on('click', function (e) {\n\t\t\t\t\t\t\tif (data.find('form').validationEngine('validate')) {\n\t\t\t\t\t\t\t\t$.extend(postData, {\n\t\t\t\t\t\t\t\t\tfield: data.find('#field').val(),\n\t\t\t\t\t\t\t\t\ttemplate: data.find('#template').val(),\n\t\t\t\t\t\t\t\t\tmailNotes: data.find('#mail_notes').val(),\n\t\t\t\t\t\t\t\t\taction: 'Mail',\n\t\t\t\t\t\t\t\t\tmode: 'sendMails'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tdelete postData.view;\n\t\t\t\t\t\t\t\tAppConnector.request(postData)\n\t\t\t\t\t\t\t\t\t.done(function (response) {\n\t\t\t\t\t\t\t\t\t\tif (response.result == true) {\n\t\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\t\t\t\t\tif (typeof callBackFunction == 'function') {\n\t\t\t\t\t\t\t\t\t\t\t\tcallBackFunction(response);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * function to trigger Send Sms\n\t\t * @params: send email url , module name.\n\t\t */\n\t\ttriggerSendSms: function (massActionUrl, module) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (!listInstance.checkListRecordSelected()) {\n\t\t\t\tVtiger_List_Js.triggerMassAction(massActionUrl, (data) => {\n\t\t\t\t\tnew App.Fields.Text.Completions($(data).find('.js-completions').eq(0), {\n\t\t\t\t\t\temojiPanel: true,\n\t\t\t\t\t\tcompletionsCollection: {}\n\t\t\t\t\t});\n\t\t\t\t\tdata.on('submit', 'form', (e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlet form = $(e.currentTarget);\n\t\t\t\t\t\tform.find('.js-modal__save').attr('disabled', 'disabled');\n\t\t\t\t\t\tlistInstance.massActionSave(form).done(function (response) {\n\t\t\t\t\t\t\tif (response.result && response.result.message) {\n\t\t\t\t\t\t\t\tapp.showNotify({ text: response.result.message, type: 'info' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\ttriggerMassQuickCreate: function (moduleName, data) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (listInstance.checkListRecordSelected() != true) {\n\t\t\t\tlet progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tlet params = {\n\t\t\t\t\tcallbackFunction: function () {},\n\t\t\t\t\tnoCache: true,\n\t\t\t\t\tdata: $.extend(data, listInstance.getSearchParams(), { sourceView: 'ListView' })\n\t\t\t\t};\n\t\t\t\tApp.Components.QuickCreate.getForm(\n\t\t\t\t\t'index.php?module=' + moduleName + '&view=MassQuickCreateModal&sourceModule=' + app.getModuleName(),\n\t\t\t\t\tmoduleName,\n\t\t\t\t\tparams\n\t\t\t\t).done((data) => {\n\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tApp.Components.QuickCreate.showModal(data, params);\n\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\ttriggerTransferOwnership: function (massActionUrl) {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet validationResult = listInstance.checkListRecordSelected();\n\t\t\tif (validationResult != true) {\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator();\n\t\t\t\tthisInstance.getRelatedModulesContainer = false;\n\t\t\t\tlet actionParams = {\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: massActionUrl,\n\t\t\t\t\tdataType: 'html',\n\t\t\t\t\tdata: {}\n\t\t\t\t};\n\t\t\t\tAppConnector.request(actionParams).done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tlet callback = function (data) {\n\t\t\t\t\t\t\tlet params = app.validationEngineOptions;\n\t\t\t\t\t\t\tparams.onValidationComplete = function (form, valid) {\n\t\t\t\t\t\t\t\tif (valid) {\n\t\t\t\t\t\t\t\t\tthisInstance.transferOwnershipSave(form);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdata.find('#changeOwner').validationEngine(app.validationEngineOptions);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tapp.showModalWindow(data, function (data) {\n\t\t\t\t\t\t\tlet selectElement = thisInstance.getRelatedModuleContainer();\n\t\t\t\t\t\t\tApp.Fields.Picklist.changeSelectElementView(selectElement, 'select2');\n\t\t\t\t\t\t\tif (typeof callback == 'function') {\n\t\t\t\t\t\t\t\tcallback(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\ttriggerQuickExport: function (module) {\n\t\t\tconst progressIndicatorElement = $.progressIndicator();\n\t\t\tlet url = 'index.php?module=' + module + '&view=ExportRecords';\n\t\t\tapp.showModalWindow(null, url, function (container) {\n\t\t\t\tcontainer.find('.js-modal__save').on('click', (e) => {\n\t\t\t\t\tlet formData = container.find('.js-modal-form').serializeFormData();\n\t\t\t\t\tconst listInstance = Vtiger_List_Js.getInstance();\n\t\t\t\t\t$.extend(formData, listInstance.getSearchParams());\n\t\t\t\t\tAppConnector.requestForm('index.php', formData);\n\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\ttext: app.vtranslate('JS_STARTED_GENERATING_FILE'),\n\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t});\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t});\n\t\t\t});\n\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t},\n\t\ttransferOwnershipSave: function (form) {\n\t\t\tconst listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet transferOwner = $('#transferOwnerId').val(),\n\t\t\t\trelatedModules = $('#related_modules').val(),\n\t\t\t\tparams = {\n\t\t\t\t\tmodule: app.getModuleName(),\n\t\t\t\t\taction: 'TransferOwnership',\n\t\t\t\t\ttransferOwnerId: transferOwner,\n\t\t\t\t\trelated_modules: relatedModules\n\t\t\t\t};\n\t\t\tparams = $.extend(params, listInstance.getSearchParams());\n\t\t\tdelete params.view;\n\t\t\tAppConnector.request(params).done((response) => {\n\t\t\t\tapp.hideModalWindow();\n\t\t\t\tlistInstance.getListViewRecords();\n\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\tif (response.result.success) {\n\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\t\ttext: app.vtranslate('JS_RECORDS_TRANSFERRED_SUCCESSFULLY'),\n\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tVtiger_Helper_Js.showMessage(response.result.notify);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to get the related module container\n\t\t */\n\t\tgetRelatedModuleContainer: function () {\n\t\t\tif (this.getRelatedModulesContainer == false) {\n\t\t\t\tthis.getRelatedModulesContainer = $('#related_modules');\n\t\t\t}\n\t\t\treturn this.getRelatedModulesContainer;\n\t\t},\n\t\ttriggerMassAction: function (massActionUrl, callBackFunction, beforeShowCb, css) {\n\t\t\tif (typeof beforeShowCb === 'undefined') {\n\t\t\t\tbeforeShowCb = function () {\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (typeof beforeShowCb == 'object') {\n\t\t\t\tcss = beforeShowCb;\n\t\t\t\tbeforeShowCb = function () {\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet actionParams = {\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: massActionUrl,\n\t\t\t\tdataType: 'html',\n\t\t\t\tdata: Vtiger_List_Js.getInstance().getSearchParams()\n\t\t\t};\n\t\t\tif (typeof css === 'undefined') {\n\t\t\t\tcss = {};\n\t\t\t}\n\t\t\tcss = $.extend({ 'text-align': 'left' }, css);\n\t\t\tAppConnector.request(actionParams)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tlet result = beforeShowCb(data);\n\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tapp.showModalWindow(\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t\t\tif (typeof callBackFunction == 'function') {\n\t\t\t\t\t\t\t\t\tcallBackFunction(data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcss\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\t\ttext: err,\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\ttriggerMassEdit: function (massEditUrl) {\n\t\t\tlet selectedCount = this.getSelectedRecordCount();\n\t\t\tif (selectedCount > $('#listMaxEntriesMassEdit').val()) {\n\t\t\t\tlet params = {\n\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\ttext: app.vtranslate('JS_MASS_EDIT_LIMIT'),\n\t\t\t\t\ttype: 'error'\n\t\t\t\t};\n\t\t\t\tapp.showNotify(params);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tVtiger_List_Js.triggerMassAction(\n\t\t\t\tmassEditUrl,\n\t\t\t\tfunction (container) {\n\t\t\t\t\tapp.event.trigger('MassEditModal.AfterLoad', container, massEditUrl);\n\t\t\t\t\tlet massEditForm = container.find('#massEdit');\n\t\t\t\t\tmassEditForm.validationEngine(app.validationEngineOptions);\n\t\t\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\t\t\tlistInstance.registerEventForTabClick(massEditForm);\n\t\t\t\t\tlet editInstance = Vtiger_Edit_Js.getInstance();\n\t\t\t\t\teditInstance.registerBasicEvents(massEditForm);\n\t\t\t\t\tlistInstance.postMassEdit(container);\n\t\t\t\t\tlistInstance.registerSlimScrollMassEdit();\n\n\t\t\t\t\tif ($('#massEditContainer').length) {\n\t\t\t\t\t\tlistInstance.inactiveFieldsValidation($('#massEditContainer').find('form'));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ width: '65%' }\n\t\t\t);\n\t\t},\n\t\tgetSelectedRecordCount: function () {\n\t\t\tlet count;\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet cvId = listInstance.getCurrentCvId();\n\t\t\tlet selectedIdObj = $('#selectedIds').data(cvId + 'selectedIds');\n\t\t\tif (selectedIdObj != undefined) {\n\t\t\t\tif (selectedIdObj != 'all') {\n\t\t\t\t\tcount = selectedIdObj.length;\n\t\t\t\t} else {\n\t\t\t\t\tlet excludedIdsCount = $('#excludedIds').data(cvId + 'Excludedids').length;\n\t\t\t\t\tlet totalRecords = $('#recordsCount').val();\n\t\t\t\t\tcount = totalRecords - excludedIdsCount;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\t\t/**\n\t\t * function to trigger export action\n\t\t * returns UI\n\t\t */\n\t\ttriggerExportAction: function (exportActionUrl, newTab) {\n\t\t\tlet formAttr = {};\n\t\t\tif (newTab) {\n\t\t\t\tformAttr['target'] = '_blank';\n\t\t\t}\n\t\t\tlet params = Vtiger_List_Js.getInstance().getSearchParams();\n\t\t\tdelete params.view;\n\t\t\tAppConnector.requestForm(exportActionUrl, params, formAttr);\n\t\t},\n\t\t/**\n\t\t * Function to reload list\n\t\t */\n\t\tclearList: function () {\n\t\t\t$('#deSelectAllMsg').trigger('click');\n\t\t\t$('#selectAllMsgDiv').hide();\n\t\t},\n\t\ttriggerListSearch: function () {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet listViewContainer = listInstance.getListViewContentContainer();\n\t\t\tlistViewContainer.find('[data-trigger=\"listSearch\"]').trigger('click');\n\t\t},\n\t\tgetSelectedRecordsParams: function (checkList) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (checkList == false || listInstance.checkListRecordSelected() !== true) {\n\t\t\t\treturn listInstance.getSearchParams();\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\ttriggerGenerateRecords: function () {\n\t\t\tlet selected = Vtiger_List_Js.getSelectedRecordsParams();\n\t\t\tif (selected === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tselected.view = 'GenerateModal';\n\t\t\tselected.fromview = 'List';\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tapp.showModalWindow(null, 'index.php?' + $.param(selected), function () {\n\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t});\n\t\t},\n\t\tshowMap: function () {\n\t\t\tlet selectedParams = Vtiger_List_Js.getSelectedRecordsParams(false);\n\t\t\tlet url = 'index.php?module=OpenStreetMap&view=MapModal&srcModule=' + app.getModuleName();\n\t\t\tapp.showModalWindow(null, url, function (container) {\n\t\t\t\tlet mapView = new OpenStreetMap_Map_Js();\n\t\t\t\tmapView.setSelectedParams(selectedParams);\n\t\t\t\tmapView.registerModalView(container);\n\t\t\t});\n\t\t},\n\t\ttriggerReviewChanges: function (reviewUrl) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tlet validationResult = listInstance.checkListRecordSelected();\n\t\t\tif (validationResult != true) {\n\t\t\t\tlet message = app.vtranslate('JS_MASS_REVIEWING_CHANGES_CONFIRMATION');\n\t\t\t\tlet title = '<i class=\"fa fa-check-circle\"></i> ' + app.vtranslate('JS_LBL_REVIEW_CHANGES');\n\t\t\t\tVtiger_Helper_Js.showConfirmationBox({ message: message, title: title })\n\t\t\t\t\t.done(function (e) {\n\t\t\t\t\t\tlet params = listInstance.getSearchParams();\n\t\t\t\t\t\tlet url =\n\t\t\t\t\t\t\treviewUrl +\n\t\t\t\t\t\t\t'&viewname=' +\n\t\t\t\t\t\t\tparams.viewname +\n\t\t\t\t\t\t\t'&selected_ids=' +\n\t\t\t\t\t\t\tparams.selected_ids +\n\t\t\t\t\t\t\t'&excluded_ids=' +\n\t\t\t\t\t\t\tparams.excluded_ids +\n\t\t\t\t\t\t\t'&entityState=' +\n\t\t\t\t\t\t\tparams.entityState;\n\t\t\t\t\t\tif (listInstance.getListSearchInstance()) {\n\t\t\t\t\t\t\turl += '&search_params=' + params.search_params;\n\t\t\t\t\t\t\tif (typeof searchValue !== 'undefined' && params.search_value.length > 0) {\n\t\t\t\t\t\t\t\turl += '&search_key=' + params.search_key;\n\t\t\t\t\t\t\t\turl += '&search_value=' + params.search_value;\n\t\t\t\t\t\t\t\turl += '&operator=s';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet deleteMessage = app.vtranslate('JS_LOADING_PLEASE_WAIT');\n\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\t\tmessage: deleteMessage,\n\t\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tAppConnector.request(url)\n\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({\n\t\t\t\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (data.result) {\n\t\t\t\t\t\t\t\t\tlet params = {\n\t\t\t\t\t\t\t\t\t\ttext: data.result,\n\t\t\t\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tapp.showNotify(params);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlistInstance.getListViewRecords();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to register the submit event for mass comment\n\t\t */\n\t\ttriggerMassComment: function (massActionUrl) {\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tif (!listInstance.checkListRecordSelected()) {\n\t\t\t\tVtiger_List_Js.triggerMassAction(massActionUrl, (data) => {\n\t\t\t\t\tnew App.Fields.Text.Completions($(data).find('.js-completions').eq(0), { emojiPanel: false });\n\t\t\t\t\t$(data).on('submit', '#massSave', (e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlet form = $(e.currentTarget),\n\t\t\t\t\t\t\tcommentContent = form.find('.js-comment-content'),\n\t\t\t\t\t\t\tcommentContentValue = commentContent.html();\n\t\t\t\t\t\tif (commentContentValue === '') {\n\t\t\t\t\t\t\tlet errorMsg = app.vtranslate('JS_LBL_COMMENT_VALUE_CANT_BE_EMPTY');\n\t\t\t\t\t\t\tcommentContent.validationEngine('showPrompt', errorMsg, 'error', 'bottomLeft', true);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tform.find('.js-comment-value').val(commentContentValue);\n\t\t\t\t\t\tcommentContent.validationEngine('hide');\n\t\t\t\t\t\tform.find('[name=saveButton]').attr('disabled', 'disabled');\n\t\t\t\t\t\tlistInstance.massActionSave(form).done(function () {\n\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\t//contains the List View element.\n\t\tlistViewContainer: false,\n\t\t//Contains list view top menu element\n\t\tlistViewTopMenuContainer: false,\n\t\t//Contains list view content element\n\t\tlistViewContentContainer: false,\n\t\t//Contains filter Block Element\n\t\tfilterBlock: false,\n\t\tfilterSelectElement: false,\n\t\tlistSearchInstance: false,\n\t\tnoEventsListSearch: true,\n\t\t//Contains float table head\n\t\tlistFloatThead: false,\n\t\tgetListSearchInstance: function (events) {\n\t\t\tif (events != undefined) {\n\t\t\t\tthis.noEventsListSearch = events;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.listSearchInstance == false &&\n\t\t\t\t(this.getListViewContainer().find('.searchField').length ||\n\t\t\t\t\tthis.getListViewContainer().find('.picklistSearchField').length)\n\t\t\t) {\n\t\t\t\tthis.listSearchInstance = YetiForce_ListSearch_Js.getInstance(\n\t\t\t\t\tthis.getListViewContainer(),\n\t\t\t\t\tthis.noEventsListSearch\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn this.listSearchInstance;\n\t\t},\n\t\tgetListViewContainer: function () {\n\t\t\tif (this.listViewContainer == false) {\n\t\t\t\tthis.listViewContainer = $('div.listViewPageDiv');\n\t\t\t}\n\t\t\treturn this.listViewContainer;\n\t\t},\n\t\tgetListViewTopMenuContainer: function () {\n\t\t\tif (this.listViewTopMenuContainer == false) {\n\t\t\t\tthis.listViewTopMenuContainer = $('.listViewTopMenuDiv');\n\t\t\t}\n\t\t\treturn this.listViewTopMenuContainer;\n\t\t},\n\t\tgetListViewContentContainer: function () {\n\t\t\tif (this.listViewContentContainer == false) {\n\t\t\t\tthis.listViewContentContainer = $('.listViewContentDiv');\n\t\t\t}\n\t\t\treturn this.listViewContentContainer;\n\t\t},\n\t\tgetFilterBlock: function () {\n\t\t\tif (this.filterBlock == false) {\n\t\t\t\tlet filterSelectElement = this.getFilterSelectElement();\n\t\t\t\tif (filterSelectElement.length <= 0) {\n\t\t\t\t\tthis.filterBlock = $();\n\t\t\t\t} else if (filterSelectElement.is('select')) {\n\t\t\t\t\tthis.filterBlock = filterSelectElement.data('select2').$dropdown;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.filterBlock;\n\t\t},\n\t\tgetFilterSelectElement: function () {\n\t\t\tif (this.filterSelectElement == false) {\n\t\t\t\tthis.filterSelectElement = $('#customFilter');\n\t\t\t}\n\t\t\treturn this.filterSelectElement;\n\t\t},\n\t\tgetSearchParams() {\n\t\t\tlet params = this.getDefaultParams();\n\t\t\tif (this.checkListRecordSelected() !== true) {\n\t\t\t\tparams.selected_ids = this.readSelectedIds(true);\n\t\t\t\tparams.excluded_ids = this.readExcludedIds(true);\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\t\tgetDefaultParams: function () {\n\t\t\tlet params = {\n\t\t\t\tmodule: app.getModuleName(),\n\t\t\t\tview: app.getViewName(),\n\t\t\t\tviewname: this.getCurrentCvId(),\n\t\t\t\tpage: $('#pageNumber').val(),\n\t\t\t\torderby: $('#orderBy').val(),\n\t\t\t\tentityState: $('#entityState').val()\n\t\t\t};\n\t\t\tif (app.getUrlVar('mid')) {\n\t\t\t\tparams.mid = app.getUrlVar('mid');\n\t\t\t}\n\t\t\tif (app.getParentModuleName()) {\n\t\t\t\tparams.parent = app.getParentModuleName();\n\t\t\t}\n\t\t\tif ($('#sortOrder').length) {\n\t\t\t\tparams.sortorder = $('#sortOrder').val();\n\t\t\t}\n\t\t\tlet listSearchInstance = this.getListSearchInstance();\n\t\t\tif (listSearchInstance !== false) {\n\t\t\t\tlet searchValue = listSearchInstance.getAlphabetSearchValue();\n\t\t\t\tparams.search_params = listSearchInstance.getListSearchParams(true);\n\t\t\t\tif (typeof searchValue !== 'undefined' && searchValue.length > 0) {\n\t\t\t\t\tparams.search_key = listSearchInstance.getAlphabetSearchField();\n\t\t\t\t\tparams.search_value = searchValue;\n\t\t\t\t\tparams.operator = 's';\n\t\t\t\t}\n\t\t\t\tlistSearchInstance.parseConditions(params);\n\t\t\t\tparams.search_params = JSON.stringify(params.search_params);\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\n\t\t/*\n\t\t * Function which will give you all the list view params\n\t\t */\n\t\tgetListViewRecords: function (urlParams) {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tif (typeof urlParams === 'undefined') {\n\t\t\t\turlParams = {};\n\t\t\t}\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewContentsContainer = $('#listViewContents');\n\t\t\tlet loadingMessage = $('.listViewLoadingMsg').text();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tmessage: loadingMessage,\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet defaultParams = this.getDefaultParams();\n\t\t\turlParams = $.extend(defaultParams, urlParams);\n\t\t\tAppConnector.requestPjax(urlParams)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tlistViewContentsContainer.html(data);\n\t\t\t\t\tapp.event.trigger('RecordListView.AfterLoad', data, thisInstance);\n\t\t\t\t\tthisInstance.calculatePages().done(function (data) {\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t\t// Let listeners know about page state change.\n\t\t\t\t\t\tapp.notifyPostAjaxReady();\n\t\t\t\t\t});\n\t\t\t\t\tthisInstance.postLoadListViewRecordsEvents(listViewContentsContainer);\n\t\t\t\t\tthisInstance.massUpdatePagination(urlParams);\n\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_NOT_ALLOWED_VALUE'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tpostLoadListViewRecordsEvents: function (container) {\n\t\t\tconst self = this;\n\t\t\tthis.registerPostLoadDesktopEvents(container);\n\t\t\tApp.Fields.Picklist.showSelect2ElementView(container.find('select.select2'));\n\t\t\tApp.Fields.Picklist.changeSelectElementView(container);\n\t\t\tlet searchInstance = self.getListSearchInstance();\n\t\t\tif (searchInstance !== false) {\n\t\t\t\tsearchInstance.registerBasicEvents();\n\t\t\t}\n\t\t\tVtiger_Index_Js.registerMailButtons(container);\n\t\t\tVtiger_Helper_Js.showHorizontalTopScrollBar();\n\t\t\tlet selectedIds = self.readSelectedIds();\n\t\t\tif (selectedIds != '') {\n\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t});\n\t\t\t\t\t$('#deSelectAllMsgDiv').show();\n\t\t\t\t\tlet excludedIds = self.readExcludedIds();\n\t\t\t\t\tif (excludedIds != '') {\n\t\t\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t\tif ($.inArray($(element).val(), excludedIds) != -1) {\n\t\t\t\t\t\t\t\t$(element).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\tif ($.inArray($(element).val(), selectedIds) != -1) {\n\t\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tself.checkSelectAll();\n\t\t\t}\n\t\t\tself.registerUnreviewedCountEvent();\n\t\t\tself.registerLastRelationsEvent();\n\t\t},\n\t\t/**\n\t\t * Function to calculate number of pages\n\t\t */\n\t\tcalculatePages: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet element = $('#totalPageCount');\n\t\t\tlet totalPageNumber = element.text();\n\t\t\tif (totalPageNumber == '') {\n\t\t\t\tlet totalRecordCount = $('#totalCount').val();\n\t\t\t\tif (totalRecordCount != '') {\n\t\t\t\t\tlet pageLimit = $('#pageLimit').val();\n\t\t\t\t\tif (pageLimit == '0') pageLimit = 1;\n\t\t\t\t\tlet pageCount = Math.ceil(totalRecordCount / pageLimit);\n\t\t\t\t\tif (pageCount == 0) {\n\t\t\t\t\t\tpageCount = 1;\n\t\t\t\t\t}\n\t\t\t\t\telement.text(pageCount);\n\t\t\t\t\taDeferred.resolve();\n\t\t\t\t\treturn aDeferred.promise();\n\t\t\t\t}\n\t\t\t\taDeferred.resolve();\n\t\t\t} else {\n\t\t\t\taDeferred.resolve();\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/*\n\t\t * Function to return alerts if no records selected.\n\t\t */\n\t\tnoRecordSelectedAlert: function (text = 'JS_PLEASE_SELECT_ONE_RECORD') {\n\t\t\tapp.showNotify({\n\t\t\t\ttext: app.vtranslate(text),\n\t\t\t\ttype: 'error'\n\t\t\t});\n\t\t},\n\t\tmassActionSave: function (form, isMassEdit) {\n\t\t\tif (typeof isMassEdit === 'undefined') {\n\t\t\t\tisMassEdit = false;\n\t\t\t}\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tif (isMassEdit) {\n\t\t\t\tlet massEditPreSaveEvent = $.Event(Vtiger_List_Js.massEditPreSave);\n\t\t\t\tform.trigger(massEditPreSaveEvent);\n\t\t\t\tif (massEditPreSaveEvent.isDefaultPrevented()) {\n\t\t\t\t\tform.find('[name=\"saveButton\"]').removeAttr('disabled');\n\t\t\t\t\taDeferred.reject();\n\t\t\t\t\treturn aDeferred.promise();\n\t\t\t\t}\n\t\t\t\tform.find('[id^=\"selectRow\"]').each(function (index, checkbox) {\n\t\t\t\t\tcheckbox = $(checkbox);\n\t\t\t\t\tif (!checkbox.prop('checked')) {\n\t\t\t\t\t\tcheckbox\n\t\t\t\t\t\t\t.closest('.js-form-row-container')\n\t\t\t\t\t\t\t.find('.fieldValue [name]')\n\t\t\t\t\t\t\t.each(function (index, element) {\n\t\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\t\telement.attr('data-element-name', element.attr('name')).removeAttr('name');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet massActionUrl = form.serializeFormData();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tAppConnector.request(massActionUrl)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\tif (!data.result) {\n\t\t\t\t\t\tlet params = {\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_MASS_EDIT_NOT_SUCCESSFUL'),\n\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tapp.showNotify(params);\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\taDeferred.reject(error, err);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tcheckSelectAll: function () {\n\t\t\tlet state = true;\n\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\tif ($(element).is(':checked')) {\n\t\t\t\t\tstate = true;\n\t\t\t\t} else {\n\t\t\t\t\tstate = false;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (state == true) {\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', true);\n\t\t\t} else {\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t}\n\t\t},\n\t\tgetRecordsCount: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet recordCountVal = $('#recordsCount').val();\n\t\t\tif (recordCountVal != '') {\n\t\t\t\taDeferred.resolve(recordCountVal);\n\t\t\t} else {\n\t\t\t\tlet count = '';\n\t\t\t\tlet params = this.getDefaultParams();\n\t\t\t\tparams.view = 'ListAjax';\n\t\t\t\tparams.mode = 'getRecordsCount';\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\tlet response = JSON.parse(data);\n\t\t\t\t\t$('#recordsCount').val(response['result']['count']);\n\t\t\t\t\tcount = response['result']['count'];\n\t\t\t\t\taDeferred.resolve(count);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tgetSelectOptionFromChosenOption: function (liElement) {\n\t\t\tlet id = liElement.attr('id');\n\t\t\tlet idArr = id.split('-');\n\t\t\tlet currentOptionId = '';\n\t\t\tif (idArr.length > 0) {\n\t\t\t\tcurrentOptionId = idArr[idArr.length - 1];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $('#filterOptionId_' + currentOptionId);\n\t\t},\n\t\treadSelectedIds: function (decode) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\tlet selectedIdsElement = $('#selectedIds');\n\t\t\tif (selectedIdsElement.length <= 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet selectedIdsDataAttr = cvId + 'selectedIds';\n\t\t\tlet selectedIdsElementDataAttributes = selectedIdsElement.data();\n\t\t\tlet selectedIds = [];\n\t\t\tif (!(selectedIdsDataAttr in selectedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeSelectedIds(selectedIds);\n\t\t\t} else {\n\t\t\t\tselectedIds = selectedIdsElementDataAttributes[selectedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true) {\n\t\t\t\tif (typeof selectedIds == 'object') {\n\t\t\t\t\treturn JSON.stringify(selectedIds);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selectedIds;\n\t\t},\n\t\treadExcludedIds: function (decode) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\tlet excludedIds = [];\n\t\t\tlet exlcudedIdsElement = $('#excludedIds');\n\t\t\tlet excludedIdsDataAttr = cvId + 'Excludedids';\n\t\t\tlet excludedIdsElementDataAttributes = exlcudedIdsElement.data();\n\t\t\tif (!(excludedIdsDataAttr in excludedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeExcludedIds(excludedIds);\n\t\t\t} else {\n\t\t\t\texcludedIds = excludedIdsElementDataAttributes[excludedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true) {\n\t\t\t\tif (typeof excludedIds == 'object') {\n\t\t\t\t\treturn JSON.stringify(excludedIds);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn excludedIds;\n\t\t},\n\t\twriteSelectedIds: function (selectedIds) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\tif (!Array.isArray(selectedIds)) {\n\t\t\t\tselectedIds = [selectedIds];\n\t\t\t}\n\t\t\t$('#selectedIds').data(cvId + 'selectedIds', selectedIds);\n\t\t},\n\t\twriteExcludedIds: function (excludedIds) {\n\t\t\tlet cvId = this.getCurrentCvId();\n\t\t\t$('#excludedIds').data(cvId + 'Excludedids', excludedIds);\n\t\t},\n\t\tgetCurrentCvId: function () {\n\t\t\treturn $('#customFilter').find('option:selected').data('id');\n\t\t},\n\t\tgetAlphabetSearchField: function () {\n\t\t\treturn $('#alphabetSearchKey').val();\n\t\t},\n\t\tgetAlphabetSearchValue: function () {\n\t\t\treturn $('#alphabetValue').val();\n\t\t},\n\t\t/**\n\t\t * Function to check whether atleast minNumberOfRecords is checked\n\t\t * @param {number} minNumberOfRecords\n\t\t * @returns {boolean}\n\t\t */\n\t\tcheckListRecordSelected(minNumberOfRecords = 1) {\n\t\t\tif (\n\t\t\t\t(this.listViewContentContainer != false &&\n\t\t\t\t\tthis.listViewContentContainer.length != 0 &&\n\t\t\t\t\tthis.listViewContentContainer.find('#selectedIds').length == 0) ||\n\t\t\t\t((this.listViewContentContainer == false || this.listViewContentContainer.length == 0) &&\n\t\t\t\t\t$('#selectedIds').length == 0)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet selectedIds = this.readSelectedIds();\n\t\t\tif (typeof selectedIds === 'object' && selectedIds.length < minNumberOfRecords) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinactiveFieldValidation: function (field) {\n\t\t\tfield.validationEngine('hide');\n\t\t\tlet form = field.closest('form');\n\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\tlet fields = [field.get(0)];\n\t\t\tfield.attr('data-invalid-validation-engine', field.attr('data-validation-engine'));\n\t\t\tfield.removeAttr('data-validation-engine');\n\n\t\t\tif (field.is('select') && field.hasClass('select2')) {\n\t\t\t\tlet selectElement = app.getSelect2ElementFromSelect(field);\n\t\t\t\tselectElement.validationEngine('hide');\n\t\t\t\tfields.push(selectElement.get(0));\n\t\t\t}\n\t\t\tfor (let i in fields) {\n\t\t\t\tlet response = $.inArray(fields[i], invalidFields);\n\t\t\t\tif (response != '-1') {\n\t\t\t\t\tinvalidFields.splice(response, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tactiveFieldValidation: function (field) {\n\t\t\tlet validationVal = field.attr('data-invalid-validation-engine');\n\t\t\tif (typeof validationVal === 'undefined') return;\n\t\t\tfield.attr('data-validation-engine', validationVal);\n\t\t\tfield.removeAttr('data-invalid-validation-engine');\n\t\t},\n\t\tpostMassEdit: function (massEditContainer) {\n\t\t\tlet thisInstance = this;\n\t\t\tlet editInstance = Vtiger_Edit_Js.getInstance();\n\t\t\tmassEditContainer.find('.selectRow').on('change', function (e) {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet blockElement = element.closest('.js-form-row-container').find('.fieldValue');\n\t\t\t\tlet fieldElement = blockElement.find('[data-validation-engine],[data-invalid-validation-engine]');\n\t\t\t\tlet fieldInfo = fieldElement.data('fieldinfo');\n\t\t\t\tif (element.prop('checked')) {\n\t\t\t\t\tthisInstance.activeFieldValidation(fieldElement);\n\t\t\t\t} else {\n\t\t\t\t\tthisInstance.inactiveFieldValidation(fieldElement);\n\t\t\t\t}\n\t\t\t\tif (fieldInfo !== undefined && fieldInfo.type === 'reference') {\n\t\t\t\t\tlet mapFields = editInstance.getMappingRelatedField(\n\t\t\t\t\t\tfieldInfo.name,\n\t\t\t\t\t\teditInstance.getReferencedModuleName(blockElement),\n\t\t\t\t\t\tmassEditContainer\n\t\t\t\t\t);\n\t\t\t\t\t$.each(mapFields, function (key, value) {\n\t\t\t\t\t\tlet checkboxElement = massEditContainer.find('[id=\"selectRow' + key + '\"]');\n\t\t\t\t\t\tif (checkboxElement.length && checkboxElement.prop('disabled')) {\n\t\t\t\t\t\t\tcheckboxElement.prop('disabled', false);\n\t\t\t\t\t\t\tcheckboxElement.trigger('click');\n\t\t\t\t\t\t\tcheckboxElement.prop('disabled', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tmassEditContainer.find('form').on('submit', function (e) {\n\t\t\t\tlet form = $(e.currentTarget);\n\t\t\t\tif (typeof form.data('submit') !== 'undefined') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (form.validationEngine('validate')) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (!form.find('input[id^=\"selectRow\"]:checked').length) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_NONE_FIELD_MARKED_IN_MASS_EDIT'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\t\t\tif (invalidFields.length == 0) {\n\t\t\t\t\t\tform.find('[name=\"saveButton\"]').prop('disabled', true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthisInstance\n\t\t\t\t\t\t.massActionSave(form, true)\n\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\tthisInstance.getListViewRecords();\n\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\tapp.formAlignmentAfterValidation(form);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to go to page\n\t\t * @param {int} page\n\t\t */\n\t\tpaginationGoToPage(page) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = self.getListViewContainer();\n\t\t\tlet aDeferred = $.Deferred(),\n\t\t\t\tpageNumber = listViewPageDiv.find('#pageNumber');\n\t\t\tpageNumber.val(page);\n\t\t\tlistViewPageDiv.find('.js-page-jump').val(page);\n\t\t\tself\n\t\t\t\t.getListViewRecords({\n\t\t\t\t\torderby: listViewPageDiv.find('#orderBy').val(),\n\t\t\t\t\tsortorder: listViewPageDiv.find('#sortOrder').val(),\n\t\t\t\t\tviewname: self.getCurrentCvId()\n\t\t\t\t})\n\t\t\t\t.done(function (data) {\n\t\t\t\t\taDeferred.resolve();\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to register List view Page Navigation\n\t\t */\n\t\tregisterPageNavigationEvents() {\n\t\t\tconst listViewPageDiv = this.getListViewContainer();\n\t\t\tlistViewPageDiv.find('.js-next-page').on('click', (e) => {\n\t\t\t\tthis.jumpToNextPage(e);\n\t\t\t});\n\t\t\tlistViewPageDiv.find('.js-page--previous').on('click', () => {\n\t\t\t\tthis.jumpToPreviousPage();\n\t\t\t});\n\t\t\tlistViewPageDiv.find('.pageNumber').on('click', (e) => {\n\t\t\t\tthis.jumpToClickedPage($(e.currentTarget));\n\t\t\t});\n\t\t\tlistViewPageDiv.find('.js-count-number-records').on('click', () => {\n\t\t\t\tthis.updatePaginationAjax(true);\n\t\t\t});\n\t\t\tlistViewPageDiv\n\t\t\t\t.find('.js-page--jump-drop-down')\n\t\t\t\t.on('click', 'li', (e) => {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t})\n\t\t\t\t.on('keypress', '.js-page-jump', (e) => {\n\t\t\t\t\tthis.jumpToPage(e);\n\t\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Jump to next page\n\t\t * @param {$} element\n\t\t */\n\t\tjumpToNextPage(element) {\n\t\t\tif ($(element.currentTarget).hasClass('disabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst listViewPageDiv = this.getListViewContainer();\n\t\t\tif (listViewPageDiv.find('#noOfEntries').val() === listViewPageDiv.find('#pageLimit').val()) {\n\t\t\t\tthis.paginationGoToPage(parseInt(listViewPageDiv.find('#pageNumber').val()) + 1);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Jump to previous page\n\t\t */\n\t\tjumpToPreviousPage() {\n\t\t\tlet pageNumber = this.getListViewContainer().find('#pageNumber');\n\t\t\tif (pageNumber.val() > 1) {\n\t\t\t\tthis.paginationGoToPage(parseInt(pageNumber.val()) - 1);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Jump to clicked page function\n\t\t * @param {$} element\n\t\t */\n\t\tjumpToClickedPage(element) {\n\t\t\tif (element.hasClass('disabled')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.paginationGoToPage(element.data('id'));\n\t\t},\n\t\t/**\n\t\t * Jump to page function\n\t\t * @param {$.Event} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tjumpToPage(e) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = this.getListViewContainer();\n\t\t\tif (13 === e.which) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tlet element = $(e.currentTarget),\n\t\t\t\t\tresponse = Vtiger_WholeNumberGreaterThanZero_Validator_Js.invokeValidation(element);\n\t\t\t\tif (typeof response !== 'undefined') {\n\t\t\t\t\telement.validationEngine('showPrompt', response, '', 'topLeft', true);\n\t\t\t\t} else {\n\t\t\t\t\telement.validationEngine('hideAll');\n\t\t\t\t\tlet currentPageElement = listViewPageDiv.find('#pageNumber'),\n\t\t\t\t\t\tcurrentPageNumber = parseInt(currentPageElement.val()),\n\t\t\t\t\t\tnewPageNumber = parseInt(element.val()),\n\t\t\t\t\t\ttotalPages = parseInt(listViewPageDiv.find('.js-page--total').text());\n\t\t\t\t\tif (newPageNumber > totalPages) {\n\t\t\t\t\t\telement.validationEngine('showPrompt', app.vtranslate('JS_PAGE_NOT_EXIST'), '', 'topLeft', true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (newPageNumber === currentPageNumber) {\n\t\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_YOU_ARE_IN_PAGE_NUMBER') + ' ' + newPageNumber,\n\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentPageElement.val(newPageNumber);\n\t\t\t\t\tself.getListViewRecords();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to get page count and total number of records in list\n\t\t */\n\t\tgetPageCount: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet pageCountParams = this.getPageJumpParams();\n\t\t\tAppConnector.request(pageCountParams)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tlet response;\n\t\t\t\t\tif (typeof data != 'object') {\n\t\t\t\t\t\tresponse = JSON.parse(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresponse = data;\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(response);\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to get Page Jump Params\n\t\t */\n\t\tgetPageJumpParams: function () {\n\t\t\tlet params = this.getDefaultParams();\n\t\t\tparams.view = 'ListAjax';\n\t\t\tparams.mode = 'getPageCount';\n\n\t\t\treturn params;\n\t\t},\n\t\t/**\n\t\t * Function to update Pagining status\n\t\t */\n\t\tupdatePagination: function (pageNumber) {\n\t\t\tpageNumber = typeof pageNumber !== 'undefined' ? pageNumber : 1;\n\t\t\tAppConnector.request(\n\t\t\t\tObject.assign(this.getDefaultParams(), {\n\t\t\t\t\tmodule: app.getModuleName(),\n\t\t\t\t\tview: 'Pagination',\n\t\t\t\t\tpage: pageNumber,\n\t\t\t\t\tmode: 'getPagination',\n\t\t\t\t\tsourceModule: $('#moduleFilter').val(),\n\t\t\t\t\ttotalCount: $('.pagination').data('totalCount'),\n\t\t\t\t\tnoOfEntries: $('#noOfEntries').val()\n\t\t\t\t})\n\t\t\t).done((data) => {\n\t\t\t\t$('.paginationDiv').html(data);\n\t\t\t\tthis.registerPageNavigationEvents();\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to update pagination page numer\n\t\t * @param {boolean} force\n\t\t */\n\t\tupdatePaginationAjax(force = false) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = this.getListViewContainer();\n\t\t\tlet params = self.getDefaultParams(),\n\t\t\t\tcontainer = listViewPageDiv.find('.paginationDiv');\n\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\ttitle: app.vtranslate('JS_LBL_PERMISSION'),\n\t\t\t\ttext: app.vtranslate('JS_GET_PAGINATION_INFO'),\n\t\t\t\ttype: 'info'\n\t\t\t});\n\t\t\tif (container.find('.js-pagination-list').data('total-count') > 0 || force) {\n\t\t\t\tparams.totalCount = -1;\n\t\t\t\tparams.view = 'Pagination';\n\t\t\t\tparams.mode = 'getPagination';\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\tcontainer.html(data);\n\t\t\t\t\tself.registerPageNavigationEvents();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the event for changing the custom Filter\n\t\t */\n\t\tregisterChangeCustomFilterEvent: function (event) {\n\t\t\tlet target = $(event.currentTarget);\n\t\t\tlet selectOption = '';\n\t\t\tlet selectOptionId = '';\n\t\t\tlet textOption = '';\n\t\t\tif (target.is('option')) {\n\t\t\t\tselectOption = target;\n\t\t\t} else if (event.type === 'select2:selecting') {\n\t\t\t\tselectOptionId = event.params.args.data.id;\n\t\t\t\tselectOption = $(`#filterOptionId_${selectOptionId}`);\n\t\t\t} else if (event.type === 'mouseup') {\n\t\t\t\tselectOptionId = event.currentTarget.id.split('-').pop();\n\t\t\t\tselectOption = $(`#filterOptionId_${selectOptionId}`);\n\t\t\t\tthis.getFilterSelectElement().val(event.currentTarget.id.split('-').pop()).trigger('change');\n\t\t\t}\n\n\t\t\tif ($(`.nav-item[data-cvid='${selectOptionId}'] .nav-link`).tab('show').length === 0) {\n\t\t\t\t$('.js-filter-tab .active').removeClass('active');\n\t\t\t}\n\n\t\t\tif (typeof selectOption === 'object') {\n\t\t\t\ttextOption = selectOption.text();\n\t\t\t}\n\n\t\t\t$('#select2-customFilter-container span').contents().last().replaceWith(textOption);\n\t\t\tapp.setMainParams('pageNumber', '1');\n\t\t\tapp.setMainParams('pageToJump', '1');\n\t\t\tapp.setMainParams('orderBy', selectOption.data('orderby'));\n\t\t\tapp.setMainParams('sortOrder', selectOption.data('sortorder'));\n\t\t\tlet urlParams = {\n\t\t\t\tviewname: selectOption.val(),\n\t\t\t\t//to make alphabetic search empty\n\t\t\t\tsearch_key: this.getAlphabetSearchField(),\n\t\t\t\tsearch_value: '',\n\t\t\t\tsearch_params: ''\n\t\t\t};\n\t\t\t//Make the select all count as empty\n\t\t\t$('#recordsCount').val('');\n\t\t\t//Make total number of pages as empty\n\t\t\t$('#totalPageCount').text('');\n\t\t\t$('.pagination').data('totalCount', 0);\n\t\t\tthis.getListViewRecords(urlParams).done(() => {\n\t\t\t\tthis.breadCrumbsFilter(selectOption.text());\n\t\t\t\tthis.ListViewPostOperation();\n\t\t\t\tthis.updatePagination(1);\n\t\t\t});\n\t\t\tevent.stopPropagation();\n\t\t},\n\t\t/*\n\t\t * Function to register the event listeners for changing the custom Filter\n\t\t */\n\t\tregisterChangeCustomFilterEventListeners() {\n\t\t\tlet filterSelect = this.getFilterSelectElement();\n\t\t\tfilterSelect.on('select2:selecting', (event) => {\n\t\t\t\t//prevent default select2 event if it isn't keyboard event\n\t\t\t\tif (!$(':focus').length) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tfilterSelect.select2('close');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.registerChangeCustomFilterEvent(event);\n\t\t\t});\n\t\t\t// select change event must be replaced by click to avoid triggering while clicking on options' buttons\n\t\t\tfilterSelect.on('click', 'option', this.registerChangeCustomFilterEvent.bind(this));\n\t\t\t// event triggered by tab filter click\n\t\t\tthis.getFilterBlock().on('mouseup', '.select2-results__option', this.registerChangeCustomFilterEvent.bind(this));\n\t\t\tthis.getListViewTopMenuContainer()\n\t\t\t\t.find('.js-filter-tab')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tconst cvId = $(e.currentTarget).data('cvid');\n\t\t\t\t\tlet selectOption = filterSelect.find(`[value=${cvId}]`);\n\t\t\t\t\tselectOption.trigger('click');\n\t\t\t\t\t$('#select2-customFilter-container span').contents().last().replaceWith(selectOption.text());\n\t\t\t\t\tfilterSelect.val(cvId).trigger('change');\n\t\t\t\t});\n\t\t},\n\t\tbreadCrumbsFilter: function (text) {\n\t\t\tlet breadCrumbs = $('.breadcrumbsContainer');\n\t\t\tlet breadCrumbsLastSpan = breadCrumbs.last('span');\n\t\t\tlet filterExist = breadCrumbsLastSpan.find('.breadCrumbsFilter');\n\t\t\tif (filterExist.length && text != undefined) {\n\t\t\t\tfilterExist.text(' [' + app.vtranslate('JS_FILTER') + ': ' + text + ']');\n\t\t\t} else if (filterExist.length < 1) {\n\t\t\t\ttext = text == undefined ? this.getFilterSelectElement().find(':selected').text() : text;\n\t\t\t\tif (breadCrumbsLastSpan.hasClass('breadCrumbsFilter')) {\n\t\t\t\t\tbreadCrumbsLastSpan.text(': ' + text);\n\t\t\t\t} else {\n\t\t\t\t\tbreadCrumbs.append(\n\t\t\t\t\t\t'<small class=\"breadCrumbsFilter hideToHistory p-1 js-text-content u-text-ellipsis--no-hover\" data-js=\"text\"> [' +\n\t\t\t\t\t\t\tapp.vtranslate('JS_FILTER') +\n\t\t\t\t\t\t\t': ' +\n\t\t\t\t\t\t\ttext +\n\t\t\t\t\t\t\t']</small>'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tListViewPostOperation: function () {\n\t\t\treturn true;\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for list view main check box.\n\t\t */\n\t\tregisterMainCheckBoxClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '#listViewEntriesMainCheckBox', function () {\n\t\t\t\tlet selectedIds = thisInstance.readSelectedIds();\n\t\t\t\tlet excludedIds = thisInstance.readExcludedIds();\n\t\t\t\tif ($('#listViewEntriesMainCheckBox').is(':checked')) {\n\t\t\t\t\tlet recordCountObj = thisInstance.getRecordsCount();\n\t\t\t\t\trecordCountObj.done(function (data) {\n\t\t\t\t\t\t$('#totalRecordsCount').text(data);\n\t\t\t\t\t\tif ($('#deSelectAllMsgDiv').css('display') == 'none') {\n\t\t\t\t\t\t\t$('#selectAllMsgDiv').show();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\t\tif ($.inArray($(element).val(), excludedIds) != -1) {\n\t\t\t\t\t\t\t\texcludedIds.splice($.inArray($(element).val(), excludedIds), 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if ($.inArray($(element).val(), selectedIds) == -1) {\n\t\t\t\t\t\t\tselectedIds.push($(element).val());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\t\texcludedIds.push($(element).val());\n\t\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedIds.splice($.inArray($(element).val(), selectedIds), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthisInstance.writeSelectedIds(selectedIds);\n\t\t\t\tthisInstance.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function  to register click event for list view check box.\n\t\t */\n\t\tregisterCheckBoxClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '.listViewEntriesCheckBox', function (e) {\n\t\t\t\tlet selectedIds = thisInstance.readSelectedIds();\n\t\t\t\tlet excludedIds = thisInstance.readExcludedIds();\n\t\t\t\tlet elem = $(e.currentTarget);\n\t\t\t\tif (elem.is(':checked')) {\n\t\t\t\t\telem.closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.splice($.inArray(elem.val(), excludedIds), 1);\n\t\t\t\t\t} else if ($.inArray(elem.val(), selectedIds) == -1) {\n\t\t\t\t\t\tselectedIds.push(elem.val());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telem.closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.push(elem.val());\n\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselectedIds.splice($.inArray(elem.val(), selectedIds), 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthisInstance.checkSelectAll();\n\t\t\t\tthisInstance.writeSelectedIds(selectedIds);\n\t\t\t\tthisInstance.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for select all.\n\t\t */\n\t\tregisterSelectAllClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '#selectAllMsg', function () {\n\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t$('#deSelectAllMsgDiv').show();\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', true);\n\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tthisInstance.writeSelectedIds('all');\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for deselect All.\n\t\t */\n\t\tregisterDeselectAllClickEvent: function () {\n\t\t\tlet listViewPageDiv = this.getListViewContainer();\n\t\t\tlet thisInstance = this;\n\t\t\tlistViewPageDiv.on('click', '#deSelectAllMsg', function () {\n\t\t\t\t$('#deSelectAllMsgDiv').hide();\n\t\t\t\t$('#listViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t\t$('.listViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tlet excludedIds = [];\n\t\t\t\tlet selectedIds = [];\n\t\t\t\tthisInstance.writeSelectedIds(selectedIds);\n\t\t\t\tthisInstance.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for listView headers\n\t\t */\n\t\tregisterHeadersClickEvent: function () {\n\t\t\tYetiForce_ListSearch_Js.registerSearch(this.getListViewContainer(), (data) => {\n\t\t\t\tthis.getListViewRecords(data);\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * function to register the click event event for create filter\n\t\t */\n\t\tcreateFilterClickEvent: function (event) {\n\t\t\t//to close the dropdown\n\t\t\tthis.getFilterSelectElement().data('select2').close();\n\t\t\tnew CustomView($(event.currentTarget).find('#createFilter').data('createurl'));\n\t\t},\n\t\tregisterFeaturedFilterClickEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-favorites', function (event) {\n\t\t\t\t\tlet liElement = $(this).closest('.select2-results__option');\n\t\t\t\t\tlet currentOptionElement = thisInstance.getSelectOptionFromChosenOption(liElement);\n\t\t\t\t\tlet params = {\n\t\t\t\t\t\tcvid: currentOptionElement.attr('value'),\n\t\t\t\t\t\tmodule: 'CustomView',\n\t\t\t\t\t\taction: 'Featured',\n\t\t\t\t\t\tsorceModuleName: app.getModuleName()\n\t\t\t\t\t};\n\t\t\t\t\tif (currentOptionElement.data('featured') === 1) {\n\t\t\t\t\t\tparams.actions = 'remove';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparams.actions = 'add';\n\t\t\t\t\t}\n\t\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for duplicate filter\n\t\t */\n\t\tregisterDuplicateFilterClickEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-duplicate', function (event) {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tlet liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tlet currentOptionElement = thisInstance.getSelectOptionFromChosenOption(liElement);\n\t\t\t\t\tlet editUrl = currentOptionElement.data('duplicateurl');\n\t\t\t\t\tnew CustomView(editUrl);\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for edit filter\n\t\t */\n\t\tregisterEditFilterClickEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-edit', function (event) {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tlet liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tlet currentOptionElement = thisInstance.getSelectOptionFromChosenOption(liElement);\n\t\t\t\t\tlet editUrl = currentOptionElement.data('editurl');\n\t\t\t\t\tnew CustomView(editUrl);\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for delete filter\n\t\t */\n\t\tregisterDeleteFilterClickEvent: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tconst listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\t//used mouseup event to stop the propagation of customfilter select change event.\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-delete', (event) => {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tconst liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tVtiger_Helper_Js.showConfirmationBox({\n\t\t\t\t\t\tmessage: app.vtranslate('JS_LBL_ARE_YOU_SURE_YOU_WANT_TO_DELETE_FILTER')\n\t\t\t\t\t}).done((e) => {\n\t\t\t\t\t\tAppConnector.requestForm(thisInstance.getSelectOptionFromChosenOption(liElement).data('deleteurl'));\n\t\t\t\t\t});\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for approve filter\n\t\t */\n\t\tregisterApproveFilterClickEvent: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tconst listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-approve', (event) => {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tconst liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tAppConnector.requestForm(thisInstance.getSelectOptionFromChosenOption(liElement).data('approveurl'));\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the click event for deny filter\n\t\t */\n\t\tregisterDenyFilterClickEvent: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tconst listViewFilterBlock = this.getFilterBlock();\n\t\t\tif (listViewFilterBlock != false) {\n\t\t\t\tlistViewFilterBlock.on('mouseup', '.js-filter-deny', (event) => {\n\t\t\t\t\t//to close the dropdown\n\t\t\t\t\tthisInstance.getFilterSelectElement().data('select2').close();\n\t\t\t\t\tconst liElement = $(event.currentTarget).closest('.select2-results__option');\n\t\t\t\t\tAppConnector.requestForm(thisInstance.getSelectOptionFromChosenOption(liElement).data('denyurl'));\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to generate filter actions template\n\t\t */\n\t\tappendFilterActionsTemplate: function (liElement) {\n\t\t\tlet currentOptionElement = this.getSelectOptionFromChosenOption(liElement);\n\t\t\tlet template = $(`<span class=\"js-filter-actions o-filter-actions noWrap float-right\">\n\t\t\t\t\t<span ${\n\t\t\t\t\t\tcurrentOptionElement.data('featured') === 1\n\t\t\t\t\t\t\t? 'title=\"' + app.vtranslate('JS_REMOVE_TO_FAVORITES') + '\"'\n\t\t\t\t\t\t\t: 'title=\"' + app.vtranslate('JS_ADD_TO_FAVORITES') + '\"'\n\t\t\t\t\t} data-value=\"favorites\" data-js=\"click\"\n\t\t\t\t\t\t  class=\" mr-1 js-filter-favorites ${currentOptionElement.data('featured') === 1 ? 'fas fa-star' : 'far fa-star'}\n\t\t\t\t\t\t  \t\t ${currentOptionElement.data('featured') === undefined ? 'd-none' : ''}\"\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_DUPLICATE')}\" data-value=\"duplicate\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-retweet mr-1 js-filter-duplicate ${$('#createFilter').length !== 0 ? '' : 'd-none'}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_EDIT')}\" data-value=\"edit\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-pencil-alt mr-1 js-filter-edit ${currentOptionElement.data('editable') === 1 ? '' : 'd-none'}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_DELETE')}\" data-value=\"delete\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-trash-alt mr-1 js-filter-delete ${currentOptionElement.data('deletable') === 1 ? '' : 'd-none'}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_DENY')}\" data-value=\"deny\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-exclamation-circle mr-1 js-filter-deny ${\n\t\t\t\t\t\t\t\tcurrentOptionElement.data('public') === 1 ? '' : 'd-none'\n\t\t\t\t\t\t\t}\"></span>\n\t\t\t\t\t<span title=\"${app.vtranslate('JS_APPROVE')}\" data-value=\"approve\" data-js=\"click\"\n\t\t\t\t\t\t  class=\"fas fa-check mr-1 js-filter-approve ${currentOptionElement.data('pending') === 1 ? '' : 'd-none'}\"></span>\n\t\t\t\t</span>`);\n\t\t\ttemplate.appendTo(liElement.find('.js-filter__title'));\n\t\t},\n\t\t/*\n\t\t * Function to register the hover event for customview filter options\n\t\t */\n\t\tregisterCustomFilterOptionsHoverEvent: function () {\n\t\t\tlet filterBlock = this.getFilterBlock();\n\t\t\tif (filterBlock != false) {\n\t\t\t\tfilterBlock.on('mouseenter mouseleave', 'li.select2-results__option[role=\"option\"]', (event) => {\n\t\t\t\t\tlet liElement = $(event.currentTarget);\n\t\t\t\t\tlet liFilterImages = liElement.find('.js-filter-actions');\n\t\t\t\t\tif (liElement.hasClass('group-result')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.type === 'mouseenter' && liFilterImages.length === 0) {\n\t\t\t\t\t\tthis.appendFilterActionsTemplate(liElement);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t * Function to register the list view row click event\n\t\t */\n\t\tregisterRowClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.listViewEntries', function (e) {\n\t\t\t\tif ($(e.target).hasClass('js-no-link')) return;\n\t\t\t\tif ($(e.target).closest('div').hasClass('actions')) return;\n\t\t\t\tif ($(e.target).is('button') || $(e.target).parent().is('button')) return;\n\t\t\t\tif ($(e.target).closest('a').hasClass('noLinkBtn')) return;\n\t\t\t\tif ($(e.target, $(e.currentTarget)).is('td:first-child')) return;\n\t\t\t\tif ($(e.target).is('input[type=\"checkbox\"]')) return;\n\t\t\t\tif ($.contains($(e.currentTarget).find('td:last-child').get(0), e.target)) return;\n\t\t\t\tif ($.contains($(e.currentTarget).find('td:first-child').get(0), e.target)) return;\n\t\t\t\tlet elem = $(e.currentTarget);\n\t\t\t\tlet recordUrl = elem.data('recordurl');\n\t\t\t\tif (typeof recordUrl === 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twindow.location.href = recordUrl;\n\t\t\t});\n\t\t},\n\t\tregisterMassRecordsEvents: function () {\n\t\t\tconst self = this;\n\t\t\tthis.getListViewContainer().on('click', '.js-mass-record-event', function () {\n\t\t\t\tlet target = $(this);\n\t\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\t\tif (listInstance.checkListRecordSelected() != true) {\n\t\t\t\t\tif (target.data('type') === 'modal') {\n\t\t\t\t\t\tlet vars = {};\n\t\t\t\t\t\ttarget.data('url').replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\t\t\t\t\t\t\tvars[key] = value;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\turl: target.data('url'),\n\t\t\t\t\t\t\tdata: $.extend(self.getSearchParams(), vars)\n\t\t\t\t\t\t}).done(function (modal) {\n\t\t\t\t\t\t\tapp.showModalWindow(modal);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet params = {};\n\t\t\t\t\t\tif (target.data('confirm')) {\n\t\t\t\t\t\t\tparams.message = target.data('confirm');\n\t\t\t\t\t\t\tparams.title = target.html();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparams.message = target.html();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tVtiger_Helper_Js.showConfirmationBox(params).done(function (e) {\n\t\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator(),\n\t\t\t\t\t\t\t\tdataParams = self.getSearchParams();\n\t\t\t\t\t\t\tdelete dataParams.view;\n\t\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\t\turl: target.data('url'),\n\t\t\t\t\t\t\t\tdata: dataParams\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\tif (data && data.result && data.result.notify) {\n\t\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(data.result.notify);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tself.getListViewRecords();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlistInstance.noRecordSelectedAlert();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Update pagination row\n\t\t * @param {Array} urlParams\n\t\t */\n\t\tmassUpdatePagination(urlParams = []) {\n\t\t\tconst self = this,\n\t\t\t\tlistViewPageDiv = this.getListViewContainer();\n\t\t\tlet paginationObject = listViewPageDiv.find('.js-pagination-list'),\n\t\t\t\ttotalCount = paginationObject.data('totalCount'),\n\t\t\t\tpageNumber = parseInt(listViewPageDiv.find('#pageNumber').val()),\n\t\t\t\ttempPageNumber = pageNumber,\n\t\t\t\tselectedIds = self.readSelectedIds(false);\n\t\t\tif ('all' === selectedIds[0]) {\n\t\t\t\tpageNumber = 1;\n\t\t\t\ttotalCount = 0;\n\t\t\t} else {\n\t\t\t\tif ('' !== totalCount && 0 !== totalCount) {\n\t\t\t\t\ttotalCount = totalCount - selectedIds.length;\n\t\t\t\t}\n\t\t\t\tif (listViewPageDiv.find('#noOfEntries').val() <= 0 && pageNumber !== 1) {\n\t\t\t\t\tpageNumber--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpaginationObject.data('totalCount', totalCount);\n\t\t\tself.updatePagination(pageNumber);\n\t\t\tif (tempPageNumber !== pageNumber) {\n\t\t\t\tif (!$.isEmptyObject(urlParams)) {\n\t\t\t\t\turlParams['page'] = pageNumber;\n\t\t\t\t}\n\t\t\t\tself.getListViewRecords(urlParams);\n\t\t\t}\n\t\t\tself.writeSelectedIds([]);\n\t\t},\n\t\t/*\n\t\t * Function to register the click event of email field\n\t\t */\n\t\tregisterEmailFieldClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.emailField', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event of phone field\n\t\t */\n\t\tregisterPhoneFieldClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.phoneField', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\t/*\n\t\t * Function to register the click event of url field\n\t\t */\n\t\tregisterUrlFieldClickEvent: function () {\n\t\t\tlet listViewContentDiv = this.getListViewContentContainer();\n\t\t\tlistViewContentDiv.on('click', '.urlField', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to inactive field for validation in a form\n\t\t * this will remove data-validation-engine attr of all the elements\n\t\t * @param Accepts form as a parameter\n\t\t */\n\t\tinactiveFieldsValidation: function (form) {\n\t\t\tlet massEditFieldList = $('#massEditFieldsNameList').data('value');\n\t\t\tfor (let fieldName in massEditFieldList) {\n\t\t\t\tlet fieldInfo = massEditFieldList[fieldName];\n\n\t\t\t\tlet fieldElement = form.find('[name=\"' + fieldInfo.name + '\"]');\n\t\t\t\tif (fieldInfo.type == 'reference') {\n\t\t\t\t\t//get the element which will be shown which has \"_display\" appended to actual field name\n\t\t\t\t\tfieldElement = form.find('[name=\"' + fieldInfo.name + '_display\"]');\n\t\t\t\t} else if (fieldInfo.type == 'multipicklist' || fieldInfo.type == 'sharedOwner') {\n\t\t\t\t\tfieldElement = form.find('[name=\"' + fieldInfo.name + '[]\"]');\n\t\t\t\t}\n\n\t\t\t\t//Not all the fields will be enabled for mass edit\n\t\t\t\tif (fieldElement.length == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet elemData = fieldElement.data();\n\n\t\t\t\t//Blank validation by default\n\t\t\t\tlet validationVal = 'validate[]';\n\t\t\t\tif ('validationEngine' in elemData) {\n\t\t\t\t\tvalidationVal = elemData.validationEngine;\n\t\t\t\t\tdelete elemData.validationEngine;\n\t\t\t\t}\n\t\t\t\tfieldElement.attr('data-invalid-validation-engine', validationVal);\n\t\t\t\tfieldElement.removeAttr('data-validation-engine');\n\t\t\t}\n\t\t},\n\t\tregisterEventForTabClick: function (form) {\n\t\t\tlet ulContainer = form.find('.massEditTabs');\n\t\t\tulContainer.on('click', 'a[data-toggle=\"tab\"]', function (e) {\n\t\t\t\tform.validationEngine('validate');\n\t\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\t\tif (invalidFields.length > 0) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterSlimScrollMassEdit: function () {\n\t\t\tapp.showScrollBar($('div[name=\"massEditContent\"]'), {\n\t\t\t\theight: app.getScreenHeight(70) + 'px'\n\t\t\t});\n\t\t},\n\t\tchangeCustomFilterElementView: function () {\n\t\t\tconst thisInstance = this;\n\t\t\tlet filterSelectElement = this.getFilterSelectElement();\n\t\t\tif (filterSelectElement.length > 0 && filterSelectElement.is('select')) {\n\t\t\t\tApp.Fields.Picklist.showSelect2ElementView(filterSelectElement, {\n\t\t\t\t\ttemplateSelection: function (data) {\n\t\t\t\t\t\tlet resultContainer = $('<span></span>');\n\t\t\t\t\t\tresultContainer.append($($('.filterImage').clone().get(0)).show());\n\t\t\t\t\t\tresultContainer.append(data.text);\n\t\t\t\t\t\treturn resultContainer;\n\t\t\t\t\t},\n\t\t\t\t\tcustomSortOptGroup: true,\n\t\t\t\t\ttemplateResult: function (data) {\n\t\t\t\t\t\tlet actualElement = $(data.element);\n\t\t\t\t\t\tif (actualElement.is('option')) {\n\t\t\t\t\t\t\tlet additionalText = '';\n\t\t\t\t\t\t\tif (actualElement.data('option') !== undefined) {\n\t\t\t\t\t\t\t\tadditionalText =\n\t\t\t\t\t\t\t\t\t'<div class=\"u-max-w-lg-100 u-text-ellipsis--no-hover d-inline-block small\">' +\n\t\t\t\t\t\t\t\t\tactualElement.data('option') +\n\t\t\t\t\t\t\t\t\t'</div>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t'<div class=\"js-filter__title d-flex justify-content-between\" data-js=\"appendTo\"><div class=\"u-text-ellipsis--no-hover\">' +\n\t\t\t\t\t\t\t\tactualElement.text() +\n\t\t\t\t\t\t\t\t'</div></div>' +\n\t\t\t\t\t\t\t\tadditionalText\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn actualElement.attr('label');\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tescapeMarkup: function (markup) {\n\t\t\t\t\t\treturn markup;\n\t\t\t\t\t},\n\t\t\t\t\tcloseOnSelect: true\n\t\t\t\t});\n\n\t\t\t\tlet select2Instance = filterSelectElement.data('select2');\n\t\t\t\t$('.filterActionsDiv')\n\t\t\t\t\t.appendTo(select2Instance.$dropdown.find('.select2-dropdown:last'))\n\t\t\t\t\t.removeClass('d-none')\n\t\t\t\t\t.on('click', function (e) {\n\t\t\t\t\t\tthisInstance.createFilterClickEvent(e);\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to show total records count in listview on hover\n\t\t * of pageNumber text\n\t\t */\n\t\tregisterEventForTotalRecordsCount: function () {\n\t\t\tlet thisInstance = this;\n\t\t\t$('.totalNumberOfRecords').on('click', function (e) {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet totalRecordsElement = $('#totalCount');\n\t\t\t\tlet totalNumberOfRecords = totalRecordsElement.val();\n\t\t\t\telement.addClass('d-none');\n\t\t\t\telement.parent().progressIndicator({});\n\t\t\t\tif (totalNumberOfRecords == '') {\n\t\t\t\t\tthisInstance.getPageCount().done(function (data) {\n\t\t\t\t\t\ttotalNumberOfRecords = data['result']['numberOfRecords'];\n\t\t\t\t\t\ttotalRecordsElement.val(totalNumberOfRecords);\n\t\t\t\t\t\tthisInstance.showPagingInfo();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthisInstance.showPagingInfo();\n\t\t\t\t}\n\t\t\t\telement.parent().progressIndicator({ mode: 'hide' });\n\t\t\t});\n\t\t},\n\t\tshowPagingInfo: function () {\n\t\t\tlet totalNumberOfRecords = $('#totalCount').val();\n\t\t\tlet pageNumberElement = $('.pageNumbersText');\n\t\t\tlet pageRange = pageNumberElement.text();\n\t\t\tlet newPagingInfo = pageRange + ' (' + totalNumberOfRecords + ')';\n\t\t\tlet listViewEntriesCount = parseInt($('#noOfEntries').val());\n\t\t\tif (listViewEntriesCount != 0) {\n\t\t\t\t$('.pageNumbersText').html(newPagingInfo);\n\t\t\t} else {\n\t\t\t\t$('.pageNumbersText').html('');\n\t\t\t}\n\t\t},\n\t\tregisterUnreviewedCountEvent: function () {\n\t\t\tlet ids = [],\n\t\t\t\tlistViewContentDiv = this.getListViewContentContainer(),\n\t\t\t\tisUnreviewedActive = listViewContentDiv.find('.unreviewed').length;\n\t\t\tlistViewContentDiv.find('tr.listViewEntries').each(function () {\n\t\t\t\tlet id = $(this).data('id');\n\t\t\t\tif (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!ids || isUnreviewedActive < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\taction: 'ChangesReviewedOn',\n\t\t\t\tmode: 'getUnreviewed',\n\t\t\t\tmodule: 'ModTracker',\n\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\trecordsId: ids\n\t\t\t}).done((appData) => {\n\t\t\t\tlet data = appData.result;\n\t\t\t\t$.each(data, function (id, value) {\n\t\t\t\t\tif (value.a > 0) {\n\t\t\t\t\t\tlistViewContentDiv\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.all')\n\t\t\t\t\t\t\t.text(value.a)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t\tif (value.m > 0) {\n\t\t\t\t\t\tlistViewContentDiv\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.mail')\n\t\t\t\t\t\t\t.text(value.m)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.reflowThead();\n\t\t\t});\n\t\t},\n\t\tregisterLastRelationsEvent: function () {\n\t\t\tlet ids = [],\n\t\t\t\tlistViewContentDiv = this.getListViewContentContainer(),\n\t\t\t\tisTimeLineActive = listViewContentDiv.find('.timeLineIconList').length;\n\t\t\tlistViewContentDiv.find('tr.listViewEntries').each(function () {\n\t\t\t\tlet id = $(this).data('id');\n\t\t\t\tif (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!ids || isTimeLineActive < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\taction: 'LastRelation',\n\t\t\t\tmodule: 'ModTracker',\n\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\trecordsId: ids\n\t\t\t}).done((appData) => {\n\t\t\t\tlet data = appData.result;\n\t\t\t\t$.each(data, function (id, value) {\n\t\t\t\t\tif (value.type) {\n\t\t\t\t\t\tlistViewContentDiv\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .timeLineIconList')\n\t\t\t\t\t\t\t.addClass(value.color + ' yfm-' + value.type)\n\t\t\t\t\t\t\t.removeClass('d-none')\n\t\t\t\t\t\t\t.on('click', function (e) {\n\t\t\t\t\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\t\t\t\t\tlet url = element.data('url');\n\t\t\t\t\t\t\t\tapp.showModalWindow(null, url, function (data) {\n\t\t\t\t\t\t\t\t\tVtiger_Index_Js.registerMailButtons(data);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.reflowThead();\n\t\t\t});\n\t\t},\n\t\tregisterChangeEntityStateEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\t$('.dropdownEntityState a').on('click', function (e) {\n\t\t\t\tlet element = $(this);\n\t\t\t\telement.closest('ul').find('a').removeClass('active');\n\t\t\t\telement.addClass('active');\n\t\t\t\t$('#entityState').val(element.data('value'));\n\t\t\t\tapp.setMainParams('pageNumber', '1');\n\t\t\t\tapp.setMainParams('pageToJump', '1');\n\t\t\t\t$('#recordsCount').val('');\n\t\t\t\t$('#totalPageCount').text('');\n\t\t\t\t$('.pagination').data('totalCount', 0);\n\t\t\t\t$('#dropdownEntityState').find('.js-icon').attr('class', element.find('.js-icon').attr('class'));\n\t\t\t\tthisInstance.getListViewRecords().done(function (data) {\n\t\t\t\t\tthisInstance.calculatePages().done(function () {\n\t\t\t\t\t\tthisInstance.updatePagination();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterSummationEvent: function () {\n\t\t\tlet self = this;\n\t\t\tlet listContainer = this.getListViewContentContainer();\n\t\t\tlistContainer.on('click', '.listViewSummation button', function () {\n\t\t\t\tlet button = $(this);\n\t\t\t\tlet calculateValue = button.closest('td').find('.calculateValue');\n\t\t\t\tlet params = self.getSearchParams();\n\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\tmessage: app.vtranslate('JS_CALCULATING_IN_PROGRESS'),\n\t\t\t\t\tposition: 'html',\n\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tparams.action = 'List';\n\t\t\t\tparams.mode = 'calculate';\n\t\t\t\tparams.fieldName = button.data('field');\n\t\t\t\tparams.calculateType = button.data('operator');\n\t\t\t\tdelete params.view;\n\t\t\t\tapp.hidePopover(button);\n\t\t\t\tlet scrollLeft = listContainer.scrollLeft();\n\t\t\t\tlet scrollTop = listContainer.scrollTop();\n\t\t\t\tAppConnector.request(params).done((response) => {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\tcalculateValue.html(response.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcalculateValue.html('');\n\t\t\t\t\t}\n\t\t\t\t\tself.registerFixedThead(listContainer);\n\t\t\t\t\tlistContainer.scrollLeft(scrollLeft);\n\t\t\t\t\tlistContainer.scrollTop(scrollTop);\n\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterListScroll: function (container) {\n\t\t\tconst containerH = container.height(),\n\t\t\t\tcontainerOffsetTop = container.offset().top,\n\t\t\t\tfooterH = $('.js-footer').height(),\n\t\t\t\twindowH = $(window).height();\n\t\t\t//\tif list is bigger than window fit its height to it\n\t\t\tif (containerH + containerOffsetTop + footerH > windowH) {\n\t\t\t\tcontainer.height(windowH - (containerOffsetTop + footerH));\n\t\t\t}\n\t\t\tcontainer.find('.js-fixed-thead').floatThead('destroy');\n\t\t\tcontainer.siblings('.floatThead-container').remove();\n\t\t\tapp.showNewScrollbarTopBottomRight(container);\n\t\t\tapp.registerMiddleClickScroll(container);\n\t\t},\n\t\tregisterFixedThead(container) {\n\t\t\tif (!Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tthis.listFloatThead = container.find('.js-fixed-thead');\n\t\t\t\tthis.listFloatThead.floatThead('destroy');\n\t\t\t\tthis.listFloatThead.floatThead({\n\t\t\t\t\tscrollContainer: function () {\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.listFloatThead.floatThead('reflow');\n\t\t\t}\n\t\t},\n\t\tgetFloatTheadContainer(container = this.getListViewContentContainer()) {\n\t\t\tif (this.listFloatThead === false) {\n\t\t\t\tthis.listFloatThead = container.find('.js-fixed-thead');\n\t\t\t}\n\t\t\treturn this.listFloatThead;\n\t\t},\n\t\treflowThead() {\n\t\t\tif (Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tthis.getFloatTheadContainer().floatThead('reflow');\n\t\t\t}\n\t\t},\n\t\tregisterMassActionsBtnEvents() {\n\t\t\tthis.getListViewContainer().on('click', '.js-mass-action', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet url = element.data('url');\n\t\t\t\tif (typeof url != 'undefined') {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(element.data('checkSelected') !== undefined && element.data('checkSelected') == 0) ||\n\t\t\t\t\t\tthis.checkListRecordSelected() !== true\n\t\t\t\t\t) {\n\t\t\t\t\t\tswitch (element.data('type')) {\n\t\t\t\t\t\t\tcase 'modal':\n\t\t\t\t\t\t\t\tVtiger_List_Js.triggerMassAction(url);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'formRedirect':\n\t\t\t\t\t\t\t\tVtiger_List_Js.triggerExportAction(url, element.data('tab') === 'new');\n\t\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'reload':\n\t\t\t\t\t\t\t\tlet params = self.getSearchParams();\n\t\t\t\t\t\t\t\tdelete params.view;\n\t\t\t\t\t\t\t\tdelete params.action;\n\t\t\t\t\t\t\t\tparams.sourceModule = params.module;\n\t\t\t\t\t\t\t\tdelete params.module;\n\t\t\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t\t\t\tdata: params\n\t\t\t\t\t\t\t\t}).done((response) => {\n\t\t\t\t\t\t\t\t\tself.getListViewRecords();\n\t\t\t\t\t\t\t\t\tVtiger_List_Js.clearList();\n\t\t\t\t\t\t\t\t\tif (response.result) {\n\t\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(response.result.message);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.noRecordSelectedAlert();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t},\n\t\tregisterMassActionsBtnMergeEvents() {\n\t\t\tthis.getListViewContainer().on('click', '.js-mass-action--merge', (e) => {\n\t\t\t\tlet url = $(e.target).data('url');\n\t\t\t\tif (typeof url !== 'undefined') {\n\t\t\t\t\tif (this.checkListRecordSelected(2) !== true) {\n\t\t\t\t\t\tVtiger_List_Js.triggerMassAction(url);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.noRecordSelectedAlert('JS_SELECT_ATLEAST_TWO_RECORD_FOR_MERGING');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register desktop events\n\t\t * @param {$} listViewContainer\n\t\t */\n\t\tregisterDesktopEvents(listViewContainer) {\n\t\t\tif (Quasar.plugins.Platform.is.desktop && listViewContainer.length) {\n\t\t\t\tthis.registerListScroll(listViewContainer);\n\t\t\t\tthis.registerFixedThead(listViewContainer);\n\t\t\t}\n\t\t},\n\t\tregisterPostLoadDesktopEvents(listViewContainer) {\n\t\t\tif (Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tnew PerfectScrollbar(listViewContainer[0]).destroy();\n\t\t\t\tlistViewContainer.find('.js-fixed-thead').floatThead('destroy');\n\t\t\t\tlistViewContainer.siblings('.floatThead-container').remove();\n\t\t\t\tnew PerfectScrollbar(listViewContainer[0]);\n\t\t\t\tthis.registerFixedThead(listViewContainer);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Register keyboard shortcuts events\n\t\t */\n\t\tregisterKeyboardShortcutsEvent: function () {\n\t\t\tdocument.addEventListener('keydown', (event) => {\n\t\t\t\tif (event.altKey && event.code === 'KeyA' && $('.js-add-record').length) {\n\t\t\t\t\twindow.location.href = 'index.php?module=' + app.getModuleName() + '&view=Edit';\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterEvents: function () {\n\t\t\tthis.registerRowClickEvent();\n\t\t\tthis.registerPageNavigationEvents();\n\t\t\tthis.registerMainCheckBoxClickEvent();\n\t\t\tthis.registerCheckBoxClickEvent();\n\t\t\tthis.registerSelectAllClickEvent();\n\t\t\tthis.registerDeselectAllClickEvent();\n\t\t\tthis.registerMassRecordsEvents();\n\t\t\tthis.registerMassActionsBtnMergeEvents();\n\t\t\tthis.registerHeadersClickEvent();\n\t\t\tthis.changeCustomFilterElementView();\n\t\t\tthis.registerFeaturedFilterClickEvent();\n\t\t\tthis.registerChangeCustomFilterEventListeners();\n\t\t\tthis.registerChangeEntityStateEvent();\n\t\t\tthis.registerDuplicateFilterClickEvent();\n\t\t\tthis.registerEditFilterClickEvent();\n\t\t\tthis.registerDeleteFilterClickEvent();\n\t\t\tthis.registerApproveFilterClickEvent();\n\t\t\tthis.registerDenyFilterClickEvent();\n\t\t\tthis.registerCustomFilterOptionsHoverEvent();\n\t\t\tthis.registerEmailFieldClickEvent();\n\t\t\tthis.registerPhoneFieldClickEvent();\n\t\t\tthis.registerMassActionsBtnEvents();\n\t\t\tVtiger_Helper_Js.showHorizontalTopScrollBar();\n\t\t\tthis.registerUrlFieldClickEvent();\n\t\t\tthis.registerEventForTotalRecordsCount();\n\t\t\tthis.registerSummationEvent();\n\t\t\t//Just reset all the checkboxes on page load: added for chrome issue.\n\t\t\tlet listViewContainer = this.getListViewContentContainer();\n\t\t\tlistViewContainer.find('#listViewEntriesMainCheckBox,.listViewEntriesCheckBox').prop('checked', false);\n\t\t\tthis.getListSearchInstance(false);\n\t\t\tthis.registerDesktopEvents(listViewContainer);\n\t\t\tthis.registerUnreviewedCountEvent();\n\t\t\tthis.registerLastRelationsEvent();\n\t\t\tthis.registerKeyboardShortcutsEvent();\n\t\t\tVtiger_Index_Js.registerMailButtons(listViewContainer);\n\t\t},\n\t\t/**\n\t\t * Function that executes after the mass delete action\n\t\t */\n\t\tpostMassDeleteRecords: function () {\n\t\t\tlet aDeferred = $.Deferred();\n\t\t\tlet listInstance = Vtiger_List_Js.getInstance();\n\t\t\tapp.hideModalWindow();\n\t\t\tlistInstance.getListViewRecords().done(function (data) {\n\t\t\t\t$('#recordsCount').val('');\n\t\t\t\t$('#totalPageCount').text('');\n\t\t\t\t$('#deSelectAllMsg').trigger('click');\n\t\t\t\tlistInstance.calculatePages().done(function () {\n\t\t\t\t\tlistInstance.updatePagination();\n\t\t\t\t});\n\t\t\t\taDeferred.resolve();\n\t\t\t});\n\t\t\t$('#recordsCount').val('');\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t}\n);\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\njQuery.Class(\n\t'Vtiger_RelatedList_Js',\n\t{\n\t\trelatedListInstance: false,\n\t\tgetInstance: function (parentId, parentModule, selectedRelatedTabElement, relatedModuleName, url) {\n\t\t\tif (\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance === false ||\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance.moduleName !== relatedModuleName\n\t\t\t) {\n\t\t\t\tlet moduleClassName = app.getModuleName() + '_RelatedList_Js',\n\t\t\t\t\tfallbackClassName = Vtiger_RelatedList_Js,\n\t\t\t\t\tinstance;\n\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\tinstance = new window[moduleClassName]();\n\t\t\t\t} else {\n\t\t\t\t\tinstance = new fallbackClassName();\n\t\t\t\t}\n\t\t\t\tinstance.parentRecordId = parentId;\n\t\t\t\tinstance.parentModuleName = parentModule;\n\t\t\t\tinstance.selectedRelatedTabElement = selectedRelatedTabElement;\n\t\t\t\tinstance.moduleName = relatedModuleName;\n\t\t\t\tinstance.relatedTabsContainer = selectedRelatedTabElement.closest('div.related');\n\t\t\t\tinstance.content = $('div.contents', instance.relatedTabsContainer.closest('div.detailViewContainer'));\n\t\t\t\tinstance.relatedView = instance.content.find('input.relatedView').val();\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance = instance;\n\t\t\t}\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.parseUrlParams(url);\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.setSelectedTabElement(selectedRelatedTabElement);\n\t\t\treturn Vtiger_RelatedList_Js.relatedListInstance;\n\t\t},\n\t\tgetInstanceByUrl: function (url, selectedRelatedTabElement) {\n\t\t\tlet params = app.convertUrlToObject(url);\n\t\t\tif (\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance === false ||\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance.moduleName !== params['relatedModule']\n\t\t\t) {\n\t\t\t\tlet moduleClassName = app.getModuleName() + '_RelatedList_Js',\n\t\t\t\t\tfallbackClassName = Vtiger_RelatedList_Js,\n\t\t\t\t\tinstance;\n\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\tinstance = new window[moduleClassName]();\n\t\t\t\t} else {\n\t\t\t\t\tinstance = new fallbackClassName();\n\t\t\t\t}\n\t\t\t\tinstance.selectedRelatedTabElement = selectedRelatedTabElement;\n\t\t\t\tinstance.relatedTabsContainer = selectedRelatedTabElement.closest('div.related');\n\t\t\t\tinstance.content = $('div.contents', instance.relatedTabsContainer.closest('div.detailViewContainer'));\n\t\t\t\tinstance.relatedView = instance.content.find('input.relatedView').val();\n\t\t\t\tVtiger_RelatedList_Js.relatedListInstance = instance;\n\t\t\t}\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.parentRecordId = params['record'];\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.parentModuleName = params['module'];\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.moduleName = params['relatedModule'];\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.defaultParams = params;\n\t\t\tVtiger_RelatedList_Js.relatedListInstance.setSelectedTabElement(selectedRelatedTabElement);\n\t\t\treturn Vtiger_RelatedList_Js.relatedListInstance;\n\t\t},\n\t\ttriggerMassAction: function (massActionUrl, type) {\n\t\t\tconst self = this.relatedListInstance;\n\t\t\tlet validationResult = self.checkListRecordSelected();\n\t\t\tif (validationResult != true) {\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator(),\n\t\t\t\t\tselectedIds = self.readSelectedIds(true),\n\t\t\t\t\texcludedIds = self.readExcludedIds(true),\n\t\t\t\t\tcvId = self.getCurrentCvId(),\n\t\t\t\t\tpostData = self.getCompleteParams();\n\t\t\t\tdelete postData.mode;\n\t\t\t\tdelete postData.view;\n\t\t\t\tpostData.viewname = cvId;\n\t\t\t\tpostData.selected_ids = selectedIds;\n\t\t\t\tpostData.excluded_ids = excludedIds;\n\t\t\t\tlet actionParams = {\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: massActionUrl,\n\t\t\t\t\tdata: postData\n\t\t\t\t};\n\t\t\t\tif (type === 'sendByForm') {\n\t\t\t\t\tAppConnector.requestForm(massActionUrl, postData);\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t} else {\n\t\t\t\t\tAppConnector.request(actionParams)\n\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\tif (responseData && responseData.result !== null) {\n\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (responseData.result.reloadList) {\n\t\t\t\t\t\t\t\t\tVtiger_Detail_Js.reloadRelatedList();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (responseData.result.processStop) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Method to verify if selected files exist\n\t\t * @return boolean\n\t\t */\n\t\tverifyFileExist: function () {\n\t\t\tconst self = this.relatedListInstance;\n\t\t\tlet aDeferred = jQuery.Deferred(),\n\t\t\t\tselectedIds = self.readSelectedIds(true),\n\t\t\t\texcludedIds = self.readExcludedIds(true),\n\t\t\t\tcvId = self.getCurrentCvId(),\n\t\t\t\tpostData = self.getCompleteParams();\n\t\t\tdelete postData.mode;\n\t\t\tdelete postData.view;\n\t\t\tpostData.viewname = cvId;\n\t\t\tpostData.selected_ids = selectedIds;\n\t\t\tpostData.excluded_ids = excludedIds;\n\t\t\tpostData.action = 'RelationAjax';\n\t\t\tpostData.mode = 'checkFilesIntegrity';\n\t\t\tAppConnector.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\tdata: postData\n\t\t\t}).done(function (responseData) {\n\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t}\n\t\t\t\taDeferred.resolve(true);\n\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Method to trigger mass download action\n\t\t * @param massActionUrl\n\t\t * @param type\n\t\t */\n\t\ttriggerMassDownload: function (massActionUrl, type) {\n\t\t\tconst self = this.relatedListInstance,\n\t\t\t\tthisInstance = this;\n\t\t\tthis.verifyFileExist().done(function (data) {\n\t\t\t\tif (true === data) {\n\t\t\t\t\tthisInstance.triggerMassAction(massActionUrl.substring(0, massActionUrl.indexOf('&mode=multiple')), type);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\ttriggerMassQuickCreate: function (moduleName, data) {\n\t\t\tconst self = this.relatedListInstance;\n\t\t\tif (self.checkListRecordSelected() != true) {\n\t\t\t\tlet listParams = self.getSelectedParams();\n\t\t\t\tlet progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tlet params = {\n\t\t\t\t\tcallbackFunction: function () {\n\t\t\t\t\t\tself.loadRelatedList();\n\t\t\t\t\t},\n\t\t\t\t\tnoCache: true,\n\t\t\t\t\tdata: $.extend(data, {\n\t\t\t\t\t\tsourceView: 'RelatedListView',\n\t\t\t\t\t\tsourceModule: listParams.relatedModule,\n\t\t\t\t\t\tentityState: listParams.entityState,\n\t\t\t\t\t\tsearch_params: listParams.search_params,\n\t\t\t\t\t\texcluded_ids: listParams.excluded_ids,\n\t\t\t\t\t\tselected_ids: listParams.selected_ids,\n\t\t\t\t\t\trelationId: listParams.relationId,\n\t\t\t\t\t\trelatedRecord: listParams.record,\n\t\t\t\t\t\trelatedModule: listParams.module\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tApp.Components.QuickCreate.getForm(\n\t\t\t\t\t'index.php?module=' + moduleName + '&view=MassQuickCreateModal',\n\t\t\t\t\tmoduleName,\n\t\t\t\t\tparams\n\t\t\t\t).done((data) => {\n\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tApp.Components.QuickCreate.showModal(data, params);\n\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.noRecordSelectedAlert();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function to trigger mass send email modal\n\t\t */\n\t\ttriggerSendEmail: function () {\n\t\t\tlet params = Vtiger_RelatedList_Js.relatedListInstance.getDefaultParams();\n\t\t\tVtiger_List_Js.triggerSendEmail(\n\t\t\t\t$.extend(params, {\n\t\t\t\t\trelatedLoad: true,\n\t\t\t\t\tmodule: Vtiger_RelatedList_Js.relatedListInstance.moduleName,\n\t\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\t\tsourceRecord: app.getRecordId()\n\t\t\t\t}),\n\t\t\t\tfunction () {\n\t\t\t\t\tVtiger_Detail_Js.reloadRelatedList();\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\t/**\n\t\t * Function to trigger mass send email modal by row\n\t\t */\n\t\ttriggerSendEmailByRow: function (row) {\n\t\t\tif (!(row instanceof jQuery)) {\n\t\t\t\trow = $(row);\n\t\t\t}\n\t\t\tlet params = Vtiger_RelatedList_Js.relatedListInstance.getDefaultParams();\n\t\t\tVtiger_List_Js.triggerSendEmail(\n\t\t\t\t$.extend(params, {\n\t\t\t\t\trelatedLoad: true,\n\t\t\t\t\tmodule: Vtiger_RelatedList_Js.relatedListInstance.moduleName,\n\t\t\t\t\tsourceModule: app.getModuleName(),\n\t\t\t\t\tsourceRecord: app.getRecordId(),\n\t\t\t\t\tselected_ids: '[\"' + $(row).closest('.js-list__row').data('id') + '\"]'\n\t\t\t\t}),\n\t\t\t\tfunction () {\n\t\t\t\t\tVtiger_Detail_Js.reloadRelatedList();\n\t\t\t\t},\n\t\t\t\trow\n\t\t\t);\n\t\t}\n\t},\n\t{\n\t\tselectedRelatedTabElement: false,\n\t\tparentRecordId: false,\n\t\tparentModuleName: false,\n\t\tmoduleName: false,\n\t\trelatedTabsContainer: false,\n\t\tcontent: false,\n\t\tlistSearchInstance: false,\n\t\tdetailViewContentHolder: false,\n\t\trelatedView: false,\n\t\tframeProgress: false,\n\t\tnoEventsListSearch: false,\n\t\tlistViewContainer: false,\n\t\tdefaultParams: {},\n\t\tsetSelectedTabElement: function (tabElement) {\n\t\t\tthis.selectedRelatedTabElement = tabElement;\n\t\t},\n\t\tgetSelectedTabElement: function () {\n\t\t\treturn this.selectedRelatedTabElement;\n\t\t},\n\t\tgetParentId: function () {\n\t\t\treturn this.parentRecordId;\n\t\t},\n\t\tgetRelatedContainer: function () {\n\t\t\treturn this.content;\n\t\t},\n\t\tsetRelatedContainer: function (container) {\n\t\t\tthis.content = container;\n\t\t\tthis.relatedView = container.find('input.relatedView').val();\n\t\t},\n\t\tgetContentHolder: function () {\n\t\t\tif (this.detailViewContentHolder == false) {\n\t\t\t\tthis.detailViewContentHolder = $('div.details div.contents');\n\t\t\t}\n\t\t\treturn this.detailViewContentHolder;\n\t\t},\n\t\tgetCurrentPageNum: function () {\n\t\t\treturn $('input[name=\"currentPageNum\"]', this.content).val();\n\t\t},\n\t\tsetCurrentPageNumber: function (pageNumber) {\n\t\t\t$('input[name=\"currentPageNum\"]', this.content).val(pageNumber);\n\t\t},\n\t\tgetOrderBy: function () {\n\t\t\treturn $('#orderBy', this.content).val();\n\t\t},\n\t\tgetDefaultParams: function () {\n\t\t\tlet container = this.getRelatedContainer();\n\t\t\tlet params = Object.assign({}, this.defaultParams);\n\t\t\tparams['page'] = this.getCurrentPageNum();\n\t\t\tparams['orderby'] = this.getOrderBy();\n\t\t\tif (container.find('#relationId').val()) {\n\t\t\t\tparams['relationId'] = container.find('#relationId').val();\n\t\t\t}\n\t\t\tif (container.find('.js-relation-cv-id').val()) {\n\t\t\t\tparams['cvId'] = container.find('.js-relation-cv-id').val();\n\t\t\t}\n\t\t\tif (container.find('.pagination').length) {\n\t\t\t\tparams['totalCount'] = container.find('.pagination').data('totalCount');\n\t\t\t}\n\t\t\tif (container.find('.entityState').length) {\n\t\t\t\tparams['entityState'] = container.find('.entityState').val();\n\t\t\t}\n\t\t\tif (this.listSearchInstance) {\n\t\t\t\tparams.search_params = this.listSearchInstance.getListSearchParams();\n\t\t\t\tlet searchValue = this.listSearchInstance.getAlphabetSearchValue();\n\t\t\t\tif (typeof searchValue !== 'undefined' && searchValue.length > 0) {\n\t\t\t\t\tparams['search_key'] = this.listSearchInstance.getAlphabetSearchField();\n\t\t\t\t\tparams['search_value'] = searchValue;\n\t\t\t\t\tparams['operator'] = 's';\n\t\t\t\t}\n\t\t\t\tthis.listSearchInstance.parseConditions(params);\n\t\t\t\tparams.search_params = JSON.stringify(params.search_params);\n\t\t\t}\n\t\t\tif (this.moduleName == 'Calendar') {\n\t\t\t\tlet switchBtn = container.find('.js-switch--calendar');\n\t\t\t\tif (switchBtn.length) {\n\t\t\t\t\tparams.time = switchBtn.first().prop('checked') ? 'current' : 'history';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\t\tgetCompleteParams: function () {\n\t\t\tlet container = this.getRelatedContainer();\n\t\t\tlet params = {\n\t\t\t\tview: 'Detail',\n\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\trecord: this.getParentId(),\n\t\t\t\trelatedModule: this.moduleName,\n\t\t\t\trelatedView: this.relatedView,\n\t\t\t\tmode: 'showRelatedList',\n\t\t\t\ttab_label: container.find('#tab_label').val()\n\t\t\t};\n\t\t\treturn $.extend(this.getDefaultParams(), params);\n\t\t},\n\t\tgetSelectedParams: function () {\n\t\t\treturn $.extend(this.getCompleteParams(), {\n\t\t\t\tselected_ids: this.readSelectedIds(true),\n\t\t\t\texcluded_ids: this.readExcludedIds(true),\n\t\t\t\tcvid: this.getCurrentCvId()\n\t\t\t});\n\t\t},\n\t\tparseUrlParams: function (url) {\n\t\t\tif (url) {\n\t\t\t\tthis.defaultParams = app.convertUrlToObject(url);\n\t\t\t} else {\n\t\t\t\tthis.defaultParams = {};\n\t\t\t}\n\t\t},\n\t\tloadRelatedList: function (params) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet thisInstance = this;\n\t\t\tif (typeof thisInstance.moduleName === 'undefined' || thisInstance.moduleName.length <= 0) {\n\t\t\t\tlet currentInstance = Vtiger_Detail_Js.getInstance();\n\t\t\t\tcurrentInstance.loadWidgets();\n\t\t\t\treturn aDeferred.promise();\n\t\t\t}\n\t\t\tlet progressInstance = jQuery.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet completeParams = this.getCompleteParams();\n\t\t\tlet activeTabsReference = thisInstance.relatedTabsContainer.find('li.active').data('reference');\n\t\t\tAppConnector.request($.extend(completeParams, params))\n\t\t\t\t.done(function (responseData) {\n\t\t\t\t\tlet currentInstance = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\tcurrentInstance.loadWidgets();\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (activeTabsReference !== 'ProductsAndServices') {\n\t\t\t\t\t\tthisInstance.relatedTabsContainer.find('li').removeClass('active');\n\t\t\t\t\t\tthisInstance.selectedRelatedTabElement.addClass('active');\n\t\t\t\t\t\tthisInstance.content.html(responseData);\n\t\t\t\t\t\t$('.pageNumbers', thisInstance.content).tooltip();\n\t\t\t\t\t\tthisInstance.registerPostLoadEvents();\n\t\t\t\t\t\tthisInstance.registerListEvents();\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(responseData);\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_NOT_ALLOWED_VALUE'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tshowSelectRelation: function (extendParams) {\n\t\t\tlet params = $.extend(this.getRecordsListParams(), extendParams);\n\t\t\tapp.showRecordsList(params, (modal, instance) => {\n\t\t\t\tinstance.setSelectEvent((responseData) => {\n\t\t\t\t\tthis.addRelations(Object.keys(responseData)).done(() => {\n\t\t\t\t\t\tapp.event.trigger('RelatedListView.AfterSelectRelation', responseData, this, instance, params);\n\t\t\t\t\t\tlet detail = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\t\tthis.loadRelatedList().done(function () {\n\t\t\t\t\t\t\tdetail.registerRelatedModulesRecordCount();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (this.getSelectedTabElement().data('link-key') === 'LBL_RECORD_SUMMARY') {\n\t\t\t\t\t\t\tdetail.loadWidgets();\n\t\t\t\t\t\t\tdetail.registerRelatedModulesRecordCount();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tgetRecordsListParams: function () {\n\t\t\treturn {\n\t\t\t\tmodule: this.moduleName,\n\t\t\t\tsrc_module: this.parentModuleName,\n\t\t\t\tsrc_record: this.parentRecordId,\n\t\t\t\tmulti_select: true\n\t\t\t};\n\t\t},\n\t\taddRelations: function (idList, params = {}) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tAppConnector.request(\n\t\t\t\t$.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\t\tmode: 'addRelation',\n\t\t\t\t\t\trelated_module: this.moduleName,\n\t\t\t\t\t\tsrc_record: this.parentRecordId,\n\t\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\t\trelated_record_list: $.isArray(idList) ? JSON.stringify(idList) : idList\n\t\t\t\t\t},\n\t\t\t\t\tparams\n\t\t\t\t)\n\t\t\t)\n\t\t\t\t.done(function (responseData) {\n\t\t\t\t\taDeferred.resolve(responseData);\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tdeleteRelation(target) {\n\t\t\tlet params = {};\n\t\t\tif (target.data('url')) {\n\t\t\t\tparams = target.data('url');\n\t\t\t} else {\n\t\t\t\tlet id = target.data('id') ? target.data('id') : target.closest('tr').data('id');\n\t\t\t\tparams = {\n\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\tmode: 'deleteRelation',\n\t\t\t\t\trelated_module: this.moduleName,\n\t\t\t\t\tsrc_record: this.parentRecordId,\n\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\trelated_record_list: JSON.stringify([id])\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet progressInstance = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tblockInfo: { enabled: true }\n\t\t\t});\n\t\t\tAppConnector.request(params)\n\t\t\t\t.done((response) => {\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (response.result) {\n\t\t\t\t\t\tlet widget = target.closest('.widgetContentBlock');\n\t\t\t\t\t\tconst detail = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\t\tif (widget.length) {\n\t\t\t\t\t\t\tdetail.loadWidget(widget);\n\t\t\t\t\t\t\tlet updatesWidget = this.getContentHolder().find('[data-type=\"Updates\"]');\n\t\t\t\t\t\t\tif (updatesWidget.length > 0) {\n\t\t\t\t\t\t\t\tdetail.loadWidget(updatesWidget);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.loadRelatedList();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdetail.registerRelatedModulesRecordCount();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_CANNOT_REMOVE_RELATION'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(function (err, errThrow) {\n\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_CANNOT_REMOVE_RELATION'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Function to handle next page navigation\n\t\t */\n\t\tnextPageHandler: function () {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet thisInstance = this;\n\t\t\tlet pageLimit = jQuery('#pageLimit', this.content).val();\n\t\t\tlet noOfEntries = jQuery('#noOfEntries', this.content).val();\n\t\t\tif (noOfEntries == pageLimit) {\n\t\t\t\tlet pageNumber = this.getCurrentPageNum();\n\t\t\t\tlet nextPage = parseInt(pageNumber) + 1;\n\t\t\t\tthis.loadRelatedList({\n\t\t\t\t\tpage: nextPage\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tthisInstance.setCurrentPageNumber(nextPage);\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to handle next page navigation\n\t\t */\n\t\tpreviousPageHandler: function () {\n\t\t\tconst thisInstance = this,\n\t\t\t\taDeferred = jQuery.Deferred();\n\t\t\tlet pageNumber = this.getCurrentPageNum();\n\t\t\tif (pageNumber > 1) {\n\t\t\t\tlet previousPage = parseInt(pageNumber) - 1;\n\t\t\t\tthis.loadRelatedList({\n\t\t\t\t\tpage: previousPage\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tthisInstance.setCurrentPageNumber(previousPage);\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to handle select page jump in related list\n\t\t */\n\t\tselectPageHandler: function (pageNumber) {\n\t\t\tconst thisInstance = this,\n\t\t\t\taDeferred = jQuery.Deferred();\n\t\t\tthis.loadRelatedList({\n\t\t\t\tpage: pageNumber\n\t\t\t})\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tthisInstance.setCurrentPageNumber(pageNumber);\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t})\n\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to handle page jump in related list\n\t\t */\n\t\tpageJumpHandler: function (e) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet thisInstance = this;\n\t\t\tif (e.which == 13) {\n\t\t\t\tlet element = jQuery(e.currentTarget);\n\t\t\t\tlet response = Vtiger_WholeNumberGreaterThanZero_Validator_Js.invokeValidation(element);\n\t\t\t\tif (typeof response !== 'undefined') {\n\t\t\t\t\telement.validationEngine('showPrompt', response, '', 'topLeft', true);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\telement.validationEngine('hideAll');\n\t\t\t\t\tlet jumpToPage = parseInt(element.val());\n\t\t\t\t\tlet totalPages = parseInt(jQuery('#totalPageCount', thisInstance.content).text());\n\t\t\t\t\tif (jumpToPage > totalPages) {\n\t\t\t\t\t\tlet error = app.vtranslate('JS_PAGE_NOT_EXIST');\n\t\t\t\t\t\telement.validationEngine('showPrompt', error, '', 'topLeft', true);\n\t\t\t\t\t}\n\t\t\t\t\tlet invalidFields = element.parent().find('.formError');\n\t\t\t\t\tif (invalidFields.length < 1) {\n\t\t\t\t\t\tlet currentPage = jQuery('input[name=\"currentPageNum\"]', thisInstance.content).val();\n\t\t\t\t\t\tif (jumpToPage == currentPage) {\n\t\t\t\t\t\t\tlet message = app.vtranslate('JS_YOU_ARE_IN_PAGE_NUMBER') + ' ' + jumpToPage;\n\t\t\t\t\t\t\tlet params = {\n\t\t\t\t\t\t\t\ttext: message,\n\t\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(params);\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.loadRelatedList({\n\t\t\t\t\t\t\tpage: jumpToPage\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\tthisInstance.setCurrentPageNumber(jumpToPage);\n\t\t\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\t/**\n\t\t * Function to add related record for the module\n\t\t */\n\t\taddRelatedRecord: function (element, callback) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet referenceModuleName = this.moduleName;\n\t\t\tlet parentId = this.getParentId();\n\t\t\tlet parentModule = this.parentModuleName;\n\t\t\tlet quickCreateParams = {};\n\t\t\tlet relatedParams = {};\n\t\t\tlet relatedField = element.data('name');\n\t\t\tlet fullFormUrl = element.data('url');\n\t\t\tif (relatedField) {\n\t\t\t\trelatedParams[relatedField] = parentId;\n\t\t\t}\n\t\t\tlet eliminatedKeys = new Array('view', 'module', 'mode', 'action');\n\t\t\tlet preQuickCreateSave = function (data) {\n\t\t\t\tlet index, queryParam, queryParamComponents;\n\t\t\t\tlet queryParameters = [];\n\n\t\t\t\t//To handle switch to task tab when click on add task from related list of activities\n\t\t\t\t//As this is leading to events tab intially even clicked on add task\n\t\t\t\tif (typeof fullFormUrl !== 'undefined' && fullFormUrl.indexOf('?') !== -1) {\n\t\t\t\t\tlet urlSplit = fullFormUrl.split('?');\n\t\t\t\t\tlet queryString = urlSplit[1];\n\t\t\t\t\tqueryParameters = queryString.split('&');\n\t\t\t\t\tfor (index = 0; index < queryParameters.length; index++) {\n\t\t\t\t\t\tqueryParam = queryParameters[index];\n\t\t\t\t\t\tqueryParamComponents = queryParam.split('=');\n\t\t\t\t\t\tif (queryParamComponents[0] == 'mode' && queryParamComponents[1] == 'Calendar') {\n\t\t\t\t\t\t\tdata.find('a[data-tab-name=\"Task\"]').trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjQuery('<input type=\"hidden\" name=\"sourceModule\" value=\"' + parentModule + '\" />').appendTo(data);\n\t\t\t\tjQuery('<input type=\"hidden\" name=\"sourceRecord\" value=\"' + parentId + '\" />').appendTo(data);\n\t\t\t\tjQuery('<input type=\"hidden\" name=\"relationOperation\" value=\"true\" />').appendTo(data);\n\n\t\t\t\tif (typeof relatedField !== 'undefined') {\n\t\t\t\t\tlet field = data.find('[name=\"' + relatedField + '\"]');\n\t\t\t\t\t//If their is no element with the relatedField name,we are adding hidden element with\n\t\t\t\t\t//name as relatedField name,for saving of record with relation to parent record\n\t\t\t\t\tif (field.length == 0) {\n\t\t\t\t\t\tjQuery('<input type=\"hidden\" name=\"' + relatedField + '\" value=\"' + parentId + '\" />').appendTo(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (index = 0; index < queryParameters.length; index++) {\n\t\t\t\t\tqueryParam = queryParameters[index];\n\t\t\t\t\tqueryParamComponents = queryParam.split('=');\n\t\t\t\t\tif (\n\t\t\t\t\t\tjQuery.inArray(queryParamComponents[0], eliminatedKeys) == '-1' &&\n\t\t\t\t\t\tdata.find('[name=\"' + queryParamComponents[0] + '\"]').length == 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tjQuery(\n\t\t\t\t\t\t\t'<input type=\"hidden\" name=\"' + queryParamComponents[0] + '\" value=\"' + queryParamComponents[1] + '\" />'\n\t\t\t\t\t\t).appendTo(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof callback !== 'undefined') {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\t//If url contains params then seperate them and make them as relatedParams\n\t\t\tif (typeof fullFormUrl !== 'undefined' && fullFormUrl.indexOf('?') !== -1) {\n\t\t\t\tlet urlSplit = fullFormUrl.split('?');\n\t\t\t\tlet queryString = urlSplit[1];\n\t\t\t\tlet queryParameters = queryString.split('&');\n\t\t\t\tfor (let index = 0; index < queryParameters.length; index++) {\n\t\t\t\t\tlet queryParam = queryParameters[index];\n\t\t\t\t\tlet queryParamComponents = queryParam.split('=');\n\t\t\t\t\tif (jQuery.inArray(queryParamComponents[0], eliminatedKeys) == '-1') {\n\t\t\t\t\t\trelatedParams[queryParamComponents[0]] = queryParamComponents[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tquickCreateParams['data'] = relatedParams;\n\t\t\tquickCreateParams['callbackFunction'] = function (data) {\n\t\t\t\taDeferred.resolve(data);\n\t\t\t};\n\t\t\tquickCreateParams['callbackPostShown'] = preQuickCreateSave;\n\t\t\tquickCreateParams['noCache'] = true;\n\t\t\tApp.Components.QuickCreate.createRecord(referenceModuleName, quickCreateParams);\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tgetRelatedPageCount: function () {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tlet element = this.content.find('#totalPageCount');\n\t\t\tlet totalCountElem = this.content.find('#totalCount');\n\t\t\tlet totalPageNumber = element.text();\n\t\t\tif (totalPageNumber == '') {\n\t\t\t\telement.progressIndicator({});\n\t\t\t\tAppConnector.request({\n\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\tmode: 'getRelatedListPageCount',\n\t\t\t\t\trecord: this.getParentId(),\n\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\trelatedModule: this.moduleName\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tlet pageCount = data['result']['page'];\n\t\t\t\t\t\tlet numberOfRecords = data['result']['numberOfRecords'];\n\t\t\t\t\t\ttotalCountElem.val(numberOfRecords);\n\t\t\t\t\t\telement.text(pageCount);\n\t\t\t\t\t\telement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\taDeferred.resolve();\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\taDeferred.reject(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taDeferred.resolve();\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tfavoritesRelation: function (relcrmId, state) {\n\t\t\tlet aDeferred = jQuery.Deferred();\n\t\t\tif (relcrmId) {\n\t\t\t\tAppConnector.request({\n\t\t\t\t\tmodule: this.parentModuleName,\n\t\t\t\t\taction: 'RelationAjax',\n\t\t\t\t\tmode: 'updateFavoriteForRecord',\n\t\t\t\t\trecord: this.getParentId(),\n\t\t\t\t\trelcrmid: relcrmId,\n\t\t\t\t\trelatedModule: this.moduleName,\n\t\t\t\t\trelationId: this.getCompleteParams()['relationId'],\n\t\t\t\t\tactionMode: state ? 'delete' : 'add'\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\tif (data.result) aDeferred.resolve(true);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\taDeferred.reject(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taDeferred.reject(false);\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tupdatePreview: function (url) {\n\t\t\tlet frame = this.content.find('.listPreviewframe');\n\t\t\tthis.frameProgress = $.progressIndicator({\n\t\t\t\tposition: 'html',\n\t\t\t\tmessage: app.vtranslate('JS_FRAME_IN_PROGRESS'),\n\t\t\t\tblockInfo: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet defaultView = '';\n\t\t\tif (app.getMainParams('defaultDetailViewName')) {\n\t\t\t\tdefaultView =\n\t\t\t\t\tdefaultView + '&mode=showDetailViewByMode&requestMode=' + app.getMainParams('defaultDetailViewName'); // full, summary\n\t\t\t}\n\t\t\tframe.attr('src', url.replace('view=Detail', 'view=DetailPreview') + defaultView);\n\t\t},\n\t\tregisterUnreviewedCountEvent: function () {\n\t\t\tlet ids = [];\n\t\t\tlet relatedContent = this.content;\n\t\t\tlet isUnreviewedActive = relatedContent.find('.unreviewed').length;\n\t\t\trelatedContent.find('tr.listViewEntries').each(function () {\n\t\t\t\tlet id = jQuery(this).data('id');\n\t\t\t\tif (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!ids || isUnreviewedActive < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\taction: 'ChangesReviewedOn',\n\t\t\t\tmode: 'getUnreviewed',\n\t\t\t\tmodule: 'ModTracker',\n\t\t\t\tsourceModule: this.moduleName,\n\t\t\t\trecordsId: ids\n\t\t\t}).done(function (appData) {\n\t\t\t\tlet data = appData.result;\n\t\t\t\t$.each(data, function (id, value) {\n\t\t\t\t\tif (value.a > 0) {\n\t\t\t\t\t\trelatedContent\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.all')\n\t\t\t\t\t\t\t.text(value.a)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t\tif (value.m > 0) {\n\t\t\t\t\t\trelatedContent\n\t\t\t\t\t\t\t.find('tr[data-id=\"' + id + '\"] .unreviewed .badge.mail')\n\t\t\t\t\t\t\t.text(value.m)\n\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t.removeClass('d-none');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterChangeEntityStateEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet relatedContent = this.content;\n\t\t\trelatedContent.on('click', '.dropdownEntityState a', function (e) {\n\t\t\t\tlet element = $(this);\n\t\t\t\trelatedContent.find('.entityState').val(element.data('value'));\n\t\t\t\trelatedContent.find('.pagination').data('totalCount', 0);\n\t\t\t\trelatedContent\n\t\t\t\t\t.find('.dropdownEntityState button')\n\t\t\t\t\t.find('span')\n\t\t\t\t\t.attr('class', element.find('span').attr('class'));\n\t\t\t\tthisInstance.loadRelatedList({ page: 1 });\n\t\t\t});\n\t\t},\n\t\tregisterRowsEvent: function () {\n\t\t\tconst self = this;\n\t\t\tif (this.relatedView === 'List' || this.relatedView === 'Detail') {\n\t\t\t\tthis.content.find('.listViewEntries').on('click', function (e) {\n\t\t\t\t\tif ($(e.target).hasClass('js-no-link')) return;\n\t\t\t\t\tif ($(e.target).closest('div').hasClass('actions')) return;\n\t\t\t\t\tif ($(e.target).is('button') || $(e.target).parent().is('button') || $(e.target).is('a')) return;\n\t\t\t\t\tif ($(e.target).closest('a').hasClass('noLinkBtn')) return;\n\t\t\t\t\tif ($(e.target, $(e.currentTarget)).is('td:first-child')) return;\n\t\t\t\t\tif ($(e.target).is('input')) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:last-child').get(0), e.target)) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:first-child').get(0), e.target)) return;\n\t\t\t\t\tlet recordUrl = $(e.target).closest('tr').data('recordurl');\n\t\t\t\t\tif (!recordUrl) return;\n\t\t\t\t\tif (app.getViewName() === 'DetailPreview') {\n\t\t\t\t\t\ttop.document.location.href = recordUrl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdocument.location.href = recordUrl;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.content.find('.js-toggle-hidden-row').on('click', function (e) {\n\t\t\t\t\tlet target = $(this);\n\t\t\t\t\tlet row = target.closest('tr');\n\t\t\t\t\tlet inventoryRow = row.next('.js-hidden-row');\n\t\t\t\t\tif (inventoryRow.length) {\n\t\t\t\t\t\tlet block = inventoryRow.find('.js-hidden-row__block[data-element=\"' + target.data('element') + '\"]');\n\t\t\t\t\t\tif (block.is(':visible') || !inventoryRow.is(':visible')) {\n\t\t\t\t\t\t\tinventoryRow.toggleClass('d-none');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinventoryRow.find('.js-hidden-row__block').addClass('d-none');\n\t\t\t\t\t\tblock.removeClass('d-none');\n\t\t\t\t\t\tif (block.is(':visible')) {\n\t\t\t\t\t\t\tself.registerWidgets(block);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (this.relatedView === 'ListPreview') {\n\t\t\t\tthis.content.find('.listViewEntries').on('click', function (e) {\n\t\t\t\t\tlet target = $(e.target);\n\t\t\t\t\tif (target.closest('div').hasClass('actions')) return;\n\t\t\t\t\tif (target.is('button') || target.parent().is('button')) return;\n\t\t\t\t\tif (target.closest('a').hasClass('noLinkBtn')) return;\n\t\t\t\t\tif ($(e.target, $(e.currentTarget)).is('td:first-child')) return;\n\t\t\t\t\tif (target.is('input[type=\"checkbox\"]')) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:last-child').get(0), target[0])) return;\n\t\t\t\t\tif ($.contains($(e.currentTarget).find('td:first-child').get(0), target[0])) return;\n\t\t\t\t\tlet recordUrl = $(this).data('recordurl');\n\t\t\t\t\tself.content.find('.listViewEntriesTable .listViewEntries').removeClass('active');\n\t\t\t\t\t$(this).addClass('active');\n\t\t\t\t\tself.updatePreview(recordUrl);\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet widgetsContainer = this.content.find('.js-hidden-row .js-hidden-row__block[data-element=\"widgets\"]');\n\t\t\tif (widgetsContainer.length) {\n\t\t\t\tself.registerWidgets(widgetsContainer);\n\t\t\t}\n\t\t},\n\t\tregisterWidgets: function (content) {\n\t\t\tlet widgetList = $('[class^=\"widgetContainer_\"]', content);\n\t\t\tlet detailInstance = Vtiger_Detail_Js.getInstance();\n\t\t\twidgetList.each(function (index, widget) {\n\t\t\t\twidget = $(widget);\n\t\t\t\tif (widget.is(':visible')) {\n\t\t\t\t\tdetailInstance.loadWidget(widget);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterSummationEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tthis.content.on('click', '.listViewSummation button', function () {\n\t\t\t\tlet button = $(this);\n\t\t\t\tlet calculateValue = button.closest('td').find('.calculateValue');\n\t\t\t\tlet params = thisInstance.getCompleteParams();\n\t\t\t\tparams['action'] = 'RelationAjax';\n\t\t\t\tparams['mode'] = 'calculate';\n\t\t\t\tparams['fieldName'] = button.data('field');\n\t\t\t\tparams['calculateType'] = button.data('operator');\n\t\t\t\tdelete params['view'];\n\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\tmessage: app.vtranslate('JS_CALCULATING_IN_PROGRESS'),\n\t\t\t\t\tposition: 'html',\n\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tapp.hidePopover(button);\n\t\t\t\tAppConnector.request(params).done(function (response) {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\tcalculateValue.html(response.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcalculateValue.html('');\n\t\t\t\t\t}\n\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t});\n\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t});\n\t\t},\n\t\tregisterPreviewEvent: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet contentHeight = this.content.find('.js-detail-preview,.js-list-preview');\n\t\t\tcontentHeight.height(app.getScreenHeight() - (this.content.offset().top + $('.js-footer').height()));\n\t\t\tthis.content.find('.listPreviewframe').on('load', function () {\n\t\t\t\tif (thisInstance.frameProgress) {\n\t\t\t\t\tthisInstance.frameProgress.progressIndicator({ mode: 'hide' });\n\t\t\t\t}\n\t\t\t\tcontentHeight.height($(this).contents().find('.bodyContents').height() + 2);\n\t\t\t});\n\t\t\tthis.content.find('.listViewEntriesTable .listViewEntries').first().trigger('click');\n\t\t},\n\t\tregisterPaginationEvents: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tlet relatedContent = this.content;\n\t\t\tthis.content.on('click', '#relatedViewNextPageButton', function (e) {\n\t\t\t\tif ($(this).hasClass('disabled')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthisInstance.nextPageHandler();\n\t\t\t});\n\t\t\tthis.content.on('click', '#relatedViewPreviousPageButton', function () {\n\t\t\t\tthisInstance.previousPageHandler();\n\t\t\t});\n\t\t\tthis.content.on('click', '#relatedListPageJump', function (e) {\n\t\t\t\tthisInstance.getRelatedPageCount();\n\t\t\t});\n\t\t\tthis.content\n\t\t\t\t.on('click', '#relatedListPageJumpDropDown > li', function (e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t})\n\t\t\t\t.on('keypress', '#pageToJump', function (e) {\n\t\t\t\t\tthisInstance.pageJumpHandler(e);\n\t\t\t\t});\n\t\t\tthis.content.on('click', '.pageNumber', function () {\n\t\t\t\tif ($(this).hasClass('disabled')) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthisInstance.selectPageHandler($(this).data('id'));\n\t\t\t});\n\t\t\tthis.content.on('click', '#totalCountBtn', function () {\n\t\t\t\tapp.hidePopover($(this));\n\t\t\t\tlet params = {\n\t\t\t\t\tmodule: thisInstance.parentModuleName,\n\t\t\t\t\tview: 'Pagination',\n\t\t\t\t\tmode: 'getRelationPagination',\n\t\t\t\t\trecord: thisInstance.getParentId(),\n\t\t\t\t\trelatedModule: thisInstance.moduleName,\n\t\t\t\t\tnoOfEntries: $('#noOfEntries', relatedContent).val(),\n\t\t\t\t\tpage: relatedContent.find('[name=\"currentPageNum\"]').val()\n\t\t\t\t};\n\t\t\t\tif (relatedContent.find('.entityState').length) {\n\t\t\t\t\tparams['entityState'] = relatedContent.find('.entityState').val();\n\t\t\t\t}\n\t\t\t\tAppConnector.request(params).done(function (response) {\n\t\t\t\t\trelatedContent.find('.paginationDiv').html(response);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tregisterListEvents: function () {\n\t\t\tlet relatedContent = this.content;\n\t\t\tlet thisInstance = this;\n\t\t\tthis.content.find('a.favorites').on('click', function (e) {\n\t\t\t\tlet progressInstance = jQuery.progressIndicator({\n\t\t\t\t\tposition: 'html',\n\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet element = $(this);\n\t\t\t\tlet row = element.closest('tr');\n\t\t\t\tthisInstance.favoritesRelation(row.data('id'), element.data('state')).done(function (response) {\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tlet state = element.data('state') ? 0 : 1;\n\t\t\t\t\t\telement.data('state', state);\n\t\t\t\t\t\tif (state) {\n\t\t\t\t\t\t\telement.find('.far').addClass('d-none');\n\t\t\t\t\t\t\telement.find('.fas').removeClass('d-none');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement.find('.fas').addClass('d-none');\n\t\t\t\t\t\t\telement.find('.far').removeClass('d-none');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprogressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\tlet text = app.vtranslate('JS_REMOVED_FROM_FAVORITES');\n\t\t\t\t\t\tif (state) {\n\t\t\t\t\t\t\ttext = app.vtranslate('JS_ADDED_TO_FAVORITES');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tapp.showNotify({ text: text, type: 'success' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.content.find('[name=\"addButton\"]').on('click', function (e) {\n\t\t\t\tconst element = $(this);\n\t\t\t\tif (element.hasClass('quickCreateSupported') !== true) {\n\t\t\t\t\tapp.openUrl(element.data('url'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthisInstance.addRelatedRecord(element);\n\t\t\t});\n\t\t\tthis.content.find('.relatedHeader button.selectRelation').on('click', function (e) {\n\t\t\t\tlet restrictionsField = $(this).data('rf');\n\t\t\t\tlet params = {\n\t\t\t\t\trelationId: thisInstance.getCompleteParams()['relationId']\n\t\t\t\t};\n\t\t\t\tif (restrictionsField && Object.keys(restrictionsField).length > 0) {\n\t\t\t\t\tparams = {\n\t\t\t\t\t\tsearch_key: restrictionsField.key,\n\t\t\t\t\t\tsearch_value: restrictionsField.name,\n\t\t\t\t\t\trelationId: thisInstance.getCompleteParams()['relationId']\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tthisInstance.showSelectRelation(params);\n\t\t\t});\n\t\t\tthis.content.find('button.relationDelete').on('click', function (e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tlet target = $(e.currentTarget);\n\t\t\t\tlet params = {};\n\t\t\t\tif (target.data('confirm')) {\n\t\t\t\t\tparams.message = target.data('confirm');\n\t\t\t\t\tparams.title = target.html() + ' ' + target.data('content');\n\t\t\t\t} else if (target.data('content')) {\n\t\t\t\t\tparams.message = target.data('content');\n\t\t\t\t} else {\n\t\t\t\t\tparams.message = app.vtranslate('JS_DELETE_CONFIRMATION');\n\t\t\t\t}\n\t\t\t\tVtiger_Helper_Js.showConfirmationBox(params).done(function () {\n\t\t\t\t\tthisInstance.deleteRelation(target);\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.content.find('.js-switch--calendar,select.js-relation-cv-id').on('change', function (e) {\n\t\t\t\tthisInstance.loadRelatedList();\n\t\t\t});\n\t\t},\n\t\tregisterPostLoadEvents: function () {\n\t\t\tlet thisInstance = this;\n\t\t\tthis.registerRowsEvent();\n\t\t\tthis.registerListScroll();\n\t\t\tif (this.relatedView === 'ListPreview') {\n\t\t\t\tthis.registerPreviewEvent();\n\t\t\t\tif (!this.content.find('.gutter').length) {\n\t\t\t\t\tif (!this.content.find('.js-list-preview').length) return;\n\t\t\t\t\tthis.setDomParams(this.content);\n\t\t\t\t\tthis.toggleSplit(this.content);\n\t\t\t\t\tthis.registerListPreviewEvents();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.content.find('.listViewSearchTd [data-trigger=\"listSearch\"]').length) {\n\t\t\t\tthis.listSearchInstance = YetiForce_ListSearch_Js.getInstance(this.content, false, this);\n\t\t\t} else {\n\t\t\t\tthis.listSearchInstance = false;\n\t\t\t}\n\t\t\tapp.event.trigger('RelatedList.AfterLoad', thisInstance);\n\t\t},\n\t\tgetListColumnWidth: function () {\n\t\t\tlet width = 300;\n\t\t\tlet column = this.container.find('.listViewEntriesDiv .listViewHeaders th:eq(1)');\n\t\t\tif (column.length) {\n\t\t\t\twidth = column.offset().left + column.width();\n\t\t\t}\n\t\t\treturn width;\n\t\t},\n\t\tsetDomParams: function (container) {\n\t\t\tthis.container = container;\n\t\t\tthis.listColumnWidth = this.getListColumnWidth();\n\t\t\tthis.windowW = $(window).width();\n\t\t\tthis.mainBody = container.closest('.mainBody');\n\t\t\tthis.windowMinWidth = (15 / this.windowW) * 100;\n\t\t\tthis.windowMaxWidth = 100 - this.minWidth;\n\t\t\tthis.sideBlocks = container.find('.js-side-block');\n\t\t\tthis.sideBlockLeft = this.sideBlocks.first();\n\t\t\tthis.sideBlockRight = this.sideBlocks.last();\n\t\t\tthis.list = container.find('.js-list-preview');\n\t\t\tthis.preview = container.find('.js-detail-preview');\n\t\t\tthis.rotatedText = container.find('.u-rotate-90');\n\t\t\tthis.footerH = $('.js-footer').outerHeight();\n\t\t\tthis.headerH = $('.js-header').outerHeight();\n\t\t},\n\t\tgetDefaultSplitSizes: function () {\n\t\t\tlet thWidth = (this.listColumnWidth / this.windowW) * 100;\n\t\t\treturn [thWidth, 100 - thWidth];\n\t\t},\n\t\tgetSplitSizes() {\n\t\t\tconst cachedParams = app.moduleCacheGet('userRelatedSplitSet');\n\t\t\tif (cachedParams !== undefined) {\n\t\t\t\treturn cachedParams;\n\t\t\t} else {\n\t\t\t\treturn this.getDefaultSplitSizes();\n\t\t\t}\n\t\t},\n\t\tregisterListPreviewEvents() {\n\t\t\tapp.showNewScrollbarTopBottom(this.content.find('.js-list-preview--scroll'));\n\t\t\tapp.showNewScrollbarLeft(this.list);\n\t\t\tthis.list.on('click', '.listViewEntries', () => {\n\t\t\t\tif (this.split.getSizes()[1] < 10) {\n\t\t\t\t\tconst defaultGutterPosition = this.getDefaultSplitSizes();\n\t\t\t\t\tthis.split.setSizes(defaultGutterPosition);\n\t\t\t\t\tthis.preview.show();\n\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', defaultGutterPosition);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!this.list.parents('.blockContent').length) {\n\t\t\t\tthis.registerScrollEvent();\n\t\t\t}\n\t\t},\n\t\tregisterScrollEvent() {\n\t\t\tthis.gutter.addClass('js-fixed-scroll');\n\t\t\tlet scrollContainer = App.Components.Scrollbar.page.element;\n\t\t\tlet listOffsetTop = this.list.offset().top - this.headerH;\n\t\t\tlet initialH = this.sideBlocks.height();\n\t\t\tlet mainViewPortHeightCss = { height: this.mainBody.height() };\n\t\t\tlet mainViewPortWidthCss = { width: this.mainBody.height() };\n\t\t\tlet fixedElements = this.mainBody.find('.js-fixed-scroll');\n\t\t\tif (!this.mainBody.length) {\n\t\t\t\tthis.mainBody = $(top.document).find('.mainBody');\n\t\t\t\tthis.headerH = $(top.document).find('.js-header').outerHeight();\n\t\t\t\tscrollContainer = top.window.App.Components.Scrollbar.page.element;\n\t\t\t\tlet iframe = $(top.document).find('.js-detail-preview');\n\t\t\t\tlistOffsetTop = this.list.offset().top + iframe.offset().top - this.headerH + 1;\n\t\t\t\tmainViewPortHeightCss = { height: this.mainBody.height() };\n\t\t\t\tmainViewPortWidthCss = { width: this.mainBody.height() };\n\t\t\t}\n\t\t\tconst onScroll = () => {\n\t\t\t\tif (scrollContainer.scrollTop() >= listOffsetTop) {\n\t\t\t\t\tfixedElements.css({ top: scrollContainer.scrollTop() - listOffsetTop });\n\t\t\t\t\tthis.sideBlocks.css({ top: scrollContainer.scrollTop() - listOffsetTop + 56 });\n\t\t\t\t\tfixedElements.css(mainViewPortHeightCss);\n\t\t\t\t\tthis.rotatedText.css(mainViewPortHeightCss);\n\t\t\t\t\tthis.rotatedText.css(mainViewPortWidthCss);\n\t\t\t\t} else {\n\t\t\t\t\tfixedElements.css({ top: 'initial' });\n\t\t\t\t\tfixedElements.css({ height: initialH + scrollContainer.scrollTop() });\n\t\t\t\t\tthis.rotatedText.css({\n\t\t\t\t\t\twidth: initialH + scrollContainer.scrollTop(),\n\t\t\t\t\t\theight: initialH + scrollContainer.scrollTop()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tscrollContainer.on('scroll', onScroll);\n\t\t},\n\t\t/**\n\t\t * Registers split's events.\n\t\t * @param {jQuery} container - current container for reference.\n\t\t * @param {Split} split - a split object.\n\t\t */\n\t\tregisterSplitEvents: function (container, split) {\n\t\t\tlet rightSplitMaxWidth = (400 / this.windowW) * 100;\n\t\t\tlet minWindowWidth = (23 / this.windowW) * 100;\n\t\t\tlet maxWindowWidth = 100 - minWindowWidth;\n\t\t\tlet listPreview = container.find('.js-detail-preview');\n\t\t\tthis.gutter.on('dblclick', () => {\n\t\t\t\tlet gutterRelatedMidPosition = app.moduleCacheGet('gutterRelatedMidPosition');\n\t\t\t\tif (isNaN(this.split.getSizes()[0])) {\n\t\t\t\t\tthis.split.setSizes(gutterRelatedMidPosition);\n\t\t\t\t}\n\t\t\t\tif (split.getSizes()[0] < 7) {\n\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-left');\n\t\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\t\tthis.list.removeClass('u-hide-underneath');\n\t\t\t\t\tif (gutterRelatedMidPosition[0] > 11) {\n\t\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t\t}\n\t\t\t\t} else if (split.getSizes()[1] < 20) {\n\t\t\t\t\tif (gutterRelatedMidPosition[1] > rightSplitMaxWidth + 1) {\n\t\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t\t}\n\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-right');\n\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\tlistPreview.show();\n\t\t\t\t} else if (split.getSizes()[0] > 7 && split.getSizes()[0] < 50) {\n\t\t\t\t\tsplit.setSizes([minWindowWidth, maxWindowWidth]);\n\t\t\t\t\tthis.gutter.addClass('js-gutter-corr-left');\n\t\t\t\t\tthis.sideBlockLeft.addClass('d-block');\n\t\t\t\t\tthis.list.addClass('u-hide-underneath');\n\t\t\t\t} else if (split.getSizes()[1] > 10 && split.getSizes()[1] < 50) {\n\t\t\t\t\tsplit.setSizes([maxWindowWidth, minWindowWidth]);\n\t\t\t\t\tthis.gutter.addClass('js-gutter-corr-right');\n\t\t\t\t\tthis.sideBlockRight.addClass('d-block');\n\t\t\t\t\tlistPreview.hide();\n\t\t\t\t\t//this.list.width(this.list.width() - 10);\n\t\t\t\t}\n\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t});\n\t\t\tthis.sideBlockLeft.on('click', () => {\n\t\t\t\tlet gutterRelatedMidPosition = app.moduleCacheGet('gutterRelatedMidPosition');\n\t\t\t\tif (gutterRelatedMidPosition[0] > 11) {\n\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t} else {\n\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t}\n\t\t\t\tthis.gutter.removeClass('js-gutter-corr-left');\n\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\tthis.list.removeClass('u-hide-underneath');\n\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t});\n\t\t\tthis.sideBlockRight.on('click', () => {\n\t\t\t\tlet gutterRelatedMidPosition = app.moduleCacheGet('gutterRelatedMidPosition');\n\t\t\t\tif (gutterRelatedMidPosition[1] > rightSplitMaxWidth + 1) {\n\t\t\t\t\tsplit.setSizes(gutterRelatedMidPosition);\n\t\t\t\t} else {\n\t\t\t\t\tsplit.setSizes(this.getDefaultSplitSizes());\n\t\t\t\t}\n\t\t\t\tthis.gutter.removeClass('js-gutter-corr-right');\n\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\tlistPreview.show();\n\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t});\n\t\t},\n\t\tregisterSplit: function (container) {\n\t\t\tlet rightSplitMaxWidth = (400 / this.windowW) * 100;\n\t\t\tconst splitSizes = this.getSplitSizes();\n\t\t\tapp.moduleCacheSet('gutterRelatedMidPosition', splitSizes);\n\t\t\tlet split = Split([this.list[0], this.preview[0]], {\n\t\t\t\tsizes: splitSizes,\n\t\t\t\tminSize: 10,\n\t\t\t\tgutterSize: 24,\n\t\t\t\tsnapOffset: 100,\n\t\t\t\tonDrag: () => {\n\t\t\t\t\tif (split.getSizes()[1] < rightSplitMaxWidth) {\n\t\t\t\t\t\tsplit.collapse(1);\n\t\t\t\t\t}\n\t\t\t\t\tif (split.getSizes()[0] < 7) {\n\t\t\t\t\t\tthis.sideBlockLeft.addClass('d-block');\n\t\t\t\t\t\tthis.list.addClass('u-hide-underneath');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-left');\n\t\t\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\t\t\tthis.list.removeClass('u-hide-underneath');\n\t\t\t\t\t}\n\t\t\t\t\tif (split.getSizes()[1] < 10) {\n\t\t\t\t\t\tthis.sideBlockRight.addClass('d-block');\n\t\t\t\t\t\tthis.preview.hide();\n\t\t\t\t\t\tthis.list.width(this.list.width() - 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.gutter.removeClass('js-gutter-corr-right');\n\t\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\t\tthis.preview.show();\n\t\t\t\t\t}\n\t\t\t\t\tif (split.getSizes()[0] > 10 && split.getSizes()[1] > rightSplitMaxWidth) {\n\t\t\t\t\t\tapp.moduleCacheSet('gutterRelatedMidPosition', split.getSizes());\n\t\t\t\t\t}\n\t\t\t\t\tapp.moduleCacheSet('userRelatedSplitSet', split.getSizes());\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (splitSizes[0] < 10) {\n\t\t\t\tthis.gutter.addClass('js-gutter-corr-left');\n\t\t\t\tthis.sideBlockLeft.addClass('d-block');\n\t\t\t\tthis.list.addClass('u-hide-underneath');\n\t\t\t} else if (splitSizes[1] < rightSplitMaxWidth) {\n\t\t\t\tthis.gutter.addClass('js-gutter-corr-right');\n\t\t\t\tthis.sideBlockRight.addClass('d-block');\n\t\t\t\tthis.preview.hide();\n\t\t\t}\n\t\t\tthis.gutter = container.find('.gutter');\n\t\t\tlet mainWindowHeightCss = {\n\t\t\t\theight: $(window).height() - this.list.offset().top - this.footerH\n\t\t\t};\n\t\t\tif (!container.closest('.mainBody').length) {\n\t\t\t\tlet mainBody = $(top.document).find('.mainBody').height();\n\t\t\t\tlet iframe = $(top.document).find('.js-detail-preview');\n\t\t\t\tmainWindowHeightCss = {\n\t\t\t\t\theight: mainBody - this.list.offset().top - iframe.offset().top + 50\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!this.list.parents('.blockContent').length) {\n\t\t\t\tthis.gutter.css(mainWindowHeightCss);\n\t\t\t\tthis.list.css(mainWindowHeightCss);\n\t\t\t\tthis.sideBlocks.css(mainWindowHeightCss);\n\t\t\t\tthis.rotatedText.css({\n\t\t\t\t\twidth: this.sideBlockLeft.height(),\n\t\t\t\t\theight: this.sideBlockLeft.height()\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.registerSplitEvents(container, split);\n\t\t\treturn split;\n\t\t},\n\t\ttoggleSplit: function (container) {\n\t\t\tlet commactHeight = container.closest('.commonActionsContainer').height();\n\t\t\tlet splitsArray = [];\n\t\t\tthis.split = this.registerSplit(container);\n\t\t\tsplitsArray.push(this.split);\n\t\t\t$(window).on('resize', () => {\n\t\t\t\tif (this.windowW < 993) {\n\t\t\t\t\tif (container.find('.gutter').length) {\n\t\t\t\t\t\tsplitsArray[splitsArray.length - 1].destroy();\n\t\t\t\t\t\tthis.sideBlockRight.removeClass('d-block');\n\t\t\t\t\t\tthis.sideBlockLeft.removeClass('d-block');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (container.find('.gutter').length !== 1) {\n\t\t\t\t\t\tthis.split = this.registerSplit(container);\n\t\t\t\t\t\tlet gutter = container.find('.gutter');\n\t\t\t\t\t\tif (this.mainBody.scrollTop() >= this.list.offset().top + commactHeight) {\n\t\t\t\t\t\t\tgutter.addClass('gutterOnScroll');\n\t\t\t\t\t\t\tgutter.css('left', this.preview.offset().left - 8);\n\t\t\t\t\t\t\tgutter.on('mousedown', function () {\n\t\t\t\t\t\t\t\t$(this).on('mousemove', function (e) {\n\t\t\t\t\t\t\t\t\t$(this).css('left', this.preview.offset().left - 8);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsplitsArray.push(this.split);\n\t\t\t\t\t}\n\t\t\t\t\tlet currentSplit = splitsArray[splitsArray.length - 1];\n\t\t\t\t\tlet minWidth = (15 / this.windowW) * 100;\n\t\t\t\t\tlet maxWidth = 100 - minWidth;\n\t\t\t\t\tif (typeof currentSplit === 'undefined') return;\n\t\t\t\t\tif (currentSplit.getSizes()[0] < minWidth + 5) {\n\t\t\t\t\t\tcurrentSplit.setSizes([minWidth, maxWidth]);\n\t\t\t\t\t} else if (currentSplit.getSizes()[1] < minWidth + 5) {\n\t\t\t\t\t\tcurrentSplit.setSizes([maxWidth, minWidth]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterListScroll: function () {\n\t\t\tlet container = $('.listViewEntriesDiv');\n\t\t\tif (this.relatedView !== 'ListPreview' && Quasar.plugins.Platform.is.desktop) {\n\t\t\t\tcontainer.each((index, element) => {\n\t\t\t\t\tif (container.closest('.js-detail-widget-content').length) {\n\t\t\t\t\t\telement = container.closest('.js-detail-widget-content');\n\t\t\t\t\t\telement.each((i, el) => {\n\t\t\t\t\t\t\tApp.Components.Scrollbar.xy($(el));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tApp.Components.Scrollbar.xy($(element));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgetRecordsCount: function () {\n\t\t\tlet aDeferred = $.Deferred(),\n\t\t\t\trecordCountVal = $('#recordsCount').val();\n\t\t\tif (recordCountVal != '') {\n\t\t\t\taDeferred.resolve(recordCountVal);\n\t\t\t} else {\n\t\t\t\tlet params = this.getCompleteParams();\n\t\t\t\tdelete params.view;\n\t\t\t\tparams.action = 'DetailAjax';\n\t\t\t\tparams.mode = 'getRecordsCount';\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\t$('#recordsCount').val(data['result']['count']);\n\t\t\t\t\taDeferred.resolve(data['result']['count']);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t},\n\t\tnoRecordSelectedAlert: function (text = 'JS_PLEASE_SELECT_ONE_RECORD') {\n\t\t\tapp.showNotify({\n\t\t\t\ttext: app.vtranslate(text),\n\t\t\t\ttype: 'error'\n\t\t\t});\n\t\t},\n\t\tgetCurrentCvId: function () {\n\t\t\treturn $('#customFilter').find('option:selected').data('id');\n\t\t},\n\t\tcheckListRecordSelected: function (minNumberOfRecords = 1) {\n\t\t\tlet selectedIds = this.readSelectedIds();\n\t\t\tif (typeof selectedIds === 'object' && selectedIds.length < minNumberOfRecords) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\treadSelectedIds: function (decode) {\n\t\t\tlet selectedIdsDataAttr = this.getCurrentCvId() + 'selectedIds',\n\t\t\t\tselectedIdsElementDataAttributes = $('#selectedIds').data(),\n\t\t\t\tselectedIds = [];\n\t\t\tif (!(selectedIdsDataAttr in selectedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeSelectedIds(selectedIds);\n\t\t\t} else {\n\t\t\t\tselectedIds = selectedIdsElementDataAttributes[selectedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true && typeof selectedIds == 'object') {\n\t\t\t\treturn JSON.stringify(selectedIds);\n\t\t\t}\n\t\t\treturn selectedIds;\n\t\t},\n\t\twriteSelectedIds: function (selectedIds) {\n\t\t\tif (!Array.isArray(selectedIds)) {\n\t\t\t\tselectedIds = [selectedIds];\n\t\t\t}\n\t\t\t$('#selectedIds').data(this.getCurrentCvId() + 'selectedIds', selectedIds);\n\t\t},\n\t\treadExcludedIds: function (decode) {\n\t\t\tlet excludedIdsDataAttr = this.getCurrentCvId() + 'Excludedids',\n\t\t\t\texcludedIdsElementDataAttributes = $('#excludedIds').data(),\n\t\t\t\texcludedIds = [];\n\t\t\tif (!(excludedIdsDataAttr in excludedIdsElementDataAttributes)) {\n\t\t\t\tthis.writeExcludedIds(excludedIds);\n\t\t\t} else {\n\t\t\t\texcludedIds = excludedIdsElementDataAttributes[excludedIdsDataAttr];\n\t\t\t}\n\t\t\tif (decode == true && typeof excludedIds == 'object') {\n\t\t\t\treturn JSON.stringify(excludedIds);\n\t\t\t}\n\t\t\treturn excludedIds;\n\t\t},\n\t\twriteExcludedIds: function (excludedIds) {\n\t\t\t$('#excludedIds').data(this.getCurrentCvId() + 'Excludedids', excludedIds);\n\t\t},\n\t\tcheckSelectAll: function () {\n\t\t\tlet state = true;\n\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\tif ($(element).is(':checked')) {\n\t\t\t\t\tstate = true;\n\t\t\t\t} else {\n\t\t\t\t\tstate = false;\n\t\t\t\t}\n\t\t\t});\n\t\t\t$('#relatedListViewEntriesMainCheckBox').prop('checked', state);\n\t\t\treturn state;\n\t\t},\n\t\tregisterCheckBoxClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tthis.getRelatedContainer().on('click', '.relatedListViewEntriesCheckBox', function (e) {\n\t\t\t\tlet selectedIds = self.readSelectedIds(),\n\t\t\t\t\texcludedIds = self.readExcludedIds(),\n\t\t\t\t\telem = $(e.currentTarget);\n\t\t\t\tif (elem.is(':checked')) {\n\t\t\t\t\telem.closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.splice($.inArray(elem.val(), excludedIds), 1);\n\t\t\t\t\t} else if ($.inArray(elem.val(), selectedIds) == -1) {\n\t\t\t\t\t\tselectedIds.push(elem.val());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telem.closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\texcludedIds.push(elem.val());\n\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselectedIds.splice($.inArray(elem.val(), selectedIds), 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.checkSelectAll();\n\t\t\t\tself.writeSelectedIds(selectedIds);\n\t\t\t\tself.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\tregisterMainCheckBoxClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tthis.getRelatedContainer().on('click', '#relatedListViewEntriesMainCheckBox', function () {\n\t\t\t\tlet selectedIds = self.readSelectedIds(),\n\t\t\t\t\texcludedIds = self.readExcludedIds();\n\t\t\t\tif ($('#relatedListViewEntriesMainCheckBox').is(':checked')) {\n\t\t\t\t\tlet progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\t\tlet recordCountObj = self.getRecordsCount();\n\t\t\t\t\trecordCountObj\n\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t$('#totalRecordsCount').text(data);\n\t\t\t\t\t\t\tif ($('#deSelectAllMsgDiv').css('display') == 'none') {\n\t\t\t\t\t\t\t\t$('#selectAllMsgDiv').show();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all' && $.inArray($(element).val(), excludedIds) != -1) {\n\t\t\t\t\t\t\texcludedIds.splice($.inArray($(element).val(), excludedIds), 1);\n\t\t\t\t\t\t} else if ($.inArray($(element).val(), selectedIds) == -1) {\n\t\t\t\t\t\t\tselectedIds.push($(element).val());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t\t\tif (selectedIds == 'all') {\n\t\t\t\t\t\t\texcludedIds.push($(element).val());\n\t\t\t\t\t\t\tselectedIds = 'all';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedIds.splice($.inArray($(element).val(), selectedIds), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tself.writeSelectedIds(selectedIds);\n\t\t\t\tself.writeExcludedIds(excludedIds);\n\t\t\t});\n\t\t},\n\t\tregisterSelectAllClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tself.getRelatedContainer().on('click', '#selectAllMsg', function () {\n\t\t\t\t$('#selectAllMsgDiv').hide();\n\t\t\t\t$('#deSelectAllMsgDiv').show();\n\t\t\t\t$('#relatedListViewEntriesMainCheckBox').prop('checked', true);\n\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', true).closest('tr').addClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tself.writeSelectedIds('all');\n\t\t\t});\n\t\t},\n\t\tregisterDeselectAllClickEvent: function () {\n\t\t\tconst self = this;\n\t\t\tself.getRelatedContainer().on('click', '#deSelectAllMsg', function () {\n\t\t\t\t$('#deSelectAllMsgDiv').hide();\n\t\t\t\t$('#relatedListViewEntriesMainCheckBox').prop('checked', false);\n\t\t\t\t$('.relatedListViewEntriesCheckBox').each(function (index, element) {\n\t\t\t\t\t$(this).prop('checked', false).closest('tr').removeClass('highlightBackgroundColor');\n\t\t\t\t});\n\t\t\t\tself.writeSelectedIds([]);\n\t\t\t\tself.writeExcludedIds([]);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register quick edit save event description.\n\t\t */\n\t\tregisterQuickEditSaveEvent() {\n\t\t\tapp.event.on('QuickEdit.AfterSaveFinal', (e, data, instance, element) => {\n\t\t\t\tif (this.moduleName === instance.data('moduleName')) {\n\t\t\t\t\tif (element.closest('.js-detail-widget').length) {\n\t\t\t\t\t\tVtiger_Detail_Js.getInstance().postSummaryWidgetAddRecord(data, element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.loadRelatedList();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register change related view.\n\t\t */\n\t\tregisterChangeViewEvent() {\n\t\t\tconst self = this;\n\t\t\tself.getRelatedContainer().on('click', '.js-change-related-view', function () {\n\t\t\t\tself.relatedView = this.dataset.view;\n\t\t\t\tself.loadRelatedList();\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register related events\n\t\t */\n\t\tregisterRelatedEvents: function () {\n\t\t\tthis.registerUnreviewedCountEvent();\n\t\t\tthis.registerChangeEntityStateEvent();\n\t\t\tthis.registerPaginationEvents();\n\t\t\tthis.registerListEvents();\n\t\t\tthis.registerPostLoadEvents();\n\t\t\tthis.registerSummationEvent();\n\t\t\tthis.registerCheckBoxClickEvent();\n\t\t\tthis.registerMainCheckBoxClickEvent();\n\t\t\tthis.registerSelectAllClickEvent();\n\t\t\tthis.registerDeselectAllClickEvent();\n\t\t\tthis.registerQuickEditSaveEvent();\n\t\t\tthis.registerChangeViewEvent();\n\t\t\tYetiForce_ListSearch_Js.registerSearch(this.content, (data) => {\n\t\t\t\tthis.loadRelatedList(data);\n\t\t\t});\n\t\t}\n\t}\n);\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\nvar Vtiger_Index_Js = {\n\tshowLocation: function (element) {\n\t\tapp.showModalWindow(null, 'index.php?module=OpenStreetMap&view=MapModal', function (container) {\n\t\t\tlet mapView = new OpenStreetMap_Map_Js();\n\t\t\tmapView.registerModalView(container);\n\t\t\tcontainer.find('.searchValue').val($(element).data('location'));\n\t\t\tcontainer.find('.searchBtn').trigger('click');\n\t\t});\n\t},\n\tmassAddDocuments: function (url) {\n\t\tapp.showModalWindow(null, url, function (container) {\n\t\t\tlet uploadButton = container.find('#filesToUpload');\n\t\t\tlet template = container.find('.fileContainer');\n\t\t\tlet uploadContainer = container.find('.uploadFileContainer');\n\t\t\tlet form = container.find('form');\n\t\t\tuploadButton.on('change', function () {\n\t\t\t\tuploadContainer.find('.fileItem').remove();\n\t\t\t\tlet files = uploadButton[0].files;\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\tuploadContainer.append(template.html());\n\t\t\t\t\tuploadContainer.find('[name=\"nameFile[]\"]:last').val(files[i].name);\n\t\t\t\t}\n\t\t\t});\n\t\t\tform.on('submit', function (e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tapp.removeEmptyFilesInput(form[0]);\n\t\t\t\tlet formData = new FormData(form[0]);\n\t\t\t\turl = 'index.php';\n\t\t\t\tif (app.getViewName() === 'Detail') {\n\t\t\t\t\tformData.append('createmode', 'link');\n\t\t\t\t\tformData.append('return_module', app.getModuleName());\n\t\t\t\t\tformData.append('return_id', app.getRecordId());\n\t\t\t\t}\n\t\t\t\tlet params = {\n\t\t\t\t\turl: url,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdata: formData,\n\t\t\t\t\tprocessData: false,\n\t\t\t\t\tcontentType: false\n\t\t\t\t};\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t});\n\t\t\t\tAppConnector.request(params).done(function (data) {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\tlet relatedModuleName = 'Documents';\n\t\t\t\t\tif (app.getViewName() === 'Detail') {\n\t\t\t\t\t\tlet detailView = Vtiger_Detail_Js.getInstance();\n\t\t\t\t\t\tlet selectedTabElement = detailView.getSelectedTab();\n\t\t\t\t\t\tif (selectedTabElement.data('reference') === relatedModuleName) {\n\t\t\t\t\t\t\tdetailView.reloadTabContent();\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tdetailView.getContentHolder().find('.detailViewBlockLink').data('reference') === relatedModuleName\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tVtiger_RelatedList_Js.getInstance(\n\t\t\t\t\t\t\t\tdetailView.getRecordId(),\n\t\t\t\t\t\t\t\tapp.getModuleName(),\n\t\t\t\t\t\t\t\tselectedTabElement,\n\t\t\t\t\t\t\t\trelatedModuleName\n\t\t\t\t\t\t\t).loadRelatedList();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet updatesWidget = detailView\n\t\t\t\t\t\t\t\t.getContentHolder()\n\t\t\t\t\t\t\t\t.find(\"[data-type='RelatedModule'][data-name='Documents']\");\n\t\t\t\t\t\t\tif (updatesWidget.length > 0) {\n\t\t\t\t\t\t\t\tlet params = detailView.getFiltersData(updatesWidget);\n\t\t\t\t\t\t\t\tdetailView.loadWidget(updatesWidget, params['params']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tVtiger_List_Js.getInstance().getListViewRecords();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t},\n\tgetEmailFromRecord(record, module, maxEmails) {\n\t\tconst aDeferred = $.Deferred();\n\t\tconst progress = $.progressIndicator({ position: 'html', blockInfo: { enabled: true } });\n\t\tAppConnector.request({\n\t\t\tdataType: 'html',\n\t\t\tdata: {\n\t\t\t\tmodule: 'OSSMail',\n\t\t\t\taction: 'GetMail',\n\t\t\t\tsourceModule: module,\n\t\t\t\tsourceRecord: record,\n\t\t\t\tmaxEmails: maxEmails\n\t\t\t}\n\t\t})\n\t\t\t.done((data) => {\n\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\tif (data.substring(0, 1) == '{') {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t\tdata = data['result'];\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t} else {\n\t\t\t\t\tapp.showModalWindow(data, (data) => {\n\t\t\t\t\t\tdata.find('.selectButton').on('click', (e) => {\n\t\t\t\t\t\t\tif (data.find('input:checked').length) {\n\t\t\t\t\t\t\t\tlet email = data.find('input:checked').val();\n\t\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\t\taDeferred.resolve(email);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_SELECT_AN_OPTION'),\n\t\t\t\t\t\t\t\t\ttype: 'info'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.fail((error, err) => {\n\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\taDeferred.reject(error);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\tregisterMailButtons: function (container) {\n\t\tlet thisInstance = this;\n\t\tcontainer.find('.sendMailBtn:not(.mailBtnActive)').each(function (e) {\n\t\t\tlet sendButton = $(this);\n\t\t\tsendButton.addClass('mailBtnActive');\n\t\t\tsendButton.on('click', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tlet url = sendButton.data('url');\n\t\t\t\tlet popup = sendButton.data('popup');\n\t\t\t\tlet toMail = sendButton.data('to');\n\t\t\t\tif (toMail) {\n\t\t\t\t\turl += '&to=' + encodeURIComponent(toMail);\n\t\t\t\t}\n\t\t\t\tif (app.getRecordId() && sendButton.data('record') !== app.getRecordId()) {\n\t\t\t\t\turl += '&crmModule=' + app.getModuleName() + '&crmRecord=' + app.getRecordId();\n\t\t\t\t}\n\t\t\t\tthisInstance.sendMailWindow(url, popup);\n\t\t\t});\n\t\t});\n\t},\n\tsendMailWindow: function (url, popup, postData) {\n\t\tif (popup) {\n\t\t\tlet width = screen.width - 15;\n\t\t\tlet height = screen.height - 150;\n\t\t\tlet left = 0;\n\t\t\tlet top = 30;\n\t\t\tlet popupParams = 'width=' + width + ', height=' + height + ', left=' + left + ', top=' + top;\n\t\t\tif (postData == undefined) {\n\t\t\t\twindow.open(\n\t\t\t\t\turl,\n\t\t\t\t\t'_blank',\n\t\t\t\t\tpopupParams + ',resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no,status=no,menubar=no'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet form = $('<form/>', { action: 'index.php' });\n\t\t\turl.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\t\t\t\tform.append($('<input>', { name: key, value: value }));\n\t\t\t});\n\t\t\tfor (let i in postData) {\n\t\t\t\tform.append($('<input>', { name: i, value: JSON.stringify(postData[i]) }));\n\t\t\t}\n\t\t\t$('body').append(form);\n\t\t\tform.trigger('submit');\n\t\t} else {\n\t\t\twindow.location.href = url;\n\t\t}\n\t},\n\tregisterWidgetsEvents: function () {\n\t\tlet widgets = $('div.widgetContainer');\n\t\twidgets.on('shown.bs.collapse', function (e) {\n\t\t\tlet widgetContainer = $(e.currentTarget);\n\t\t\tVtiger_Index_Js.loadWidgets(widgetContainer);\n\t\t\tlet key = widgetContainer.attr('id');\n\t\t\tapp.cacheSet(key, 1);\n\t\t});\n\t\twidgets.on('hidden.bs.collapse', function (e) {\n\t\t\tlet widgetContainer = $(e.currentTarget);\n\t\t\tlet imageEle = widgetContainer.parent().find('.imageElement');\n\t\t\tlet imagePath = imageEle.data('rightimage');\n\t\t\timageEle.attr('src', imagePath);\n\t\t\tlet key = widgetContainer.attr('id');\n\t\t\tapp.cacheSet(key, 0);\n\t\t});\n\t},\n\t/**\n\t * Function is used to load the sidebar widgets\n\t * @param widgetContainer - widget container\n\t * @param open - widget should be open or closed\n\t */\n\tloadWidgets: function (widgetContainer, open) {\n\t\tlet message = $('.loadingWidgetMsg').html();\n\t\tif (widgetContainer.find('.card-body').html().trim()) {\n\t\t\tlet imageEle = widgetContainer.parent().find('.imageElement');\n\t\t\tlet imagePath = imageEle.data('downimage');\n\t\t\timageEle.attr('src', imagePath);\n\t\t\twidgetContainer.css('height', 'auto');\n\t\t\treturn;\n\t\t}\n\n\t\twidgetContainer.progressIndicator({ message: message });\n\t\tlet url = widgetContainer.data('url');\n\t\tlet listViewWidgetParams = {\n\t\t\ttype: 'GET',\n\t\t\turl: 'index.php',\n\t\t\tdataType: 'html',\n\t\t\tdata: url\n\t\t};\n\t\tAppConnector.request(listViewWidgetParams).done(function (data) {\n\t\t\tif (typeof open === 'undefined') open = true;\n\t\t\tif (open) {\n\t\t\t\twidgetContainer.progressIndicator({ mode: 'hide' });\n\t\t\t\tlet imageEle = widgetContainer.parent().find('.imageElement');\n\t\t\t\tlet imagePath = imageEle.data('downimage');\n\t\t\t\timageEle.attr('src', imagePath);\n\t\t\t\twidgetContainer.css('height', 'auto');\n\t\t\t}\n\t\t\twidgetContainer.html(data);\n\t\t\tif (data == '') {\n\t\t\t\twidgetContainer.closest('.quickWidget').addClass('d-none');\n\t\t\t} else {\n\t\t\t\tlet label = widgetContainer.closest('.quickWidget').find('.quickWidgetHeader').data('label');\n\t\t\t}\n\t\t\t$('.bodyContents').trigger('Vtiger.Widget.Load.' + label, $(widgetContainer));\n\t\t});\n\t},\n\tloadWidgetsOnLoad: function () {\n\t\tlet widgets = $('div.widgetContainer');\n\t\twidgets.each(function (index, element) {\n\t\t\tVtiger_Index_Js.loadWidgets($(element));\n\t\t});\n\t},\n\t/**\n\t * Function to change user theme(colour)\n\t * @params : colour name\n\t */\n\tchangeSkin: function () {\n\t\t$('.themeElement').on('click', function (e) {\n\t\t\te.stopPropagation();\n\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\tcurrentElement.closest('#themeContainer').hide();\n\t\t\tlet progressElement = $('#progressDiv');\n\t\t\tprogressElement.progressIndicator();\n\t\t\tlet params = {\n\t\t\t\tmodule: 'Users',\n\t\t\t\taction: 'SaveAjax',\n\t\t\t\trecord: CONFIG.userId,\n\t\t\t\tfield: 'theme',\n\t\t\t\tvalue: currentElement.data('skinName')\n\t\t\t};\n\t\t\tAppConnector.request(params)\n\t\t\t\t.done(function (data) {\n\t\t\t\t\tif (data.success && data.result) {\n\t\t\t\t\t\tprogressElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t$('.settingIcons').removeClass('open');\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(function (error, err) {});\n\t\t});\n\t},\n\tmarkNotifications: function (id) {\n\t\tlet aDeferred = $.Deferred();\n\t\tlet thisInstance = this;\n\t\tlet params = {\n\t\t\tmodule: 'Notification',\n\t\t\taction: 'Notification',\n\t\t\tmode: 'setMark',\n\t\t\tids: id\n\t\t};\n\t\tAppConnector.request(params)\n\t\t\t.done(function (data) {\n\t\t\t\tlet row = $('.notificationEntries .noticeRow[data-id=\"' + id + '\"]');\n\t\t\t\tapp.showNotify({\n\t\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\t\ttext: app.vtranslate('JS_MARKED_AS_READ'),\n\t\t\t\t\ttype: 'info'\n\t\t\t\t});\n\t\t\t\tif (row.length) {\n\t\t\t\t\trow.fadeOut(300, function () {\n\t\t\t\t\t\tlet entries = row.closest('.notificationEntries');\n\t\t\t\t\t\trow.remove();\n\t\t\t\t\t\tentries.each(function (index) {\n\t\t\t\t\t\t\tlet block = $(this);\n\t\t\t\t\t\t\tif (block.find('.noticeRow').length == 0) {\n\t\t\t\t\t\t\t\tblock.closest('.panel').hide();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tthisInstance.getNotificationsForReminder();\n\t\t\t\t}\n\t\t\t\taDeferred.resolve(data);\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\tapp.errorLog(textStatus, errorThrown);\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\tmarkAllNotifications: function (element) {\n\t\tlet ids = [];\n\t\tlet li = $(element).closest('.notificationContainer');\n\t\tli.find('.notificationEntries .noticeRow').each(function (index) {\n\t\t\tids.push($(this).data('id'));\n\t\t});\n\t\tif (ids.length == 0) {\n\t\t\telement.remove();\n\t\t\treturn false;\n\t\t}\n\t\tlet params = {\n\t\t\tmodule: 'Notification',\n\t\t\taction: 'Notification',\n\t\t\tmode: 'setMark',\n\t\t\tids: ids\n\t\t};\n\t\tli.progressIndicator({ position: 'html' });\n\t\tAppConnector.request(params).done(function (data) {\n\t\t\tli.progressIndicator({ mode: 'hide' });\n\t\t\tapp.showNotify({\n\t\t\t\ttitle: app.vtranslate('JS_MESSAGE'),\n\t\t\t\ttext: app.vtranslate('JS_MARKED_AS_READ'),\n\t\t\t\ttype: 'info'\n\t\t\t});\n\t\t\tVtiger_Index_Js.getNotificationsForReminder();\n\t\t});\n\t},\n\t/**\n\t * Function registers event for Reminder popups\n\t */\n\tregisterReminders: function () {\n\t\tlet activityReminder = (parseInt(app.getMainParams('activityReminder')) || 0) * 1000;\n\t\tif (activityReminder != 0 && $('.remindersNotice.autoRefreshing').length) {\n\t\t\tVtiger_Index_Js.requestReminder();\n\t\t\twindow.reminder = setInterval(function () {\n\t\t\t\tVtiger_Index_Js.requestReminder();\n\t\t\t}, activityReminder);\n\t\t}\n\t\tlet reminder = (parseInt(app.getMainParams('intervalForNotificationNumberCheck')) || 0) * 1000;\n\t\tif (reminder != 0 && $('.notificationsNotice.autoRefreshing').length) {\n\t\t\tVtiger_Index_Js.getNotificationsForReminder();\n\t\t\twindow.reminderNotifications = setInterval(function () {\n\t\t\t\tVtiger_Index_Js.getNotificationsForReminder();\n\t\t\t}, reminder);\n\t\t}\n\t},\n\tgetNotificationsForReminder: function () {\n\t\tlet thisInstance = this;\n\t\tlet content = $('.remindersNotificationContainer');\n\t\tlet element = $('.notificationsNotice');\n\t\tlet url = 'index.php?module=Notification&view=Reminders';\n\t\tAppConnector.request(url)\n\t\t\t.done(function (data) {\n\t\t\t\tcontent.html(data);\n\t\t\t\tthisInstance.refreshReminderCount(content, element, 'js-count-notifications-reminder');\n\t\t\t\tcontent.find('.js-set-marked').on('click', function (e) {\n\t\t\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\t\t\tlet recordID = currentElement.closest('.js-notification-panel').data('record');\n\t\t\t\t\tthisInstance.markNotifications(recordID).done(function (data) {\n\t\t\t\t\t\tcurrentElement.closest('.js-notification-panel').fadeOut(300, function () {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t\tthisInstance.refreshReminderCount(content, element, 'js-count-notifications-reminder');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.fail(function (data, err) {\n\t\t\t\tclearInterval(window.reminderNotifications);\n\t\t\t});\n\t},\n\t/**\n\t * Function request for reminder popups\n\t */\n\trequestReminder: function () {\n\t\tlet thisInstance = this;\n\t\tlet content = $('.remindersNoticeContainer');\n\t\tlet element = $('.remindersNotice');\n\t\tlet url = 'index.php?module=Calendar&view=Reminders&type_remainder=true';\n\t\tAppConnector.request(url)\n\t\t\t.done(function (data) {\n\t\t\t\tcontent.html(data);\n\t\t\t\tthisInstance.refreshReminderCount(content, element, 'countRemindersNotice');\n\t\t\t\tapp.registerModal(content);\n\t\t\t\tcontent.find('.reminderPostpone').on('click', function (e) {\n\t\t\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\t\t\tlet recordID = currentElement.closest('.js-toggle-panel').data('record');\n\t\t\t\t\tlet url =\n\t\t\t\t\t\t'index.php?module=Calendar&action=ActivityReminder&mode=postpone&record=' +\n\t\t\t\t\t\trecordID +\n\t\t\t\t\t\t'&time=' +\n\t\t\t\t\t\tcurrentElement.data('time');\n\t\t\t\t\tAppConnector.request(url).done(function (data) {\n\t\t\t\t\t\tcurrentElement.closest('.js-toggle-panel').fadeOut(300, function () {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t\tthisInstance.refreshReminderCount(content, element, 'countRemindersNotice');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.fail(function (data, err) {\n\t\t\t\tclearInterval(window.reminder);\n\t\t\t});\n\t},\n\trefreshReminderCount: function (content, element, tag) {\n\t\tlet badge = element.find('.badge');\n\t\tlet count = content.find('.js-toggle-panel').length;\n\t\tbadge.text(count);\n\t\tbadge.removeClass('d-none');\n\t\tif (count > 0 && element.hasClass('autoRefreshing')) {\n\t\t\telement.effect('pulsate', 1500);\n\t\t\tif (app.cacheGet(tag) != count) {\n\t\t\t\tapp.playSound('REMINDERS');\n\t\t\t\tapp.cacheSet(tag, count);\n\t\t\t}\n\t\t} else {\n\t\t\tbadge.addClass('d-none');\n\t\t}\n\t},\n\tregisterResizeEvent: function () {\n\t\t$(window).on('resize', function () {\n\t\t\tif (this.resizeTO) clearTimeout(this.resizeTO);\n\t\t\tthis.resizeTO = setTimeout(function () {\n\t\t\t\t$(this).trigger('resizeEnd');\n\t\t\t}, 600);\n\t\t});\n\t},\n\tchangeWatching: function (instance) {\n\t\tlet value, module, state, className, user, record;\n\t\tif (instance != undefined) {\n\t\t\tinstance = $(instance);\n\t\t\tvalue = instance.data('value');\n\t\t\tif (instance.data('module') != undefined) {\n\t\t\t\tmodule = instance.data('module');\n\t\t\t} else {\n\t\t\t\tmodule = app.getModuleName();\n\t\t\t}\n\t\t\tif (instance.data('user') != undefined) {\n\t\t\t\tuser = instance.data('user');\n\t\t\t}\n\t\t\tif (instance.data('record') != undefined) {\n\t\t\t\trecord = instance.data('record');\n\t\t\t}\n\t\t}\n\t\tapp.showConfirmModal({\n\t\t\ttitle: app.vtranslate('JS_WATCHING_TITLE'),\n\t\t\ttext: app.vtranslate('JS_WATCHING_MESSAGE' + value),\n\t\t\ticon: 'fas fa-eye',\n\t\t\tconfirmButtonLabel: 'LBL_YES',\n\t\t\trejectedButtonLabel: 'LBL_NO',\n\t\t\tconfirmedCallback: () => {\n\t\t\t\tVtiger_Index_Js.updateWatching(module, value, user, record).done(function (data) {\n\t\t\t\t\tif (instance != undefined) {\n\t\t\t\t\t\tlet buttonIcon = instance.find('.fas');\n\t\t\t\t\t\tstate = data.result == 1 ? 0 : 1;\n\t\t\t\t\t\tinstance.data('value', state);\n\t\t\t\t\t\tif (state == 1) {\n\t\t\t\t\t\t\tinstance.toggleClass(instance.data('off') + ' ' + instance.data('on'));\n\t\t\t\t\t\t\tbuttonIcon.removeClass('fas fa-eye');\n\t\t\t\t\t\t\tbuttonIcon.addClass('fas fa-eye-slash');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinstance.toggleClass(instance.data('on') + ' ' + instance.data('off'));\n\t\t\t\t\t\t\tbuttonIcon.removeClass('fas fa-eye-slash');\n\t\t\t\t\t\t\tbuttonIcon.addClass('fas fa-eye');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\tupdateWatching: function (module, value, user, record) {\n\t\tlet aDeferred = $.Deferred();\n\t\tlet params = {\n\t\t\tmodule: module,\n\t\t\taction: 'Watchdog',\n\t\t\tstate: value\n\t\t};\n\t\tif (user != undefined) {\n\t\t\tparams['user'] = user;\n\t\t}\n\t\tif (record != undefined && record != 0) {\n\t\t\tparams['record'] = record;\n\t\t}\n\t\tAppConnector.request(params)\n\t\t\t.done(function (data) {\n\t\t\t\taDeferred.resolve(data);\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\tapp.errorLog(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\tassignToOwner: function (element, userId) {\n\t\telement = $(element);\n\t\tif (userId == undefined) {\n\t\t\tuserId = CONFIG.userId;\n\t\t}\n\t\tlet params = {\n\t\t\tmodule: element.data('module'),\n\t\t\trecord: element.data('record'),\n\t\t\tfield: 'assigned_user_id',\n\t\t\tvalue: userId\n\t\t};\n\t\tapp.saveAjax('', null, params).done(function (e) {\n\t\t\tapp.hideModalWindow();\n\t\t\tif (app.getViewName() === 'List') {\n\t\t\t\tlet listinstance = new Vtiger_List_Js();\n\t\t\t\tlistinstance.getListViewRecords();\n\t\t\t} else if (app.getViewName() === 'Detail') {\n\t\t\t\tdocument.location.reload();\n\t\t\t}\n\t\t});\n\t},\n\tsendNotification: function () {\n\t\tApp.Components.QuickCreate.createRecord('Notification');\n\t},\n\tperformPhoneCall: function (phoneNumber, record) {\n\t\tAppConnector.request({\n\t\t\tmodule: app.getModuleName(),\n\t\t\tview: 'BasicAjax',\n\t\t\tmode: 'performPhoneCall',\n\t\t\tphoneNumber: phoneNumber,\n\t\t\trecord: record\n\t\t}).done(function (response) {\n\t\t\tresponse = JSON.parse(response);\n\t\t\tVtiger_Helper_Js.showMessage({ text: response.result });\n\t\t});\n\t},\n\tregisterEvents: function () {\n\t\tVtiger_Index_Js.registerWidgetsEvents();\n\t\tVtiger_Index_Js.loadWidgetsOnLoad();\n\t\tVtiger_Index_Js.registerReminders();\n\t\tVtiger_Index_Js.changeSkin();\n\t\tVtiger_Index_Js.registerResizeEvent();\n\t}\n};\n//On Page Load\njQuery(function () {\n\tVtiger_Index_Js.registerEvents();\n});\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n *************************************************************************************/\n'use strict';\n\nwindow.AppConnector = {\n\t/**\n\t * Sends a pjax request (push state +ajax)\n\t * The function is deferred. it will be resolved on success and error on failure\n\t *  Success - if request is success it will send you data that it recieved\n\t *  error - it will send two parameters first gives string regarding error\n\t *                   Second gives you error object if exists\n\t *\n\t *  @return - deferred promise\n\t */\n\trequestPjax: function (params) {\n\t\treturn AppConnector._request(params, true);\n\t},\n\n\t/**\n\t *  Sends ajax request to the specified url.\n\t *  The function is deferred. it will be resolved on success and error on failure\n\t *  Success - if request is success it will send you data that it recieved\n\t *  error - it will send two parameters first gives string regarding error\n\t *                   Second gives you error object if exists\n\t *\n\t *  @return - deferred promise\n\t */\n\trequest: function (params, rawData) {\n\t\treturn AppConnector._request(params, false, rawData);\n\t},\n\n\t_request: function (params, pjaxMode, rawData) {\n\t\tconst aDeferred = jQuery.Deferred();\n\t\tif (typeof rawData === 'undefined') {\n\t\t\trawData = false;\n\t\t}\n\t\tif (typeof pjaxMode === 'undefined') {\n\t\t\tpjaxMode = false;\n\t\t}\n\t\tif (typeof params === 'undefined') {\n\t\t\tparams = {};\n\t\t}\n\t\tlet fullUrl = '',\n\t\t\tindex,\n\t\t\tcallerParams;\n\t\t//caller has send only data\n\t\tif (typeof params.data === 'undefined' || rawData) {\n\t\t\tif (typeof params === 'string') {\n\t\t\t\tcallerParams = fullUrl = params;\n\t\t\t\tindex = callerParams.indexOf('?');\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlet subStr = callerParams.substr(0, index + 1); //need to replace only \"index.php?\" or \"?\"\n\t\t\t\t\tcallerParams = callerParams.replace(subStr, '');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallerParams = $.extend({}, params);\n\t\t\t}\n\t\t\tparams = {};\n\t\t\tparams.data = callerParams;\n\t\t}\n\t\t//Make the request as post by default\n\t\tif (typeof params.type === 'undefined' || rawData) params.type = 'POST';\n\t\tif (typeof params.jsonp === 'undefined' || rawData) params.jsonp = false;\n\n\t\t//By default we expect json from the server\n\t\tif (typeof params.dataType === 'undefined' || rawData) {\n\t\t\tlet data = params.data;\n\t\t\t//view will return html\n\t\t\tparams.dataType = 'json';\n\t\t\tif (data.hasOwnProperty('view')) {\n\t\t\t\tparams.dataType = 'html';\n\t\t\t} else if (typeof data === 'string' && data.indexOf('&view=') !== -1) {\n\t\t\t\tparams.dataType = 'html';\n\t\t\t}\n\t\t\tif (typeof params.url !== 'undefined' && params.url.indexOf('&view=') !== -1) {\n\t\t\t\tparams.dataType = 'html';\n\t\t\t}\n\t\t}\n\t\t//If url contains params then seperate them and make them as data\n\t\tif (typeof params.url !== 'undefined' && params.url.indexOf('?') !== -1) {\n\t\t\tfullUrl = params.url;\n\t\t\tlet urlSplit = params.url.split('?'),\n\t\t\t\tqueryString = urlSplit[1];\n\t\t\tparams.url = urlSplit[0];\n\t\t\tlet queryParameters = queryString.split('&');\n\t\t\tfor (index = 0; index < queryParameters.length; index++) {\n\t\t\t\tlet queryParam = queryParameters[index],\n\t\t\t\t\tqueryParamComponents = queryParam.split('=');\n\t\t\t\tparams.data[queryParamComponents[0]] = queryParamComponents[1];\n\t\t\t}\n\t\t}\n\t\tif (typeof params.url === 'undefined' || params.url.length <= 0) {\n\t\t\tparams.url = 'index.php';\n\t\t}\n\t\tparams.success = function (data, status, jqXHR) {\n\t\t\tif (data !== null && typeof data === 'object' && data.error) {\n\t\t\t\tapp.errorLog(data.error);\n\t\t\t\tif (data.error.message) {\n\t\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\t\ttext: data.error.message,\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\taDeferred.resolve(data);\n\t\t};\n\t\tparams.error = function (jqXHR, textStatus, errorThrown) {\n\t\t\tlet action = jqXHR.getResponseHeader('yf-action');\n\t\t\tif (action === 'logout') {\n\t\t\t\twindow.location.href = 'index.php';\n\t\t\t}\n\t\t\tif (CONFIG.debug) {\n\t\t\t\tif (jqXHR.status === 406) {\n\t\t\t\t\tlet sep = '-'.repeat(150);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'%cYetiForce debug mode!!!',\n\t\t\t\t\t\t'color: red; font-family: sans-serif; font-size: 1.5em; font-weight: bolder; text-shadow: #000 1px 1px;'\n\t\t\t\t\t);\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Error: ' + errorThrown,\n\t\t\t\t\t\t'\\n' + sep + '\\nTrace:\\n' + sep + '\\n' + (jqXHR.responseJSON ? jqXHR.responseJSON.error.trace : ''),\n\t\t\t\t\t\t'\\n' + sep + '\\nParams:\\n' + sep + '\\n' + JSON.stringify(params, null, '\\t')\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tapp.errorLog(jqXHR, textStatus, errorThrown);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (textStatus == 'error' && jqXHR.responseJSON) {\n\t\t\t\ttextStatus = jqXHR.responseJSON.error.message;\n\t\t\t}\n\t\t\taDeferred.reject(textStatus, errorThrown, jqXHR);\n\t\t};\n\t\tif (params.data === '') {\n\t\t\tapp.showNotify({ type: 'error', title: app.vtranslate('JS_ERROR') });\n\t\t\treturn aDeferred.reject();\n\t\t}\n\t\tjQuery.ajax(params);\n\t\tif (pjaxMode) {\n\t\t\tapp.changeUrl(params);\n\t\t}\n\t\treturn aDeferred.promise();\n\t},\n\t/**\n\t * Send form data\n\t * @param {string} url\n\t * @param {object} postData\n\t * @param {object} formAttr\n\t */\n\trequestForm: function (url, postData = {}, formAttr = {}) {\n\t\t$.extend(formAttr, {\n\t\t\tmethod: 'post',\n\t\t\taction: url,\n\t\t\tstyle: 'display:none;'\n\t\t});\n\t\tlet form = $('<form></form>', formAttr);\n\t\tif (typeof csrfMagicName !== 'undefined') {\n\t\t\tpostData[csrfMagicName] = csrfMagicToken;\n\t\t}\n\t\t$.each(postData, (index, value) => {\n\t\t\tlet input = $(document.createElement('input'));\n\t\t\tinput.attr('type', 'hidden');\n\t\t\tinput.attr('name', index);\n\t\t\tinput.val(value);\n\t\t\tform.append(input);\n\t\t});\n\t\t$('body').append(form);\n\t\tform.trigger('submit');\n\t\tform.remove();\n\t}\n};\n", "/*+***********************************************************************************\n * The contents of this file are subject to the vtiger CRM Public License Version 1.0\n * (\"License\"); You may not use this file except in compliance with the License\n * The Original Code is:  vtiger CRM Open Source\n * The Initial Developer of the Original Code is vtiger.\n * Portions created by vtiger are Copyright (C) vtiger.\n * All Rights Reserved.\n * Contributor(s): YetiForce.com\n *************************************************************************************/\n'use strict';\n\nvar App = (window.App = {\n\tComponents: {\n\t\tTree: {\n\t\t\tBasic: class {\n\t\t\t\tconstructor(container = $('.js-tree-container')) {\n\t\t\t\t\tthis.treeInstance = false;\n\t\t\t\t\tthis.treeData = false;\n\t\t\t\t\tthis.generateTree(container);\n\t\t\t\t}\n\n\t\t\t\tgenerateTree(container) {\n\t\t\t\t\tconst slef = this;\n\t\t\t\t\tif (slef.treeInstance === false) {\n\t\t\t\t\t\tslef.treeInstance = container;\n\t\t\t\t\t\tslef.treeInstance\n\t\t\t\t\t\t\t.on('select_node.jstree', function (e, data) {\n\t\t\t\t\t\t\t\tif (data.event !== undefined && $(data.event.target).hasClass('jstree-checkbox')) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata.instance.select_node(data.node.children_d);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.on('deselect_node.jstree', function (e, data) {\n\t\t\t\t\t\t\t\tif (data.event !== undefined && $(data.event.target).hasClass('jstree-checkbox')) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata.instance.deselect_node(data.node.children_d);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.jstree({\n\t\t\t\t\t\t\t\tcore: {\n\t\t\t\t\t\t\t\t\tdata: slef.getRecords(container),\n\t\t\t\t\t\t\t\t\tthemes: {\n\t\t\t\t\t\t\t\t\t\tname: 'proton',\n\t\t\t\t\t\t\t\t\t\tresponsive: true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tplugins: ['search', 'checkbox']\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.registerSearchEvent();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tregisterSearchEvent() {\n\t\t\t\t\tconst self = this;\n\t\t\t\t\tlet searchTimeout = false,\n\t\t\t\t\t\ttreeSearch = $('.js-tree-search');\n\t\t\t\t\ttreeSearch.on('keyup', () => {\n\t\t\t\t\t\tif (searchTimeout) {\n\t\t\t\t\t\t\tclearTimeout(searchTimeout);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsearchTimeout = setTimeout(function () {\n\t\t\t\t\t\t\tvar searchValue = treeSearch.val();\n\t\t\t\t\t\t\tself.treeInstance.jstree(true).search(searchValue);\n\t\t\t\t\t\t}, 250);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tgetRecords(container) {\n\t\t\t\t\tif (this.treeData === false && container !== 'undefined') {\n\t\t\t\t\t\tthis.treeData = JSON.parse(container.find('.js-tree-data').val());\n\t\t\t\t\t}\n\t\t\t\t\treturn this.treeData;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Quick create object used by Header.js and yf plugins\n\t\t *\n\t\t */\n\t\tQuickCreate: {\n\t\t\t/**\n\t\t\t * module quick create data cache\n\t\t\t */\n\t\t\tmoduleCache: {},\n\t\t\t/**\n\t\t\t * Register function\n\t\t\t * @param {jQuery} container\n\t\t\t */\n\t\t\tregister(container) {\n\t\t\t\tif (typeof container === 'undefined') {\n\t\t\t\t\tcontainer = $('body');\n\t\t\t\t} else {\n\t\t\t\t\tcontainer = $(container);\n\t\t\t\t}\n\t\t\t\tcontainer.on('click', '.js-quick-create-modal', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tlet element = $(this);\n\t\t\t\t\tif (element.data('module')) {\n\t\t\t\t\t\tApp.Components.QuickCreate.createRecord(element.data('module'));\n\t\t\t\t\t}\n\t\t\t\t\tif (element.data('url')) {\n\t\t\t\t\t\tlet url = element.data('url');\n\t\t\t\t\t\tlet urlObject = app.convertUrlToObject(url);\n\t\t\t\t\t\tlet params = { callbackFunction: function () {} };\n\t\t\t\t\t\tconst progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\t\t\tApp.Components.QuickCreate.getForm(url, urlObject.module, params).done((data) => {\n\t\t\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tApp.Components.QuickCreate.showModal(data, params, element);\n\t\t\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * createRecord\n\t\t\t *\n\t\t\t * @param   {string}  moduleName\n\t\t\t * @param   {object}  params\n\t\t\t */\n\t\t\tcreateRecord(moduleName, params = {}) {\n\t\t\t\tif ('parentIframe' === CONFIG.modalTarget) {\n\t\t\t\t\twindow.parent.App.Components.QuickCreate.createRecord(moduleName, params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet url = 'index.php?module=' + moduleName + '&view=QuickCreateAjax';\n\t\t\t\tif (undefined === params.callbackFunction) {\n\t\t\t\t\tparams.callbackFunction = function () {};\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t(app.getViewName() === 'Detail' || (app.getViewName() === 'Edit' && app.getRecordId() !== undefined)) &&\n\t\t\t\t\tapp.getParentModuleName() != 'Settings'\n\t\t\t\t) {\n\t\t\t\t\turl += '&sourceModule=' + app.getModuleName();\n\t\t\t\t\turl += '&sourceRecord=' + app.getRecordId();\n\t\t\t\t}\n\t\t\t\tconst progress = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tthis.getForm(url, moduleName, params).done((data) => {\n\t\t\t\t\tprogress.progressIndicator({\n\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t});\n\t\t\t\t\tthis.showModal(data, params);\n\t\t\t\t\tapp.registerEventForClockPicker();\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Get quick create form\n\t\t\t *\n\t\t\t * @param   {string}  url\n\t\t\t * @param   {string}  moduleName\n\t\t\t * @param   {object}  params\n\t\t\t *\n\t\t\t * @return  {Promise} aDeferred\n\t\t\t */\n\t\t\tgetForm(url, moduleName, params = {}) {\n\t\t\t\tconst aDeferred = $.Deferred();\n\t\t\t\tlet requestParams;\n\t\t\t\tlet isCacheActive = !params.noCache || undefined === params.noCache;\n\t\t\t\tif (isCacheActive) {\n\t\t\t\t\tif (App.Components.QuickCreate.moduleCache[moduleName]) {\n\t\t\t\t\t\taDeferred.resolve(App.Components.QuickCreate.moduleCache[moduleName]);\n\t\t\t\t\t\treturn aDeferred.promise();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trequestParams = url;\n\t\t\t\tif (typeof params.data !== 'undefined') {\n\t\t\t\t\trequestParams = {};\n\t\t\t\t\trequestParams['data'] = params.data;\n\t\t\t\t\trequestParams['url'] = url;\n\t\t\t\t}\n\t\t\t\tAppConnector.request(requestParams).done(function (data) {\n\t\t\t\t\tif (isCacheActive) {\n\t\t\t\t\t\tApp.Components.QuickCreate.moduleCache[moduleName] = data;\n\t\t\t\t\t}\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t});\n\t\t\t\treturn aDeferred.promise();\n\t\t\t},\n\t\t\t/**\n\t\t\t * Show modal\n\t\t\t *\n\t\t\t * @param   {string}  html\n\t\t\t * @param   {object}  params\n\t\t\t * @param   {jQuery}  element\n\t\t\t */\n\t\t\tshowModal(html, params = {}, element = null) {\n\t\t\t\tapp.showModalWindow(html, (container) => {\n\t\t\t\t\tconst quickCreateForm = container.find('form.js-form');\n\t\t\t\t\tconst moduleName = quickCreateForm.find('[name=\"module\"]').val();\n\t\t\t\t\tconst editViewInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\tconst moduleClassName = moduleName + '_QuickCreate_Js';\n\t\t\t\t\teditViewInstance.setForm(quickCreateForm);\n\t\t\t\t\teditViewInstance.registerBasicEvents(quickCreateForm);\n\t\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\t\tnew window[moduleClassName]().registerEvents(container);\n\t\t\t\t\t}\n\t\t\t\t\tquickCreateForm.validationEngine(app.validationEngineOptionsForRecord);\n\t\t\t\t\tif (typeof params.callbackPostShown !== 'undefined') {\n\t\t\t\t\t\tparams.callbackPostShown(quickCreateForm);\n\t\t\t\t\t}\n\t\t\t\t\tthis.registerPostLoadEvents(quickCreateForm, params, element);\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Register post load events\n\t\t\t *\n\t\t\t * @param   {jQuery}  form\n\t\t\t * @param   {object}  params\n\t\t\t * @param   {jQuery}  element\n\t\t\t *\n\t\t\t * @return  {boolean}\n\t\t\t */\n\t\t\tregisterPostLoadEvents(form, params, element) {\n\t\t\t\tconst submitSuccessCallback = params.callbackFunction || function () {};\n\t\t\t\tconst goToFullFormCallBack = params.goToFullFormcallback || function () {};\n\t\t\t\tform.on('submit', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget);\n\t\t\t\t\tif (form.hasClass('not_validation')) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tconst moduleName = form.find('[name=\"module\"]').val();\n\t\t\t\t\t//Form should submit only once for multiple clicks also\n\t\t\t\t\tif (typeof form.data('submit') !== 'undefined') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\t\t\t//If validation fails, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Once the form is submiting add data attribute to that form element\n\t\t\t\t\t\t\tform.data('submit', 'true');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst recordPreSaveEvent = $.Event(Vtiger_Edit_Js.recordPreSave);\n\t\t\t\t\t\tform.trigger(recordPreSaveEvent, {\n\t\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\t\tmodule: moduleName\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!recordPreSaveEvent.isDefaultPrevented()) {\n\t\t\t\t\t\t\tconst moduleInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\t\t\tconst saveHandler = !!moduleInstance.quickCreateSave ? moduleInstance.quickCreateSave : this.save;\n\t\t\t\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\t\t\t\tmessage: app.vtranslate('JS_SAVE_LOADER_INFO'),\n\t\t\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsaveHandler(form)\n\t\t\t\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\t\t\t\tlet modalContainer = form.closest('.modalContainer');\n\t\t\t\t\t\t\t\t\tif (modalContainer.length) {\n\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow(false, modalContainer[0].id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsubmitSuccessCallback(data);\n\t\t\t\t\t\t\t\t\tapp.event.trigger('QuickCreate.AfterSaveFinal', data, form);\n\t\t\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_SAVE_NOTIFY_SUCCESS'),\n\t\t\t\t\t\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tapp.reloadAfterSave(data, params, form, element);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\t\ttext: errorThrown,\n\t\t\t\t\t\t\t\t\t\ttitle: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//If validation fails in recordPreSaveEvent, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tform.find('.js-full-editlink').on('click', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget).closest('form');\n\t\t\t\t\tconst editViewUrl = $(e.currentTarget).data('url');\n\t\t\t\t\tgoToFullFormCallBack(form);\n\t\t\t\t\tthis.goToFullForm(form, editViewUrl);\n\t\t\t\t});\n\n\t\t\t\tthis.registerTabEvents(form);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Function to navigate from quick create to edit iew full form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t */\n\t\t\tgoToFullForm(form) {\n\t\t\t\t//As formData contains information about both view and action removed action and directed to view\n\t\t\t\tform.find('input[name=\"action\"]').remove();\n\t\t\t\tform.append('<input type=\"hidden\" name=\"view\" value=\"Edit\" />');\n\t\t\t\t$.each(form.find('[data-validation-engine]'), function (key, data) {\n\t\t\t\t\t$(data).removeAttr('data-validation-engine');\n\t\t\t\t});\n\t\t\t\tform.addClass('not_validation');\n\t\t\t\tform.trigger('submit');\n\t\t\t},\n\t\t\t/**\n\t\t\t * Register tab events\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t */\n\t\t\tregisterTabEvents(form) {\n\t\t\t\tconst tabElements = form.find('.nav.nav-pills , .nav.nav-tabs').find('a');\n\t\t\t\t//This will remove the name attributes and assign it to data-element-name . We are doing this to avoid\n\t\t\t\t//Multiple element to send as in calendar\n\t\t\t\tconst quickCreateTabOnHide = function (target) {\n\t\t\t\t\t$(target)\n\t\t\t\t\t\t.find('[name]')\n\t\t\t\t\t\t.each(function (index, element) {\n\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\telement.attr('data-element-name', element.attr('name')).removeAttr('name');\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t//This will add the name attributes and get value from data-element-name . We are doing this to avoid\n\t\t\t\t//Multiple element to send as in calendar\n\t\t\t\tconst quickCreateTabOnShow = function (target) {\n\t\t\t\t\t$(target)\n\t\t\t\t\t\t.find('[data-element-name]')\n\t\t\t\t\t\t.each(function (index, element) {\n\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\telement.attr('name', element.attr('data-element-name')).removeAttr('data-element-name');\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\ttabElements.on('click', function (e) {\n\t\t\t\t\tquickCreateTabOnHide(tabElements.not('[aria-expanded=\"false\"]').attr('data-target'));\n\t\t\t\t\tquickCreateTabOnShow($(this).attr('data-target'));\n\t\t\t\t\t//while switching tabs we have to clear the invalid fields list\n\t\t\t\t\tform.data('jqv').InvalidFields = [];\n\t\t\t\t});\n\t\t\t\t//To show aleady non active element , this we are doing so that on load we can remove name attributes for other fields\n\t\t\t\ttabElements.filter('a:not(.active)').each(function (e) {\n\t\t\t\t\tquickCreateTabOnHide($(this).attr('data-target'));\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Save quick create form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t *\n\t\t\t * @return  {Promise}        aDeferred\n\t\t\t */\n\t\t\tsave(form) {\n\t\t\t\tlet aDeferred = $.Deferred();\n\t\t\t\tAppConnector.request(form.serializeFormData())\n\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t\treturn aDeferred.promise();\n\t\t\t}\n\t\t},\n\t\tQuickEdit: {\n\t\t\t/**\n\t\t\t * Show modal\n\t\t\t *\n\t\t\t * @param   {string}  html\n\t\t\t * @param   {object}  params\n\t\t\t */\n\t\t\tshowModal(params = {}, element) {\n\t\t\t\tconst self = this;\n\t\t\t\tparams['view'] = 'QuickEditModal';\n\t\t\t\tAppConnector.request(params).done(function (html) {\n\t\t\t\t\tapp.showModalWindow(html, (container) => {\n\t\t\t\t\t\tlet form = container.find('form[name=\"QuickEdit\"]');\n\t\t\t\t\t\tlet moduleName = form.find('[name=\"module\"]').val();\n\t\t\t\t\t\tlet editViewInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\t\tlet moduleClassName = moduleName + '_QuickEdit_Js';\n\t\t\t\t\t\teditViewInstance.setForm(form);\n\t\t\t\t\t\teditViewInstance.registerBasicEvents(form);\n\t\t\t\t\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\t\t\t\t\tnew window[moduleClassName]().registerEvents(container);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tform.validationEngine(app.validationEngineOptionsForRecord);\n\t\t\t\t\t\tif (typeof params.callbackPostShown !== 'undefined') {\n\t\t\t\t\t\t\tparams.callbackPostShown(form, params);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.registerPostLoadEvents(form, params, element);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Register post load events\n\t\t\t *\n\t\t\t * @param   {jQuery}  form jQuery\n\t\t\t * @param   {object}  params\n\t\t\t * @param   {jQuery}  element\n\t\t\t */\n\t\t\tregisterPostLoadEvents(form, params, element) {\n\t\t\t\tconst submitSuccessCallback = params.callbackFunction || function () {};\n\t\t\t\tconst goToFullFormCallBack = params.goToFullFormcallback || function () {};\n\t\t\t\tform.on('submit', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget);\n\t\t\t\t\tif (form.hasClass('not_validation')) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tconst moduleName = form.find('[name=\"module\"]').val();\n\t\t\t\t\t//Form should submit only once for multiple clicks also\n\t\t\t\t\tif (typeof form.data('submit') !== 'undefined') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\t\t\t//If validation fails, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Once the form is submiting add data attribute to that form element\n\t\t\t\t\t\t\tform.data('submit', 'true');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst recordPreSaveEvent = $.Event(Vtiger_Edit_Js.recordPreSave);\n\t\t\t\t\t\tform.trigger(recordPreSaveEvent, {\n\t\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\t\tmodule: moduleName\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!recordPreSaveEvent.isDefaultPrevented()) {\n\t\t\t\t\t\t\tconst moduleInstance = Vtiger_Edit_Js.getInstanceByModuleName(moduleName);\n\t\t\t\t\t\t\tconst saveHandler = !!moduleInstance.quickEditSave ? moduleInstance.quickEditSave : this.save;\n\t\t\t\t\t\t\tlet progress = $.progressIndicator({\n\t\t\t\t\t\t\t\tmessage: app.vtranslate('JS_SAVE_LOADER_INFO'),\n\t\t\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsaveHandler(form).done((data) => {\n\t\t\t\t\t\t\t\tconst modalContainer = form.closest('.modalContainer');\n\t\t\t\t\t\t\t\tif (modalContainer.length) {\n\t\t\t\t\t\t\t\t\tapp.hideModalWindow(false, modalContainer[0].id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsubmitSuccessCallback(data);\n\t\t\t\t\t\t\t\tapp.event.trigger('QuickEdit.AfterSaveFinal', data, form, element);\n\t\t\t\t\t\t\t\tprogress.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_SAVE_NOTIFY_SUCCESS'),\n\t\t\t\t\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tapp.reloadAfterSave(data, params, form, element);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//If validation fails in recordPreSaveEvent, form should submit again\n\t\t\t\t\t\t\tform.removeData('submit');\n\t\t\t\t\t\t\t$.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tform.find('.js-full-editlink').on('click', (e) => {\n\t\t\t\t\tconst form = $(e.currentTarget).closest('form');\n\t\t\t\t\tconst editViewUrl = $(e.currentTarget).data('url');\n\t\t\t\t\tgoToFullFormCallBack(form);\n\t\t\t\t\tthis.goToFullForm(form, editViewUrl);\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Function to navigate from quick create to edit iew full form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t */\n\t\t\tgoToFullForm(form) {\n\t\t\t\tform.find('input[name=\"action\"]').remove();\n\t\t\t\tform.append('<input type=\"hidden\" name=\"view\" value=\"Edit\" />');\n\t\t\t\t$.each(form.find('[data-validation-engine]'), function (key, data) {\n\t\t\t\t\t$(data).removeAttr('data-validation-engine');\n\t\t\t\t});\n\t\t\t\tform.addClass('not_validation');\n\t\t\t\tform.trigger('submit');\n\t\t\t},\n\t\t\t/**\n\t\t\t * Save quick create form\n\t\t\t *\n\t\t\t * @param   {object}  form  jQuery\n\t\t\t *\n\t\t\t * @return  {Promise}        aDeferred\n\t\t\t */\n\t\t\tsave(form) {\n\t\t\t\tconst aDeferred = $.Deferred();\n\t\t\t\tform.serializeFormData();\n\t\t\t\tlet formData = new FormData(form[0]);\n\t\t\t\tAppConnector.request({\n\t\t\t\t\turl: 'index.php',\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdata: formData,\n\t\t\t\t\tprocessData: false,\n\t\t\t\t\tcontentType: false\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t\t\t});\n\t\t\t\treturn aDeferred.promise();\n\t\t\t}\n\t\t},\n\t\tScrollbar: {\n\t\t\tactive: true,\n\t\t\tdefaults: {\n\t\t\t\tscrollbars: {\n\t\t\t\t\tautoHide: 'leave'\n\t\t\t\t}\n\t\t\t},\n\t\t\tpage: {\n\t\t\t\tinstance: {},\n\t\t\t\telement: null\n\t\t\t},\n\t\t\tinitPage() {\n\t\t\t\tlet scrollbarContainer = $('.mainBody');\n\t\t\t\tif (!scrollbarContainer.length) {\n\t\t\t\t\tscrollbarContainer = $('#page');\n\t\t\t\t}\n\t\t\t\tif (!scrollbarContainer.length) {\n\t\t\t\t\tscrollbarContainer = $('body');\n\t\t\t\t}\n\t\t\t\tif (this.active) {\n\t\t\t\t\tthis.page.instance = this.y(scrollbarContainer);\n\t\t\t\t\tthis.page.element = $(this.page.instance.getElements().viewport);\n\t\t\t\t}\n\t\t\t},\n\t\t\txy(element, options = {}) {\n\t\t\t\treturn element.overlayScrollbars(options).overlayScrollbars();\n\t\t\t},\n\t\t\ty(element, options) {\n\t\t\t\tconst yOptions = {\n\t\t\t\t\toverflowBehavior: {\n\t\t\t\t\t\tx: 'h'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst mergedOptions = Object.assign(this.defaults, options, yOptions);\n\t\t\t\treturn element.overlayScrollbars(mergedOptions).overlayScrollbars();\n\t\t\t}\n\t\t},\n\t\tDropFile: class {\n\t\t\tconstructor(container, params) {\n\t\t\t\tthis.container = container;\n\t\t\t\tthis.init(params);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Register function\n\t\t\t * @param {jQuery} container\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tstatic register(container, params = {}) {\n\t\t\t\tif (typeof container === 'undefined') {\n\t\t\t\t\tcontainer = $('body');\n\t\t\t\t}\n\t\t\t\tif (container.hasClass('js-drop-container') && !container.prop('disabled')) {\n\t\t\t\t\treturn new App.Components.DropFile(container, params);\n\t\t\t\t}\n\t\t\t\tconst instances = [];\n\t\t\t\tcontainer.find('.js-drop-container').each((_, e) => {\n\t\t\t\t\tinstances.push(new App.Components.DropFile($(e), params));\n\t\t\t\t});\n\t\t\t\treturn instances;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Initiation\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tinit(params) {\n\t\t\t\tlet css = {\n\t\t\t\t\tborder: this.container.css('border'),\n\t\t\t\t\topacity: 'unset'\n\t\t\t\t};\n\t\t\t\tthis.container.bind('dragenter dragover', (e) => {\n\t\t\t\t\t$(e.currentTarget).css({\n\t\t\t\t\t\tborder: '2px dashed #4aa1f3',\n\t\t\t\t\t\topacity: 0.4\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t\t\tthis.container.bind('dragleave', (e) => {\n\t\t\t\t\t$(e.currentTarget).css(css);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t\t\tthis.container.bind('drop', (e) => {\n\t\t\t\t\tlet element = $(e.currentTarget).css(css);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst files = e.originalEvent.dataTransfer.files;\n\t\t\t\t\tif (files.length < 1) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tparams.callback =\n\t\t\t\t\t\tparams.callback ||\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet formData = new FormData();\n\t\t\t\t\t\t\tfor (let file of files) {\n\t\t\t\t\t\t\t\tformData.append(element.data('field-name'), file, file.name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tformData.append('action', 'SaveAjax');\n\t\t\t\t\t\t\tformData.append('record', element.data('id'));\n\t\t\t\t\t\t\tformData.append('module', element.data('module'));\n\t\t\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\tdata: formData,\n\t\t\t\t\t\t\t\tprocessData: false,\n\t\t\t\t\t\t\t\tcontentType: false\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_SAVE_NOTIFY_SUCCESS'), type: 'success' });\n\t\t\t\t\t\t\t\t\t\tif (element.closest('.js-detail-widget').length) {\n\t\t\t\t\t\t\t\t\t\t\tVtiger_Detail_Js.getInstance().getFiltersDataAndLoad(e);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_UNEXPECTED_ERROR'), type: 'error' });\n\t\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_ERROR'), type: 'error' });\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\tapp.showConfirmModal({\n\t\t\t\t\t\ttext: app.vtranslate('JS_CHANGE_CONFIRMATION'),\n\t\t\t\t\t\tconfirmedCallback: () => {\n\t\t\t\t\t\t\tparams.callback(e, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tNotify: {\n\t\t/**\n\t\t * Check if notifications are allowed\n\t\t */\n\t\tisDesktopPermitted: function () {\n\t\t\treturn typeof Notification !== 'undefined' && Notification.permission === 'granted';\n\t\t},\n\t\t/**\n\t\t * Show desktop notification\n\t\t * @param {Object} params\n\t\t */\n\t\tdesktop: function (params) {\n\t\t\tlet type = 'error';\n\t\t\tparams.modules = new Map([\n\t\t\t\t...PNotify.defaultModules,\n\t\t\t\t[\n\t\t\t\t\tPNotifyDesktop,\n\t\t\t\t\t{\n\t\t\t\t\t\tfallback: false,\n\t\t\t\t\t\ticon: params.icon\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]);\n\t\t\tif (typeof params.type !== 'undefined') {\n\t\t\t\ttype = params.type;\n\t\t\t\tif (params.type != 'error') {\n\t\t\t\t\tparams.hide = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn PNotify[type](params);\n\t\t}\n\t},\n\tClipboard: class Clipboard {\n\t\tconstructor(container) {\n\t\t\tthis.text = null;\n\t\t\tthis.oClipboard = null;\n\t\t\tthis.container = container;\n\t\t}\n\t\t/**\n\t\t * Register\n\t\t * @param {jQuery} params\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (typeof container === 'undefined') {\n\t\t\t\tcontainer = $('body');\n\t\t\t}\n\t\t\tcontainer.on('dblclick', '.js-copy-clipboard', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tnew Clipboard($(e.currentTarget)).load().then((instance) => {\n\t\t\t\t\tinstance.createClipboard();\n\t\t\t\t\tinstance.copy();\n\t\t\t\t\tinstance.destroy();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tload() {\n\t\t\tconst aDeferred = $.Deferred();\n\t\t\tlet url = this.container.data('url');\n\t\t\tif (url) {\n\t\t\t\tthis.getTextFromUrl(url).then((response) => {\n\t\t\t\t\tthis.text = response.result.text;\n\t\t\t\t\taDeferred.resolve(this);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taDeferred.resolve(this);\n\t\t\t}\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t\t/**\n\t\t * Create ClipboardJS\n\t\t */\n\t\tcreateClipboard() {\n\t\t\tlet id = this.container.attr('id');\n\t\t\tthis.oClipboard = new ClipboardJS(`#${id}`, {\n\t\t\t\ttext: (_) => {\n\t\t\t\t\treturn this.text;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Get text to Clipboard from URL\n\t\t */\n\t\tgetTextFromUrl(url) {\n\t\t\tconst aDeferred = $.Deferred();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\tAppConnector.request(url)\n\t\t\t\t.done((response) => {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\taDeferred.resolve(response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taDeferred.reject(response);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail((_) => {\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\taDeferred.reject(_);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t\t/**\n\t\t * Set text to Clipboard\n\t\t */\n\t\tcopy() {\n\t\t\tthis.container.trigger('click');\n\t\t\tapp.showNotify({\n\t\t\t\ttext: app.vtranslate('JS_NOTIFY_COPY_TEXT'),\n\t\t\t\ttype: 'success'\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Destroy ClipboardJS object\n\t\t */\n\t\tdestroy() {\n\t\t\tthis.oClipboard.destroy();\n\t\t}\n\t}\n});\n\nvar app = (window.app = {\n\t/**\n\t * variable stores client side language strings\n\t */\n\tlanguageString: [],\n\tbreakpoints: {\n\t\txs: 0,\n\t\tsm: 576,\n\t\tmd: 768,\n\t\tlg: 992,\n\t\txl: 1200,\n\t\txxl: 1300,\n\t\txxxl: 1700\n\t},\n\tcacheParams: [],\n\tmodalEvents: [],\n\tmousePosition: { x: 0, y: 0 },\n\tchildFrame: false,\n\ttouchDevice: false,\n\tevent: new (function () {\n\t\tthis.el = $({});\n\t\tthis.trigger = function () {\n\t\t\tthis.el.trigger(arguments[0], Array.prototype.slice.call(arguments, 1));\n\t\t};\n\t\tthis.on = function () {\n\t\t\tthis.el.on.apply(this.el, arguments);\n\t\t};\n\t\tthis.one = function () {\n\t\t\tthis.el.one.apply(this.el, arguments);\n\t\t};\n\t\tthis.off = function () {\n\t\t\tthis.el.off.apply(this.el, arguments);\n\t\t};\n\t})(),\n\t/**\n\t * Function to get the module name. This function will get the value from element which has id module\n\t * @return : string - module name\n\t */\n\tgetModuleName: function () {\n\t\treturn this.getMainParams('module');\n\t},\n\t/**\n\t * Function to get the module name. This function will get the value from element which has id module\n\t * @return : string - module name\n\t */\n\tgetParentModuleName: function () {\n\t\treturn this.getMainParams('parent');\n\t},\n\t/**\n\t * Function returns the current view name\n\t */\n\tgetViewName: function () {\n\t\treturn this.getMainParams('view');\n\t},\n\t/**\n\t * Function returns the record id\n\t */\n\tgetRecordId: function () {\n\t\tlet recordId;\n\t\tif (\n\t\t\t$.inArray(this.getViewName(), ['Edit', 'PreferenceEdit', 'Detail', 'PreferenceDetail', 'DetailPreview']) !== -1\n\t\t) {\n\t\t\trecordId = this.getMainParams('recordId');\n\t\t}\n\t\treturn recordId;\n\t},\n\t/**\n\t * Function which will give you all details of the selected record\n\t * @params {object} params - an object of values like {'record' : recordId, 'module' : searchModule, 'fieldType' : 'email'}\n\t */\n\tgetRecordDetails: function (params) {\n\t\tlet aDeferred = $.Deferred();\n\t\tif (app.getParentModuleName() === 'Settings') {\n\t\t\tparams.parent = 'Settings';\n\t\t}\n\t\tAppConnector.request(Object.assign(params, { action: 'GetData' }))\n\t\t\t.done(function (data) {\n\t\t\t\tif (data.success) {\n\t\t\t\t\taDeferred.resolve(data);\n\t\t\t\t} else {\n\t\t\t\t\taDeferred.reject(data.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.fail(function (error) {\n\t\t\t\taDeferred.reject();\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\t/**\n\t * Function to get language\n\t */\n\tgetLanguage: function () {\n\t\treturn $('body').data('language');\n\t},\n\t/**\n\t * Function to get page title\n\t */\n\tgetPageTitle: function () {\n\t\treturn document.title;\n\t},\n\t/**\n\t * Function gets current window parent\n\t * @returns {object}\n\t */\n\tgetWindowParent() {\n\t\tif (\n\t\t\ttypeof window.frames[0] !== 'undefined' &&\n\t\t\ttypeof window.frames[0].app !== 'undefined' &&\n\t\t\twindow.frames[0].app.childFrame\n\t\t) {\n\t\t\treturn window.frames[0];\n\t\t} else {\n\t\t\treturn window;\n\t\t}\n\t},\n\t/**\n\t * Check if current window is window top\n\t */\n\tisWindowTop() {\n\t\treturn window.top === window.self;\n\t},\n\t/**\n\t * Function gets current window parent\n\t * @returns {boolean}\n\t */\n\tisTouchDevice() {\n\t\tlet supportsTouch = false;\n\t\tif ('ontouchstart' in window) {\n\t\t\t// iOS & android\n\t\t\tsupportsTouch = true;\n\t\t} else if (window.navigator.msPointerEnabled) {\n\t\t\t// Win8\n\t\t\tsupportsTouch = true;\n\t\t} else if ('ontouchstart' in document.documentElement) {\n\t\t\t//additional check\n\t\t\tsupportsTouch = true;\n\t\t}\n\t\tif (supportsTouch) {\n\t\t\t//remove browser scrollbar visibility (doesn't work in firefox, edge and ie)\n\t\t\t$(\"<style type='text/css'> ::-webkit-scrollbar { display: none;} </style>\").appendTo('head');\n\t\t}\n\t\treturn supportsTouch;\n\t},\n\t/**\n\t * Check if string is json\n\t * @param {string} str\n\t * @returns {boolean}\n\t */\n\tisJsonString(str) {\n\t\ttry {\n\t\t\tJSON.parse(str);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\t/**\n\t * Function to set page title\n\t */\n\tsetPageTitle: function (title) {\n\t\tdocument.title = title;\n\t},\n\t/**\n\t * Function to get the contents container\n\t * @returns jQuery object\n\t */\n\tgetContentsContainer: function () {\n\t\treturn $('.bodyContents');\n\t},\n\thidePopover: function (element) {\n\t\tif (typeof element === 'undefined') {\n\t\t\telement = $('body .js-popover-tooltip');\n\t\t}\n\t\telement.popover('hide');\n\t},\n\thidePopoversAfterClick(popoverParent) {\n\t\tpopoverParent.on('mousedown', (e) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tpopoverParent.popover('hide');\n\t\t\t}, 100);\n\t\t});\n\t},\n\tregisterPopoverManualTrigger(element, manualTriggerDelay) {\n\t\tconst hideDelay = 500;\n\t\telement.on('mouseleave', (e) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet currentPopover = this.getBindedPopover(element);\n\t\t\t\tif (\n\t\t\t\t\t!$(':hover').filter(currentPopover).length &&\n\t\t\t\t\t!currentPopover.find('.js-popover-tooltip--record[aria-describedby]').length\n\t\t\t\t) {\n\t\t\t\t\tcurrentPopover.popover('hide');\n\t\t\t\t}\n\t\t\t}, hideDelay);\n\t\t});\n\n\t\telement.on('mouseenter', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (element.is(':hover')) {\n\t\t\t\t\telement.popover('show');\n\t\t\t\t\tlet currentPopover = this.getBindedPopover(element);\n\t\t\t\t\tcurrentPopover.on('mouseleave', () => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!$(':hover').filter(currentPopover).length &&\n\t\t\t\t\t\t\t\t!currentPopover.find('.js-popover-tooltip--record[aria-describedby]').length\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcurrentPopover.popover('hide'); //close current popover\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!$(':hover').filter($('.popover')).length) {\n\t\t\t\t\t\t\t\t$('.popover').popover('hide'); //close all popovers\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, hideDelay);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, manualTriggerDelay);\n\t\t});\n\n\t\tapp.hidePopoversAfterClick(element);\n\t},\n\tisEllipsisActive(element) {\n\t\tlet clone = element\n\t\t\t.clone()\n\t\t\t.addClass('u-text-ellipsis--not-active')\n\t\t\t.css(element.css(['font-size', 'font-weight', 'font-family']))\n\t\t\t.appendTo('body');\n\t\tclone.find('.u-text-ellipsis').removeClass('u-text-ellipsis').addClass('u-text-ellipsis--not-active');\n\t\tif (clone.width() - 1 > element.width()) {\n\t\t\tclone.remove();\n\t\t\treturn true;\n\t\t}\n\t\tclone.remove();\n\t\treturn false;\n\t},\n\tshowPopoverElementView: function (selectElement = $('.js-popover-tooltip'), params = {}) {\n\t\tlet defaultParams = {\n\t\t\ttrigger: 'manual',\n\t\t\tmanualTriggerDelay: 500,\n\t\t\tplacement: 'auto',\n\t\t\thtml: true,\n\t\t\ttemplate:\n\t\t\t\t'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>',\n\t\t\tcontainer: 'body',\n\t\t\tboundary: 'viewport',\n\t\t\tdelay: { show: 300, hide: 100 }\n\t\t};\n\t\tselectElement.each(function (index, domElement) {\n\t\t\tlet element = $(domElement);\n\t\t\tlet elementParams = $.extend(true, defaultParams, params, element.data());\n\t\t\tif (element.data('class')) {\n\t\t\t\telementParams.template =\n\t\t\t\t\t'<div class=\"popover ' +\n\t\t\t\t\telement.data('class') +\n\t\t\t\t\t'\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>';\n\t\t\t}\n\t\t\tif (element.hasClass('delay0')) {\n\t\t\t\telementParams.delay = { show: 0, hide: 0 };\n\t\t\t}\n\t\t\telement.popover(elementParams);\n\t\t\tif (elementParams.trigger === 'manual' || typeof elementParams.trigger === 'undefined') {\n\t\t\t\tapp.registerPopoverManualTrigger(element, elementParams.manualTriggerDelay);\n\t\t\t}\n\t\t\tif (elementParams.callbackShown) {\n\t\t\t\telement.on('shown.bs.popover', function (e) {\n\t\t\t\t\telementParams.callbackShown(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\telement.addClass('popover-triggered');\n\t\t});\n\t\treturn selectElement;\n\t},\n\tregisterPopoverEllipsis({\n\t\telement = $('.js-popover-tooltip--ellipsis'),\n\t\tparams = { trigger: 'hover focus' },\n\t\tcontainer = $(window)\n\t} = {}) {\n\t\tconst self = this;\n\t\tparams = {\n\t\t\tcallbackShown: () => {\n\t\t\t\tself.setPopoverPosition(element, container);\n\t\t\t},\n\t\t\ttrigger: 'manual',\n\t\t\tplacement: 'right',\n\t\t\ttemplate:\n\t\t\t\t'<div class=\"popover js-popover--before-positioned\" role=\"tooltip\"><div class=\"popover-body\"></div></div>'\n\t\t};\n\t\tlet popoverText = element.find('.js-popover-text').length ? element.find('.js-popover-text') : element;\n\t\tif (!app.isEllipsisActive(popoverText)) {\n\t\t\telement.addClass('popover-triggered');\n\t\t\treturn;\n\t\t}\n\t\tapp.showPopoverElementView(element, params);\n\t},\n\tregisterPopoverEllipsisIcon(\n\t\tselectElement = $('.js-popover-tooltip--ellipsis-icon'),\n\t\tparams = { trigger: 'hover focus' }\n\t) {\n\t\tselectElement.each(function (index, domElement) {\n\t\t\tlet element = $(domElement);\n\t\t\tlet popoverText = element.find('.js-popover-text').length ? element.find('.js-popover-text') : element;\n\t\t\tif (!app.isEllipsisActive(popoverText)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet iconElement = element.find('.js-popover-icon');\n\t\t\tif (iconElement.length) {\n\t\t\t\telement.find('.js-popover-icon').removeClass('d-none');\n\t\t\t\tparams.selector = '.js-popover-icon';\n\t\t\t}\n\t\t\tapp.showPopoverElementView(element, params);\n\t\t});\n\t},\n\t/**\n\t * Register popover record\n\t * @param {jQuery} selectElement\n\t * @param {object} customParams\n\t */\n\tregisterPopoverRecord: function (\n\t\tselectElement = $('.js-popover-tooltip--record'),\n\t\tcustomParams = {},\n\t\tcontainer = $(document)\n\t) {\n\t\tconst self = this;\n\t\tapp.showPopoverElementView(selectElement, {\n\t\t\ttemplate:\n\t\t\t\t'<div class=\"popover c-popover--link js-popover--before-positioned\" role=\"tooltip\"><div class=\"popover-body\"></div></div>',\n\t\t\tcontent: '<div class=\"d-none\"></div>',\n\t\t\tmanualTriggerDelay: app.getMainParams('recordPopoverDelay'),\n\t\t\tplacement: 'right',\n\t\t\tcallbackShown: () => {\n\t\t\t\tif (\n\t\t\t\t\t!selectElement.attr('href') ||\n\t\t\t\t\tselectElement.closest('.ui-sortable-handle').hasClass('ui-sortable-helper')\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlet link = new URL(selectElement.eq(0).attr('href'), window.location.origin);\n\t\t\t\tif (!link.searchParams.get('record') || !link.searchParams.get('view')) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tlet url = link.href;\n\t\t\t\turl = url.replace('view=', 'xview=') + '&view=RecordPopover';\n\t\t\t\tlet currentPopover = self.getBindedPopover(selectElement);\n\t\t\t\tlet popoverBody = currentPopover.find('.popover-body');\n\t\t\t\tpopoverBody.progressIndicator({});\n\t\t\t\tlet appendPopoverData = (data) => {\n\t\t\t\t\tpopoverBody.progressIndicator({ mode: 'hide' }).html(data);\n\t\t\t\t\tif (typeof customParams.callback === 'function') {\n\t\t\t\t\t\tcustomParams.callback(popoverBody);\n\t\t\t\t\t}\n\t\t\t\t\tself.setPopoverPosition(selectElement, container);\n\t\t\t\t};\n\t\t\t\tlet cacheData = window.popoverCache[url];\n\t\t\t\tif (typeof cacheData !== 'undefined') {\n\t\t\t\t\tappendPopoverData(cacheData);\n\t\t\t\t} else {\n\t\t\t\t\tAppConnector.request(url).done((data) => {\n\t\t\t\t\t\twindow.popoverCache[url] = data;\n\t\t\t\t\t\tappendPopoverData(data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Update popover record position (overwrite bootstrap positioning, failing on huge elements)\n\t * @param {jQuery} popover\n\t * @param {number} offsetLeft\n\t */\n\tsetPopoverPosition(popoverElement, container = $(window)) {\n\t\tlet popover = this.getBindedPopover(popoverElement);\n\t\tif (!popover.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst iframeOffset = this.computePopoverIframeOffset(popoverElement);\n\t\tlet windowHeight = $(window).height(),\n\t\t\twindowWidth = $(window).width(),\n\t\t\tpopoverPadding = 10,\n\t\t\tpopoverBody = popover.find('.popover-body'),\n\t\t\tpopoverHeight = popoverBody.height(),\n\t\t\tpopoverWidth = popoverBody.width(),\n\t\t\toffsetTop = app.mousePosition.y + iframeOffset.top,\n\t\t\toffsetLeft = app.mousePosition.x + iframeOffset.left;\n\t\tif (popoverHeight + offsetTop + popoverPadding > windowHeight) {\n\t\t\toffsetTop = offsetTop - popoverHeight - popoverPadding;\n\t\t}\n\t\tif (popoverWidth + offsetLeft + popoverPadding > windowWidth) {\n\t\t\toffsetLeft = windowWidth - popoverWidth;\n\t\t}\n\t\tpopover.css({\n\t\t\ttransform: `translate3d(${offsetLeft}px, ${offsetTop}px, 0)`\n\t\t});\n\t\tpopover.removeClass('js-popover--before-positioned');\n\t\tpopoverElement.one('hide.bs.popover', () => {\n\t\t\tpopover.addClass('js-popover--before-positioned');\n\t\t});\n\t},\n\t/**\n\t * Compute popover iframe offset\n\t *\n\t * @param   {Object}  popoverElement  jquery\n\t *\n\t * @return  {Object}                  offset top and left\n\t */\n\tcomputePopoverIframeOffset(popoverElement) {\n\t\tlet iframeOffsetTop = 0;\n\t\tlet iframeOffsetLeft = 0;\n\t\tif (!$(document).find(popoverElement).length) {\n\t\t\tlet iframe = $(document).find('iframe');\n\t\t\tconst iframeOffset = iframe.offset();\n\t\t\tiframeOffsetTop += iframeOffset.top;\n\t\t\tiframeOffsetLeft += iframeOffset.left;\n\t\t\tif (!iframe.contents().find(popoverElement).length) {\n\t\t\t\tlet iframe2 = iframe.contents().find('iframe');\n\t\t\t\tconst iframeOffset2 = iframe2.offset();\n\t\t\t\tiframeOffsetTop += iframeOffset2.top;\n\t\t\t\tiframeOffsetLeft += iframeOffset2.left;\n\t\t\t}\n\t\t}\n\t\treturn { top: iframeOffsetTop, left: iframeOffsetLeft };\n\t},\n\t/**\n\t * Get binded popover\n\t * @param {jQuery} element\n\t * @returns {Mixed|jQuery|HTMLElement}\n\t */\n\tgetBindedPopover(element) {\n\t\treturn $(`#${element.attr('aria-describedby')}`);\n\t},\n\t/**\n\t * Function to check the maximum selection size of multiselect and update the results\n\t * @params <object> multiSelectElement\n\t * @params <object> select2 params\n\t */\n\tregisterChangeEventForMultiSelect: function (selectElement, params) {\n\t\tif (typeof selectElement === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tvar instance = selectElement.data('select2');\n\t\tvar limit = params.maximumSelectionLength;\n\t\tselectElement.on('change', function (e) {\n\t\t\tvar data = instance.data();\n\t\t\tif ($.isArray(data) && data.length >= limit) {\n\t\t\t\tinstance.updateResults();\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Function to get data of the child elements in serialized format\n\t * @params <object> parentElement - element in which the data should be serialized. Can be selector , domelement or jquery object\n\t * @params <String> returnFormat - optional which will indicate which format return value should be valid values \"object\" and \"string\"\n\t * @return <object> - encoded string or value map\n\t */\n\tgetSerializedData: function (parentElement, returnFormat) {\n\t\tif (typeof returnFormat === 'undefined') {\n\t\t\treturnFormat = 'string';\n\t\t}\n\n\t\tparentElement = $(parentElement);\n\n\t\tvar encodedString = parentElement.children().serialize();\n\t\tif (returnFormat == 'string') {\n\t\t\treturn encodedString;\n\t\t}\n\t\tvar keyValueMap = {};\n\t\tvar valueList = encodedString.split('&');\n\n\t\tfor (var index in valueList) {\n\t\t\tvar keyValueString = valueList[index];\n\t\t\tvar keyValueArr = keyValueString.split('=');\n\t\t\tvar nameOfElement = keyValueArr[0];\n\t\t\tvar valueOfElement = keyValueArr[1];\n\t\t\tkeyValueMap[nameOfElement] = decodeURIComponent(valueOfElement);\n\t\t}\n\t\treturn keyValueMap;\n\t},\n\tshowModalData(data, container, paramsObject, cb, url, sendByAjaxCb) {\n\t\tconst thisInstance = this;\n\t\tlet params = {\n\t\t\tshow: true\n\t\t};\n\t\tif (!app.getMainParams('backgroundClosingModal')) {\n\t\t\tparams.backdrop = 'static';\n\t\t\tparams.keyboard = false;\n\t\t}\n\t\tif (typeof paramsObject === 'object') {\n\t\t\tcontainer.css(paramsObject);\n\t\t\tparams = $.extend(params, paramsObject);\n\t\t}\n\t\tcontainer.html(data);\n\t\tif (container.find('.modal').hasClass('static')) {\n\t\t\tparams.backdrop = 'static';\n\t\t}\n\t\t// In a modal dialog elements can be specified which can receive focus even though they are not descendants of the modal dialog.\n\t\t$.fn.modal.Constructor.prototype.enforceFocus = function (e) {\n\t\t\t$(document)\n\t\t\t\t.off('focusin.bs.modal') // guard against infinite focus loop\n\t\t\t\t.on(\n\t\t\t\t\t'focusin.bs.modal',\n\t\t\t\t\t$.proxy(function (e) {\n\t\t\t\t\t\tif ($(e.target).hasClass('select2-search__field')) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this)\n\t\t\t\t);\n\t\t};\n\t\tconst modalContainer = container.find('.modal:first');\n\t\tmodalContainer.one('shown.bs.modal', function () {\n\t\t\tthisInstance.registerDataTables(modalContainer.find('.js-modal-data-table'));\n\t\t\tcb(modalContainer);\n\t\t\tApp.Fields.Picklist.changeSelectElementView(modalContainer);\n\t\t\tApp.Fields.Date.register(modalContainer);\n\t\t\tApp.Fields.Text.Editor.register(modalContainer.find('.js-editor'), {\n\t\t\t\theight: '5em',\n\t\t\t\ttoolbar: 'Min'\n\t\t\t});\n\t\t\tapp.registesterScrollbar(modalContainer);\n\t\t\tapp.registerIframeEvents(modalContainer);\n\t\t\tmodalContainer.find('.modal-dialog').draggable({\n\t\t\t\thandle: '.modal-title'\n\t\t\t});\n\t\t\tmodalContainer.find('.modal-title').css('cursor', 'move');\n\t\t});\n\t\t$('body').append(container);\n\t\tmodalContainer.modal(params);\n\t\tapp.registerFormsEvents(modalContainer);\n\t\tthisInstance.registerModalEvents(modalContainer, sendByAjaxCb);\n\t},\n\tshowModalWindow: function (data, url, cb, paramsObject = {}) {\n\t\tif (!app.isCurrentWindowTarget('app.showModalWindow', arguments)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst thisInstance = this;\n\t\tlet sendByAjaxCb, modalId;\n\t\tmodalId = 'modal_' + Math.random().toString(36).substr(2, 9);\n\t\t//null is also an object\n\t\tif (typeof data === 'object' && data != null && !(data instanceof $)) {\n\t\t\tif (data.id != undefined) {\n\t\t\t\tmodalId = data.id;\n\t\t\t}\n\t\t\tparamsObject = data.css;\n\t\t\tcb = data.cb;\n\t\t\turl = data.url;\n\t\t\tif (data.sendByAjaxCb !== 'undefined') {\n\t\t\t\tsendByAjaxCb = data.sendByAjaxCb;\n\t\t\t}\n\t\t\tdata = data.data;\n\t\t} else if (typeof data === 'string') {\n\t\t\tlet modalData = $(data).last();\n\t\t\tif (modalData.data('modalid')) {\n\t\t\t\tmodalId = modalData.data('modalid');\n\t\t\t}\n\t\t}\n\t\tif (typeof url === 'function') {\n\t\t\tif (typeof cb === 'object') {\n\t\t\t\tparamsObject = cb;\n\t\t\t}\n\t\t\tcb = url;\n\t\t\turl = false;\n\t\t} else if (typeof url === 'object') {\n\t\t\tcb = function () {};\n\t\t\tparamsObject = url;\n\t\t\turl = false;\n\t\t}\n\t\tif (typeof cb !== 'function') {\n\t\t\tcb = function () {};\n\t\t}\n\t\tif (typeof sendByAjaxCb !== 'function') {\n\t\t\tsendByAjaxCb = function () {};\n\t\t}\n\t\tif (paramsObject !== undefined && paramsObject.modalId !== undefined) {\n\t\t\tmodalId = paramsObject.modalId;\n\t\t}\n\t\t// prevent duplicate hash generation\n\t\tlet container = $('#' + modalId);\n\t\tif (container.length) {\n\t\t\tcontainer.remove();\n\t\t}\n\t\tcontainer = $('<div></div>');\n\t\tcontainer.attr('id', modalId).addClass('modalContainer js-modal-container');\n\t\tcontainer.one('hidden.bs.modal', function () {\n\t\t\tcontainer.remove();\n\t\t\tlet backdrop = $('.modal-backdrop');\n\t\t\tif (!$('.modal.show').length) {\n\t\t\t\tbackdrop.remove();\n\t\t\t}\n\t\t\tif (backdrop.length > 0) {\n\t\t\t\t$('body').addClass('modal-open');\n\t\t\t}\n\t\t});\n\t\tWindow.lastModalId = modalId;\n\t\tif (data) {\n\t\t\tthisInstance.showModalData(data, container, paramsObject, cb, url, sendByAjaxCb);\n\t\t} else {\n\t\t\t$.get(url).done(function (response) {\n\t\t\t\tthisInstance.showModalData(response, container, paramsObject, cb, url, sendByAjaxCb);\n\t\t\t});\n\t\t}\n\t\treturn container;\n\t},\n\t/**\n\t * Check if current window is target for a modal and trigger in correct window if not\n\t *\n\t * @param   {String}  sourceFunction  source function name in dot prop notation object\n\t * @param   {Array}  args            source function arguments\n\t *\n\t * @return  {Boolean}                  isCurrentWindowTarget\n\t */\n\tisCurrentWindowTarget(sourceFunction, args) {\n\t\tlet isCurrentWindowTarget = true;\n\t\tif (CONFIG.modalTarget === 'parentIframe') {\n\t\t\tthis.childFrame = true;\n\t\t\tsourceFunction = sourceFunction.split('.');\n\t\t\tsourceFunction.unshift('parent');\n\t\t\tsourceFunction = sourceFunction.reduce((o, i) => o[i], window);\n\t\t\tsourceFunction.apply(window.parent.app, args);\n\t\t\tisCurrentWindowTarget = false;\n\t\t}\n\t\treturn isCurrentWindowTarget;\n\t},\n\t/**\n\t * Function which you can use to hide the modal\n\t * This api assumes that we are using block ui plugin and uses unblock api to unblock it\n\t */\n\thideModalWindow: function (callback, id) {\n\t\tif (!app.isCurrentWindowTarget('app.hideModalWindow', arguments)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet container;\n\t\tif (callback && typeof callback === 'object') {\n\t\t\tcontainer = callback;\n\t\t} else if (id == undefined) {\n\t\t\tcontainer = $('.modalContainer');\n\t\t} else {\n\t\t\tcontainer = $('#' + id);\n\t\t}\n\t\tif (container.length <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof callback !== 'function') {\n\t\t\tcallback = function () {};\n\t\t}\n\t\tlet modalContainer = container.find('.modal');\n\t\tmodalContainer.modal('hide');\n\t\tlet backdrop = $('.modal-backdrop:last');\n\t\tif ($('.modalContainer').length == 0 && backdrop.length) {\n\t\t\tbackdrop.remove();\n\t\t}\n\t\tmodalContainer.one('hidden.bs.modal', callback);\n\t},\n\tregisterModalController: function (modalId, modalContainer, cb) {\n\t\tlet windowParent = this.childFrame ? window.parent : window;\n\t\tif (!modalId) {\n\t\t\tmodalId = Window.lastModalId;\n\t\t}\n\t\tif (!modalContainer) {\n\t\t\tmodalContainer = $('#' + modalId + ' .js-modal-data');\n\t\t}\n\t\tlet moduleName = modalContainer.data('module') || 'Base';\n\t\tlet modalClass = moduleName.replace(':', '_') + '_' + modalContainer.data('view') + '_JS';\n\t\tif (typeof windowParent[modalClass] === 'undefined') {\n\t\t\tmodalClass = 'Base_' + modalContainer.data('view') + '_JS';\n\t\t}\n\t\tif (typeof windowParent[modalClass] !== 'undefined') {\n\t\t\tlet instance = new windowParent[modalClass]();\n\t\t\tif (typeof cb === 'function') {\n\t\t\t\tcb(modalContainer, instance);\n\t\t\t}\n\t\t\tinstance.registerEvents(modalContainer);\n\t\t\tif (modalId && app.modalEvents[modalId]) {\n\t\t\t\tapp.modalEvents[modalId](modalContainer, instance);\n\t\t\t}\n\t\t}\n\t},\n\tregisterModalEvents: function (container, sendByAjaxCb) {\n\t\tlet form = container.find('form');\n\t\tlet validationForm = false;\n\t\tif (form.hasClass('validateForm') || form.hasClass('js-validate-form')) {\n\t\t\tform.validationEngine(app.validationEngineOptions);\n\t\t\tvalidationForm = true;\n\t\t}\n\t\tif (container.data('view') === 'QuickDetailModal') {\n\t\t\tthis.registerBlockAnimationEvent(container);\n\t\t}\n\t\tif (form.hasClass('sendByAjax') || form.hasClass('js-send-by-ajax')) {\n\t\t\tform.on('submit', function (e) {\n\t\t\t\tlet save = true;\n\t\t\t\te.preventDefault();\n\t\t\t\tif (validationForm && form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\tapp.formAlignmentAfterValidation(form);\n\t\t\t\t\tsave = false;\n\t\t\t\t}\n\t\t\t\tif (save) {\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t});\n\t\t\t\t\tlet formData = form.serializeFormData();\n\t\t\t\t\tAppConnector.request(formData)\n\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\tsendByAjaxCb(formData, responseData);\n\t\t\t\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (responseData.result.processStop) {\n\t\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tapp.hideModalWindow();\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_UNEXPECTED_ERROR'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tregisterFormsEvents: function (container) {\n\t\tlet forms = container.find('form.js-form-ajax-submit,form.js-form-single-save');\n\t\tforms.each((i, form) => {\n\t\t\tform = $(form);\n\t\t\tlet validationForm = false;\n\t\t\tif (form.hasClass('js-validate-form')) {\n\t\t\t\tform.validationEngine(app.validationEngineOptions);\n\t\t\t\tvalidationForm = true;\n\t\t\t}\n\t\t\tif (form.hasClass('js-form-single-save')) {\n\t\t\t\tform.find('select,input').on('change', function () {\n\t\t\t\t\tlet element = $(this);\n\t\t\t\t\tif (validationForm && element.validationEngine('validate')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t});\n\t\t\t\t\tlet formData = form.serializeFormData();\n\t\t\t\t\tlet name = element.attr('name').replace('[]', '');\n\t\t\t\t\tformData['updateField'] = name;\n\t\t\t\t\tformData['updateValue'] = formData[name];\n\t\t\t\t\tAppConnector.request(formData)\n\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\tapp.showNotify(responseData.result.notify);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error) {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttitle: app.vtranslate('JS_UNEXPECTED_ERROR'),\n\t\t\t\t\t\t\t\ttext: error,\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (form.hasClass('js-form-ajax-submit')) {\n\t\t\t\tform.on('submit', function (e) {\n\t\t\t\t\tlet save = true;\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (validationForm && form.data('jqv').InvalidFields.length > 0) {\n\t\t\t\t\t\tapp.formAlignmentAfterValidation(form);\n\t\t\t\t\t\tsave = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (save) {\n\t\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\t\tblockInfo: { enabled: true }\n\t\t\t\t\t\t});\n\t\t\t\t\t\tAppConnector.request(form.serializeFormData())\n\t\t\t\t\t\t\t.done(function (responseData) {\n\t\t\t\t\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\t\t\t\t\tif (responseData.result.notify) {\n\t\t\t\t\t\t\t\t\t\tVtiger_Helper_Js.showMessage(responseData.result.notify);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (responseData.result.closeModal) {\n\t\t\t\t\t\t\t\t\t\tapp.hideModalWindow(null, container.closest('.js-modal-container').attr('id'));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_UNEXPECTED_ERROR'),\n\t\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\tisHidden: function (element) {\n\t\tif (element.css('display') == 'none') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tisInvisible: function (element) {\n\t\tif (element.css('visibility') == 'hidden') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\t/**\n\t * Default validation eninge options\n\t */\n\tvalidationEngineOptions: {\n\t\t// Avoid scroll decision and let it scroll up page when form is too big\n\t\t// Reference: http://www.position-absolute.com/articles/jquery-form-validator-because-form-validation-is-a-mess/\n\t\tscroll: false,\n\t\tpromptPosition: 'topLeft',\n\t\t//to support validation for select2 select box\n\t\tprettySelect: true,\n\t\tusePrefix: 's2id_'\n\t},\n\tvalidationEngineOptionsForRecord: {\n\t\tscroll: false,\n\t\tpromptPosition: 'topLeft',\n\t\t//to support validation for select2 select box\n\t\tprettySelect: true,\n\t\tusePrefix: 's2id_',\n\t\tonBeforePromptType: function (field) {\n\t\t\tvar block = field.closest('.js-toggle-panel');\n\t\t\tif (block.find('.blockContent').is(':hidden')) {\n\t\t\t\tblock.find('.blockHeader').click();\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Default scroll options\n\t */\n\tscrollOptions: {\n\t\twheelSpeed: 0.1\n\t},\n\t/**\n\t * Function to push down the error message size when validation is invoked\n\t * @params : form Element\n\t */\n\tformAlignmentAfterValidation: function (form) {\n\t\t// to avoid hiding of error message under the fixed nav bar\n\t\tvar formError = form.find(\".formError:not('.greenPopup'):first\");\n\t\tif (formError.length > 0) {\n\t\t\tvar destination = formError.offset().top;\n\t\t\tvar resizedDestnation = destination - 105;\n\t\t\t$('html').animate(\n\t\t\t\t{\n\t\t\t\t\tscrollTop: resizedDestnation\n\t\t\t\t},\n\t\t\t\t'slow'\n\t\t\t);\n\t\t}\n\t},\n\tconvertToDatePickerFormat: function (dateFormat) {\n\t\tswitch (dateFormat) {\n\t\t\tcase 'yyyy-mm-dd':\n\t\t\t\treturn 'Y-m-d';\n\t\t\tcase 'mm-dd-yyyy':\n\t\t\t\treturn 'm-d-Y';\n\t\t\tcase 'dd-mm-yyyy':\n\t\t\t\treturn 'd-m-Y';\n\t\t\tcase 'yyyy.mm.dd':\n\t\t\t\treturn 'Y.m.d';\n\t\t\tcase 'mm.dd.yyyy':\n\t\t\t\treturn 'm.d.Y';\n\t\t\tcase 'dd.mm.yyyy':\n\t\t\t\treturn 'd.m.Y';\n\t\t\tcase 'yyyy/mm/dd':\n\t\t\t\treturn 'Y/m/d';\n\t\t\tcase 'mm/dd/yyyy':\n\t\t\t\treturn 'm/d/Y';\n\t\t\tcase 'dd/mm/yyyy':\n\t\t\t\treturn 'd/m/Y';\n\t\t}\n\t},\n\tconvertTojQueryDatePickerFormat: function (dateFormat) {\n\t\tlet i,\n\t\t\tdotMode = '-';\n\t\tif (dateFormat.indexOf('-') !== -1) {\n\t\t\tdotMode = '-';\n\t\t}\n\t\tif (dateFormat.indexOf('.') !== -1) {\n\t\t\tdotMode = '.';\n\t\t}\n\t\tif (dateFormat.indexOf('/') !== -1) {\n\t\t\tdotMode = '/';\n\t\t}\n\t\tlet splitDateFormat = dateFormat.split(dotMode);\n\t\tfor (i in splitDateFormat) {\n\t\t\tlet sectionDate = splitDateFormat[i];\n\t\t\tif (sectionDate.length === 4) {\n\t\t\t\tsplitDateFormat[i] = sectionDate.substring(0, 2);\n\t\t\t}\n\t\t}\n\t\treturn splitDateFormat.join(dotMode);\n\t},\n\t/*\n\t * Converts user formated date to database format yyyy-mm-dd\n\t */\n\tgetDateInDBInsertFormat: function (dateFormat, dateString) {\n\t\tvar i = 0;\n\t\tvar dotMode = '-';\n\t\tif (dateFormat.indexOf('-') !== -1) {\n\t\t\tdotMode = '-';\n\t\t} else if (dateFormat.indexOf('.') !== -1) {\n\t\t\tdotMode = '.';\n\t\t} else if (dateFormat.indexOf('/') !== -1) {\n\t\t\tdotMode = '/';\n\t\t}\n\t\tvar dateFormatParts = dateFormat.split(dotMode);\n\t\tvar day = '',\n\t\t\tmonth = '',\n\t\t\tyear = '';\n\t\tvar dateParts = dateString.split(dotMode);\n\t\tfor (i in dateFormatParts) {\n\t\t\tvar sectionDate = dateFormatParts[i];\n\t\t\tswitch (sectionDate) {\n\t\t\t\tcase 'dd':\n\t\t\t\t\tday = dateParts[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mm':\n\t\t\t\t\tmonth = dateParts[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'yyyy':\n\t\t\t\t\tyear = dateParts[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn year + '-' + month + '-' + day;\n\t},\n\n\tregisterBlockAnimationEvent: function (container = false) {\n\t\tlet detailViewContentHolder = $('div.details div.contents');\n\t\tlet blockHeader = detailViewContentHolder.find('.blockHeader');\n\t\tif (container !== false) {\n\t\t\tblockHeader = container.find('.blockHeader');\n\t\t}\n\t\tblockHeader.on('click', function (e) {\n\t\t\tconst target = $(e.target);\n\t\t\tif (\n\t\t\t\ttarget.is('input') ||\n\t\t\t\ttarget.is('button') ||\n\t\t\t\ttarget.parents().is('button') ||\n\t\t\t\ttarget.hasClass('js-stop-propagation') ||\n\t\t\t\ttarget.parents().hasClass('js-stop-propagation')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet currentTarget = $(this).find('.js-block-toggle').not('.d-none');\n\t\t\tlet blockId = currentTarget.data('id');\n\t\t\tlet closestBlock = currentTarget.closest('.js-toggle-panel');\n\t\t\tlet bodyContents = closestBlock.find('.blockContent');\n\t\t\tlet data = currentTarget.data();\n\t\t\tlet module = app.getModuleName();\n\t\t\tif (data.mode === 'show') {\n\t\t\t\tbodyContents.addClass('d-none');\n\t\t\t\tapp.cacheSet(module + '.' + blockId, 0);\n\t\t\t\tcurrentTarget.addClass('d-none');\n\t\t\t\tclosestBlock.find('[data-mode=\"hide\"]').removeClass('d-none');\n\t\t\t} else {\n\t\t\t\tbodyContents.removeClass('d-none');\n\t\t\t\tapp.cacheSet(module + '.' + blockId, 1);\n\t\t\t\tcurrentTarget.addClass('d-none');\n\t\t\t\tclosestBlock.find('[data-mode=\"show\"]').removeClass('d-none');\n\t\t\t}\n\t\t});\n\t},\n\n\tregisterEventForDateFields: function (parentElement) {\n\t\tif (typeof parentElement === 'undefined') {\n\t\t\tparentElement = $('body');\n\t\t}\n\n\t\tparentElement = $(parentElement);\n\t\tlet element;\n\t\tif (parentElement.hasClass('dateField')) {\n\t\t\telement = parentElement;\n\t\t} else {\n\t\t\telement = $('.dateField', parentElement);\n\t\t}\n\t\telement.datepicker({ autoclose: true }).on('changeDate', function (ev) {\n\t\t\tlet currentElement = $(ev.currentTarget),\n\t\t\t\tdateFormat = currentElement.data('dateFormat').toUpperCase(),\n\t\t\t\tdate = $.datepicker.formatDate(moment(ev.date).format(dateFormat), ev.date);\n\t\t\tcurrentElement.val(date);\n\t\t});\n\t\tApp.Fields.Utils.hideMobileKeyboard(element);\n\t},\n\tregisterEventForClockPicker: function (timeInputs = $('.clockPicker')) {\n\t\tif (!timeInputs.hasClass('clockPicker')) {\n\t\t\ttimeInputs = timeInputs.find('.clockPicker');\n\t\t}\n\t\tif (!timeInputs.length) {\n\t\t\treturn;\n\t\t}\n\t\tlet params = {\n\t\t\tplacement: 'bottom',\n\t\t\tautoclose: true,\n\t\t\tminutestep: 5\n\t\t};\n\n\t\t$('.js-clock__btn').on('click', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tlet tempElement = $(e.currentTarget).closest('.time').find('input.clockPicker');\n\t\t\tif (tempElement.attr('disabled') !== 'disabled' && tempElement.attr('readonly') !== 'readonly') {\n\t\t\t\ttempElement.clockpicker('show');\n\t\t\t}\n\t\t});\n\n\t\tlet formatTimeString = (timeInput) => {\n\t\t\tif (params.twelvehour) {\n\t\t\t\tlet meridiemTime = '';\n\t\t\t\tparams.afterDone = () => {\n\t\t\t\t\t//format time string after picking a value\n\t\t\t\t\tlet timeString = timeInput.val(),\n\t\t\t\t\t\ttimeStringFormatted = timeString.slice(0, timeString.length - 2) + ' ' + meridiemTime;\n\t\t\t\t\ttimeInput.val(timeStringFormatted);\n\t\t\t\t\tapp.event.trigger('Clockpicker.changed', timeInput);\n\t\t\t\t};\n\t\t\t\tparams.beforeHide = () => {\n\t\t\t\t\tmeridiemTime = $('.clockpicker-buttons-am-pm:visible').find('a:not(.text-white-50)').text();\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tparams.afterDone = () => {\n\t\t\t\t\tapp.event.trigger('Clockpicker.changed', timeInput);\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\ttimeInputs.each((i, e) => {\n\t\t\tlet timeInput = $(e);\n\t\t\tlet formatTime = timeInputs.data('format') || CONFIG.hourFormat;\n\t\t\tparams.twelvehour = parseInt(formatTime) === 12 ? true : false;\n\t\t\tformatTimeString(timeInput);\n\t\t\ttimeInput.clockpicker(params);\n\t\t});\n\t\tApp.Fields.Utils.hideMobileKeyboard(timeInputs);\n\t},\n\tregisterDataTables: function (table, options = {}) {\n\t\tif ($.fn.dataTable == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tif (table.length == 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$.extend($.fn.dataTable.defaults, {\n\t\t\tlanguage: {\n\t\t\t\tsLengthMenu: app.vtranslate('JS_S_LENGTH_MENU'),\n\t\t\t\tsZeroRecords: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\tsInfo: app.vtranslate('JS_S_INFO'),\n\t\t\t\tsInfoEmpty: app.vtranslate('JS_S_INFO_EMPTY'),\n\t\t\t\tsSearch: app.vtranslate('JS_SEARCH'),\n\t\t\t\tsEmptyTable: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\tsInfoFiltered: app.vtranslate('JS_S_INFO_FILTERED'),\n\t\t\t\tsLoadingRecords: app.vtranslate('JS_LOADING_OF_RECORDS'),\n\t\t\t\tsProcessing: app.vtranslate('JS_LOADING_OF_RECORDS'),\n\t\t\t\toPaginate: {\n\t\t\t\t\tsFirst: app.vtranslate('JS_S_FIRST'),\n\t\t\t\t\tsPrevious: app.vtranslate('JS_S_PREVIOUS'),\n\t\t\t\t\tsNext: app.vtranslate('JS_S_NEXT'),\n\t\t\t\t\tsLast: app.vtranslate('JS_S_LAST')\n\t\t\t\t},\n\t\t\t\toAria: {\n\t\t\t\t\tsSortAscending: app.vtranslate('JS_S_SORT_ASCENDING'),\n\t\t\t\t\tsSortDescending: app.vtranslate('JS_S_SORT_DESCENDING')\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (!Object.keys(options).length) {\n\t\t\toptions = Object.assign({ searching: true, ordering: true, paging: true, info: true }, table.data());\n\t\t}\n\t\treturn table.DataTable(options);\n\t},\n\t/**\n\t * Function to get the select2 element from the raw select element\n\t * @params: select element\n\t * @return : select2Element - corresponding select2 element\n\t */\n\tgetSelect2ElementFromSelect: function (selectElement) {\n\t\tvar selectId = selectElement.attr('id');\n\t\t//since select2 will add s2id_ to the id of select element\n\t\tvar select2EleId = 'select2-' + selectId + '-container';\n\t\treturn $('#' + select2EleId).closest('.select2-container');\n\t},\n\t/**\n\t * Function to set with of the element to parent width\n\t * @params : jQuery element for which the action to take place\n\t */\n\tsetInheritWidth: function (elements) {\n\t\t$(elements).each(function (index, element) {\n\t\t\tvar parentWidth = $(element).parent().width();\n\t\t\t$(element).width(parentWidth);\n\t\t});\n\t},\n\tshowNewScrollbar: function (element, options = { wheelPropagation: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\treturn new PerfectScrollbar(element[0], Object.assign(this.scrollOptions, options));\n\t},\n\tshowNewScrollbarTopBottomRight: function (element, options = {}) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(options, this.scrollOptions);\n\t\tlet scrollbarTopLeftInit = new PerfectScrollbar(element[0], options);\n\t\tlet scrollbarTopElement = element.find('.ps__rail-x').first();\n\t\tscrollbarTopElement.css({\n\t\t\ttop: 0,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tscrollbarTopElement.find('.ps__thumb-x').css({\n\t\t\ttop: 2,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tlet scrollbarBottomRightInit = new PerfectScrollbar(element[0], options);\n\t\treturn [scrollbarTopLeftInit, scrollbarBottomRightInit];\n\t},\n\tshowNewScrollbarTopBottom: function (element, options = { wheelPropagation: true, suppressScrollY: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(options, this.scrollOptions);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tvar scrollbarTopElement = element.find('.ps__rail-x').first();\n\t\tscrollbarTopElement.css({\n\t\t\ttop: 0,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tscrollbarTopElement.find('.ps__thumb-x').css({\n\t\t\ttop: 2,\n\t\t\tbottom: 'auto'\n\t\t});\n\t},\n\tshowNewScrollbarTop: function (element, options = { wheelPropagation: true, suppressScrollY: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(this.scrollOptions, options);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tvar scrollbarTopElement = element.find('.ps__rail-x').first();\n\t\tscrollbarTopElement.css({\n\t\t\ttop: 0,\n\t\t\tbottom: 'auto'\n\t\t});\n\t\tscrollbarTopElement.find('.ps__thumb-x').css({\n\t\t\ttop: 2,\n\t\t\tbottom: 'auto'\n\t\t});\n\t},\n\tshowNewScrollbarLeft: function (element, options = { wheelPropagation: true }) {\n\t\tif (typeof element === 'undefined' || !element.length) return;\n\t\toptions = Object.assign(this.scrollOptions, options);\n\t\tnew PerfectScrollbar(element[0], options);\n\t\tvar scrollbarLeftElement = element.children('.ps__rail-y').first();\n\t\tscrollbarLeftElement.css({\n\t\t\tleft: 0,\n\t\t\tright: 'auto'\n\t\t});\n\t\tscrollbarLeftElement.find('.ps__thumb-y').css({\n\t\t\tleft: 2,\n\t\t\tright: 'auto'\n\t\t});\n\t},\n\tshowScrollBar: function (element, options = {}) {\n\t\tif (typeof options.height === 'undefined') options.height = element.css('height');\n\t\treturn element.slimScroll(options);\n\t},\n\t/**\n\t * Register middle scroll hack for scrollbar libraries\n\t * @param {jQuery} container\n\t */\n\tregisterMiddleClickScroll(container) {\n\t\tlet middleScroll = false;\n\t\tcontainer.on('mousedown', (e) => {\n\t\t\tlet clickedMouseButton = e.which; // get clicked button id\n\t\t\tif (clickedMouseButton == 2 && middleScroll == false) {\n\t\t\t\tmiddleScroll = true;\n\t\t\t\tlet mouseY = e.pageY,\n\t\t\t\t\tmouseX = e.pageX;\n\t\t\t\t$(document).on('mousemove', (e) => {\n\t\t\t\t\tif (middleScroll == true) {\n\t\t\t\t\t\t$('body').addClass('u-cursor-scroll-all');\n\t\t\t\t\t\tlet mouseMoveY = mouseY - e.pageY,\n\t\t\t\t\t\t\tscrollSlowerRate = 100, // higher number = slower scroll\n\t\t\t\t\t\t\tcontentScrollY = container.scrollTop(),\n\t\t\t\t\t\t\tscrollerY = contentScrollY - mouseMoveY - scrollSlowerRate,\n\t\t\t\t\t\t\tmouseMoveX = mouseX - e.pageX,\n\t\t\t\t\t\t\tcontentScrollX = container.scrollLeft(),\n\t\t\t\t\t\t\tscrollerX = contentScrollX - mouseMoveX - scrollSlowerRate;\n\t\t\t\t\t\tcontainer.scrollTop(scrollerY);\n\t\t\t\t\t\tcontainer.scrollLeft(scrollerX);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tcontainer.on('mouseup', () => {\n\t\t\t$('body').removeClass('u-cursor-scroll-all');\n\t\t\tmiddleScroll = false;\n\t\t});\n\t},\n\t/**\n\t * Function returns translated string\n\t */\n\tvtranslate: function (key) {\n\t\tif (key in LANG) {\n\t\t\treturn LANG[key];\n\t\t}\n\t\treturn key;\n\t},\n\t/*\n\t * Cache API on client-side\n\t */\n\tcacheNSKey: function (key) {\n\t\t// Namespace in client-storage\n\t\treturn 'yf.' + key;\n\t},\n\tcacheGet: function (key) {\n\t\tkey = this.cacheNSKey(key);\n\t\treturn store.get(key);\n\t},\n\tcacheSet: function (key, value) {\n\t\tkey = this.cacheNSKey(key);\n\t\tstore.set(key, value);\n\t},\n\tcacheClear: function (key) {\n\t\tkey = this.cacheNSKey(key);\n\t\treturn store.remove(key);\n\t},\n\tmoduleCacheSet: function (key, value) {\n\t\tvar orgKey = key;\n\t\tkey = this.getModuleName() + '_' + key;\n\t\tthis.cacheSet(key, value);\n\n\t\tvar cacheKey = 'mCache' + this.getModuleName();\n\t\tvar moduleCache = this.cacheGet(cacheKey);\n\t\tif (moduleCache == null) {\n\t\t\tmoduleCache = [];\n\t\t} else {\n\t\t\tmoduleCache = moduleCache.split(',');\n\t\t}\n\t\tmoduleCache.push(orgKey);\n\t\tthis.cacheSet(cacheKey, Vtiger_Helper_Js.unique(moduleCache).join(','));\n\t},\n\tmoduleCacheGet: function (key) {\n\t\treturn this.cacheGet(this.getModuleName() + '_' + key);\n\t},\n\tmoduleCacheKeys: function () {\n\t\tvar cacheKey = 'mCache' + this.getModuleName();\n\t\tvar modules = this.cacheGet(cacheKey);\n\t\tif (modules) {\n\t\t\treturn modules.split(',');\n\t\t}\n\t\treturn [];\n\t},\n\tmoduleCacheClear: function (key) {\n\t\tvar thisInstance = this;\n\t\tvar moduleName = this.getModuleName();\n\t\tvar cacheKey = 'mCache' + moduleName;\n\t\tvar moduleCache = this.cacheGet(cacheKey);\n\t\tif (moduleCache == null) {\n\t\t\tmoduleCache = [];\n\t\t} else {\n\t\t\tmoduleCache = moduleCache.split(',');\n\t\t}\n\t\t$.each(moduleCache, function (index, value) {\n\t\t\tthisInstance.cacheClear(moduleName + '_' + value);\n\t\t});\n\t\tthisInstance.cacheClear(cacheKey);\n\t},\n\thtmlEncode: function (value) {\n\t\tif (value) {\n\t\t\treturn $('<div />').text(value).html();\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t},\n\thtmlDecode: function (value) {\n\t\tif (value) {\n\t\t\treturn $('<div />').html(value).text();\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t},\n\t/**\n\t * Function places an element at the center of the page\n\t * @param <jQuery Element> element\n\t */\n\tplaceAtCenter: function (element) {\n\t\telement.css('position', 'absolute');\n\t\telement.css('top', ($(window).height() - element.outerHeight()) / 2 + $(window).scrollTop() + 'px');\n\t\telement.css('left', ($(window).width() - element.outerWidth()) / 2 + $(window).scrollLeft() + 'px');\n\t},\n\tgetvalidationEngineOptions: function (select2Status) {\n\t\treturn Object.assign({}, app.validationEngineOptions);\n\t},\n\t/**\n\t * Function to notify UI page ready after AJAX changes.\n\t * This can help in re-registering the event handlers (which was done during ready event).\n\t */\n\tnotifyPostAjaxReady: function () {\n\t\t$(document).trigger('postajaxready');\n\t},\n\t/**\n\t * Listen to xready notiications.\n\t */\n\tlistenPostAjaxReady: function (callback) {\n\t\t$(document).on('postajaxready', callback);\n\t},\n\t/**\n\t * Form function handlers\n\t */\n\tsetFormValues: function (kv) {\n\t\tfor (var k in kv) {\n\t\t\t$(k).val(kv[k]);\n\t\t}\n\t},\n\tsetRTEValues: function (kv) {\n\t\tfor (var k in kv) {\n\t\t\tvar rte = CKEDITOR.instances[k];\n\t\t\tif (rte) rte.setData(kv[k]);\n\t\t}\n\t},\n\t/**\n\t * Function returns the javascript controller based on the current view\n\t */\n\tgetPageController: function () {\n\t\tif (window.pageController) {\n\t\t\treturn window.pageController;\n\t\t}\n\t\tconst moduleName = app.getModuleName();\n\t\tconst view = app.getViewName();\n\t\tconst parentModule = app.getParentModuleName();\n\t\tlet moduleClassName = parentModule + '_' + moduleName + '_' + view + '_Js';\n\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\tmoduleClassName = parentModule + '_Vtiger_' + view + '_Js';\n\t\t}\n\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\tmoduleClassName = moduleName + '_' + view + '_Js';\n\t\t}\n\t\tvar extendModules = $('#extendModules').val();\n\t\tif (typeof window[moduleClassName] === 'undefined' && extendModules != undefined) {\n\t\t\tmoduleClassName = extendModules + '_' + view + '_Js';\n\t\t}\n\t\tif (typeof window[moduleClassName] === 'undefined') {\n\t\t\tmoduleClassName = 'Vtiger_' + view + '_Js';\n\t\t}\n\t\tif (typeof window[moduleClassName] !== 'undefined') {\n\t\t\tif (typeof window[moduleClassName] === 'function') {\n\t\t\t\treturn (window.pageController = new window[moduleClassName]());\n\t\t\t}\n\t\t\tif (typeof window[moduleClassName] === 'object') {\n\t\t\t\treturn (window.pageController = window[moduleClassName]);\n\t\t\t}\n\t\t}\n\t\tlet moduleBaseClassName = parentModule + '_' + moduleName + '_' + 'Index_Js';\n\t\tif (typeof window[moduleBaseClassName] !== 'undefined') {\n\t\t\tif (typeof window[moduleBaseClassName] === 'function') {\n\t\t\t\treturn (window.pageController = new window[moduleBaseClassName]());\n\t\t\t}\n\t\t\tif (typeof window[moduleBaseClassName] === 'object') {\n\t\t\t\treturn (window.pageController = window[moduleBaseClassName]);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Function to decode the encoded htmlentities values\n\t */\n\tgetDecodedValue: function (value) {\n\t\treturn $('<div></div>').html(value).text();\n\t},\n\tgetCookie: function (c_name) {\n\t\tvar c_value = document.cookie;\n\t\tvar c_start = c_value.indexOf(' ' + c_name + '=');\n\t\tif (c_start === -1) {\n\t\t\tc_start = c_value.indexOf(c_name + '=');\n\t\t}\n\t\tif (c_start === -1) {\n\t\t\tc_value = null;\n\t\t} else {\n\t\t\tc_start = c_value.indexOf('=', c_start) + 1;\n\t\t\tvar c_end = c_value.indexOf(';', c_start);\n\t\t\tif (c_end === -1) {\n\t\t\t\tc_end = c_value.length;\n\t\t\t}\n\t\t\tc_value = unescape(c_value.substring(c_start, c_end));\n\t\t}\n\t\treturn c_value;\n\t},\n\tsetCookie: function (c_name, value, exdays) {\n\t\tvar exdate = new Date();\n\t\texdate.setDate(exdate.getDate() + exdays);\n\t\tvar c_value = escape(value) + (exdays == null ? '' : '; expires=' + exdate.toUTCString());\n\t\tdocument.cookie = c_name + '=' + c_value;\n\t},\n\tgetUrlVar: function (varName) {\n\t\tvar getVar = function () {\n\t\t\tvar vars = {};\n\t\t\twindow.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\t\t\t\tvars[key] = value;\n\t\t\t});\n\t\t\treturn vars;\n\t\t};\n\n\t\treturn getVar()[varName];\n\t},\n\tgetStringDate: function (date) {\n\t\tvar d = date.getDate();\n\t\tvar m = date.getMonth() + 1;\n\t\tvar y = date.getFullYear();\n\n\t\td = d <= 9 ? '0' + d : d;\n\t\tm = m <= 9 ? '0' + m : m;\n\t\treturn y + '-' + m + '-' + d;\n\t},\n\tformatDate: function (date) {\n\t\tvar y = date.getFullYear(),\n\t\t\tm = date.getMonth() + 1,\n\t\t\td = date.getDate(),\n\t\t\th = date.getHours(),\n\t\t\ti = date.getMinutes(),\n\t\t\ts = date.getSeconds();\n\t\treturn (\n\t\t\ty +\n\t\t\t'-' +\n\t\t\tthis.formatDateZ(m) +\n\t\t\t'-' +\n\t\t\tthis.formatDateZ(d) +\n\t\t\t' ' +\n\t\t\tthis.formatDateZ(h) +\n\t\t\t':' +\n\t\t\tthis.formatDateZ(i) +\n\t\t\t':' +\n\t\t\tthis.formatDateZ(s)\n\t\t);\n\t},\n\tformatDateZ: function (i) {\n\t\treturn i <= 9 ? '0' + i : i;\n\t},\n\thowManyDaysFromDate: function (time) {\n\t\tvar fromTime = time.getTime();\n\t\tvar today = new Date();\n\t\tvar toTime = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime();\n\t\treturn Math.floor((toTime - fromTime) / (1000 * 60 * 60 * 24)) + 1;\n\t},\n\tsaveAjax: function (mode, param, addToParams) {\n\t\tvar aDeferred = $.Deferred();\n\t\tvar params = {};\n\t\tparams['module'] = app.getModuleName();\n\t\tparams['parent'] = app.getParentModuleName();\n\t\tparams['action'] = 'SaveAjax';\n\t\tif (mode) {\n\t\t\tparams['mode'] = mode;\n\t\t}\n\t\tparams['param'] = param;\n\t\tif (addToParams != undefined) {\n\t\t\tfor (var i in addToParams) {\n\t\t\t\tparams[i] = addToParams[i];\n\t\t\t}\n\t\t}\n\t\tAppConnector.request(params)\n\t\t\t.done(function (data) {\n\t\t\t\taDeferred.resolve(data);\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\t/**\n\t * Hack for Safari breaking down, when sending empty file input\n\t * @param html\n\t */\n\tremoveEmptyFilesInput(form) {\n\t\tfor (let i = 0; i < form.elements.length; i++) {\n\t\t\tif (form.elements[i].type === 'file') {\n\t\t\t\tif (form.elements[i].value === '') {\n\t\t\t\t\tform.elements[i].parentNode.removeChild(form.elements[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetMainParams: function (param, json) {\n\t\tif (param in CONFIG) {\n\t\t\treturn CONFIG[param];\n\t\t}\n\t\tif (app.cacheParams[param] === undefined) {\n\t\t\tapp.cacheParams[param] = $('#' + param).val();\n\t\t}\n\t\tlet value = app.cacheParams[param];\n\t\tif (json) {\n\t\t\tif (value) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t} else {\n\t\t\t\tvalue = [];\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t},\n\tsetMainParams: function (param, value) {\n\t\tapp.cacheParams[param] = value;\n\t\t$('#' + param).val(value);\n\t},\n\terrorLog: function (error, err, errorThrown) {\n\t\tif (!CONFIG.debug) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn(\n\t\t\t'%cYetiForce debug mode!!!',\n\t\t\t'color: red; font-family: sans-serif; font-size: 1.5em; font-weight: bolder; text-shadow: #000 1px 1px;'\n\t\t);\n\t\tif (typeof error === 'object' && error.responseText) {\n\t\t\terror = error.responseText;\n\t\t}\n\t\tif (typeof error === 'object' && error.statusText) {\n\t\t\terror = error.statusText;\n\t\t}\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t\tif (err && err !== 'error') {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tif (errorThrown) {\n\t\t\tconsole.error(errorThrown);\n\t\t}\n\t},\n\tregisterQuickEditModal: function (container) {\n\t\tif (typeof container === 'undefined') {\n\t\t\tcontainer = $('body');\n\t\t}\n\t\tcontainer.on('click', '.js-quick-edit-modal', function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet element = $(this);\n\t\t\tlet data = {\n\t\t\t\tmodule: element.data('module'),\n\t\t\t\trecord: element.data('record'),\n\t\t\t\tremoveFromUrl: 'step'\n\t\t\t};\n\t\t\tif (element.data('values')) {\n\t\t\t\t$.extend(data, element.data('values'));\n\t\t\t}\n\t\t\t$.each(['mandatoryFields', 'modalTitle', 'showLayout', 'editFields', 'picklistValues'], function (index, value) {\n\t\t\t\tif (element.data(value)) {\n\t\t\t\t\tdata[value] = element.data(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\tApp.Components.QuickEdit.showModal(data, element);\n\t\t});\n\t},\n\tregisterModal: function (container) {\n\t\tif (typeof container === 'undefined') {\n\t\t\tcontainer = $('body');\n\t\t}\n\t\tcontainer\n\t\t\t.off('click', 'button.showModal, a.showModal, .js-show-modal')\n\t\t\t.on('click', 'button.showModal, a.showModal, .js-show-modal', function (e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar currentElement = $(e.currentTarget);\n\t\t\t\tvar url = currentElement.data('url');\n\n\t\t\t\tif (typeof url !== 'undefined') {\n\t\t\t\t\tif (currentElement.hasClass('js-popover-tooltip')) {\n\t\t\t\t\t\tcurrentElement.popover('hide');\n\t\t\t\t\t}\n\t\t\t\t\tif (currentElement.hasClass('disabledOnClick')) {\n\t\t\t\t\t\tcurrentElement.attr('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t\tvar modalWindowParams = {\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tcb: function (container) {\n\t\t\t\t\t\t\tvar call = currentElement.data('cb');\n\t\t\t\t\t\t\tif (typeof call !== 'undefined') {\n\t\t\t\t\t\t\t\tif (call.indexOf('.') !== -1) {\n\t\t\t\t\t\t\t\t\tvar callerArray = call.split('.');\n\t\t\t\t\t\t\t\t\tif (typeof window[callerArray[0]] === 'object' || typeof window[callerArray[0]] === 'function') {\n\t\t\t\t\t\t\t\t\t\twindow[callerArray[0]][callerArray[1]](container);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (typeof window[call] === 'function') {\n\t\t\t\t\t\t\t\t\t\twindow[call](container);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentElement.removeAttr('disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tif (currentElement.data('modalid')) {\n\t\t\t\t\t\tmodalWindowParams['id'] = currentElement.data('modalid');\n\t\t\t\t\t}\n\t\t\t\t\tapp.showModalWindow(modalWindowParams);\n\t\t\t\t}\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\tcontainer.off('click', '.js-show-modal-content').on('click', '.js-show-modal-content', function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet currentElement = $(e.currentTarget);\n\t\t\tlet content = currentElement.data('content');\n\t\t\tlet title = '',\n\t\t\t\tmodalClass = '';\n\t\t\tif (currentElement.data('title')) {\n\t\t\t\ttitle = currentElement.data('title');\n\t\t\t}\n\t\t\tif (currentElement.data('class')) {\n\t\t\t\tmodalClass = currentElement.data('class');\n\t\t\t}\n\t\t\tapp.showModalWindow(`<div class=\"modal\" tabindex=\"-1\" role=\"dialog\"><div class=\"modal-dialog ${modalClass}\" role=\"document\"><div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\"> <h5 class=\"modal-title\">${title}</h5>\n\t\t\t  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n\t\t\t</div><div class=\"modal-body text-break\">${content}</div></div></div></div>`);\n\t\t\te.stopPropagation();\n\t\t});\n\t},\n\tplaySound: function (action) {\n\t\tvar soundsConfig = app.getMainParams('sounds');\n\t\tif (soundsConfig['IS_ENABLED']) {\n\t\t\tvar audio = new Audio(app.getMainParams('soundFilesPath') + soundsConfig[action]);\n\t\t\taudio.play();\n\t\t}\n\t},\n\tregisterIframeAndMoreContent(container = $(document)) {\n\t\tcontainer.on('click', '.js-more', (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tconst btn = $(e.currentTarget);\n\t\t\tapp.showModalWindow(\n\t\t\t\t`<div class=\"modal\" tabindex=\"-1\" role=\"dialog\"><div class=\"modal-dialog modal-fullscreen\" role=\"document\"><div class=\"modal-content js-modal-content\">\n\t\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t\t<h5 class=\"modal-title\"><span class=\"mdi mdi-overscan\"></span>${app.vtranslate('JS_FULL_TEXT')}</h5>\n\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"modal-body text-break u-word-break pb-0 pt-1\"></div>\n\t\t\t\t\t<div class=\"modal-footer py-1\">\n\t\t\t\t\t\t<button class=\"btn btn-danger\" type=\"reset\" data-dismiss=\"modal\">\n\t\t\t\t\t\t\t<span class=\"fas fa-times mr-1\"></span>${app.vtranslate('JS_CLOSE')}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div></div>`,\n\t\t\t\t(container) => {\n\t\t\t\t\tif (btn.data('iframe')) {\n\t\t\t\t\t\tlet iframe = btn.siblings('iframe');\n\t\t\t\t\t\tlet message = iframe.clone();\n\t\t\t\t\t\tlet isHidden = iframe.is(':hidden');\n\t\t\t\t\t\tlet height = 0;\n\t\t\t\t\t\tif (iframe.data('height')) {\n\t\t\t\t\t\t\tif (iframe.data('height') === 'full') {\n\t\t\t\t\t\t\t\theight = $(window).height() - 185;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\theight = iframe.data('height');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (isHidden) {\n\t\t\t\t\t\t\t\tmessage.css('display', '');\n\t\t\t\t\t\t\t\tiframe.css('display', '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\theight = iframe.contents().height() ?? iframe.contents().find('body').height();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (height) {\n\t\t\t\t\t\t\tmessage.height(height);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isHidden) {\n\t\t\t\t\t\t\tiframe.css('display', 'none');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontainer.find('.modal-body').html(message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.find('.modal-body').html(btn.closest('.js-more-content').find('.fullContent').html());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t},\n\tregisterIframeEvents(content) {\n\t\tcontent.find('.js-iframe-full-height').each(function () {\n\t\t\tlet iframe = $(this);\n\t\t\tiframe.on('load', (e) => {\n\t\t\t\tiframe.height(iframe.contents().find('body').height() + 50);\n\t\t\t});\n\t\t});\n\t\tcontent.find('.js-modal-iframe').each(function () {\n\t\t\tlet iframe = $(this);\n\t\t\tiframe.on('load', (e) => {\n\t\t\t\tlet height = iframe.contents().find('body').height();\n\t\t\t\tif (height && height < iframe.height()) {\n\t\t\t\t\tiframe.height(height + 50);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\tregisterMenu: function () {\n\t\tconst self = this;\n\t\tself.keyboard = { DOWN: 40, ESCAPE: 27, LEFT: 37, RIGHT: 39, SPACE: 32, UP: 38 };\n\t\tself.sidebarBtn = $('.js-sidebar-btn').first();\n\t\tself.sidebar = $('.js-sidebar').first();\n\t\tself.sidebarBtn.on('click', self.toggleSidebar.bind(self));\n\t\t$(`a.nav-link,[tabindex],input,select,textarea,button`).on('focus', (e) => {\n\t\t\tif (self.sidebarBtn[0] == e.target || self.sidebar.find(e.target).length) return;\n\t\t\tif (self.sidebar.find(':focus').length) {\n\t\t\t\tself.openSidebar();\n\t\t\t} else if (self.sidebar.hasClass('js-expand')) {\n\t\t\t\tself.closeSidebar();\n\t\t\t}\n\t\t});\n\t\tself.sidebar.on('mouseenter', self.openSidebar.bind(self)).on('mouseleave', self.closeSidebar.bind(self));\n\t\tself.sidebar.find('.js-menu__content').on('keydown', self.sidebarKeyboard.bind(self));\n\t\tself.sidebar.on('keydown', (e) => {\n\t\t\tif (e.which == self.keyboard.ESCAPE) {\n\t\t\t\tself.closeSidebar();\n\t\t\t\tif (self.sidebarBtn.is(':tabbable')) self.sidebarBtn.focus();\n\t\t\t\telse\n\t\t\t\t\t$(':tabbable')\n\t\t\t\t\t\t.eq(parseInt($(':tabbable').index(self.sidebar.find(':tabbable').last())) + 1)\n\t\t\t\t\t\t.focus();\n\t\t\t}\n\t\t});\n\t\t$('.js-submenu-toggler').on('click', (e) => {\n\t\t\tif (!$(e.currentTarget).hasClass('collapsed') && !$(e.target).closest('.toggler').length) {\n\t\t\t\twindow.location = $(e.currentTarget).attr('href');\n\t\t\t}\n\t\t});\n\t\tself.registerPinEvent();\n\t},\n\topenSidebar: function () {\n\t\tthis.sidebar.addClass('js-expand');\n\t\tthis.sidebarBtn.attr('aria-expanded', true);\n\t},\n\tcloseSidebar: function () {\n\t\tthis.sidebar.removeClass('js-expand');\n\t\tthis.sidebarBtn.attr('aria-expanded', false);\n\t},\n\ttoggleSidebar: function () {\n\t\tif (this.sidebar.hasClass('js-expand')) {\n\t\t\tthis.closeSidebar();\n\t\t} else {\n\t\t\tthis.openSidebar();\n\t\t\tthis.sidebar.find('.js-menu__content :tabbable').first().focus();\n\t\t}\n\t},\n\tregisterPinEvent: function () {\n\t\tconst self = this;\n\t\tlet pinButton = self.sidebar.find('.js-menu--pin');\n\t\tlet baseContainer = self.sidebar.closest('.js-base-container');\n\t\tpinButton.on('click', () => {\n\t\t\tlet hideMenu = 0;\n\t\t\tbaseContainer.removeClass('c-menu--animation');\n\t\t\tif (pinButton.attr('data-show') === '0') {\n\t\t\t\thideMenu = 'on';\n\t\t\t\tpinButton.removeClass('u-opacity-muted');\n\t\t\t\tbaseContainer.addClass('c-menu--open');\n\t\t\t\tself.sidebar.off('mouseleave mouseenter');\n\t\t\t} else {\n\t\t\t\tpinButton.addClass('u-opacity-muted');\n\t\t\t\tbaseContainer.removeClass('c-menu--open');\n\t\t\t\tself.sidebar.on('mouseenter', self.openSidebar.bind(self)).on('mouseleave', self.closeSidebar.bind(self));\n\t\t\t\tself.closeSidebar.bind(self);\n\t\t\t}\n\t\t\tAppConnector.request({\n\t\t\t\tmodule: 'Users',\n\t\t\t\taction: 'SaveAjax',\n\t\t\t\tfield: 'leftpanelhide',\n\t\t\t\trecord: CONFIG.userId,\n\t\t\t\tvalue: hideMenu\n\t\t\t}).done(function (responseData) {\n\t\t\t\tif (responseData.success && responseData.result) {\n\t\t\t\t\tpinButton.attr('data-show', hideMenu);\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tbaseContainer.addClass('c-menu--animation');\n\t\t\t}, 300);\n\t\t});\n\t},\n\tsidebarKeyboard: function (e) {\n\t\tlet target = $(e.target);\n\t\tif (e.which == this.keyboard.LEFT) {\n\t\t\tif (target.hasClass('js-submenu-toggler') && !target.hasClass('collapsed')) {\n\t\t\t\ttarget.click();\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tlet toggler = $(e.target).closest('.js-submenu').prev('.js-submenu-toggler');\n\t\t\t\tif (toggler.length && !toggler.hasClass('collapsed')) {\n\t\t\t\t\ttoggler.click().focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\n\t\t\t(target.hasClass('js-submenu-toggler') && e.which == this.keyboard.RIGHT && target.hasClass('collapsed')) ||\n\t\t\t(target.hasClass('js-submenu-toggler') && e.which == this.keyboard.SPACE)\n\t\t) {\n\t\t\ttarget.click();\n\t\t\treturn false;\n\t\t} else if (e.which == this.keyboard.UP) {\n\t\t\tthis.sidebar\n\t\t\t\t.find('.js-menu__content :tabbable')\n\t\t\t\t.eq(parseInt(this.sidebar.find('.js-menu__content :tabbable').index(target)) - 1)\n\t\t\t\t.focus();\n\t\t\treturn false;\n\t\t} else if (e.which == this.keyboard.DOWN) {\n\t\t\tthis.sidebar\n\t\t\t\t.find('.js-menu__content :tabbable')\n\t\t\t\t.eq(parseInt(this.sidebar.find('.js-menu__content :tabbable').index(target)) + 1)\n\t\t\t\t.focus();\n\t\t\treturn false;\n\t\t}\n\t},\n\tregisterTabdrop: function () {\n\t\tlet tabs = $('.js-tabdrop');\n\t\tif (!tabs.length) return;\n\t\tlet tab = tabs.find('> li');\n\t\ttab.each(function () {\n\t\t\t$(this).removeClass('d-none');\n\t\t});\n\t\ttabs.tabdrop({\n\t\t\ttext: app.vtranslate('JS_MORE')\n\t\t});\n\t\t//change position to the last element (wcag keyboard navigation)\n\t\tlet dropdown = tabs.find('> li.dropdown');\n\t\tdropdown.appendTo(tabs);\n\t\t//fix for toggle button text not changing\n\t\ttab.on('click', function (e) {\n\t\t\tsetTimeout(function () {\n\t\t\t\t$(window).trigger('resize');\n\t\t\t}, 500);\n\t\t});\n\t\t$(window).trigger('resize');\n\t},\n\tgetScreenHeight: function (percantage) {\n\t\tif (typeof percantage === 'undefined') {\n\t\t\tpercantage = 100;\n\t\t}\n\t\treturn ($(window).height() * percantage) / 100;\n\t},\n\tclearBrowsingHistory: function () {\n\t\tAppConnector.request({\n\t\t\tmodule: 'Home',\n\t\t\taction: 'BrowsingHistory'\n\t\t}).done(function (response) {\n\t\t\t$('.historyList').html(\n\t\t\t\t`<a class=\"item dropdown-item\" href=\"#\" role=\"listitem\">${app.vtranslate('JS_NO_RECORDS')}</a>`\n\t\t\t);\n\t\t});\n\t},\n\t/**\n\t * Open url in top window\n\t * @param string url\n\t */\n\topenUrl(url) {\n\t\tif (CONFIG.openUrlTarget === 'parentIframe') {\n\t\t\twindow.parent.location.href = url;\n\t\t} else {\n\t\t\twindow.location.href = url;\n\t\t}\n\t},\n\t/**\n\t * Convert url string to object\n\t *\n\t * @param   {string}  url  example: index.php?module=LayoutEditor&parent=Settings\n\t */\n\tchangeUrl(params) {\n\t\tlet fullUrl = '';\n\t\tif (params.data && typeof params.data.historyUrl !== 'undefined') {\n\t\t\tfullUrl = params.data.historyUrl;\n\t\t}\n\t\tif (fullUrl === '') {\n\t\t\tif (params.data) {\n\t\t\t\tif (typeof params.data == 'string') {\n\t\t\t\t\tfullUrl = 'index.php?' + params.data;\n\t\t\t\t} else {\n\t\t\t\t\tfullUrl = 'index.php?' + $.param(params.data);\n\t\t\t\t}\n\t\t\t} else if (typeof params === 'object') {\n\t\t\t\tfullUrl = 'index.php?' + $.param(params);\n\t\t\t}\n\t\t} else if (fullUrl.indexOf('index.php?') === -1) {\n\t\t\tfullUrl = 'index.php?' + fullUrl;\n\t\t}\n\t\tif (app.isWindowTop() && history && history.pushState && fullUrl !== '') {\n\t\t\tif (!history.state) {\n\t\t\t\tlet currentHref = window.location.href;\n\t\t\t\thistory.replaceState(currentHref, 'title 1', currentHref);\n\t\t\t}\n\t\t\thistory.pushState(fullUrl, 'title 2', fullUrl);\n\t\t}\n\t},\n\t/**\n\t * Convert url string to object\n\t *\n\t * @param   {string}  url  example: index.php?module=LayoutEditor&parent=Settings\n\t *\n\t * @return  {object}       urlObject\n\t */\n\tconvertUrlToObject(url) {\n\t\tlet urlObject = {};\n\t\tif (url.indexOf('index.php?') !== -1) {\n\t\t\turl = url.split('index.php?')[1];\n\t\t}\n\t\turl.split('&').forEach((el) => {\n\t\t\tif (el.includes('=')) {\n\t\t\t\tlet values = el.split('=');\n\t\t\t\turlObject[values[0]] = values[1];\n\t\t\t}\n\t\t});\n\t\treturn urlObject;\n\t},\n\t/**\n\t * Convert object to url string\n\t *\n\t * @param   {object}  urlData\n\t * @param   {string}  entryFile\n\t *\n\t * @return  {string}          url\n\t */\n\tconvertObjectToUrl(urlData = {}, entryFile = 'index.php?') {\n\t\tlet url = entryFile;\n\t\tObject.keys(urlData).forEach((key) => {\n\t\t\tlet value = urlData[key];\n\t\t\tif (typeof value === 'object' || (typeof value === 'string' && value.startsWith('<'))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\turl += key + '=' + value + '&';\n\t\t});\n\t\treturn url;\n\t},\n\tformatToHourText: function (decTime, type = 'short', withSeconds = false, withMinutes = true) {\n\t\tconst short = type === 'short';\n\t\tconst hour = Math.floor(decTime);\n\t\tconst min = Math.floor((decTime - hour) * 60);\n\t\tconst sec = Math.round(((decTime - hour) * 60 - min) * 60);\n\t\tlet result = '';\n\t\tif (hour) {\n\t\t\tresult += short ? hour + app.vtranslate('JS_H') : `${hour} ` + app.vtranslate('JS_H_LONG');\n\t\t}\n\t\tif ((hour || min) && withMinutes) {\n\t\t\tresult += short ? ` ${min}` + app.vtranslate('JS_M') : ` ${min} ` + app.vtranslate('JS_M_LONG');\n\t\t}\n\t\tif (withSeconds !== false) {\n\t\t\tresult += short ? ` ${sec}` + app.vtranslate('JS_S') : ` ${sec} ` + app.vtranslate('JS_S_LONG');\n\t\t}\n\t\tif (!hour && !min && withSeconds === false && withMinutes) {\n\t\t\tresult += short ? '0' + app.vtranslate('JS_M') : '0 ' + app.vtranslate('JS_M_LONG');\n\t\t}\n\t\tif (!hour && !min && withSeconds === false && !withMinutes) {\n\t\t\tresult += short ? '0' + app.vtranslate('JS_H') : '0 ' + app.vtranslate('JS_H_LONG');\n\t\t}\n\t\treturn result.trim();\n\t},\n\tshowRecordsList: function (params, cb, afterShowModal) {\n\t\tif (typeof params === 'object' && !params.view) {\n\t\t\tparams.view = 'RecordsList';\n\t\t}\n\t\tthis.showRecordsListModal(params).done(function (modal) {\n\t\t\tif (typeof afterShowModal === 'function') {\n\t\t\t\tafterShowModal(modal);\n\t\t\t}\n\t\t\tapp.registerModalController(false, modal, cb);\n\t\t});\n\t},\n\t/**\n\t * Show records list modal\n\t * @param {object} params\n\t * @returns {Promise}\n\t */\n\tshowRecordsListModal: function (params) {\n\t\tconst aDeferred = $.Deferred();\n\t\tAppConnector.request(params)\n\t\t\t.done(function (requestData) {\n\t\t\t\tapp.showModalWindow(requestData, function (modal) {\n\t\t\t\t\taDeferred.resolve(modal);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\taDeferred.reject(textStatus, errorThrown);\n\t\t\t});\n\t\treturn aDeferred.promise();\n\t},\n\t/**\n\t * Convert html content to base64 image\n\t * This function can be used in promise chain or with callback if specified\n\t *\n\t * @param {HTMLElement} element\n\t * @param {function} callback with imageString argument which contains an image in base64 string format\n\t * @param {object} options see: https://html2canvas.hertzen.com/configuration , imageType is our custom option\n\t * @return {Promise} with base64 string image as argument\n\t */\n\thtmlToImage(element, callback, options = { imageType: 'image/png', logging: false }) {\n\t\telement = $(element).get(0); // make sure we have HTMLElement not jQuery because it will not work\n\t\tconst imageType = options.imageType;\n\t\tdelete options.imageType;\n\t\treturn html2canvas(element, options).then((canvas) => {\n\t\t\tconst base64Image = canvas.toDataURL(imageType);\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback(base64Image);\n\t\t\t}\n\t\t\treturn base64Image;\n\t\t});\n\t},\n\tregisterHtmlToImageDownloader: function (container) {\n\t\tconst self = this;\n\t\tcontainer.on('click', '.js-download-html', function (e) {\n\t\t\tlet element = $(this);\n\t\t\tlet fileName = element.data('fileName');\n\t\t\tself.htmlToImage($(element.data('html'))).then((img) => {\n\t\t\t\t$(`<a href=\"${img}\" download=\"${fileName}.png\"></a>`).get(0).click();\n\t\t\t});\n\t\t});\n\t},\n\tdecodeHTML(html) {\n\t\tvar txt = document.createElement('textarea');\n\t\ttxt.innerHTML = html;\n\t\treturn txt.value;\n\t},\n\tshowAlert: function (text) {\n\t\treturn this.showNotify({\n\t\t\ttitle: text,\n\t\t\ttype: 'error',\n\t\t\tcloser: false,\n\t\t\tsticker: false,\n\t\t\tdestroy: false,\n\t\t\tmodules: new Map([\n\t\t\t\t...PNotify.defaultModules,\n\t\t\t\t[\n\t\t\t\t\tPNotifyConfirm,\n\t\t\t\t\t{\n\t\t\t\t\t\tconfirm: true,\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_OK'),\n\t\t\t\t\t\t\t\tprimary: true,\n\t\t\t\t\t\t\t\tclick: (notice) => notice.close()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]),\n\t\t\tstack: new PNotify.Stack({\n\t\t\t\tdir1: 'down',\n\t\t\t\tmodal: true,\n\t\t\t\tfirstpos1: 25,\n\t\t\t\toverlayClose: false\n\t\t\t})\n\t\t});\n\t},\n\tshowNotify: function (customParams) {\n\t\tlet params = {\n\t\t\thide: false\n\t\t};\n\t\tlet userParams = customParams;\n\t\tlet type = 'info';\n\t\tif (typeof customParams === 'string') {\n\t\t\tuserParams = {\n\t\t\t\ttitle: customParams\n\t\t\t};\n\t\t}\n\t\tif (typeof customParams.type !== 'undefined') {\n\t\t\ttype = customParams.type;\n\t\t}\n\t\tif (type !== 'error') {\n\t\t\tparams.hide = true;\n\t\t}\n\t\treturn PNotify[type]($.extend(params, userParams));\n\t},\n\t/**\n\t * Set Pnotify defaults options\n\t */\n\tsetPnotifyDefaultOptions() {\n\t\tPNotify.defaults.textTrusted = true; // *Trusted option enables html as parameter's value\n\t\tPNotify.defaults.titleTrusted = true;\n\t\tPNotify.defaults.sticker = false;\n\t\tPNotify.defaults.styling = 'bootstrap4';\n\t\tPNotify.defaults.icons = 'fontawesome5';\n\t\tPNotify.defaults.delay = 3000;\n\t\tPNotify.defaults.stack.maxOpen = 10;\n\t\tPNotify.defaults.stack.spacing1 = 5;\n\t\tPNotify.defaults.stack.spacing2 = 5;\n\t\tPNotify.defaults.labels.close = app.vtranslate('JS_CLOSE');\n\t\tPNotify.defaultModules.set(PNotifyBootstrap4, {});\n\t\tPNotify.defaultModules.set(PNotifyFontAwesome5, {});\n\t\tPNotify.defaultModules.set(PNotifyMobile, {});\n\t},\n\tshowConfirmModal: function (params) {\n\t\tlet confirmButtonLabel = 'JS_OK';\n\t\tlet rejectedButtonLabel = 'JS_CANCEL';\n\t\tif (typeof params.confirmButtonLabel !== 'undefined') {\n\t\t\tconfirmButtonLabel = params.confirmButtonLabel;\n\t\t}\n\t\tif (typeof params.rejectedButtonLabel !== 'undefined') {\n\t\t\trejectedButtonLabel = params.rejectedButtonLabel;\n\t\t}\n\t\treturn this.showNotify(\n\t\t\t$.extend(\n\t\t\t\t{\n\t\t\t\t\ticon: 'fas fa-question-circle',\n\t\t\t\t\tcloser: false,\n\t\t\t\t\tsticker: false,\n\t\t\t\t\tdestroy: false,\n\t\t\t\t\thide: false,\n\t\t\t\t\twidth: 'auto',\n\t\t\t\t\tanimateSpeed: 'fast',\n\t\t\t\t\taddModalClass: 'c-confirm-modal',\n\t\t\t\t\tmodules: new Map([\n\t\t\t\t\t\t...PNotify.defaultModules,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tPNotifyConfirm,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconfirm: true,\n\t\t\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttext: '<span class=\"fas fa-check mr-2\"></span>' + app.vtranslate(confirmButtonLabel),\n\t\t\t\t\t\t\t\t\t\ttextTrusted: true,\n\t\t\t\t\t\t\t\t\t\tprimary: true,\n\t\t\t\t\t\t\t\t\t\tpromptTrigger: true,\n\t\t\t\t\t\t\t\t\t\tclick: function (notice) {\n\t\t\t\t\t\t\t\t\t\t\tif (typeof params.confirmedCallback !== 'undefined') {\n\t\t\t\t\t\t\t\t\t\t\t\tparams.confirmedCallback(notice);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tnotice.close();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttext: '<span class=\"fas fa-times mr-2\"></span>' + app.vtranslate(rejectedButtonLabel),\n\t\t\t\t\t\t\t\t\t\ttextTrusted: true,\n\t\t\t\t\t\t\t\t\t\tclick: function (notice) {\n\t\t\t\t\t\t\t\t\t\t\tif (typeof params.rejectedCallback !== 'undefined') {\n\t\t\t\t\t\t\t\t\t\t\t\tparams.rejectedCallback(notice);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tnotice.close();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t]),\n\t\t\t\t\tstack: new PNotify.Stack({\n\t\t\t\t\t\tdir1: 'down',\n\t\t\t\t\t\tfirstpos1: 50,\n\t\t\t\t\t\tspacing1: 0,\n\t\t\t\t\t\tpush: 'top',\n\t\t\t\t\t\tmodal: true,\n\t\t\t\t\t\toverlayClose: false\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tparams\n\t\t\t)\n\t\t);\n\t},\n\tregistesterScrollbar(container) {\n\t\tcontainer.find('.js-scrollbar').each(function () {\n\t\t\tlet element = $(this),\n\t\t\t\tscrollbarFnName = element.data('scrollbarFnName');\n\n\t\t\tif (typeof app[scrollbarFnName] === 'function') {\n\t\t\t\tapp[scrollbarFnName](element);\n\t\t\t} else {\n\t\t\t\tapp.showNewScrollbar(element);\n\t\t\t}\n\t\t});\n\t},\n\tregisterPopover(container = $(document)) {\n\t\twindow.popoverCache = {};\n\t\tcontainer.on('mousemove', (e) => {\n\t\t\tapp.mousePosition = { x: e.pageX, y: e.pageY };\n\t\t});\n\t\tcontainer.on(\n\t\t\t'mouseenter',\n\t\t\t'.js-popover-tooltip, .js-popover-tooltip--record, .js-popover-tooltip--ellipsis, [data-field-type=\"reference\"], [data-field-type=\"multireference\"]',\n\t\t\t(e) => {\n\t\t\t\tlet currentTarget = $(e.currentTarget);\n\t\t\t\tif (!currentTarget.hasClass('popover-triggered')) {\n\t\t\t\t\tif (currentTarget.hasClass('js-popover-tooltip--record')) {\n\t\t\t\t\t\tapp.registerPopoverRecord(currentTarget, {}, container);\n\t\t\t\t\t\tcurrentTarget.trigger('mouseenter');\n\t\t\t\t\t} else if (!currentTarget.hasClass('js-popover-tooltip--record') && currentTarget.data('field-type')) {\n\t\t\t\t\t\tapp.registerPopoverRecord(currentTarget.children('a'), {}, container); //popoverRecord on children doesn't need triggering\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!currentTarget.hasClass('js-popover-tooltip--record') &&\n\t\t\t\t\t\t!currentTarget.find('.js-popover-tooltip--record').length &&\n\t\t\t\t\t\t!currentTarget.data('field-type')\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (currentTarget.hasClass('js-popover-tooltip--ellipsis')) {\n\t\t\t\t\t\t\tapp.registerPopoverEllipsis({ element: currentTarget, container });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapp.showPopoverElementView(currentTarget);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentTarget.trigger('mouseenter');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\t/**\n\t * Register auto format number value\n\t */\n\tregisterFormatNumber() {\n\t\t$(document).on('focusout', '.js-format-numer', (e) => {\n\t\t\t$(e.currentTarget).formatNumber();\n\t\t});\n\t},\n\t/**\n\t * Register toggle icon click event\n\t * @param container\n\t */\n\tregisterToggleIconClick(container) {\n\t\tcontainer.on('click', '.js-toggle-icon, .js-toggle-icon__container', (e) => {\n\t\t\tlet icon = $(e.target);\n\t\t\tif (icon.hasClass('js-toggle-icon__container')) {\n\t\t\t\ticon = icon.find('.js-toggle-icon');\n\t\t\t}\n\t\t\tlet iconData = icon.data();\n\t\t\ticon.toggleClass(`${iconData.active} ${iconData.inactive}`);\n\t\t\te.stopPropagation();\n\t\t});\n\t},\n\tstripHtml(html) {\n\t\tconst temporalDiv = document.createElement('div');\n\t\ttemporalDiv.innerHTML = html;\n\t\treturn temporalDiv.textContent || temporalDiv.innerText || '';\n\t},\n\tregisterShowHideBlock(container) {\n\t\tcontainer.on('click', '.js-hb__btn', (e) => {\n\t\t\t$(e.currentTarget).closest('.js-hb__container').toggleClass('u-hidden-block__opened');\n\t\t});\n\t\tcontainer.find('.js-fab__container').on('clickoutside', (e) => {\n\t\t\t$(e.currentTarget).removeClass('u-hidden-block__opened');\n\t\t});\n\t},\n\tprocessEvents: false,\n\tregisterAfterLoginEvents: function () {\n\t\tif (this.processEvents === false) {\n\t\t\tlet processEvents = $('#processEvents');\n\t\t\tif (processEvents.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.processEvents = JSON.parse(processEvents.val());\n\t\t}\n\t\tif (this.processEvents.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet event = this.processEvents.shift();\n\t\tswitch (event.type) {\n\t\t\tcase 'modal':\n\t\t\t\tAppConnector.request(event.url)\n\t\t\t\t\t.done(function (requestData) {\n\t\t\t\t\t\tapp.showModalWindow(requestData).one('hidden.bs.modal', function () {\n\t\t\t\t\t\t\tapp.registerAfterLoginEvents();\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (textStatus, errorThrown) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttitle: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\ttext: errorThrown,\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'notify':\n\t\t\t\tapp.showNotify(event.notify);\n\t\t\t\tapp.registerAfterLoginEvents();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t},\n\t/**\n\t * Function to reload view after save event\n\t *\n\t * @param {object} responseData - Save responses data.\n\t * @param {object} params - Save params.\n\t * @param {jQuery} form - Jquery form container.\n\t * @param {jQuery} element - Jquery trigger element.\n\t */\n\treloadAfterSave: function (responseData, params, form, element) {\n\t\tconst moduleName = params['module'];\n\t\tconst parentModuleName = app.getModuleName();\n\t\tconst viewName = app.getViewName();\n\t\tif ('List' === viewName) {\n\t\t\tif (moduleName === parentModuleName) {\n\t\t\t\tapp.pageController.getListViewRecords();\n\t\t\t}\n\t\t} else if ('Kanban' === viewName) {\n\t\t\tapp.pageController.loadKanban(false);\n\t\t} else if ('Detail' === viewName) {\n\t\t\tif (form && app.getRecordId() === form.find('[name=\"record\"]').val()) {\n\t\t\t\tif (responseData.result._isViewable == false) {\n\t\t\t\t\tif (window !== window.parent) {\n\t\t\t\t\t\twindow.parent.location.href = 'index.php?module=' + moduleName + '&view=ListPreview';\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.location.href = 'index.php?module=' + moduleName + '&view=List';\n\t\t\t\t\t}\n\t\t\t\t} else if (params && params.removeFromUrl) {\n\t\t\t\t\tlet searchParams = new URLSearchParams(window.location.search);\n\t\t\t\t\tsearchParams.delete('step');\n\t\t\t\t\twindow.location.href = 'index.php?' + searchParams.toString();\n\t\t\t\t} else {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet widget, block;\n\t\t\t\tif (responseData.result._reload) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else if (app.getUrlVar('mode') === 'showRelatedList') {\n\t\t\t\t\tapp.pageController.loadRelatedList();\n\t\t\t\t} else if (element && (widget = element.closest('.widgetContentBlock')) && widget.length !== 0) {\n\t\t\t\t\tapp.pageController.loadWidget(widget);\n\t\t\t\t} else if (element && (block = element.closest('.detailViewBlockLink')) && block.length !== 0) {\n\t\t\t\t\tapp.pageController.reloadDetailViewBlock(block);\n\t\t\t\t} else if (params && params.data) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else {\n\t\t\t\t\tapp.pageController.reloadTabContent();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Function to register the records events\n\t * @param {jQuery} container - Jquery container.\n\t */\n\tregisterRecordActionsEvents: function (container) {\n\t\tcontainer.on('click', '.js-action-confirm', function (event) {\n\t\t\tevent.stopPropagation();\n\t\t\tlet target = $(this),\n\t\t\t\tsourceView = target.data('sourceView'),\n\t\t\t\taddBtnIcon = target.data('addBtnIcon');\n\t\t\tlet params = {\n\t\t\t\ticon: false,\n\t\t\t\ttitle: target.data('content'),\n\t\t\t\tconfirmedCallback: () => {\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({\n\t\t\t\t\t\tposition: 'html',\n\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tlet url = target.data('url') + '&sourceView=' + sourceView;\n\t\t\t\t\tAppConnector.request(url).done(function (data) {\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({\n\t\t\t\t\t\t\tmode: 'hide'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (data && data.success) {\n\t\t\t\t\t\t\tif (data.result.notify) {\n\t\t\t\t\t\t\t\tapp.showNotify(data.result.notify);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (sourceView === 'Href') {\n\t\t\t\t\t\t\t\tapp.openUrl(data.result);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tapp.reloadAfterSave(data, app.convertUrlToObject(url), null, target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate(data.error.message),\n\t\t\t\t\t\t\t\ttitle: app.vtranslate('JS_LBL_PERMISSION'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (target.data('confirm')) {\n\t\t\t\tparams.text = target.data('confirm');\n\t\t\t\taddBtnIcon = 1;\n\t\t\t}\n\t\t\tif (addBtnIcon == 1) {\n\t\t\t\tparams.title = target.html() + ' ' + params.title;\n\t\t\t}\n\t\t\tapp.showConfirmModal(params);\n\t\t});\n\t},\n\t/**\n\t * Register keyboard shortcuts events\n\t * @param {jQuery} container\n\t */\n\tregisterKeyboardShortcutsEvent: function (container) {\n\t\tif (app.getUrlVar('parent') !== 'Settings') {\n\t\t\tdocument.addEventListener('keydown', (event) => {\n\t\t\t\tif (CONFIG['isEntityModule'] && event.altKey && event.code === 'KeyL') {\n\t\t\t\t\twindow.location.href = 'index.php?module=' + app.getModuleName() + '&view=List';\n\t\t\t\t}\n\t\t\t\tif (CONFIG['isQuickCreateSupported'] && event.altKey && event.code === 'KeyQ') {\n\t\t\t\t\tApp.Components.QuickCreate.createRecord(app.getModuleName());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\t/**\n\t * Register POST action\n\t * @param {jQuery} container\n\t */\n\tregisterPostActionEvent: function (container) {\n\t\tcontainer.on('click', '.js-post-action', function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet element = $(this);\n\t\t\tif (element.attr('href')) {\n\t\t\t\tAppConnector.requestForm(element.attr('href'));\n\t\t\t}\n\t\t});\n\t}\n});\nCKEDITOR.disableAutoInline = true;\n$(function () {\n\tQuasar.iconSet.set(Quasar.iconSet.mdiV3);\n\tlet document = $(this);\n\tapp.registerToggleIconClick(document);\n\tapp.touchDevice = app.isTouchDevice();\n\tapp.setPnotifyDefaultOptions();\n\tApp.Fields.Picklist.changeSelectElementView();\n\tapp.registerPopoverEllipsisIcon();\n\tapp.registerPopover();\n\tapp.registerFormatNumber();\n\tapp.registerIframeAndMoreContent();\n\tapp.registerModal();\n\tapp.registerQuickEditModal(document);\n\tapp.registerMenu();\n\tapp.registerTabdrop();\n\tapp.registerIframeEvents(document);\n\tapp.registesterScrollbar(document);\n\tapp.registerHtmlToImageDownloader(document);\n\tapp.registerShowHideBlock(document);\n\tapp.registerAfterLoginEvents(document);\n\tapp.registerFormsEvents(document);\n\tapp.registerRecordActionsEvents(document);\n\tapp.registerKeyboardShortcutsEvent(document);\n\tapp.registerPostActionEvent(document);\n\tApp.Components.QuickCreate.register(document);\n\tApp.Components.Scrollbar.initPage();\n\tApp.Clipboard.register(document);\n\tString.prototype.toCamelCase = function () {\n\t\tlet value = this.valueOf();\n\t\treturn value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n\t};\n\t// in IE resize option for textarea is not there, so we have to use .resizable() api\n\tif (/MSIE/.test(navigator.userAgent) || /Trident/.test(navigator.userAgent)) {\n\t\t$('textarea').resizable();\n\t}\n\t// Instantiate Page Controller\n\tapp.pageController = app.getPageController();\n\tif (app.pageController) {\n\t\tapp.pageController.registerEvents();\n\t}\n});\n(function ($) {\n\t$.fn.getNumberFromValue = function () {\n\t\treturn App.Fields.Double.formatToDb($(this).val());\n\t};\n\t$.fn.getNumberFromText = function () {\n\t\treturn App.Fields.Double.formatToDb($(this).text());\n\t};\n\t$.fn.setValue = function (value, type = 'value') {\n\t\treturn App.Fields.Utils.setValue($(this), value, type);\n\t};\n\t$.fn.formatNumber = function () {\n\t\tlet element = $(this);\n\t\telement.val(App.Fields.Double.formatToDisplay(App.Fields.Double.formatToDb(element.val()), false));\n\t};\n\t$.fn.disable = function () {\n\t\tthis.attr('disabled', 'disabled');\n\t};\n\t$.fn.enable = function () {\n\t\tthis.removeAttr('disabled');\n\t};\n\t$.fn.serializeFormData = function () {\n\t\tlet form = this;\n\t\tfor (var instance in CKEDITOR.instances) {\n\t\t\tCKEDITOR.instances[instance].updateElement();\n\t\t}\n\t\tlet values = form.serializeArray();\n\t\tlet data = {};\n\t\tif (values) {\n\t\t\t$(values).each(function (k, v) {\n\t\t\t\tlet element = form.find('[name=\"' + v.name + '\"]');\n\t\t\t\tif (element.is('select') && element.attr('multiple') != undefined) {\n\t\t\t\t\tif (data[v.name] == undefined) {\n\t\t\t\t\t\tdata[v.name] = [];\n\t\t\t\t\t}\n\t\t\t\t\tdata[v.name].push(v.value);\n\t\t\t\t} else {\n\t\t\t\t\tdata[v.name] = v.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// If data-type=\"autocomplete\", pickup data-value=\"...\" set\n\t\tlet autocompletes = $('[data-type=\"autocomplete\"]', $(this));\n\t\t$(autocompletes).each(function (i) {\n\t\t\tlet ac = $(autocompletes[i]);\n\t\t\tdata[ac.attr('name')] = ac.data('value');\n\t\t});\n\t\treturn data;\n\t};\n\t// Case-insensitive :icontains expression\n\t$.expr[':'].icontains = function (obj, index, meta, stack) {\n\t\treturn (\n\t\t\t(obj.textContent || obj.innerText || $(obj).text() || '').toLowerCase().indexOf(meta[3].toLowerCase()) !== -1\n\t\t);\n\t};\n\t$.fn.removeTextNode = function () {\n\t\t$(this)\n\t\t\t.contents()\n\t\t\t.filter(function () {\n\t\t\t\treturn this.nodeType == 3; //Node.TEXT_NODE\n\t\t\t})\n\t\t\t.remove();\n\t};\n\tbootbox.setLocale(CONFIG.langKey);\n})($);\n"], "filenames": ["app/Controller/View/Page.php", "config/version.php", "layouts/basic/modules/Users/Modals/PasswordModalFooter.tpl", "layouts/basic/modules/Vtiger/Index.tpl", "modules/Users/actions/Logout.php", "public_html/layouts/basic/modules/Vtiger/resources/List.js", "public_html/layouts/basic/modules/Vtiger/resources/RelatedList.js", "public_html/layouts/basic/modules/Vtiger/resources/Vtiger.js", "public_html/layouts/resources/Connector.js", "public_html/layouts/resources/app.js"], "buggy_code_start_loc": [178, 4, 3, 23, 41, 198, 89, 174, 149, 309], "buggy_code_end_loc": [258, 6, 29, 27, 49, 1525, 90, 175, 152, 3205], "fixing_code_start_loc": [178, 4, 3, 23, 40, 198, 89, 174, 149, 309], "fixing_code_end_loc": [258, 6, 29, 27, 40, 1525, 90, 175, 175, 3199], "type": "CWE-352", "message": "yetiforcecrm is vulnerable to Cross-Site Request Forgery (CSRF)", "other": {"cve": {"id": "CVE-2021-4092", "sourceIdentifier": "security@huntr.dev", "published": "2021-12-11T14:15:07.900", "lastModified": "2021-12-14T00:55:48.103", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "yetiforcecrm is vulnerable to Cross-Site Request Forgery (CSRF)"}, {"lang": "es", "value": "yetiforcecrm es vulnerable a un ataque de tipo Cross-Site Request Forgery (CSRF)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:yetiforce:yetiforce_customer_relationship_management:*:*:*:*:*:*:*:*", "versionEndExcluding": "6.3.0", "matchCriteriaId": "BA4FB254-9FF3-45E9-AD54-096B3B65F3D8"}]}]}], "references": [{"url": "https://github.com/yetiforcecompany/yetiforcecrm/commit/585da04bb72d36a894f6ea5939ab909e53fd8c23", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/7b58c160-bb62-45fe-ad1f-38354378b89e", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/yetiforcecompany/yetiforcecrm/commit/585da04bb72d36a894f6ea5939ab909e53fd8c23"}}