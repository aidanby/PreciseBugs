{"buggy_code": ["/*********************************************************************\n*  #### Twitter Post Fetcher v17.0.3 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals.\n    factory();\n  }\n}(this, function() {\n  var domNode = '';\n  var maxTweets = 20;\n  var parseLinks = true;\n  var queue = [];\n  var inProgress = false;\n  var printTime = true;\n  var printUser = true;\n  var formatterFunction = null;\n  var supportsClassName = true;\n  var showRts = true;\n  var customCallbackFunction = null;\n  var showInteractionLinks = true;\n  var showImages = false;\n  var useEmoji = false;\n  var targetBlank = true;\n  var lang = 'en';\n  var permalinks = true;\n  var dataOnly = false;\n  var script = null;\n  var scriptAdded = false;\n\n  function handleTweets(tweets){\n    if (customCallbackFunction === null) {\n      var x = tweets.length;\n      var n = 0;\n      var element = document.getElementById(domNode);\n      var html = '<ul>';\n      while(n < x) {\n        html += '<li>' + tweets[n] + '</li>';\n        n++;\n      }\n      html += '</ul>';\n      element.innerHTML = html;\n    } else {\n      customCallbackFunction(tweets);\n    }\n  }\n\n  function strip(data) {\n    return data.replace(/<b[^>]*>(.*?)<\\/b>/gi, function(a,s){return s;})\n        .replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,\n        '');\n  }\n\n  function targetLinksToNewWindow(el) {\n    var links = el.getElementsByTagName('a');\n    for (var i = links.length - 1; i >= 0; i--) {\n      links[i].setAttribute('target', '_blank');\n    }\n  }\n\n  function getElementsByClassName (node, classname) {\n    var a = [];\n    var regex = new RegExp('(^| )' + classname + '( |$)');\n    var elems = node.getElementsByTagName('*');\n    for (var i = 0, j = elems.length; i < j; i++) {\n        if(regex.test(elems[i].className)){\n          a.push(elems[i]);\n        }\n    }\n    return a;\n  }\n\n  function extractImageUrl(image_data) {\n    if (image_data !== undefined && image_data.innerHTML.indexOf('data-image') >= 0) {\n      var data_src = image_data.innerHTML.match(/data-image=\\\"([A-z0-9]+:\\/\\/[A-z0-9]+\\.[A-z0-9]+\\.[A-z0-9]+\\/[A-z0-9]+\\/[A-z0-9\\-]+)/i)[1];\n      return decodeURIComponent(data_src) + '.jpg';\n    }\n  }\n \n\n  var twitterFetcher = {\n    fetch: function(config) {\n      if (config.maxTweets === undefined) {\n        config.maxTweets = 20;\n      }\n      if (config.enableLinks === undefined) {\n        config.enableLinks = true;\n      }\n      if (config.showUser === undefined) {\n        config.showUser = true;\n      }\n      if (config.showTime === undefined) {\n        config.showTime = true;\n      }\n      if (config.dateFunction === undefined) {\n        config.dateFunction = 'default';\n      }\n      if (config.showRetweet === undefined) {\n        config.showRetweet = true;\n      }\n      if (config.customCallback === undefined) {\n        config.customCallback = null;\n      }\n      if (config.showInteraction === undefined) {\n        config.showInteraction = true;\n      }\n      if (config.showImages === undefined) {\n        config.showImages = false;\n      }\n      if (config.useEmoji === undefined) {\n        config.useEmoji = false;\n      }\n      if (config.linksInNewWindow === undefined) {\n        config.linksInNewWindow = true;\n      }\n      if (config.showPermalinks === undefined) {\n        config.showPermalinks = true;\n      }\n      if (config.dataOnly === undefined) {\n        config.dataOnly = false;\n      }\n\n      if (inProgress) {\n        queue.push(config);\n      } else {\n        inProgress = true;\n\n        domNode = config.domId;\n        maxTweets = config.maxTweets;\n        parseLinks = config.enableLinks;\n        printUser = config.showUser;\n        printTime = config.showTime;\n        showRts = config.showRetweet;\n        formatterFunction = config.dateFunction;\n        customCallbackFunction = config.customCallback;\n        showInteractionLinks = config.showInteraction;\n        showImages = config.showImages;\n\tuseEmoji = config.useEmoji;\n        targetBlank = config.linksInNewWindow;\n        permalinks = config.showPermalinks;\n        dataOnly = config.dataOnly;\n\n        var head = document.getElementsByTagName('head')[0];\n        if (script !== null) {\n          head.removeChild(script);\n        }\n        script = document.createElement('script');\n        script.type = 'text/javascript';\n        if (config.list !== undefined) {\n          script.src = 'https://syndication.twitter.com/timeline/list?' +\n              'callback=__twttrf.callback&dnt=false&list_slug=' +\n              config.list.listSlug + '&screen_name=' + config.list.screenName +\n              '&suppress_response_codes=true&lang=' + (config.lang || lang) +\n              '&rnd=' + Math.random();\n        } else if (config.profile !== undefined) {\n          script.src = 'https://syndication.twitter.com/timeline/profile?' +\n              'callback=__twttrf.callback&dnt=false' +\n              '&screen_name=' + config.profile.screenName +\n              '&suppress_response_codes=true&lang=' + (config.lang || lang) +\n              '&rnd=' + Math.random();\n        } else if (config.likes !== undefined) {\n          script.src = 'https://syndication.twitter.com/timeline/likes?' +\n              'callback=__twttrf.callback&dnt=false' +\n              '&screen_name=' + config.likes.screenName +\n              '&suppress_response_codes=true&lang=' + (config.lang || lang) +\n              '&rnd=' + Math.random();\n        } else {\n          script.src = 'https://cdn.syndication.twimg.com/widgets/timelines/' +\n              config.id + '?&lang=' + (config.lang || lang) +\n              '&callback=__twttrf.callback&' +\n              'suppress_response_codes=true&rnd=' + Math.random();\n        }\n        head.appendChild(script);\n      }\n    },\n    callback: function(data) {\n      if (data === undefined || data.body === undefined) {\n        inProgress = false;\n\n        if (queue.length > 0) {\n          twitterFetcher.fetch(queue[0]);\n          queue.splice(0,1);\n        }\n        return;\n      }\n\n      // Remove emoji and summary card images.\n      if(!useEmoji){\n        data.body = data.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g, '');\n      }\n\n      // Remove display images.\n      if (!showImages) {\n        data.body = data.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g, '');\n      }\n      // Remove avatar images.\n      if (!printUser) {\n        data.body = data.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g, '');\n      }\n\n      var div = document.createElement('div');\n      div.innerHTML = data.body;\n      if (typeof(div.getElementsByClassName) === 'undefined') {\n         supportsClassName = false;\n      }\n\n      function swapDataSrc(element) {\n        var avatarImg = element.getElementsByTagName('img')[0];\n        avatarImg.src = avatarImg.getAttribute('data-src-2x');\n        return element;\n      }\n\n      var tweets = [];\n      var authors = [];\n      var times = [];\n      var images = [];\n      var rts = [];\n      var tids = [];\n      var permalinksURL = [];\n      var x = 0;\n\n      if (supportsClassName) {\n        var tmp = div.getElementsByClassName('timeline-Tweet');\n        while (x < tmp.length) {\n          if (tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length > 0) {\n            rts.push(true);\n          } else {\n            rts.push(false);\n          }\n          if (!rts[x] || rts[x] && showRts) {\n            tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);\n            tids.push(tmp[x].getAttribute('data-tweet-id'));\n            if (printUser) {\n              authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));\n            }\n            times.push(tmp[x].getElementsByClassName('dt-updated')[0]);\n            permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);\n            if (tmp[x].getElementsByClassName('timeline-Tweet-media')[0] !==\n                undefined) {\n              images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);\n            } else {\n              images.push(undefined);\n            }\n          }\n          x++;\n        }\n      } else {\n        var tmp = getElementsByClassName(div, 'timeline-Tweet');\n        while (x < tmp.length) {\n          if (getElementsByClassName(tmp[x], 'timeline-Tweet-retweetCredit').length > 0) {\n            rts.push(true);\n          } else {\n            rts.push(false);\n          }\n          if (!rts[x] || rts[x] && showRts) {\n            tweets.push(getElementsByClassName(tmp[x], 'timeline-Tweet-text')[0]);\n            tids.push(tmp[x].getAttribute('data-tweet-id'));\n            if (printUser) {\n              authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));\n            }\n            times.push(getElementsByClassName(tmp[x], 'dt-updated')[0]);\n            permalinksURL.push(getElementsByClassName(tmp[x], 'timeline-Tweet-timestamp')[0]);\n            if (getElementsByClassName(tmp[x], 'timeline-Tweet-media')[0] !== undefined) {\n              images.push(getElementsByClassName(tmp[x], 'timeline-Tweet-media')[0]);\n            } else {\n              images.push(undefined);\n            }\n          }\n          x++;\n        }\n      }\n\n      if (tweets.length > maxTweets) {\n        tweets.splice(maxTweets, (tweets.length - maxTweets));\n        authors.splice(maxTweets, (authors.length - maxTweets));\n        times.splice(maxTweets, (times.length - maxTweets));\n        rts.splice(maxTweets, (rts.length - maxTweets));\n        images.splice(maxTweets, (images.length - maxTweets));\n        permalinksURL.splice(maxTweets, (permalinksURL.length - maxTweets));\n      }\n\n      var arrayTweets = [];\n      var x = tweets.length;\n      var n = 0;\n      if (dataOnly) {\n        while (n < x) {\n          arrayTweets.push({\n            tweet: tweets[n].innerHTML,\n            author: authors[n] ? authors[n].innerHTML : 'Unknown Author',\n            author_data: {\n              profile_url: authors[n] ? authors[n].querySelector('[data-scribe=\"element:user_link\"]').href : null,\n              profile_image: authors[n] ? authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-1x') : null,\n              profile_image_2x: authors[n] ? authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-2x') : null,\n              screen_name: authors[n] ? authors[n].querySelector('[data-scribe=\"element:screen_name\"]').title : null,\n              name: authors[n] ? authors[n].querySelector('[data-scribe=\"element:name\"]').title : null\n            },\n            time: times[n].textContent,\n            timestamp: times[n].getAttribute('datetime').replace('+0000', 'Z').replace(/([\\+\\-])(\\d\\d)(\\d\\d)/, '$1$2:$3'),\n            image: extractImageUrl(images[n]),\n            rt: rts[n],\n            tid: tids[n],\n            permalinkURL: (permalinksURL[n] === undefined) ?\n                '' : permalinksURL[n].href\n          });\n          n++;\n        }\n      } else {\n        while (n < x) {\n          if (typeof(formatterFunction) !== 'string') {\n            var datetimeText = times[n].getAttribute('datetime');\n            var newDate = new Date(times[n].getAttribute('datetime')\n                .replace(/-/g,'/').replace('T', ' ').split('+')[0]);\n            var dateString = formatterFunction(newDate, datetimeText);\n            times[n].setAttribute('aria-label', dateString);\n\n            if (tweets[n].textContent) {\n              // IE hack.\n              if (supportsClassName) {\n                times[n].textContent = dateString;\n              } else {\n                var h = document.createElement('p');\n                var t = document.createTextNode(dateString);\n                h.appendChild(t);\n                h.setAttribute('aria-label', dateString);\n                times[n] = h;\n              }\n            } else {\n              times[n].textContent = dateString;\n            }\n          }\n          var op = '';\n          if (parseLinks) {\n            if (targetBlank) {\n              targetLinksToNewWindow(tweets[n]);\n              if (printUser) {\n                targetLinksToNewWindow(authors[n]);\n              }\n            }\n            if (printUser) {\n              op += '<div class=\"user\">' + strip(authors[n].innerHTML) +\n                  '</div>';\n            }\n            op += '<p class=\"tweet\">' + strip(tweets[n].innerHTML) + '</p>';\n            if (printTime) {\n              if (permalinks) {\n                op += '<p class=\"timePosted\"><a href=\"' + permalinksURL[n] +\n                   '\">' + times[n].getAttribute('aria-label') + '</a></p>';\n              } else {\n                op += '<p class=\"timePosted\">' +\n                    times[n].getAttribute('aria-label') + '</p>';\n              }\n            }\n          } else {\n            if (tweets[n].textContent) {\n              if (printUser) {\n                op += '<p class=\"user\">' + authors[n].textContent + '</p>';\n              }\n              op += '<p class=\"tweet\">' +  tweets[n].textContent + '</p>';\n              if (printTime) {\n                op += '<p class=\"timePosted\">' + times[n].textContent + '</p>';\n              }\n\n            } else {\n              if (printUser) {\n                op += '<p class=\"user\">' + authors[n].textContent + '</p>';\n              }\n              op += '<p class=\"tweet\">' +  tweets[n].textContent + '</p>';\n              if (printTime) {\n                op += '<p class=\"timePosted\">' + times[n].textContent + '</p>';\n              }\n            }\n          }\n          if (showInteractionLinks) {\n            op += '<p class=\"interact\"><a href=\"https://twitter.com/intent/' +\n                'tweet?in_reply_to=' + tids[n] +\n                '\" class=\"twitter_reply_icon\"' +\n                (targetBlank ? ' target=\"_blank\">' : '>') +\n                'Reply</a><a href=\"https://twitter.com/intent/retweet?' +\n                'tweet_id=' + tids[n] + '\" class=\"twitter_retweet_icon\"' +\n                (targetBlank ? ' target=\"_blank\">' : '>') + 'Retweet</a>' +\n                '<a href=\"https://twitter.com/intent/favorite?tweet_id=' +\n                tids[n] + '\" class=\"twitter_fav_icon\"' +\n                (targetBlank ? ' target=\"_blank\">' : '>') + 'Favorite</a></p>';\n          }\n          if (showImages && images[n] !== undefined && extractImageUrl(images[n]) !== undefined) {\n            op += '<div class=\"media\">' +\n                '<img src=\"' + extractImageUrl(images[n]) +\n                '\" alt=\"Image from tweet\" />' + '</div>';\n          }\n          if (showImages) {\n            arrayTweets.push(op);\n          } else if (!showImages && tweets[n].textContent.length) {\n            arrayTweets.push(op);\n          }\n\n          n++;\n        }\n      }\n\n      handleTweets(arrayTweets);\n      inProgress = false;\n\n      if (queue.length > 0) {\n        twitterFetcher.fetch(queue[0]);\n        queue.splice(0,1);\n      }\n    }\n  };\n\n  // It must be a global variable because it will be called by JSONP.\n  window.__twttrf = twitterFetcher;\n  window.twitterFetcher = twitterFetcher;\n  return twitterFetcher;\n}));\n\n", "/*********************************************************************\n*  #### Twitter Post Fetcher v17.0.3 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n(function(root,factory){if(typeof define==='function'&&define.amd){define([],factory);}else if(typeof exports==='object'){module.exports=factory();}else{factory();}}(this,function(){var domNode='';var maxTweets=20;var parseLinks=true;var queue=[];var inProgress=false;var printTime=true;var printUser=true;var formatterFunction=null;var supportsClassName=true;var showRts=true;var customCallbackFunction=null;var showInteractionLinks=true;var showImages=false;var useEmoji=false;var targetBlank=true;var lang='en';var permalinks=true;var dataOnly=false;var script=null;var scriptAdded=false;function handleTweets(tweets){if(customCallbackFunction===null){var x=tweets.length;var n=0;var element=document.getElementById(domNode);var html='<ul>';while(n<x){html+='<li>'+tweets[n]+'</li>';n++;}\nhtml+='</ul>';element.innerHTML=html;}else{customCallbackFunction(tweets);}}\nfunction strip(data){return data.replace(/<b[^>]*>(.*?)<\\/b>/gi,function(a,s){return s;}).replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,'');}\nfunction targetLinksToNewWindow(el){var links=el.getElementsByTagName('a');for(var i=links.length-1;i>=0;i--){links[i].setAttribute('target','_blank');}}\nfunction getElementsByClassName(node,classname){var a=[];var regex=new RegExp('(^| )'+classname+'( |$)');var elems=node.getElementsByTagName('*');for(var i=0,j=elems.length;i<j;i++){if(regex.test(elems[i].className)){a.push(elems[i]);}}\nreturn a;}\nfunction extractImageUrl(image_data){if(image_data!==undefined&&image_data.innerHTML.indexOf('data-image')>=0){var data_src=image_data.innerHTML.match(/data-image=\\\"([A-z0-9]+:\\/\\/[A-z0-9]+\\.[A-z0-9]+\\.[A-z0-9]+\\/[A-z0-9]+\\/[A-z0-9\\-]+)/i)[1];return decodeURIComponent(data_src)+'.jpg';}}\nvar twitterFetcher={fetch:function(config){if(config.maxTweets===undefined){config.maxTweets=20;}\nif(config.enableLinks===undefined){config.enableLinks=true;}\nif(config.showUser===undefined){config.showUser=true;}\nif(config.showTime===undefined){config.showTime=true;}\nif(config.dateFunction===undefined){config.dateFunction='default';}\nif(config.showRetweet===undefined){config.showRetweet=true;}\nif(config.customCallback===undefined){config.customCallback=null;}\nif(config.showInteraction===undefined){config.showInteraction=true;}\nif(config.showImages===undefined){config.showImages=false;}\nif(config.useEmoji===undefined){config.useEmoji=false;}\nif(config.linksInNewWindow===undefined){config.linksInNewWindow=true;}\nif(config.showPermalinks===undefined){config.showPermalinks=true;}\nif(config.dataOnly===undefined){config.dataOnly=false;}\nif(inProgress){queue.push(config);}else{inProgress=true;domNode=config.domId;maxTweets=config.maxTweets;parseLinks=config.enableLinks;printUser=config.showUser;printTime=config.showTime;showRts=config.showRetweet;formatterFunction=config.dateFunction;customCallbackFunction=config.customCallback;showInteractionLinks=config.showInteraction;showImages=config.showImages;useEmoji=config.useEmoji;targetBlank=config.linksInNewWindow;permalinks=config.showPermalinks;dataOnly=config.dataOnly;var head=document.getElementsByTagName('head')[0];if(script!==null){head.removeChild(script);}\nscript=document.createElement('script');script.type='text/javascript';if(config.list!==undefined){script.src='https://syndication.twitter.com/timeline/list?'+'callback=__twttrf.callback&dnt=false&list_slug='+\nconfig.list.listSlug+'&screen_name='+config.list.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.profile!==undefined){script.src='https://syndication.twitter.com/timeline/profile?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.profile.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.likes!==undefined){script.src='https://syndication.twitter.com/timeline/likes?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.likes.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else{script.src='https://cdn.syndication.twimg.com/widgets/timelines/'+\nconfig.id+'?&lang='+(config.lang||lang)+'&callback=__twttrf.callback&'+'suppress_response_codes=true&rnd='+Math.random();}\nhead.appendChild(script);}},callback:function(data){if(data===undefined||data.body===undefined){inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}\nreturn;}\nif(!useEmoji){data.body=data.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g,'');}\nif(!showImages){data.body=data.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g,'');}\nif(!printUser){data.body=data.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g,'');}\nvar div=document.createElement('div');div.innerHTML=data.body;if(typeof(div.getElementsByClassName)==='undefined'){supportsClassName=false;}\nfunction swapDataSrc(element){var avatarImg=element.getElementsByTagName('img')[0];avatarImg.src=avatarImg.getAttribute('data-src-2x');return element;}\nvar tweets=[];var authors=[];var times=[];var images=[];var rts=[];var tids=[];var permalinksURL=[];var x=0;if(supportsClassName){var tmp=div.getElementsByClassName('timeline-Tweet');while(x<tmp.length){if(tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));}\ntimes.push(tmp[x].getElementsByClassName('dt-updated')[0]);permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);if(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]!==undefined){images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}else{var tmp=getElementsByClassName(div,'timeline-Tweet');while(x<tmp.length){if(getElementsByClassName(tmp[x],'timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(getElementsByClassName(tmp[x],'timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));}\ntimes.push(getElementsByClassName(tmp[x],'dt-updated')[0]);permalinksURL.push(getElementsByClassName(tmp[x],'timeline-Tweet-timestamp')[0]);if(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]!==undefined){images.push(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}\nif(tweets.length>maxTweets){tweets.splice(maxTweets,(tweets.length-maxTweets));authors.splice(maxTweets,(authors.length-maxTweets));times.splice(maxTweets,(times.length-maxTweets));rts.splice(maxTweets,(rts.length-maxTweets));images.splice(maxTweets,(images.length-maxTweets));permalinksURL.splice(maxTweets,(permalinksURL.length-maxTweets));}\nvar arrayTweets=[];var x=tweets.length;var n=0;if(dataOnly){while(n<x){arrayTweets.push({tweet:tweets[n].innerHTML,author:authors[n]?authors[n].innerHTML:'Unknown Author',author_data:{profile_url:authors[n]?authors[n].querySelector('[data-scribe=\"element:user_link\"]').href:null,profile_image:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-1x'):null,profile_image_2x:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-2x'):null,screen_name:authors[n]?authors[n].querySelector('[data-scribe=\"element:screen_name\"]').title:null,name:authors[n]?authors[n].querySelector('[data-scribe=\"element:name\"]').title:null},time:times[n].textContent,timestamp:times[n].getAttribute('datetime').replace('+0000','Z').replace(/([\\+\\-])(\\d\\d)(\\d\\d)/,'$1$2:$3'),image:extractImageUrl(images[n]),rt:rts[n],tid:tids[n],permalinkURL:(permalinksURL[n]===undefined)?'':permalinksURL[n].href});n++;}}else{while(n<x){if(typeof(formatterFunction)!=='string'){var datetimeText=times[n].getAttribute('datetime');var newDate=new Date(times[n].getAttribute('datetime').replace(/-/g,'/').replace('T',' ').split('+')[0]);var dateString=formatterFunction(newDate,datetimeText);times[n].setAttribute('aria-label',dateString);if(tweets[n].textContent){if(supportsClassName){times[n].textContent=dateString;}else{var h=document.createElement('p');var t=document.createTextNode(dateString);h.appendChild(t);h.setAttribute('aria-label',dateString);times[n]=h;}}else{times[n].textContent=dateString;}}\nvar op='';if(parseLinks){if(targetBlank){targetLinksToNewWindow(tweets[n]);if(printUser){targetLinksToNewWindow(authors[n]);}}\nif(printUser){op+='<div class=\"user\">'+strip(authors[n].innerHTML)+'</div>';}\nop+='<p class=\"tweet\">'+strip(tweets[n].innerHTML)+'</p>';if(printTime){if(permalinks){op+='<p class=\"timePosted\"><a href=\"'+permalinksURL[n]+'\">'+times[n].getAttribute('aria-label')+'</a></p>';}else{op+='<p class=\"timePosted\">'+\ntimes[n].getAttribute('aria-label')+'</p>';}}}else{if(tweets[n].textContent){if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}else{if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}}\nif(showInteractionLinks){op+='<p class=\"interact\"><a href=\"https://twitter.com/intent/'+'tweet?in_reply_to='+tids[n]+'\" class=\"twitter_reply_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Reply</a><a href=\"https://twitter.com/intent/retweet?'+'tweet_id='+tids[n]+'\" class=\"twitter_retweet_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Retweet</a>'+'<a href=\"https://twitter.com/intent/favorite?tweet_id='+\ntids[n]+'\" class=\"twitter_fav_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Favorite</a></p>';}\nif(showImages&&images[n]!==undefined&&extractImageUrl(images[n])!==undefined){op+='<div class=\"media\">'+'<img src=\"'+extractImageUrl(images[n])+'\" alt=\"Image from tweet\" />'+'</div>';}\nif(showImages){arrayTweets.push(op);}else if(!showImages&&tweets[n].textContent.length){arrayTweets.push(op);}\nn++;}}\nhandleTweets(arrayTweets);inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}}};window.__twttrf=twitterFetcher;window.twitterFetcher=twitterFetcher;return twitterFetcher;}));"], "fixing_code": ["/*********************************************************************\n*  #### Twitter Post Fetcher v17.0.3 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals.\n    factory();\n  }\n}(this, function() {\n  var domNode = '';\n  var maxTweets = 20;\n  var parseLinks = true;\n  var queue = [];\n  var inProgress = false;\n  var printTime = true;\n  var printUser = true;\n  var formatterFunction = null;\n  var supportsClassName = true;\n  var showRts = true;\n  var customCallbackFunction = null;\n  var showInteractionLinks = true;\n  var showImages = false;\n  var useEmoji = false;\n  var targetBlank = true;\n  var lang = 'en';\n  var permalinks = true;\n  var dataOnly = false;\n  var script = null;\n  var scriptAdded = false;\n\n  function handleTweets(tweets){\n    if (customCallbackFunction === null) {\n      var x = tweets.length;\n      var n = 0;\n      var element = document.getElementById(domNode);\n      var html = '<ul>';\n      while(n < x) {\n        html += '<li>' + tweets[n] + '</li>';\n        n++;\n      }\n      html += '</ul>';\n      element.innerHTML = html;\n    } else {\n      customCallbackFunction(tweets);\n    }\n  }\n\n  function strip(data) {\n    return data.replace(/<b[^>]*>(.*?)<\\/b>/gi, function(a,s){return s;})\n        .replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,\n        '');\n  }\n\n  function targetLinksToNewWindow(el) {\n    var links = el.getElementsByTagName('a');\n    for (var i = links.length - 1; i >= 0; i--) {\n      links[i].setAttribute('target', '_blank');\n      links[i].setAttribute('rel', 'noopener');\n    }\n  }\n\n  function getElementsByClassName (node, classname) {\n    var a = [];\n    var regex = new RegExp('(^| )' + classname + '( |$)');\n    var elems = node.getElementsByTagName('*');\n    for (var i = 0, j = elems.length; i < j; i++) {\n        if(regex.test(elems[i].className)){\n          a.push(elems[i]);\n        }\n    }\n    return a;\n  }\n\n  function extractImageUrl(image_data) {\n    if (image_data !== undefined && image_data.innerHTML.indexOf('data-image') >= 0) {\n      var data_src = image_data.innerHTML.match(/data-image=\\\"([A-z0-9]+:\\/\\/[A-z0-9]+\\.[A-z0-9]+\\.[A-z0-9]+\\/[A-z0-9]+\\/[A-z0-9\\-]+)/i)[1];\n      return decodeURIComponent(data_src) + '.jpg';\n    }\n  }\n \n\n  var twitterFetcher = {\n    fetch: function(config) {\n      if (config.maxTweets === undefined) {\n        config.maxTweets = 20;\n      }\n      if (config.enableLinks === undefined) {\n        config.enableLinks = true;\n      }\n      if (config.showUser === undefined) {\n        config.showUser = true;\n      }\n      if (config.showTime === undefined) {\n        config.showTime = true;\n      }\n      if (config.dateFunction === undefined) {\n        config.dateFunction = 'default';\n      }\n      if (config.showRetweet === undefined) {\n        config.showRetweet = true;\n      }\n      if (config.customCallback === undefined) {\n        config.customCallback = null;\n      }\n      if (config.showInteraction === undefined) {\n        config.showInteraction = true;\n      }\n      if (config.showImages === undefined) {\n        config.showImages = false;\n      }\n      if (config.useEmoji === undefined) {\n        config.useEmoji = false;\n      }\n      if (config.linksInNewWindow === undefined) {\n        config.linksInNewWindow = true;\n      }\n      if (config.showPermalinks === undefined) {\n        config.showPermalinks = true;\n      }\n      if (config.dataOnly === undefined) {\n        config.dataOnly = false;\n      }\n\n      if (inProgress) {\n        queue.push(config);\n      } else {\n        inProgress = true;\n\n        domNode = config.domId;\n        maxTweets = config.maxTweets;\n        parseLinks = config.enableLinks;\n        printUser = config.showUser;\n        printTime = config.showTime;\n        showRts = config.showRetweet;\n        formatterFunction = config.dateFunction;\n        customCallbackFunction = config.customCallback;\n        showInteractionLinks = config.showInteraction;\n        showImages = config.showImages;\n\tuseEmoji = config.useEmoji;\n        targetBlank = config.linksInNewWindow;\n        permalinks = config.showPermalinks;\n        dataOnly = config.dataOnly;\n\n        var head = document.getElementsByTagName('head')[0];\n        if (script !== null) {\n          head.removeChild(script);\n        }\n        script = document.createElement('script');\n        script.type = 'text/javascript';\n        if (config.list !== undefined) {\n          script.src = 'https://syndication.twitter.com/timeline/list?' +\n              'callback=__twttrf.callback&dnt=false&list_slug=' +\n              config.list.listSlug + '&screen_name=' + config.list.screenName +\n              '&suppress_response_codes=true&lang=' + (config.lang || lang) +\n              '&rnd=' + Math.random();\n        } else if (config.profile !== undefined) {\n          script.src = 'https://syndication.twitter.com/timeline/profile?' +\n              'callback=__twttrf.callback&dnt=false' +\n              '&screen_name=' + config.profile.screenName +\n              '&suppress_response_codes=true&lang=' + (config.lang || lang) +\n              '&rnd=' + Math.random();\n        } else if (config.likes !== undefined) {\n          script.src = 'https://syndication.twitter.com/timeline/likes?' +\n              'callback=__twttrf.callback&dnt=false' +\n              '&screen_name=' + config.likes.screenName +\n              '&suppress_response_codes=true&lang=' + (config.lang || lang) +\n              '&rnd=' + Math.random();\n        } else {\n          script.src = 'https://cdn.syndication.twimg.com/widgets/timelines/' +\n              config.id + '?&lang=' + (config.lang || lang) +\n              '&callback=__twttrf.callback&' +\n              'suppress_response_codes=true&rnd=' + Math.random();\n        }\n        head.appendChild(script);\n      }\n    },\n    callback: function(data) {\n      if (data === undefined || data.body === undefined) {\n        inProgress = false;\n\n        if (queue.length > 0) {\n          twitterFetcher.fetch(queue[0]);\n          queue.splice(0,1);\n        }\n        return;\n      }\n\n      // Remove emoji and summary card images.\n      if(!useEmoji){\n        data.body = data.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g, '');\n      }\n\n      // Remove display images.\n      if (!showImages) {\n        data.body = data.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g, '');\n      }\n      // Remove avatar images.\n      if (!printUser) {\n        data.body = data.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g, '');\n      }\n\n      var div = document.createElement('div');\n      div.innerHTML = data.body;\n      if (typeof(div.getElementsByClassName) === 'undefined') {\n         supportsClassName = false;\n      }\n\n      function swapDataSrc(element) {\n        var avatarImg = element.getElementsByTagName('img')[0];\n        avatarImg.src = avatarImg.getAttribute('data-src-2x');\n        return element;\n      }\n\n      var tweets = [];\n      var authors = [];\n      var times = [];\n      var images = [];\n      var rts = [];\n      var tids = [];\n      var permalinksURL = [];\n      var x = 0;\n\n      if (supportsClassName) {\n        var tmp = div.getElementsByClassName('timeline-Tweet');\n        while (x < tmp.length) {\n          if (tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length > 0) {\n            rts.push(true);\n          } else {\n            rts.push(false);\n          }\n          if (!rts[x] || rts[x] && showRts) {\n            tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);\n            tids.push(tmp[x].getAttribute('data-tweet-id'));\n            if (printUser) {\n              authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));\n            }\n            times.push(tmp[x].getElementsByClassName('dt-updated')[0]);\n            permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);\n            if (tmp[x].getElementsByClassName('timeline-Tweet-media')[0] !==\n                undefined) {\n              images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);\n            } else {\n              images.push(undefined);\n            }\n          }\n          x++;\n        }\n      } else {\n        var tmp = getElementsByClassName(div, 'timeline-Tweet');\n        while (x < tmp.length) {\n          if (getElementsByClassName(tmp[x], 'timeline-Tweet-retweetCredit').length > 0) {\n            rts.push(true);\n          } else {\n            rts.push(false);\n          }\n          if (!rts[x] || rts[x] && showRts) {\n            tweets.push(getElementsByClassName(tmp[x], 'timeline-Tweet-text')[0]);\n            tids.push(tmp[x].getAttribute('data-tweet-id'));\n            if (printUser) {\n              authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));\n            }\n            times.push(getElementsByClassName(tmp[x], 'dt-updated')[0]);\n            permalinksURL.push(getElementsByClassName(tmp[x], 'timeline-Tweet-timestamp')[0]);\n            if (getElementsByClassName(tmp[x], 'timeline-Tweet-media')[0] !== undefined) {\n              images.push(getElementsByClassName(tmp[x], 'timeline-Tweet-media')[0]);\n            } else {\n              images.push(undefined);\n            }\n          }\n          x++;\n        }\n      }\n\n      if (tweets.length > maxTweets) {\n        tweets.splice(maxTweets, (tweets.length - maxTweets));\n        authors.splice(maxTweets, (authors.length - maxTweets));\n        times.splice(maxTweets, (times.length - maxTweets));\n        rts.splice(maxTweets, (rts.length - maxTweets));\n        images.splice(maxTweets, (images.length - maxTweets));\n        permalinksURL.splice(maxTweets, (permalinksURL.length - maxTweets));\n      }\n\n      var arrayTweets = [];\n      var x = tweets.length;\n      var n = 0;\n      if (dataOnly) {\n        while (n < x) {\n          arrayTweets.push({\n            tweet: tweets[n].innerHTML,\n            author: authors[n] ? authors[n].innerHTML : 'Unknown Author',\n            author_data: {\n              profile_url: authors[n] ? authors[n].querySelector('[data-scribe=\"element:user_link\"]').href : null,\n              profile_image: authors[n] ? authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-1x') : null,\n              profile_image_2x: authors[n] ? authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-2x') : null,\n              screen_name: authors[n] ? authors[n].querySelector('[data-scribe=\"element:screen_name\"]').title : null,\n              name: authors[n] ? authors[n].querySelector('[data-scribe=\"element:name\"]').title : null\n            },\n            time: times[n].textContent,\n            timestamp: times[n].getAttribute('datetime').replace('+0000', 'Z').replace(/([\\+\\-])(\\d\\d)(\\d\\d)/, '$1$2:$3'),\n            image: extractImageUrl(images[n]),\n            rt: rts[n],\n            tid: tids[n],\n            permalinkURL: (permalinksURL[n] === undefined) ?\n                '' : permalinksURL[n].href\n          });\n          n++;\n        }\n      } else {\n        while (n < x) {\n          if (typeof(formatterFunction) !== 'string') {\n            var datetimeText = times[n].getAttribute('datetime');\n            var newDate = new Date(times[n].getAttribute('datetime')\n                .replace(/-/g,'/').replace('T', ' ').split('+')[0]);\n            var dateString = formatterFunction(newDate, datetimeText);\n            times[n].setAttribute('aria-label', dateString);\n\n            if (tweets[n].textContent) {\n              // IE hack.\n              if (supportsClassName) {\n                times[n].textContent = dateString;\n              } else {\n                var h = document.createElement('p');\n                var t = document.createTextNode(dateString);\n                h.appendChild(t);\n                h.setAttribute('aria-label', dateString);\n                times[n] = h;\n              }\n            } else {\n              times[n].textContent = dateString;\n            }\n          }\n          var op = '';\n          if (parseLinks) {\n            if (targetBlank) {\n              targetLinksToNewWindow(tweets[n]);\n              if (printUser) {\n                targetLinksToNewWindow(authors[n]);\n              }\n            }\n            if (printUser) {\n              op += '<div class=\"user\">' + strip(authors[n].innerHTML) +\n                  '</div>';\n            }\n            op += '<p class=\"tweet\">' + strip(tweets[n].innerHTML) + '</p>';\n            if (printTime) {\n              if (permalinks) {\n                op += '<p class=\"timePosted\"><a href=\"' + permalinksURL[n] +\n                   '\">' + times[n].getAttribute('aria-label') + '</a></p>';\n              } else {\n                op += '<p class=\"timePosted\">' +\n                    times[n].getAttribute('aria-label') + '</p>';\n              }\n            }\n          } else {\n            if (tweets[n].textContent) {\n              if (printUser) {\n                op += '<p class=\"user\">' + authors[n].textContent + '</p>';\n              }\n              op += '<p class=\"tweet\">' +  tweets[n].textContent + '</p>';\n              if (printTime) {\n                op += '<p class=\"timePosted\">' + times[n].textContent + '</p>';\n              }\n\n            } else {\n              if (printUser) {\n                op += '<p class=\"user\">' + authors[n].textContent + '</p>';\n              }\n              op += '<p class=\"tweet\">' +  tweets[n].textContent + '</p>';\n              if (printTime) {\n                op += '<p class=\"timePosted\">' + times[n].textContent + '</p>';\n              }\n            }\n          }\n          if (showInteractionLinks) {\n            op += '<p class=\"interact\"><a href=\"https://twitter.com/intent/' +\n                'tweet?in_reply_to=' + tids[n] +\n                '\" class=\"twitter_reply_icon\"' +\n                (targetBlank ? ' target=\"_blank\" rel=\"noopener\">' : '>') +\n                'Reply</a><a href=\"https://twitter.com/intent/retweet?' +\n                'tweet_id=' + tids[n] + '\" class=\"twitter_retweet_icon\"' +\n                (targetBlank ? ' target=\"_blank\" rel=\"noopener\">' : '>') + 'Retweet</a>' +\n                '<a href=\"https://twitter.com/intent/favorite?tweet_id=' +\n                tids[n] + '\" class=\"twitter_fav_icon\"' +\n                (targetBlank ? ' target=\"_blank\" rel=\"noopener\">' : '>') + 'Favorite</a></p>';\n          }\n          if (showImages && images[n] !== undefined && extractImageUrl(images[n]) !== undefined) {\n            op += '<div class=\"media\">' +\n                '<img src=\"' + extractImageUrl(images[n]) +\n                '\" alt=\"Image from tweet\" />' + '</div>';\n          }\n          if (showImages) {\n            arrayTweets.push(op);\n          } else if (!showImages && tweets[n].textContent.length) {\n            arrayTweets.push(op);\n          }\n\n          n++;\n        }\n      }\n\n      handleTweets(arrayTweets);\n      inProgress = false;\n\n      if (queue.length > 0) {\n        twitterFetcher.fetch(queue[0]);\n        queue.splice(0,1);\n      }\n    }\n  };\n\n  // It must be a global variable because it will be called by JSONP.\n  window.__twttrf = twitterFetcher;\n  window.twitterFetcher = twitterFetcher;\n  return twitterFetcher;\n}));\n\n", "/*********************************************************************\n*  #### Twitter Post Fetcher v17.0.3 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n(function(root,factory){if(typeof define==='function'&&define.amd){define([],factory);}else if(typeof exports==='object'){module.exports=factory();}else{factory();}}(this,function(){var domNode='';var maxTweets=20;var parseLinks=true;var queue=[];var inProgress=false;var printTime=true;var printUser=true;var formatterFunction=null;var supportsClassName=true;var showRts=true;var customCallbackFunction=null;var showInteractionLinks=true;var showImages=false;var useEmoji=false;var targetBlank=true;var lang='en';var permalinks=true;var dataOnly=false;var script=null;var scriptAdded=false;function handleTweets(tweets){if(customCallbackFunction===null){var x=tweets.length;var n=0;var element=document.getElementById(domNode);var html='<ul>';while(n<x){html+='<li>'+tweets[n]+'</li>';n++;}\nhtml+='</ul>';element.innerHTML=html;}else{customCallbackFunction(tweets);}}\nfunction strip(data){return data.replace(/<b[^>]*>(.*?)<\\/b>/gi,function(a,s){return s;}).replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,'');}\nfunction targetLinksToNewWindow(el){var links=el.getElementsByTagName('a');for(var i=links.length-1;i>=0;i--){links[i].setAttribute('target','_blank');links[i].setAttribute('rel','noopener');}}\nfunction getElementsByClassName(node,classname){var a=[];var regex=new RegExp('(^| )'+classname+'( |$)');var elems=node.getElementsByTagName('*');for(var i=0,j=elems.length;i<j;i++){if(regex.test(elems[i].className)){a.push(elems[i]);}}\nreturn a;}\nfunction extractImageUrl(image_data){if(image_data!==undefined&&image_data.innerHTML.indexOf('data-image')>=0){var data_src=image_data.innerHTML.match(/data-image=\\\"([A-z0-9]+:\\/\\/[A-z0-9]+\\.[A-z0-9]+\\.[A-z0-9]+\\/[A-z0-9]+\\/[A-z0-9\\-]+)/i)[1];return decodeURIComponent(data_src)+'.jpg';}}\nvar twitterFetcher={fetch:function(config){if(config.maxTweets===undefined){config.maxTweets=20;}\nif(config.enableLinks===undefined){config.enableLinks=true;}\nif(config.showUser===undefined){config.showUser=true;}\nif(config.showTime===undefined){config.showTime=true;}\nif(config.dateFunction===undefined){config.dateFunction='default';}\nif(config.showRetweet===undefined){config.showRetweet=true;}\nif(config.customCallback===undefined){config.customCallback=null;}\nif(config.showInteraction===undefined){config.showInteraction=true;}\nif(config.showImages===undefined){config.showImages=false;}\nif(config.useEmoji===undefined){config.useEmoji=false;}\nif(config.linksInNewWindow===undefined){config.linksInNewWindow=true;}\nif(config.showPermalinks===undefined){config.showPermalinks=true;}\nif(config.dataOnly===undefined){config.dataOnly=false;}\nif(inProgress){queue.push(config);}else{inProgress=true;domNode=config.domId;maxTweets=config.maxTweets;parseLinks=config.enableLinks;printUser=config.showUser;printTime=config.showTime;showRts=config.showRetweet;formatterFunction=config.dateFunction;customCallbackFunction=config.customCallback;showInteractionLinks=config.showInteraction;showImages=config.showImages;useEmoji=config.useEmoji;targetBlank=config.linksInNewWindow;permalinks=config.showPermalinks;dataOnly=config.dataOnly;var head=document.getElementsByTagName('head')[0];if(script!==null){head.removeChild(script);}\nscript=document.createElement('script');script.type='text/javascript';if(config.list!==undefined){script.src='https://syndication.twitter.com/timeline/list?'+'callback=__twttrf.callback&dnt=false&list_slug='+\nconfig.list.listSlug+'&screen_name='+config.list.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.profile!==undefined){script.src='https://syndication.twitter.com/timeline/profile?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.profile.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.likes!==undefined){script.src='https://syndication.twitter.com/timeline/likes?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.likes.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else{script.src='https://cdn.syndication.twimg.com/widgets/timelines/'+\nconfig.id+'?&lang='+(config.lang||lang)+'&callback=__twttrf.callback&'+'suppress_response_codes=true&rnd='+Math.random();}\nhead.appendChild(script);}},callback:function(data){if(data===undefined||data.body===undefined){inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}\nreturn;}\nif(!useEmoji){data.body=data.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g,'');}\nif(!showImages){data.body=data.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g,'');}\nif(!printUser){data.body=data.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g,'');}\nvar div=document.createElement('div');div.innerHTML=data.body;if(typeof(div.getElementsByClassName)==='undefined'){supportsClassName=false;}\nfunction swapDataSrc(element){var avatarImg=element.getElementsByTagName('img')[0];avatarImg.src=avatarImg.getAttribute('data-src-2x');return element;}\nvar tweets=[];var authors=[];var times=[];var images=[];var rts=[];var tids=[];var permalinksURL=[];var x=0;if(supportsClassName){var tmp=div.getElementsByClassName('timeline-Tweet');while(x<tmp.length){if(tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));}\ntimes.push(tmp[x].getElementsByClassName('dt-updated')[0]);permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);if(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]!==undefined){images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}else{var tmp=getElementsByClassName(div,'timeline-Tweet');while(x<tmp.length){if(getElementsByClassName(tmp[x],'timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(getElementsByClassName(tmp[x],'timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));}\ntimes.push(getElementsByClassName(tmp[x],'dt-updated')[0]);permalinksURL.push(getElementsByClassName(tmp[x],'timeline-Tweet-timestamp')[0]);if(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]!==undefined){images.push(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}\nif(tweets.length>maxTweets){tweets.splice(maxTweets,(tweets.length-maxTweets));authors.splice(maxTweets,(authors.length-maxTweets));times.splice(maxTweets,(times.length-maxTweets));rts.splice(maxTweets,(rts.length-maxTweets));images.splice(maxTweets,(images.length-maxTweets));permalinksURL.splice(maxTweets,(permalinksURL.length-maxTweets));}\nvar arrayTweets=[];var x=tweets.length;var n=0;if(dataOnly){while(n<x){arrayTweets.push({tweet:tweets[n].innerHTML,author:authors[n]?authors[n].innerHTML:'Unknown Author',author_data:{profile_url:authors[n]?authors[n].querySelector('[data-scribe=\"element:user_link\"]').href:null,profile_image:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-1x'):null,profile_image_2x:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-2x'):null,screen_name:authors[n]?authors[n].querySelector('[data-scribe=\"element:screen_name\"]').title:null,name:authors[n]?authors[n].querySelector('[data-scribe=\"element:name\"]').title:null},time:times[n].textContent,timestamp:times[n].getAttribute('datetime').replace('+0000','Z').replace(/([\\+\\-])(\\d\\d)(\\d\\d)/,'$1$2:$3'),image:extractImageUrl(images[n]),rt:rts[n],tid:tids[n],permalinkURL:(permalinksURL[n]===undefined)?'':permalinksURL[n].href});n++;}}else{while(n<x){if(typeof(formatterFunction)!=='string'){var datetimeText=times[n].getAttribute('datetime');var newDate=new Date(times[n].getAttribute('datetime').replace(/-/g,'/').replace('T',' ').split('+')[0]);var dateString=formatterFunction(newDate,datetimeText);times[n].setAttribute('aria-label',dateString);if(tweets[n].textContent){if(supportsClassName){times[n].textContent=dateString;}else{var h=document.createElement('p');var t=document.createTextNode(dateString);h.appendChild(t);h.setAttribute('aria-label',dateString);times[n]=h;}}else{times[n].textContent=dateString;}}\nvar op='';if(parseLinks){if(targetBlank){targetLinksToNewWindow(tweets[n]);if(printUser){targetLinksToNewWindow(authors[n]);}}\nif(printUser){op+='<div class=\"user\">'+strip(authors[n].innerHTML)+'</div>';}\nop+='<p class=\"tweet\">'+strip(tweets[n].innerHTML)+'</p>';if(printTime){if(permalinks){op+='<p class=\"timePosted\"><a href=\"'+permalinksURL[n]+'\">'+times[n].getAttribute('aria-label')+'</a></p>';}else{op+='<p class=\"timePosted\">'+\ntimes[n].getAttribute('aria-label')+'</p>';}}}else{if(tweets[n].textContent){if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}else{if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}}\nif(showInteractionLinks){op+='<p class=\"interact\"><a href=\"https://twitter.com/intent/'+'tweet?in_reply_to='+tids[n]+'\" class=\"twitter_reply_icon\"'+\n(targetBlank?' target=\"_blank\" rel=\"noopener\">':'>')+'Reply</a><a href=\"https://twitter.com/intent/retweet?'+'tweet_id='+tids[n]+'\" class=\"twitter_retweet_icon\"'+\n(targetBlank?' target=\"_blank\" rel=\"noopener\">':'>')+'Retweet</a>'+'<a href=\"https://twitter.com/intent/favorite?tweet_id='+\ntids[n]+'\" class=\"twitter_fav_icon\"'+\n(targetBlank?' target=\"_blank\" rel=\"noopener\">':'>')+'Favorite</a></p>';}\nif(showImages&&images[n]!==undefined&&extractImageUrl(images[n])!==undefined){op+='<div class=\"media\">'+'<img src=\"'+extractImageUrl(images[n])+'\" alt=\"Image from tweet\" />'+'</div>';}\nif(showImages){arrayTweets.push(op);}else if(!showImages&&tweets[n].textContent.length){arrayTweets.push(op);}\nn++;}}\nhandleTweets(arrayTweets);inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}}};window.__twttrf=twitterFetcher;window.twitterFetcher=twitterFetcher;return twitterFetcher;}));"], "filenames": ["js/twitterFetcher.js", "js/twitterFetcher_min.js"], "buggy_code_start_loc": [72, 14], "buggy_code_end_loc": [399, 62], "fixing_code_start_loc": [73, 14], "fixing_code_end_loc": [400, 62], "type": "NVD-CWE-Other", "message": "A vulnerability classified as problematic has been found in Twitter-Post-Fetcher up to 17.x. This affects an unknown part of the file js/twitterFetcher.js of the component Link Target Handler. The manipulation leads to use of web link to untrusted target with window.opener access. It is possible to initiate the attack remotely. Upgrading to version 18.0.0 is able to address this issue. The name of the patch is 7d281c6fb5acbc29a2cad295262c1f0c19ca56f3. It is recommended to upgrade the affected component. The identifier VDB-217017 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2018-25058", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-29T08:15:08.620", "lastModified": "2023-01-06T19:13:56.183", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic has been found in Twitter-Post-Fetcher up to 17.x. This affects an unknown part of the file js/twitterFetcher.js of the component Link Target Handler. The manipulation leads to use of web link to untrusted target with window.opener access. It is possible to initiate the attack remotely. Upgrading to version 18.0.0 is able to address this issue. The name of the patch is 7d281c6fb5acbc29a2cad295262c1f0c19ca56f3. It is recommended to upgrade the affected component. The identifier VDB-217017 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.2, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 2.5}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-Other"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-1022"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:twitter-post-fetcher_project:twitter-post-fetcher:*:*:*:*:*:*:*:*", "versionEndExcluding": "18.0.0", "matchCriteriaId": "45EA9C1B-2190-47E8-8E89-12EC12B7856C"}]}]}], "references": [{"url": "https://github.com/jasonmayes/Twitter-Post-Fetcher/commit/7d281c6fb5acbc29a2cad295262c1f0c19ca56f3", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/jasonmayes/Twitter-Post-Fetcher/pull/170", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/jasonmayes/Twitter-Post-Fetcher/releases/tag/18.0.0", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217017", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217017", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jasonmayes/Twitter-Post-Fetcher/commit/7d281c6fb5acbc29a2cad295262c1f0c19ca56f3"}}