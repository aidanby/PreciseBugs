{"buggy_code": ["# Webhook Events\n\nThis document describes the basic webhook event subscriptions available in OneFuzz\n\n## Payload\n\nEach event will be submitted via HTTP POST to the user provided URL.\n\n### Example\n\n```json\n{\n    \"event\": {\n        \"ping_id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"event_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"event_type\": \"ping\",\n    \"instance_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"instance_name\": \"example\",\n    \"webhook_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n## Event Types (EventType)\n\n* [crash_reported](#crash_reported)\n* [file_added](#file_added)\n* [instance_config_updated](#instance_config_updated)\n* [job_created](#job_created)\n* [job_stopped](#job_stopped)\n* [node_created](#node_created)\n* [node_deleted](#node_deleted)\n* [node_heartbeat](#node_heartbeat)\n* [node_state_updated](#node_state_updated)\n* [ping](#ping)\n* [pool_created](#pool_created)\n* [pool_deleted](#pool_deleted)\n* [proxy_created](#proxy_created)\n* [proxy_deleted](#proxy_deleted)\n* [proxy_failed](#proxy_failed)\n* [proxy_state_updated](#proxy_state_updated)\n* [regression_reported](#regression_reported)\n* [scaleset_created](#scaleset_created)\n* [scaleset_deleted](#scaleset_deleted)\n* [scaleset_failed](#scaleset_failed)\n* [scaleset_resize_scheduled](#scaleset_resize_scheduled)\n* [scaleset_state_updated](#scaleset_state_updated)\n* [task_created](#task_created)\n* [task_failed](#task_failed)\n* [task_heartbeat](#task_heartbeat)\n* [task_state_updated](#task_state_updated)\n* [task_stopped](#task_stopped)\n\n### crash_reported\n\n#### Example\n\n```json\n{\n    \"container\": \"container-name\",\n    \"filename\": \"example.json\",\n    \"report\": {\n        \"asan_log\": \"example asan log\",\n        \"call_stack\": [\n            \"#0 line\",\n            \"#1 line\",\n            \"#2 line\"\n        ],\n        \"call_stack_sha256\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"crash_site\": \"example crash site\",\n        \"crash_type\": \"example crash report type\",\n        \"executable\": \"fuzz.exe\",\n        \"input_blob\": {\n            \"account\": \"contoso-storage-account\",\n            \"container\": \"crashes\",\n            \"name\": \"input.txt\"\n        },\n        \"input_sha256\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"scariness_description\": \"example-scariness\",\n        \"scariness_score\": 10,\n        \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"BlobRef\": {\n            \"properties\": {\n                \"account\": {\n                    \"title\": \"Account\",\n                    \"type\": \"string\"\n                },\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"account\",\n                \"container\",\n                \"name\"\n            ],\n            \"title\": \"BlobRef\",\n            \"type\": \"object\"\n        },\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"Report\": {\n            \"properties\": {\n                \"asan_log\": {\n                    \"title\": \"Asan Log\",\n                    \"type\": \"string\"\n                },\n                \"call_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Call Stack\",\n                    \"type\": \"array\"\n                },\n                \"call_stack_sha256\": {\n                    \"title\": \"Call Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"crash_site\": {\n                    \"title\": \"Crash Site\",\n                    \"type\": \"string\"\n                },\n                \"crash_type\": {\n                    \"title\": \"Crash Type\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"input_url\": {\n                    \"title\": \"Input Url\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Lines\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines_sha256\": {\n                    \"title\": \"Minimized Stack Function Lines Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_function_names\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Names\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_names_sha256\": {\n                    \"title\": \"Minimized Stack Function Names Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_sha256\": {\n                    \"title\": \"Minimized Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"scariness_description\": {\n                    \"title\": \"Scariness Description\",\n                    \"type\": \"string\"\n                },\n                \"scariness_score\": {\n                    \"title\": \"Scariness Score\",\n                    \"type\": \"integer\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"executable\",\n                \"crash_type\",\n                \"crash_site\",\n                \"call_stack\",\n                \"call_stack_sha256\",\n                \"input_sha256\",\n                \"task_id\",\n                \"job_id\"\n            ],\n            \"title\": \"Report\",\n            \"type\": \"object\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"container\": {\n            \"title\": \"Container\",\n            \"type\": \"string\"\n        },\n        \"filename\": {\n            \"title\": \"Filename\",\n            \"type\": \"string\"\n        },\n        \"report\": {\n            \"$ref\": \"#/definitions/Report\"\n        },\n        \"task_config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        }\n    },\n    \"required\": [\n        \"report\",\n        \"container\",\n        \"filename\"\n    ],\n    \"title\": \"EventCrashReported\",\n    \"type\": \"object\"\n}\n```\n\n### file_added\n\n#### Example\n\n```json\n{\n    \"container\": \"container-name\",\n    \"filename\": \"example.txt\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"container\": {\n            \"title\": \"Container\",\n            \"type\": \"string\"\n        },\n        \"filename\": {\n            \"title\": \"Filename\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"container\",\n        \"filename\"\n    ],\n    \"title\": \"EventFileAdded\",\n    \"type\": \"object\"\n}\n```\n\n### instance_config_updated\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"admins\": [\n            \"00000000-0000-0000-0000-000000000000\"\n        ],\n        \"allow_pool_management\": true\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"InstanceConfig\": {\n            \"properties\": {\n                \"admins\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Admins\",\n                    \"type\": \"array\"\n                },\n                \"allow_pool_management\": {\n                    \"default\": true,\n                    \"title\": \"Allow Pool Management\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"title\": \"InstanceConfig\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/InstanceConfig\"\n        }\n    },\n    \"required\": [\n        \"config\"\n    ],\n    \"title\": \"EventInstanceConfigUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### job_created\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"build\": \"build 1\",\n        \"duration\": 24,\n        \"name\": \"example name\",\n        \"project\": \"example project\"\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"JobConfig\": {\n            \"properties\": {\n                \"build\": {\n                    \"title\": \"Build\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"project\": {\n                    \"title\": \"Project\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"project\",\n                \"name\",\n                \"build\",\n                \"duration\"\n            ],\n            \"title\": \"JobConfig\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/JobConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"config\"\n    ],\n    \"title\": \"EventJobCreated\",\n    \"type\": \"object\"\n}\n```\n\n### job_stopped\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"build\": \"build 1\",\n        \"duration\": 24,\n        \"name\": \"example name\",\n        \"project\": \"example project\"\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_info\": [\n        {\n            \"error\": {\n                \"code\": 468,\n                \"errors\": [\n                    \"example error message\"\n                ]\n            },\n            \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"task_type\": \"libfuzzer_fuzz\"\n        },\n        {\n            \"task_id\": \"00000000-0000-0000-0000-000000000001\",\n            \"task_type\": \"libfuzzer_coverage\"\n        }\n    ]\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        },\n        \"JobConfig\": {\n            \"properties\": {\n                \"build\": {\n                    \"title\": \"Build\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"project\": {\n                    \"title\": \"Project\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"project\",\n                \"name\",\n                \"build\",\n                \"duration\"\n            ],\n            \"title\": \"JobConfig\",\n            \"type\": \"object\"\n        },\n        \"JobTaskStopped\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"task_type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                }\n            },\n            \"required\": [\n                \"task_id\",\n                \"task_type\"\n            ],\n            \"title\": \"JobTaskStopped\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/JobConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_info\": {\n            \"items\": {\n                \"$ref\": \"#/definitions/JobTaskStopped\"\n            },\n            \"title\": \"Task Info\",\n            \"type\": \"array\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"config\"\n    ],\n    \"title\": \"EventJobStopped\",\n    \"type\": \"object\"\n}\n```\n\n### node_created\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventNodeCreated\",\n    \"type\": \"object\"\n}\n```\n\n### node_deleted\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventNodeDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### node_heartbeat\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventNodeHeartbeat\",\n    \"type\": \"object\"\n}\n```\n\n### node_state_updated\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\",\n    \"state\": \"setting_up\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"NodeState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"free\",\n                \"setting_up\",\n                \"rebooting\",\n                \"ready\",\n                \"busy\",\n                \"done\",\n                \"shutdown\",\n                \"halt\"\n            ],\n            \"title\": \"NodeState\"\n        }\n    },\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/NodeState\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\",\n        \"state\"\n    ],\n    \"title\": \"EventNodeStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### ping\n\n#### Example\n\n```json\n{\n    \"ping_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"ping_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Ping Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"ping_id\"\n    ],\n    \"title\": \"EventPing\",\n    \"type\": \"object\"\n}\n```\n\n### pool_created\n\n#### Example\n\n```json\n{\n    \"arch\": \"x86_64\",\n    \"managed\": true,\n    \"os\": \"linux\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Architecture\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"x86_64\"\n            ],\n            \"title\": \"Architecture\"\n        },\n        \"AutoScaleConfig\": {\n            \"properties\": {\n                \"ephemeral_os_disks\": {\n                    \"default\": false,\n                    \"title\": \"Ephemeral Os Disks\",\n                    \"type\": \"boolean\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"max_size\": {\n                    \"default\": 1000,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Max Size\",\n                    \"type\": \"integer\"\n                },\n                \"min_size\": {\n                    \"default\": 0,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Min Size\",\n                    \"type\": \"integer\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_size\": {\n                    \"title\": \"Scaleset Size\",\n                    \"type\": \"integer\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                },\n                \"vm_sku\": {\n                    \"title\": \"Vm Sku\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"image\",\n                \"scaleset_size\",\n                \"vm_sku\"\n            ],\n            \"title\": \"AutoScaleConfig\",\n            \"type\": \"object\"\n        },\n        \"OS\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"windows\",\n                \"linux\"\n            ],\n            \"title\": \"OS\"\n        }\n    },\n    \"properties\": {\n        \"arch\": {\n            \"$ref\": \"#/definitions/Architecture\"\n        },\n        \"autoscale\": {\n            \"$ref\": \"#/definitions/AutoScaleConfig\"\n        },\n        \"managed\": {\n            \"title\": \"Managed\",\n            \"type\": \"boolean\"\n        },\n        \"os\": {\n            \"$ref\": \"#/definitions/OS\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"pool_name\",\n        \"os\",\n        \"arch\",\n        \"managed\"\n    ],\n    \"title\": \"EventPoolCreated\",\n    \"type\": \"object\"\n}\n```\n\n### pool_deleted\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"pool_name\"\n    ],\n    \"title\": \"EventPoolDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_created\n\n#### Example\n\n```json\n{\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"region\"\n    ],\n    \"title\": \"EventProxyCreated\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_deleted\n\n#### Example\n\n```json\n{\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"region\"\n    ],\n    \"title\": \"EventProxyDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_failed\n\n#### Example\n\n```json\n{\n    \"error\": {\n        \"code\": 472,\n        \"errors\": [\n            \"example error message\"\n        ]\n    },\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        }\n    },\n    \"properties\": {\n        \"error\": {\n            \"$ref\": \"#/definitions/Error\"\n        },\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"region\",\n        \"error\"\n    ],\n    \"title\": \"EventProxyFailed\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_state_updated\n\n#### Example\n\n```json\n{\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\",\n    \"state\": \"init\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"VmState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"extensions_launch\",\n                \"extensions_failed\",\n                \"vm_allocation_failed\",\n                \"running\",\n                \"stopping\",\n                \"stopped\"\n            ],\n            \"title\": \"VmState\"\n        }\n    },\n    \"properties\": {\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/VmState\"\n        }\n    },\n    \"required\": [\n        \"region\",\n        \"proxy_id\",\n        \"state\"\n    ],\n    \"title\": \"EventProxyStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### regression_reported\n\n#### Example\n\n```json\n{\n    \"container\": \"container-name\",\n    \"filename\": \"example.json\",\n    \"regression_report\": {\n        \"crash_test_result\": {\n            \"crash_report\": {\n                \"asan_log\": \"example asan log\",\n                \"call_stack\": [\n                    \"#0 line\",\n                    \"#1 line\",\n                    \"#2 line\"\n                ],\n                \"call_stack_sha256\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"crash_site\": \"example crash site\",\n                \"crash_type\": \"example crash report type\",\n                \"executable\": \"fuzz.exe\",\n                \"input_blob\": {\n                    \"account\": \"contoso-storage-account\",\n                    \"container\": \"crashes\",\n                    \"name\": \"input.txt\"\n                },\n                \"input_sha256\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n                \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"scariness_description\": \"example-scariness\",\n                \"scariness_score\": 10,\n                \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n            }\n        },\n        \"original_crash_test_result\": {\n            \"crash_report\": {\n                \"asan_log\": \"example asan log\",\n                \"call_stack\": [\n                    \"#0 line\",\n                    \"#1 line\",\n                    \"#2 line\"\n                ],\n                \"call_stack_sha256\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"crash_site\": \"example crash site\",\n                \"crash_type\": \"example crash report type\",\n                \"executable\": \"fuzz.exe\",\n                \"input_blob\": {\n                    \"account\": \"contoso-storage-account\",\n                    \"container\": \"crashes\",\n                    \"name\": \"input.txt\"\n                },\n                \"input_sha256\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n                \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"scariness_description\": \"example-scariness\",\n                \"scariness_score\": 10,\n                \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n            }\n        }\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"BlobRef\": {\n            \"properties\": {\n                \"account\": {\n                    \"title\": \"Account\",\n                    \"type\": \"string\"\n                },\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"account\",\n                \"container\",\n                \"name\"\n            ],\n            \"title\": \"BlobRef\",\n            \"type\": \"object\"\n        },\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"CrashTestResult\": {\n            \"properties\": {\n                \"crash_report\": {\n                    \"$ref\": \"#/definitions/Report\"\n                },\n                \"no_repro\": {\n                    \"$ref\": \"#/definitions/NoReproReport\"\n                }\n            },\n            \"title\": \"CrashTestResult\",\n            \"type\": \"object\"\n        },\n        \"NoReproReport\": {\n            \"properties\": {\n                \"error\": {\n                    \"title\": \"Error\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"tries\": {\n                    \"title\": \"Tries\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\n                \"input_sha256\",\n                \"executable\",\n                \"task_id\",\n                \"job_id\",\n                \"tries\"\n            ],\n            \"title\": \"NoReproReport\",\n            \"type\": \"object\"\n        },\n        \"RegressionReport\": {\n            \"properties\": {\n                \"crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                },\n                \"original_crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                }\n            },\n            \"required\": [\n                \"crash_test_result\"\n            ],\n            \"title\": \"RegressionReport\",\n            \"type\": \"object\"\n        },\n        \"Report\": {\n            \"properties\": {\n                \"asan_log\": {\n                    \"title\": \"Asan Log\",\n                    \"type\": \"string\"\n                },\n                \"call_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Call Stack\",\n                    \"type\": \"array\"\n                },\n                \"call_stack_sha256\": {\n                    \"title\": \"Call Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"crash_site\": {\n                    \"title\": \"Crash Site\",\n                    \"type\": \"string\"\n                },\n                \"crash_type\": {\n                    \"title\": \"Crash Type\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"input_url\": {\n                    \"title\": \"Input Url\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Lines\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines_sha256\": {\n                    \"title\": \"Minimized Stack Function Lines Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_function_names\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Names\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_names_sha256\": {\n                    \"title\": \"Minimized Stack Function Names Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_sha256\": {\n                    \"title\": \"Minimized Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"scariness_description\": {\n                    \"title\": \"Scariness Description\",\n                    \"type\": \"string\"\n                },\n                \"scariness_score\": {\n                    \"title\": \"Scariness Score\",\n                    \"type\": \"integer\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"executable\",\n                \"crash_type\",\n                \"crash_site\",\n                \"call_stack\",\n                \"call_stack_sha256\",\n                \"input_sha256\",\n                \"task_id\",\n                \"job_id\"\n            ],\n            \"title\": \"Report\",\n            \"type\": \"object\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"container\": {\n            \"title\": \"Container\",\n            \"type\": \"string\"\n        },\n        \"filename\": {\n            \"title\": \"Filename\",\n            \"type\": \"string\"\n        },\n        \"regression_report\": {\n            \"$ref\": \"#/definitions/RegressionReport\"\n        },\n        \"task_config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        }\n    },\n    \"required\": [\n        \"regression_report\",\n        \"container\",\n        \"filename\"\n    ],\n    \"title\": \"EventRegressionReported\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_created\n\n#### Example\n\n```json\n{\n    \"image\": \"Canonical:UbuntuServer:18.04-LTS:latest\",\n    \"pool_name\": \"example\",\n    \"region\": \"eastus\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"size\": 10,\n    \"vm_sku\": \"Standard_D2s_v3\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"image\": {\n            \"title\": \"Image\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"size\": {\n            \"title\": \"Size\",\n            \"type\": \"integer\"\n        },\n        \"vm_sku\": {\n            \"title\": \"Vm Sku\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"vm_sku\",\n        \"image\",\n        \"region\",\n        \"size\"\n    ],\n    \"title\": \"EventScalesetCreated\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_deleted\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventScalesetDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_failed\n\n#### Example\n\n```json\n{\n    \"error\": {\n        \"code\": 456,\n        \"errors\": [\n            \"example error message\"\n        ]\n    },\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        }\n    },\n    \"properties\": {\n        \"error\": {\n            \"$ref\": \"#/definitions/Error\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"error\"\n    ],\n    \"title\": \"EventScalesetFailed\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_resize_scheduled\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"size\": 0\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"size\": {\n            \"title\": \"Size\",\n            \"type\": \"integer\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"size\"\n    ],\n    \"title\": \"EventScalesetResizeScheduled\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_state_updated\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"state\": \"init\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ScalesetState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"setup\",\n                \"resize\",\n                \"running\",\n                \"shutdown\",\n                \"halt\",\n                \"creation_failed\"\n            ],\n            \"title\": \"ScalesetState\"\n        }\n    },\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/ScalesetState\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"state\"\n    ],\n    \"title\": \"EventScalesetStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### task_created\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"user_info\": {\n        \"application_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"object_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"upn\": \"example@contoso.com\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskCreated\",\n    \"type\": \"object\"\n}\n```\n\n### task_failed\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"error\": {\n        \"code\": 468,\n        \"errors\": [\n            \"example error message\"\n        ]\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"user_info\": {\n        \"application_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"object_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"upn\": \"example@contoso.com\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"error\": {\n            \"$ref\": \"#/definitions/Error\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"error\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskFailed\",\n    \"type\": \"object\"\n}\n```\n\n### task_heartbeat\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskHeartbeat\",\n    \"type\": \"object\"\n}\n```\n\n### task_state_updated\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"state\": \"init\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"waiting\",\n                \"scheduled\",\n                \"setting_up\",\n                \"running\",\n                \"stopping\",\n                \"stopped\",\n                \"wait_job\"\n            ],\n            \"title\": \"TaskState\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"end_time\": {\n            \"format\": \"date-time\",\n            \"title\": \"End Time\",\n            \"type\": \"string\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/TaskState\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"state\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### task_stopped\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"user_info\": {\n        \"application_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"object_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"upn\": \"example@contoso.com\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskStopped\",\n    \"type\": \"object\"\n}\n```\n\n## Full Event Schema\n\n```json\n{\n    \"definitions\": {\n        \"Architecture\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"x86_64\"\n            ],\n            \"title\": \"Architecture\"\n        },\n        \"AutoScaleConfig\": {\n            \"properties\": {\n                \"ephemeral_os_disks\": {\n                    \"default\": false,\n                    \"title\": \"Ephemeral Os Disks\",\n                    \"type\": \"boolean\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"max_size\": {\n                    \"default\": 1000,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Max Size\",\n                    \"type\": \"integer\"\n                },\n                \"min_size\": {\n                    \"default\": 0,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Min Size\",\n                    \"type\": \"integer\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_size\": {\n                    \"title\": \"Scaleset Size\",\n                    \"type\": \"integer\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                },\n                \"vm_sku\": {\n                    \"title\": \"Vm Sku\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"image\",\n                \"scaleset_size\",\n                \"vm_sku\"\n            ],\n            \"title\": \"AutoScaleConfig\",\n            \"type\": \"object\"\n        },\n        \"BlobRef\": {\n            \"properties\": {\n                \"account\": {\n                    \"title\": \"Account\",\n                    \"type\": \"string\"\n                },\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"account\",\n                \"container\",\n                \"name\"\n            ],\n            \"title\": \"BlobRef\",\n            \"type\": \"object\"\n        },\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"CrashTestResult\": {\n            \"properties\": {\n                \"crash_report\": {\n                    \"$ref\": \"#/definitions/Report\"\n                },\n                \"no_repro\": {\n                    \"$ref\": \"#/definitions/NoReproReport\"\n                }\n            },\n            \"title\": \"CrashTestResult\",\n            \"type\": \"object\"\n        },\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        },\n        \"EventCrashReported\": {\n            \"properties\": {\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"filename\": {\n                    \"title\": \"Filename\",\n                    \"type\": \"string\"\n                },\n                \"report\": {\n                    \"$ref\": \"#/definitions/Report\"\n                },\n                \"task_config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                }\n            },\n            \"required\": [\n                \"report\",\n                \"container\",\n                \"filename\"\n            ],\n            \"title\": \"EventCrashReported\",\n            \"type\": \"object\"\n        },\n        \"EventFileAdded\": {\n            \"properties\": {\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"filename\": {\n                    \"title\": \"Filename\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"container\",\n                \"filename\"\n            ],\n            \"title\": \"EventFileAdded\",\n            \"type\": \"object\"\n        },\n        \"EventInstanceConfigUpdated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/InstanceConfig\"\n                }\n            },\n            \"required\": [\n                \"config\"\n            ],\n            \"title\": \"EventInstanceConfigUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventJobCreated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/JobConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"config\"\n            ],\n            \"title\": \"EventJobCreated\",\n            \"type\": \"object\"\n        },\n        \"EventJobStopped\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/JobConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_info\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/JobTaskStopped\"\n                    },\n                    \"title\": \"Task Info\",\n                    \"type\": \"array\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"config\"\n            ],\n            \"title\": \"EventJobStopped\",\n            \"type\": \"object\"\n        },\n        \"EventNodeCreated\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventNodeCreated\",\n            \"type\": \"object\"\n        },\n        \"EventNodeDeleted\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventNodeDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventNodeHeartbeat\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventNodeHeartbeat\",\n            \"type\": \"object\"\n        },\n        \"EventNodeStateUpdated\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/NodeState\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\",\n                \"state\"\n            ],\n            \"title\": \"EventNodeStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventPing\": {\n            \"properties\": {\n                \"ping_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Ping Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"ping_id\"\n            ],\n            \"title\": \"EventPing\",\n            \"type\": \"object\"\n        },\n        \"EventPoolCreated\": {\n            \"properties\": {\n                \"arch\": {\n                    \"$ref\": \"#/definitions/Architecture\"\n                },\n                \"autoscale\": {\n                    \"$ref\": \"#/definitions/AutoScaleConfig\"\n                },\n                \"managed\": {\n                    \"title\": \"Managed\",\n                    \"type\": \"boolean\"\n                },\n                \"os\": {\n                    \"$ref\": \"#/definitions/OS\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"pool_name\",\n                \"os\",\n                \"arch\",\n                \"managed\"\n            ],\n            \"title\": \"EventPoolCreated\",\n            \"type\": \"object\"\n        },\n        \"EventPoolDeleted\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"pool_name\"\n            ],\n            \"title\": \"EventPoolDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventProxyCreated\": {\n            \"properties\": {\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"region\"\n            ],\n            \"title\": \"EventProxyCreated\",\n            \"type\": \"object\"\n        },\n        \"EventProxyDeleted\": {\n            \"properties\": {\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"region\"\n            ],\n            \"title\": \"EventProxyDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventProxyFailed\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"error\"\n            ],\n            \"title\": \"EventProxyFailed\",\n            \"type\": \"object\"\n        },\n        \"EventProxyStateUpdated\": {\n            \"properties\": {\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/VmState\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"proxy_id\",\n                \"state\"\n            ],\n            \"title\": \"EventProxyStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventRegressionReported\": {\n            \"properties\": {\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"filename\": {\n                    \"title\": \"Filename\",\n                    \"type\": \"string\"\n                },\n                \"regression_report\": {\n                    \"$ref\": \"#/definitions/RegressionReport\"\n                },\n                \"task_config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                }\n            },\n            \"required\": [\n                \"regression_report\",\n                \"container\",\n                \"filename\"\n            ],\n            \"title\": \"EventRegressionReported\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetCreated\": {\n            \"properties\": {\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"size\": {\n                    \"title\": \"Size\",\n                    \"type\": \"integer\"\n                },\n                \"vm_sku\": {\n                    \"title\": \"Vm Sku\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"vm_sku\",\n                \"image\",\n                \"region\",\n                \"size\"\n            ],\n            \"title\": \"EventScalesetCreated\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetDeleted\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventScalesetDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetFailed\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"error\"\n            ],\n            \"title\": \"EventScalesetFailed\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetResizeScheduled\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"size\": {\n                    \"title\": \"Size\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"size\"\n            ],\n            \"title\": \"EventScalesetResizeScheduled\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetStateUpdated\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/ScalesetState\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"state\"\n            ],\n            \"title\": \"EventScalesetStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventTaskCreated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskCreated\",\n            \"type\": \"object\"\n        },\n        \"EventTaskFailed\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"error\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskFailed\",\n            \"type\": \"object\"\n        },\n        \"EventTaskHeartbeat\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskHeartbeat\",\n            \"type\": \"object\"\n        },\n        \"EventTaskStateUpdated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"end_time\": {\n                    \"format\": \"date-time\",\n                    \"title\": \"End Time\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/TaskState\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"state\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventTaskStopped\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskStopped\",\n            \"type\": \"object\"\n        },\n        \"EventType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"job_created\",\n                \"job_stopped\",\n                \"node_created\",\n                \"node_deleted\",\n                \"node_state_updated\",\n                \"ping\",\n                \"pool_created\",\n                \"pool_deleted\",\n                \"proxy_created\",\n                \"proxy_deleted\",\n                \"proxy_failed\",\n                \"proxy_state_updated\",\n                \"scaleset_created\",\n                \"scaleset_deleted\",\n                \"scaleset_failed\",\n                \"scaleset_state_updated\",\n                \"scaleset_resize_scheduled\",\n                \"task_created\",\n                \"task_failed\",\n                \"task_state_updated\",\n                \"task_stopped\",\n                \"crash_reported\",\n                \"regression_reported\",\n                \"file_added\",\n                \"task_heartbeat\",\n                \"node_heartbeat\",\n                \"instance_config_updated\"\n            ],\n            \"title\": \"EventType\"\n        },\n        \"InstanceConfig\": {\n            \"properties\": {\n                \"admins\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Admins\",\n                    \"type\": \"array\"\n                },\n                \"allow_pool_management\": {\n                    \"default\": true,\n                    \"title\": \"Allow Pool Management\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"title\": \"InstanceConfig\",\n            \"type\": \"object\"\n        },\n        \"JobConfig\": {\n            \"properties\": {\n                \"build\": {\n                    \"title\": \"Build\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"project\": {\n                    \"title\": \"Project\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"project\",\n                \"name\",\n                \"build\",\n                \"duration\"\n            ],\n            \"title\": \"JobConfig\",\n            \"type\": \"object\"\n        },\n        \"JobTaskStopped\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"task_type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                }\n            },\n            \"required\": [\n                \"task_id\",\n                \"task_type\"\n            ],\n            \"title\": \"JobTaskStopped\",\n            \"type\": \"object\"\n        },\n        \"NoReproReport\": {\n            \"properties\": {\n                \"error\": {\n                    \"title\": \"Error\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"tries\": {\n                    \"title\": \"Tries\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\n                \"input_sha256\",\n                \"executable\",\n                \"task_id\",\n                \"job_id\",\n                \"tries\"\n            ],\n            \"title\": \"NoReproReport\",\n            \"type\": \"object\"\n        },\n        \"NodeState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"free\",\n                \"setting_up\",\n                \"rebooting\",\n                \"ready\",\n                \"busy\",\n                \"done\",\n                \"shutdown\",\n                \"halt\"\n            ],\n            \"title\": \"NodeState\"\n        },\n        \"OS\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"windows\",\n                \"linux\"\n            ],\n            \"title\": \"OS\"\n        },\n        \"RegressionReport\": {\n            \"properties\": {\n                \"crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                },\n                \"original_crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                }\n            },\n            \"required\": [\n                \"crash_test_result\"\n            ],\n            \"title\": \"RegressionReport\",\n            \"type\": \"object\"\n        },\n        \"Report\": {\n            \"properties\": {\n                \"asan_log\": {\n                    \"title\": \"Asan Log\",\n                    \"type\": \"string\"\n                },\n                \"call_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Call Stack\",\n                    \"type\": \"array\"\n                },\n                \"call_stack_sha256\": {\n                    \"title\": \"Call Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"crash_site\": {\n                    \"title\": \"Crash Site\",\n                    \"type\": \"string\"\n                },\n                \"crash_type\": {\n                    \"title\": \"Crash Type\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"input_url\": {\n                    \"title\": \"Input Url\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Lines\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines_sha256\": {\n                    \"title\": \"Minimized Stack Function Lines Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_function_names\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Names\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_names_sha256\": {\n                    \"title\": \"Minimized Stack Function Names Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_sha256\": {\n                    \"title\": \"Minimized Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"scariness_description\": {\n                    \"title\": \"Scariness Description\",\n                    \"type\": \"string\"\n                },\n                \"scariness_score\": {\n                    \"title\": \"Scariness Score\",\n                    \"type\": \"integer\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"executable\",\n                \"crash_type\",\n                \"crash_site\",\n                \"call_stack\",\n                \"call_stack_sha256\",\n                \"input_sha256\",\n                \"task_id\",\n                \"job_id\"\n            ],\n            \"title\": \"Report\",\n            \"type\": \"object\"\n        },\n        \"ScalesetState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"setup\",\n                \"resize\",\n                \"running\",\n                \"shutdown\",\n                \"halt\",\n                \"creation_failed\"\n            ],\n            \"title\": \"ScalesetState\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"waiting\",\n                \"scheduled\",\n                \"setting_up\",\n                \"running\",\n                \"stopping\",\n                \"stopped\",\n                \"wait_job\"\n            ],\n            \"title\": \"TaskState\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        },\n        \"VmState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"extensions_launch\",\n                \"extensions_failed\",\n                \"vm_allocation_failed\",\n                \"running\",\n                \"stopping\",\n                \"stopped\"\n            ],\n            \"title\": \"VmState\"\n        }\n    },\n    \"properties\": {\n        \"event\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventJobCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventJobStopped\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeHeartbeat\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventPing\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventPoolCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventPoolDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyFailed\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetFailed\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetResizeScheduled\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskFailed\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskStopped\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskHeartbeat\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventCrashReported\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventRegressionReported\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventFileAdded\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventInstanceConfigUpdated\"\n                }\n            ],\n            \"title\": \"Event\"\n        },\n        \"event_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Event Id\",\n            \"type\": \"string\"\n        },\n        \"event_type\": {\n            \"$ref\": \"#/definitions/EventType\"\n        },\n        \"instance_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Instance Id\",\n            \"type\": \"string\"\n        },\n        \"instance_name\": {\n            \"title\": \"Instance Name\",\n            \"type\": \"string\"\n        },\n        \"webhook_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Webhook Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"event_type\",\n        \"event\",\n        \"instance_id\",\n        \"instance_name\",\n        \"webhook_id\"\n    ],\n    \"title\": \"WebhookMessage\",\n    \"type\": \"object\"\n}\n```\n\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport azure.functions as func\nfrom onefuzztypes.responses import Info\n\nfrom ..onefuzzlib.azure.creds import (\n    get_base_region,\n    get_base_resource_group,\n    get_insights_appid,\n    get_insights_instrumentation_key,\n    get_instance_id,\n    get_subscription,\n)\nfrom ..onefuzzlib.request import ok\nfrom ..onefuzzlib.versions import versions\n\n\ndef main(req: func.HttpRequest) -> func.HttpResponse:\n    response = ok(\n        Info(\n            resource_group=get_base_resource_group(),\n            region=get_base_region(),\n            subscription=get_subscription(),\n            versions=versions(),\n            instance_id=get_instance_id(),\n            insights_appid=get_insights_appid(),\n            insights_instrumentation_key=get_insights_instrumentation_key(),\n        )\n    )\n\n    return response\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport azure.functions as func\n\n# This endpoint handles the signalr negotation\n# As we do not differentiate from clients at this time, we pass the Functions runtime\n# provided connection straight to the client\n#\n# For more info:\n# https://docs.microsoft.com/en-us/azure/azure-signalr/signalr-concept-internals\n\n\ndef main(req: func.HttpRequest, connectionInfoJson: str) -> func.HttpResponse:\n    return func.HttpResponse(\n        connectionInfoJson,\n        status_code=200,\n        headers={\"Content-type\": \"application/json\"},\n    )\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nfrom typing import Optional, Tuple\n\nfrom onefuzztypes.events import EventInstanceConfigUpdated\nfrom onefuzztypes.models import InstanceConfig as BASE_CONFIG\nfrom pydantic import Field\n\nfrom .azure.creds import get_instance_name\nfrom .events import send_event\nfrom .orm import ORMMixin\n\n\nclass InstanceConfig(BASE_CONFIG, ORMMixin):\n    instance_name: str = Field(default_factory=get_instance_name)\n\n    @classmethod\n    def key_fields(cls) -> Tuple[str, Optional[str]]:\n        return (\"instance_name\", None)\n\n    @classmethod\n    def fetch(cls) -> \"InstanceConfig\":\n        entry = cls.get(get_instance_name())\n        if entry is None:\n            entry = cls()\n            entry.save()\n        return entry\n\n    def save(self, new: bool = False, require_etag: bool = False) -> None:\n        super().save(new=new, require_etag=require_etag)\n        send_event(EventInstanceConfigUpdated(config=self))\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nfrom typing import Optional\nfrom uuid import UUID\n\nimport azure.functions as func\nimport jwt\nfrom onefuzztypes.enums import ErrorCode\nfrom onefuzztypes.models import Error, Result, UserInfo\n\n\ndef get_bearer_token(request: func.HttpRequest) -> Optional[str]:\n    auth: str = request.headers.get(\"Authorization\", None)\n    if not auth:\n        return None\n\n    parts = auth.split()\n\n    if len(parts) != 2:\n        return None\n\n    if parts[0].lower() != \"bearer\":\n        return None\n\n    return parts[1]\n\n\ndef get_auth_token(request: func.HttpRequest) -> Optional[str]:\n    token = get_bearer_token(request)\n    if token is not None:\n        return token\n\n    token_header = request.headers.get(\"x-ms-token-aad-id-token\", None)\n    if token_header is None:\n        return None\n    return str(token_header)\n\n\ndef parse_jwt_token(request: func.HttpRequest) -> Result[UserInfo]:\n    \"\"\"Obtains the Access Token from the Authorization Header\"\"\"\n    token_str = get_auth_token(request)\n    if token_str is None:\n        return Error(\n            code=ErrorCode.INVALID_REQUEST,\n            errors=[\"unable to find authorization token\"],\n        )\n\n    # This token has already been verified by the azure authentication layer\n    token = jwt.decode(token_str, options={\"verify_signature\": False})\n\n    application_id = UUID(token[\"appid\"]) if \"appid\" in token else None\n    object_id = UUID(token[\"oid\"]) if \"oid\" in token else None\n    upn = token.get(\"upn\")\n    return UserInfo(application_id=application_id, object_id=object_id, upn=upn)\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport os\nimport unittest\nfrom uuid import uuid4\n\nfrom onefuzztypes.models import UserInfo\n\nfrom __app__.onefuzzlib.config import InstanceConfig\nfrom __app__.onefuzzlib.endpoint_authorization import (\n    can_modify_config_impl,\n    check_can_manage_pools_impl,\n)\n\nif \"ONEFUZZ_INSTANCE_NAME\" not in os.environ:\n    os.environ[\"ONEFUZZ_INSTANCE_NAME\"] = \"test\"\n\n\nclass TestAdmin(unittest.TestCase):\n    def test_modify_config(self) -> None:\n        user1 = uuid4()\n        user2 = uuid4()\n\n        # no admins set\n        self.assertTrue(can_modify_config_impl(InstanceConfig(), UserInfo()))\n\n        # with oid, but no admin\n        self.assertTrue(\n            can_modify_config_impl(InstanceConfig(), UserInfo(object_id=user1))\n        )\n\n        # is admin\n        self.assertTrue(\n            can_modify_config_impl(\n                InstanceConfig(admins=[user1]), UserInfo(object_id=user1)\n            )\n        )\n\n        # no user oid set\n        self.assertFalse(\n            can_modify_config_impl(InstanceConfig(admins=[user1]), UserInfo())\n        )\n\n        # not an admin\n        self.assertFalse(\n            can_modify_config_impl(\n                InstanceConfig(admins=[user1]), UserInfo(object_id=user2)\n            )\n        )\n\n    def test_manage_pools(self) -> None:\n        user1 = uuid4()\n        user2 = uuid4()\n\n        # by default, any can modify\n        self.assertIsNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(allow_pool_management=True), UserInfo()\n            )\n        )\n\n        # with oid, but no admin\n        self.assertIsNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(allow_pool_management=True), UserInfo(object_id=user1)\n            )\n        )\n\n        # is admin\n        self.assertIsNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(allow_pool_management=False, admins=[user1]),\n                UserInfo(object_id=user1),\n            )\n        )\n\n        # no user oid set\n        self.assertIsNotNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(allow_pool_management=False, admins=[user1]), UserInfo()\n            )\n        )\n\n        # not an admin\n        self.assertIsNotNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(allow_pool_management=False, admins=[user1]),\n                UserInfo(object_id=user2),\n            )\n        )\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n", "{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        },\n        \"clientId\": {\n            \"type\": \"string\"\n        },\n        \"clientSecret\": {\n            \"type\": \"string\"\n        },\n        \"signedExpiry\": {\n            \"type\": \"string\"\n        },\n        \"app_func_issuer\": {\n            \"type\": \"string\"\n        },\n        \"app_func_audience\": {\n            \"type\": \"string\"\n        },\n        \"multi_tenant_domain\": {\n            \"type\": \"string\"\n        },\n        \"diagnosticsLogsLevel\": {\n            \"type\": \"string\",\n            \"defaultValue\": \"Verbose\",\n            \"allowedValues\": [\n                \"Verbose\",\n                \"Information\",\n                \"Warning\",\n                \"Error\"\n            ],\n            \"metadata\": {\n                \"description\": \"The degree of severity for diagnostics logs.\"\n            }\n        },\n        \"workbookData\": {\n            \"type\": \"object\",\n            \"metadata\": {\n                \"description\": \"Azure Monitor workbook definitions.\"\n            }\n        }\n    },\n    \"variables\": {\n        \"autoscale_name\": \"[concat('onefuzz-autoscale-', uniquestring(resourceGroup().id))]\",\n        \"log_retention\": 30,\n        \"monitorAccountName\": \"[concat('logs-wb-', uniquestring(resourceGroup().id))]\",\n        \"scaleset_identity\": \"[concat(parameters('name'), '-scalesetid')]\",\n        \"signalr-name\": \"[concat('onefuzz-', uniquestring(resourceGroup().id))]\",\n        \"storage_account_sas\": {\n            \"signedExpiry\": \"[parameters('signedExpiry')]\",\n            \"signedPermission\": \"rwdlacup\",\n            \"signedResourceTypes\": \"sco\",\n            \"signedServices\": \"bfqt\"\n        },\n        \"storageAccountName\": \"[concat('fuzz', uniquestring(resourceGroup().id))]\",\n        \"storageAccountNameFunc\": \"[concat('func', uniquestring(resourceGroup().id))]\",\n        \"telemetry\": \"d7a73cf4-5a1a-4030-85e1-e5b25867e45a\",\n        \"Log Analytics Contributor\": \"92aaf0da-9dab-42b6-94a3-d43ce8d16293\",\n        \"Managed Identity Operator\": \"f1a07417-d97a-45cb-824c-7a7467783830\",\n        \"Network Contributor\": \"4d97b98b-1d4f-4787-a291-c67834d212e7\",\n        \"Storage Account Contributor\": \"17d1049b-9a84-46fb-8f53-869881c3d3ab\",\n        \"Virtual Machine Contributor\": \"9980e02c-c2be-4d73-94e8-173b1dc7cf3c\",\n        \"Storage Blob Data Reader\": \"2a2b9908-6ea1-4ae2-8e65-a410df84e7d1\",\n        \"keyVaultName\": \"[concat('of-kv-', uniquestring(resourceGroup().id))]\"\n    },\n    \"functions\": [\n        {\n            \"namespace\": \"onefuzz\",\n            \"members\": {\n                \"severitiesAtMostInfo\": {\n                    \"parameters\": [],\n                    \"output\": {\n                        \"type\": \"array\",\n                        \"value\": [\n                            {\n                                \"severity\": \"emerg\"\n                            },\n                            {\n                                \"severity\": \"alert\"\n                            },\n                            {\n                                \"severity\": \"crit\"\n                            },\n                            {\n                                \"severity\": \"err\"\n                            },\n                            {\n                                \"severity\": \"warning\"\n                            },\n                            {\n                                \"severity\": \"notice\"\n                            },\n                            {\n                                \"severity\": \"info\"\n                            }\n                        ]\n                    }\n                }\n            }\n        }\n    ],\n    \"resources\": [\n        {\n            \"type\": \"Microsoft.ManagedIdentity/userAssignedIdentities\",\n            \"name\": \"[variables('scaleset_identity')]\",\n            \"apiVersion\": \"2018-11-30\",\n            \"location\": \"[resourceGroup().location]\"\n        },\n        {\n            \"type\": \"Microsoft.KeyVault/vaults\",\n            \"apiVersion\": \"2019-09-01\",\n            \"name\": \"[variables('keyVaultName')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"properties\": {\n                \"enabledForDiskEncryption\": false,\n                \"enabledForTemplateDeployment\": true,\n                \"tenantId\": \"[subscription().tenantId]\",\n                \"accessPolicies\": [\n                     {\n                        \"objectId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2019-08-01', 'full').identity.principalId]\",\n                        \"tenantId\": \"[subscription().tenantId]\",\n                        \"permissions\": {\n                            \"secrets\": [\"get\", \"list\", \"set\", \"delete\"]\n                        }\n                    }\n                ],\n                \"sku\": {\n                    \"name\": \"standard\",\n                    \"family\": \"A\"\n                },\n                \"networkAcls\": {\n                    \"defaultAction\": \"Allow\",\n                    \"bypass\": \"AzureServices\"\n                }\n            }\n        },\n        {\n            \"apiVersion\": \"2018-11-01\",\n            \"name\": \"[parameters('name')]\",\n            \"type\": \"Microsoft.Web/sites\",\n            \"kind\": \"functionapp,linux\",\n            \"location\": \"[resourceGroup().location]\",\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            },\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.SignalRService/SignalR', variables('signalr-name'))]\",\n                \"[resourceId('microsoft.insights/components/', parameters('name'))]\",\n                \"[resourceId('Microsoft.Web/serverFarms', parameters('name'))]\",\n                \"[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]\",\n                \"[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountNameFunc'))]\"\n            ],\n            \"identity\": {\n                \"type\": \"SystemAssigned\"\n            },\n            \"resources\": [\n                {\n                    \"apiVersion\": \"2018-02-01\",\n                    \"type\": \"config\",\n                    \"name\": \"logs\",\n                    \"location\": \"[resourceGroup().location]\",\n                    \"dependsOn\": [\n                        \"[concat('Microsoft.Web/sites/', parameters('name'))]\",\n                        \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n                    ],\n                    \"properties\": {\n                        \"applicationLogs\": {\n                            \"azureBlobStorage\": {\n                                \"level\": \"[parameters('diagnosticsLogsLevel')]\",\n                                \"sasUrl\": \"[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountNameFunc'))).primaryEndpoints.blob, 'app-logs', '?', listAccountSas(variables('storageAccountNameFunc'), '2018-02-01', variables('storage_account_sas')).accountSasToken)]\",\n                                \"retentionInDays\": \"[variables('log_retention')]\"\n                            }\n                        }\n                    }\n                }\n            ],\n            \"properties\": {\n                \"name\": \"[parameters('name')]\",\n                \"siteConfig\": {\n                    \"appSettings\": [\n                        {\n                            \"name\": \"FUNCTIONS_EXTENSION_VERSION\",\n                            \"value\": \"~3\"\n                        },\n                        {\n                            \"name\": \"FUNCTIONS_WORKER_RUNTIME\",\n                            \"value\": \"python\"\n                        },\n                        {\n                            \"name\": \"FUNCTIONS_WORKER_PROCESS_COUNT\",\n                            \"value\": \"1\"\n                        },\n                        {\n                            \"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\",\n                            \"value\": \"[reference(resourceId('microsoft.insights/components/', parameters('name')), '2015-05-01').InstrumentationKey]\"\n                        },\n                        {\n                            \"name\": \"APPINSIGHTS_APPID\",\n                            \"value\": \"[reference(resourceId('microsoft.insights/components/', parameters('name')), '2015-05-01').AppId]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_TELEMETRY\",\n                            \"value\": \"[variables('telemetry')]\"\n                        },\n                        {\n                            \"name\": \"AzureWebJobsStorage\",\n                            \"value\": \"[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountNameFunc'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]\"\n                        },\n                        {\n                            \"name\": \"MULTI_TENANT_DOMAIN\",\n                            \"value\": \"[parameters('multi_tenant_domain')]\"\n                        },\n                        {\n                            \"name\": \"AzureWebJobsDisableHomepage\",\n                            \"value\": \"true\"\n                        },\n                        {\n                            \"name\": \"AzureSignalRConnectionString\",\n                            \"value\": \"[listkeys(resourceId('Microsoft.SignalRService/SignalR', variables('signalr-name')), '2018-10-01').primaryConnectionString]\"\n                        },\n                        {\n                            \"name\": \"AzureSignalRServiceTransportType\",\n                            \"value\": \"Transient\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_INSTANCE_NAME\",\n                            \"value\": \"[parameters('name')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_INSTANCE\",\n                            \"value\": \"[concat('https://', parameters('name'), '.azurewebsites.net')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_RESOURCE_GROUP\",\n                            \"value\": \"[resourceGroup().id]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_DATA_STORAGE\",\n                            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_FUNC_STORAGE\",\n                            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_MONITOR\",\n                            \"value\": \"[variables('monitorAccountName')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_KEYVAULT\",\n                            \"value\": \"[variables('keyVaultName')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_OWNER\",\n                            \"value\": \"[parameters('owner')]\"\n                        }\n                    ],\n                    \"linuxFxVersion\": \"Python|3.7\",\n                    \"alwaysOn\": true,\n                    \"defaultDocuments\": [],\n                    \"httpLoggingEnabled\": true,\n                    \"logsDirectorySizeLimit\": 100,\n                    \"detailedErrorLoggingEnabled\": true,\n                    \"http20Enabled\": true,\n                    \"minTlsVersion\": \"1.2\",\n                    \"ftpsState\": \"Disabled\",\n                    \"siteAuthSettings\": {\n                        \"enabled\": true,\n                        \"unauthenticatedClientAction\": \"RedirectToLoginPage\",\n                        \"tokenStoreEnabled\": true,\n                        \"clientId\": \"[parameters('clientId')]\",\n                        \"clientSecret\": \"[parameters('clientSecret')]\",\n                        \"issuer\": \"[parameters('app_func_issuer')]\",\n                        \"defaultProvider\": \"AzureActiveDirectory\",\n                        \"allowedAudiences\": [\"[parameters('app_func_audience')]\"],\n                        \"isAadAutoProvisioned\": false\n                    }\n                },\n                \"serverFarmId\": \"[resourceId('Microsoft.Web/serverFarms', parameters('name'))]\",\n                \"hostingEnvironment\": \"\",\n                \"clientAffinityEnabled\": false,\n                \"httpsOnly\": true\n            }\n        },\n        {\n            \"apiVersion\": \"2018-02-01\",\n            \"name\": \"[parameters('name')]\",\n            \"type\": \"Microsoft.Web/serverFarms\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"linux\",\n            \"dependsOn\": [],\n            \"properties\": {\n                \"name\": \"[parameters('name')]\",\n                \"reserved\": true\n            },\n            \"sku\": {\n                \"name\": \"P2v2\",\n                \"tier\": \"PremiumV2\",\n                \"size\": \"P2v2\",\n                \"family\": \"Pv2\",\n                \"capacity\": 1\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"apiVersion\": \"2014-04-01\",\n            \"name\": \"[variables('autoscale_name')]\",\n            \"type\": \"microsoft.insights/autoscalesettings\",\n            \"location\": \"[resourceGroup().location]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Web/serverFarms', parameters('name'))]\"\n            ],\n            \"properties\": {\n                \"name\": \"[variables('autoscale_name')]\",\n                \"enabled\": true,\n                \"targetResourceUri\": \"[resourceId('Microsoft.Web/serverFarms/', parameters('name'))]\",\n                \"profiles\": [\n                    {\n                        \"name\": \"Auto scale condition\",\n                        \"capacity\": {\n                            \"minimum\": 1,\n                            \"maximum\": 20,\n                            \"default\": 1\n                        },\n                        \"rules\": [\n                            {\n                                \"scaleAction\": {\n                                    \"direction\": \"Increase\",\n                                    \"type\": \"ChangeCount\",\n                                    \"value\": 5,\n                                    \"cooldown\": \"PT1M\"\n                                },\n                                \"metricTrigger\": {\n                                    \"metricName\": \"CpuPercentage\",\n                                    \"metricNamespace\": \"microsoft.web/serverfarms\",\n                                    \"metricResourceUri\": \"[resourceId('Microsoft.Web/serverFarms/', parameters('name'))]\",\n                                    \"operator\": \"GreaterThanOrEqual\",\n                                    \"statistic\": \"Average\",\n                                    \"threshold\": 20,\n                                    \"timeAggregation\": \"Average\",\n                                    \"timeGrain\": \"PT1M\",\n                                    \"timeWindow\": \"PT1M\",\n                                    \"Dimensions\": [],\n                                    \"dividePerInstance\": false\n                                }\n                            },\n                            {\n                                \"scaleAction\": {\n                                    \"direction\": \"Decrease\",\n                                    \"type\": \"ChangeCount\",\n                                    \"value\": 1,\n                                    \"cooldown\": \"PT5M\"\n                                },\n                                \"metricTrigger\": {\n                                    \"metricName\": \"CpuPercentage\",\n                                    \"metricNamespace\": \"microsoft.web/serverfarms\",\n                                    \"metricResourceUri\": \"[resourceId('Microsoft.Web/serverFarms/', parameters('name'))]\",\n                                    \"operator\": \"LessThan\",\n                                    \"statistic\": \"Average\",\n                                    \"threshold\": 20,\n                                    \"timeAggregation\": \"Average\",\n                                    \"timeGrain\": \"PT1M\",\n                                    \"timeWindow\": \"PT1M\",\n                                    \"Dimensions\": [],\n                                    \"dividePerInstance\": false\n                                }\n                            }\n                        ]\n                    }\n                ],\n                \"notifications\": [],\n                \"targetResourceLocation\": \"[resourceGroup().location]\"\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"apiVersion\": \"2015-05-01\",\n            \"name\": \"[parameters('name')]\",\n            \"type\": \"microsoft.insights/components\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"\",\n            \"properties\": {\n                \"ApplicationId\": \"[parameters('name')]\",\n                \"Application_Type\": \"other\",\n                \"RetentionInDays\": \"[variables('log_retention')]\"\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            },\n            \"resources\": [\n                {\n                    \"name\": \"df20765c-ed5b-46f9-a47b-20f4aaf7936d\",\n                    \"type\": \"microsoft.insights/workbooks\",\n                    \"location\": \"[resourceGroup().location]\",\n                    \"apiVersion\": \"2018-06-17-preview\",\n                    \"dependsOn\": [\n                        \"[resourceId('microsoft.insights/components', parameters('name'))]\"\n                    ],\n                    \"kind\": \"shared\",\n                    \"properties\": {\n                        \"displayName\": \"LibFuzzer Job Dashboard\",\n                        \"serializedData\": \"[parameters('workbookData').libFuzzerJob]\",\n                        \"version\": \"1.0\",\n                        \"sourceId\": \"[resourceId('microsoft.insights/components', parameters('name'))]\",\n                        \"category\": \"tsg\"\n                    }\n                }\n            ]\n        },\n        {\n            \"type\": \"Microsoft.OperationalInsights/workspaces\",\n            \"name\": \"[variables('monitorAccountName')]\",\n            \"apiVersion\": \"2017-03-15-preview\",\n            \"location\": \"[resourceGroup().location]\",\n            \"properties\": {\n                \"sku\": {\n                    \"name\": \"PerGB2018\"\n                },\n                \"retentionInDays\": \"[variables('log_retention')]\",\n                \"features\": {\n                    \"searchVersion\": 1,\n                    \"legacy\": 0,\n                    \"enableLogAccessUsingOnlyResourcePermissions\": true\n                }\n            },\n            \"resources\": [\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"location\": \"[resourceGroup().location]\",\n                    \"name\": \"[concat('VMInsights', '(', variables('monitorAccountName'), ')')]\",\n                    \"type\": \"Microsoft.OperationsManagement/solutions\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"properties\": {\n                        \"workspaceResourceId\": \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    },\n                    \"plan\": {\n                        \"name\": \"[concat('VMInsights', '(', variables('monitorAccountName'), ')')]\",\n                        \"publisher\": \"Microsoft\",\n                        \"product\": \"[Concat('OMSGallery/', 'VMInsights')]\",\n                        \"promotionCode\": \"\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceKern\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"kern\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceUser\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"user\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceDaemon\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"daemon\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceCron\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"cron\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceCollection\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslogCollection\",\n                    \"properties\": {\n                        \"state\": \"Enabled\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"windowsEventSystem\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"WindowsEvent\",\n                    \"properties\": {\n                        \"eventLogName\": \"System\",\n                        \"eventTypes\": [\n                            {\n                                \"eventType\": \"Error\"\n                            },\n                            {\n                                \"eventType\": \"Warning\"\n                            },\n                            {\n                                \"eventType\": \"Information\"\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"windowsEventApplication\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"WindowsEvent\",\n                    \"properties\": {\n                        \"eventLogName\": \"Application\",\n                        \"eventTypes\": [\n                            {\n                                \"eventType\": \"Error\"\n                            },\n                            {\n                                \"eventType\": \"Warning\"\n                            },\n                            {\n                                \"eventType\": \"Information\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        {\n            \"apiVersion\": \"2019-06-01\",\n            \"type\": \"Microsoft.Storage/storageAccounts\",\n            \"name\": \"[variables('storageAccountName')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"StorageV2\",\n            \"sku\": {\n                \"name\": \"Standard_LRS\",\n                \"tier\": \"Standard\"\n            },\n            \"properties\": {\n                \"supportsHttpsTrafficOnly\": true,\n                \"accessTier\": \"Hot\",\n                \"allowBlobPublicAccess\": false\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"apiVersion\": \"2019-06-01\",\n            \"type\": \"Microsoft.Storage/storageAccounts\",\n            \"name\": \"[variables('storageAccountNameFunc')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"StorageV2\",\n            \"sku\": {\n                \"name\": \"Standard_LRS\",\n                \"tier\": \"Standard\"\n            },\n            \"properties\": {\n                \"supportsHttpsTrafficOnly\": true,\n                \"accessTier\": \"Hot\",\n                \"allowBlobPublicAccess\": false\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default')]\",\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices\",\n            \"apiVersion\": \"2019-06-01\",\n            \"properties\": {\n                \"deleteRetentionPolicy\": {\n                    \"enabled\": true,\n                    \"days\": 30\n                }\n            },\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"name\": \"[concat(variables('storageAccountName'), '/default')]\",\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices\",\n            \"apiVersion\": \"2019-06-01\",\n            \"properties\": {\n                \"deleteRetentionPolicy\": {\n                    \"enabled\": true,\n                    \"days\": 30\n                }\n            },\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'vm-scripts')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'repro-scripts')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'proxy-configs')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'task-configs')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'app-logs')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-vmss'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Virtual Machine Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-storage'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Storage Account Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-network'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Network Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-logs'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Log Analytics Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-user_managed_idenity'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Managed Identity Operator'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2018-07-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-user_managed_idenity_read_blob'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Storage Blob Data Reader'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('scaleset_identity')), '2018-11-30', 'Full').properties.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.SignalRService/SignalR\",\n            \"apiVersion\": \"2018-10-01\",\n            \"name\": \"[variables('signalr-name')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"sku\": {\n                \"name\": \"Standard_S1\",\n                \"tier\": \"Standard\",\n                \"size\": \"S1\",\n                \"capacity\": 1\n            },\n            \"properties\": {\n                \"hostNamePrefix\": \"[variables('signalr-name')]\",\n                \"features\": [\n                    {\n                        \"flag\": \"ServiceMode\",\n                        \"value\": \"Serverless\",\n                        \"properties\": {}\n                    },\n                    {\n                        \"flag\": \"EnableConnectivityLogs\",\n                        \"value\": \"True\",\n                        \"properties\": {}\n                    },\n                    {\n                        \"flag\": \"EnableMessagingLogs\",\n                        \"value\": \"False\",\n                        \"properties\": {}\n                    }\n                ]\n            }\n        }\n    ],\n    \"outputs\": {\n        \"fuzz-storage\": {\n            \"type\": \"string\",\n            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\"\n        },\n        \"fuzz-name\": {\n            \"type\": \"string\",\n            \"value\": \"[variables('storageAccountName')]\"\n        },\n        \"fuzz-key\": {\n            \"type\": \"string\",\n            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value]\"\n        },\n        \"func-name\": {\n            \"type\": \"string\",\n            \"value\": \"[variables('storageAccountNameFunc')]\"\n        },\n        \"func-storage\": {\n            \"type\": \"string\",\n            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n        },\n        \"func-key\": {\n            \"type\": \"string\",\n            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc')), '2019-06-01').keys[0].value]\"\n        },\n        \"scaleset-identity\": {\n            \"type\": \"string\",\n            \"value\": \"[variables('scaleset_identity')]\"\n        }\n    }\n}\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport argparse\nimport json\nimport logging\nimport os\nimport platform\nimport shutil\nimport subprocess\nimport sys\nimport tempfile\nimport time\nimport uuid\nimport zipfile\nfrom datetime import datetime, timedelta\nfrom typing import Dict, List, Optional, Tuple, Union, cast\nfrom uuid import UUID\n\nfrom azure.common.client_factory import get_client_from_cli_profile\nfrom azure.common.credentials import get_cli_profile\nfrom azure.core.exceptions import ResourceExistsError\nfrom azure.cosmosdb.table.tableservice import TableService\nfrom azure.graphrbac import GraphRbacManagementClient\nfrom azure.graphrbac.models import (\n    Application,\n    ApplicationCreateParameters,\n    ApplicationUpdateParameters,\n    AppRole,\n    GraphErrorException,\n    OptionalClaims,\n    RequiredResourceAccess,\n    ResourceAccess,\n    ServicePrincipalCreateParameters,\n)\nfrom azure.mgmt.applicationinsights import ApplicationInsightsManagementClient\nfrom azure.mgmt.applicationinsights.models import (\n    ApplicationInsightsComponentExportRequest,\n)\nfrom azure.mgmt.eventgrid import EventGridManagementClient\nfrom azure.mgmt.eventgrid.models import (\n    EventSubscription,\n    EventSubscriptionFilter,\n    RetryPolicy,\n    StorageQueueEventSubscriptionDestination,\n)\nfrom azure.mgmt.resource import ResourceManagementClient, SubscriptionClient\nfrom azure.mgmt.resource.resources.models import (\n    Deployment,\n    DeploymentMode,\n    DeploymentProperties,\n)\nfrom azure.mgmt.storage import StorageManagementClient\nfrom azure.storage.blob import (\n    BlobServiceClient,\n    ContainerSasPermissions,\n    generate_container_sas,\n)\nfrom azure.storage.queue import QueueServiceClient\nfrom msrest.serialization import TZ_UTC\n\nfrom data_migration import migrate\nfrom registration import (\n    OnefuzzAppRole,\n    add_application_password,\n    assign_app_role,\n    authorize_application,\n    get_graph_client,\n    register_application,\n    set_app_audience,\n    update_pool_registration,\n)\nfrom set_admins import update_admins\n\n# Found by manually assigning the User.Read permission to application\n# registration in the admin portal. The values are in the manifest under\n# the section \"requiredResourceAccess\"\nUSER_READ_PERMISSION = \"e1fe6dd8-ba31-4d61-89e7-88639da4683d\"\nMICROSOFT_GRAPH_APP_ID = \"00000003-0000-0000-c000-000000000000\"\n\nONEFUZZ_CLI_APP = \"72f1562a-8c0c-41ea-beb9-fa2b71c80134\"\nONEFUZZ_CLI_AUTHORITY = (\n    \"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47\"\n)\nCOMMON_AUTHORITY = \"https://login.microsoftonline.com/common\"\nTELEMETRY_NOTICE = (\n    \"Telemetry collection on stats and OneFuzz failures are sent to Microsoft. \"\n    \"To disable, delete the ONEFUZZ_TELEMETRY application setting in the \"\n    \"Azure Functions instance\"\n)\nAZCOPY_MISSING_ERROR = (\n    \"azcopy is not installed and unable to use the built-in version. \"\n    \"Installation instructions are available at https://aka.ms/azcopy\"\n)\nFUNC_TOOLS_ERROR = (\n    \"azure-functions-core-tools is not installed, \"\n    \"install v3 using instructions: \"\n    \"https://github.com/Azure/azure-functions-core-tools#installing\"\n)\n\nlogger = logging.getLogger(\"deploy\")\n\n\ndef gen_guid() -> str:\n    return str(uuid.uuid4())\n\n\nclass Client:\n    def __init__(\n        self,\n        *,\n        resource_group: str,\n        location: str,\n        application_name: str,\n        owner: str,\n        client_id: Optional[str],\n        client_secret: Optional[str],\n        app_zip: str,\n        tools: str,\n        instance_specific: str,\n        third_party: str,\n        arm_template: str,\n        workbook_data: str,\n        create_registration: bool,\n        migrations: List[str],\n        export_appinsights: bool,\n        log_service_principal: bool,\n        multi_tenant_domain: str,\n        upgrade: bool,\n        subscription_id: Optional[str],\n        admins: List[UUID]\n    ):\n        self.subscription_id = subscription_id\n        self.resource_group = resource_group\n        self.arm_template = arm_template\n        self.location = location\n        self.application_name = application_name\n        self.owner = owner\n        self.app_zip = app_zip\n        self.tools = tools\n        self.instance_specific = instance_specific\n        self.third_party = third_party\n        self.create_registration = create_registration\n        self.multi_tenant_domain = multi_tenant_domain\n        self.upgrade = upgrade\n        self.results: Dict = {\n            \"client_id\": client_id,\n            \"client_secret\": client_secret,\n        }\n        if self.multi_tenant_domain:\n            authority = COMMON_AUTHORITY\n        else:\n            authority = ONEFUZZ_CLI_AUTHORITY\n        self.cli_config: Dict[str, Union[str, UUID]] = {\n            \"client_id\": ONEFUZZ_CLI_APP,\n            \"authority\": authority,\n        }\n        self.migrations = migrations\n        self.export_appinsights = export_appinsights\n        self.log_service_principal = log_service_principal\n        self.admins = admins\n\n        machine = platform.machine()\n        system = platform.system()\n\n        if system == \"Linux\" and machine == \"x86_64\":\n            self.azcopy = os.path.join(self.tools, \"linux\", \"azcopy\")\n            subprocess.check_output([\"chmod\", \"+x\", self.azcopy])\n        elif system == \"Windows\" and machine == \"AMD64\":\n            self.azcopy = os.path.join(self.tools, \"win64\", \"azcopy.exe\")\n        else:\n            azcopy = shutil.which(\"azcopy\")\n            if not azcopy:\n                raise Exception(AZCOPY_MISSING_ERROR)\n            else:\n                logger.warn(\"unable to use built-in azcopy, using system install\")\n                self.azcopy = azcopy\n\n        with open(workbook_data) as f:\n            self.workbook_data = json.load(f)\n\n    def get_subscription_id(self) -> str:\n        if self.subscription_id:\n            return self.subscription_id\n        profile = get_cli_profile()\n        self.subscription_id = cast(str, profile.get_subscription_id())\n        return self.subscription_id\n\n    def get_location_display_name(self) -> str:\n        location_client = get_client_from_cli_profile(\n            SubscriptionClient, subscription_id=self.get_subscription_id()\n        )\n        locations = location_client.subscriptions.list_locations(\n            self.get_subscription_id()\n        )\n        for location in locations:\n            if location.name == self.location:\n                return cast(str, location.display_name)\n\n        raise Exception(\"unknown location: %s\", self.location)\n\n    def check_region(self) -> None:\n        # At the moment, this only checks are the specified providers available\n        # in the selected region\n\n        location = self.get_location_display_name()\n\n        with open(self.arm_template, \"r\") as handle:\n            arm = json.load(handle)\n\n        client = get_client_from_cli_profile(\n            ResourceManagementClient, subscription_id=self.get_subscription_id()\n        )\n        providers = {x.namespace: x for x in client.providers.list()}\n\n        unsupported = []\n\n        for resource in arm[\"resources\"]:\n            namespace, name = resource[\"type\"].split(\"/\", 1)\n\n            # resource types are in the form of a/b/c....\n            # only the top two are listed as resource types within providers\n            name = \"/\".join(name.split(\"/\")[:2])\n\n            if namespace not in providers:\n                unsupported.append(\"Unsupported provider: %s\" % namespace)\n                continue\n\n            provider = providers[namespace]\n            resource_types = {x.resource_type: x for x in provider.resource_types}\n            if name not in resource_types:\n                unsupported.append(\n                    \"Unsupported resource type: %s/%s\" % (namespace, name)\n                )\n                continue\n\n            resource_type = resource_types[name]\n            if (\n                location not in resource_type.locations\n                and len(resource_type.locations) > 0\n            ):\n                unsupported.append(\n                    \"%s/%s is unsupported in %s\" % (namespace, name, self.location)\n                )\n\n        if unsupported:\n            print(\"The following resources required by onefuzz are not supported:\")\n            print(\"\\n\".join([\"* \" + x for x in unsupported]))\n            sys.exit(1)\n\n    def create_password(self, object_id: UUID) -> Tuple[str, str]:\n        return add_application_password(object_id, self.get_subscription_id())\n\n    def setup_rbac(self) -> None:\n        \"\"\"\n        Setup the client application for the OneFuzz instance.\n        By default, Service Principals do not have access to create\n        client applications in AAD.\n        \"\"\"\n        if self.results[\"client_id\"] and self.results[\"client_secret\"]:\n            logger.info(\"using existing client application\")\n            return\n\n        client = get_client_from_cli_profile(\n            GraphRbacManagementClient, subscription_id=self.get_subscription_id()\n        )\n        logger.info(\"checking if RBAC already exists\")\n\n        try:\n            existing = list(\n                client.applications.list(\n                    filter=\"displayName eq '%s'\" % self.application_name\n                )\n            )\n        except GraphErrorException:\n            logger.error(\"unable to query RBAC. Provide client_id and client_secret\")\n            sys.exit(1)\n\n        app_roles = [\n            AppRole(\n                allowed_member_types=[\"Application\"],\n                display_name=OnefuzzAppRole.CliClient.value,\n                id=str(uuid.uuid4()),\n                is_enabled=True,\n                description=\"Allows access from the CLI.\",\n                value=OnefuzzAppRole.CliClient.value,\n            ),\n            AppRole(\n                allowed_member_types=[\"Application\"],\n                display_name=OnefuzzAppRole.ManagedNode.value,\n                id=str(uuid.uuid4()),\n                is_enabled=True,\n                description=\"Allow access from a lab machine.\",\n                value=OnefuzzAppRole.ManagedNode.value,\n            ),\n        ]\n\n        app: Optional[Application] = None\n\n        if not existing:\n            logger.info(\"creating Application registration\")\n\n            if self.multi_tenant_domain:\n                url = \"https://%s/%s\" % (\n                    self.multi_tenant_domain,\n                    self.application_name,\n                )\n            else:\n                url = \"https://%s.azurewebsites.net\" % self.application_name\n\n            params = ApplicationCreateParameters(\n                display_name=self.application_name,\n                identifier_uris=[url],\n                reply_urls=[url + \"/.auth/login/aad/callback\"],\n                optional_claims=OptionalClaims(id_token=[], access_token=[]),\n                required_resource_access=[\n                    RequiredResourceAccess(\n                        resource_access=[\n                            ResourceAccess(id=USER_READ_PERMISSION, type=\"Scope\")\n                        ],\n                        resource_app_id=MICROSOFT_GRAPH_APP_ID,\n                    )\n                ],\n                app_roles=app_roles,\n            )\n\n            app = client.applications.create(params)\n\n            logger.info(\"creating service principal\")\n            service_principal_params = ServicePrincipalCreateParameters(\n                account_enabled=True,\n                app_role_assignment_required=False,\n                service_principal_type=\"Application\",\n                app_id=app.app_id,\n            )\n\n            def try_sp_create() -> None:\n                error: Optional[Exception] = None\n                for _ in range(10):\n                    try:\n                        client.service_principals.create(service_principal_params)\n                        return\n                    except GraphErrorException as err:\n                        # work around timing issue when creating service principal\n                        # https://github.com/Azure/azure-cli/issues/14767\n                        if (\n                            \"service principal being created must in the local tenant\"\n                            not in str(err)\n                        ):\n                            raise err\n                    logger.warning(\n                        \"creating service principal failed with an error that occurs \"\n                        \"due to AAD race conditions\"\n                    )\n                    time.sleep(60)\n                if error is None:\n                    raise Exception(\"service principal creation failed\")\n                else:\n                    raise error\n\n            try_sp_create()\n\n        else:\n            app = existing[0]\n            existing_role_values = [app_role.value for app_role in app.app_roles]\n            has_missing_roles = any(\n                [role.value not in existing_role_values for role in app_roles]\n            )\n\n            if has_missing_roles:\n                # disabling the existing app role first to allow the update\n                # this is a requirement to update the application roles\n                for role in app.app_roles:\n                    role.is_enabled = False\n\n                client.applications.patch(\n                    app.object_id, ApplicationUpdateParameters(app_roles=app.app_roles)\n                )\n\n                # overriding the list of app roles\n                client.applications.patch(\n                    app.object_id, ApplicationUpdateParameters(app_roles=app_roles)\n                )\n\n        if self.multi_tenant_domain and app.sign_in_audience == \"AzureADMyOrg\":\n            url = \"https://%s/%s\" % (\n                self.multi_tenant_domain,\n                self.application_name,\n            )\n            client.applications.patch(\n                app.object_id, ApplicationUpdateParameters(identifier_uris=[url])\n            )\n            set_app_audience(app.object_id, \"AzureADMultipleOrgs\")\n        elif (\n            not self.multi_tenant_domain\n            and app.sign_in_audience == \"AzureADMultipleOrgs\"\n        ):\n            set_app_audience(app.object_id, \"AzureADMyOrg\")\n            url = \"https://%s.azurewebsites.net\" % self.application_name\n            client.applications.patch(\n                app.object_id, ApplicationUpdateParameters(identifier_uris=[url])\n            )\n        else:\n            logger.debug(\"No change to App Registration signInAudence setting\")\n\n            creds = list(client.applications.list_password_credentials(app.object_id))\n            client.applications.update_password_credentials(app.object_id, creds)\n\n        (password_id, password) = self.create_password(app.object_id)\n\n        cli_app = list(\n            client.applications.list(filter=\"appId eq '%s'\" % ONEFUZZ_CLI_APP)\n        )\n\n        if len(cli_app) == 0:\n            logger.info(\n                \"Could not find the default CLI application under the current \"\n                \"subscription, creating a new one\"\n            )\n            app_info = register_application(\n                \"onefuzz-cli\",\n                self.application_name,\n                OnefuzzAppRole.CliClient,\n                self.get_subscription_id(),\n            )\n            if self.multi_tenant_domain:\n                authority = COMMON_AUTHORITY\n            else:\n                authority = app_info.authority\n            self.cli_config = {\n                \"client_id\": app_info.client_id,\n                \"authority\": authority,\n            }\n\n        else:\n            onefuzz_cli_app = cli_app[0]\n            authorize_application(uuid.UUID(onefuzz_cli_app.app_id), app.app_id)\n            if self.multi_tenant_domain:\n                authority = COMMON_AUTHORITY\n            else:\n                onefuzz_client = get_graph_client(self.get_subscription_id())\n                authority = (\n                    \"https://login.microsoftonline.com/%s\"\n                    % onefuzz_client.config.tenant_id\n                )\n            self.cli_config = {\n                \"client_id\": onefuzz_cli_app.app_id,\n                \"authority\": authority,\n            }\n\n        self.results[\"client_id\"] = app.app_id\n        self.results[\"client_secret\"] = password\n\n        # Log `client_secret` for consumption by CI.\n        if self.log_service_principal:\n            logger.info(\"client_id: %s client_secret: %s\", app.app_id, password)\n        else:\n            logger.debug(\"client_id: %s client_secret: %s\", app.app_id, password)\n\n    def deploy_template(self) -> None:\n        logger.info(\"deploying arm template: %s\", self.arm_template)\n\n        with open(self.arm_template, \"r\") as template_handle:\n            template = json.load(template_handle)\n\n        client = get_client_from_cli_profile(\n            ResourceManagementClient, subscription_id=self.get_subscription_id()\n        )\n        client.resource_groups.create_or_update(\n            self.resource_group, {\"location\": self.location}\n        )\n\n        expiry = (datetime.now(TZ_UTC) + timedelta(days=365)).strftime(\n            \"%Y-%m-%dT%H:%M:%SZ\"\n        )\n\n        if self.multi_tenant_domain:\n            # clear the value in the Issuer Url field:\n            # https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient-enterpriseapi-multitenant\n            app_func_audience = \"https://%s/%s\" % (\n                self.multi_tenant_domain,\n                self.application_name,\n            )\n            app_func_issuer = \"\"\n            multi_tenant_domain = {\"value\": self.multi_tenant_domain}\n        else:\n            app_func_audience = \"https://%s.azurewebsites.net\" % self.application_name\n            tenant_oid = str(self.cli_config[\"authority\"]).split(\"/\")[-1]\n            app_func_issuer = \"https://sts.windows.net/%s/\" % tenant_oid\n            multi_tenant_domain = {\"value\": \"\"}\n\n        params = {\n            \"app_func_audience\": {\"value\": app_func_audience},\n            \"name\": {\"value\": self.application_name},\n            \"owner\": {\"value\": self.owner},\n            \"clientId\": {\"value\": self.results[\"client_id\"]},\n            \"clientSecret\": {\"value\": self.results[\"client_secret\"]},\n            \"app_func_issuer\": {\"value\": app_func_issuer},\n            \"signedExpiry\": {\"value\": expiry},\n            \"multi_tenant_domain\": multi_tenant_domain,\n            \"workbookData\": {\"value\": self.workbook_data},\n        }\n        deployment = Deployment(\n            properties=DeploymentProperties(\n                mode=DeploymentMode.incremental, template=template, parameters=params\n            )\n        )\n        count = 0\n        tries = 10\n        error: Optional[Exception] = None\n        while count < tries:\n            count += 1\n\n            try:\n                result = client.deployments.begin_create_or_update(\n                    self.resource_group, gen_guid(), deployment\n                ).result()\n                if result.properties.provisioning_state != \"Succeeded\":\n                    logger.error(\n                        \"error deploying: %s\",\n                        json.dumps(result.as_dict(), indent=4, sort_keys=True),\n                    )\n                    sys.exit(1)\n                self.results[\"deploy\"] = result.properties.outputs\n                return\n            except Exception as err:\n                error = err\n                as_repr = repr(err)\n                # Modeled after Azure-CLI.  See:\n                # https://github.com/Azure/azure-cli/blob/\n                #   3a2f6009cff788fde3b0170823c9129f187b2812/src/azure-cli-core/\n                #   azure/cli/core/commands/arm.py#L1086\n                if (\n                    \"PrincipalNotFound\" in as_repr\n                    and \"does not exist in the directory\" in as_repr\n                ):\n                    logger.info(\"application principal not available in AAD yet\")\n        if error:\n            raise error\n        else:\n            raise Exception(\"unknown error deploying\")\n\n    def assign_scaleset_identity_role(self) -> None:\n        if self.upgrade:\n            logger.info(\"Upgrading: skipping assignment of the managed identity role\")\n            return\n        logger.info(\"assigning the user managed identity role\")\n        assign_app_role(\n            self.application_name,\n            self.results[\"deploy\"][\"scaleset-identity\"][\"value\"],\n            self.get_subscription_id(),\n            OnefuzzAppRole.ManagedNode,\n        )\n\n    def apply_migrations(self) -> None:\n        name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        table_service = TableService(account_name=name, account_key=key)\n        migrate(table_service, self.migrations)\n\n    def set_admins(self) -> None:\n        name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        table_service = TableService(account_name=name, account_key=key)\n        if self.admins:\n            update_admins(table_service, self.application_name, self.admins)\n\n    def create_queues(self) -> None:\n        logger.info(\"creating eventgrid destination queue\")\n\n        name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.queue.core.windows.net\" % name\n        client = QueueServiceClient(\n            account_url=account_url,\n            credential={\"account_name\": name, \"account_key\": key},\n        )\n        for queue in [\n            \"file-changes\",\n            \"task-heartbeat\",\n            \"node-heartbeat\",\n            \"proxy\",\n            \"update-queue\",\n            \"webhooks\",\n            \"signalr-events\",\n        ]:\n            try:\n                client.create_queue(queue)\n            except ResourceExistsError:\n                pass\n\n    def create_eventgrid(self) -> None:\n        logger.info(\"creating eventgrid subscription\")\n        src_resource_id = self.results[\"deploy\"][\"fuzz-storage\"][\"value\"]\n        dst_resource_id = self.results[\"deploy\"][\"func-storage\"][\"value\"]\n        client = get_client_from_cli_profile(\n            StorageManagementClient, subscription_id=self.get_subscription_id()\n        )\n        event_subscription_info = EventSubscription(\n            destination=StorageQueueEventSubscriptionDestination(\n                resource_id=dst_resource_id, queue_name=\"file-changes\"\n            ),\n            filter=EventSubscriptionFilter(\n                included_event_types=[\n                    \"Microsoft.Storage.BlobCreated\",\n                    \"Microsoft.Storage.BlobDeleted\",\n                ]\n            ),\n            retry_policy=RetryPolicy(\n                max_delivery_attempts=30,\n                event_time_to_live_in_minutes=1440,\n            ),\n        )\n\n        client = get_client_from_cli_profile(\n            EventGridManagementClient, subscription_id=self.get_subscription_id()\n        )\n        result = client.event_subscriptions.begin_create_or_update(\n            src_resource_id, \"onefuzz1\", event_subscription_info\n        ).result()\n        if result.provisioning_state != \"Succeeded\":\n            raise Exception(\n                \"eventgrid subscription failed: %s\"\n                % json.dumps(result.as_dict(), indent=4, sort_keys=True),\n            )\n\n    def add_instance_id(self) -> None:\n        logger.info(\"setting instance_id log export\")\n\n        container_name = \"base-config\"\n        blob_name = \"instance_id\"\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if container_name not in [x[\"name\"] for x in client.list_containers()]:\n            client.create_container(container_name)\n\n        blob_client = client.get_blob_client(container_name, blob_name)\n        if blob_client.exists():\n            logger.debug(\"instance_id already exists\")\n            instance_id = uuid.UUID(blob_client.download_blob().readall().decode())\n        else:\n            logger.debug(\"creating new instance_id\")\n            instance_id = uuid.uuid4()\n            blob_client.upload_blob(str(instance_id))\n\n        logger.info(\"instance_id: %s\", instance_id)\n\n    def add_log_export(self) -> None:\n        if not self.export_appinsights:\n            logger.info(\"not exporting appinsights\")\n            return\n\n        container_name = \"app-insights\"\n\n        logger.info(\"adding appinsight log export\")\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if container_name not in [x[\"name\"] for x in client.list_containers()]:\n            client.create_container(container_name)\n\n        expiry = datetime.utcnow() + timedelta(days=2 * 365)\n\n        # NOTE: as this is a long-lived SAS url, it should not be logged and only\n        # used in the the later-on export_configurations.create() call\n        sas = generate_container_sas(\n            account_name,\n            container_name,\n            account_key=key,\n            permission=ContainerSasPermissions(write=True),\n            expiry=expiry,\n        )\n        url = \"%s/%s?%s\" % (account_url, container_name, sas)\n\n        record_types = (\n            \"Requests, Event, Exceptions, Metrics, PageViews, \"\n            \"PageViewPerformance, Rdd, PerformanceCounters, Availability\"\n        )\n\n        req = ApplicationInsightsComponentExportRequest(\n            record_types=record_types,\n            destination_type=\"Blob\",\n            is_enabled=\"true\",\n            destination_address=url,\n        )\n\n        app_insight_client = get_client_from_cli_profile(\n            ApplicationInsightsManagementClient,\n            subscription_id=self.get_subscription_id(),\n        )\n\n        to_delete = []\n        for entry in app_insight_client.export_configurations.list(\n            self.resource_group, self.application_name\n        ):\n            if (\n                entry.storage_name == account_name\n                and entry.container_name == container_name\n            ):\n                to_delete.append(entry.export_id)\n\n        for export_id in to_delete:\n            logger.info(\"replacing existing export: %s\", export_id)\n            app_insight_client.export_configurations.delete(\n                self.resource_group, self.application_name, export_id\n            )\n\n        app_insight_client.export_configurations.create(\n            self.resource_group, self.application_name, req\n        )\n\n    def upload_tools(self) -> None:\n        logger.info(\"uploading tools from %s\", self.tools)\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if \"tools\" not in [x[\"name\"] for x in client.list_containers()]:\n            client.create_container(\"tools\")\n\n        expiry = datetime.utcnow() + timedelta(minutes=30)\n\n        sas = generate_container_sas(\n            account_name,\n            \"tools\",\n            account_key=key,\n            permission=ContainerSasPermissions(\n                read=True, write=True, delete=True, list=True\n            ),\n            expiry=expiry,\n        )\n        url = \"%s/%s?%s\" % (account_url, \"tools\", sas)\n\n        subprocess.check_output(\n            [\n                self.azcopy,\n                \"copy\",\n                os.path.join(self.tools, \"*\"),\n                url,\n                \"--overwrite=true\",\n                \"--recursive=true\",\n            ]\n        )\n\n        subprocess.check_output(\n            [self.azcopy, \"sync\", self.tools, url, \"--delete-destination\", \"true\"]\n        )\n\n    def upload_instance_setup(self) -> None:\n        logger.info(\"uploading instance-specific-setup from %s\", self.instance_specific)\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if \"instance-specific-setup\" not in [\n            x[\"name\"] for x in client.list_containers()\n        ]:\n            client.create_container(\"instance-specific-setup\")\n\n        expiry = datetime.utcnow() + timedelta(minutes=30)\n\n        sas = generate_container_sas(\n            account_name,\n            \"instance-specific-setup\",\n            account_key=key,\n            permission=ContainerSasPermissions(\n                read=True, write=True, delete=True, list=True\n            ),\n            expiry=expiry,\n        )\n        url = \"%s/%s?%s\" % (account_url, \"instance-specific-setup\", sas)\n\n        subprocess.check_output(\n            [\n                self.azcopy,\n                \"copy\",\n                os.path.join(self.instance_specific, \"*\"),\n                url,\n                \"--overwrite=true\",\n                \"--recursive=true\",\n            ]\n        )\n\n        subprocess.check_output(\n            [\n                self.azcopy,\n                \"sync\",\n                self.instance_specific,\n                url,\n                \"--delete-destination\",\n                \"true\",\n            ]\n        )\n\n    def upload_third_party(self) -> None:\n        logger.info(\"uploading third-party tools from %s\", self.third_party)\n        account_name = self.results[\"deploy\"][\"fuzz-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"fuzz-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n\n        client = BlobServiceClient(account_url, credential=key)\n        containers = [x[\"name\"] for x in client.list_containers()]\n\n        for name in os.listdir(self.third_party):\n            path = os.path.join(self.third_party, name)\n            if not os.path.isdir(path):\n                continue\n            if name not in containers:\n                client.create_container(name)\n\n            expiry = datetime.utcnow() + timedelta(minutes=30)\n            sas = generate_container_sas(\n                account_name,\n                name,\n                account_key=key,\n                permission=ContainerSasPermissions(\n                    read=True, write=True, delete=True, list=True\n                ),\n                expiry=expiry,\n            )\n            url = \"%s/%s?%s\" % (account_url, name, sas)\n\n            subprocess.check_output(\n                [\n                    self.azcopy,\n                    \"copy\",\n                    os.path.join(path, \"*\"),\n                    url,\n                    \"--overwrite=true\",\n                    \"--recursive=true\",\n                ]\n            )\n\n            subprocess.check_output(\n                [self.azcopy, \"sync\", path, url, \"--delete-destination\", \"true\"]\n            )\n\n    def deploy_app(self) -> None:\n        logger.info(\"deploying function app %s\", self.app_zip)\n        with tempfile.TemporaryDirectory() as tmpdirname:\n            with zipfile.ZipFile(self.app_zip, \"r\") as zip_ref:\n                func = shutil.which(\"func\")\n                assert func is not None\n\n                zip_ref.extractall(tmpdirname)\n                error: Optional[subprocess.CalledProcessError] = None\n                max_tries = 5\n                for i in range(max_tries):\n                    try:\n                        subprocess.check_output(\n                            [\n                                func,\n                                \"azure\",\n                                \"functionapp\",\n                                \"publish\",\n                                self.application_name,\n                                \"--python\",\n                                \"--no-build\",\n                            ],\n                            env=dict(os.environ, CLI_DEBUG=\"1\"),\n                            cwd=tmpdirname,\n                        )\n                        return\n                    except subprocess.CalledProcessError as err:\n                        error = err\n                        if i + 1 < max_tries:\n                            logger.debug(\"func failure error: %s\", err)\n                            logger.warning(\n                                \"function failed to deploy, waiting 60 \"\n                                \"seconds and trying again\"\n                            )\n                            time.sleep(60)\n                if error is not None:\n                    raise error\n\n    def update_registration(self) -> None:\n        if not self.create_registration:\n            return\n        update_pool_registration(self.application_name, self.get_subscription_id())\n\n    def done(self) -> None:\n        logger.info(TELEMETRY_NOTICE)\n        client_secret_arg = (\n            (\"--client_secret %s\" % self.cli_config[\"client_secret\"])\n            if \"client_secret\" in self.cli_config\n            else \"\"\n        )\n        multi_tenant_domain = \"\"\n        if self.multi_tenant_domain:\n            multi_tenant_domain = \"--tenant_domain %s\" % self.multi_tenant_domain\n        logger.info(\n            \"Update your CLI config via: onefuzz config --endpoint \"\n            \"https://%s.azurewebsites.net --authority %s --client_id %s %s %s\",\n            self.application_name,\n            self.cli_config[\"authority\"],\n            self.cli_config[\"client_id\"],\n            client_secret_arg,\n            multi_tenant_domain,\n        )\n\n\ndef arg_dir(arg: str) -> str:\n    if not os.path.isdir(arg):\n        raise argparse.ArgumentTypeError(\"not a directory: %s\" % arg)\n    return arg\n\n\ndef arg_file(arg: str) -> str:\n    if not os.path.isfile(arg):\n        raise argparse.ArgumentTypeError(\"not a file: %s\" % arg)\n    return arg\n\n\ndef main() -> None:\n    rbac_only_states = [\n        (\"check_region\", Client.check_region),\n        (\"rbac\", Client.setup_rbac),\n        (\"arm\", Client.deploy_template),\n        (\"assign_scaleset_identity_role\", Client.assign_scaleset_identity_role),\n    ]\n\n    full_deployment_states = rbac_only_states + [\n        (\"apply_migrations\", Client.apply_migrations),\n        (\"set_admins\", Client.set_admins),\n        (\"queues\", Client.create_queues),\n        (\"eventgrid\", Client.create_eventgrid),\n        (\"tools\", Client.upload_tools),\n        (\"add_instance_id\", Client.add_instance_id),\n        (\"instance-specific-setup\", Client.upload_instance_setup),\n        (\"third-party\", Client.upload_third_party),\n        (\"api\", Client.deploy_app),\n        (\"export_appinsights\", Client.add_log_export),\n        (\"update_registration\", Client.update_registration),\n    ]\n\n    formatter = argparse.ArgumentDefaultsHelpFormatter\n    parser = argparse.ArgumentParser(formatter_class=formatter)\n    parser.add_argument(\"location\")\n    parser.add_argument(\"resource_group\")\n    parser.add_argument(\"application_name\")\n    parser.add_argument(\"owner\")\n    parser.add_argument(\n        \"--arm-template\",\n        type=arg_file,\n        default=\"azuredeploy.json\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--workbook-data\",\n        type=arg_file,\n        default=\"workbook-data.json\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--app-zip\",\n        type=arg_file,\n        default=\"api-service.zip\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--tools\", type=arg_dir, default=\"tools\", help=\"(default: %(default)s)\"\n    )\n    parser.add_argument(\n        \"--instance_specific\",\n        type=arg_dir,\n        default=\"instance-specific-setup\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--third-party\",\n        type=arg_dir,\n        default=\"third-party\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\"--client_id\")\n    parser.add_argument(\"--client_secret\")\n    parser.add_argument(\n        \"--start_at\",\n        default=full_deployment_states[0][0],\n        choices=[x[0] for x in full_deployment_states],\n        help=(\n            \"Debug deployments by starting at a specific state.  \"\n            \"NOT FOR PRODUCTION USE.  (default: %(default)s)\"\n        ),\n    )\n    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")\n    parser.add_argument(\n        \"--create_pool_registration\",\n        action=\"store_true\",\n        help=\"Create an application registration and/or generate a \"\n        \"password for the pool agent\",\n    )\n    parser.add_argument(\n        \"--upgrade\",\n        action=\"store_true\",\n        help=\"Indicates that the instance is being upgraded\",\n    )\n    parser.add_argument(\n        \"--apply_migrations\",\n        type=str,\n        nargs=\"+\",\n        default=[],\n        help=\"list of migration to apply to the azure table\",\n    )\n    parser.add_argument(\n        \"--export_appinsights\",\n        action=\"store_true\",\n        help=\"enable appinsight log export\",\n    )\n    parser.add_argument(\n        \"--log_service_principal\",\n        action=\"store_true\",\n        help=\"display service prinipal with info log level\",\n    )\n    parser.add_argument(\n        \"--multi_tenant_domain\",\n        type=str,\n        default=None,\n        help=\"enable multi-tenant authentication with this tenant domain\",\n    )\n    parser.add_argument(\n        \"--subscription_id\",\n        type=str,\n    )\n    parser.add_argument(\n        \"--rbac_only\",\n        action=\"store_true\",\n        help=\"execute only the steps required to create the rbac resources\",\n    )\n    parser.add_argument(\n        \"--set_admins\",\n        type=UUID,\n        nargs=\"*\",\n        help=\"set the list of administrators (by OID in AAD)\",\n    )\n\n    args = parser.parse_args()\n\n    if shutil.which(\"func\") is None:\n        logger.error(FUNC_TOOLS_ERROR)\n        sys.exit(1)\n\n    client = Client(\n        resource_group=args.resource_group,\n        location=args.location,\n        application_name=args.application_name,\n        owner=args.owner,\n        client_id=args.client_id,\n        client_secret=args.client_secret,\n        app_zip=args.app_zip,\n        tools=args.tools,\n        instance_specific=args.instance_specific,\n        third_party=args.third_party,\n        arm_template=args.arm_template,\n        workbook_data=args.workbook_data,\n        create_registration=args.create_pool_registration,\n        migrations=args.apply_migrations,\n        export_appinsights=args.export_appinsights,\n        log_service_principal=args.log_service_principal,\n        multi_tenant_domain=args.multi_tenant_domain,\n        upgrade=args.upgrade,\n        subscription_id=args.subscription_id,\n        admins=args.set_admins,\n    )\n    if args.verbose:\n        level = logging.DEBUG\n    else:\n        level = logging.WARN\n\n    logging.basicConfig(level=level)\n\n    logging.getLogger(\"deploy\").setLevel(logging.INFO)\n\n    if args.rbac_only:\n        logger.warning(\n            \"'rbac_only' specified. The deployment will execute \"\n            \"only the steps required to create the rbac resources\"\n        )\n        states = rbac_only_states\n    else:\n        states = full_deployment_states\n\n    if args.start_at != states[0][0]:\n        logger.warning(\n            \"*** Starting at a non-standard deployment state.  \"\n            \"This may result in a broken deployment.  ***\"\n        )\n\n    started = False\n    for state in states:\n        if args.start_at == state[0]:\n            started = True\n        if started:\n            state[1](client)\n\n    client.done()\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport argparse\nimport json\nfrom typing import List, Optional\nfrom uuid import UUID\n\nfrom azure.common.client_factory import get_client_from_cli_profile\nfrom azure.cosmosdb.table.tableservice import TableService\nfrom azure.mgmt.storage import StorageManagementClient\n\nTABLE_NAME = \"InstanceConfig\"\n\n\ndef create_if_missing(table_service: TableService) -> None:\n    if not table_service.exists(TABLE_NAME):\n        table_service.create_table(TABLE_NAME)\n\n\ndef update_admins(\n    table_service: TableService, resource_group: str, admins: List[UUID]\n) -> None:\n    create_if_missing(table_service)\n    admins_as_str: Optional[List[str]] = None\n    if admins:\n        admins_as_str = [str(x) for x in admins]\n\n    table_service.insert_or_merge_entity(\n        TABLE_NAME,\n        {\n            \"PartitionKey\": resource_group,\n            \"RowKey\": resource_group,\n            \"admins\": json.dumps(admins_as_str),\n        },\n    )\n\n\ndef main() -> None:\n    formatter = argparse.ArgumentDefaultsHelpFormatter\n    parser = argparse.ArgumentParser(formatter_class=formatter)\n    parser.add_argument(\"resource_group\")\n    parser.add_argument(\"storage_account\")\n    parser.add_argument(\"admins\", type=UUID, nargs=\"*\")\n    args = parser.parse_args()\n\n    client = get_client_from_cli_profile(StorageManagementClient)\n    storage_keys = client.storage_accounts.list_keys(\n        args.resource_group, args.storage_account\n    )\n    table_service = TableService(\n        account_name=args.storage_account, account_key=storage_keys.keys[0].value\n    )\n    update_admins(table_service, args.resource_group, args.admins)\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n\nimport sys\nfrom typing import List, Optional\nfrom uuid import UUID\n\nfrom onefuzztypes.enums import (\n    OS,\n    Architecture,\n    ContainerType,\n    ErrorCode,\n    NodeState,\n    ScalesetState,\n    TaskState,\n    TaskType,\n    VmState,\n)\nfrom onefuzztypes.events import (\n    Event,\n    EventCrashReported,\n    EventFileAdded,\n    EventInstanceConfigUpdated,\n    EventJobCreated,\n    EventJobStopped,\n    EventNodeCreated,\n    EventNodeDeleted,\n    EventNodeHeartbeat,\n    EventNodeStateUpdated,\n    EventPing,\n    EventPoolCreated,\n    EventPoolDeleted,\n    EventProxyCreated,\n    EventProxyDeleted,\n    EventProxyFailed,\n    EventProxyStateUpdated,\n    EventRegressionReported,\n    EventScalesetCreated,\n    EventScalesetDeleted,\n    EventScalesetFailed,\n    EventScalesetResizeScheduled,\n    EventScalesetStateUpdated,\n    EventTaskCreated,\n    EventTaskFailed,\n    EventTaskHeartbeat,\n    EventTaskStateUpdated,\n    EventTaskStopped,\n    EventType,\n    JobTaskStopped,\n    get_event_type,\n)\nfrom onefuzztypes.models import (\n    BlobRef,\n    CrashTestResult,\n    Error,\n    InstanceConfig,\n    JobConfig,\n    RegressionReport,\n    Report,\n    TaskConfig,\n    TaskContainers,\n    TaskDetails,\n    UserInfo,\n)\nfrom onefuzztypes.primitives import Container, PoolName, Region\nfrom onefuzztypes.webhooks import WebhookMessage\n\nEMPTY_SHA256 = \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\nZERO_SHA256 = \"0\" * len(EMPTY_SHA256)\n\n\ndef layer(depth: int, title: str, content: Optional[str] = None) -> str:\n    result = f\"{'#' * depth} {title}\\n\\n\"\n    if content is not None:\n        result += f\"{content}\\n\\n\"\n    return result\n\n\ndef typed(depth: int, title: str, content: str, data_type: str) -> str:\n    return f\"{'#' * depth} {title}\\n\\n```{data_type}\\n{content}\\n```\\n\\n\"\n\n\ndef main() -> None:\n    if len(sys.argv) < 2:\n        print(f\"usage: {__file__} [OUTPUT_FILE]\")\n        sys.exit(1)\n    filename = sys.argv[1]\n\n    task_config = TaskConfig(\n        job_id=UUID(int=0),\n        task=TaskDetails(\n            type=TaskType.libfuzzer_fuzz,\n            duration=1,\n            target_exe=\"fuzz.exe\",\n            target_env={},\n            target_options=[],\n        ),\n        containers=[\n            TaskContainers(name=Container(\"my-setup\"), type=ContainerType.setup),\n            TaskContainers(name=Container(\"my-inputs\"), type=ContainerType.inputs),\n            TaskContainers(name=Container(\"my-crashes\"), type=ContainerType.crashes),\n        ],\n        tags={},\n    )\n    report = Report(\n        input_blob=BlobRef(\n            account=\"contoso-storage-account\",\n            container=Container(\"crashes\"),\n            name=\"input.txt\",\n        ),\n        executable=\"fuzz.exe\",\n        crash_type=\"example crash report type\",\n        crash_site=\"example crash site\",\n        call_stack=[\"#0 line\", \"#1 line\", \"#2 line\"],\n        call_stack_sha256=ZERO_SHA256,\n        input_sha256=EMPTY_SHA256,\n        asan_log=\"example asan log\",\n        task_id=UUID(int=0),\n        job_id=UUID(int=0),\n        scariness_score=10,\n        scariness_description=\"example-scariness\",\n    )\n    examples: List[Event] = [\n        EventPing(ping_id=UUID(int=0)),\n        EventTaskCreated(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            config=task_config,\n            user_info=UserInfo(\n                application_id=UUID(int=0),\n                object_id=UUID(int=0),\n                upn=\"example@contoso.com\",\n            ),\n        ),\n        EventTaskStopped(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            user_info=UserInfo(\n                application_id=UUID(int=0),\n                object_id=UUID(int=0),\n                upn=\"example@contoso.com\",\n            ),\n            config=task_config,\n        ),\n        EventTaskFailed(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            error=Error(code=ErrorCode.TASK_FAILED, errors=[\"example error message\"]),\n            user_info=UserInfo(\n                application_id=UUID(int=0),\n                object_id=UUID(int=0),\n                upn=\"example@contoso.com\",\n            ),\n            config=task_config,\n        ),\n        EventTaskStateUpdated(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            state=TaskState.init,\n            config=task_config,\n        ),\n        EventProxyCreated(region=Region(\"eastus\"), proxy_id=UUID(int=0)),\n        EventProxyDeleted(region=Region(\"eastus\"), proxy_id=UUID(int=0)),\n        EventProxyFailed(\n            region=Region(\"eastus\"),\n            proxy_id=UUID(int=0),\n            error=Error(code=ErrorCode.PROXY_FAILED, errors=[\"example error message\"]),\n        ),\n        EventProxyStateUpdated(\n            region=Region(\"eastus\"),\n            proxy_id=UUID(int=0),\n            state=VmState.init,\n        ),\n        EventPoolCreated(\n            pool_name=PoolName(\"example\"),\n            os=OS.linux,\n            arch=Architecture.x86_64,\n            managed=True,\n        ),\n        EventPoolDeleted(pool_name=PoolName(\"example\")),\n        EventScalesetCreated(\n            scaleset_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            vm_sku=\"Standard_D2s_v3\",\n            image=\"Canonical:UbuntuServer:18.04-LTS:latest\",\n            region=Region(\"eastus\"),\n            size=10,\n        ),\n        EventScalesetFailed(\n            scaleset_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            error=Error(\n                code=ErrorCode.UNABLE_TO_RESIZE, errors=[\"example error message\"]\n            ),\n        ),\n        EventScalesetDeleted(scaleset_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventScalesetStateUpdated(\n            scaleset_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            state=ScalesetState.init,\n        ),\n        EventScalesetResizeScheduled(\n            scaleset_id=UUID(int=0), pool_name=PoolName(\"example\"), size=0\n        ),\n        EventJobCreated(\n            job_id=UUID(int=0),\n            config=JobConfig(\n                project=\"example project\",\n                name=\"example name\",\n                build=\"build 1\",\n                duration=24,\n            ),\n        ),\n        EventJobStopped(\n            job_id=UUID(int=0),\n            config=JobConfig(\n                project=\"example project\",\n                name=\"example name\",\n                build=\"build 1\",\n                duration=24,\n            ),\n            task_info=[\n                JobTaskStopped(\n                    task_id=UUID(int=0),\n                    task_type=TaskType.libfuzzer_fuzz,\n                    error=Error(\n                        code=ErrorCode.TASK_FAILED, errors=[\"example error message\"]\n                    ),\n                ),\n                JobTaskStopped(\n                    task_id=UUID(int=1),\n                    task_type=TaskType.libfuzzer_coverage,\n                ),\n            ],\n        ),\n        EventNodeCreated(machine_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventNodeDeleted(machine_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventNodeStateUpdated(\n            machine_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            state=NodeState.setting_up,\n        ),\n        EventRegressionReported(\n            regression_report=RegressionReport(\n                crash_test_result=CrashTestResult(crash_report=report),\n                original_crash_test_result=CrashTestResult(crash_report=report),\n            ),\n            container=Container(\"container-name\"),\n            filename=\"example.json\",\n        ),\n        EventCrashReported(\n            container=Container(\"container-name\"),\n            filename=\"example.json\",\n            report=report,\n        ),\n        EventFileAdded(container=Container(\"container-name\"), filename=\"example.txt\"),\n        EventNodeHeartbeat(machine_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventTaskHeartbeat(task_id=UUID(int=0), job_id=UUID(int=0), config=task_config),\n        EventInstanceConfigUpdated(config=InstanceConfig(admins=[UUID(int=0)])),\n    ]\n\n    # works around `mypy` not handling that Union has `__args__`\n    for event in getattr(Event, \"__args__\", []):\n        seen = False\n        for value in examples:\n            if isinstance(value, event):\n                seen = True\n                break\n        assert seen, \"missing event type definition: %s\" % event.__name__\n\n    event_types = [get_event_type(x) for x in examples]\n\n    for event_type in EventType:\n        assert event_type in event_types, (\n            \"missing event type definition: %s\" % event_type.name\n        )\n\n    message = WebhookMessage(\n        webhook_id=UUID(int=0),\n        event_id=UUID(int=0),\n        event_type=EventType.ping,\n        event=EventPing(ping_id=UUID(int=0)),\n        instance_id=UUID(int=0),\n        instance_name=\"example\",\n    )\n\n    result = \"\"\n    result += layer(\n        1,\n        \"Webhook Events\",\n        \"This document describes the basic webhook event subscriptions \"\n        \"available in OneFuzz\",\n    )\n    result += layer(\n        2,\n        \"Payload\",\n        \"Each event will be submitted via HTTP POST to the user provided URL.\",\n    )\n\n    result += typed(\n        3,\n        \"Example\",\n        message.json(indent=4, exclude_none=True, sort_keys=True),\n        \"json\",\n    )\n    result += layer(2, \"Event Types (EventType)\")\n\n    event_map = {get_event_type(x).name: x for x in examples}\n\n    for name in sorted(event_map.keys()):\n        result += f\"* [{name}](#{name})\\n\"\n\n    result += \"\\n\"\n\n    for name in sorted(event_map.keys()):\n        example = event_map[name]\n        result += layer(3, name)\n        result += typed(\n            4,\n            \"Example\",\n            example.json(indent=4, exclude_none=True, sort_keys=True),\n            \"json\",\n        )\n        result += typed(\n            4, \"Schema\", example.schema_json(indent=4, sort_keys=True), \"json\"\n        )\n\n    result += typed(\n        2, \"Full Event Schema\", message.schema_json(indent=4, sort_keys=True), \"json\"\n    )\n\n    with open(filename, \"w\", newline=\"\\n\", encoding=\"utf8\") as handle:\n        handle.write(result)\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nfrom datetime import datetime\nfrom typing import Any, Dict, Generic, List, Optional, Tuple, TypeVar, Union\nfrom uuid import UUID, uuid4\n\nfrom pydantic import BaseModel, Field, root_validator, validator\nfrom pydantic.dataclasses import dataclass\n\nfrom ._monkeypatch import _check_hotfix\nfrom .consts import ONE_HOUR, SEVEN_DAYS\nfrom .enums import (\n    OS,\n    Architecture,\n    Compare,\n    ContainerPermission,\n    ContainerType,\n    ErrorCode,\n    GithubIssueSearchMatch,\n    GithubIssueState,\n    HeartbeatType,\n    JobState,\n    NodeState,\n    NodeTaskState,\n    PoolState,\n    ScalesetState,\n    StatsFormat,\n    TaskDebugFlag,\n    TaskFeature,\n    TaskState,\n    TaskType,\n    VmState,\n)\nfrom .primitives import Container, PoolName, Region\n\n\nclass UserInfo(BaseModel):\n    application_id: Optional[UUID]\n    object_id: Optional[UUID]\n    upn: Optional[str]\n\n\n# Stores the address of a secret\nclass SecretAddress(BaseModel):\n    # keyvault address of a secret\n    url: str\n\n\nT = TypeVar(\"T\")\n\n\n# This class allows us to store some data that are intended to be secret\n# The secret field stores either the raw data or the address of that data\n# This class allows us to maintain backward compatibility with existing\n# NotificationTemplate classes\n@dataclass\nclass SecretData(Generic[T]):\n    secret: Union[T, SecretAddress]\n\n    def __init__(self, secret: Union[T, SecretAddress]):\n        try:\n            self.secret = SecretAddress.parse_obj(secret)\n        except Exception:\n            self.secret = secret\n\n    def __str__(self) -> str:\n        return self.__repr__()\n\n    def __repr__(self) -> str:\n        if isinstance(self.secret, SecretAddress):\n            return str(self.secret)\n        else:\n            return \"[REDACTED]\"\n\n\nclass EnumModel(BaseModel):\n    @root_validator(pre=True)\n    def exactly_one(cls: Any, values: Any) -> Any:\n        some = []\n\n        for field, val in values.items():\n            if val is not None:\n                some.append(field)\n\n        if not some:\n            raise ValueError(\"no variant set for enum\")\n\n        if len(some) > 1:\n            raise ValueError(\"multiple values set for enum: %s\" % some)\n\n        return values\n\n\nclass Error(BaseModel):\n    code: ErrorCode\n    errors: List[str]\n\n\nOkType = TypeVar(\"OkType\")\nResult = Union[OkType, Error]\n\n\nclass FileEntry(BaseModel):\n    container: Container\n    filename: str\n    sas_url: Optional[str]\n\n\nclass Authentication(BaseModel):\n    password: str\n    public_key: str\n    private_key: str\n\n\nclass JobConfig(BaseModel):\n    project: str\n    name: str\n    build: str\n    duration: int = Field(ge=ONE_HOUR, le=SEVEN_DAYS)\n\n\nclass ReproConfig(BaseModel):\n    container: Container\n    path: str\n    duration: int = Field(ge=ONE_HOUR, le=SEVEN_DAYS)\n\n\nclass TaskDetails(BaseModel):\n    type: TaskType\n    duration: int = Field(ge=ONE_HOUR, le=SEVEN_DAYS)\n    target_exe: Optional[str]\n    target_env: Optional[Dict[str, str]]\n    target_options: Optional[List[str]]\n    target_workers: Optional[int]\n    target_options_merge: Optional[bool]\n    check_asan_log: Optional[bool]\n    check_debugger: Optional[bool] = Field(default=True)\n    check_retry_count: Optional[int] = Field(ge=0)\n    check_fuzzer_help: Optional[bool]\n    expect_crash_on_failure: Optional[bool]\n    rename_output: Optional[bool]\n    supervisor_exe: Optional[str]\n    supervisor_env: Optional[Dict[str, str]]\n    supervisor_options: Optional[List[str]]\n    supervisor_input_marker: Optional[str]\n    generator_exe: Optional[str]\n    generator_env: Optional[Dict[str, str]]\n    generator_options: Optional[List[str]]\n    analyzer_exe: Optional[str]\n    analyzer_env: Optional[Dict[str, str]]\n    analyzer_options: Optional[List[str]]\n    wait_for_files: Optional[ContainerType]\n    stats_file: Optional[str]\n    stats_format: Optional[StatsFormat]\n    reboot_after_setup: Optional[bool]\n    target_timeout: Optional[int] = Field(ge=1)\n    ensemble_sync_delay: Optional[int]\n    preserve_existing_outputs: Optional[bool]\n    report_list: Optional[List[str]]\n    minimized_stack_depth: Optional[int]\n    coverage_filter: Optional[str]\n\n\nclass TaskPool(BaseModel):\n    count: int\n    pool_name: PoolName\n\n\nclass TaskVm(BaseModel):\n    region: Region\n    sku: str\n    image: str\n    count: int = Field(default=1, ge=0)\n    spot_instances: bool = Field(default=False)\n    reboot_after_setup: Optional[bool]\n\n\nclass TaskContainers(BaseModel):\n    type: ContainerType\n    name: Container\n\n\nclass TaskConfig(BaseModel):\n    job_id: UUID\n    prereq_tasks: Optional[List[UUID]]\n    task: TaskDetails\n    vm: Optional[TaskVm]\n    pool: Optional[TaskPool]\n    containers: List[TaskContainers]\n    tags: Dict[str, str]\n    debug: Optional[List[TaskDebugFlag]]\n    colocate: Optional[bool]\n\n\nclass BlobRef(BaseModel):\n    account: str\n    container: Container\n    name: str\n\n\nclass Report(BaseModel):\n    input_url: Optional[str]\n    input_blob: Optional[BlobRef]\n    executable: str\n    crash_type: str\n    crash_site: str\n    call_stack: List[str]\n    call_stack_sha256: str\n    input_sha256: str\n    asan_log: Optional[str]\n    task_id: UUID\n    job_id: UUID\n    scariness_score: Optional[int]\n    scariness_description: Optional[str]\n    minimized_stack: Optional[List[str]]\n    minimized_stack_sha256: Optional[str]\n    minimized_stack_function_names: Optional[List[str]]\n    minimized_stack_function_names_sha256: Optional[str]\n    minimized_stack_function_lines: Optional[List[str]]\n    minimized_stack_function_lines_sha256: Optional[str]\n\n\nclass NoReproReport(BaseModel):\n    input_sha256: str\n    input_blob: Optional[BlobRef]\n    executable: str\n    task_id: UUID\n    job_id: UUID\n    tries: int\n    error: Optional[str]\n\n\nclass CrashTestResult(BaseModel):\n    crash_report: Optional[Report]\n    no_repro: Optional[NoReproReport]\n\n\nclass RegressionReport(BaseModel):\n    crash_test_result: CrashTestResult\n    original_crash_test_result: Optional[CrashTestResult]\n\n\nclass ADODuplicateTemplate(BaseModel):\n    increment: List[str]\n    comment: Optional[str]\n    set_state: Dict[str, str]\n    ado_fields: Dict[str, str]\n\n\nclass ADOTemplate(BaseModel):\n    base_url: str\n    auth_token: SecretData[str]\n    project: str\n    type: str\n    unique_fields: List[str]\n    comment: Optional[str]\n    ado_fields: Dict[str, str]\n    on_duplicate: ADODuplicateTemplate\n\n    # validator needed for backward compatibility\n    @validator(\"auth_token\", pre=True, always=True)\n    def validate_auth_token(cls, v: Any) -> SecretData:\n        if isinstance(v, str):\n            return SecretData(secret=v)\n        elif isinstance(v, SecretData):\n            return v\n        elif isinstance(v, dict):\n            return SecretData(secret=v[\"secret\"])\n        else:\n            raise TypeError(f\"invalid datatype {type(v)}\")\n\n\nclass TeamsTemplate(BaseModel):\n    url: SecretData[str]\n\n    # validator needed for backward compatibility\n    @validator(\"url\", pre=True, always=True)\n    def validate_url(cls, v: Any) -> SecretData:\n        if isinstance(v, str):\n            return SecretData(secret=v)\n        elif isinstance(v, SecretData):\n            return v\n        elif isinstance(v, dict):\n            return SecretData(secret=v[\"secret\"])\n        else:\n            raise TypeError(f\"invalid datatype {type(v)}\")\n\n\nclass ContainerDefinition(BaseModel):\n    type: ContainerType\n    compare: Compare\n    value: int\n    permissions: List[ContainerPermission]\n\n\nclass VmDefinition(BaseModel):\n    compare: Compare\n    value: int\n\n\nclass TaskDefinition(BaseModel):\n    features: List[TaskFeature]\n    containers: List[ContainerDefinition]\n    monitor_queue: Optional[ContainerType]\n    vm: VmDefinition\n\n\n# TODO: service shouldn't pass SyncedDir, but just the url and let the agent\n# come up with paths\nclass SyncedDir(BaseModel):\n    path: str\n    url: str\n\n\nCONTAINER_DEF = Optional[Union[SyncedDir, List[SyncedDir]]]\n\n\nclass ClientCredentials(BaseModel):\n    client_id: UUID\n    client_secret: str\n\n\nclass AgentConfig(BaseModel):\n    client_credentials: Optional[ClientCredentials]\n    onefuzz_url: str\n    pool_name: PoolName\n    heartbeat_queue: Optional[str]\n    instance_telemetry_key: Optional[str]\n    microsoft_telemetry_key: Optional[str]\n    multi_tenant_domain: Optional[str]\n    instance_id: UUID\n\n\nclass TaskUnitConfig(BaseModel):\n    instance_id: UUID\n    job_id: UUID\n    task_id: UUID\n    task_type: TaskType\n    instance_telemetry_key: Optional[str]\n    microsoft_telemetry_key: Optional[str]\n    heartbeat_queue: str\n    # command_queue: str\n    input_queue: Optional[str]\n    supervisor_exe: Optional[str]\n    supervisor_env: Optional[Dict[str, str]]\n    supervisor_options: Optional[List[str]]\n    supervisor_input_marker: Optional[str]\n    target_exe: Optional[str]\n    target_env: Optional[Dict[str, str]]\n    target_options: Optional[List[str]]\n    target_timeout: Optional[int]\n    target_options_merge: Optional[bool]\n    target_workers: Optional[int]\n    check_asan_log: Optional[bool]\n    check_debugger: Optional[bool]\n    check_retry_count: Optional[int]\n    check_fuzzer_help: Optional[bool]\n    expect_crash_on_failure: Optional[bool]\n    rename_output: Optional[bool]\n    generator_exe: Optional[str]\n    generator_env: Optional[Dict[str, str]]\n    generator_options: Optional[List[str]]\n    wait_for_files: Optional[str]\n    analyzer_exe: Optional[str]\n    analyzer_env: Optional[Dict[str, str]]\n    analyzer_options: Optional[List[str]]\n    stats_file: Optional[str]\n    stats_format: Optional[StatsFormat]\n    ensemble_sync_delay: Optional[int]\n    report_list: Optional[List[str]]\n    minimized_stack_depth: Optional[int]\n    coverage_filter: Optional[str]\n\n    # from here forwards are Container definitions.  These need to be inline\n    # with TaskDefinitions and ContainerTypes\n    analysis: CONTAINER_DEF\n    coverage: CONTAINER_DEF\n    crashes: CONTAINER_DEF\n    inputs: CONTAINER_DEF\n    no_repro: CONTAINER_DEF\n    readonly_inputs: CONTAINER_DEF\n    reports: CONTAINER_DEF\n    tools: CONTAINER_DEF\n    unique_inputs: CONTAINER_DEF\n    unique_reports: CONTAINER_DEF\n    regression_reports: CONTAINER_DEF\n\n\nclass Forward(BaseModel):\n    src_port: int\n    dst_ip: str\n    dst_port: int\n\n\nclass ProxyConfig(BaseModel):\n    url: str\n    notification: str\n    region: Region\n    proxy_id: UUID\n    forwards: List[Forward]\n    instance_telemetry_key: Optional[str]\n    microsoft_telemetry_key: Optional[str]\n    instance_id: UUID\n\n\nclass ProxyHeartbeat(BaseModel):\n    region: Region\n    proxy_id: UUID\n    forwards: List[Forward]\n    timestamp: datetime = Field(default_factory=datetime.utcnow)\n\n\nclass Files(BaseModel):\n    files: List[str]\n\n\nclass WorkUnit(BaseModel):\n    job_id: UUID\n    task_id: UUID\n    task_type: TaskType\n\n    # JSON-serialized `TaskUnitConfig`.\n    config: str\n\n\nclass WorkSet(BaseModel):\n    reboot: bool\n    setup_url: str\n    script: bool\n    work_units: List[WorkUnit]\n\n\nclass WorkUnitSummary(BaseModel):\n    job_id: UUID\n    task_id: UUID\n    task_type: TaskType\n\n\nclass WorkSetSummary(BaseModel):\n    work_units: List[WorkUnitSummary]\n\n\nclass GithubIssueDuplicate(BaseModel):\n    comment: Optional[str]\n    labels: List[str]\n    reopen: bool\n\n\nclass GithubIssueSearch(BaseModel):\n    author: Optional[str]\n    state: Optional[GithubIssueState]\n    field_match: List[GithubIssueSearchMatch]\n    string: str\n\n\nclass GithubAuth(BaseModel):\n    user: str = Field(min_length=1)\n    personal_access_token: str = Field(min_length=1)\n\n\nclass GithubIssueTemplate(BaseModel):\n    auth: SecretData[GithubAuth]\n    organization: str = Field(min_length=1)\n    repository: str = Field(min_length=1)\n    title: str = Field(min_length=1)\n    body: str\n    unique_search: GithubIssueSearch\n    assignees: List[str]\n    labels: List[str]\n    on_duplicate: GithubIssueDuplicate\n\n    # validator needed for backward compatibility\n    @validator(\"auth\", pre=True, always=True)\n    def validate_auth(cls, v: Any) -> SecretData:\n        def try_parse_GithubAuth(x: dict) -> Optional[GithubAuth]:\n            try:\n                return GithubAuth.parse_obj(x)\n            except Exception:\n                return None\n\n        if isinstance(v, GithubAuth):\n            return SecretData(secret=v)\n        elif isinstance(v, SecretData):\n            return v\n        elif isinstance(v, dict):\n            githubAuth = try_parse_GithubAuth(v)\n            if githubAuth:\n                return SecretData(secret=githubAuth)\n\n            githubAuth = try_parse_GithubAuth(v[\"secret\"])\n            if githubAuth:\n                return SecretData(secret=githubAuth)\n\n            return SecretData(secret=v[\"secret\"])\n        else:\n            raise TypeError(f\"invalid datatype {type(v)}\")\n\n\nNotificationTemplate = Union[ADOTemplate, TeamsTemplate, GithubIssueTemplate]\n\n\nclass Notification(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    container: Container\n    notification_id: UUID = Field(default_factory=uuid4)\n    config: NotificationTemplate\n\n\nclass JobTaskInfo(BaseModel):\n    task_id: UUID\n    type: TaskType\n    state: TaskState\n\n\nclass Job(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    job_id: UUID = Field(default_factory=uuid4)\n    state: JobState = Field(default=JobState.init)\n    config: JobConfig\n    error: Optional[str]\n    end_time: Optional[datetime] = None\n    task_info: Optional[List[JobTaskInfo]]\n    user_info: Optional[UserInfo]\n\n\nclass TaskHeartbeatEntry(BaseModel):\n    task_id: UUID\n    job_id: Optional[UUID]\n    machine_id: UUID\n    data: List[Dict[str, HeartbeatType]]\n\n\nclass NodeHeartbeatEntry(BaseModel):\n    node_id: UUID\n    data: List[Dict[str, HeartbeatType]]\n\n\nclass NodeCommandStopIfFree(BaseModel):\n    pass\n\n\nclass StopNodeCommand(BaseModel):\n    pass\n\n\nclass StopTaskNodeCommand(BaseModel):\n    task_id: UUID\n\n\nclass NodeCommandAddSshKey(BaseModel):\n    public_key: str\n\n\nclass NodeCommand(EnumModel):\n    stop: Optional[StopNodeCommand]\n    stop_task: Optional[StopTaskNodeCommand]\n    add_ssh_key: Optional[NodeCommandAddSshKey]\n    stop_if_free: Optional[NodeCommandStopIfFree]\n\n\nclass NodeCommandEnvelope(BaseModel):\n    command: NodeCommand\n    message_id: str\n\n\nclass Node(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    pool_name: PoolName\n    pool_id: Optional[UUID]\n    machine_id: UUID\n    state: NodeState = Field(default=NodeState.init)\n    scaleset_id: Optional[UUID] = None\n    tasks: Optional[List[Tuple[UUID, NodeTaskState]]] = None\n    messages: Optional[List[NodeCommand]] = None\n    heartbeat: Optional[datetime]\n    version: str = Field(default=\"1.0.0\")\n    reimage_requested: bool = Field(default=False)\n    delete_requested: bool = Field(default=False)\n    debug_keep_node: bool = Field(default=False)\n\n\nclass ScalesetSummary(BaseModel):\n    scaleset_id: UUID\n    state: ScalesetState\n\n\nclass NodeTasks(BaseModel):\n    machine_id: UUID\n    task_id: UUID\n    state: NodeTaskState = Field(default=NodeTaskState.init)\n\n\nclass AutoScaleConfig(BaseModel):\n    image: str\n    max_size: int = Field(default=1000, le=1000, ge=0)  # max size of pool\n    min_size: int = Field(default=0, le=1000, ge=0)  # min size of pool\n    region: Optional[Region]\n    scaleset_size: int  # Individual scaleset size\n    spot_instances: bool = Field(default=False)\n    ephemeral_os_disks: bool = Field(default=False)\n    vm_sku: str\n\n    @root_validator()\n    def check_data(cls, values: Any) -> Any:\n        if values[\"min_size\"] > values[\"max_size\"]:\n            raise ValueError(\"The pool min_size is greater than max_size\")\n        return values\n\n\nclass Pool(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    name: PoolName\n    pool_id: UUID = Field(default_factory=uuid4)\n    os: OS\n    managed: bool\n    autoscale: Optional[AutoScaleConfig]\n    arch: Architecture\n    state: PoolState = Field(default=PoolState.init)\n    client_id: Optional[UUID]\n    nodes: Optional[List[Node]]\n    config: Optional[AgentConfig]\n\n    # work_queue is explicitly not saved to Tables (see save_exclude).  This is\n    # intended to be used to pass the information to the CLI when the CLI asks\n    # for information about what work is in the queue for the pool.\n    work_queue: Optional[List[WorkSetSummary]]\n\n    # explicitly excluded from Tables\n    scaleset_summary: Optional[List[ScalesetSummary]]\n\n\nclass ScalesetNodeState(BaseModel):\n    machine_id: UUID\n    instance_id: str\n    state: Optional[NodeState]\n\n\nclass Scaleset(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    pool_name: PoolName\n    scaleset_id: UUID = Field(default_factory=uuid4)\n    state: ScalesetState = Field(default=ScalesetState.init)\n    auth: Optional[Authentication]\n    vm_sku: str\n    image: str\n    region: Region\n    size: int = Field(ge=0)\n    spot_instances: bool\n    ephemeral_os_disks: bool = Field(default=False)\n    needs_config_update: bool = Field(default=False)\n    error: Optional[Error]\n    nodes: Optional[List[ScalesetNodeState]]\n    client_id: Optional[UUID]\n    client_object_id: Optional[UUID]\n    tags: Dict[str, str] = Field(default_factory=lambda: {})\n\n\nclass NotificationConfig(BaseModel):\n    config: NotificationTemplate\n\n\nclass Repro(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    vm_id: UUID = Field(default_factory=uuid4)\n    task_id: UUID\n    config: ReproConfig\n    state: VmState = Field(default=VmState.init)\n    auth: Optional[Authentication]\n    os: OS\n    error: Optional[Error]\n    ip: Optional[str]\n    end_time: Optional[datetime]\n    user_info: Optional[UserInfo]\n\n\nclass ExitStatus(BaseModel):\n    code: Optional[int]\n    signal: Optional[int]\n    success: bool\n\n\nclass ProcessOutput(BaseModel):\n    exit_status: ExitStatus\n    stderr: str\n    stdout: str\n\n\nclass WorkerRunningEvent(BaseModel):\n    task_id: UUID\n\n\nclass WorkerDoneEvent(BaseModel):\n    task_id: UUID\n    exit_status: ExitStatus\n    stderr: str\n    stdout: str\n\n\nclass WorkerEvent(EnumModel):\n    done: Optional[WorkerDoneEvent]\n    running: Optional[WorkerRunningEvent]\n\n\nclass NodeSettingUpEventData(BaseModel):\n    tasks: List[UUID]\n\n\nclass NodeDoneEventData(BaseModel):\n    error: Optional[str]\n    script_output: Optional[ProcessOutput]\n\n\nNodeStateData = Union[NodeSettingUpEventData, NodeDoneEventData]\n\n\nclass NodeStateUpdate(BaseModel):\n    state: NodeState\n    data: Optional[NodeStateData]\n\n    @root_validator(pre=False, skip_on_failure=True)\n    def check_data(cls, values: Any) -> Any:\n        data = values.get(\"data\")\n\n        if data:\n            state = values[\"state\"]\n\n            if state == NodeState.setting_up:\n                if isinstance(data, NodeSettingUpEventData):\n                    return values\n\n            if state == NodeState.done:\n                if isinstance(data, NodeDoneEventData):\n                    return values\n\n            raise ValueError(\n                \"data for node state update event does not match state = %s\" % state\n            )\n        else:\n            # For now, `data` is always optional.\n            return values\n\n\nclass NodeEvent(EnumModel):\n    state_update: Optional[NodeStateUpdate]\n    worker_event: Optional[WorkerEvent]\n\n\n# Temporary shim type to support hot upgrade of 1.0.0 nodes.\n#\n# We want future variants to use an externally-tagged repr.\nNodeEventShim = Union[NodeStateUpdate, NodeEvent, WorkerEvent]\n\n\nclass NodeEventEnvelope(BaseModel):\n    machine_id: UUID\n    event: NodeEventShim\n\n\nclass TaskEvent(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    task_id: UUID\n    machine_id: UUID\n    event_data: WorkerEvent\n\n\nclass TaskEventSummary(BaseModel):\n    timestamp: Optional[datetime]\n    event_data: str\n    event_type: str\n\n\nclass NodeAssignment(BaseModel):\n    node_id: UUID\n    scaleset_id: Optional[UUID]\n    state: NodeTaskState\n\n\nclass Task(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    job_id: UUID\n    task_id: UUID = Field(default_factory=uuid4)\n    state: TaskState = Field(default=TaskState.init)\n    os: OS\n    config: TaskConfig\n    error: Optional[Error]\n    auth: Optional[Authentication]\n    heartbeat: Optional[datetime]\n    end_time: Optional[datetime]\n    events: Optional[List[TaskEventSummary]]\n    nodes: Optional[List[NodeAssignment]]\n    user_info: Optional[UserInfo]\n\n\nclass InstanceConfig(BaseModel):\n    # initial set of admins can only be set during deployment.\n    # if admins are set, only admins can update instance configs.\n    admins: Optional[List[UUID]] = None\n\n    # if set, only admins can manage pools or scalesets\n    allow_pool_management: bool = Field(default=True)\n\n    def update(self, config: \"InstanceConfig\") -> None:\n        for field in config.__fields__:\n            # If no admins are set, then ignore setting admins\n            if field == \"admins\" and self.admins is None:\n                continue\n\n            if hasattr(self, field):\n                setattr(self, field, getattr(config, field))\n\n    @validator(\"admins\", allow_reuse=True)\n    def check_admins(cls, value: Optional[List[UUID]]) -> Optional[List[UUID]]:\n        if value is not None and len(value) == 0:\n            raise ValueError(\"admins must be None or contain at least one UUID\")\n        return value\n\n\n_check_hotfix()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nfrom uuid import UUID\nimport unittest\n\nfrom onefuzztypes.models import InstanceConfig\n\n\nclass TestInstanceConfig(unittest.TestCase):\n    def test_with_admins(self) -> None:\n        no_admins = InstanceConfig(admins=None)\n        with_admins = InstanceConfig(admins=[UUID(int=0)])\n        with_admins_2 = InstanceConfig(admins=[UUID(int=1)])\n\n        no_admins.update(with_admins)\n        self.assertEqual(no_admins.admins, None)\n\n        with_admins.update(with_admins_2)\n        self.assertEqual(with_admins.admins, with_admins_2.admins)\n\n    def test_with_empty_admins(self) -> None:\n        with self.assertRaises(ValueError):\n            InstanceConfig.parse_obj({\"admins\": []})\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"], "fixing_code": ["# Webhook Events\n\nThis document describes the basic webhook event subscriptions available in OneFuzz\n\n## Payload\n\nEach event will be submitted via HTTP POST to the user provided URL.\n\n### Example\n\n```json\n{\n    \"event\": {\n        \"ping_id\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"event_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"event_type\": \"ping\",\n    \"instance_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"instance_name\": \"example\",\n    \"webhook_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n## Event Types (EventType)\n\n* [crash_reported](#crash_reported)\n* [file_added](#file_added)\n* [instance_config_updated](#instance_config_updated)\n* [job_created](#job_created)\n* [job_stopped](#job_stopped)\n* [node_created](#node_created)\n* [node_deleted](#node_deleted)\n* [node_heartbeat](#node_heartbeat)\n* [node_state_updated](#node_state_updated)\n* [ping](#ping)\n* [pool_created](#pool_created)\n* [pool_deleted](#pool_deleted)\n* [proxy_created](#proxy_created)\n* [proxy_deleted](#proxy_deleted)\n* [proxy_failed](#proxy_failed)\n* [proxy_state_updated](#proxy_state_updated)\n* [regression_reported](#regression_reported)\n* [scaleset_created](#scaleset_created)\n* [scaleset_deleted](#scaleset_deleted)\n* [scaleset_failed](#scaleset_failed)\n* [scaleset_resize_scheduled](#scaleset_resize_scheduled)\n* [scaleset_state_updated](#scaleset_state_updated)\n* [task_created](#task_created)\n* [task_failed](#task_failed)\n* [task_heartbeat](#task_heartbeat)\n* [task_state_updated](#task_state_updated)\n* [task_stopped](#task_stopped)\n\n### crash_reported\n\n#### Example\n\n```json\n{\n    \"container\": \"container-name\",\n    \"filename\": \"example.json\",\n    \"report\": {\n        \"asan_log\": \"example asan log\",\n        \"call_stack\": [\n            \"#0 line\",\n            \"#1 line\",\n            \"#2 line\"\n        ],\n        \"call_stack_sha256\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"crash_site\": \"example crash site\",\n        \"crash_type\": \"example crash report type\",\n        \"executable\": \"fuzz.exe\",\n        \"input_blob\": {\n            \"account\": \"contoso-storage-account\",\n            \"container\": \"crashes\",\n            \"name\": \"input.txt\"\n        },\n        \"input_sha256\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"scariness_description\": \"example-scariness\",\n        \"scariness_score\": 10,\n        \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"BlobRef\": {\n            \"properties\": {\n                \"account\": {\n                    \"title\": \"Account\",\n                    \"type\": \"string\"\n                },\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"account\",\n                \"container\",\n                \"name\"\n            ],\n            \"title\": \"BlobRef\",\n            \"type\": \"object\"\n        },\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"Report\": {\n            \"properties\": {\n                \"asan_log\": {\n                    \"title\": \"Asan Log\",\n                    \"type\": \"string\"\n                },\n                \"call_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Call Stack\",\n                    \"type\": \"array\"\n                },\n                \"call_stack_sha256\": {\n                    \"title\": \"Call Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"crash_site\": {\n                    \"title\": \"Crash Site\",\n                    \"type\": \"string\"\n                },\n                \"crash_type\": {\n                    \"title\": \"Crash Type\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"input_url\": {\n                    \"title\": \"Input Url\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Lines\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines_sha256\": {\n                    \"title\": \"Minimized Stack Function Lines Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_function_names\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Names\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_names_sha256\": {\n                    \"title\": \"Minimized Stack Function Names Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_sha256\": {\n                    \"title\": \"Minimized Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"scariness_description\": {\n                    \"title\": \"Scariness Description\",\n                    \"type\": \"string\"\n                },\n                \"scariness_score\": {\n                    \"title\": \"Scariness Score\",\n                    \"type\": \"integer\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"executable\",\n                \"crash_type\",\n                \"crash_site\",\n                \"call_stack\",\n                \"call_stack_sha256\",\n                \"input_sha256\",\n                \"task_id\",\n                \"job_id\"\n            ],\n            \"title\": \"Report\",\n            \"type\": \"object\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"container\": {\n            \"title\": \"Container\",\n            \"type\": \"string\"\n        },\n        \"filename\": {\n            \"title\": \"Filename\",\n            \"type\": \"string\"\n        },\n        \"report\": {\n            \"$ref\": \"#/definitions/Report\"\n        },\n        \"task_config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        }\n    },\n    \"required\": [\n        \"report\",\n        \"container\",\n        \"filename\"\n    ],\n    \"title\": \"EventCrashReported\",\n    \"type\": \"object\"\n}\n```\n\n### file_added\n\n#### Example\n\n```json\n{\n    \"container\": \"container-name\",\n    \"filename\": \"example.txt\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"container\": {\n            \"title\": \"Container\",\n            \"type\": \"string\"\n        },\n        \"filename\": {\n            \"title\": \"Filename\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"container\",\n        \"filename\"\n    ],\n    \"title\": \"EventFileAdded\",\n    \"type\": \"object\"\n}\n```\n\n### instance_config_updated\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"admins\": [\n            \"00000000-0000-0000-0000-000000000000\"\n        ],\n        \"allow_pool_management\": true,\n        \"allowed_aad_tenants\": [\n            \"00000000-0000-0000-0000-000000000000\"\n        ]\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"InstanceConfig\": {\n            \"properties\": {\n                \"admins\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Admins\",\n                    \"type\": \"array\"\n                },\n                \"allow_pool_management\": {\n                    \"default\": true,\n                    \"title\": \"Allow Pool Management\",\n                    \"type\": \"boolean\"\n                },\n                \"allowed_aad_tenants\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Allowed Aad Tenants\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"allowed_aad_tenants\"\n            ],\n            \"title\": \"InstanceConfig\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/InstanceConfig\"\n        }\n    },\n    \"required\": [\n        \"config\"\n    ],\n    \"title\": \"EventInstanceConfigUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### job_created\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"build\": \"build 1\",\n        \"duration\": 24,\n        \"name\": \"example name\",\n        \"project\": \"example project\"\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"JobConfig\": {\n            \"properties\": {\n                \"build\": {\n                    \"title\": \"Build\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"project\": {\n                    \"title\": \"Project\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"project\",\n                \"name\",\n                \"build\",\n                \"duration\"\n            ],\n            \"title\": \"JobConfig\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/JobConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"config\"\n    ],\n    \"title\": \"EventJobCreated\",\n    \"type\": \"object\"\n}\n```\n\n### job_stopped\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"build\": \"build 1\",\n        \"duration\": 24,\n        \"name\": \"example name\",\n        \"project\": \"example project\"\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_info\": [\n        {\n            \"error\": {\n                \"code\": 468,\n                \"errors\": [\n                    \"example error message\"\n                ]\n            },\n            \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"task_type\": \"libfuzzer_fuzz\"\n        },\n        {\n            \"task_id\": \"00000000-0000-0000-0000-000000000001\",\n            \"task_type\": \"libfuzzer_coverage\"\n        }\n    ]\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        },\n        \"JobConfig\": {\n            \"properties\": {\n                \"build\": {\n                    \"title\": \"Build\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"project\": {\n                    \"title\": \"Project\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"project\",\n                \"name\",\n                \"build\",\n                \"duration\"\n            ],\n            \"title\": \"JobConfig\",\n            \"type\": \"object\"\n        },\n        \"JobTaskStopped\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"task_type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                }\n            },\n            \"required\": [\n                \"task_id\",\n                \"task_type\"\n            ],\n            \"title\": \"JobTaskStopped\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/JobConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_info\": {\n            \"items\": {\n                \"$ref\": \"#/definitions/JobTaskStopped\"\n            },\n            \"title\": \"Task Info\",\n            \"type\": \"array\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"config\"\n    ],\n    \"title\": \"EventJobStopped\",\n    \"type\": \"object\"\n}\n```\n\n### node_created\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventNodeCreated\",\n    \"type\": \"object\"\n}\n```\n\n### node_deleted\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventNodeDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### node_heartbeat\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventNodeHeartbeat\",\n    \"type\": \"object\"\n}\n```\n\n### node_state_updated\n\n#### Example\n\n```json\n{\n    \"machine_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"pool_name\": \"example\",\n    \"state\": \"setting_up\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"NodeState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"free\",\n                \"setting_up\",\n                \"rebooting\",\n                \"ready\",\n                \"busy\",\n                \"done\",\n                \"shutdown\",\n                \"halt\"\n            ],\n            \"title\": \"NodeState\"\n        }\n    },\n    \"properties\": {\n        \"machine_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Machine Id\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/NodeState\"\n        }\n    },\n    \"required\": [\n        \"machine_id\",\n        \"pool_name\",\n        \"state\"\n    ],\n    \"title\": \"EventNodeStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### ping\n\n#### Example\n\n```json\n{\n    \"ping_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"ping_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Ping Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"ping_id\"\n    ],\n    \"title\": \"EventPing\",\n    \"type\": \"object\"\n}\n```\n\n### pool_created\n\n#### Example\n\n```json\n{\n    \"arch\": \"x86_64\",\n    \"managed\": true,\n    \"os\": \"linux\",\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Architecture\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"x86_64\"\n            ],\n            \"title\": \"Architecture\"\n        },\n        \"AutoScaleConfig\": {\n            \"properties\": {\n                \"ephemeral_os_disks\": {\n                    \"default\": false,\n                    \"title\": \"Ephemeral Os Disks\",\n                    \"type\": \"boolean\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"max_size\": {\n                    \"default\": 1000,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Max Size\",\n                    \"type\": \"integer\"\n                },\n                \"min_size\": {\n                    \"default\": 0,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Min Size\",\n                    \"type\": \"integer\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_size\": {\n                    \"title\": \"Scaleset Size\",\n                    \"type\": \"integer\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                },\n                \"vm_sku\": {\n                    \"title\": \"Vm Sku\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"image\",\n                \"scaleset_size\",\n                \"vm_sku\"\n            ],\n            \"title\": \"AutoScaleConfig\",\n            \"type\": \"object\"\n        },\n        \"OS\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"windows\",\n                \"linux\"\n            ],\n            \"title\": \"OS\"\n        }\n    },\n    \"properties\": {\n        \"arch\": {\n            \"$ref\": \"#/definitions/Architecture\"\n        },\n        \"autoscale\": {\n            \"$ref\": \"#/definitions/AutoScaleConfig\"\n        },\n        \"managed\": {\n            \"title\": \"Managed\",\n            \"type\": \"boolean\"\n        },\n        \"os\": {\n            \"$ref\": \"#/definitions/OS\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"pool_name\",\n        \"os\",\n        \"arch\",\n        \"managed\"\n    ],\n    \"title\": \"EventPoolCreated\",\n    \"type\": \"object\"\n}\n```\n\n### pool_deleted\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"pool_name\"\n    ],\n    \"title\": \"EventPoolDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_created\n\n#### Example\n\n```json\n{\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"region\"\n    ],\n    \"title\": \"EventProxyCreated\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_deleted\n\n#### Example\n\n```json\n{\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"region\"\n    ],\n    \"title\": \"EventProxyDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_failed\n\n#### Example\n\n```json\n{\n    \"error\": {\n        \"code\": 472,\n        \"errors\": [\n            \"example error message\"\n        ]\n    },\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        }\n    },\n    \"properties\": {\n        \"error\": {\n            \"$ref\": \"#/definitions/Error\"\n        },\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"region\",\n        \"error\"\n    ],\n    \"title\": \"EventProxyFailed\",\n    \"type\": \"object\"\n}\n```\n\n### proxy_state_updated\n\n#### Example\n\n```json\n{\n    \"proxy_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"region\": \"eastus\",\n    \"state\": \"init\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"VmState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"extensions_launch\",\n                \"extensions_failed\",\n                \"vm_allocation_failed\",\n                \"running\",\n                \"stopping\",\n                \"stopped\"\n            ],\n            \"title\": \"VmState\"\n        }\n    },\n    \"properties\": {\n        \"proxy_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Proxy Id\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/VmState\"\n        }\n    },\n    \"required\": [\n        \"region\",\n        \"proxy_id\",\n        \"state\"\n    ],\n    \"title\": \"EventProxyStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### regression_reported\n\n#### Example\n\n```json\n{\n    \"container\": \"container-name\",\n    \"filename\": \"example.json\",\n    \"regression_report\": {\n        \"crash_test_result\": {\n            \"crash_report\": {\n                \"asan_log\": \"example asan log\",\n                \"call_stack\": [\n                    \"#0 line\",\n                    \"#1 line\",\n                    \"#2 line\"\n                ],\n                \"call_stack_sha256\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"crash_site\": \"example crash site\",\n                \"crash_type\": \"example crash report type\",\n                \"executable\": \"fuzz.exe\",\n                \"input_blob\": {\n                    \"account\": \"contoso-storage-account\",\n                    \"container\": \"crashes\",\n                    \"name\": \"input.txt\"\n                },\n                \"input_sha256\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n                \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"scariness_description\": \"example-scariness\",\n                \"scariness_score\": 10,\n                \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n            }\n        },\n        \"original_crash_test_result\": {\n            \"crash_report\": {\n                \"asan_log\": \"example asan log\",\n                \"call_stack\": [\n                    \"#0 line\",\n                    \"#1 line\",\n                    \"#2 line\"\n                ],\n                \"call_stack_sha256\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n                \"crash_site\": \"example crash site\",\n                \"crash_type\": \"example crash report type\",\n                \"executable\": \"fuzz.exe\",\n                \"input_blob\": {\n                    \"account\": \"contoso-storage-account\",\n                    \"container\": \"crashes\",\n                    \"name\": \"input.txt\"\n                },\n                \"input_sha256\": \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n                \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"scariness_description\": \"example-scariness\",\n                \"scariness_score\": 10,\n                \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n            }\n        }\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"BlobRef\": {\n            \"properties\": {\n                \"account\": {\n                    \"title\": \"Account\",\n                    \"type\": \"string\"\n                },\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"account\",\n                \"container\",\n                \"name\"\n            ],\n            \"title\": \"BlobRef\",\n            \"type\": \"object\"\n        },\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"CrashTestResult\": {\n            \"properties\": {\n                \"crash_report\": {\n                    \"$ref\": \"#/definitions/Report\"\n                },\n                \"no_repro\": {\n                    \"$ref\": \"#/definitions/NoReproReport\"\n                }\n            },\n            \"title\": \"CrashTestResult\",\n            \"type\": \"object\"\n        },\n        \"NoReproReport\": {\n            \"properties\": {\n                \"error\": {\n                    \"title\": \"Error\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"tries\": {\n                    \"title\": \"Tries\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\n                \"input_sha256\",\n                \"executable\",\n                \"task_id\",\n                \"job_id\",\n                \"tries\"\n            ],\n            \"title\": \"NoReproReport\",\n            \"type\": \"object\"\n        },\n        \"RegressionReport\": {\n            \"properties\": {\n                \"crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                },\n                \"original_crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                }\n            },\n            \"required\": [\n                \"crash_test_result\"\n            ],\n            \"title\": \"RegressionReport\",\n            \"type\": \"object\"\n        },\n        \"Report\": {\n            \"properties\": {\n                \"asan_log\": {\n                    \"title\": \"Asan Log\",\n                    \"type\": \"string\"\n                },\n                \"call_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Call Stack\",\n                    \"type\": \"array\"\n                },\n                \"call_stack_sha256\": {\n                    \"title\": \"Call Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"crash_site\": {\n                    \"title\": \"Crash Site\",\n                    \"type\": \"string\"\n                },\n                \"crash_type\": {\n                    \"title\": \"Crash Type\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"input_url\": {\n                    \"title\": \"Input Url\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Lines\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines_sha256\": {\n                    \"title\": \"Minimized Stack Function Lines Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_function_names\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Names\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_names_sha256\": {\n                    \"title\": \"Minimized Stack Function Names Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_sha256\": {\n                    \"title\": \"Minimized Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"scariness_description\": {\n                    \"title\": \"Scariness Description\",\n                    \"type\": \"string\"\n                },\n                \"scariness_score\": {\n                    \"title\": \"Scariness Score\",\n                    \"type\": \"integer\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"executable\",\n                \"crash_type\",\n                \"crash_site\",\n                \"call_stack\",\n                \"call_stack_sha256\",\n                \"input_sha256\",\n                \"task_id\",\n                \"job_id\"\n            ],\n            \"title\": \"Report\",\n            \"type\": \"object\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"container\": {\n            \"title\": \"Container\",\n            \"type\": \"string\"\n        },\n        \"filename\": {\n            \"title\": \"Filename\",\n            \"type\": \"string\"\n        },\n        \"regression_report\": {\n            \"$ref\": \"#/definitions/RegressionReport\"\n        },\n        \"task_config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        }\n    },\n    \"required\": [\n        \"regression_report\",\n        \"container\",\n        \"filename\"\n    ],\n    \"title\": \"EventRegressionReported\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_created\n\n#### Example\n\n```json\n{\n    \"image\": \"Canonical:UbuntuServer:18.04-LTS:latest\",\n    \"pool_name\": \"example\",\n    \"region\": \"eastus\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"size\": 10,\n    \"vm_sku\": \"Standard_D2s_v3\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"image\": {\n            \"title\": \"Image\",\n            \"type\": \"string\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"region\": {\n            \"title\": \"Region\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"size\": {\n            \"title\": \"Size\",\n            \"type\": \"integer\"\n        },\n        \"vm_sku\": {\n            \"title\": \"Vm Sku\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"vm_sku\",\n        \"image\",\n        \"region\",\n        \"size\"\n    ],\n    \"title\": \"EventScalesetCreated\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_deleted\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\"\n    ],\n    \"title\": \"EventScalesetDeleted\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_failed\n\n#### Example\n\n```json\n{\n    \"error\": {\n        \"code\": 456,\n        \"errors\": [\n            \"example error message\"\n        ]\n    },\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        }\n    },\n    \"properties\": {\n        \"error\": {\n            \"$ref\": \"#/definitions/Error\"\n        },\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"error\"\n    ],\n    \"title\": \"EventScalesetFailed\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_resize_scheduled\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"size\": 0\n}\n```\n\n#### Schema\n\n```json\n{\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"size\": {\n            \"title\": \"Size\",\n            \"type\": \"integer\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"size\"\n    ],\n    \"title\": \"EventScalesetResizeScheduled\",\n    \"type\": \"object\"\n}\n```\n\n### scaleset_state_updated\n\n#### Example\n\n```json\n{\n    \"pool_name\": \"example\",\n    \"scaleset_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"state\": \"init\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ScalesetState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"setup\",\n                \"resize\",\n                \"running\",\n                \"shutdown\",\n                \"halt\",\n                \"creation_failed\"\n            ],\n            \"title\": \"ScalesetState\"\n        }\n    },\n    \"properties\": {\n        \"pool_name\": {\n            \"title\": \"Pool Name\",\n            \"type\": \"string\"\n        },\n        \"scaleset_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Scaleset Id\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/ScalesetState\"\n        }\n    },\n    \"required\": [\n        \"scaleset_id\",\n        \"pool_name\",\n        \"state\"\n    ],\n    \"title\": \"EventScalesetStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### task_created\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"user_info\": {\n        \"application_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"object_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"upn\": \"example@contoso.com\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskCreated\",\n    \"type\": \"object\"\n}\n```\n\n### task_failed\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"error\": {\n        \"code\": 468,\n        \"errors\": [\n            \"example error message\"\n        ]\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"user_info\": {\n        \"application_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"object_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"upn\": \"example@contoso.com\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"error\": {\n            \"$ref\": \"#/definitions/Error\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"error\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskFailed\",\n    \"type\": \"object\"\n}\n```\n\n### task_heartbeat\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskHeartbeat\",\n    \"type\": \"object\"\n}\n```\n\n### task_state_updated\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"state\": \"init\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\"\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"waiting\",\n                \"scheduled\",\n                \"setting_up\",\n                \"running\",\n                \"stopping\",\n                \"stopped\",\n                \"wait_job\"\n            ],\n            \"title\": \"TaskState\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"end_time\": {\n            \"format\": \"date-time\",\n            \"title\": \"End Time\",\n            \"type\": \"string\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"$ref\": \"#/definitions/TaskState\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"state\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskStateUpdated\",\n    \"type\": \"object\"\n}\n```\n\n### task_stopped\n\n#### Example\n\n```json\n{\n    \"config\": {\n        \"containers\": [\n            {\n                \"name\": \"my-setup\",\n                \"type\": \"setup\"\n            },\n            {\n                \"name\": \"my-inputs\",\n                \"type\": \"inputs\"\n            },\n            {\n                \"name\": \"my-crashes\",\n                \"type\": \"crashes\"\n            }\n        ],\n        \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"tags\": {},\n        \"task\": {\n            \"check_debugger\": true,\n            \"duration\": 1,\n            \"target_env\": {},\n            \"target_exe\": \"fuzz.exe\",\n            \"target_options\": [],\n            \"type\": \"libfuzzer_fuzz\"\n        }\n    },\n    \"job_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"task_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"user_info\": {\n        \"application_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"object_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"upn\": \"example@contoso.com\"\n    }\n}\n```\n\n#### Schema\n\n```json\n{\n    \"definitions\": {\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        }\n    },\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/definitions/TaskConfig\"\n        },\n        \"job_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Job Id\",\n            \"type\": \"string\"\n        },\n        \"task_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Task Id\",\n            \"type\": \"string\"\n        },\n        \"user_info\": {\n            \"$ref\": \"#/definitions/UserInfo\"\n        }\n    },\n    \"required\": [\n        \"job_id\",\n        \"task_id\",\n        \"config\"\n    ],\n    \"title\": \"EventTaskStopped\",\n    \"type\": \"object\"\n}\n```\n\n## Full Event Schema\n\n```json\n{\n    \"definitions\": {\n        \"Architecture\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"x86_64\"\n            ],\n            \"title\": \"Architecture\"\n        },\n        \"AutoScaleConfig\": {\n            \"properties\": {\n                \"ephemeral_os_disks\": {\n                    \"default\": false,\n                    \"title\": \"Ephemeral Os Disks\",\n                    \"type\": \"boolean\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"max_size\": {\n                    \"default\": 1000,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Max Size\",\n                    \"type\": \"integer\"\n                },\n                \"min_size\": {\n                    \"default\": 0,\n                    \"maximum\": 1000,\n                    \"minimum\": 0,\n                    \"title\": \"Min Size\",\n                    \"type\": \"integer\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_size\": {\n                    \"title\": \"Scaleset Size\",\n                    \"type\": \"integer\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                },\n                \"vm_sku\": {\n                    \"title\": \"Vm Sku\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"image\",\n                \"scaleset_size\",\n                \"vm_sku\"\n            ],\n            \"title\": \"AutoScaleConfig\",\n            \"type\": \"object\"\n        },\n        \"BlobRef\": {\n            \"properties\": {\n                \"account\": {\n                    \"title\": \"Account\",\n                    \"type\": \"string\"\n                },\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"account\",\n                \"container\",\n                \"name\"\n            ],\n            \"title\": \"BlobRef\",\n            \"type\": \"object\"\n        },\n        \"ContainerType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"analysis\",\n                \"coverage\",\n                \"crashes\",\n                \"inputs\",\n                \"no_repro\",\n                \"readonly_inputs\",\n                \"reports\",\n                \"setup\",\n                \"tools\",\n                \"unique_inputs\",\n                \"unique_reports\",\n                \"regression_reports\"\n            ],\n            \"title\": \"ContainerType\"\n        },\n        \"CrashTestResult\": {\n            \"properties\": {\n                \"crash_report\": {\n                    \"$ref\": \"#/definitions/Report\"\n                },\n                \"no_repro\": {\n                    \"$ref\": \"#/definitions/NoReproReport\"\n                }\n            },\n            \"title\": \"CrashTestResult\",\n            \"type\": \"object\"\n        },\n        \"Error\": {\n            \"properties\": {\n                \"code\": {\n                    \"$ref\": \"#/definitions/ErrorCode\"\n                },\n                \"errors\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Errors\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"code\",\n                \"errors\"\n            ],\n            \"title\": \"Error\",\n            \"type\": \"object\"\n        },\n        \"ErrorCode\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                450,\n                451,\n                452,\n                453,\n                454,\n                455,\n                456,\n                457,\n                458,\n                459,\n                460,\n                461,\n                462,\n                463,\n                464,\n                465,\n                467,\n                468,\n                469,\n                470,\n                471,\n                472\n            ],\n            \"title\": \"ErrorCode\"\n        },\n        \"EventCrashReported\": {\n            \"properties\": {\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"filename\": {\n                    \"title\": \"Filename\",\n                    \"type\": \"string\"\n                },\n                \"report\": {\n                    \"$ref\": \"#/definitions/Report\"\n                },\n                \"task_config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                }\n            },\n            \"required\": [\n                \"report\",\n                \"container\",\n                \"filename\"\n            ],\n            \"title\": \"EventCrashReported\",\n            \"type\": \"object\"\n        },\n        \"EventFileAdded\": {\n            \"properties\": {\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"filename\": {\n                    \"title\": \"Filename\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"container\",\n                \"filename\"\n            ],\n            \"title\": \"EventFileAdded\",\n            \"type\": \"object\"\n        },\n        \"EventInstanceConfigUpdated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/InstanceConfig\"\n                }\n            },\n            \"required\": [\n                \"config\"\n            ],\n            \"title\": \"EventInstanceConfigUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventJobCreated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/JobConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"config\"\n            ],\n            \"title\": \"EventJobCreated\",\n            \"type\": \"object\"\n        },\n        \"EventJobStopped\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/JobConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_info\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/JobTaskStopped\"\n                    },\n                    \"title\": \"Task Info\",\n                    \"type\": \"array\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"config\"\n            ],\n            \"title\": \"EventJobStopped\",\n            \"type\": \"object\"\n        },\n        \"EventNodeCreated\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventNodeCreated\",\n            \"type\": \"object\"\n        },\n        \"EventNodeDeleted\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventNodeDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventNodeHeartbeat\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventNodeHeartbeat\",\n            \"type\": \"object\"\n        },\n        \"EventNodeStateUpdated\": {\n            \"properties\": {\n                \"machine_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Machine Id\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/NodeState\"\n                }\n            },\n            \"required\": [\n                \"machine_id\",\n                \"pool_name\",\n                \"state\"\n            ],\n            \"title\": \"EventNodeStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventPing\": {\n            \"properties\": {\n                \"ping_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Ping Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"ping_id\"\n            ],\n            \"title\": \"EventPing\",\n            \"type\": \"object\"\n        },\n        \"EventPoolCreated\": {\n            \"properties\": {\n                \"arch\": {\n                    \"$ref\": \"#/definitions/Architecture\"\n                },\n                \"autoscale\": {\n                    \"$ref\": \"#/definitions/AutoScaleConfig\"\n                },\n                \"managed\": {\n                    \"title\": \"Managed\",\n                    \"type\": \"boolean\"\n                },\n                \"os\": {\n                    \"$ref\": \"#/definitions/OS\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"pool_name\",\n                \"os\",\n                \"arch\",\n                \"managed\"\n            ],\n            \"title\": \"EventPoolCreated\",\n            \"type\": \"object\"\n        },\n        \"EventPoolDeleted\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"pool_name\"\n            ],\n            \"title\": \"EventPoolDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventProxyCreated\": {\n            \"properties\": {\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"region\"\n            ],\n            \"title\": \"EventProxyCreated\",\n            \"type\": \"object\"\n        },\n        \"EventProxyDeleted\": {\n            \"properties\": {\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"region\"\n            ],\n            \"title\": \"EventProxyDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventProxyFailed\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"error\"\n            ],\n            \"title\": \"EventProxyFailed\",\n            \"type\": \"object\"\n        },\n        \"EventProxyStateUpdated\": {\n            \"properties\": {\n                \"proxy_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Proxy Id\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/VmState\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"proxy_id\",\n                \"state\"\n            ],\n            \"title\": \"EventProxyStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventRegressionReported\": {\n            \"properties\": {\n                \"container\": {\n                    \"title\": \"Container\",\n                    \"type\": \"string\"\n                },\n                \"filename\": {\n                    \"title\": \"Filename\",\n                    \"type\": \"string\"\n                },\n                \"regression_report\": {\n                    \"$ref\": \"#/definitions/RegressionReport\"\n                },\n                \"task_config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                }\n            },\n            \"required\": [\n                \"regression_report\",\n                \"container\",\n                \"filename\"\n            ],\n            \"title\": \"EventRegressionReported\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetCreated\": {\n            \"properties\": {\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"size\": {\n                    \"title\": \"Size\",\n                    \"type\": \"integer\"\n                },\n                \"vm_sku\": {\n                    \"title\": \"Vm Sku\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"vm_sku\",\n                \"image\",\n                \"region\",\n                \"size\"\n            ],\n            \"title\": \"EventScalesetCreated\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetDeleted\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\"\n            ],\n            \"title\": \"EventScalesetDeleted\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetFailed\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"error\"\n            ],\n            \"title\": \"EventScalesetFailed\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetResizeScheduled\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"size\": {\n                    \"title\": \"Size\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"size\"\n            ],\n            \"title\": \"EventScalesetResizeScheduled\",\n            \"type\": \"object\"\n        },\n        \"EventScalesetStateUpdated\": {\n            \"properties\": {\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                },\n                \"scaleset_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Scaleset Id\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/ScalesetState\"\n                }\n            },\n            \"required\": [\n                \"scaleset_id\",\n                \"pool_name\",\n                \"state\"\n            ],\n            \"title\": \"EventScalesetStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventTaskCreated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskCreated\",\n            \"type\": \"object\"\n        },\n        \"EventTaskFailed\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"error\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskFailed\",\n            \"type\": \"object\"\n        },\n        \"EventTaskHeartbeat\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskHeartbeat\",\n            \"type\": \"object\"\n        },\n        \"EventTaskStateUpdated\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"end_time\": {\n                    \"format\": \"date-time\",\n                    \"title\": \"End Time\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"state\": {\n                    \"$ref\": \"#/definitions/TaskState\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"state\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskStateUpdated\",\n            \"type\": \"object\"\n        },\n        \"EventTaskStopped\": {\n            \"properties\": {\n                \"config\": {\n                    \"$ref\": \"#/definitions/TaskConfig\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/UserInfo\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task_id\",\n                \"config\"\n            ],\n            \"title\": \"EventTaskStopped\",\n            \"type\": \"object\"\n        },\n        \"EventType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"job_created\",\n                \"job_stopped\",\n                \"node_created\",\n                \"node_deleted\",\n                \"node_state_updated\",\n                \"ping\",\n                \"pool_created\",\n                \"pool_deleted\",\n                \"proxy_created\",\n                \"proxy_deleted\",\n                \"proxy_failed\",\n                \"proxy_state_updated\",\n                \"scaleset_created\",\n                \"scaleset_deleted\",\n                \"scaleset_failed\",\n                \"scaleset_state_updated\",\n                \"scaleset_resize_scheduled\",\n                \"task_created\",\n                \"task_failed\",\n                \"task_state_updated\",\n                \"task_stopped\",\n                \"crash_reported\",\n                \"regression_reported\",\n                \"file_added\",\n                \"task_heartbeat\",\n                \"node_heartbeat\",\n                \"instance_config_updated\"\n            ],\n            \"title\": \"EventType\"\n        },\n        \"InstanceConfig\": {\n            \"properties\": {\n                \"admins\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Admins\",\n                    \"type\": \"array\"\n                },\n                \"allow_pool_management\": {\n                    \"default\": true,\n                    \"title\": \"Allow Pool Management\",\n                    \"type\": \"boolean\"\n                },\n                \"allowed_aad_tenants\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Allowed Aad Tenants\",\n                    \"type\": \"array\"\n                }\n            },\n            \"required\": [\n                \"allowed_aad_tenants\"\n            ],\n            \"title\": \"InstanceConfig\",\n            \"type\": \"object\"\n        },\n        \"JobConfig\": {\n            \"properties\": {\n                \"build\": {\n                    \"title\": \"Build\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"project\": {\n                    \"title\": \"Project\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"project\",\n                \"name\",\n                \"build\",\n                \"duration\"\n            ],\n            \"title\": \"JobConfig\",\n            \"type\": \"object\"\n        },\n        \"JobTaskStopped\": {\n            \"properties\": {\n                \"error\": {\n                    \"$ref\": \"#/definitions/Error\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"task_type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                }\n            },\n            \"required\": [\n                \"task_id\",\n                \"task_type\"\n            ],\n            \"title\": \"JobTaskStopped\",\n            \"type\": \"object\"\n        },\n        \"NoReproReport\": {\n            \"properties\": {\n                \"error\": {\n                    \"title\": \"Error\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                },\n                \"tries\": {\n                    \"title\": \"Tries\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\n                \"input_sha256\",\n                \"executable\",\n                \"task_id\",\n                \"job_id\",\n                \"tries\"\n            ],\n            \"title\": \"NoReproReport\",\n            \"type\": \"object\"\n        },\n        \"NodeState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"free\",\n                \"setting_up\",\n                \"rebooting\",\n                \"ready\",\n                \"busy\",\n                \"done\",\n                \"shutdown\",\n                \"halt\"\n            ],\n            \"title\": \"NodeState\"\n        },\n        \"OS\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"windows\",\n                \"linux\"\n            ],\n            \"title\": \"OS\"\n        },\n        \"RegressionReport\": {\n            \"properties\": {\n                \"crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                },\n                \"original_crash_test_result\": {\n                    \"$ref\": \"#/definitions/CrashTestResult\"\n                }\n            },\n            \"required\": [\n                \"crash_test_result\"\n            ],\n            \"title\": \"RegressionReport\",\n            \"type\": \"object\"\n        },\n        \"Report\": {\n            \"properties\": {\n                \"asan_log\": {\n                    \"title\": \"Asan Log\",\n                    \"type\": \"string\"\n                },\n                \"call_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Call Stack\",\n                    \"type\": \"array\"\n                },\n                \"call_stack_sha256\": {\n                    \"title\": \"Call Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"crash_site\": {\n                    \"title\": \"Crash Site\",\n                    \"type\": \"string\"\n                },\n                \"crash_type\": {\n                    \"title\": \"Crash Type\",\n                    \"type\": \"string\"\n                },\n                \"executable\": {\n                    \"title\": \"Executable\",\n                    \"type\": \"string\"\n                },\n                \"input_blob\": {\n                    \"$ref\": \"#/definitions/BlobRef\"\n                },\n                \"input_sha256\": {\n                    \"title\": \"Input Sha256\",\n                    \"type\": \"string\"\n                },\n                \"input_url\": {\n                    \"title\": \"Input Url\",\n                    \"type\": \"string\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Lines\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_lines_sha256\": {\n                    \"title\": \"Minimized Stack Function Lines Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_function_names\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Minimized Stack Function Names\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_function_names_sha256\": {\n                    \"title\": \"Minimized Stack Function Names Sha256\",\n                    \"type\": \"string\"\n                },\n                \"minimized_stack_sha256\": {\n                    \"title\": \"Minimized Stack Sha256\",\n                    \"type\": \"string\"\n                },\n                \"scariness_description\": {\n                    \"title\": \"Scariness Description\",\n                    \"type\": \"string\"\n                },\n                \"scariness_score\": {\n                    \"title\": \"Scariness Score\",\n                    \"type\": \"integer\"\n                },\n                \"task_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Task Id\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"executable\",\n                \"crash_type\",\n                \"crash_site\",\n                \"call_stack\",\n                \"call_stack_sha256\",\n                \"input_sha256\",\n                \"task_id\",\n                \"job_id\"\n            ],\n            \"title\": \"Report\",\n            \"type\": \"object\"\n        },\n        \"ScalesetState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"setup\",\n                \"resize\",\n                \"running\",\n                \"shutdown\",\n                \"halt\",\n                \"creation_failed\"\n            ],\n            \"title\": \"ScalesetState\"\n        },\n        \"StatsFormat\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"AFL\"\n            ],\n            \"title\": \"StatsFormat\"\n        },\n        \"TaskConfig\": {\n            \"properties\": {\n                \"colocate\": {\n                    \"title\": \"Colocate\",\n                    \"type\": \"boolean\"\n                },\n                \"containers\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskContainers\"\n                    },\n                    \"title\": \"Containers\",\n                    \"type\": \"array\"\n                },\n                \"debug\": {\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskDebugFlag\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"job_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Job Id\",\n                    \"type\": \"string\"\n                },\n                \"pool\": {\n                    \"$ref\": \"#/definitions/TaskPool\"\n                },\n                \"prereq_tasks\": {\n                    \"items\": {\n                        \"format\": \"uuid\",\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Prereq Tasks\",\n                    \"type\": \"array\"\n                },\n                \"tags\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Tags\",\n                    \"type\": \"object\"\n                },\n                \"task\": {\n                    \"$ref\": \"#/definitions/TaskDetails\"\n                },\n                \"vm\": {\n                    \"$ref\": \"#/definitions/TaskVm\"\n                }\n            },\n            \"required\": [\n                \"job_id\",\n                \"task\",\n                \"containers\",\n                \"tags\"\n            ],\n            \"title\": \"TaskConfig\",\n            \"type\": \"object\"\n        },\n        \"TaskContainers\": {\n            \"properties\": {\n                \"name\": {\n                    \"title\": \"Name\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"name\"\n            ],\n            \"title\": \"TaskContainers\",\n            \"type\": \"object\"\n        },\n        \"TaskDebugFlag\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"keep_node_on_failure\",\n                \"keep_node_on_completion\"\n            ],\n            \"title\": \"TaskDebugFlag\"\n        },\n        \"TaskDetails\": {\n            \"properties\": {\n                \"analyzer_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Env\",\n                    \"type\": \"object\"\n                },\n                \"analyzer_exe\": {\n                    \"title\": \"Analyzer Exe\",\n                    \"type\": \"string\"\n                },\n                \"analyzer_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Analyzer Options\",\n                    \"type\": \"array\"\n                },\n                \"check_asan_log\": {\n                    \"title\": \"Check Asan Log\",\n                    \"type\": \"boolean\"\n                },\n                \"check_debugger\": {\n                    \"default\": true,\n                    \"title\": \"Check Debugger\",\n                    \"type\": \"boolean\"\n                },\n                \"check_fuzzer_help\": {\n                    \"title\": \"Check Fuzzer Help\",\n                    \"type\": \"boolean\"\n                },\n                \"check_retry_count\": {\n                    \"minimum\": 0,\n                    \"title\": \"Check Retry Count\",\n                    \"type\": \"integer\"\n                },\n                \"coverage_filter\": {\n                    \"title\": \"Coverage Filter\",\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"maximum\": 168,\n                    \"minimum\": 1,\n                    \"title\": \"Duration\",\n                    \"type\": \"integer\"\n                },\n                \"ensemble_sync_delay\": {\n                    \"title\": \"Ensemble Sync Delay\",\n                    \"type\": \"integer\"\n                },\n                \"expect_crash_on_failure\": {\n                    \"title\": \"Expect Crash On Failure\",\n                    \"type\": \"boolean\"\n                },\n                \"generator_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Env\",\n                    \"type\": \"object\"\n                },\n                \"generator_exe\": {\n                    \"title\": \"Generator Exe\",\n                    \"type\": \"string\"\n                },\n                \"generator_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Generator Options\",\n                    \"type\": \"array\"\n                },\n                \"minimized_stack_depth\": {\n                    \"title\": \"Minimized Stack Depth\",\n                    \"type\": \"integer\"\n                },\n                \"preserve_existing_outputs\": {\n                    \"title\": \"Preserve Existing Outputs\",\n                    \"type\": \"boolean\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"rename_output\": {\n                    \"title\": \"Rename Output\",\n                    \"type\": \"boolean\"\n                },\n                \"report_list\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Report List\",\n                    \"type\": \"array\"\n                },\n                \"stats_file\": {\n                    \"title\": \"Stats File\",\n                    \"type\": \"string\"\n                },\n                \"stats_format\": {\n                    \"$ref\": \"#/definitions/StatsFormat\"\n                },\n                \"supervisor_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Env\",\n                    \"type\": \"object\"\n                },\n                \"supervisor_exe\": {\n                    \"title\": \"Supervisor Exe\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_input_marker\": {\n                    \"title\": \"Supervisor Input Marker\",\n                    \"type\": \"string\"\n                },\n                \"supervisor_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Supervisor Options\",\n                    \"type\": \"array\"\n                },\n                \"target_env\": {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Env\",\n                    \"type\": \"object\"\n                },\n                \"target_exe\": {\n                    \"title\": \"Target Exe\",\n                    \"type\": \"string\"\n                },\n                \"target_options\": {\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": \"Target Options\",\n                    \"type\": \"array\"\n                },\n                \"target_options_merge\": {\n                    \"title\": \"Target Options Merge\",\n                    \"type\": \"boolean\"\n                },\n                \"target_timeout\": {\n                    \"minimum\": 1,\n                    \"title\": \"Target Timeout\",\n                    \"type\": \"integer\"\n                },\n                \"target_workers\": {\n                    \"title\": \"Target Workers\",\n                    \"type\": \"integer\"\n                },\n                \"type\": {\n                    \"$ref\": \"#/definitions/TaskType\"\n                },\n                \"wait_for_files\": {\n                    \"$ref\": \"#/definitions/ContainerType\"\n                }\n            },\n            \"required\": [\n                \"type\",\n                \"duration\"\n            ],\n            \"title\": \"TaskDetails\",\n            \"type\": \"object\"\n        },\n        \"TaskPool\": {\n            \"properties\": {\n                \"count\": {\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"pool_name\": {\n                    \"title\": \"Pool Name\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"count\",\n                \"pool_name\"\n            ],\n            \"title\": \"TaskPool\",\n            \"type\": \"object\"\n        },\n        \"TaskState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"waiting\",\n                \"scheduled\",\n                \"setting_up\",\n                \"running\",\n                \"stopping\",\n                \"stopped\",\n                \"wait_job\"\n            ],\n            \"title\": \"TaskState\"\n        },\n        \"TaskType\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"coverage\",\n                \"libfuzzer_fuzz\",\n                \"libfuzzer_coverage\",\n                \"libfuzzer_crash_report\",\n                \"libfuzzer_merge\",\n                \"libfuzzer_regression\",\n                \"generic_analysis\",\n                \"generic_supervisor\",\n                \"generic_merge\",\n                \"generic_generator\",\n                \"generic_crash_report\",\n                \"generic_regression\"\n            ],\n            \"title\": \"TaskType\"\n        },\n        \"TaskVm\": {\n            \"properties\": {\n                \"count\": {\n                    \"default\": 1,\n                    \"minimum\": 0,\n                    \"title\": \"Count\",\n                    \"type\": \"integer\"\n                },\n                \"image\": {\n                    \"title\": \"Image\",\n                    \"type\": \"string\"\n                },\n                \"reboot_after_setup\": {\n                    \"title\": \"Reboot After Setup\",\n                    \"type\": \"boolean\"\n                },\n                \"region\": {\n                    \"title\": \"Region\",\n                    \"type\": \"string\"\n                },\n                \"sku\": {\n                    \"title\": \"Sku\",\n                    \"type\": \"string\"\n                },\n                \"spot_instances\": {\n                    \"default\": false,\n                    \"title\": \"Spot Instances\",\n                    \"type\": \"boolean\"\n                }\n            },\n            \"required\": [\n                \"region\",\n                \"sku\",\n                \"image\"\n            ],\n            \"title\": \"TaskVm\",\n            \"type\": \"object\"\n        },\n        \"UserInfo\": {\n            \"properties\": {\n                \"application_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Application Id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"format\": \"uuid\",\n                    \"title\": \"Object Id\",\n                    \"type\": \"string\"\n                },\n                \"upn\": {\n                    \"title\": \"Upn\",\n                    \"type\": \"string\"\n                }\n            },\n            \"title\": \"UserInfo\",\n            \"type\": \"object\"\n        },\n        \"VmState\": {\n            \"description\": \"An enumeration.\",\n            \"enum\": [\n                \"init\",\n                \"extensions_launch\",\n                \"extensions_failed\",\n                \"vm_allocation_failed\",\n                \"running\",\n                \"stopping\",\n                \"stopped\"\n            ],\n            \"title\": \"VmState\"\n        }\n    },\n    \"properties\": {\n        \"event\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/EventJobCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventJobStopped\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventNodeHeartbeat\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventPing\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventPoolCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventPoolDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyFailed\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventProxyStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetFailed\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetDeleted\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventScalesetResizeScheduled\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskFailed\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskStateUpdated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskCreated\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskStopped\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventTaskHeartbeat\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventCrashReported\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventRegressionReported\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventFileAdded\"\n                },\n                {\n                    \"$ref\": \"#/definitions/EventInstanceConfigUpdated\"\n                }\n            ],\n            \"title\": \"Event\"\n        },\n        \"event_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Event Id\",\n            \"type\": \"string\"\n        },\n        \"event_type\": {\n            \"$ref\": \"#/definitions/EventType\"\n        },\n        \"instance_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Instance Id\",\n            \"type\": \"string\"\n        },\n        \"instance_name\": {\n            \"title\": \"Instance Name\",\n            \"type\": \"string\"\n        },\n        \"webhook_id\": {\n            \"format\": \"uuid\",\n            \"title\": \"Webhook Id\",\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n        \"event_type\",\n        \"event\",\n        \"instance_id\",\n        \"instance_name\",\n        \"webhook_id\"\n    ],\n    \"title\": \"WebhookMessage\",\n    \"type\": \"object\"\n}\n```\n\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport azure.functions as func\nfrom onefuzztypes.responses import Info\n\nfrom ..onefuzzlib.azure.creds import (\n    get_base_region,\n    get_base_resource_group,\n    get_insights_appid,\n    get_insights_instrumentation_key,\n    get_instance_id,\n    get_subscription,\n)\nfrom ..onefuzzlib.endpoint_authorization import call_if_user\nfrom ..onefuzzlib.request import ok\nfrom ..onefuzzlib.versions import versions\n\n\ndef get(req: func.HttpRequest) -> func.HttpResponse:\n    response = ok(\n        Info(\n            resource_group=get_base_resource_group(),\n            region=get_base_region(),\n            subscription=get_subscription(),\n            versions=versions(),\n            instance_id=get_instance_id(),\n            insights_appid=get_insights_appid(),\n            insights_instrumentation_key=get_insights_instrumentation_key(),\n        )\n    )\n\n    return response\n\n\ndef main(req: func.HttpRequest) -> func.HttpResponse:\n    methods = {\"GET\": get}\n    method = methods[req.method]\n    result = call_if_user(req, method)\n\n    return result\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport azure.functions as func\n\nfrom ..onefuzzlib.endpoint_authorization import call_if_user\n\n# This endpoint handles the signalr negotation\n# As we do not differentiate from clients at this time, we pass the Functions runtime\n# provided connection straight to the client\n#\n# For more info:\n# https://docs.microsoft.com/en-us/azure/azure-signalr/signalr-concept-internals\n\n\ndef main(req: func.HttpRequest, connectionInfoJson: str) -> func.HttpResponse:\n    # NOTE: this is a sub-method because the call_if* do not support callbacks with\n    # additional arguments at this time.  Once call_if* supports additional arguments,\n    # this should be made a generic function\n    def post(req: func.HttpRequest) -> func.HttpResponse:\n        return func.HttpResponse(\n            connectionInfoJson,\n            status_code=200,\n            headers={\"Content-type\": \"application/json\"},\n        )\n\n    methods = {\"POST\": post}\n    method = methods[req.method]\n\n    result = call_if_user(req, method)\n\n    return result\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nfrom typing import Optional, Tuple\n\nfrom onefuzztypes.events import EventInstanceConfigUpdated\nfrom onefuzztypes.models import InstanceConfig as BASE_CONFIG\nfrom pydantic import Field\n\nfrom .azure.creds import get_instance_name\nfrom .events import send_event\nfrom .orm import ORMMixin\n\n\nclass InstanceConfig(BASE_CONFIG, ORMMixin):\n    instance_name: str = Field(default_factory=get_instance_name)\n\n    @classmethod\n    def key_fields(cls) -> Tuple[str, Optional[str]]:\n        return (\"instance_name\", None)\n\n    @classmethod\n    def fetch(cls) -> \"InstanceConfig\":\n        entry = cls.get(get_instance_name())\n        if entry is None:\n            entry = cls(allowed_aad_tenants=[])\n            entry.save()\n        return entry\n\n    def save(self, new: bool = False, require_etag: bool = False) -> None:\n        super().save(new=new, require_etag=require_etag)\n        send_event(EventInstanceConfigUpdated(config=self))\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport logging\nfrom typing import List, Optional\nfrom uuid import UUID\n\nimport azure.functions as func\nimport jwt\nfrom memoization import cached\nfrom onefuzztypes.enums import ErrorCode\nfrom onefuzztypes.models import Error, Result, UserInfo\n\nfrom .config import InstanceConfig\n\n\ndef get_bearer_token(request: func.HttpRequest) -> Optional[str]:\n    auth: str = request.headers.get(\"Authorization\", None)\n    if not auth:\n        return None\n\n    parts = auth.split()\n\n    if len(parts) != 2:\n        return None\n\n    if parts[0].lower() != \"bearer\":\n        return None\n\n    return parts[1]\n\n\ndef get_auth_token(request: func.HttpRequest) -> Optional[str]:\n    token = get_bearer_token(request)\n    if token is not None:\n        return token\n\n    token_header = request.headers.get(\"x-ms-token-aad-id-token\", None)\n    if token_header is None:\n        return None\n    return str(token_header)\n\n\n@cached(ttl=60)\ndef get_allowed_tenants() -> List[str]:\n    config = InstanceConfig.fetch()\n    entries = [f\"https://sts.windows.net/{x}/\" for x in config.allowed_aad_tenants]\n    return entries\n\n\ndef parse_jwt_token(request: func.HttpRequest) -> Result[UserInfo]:\n    \"\"\"Obtains the Access Token from the Authorization Header\"\"\"\n    token_str = get_auth_token(request)\n    if token_str is None:\n        return Error(\n            code=ErrorCode.INVALID_REQUEST,\n            errors=[\"unable to find authorization token\"],\n        )\n\n    # The JWT token has already been verified by the azure authentication layer,\n    # but we need to verify the tenant is as we expect.\n    token = jwt.decode(token_str, options={\"verify_signature\": False})\n\n    if \"iss\" not in token:\n        return Error(\n            code=ErrorCode.INVALID_REQUEST, errors=[\"missing issuer from token\"]\n        )\n\n    tenants = get_allowed_tenants()\n    if token[\"iss\"] not in tenants:\n        logging.error(\"issuer not from allowed tenant: %s - %s\", token[\"iss\"], tenants)\n        return Error(code=ErrorCode.INVALID_REQUEST, errors=[\"unauthorized AAD issuer\"])\n\n    application_id = UUID(token[\"appid\"]) if \"appid\" in token else None\n    object_id = UUID(token[\"oid\"]) if \"oid\" in token else None\n    upn = token.get(\"upn\")\n    return UserInfo(application_id=application_id, object_id=object_id, upn=upn)\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport os\nimport unittest\nfrom uuid import UUID, uuid4\n\nfrom onefuzztypes.models import UserInfo\n\nfrom __app__.onefuzzlib.config import InstanceConfig\nfrom __app__.onefuzzlib.endpoint_authorization import (\n    can_modify_config_impl,\n    check_can_manage_pools_impl,\n)\n\nif \"ONEFUZZ_INSTANCE_NAME\" not in os.environ:\n    os.environ[\"ONEFUZZ_INSTANCE_NAME\"] = \"test\"\n\n\nclass TestAdmin(unittest.TestCase):\n    def test_modify_config(self) -> None:\n        user1 = uuid4()\n        user2 = uuid4()\n\n        # no admins set\n        self.assertTrue(\n            can_modify_config_impl(\n                InstanceConfig(allowed_aad_tenants=[UUID(int=0)]), UserInfo()\n            )\n        )\n\n        # with oid, but no admin\n        self.assertTrue(\n            can_modify_config_impl(\n                InstanceConfig(allowed_aad_tenants=[UUID(int=0)]),\n                UserInfo(object_id=user1),\n            )\n        )\n\n        # is admin\n        self.assertTrue(\n            can_modify_config_impl(\n                InstanceConfig(allowed_aad_tenants=[UUID(int=0)], admins=[user1]),\n                UserInfo(object_id=user1),\n            )\n        )\n\n        # no user oid set\n        self.assertFalse(\n            can_modify_config_impl(\n                InstanceConfig(allowed_aad_tenants=[UUID(int=0)], admins=[user1]),\n                UserInfo(),\n            )\n        )\n\n        # not an admin\n        self.assertFalse(\n            can_modify_config_impl(\n                InstanceConfig(allowed_aad_tenants=[UUID(int=0)], admins=[user1]),\n                UserInfo(object_id=user2),\n            )\n        )\n\n    def test_manage_pools(self) -> None:\n        user1 = uuid4()\n        user2 = uuid4()\n\n        # by default, any can modify\n        self.assertIsNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(\n                    allowed_aad_tenants=[UUID(int=0)], allow_pool_management=True\n                ),\n                UserInfo(),\n            )\n        )\n\n        # with oid, but no admin\n        self.assertIsNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(\n                    allowed_aad_tenants=[UUID(int=0)], allow_pool_management=True\n                ),\n                UserInfo(object_id=user1),\n            )\n        )\n\n        # is admin\n        self.assertIsNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(\n                    allowed_aad_tenants=[UUID(int=0)],\n                    allow_pool_management=False,\n                    admins=[user1],\n                ),\n                UserInfo(object_id=user1),\n            )\n        )\n\n        # no user oid set\n        self.assertIsNotNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(\n                    allowed_aad_tenants=[UUID(int=0)],\n                    allow_pool_management=False,\n                    admins=[user1],\n                ),\n                UserInfo(),\n            )\n        )\n\n        # not an admin\n        self.assertIsNotNone(\n            check_can_manage_pools_impl(\n                InstanceConfig(\n                    allowed_aad_tenants=[UUID(int=0)],\n                    allow_pool_management=False,\n                    admins=[user1],\n                ),\n                UserInfo(object_id=user2),\n            )\n        )\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n", "{\n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json\",\n    \"contentVersion\": \"1.0.0.0\",\n    \"parameters\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        },\n        \"clientId\": {\n            \"type\": \"string\"\n        },\n        \"clientSecret\": {\n            \"type\": \"string\"\n        },\n        \"signedExpiry\": {\n            \"type\": \"string\"\n        },\n        \"app_func_issuer\": {\n            \"type\": \"string\"\n        },\n        \"app_func_audience\": {\n            \"type\": \"string\"\n        },\n        \"multi_tenant_domain\": {\n            \"type\": \"string\"\n        },\n        \"diagnosticsLogsLevel\": {\n            \"type\": \"string\",\n            \"defaultValue\": \"Verbose\",\n            \"allowedValues\": [\n                \"Verbose\",\n                \"Information\",\n                \"Warning\",\n                \"Error\"\n            ],\n            \"metadata\": {\n                \"description\": \"The degree of severity for diagnostics logs.\"\n            }\n        },\n        \"workbookData\": {\n            \"type\": \"object\",\n            \"metadata\": {\n                \"description\": \"Azure Monitor workbook definitions.\"\n            }\n        }\n    },\n    \"variables\": {\n        \"autoscale_name\": \"[concat('onefuzz-autoscale-', uniquestring(resourceGroup().id))]\",\n        \"log_retention\": 30,\n        \"monitorAccountName\": \"[concat('logs-wb-', uniquestring(resourceGroup().id))]\",\n        \"scaleset_identity\": \"[concat(parameters('name'), '-scalesetid')]\",\n        \"signalr-name\": \"[concat('onefuzz-', uniquestring(resourceGroup().id))]\",\n        \"storage_account_sas\": {\n            \"signedExpiry\": \"[parameters('signedExpiry')]\",\n            \"signedPermission\": \"rwdlacup\",\n            \"signedResourceTypes\": \"sco\",\n            \"signedServices\": \"bfqt\"\n        },\n        \"storageAccountName\": \"[concat('fuzz', uniquestring(resourceGroup().id))]\",\n        \"storageAccountNameFunc\": \"[concat('func', uniquestring(resourceGroup().id))]\",\n        \"telemetry\": \"d7a73cf4-5a1a-4030-85e1-e5b25867e45a\",\n        \"Log Analytics Contributor\": \"92aaf0da-9dab-42b6-94a3-d43ce8d16293\",\n        \"Managed Identity Operator\": \"f1a07417-d97a-45cb-824c-7a7467783830\",\n        \"Network Contributor\": \"4d97b98b-1d4f-4787-a291-c67834d212e7\",\n        \"Storage Account Contributor\": \"17d1049b-9a84-46fb-8f53-869881c3d3ab\",\n        \"Virtual Machine Contributor\": \"9980e02c-c2be-4d73-94e8-173b1dc7cf3c\",\n        \"Storage Blob Data Reader\": \"2a2b9908-6ea1-4ae2-8e65-a410df84e7d1\",\n        \"keyVaultName\": \"[concat('of-kv-', uniquestring(resourceGroup().id))]\"\n    },\n    \"functions\": [\n        {\n            \"namespace\": \"onefuzz\",\n            \"members\": {\n                \"severitiesAtMostInfo\": {\n                    \"parameters\": [],\n                    \"output\": {\n                        \"type\": \"array\",\n                        \"value\": [\n                            {\n                                \"severity\": \"emerg\"\n                            },\n                            {\n                                \"severity\": \"alert\"\n                            },\n                            {\n                                \"severity\": \"crit\"\n                            },\n                            {\n                                \"severity\": \"err\"\n                            },\n                            {\n                                \"severity\": \"warning\"\n                            },\n                            {\n                                \"severity\": \"notice\"\n                            },\n                            {\n                                \"severity\": \"info\"\n                            }\n                        ]\n                    }\n                }\n            }\n        }\n    ],\n    \"resources\": [\n        {\n            \"type\": \"Microsoft.ManagedIdentity/userAssignedIdentities\",\n            \"name\": \"[variables('scaleset_identity')]\",\n            \"apiVersion\": \"2018-11-30\",\n            \"location\": \"[resourceGroup().location]\"\n        },\n        {\n            \"type\": \"Microsoft.KeyVault/vaults\",\n            \"apiVersion\": \"2019-09-01\",\n            \"name\": \"[variables('keyVaultName')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"properties\": {\n                \"enabledForDiskEncryption\": false,\n                \"enabledForTemplateDeployment\": true,\n                \"tenantId\": \"[subscription().tenantId]\",\n                \"accessPolicies\": [\n                     {\n                        \"objectId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2019-08-01', 'full').identity.principalId]\",\n                        \"tenantId\": \"[subscription().tenantId]\",\n                        \"permissions\": {\n                            \"secrets\": [\"get\", \"list\", \"set\", \"delete\"]\n                        }\n                    }\n                ],\n                \"sku\": {\n                    \"name\": \"standard\",\n                    \"family\": \"A\"\n                },\n                \"networkAcls\": {\n                    \"defaultAction\": \"Allow\",\n                    \"bypass\": \"AzureServices\"\n                }\n            }\n        },\n        {\n            \"apiVersion\": \"2018-11-01\",\n            \"name\": \"[parameters('name')]\",\n            \"type\": \"Microsoft.Web/sites\",\n            \"kind\": \"functionapp,linux\",\n            \"location\": \"[resourceGroup().location]\",\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            },\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.SignalRService/SignalR', variables('signalr-name'))]\",\n                \"[resourceId('microsoft.insights/components/', parameters('name'))]\",\n                \"[resourceId('Microsoft.Web/serverFarms', parameters('name'))]\",\n                \"[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]\",\n                \"[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountNameFunc'))]\"\n            ],\n            \"identity\": {\n                \"type\": \"SystemAssigned\"\n            },\n            \"resources\": [\n                {\n                    \"apiVersion\": \"2018-02-01\",\n                    \"type\": \"config\",\n                    \"name\": \"logs\",\n                    \"location\": \"[resourceGroup().location]\",\n                    \"dependsOn\": [\n                        \"[concat('Microsoft.Web/sites/', parameters('name'))]\",\n                        \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n                    ],\n                    \"properties\": {\n                        \"applicationLogs\": {\n                            \"azureBlobStorage\": {\n                                \"level\": \"[parameters('diagnosticsLogsLevel')]\",\n                                \"sasUrl\": \"[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountNameFunc'))).primaryEndpoints.blob, 'app-logs', '?', listAccountSas(variables('storageAccountNameFunc'), '2018-02-01', variables('storage_account_sas')).accountSasToken)]\",\n                                \"retentionInDays\": \"[variables('log_retention')]\"\n                            }\n                        }\n                    }\n                }\n            ],\n            \"properties\": {\n                \"name\": \"[parameters('name')]\",\n                \"siteConfig\": {\n                    \"appSettings\": [\n                        {\n                            \"name\": \"FUNCTIONS_EXTENSION_VERSION\",\n                            \"value\": \"~3\"\n                        },\n                        {\n                            \"name\": \"FUNCTIONS_WORKER_RUNTIME\",\n                            \"value\": \"python\"\n                        },\n                        {\n                            \"name\": \"FUNCTIONS_WORKER_PROCESS_COUNT\",\n                            \"value\": \"1\"\n                        },\n                        {\n                            \"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\",\n                            \"value\": \"[reference(resourceId('microsoft.insights/components/', parameters('name')), '2015-05-01').InstrumentationKey]\"\n                        },\n                        {\n                            \"name\": \"APPINSIGHTS_APPID\",\n                            \"value\": \"[reference(resourceId('microsoft.insights/components/', parameters('name')), '2015-05-01').AppId]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_TELEMETRY\",\n                            \"value\": \"[variables('telemetry')]\"\n                        },\n                        {\n                            \"name\": \"AzureWebJobsStorage\",\n                            \"value\": \"[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountNameFunc'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]\"\n                        },\n                        {\n                            \"name\": \"MULTI_TENANT_DOMAIN\",\n                            \"value\": \"[parameters('multi_tenant_domain')]\"\n                        },\n                        {\n                            \"name\": \"AzureWebJobsDisableHomepage\",\n                            \"value\": \"true\"\n                        },\n                        {\n                            \"name\": \"AzureSignalRConnectionString\",\n                            \"value\": \"[listkeys(resourceId('Microsoft.SignalRService/SignalR', variables('signalr-name')), '2018-10-01').primaryConnectionString]\"\n                        },\n                        {\n                            \"name\": \"AzureSignalRServiceTransportType\",\n                            \"value\": \"Transient\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_INSTANCE_NAME\",\n                            \"value\": \"[parameters('name')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_INSTANCE\",\n                            \"value\": \"[concat('https://', parameters('name'), '.azurewebsites.net')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_RESOURCE_GROUP\",\n                            \"value\": \"[resourceGroup().id]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_DATA_STORAGE\",\n                            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_FUNC_STORAGE\",\n                            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_MONITOR\",\n                            \"value\": \"[variables('monitorAccountName')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_KEYVAULT\",\n                            \"value\": \"[variables('keyVaultName')]\"\n                        },\n                        {\n                            \"name\": \"ONEFUZZ_OWNER\",\n                            \"value\": \"[parameters('owner')]\"\n                        }\n                    ],\n                    \"linuxFxVersion\": \"Python|3.7\",\n                    \"alwaysOn\": true,\n                    \"defaultDocuments\": [],\n                    \"httpLoggingEnabled\": true,\n                    \"logsDirectorySizeLimit\": 100,\n                    \"detailedErrorLoggingEnabled\": true,\n                    \"http20Enabled\": true,\n                    \"minTlsVersion\": \"1.2\",\n                    \"ftpsState\": \"Disabled\",\n                    \"siteAuthSettings\": {\n                        \"enabled\": true,\n                        \"unauthenticatedClientAction\": \"RedirectToLoginPage\",\n                        \"tokenStoreEnabled\": true,\n                        \"clientId\": \"[parameters('clientId')]\",\n                        \"clientSecret\": \"[parameters('clientSecret')]\",\n                        \"issuer\": \"[parameters('app_func_issuer')]\",\n                        \"defaultProvider\": \"AzureActiveDirectory\",\n                        \"allowedAudiences\": [\"[parameters('app_func_audience')]\"],\n                        \"isAadAutoProvisioned\": false\n                    }\n                },\n                \"serverFarmId\": \"[resourceId('Microsoft.Web/serverFarms', parameters('name'))]\",\n                \"hostingEnvironment\": \"\",\n                \"clientAffinityEnabled\": false,\n                \"httpsOnly\": true\n            }\n        },\n        {\n            \"apiVersion\": \"2018-02-01\",\n            \"name\": \"[parameters('name')]\",\n            \"type\": \"Microsoft.Web/serverFarms\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"linux\",\n            \"dependsOn\": [],\n            \"properties\": {\n                \"name\": \"[parameters('name')]\",\n                \"reserved\": true\n            },\n            \"sku\": {\n                \"name\": \"P2v2\",\n                \"tier\": \"PremiumV2\",\n                \"size\": \"P2v2\",\n                \"family\": \"Pv2\",\n                \"capacity\": 1\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"apiVersion\": \"2014-04-01\",\n            \"name\": \"[variables('autoscale_name')]\",\n            \"type\": \"microsoft.insights/autoscalesettings\",\n            \"location\": \"[resourceGroup().location]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Web/serverFarms', parameters('name'))]\"\n            ],\n            \"properties\": {\n                \"name\": \"[variables('autoscale_name')]\",\n                \"enabled\": true,\n                \"targetResourceUri\": \"[resourceId('Microsoft.Web/serverFarms/', parameters('name'))]\",\n                \"profiles\": [\n                    {\n                        \"name\": \"Auto scale condition\",\n                        \"capacity\": {\n                            \"minimum\": 1,\n                            \"maximum\": 20,\n                            \"default\": 1\n                        },\n                        \"rules\": [\n                            {\n                                \"scaleAction\": {\n                                    \"direction\": \"Increase\",\n                                    \"type\": \"ChangeCount\",\n                                    \"value\": 5,\n                                    \"cooldown\": \"PT1M\"\n                                },\n                                \"metricTrigger\": {\n                                    \"metricName\": \"CpuPercentage\",\n                                    \"metricNamespace\": \"microsoft.web/serverfarms\",\n                                    \"metricResourceUri\": \"[resourceId('Microsoft.Web/serverFarms/', parameters('name'))]\",\n                                    \"operator\": \"GreaterThanOrEqual\",\n                                    \"statistic\": \"Average\",\n                                    \"threshold\": 20,\n                                    \"timeAggregation\": \"Average\",\n                                    \"timeGrain\": \"PT1M\",\n                                    \"timeWindow\": \"PT1M\",\n                                    \"Dimensions\": [],\n                                    \"dividePerInstance\": false\n                                }\n                            },\n                            {\n                                \"scaleAction\": {\n                                    \"direction\": \"Decrease\",\n                                    \"type\": \"ChangeCount\",\n                                    \"value\": 1,\n                                    \"cooldown\": \"PT5M\"\n                                },\n                                \"metricTrigger\": {\n                                    \"metricName\": \"CpuPercentage\",\n                                    \"metricNamespace\": \"microsoft.web/serverfarms\",\n                                    \"metricResourceUri\": \"[resourceId('Microsoft.Web/serverFarms/', parameters('name'))]\",\n                                    \"operator\": \"LessThan\",\n                                    \"statistic\": \"Average\",\n                                    \"threshold\": 20,\n                                    \"timeAggregation\": \"Average\",\n                                    \"timeGrain\": \"PT1M\",\n                                    \"timeWindow\": \"PT1M\",\n                                    \"Dimensions\": [],\n                                    \"dividePerInstance\": false\n                                }\n                            }\n                        ]\n                    }\n                ],\n                \"notifications\": [],\n                \"targetResourceLocation\": \"[resourceGroup().location]\"\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"apiVersion\": \"2015-05-01\",\n            \"name\": \"[parameters('name')]\",\n            \"type\": \"microsoft.insights/components\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"\",\n            \"properties\": {\n                \"ApplicationId\": \"[parameters('name')]\",\n                \"Application_Type\": \"other\",\n                \"RetentionInDays\": \"[variables('log_retention')]\"\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            },\n            \"resources\": [\n                {\n                    \"name\": \"df20765c-ed5b-46f9-a47b-20f4aaf7936d\",\n                    \"type\": \"microsoft.insights/workbooks\",\n                    \"location\": \"[resourceGroup().location]\",\n                    \"apiVersion\": \"2018-06-17-preview\",\n                    \"dependsOn\": [\n                        \"[resourceId('microsoft.insights/components', parameters('name'))]\"\n                    ],\n                    \"kind\": \"shared\",\n                    \"properties\": {\n                        \"displayName\": \"LibFuzzer Job Dashboard\",\n                        \"serializedData\": \"[parameters('workbookData').libFuzzerJob]\",\n                        \"version\": \"1.0\",\n                        \"sourceId\": \"[resourceId('microsoft.insights/components', parameters('name'))]\",\n                        \"category\": \"tsg\"\n                    }\n                }\n            ]\n        },\n        {\n            \"type\": \"Microsoft.OperationalInsights/workspaces\",\n            \"name\": \"[variables('monitorAccountName')]\",\n            \"apiVersion\": \"2017-03-15-preview\",\n            \"location\": \"[resourceGroup().location]\",\n            \"properties\": {\n                \"sku\": {\n                    \"name\": \"PerGB2018\"\n                },\n                \"retentionInDays\": \"[variables('log_retention')]\",\n                \"features\": {\n                    \"searchVersion\": 1,\n                    \"legacy\": 0,\n                    \"enableLogAccessUsingOnlyResourcePermissions\": true\n                }\n            },\n            \"resources\": [\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"location\": \"[resourceGroup().location]\",\n                    \"name\": \"[concat('VMInsights', '(', variables('monitorAccountName'), ')')]\",\n                    \"type\": \"Microsoft.OperationsManagement/solutions\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"properties\": {\n                        \"workspaceResourceId\": \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    },\n                    \"plan\": {\n                        \"name\": \"[concat('VMInsights', '(', variables('monitorAccountName'), ')')]\",\n                        \"publisher\": \"Microsoft\",\n                        \"product\": \"[Concat('OMSGallery/', 'VMInsights')]\",\n                        \"promotionCode\": \"\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceKern\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"kern\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceUser\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"user\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceDaemon\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"daemon\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceCron\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslog\",\n                    \"properties\": {\n                        \"syslogName\": \"cron\",\n                        \"syslogSeverities\": \"[onefuzz.severitiesAtMostInfo()]\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"syslogDataSourceCollection\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"LinuxSyslogCollection\",\n                    \"properties\": {\n                        \"state\": \"Enabled\"\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"windowsEventSystem\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"WindowsEvent\",\n                    \"properties\": {\n                        \"eventLogName\": \"System\",\n                        \"eventTypes\": [\n                            {\n                                \"eventType\": \"Error\"\n                            },\n                            {\n                                \"eventType\": \"Warning\"\n                            },\n                            {\n                                \"eventType\": \"Information\"\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"apiVersion\": \"2015-11-01-preview\",\n                    \"type\": \"datasources\",\n                    \"name\": \"windowsEventApplication\",\n                    \"dependsOn\": [\n                        \"[resourceId('Microsoft.OperationalInsights/workspaces', variables('monitorAccountName'))]\"\n                    ],\n                    \"kind\": \"WindowsEvent\",\n                    \"properties\": {\n                        \"eventLogName\": \"Application\",\n                        \"eventTypes\": [\n                            {\n                                \"eventType\": \"Error\"\n                            },\n                            {\n                                \"eventType\": \"Warning\"\n                            },\n                            {\n                                \"eventType\": \"Information\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        {\n            \"apiVersion\": \"2019-06-01\",\n            \"type\": \"Microsoft.Storage/storageAccounts\",\n            \"name\": \"[variables('storageAccountName')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"StorageV2\",\n            \"sku\": {\n                \"name\": \"Standard_LRS\",\n                \"tier\": \"Standard\"\n            },\n            \"properties\": {\n                \"supportsHttpsTrafficOnly\": true,\n                \"accessTier\": \"Hot\",\n                \"allowBlobPublicAccess\": false\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"apiVersion\": \"2019-06-01\",\n            \"type\": \"Microsoft.Storage/storageAccounts\",\n            \"name\": \"[variables('storageAccountNameFunc')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"kind\": \"StorageV2\",\n            \"sku\": {\n                \"name\": \"Standard_LRS\",\n                \"tier\": \"Standard\"\n            },\n            \"properties\": {\n                \"supportsHttpsTrafficOnly\": true,\n                \"accessTier\": \"Hot\",\n                \"allowBlobPublicAccess\": false\n            },\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default')]\",\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices\",\n            \"apiVersion\": \"2019-06-01\",\n            \"properties\": {\n                \"deleteRetentionPolicy\": {\n                    \"enabled\": true,\n                    \"days\": 30\n                }\n            },\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"name\": \"[concat(variables('storageAccountName'), '/default')]\",\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices\",\n            \"apiVersion\": \"2019-06-01\",\n            \"properties\": {\n                \"deleteRetentionPolicy\": {\n                    \"enabled\": true,\n                    \"days\": 30\n                }\n            },\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'vm-scripts')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'repro-scripts')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'proxy-configs')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'task-configs')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Storage/storageAccounts/blobServices/containers\",\n            \"apiVersion\": \"2018-03-01-preview\",\n            \"name\": \"[concat(variables('storageAccountNameFunc'), '/default/', 'app-logs')]\",\n            \"dependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ]\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-vmss'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Virtual Machine Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-storage'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Storage Account Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-network'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Network Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-logs'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Log Analytics Contributor'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2017-09-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-user_managed_idenity'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Managed Identity Operator'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2018-02-01', 'Full').identity.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Web/sites', parameters('name'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.Authorization/roleAssignments\",\n            \"apiVersion\": \"2018-07-01\",\n            \"name\": \"[guid(concat(resourceGroup().id, '-user_managed_idenity_read_blob'))]\",\n            \"properties\": {\n                \"roleDefinitionId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('Storage Blob Data Reader'))]\",\n                \"principalId\": \"[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('scaleset_identity')), '2018-11-30', 'Full').properties.principalId]\"\n            },\n            \"DependsOn\": [\n                \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n            ],\n            \"tags\": {\n                \"OWNER\": \"[parameters('owner')]\"\n            }\n        },\n        {\n            \"type\": \"Microsoft.SignalRService/SignalR\",\n            \"apiVersion\": \"2018-10-01\",\n            \"name\": \"[variables('signalr-name')]\",\n            \"location\": \"[resourceGroup().location]\",\n            \"sku\": {\n                \"name\": \"Standard_S1\",\n                \"tier\": \"Standard\",\n                \"size\": \"S1\",\n                \"capacity\": 1\n            },\n            \"properties\": {\n                \"hostNamePrefix\": \"[variables('signalr-name')]\",\n                \"features\": [\n                    {\n                        \"flag\": \"ServiceMode\",\n                        \"value\": \"Serverless\",\n                        \"properties\": {}\n                    },\n                    {\n                        \"flag\": \"EnableConnectivityLogs\",\n                        \"value\": \"True\",\n                        \"properties\": {}\n                    },\n                    {\n                        \"flag\": \"EnableMessagingLogs\",\n                        \"value\": \"False\",\n                        \"properties\": {}\n                    }\n                ]\n            }\n        }\n    ],\n    \"outputs\": {\n        \"fuzz-storage\": {\n            \"type\": \"string\",\n            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\"\n        },\n        \"fuzz-name\": {\n            \"type\": \"string\",\n            \"value\": \"[variables('storageAccountName')]\"\n        },\n        \"fuzz-key\": {\n            \"type\": \"string\",\n            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value]\"\n        },\n        \"func-name\": {\n            \"type\": \"string\",\n            \"value\": \"[variables('storageAccountNameFunc')]\"\n        },\n        \"func-storage\": {\n            \"type\": \"string\",\n            \"value\": \"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc'))]\"\n        },\n        \"func-key\": {\n            \"type\": \"string\",\n            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameFunc')), '2019-06-01').keys[0].value]\"\n        },\n        \"scaleset-identity\": {\n            \"type\": \"string\",\n            \"value\": \"[variables('scaleset_identity')]\"\n        },\n        \"tenant_id\": {\n            \"type\": \"string\",\n            \"value\": \"[subscription().tenantId]\"\n        }\n    }\n}\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport argparse\nimport json\nimport logging\nimport os\nimport platform\nimport shutil\nimport subprocess\nimport sys\nimport tempfile\nimport time\nimport uuid\nimport zipfile\nfrom datetime import datetime, timedelta\nfrom typing import Dict, List, Optional, Tuple, Union, cast\nfrom uuid import UUID\n\nfrom azure.common.client_factory import get_client_from_cli_profile\nfrom azure.common.credentials import get_cli_profile\nfrom azure.core.exceptions import ResourceExistsError\nfrom azure.cosmosdb.table.tableservice import TableService\nfrom azure.graphrbac import GraphRbacManagementClient\nfrom azure.graphrbac.models import (\n    Application,\n    ApplicationCreateParameters,\n    ApplicationUpdateParameters,\n    AppRole,\n    GraphErrorException,\n    OptionalClaims,\n    RequiredResourceAccess,\n    ResourceAccess,\n    ServicePrincipalCreateParameters,\n)\nfrom azure.mgmt.applicationinsights import ApplicationInsightsManagementClient\nfrom azure.mgmt.applicationinsights.models import (\n    ApplicationInsightsComponentExportRequest,\n)\nfrom azure.mgmt.eventgrid import EventGridManagementClient\nfrom azure.mgmt.eventgrid.models import (\n    EventSubscription,\n    EventSubscriptionFilter,\n    RetryPolicy,\n    StorageQueueEventSubscriptionDestination,\n)\nfrom azure.mgmt.resource import ResourceManagementClient, SubscriptionClient\nfrom azure.mgmt.resource.resources.models import (\n    Deployment,\n    DeploymentMode,\n    DeploymentProperties,\n)\nfrom azure.mgmt.storage import StorageManagementClient\nfrom azure.storage.blob import (\n    BlobServiceClient,\n    ContainerSasPermissions,\n    generate_container_sas,\n)\nfrom azure.storage.queue import QueueServiceClient\nfrom msrest.serialization import TZ_UTC\n\nfrom data_migration import migrate\nfrom registration import (\n    OnefuzzAppRole,\n    add_application_password,\n    assign_app_role,\n    authorize_application,\n    get_graph_client,\n    register_application,\n    set_app_audience,\n    update_pool_registration,\n)\nfrom set_admins import update_admins, update_allowed_aad_tenants\n\n# Found by manually assigning the User.Read permission to application\n# registration in the admin portal. The values are in the manifest under\n# the section \"requiredResourceAccess\"\nUSER_READ_PERMISSION = \"e1fe6dd8-ba31-4d61-89e7-88639da4683d\"\nMICROSOFT_GRAPH_APP_ID = \"00000003-0000-0000-c000-000000000000\"\n\nONEFUZZ_CLI_APP = \"72f1562a-8c0c-41ea-beb9-fa2b71c80134\"\nONEFUZZ_CLI_AUTHORITY = (\n    \"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47\"\n)\nCOMMON_AUTHORITY = \"https://login.microsoftonline.com/common\"\nTELEMETRY_NOTICE = (\n    \"Telemetry collection on stats and OneFuzz failures are sent to Microsoft. \"\n    \"To disable, delete the ONEFUZZ_TELEMETRY application setting in the \"\n    \"Azure Functions instance\"\n)\nAZCOPY_MISSING_ERROR = (\n    \"azcopy is not installed and unable to use the built-in version. \"\n    \"Installation instructions are available at https://aka.ms/azcopy\"\n)\nFUNC_TOOLS_ERROR = (\n    \"azure-functions-core-tools is not installed, \"\n    \"install v3 using instructions: \"\n    \"https://github.com/Azure/azure-functions-core-tools#installing\"\n)\n\nlogger = logging.getLogger(\"deploy\")\n\n\ndef gen_guid() -> str:\n    return str(uuid.uuid4())\n\n\nclass Client:\n    def __init__(\n        self,\n        *,\n        resource_group: str,\n        location: str,\n        application_name: str,\n        owner: str,\n        client_id: Optional[str],\n        client_secret: Optional[str],\n        app_zip: str,\n        tools: str,\n        instance_specific: str,\n        third_party: str,\n        arm_template: str,\n        workbook_data: str,\n        create_registration: bool,\n        migrations: List[str],\n        export_appinsights: bool,\n        log_service_principal: bool,\n        multi_tenant_domain: str,\n        upgrade: bool,\n        subscription_id: Optional[str],\n        admins: List[UUID],\n        allowed_aad_tenants: List[UUID],\n    ):\n        self.subscription_id = subscription_id\n        self.resource_group = resource_group\n        self.arm_template = arm_template\n        self.location = location\n        self.application_name = application_name\n        self.owner = owner\n        self.app_zip = app_zip\n        self.tools = tools\n        self.instance_specific = instance_specific\n        self.third_party = third_party\n        self.create_registration = create_registration\n        self.multi_tenant_domain = multi_tenant_domain\n        self.upgrade = upgrade\n        self.results: Dict = {\n            \"client_id\": client_id,\n            \"client_secret\": client_secret,\n        }\n        if self.multi_tenant_domain:\n            authority = COMMON_AUTHORITY\n        else:\n            authority = ONEFUZZ_CLI_AUTHORITY\n        self.cli_config: Dict[str, Union[str, UUID]] = {\n            \"client_id\": ONEFUZZ_CLI_APP,\n            \"authority\": authority,\n        }\n        self.migrations = migrations\n        self.export_appinsights = export_appinsights\n        self.log_service_principal = log_service_principal\n        self.admins = admins\n        self.allowed_aad_tenants = allowed_aad_tenants\n\n        machine = platform.machine()\n        system = platform.system()\n\n        if system == \"Linux\" and machine == \"x86_64\":\n            self.azcopy = os.path.join(self.tools, \"linux\", \"azcopy\")\n            subprocess.check_output([\"chmod\", \"+x\", self.azcopy])\n        elif system == \"Windows\" and machine == \"AMD64\":\n            self.azcopy = os.path.join(self.tools, \"win64\", \"azcopy.exe\")\n        else:\n            azcopy = shutil.which(\"azcopy\")\n            if not azcopy:\n                raise Exception(AZCOPY_MISSING_ERROR)\n            else:\n                logger.warn(\"unable to use built-in azcopy, using system install\")\n                self.azcopy = azcopy\n\n        with open(workbook_data) as f:\n            self.workbook_data = json.load(f)\n\n    def get_subscription_id(self) -> str:\n        if self.subscription_id:\n            return self.subscription_id\n        profile = get_cli_profile()\n        self.subscription_id = cast(str, profile.get_subscription_id())\n        return self.subscription_id\n\n    def get_location_display_name(self) -> str:\n        location_client = get_client_from_cli_profile(\n            SubscriptionClient, subscription_id=self.get_subscription_id()\n        )\n        locations = location_client.subscriptions.list_locations(\n            self.get_subscription_id()\n        )\n        for location in locations:\n            if location.name == self.location:\n                return cast(str, location.display_name)\n\n        raise Exception(\"unknown location: %s\", self.location)\n\n    def check_region(self) -> None:\n        # At the moment, this only checks are the specified providers available\n        # in the selected region\n\n        location = self.get_location_display_name()\n\n        with open(self.arm_template, \"r\") as handle:\n            arm = json.load(handle)\n\n        client = get_client_from_cli_profile(\n            ResourceManagementClient, subscription_id=self.get_subscription_id()\n        )\n        providers = {x.namespace: x for x in client.providers.list()}\n\n        unsupported = []\n\n        for resource in arm[\"resources\"]:\n            namespace, name = resource[\"type\"].split(\"/\", 1)\n\n            # resource types are in the form of a/b/c....\n            # only the top two are listed as resource types within providers\n            name = \"/\".join(name.split(\"/\")[:2])\n\n            if namespace not in providers:\n                unsupported.append(\"Unsupported provider: %s\" % namespace)\n                continue\n\n            provider = providers[namespace]\n            resource_types = {x.resource_type: x for x in provider.resource_types}\n            if name not in resource_types:\n                unsupported.append(\n                    \"Unsupported resource type: %s/%s\" % (namespace, name)\n                )\n                continue\n\n            resource_type = resource_types[name]\n            if (\n                location not in resource_type.locations\n                and len(resource_type.locations) > 0\n            ):\n                unsupported.append(\n                    \"%s/%s is unsupported in %s\" % (namespace, name, self.location)\n                )\n\n        if unsupported:\n            print(\"The following resources required by onefuzz are not supported:\")\n            print(\"\\n\".join([\"* \" + x for x in unsupported]))\n            sys.exit(1)\n\n    def create_password(self, object_id: UUID) -> Tuple[str, str]:\n        return add_application_password(object_id, self.get_subscription_id())\n\n    def setup_rbac(self) -> None:\n        \"\"\"\n        Setup the client application for the OneFuzz instance.\n        By default, Service Principals do not have access to create\n        client applications in AAD.\n        \"\"\"\n        if self.results[\"client_id\"] and self.results[\"client_secret\"]:\n            logger.info(\"using existing client application\")\n            return\n\n        client = get_client_from_cli_profile(\n            GraphRbacManagementClient, subscription_id=self.get_subscription_id()\n        )\n        logger.info(\"checking if RBAC already exists\")\n\n        try:\n            existing = list(\n                client.applications.list(\n                    filter=\"displayName eq '%s'\" % self.application_name\n                )\n            )\n        except GraphErrorException:\n            logger.error(\"unable to query RBAC. Provide client_id and client_secret\")\n            sys.exit(1)\n\n        app_roles = [\n            AppRole(\n                allowed_member_types=[\"Application\"],\n                display_name=OnefuzzAppRole.CliClient.value,\n                id=str(uuid.uuid4()),\n                is_enabled=True,\n                description=\"Allows access from the CLI.\",\n                value=OnefuzzAppRole.CliClient.value,\n            ),\n            AppRole(\n                allowed_member_types=[\"Application\"],\n                display_name=OnefuzzAppRole.ManagedNode.value,\n                id=str(uuid.uuid4()),\n                is_enabled=True,\n                description=\"Allow access from a lab machine.\",\n                value=OnefuzzAppRole.ManagedNode.value,\n            ),\n        ]\n\n        app: Optional[Application] = None\n\n        if not existing:\n            logger.info(\"creating Application registration\")\n\n            if self.multi_tenant_domain:\n                url = \"https://%s/%s\" % (\n                    self.multi_tenant_domain,\n                    self.application_name,\n                )\n            else:\n                url = \"https://%s.azurewebsites.net\" % self.application_name\n\n            params = ApplicationCreateParameters(\n                display_name=self.application_name,\n                identifier_uris=[url],\n                reply_urls=[url + \"/.auth/login/aad/callback\"],\n                optional_claims=OptionalClaims(id_token=[], access_token=[]),\n                required_resource_access=[\n                    RequiredResourceAccess(\n                        resource_access=[\n                            ResourceAccess(id=USER_READ_PERMISSION, type=\"Scope\")\n                        ],\n                        resource_app_id=MICROSOFT_GRAPH_APP_ID,\n                    )\n                ],\n                app_roles=app_roles,\n            )\n\n            app = client.applications.create(params)\n\n            logger.info(\"creating service principal\")\n            service_principal_params = ServicePrincipalCreateParameters(\n                account_enabled=True,\n                app_role_assignment_required=False,\n                service_principal_type=\"Application\",\n                app_id=app.app_id,\n            )\n\n            def try_sp_create() -> None:\n                error: Optional[Exception] = None\n                for _ in range(10):\n                    try:\n                        client.service_principals.create(service_principal_params)\n                        return\n                    except GraphErrorException as err:\n                        # work around timing issue when creating service principal\n                        # https://github.com/Azure/azure-cli/issues/14767\n                        if (\n                            \"service principal being created must in the local tenant\"\n                            not in str(err)\n                        ):\n                            raise err\n                    logger.warning(\n                        \"creating service principal failed with an error that occurs \"\n                        \"due to AAD race conditions\"\n                    )\n                    time.sleep(60)\n                if error is None:\n                    raise Exception(\"service principal creation failed\")\n                else:\n                    raise error\n\n            try_sp_create()\n\n        else:\n            app = existing[0]\n            existing_role_values = [app_role.value for app_role in app.app_roles]\n            has_missing_roles = any(\n                [role.value not in existing_role_values for role in app_roles]\n            )\n\n            if has_missing_roles:\n                # disabling the existing app role first to allow the update\n                # this is a requirement to update the application roles\n                for role in app.app_roles:\n                    role.is_enabled = False\n\n                client.applications.patch(\n                    app.object_id, ApplicationUpdateParameters(app_roles=app.app_roles)\n                )\n\n                # overriding the list of app roles\n                client.applications.patch(\n                    app.object_id, ApplicationUpdateParameters(app_roles=app_roles)\n                )\n\n        if self.multi_tenant_domain and app.sign_in_audience == \"AzureADMyOrg\":\n            url = \"https://%s/%s\" % (\n                self.multi_tenant_domain,\n                self.application_name,\n            )\n            client.applications.patch(\n                app.object_id, ApplicationUpdateParameters(identifier_uris=[url])\n            )\n            set_app_audience(app.object_id, \"AzureADMultipleOrgs\")\n        elif (\n            not self.multi_tenant_domain\n            and app.sign_in_audience == \"AzureADMultipleOrgs\"\n        ):\n            set_app_audience(app.object_id, \"AzureADMyOrg\")\n            url = \"https://%s.azurewebsites.net\" % self.application_name\n            client.applications.patch(\n                app.object_id, ApplicationUpdateParameters(identifier_uris=[url])\n            )\n        else:\n            logger.debug(\"No change to App Registration signInAudence setting\")\n\n            creds = list(client.applications.list_password_credentials(app.object_id))\n            client.applications.update_password_credentials(app.object_id, creds)\n\n        (password_id, password) = self.create_password(app.object_id)\n\n        cli_app = list(\n            client.applications.list(filter=\"appId eq '%s'\" % ONEFUZZ_CLI_APP)\n        )\n\n        if len(cli_app) == 0:\n            logger.info(\n                \"Could not find the default CLI application under the current \"\n                \"subscription, creating a new one\"\n            )\n            app_info = register_application(\n                \"onefuzz-cli\",\n                self.application_name,\n                OnefuzzAppRole.CliClient,\n                self.get_subscription_id(),\n            )\n            if self.multi_tenant_domain:\n                authority = COMMON_AUTHORITY\n            else:\n                authority = app_info.authority\n            self.cli_config = {\n                \"client_id\": app_info.client_id,\n                \"authority\": authority,\n            }\n\n        else:\n            onefuzz_cli_app = cli_app[0]\n            authorize_application(uuid.UUID(onefuzz_cli_app.app_id), app.app_id)\n            if self.multi_tenant_domain:\n                authority = COMMON_AUTHORITY\n            else:\n                onefuzz_client = get_graph_client(self.get_subscription_id())\n                authority = (\n                    \"https://login.microsoftonline.com/%s\"\n                    % onefuzz_client.config.tenant_id\n                )\n            self.cli_config = {\n                \"client_id\": onefuzz_cli_app.app_id,\n                \"authority\": authority,\n            }\n\n        self.results[\"client_id\"] = app.app_id\n        self.results[\"client_secret\"] = password\n\n        # Log `client_secret` for consumption by CI.\n        if self.log_service_principal:\n            logger.info(\"client_id: %s client_secret: %s\", app.app_id, password)\n        else:\n            logger.debug(\"client_id: %s client_secret: %s\", app.app_id, password)\n\n    def deploy_template(self) -> None:\n        logger.info(\"deploying arm template: %s\", self.arm_template)\n\n        with open(self.arm_template, \"r\") as template_handle:\n            template = json.load(template_handle)\n\n        client = get_client_from_cli_profile(\n            ResourceManagementClient, subscription_id=self.get_subscription_id()\n        )\n        client.resource_groups.create_or_update(\n            self.resource_group, {\"location\": self.location}\n        )\n\n        expiry = (datetime.now(TZ_UTC) + timedelta(days=365)).strftime(\n            \"%Y-%m-%dT%H:%M:%SZ\"\n        )\n\n        if self.multi_tenant_domain:\n            # clear the value in the Issuer Url field:\n            # https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient-enterpriseapi-multitenant\n            app_func_audience = \"https://%s/%s\" % (\n                self.multi_tenant_domain,\n                self.application_name,\n            )\n            app_func_issuer = \"\"\n            multi_tenant_domain = {\"value\": self.multi_tenant_domain}\n        else:\n            app_func_audience = \"https://%s.azurewebsites.net\" % self.application_name\n            tenant_oid = str(self.cli_config[\"authority\"]).split(\"/\")[-1]\n            app_func_issuer = \"https://sts.windows.net/%s/\" % tenant_oid\n            multi_tenant_domain = {\"value\": \"\"}\n\n        params = {\n            \"app_func_audience\": {\"value\": app_func_audience},\n            \"name\": {\"value\": self.application_name},\n            \"owner\": {\"value\": self.owner},\n            \"clientId\": {\"value\": self.results[\"client_id\"]},\n            \"clientSecret\": {\"value\": self.results[\"client_secret\"]},\n            \"app_func_issuer\": {\"value\": app_func_issuer},\n            \"signedExpiry\": {\"value\": expiry},\n            \"multi_tenant_domain\": multi_tenant_domain,\n            \"workbookData\": {\"value\": self.workbook_data},\n        }\n        deployment = Deployment(\n            properties=DeploymentProperties(\n                mode=DeploymentMode.incremental, template=template, parameters=params\n            )\n        )\n        count = 0\n        tries = 10\n        error: Optional[Exception] = None\n        while count < tries:\n            count += 1\n\n            try:\n                result = client.deployments.begin_create_or_update(\n                    self.resource_group, gen_guid(), deployment\n                ).result()\n                if result.properties.provisioning_state != \"Succeeded\":\n                    logger.error(\n                        \"error deploying: %s\",\n                        json.dumps(result.as_dict(), indent=4, sort_keys=True),\n                    )\n                    sys.exit(1)\n                self.results[\"deploy\"] = result.properties.outputs\n                return\n            except Exception as err:\n                error = err\n                as_repr = repr(err)\n                # Modeled after Azure-CLI.  See:\n                # https://github.com/Azure/azure-cli/blob/\n                #   3a2f6009cff788fde3b0170823c9129f187b2812/src/azure-cli-core/\n                #   azure/cli/core/commands/arm.py#L1086\n                if (\n                    \"PrincipalNotFound\" in as_repr\n                    and \"does not exist in the directory\" in as_repr\n                ):\n                    logger.info(\"application principal not available in AAD yet\")\n        if error:\n            raise error\n        else:\n            raise Exception(\"unknown error deploying\")\n\n    def assign_scaleset_identity_role(self) -> None:\n        if self.upgrade:\n            logger.info(\"Upgrading: skipping assignment of the managed identity role\")\n            return\n        logger.info(\"assigning the user managed identity role\")\n        assign_app_role(\n            self.application_name,\n            self.results[\"deploy\"][\"scaleset-identity\"][\"value\"],\n            self.get_subscription_id(),\n            OnefuzzAppRole.ManagedNode,\n        )\n\n    def apply_migrations(self) -> None:\n        name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        table_service = TableService(account_name=name, account_key=key)\n        migrate(table_service, self.migrations)\n\n    def set_instance_config(self) -> None:\n        name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        tenant = UUID(self.results[\"deploy\"][\"tenant_id\"][\"value\"])\n        table_service = TableService(account_name=name, account_key=key)\n\n        if self.admins:\n            update_admins(table_service, self.application_name, self.admins)\n\n        tenants = self.allowed_aad_tenants\n        if tenant not in tenants:\n            tenants.append(tenant)\n        update_allowed_aad_tenants(table_service, self.application_name, tenants)\n\n    def create_queues(self) -> None:\n        logger.info(\"creating eventgrid destination queue\")\n\n        name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.queue.core.windows.net\" % name\n        client = QueueServiceClient(\n            account_url=account_url,\n            credential={\"account_name\": name, \"account_key\": key},\n        )\n        for queue in [\n            \"file-changes\",\n            \"task-heartbeat\",\n            \"node-heartbeat\",\n            \"proxy\",\n            \"update-queue\",\n            \"webhooks\",\n            \"signalr-events\",\n        ]:\n            try:\n                client.create_queue(queue)\n            except ResourceExistsError:\n                pass\n\n    def create_eventgrid(self) -> None:\n        logger.info(\"creating eventgrid subscription\")\n        src_resource_id = self.results[\"deploy\"][\"fuzz-storage\"][\"value\"]\n        dst_resource_id = self.results[\"deploy\"][\"func-storage\"][\"value\"]\n        client = get_client_from_cli_profile(\n            StorageManagementClient, subscription_id=self.get_subscription_id()\n        )\n        event_subscription_info = EventSubscription(\n            destination=StorageQueueEventSubscriptionDestination(\n                resource_id=dst_resource_id, queue_name=\"file-changes\"\n            ),\n            filter=EventSubscriptionFilter(\n                included_event_types=[\n                    \"Microsoft.Storage.BlobCreated\",\n                    \"Microsoft.Storage.BlobDeleted\",\n                ]\n            ),\n            retry_policy=RetryPolicy(\n                max_delivery_attempts=30,\n                event_time_to_live_in_minutes=1440,\n            ),\n        )\n\n        client = get_client_from_cli_profile(\n            EventGridManagementClient, subscription_id=self.get_subscription_id()\n        )\n        result = client.event_subscriptions.begin_create_or_update(\n            src_resource_id, \"onefuzz1\", event_subscription_info\n        ).result()\n        if result.provisioning_state != \"Succeeded\":\n            raise Exception(\n                \"eventgrid subscription failed: %s\"\n                % json.dumps(result.as_dict(), indent=4, sort_keys=True),\n            )\n\n    def add_instance_id(self) -> None:\n        logger.info(\"setting instance_id log export\")\n\n        container_name = \"base-config\"\n        blob_name = \"instance_id\"\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if container_name not in [x[\"name\"] for x in client.list_containers()]:\n            client.create_container(container_name)\n\n        blob_client = client.get_blob_client(container_name, blob_name)\n        if blob_client.exists():\n            logger.debug(\"instance_id already exists\")\n            instance_id = uuid.UUID(blob_client.download_blob().readall().decode())\n        else:\n            logger.debug(\"creating new instance_id\")\n            instance_id = uuid.uuid4()\n            blob_client.upload_blob(str(instance_id))\n\n        logger.info(\"instance_id: %s\", instance_id)\n\n    def add_log_export(self) -> None:\n        if not self.export_appinsights:\n            logger.info(\"not exporting appinsights\")\n            return\n\n        container_name = \"app-insights\"\n\n        logger.info(\"adding appinsight log export\")\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if container_name not in [x[\"name\"] for x in client.list_containers()]:\n            client.create_container(container_name)\n\n        expiry = datetime.utcnow() + timedelta(days=2 * 365)\n\n        # NOTE: as this is a long-lived SAS url, it should not be logged and only\n        # used in the the later-on export_configurations.create() call\n        sas = generate_container_sas(\n            account_name,\n            container_name,\n            account_key=key,\n            permission=ContainerSasPermissions(write=True),\n            expiry=expiry,\n        )\n        url = \"%s/%s?%s\" % (account_url, container_name, sas)\n\n        record_types = (\n            \"Requests, Event, Exceptions, Metrics, PageViews, \"\n            \"PageViewPerformance, Rdd, PerformanceCounters, Availability\"\n        )\n\n        req = ApplicationInsightsComponentExportRequest(\n            record_types=record_types,\n            destination_type=\"Blob\",\n            is_enabled=\"true\",\n            destination_address=url,\n        )\n\n        app_insight_client = get_client_from_cli_profile(\n            ApplicationInsightsManagementClient,\n            subscription_id=self.get_subscription_id(),\n        )\n\n        to_delete = []\n        for entry in app_insight_client.export_configurations.list(\n            self.resource_group, self.application_name\n        ):\n            if (\n                entry.storage_name == account_name\n                and entry.container_name == container_name\n            ):\n                to_delete.append(entry.export_id)\n\n        for export_id in to_delete:\n            logger.info(\"replacing existing export: %s\", export_id)\n            app_insight_client.export_configurations.delete(\n                self.resource_group, self.application_name, export_id\n            )\n\n        app_insight_client.export_configurations.create(\n            self.resource_group, self.application_name, req\n        )\n\n    def upload_tools(self) -> None:\n        logger.info(\"uploading tools from %s\", self.tools)\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if \"tools\" not in [x[\"name\"] for x in client.list_containers()]:\n            client.create_container(\"tools\")\n\n        expiry = datetime.utcnow() + timedelta(minutes=30)\n\n        sas = generate_container_sas(\n            account_name,\n            \"tools\",\n            account_key=key,\n            permission=ContainerSasPermissions(\n                read=True, write=True, delete=True, list=True\n            ),\n            expiry=expiry,\n        )\n        url = \"%s/%s?%s\" % (account_url, \"tools\", sas)\n\n        subprocess.check_output(\n            [\n                self.azcopy,\n                \"copy\",\n                os.path.join(self.tools, \"*\"),\n                url,\n                \"--overwrite=true\",\n                \"--recursive=true\",\n            ]\n        )\n\n        subprocess.check_output(\n            [self.azcopy, \"sync\", self.tools, url, \"--delete-destination\", \"true\"]\n        )\n\n    def upload_instance_setup(self) -> None:\n        logger.info(\"uploading instance-specific-setup from %s\", self.instance_specific)\n        account_name = self.results[\"deploy\"][\"func-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"func-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n        client = BlobServiceClient(account_url, credential=key)\n        if \"instance-specific-setup\" not in [\n            x[\"name\"] for x in client.list_containers()\n        ]:\n            client.create_container(\"instance-specific-setup\")\n\n        expiry = datetime.utcnow() + timedelta(minutes=30)\n\n        sas = generate_container_sas(\n            account_name,\n            \"instance-specific-setup\",\n            account_key=key,\n            permission=ContainerSasPermissions(\n                read=True, write=True, delete=True, list=True\n            ),\n            expiry=expiry,\n        )\n        url = \"%s/%s?%s\" % (account_url, \"instance-specific-setup\", sas)\n\n        subprocess.check_output(\n            [\n                self.azcopy,\n                \"copy\",\n                os.path.join(self.instance_specific, \"*\"),\n                url,\n                \"--overwrite=true\",\n                \"--recursive=true\",\n            ]\n        )\n\n        subprocess.check_output(\n            [\n                self.azcopy,\n                \"sync\",\n                self.instance_specific,\n                url,\n                \"--delete-destination\",\n                \"true\",\n            ]\n        )\n\n    def upload_third_party(self) -> None:\n        logger.info(\"uploading third-party tools from %s\", self.third_party)\n        account_name = self.results[\"deploy\"][\"fuzz-name\"][\"value\"]\n        key = self.results[\"deploy\"][\"fuzz-key\"][\"value\"]\n        account_url = \"https://%s.blob.core.windows.net\" % account_name\n\n        client = BlobServiceClient(account_url, credential=key)\n        containers = [x[\"name\"] for x in client.list_containers()]\n\n        for name in os.listdir(self.third_party):\n            path = os.path.join(self.third_party, name)\n            if not os.path.isdir(path):\n                continue\n            if name not in containers:\n                client.create_container(name)\n\n            expiry = datetime.utcnow() + timedelta(minutes=30)\n            sas = generate_container_sas(\n                account_name,\n                name,\n                account_key=key,\n                permission=ContainerSasPermissions(\n                    read=True, write=True, delete=True, list=True\n                ),\n                expiry=expiry,\n            )\n            url = \"%s/%s?%s\" % (account_url, name, sas)\n\n            subprocess.check_output(\n                [\n                    self.azcopy,\n                    \"copy\",\n                    os.path.join(path, \"*\"),\n                    url,\n                    \"--overwrite=true\",\n                    \"--recursive=true\",\n                ]\n            )\n\n            subprocess.check_output(\n                [self.azcopy, \"sync\", path, url, \"--delete-destination\", \"true\"]\n            )\n\n    def deploy_app(self) -> None:\n        logger.info(\"deploying function app %s\", self.app_zip)\n        with tempfile.TemporaryDirectory() as tmpdirname:\n            with zipfile.ZipFile(self.app_zip, \"r\") as zip_ref:\n                func = shutil.which(\"func\")\n                assert func is not None\n\n                zip_ref.extractall(tmpdirname)\n                error: Optional[subprocess.CalledProcessError] = None\n                max_tries = 5\n                for i in range(max_tries):\n                    try:\n                        subprocess.check_output(\n                            [\n                                func,\n                                \"azure\",\n                                \"functionapp\",\n                                \"publish\",\n                                self.application_name,\n                                \"--python\",\n                                \"--no-build\",\n                            ],\n                            env=dict(os.environ, CLI_DEBUG=\"1\"),\n                            cwd=tmpdirname,\n                        )\n                        return\n                    except subprocess.CalledProcessError as err:\n                        error = err\n                        if i + 1 < max_tries:\n                            logger.debug(\"func failure error: %s\", err)\n                            logger.warning(\n                                \"function failed to deploy, waiting 60 \"\n                                \"seconds and trying again\"\n                            )\n                            time.sleep(60)\n                if error is not None:\n                    raise error\n\n    def update_registration(self) -> None:\n        if not self.create_registration:\n            return\n        update_pool_registration(self.application_name, self.get_subscription_id())\n\n    def done(self) -> None:\n        logger.info(TELEMETRY_NOTICE)\n        client_secret_arg = (\n            (\"--client_secret %s\" % self.cli_config[\"client_secret\"])\n            if \"client_secret\" in self.cli_config\n            else \"\"\n        )\n        multi_tenant_domain = \"\"\n        if self.multi_tenant_domain:\n            multi_tenant_domain = \"--tenant_domain %s\" % self.multi_tenant_domain\n        logger.info(\n            \"Update your CLI config via: onefuzz config --endpoint \"\n            \"https://%s.azurewebsites.net --authority %s --client_id %s %s %s\",\n            self.application_name,\n            self.cli_config[\"authority\"],\n            self.cli_config[\"client_id\"],\n            client_secret_arg,\n            multi_tenant_domain,\n        )\n\n\ndef arg_dir(arg: str) -> str:\n    if not os.path.isdir(arg):\n        raise argparse.ArgumentTypeError(\"not a directory: %s\" % arg)\n    return arg\n\n\ndef arg_file(arg: str) -> str:\n    if not os.path.isfile(arg):\n        raise argparse.ArgumentTypeError(\"not a file: %s\" % arg)\n    return arg\n\n\ndef main() -> None:\n    rbac_only_states = [\n        (\"check_region\", Client.check_region),\n        (\"rbac\", Client.setup_rbac),\n        (\"arm\", Client.deploy_template),\n        (\"assign_scaleset_identity_role\", Client.assign_scaleset_identity_role),\n    ]\n\n    full_deployment_states = rbac_only_states + [\n        (\"apply_migrations\", Client.apply_migrations),\n        (\"set_instance_config\", Client.set_instance_config),\n        (\"queues\", Client.create_queues),\n        (\"eventgrid\", Client.create_eventgrid),\n        (\"tools\", Client.upload_tools),\n        (\"add_instance_id\", Client.add_instance_id),\n        (\"instance-specific-setup\", Client.upload_instance_setup),\n        (\"third-party\", Client.upload_third_party),\n        (\"api\", Client.deploy_app),\n        (\"export_appinsights\", Client.add_log_export),\n        (\"update_registration\", Client.update_registration),\n    ]\n\n    formatter = argparse.ArgumentDefaultsHelpFormatter\n    parser = argparse.ArgumentParser(formatter_class=formatter)\n    parser.add_argument(\"location\")\n    parser.add_argument(\"resource_group\")\n    parser.add_argument(\"application_name\")\n    parser.add_argument(\"owner\")\n    parser.add_argument(\n        \"--arm-template\",\n        type=arg_file,\n        default=\"azuredeploy.json\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--workbook-data\",\n        type=arg_file,\n        default=\"workbook-data.json\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--app-zip\",\n        type=arg_file,\n        default=\"api-service.zip\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--tools\", type=arg_dir, default=\"tools\", help=\"(default: %(default)s)\"\n    )\n    parser.add_argument(\n        \"--instance_specific\",\n        type=arg_dir,\n        default=\"instance-specific-setup\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\n        \"--third-party\",\n        type=arg_dir,\n        default=\"third-party\",\n        help=\"(default: %(default)s)\",\n    )\n    parser.add_argument(\"--client_id\")\n    parser.add_argument(\"--client_secret\")\n    parser.add_argument(\n        \"--start_at\",\n        default=full_deployment_states[0][0],\n        choices=[x[0] for x in full_deployment_states],\n        help=(\n            \"Debug deployments by starting at a specific state.  \"\n            \"NOT FOR PRODUCTION USE.  (default: %(default)s)\"\n        ),\n    )\n    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\")\n    parser.add_argument(\n        \"--create_pool_registration\",\n        action=\"store_true\",\n        help=\"Create an application registration and/or generate a \"\n        \"password for the pool agent\",\n    )\n    parser.add_argument(\n        \"--upgrade\",\n        action=\"store_true\",\n        help=\"Indicates that the instance is being upgraded\",\n    )\n    parser.add_argument(\n        \"--apply_migrations\",\n        type=str,\n        nargs=\"+\",\n        default=[],\n        help=\"list of migration to apply to the azure table\",\n    )\n    parser.add_argument(\n        \"--export_appinsights\",\n        action=\"store_true\",\n        help=\"enable appinsight log export\",\n    )\n    parser.add_argument(\n        \"--log_service_principal\",\n        action=\"store_true\",\n        help=\"display service prinipal with info log level\",\n    )\n    parser.add_argument(\n        \"--multi_tenant_domain\",\n        type=str,\n        default=None,\n        help=\"enable multi-tenant authentication with this tenant domain\",\n    )\n    parser.add_argument(\n        \"--subscription_id\",\n        type=str,\n    )\n    parser.add_argument(\n        \"--rbac_only\",\n        action=\"store_true\",\n        help=\"execute only the steps required to create the rbac resources\",\n    )\n    parser.add_argument(\n        \"--set_admins\",\n        type=UUID,\n        nargs=\"*\",\n        help=\"set the list of administrators (by OID in AAD)\",\n    )\n    parser.add_argument(\n        \"--allowed_aad_tenants\",\n        type=UUID,\n        nargs=\"*\",\n        help=\"Set additional AAD tenants beyond the tenant the app is deployed in\",\n    )\n\n    args = parser.parse_args()\n\n    if shutil.which(\"func\") is None:\n        logger.error(FUNC_TOOLS_ERROR)\n        sys.exit(1)\n\n    client = Client(\n        resource_group=args.resource_group,\n        location=args.location,\n        application_name=args.application_name,\n        owner=args.owner,\n        client_id=args.client_id,\n        client_secret=args.client_secret,\n        app_zip=args.app_zip,\n        tools=args.tools,\n        instance_specific=args.instance_specific,\n        third_party=args.third_party,\n        arm_template=args.arm_template,\n        workbook_data=args.workbook_data,\n        create_registration=args.create_pool_registration,\n        migrations=args.apply_migrations,\n        export_appinsights=args.export_appinsights,\n        log_service_principal=args.log_service_principal,\n        multi_tenant_domain=args.multi_tenant_domain,\n        upgrade=args.upgrade,\n        subscription_id=args.subscription_id,\n        admins=args.set_admins,\n        allowed_aad_tenants=args.allowed_aad_tenants or [],\n    )\n    if args.verbose:\n        level = logging.DEBUG\n    else:\n        level = logging.WARN\n\n    logging.basicConfig(level=level)\n\n    logging.getLogger(\"deploy\").setLevel(logging.INFO)\n\n    if args.rbac_only:\n        logger.warning(\n            \"'rbac_only' specified. The deployment will execute \"\n            \"only the steps required to create the rbac resources\"\n        )\n        states = rbac_only_states\n    else:\n        states = full_deployment_states\n\n    if args.start_at != states[0][0]:\n        logger.warning(\n            \"*** Starting at a non-standard deployment state.  \"\n            \"This may result in a broken deployment.  ***\"\n        )\n\n    started = False\n    for state in states:\n        if args.start_at == state[0]:\n            started = True\n        if started:\n            state[1](client)\n\n    client.done()\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nimport argparse\nimport json\nfrom typing import List, Optional\nfrom uuid import UUID\n\nfrom azure.common.client_factory import get_client_from_cli_profile\nfrom azure.cosmosdb.table.tableservice import TableService\nfrom azure.mgmt.storage import StorageManagementClient\n\nTABLE_NAME = \"InstanceConfig\"\n\n\ndef create_if_missing(table_service: TableService) -> None:\n    if not table_service.exists(TABLE_NAME):\n        table_service.create_table(TABLE_NAME)\n\n\ndef update_allowed_aad_tenants(\n    table_service: TableService, resource_group: str, tenants: List[UUID]\n) -> None:\n    create_if_missing(table_service)\n    as_str = [str(x) for x in tenants]\n    table_service.insert_or_merge_entity(\n        TABLE_NAME,\n        {\n            \"PartitionKey\": resource_group,\n            \"RowKey\": resource_group,\n            \"allowed_aad_tenants\": json.dumps(as_str),\n        },\n    )\n\n\ndef update_admins(\n    table_service: TableService, resource_group: str, admins: List[UUID]\n) -> None:\n    create_if_missing(table_service)\n    admins_as_str: Optional[List[str]] = None\n    if admins:\n        admins_as_str = [str(x) for x in admins]\n\n    table_service.insert_or_merge_entity(\n        TABLE_NAME,\n        {\n            \"PartitionKey\": resource_group,\n            \"RowKey\": resource_group,\n            \"admins\": json.dumps(admins_as_str),\n        },\n    )\n\n\ndef main() -> None:\n    formatter = argparse.ArgumentDefaultsHelpFormatter\n    parser = argparse.ArgumentParser(formatter_class=formatter)\n    parser.add_argument(\"resource_group\")\n    parser.add_argument(\"storage_account\")\n    parser.add_argument(\"--admins\", type=UUID, nargs=\"*\")\n    parser.add_argument(\"--allowed_aad_tenants\", type=UUID, nargs=\"*\")\n    args = parser.parse_args()\n\n    client = get_client_from_cli_profile(StorageManagementClient)\n    storage_keys = client.storage_accounts.list_keys(\n        args.resource_group, args.storage_account\n    )\n    table_service = TableService(\n        account_name=args.storage_account, account_key=storage_keys.keys[0].value\n    )\n    if args.admins:\n        update_admins(table_service, args.resource_group, args.admins)\n    if args.allowed_aad_tenants:\n        update_allowed_aad_tenants(\n            table_service, args.resource_group, args.allowed_aad_tenants\n        )\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n\nimport sys\nfrom typing import List, Optional\nfrom uuid import UUID\n\nfrom onefuzztypes.enums import (\n    OS,\n    Architecture,\n    ContainerType,\n    ErrorCode,\n    NodeState,\n    ScalesetState,\n    TaskState,\n    TaskType,\n    VmState,\n)\nfrom onefuzztypes.events import (\n    Event,\n    EventCrashReported,\n    EventFileAdded,\n    EventInstanceConfigUpdated,\n    EventJobCreated,\n    EventJobStopped,\n    EventNodeCreated,\n    EventNodeDeleted,\n    EventNodeHeartbeat,\n    EventNodeStateUpdated,\n    EventPing,\n    EventPoolCreated,\n    EventPoolDeleted,\n    EventProxyCreated,\n    EventProxyDeleted,\n    EventProxyFailed,\n    EventProxyStateUpdated,\n    EventRegressionReported,\n    EventScalesetCreated,\n    EventScalesetDeleted,\n    EventScalesetFailed,\n    EventScalesetResizeScheduled,\n    EventScalesetStateUpdated,\n    EventTaskCreated,\n    EventTaskFailed,\n    EventTaskHeartbeat,\n    EventTaskStateUpdated,\n    EventTaskStopped,\n    EventType,\n    JobTaskStopped,\n    get_event_type,\n)\nfrom onefuzztypes.models import (\n    BlobRef,\n    CrashTestResult,\n    Error,\n    InstanceConfig,\n    JobConfig,\n    RegressionReport,\n    Report,\n    TaskConfig,\n    TaskContainers,\n    TaskDetails,\n    UserInfo,\n)\nfrom onefuzztypes.primitives import Container, PoolName, Region\nfrom onefuzztypes.webhooks import WebhookMessage\n\nEMPTY_SHA256 = \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\nZERO_SHA256 = \"0\" * len(EMPTY_SHA256)\n\n\ndef layer(depth: int, title: str, content: Optional[str] = None) -> str:\n    result = f\"{'#' * depth} {title}\\n\\n\"\n    if content is not None:\n        result += f\"{content}\\n\\n\"\n    return result\n\n\ndef typed(depth: int, title: str, content: str, data_type: str) -> str:\n    return f\"{'#' * depth} {title}\\n\\n```{data_type}\\n{content}\\n```\\n\\n\"\n\n\ndef main() -> None:\n    if len(sys.argv) < 2:\n        print(f\"usage: {__file__} [OUTPUT_FILE]\")\n        sys.exit(1)\n    filename = sys.argv[1]\n\n    task_config = TaskConfig(\n        job_id=UUID(int=0),\n        task=TaskDetails(\n            type=TaskType.libfuzzer_fuzz,\n            duration=1,\n            target_exe=\"fuzz.exe\",\n            target_env={},\n            target_options=[],\n        ),\n        containers=[\n            TaskContainers(name=Container(\"my-setup\"), type=ContainerType.setup),\n            TaskContainers(name=Container(\"my-inputs\"), type=ContainerType.inputs),\n            TaskContainers(name=Container(\"my-crashes\"), type=ContainerType.crashes),\n        ],\n        tags={},\n    )\n    report = Report(\n        input_blob=BlobRef(\n            account=\"contoso-storage-account\",\n            container=Container(\"crashes\"),\n            name=\"input.txt\",\n        ),\n        executable=\"fuzz.exe\",\n        crash_type=\"example crash report type\",\n        crash_site=\"example crash site\",\n        call_stack=[\"#0 line\", \"#1 line\", \"#2 line\"],\n        call_stack_sha256=ZERO_SHA256,\n        input_sha256=EMPTY_SHA256,\n        asan_log=\"example asan log\",\n        task_id=UUID(int=0),\n        job_id=UUID(int=0),\n        scariness_score=10,\n        scariness_description=\"example-scariness\",\n    )\n    examples: List[Event] = [\n        EventPing(ping_id=UUID(int=0)),\n        EventTaskCreated(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            config=task_config,\n            user_info=UserInfo(\n                application_id=UUID(int=0),\n                object_id=UUID(int=0),\n                upn=\"example@contoso.com\",\n            ),\n        ),\n        EventTaskStopped(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            user_info=UserInfo(\n                application_id=UUID(int=0),\n                object_id=UUID(int=0),\n                upn=\"example@contoso.com\",\n            ),\n            config=task_config,\n        ),\n        EventTaskFailed(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            error=Error(code=ErrorCode.TASK_FAILED, errors=[\"example error message\"]),\n            user_info=UserInfo(\n                application_id=UUID(int=0),\n                object_id=UUID(int=0),\n                upn=\"example@contoso.com\",\n            ),\n            config=task_config,\n        ),\n        EventTaskStateUpdated(\n            job_id=UUID(int=0),\n            task_id=UUID(int=0),\n            state=TaskState.init,\n            config=task_config,\n        ),\n        EventProxyCreated(region=Region(\"eastus\"), proxy_id=UUID(int=0)),\n        EventProxyDeleted(region=Region(\"eastus\"), proxy_id=UUID(int=0)),\n        EventProxyFailed(\n            region=Region(\"eastus\"),\n            proxy_id=UUID(int=0),\n            error=Error(code=ErrorCode.PROXY_FAILED, errors=[\"example error message\"]),\n        ),\n        EventProxyStateUpdated(\n            region=Region(\"eastus\"),\n            proxy_id=UUID(int=0),\n            state=VmState.init,\n        ),\n        EventPoolCreated(\n            pool_name=PoolName(\"example\"),\n            os=OS.linux,\n            arch=Architecture.x86_64,\n            managed=True,\n        ),\n        EventPoolDeleted(pool_name=PoolName(\"example\")),\n        EventScalesetCreated(\n            scaleset_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            vm_sku=\"Standard_D2s_v3\",\n            image=\"Canonical:UbuntuServer:18.04-LTS:latest\",\n            region=Region(\"eastus\"),\n            size=10,\n        ),\n        EventScalesetFailed(\n            scaleset_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            error=Error(\n                code=ErrorCode.UNABLE_TO_RESIZE, errors=[\"example error message\"]\n            ),\n        ),\n        EventScalesetDeleted(scaleset_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventScalesetStateUpdated(\n            scaleset_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            state=ScalesetState.init,\n        ),\n        EventScalesetResizeScheduled(\n            scaleset_id=UUID(int=0), pool_name=PoolName(\"example\"), size=0\n        ),\n        EventJobCreated(\n            job_id=UUID(int=0),\n            config=JobConfig(\n                project=\"example project\",\n                name=\"example name\",\n                build=\"build 1\",\n                duration=24,\n            ),\n        ),\n        EventJobStopped(\n            job_id=UUID(int=0),\n            config=JobConfig(\n                project=\"example project\",\n                name=\"example name\",\n                build=\"build 1\",\n                duration=24,\n            ),\n            task_info=[\n                JobTaskStopped(\n                    task_id=UUID(int=0),\n                    task_type=TaskType.libfuzzer_fuzz,\n                    error=Error(\n                        code=ErrorCode.TASK_FAILED, errors=[\"example error message\"]\n                    ),\n                ),\n                JobTaskStopped(\n                    task_id=UUID(int=1),\n                    task_type=TaskType.libfuzzer_coverage,\n                ),\n            ],\n        ),\n        EventNodeCreated(machine_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventNodeDeleted(machine_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventNodeStateUpdated(\n            machine_id=UUID(int=0),\n            pool_name=PoolName(\"example\"),\n            state=NodeState.setting_up,\n        ),\n        EventRegressionReported(\n            regression_report=RegressionReport(\n                crash_test_result=CrashTestResult(crash_report=report),\n                original_crash_test_result=CrashTestResult(crash_report=report),\n            ),\n            container=Container(\"container-name\"),\n            filename=\"example.json\",\n        ),\n        EventCrashReported(\n            container=Container(\"container-name\"),\n            filename=\"example.json\",\n            report=report,\n        ),\n        EventFileAdded(container=Container(\"container-name\"), filename=\"example.txt\"),\n        EventNodeHeartbeat(machine_id=UUID(int=0), pool_name=PoolName(\"example\")),\n        EventTaskHeartbeat(task_id=UUID(int=0), job_id=UUID(int=0), config=task_config),\n        EventInstanceConfigUpdated(\n            config=InstanceConfig(\n                admins=[UUID(int=0)], allowed_aad_tenants=[UUID(int=0)]\n            )\n        ),\n    ]\n\n    # works around `mypy` not handling that Union has `__args__`\n    for event in getattr(Event, \"__args__\", []):\n        seen = False\n        for value in examples:\n            if isinstance(value, event):\n                seen = True\n                break\n        assert seen, \"missing event type definition: %s\" % event.__name__\n\n    event_types = [get_event_type(x) for x in examples]\n\n    for event_type in EventType:\n        assert event_type in event_types, (\n            \"missing event type definition: %s\" % event_type.name\n        )\n\n    message = WebhookMessage(\n        webhook_id=UUID(int=0),\n        event_id=UUID(int=0),\n        event_type=EventType.ping,\n        event=EventPing(ping_id=UUID(int=0)),\n        instance_id=UUID(int=0),\n        instance_name=\"example\",\n    )\n\n    result = \"\"\n    result += layer(\n        1,\n        \"Webhook Events\",\n        \"This document describes the basic webhook event subscriptions \"\n        \"available in OneFuzz\",\n    )\n    result += layer(\n        2,\n        \"Payload\",\n        \"Each event will be submitted via HTTP POST to the user provided URL.\",\n    )\n\n    result += typed(\n        3,\n        \"Example\",\n        message.json(indent=4, exclude_none=True, sort_keys=True),\n        \"json\",\n    )\n    result += layer(2, \"Event Types (EventType)\")\n\n    event_map = {get_event_type(x).name: x for x in examples}\n\n    for name in sorted(event_map.keys()):\n        result += f\"* [{name}](#{name})\\n\"\n\n    result += \"\\n\"\n\n    for name in sorted(event_map.keys()):\n        example = event_map[name]\n        result += layer(3, name)\n        result += typed(\n            4,\n            \"Example\",\n            example.json(indent=4, exclude_none=True, sort_keys=True),\n            \"json\",\n        )\n        result += typed(\n            4, \"Schema\", example.schema_json(indent=4, sort_keys=True), \"json\"\n        )\n\n    result += typed(\n        2, \"Full Event Schema\", message.schema_json(indent=4, sort_keys=True), \"json\"\n    )\n\n    with open(filename, \"w\", newline=\"\\n\", encoding=\"utf8\") as handle:\n        handle.write(result)\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nfrom datetime import datetime\nfrom typing import Any, Dict, Generic, List, Optional, Tuple, TypeVar, Union\nfrom uuid import UUID, uuid4\n\nfrom pydantic import BaseModel, Field, root_validator, validator\nfrom pydantic.dataclasses import dataclass\n\nfrom ._monkeypatch import _check_hotfix\nfrom .consts import ONE_HOUR, SEVEN_DAYS\nfrom .enums import (\n    OS,\n    Architecture,\n    Compare,\n    ContainerPermission,\n    ContainerType,\n    ErrorCode,\n    GithubIssueSearchMatch,\n    GithubIssueState,\n    HeartbeatType,\n    JobState,\n    NodeState,\n    NodeTaskState,\n    PoolState,\n    ScalesetState,\n    StatsFormat,\n    TaskDebugFlag,\n    TaskFeature,\n    TaskState,\n    TaskType,\n    VmState,\n)\nfrom .primitives import Container, PoolName, Region\n\n\nclass UserInfo(BaseModel):\n    application_id: Optional[UUID]\n    object_id: Optional[UUID]\n    upn: Optional[str]\n\n\n# Stores the address of a secret\nclass SecretAddress(BaseModel):\n    # keyvault address of a secret\n    url: str\n\n\nT = TypeVar(\"T\")\n\n\n# This class allows us to store some data that are intended to be secret\n# The secret field stores either the raw data or the address of that data\n# This class allows us to maintain backward compatibility with existing\n# NotificationTemplate classes\n@dataclass\nclass SecretData(Generic[T]):\n    secret: Union[T, SecretAddress]\n\n    def __init__(self, secret: Union[T, SecretAddress]):\n        try:\n            self.secret = SecretAddress.parse_obj(secret)\n        except Exception:\n            self.secret = secret\n\n    def __str__(self) -> str:\n        return self.__repr__()\n\n    def __repr__(self) -> str:\n        if isinstance(self.secret, SecretAddress):\n            return str(self.secret)\n        else:\n            return \"[REDACTED]\"\n\n\nclass EnumModel(BaseModel):\n    @root_validator(pre=True)\n    def exactly_one(cls: Any, values: Any) -> Any:\n        some = []\n\n        for field, val in values.items():\n            if val is not None:\n                some.append(field)\n\n        if not some:\n            raise ValueError(\"no variant set for enum\")\n\n        if len(some) > 1:\n            raise ValueError(\"multiple values set for enum: %s\" % some)\n\n        return values\n\n\nclass Error(BaseModel):\n    code: ErrorCode\n    errors: List[str]\n\n\nOkType = TypeVar(\"OkType\")\nResult = Union[OkType, Error]\n\n\nclass FileEntry(BaseModel):\n    container: Container\n    filename: str\n    sas_url: Optional[str]\n\n\nclass Authentication(BaseModel):\n    password: str\n    public_key: str\n    private_key: str\n\n\nclass JobConfig(BaseModel):\n    project: str\n    name: str\n    build: str\n    duration: int = Field(ge=ONE_HOUR, le=SEVEN_DAYS)\n\n\nclass ReproConfig(BaseModel):\n    container: Container\n    path: str\n    duration: int = Field(ge=ONE_HOUR, le=SEVEN_DAYS)\n\n\nclass TaskDetails(BaseModel):\n    type: TaskType\n    duration: int = Field(ge=ONE_HOUR, le=SEVEN_DAYS)\n    target_exe: Optional[str]\n    target_env: Optional[Dict[str, str]]\n    target_options: Optional[List[str]]\n    target_workers: Optional[int]\n    target_options_merge: Optional[bool]\n    check_asan_log: Optional[bool]\n    check_debugger: Optional[bool] = Field(default=True)\n    check_retry_count: Optional[int] = Field(ge=0)\n    check_fuzzer_help: Optional[bool]\n    expect_crash_on_failure: Optional[bool]\n    rename_output: Optional[bool]\n    supervisor_exe: Optional[str]\n    supervisor_env: Optional[Dict[str, str]]\n    supervisor_options: Optional[List[str]]\n    supervisor_input_marker: Optional[str]\n    generator_exe: Optional[str]\n    generator_env: Optional[Dict[str, str]]\n    generator_options: Optional[List[str]]\n    analyzer_exe: Optional[str]\n    analyzer_env: Optional[Dict[str, str]]\n    analyzer_options: Optional[List[str]]\n    wait_for_files: Optional[ContainerType]\n    stats_file: Optional[str]\n    stats_format: Optional[StatsFormat]\n    reboot_after_setup: Optional[bool]\n    target_timeout: Optional[int] = Field(ge=1)\n    ensemble_sync_delay: Optional[int]\n    preserve_existing_outputs: Optional[bool]\n    report_list: Optional[List[str]]\n    minimized_stack_depth: Optional[int]\n    coverage_filter: Optional[str]\n\n\nclass TaskPool(BaseModel):\n    count: int\n    pool_name: PoolName\n\n\nclass TaskVm(BaseModel):\n    region: Region\n    sku: str\n    image: str\n    count: int = Field(default=1, ge=0)\n    spot_instances: bool = Field(default=False)\n    reboot_after_setup: Optional[bool]\n\n\nclass TaskContainers(BaseModel):\n    type: ContainerType\n    name: Container\n\n\nclass TaskConfig(BaseModel):\n    job_id: UUID\n    prereq_tasks: Optional[List[UUID]]\n    task: TaskDetails\n    vm: Optional[TaskVm]\n    pool: Optional[TaskPool]\n    containers: List[TaskContainers]\n    tags: Dict[str, str]\n    debug: Optional[List[TaskDebugFlag]]\n    colocate: Optional[bool]\n\n\nclass BlobRef(BaseModel):\n    account: str\n    container: Container\n    name: str\n\n\nclass Report(BaseModel):\n    input_url: Optional[str]\n    input_blob: Optional[BlobRef]\n    executable: str\n    crash_type: str\n    crash_site: str\n    call_stack: List[str]\n    call_stack_sha256: str\n    input_sha256: str\n    asan_log: Optional[str]\n    task_id: UUID\n    job_id: UUID\n    scariness_score: Optional[int]\n    scariness_description: Optional[str]\n    minimized_stack: Optional[List[str]]\n    minimized_stack_sha256: Optional[str]\n    minimized_stack_function_names: Optional[List[str]]\n    minimized_stack_function_names_sha256: Optional[str]\n    minimized_stack_function_lines: Optional[List[str]]\n    minimized_stack_function_lines_sha256: Optional[str]\n\n\nclass NoReproReport(BaseModel):\n    input_sha256: str\n    input_blob: Optional[BlobRef]\n    executable: str\n    task_id: UUID\n    job_id: UUID\n    tries: int\n    error: Optional[str]\n\n\nclass CrashTestResult(BaseModel):\n    crash_report: Optional[Report]\n    no_repro: Optional[NoReproReport]\n\n\nclass RegressionReport(BaseModel):\n    crash_test_result: CrashTestResult\n    original_crash_test_result: Optional[CrashTestResult]\n\n\nclass ADODuplicateTemplate(BaseModel):\n    increment: List[str]\n    comment: Optional[str]\n    set_state: Dict[str, str]\n    ado_fields: Dict[str, str]\n\n\nclass ADOTemplate(BaseModel):\n    base_url: str\n    auth_token: SecretData[str]\n    project: str\n    type: str\n    unique_fields: List[str]\n    comment: Optional[str]\n    ado_fields: Dict[str, str]\n    on_duplicate: ADODuplicateTemplate\n\n    # validator needed for backward compatibility\n    @validator(\"auth_token\", pre=True, always=True)\n    def validate_auth_token(cls, v: Any) -> SecretData:\n        if isinstance(v, str):\n            return SecretData(secret=v)\n        elif isinstance(v, SecretData):\n            return v\n        elif isinstance(v, dict):\n            return SecretData(secret=v[\"secret\"])\n        else:\n            raise TypeError(f\"invalid datatype {type(v)}\")\n\n\nclass TeamsTemplate(BaseModel):\n    url: SecretData[str]\n\n    # validator needed for backward compatibility\n    @validator(\"url\", pre=True, always=True)\n    def validate_url(cls, v: Any) -> SecretData:\n        if isinstance(v, str):\n            return SecretData(secret=v)\n        elif isinstance(v, SecretData):\n            return v\n        elif isinstance(v, dict):\n            return SecretData(secret=v[\"secret\"])\n        else:\n            raise TypeError(f\"invalid datatype {type(v)}\")\n\n\nclass ContainerDefinition(BaseModel):\n    type: ContainerType\n    compare: Compare\n    value: int\n    permissions: List[ContainerPermission]\n\n\nclass VmDefinition(BaseModel):\n    compare: Compare\n    value: int\n\n\nclass TaskDefinition(BaseModel):\n    features: List[TaskFeature]\n    containers: List[ContainerDefinition]\n    monitor_queue: Optional[ContainerType]\n    vm: VmDefinition\n\n\n# TODO: service shouldn't pass SyncedDir, but just the url and let the agent\n# come up with paths\nclass SyncedDir(BaseModel):\n    path: str\n    url: str\n\n\nCONTAINER_DEF = Optional[Union[SyncedDir, List[SyncedDir]]]\n\n\nclass ClientCredentials(BaseModel):\n    client_id: UUID\n    client_secret: str\n\n\nclass AgentConfig(BaseModel):\n    client_credentials: Optional[ClientCredentials]\n    onefuzz_url: str\n    pool_name: PoolName\n    heartbeat_queue: Optional[str]\n    instance_telemetry_key: Optional[str]\n    microsoft_telemetry_key: Optional[str]\n    multi_tenant_domain: Optional[str]\n    instance_id: UUID\n\n\nclass TaskUnitConfig(BaseModel):\n    instance_id: UUID\n    job_id: UUID\n    task_id: UUID\n    task_type: TaskType\n    instance_telemetry_key: Optional[str]\n    microsoft_telemetry_key: Optional[str]\n    heartbeat_queue: str\n    # command_queue: str\n    input_queue: Optional[str]\n    supervisor_exe: Optional[str]\n    supervisor_env: Optional[Dict[str, str]]\n    supervisor_options: Optional[List[str]]\n    supervisor_input_marker: Optional[str]\n    target_exe: Optional[str]\n    target_env: Optional[Dict[str, str]]\n    target_options: Optional[List[str]]\n    target_timeout: Optional[int]\n    target_options_merge: Optional[bool]\n    target_workers: Optional[int]\n    check_asan_log: Optional[bool]\n    check_debugger: Optional[bool]\n    check_retry_count: Optional[int]\n    check_fuzzer_help: Optional[bool]\n    expect_crash_on_failure: Optional[bool]\n    rename_output: Optional[bool]\n    generator_exe: Optional[str]\n    generator_env: Optional[Dict[str, str]]\n    generator_options: Optional[List[str]]\n    wait_for_files: Optional[str]\n    analyzer_exe: Optional[str]\n    analyzer_env: Optional[Dict[str, str]]\n    analyzer_options: Optional[List[str]]\n    stats_file: Optional[str]\n    stats_format: Optional[StatsFormat]\n    ensemble_sync_delay: Optional[int]\n    report_list: Optional[List[str]]\n    minimized_stack_depth: Optional[int]\n    coverage_filter: Optional[str]\n\n    # from here forwards are Container definitions.  These need to be inline\n    # with TaskDefinitions and ContainerTypes\n    analysis: CONTAINER_DEF\n    coverage: CONTAINER_DEF\n    crashes: CONTAINER_DEF\n    inputs: CONTAINER_DEF\n    no_repro: CONTAINER_DEF\n    readonly_inputs: CONTAINER_DEF\n    reports: CONTAINER_DEF\n    tools: CONTAINER_DEF\n    unique_inputs: CONTAINER_DEF\n    unique_reports: CONTAINER_DEF\n    regression_reports: CONTAINER_DEF\n\n\nclass Forward(BaseModel):\n    src_port: int\n    dst_ip: str\n    dst_port: int\n\n\nclass ProxyConfig(BaseModel):\n    url: str\n    notification: str\n    region: Region\n    proxy_id: UUID\n    forwards: List[Forward]\n    instance_telemetry_key: Optional[str]\n    microsoft_telemetry_key: Optional[str]\n    instance_id: UUID\n\n\nclass ProxyHeartbeat(BaseModel):\n    region: Region\n    proxy_id: UUID\n    forwards: List[Forward]\n    timestamp: datetime = Field(default_factory=datetime.utcnow)\n\n\nclass Files(BaseModel):\n    files: List[str]\n\n\nclass WorkUnit(BaseModel):\n    job_id: UUID\n    task_id: UUID\n    task_type: TaskType\n\n    # JSON-serialized `TaskUnitConfig`.\n    config: str\n\n\nclass WorkSet(BaseModel):\n    reboot: bool\n    setup_url: str\n    script: bool\n    work_units: List[WorkUnit]\n\n\nclass WorkUnitSummary(BaseModel):\n    job_id: UUID\n    task_id: UUID\n    task_type: TaskType\n\n\nclass WorkSetSummary(BaseModel):\n    work_units: List[WorkUnitSummary]\n\n\nclass GithubIssueDuplicate(BaseModel):\n    comment: Optional[str]\n    labels: List[str]\n    reopen: bool\n\n\nclass GithubIssueSearch(BaseModel):\n    author: Optional[str]\n    state: Optional[GithubIssueState]\n    field_match: List[GithubIssueSearchMatch]\n    string: str\n\n\nclass GithubAuth(BaseModel):\n    user: str = Field(min_length=1)\n    personal_access_token: str = Field(min_length=1)\n\n\nclass GithubIssueTemplate(BaseModel):\n    auth: SecretData[GithubAuth]\n    organization: str = Field(min_length=1)\n    repository: str = Field(min_length=1)\n    title: str = Field(min_length=1)\n    body: str\n    unique_search: GithubIssueSearch\n    assignees: List[str]\n    labels: List[str]\n    on_duplicate: GithubIssueDuplicate\n\n    # validator needed for backward compatibility\n    @validator(\"auth\", pre=True, always=True)\n    def validate_auth(cls, v: Any) -> SecretData:\n        def try_parse_GithubAuth(x: dict) -> Optional[GithubAuth]:\n            try:\n                return GithubAuth.parse_obj(x)\n            except Exception:\n                return None\n\n        if isinstance(v, GithubAuth):\n            return SecretData(secret=v)\n        elif isinstance(v, SecretData):\n            return v\n        elif isinstance(v, dict):\n            githubAuth = try_parse_GithubAuth(v)\n            if githubAuth:\n                return SecretData(secret=githubAuth)\n\n            githubAuth = try_parse_GithubAuth(v[\"secret\"])\n            if githubAuth:\n                return SecretData(secret=githubAuth)\n\n            return SecretData(secret=v[\"secret\"])\n        else:\n            raise TypeError(f\"invalid datatype {type(v)}\")\n\n\nNotificationTemplate = Union[ADOTemplate, TeamsTemplate, GithubIssueTemplate]\n\n\nclass Notification(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    container: Container\n    notification_id: UUID = Field(default_factory=uuid4)\n    config: NotificationTemplate\n\n\nclass JobTaskInfo(BaseModel):\n    task_id: UUID\n    type: TaskType\n    state: TaskState\n\n\nclass Job(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    job_id: UUID = Field(default_factory=uuid4)\n    state: JobState = Field(default=JobState.init)\n    config: JobConfig\n    error: Optional[str]\n    end_time: Optional[datetime] = None\n    task_info: Optional[List[JobTaskInfo]]\n    user_info: Optional[UserInfo]\n\n\nclass TaskHeartbeatEntry(BaseModel):\n    task_id: UUID\n    job_id: Optional[UUID]\n    machine_id: UUID\n    data: List[Dict[str, HeartbeatType]]\n\n\nclass NodeHeartbeatEntry(BaseModel):\n    node_id: UUID\n    data: List[Dict[str, HeartbeatType]]\n\n\nclass NodeCommandStopIfFree(BaseModel):\n    pass\n\n\nclass StopNodeCommand(BaseModel):\n    pass\n\n\nclass StopTaskNodeCommand(BaseModel):\n    task_id: UUID\n\n\nclass NodeCommandAddSshKey(BaseModel):\n    public_key: str\n\n\nclass NodeCommand(EnumModel):\n    stop: Optional[StopNodeCommand]\n    stop_task: Optional[StopTaskNodeCommand]\n    add_ssh_key: Optional[NodeCommandAddSshKey]\n    stop_if_free: Optional[NodeCommandStopIfFree]\n\n\nclass NodeCommandEnvelope(BaseModel):\n    command: NodeCommand\n    message_id: str\n\n\nclass Node(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    pool_name: PoolName\n    pool_id: Optional[UUID]\n    machine_id: UUID\n    state: NodeState = Field(default=NodeState.init)\n    scaleset_id: Optional[UUID] = None\n    tasks: Optional[List[Tuple[UUID, NodeTaskState]]] = None\n    messages: Optional[List[NodeCommand]] = None\n    heartbeat: Optional[datetime]\n    version: str = Field(default=\"1.0.0\")\n    reimage_requested: bool = Field(default=False)\n    delete_requested: bool = Field(default=False)\n    debug_keep_node: bool = Field(default=False)\n\n\nclass ScalesetSummary(BaseModel):\n    scaleset_id: UUID\n    state: ScalesetState\n\n\nclass NodeTasks(BaseModel):\n    machine_id: UUID\n    task_id: UUID\n    state: NodeTaskState = Field(default=NodeTaskState.init)\n\n\nclass AutoScaleConfig(BaseModel):\n    image: str\n    max_size: int = Field(default=1000, le=1000, ge=0)  # max size of pool\n    min_size: int = Field(default=0, le=1000, ge=0)  # min size of pool\n    region: Optional[Region]\n    scaleset_size: int  # Individual scaleset size\n    spot_instances: bool = Field(default=False)\n    ephemeral_os_disks: bool = Field(default=False)\n    vm_sku: str\n\n    @root_validator()\n    def check_data(cls, values: Any) -> Any:\n        if values[\"min_size\"] > values[\"max_size\"]:\n            raise ValueError(\"The pool min_size is greater than max_size\")\n        return values\n\n\nclass Pool(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    name: PoolName\n    pool_id: UUID = Field(default_factory=uuid4)\n    os: OS\n    managed: bool\n    autoscale: Optional[AutoScaleConfig]\n    arch: Architecture\n    state: PoolState = Field(default=PoolState.init)\n    client_id: Optional[UUID]\n    nodes: Optional[List[Node]]\n    config: Optional[AgentConfig]\n\n    # work_queue is explicitly not saved to Tables (see save_exclude).  This is\n    # intended to be used to pass the information to the CLI when the CLI asks\n    # for information about what work is in the queue for the pool.\n    work_queue: Optional[List[WorkSetSummary]]\n\n    # explicitly excluded from Tables\n    scaleset_summary: Optional[List[ScalesetSummary]]\n\n\nclass ScalesetNodeState(BaseModel):\n    machine_id: UUID\n    instance_id: str\n    state: Optional[NodeState]\n\n\nclass Scaleset(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    pool_name: PoolName\n    scaleset_id: UUID = Field(default_factory=uuid4)\n    state: ScalesetState = Field(default=ScalesetState.init)\n    auth: Optional[Authentication]\n    vm_sku: str\n    image: str\n    region: Region\n    size: int = Field(ge=0)\n    spot_instances: bool\n    ephemeral_os_disks: bool = Field(default=False)\n    needs_config_update: bool = Field(default=False)\n    error: Optional[Error]\n    nodes: Optional[List[ScalesetNodeState]]\n    client_id: Optional[UUID]\n    client_object_id: Optional[UUID]\n    tags: Dict[str, str] = Field(default_factory=lambda: {})\n\n\nclass NotificationConfig(BaseModel):\n    config: NotificationTemplate\n\n\nclass Repro(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    vm_id: UUID = Field(default_factory=uuid4)\n    task_id: UUID\n    config: ReproConfig\n    state: VmState = Field(default=VmState.init)\n    auth: Optional[Authentication]\n    os: OS\n    error: Optional[Error]\n    ip: Optional[str]\n    end_time: Optional[datetime]\n    user_info: Optional[UserInfo]\n\n\nclass ExitStatus(BaseModel):\n    code: Optional[int]\n    signal: Optional[int]\n    success: bool\n\n\nclass ProcessOutput(BaseModel):\n    exit_status: ExitStatus\n    stderr: str\n    stdout: str\n\n\nclass WorkerRunningEvent(BaseModel):\n    task_id: UUID\n\n\nclass WorkerDoneEvent(BaseModel):\n    task_id: UUID\n    exit_status: ExitStatus\n    stderr: str\n    stdout: str\n\n\nclass WorkerEvent(EnumModel):\n    done: Optional[WorkerDoneEvent]\n    running: Optional[WorkerRunningEvent]\n\n\nclass NodeSettingUpEventData(BaseModel):\n    tasks: List[UUID]\n\n\nclass NodeDoneEventData(BaseModel):\n    error: Optional[str]\n    script_output: Optional[ProcessOutput]\n\n\nNodeStateData = Union[NodeSettingUpEventData, NodeDoneEventData]\n\n\nclass NodeStateUpdate(BaseModel):\n    state: NodeState\n    data: Optional[NodeStateData]\n\n    @root_validator(pre=False, skip_on_failure=True)\n    def check_data(cls, values: Any) -> Any:\n        data = values.get(\"data\")\n\n        if data:\n            state = values[\"state\"]\n\n            if state == NodeState.setting_up:\n                if isinstance(data, NodeSettingUpEventData):\n                    return values\n\n            if state == NodeState.done:\n                if isinstance(data, NodeDoneEventData):\n                    return values\n\n            raise ValueError(\n                \"data for node state update event does not match state = %s\" % state\n            )\n        else:\n            # For now, `data` is always optional.\n            return values\n\n\nclass NodeEvent(EnumModel):\n    state_update: Optional[NodeStateUpdate]\n    worker_event: Optional[WorkerEvent]\n\n\n# Temporary shim type to support hot upgrade of 1.0.0 nodes.\n#\n# We want future variants to use an externally-tagged repr.\nNodeEventShim = Union[NodeStateUpdate, NodeEvent, WorkerEvent]\n\n\nclass NodeEventEnvelope(BaseModel):\n    machine_id: UUID\n    event: NodeEventShim\n\n\nclass TaskEvent(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    task_id: UUID\n    machine_id: UUID\n    event_data: WorkerEvent\n\n\nclass TaskEventSummary(BaseModel):\n    timestamp: Optional[datetime]\n    event_data: str\n    event_type: str\n\n\nclass NodeAssignment(BaseModel):\n    node_id: UUID\n    scaleset_id: Optional[UUID]\n    state: NodeTaskState\n\n\nclass Task(BaseModel):\n    timestamp: Optional[datetime] = Field(alias=\"Timestamp\")\n    job_id: UUID\n    task_id: UUID = Field(default_factory=uuid4)\n    state: TaskState = Field(default=TaskState.init)\n    os: OS\n    config: TaskConfig\n    error: Optional[Error]\n    auth: Optional[Authentication]\n    heartbeat: Optional[datetime]\n    end_time: Optional[datetime]\n    events: Optional[List[TaskEventSummary]]\n    nodes: Optional[List[NodeAssignment]]\n    user_info: Optional[UserInfo]\n\n\nclass InstanceConfig(BaseModel):\n    # initial set of admins can only be set during deployment.\n    # if admins are set, only admins can update instance configs.\n    admins: Optional[List[UUID]] = None\n\n    # if set, only admins can manage pools or scalesets\n    allow_pool_management: bool = Field(default=True)\n\n    allowed_aad_tenants: List[UUID]\n\n    def update(self, config: \"InstanceConfig\") -> None:\n        for field in config.__fields__:\n            # If no admins are set, then ignore setting admins\n            if field == \"admins\" and self.admins is None:\n                continue\n\n            if hasattr(self, field):\n                setattr(self, field, getattr(config, field))\n\n    @validator(\"admins\", allow_reuse=True)\n    def check_admins(cls, value: Optional[List[UUID]]) -> Optional[List[UUID]]:\n        if value is not None and len(value) == 0:\n            raise ValueError(\"admins must be None or contain at least one UUID\")\n        return value\n\n    # At the moment, this only checks allowed_aad_tenants, however adding\n    # support for 3rd party JWT validation is anticipated in a future release.\n    @root_validator()\n    def check_instance_config(cls, values: Any) -> Any:\n        if \"allowed_aad_tenants\" not in values:\n            raise ValueError(\"missing allowed_aad_tenants\")\n\n        if not len(values[\"allowed_aad_tenants\"]):\n            raise ValueError(\"allowed_aad_tenants must not be empty\")\n        return values\n\n\n_check_hotfix()\n", "#!/usr/bin/env python\n#\n# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\n\nfrom uuid import UUID\nimport unittest\n\nfrom onefuzztypes.models import InstanceConfig\n\n\nclass TestInstanceConfig(unittest.TestCase):\n    def test_with_admins(self) -> None:\n        no_admins = InstanceConfig(admins=None, allowed_aad_tenants=[UUID(int=0)])\n        with_admins = InstanceConfig(\n            admins=[UUID(int=0)], allowed_aad_tenants=[UUID(int=0)]\n        )\n        with_admins_2 = InstanceConfig(\n            admins=[UUID(int=1)], allowed_aad_tenants=[UUID(int=0)]\n        )\n\n        no_admins.update(with_admins)\n        self.assertEqual(no_admins.admins, None)\n\n        with_admins.update(with_admins_2)\n        self.assertEqual(with_admins.admins, with_admins_2.admins)\n\n    def test_with_empty_admins(self) -> None:\n        with self.assertRaises(ValueError):\n            InstanceConfig.parse_obj({\"admins\": []})\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"], "filenames": ["docs/webhook_events.md", "src/api-service/__app__/info/__init__.py", "src/api-service/__app__/negotiate/__init__.py", "src/api-service/__app__/onefuzzlib/config.py", "src/api-service/__app__/onefuzzlib/user_credentials.py", "src/api-service/tests/test_auth_check.py", "src/deployment/azuredeploy.json", "src/deployment/deploy.py", "src/deployment/set_admins.py", "src/pytypes/extra/generate-docs.py", "src/pytypes/onefuzztypes/models.py", "src/pytypes/tests/test_instance_config_update.py"], "buggy_code_start_loc": [644, 16, 6, 28, 6, 8, 823, 75, 20, 261, 804, 14], "buggy_code_end_loc": [5604, 34, 22, 29, 52, 91, 823, 1068, 57, 262, 819, 17], "fixing_code_start_loc": [644, 17, 7, 28, 6, 8, 824, 75, 21, 261, 805, 14], "fixing_code_end_loc": [5629, 44, 35, 29, 75, 122, 828, 1085, 78, 266, 833, 21], "type": "CWE-863", "message": "OneFuzz is an open source self-hosted Fuzzing-As-A-Service platform. Starting with OneFuzz 2.12.0 or greater, an incomplete authorization check allows an authenticated user from any Azure Active Directory tenant to make authorized API calls to a vulnerable OneFuzz instance. To be vulnerable, a OneFuzz deployment must be both version 2.12.0 or greater and deployed with the non-default --multi_tenant_domain option. This can result in read/write access to private data such as software vulnerability and crash information, security testing tools and proprietary code and symbols. Via authorized API calls, this also enables tampering with existing data and unauthorized code execution on Azure compute resources. This issue is resolved starting in release 2.31.0, via the addition of application-level check of the bearer token's `issuer` against an administrator-configured allowlist. As a workaround users can restrict access to the tenant of a deployed OneFuzz instance < 2.31.0 by redeploying in the default configuration, which omits the `--multi_tenant_domain` option.", "other": {"cve": {"id": "CVE-2021-37705", "sourceIdentifier": "security-advisories@github.com", "published": "2021-08-13T21:15:06.973", "lastModified": "2022-10-27T12:46:09.410", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "OneFuzz is an open source self-hosted Fuzzing-As-A-Service platform. Starting with OneFuzz 2.12.0 or greater, an incomplete authorization check allows an authenticated user from any Azure Active Directory tenant to make authorized API calls to a vulnerable OneFuzz instance. To be vulnerable, a OneFuzz deployment must be both version 2.12.0 or greater and deployed with the non-default --multi_tenant_domain option. This can result in read/write access to private data such as software vulnerability and crash information, security testing tools and proprietary code and symbols. Via authorized API calls, this also enables tampering with existing data and unauthorized code execution on Azure compute resources. This issue is resolved starting in release 2.31.0, via the addition of application-level check of the bearer token's `issuer` against an administrator-configured allowlist. As a workaround users can restrict access to the tenant of a deployed OneFuzz instance < 2.31.0 by redeploying in the default configuration, which omits the `--multi_tenant_domain` option."}, {"lang": "es", "value": "OneFuzz es una plataforma de Fuzzing-As-A-Service de c\u00f3digo abierto. A partir de la versi\u00f3n 2.12.0 o superior de OneFuzz, una comprobaci\u00f3n de autorizaci\u00f3n incompleta permite a un usuario autenticado de cualquier inquilino de Azure Active Directory realizar llamadas de API autorizadas a una instancia vulnerable de OneFuzz. Para ser vulnerable, una implementaci\u00f3n de OneFuzz debe ser ambas versi\u00f3n 2.12.0 o superior y estar implementada con la opci\u00f3n no predeterminada --multi_tenant_domain. Esto puede resultar en un acceso de lectura y escritura a datos privados, como informaci\u00f3n sobre vulnerabilidades y bloqueo de software, herramientas de pruebas de seguridad y c\u00f3digo y s\u00edmbolos propios. Por medio de llamadas autorizadas a la API, esto tambi\u00e9n habilita la manipulaci\u00f3n de los datos existentes y una ejecuci\u00f3n no autorizada de c\u00f3digo en los recursos inform\u00e1ticos de Azure. Este problema es resuelto a partir de la versi\u00f3n 2.31.0, por medio de la adici\u00f3n de la comprobaci\u00f3n a nivel de aplicaci\u00f3n del \"issuer\" del token de portador con una lista de permisos configurada por el administrador. Como soluci\u00f3n, los usuarios pueden restringir el acceso al inquilino de una instancia de OneFuzz desplegada anterior a 2.31.0 al redesplegar en la configuraci\u00f3n predeterminada, que omite la opci\u00f3n \"--multi_tenant_domain\"."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 10.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 6.0}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 10.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 6.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-863"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-285"}, {"lang": "en", "value": "CWE-346"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microsoft:onefuzz:*:*:*:*:*:*:*:*", "versionStartIncluding": "2.12.0", "versionEndExcluding": "2.31.0", "matchCriteriaId": "8F3330CA-CBB6-4DDD-8D1B-54D3099C15EC"}]}]}], "references": [{"url": "https://github.com/microsoft/onefuzz/commit/2fcb4998887959b4fa11894a068d689189742cb1", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/microsoft/onefuzz/pull/1153", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/microsoft/onefuzz/releases/tag/2.31.0", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/microsoft/onefuzz/security/advisories/GHSA-q5vh-6whw-x745", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://pypi.org/project/onefuzz/", "source": "security-advisories@github.com", "tags": ["Product"]}]}, "github_commit_url": "https://github.com/microsoft/onefuzz/commit/2fcb4998887959b4fa11894a068d689189742cb1"}}