{"buggy_code": ["package org.sitenv.vocabularies.configuration;\n\nimport org.sitenv.vocabularies.loader.VocabularyLoadRunner;\nimport org.sitenv.vocabularies.loader.VocabularyLoaderFactory;\nimport org.sitenv.vocabularies.validation.NodeValidatorFactory;\nimport org.sitenv.vocabularies.validation.dto.GlobalCodeValidatorResults;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.config.ServiceLocatorFactoryBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\nimport org.springframework.core.env.Environment;\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType;\nimport org.springframework.orm.hibernate4.HibernateExceptionTranslator;\nimport org.springframework.orm.jpa.JpaTransactionManager;\nimport org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\nimport org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;\nimport org.springframework.oxm.jaxb.Jaxb2Marshaller;\nimport org.springframework.transaction.PlatformTransactionManager;\n\nimport javax.persistence.EntityManagerFactory;\nimport javax.sql.DataSource;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport javax.xml.xpath.XPathFactory;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Properties;\n\n/**\n * Created by Brian on 2/5/2016.\n */\n@Configuration\n@ComponentScan(\"org.sitenv.vocabularies\")\n@EnableJpaRepositories(\"org.sitenv.vocabularies.validation.repositories\")\npublic class CodeValidatorApiConfiguration {\n\n    @Bean\n    public EntityManagerFactory entityManagerFactory() {\n        HibernateJpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();\n        vendorAdapter.setGenerateDdl(false);\n        vendorAdapter.setShowSql(true);\n        LocalContainerEntityManagerFactoryBean factory = new LocalContainerEntityManagerFactoryBean();\n        factory.setJpaVendorAdapter(vendorAdapter);\n        factory.setPackagesToScan(\"org.sitenv.vocabularies.validation.entities\");\n        Properties jpaProperties = new Properties();\n        jpaProperties.put(\"hibernate.hbm2ddl.auto\", \"none\");\n        jpaProperties.put(\"hibernate.dialect\", \"org.hibernate.dialect.HSQLDialect\");\n        jpaProperties.put(\"hibernate.format_sql\", \"true\");\n        jpaProperties.put(\"hibernate.show_sql\", \"false\");\n        factory.setDataSource(dataSource());\n        factory.setJpaProperties(jpaProperties);\n        factory.afterPropertiesSet();\n        return factory.getObject();\n    }\n\n    @Bean\n    public PlatformTransactionManager transactionManager() {\n        JpaTransactionManager txManager = new JpaTransactionManager();\n        txManager.setEntityManagerFactory(entityManagerFactory());\n        return txManager;\n    }\n\n    @Bean\n    public HibernateExceptionTranslator hibernateExceptionTranslator() {\n        return new HibernateExceptionTranslator();\n    }\n\n    @Bean\n    public DataSource dataSource() {\n        return new EmbeddedDatabaseBuilder()\n                .setType(EmbeddedDatabaseType.HSQL)\n                .addScript(\"classpath:schema.sql\")\n                .build();\n    }\n\n    @Bean\n    public static PropertySourcesPlaceholderConfigurer propertyPlaceholderConfigurer() {\n        PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer = new PropertySourcesPlaceholderConfigurer();\n        propertySourcesPlaceholderConfigurer.setLocalOverride(true);\n        return propertySourcesPlaceholderConfigurer;\n    }\n\n    @Bean\n    public ServiceLocatorFactoryBean vocabularyLoaderFactoryServiceLocatorFactoryBean() {\n        ServiceLocatorFactoryBean bean = new ServiceLocatorFactoryBean();\n        bean.setServiceLocatorInterface(VocabularyLoaderFactory.class);\n        return bean;\n    }\n\n    @Bean\n    public VocabularyLoaderFactory vocabularyLoaderFactory() {\n        return (VocabularyLoaderFactory) vocabularyLoaderFactoryServiceLocatorFactoryBean().getObject();\n    }\n\n    @Bean\n    public ServiceLocatorFactoryBean vocabularyValidatorFactoryServiceLocatorFactoryBean() {\n        ServiceLocatorFactoryBean bean = new ServiceLocatorFactoryBean();\n        bean.setServiceLocatorInterface(NodeValidatorFactory.class);\n        return bean;\n    }\n\n    @Bean\n    public NodeValidatorFactory vocabularyValidatorFactory() {\n        return (NodeValidatorFactory) vocabularyValidatorFactoryServiceLocatorFactoryBean().getObject();\n    }\n\n    @Autowired\n    @Bean\n    VocabularyLoadRunner vocabularyLoadRunner(final Environment environment, final VocabularyLoaderFactory vocabularyLoaderFactory, final DataSource dataSource){\n        VocabularyLoadRunner vocabularyLoadRunner = null;\n        String localCodeRepositoryDir = environment.getProperty(\"vocabulary.localCodeRepositoryDir\");\n        String localValueSetRepositoryDir = environment.getProperty(\"vocabulary.localValueSetRepositoryDir\");\n        vocabularyLoadRunner = new VocabularyLoadRunner();\n        System.out.println(\"LOADING VOCABULARY DATABASES FROM THE FOLLOWING RESOURCES: VALUESETS - \" + localValueSetRepositoryDir + \" CODES - \" + localCodeRepositoryDir);\n        vocabularyLoadRunner.setCodeDirectory(localCodeRepositoryDir);\n        vocabularyLoadRunner.setValueSetDirectory(localValueSetRepositoryDir);\n        vocabularyLoadRunner.setDataSource(dataSource);\n        vocabularyLoadRunner.setVocabularyLoaderFactory(vocabularyLoaderFactory);\n        return vocabularyLoadRunner;\n    }\n\n    @Bean\n    public static List<ConfiguredExpression> vocabularyValidationConfigurations(ValidationConfigurationLoader configurationLoader){\n        return configurationLoader.getConfigurations().getExpressions();\n    }\n\n    @Bean\n    public DocumentBuilder documentBuilder() throws ParserConfigurationException {\n        DocumentBuilderFactory domFactory =  DocumentBuilderFactory.newInstance();\n        domFactory.setNamespaceAware(true);\n        return domFactory.newDocumentBuilder();\n    }\n\n    @Bean\n    public XPathFactory xPathFactory(){\n        return XPathFactory.newInstance();\n    }\n\n    @Autowired\n    @Bean\n    public ValidationConfigurationLoader validationConfigurationLoader(final Environment environment){\n        ValidationConfigurationLoader validationConfigurationLoader = new ValidationConfigurationLoader();\n        validationConfigurationLoader.setValidationConfigurationFilePath(environment.getProperty(\"referenceccda.configFile\"));\n        validationConfigurationLoader.setUnmarshaller(castorMarshaller());\n        return validationConfigurationLoader;\n    }\n\n    @Bean\n    public static Jaxb2Marshaller castorMarshaller() {\n        Jaxb2Marshaller jaxb2Marshaller = new Jaxb2Marshaller();\n        jaxb2Marshaller.setPackagesToScan(\"org.sitenv.vocabularies.configuration\");\n        Map<String,Object> map = new HashMap<>();\n        map.put(\"jaxb.formatted.output\", true);\n        jaxb2Marshaller.setMarshallerProperties(map);\n        return jaxb2Marshaller;\n    }\n    \n    @Bean\n    public static GlobalCodeValidatorResults globalCodeValidatorResults() {    \t\n    \treturn new GlobalCodeValidatorResults();\n    }\n}\n"], "fixing_code": ["package org.sitenv.vocabularies.configuration;\n\nimport org.sitenv.vocabularies.loader.VocabularyLoadRunner;\nimport org.sitenv.vocabularies.loader.VocabularyLoaderFactory;\nimport org.sitenv.vocabularies.validation.NodeValidatorFactory;\nimport org.sitenv.vocabularies.validation.dto.GlobalCodeValidatorResults;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.config.ServiceLocatorFactoryBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\nimport org.springframework.core.env.Environment;\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder;\nimport org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType;\nimport org.springframework.orm.hibernate4.HibernateExceptionTranslator;\nimport org.springframework.orm.jpa.JpaTransactionManager;\nimport org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\nimport org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;\nimport org.springframework.oxm.jaxb.Jaxb2Marshaller;\nimport org.springframework.transaction.PlatformTransactionManager;\n\nimport javax.persistence.EntityManagerFactory;\nimport javax.sql.DataSource;\nimport javax.xml.XMLConstants;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport javax.xml.xpath.XPathFactory;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Properties;\n\n/**\n * Created by Brian on 2/5/2016.\n */\n@Configuration\n@ComponentScan(\"org.sitenv.vocabularies\")\n@EnableJpaRepositories(\"org.sitenv.vocabularies.validation.repositories\")\npublic class CodeValidatorApiConfiguration {\n\n    @Bean\n    public EntityManagerFactory entityManagerFactory() {\n        HibernateJpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();\n        vendorAdapter.setGenerateDdl(false);\n        vendorAdapter.setShowSql(true);\n        LocalContainerEntityManagerFactoryBean factory = new LocalContainerEntityManagerFactoryBean();\n        factory.setJpaVendorAdapter(vendorAdapter);\n        factory.setPackagesToScan(\"org.sitenv.vocabularies.validation.entities\");\n        Properties jpaProperties = new Properties();\n        jpaProperties.put(\"hibernate.hbm2ddl.auto\", \"none\");\n        jpaProperties.put(\"hibernate.dialect\", \"org.hibernate.dialect.HSQLDialect\");\n        jpaProperties.put(\"hibernate.format_sql\", \"true\");\n        jpaProperties.put(\"hibernate.show_sql\", \"false\");\n        factory.setDataSource(dataSource());\n        factory.setJpaProperties(jpaProperties);\n        factory.afterPropertiesSet();\n        return factory.getObject();\n    }\n\n    @Bean\n    public PlatformTransactionManager transactionManager() {\n        JpaTransactionManager txManager = new JpaTransactionManager();\n        txManager.setEntityManagerFactory(entityManagerFactory());\n        return txManager;\n    }\n\n    @Bean\n    public HibernateExceptionTranslator hibernateExceptionTranslator() {\n        return new HibernateExceptionTranslator();\n    }\n\n    @Bean\n    public DataSource dataSource() {\n        return new EmbeddedDatabaseBuilder()\n                .setType(EmbeddedDatabaseType.HSQL)\n                .addScript(\"classpath:schema.sql\")\n                .build();\n    }\n\n    @Bean\n    public static PropertySourcesPlaceholderConfigurer propertyPlaceholderConfigurer() {\n        PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer = new PropertySourcesPlaceholderConfigurer();\n        propertySourcesPlaceholderConfigurer.setLocalOverride(true);\n        return propertySourcesPlaceholderConfigurer;\n    }\n\n    @Bean\n    public ServiceLocatorFactoryBean vocabularyLoaderFactoryServiceLocatorFactoryBean() {\n        ServiceLocatorFactoryBean bean = new ServiceLocatorFactoryBean();\n        bean.setServiceLocatorInterface(VocabularyLoaderFactory.class);\n        return bean;\n    }\n\n    @Bean\n    public VocabularyLoaderFactory vocabularyLoaderFactory() {\n        return (VocabularyLoaderFactory) vocabularyLoaderFactoryServiceLocatorFactoryBean().getObject();\n    }\n\n    @Bean\n    public ServiceLocatorFactoryBean vocabularyValidatorFactoryServiceLocatorFactoryBean() {\n        ServiceLocatorFactoryBean bean = new ServiceLocatorFactoryBean();\n        bean.setServiceLocatorInterface(NodeValidatorFactory.class);\n        return bean;\n    }\n\n    @Bean\n    public NodeValidatorFactory vocabularyValidatorFactory() {\n        return (NodeValidatorFactory) vocabularyValidatorFactoryServiceLocatorFactoryBean().getObject();\n    }\n\n    @Autowired\n    @Bean\n    VocabularyLoadRunner vocabularyLoadRunner(final Environment environment, final VocabularyLoaderFactory vocabularyLoaderFactory, final DataSource dataSource){\n        VocabularyLoadRunner vocabularyLoadRunner = null;\n        String localCodeRepositoryDir = environment.getProperty(\"vocabulary.localCodeRepositoryDir\");\n        String localValueSetRepositoryDir = environment.getProperty(\"vocabulary.localValueSetRepositoryDir\");\n        vocabularyLoadRunner = new VocabularyLoadRunner();\n        System.out.println(\"LOADING VOCABULARY DATABASES FROM THE FOLLOWING RESOURCES: VALUESETS - \" + localValueSetRepositoryDir + \" CODES - \" + localCodeRepositoryDir);\n        vocabularyLoadRunner.setCodeDirectory(localCodeRepositoryDir);\n        vocabularyLoadRunner.setValueSetDirectory(localValueSetRepositoryDir);\n        vocabularyLoadRunner.setDataSource(dataSource);\n        vocabularyLoadRunner.setVocabularyLoaderFactory(vocabularyLoaderFactory);\n        return vocabularyLoadRunner;\n    }\n\n    @Bean\n    public static List<ConfiguredExpression> vocabularyValidationConfigurations(ValidationConfigurationLoader configurationLoader){\n        return configurationLoader.getConfigurations().getExpressions();\n    }\n\n    @Bean\n    public DocumentBuilder documentBuilder() throws ParserConfigurationException {\n        DocumentBuilderFactory domFactory =  DocumentBuilderFactory.newInstance(\"com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl\", ClassLoader.getSystemClassLoader());\n        domFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n        domFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n        domFactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n        domFactory.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\n        domFactory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\n        domFactory.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);\n        domFactory.setXIncludeAware(false);\n        domFactory.setExpandEntityReferences(false);\n        domFactory.setNamespaceAware(true);\n        return domFactory.newDocumentBuilder();\n    }\n\n    @Bean\n    public XPathFactory xPathFactory(){\n        return XPathFactory.newInstance();\n    }\n\n    @Autowired\n    @Bean\n    public ValidationConfigurationLoader validationConfigurationLoader(final Environment environment){\n        ValidationConfigurationLoader validationConfigurationLoader = new ValidationConfigurationLoader();\n        validationConfigurationLoader.setValidationConfigurationFilePath(environment.getProperty(\"referenceccda.configFile\"));\n        validationConfigurationLoader.setUnmarshaller(castorMarshaller());\n        return validationConfigurationLoader;\n    }\n\n    @Bean\n    public static Jaxb2Marshaller castorMarshaller() {\n        Jaxb2Marshaller jaxb2Marshaller = new Jaxb2Marshaller();\n        jaxb2Marshaller.setPackagesToScan(\"org.sitenv.vocabularies.configuration\");\n        Map<String,Object> map = new HashMap<>();\n        map.put(\"jaxb.formatted.output\", true);\n        jaxb2Marshaller.setMarshallerProperties(map);\n        return jaxb2Marshaller;\n    }\n    \n    @Bean\n    public static GlobalCodeValidatorResults globalCodeValidatorResults() {    \t\n    \treturn new GlobalCodeValidatorResults();\n    }\n}\n"], "filenames": ["src/main/java/org/sitenv/vocabularies/configuration/CodeValidatorApiConfiguration.java"], "buggy_code_start_loc": [25], "buggy_code_end_loc": [136], "fixing_code_start_loc": [26], "fixing_code_end_loc": [145], "type": "CWE-611", "message": "A vulnerability classified as problematic was found in ONC code-validator-api up to 1.0.30. This vulnerability affects the function vocabularyValidationConfigurations of the file src/main/java/org/sitenv/vocabularies/configuration/CodeValidatorApiConfiguration.java of the component XML Handler. The manipulation leads to xml external entity reference. Upgrading to version 1.0.31 is able to address this issue. The name of the patch is fbd8ea121755a2d3d116b13f235bc8b61d8449af. It is recommended to upgrade the affected component. VDB-217018 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2021-4295", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-29T09:15:08.223", "lastModified": "2023-01-06T16:48:11.610", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic was found in ONC code-validator-api up to 1.0.30. This vulnerability affects the function vocabularyValidationConfigurations of the file src/main/java/org/sitenv/vocabularies/configuration/CodeValidatorApiConfiguration.java of the component XML Handler. The manipulation leads to xml external entity reference. Upgrading to version 1.0.31 is able to address this issue. The name of the patch is fbd8ea121755a2d3d116b13f235bc8b61d8449af. It is recommended to upgrade the affected component. VDB-217018 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-611"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-611"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:healthit:code-validator-api:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.0.31", "matchCriteriaId": "3A2B9691-16F7-456D-941F-AFAF24DE4212"}]}]}], "references": [{"url": "https://github.com/onc-healthit/code-validator-api/commit/fbd8ea121755a2d3d116b13f235bc8b61d8449af", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/onc-healthit/code-validator-api/pull/97", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/onc-healthit/code-validator-api/releases/tag/1.0.31", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217018", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217018", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/onc-healthit/code-validator-api/commit/fbd8ea121755a2d3d116b13f235bc8b61d8449af"}}