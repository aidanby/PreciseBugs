{"buggy_code": ["<?php\n\nreturn [\n\t'appVersion' => '6.3.3',\n\t'patchVersion' => '2021.12.13',\n\t'lib_roundcube' => '0.2.3',\n];\n", "<?php\n\n/**\n * Fields Action Class.\n *\n * @package Action\n *\n * @copyright YetiForce Sp. z o.o\n * @license   YetiForce Public License 4.0 (licenses/LicenseEN.txt or yetiforce.com)\n * @author    Mariusz Krzaczkowski <m.krzaczkowski@yetiforce.com>\n * @author    Rados\u0142aw Skrzypczak <r.skrzypczak@yetiforce.com>\n */\nclass Vtiger_Fields_Action extends \\App\\Controller\\Action\n{\n\tuse \\App\\Controller\\ExposeMethod;\n\n\t/**\n\t * Field model instance.\n\t *\n\t * @var Vtiger_Field_Model\n\t */\n\tprotected $fieldModel;\n\n\t/**\n\t * Function to check permission.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function checkPermission(App\\Request $request)\n\t{\n\t\tif ('verifyPhoneNumber' !== $request->getMode()) {\n\t\t\t$currentUserPriviligesModel = Users_Privileges_Model::getCurrentUserPrivilegesModel();\n\t\t\tif (!$currentUserPriviligesModel->hasModulePermission($request->getModule())) {\n\t\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t\t}\n\t\t\tif (!\\App\\Privilege::isPermitted($request->getModule(), 'EditView')) {\n\t\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t\t}\n\t\t}\n\t\tif ('findAddress' !== $request->getMode() && 'getReference' !== $request->getMode()) {\n\t\t\t$this->fieldModel = Vtiger_Module_Model::getInstance($request->getModule())->getFieldByName($request->getByType('fieldName', 2));\n\t\t\tif (!$this->fieldModel || !$this->fieldModel->isEditable()) {\n\t\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD', 406);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\t\t$this->exposeMethod('getOwners');\n\t\t$this->exposeMethod('getReference');\n\t\t$this->exposeMethod('getUserRole');\n\t\t$this->exposeMethod('verifyPhoneNumber');\n\t\t$this->exposeMethod('findAddress');\n\t\t$this->exposeMethod('verifyIsHolidayDate');\n\t\t$this->exposeMethod('changeFavoriteOwner');\n\t}\n\n\t/**\n\t * Get owners for ajax owners list.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function getOwners(App\\Request $request)\n\t{\n\t\tif (!App\\Config::performance('SEARCH_OWNERS_BY_AJAX')) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t}\n\t\tif ('owner' !== $this->fieldModel->getFieldDataType() && 'sharedOwner' !== $this->fieldModel->getFieldDataType()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t\t$moduleName = $request->getModule();\n\t\t$searchValue = $request->getByType('value', 'Text');\n\t\tif ($request->has('result')) {\n\t\t\t$result = $request->getArray('result', 'Standard');\n\t\t} else {\n\t\t\t$result = ['users', 'groups'];\n\t\t}\n\t\t$response = new Vtiger_Response();\n\t\tif (empty($searchValue)) {\n\t\t\t$response->setResult(['items' => []]);\n\t\t} else {\n\t\t\t$owner = App\\Fields\\Owner::getInstance($moduleName);\n\t\t\t$owner->find($searchValue);\n\n\t\t\t$data = [];\n\t\t\tif (\\in_array('users', $result)) {\n\t\t\t\t$users = $owner->getAccessibleUsers('', 'owner');\n\t\t\t\tif (!empty($users)) {\n\t\t\t\t\t$data[] = ['name' => \\App\\Language::translate('LBL_USERS'), 'type' => 'optgroup'];\n\t\t\t\t\tforeach ($users as $key => $value) {\n\t\t\t\t\t\t$data[] = ['id' => $key, 'name' => $value];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\\in_array('groups', $result)) {\n\t\t\t\t$grup = $owner->getAccessibleGroups('', 'owner', true);\n\t\t\t\tif (!empty($grup)) {\n\t\t\t\t\t$data[] = ['name' => \\App\\Language::translate('LBL_GROUPS'), 'type' => 'optgroup'];\n\t\t\t\t\tforeach ($grup as $key => $value) {\n\t\t\t\t\t\t$data[] = ['id' => $key, 'name' => $value];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$response->setResult(['items' => $data]);\n\t\t}\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Search user roles.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function getUserRole(App\\Request $request)\n\t{\n\t\tif (!App\\Config::performance('SEARCH_ROLES_BY_AJAX')) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t}\n\t\tif ('userRole' !== $this->fieldModel->getFieldDataType()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t\t$searchValue = $request->getByType('value', 'Text');\n\t\t$response = new Vtiger_Response();\n\t\tif (empty($searchValue)) {\n\t\t\t$response->setResult(['items' => []]);\n\t\t} else {\n\t\t\t$rows = $this->fieldModel->getUITypeModel()->getSearchValues($searchValue);\n\t\t\tforeach ($rows as $key => $value) {\n\t\t\t\t$data[] = ['id' => $key, 'name' => $value];\n\t\t\t}\n\t\t\t$response->setResult(['items' => $data]);\n\t\t}\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function getReference(App\\Request $request)\n\t{\n\t\t$fieldModel = Vtiger_Module_Model::getInstance($request->getModule())->getFieldByName($request->getByType('fieldName', 2));\n\t\tif (!$fieldModel || !$fieldModel->isActiveField() || !$fieldModel->isViewEnabled()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD', 406);\n\t\t}\n\t\t$response = new Vtiger_Response();\n\t\t$limit = \\App\\Config::search('GLOBAL_SEARCH_AUTOCOMPLETE_LIMIT');\n\t\t$searchValue = \\App\\RecordSearch::getSearchField()->getUITypeModel()->getDbConditionBuilderValue($request->getByType('value', \\App\\Purifier::TEXT), '');\n\t\t$rows = (new \\App\\RecordSearch($searchValue, $fieldModel->getReferenceList(), $limit))->setMode(\\App\\RecordSearch::LABEL_MODE)->search();\n\t\t$data = $modules = [];\n\t\tforeach ($rows as $row) {\n\t\t\t$modules[$row['setype']][] = $row;\n\t\t}\n\t\tforeach ($modules as $moduleName => $rows) {\n\t\t\t$data[] = ['name' => App\\Language::translateSingleMod($moduleName, $moduleName), 'type' => 'optgroup'];\n\t\t\tforeach ($rows as $row) {\n\t\t\t\t$data[] = ['id' => $row['crmid'], 'name' => \\App\\Purifier::encodeHtml($row['label'])];\n\t\t\t}\n\t\t}\n\t\t$response->setResult(['items' => $data]);\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Verify phone number.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function verifyPhoneNumber(App\\Request $request)\n\t{\n\t\tif ('phone' !== $this->fieldModel->getFieldDataType()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t\t$response = new Vtiger_Response();\n\t\t$data = ['isValidNumber' => false];\n\t\tif ($request->isEmpty('phoneCountry', true)) {\n\t\t\t$data['message'] = \\App\\Language::translate('LBL_NO_PHONE_COUNTRY');\n\t\t}\n\t\tif (empty($data['message'])) {\n\t\t\ttry {\n\t\t\t\t$data = App\\Fields\\Phone::verifyNumber($request->getByType('phoneNumber', 'Text'), $request->getByType('phoneCountry', 1));\n\t\t\t} catch (\\App\\Exceptions\\FieldException $e) {\n\t\t\t\t$data = ['isValidNumber' => false];\n\t\t\t}\n\t\t}\n\t\tif (!$data['isValidNumber'] && empty($data['message'])) {\n\t\t\t$data['message'] = \\App\\Language::translate('LBL_INVALID_PHONE_NUMBER');\n\t\t}\n\t\t$response->setResult($data);\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Find address.\n\t *\n\t * @param \\App\\Request $request\n\t */\n\tpublic function findAddress(App\\Request $request)\n\t{\n\t\t$instance = \\App\\Map\\Address::getInstance($request->getByType('type'));\n\t\t$response = new Vtiger_Response();\n\t\tif ($instance) {\n\t\t\t$response->setResult($instance->find($request->getByType('value', 'Text')));\n\t\t}\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Verify is holiday date.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function verifyIsHolidayDate(App\\Request $request)\n\t{\n\t\tif ('datetime' === $this->fieldModel->getFieldDataType() || 'date' === $this->fieldModel->getFieldDataType()) {\n\t\t\t$response = new Vtiger_Response();\n\t\t\t$result = false;\n\t\t\tif ($request->isEmpty('date', true)) {\n\t\t\t\t$data['message'] = \\App\\Language::translate('LBL_NO_DATE');\n\t\t\t} else {\n\t\t\t\t$date = $request->getArray('date', 'DateInUserFormat');\n\t\t\t\tif (!empty(App\\Fields\\Date::getHolidays(App\\Fields\\Date::formatToDB($date[0]), App\\Fields\\Date::formatToDB($date[1])))) {\n\t\t\t\t\t$result = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$data = ['isHolidayDate' => $result];\n\t\t\t$response->setResult($data);\n\t\t\t$response->emit();\n\t\t} else {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t}\n\n\t/**\n\t * Change favorite owner state.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\IllegalValue\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t * @throws \\yii\\db\\Exception\n\t */\n\tpublic function changeFavoriteOwner(App\\Request $request)\n\t{\n\t\tif (!App\\Config::module('Users', 'FAVORITE_OWNERS') || (\\App\\User::getCurrentUserRealId() !== \\App\\User::getCurrentUserId())) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t}\n\t\t$moduleName = $request->getModule();\n\t\t$ownerField = \\App\\Fields\\Owner::getInstance($moduleName);\n\t\t$result = $ownerField->changeFavorites($this->fieldModel->getFieldDataType(), $request->getInteger('owner'));\n\t\t$message = $result ? 'LBL_MODIFICATION_SUCCESSFUL_AND_RELOAD' : 'LBL_MODIFICATION_FAILURE';\n\t\t$message = \\App\\Language::translate($this->fieldModel->getFieldLabel(), $moduleName) . ': ' . \\App\\Language::translate($message, $moduleName);\n\t\t$response = new Vtiger_Response();\n\t\t$response->setResult(['result' => $result, 'message' => $message]);\n\t\t$response->emit();\n\t}\n}\n", "/* {[The file is published on the basis of YetiForce Public License 4.0 that can be found in the following directory: licenses/LicenseEN.txt or yetiforce.com]} */\n'use strict';\n\nwindow.App.Fields = {\n\tDate: {\n\t\tmonths: [\n\t\t\t'JS_JAN',\n\t\t\t'JS_FEB',\n\t\t\t'JS_MAR',\n\t\t\t'JS_APR',\n\t\t\t'JS_MAY_SHORT',\n\t\t\t'JS_JUN',\n\t\t\t'JS_JUL',\n\t\t\t'JS_AUG',\n\t\t\t'JS_SEP',\n\t\t\t'JS_OCT',\n\t\t\t'JS_NOV',\n\t\t\t'JS_DEC'\n\t\t],\n\t\tmonthsTranslated: [\n\t\t\t'JS_JAN',\n\t\t\t'JS_FEB',\n\t\t\t'JS_MAR',\n\t\t\t'JS_APR',\n\t\t\t'JS_MAY_SHORT',\n\t\t\t'JS_JUN',\n\t\t\t'JS_JUL',\n\t\t\t'JS_AUG',\n\t\t\t'JS_SEP',\n\t\t\t'JS_OCT',\n\t\t\t'JS_NOV',\n\t\t\t'JS_DEC'\n\t\t].map((monthName) => app.vtranslate(monthName)),\n\t\tfullMonths: [\n\t\t\t'JS_JANUARY',\n\t\t\t'JS_FEBRUARY',\n\t\t\t'JS_MARCH',\n\t\t\t'JS_APRIL',\n\t\t\t'JS_MAY',\n\t\t\t'JS_JUNE',\n\t\t\t'JS_JULY',\n\t\t\t'JS_AUGUST',\n\t\t\t'JS_SEPTEMBER',\n\t\t\t'JS_OCTOBER',\n\t\t\t'JS_NOVEMBER',\n\t\t\t'JS_DECEMBER'\n\t\t],\n\t\tfullMonthsTranslated: [\n\t\t\t'JS_JANUARY',\n\t\t\t'JS_FEBRUARY',\n\t\t\t'JS_MARCH',\n\t\t\t'JS_APRIL',\n\t\t\t'JS_MAY',\n\t\t\t'JS_JUNE',\n\t\t\t'JS_JULY',\n\t\t\t'JS_AUGUST',\n\t\t\t'JS_SEPTEMBER',\n\t\t\t'JS_OCTOBER',\n\t\t\t'JS_NOVEMBER',\n\t\t\t'JS_DECEMBER'\n\t\t].map((monthName) => app.vtranslate(monthName)),\n\t\tdays: ['JS_SUN', 'JS_MON', 'JS_TUE', 'JS_WED', 'JS_THU', 'JS_FRI', 'JS_SAT'],\n\t\tdaysTranslated: ['JS_SUN', 'JS_MON', 'JS_TUE', 'JS_WED', 'JS_THU', 'JS_FRI', 'JS_SAT'].map((monthName) =>\n\t\t\tapp.vtranslate(monthName)\n\t\t),\n\t\tfullDays: ['JS_SUNDAY', 'JS_MONDAY', 'JS_TUESDAY', 'JS_WEDNESDAY', 'JS_THURSDAY', 'JS_FRIDAY', 'JS_SATURDAY'],\n\t\tfullDaysTranslated: [\n\t\t\t'JS_SUNDAY',\n\t\t\t'JS_MONDAY',\n\t\t\t'JS_TUESDAY',\n\t\t\t'JS_WEDNESDAY',\n\t\t\t'JS_THURSDAY',\n\t\t\t'JS_FRIDAY',\n\t\t\t'JS_SATURDAY'\n\t\t].map((monthName) => app.vtranslate(monthName)),\n\n\t\t/**\n\t\t * Register DatePicker\n\t\t * @param {$} parentElement\n\t\t * @param {boolean} registerForAddon\n\t\t * @param {object} customParams\n\t\t */\n\t\tregister(parentElement, registerForAddon, customParams, className = 'dateField') {\n\t\t\tif (typeof parentElement === 'undefined') {\n\t\t\t\tparentElement = $('body');\n\t\t\t} else {\n\t\t\t\tparentElement = $(parentElement);\n\t\t\t}\n\t\t\tif (typeof registerForAddon === 'undefined') {\n\t\t\t\tregisterForAddon = true;\n\t\t\t}\n\t\t\tlet elements = $('.' + className, parentElement);\n\t\t\tif (parentElement.hasClass(className)) {\n\t\t\t\telements = parentElement;\n\t\t\t}\n\t\t\tif (elements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (registerForAddon === true) {\n\t\t\t\tconst parentDateElem = elements.closest('.date');\n\t\t\t\t$('.js-date__btn', parentDateElem).on('click', function inputGroupAddonClickHandler(e) {\n\t\t\t\t\t// Using focus api of DOM instead of jQuery because show api of datePicker is calling e.preventDefault\n\t\t\t\t\t// which is stopping from getting focus to input element\n\t\t\t\t\t$(e.currentTarget)\n\t\t\t\t\t\t.closest('.date')\n\t\t\t\t\t\t.find('input.' + className)\n\t\t\t\t\t\t.get(0)\n\t\t\t\t\t\t.focus();\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet format = CONFIG.dateFormat;\n\t\t\tconst elementDateFormat = elements.data('dateFormat');\n\t\t\tif (typeof elementDateFormat !== 'undefined') {\n\t\t\t\tformat = elementDateFormat;\n\t\t\t}\n\t\t\tif (typeof $.fn.datepicker.dates[CONFIG.langKey] === 'undefined') {\n\t\t\t\t$.fn.datepicker.dates[CONFIG.langKey] = {\n\t\t\t\t\tdays: App.Fields.Date.fullDaysTranslated,\n\t\t\t\t\tdaysShort: App.Fields.Date.daysTranslated,\n\t\t\t\t\tdaysMin: App.Fields.Date.daysTranslated,\n\t\t\t\t\tmonths: App.Fields.Date.fullMonthsTranslated,\n\t\t\t\t\tmonthsShort: App.Fields.Date.monthsTranslated,\n\t\t\t\t\ttoday: app.vtranslate('JS_TODAY'),\n\t\t\t\t\tclear: app.vtranslate('JS_CLEAR'),\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttitleFormat: 'MM yyyy' /* Leverages same syntax as 'format' */,\n\t\t\t\t\tweekStart: CONFIG.firstDayOfWeekNo\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet params = {\n\t\t\t\ttodayBtn: 'linked',\n\t\t\t\tclearBtn: true,\n\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\tweekStart: CONFIG.firstDayOfWeekNo,\n\t\t\t\tautoclose: true,\n\t\t\t\ttodayHighlight: true,\n\t\t\t\tformat: format\n\t\t\t};\n\t\t\tif (typeof customParams !== 'undefined') {\n\t\t\t\tparams = $.extend(params, customParams);\n\t\t\t}\n\t\t\telements.each((index, element) => {\n\t\t\t\t$(element).datepicker(\n\t\t\t\t\t$.extend(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tObject.assign(params, { enableOnReadonly: !element.hasAttribute('readonly') }),\n\t\t\t\t\t\t$(element).data('params')\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\t\t\tApp.Fields.Utils.hideMobileKeyboard(elements);\n\t\t\treturn elements;\n\t\t},\n\n\t\t/**\n\t\t * Register dateRangePicker\n\t\t * @param {jQuery} parentElement\n\t\t * @param {object} customParams\n\t\t */\n\t\tregisterRange(parentElement, customParams = {}) {\n\t\t\tif (typeof parentElement === 'undefined') {\n\t\t\t\tparentElement = $('body');\n\t\t\t} else {\n\t\t\t\tparentElement = $(parentElement);\n\t\t\t}\n\t\t\tlet elements = $('.dateRangeField', parentElement);\n\t\t\tif (parentElement.hasClass('dateRangeField')) {\n\t\t\t\telements = parentElement;\n\t\t\t}\n\t\t\tif (elements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet format = CONFIG.dateFormat.toUpperCase();\n\t\t\tconst elementDateFormat = elements.data('dateFormat');\n\t\t\tif (typeof elementDateFormat !== 'undefined') {\n\t\t\t\tformat = elementDateFormat.toUpperCase();\n\t\t\t}\n\t\t\tlet ranges = {};\n\t\t\tranges[app.vtranslate('JS_TODAY')] = [moment(), moment()];\n\t\t\tranges[app.vtranslate('JS_TOMORROW')] = [moment().add(1, 'days'), moment().add(1, 'days')];\n\t\t\tranges[app.vtranslate('JS_YESTERDAY')] = [moment().subtract(1, 'days'), moment().subtract(1, 'days')];\n\t\t\tranges[app.vtranslate('JS_LAST_7_DAYS')] = [moment().subtract(6, 'days'), moment()];\n\t\t\tranges[app.vtranslate('JS_NEXT_7_DAYS')] = [moment(), moment().add(6, 'days')];\n\t\t\tranges[app.vtranslate('JS_CURRENT_MONTH')] = [moment().startOf('month'), moment().endOf('month')];\n\t\t\tranges[app.vtranslate('JS_NEXT_MONTH')] = [\n\t\t\t\tmoment().add(1, 'month').startOf('month'),\n\t\t\t\tmoment().add(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_LAST_MONTH')] = [\n\t\t\t\tmoment().subtract(1, 'month').startOf('month'),\n\t\t\t\tmoment().subtract(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_NEXT_MONTH')] = [\n\t\t\t\tmoment().add(1, 'month').startOf('month'),\n\t\t\t\tmoment().add(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_LAST_3_MONTHS')] = [\n\t\t\t\tmoment().subtract(3, 'month').startOf('month'),\n\t\t\t\tmoment().subtract(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_NEXT_3_MONTHS')] = [moment().startOf('month'), moment().add(3, 'month').endOf('month')];\n\t\t\tranges[app.vtranslate('JS_LAST_6_MONTHS')] = [\n\t\t\t\tmoment().subtract(6, 'month').startOf('month'),\n\t\t\t\tmoment().subtract(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_NEXT_6_MONTHS')] = [moment().startOf('month'), moment().add(6, 'month').endOf('month')];\n\n\t\t\tlet locale = App.Fields.DateTime.getDefaultLocale();\n\t\t\tlocale.format = format;\n\t\t\tlet params = {\n\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\tautoUpdateInput: false,\n\t\t\t\tautoApply: true,\n\t\t\t\tranges: ranges,\n\t\t\t\tlocale: locale\n\t\t\t};\n\n\t\t\tif (typeof customParams !== 'undefined') {\n\t\t\t\tparams = $.extend(params, customParams);\n\t\t\t}\n\t\t\tparentElement\n\t\t\t\t.find('.js-date__btn')\n\t\t\t\t.off()\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\t$(e.currentTarget).parent().next('.dateRangeField')[0].focus();\n\t\t\t\t});\n\t\t\telements.each((index, element) => {\n\t\t\t\tlet el = $(element);\n\t\t\t\tlet currentParams = $.extend(true, params, el.data('params'));\n\t\t\t\tel.daterangepicker(currentParams)\n\t\t\t\t\t.on('apply.daterangepicker', function (ev, picker) {\n\t\t\t\t\t\t$(this).val(\n\t\t\t\t\t\t\tpicker.startDate.format(currentParams.locale.format) +\n\t\t\t\t\t\t\t\t',' +\n\t\t\t\t\t\t\t\tpicker.endDate.format(currentParams.locale.format)\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$(this).trigger('change');\n\t\t\t\t\t})\n\t\t\t\t\t.on('show.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tApp.Fields.Utils.positionPicker(ev, picker);\n\t\t\t\t\t})\n\t\t\t\t\t.on('showCalendar.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tApp.Fields.Utils.positionPicker(ev, picker);\n\t\t\t\t\t\tpicker.container.addClass('js-visible');\n\t\t\t\t\t})\n\t\t\t\t\t.on('hide.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tpicker.container.removeClass('js-visible');\n\t\t\t\t\t});\n\t\t\t\tApp.Fields.Utils.registerMobileDateRangePicker(el);\n\t\t\t});\n\t\t}\n\t},\n\tDateTime: class DateTime {\n\t\tconstructor(container, params) {\n\t\t\tthis.container = container;\n\t\t\tthis.init(params);\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t * @param {Object} params\n\t\t */\n\t\tstatic register(container, params) {\n\t\t\tif (typeof container === 'undefined') {\n\t\t\t\tcontainer = $('body');\n\t\t\t}\n\t\t\tif (container.hasClass('dateTimePickerField') && !container.prop('disabled')) {\n\t\t\t\treturn new DateTime(container, params);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.dateTimePickerField:not([disabled])').each((_, e) => {\n\t\t\t\tlet element = $(e);\n\t\t\t\tinstances.push(new DateTime(element, params));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Gets default locale data\n\t\t * @returns {Object}\n\t\t */\n\t\tstatic getDefaultLocale() {\n\t\t\tif (!this.locale) {\n\t\t\t\tthis.locale = {\n\t\t\t\t\tseparator: ',',\n\t\t\t\t\tapplyLabel: app.vtranslate('JS_APPLY'),\n\t\t\t\t\tcancelLabel: app.vtranslate('JS_CANCEL'),\n\t\t\t\t\tfromLabel: app.vtranslate('JS_FROM'),\n\t\t\t\t\ttoLabel: app.vtranslate('JS_TO'),\n\t\t\t\t\tcustomRangeLabel: app.vtranslate('JS_CUSTOM'),\n\t\t\t\t\tweekLabel: app.vtranslate('JS_WEEK').substr(0, 1),\n\t\t\t\t\tfirstDay: CONFIG.firstDayOfWeekNo,\n\t\t\t\t\tdaysOfWeek: App.Fields.Date.daysTranslated,\n\t\t\t\t\tmonthNames: App.Fields.Date.fullMonthsTranslated\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn { ...this.locale };\n\t\t}\n\n\t\t/**\n\t\t * Initialization datetime\n\t\t */\n\t\tinit(customParams) {\n\t\t\t$('.input-group-text', this.container.closest('.dateTime')).on('click', function (e) {\n\t\t\t\t$(e.currentTarget).closest('.dateTime').find('input.dateTimePickerField').get(0).focus();\n\t\t\t});\n\t\t\tlet dateFormat = CONFIG.dateFormat.toUpperCase();\n\t\t\tconst elementDateFormat = this.container.data('dateFormat');\n\t\t\tif (typeof elementDateFormat !== 'undefined') {\n\t\t\t\tdateFormat = elementDateFormat.toUpperCase();\n\t\t\t}\n\t\t\tlet hourFormat = CONFIG.hourFormat;\n\t\t\tconst elementHourFormat = this.container.data('hourFormat');\n\t\t\tif (typeof elementHourFormat !== 'undefined') {\n\t\t\t\thourFormat = elementHourFormat;\n\t\t\t}\n\t\t\tlet timePicker24Hour = true;\n\t\t\tlet timeFormat = 'HH:mm';\n\t\t\tif (hourFormat != '24') {\n\t\t\t\ttimePicker24Hour = false;\n\t\t\t\ttimeFormat = 'hh:mm A';\n\t\t\t}\n\t\t\tconst format = dateFormat + ' ' + timeFormat;\n\t\t\tlet isDateRangePicker = this.container.data('calendarType') !== 'range';\n\t\t\tlet locale = App.Fields.DateTime.getDefaultLocale();\n\t\t\tlocale.format = format;\n\t\t\tlet params = {\n\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\tparentEl: this.container.closest('.dateTime'),\n\t\t\t\tsingleDatePicker: isDateRangePicker,\n\t\t\t\tshowDropdowns: true,\n\t\t\t\ttimePicker: true,\n\t\t\t\tautoUpdateInput: false,\n\t\t\t\ttimePicker24Hour: timePicker24Hour,\n\t\t\t\ttimePickerIncrement: 1,\n\t\t\t\tautoApply: true,\n\t\t\t\topens: 'left',\n\t\t\t\tlocale: locale\n\t\t\t};\n\t\t\tif (typeof customParams !== 'undefined') {\n\t\t\t\tparams = $.extend(params, customParams);\n\t\t\t}\n\t\t\tthis.container\n\t\t\t\t.daterangepicker(params)\n\t\t\t\t.on('apply.daterangepicker', function applyDateRangePickerHandler(ev, picker) {\n\t\t\t\t\tif (isDateRangePicker) {\n\t\t\t\t\t\t$(this).val(picker.startDate.format(format));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(this).val(picker.startDate.format(format) + ',' + picker.endDate.format(format));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('showCalendar.daterangepicker', (ev, picker) => {\n\t\t\t\t\tApp.Fields.Utils.positionPicker(ev, picker);\n\t\t\t\t\tpicker.container.addClass('js-visible');\n\t\t\t\t});\n\t\t\tApp.Fields.Utils.registerMobileDateRangePicker(this.container);\n\t\t}\n\t},\n\tColors: {\n\t\t/**\n\t\t * Function to check whether the color is dark or light\n\t\t */\n\t\tgetColorContrast: function (hexcolor) {\n\t\t\tvar r = parseInt(hexcolor.substr(0, 2), 16);\n\t\t\tvar g = parseInt(hexcolor.substr(2, 2), 16);\n\t\t\tvar b = parseInt(hexcolor.substr(4, 2), 16);\n\t\t\tvar yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\t\t\treturn yiq >= 128 ? 'light' : 'dark';\n\t\t},\n\t\tgetRandomColor: function () {\n\t\t\tvar letters = '0123456789ABCDEF'.split('');\n\t\t\tvar color = '#';\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tcolor += letters[Math.floor(Math.random() * 16)];\n\t\t\t}\n\t\t\treturn color;\n\t\t},\n\t\tgetRandomColors: function (count) {\n\t\t\tconst colors = [];\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tcolors.push(this.getRandomColor());\n\t\t\t}\n\t\t\treturn colors;\n\t\t},\n\t\tshowPicker({ color, fieldToUpdate, bgToUpdate, cb }) {\n\t\t\tlet registerPickerEvents = (modalContainer) => {\n\t\t\t\tlet picker = window.ColorPicker.mount({\n\t\t\t\t\tel: modalContainer.find('.js-color-picker')[0],\n\t\t\t\t\tcurrentColor: color\n\t\t\t\t});\n\t\t\t\tmodalContainer.find('.js-modal__save').on('click', (_) => {\n\t\t\t\t\tlet newColor = picker.getColor().hex;\n\t\t\t\t\tcb && cb(newColor);\n\t\t\t\t\tbgToUpdate && bgToUpdate.css('background', newColor);\n\t\t\t\t\tfieldToUpdate && fieldToUpdate.val(newColor);\n\t\t\t\t\tapp.hideModalWindow(false, modalContainer.closest('.js-modal-container')[0].id);\n\t\t\t\t});\n\t\t\t};\n\t\t\tlet url = `index.php?module=AppComponents&view=ColorPickerModal${color ? '&color=' + color : ''}`;\n\t\t\tapp.showModalWindow({ url, cb: registerPickerEvents.bind(this) });\n\t\t}\n\t},\n\tText: {\n\t\t/**\n\t\t * Register clip\n\t\t * @param {HTMLElement|jQuery} container\n\t\t * @param {string} key\n\t\t * @returns {ClipboardJS|undefined}\n\t\t */\n\t\tregisterCopyClipboard: function (container, key = '.clipboard') {\n\t\t\tif (typeof container !== 'object') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontainer = $(container).get(0);\n\t\t\tlet elements = container.querySelectorAll(key);\n\t\t\tif (elements.length === 0) {\n\t\t\t\telements = key;\n\t\t\t\tcontainer = '';\n\t\t\t}\n\t\t\treturn new ClipboardJS(elements, {\n\t\t\t\tcontainer: container,\n\t\t\t\ttext: function (trigger) {\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_NOTIFY_COPY_TEXT'),\n\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t});\n\t\t\t\t\ttrigger = $(trigger);\n\t\t\t\t\tconst element = $(trigger.data('copyTarget'), container);\n\t\t\t\t\tlet val;\n\t\t\t\t\tif (typeof trigger.data('copyType') !== 'undefined') {\n\t\t\t\t\t\tif (element.is('select')) {\n\t\t\t\t\t\t\tval = element.find('option:selected').data(trigger.data('copyType'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tval = element.data(trigger.data('copyType'));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (typeof trigger.data('copy-attribute') !== 'undefined') {\n\t\t\t\t\t\tval = trigger.data(trigger.data('copy-attribute'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval = element.val();\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tEditor: class {\n\t\t\tconstructor(container, params) {\n\t\t\t\tthis.container = container;\n\t\t\t\tthis.init(container, params);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Register function\n\t\t\t * @param {jQuery} container\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tstatic register(container, params) {\n\t\t\t\tif (typeof container === 'undefined') {\n\t\t\t\t\tcontainer = $('body');\n\t\t\t\t}\n\t\t\t\tif (container.hasClass('js-editor') && !container.prop('disabled')) {\n\t\t\t\t\treturn new App.Fields.Text.Editor(container, $.extend(params, container.data()));\n\t\t\t\t}\n\t\t\t\tconst instances = [];\n\t\t\t\tcontainer.find('.js-editor:not([disabled])').each((_, e) => {\n\t\t\t\t\tlet element = $(e);\n\t\t\t\t\tinstances.push(new App.Fields.Text.Editor(element, $.extend(params, element.data())));\n\t\t\t\t});\n\t\t\t\treturn instances;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Initiation\n\t\t\t * @param {jQuery} element\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tinit(element, params) {\n\t\t\t\tlet config = {};\n\t\t\t\tif (element.hasClass('js-editor--basic')) {\n\t\t\t\t\tconfig.toolbar = 'Min';\n\t\t\t\t}\n\t\t\t\tif (element.data('height')) {\n\t\t\t\t\tconfig.height = element.data('height');\n\t\t\t\t}\n\t\t\t\tparams = $.extend(config, params);\n\t\t\t\tthis.isModal = element.closest('.js-modal-container').length;\n\t\t\t\tif (this.isModal && element.is(':visible')) {\n\t\t\t\t\tlet self = this;\n\t\t\t\t\tthis.progressInstance = $.progressIndicator({\n\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tonBlock: () => {\n\t\t\t\t\t\t\t\tself.loadEditor(element, params);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tApp.Fields.Text.destroyEditor(element);\n\t\t\t\t\tthis.loadEditor(element, params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\t *Function to set the textArea element\n\t\t\t */\n\t\t\tsetElement(element) {\n\t\t\t\tthis.element = $(element);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t *Function to get the textArea element\n\t\t\t */\n\t\t\tgetElement() {\n\t\t\t\treturn this.element;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Function to return Element's id atrribute value\n\t\t\t */\n\t\t\tgetElementId() {\n\t\t\t\treturn this.getElement().attr('id');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Function to get the instance of ckeditor\n\t\t\t */\n\t\t\tgetEditorInstanceFromName() {\n\t\t\t\treturn CKEDITOR.instances[this.getElementId()];\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Function to load CkEditor\n\t\t\t * @param {HTMLElement|jQuery} element on which CkEditor has to be loaded\n\t\t\t * @param {Object} customConfig custom configurations for ckeditor\n\t\t\t */\n\t\t\tloadEditor(element, customConfig) {\n\t\t\t\tthis.setElement(element);\n\t\t\t\tconst instance = this.getEditorInstanceFromName(),\n\t\t\t\t\tself = this;\n\t\t\t\tlet config = {\n\t\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\t\tallowedContent: true,\n\t\t\t\t\tdisableNativeSpellChecker: false,\n\t\t\t\t\textraAllowedContent: 'div{page-break-after*}',\n\t\t\t\t\tformat_tags: 'p;h1;h2;h3;h4;h5;h6;pre;address;div',\n\t\t\t\t\tremoveButtons: '',\n\t\t\t\t\tenterMode: CKEDITOR.ENTER_BR,\n\t\t\t\t\tshiftEnterMode: CKEDITOR.ENTER_P,\n\t\t\t\t\temojiEnabled: false,\n\t\t\t\t\tmentionsEnabled: false,\n\t\t\t\t\ton: {\n\t\t\t\t\t\tinstanceReady: function (evt) {\n\t\t\t\t\t\t\tevt.editor.on('blur', function () {\n\t\t\t\t\t\t\t\tevt.editor.updateElement();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (self.isModal && self.progressInstance) {\n\t\t\t\t\t\t\t\tself.progressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tremovePlugins: 'scayt',\n\t\t\t\t\textraPlugins:\n\t\t\t\t\t\t'colorbutton,pagebreak,colordialog,find,selectall,showblocks,div,print,font,justify,bidi,ckeditor-image-to-base',\n\t\t\t\t\ttoolbar: 'Full',\n\t\t\t\t\ttoolbar_Full: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'clipboard',\n\t\t\t\t\t\t\titems: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll'] },\n\t\t\t\t\t\t{ name: 'links', items: ['Link', 'Unlink'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'insert',\n\t\t\t\t\t\t\titems: ['ckeditor-image-to-base', 'Table', 'HorizontalRule', 'SpecialChar', 'PageBreak']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'tools', items: ['Maximize', 'ShowBlocks'] },\n\t\t\t\t\t\t{ name: 'paragraph', items: ['Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv'] },\n\t\t\t\t\t\t{ name: 'document', items: ['Source', 'Print'] },\n\t\t\t\t\t\t'/',\n\t\t\t\t\t\t{ name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t'NumberedList',\n\t\t\t\t\t\t\t\t'BulletedList',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'JustifyLeft',\n\t\t\t\t\t\t\t\t'JustifyCenter',\n\t\t\t\t\t\t\t\t'JustifyRight',\n\t\t\t\t\t\t\t\t'JustifyBlock',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'BidiLtr',\n\t\t\t\t\t\t\t\t'BidiRtl'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] }\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_Min: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{ name: 'tools', items: ['Maximize'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t'NumberedList',\n\t\t\t\t\t\t\t\t'BulletedList',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'JustifyLeft',\n\t\t\t\t\t\t\t\t'JustifyCenter',\n\t\t\t\t\t\t\t\t'JustifyRight',\n\t\t\t\t\t\t\t\t'JustifyBlock',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'BidiLtr',\n\t\t\t\t\t\t\t\t'BidiRtl'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat', 'Source'] }\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_Micro: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: ['NumberedList', 'BulletedList', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] }\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_Clipboard: [\n\t\t\t\t\t\t{ name: 'document', items: ['Print'] },\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'clipboard',\n\t\t\t\t\t\t\titems: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_PDF: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'clipboard',\n\t\t\t\t\t\t\titems: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-'] },\n\t\t\t\t\t\t{ name: 'links', items: ['Link', 'Unlink'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'insert',\n\t\t\t\t\t\t\titems: ['ckeditor-image-to-base', 'Table', 'HorizontalRule', 'PageBreak']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'tools', items: ['Maximize', 'ShowBlocks'] },\n\t\t\t\t\t\t{ name: 'document', items: ['Source'] },\n\t\t\t\t\t\t'/',\n\t\t\t\t\t\t{ name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: ['JustifyLeft', 'JustifyCenter', 'JustifyRight']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] }\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\tif (typeof customConfig !== 'undefined') {\n\t\t\t\t\tconfig = $.extend(config, customConfig);\n\t\t\t\t}\n\t\t\t\tconfig = Object.assign(config, element.data());\n\t\t\t\tif (config.emojiEnabled) {\n\t\t\t\t\tlet emojiToolbar = { name: 'links', items: ['EmojiPanel'] };\n\t\t\t\t\tif (typeof config.toolbar === 'string') {\n\t\t\t\t\t\tconfig[`toolbar_${config.toolbar}`].push(emojiToolbar);\n\t\t\t\t\t} else if (Array.isArray(config.toolbar)) {\n\t\t\t\t\t\tconfig.toolbar.push(emojiToolbar);\n\t\t\t\t\t}\n\t\t\t\t\tconfig.extraPlugins = config.extraPlugins + ',emoji';\n\t\t\t\t\tconfig.outputTemplate = '{id}';\n\t\t\t\t}\n\t\t\t\tif (config.mentionsEnabled) {\n\t\t\t\t\tconfig.extraPlugins = config.extraPlugins + ',mentions';\n\t\t\t\t\tconfig.mentions = this.registerMentions();\n\t\t\t\t}\n\t\t\t\tif (instance) {\n\t\t\t\t\tCKEDITOR.remove(instance);\n\t\t\t\t}\n\t\t\t\telement.ckeditor(config);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register mentions\n\t\t\t * @returns {Array}\n\t\t\t */\n\t\t\tregisterMentions() {\n\t\t\t\tlet minSerchTextLength = app.getMainParams('gsMinLength');\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tfeed: this.getMentionUsersData.bind(this),\n\t\t\t\t\t\titemTemplate: `<li data-id=\"{id}\" class=\"row no-gutters\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-2 c-img__completion__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"{icon} m-auto u-w-fit u-fs-14px\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"{image}\" class=\"c-img__completion mr-2\" alt=\"{label}\" title=\"{label}\">\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col row-10 no-gutters u-overflow-x-hidden\">\n\t\t\t\t\t\t\t\t\t\t\t\t<strong class=\"u-text-ellipsis--no-hover col-12\">{label}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"fullname col-12 u-text-ellipsis--no-hover text-muted small\">{category}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</li>`,\n\t\t\t\t\t\toutputTemplate: '<a href=\"#\" data-id=\"@{id}\" data-module=\"{module}\">{label}</a>',\n\t\t\t\t\t\tminChars: minSerchTextLength\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfeed: App.Fields.Text.getMentionData,\n\t\t\t\t\t\tmarker: '#',\n\t\t\t\t\t\tpattern: /#[w\u0430-\u044f]{1,}|#\\w{3,}$/,\n\t\t\t\t\t\titemTemplate: `<li data-id=\"{id}\" class=\"row no-gutters\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-2 c-circle-icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"yfm-{module}\"></span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-10 row no-gutters pl-1 u-overflow-x-hidden\">\n\t\t\t\t\t\t\t\t\t\t\t\t<strong class=\"u-text-ellipsis--no-hover col-12\">{label}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"fullname col-12 u-text-ellipsis--no-hover text-muted small\">{category}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</li>`,\n\t\t\t\t\t\toutputTemplate: '<a href=\"#\" data-id=\"#{id}\" data-module=\"{module}\">{label}</a>',\n\t\t\t\t\t\tminChars: minSerchTextLength\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Get mention Users data (invoked by ck editor mentions plugin)\n\t\t\t * @param {object} opts\n\t\t\t * @param {function} callback\n\t\t\t */\n\t\t\tgetMentionUsersData(opts, callback) {\n\t\t\t\tApp.Fields.Text.getMentionData(opts, callback, 'owners');\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Completions class for contenteditable html element for records, users and emojis. Params can be passed in data-completions- of contenteditable element or as argument. Default params:\n\t\t * {\n\t\t \t\tcompletionsCollection: {\n\t\t\t\t\t\trecords: true,\n\t\t\t\t\t\tusers: true,\n\t\t\t\t\t\temojis: true\n\t\t\t\t\t}\n\t\t\t}\n\t\t */\n\t\tCompletions: class {\n\t\t\t/**\n\t\t\t * Constructor\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t * @param params\n\t\t\t */\n\t\t\tconstructor(inputDiv = $('.js-completions').eq(0), params = { emojiPanel: true }) {\n\t\t\t\tif (typeof inputDiv === 'undefined' || inputDiv.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (inputDiv.length === undefined) {\n\t\t\t\t\tinputDiv = $(inputDiv);\n\t\t\t\t}\n\t\t\t\tlet basicParams = {\n\t\t\t\t\tcompletionsCollection: {\n\t\t\t\t\t\trecords: true,\n\t\t\t\t\t\tusers: true,\n\t\t\t\t\t\temojis: true\n\t\t\t\t\t},\n\t\t\t\t\tautolink: true\n\t\t\t\t};\n\t\t\t\tthis.params = Object.assign(basicParams, inputDiv.data(), params);\n\t\t\t\tthis.inputDiv = inputDiv;\n\t\t\t\tthis.collection = [];\n\t\t\t\tif (this.params.completionsCollection.records) {\n\t\t\t\t\tthis.collection.push(this.registerMentionCollection('#'));\n\t\t\t\t}\n\t\t\t\tif (this.params.completionsCollection.users) {\n\t\t\t\t\tthis.collection.push(this.registerMentionCollection('@', 'owners'));\n\t\t\t\t}\n\t\t\t\tif (this.params.completionsCollection.emojis) {\n\t\t\t\t\tthis.collection.push(this.registerEmojiCollection());\n\t\t\t\t}\n\t\t\t\tthis.register(inputDiv);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register mention collection for tribute.js\n\t\t\t * @param {string} symbol\n\t\t\t * @param {string} searchModule\n\t\t\t * @returns {{trigger: *, selectTemplate: selectTemplate, values: values, menuItemTemplate: (function(*): string), lookup: string, fillAttr: string}}\n\t\t\t */\n\t\t\tregisterMentionCollection(symbol, searchModule = '-') {\n\t\t\t\tlet self = this;\n\t\t\t\treturn {\n\t\t\t\t\ttrigger: symbol,\n\t\t\t\t\tselectTemplate: function (item) {\n\t\t\t\t\t\tif (this.range.isContentEditable(this.current.element)) {\n\t\t\t\t\t\t\treturn `<a href=\"#\" data-id=\"${symbol + item.original.id}\" data-module=\"${\n\t\t\t\t\t\t\t\titem.original.module\n\t\t\t\t\t\t\t}\">${item.original.label.split('(')[0].trim()}</a>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn symbol + item.original.label;\n\t\t\t\t\t},\n\t\t\t\t\tvalues: (text, cb) => {\n\t\t\t\t\t\tif (text.length >= CONFIG.globalSearchAutocompleteMinLength) {\n\t\t\t\t\t\t\tApp.Fields.Text.getMentionData(text, (users) => cb(users), searchModule);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tmenuItemTemplate: function (item) {\n\t\t\t\t\t\treturn self.mentionTemplate({\n\t\t\t\t\t\t\tid: item.original.id,\n\t\t\t\t\t\t\tmodule: item.original.module,\n\t\t\t\t\t\t\tcategory: item.original.category,\n\t\t\t\t\t\t\timage: item.original.image,\n\t\t\t\t\t\t\tlabel: item.original.label,\n\t\t\t\t\t\t\ticon: item.original.icon\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tlookup: 'label',\n\t\t\t\t\tfillAttr: 'label'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register emoji collection for tribute.js\n\t\t\t * @returns {{trigger: string, selectTemplate: selectTemplate, menuItemTemplate: (function(*): string), lookup: string, fillAttr: string, values: Array}}\n\t\t\t */\n\t\t\tregisterEmojiCollection() {\n\t\t\t\treturn {\n\t\t\t\t\ttrigger: ':',\n\t\t\t\t\tselectTemplate: function (item) {\n\t\t\t\t\t\tif (this.range.isContentEditable(this.current.element)) {\n\t\t\t\t\t\t\treturn `<span data-id=\"${item.original.id}\">${item.original.symbol}</span>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn item.original.symbol;\n\t\t\t\t\t},\n\t\t\t\t\tmenuItemTemplate: function (item) {\n\t\t\t\t\t\treturn `<span data-id=\"${item.original.id}\">${item.original.symbol} ${item.original.id}</span>`;\n\t\t\t\t\t},\n\t\t\t\t\tlookup: 'id',\n\t\t\t\t\tfillAttr: 'keywords',\n\t\t\t\t\tvalues: (text, cb) => {\n\t\t\t\t\t\tif (text.length >= 2) {\n\t\t\t\t\t\t\tcb(App.emoji);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\t/*\n\t\t\t * Mention template\n\t\t\t */\n\t\t\tmentionTemplate(params) {\n\t\t\t\tlet icon = '';\n\t\t\t\tif (params.module !== undefined) {\n\t\t\t\t\ticon = `yfm-${params.module}`;\n\t\t\t\t}\n\t\t\t\tif (params.icon !== undefined && params.icon !== '') {\n\t\t\t\t\ticon = params.icon;\n\t\t\t\t}\n\t\t\t\tlet avatar = `<div class=\"col-2 c-circle-icon\">\n\t\t\t\t\t\t\t\t<span class=\"${icon}\"></span>\n\t\t\t\t\t\t\t</div>`;\n\t\t\t\tif (params.image !== undefined && params.image !== '') {\n\t\t\t\t\tavatar = `<div class=\"col-2 c-img__completion__container m-0\"><img src=\"${params.image}\" class=\"c-img__completion\" alt=${params.label}\" title=\"${params.label}\"></div>`;\n\t\t\t\t}\n\t\t\t\treturn `<div data-id=\"${params.id}\" class=\"row no-gutters\">\n\t\t\t\t\t\t\t${avatar}\n\t\t\t\t\t\t\t<div class=\"col-10 row no-gutters pl-1 u-overflow-x-hidden\">\n\t\t\t\t\t\t\t\t<strong class=\"u-text-ellipsis--no-hover col-12\">${params.label}</strong>\n\t\t\t\t\t\t\t\t<div class=\"fullname col-12 u-text-ellipsis--no-hover text-muted small\">${params.category}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>`;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Auto link\n\t\t\t */\n\t\t\tautoLink() {\n\t\t\t\tlet fillChar = '\\u200B';\n\t\t\t\tlet sel = window.getSelection(),\n\t\t\t\t\trange = sel.getRangeAt(0).cloneRange(),\n\t\t\t\t\toffset,\n\t\t\t\t\tcharCode,\n\t\t\t\t\tgetParentByTagName = function (node, tags) {\n\t\t\t\t\t\tif (node && !isBody(node)) {\n\t\t\t\t\t\t\twhile (node) {\n\t\t\t\t\t\t\t\tif (tags[node.tagName] || isBody(node)) {\n\t\t\t\t\t\t\t\t\treturn !tags[node.tagName] && isBody(node) ? null : node;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t},\n\t\t\t\t\tisBody = function (node) {\n\t\t\t\t\t\treturn node && node.nodeType == 1 && node.tagName.toLowerCase() == 'body';\n\t\t\t\t\t},\n\t\t\t\t\thtml = function (str) {\n\t\t\t\t\t\treturn str.replace(/&((g|l|quo)t|amp|#39);/g, function (m) {\n\t\t\t\t\t\t\treturn { '&lt;': '<', '&amp;': '&', '&quot;': '\"', '&gt;': '>', '&#39;': \"'\" }[m];\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tisFillChar = function (node) {\n\t\t\t\t\t\treturn node.nodeType == 3 && !node.nodeValue.replace(new RegExp('' + fillChar), '').length;\n\t\t\t\t\t};\n\n\t\t\t\tlet start = range.startContainer;\n\t\t\t\twhile (start.nodeType == 1 && range.startOffset > 0) {\n\t\t\t\t\tstart = range.startContainer.childNodes[range.startOffset - 1];\n\t\t\t\t\tif (!start) break;\n\t\t\t\t\trange.setStart(start, start.nodeType == 1 ? start.childNodes.length : start.nodeValue.length);\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\tstart = range.startContainer;\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\tif (range.startOffset == 0) {\n\t\t\t\t\t\tstart = range.startContainer.previousSibling;\n\t\t\t\t\t\twhile (start && start.nodeType == 1) {\n\t\t\t\t\t\t\tstart = start.lastChild;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!start || isFillChar(start)) break;\n\t\t\t\t\t\toffset = start.nodeValue.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstart = range.startContainer;\n\t\t\t\t\t\toffset = range.startOffset;\n\t\t\t\t\t}\n\t\t\t\t\trange.setStart(start, offset - 1);\n\t\t\t\t\tcharCode = range.toString().charCodeAt(0);\n\t\t\t\t} while (charCode != 160 && charCode != 32);\n\t\t\t\tif (\n\t\t\t\t\trange\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.replace(new RegExp(fillChar, 'g'), '')\n\t\t\t\t\t\t.match(/(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i)\n\t\t\t\t) {\n\t\t\t\t\twhile (range.toString().length) {\n\t\t\t\t\t\tif (/^(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i.test(range.toString())) break;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\trange.setStart(range.startContainer, range.startOffset + 1);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlet startCont = range.startContainer,\n\t\t\t\t\t\t\t\tnext;\n\t\t\t\t\t\t\twhile (!(next = startCont.nextSibling)) {\n\t\t\t\t\t\t\t\tif (isBody(startCont)) return;\n\t\t\t\t\t\t\t\tstartCont = startCont.parentNode;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.setStart(next, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (getParentByTagName(range.startContainer, { a: 1, A: 1 })) return;\n\t\t\t\t\tlet href = range\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t.replace(/<[^>]+>/g, '')\n\t\t\t\t\t\t\t.replace(new RegExp(fillChar, 'g'), ''),\n\t\t\t\t\t\threfFull = /^(?:https?:\\/\\/)/gi.test(href) ? href : 'http://' + href,\n\t\t\t\t\t\turl = new URL(hrefFull);\n\t\t\t\t\tlet allowedHosts = CONFIG.purifierAllowedDomains;\n\t\t\t\t\tif (allowedHosts !== false && allowedHosts.indexOf(url.host) === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet a = document.createElement('a'),\n\t\t\t\t\t\ttext = document.createTextNode(' ');\n\t\t\t\t\ta.appendChild(range.extractContents());\n\t\t\t\t\ta.innerHTML = href;\n\t\t\t\t\ta.href = hrefFull ? html(hrefFull) : '';\n\t\t\t\t\ta.setAttribute('rel', 'noopener noreferrer');\n\t\t\t\t\ta.setAttribute('target', '_blank');\n\n\t\t\t\t\trange.insertNode(a);\n\t\t\t\t\ta.parentNode.insertBefore(text, a.nextSibling);\n\t\t\t\t\trange.setStart(text.nextSibling, 0);\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\tsel.addRange(range);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * Register\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t */\n\t\t\tregister(inputDiv) {\n\t\t\t\tconst self = this;\n\t\t\t\tthis.completionsCollection = new Tribute({\n\t\t\t\t\tcollection: self.collection,\n\t\t\t\t\tallowSpaces: true,\n\t\t\t\t\treplaceTextSuffix: ''\n\t\t\t\t});\n\t\t\t\tthis.completionsCollection.attach(inputDiv[0]);\n\t\t\t\tif (this.params.completionsTextarea !== undefined) {\n\t\t\t\t\tthis.registerCompletionsTextArea(inputDiv);\n\t\t\t\t}\n\t\t\t\tif (this.params.completionsButtons !== undefined) {\n\t\t\t\t\tthis.registerCompletionsButtons();\n\t\t\t\t}\n\t\t\t\tif (this.params.autolink) {\n\t\t\t\t\tthis.registerAutoLinker(inputDiv);\n\t\t\t\t}\n\t\t\t\tif (this.params.emojiPanel) {\n\t\t\t\t\tthis.registerEmojiPanel(this.inputDiv, this.inputDiv.parents().eq(3).find('.js-completions__emojis'));\n\t\t\t\t}\n\t\t\t\tif (App.emoji === undefined) {\n\t\t\t\t\tfetch(`${CONFIG.siteUrl}/vendor/ckeditor/ckeditor/plugins/emoji/emoji.json`)\n\t\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tApp.emoji = response;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => console.error('Error:', error));\n\t\t\t\t}\n\t\t\t\tthis.registerTagClick(inputDiv);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register autolink\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t */\n\t\t\tregisterAutoLinker(inputDiv) {\n\t\t\t\tinputDiv.on('keypress', (e) => {\n\t\t\t\t\tif (e.keyCode === 32 || e.keyCode === 13) {\n\t\t\t\t\t\tthis.autoLink();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register completons hidden textarea - useful with forms\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t */\n\t\t\tregisterCompletionsTextArea(inputDiv) {\n\t\t\t\tlet textarea = inputDiv.siblings(`[name=${inputDiv.attr('id')}]`);\n\t\t\t\tinputDiv\n\t\t\t\t\t.on('focus', function () {\n\t\t\t\t\t\ttextarea.val(inputDiv.html());\n\t\t\t\t\t})\n\t\t\t\t\t.on('blur keyup paste input', function () {\n\t\t\t\t\t\ttextarea.val(inputDiv.html());\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register tag click\n\t\t\t * @param inputDiv\n\t\t\t */\n\t\t\tregisterTagClick(inputDiv) {\n\t\t\t\tinputDiv\n\t\t\t\t\t.closest('.js-completions__container')\n\t\t\t\t\t.find('.js-completions__messages')\n\t\t\t\t\t.on('click', '.js-completions__tag', (e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tinputDiv.append($(e.target).clone());\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register completions buttons\n\t\t\t */\n\t\t\tregisterCompletionsButtons() {\n\t\t\t\tlet completionsContainer = this.inputDiv.parents().eq(3);\n\t\t\t\tcompletionsContainer.find('.js-completions__users').on('click', (e) => {\n\t\t\t\t\tthis.completionsCollection.showMenuForCollection(this.inputDiv[0], 1);\n\t\t\t\t});\n\t\t\t\tcompletionsContainer.find('.js-completions__records').on('click', (e) => {\n\t\t\t\t\tthis.completionsCollection.showMenuForCollection(this.inputDiv[0], 0);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register emojipanel library\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t * @param {jQuery} emojisContainer\n\t\t\t */\n\t\t\tregisterEmojiPanel(inputDiv, emojisContainer) {\n\t\t\t\tnew EmojiPanel({\n\t\t\t\t\tcontainer: '.js-completions__emojis',\n\t\t\t\t\tjson_url: CONFIG.siteUrl + 'libraries/emojipanel/dist/emojis.json'\n\t\t\t\t});\n\t\t\t\temojisContainer.on('click', (e) => {\n\t\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\t\telement.toggleClass('active');\n\t\t\t\t});\n\t\t\t\temojisContainer.on('click', '.emoji', (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif ($(e.currentTarget).data('char') !== undefined) {\n\t\t\t\t\t\tlet value = `${$(e.currentTarget).data('char')}`;\n\t\t\t\t\t\tinputDiv.is('textarea') ? (inputDiv.get(0).value += value) : inputDiv.append(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\temojisContainer.on('mouseenter', '.emoji', (e) => {\n\t\t\t\t\tif ($(e.currentTarget).data('name') !== undefined) {\n\t\t\t\t\t\temojisContainer.find('.emoji-hovered').remove();\n\t\t\t\t\t\temojisContainer\n\t\t\t\t\t\t\t.find('footer')\n\t\t\t\t\t\t\t.prepend(\n\t\t\t\t\t\t\t\t`<div class=\"emoji-hovered u-text-ellipsis\">${\n\t\t\t\t\t\t\t\t\t$(e.currentTarget).data('char') + ' ' + $(e.currentTarget).data('name')\n\t\t\t\t\t\t\t\t}</div>`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\temojisContainer.on('clickoutside', () => {\n\t\t\t\t\temojisContainer.removeClass('active');\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Get mention data (invoked by ck editor mentions plugin and tribute.js)\n\t\t * @param {object} opts\n\t\t * @param {function} callback\n\t\t * @param {string} searchModule\n\t\t */\n\t\tgetMentionData(text, callback, searchModule = '-') {\n\t\t\tlet basicSearch = new Vtiger_BasicSearch_Js();\n\t\t\tbasicSearch.reduceNumberResults = app.getMainParams('gsAmountResponse');\n\t\t\tbasicSearch.returnHtml = false;\n\t\t\tbasicSearch.searchModule = searchModule;\n\t\t\tif (typeof text === 'object') {\n\t\t\t\ttext = text.query.toLowerCase();\n\t\t\t}\n\t\t\tif (searchModule === 'owners') {\n\t\t\t\tAppConnector.request({\n\t\t\t\t\taction: 'Search',\n\t\t\t\t\tmode: 'owners',\n\t\t\t\t\tvalue: text\n\t\t\t\t}).done((data) => {\n\t\t\t\t\tcallback(data.result);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tbasicSearch.search(text).done(function (data) {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t\tlet serverDataFormat = data.result,\n\t\t\t\t\t\treponseDataList = [];\n\t\t\t\t\tfor (let id in serverDataFormat) {\n\t\t\t\t\t\tlet responseData = serverDataFormat[id];\n\t\t\t\t\t\treponseDataList.push(responseData);\n\t\t\t\t\t}\n\t\t\t\t\tcallback(reponseDataList);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Destroy ckEditor\n\t\t * @param {jQuery} element\n\t\t */\n\t\tdestroyEditor(element) {\n\t\t\tif (typeof CKEDITOR !== 'undefined' && CKEDITOR.instances && element.attr('id') in CKEDITOR.instances) {\n\t\t\t\tCKEDITOR.instances[element.attr('id')].destroy();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generate random character\n\t\t * @returns {string}\n\t\t */\n\t\tgenerateRandomChar() {\n\t\t\tconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZ';\n\t\t\tconst rand = Math.floor(Math.random() * chars.length);\n\t\t\treturn chars.substring(rand, rand + 1);\n\t\t},\n\n\t\t/**\n\t\t * generate random hash\n\t\t * @returns {string}\n\t\t */\n\t\tgenerateRandomHash(prefix = '') {\n\t\t\tprefix = prefix.toString();\n\t\t\tconst hash =\n\t\t\t\tMath.random().toString(36).substr(2, 10) +\n\t\t\t\tMath.random().toString(36).substr(2, 10) +\n\t\t\t\tnew Date().valueOf() +\n\t\t\t\tMath.random().toString(36).substr(2, 6);\n\t\t\treturn prefix ? prefix + hash : hash;\n\t\t}\n\t},\n\tPicklist: {\n\t\t/**\n\t\t * Function which will convert ui of select boxes.\n\t\t * @params parent - select element\n\t\t * @params view - select2\n\t\t * @params viewParams - select2 params\n\t\t * @returns jquery object list which represents changed select elements\n\t\t */\n\t\tchangeSelectElementView: function (parent, view, viewParams) {\n\t\t\tif (typeof parent === 'undefined') {\n\t\t\t\tparent = $('body');\n\t\t\t}\n\t\t\tif (typeof view === 'undefined') {\n\t\t\t\tconst select2Elements = $('select.select2', parent).toArray();\n\t\t\t\tselect2Elements.forEach((elem) => {\n\t\t\t\t\tthis.changeSelectElementView($(elem), 'select2', viewParams);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//If view is select2, This will convert the ui of select boxes to select2 elements.\n\t\t\tif (view === 'select2') {\n\t\t\t\treturn App.Fields.Picklist.showSelect2ElementView(parent, viewParams);\n\t\t\t} else {\n\t\t\t\tapp.errorLog(new Error(`Unknown select type [${view}]`));\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function which will show the select2 element for select boxes . This will use select2 library\n\t\t */\n\t\tshowSelect2ElementView(selectElement, params) {\n\t\t\tlet self = this;\n\t\t\tselectElement = $(selectElement);\n\t\t\tif (typeof params === 'undefined') {\n\t\t\t\tparams = {};\n\t\t\t}\n\t\t\tif ($(selectElement).length > 1) {\n\t\t\t\treturn $(selectElement).each((index, element) => {\n\t\t\t\t\tthis.showSelect2ElementView($(element).eq(0), params);\n\t\t\t\t});\n\t\t\t}\n\t\t\tparams = this.registerParams(selectElement, params);\n\t\t\tif (params.selectLazy && !selectElement.hasClass('js-lazy-select-active')) {\n\t\t\t\treturn App.Fields.Picklist.showLazySelect(selectElement, {\n\t\t\t\t\tlazyElements: app.getMainParams('picklistLimit'),\n\t\t\t\t\tdata: this.registerLazySelectOptions(selectElement),\n\t\t\t\t\tselectParams: params\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst computeDropdownHeight = (e, dropdownContainer) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (!dropdownContainer.find('.select2-dropdown--above').length) {\n\t\t\t\t\t\tconst dropdownList = dropdownContainer.find('.select2-results > .select2-results__options');\n\t\t\t\t\t\tconst marginBottom = 35;\n\t\t\t\t\t\tconst selectOffsetTop = $(e.currentTarget).offset().top;\n\t\t\t\t\t\tdropdownList.css({\n\t\t\t\t\t\t\t'max-height':\n\t\t\t\t\t\t\t\t$(window).height() - selectOffsetTop - marginBottom - (dropdownList.offset().top - selectOffsetTop)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t};\n\t\t\tselectElement.each(function () {\n\t\t\t\tlet select = $(this);\n\t\t\t\tlet htmlBoolParams = select.data('select');\n\t\t\t\tif (htmlBoolParams === 'tags') {\n\t\t\t\t\tparams.tags = true;\n\t\t\t\t\tparams.tokenSeparators = [','];\n\t\t\t\t} else {\n\t\t\t\t\tparams[htmlBoolParams] = true;\n\t\t\t\t}\n\t\t\t\tselect\n\t\t\t\t\t.select2(params)\n\t\t\t\t\t.on('select2:open', (e) => {\n\t\t\t\t\t\tcomputeDropdownHeight(e, $('.select2-container--open:not(.select2-container--below)'));\n\t\t\t\t\t\tif (select.data('unselecting')) {\n\t\t\t\t\t\t\tselect.removeData('unselecting');\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tselect.each(function () {\n\t\t\t\t\t\t\t\t\t$(this).select2('close');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet instance = $(e.currentTarget).data('select2');\n\t\t\t\t\t\tinstance.$dropdown.css('z-index', 1000002);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Fix auto focusing in select2 with jQuery 3.6.0\n\t\t\t\t\t\t * see: https://github.com/select2/select2/issues/5993\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (instance.dropdown.$search) {\n\t\t\t\t\t\t\tinstance.dropdown.$search.get(0).focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on('select2:unselect', () => {\n\t\t\t\t\t\tselect.data('unselecting', true);\n\t\t\t\t\t});\n\t\t\t\tif (typeof self[params.selectCb] === 'function') {\n\t\t\t\t\tself[params.selectCb](select, params);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn selectElement;\n\t\t},\n\t\t/**\n\t\t * Register params\n\t\t * @param selectElement\n\t\t * @param params\n\t\t * @returns {*}\n\t\t */\n\t\tregisterParams(selectElement, params) {\n\t\t\tif (typeof params.dropdownParent === 'undefined') {\n\t\t\t\tconst modalParent = $(selectElement).closest('.modal-body');\n\t\t\t\tif (modalParent.length) {\n\t\t\t\t\tparams.dropdownParent = modalParent;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet data = selectElement.data();\n\t\t\tif (data != null) {\n\t\t\t\tparams = $.extend(data, params);\n\t\t\t}\n\t\t\tparams.language = {};\n\t\t\tparams.theme = 'bootstrap';\n\t\t\tconst width = $(selectElement).data('width');\n\t\t\tif (typeof width !== 'undefined') {\n\t\t\t\tparams.width = width;\n\t\t\t} else {\n\t\t\t\tparams.width = '100%';\n\t\t\t}\n\t\t\tparams.containerCssClass = 'form-control w-100';\n\t\t\tconst containerCssClass = selectElement.data('containerCssClass');\n\t\t\tif (typeof containerCssClass !== 'undefined') {\n\t\t\t\tparams.containerCssClass += ' ' + containerCssClass;\n\t\t\t}\n\t\t\tparams.language.noResults = function (msn) {\n\t\t\t\treturn app.vtranslate('JS_NO_RESULTS_FOUND');\n\t\t\t};\n\n\t\t\t// Sort DOM nodes alphabetically in select box.\n\t\t\tif (typeof params['customSortOptGroup'] !== 'undefined' && params['customSortOptGroup']) {\n\t\t\t\t$('optgroup', selectElement).each(function () {\n\t\t\t\t\tvar optgroup = $(this);\n\t\t\t\t\tvar options = optgroup\n\t\t\t\t\t\t.children()\n\t\t\t\t\t\t.toArray()\n\t\t\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\t\t\tvar aText = $(a).text();\n\t\t\t\t\t\t\tvar bText = $(b).text();\n\t\t\t\t\t\t\treturn aText < bText ? 1 : -1;\n\t\t\t\t\t\t});\n\t\t\t\t\t$.each(options, function (i, v) {\n\t\t\t\t\t\toptgroup.prepend(v);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tdelete params['customSortOptGroup'];\n\t\t\t}\n\n\t\t\t//formatSelectionTooBig param is not defined even it has the maximumSelectionLength,\n\t\t\t//then we should send our custom function for formatSelectionTooBig\n\t\t\tif (typeof params.maximumSelectionLength !== 'undefined' && typeof params.formatSelectionTooBig === 'undefined') {\n\t\t\t\t//custom function which will return the maximum selection size exceeds message.\n\t\t\t\tvar formatSelectionExceeds = function (limit) {\n\t\t\t\t\treturn app.vtranslate('JS_YOU_CAN_SELECT_ONLY') + ' ' + limit.maximum + ' ' + app.vtranslate('JS_ITEMS');\n\t\t\t\t};\n\t\t\t\tparams.language.maximumSelected = formatSelectionExceeds;\n\t\t\t}\n\t\t\tif (typeof selectElement.attr('multiple') !== 'undefined' && !params.placeholder) {\n\t\t\t\tparams.placeholder = app.vtranslate('JS_SELECT_SOME_OPTIONS');\n\t\t\t} else if (!params.placeholder) {\n\t\t\t\tparams.placeholder = app.vtranslate('JS_SELECT_AN_OPTION');\n\t\t\t}\n\t\t\tif (typeof params.templateResult === 'undefined') {\n\t\t\t\tparams.templateResult = function (data, container) {\n\t\t\t\t\tif (data.element && data.element.className) {\n\t\t\t\t\t\t$(container).addClass(data.element.className);\n\t\t\t\t\t}\n\t\t\t\t\tlet actualElement = $(data.element);\n\t\t\t\t\tif (typeof selectElement.data('showAdditionalIcons') !== 'undefined' && actualElement.is('option')) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div class=\"js-element__title d-flex justify-content-between\" data-js=\"appendTo\"><div class=\"u-text-ellipsis--no-hover\">' +\n\t\t\t\t\t\t\tactualElement.text() +\n\t\t\t\t\t\t\t'</div></div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof data.name === 'undefined') {\n\t\t\t\t\t\treturn data.text;\n\t\t\t\t\t}\n\t\t\t\t\tif (data.type == 'optgroup') {\n\t\t\t\t\t\treturn '<strong>' + data.name + '</strong>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '<span>' + data.name + '</span>';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tparams.escapeMarkup = function (markup) {\n\t\t\t\t\treturn markup;\n\t\t\t\t};\n\t\t\t} else if (typeof this[params.templateResult] === 'function') {\n\t\t\t\tparams.templateResult = this[params.templateResult];\n\t\t\t}\n\t\t\tif (typeof params.templateSelection === 'undefined') {\n\t\t\t\tparams.templateSelection = function (data, container) {\n\t\t\t\t\tif (data.element && data.element.className) {\n\t\t\t\t\t\t$(container).addClass(data.element.className);\n\t\t\t\t\t}\n\t\t\t\t\tif (data.text === '') {\n\t\t\t\t\t\treturn data.name;\n\t\t\t\t\t}\n\t\t\t\t\treturn data.text;\n\t\t\t\t};\n\t\t\t} else if (typeof this[params.templateSelection] === 'function') {\n\t\t\t\tparams.templateSelection = this[params.templateSelection];\n\t\t\t}\n\t\t\tif (selectElement.data('ajaxSearch') === 1) {\n\t\t\t\tparams = this.registerAjaxParams(selectElement, params);\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\t\t/**\n\t\t * Register ajax params\n\t\t * @param selectElement\n\t\t * @param params\n\t\t * @returns {*}\n\t\t */\n\t\tregisterAjaxParams(selectElement, params) {\n\t\t\tparams.tags = false;\n\t\t\tparams.language.searching = function () {\n\t\t\t\treturn app.vtranslate('JS_SEARCHING');\n\t\t\t};\n\t\t\tparams.language.inputTooShort = function (args) {\n\t\t\t\tvar remainingChars = args.minimum - args.input.length;\n\t\t\t\treturn app.vtranslate('JS_INPUT_TOO_SHORT').replace('_LENGTH_', remainingChars);\n\t\t\t};\n\t\t\tparams.language.errorLoading = function () {\n\t\t\t\treturn app.vtranslate('JS_NO_RESULTS_FOUND');\n\t\t\t};\n\t\t\tparams.placeholder = '';\n\t\t\tparams.ajax = {\n\t\t\t\turl: selectElement.data('ajaxUrl'),\n\t\t\t\tdataType: 'json',\n\t\t\t\tdelay: 250,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: function (params) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: params.term, // search term\n\t\t\t\t\t\tpage: params.page\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tprocessResults: function (data, params) {\n\t\t\t\t\tvar items = new Array();\n\t\t\t\t\tif (data.success == true) {\n\t\t\t\t\t\tselectElement.find('option').each(function () {\n\t\t\t\t\t\t\tvar currentTarget = $(this);\n\t\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\t\tlabel: currentTarget.html(),\n\t\t\t\t\t\t\t\tvalue: currentTarget.val()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\titems = items.concat(data.result.items);\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresults: items,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\tmore: false\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcache: false\n\t\t\t};\n\t\t\tparams.escapeMarkup = function (markup) {\n\t\t\t\tif (markup !== 'undefined') return markup;\n\t\t\t};\n\t\t\tvar minimumInputLength = 3;\n\t\t\tif (selectElement.data('minimumInput') !== 'undefined') {\n\t\t\t\tminimumInputLength = selectElement.data('minimumInput');\n\t\t\t}\n\t\t\tparams.minimumInputLength = minimumInputLength;\n\t\t\tparams.templateResult = function (data) {\n\t\t\t\tif (typeof data.name === 'undefined') {\n\t\t\t\t\treturn data.text;\n\t\t\t\t}\n\t\t\t\tif (data.type == 'optgroup') {\n\t\t\t\t\treturn '<strong>' + data.name + '</strong>';\n\t\t\t\t} else {\n\t\t\t\t\treturn '<span>' + data.name + '</span>';\n\t\t\t\t}\n\t\t\t};\n\t\t\tparams.templateSelection = function (data, container) {\n\t\t\t\tif (data.text === '') {\n\t\t\t\t\treturn data.name;\n\t\t\t\t}\n\t\t\t\treturn data.text;\n\t\t\t};\n\t\t\treturn params;\n\t\t},\n\t\t/**\n\t\t * Prepend template with a flag, function is called select2\n\t\t * @param optionData\n\t\t * @returns {Mixed|jQuery|HTMLElement}\n\t\t */\n\t\tprependDataTemplate(optionData) {\n\t\t\tlet template = optionData.text;\n\t\t\tif (optionData.id !== undefined && optionData.id !== '') {\n\t\t\t\ttemplate = $(optionData.element.dataset.template);\n\t\t\t\tif (optionData.element.dataset.state !== undefined) {\n\t\t\t\t\t//check if element has icons with different states\n\t\t\t\t\tif (optionData.element.dataset.state === 'active') {\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t\t.find('.js-select-option-event')\n\t\t\t\t\t\t\t.removeClass(optionData.element.dataset.iconInactive)\n\t\t\t\t\t\t\t.addClass(optionData.element.dataset.iconActive);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t\t.find('.js-select-option-event')\n\t\t\t\t\t\t\t.removeClass(optionData.element.dataset.iconActive)\n\t\t\t\t\t\t\t.addClass(optionData.element.dataset.iconInactive);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn template;\n\t\t},\n\t\t/**\n\t\t * Register select sortable\n\t\t * @param select\n\t\t * @param params\n\t\t */\n\t\tregisterSelectSortable(select, params) {\n\t\t\tthis.sortSelectOptions(select);\n\t\t\tthis.registerSortEvent(select, params.sortableCb);\n\t\t},\n\t\t/**\n\t\t * Sort elements (options) in select by data-sort-index\n\t\t * @param {jQuery} select2 element\n\t\t */\n\t\tsortSelectOptions(select) {\n\t\t\tselect\n\t\t\t\t.find('option[data-sort-index]')\n\t\t\t\t.sort((a, b) => {\n\t\t\t\t\treturn $(b).data('sort-index') < $(a).data('sort-index') ? 1 : -1;\n\t\t\t\t})\n\t\t\t\t.appendTo(select);\n\t\t},\n\t\t/**\n\t\t * Register select drag and drop sorting\n\t\t * @param {jQuery} select2 element\n\t\t * @param {function} callback function\n\t\t */\n\t\tregisterSortEvent(select, cb = () => {}) {\n\t\t\tlet ul = select.next('.select2-container').first('ul.select2-selection__rendered');\n\t\t\tul.sortable({\n\t\t\t\titems: 'li:not(.select2-search__field)',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tstop: function () {\n\t\t\t\t\t$(ul.find('.select2-selection__choice').get().reverse()).each(function () {\n\t\t\t\t\t\tlet optionTitle = $(this).attr('title');\n\t\t\t\t\t\tselect.find('option').each(function () {\n\t\t\t\t\t\t\tif ($(this).text() === optionTitle) {\n\t\t\t\t\t\t\t\tselect.prepend($(this));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tcb(select);\n\t\t\t\t\tselect.trigger('sortable:change');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register icons events in select2 options\n\t\t * @param selectElement\n\t\t */\n\t\tregisterIconsEvents(selectElement) {\n\t\t\tselectElement.on('select2:selecting', (event) => {\n\t\t\t\tlet currentTarget = $(event.params.args.originalEvent.target);\n\t\t\t\tif (!currentTarget.hasClass('js-select-option-event') && !currentTarget.is('path')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (currentTarget.is('path')) {\n\t\t\t\t\t//svg target fix\n\t\t\t\t\tcurrentTarget = currentTarget.closest('.js-select-option-event');\n\t\t\t\t}\n\t\t\t\tlet currentElementData = $(event.params.args.data.element).data(),\n\t\t\t\t\toptionElement = $(event.params.args.data.element),\n\t\t\t\t\tprogressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tAppConnector.request(currentElementData.url)\n\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\tlet response = data.result;\n\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\tif (optionElement.attr('data-state') === 'active') {\n\t\t\t\t\t\t\t\toptionElement.attr('data-state', 'inactive');\n\t\t\t\t\t\t\t\tcurrentTarget.toggleClass(currentElementData.iconActive + ' ' + currentElementData.iconInactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\toptionElement.attr('data-state', 'active');\n\t\t\t\t\t\t\t\tcurrentTarget.toggleClass(currentElementData.iconInactive + ' ' + currentElementData.iconActive);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (response.message) {\n\t\t\t\t\t\t\t\tapp.showNotify({ text: response.message, type: 'success' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (response && response.message) {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: response.message,\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Show lazy select based on data passed in js.\n\t\t *\n\t\t * @param   {object}  selectElement  jQuery\n\t\t * @param   {object}  params         contains selectParams object, lazyElements number, data array\n\t\t */\n\t\tshowLazySelect(selectElement, params) {\n\t\t\t$.fn.select2.amd.require(['select2/data/array', 'select2/utils'], (ArrayData, Utils) => {\n\t\t\t\tfunction CustomData($element, params) {\n\t\t\t\t\tCustomData.__super__.constructor.call(this, $element, params);\n\t\t\t\t}\n\t\t\t\tUtils.Extend(CustomData, ArrayData);\n\t\t\t\tCustomData.prototype.query = (options, callback) => {\n\t\t\t\t\tlet results = [];\n\t\t\t\t\tif (options.term && options.term !== '') {\n\t\t\t\t\t\tresults = params.data.filter((e) => {\n\t\t\t\t\t\t\treturn e.text.toUpperCase().indexOf(options.term.toUpperCase()) >= 0;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults = params.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (!('page' in options)) {\n\t\t\t\t\t\toptions.page = 1;\n\t\t\t\t\t}\n\t\t\t\t\tlet data = {};\n\t\t\t\t\tdata.results = results.slice((options.page - 1) * params.lazyElements, options.page * params.lazyElements);\n\t\t\t\t\tdata.pagination = {};\n\t\t\t\t\tdata.pagination.more = options.page * params.lazyElements < results.length;\n\t\t\t\t\tcallback(data);\n\t\t\t\t};\n\t\t\t\tparams.selectParams = Object.assign(params.selectParams, {\n\t\t\t\t\tajax: {},\n\t\t\t\t\tdataAdapter: CustomData\n\t\t\t\t});\n\t\t\t\tselectElement.addClass('js-lazy-select-active');\n\t\t\t\tthis.showSelect2ElementView(selectElement, params.selectParams);\n\t\t\t\tlet selectedOption = selectElement.data('selected-value');\n\t\t\t\tif (selectedOption) {\n\t\t\t\t\tlet text = selectedOption;\n\t\t\t\t\tif (\n\t\t\t\t\t\tselectElement.data('fieldinfo').picklistvalues.hasOwnProperty(selectedOption) &&\n\t\t\t\t\t\t!selectElement.get(0).dataset.templateResult\n\t\t\t\t\t) {\n\t\t\t\t\t\ttext = selectElement.data('fieldinfo').picklistvalues[selectedOption];\n\t\t\t\t\t}\n\t\t\t\t\tthis.createSelectedOption(selectElement, text, selectedOption);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register lazy select options\n\t\t *\n\t\t * @param   {object}  selectElement  [selectElement description]\n\t\t *\n\t\t * @return  {object}                 [return description]\n\t\t */\n\t\tregisterLazySelectOptions(selectElement) {\n\t\t\tlet options = [];\n\t\t\tif (\n\t\t\t\tselectElement.data('fieldinfo') &&\n\t\t\t\tselectElement.data('fieldinfo').picklistvalues &&\n\t\t\t\t!selectElement.get(0).dataset.templateResult\n\t\t\t) {\n\t\t\t\toptions = $.map(selectElement.data('fieldinfo').picklistvalues, function (val, key) {\n\t\t\t\t\treturn { id: key, text: val };\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions = $.map(selectElement.find('option'), (item) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: item.value,\n\t\t\t\t\t\telement: item,\n\t\t\t\t\t\ttext: item.text,\n\t\t\t\t\t\tselected: item.selected,\n\t\t\t\t\t\tdisabled: item.disabled\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn options;\n\t\t},\n\t\t/**\n\t\t * Set value.\n\t\t *\n\t\t * @param   {object}  selectElement  [selectElement description]\n\t\t * @param   {string}  searchValue\n\t\t * @param   {string}  type           value|text|all\n\t\t *\n\t\t * @return  {boolean|string}         false or set value\n\t\t */\n\t\tsetValue(selectElement, searchValue, type = 'value') {\n\t\t\tconst option = this.findOption(selectElement, searchValue, type);\n\t\t\tif (!option) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (selectElement.hasClass('js-lazy-select-active')) {\n\t\t\t\tthis.createSelectedOption(selectElement, option.text, option.value);\n\t\t\t} else {\n\t\t\t\tselectElement.val(option.value).trigger('change');\n\t\t\t}\n\t\t\treturn option.value;\n\t\t},\n\t\t/**\n\t\t * Find option.\n\t\t *\n\t\t * @param   {object}  selectElement  [selectElement description]\n\t\t * @param   {string}  searchValue\n\t\t * @param   {string}  type           value|text|all\n\t\t *\n\t\t * @return  {boolean|object}         false or option object\n\t\t */\n\t\tfindOption(selectElement, searchValue, type = 'value') {\n\t\t\tlet foundOption = false;\n\t\t\tconst selectValues = this.getSelectOptions(selectElement);\n\t\t\tconst getFieldValueFromText = () => Object.keys(selectValues).find((key) => selectValues[key] === searchValue);\n\t\t\tconst valueExists = () => selectValues.hasOwnProperty(searchValue);\n\t\t\tconst createOption = () => {\n\t\t\t\treturn { text: selectValues[foundOption], value: foundOption };\n\t\t\t};\n\t\t\tswitch (type) {\n\t\t\t\tcase 'value':\n\t\t\t\t\tif (valueExists()) {\n\t\t\t\t\t\tfoundOption = searchValue;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text':\n\t\t\t\t\tfoundOption = getFieldValueFromText();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'all':\n\t\t\t\t\tif (valueExists()) {\n\t\t\t\t\t\tfoundOption = searchValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfoundOption = getFieldValueFromText();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn foundOption ? createOption() : false;\n\t\t},\n\t\t/**\n\t\t * Get select options\n\t\t *\n\t\t * @param   {object}  selectElement  jQuery\n\t\t *\n\t\t * @return  {object}                 [return description]\n\t\t */\n\t\tgetSelectOptions(selectElement) {\n\t\t\tif (selectElement.data('fieldinfo') && selectElement.data('fieldinfo').picklistvalues) {\n\t\t\t\treturn selectElement.data('fieldinfo').picklistvalues;\n\t\t\t} else {\n\t\t\t\tlet optionsObject = {};\n\t\t\t\tselectElement.find('option').each((i, element) => {\n\t\t\t\t\toptionsObject[element.value] = element.text;\n\t\t\t\t});\n\t\t\t\treturn optionsObject;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Create selected option\n\t\t *\n\t\t * @param   {object}  selectElement  jQuery\n\t\t * @param   {string}  text\n\t\t * @param   {string}  value\n\t\t */\n\t\tcreateSelectedOption(selectElement, text, value) {\n\t\t\tconst newOption = new Option(text, value, true, true);\n\t\t\tselectElement.append(newOption).trigger('change');\n\t\t}\n\t},\n\tMultiImage: {\n\t\tcurrentFileUploads: 0,\n\t\tregister(container) {\n\t\t\t$('.js-multi-image', container).each(function () {\n\t\t\t\tnew MultiImage($(this));\n\t\t\t});\n\t\t}\n\t},\n\tMultiEmail: {\n\t\tregister($container) {\n\t\t\t$('.js-multi-email', $container).each((idx, multiEmailField) => {\n\t\t\t\tlet $multiEmailField = $(multiEmailField);\n\t\t\t\t$multiEmailField.on('change', '.js-multi-email', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.parseToJSON($multiEmailField);\n\t\t\t\t});\n\t\t\t\t$multiEmailField.on('click', '.js-multi-email-consenticon', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.toggleConsent($(e.target));\n\t\t\t\t\tApp.Fields.MultiEmail.parseToJSON($multiEmailField);\n\t\t\t\t});\n\t\t\t\t$multiEmailField.on('click', '.js-multi-email-add', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.addItem($multiEmailField);\n\t\t\t\t});\n\t\t\t\t$multiEmailField.on('click', '.js-multi-email-remove', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.removeItem($(e.target));\n\t\t\t\t\tApp.Fields.MultiEmail.parseToJSON($multiEmailField);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Converts data to json and set MultiEmail field value\n\t\t * @param $multiEmailField\n\t\t */\n\t\tparseToJSON($multiEmailField) {\n\t\t\tlet value = [];\n\t\t\t$('.js-multi-email-item', $multiEmailField).each((idx, item) => {\n\t\t\t\tlet $item = $(item);\n\t\t\t\tlet email = $('.js-multi-email', $item).val();\n\t\t\t\tlet consent = $('.js-multi-email-consent', $item).is(':visible') ? 1 : 0;\n\t\t\t\tif (email) {\n\t\t\t\t\tvalue.push({\n\t\t\t\t\t\te: email,\n\t\t\t\t\t\to: consent\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\t$('.js-multi-email-value', $multiEmailField).val(JSON.stringify(value));\n\t\t},\n\t\t/**\n\t\t * Adds a new item: email box and consent checkbox\n\t\t * @param $multiEmailField\n\t\t */\n\t\taddItem($multiEmailField) {\n\t\t\tlet $newItem = $('.js-multi-email-item', $multiEmailField).first().clone(false, false);\n\t\t\tif ($newItem) {\n\t\t\t\t$('.js-multi-email', $newItem).attr('value', '').val('');\n\t\t\t\t$('.js-multi-email-consent', $newItem).val('');\n\t\t\t\t$('.js-multi-email-consenticon', $newItem).hide();\n\t\t\t\t$('.js-multi-email-consenticon', $newItem).first().show();\n\t\t\t\t$('.js-multi-email-items', $multiEmailField).append($newItem);\n\t\t\t\t$('.js-multi-email-remove', $multiEmailField).show();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Removes an item: email box and consent checkbox\n\t\t * @param $deleteBtn\n\t\t */\n\t\tremoveItem($deleteBtn) {\n\t\t\tlet $multiEmailField = $deleteBtn.closest('.js-multi-email');\n\t\t\tif (1 < $('.js-multi-email-item', $multiEmailField).length) {\n\t\t\t\t$deleteBtn.closest('.js-multi-email-item').remove();\n\t\t\t}\n\t\t\tif (1 == $('.js-multi-email-item', $multiEmailField).length) {\n\t\t\t\t$('.js-multi-email-remove', $multiEmailField).hide();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Toggle consent boxes\n\t\t * @param $consentBox\n\t\t */\n\t\ttoggleConsent($consentBox) {\n\t\t\tlet $item = $consentBox.closest('.js-multi-email-item');\n\t\t\t$('.js-multi-email-consenticon', $item).toggle();\n\t\t}\n\t},\n\tMultiDependField: {\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tregister(container) {\n\t\t\tcontainer.find('.js-multi-field').each((index, element) => {\n\t\t\t\tconst inputElement = $(element);\n\t\t\t\tconst fields = inputElement.find('.js-multi-field-val').data('fields');\n\t\t\t\tinputElement.find('.js-multi-field-add-item').on('click', (e) => {\n\t\t\t\t\tApp.Fields.MultiDependField.addRow(inputElement, fields);\n\t\t\t\t});\n\t\t\t\tApp.Fields.MultiDependField.registerRow(inputElement, fields);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register row\n\t\t * @param {jQuery} inputElement\n\t\t * @param {Object} fields\n\t\t */\n\t\tregisterRow(inputElement, fields) {\n\t\t\tfor (let i in fields) {\n\t\t\t\tinputElement.find('[name=\"' + fields[i] + '\"]').on('change', (e) => {\n\t\t\t\t\tApp.Fields.MultiDependField.parseToJson(inputElement, fields);\n\t\t\t\t});\n\t\t\t}\n\t\t\tinputElement.find('.js-remove-item').on('click', (e) => {\n\t\t\t\tApp.Fields.MultiDependField.removeRow($(e.target), inputElement);\n\t\t\t\tApp.Fields.MultiDependField.parseToJson(inputElement.closest('.js-multi-field'), fields);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Invoked after clicking the remove button\n\t\t * @param {jQuery} element\n\t\t * @param {jQuery} container\n\t\t */\n\t\tremoveRow(element, container) {\n\t\t\tif (container.find('.js-multi-field-row').length > 1) {\n\t\t\t\telement.closest('.js-multi-field-row').remove();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Convert data to json\n\t\t * @param {jQuery} element\n\t\t * @param {Object} fields\n\t\t */\n\t\tparseToJson(element, fields) {\n\t\t\tlet arr = [];\n\t\t\tlet allFields = $(element).find('.js-multi-field-row');\n\t\t\tlet arrayLength = allFields.length;\n\t\t\tfor (let i = 0; i < arrayLength; ++i) {\n\t\t\t\tlet partData = {},\n\t\t\t\t\tskip = false;\n\t\t\t\tfor (let k in fields) {\n\t\t\t\t\tpartData[fields[k]] = $(allFields[i])\n\t\t\t\t\t\t.find('[name=\"' + fields[k] + '\"]')\n\t\t\t\t\t\t.val();\n\t\t\t\t\tif (k == 0 && partData[fields[k]] === '') {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tarr.push(partData);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$(element).find('input.js-multi-field-val').val(JSON.stringify(arr));\n\t\t},\n\t\t/**\n\t\t * Invoked after clicking the add button\n\t\t * @param {jQuery} container\n\t\t * @param {Object} fields\n\t\t */\n\t\taddRow(container, fields) {\n\t\t\tlet newField;\n\t\t\tlet lastField = container.find('.js-multi-field-row').last();\n\t\t\tlet selectFields = lastField.find('select.select2');\n\t\t\tif (selectFields.length) {\n\t\t\t\tselectFields.select2('destroy').removeAttr('data-select2-id').find('option').removeAttr('data-select2-id');\n\t\t\t\tnewField = lastField.clone(false, false);\n\t\t\t\tApp.Fields.Picklist.showSelect2ElementView(lastField.find('select.select2'));\n\t\t\t} else {\n\t\t\t\tnewField = lastField.clone(false, false);\n\t\t\t}\n\t\t\tfor (let i in fields) {\n\t\t\t\tnewField.find('[name=\"' + fields[i] + '\"]').val('');\n\t\t\t}\n\t\t\tnewField.insertAfter(container.find('.js-multi-field-row').last());\n\t\t\tApp.Fields.Picklist.showSelect2ElementView(newField.find('select.select2'));\n\t\t\tApp.Fields.Date.register(newField);\n\t\t\tApp.Fields.MultiDependField.registerRow(container, fields);\n\t\t}\n\t},\n\tDependentSelect: {\n\t\t/**\n\t\t * Get options for select from array of items (exclude children)\n\t\t * @param {Array} data {value,text,selected, children => data[]}\n\t\t * @returns {string}\n\t\t */\n\t\tgenerateOptionsFromData(data) {\n\t\t\tlet html = '';\n\t\t\tfor (let item of data) {\n\t\t\t\tlet selected = false;\n\t\t\t\tif (typeof item.selected !== 'undefined' && item.selected) {\n\t\t\t\t\tselected = true;\n\t\t\t\t}\n\t\t\t\thtml += `<option value=${item.value}${selected ? ' selected' : ''}>${item.text}</option>`;\n\t\t\t}\n\t\t\treturn html;\n\t\t},\n\t\t/**\n\t\t * Register dependent selects\n\t\t *\n\t\t * @param {jQuery} container with data- options:\n\t\t * data-slave: selector for slave element\n\t\t * data-data: array of options with children elements for slave select (see getOptions for data format)\n\t\t * data-sort: do we want to sort slave options by text when master has two items selected? if not - just append options to slave\n\t\t */\n\t\tregister(container) {\n\t\t\tif (typeof container === 'undefined' || typeof container.length === 'undefined' || !container.length) {\n\t\t\t\treturn app.errorLog('Dependend select field container is missing.');\n\t\t\t}\n\t\t\tcontainer.each(function () {\n\t\t\t\tconst masterSelect = $(this),\n\t\t\t\t\tslaveSelect = $(masterSelect.data('slave')),\n\t\t\t\t\tdata = masterSelect.data('data');\n\t\t\t\tif (!slaveSelect.length) {\n\t\t\t\t\treturn app.errorLog('Could not find slave select element (data-slave attribute)');\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn app.errorLog('Could not load data (data-data attribute)');\n\t\t\t\t}\n\t\t\t\tmasterSelect.on('change', (e) => {\n\t\t\t\t\tlet values = $(e.target).val();\n\t\t\t\t\tif (!Array.isArray(values)) {\n\t\t\t\t\t\tvalues = [values];\n\t\t\t\t\t}\n\t\t\t\t\tlet children = [];\n\t\t\t\t\tfor (let value of values) {\n\t\t\t\t\t\tfor (let item of data) {\n\t\t\t\t\t\t\tif (item.value === value) {\n\t\t\t\t\t\t\t\tif (typeof item.children !== 'undefined') {\n\t\t\t\t\t\t\t\t\titem.children.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchildren.push(child);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (masterSelect.data('sort')) {\n\t\t\t\t\t\tchildren.sort((a, b) => {\n\t\t\t\t\t\t\treturn a.text.localeCompare(b.text);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tslaveSelect.html(App.Fields.DependentSelect.generateOptionsFromData(children));\n\t\t\t\t});\n\t\t\t\tmasterSelect.html(App.Fields.DependentSelect.generateOptionsFromData(data));\n\t\t\t});\n\t\t}\n\t},\n\tGantt: {\n\t\tregister(container, data) {\n\t\t\treturn new GanttField(container, data);\n\t\t}\n\t},\n\tInteger: {\n\t\t/**\n\t\t * Function returns the integer in user specified format.\n\t\t * @param {number} value\n\t\t * @param {int} numberOfDecimal\n\t\t * @returns {string}\n\t\t */\n\t\tformatToDisplay(value) {\n\t\t\tif (!value) {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tlet groupSeparator = CONFIG.currencyGroupingSeparator;\n\t\t\tlet groupingPattern = CONFIG.currencyGroupingPattern;\n\t\t\tvalue = parseFloat(value).toFixed(1);\n\t\t\tlet integer = value.toString().split('.')[0];\n\t\t\tif (integer.length > 3) {\n\t\t\t\tif (groupingPattern === '123,456,789') {\n\t\t\t\t\tinteger = integer.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + groupSeparator);\n\t\t\t\t} else if (groupingPattern === '123456,789') {\n\t\t\t\t\tinteger = integer.slice(0, -3) + groupSeparator + integer.slice(-3);\n\t\t\t\t} else if (groupingPattern === '12,34,56,789') {\n\t\t\t\t\tinteger =\n\t\t\t\t\t\tinteger.slice(0, -3).replace(/(\\d)(?=(\\d\\d)+(?!\\d))/g, '$1' + groupSeparator) +\n\t\t\t\t\t\tgroupSeparator +\n\t\t\t\t\t\tinteger.slice(-3);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn integer;\n\t\t}\n\t},\n\tDouble: {\n\t\t/**\n\t\t * Function returns the currency in user specified format.\n\t\t * @param {number} value\n\t\t * @param {boolean} numberOfDecimal\n\t\t * @param {int} numberOfDecimal\n\t\t * @returns {string}\n\t\t */\n\t\tformatToDisplay(value, fixed = true, numberOfDecimal = CONFIG.noOfCurrencyDecimals) {\n\t\t\tif (!value) {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tlet strDecimal = value.toString().split('.')[1];\n\t\t\tlet numberOfZerosAtTheEnd = 0;\n\t\t\tif (typeof strDecimal !== 'undefined') {\n\t\t\t\tfor (let i = strDecimal.length - 1; i > 0; --i) {\n\t\t\t\t\tif (strDecimal[i] == '0') {\n\t\t\t\t\t\tnumberOfZerosAtTheEnd++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = parseFloat(value);\n\t\t\tif (fixed) {\n\t\t\t\tlet base = 10 ** numberOfDecimal;\n\t\t\t\tvalue =\n\t\t\t\t\tMath.round(\n\t\t\t\t\t\tvalue * base + Math.sign(value) * 0.1 ** (17 - 2 - (Math.round(value * base) / base).toString().length)\n\t\t\t\t\t) / base;\n\t\t\t}\n\t\t\tlet splittedFloat = value.toString().split('.');\n\t\t\tlet integer = splittedFloat[0];\n\t\t\tif (integer !== '-0' && integer !== '0') {\n\t\t\t\tinteger = App.Fields.Integer.formatToDisplay(integer);\n\t\t\t}\n\t\t\tlet decimal = splittedFloat[1];\n\t\t\tif (numberOfDecimal) {\n\t\t\t\tif (!CONFIG.truncateTrailingZeros && decimal) {\n\t\t\t\t\tfor (let i = 0; i < numberOfZerosAtTheEnd && decimal.length < numberOfDecimal; ++i) {\n\t\t\t\t\t\tdecimal += '0';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (decimal) {\n\t\t\t\t\treturn integer + CONFIG.currencyDecimalSeparator + decimal;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn integer;\n\t\t},\n\t\t/**\n\t\t * Function to get value for db format.\n\t\t * @param {string} value\n\t\t * @returns {number}\n\t\t */\n\t\tformatToDb(value) {\n\t\t\tif (value == undefined || value == '') {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tvalue = value.toString();\n\t\t\tvalue = value.split(CONFIG.currencyGroupingSeparator).join('');\n\t\t\tvalue = value.replace(/\\s/g, '').replace(CONFIG.currencyDecimalSeparator, '.');\n\t\t\treturn parseFloat(value);\n\t\t}\n\t},\n\t/**\n\t * Tree\n\t */\n\tTree: class Tree {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-tree-container')) {\n\t\t\t\treturn new Tree(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-tree-container').each((n, e) => {\n\t\t\t\tinstances.push(new Tree($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\tthis.modalEvent();\n\t\t\tthis.autoCompleteEvent();\n\t\t\tthis.clearSelectionEvent();\n\t\t}\n\t\t/**\n\t\t * Function which will handle modal view with tree\n\t\t */\n\t\tmodalEvent() {\n\t\t\t$('.js-tree-modal', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (_) => {\n\t\t\t\t\tlet sourceFieldElement = this.container.find('input.sourceField'),\n\t\t\t\t\t\tfieldDisplayElement = this.container.find('input[name=\"' + sourceFieldElement.attr('name') + '_display\"]');\n\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\tmodule: sourceFieldElement.data('modulename'),\n\t\t\t\t\t\tview: 'TreeModal',\n\t\t\t\t\t\ttemplate: sourceFieldElement.data('treetemplate'),\n\t\t\t\t\t\tfieldName: sourceFieldElement.attr('name'),\n\t\t\t\t\t\tmultiple: sourceFieldElement.data('multiple'),\n\t\t\t\t\t\tvalue: sourceFieldElement.val()\n\t\t\t\t\t}).done(function (requestData) {\n\t\t\t\t\t\tapp.modalEvents['treeModal'] = function (modal, instance) {\n\t\t\t\t\t\t\tinstance.setSelectEvent((responseData) => {\n\t\t\t\t\t\t\t\tsourceFieldElement.val(responseData.id);\n\t\t\t\t\t\t\t\tfieldDisplayElement.val(responseData.name).attr('readonly', true);\n\t\t\t\t\t\t\t\tsourceFieldElement.trigger('change');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\tapp.showModalWindow(requestData, { modalId: 'treeModal' });\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Function which will handle the reference auto complete event registrations\n\t\t */\n\t\tautoCompleteEvent() {\n\t\t\tlet autoCompleteElement = $('input.treeAutoComplete', this.container);\n\t\t\tif (autoCompleteElement.hasClass('ui-autocomplete-input')) {\n\t\t\t\tautoCompleteElement.autocomplete('destroy');\n\t\t\t}\n\t\t\tautoCompleteElement.autocomplete({\n\t\t\t\tdelay: '600',\n\t\t\t\tminLength: '3',\n\t\t\t\tsource: function (request, response) {\n\t\t\t\t\tlet inputElement = $(this.element[0]);\n\t\t\t\t\tlet searchValue = request.term.toLowerCase();\n\t\t\t\t\tlet parentElem = inputElement.closest('.js-tree-container');\n\t\t\t\t\tlet sourceFieldElement = $('input.sourceField', parentElem);\n\t\t\t\t\tlet fieldInfo = sourceFieldElement.data('fieldinfo');\n\t\t\t\t\tlet allValues = fieldInfo.picklistvalues;\n\t\t\t\t\tlet responseDataList = [];\n\t\t\t\t\tfor (let id in allValues) {\n\t\t\t\t\t\tif (allValues[id].toLowerCase().indexOf(searchValue) >= 0) {\n\t\t\t\t\t\t\tresponseDataList.push({ label: allValues[id], value: id, id: id });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (responseDataList.length <= 0) {\n\t\t\t\t\t\t$(inputElement).val('');\n\t\t\t\t\t\tresponseDataList.push({\n\t\t\t\t\t\t\tlabel: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\t\t\t\ttype: 'no results'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tresponse(responseDataList);\n\t\t\t\t},\n\t\t\t\tselect: function (event, ui) {\n\t\t\t\t\tlet selectedItemData = ui.item;\n\t\t\t\t\tif (typeof selectedItemData.type !== 'undefined' && selectedItemData.type == 'no results') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tselectedItemData.name = selectedItemData.value;\n\t\t\t\t\tthis.value = selectedItemData.label;\n\t\t\t\t\tlet element = $(this).attr('readonly', true);\n\t\t\t\t\telement.closest('.js-tree-container').find('input.sourceField').val(selectedItemData.id).trigger('change');\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\tchange: function (event, ui) {},\n\t\t\t\topen: function (event, ui) {\n\t\t\t\t\t//To Make the menu come up in the case of quick create\n\t\t\t\t\t$(this).data('ui-autocomplete').menu.element.css('z-index', '100001');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Function which will register reference field clear event\n\t\t */\n\t\tclearSelectionEvent() {\n\t\t\t$('.clearTreeSelection', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tlet fieldElement = this.container.find('.sourceField');\n\t\t\t\t\t$('input[name=\"' + fieldElement.attr('name') + '_display\"]', this.container)\n\t\t\t\t\t\t.removeAttr('readonly')\n\t\t\t\t\t\t.val('');\n\t\t\t\t\tfieldElement.val('').trigger('change');\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t}\n\t},\n\t/**\n\t * TimePeriod class\n\t *\n\t * Save value as time period in 00:m format where '0' is a number of units\n\t * ':' is just separator\n\t * and 'm' is time scale/period in php date format - available formats are [m, d, H, i, s]\n\t * @example 10:i = 10 minutes, 2:m = 2 months, 20:H = 20 hours and so on...\n\t */\n\tTimePeriod: class TimePeriod {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.value = container.val();\n\t\t\tif (this.value) {\n\t\t\t\tconst split = this.value.split(':');\n\t\t\t\tthis.time = Number(split[0]);\n\t\t\t\tthis.period = split[1];\n\t\t\t} else {\n\t\t\t\tthis.time = 0;\n\t\t\t\tthis.period = 'H';\n\t\t\t\tthis.value = '0:H';\n\t\t\t\tcontainer.val(this.value);\n\t\t\t}\n\t\t\tthis.injectContent();\n\t\t}\n\n\t\t/**\n\t\t * Register time period field/s\n\t\t *\n\t\t * @param {jQuery} container it could be input type hidden with js-time-period class\n\t\t *                           or container that contains multiple js-time-period inputs\n\t\t *\n\t\t * @example <input type=\"hidden\" name=\"field_name\" class=\"js-time-period\">\n\t\t *\n\t\t * @returns {TimePeriod|TimePeriod[]} instance/s\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('c-time-period')) {\n\t\t\t\treturn new TimePeriod(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.c-time-period').each((index, value) => {\n\t\t\t\tinstances.push(new TimePeriod($(value)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\n\t\t/**\n\t\t * Inject content next to container\n\t\t *\n\t\t * @returns  {jQuery}  created element with input and select\n\t\t */\n\t\tinjectContent() {\n\t\t\tlet content = `<div class=\"input-group c-time-period\" data-js=\"container\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<a href class=\"btn btn-default c-time-period-input-modifier c-time-period-input-modifier--minus-1\"><span class=\"fas fa-minus\"></span></a>\n\t\t\t\t</div>\n\t\t\t\t<input type=\"number\" class=\"form-control c-time-period-input\" min=\"0\" value=\"${this.time}\"\n\t\t\t\t\tdata-validation-engine=\"validate[required,funcCall[Vtiger_Integer_Validator_Js.invokeValidation]]\">\n\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t<a href class=\"btn btn-default c-time-period-input-modifier c-time-period-input-modifier--plus-1\"><span class=\"fas fa-plus\"></span></a>\n\t\t\t\t\t<select class=\"select2 js-time-period-select time-period-${this.container.attr('name')}\">\n\t\t\t\t\t\t<option value=\"d\"${this.period === 'd' ? ' selected=\"selected\"' : ''}>${app.vtranslate('JS_DAYS_FULL')}</option>\n\t\t\t\t\t\t<option value=\"H\"${this.period === 'H' ? ' selected=\"selected\"' : ''}>${app.vtranslate('JS_HOURS_FULL')}</option>\n\t\t\t\t\t\t<option value=\"i\"${this.period === 'i' ? ' selected=\"selected\"' : ''}>${app.vtranslate('JS_MINUTES_FULL')}</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>`;\n\t\t\tthis.element = this.container.parent().append(content);\n\t\t\tthis.input = this.element.find('.c-time-period-input').eq(0);\n\t\t\tthis.select = this.element.find('.select2').eq(0);\n\t\t\tthis.plus1btn = this.element.find('.c-time-period-input-modifier--plus-1').eq(0);\n\t\t\tthis.minus1btn = this.element.find('.c-time-period-input-modifier--minus-1').eq(0);\n\t\t\tApp.Fields.Picklist.showSelect2ElementView(this.select, { width: '100px' });\n\t\t\tthis.registerEvents();\n\t\t\treturn this.element;\n\t\t}\n\n\t\t/**\n\t\t * Register events\n\t\t */\n\t\tregisterEvents() {\n\t\t\tthis.input.on('input', this.onChange.bind(this));\n\t\t\tthis.select.on('change', this.onChange.bind(this));\n\t\t\tthis.plus1btn.on('click', this.onPlus1Click.bind(this));\n\t\t\tthis.minus1btn.on('click', this.onMinus1Click.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * On change event\n\t\t *\n\t\t * @param {Event} event\n\t\t */\n\t\tonChange(event) {\n\t\t\tthis.time = this.input.val();\n\t\t\tthis.period = this.select.val();\n\t\t\tthis.value = this.input.val() + ':' + this.select.val();\n\t\t\tthis.container.val(this.value);\n\t\t}\n\n\t\t/**\n\t\t * Plus 1 button click event handler\n\t\t *\n\t\t * @param {Event} event\n\t\t */\n\t\tonPlus1Click(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.input.val(Number(this.input.val()) + 1);\n\t\t\tthis.onChange();\n\t\t}\n\n\t\t/**\n\t\t * Minus 1 button click event handler\n\t\t *\n\t\t * @param {Event} event\n\t\t */\n\t\tonMinus1Click(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif (Number(this.input.val()) > 0) {\n\t\t\t\tthis.input.val(Number(this.input.val()) - 1);\n\t\t\t\tthis.onChange();\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Multi currency\n\t */\n\tMultiCurrency: class MultiCurrency {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-multicurrency-container')) {\n\t\t\t\treturn new MultiCurrency(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-multicurrency-container').each((n, e) => {\n\t\t\t\tinstances.push(new MultiCurrency($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\t$('.js-multicurrency-event', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tlet modal = $('<form>').append(this.container.find('.js-currencies-container .js-currencies-modal').clone());\n\t\t\t\t\tthis.registerEnableCurrencyEvent(modal);\n\t\t\t\t\tthis.registerResetCurrencyEvent(modal);\n\t\t\t\t\tthis.loadData(modal);\n\t\t\t\t\tthis.calculateConversionRate(modal);\n\t\t\t\t\tapp.showModalWindow({\n\t\t\t\t\t\tdata: modal,\n\t\t\t\t\t\tcss: {},\n\t\t\t\t\t\tcb: (data) => {\n\t\t\t\t\t\t\tlet form = data.parent();\n\t\t\t\t\t\t\tform.validationEngine(app.validationEngineOptionsForRecord);\n\t\t\t\t\t\t\tform.on('submit', (e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif (form.validationEngine('validate') && this.saveCurrencies(form)) {\n\t\t\t\t\t\t\t\t\tlet id = form.closest('.js-modal-container').attr('id');\n\t\t\t\t\t\t\t\t\tapp.hideModalWindow(null, id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tthis.getField().on('focusout', (e) => {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\telement.formatNumber();\n\t\t\t\tthis.setPrice(element.val());\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Loading data\n\t\t * @param {jQuery} modalContainer\n\t\t */\n\t\tloadData(modalContainer) {\n\t\t\tlet values = JSON.parse(this.getFieldToSave().val());\n\t\t\tlet baseCurrencyId = values['currencyId'] || CONFIG.currencyId;\n\t\t\tif (values['currencies'] === undefined) {\n\t\t\t\tvalues['currencies'] = [];\n\t\t\t\tvalues['currencies'][baseCurrencyId] = { price: 0 };\n\t\t\t}\n\t\t\tfor (let i in values['currencies']) {\n\t\t\t\tlet row = modalContainer.find('[data-currency-id=\"' + i + '\"]');\n\t\t\t\tif (row.length) {\n\t\t\t\t\trow.find('.js-enable-currency').prop('checked', true);\n\t\t\t\t\trow.find('.js-currency-reset,.js-base-currency,[name^=\"currencies[\"]').prop('disabled', false);\n\t\t\t\t\trow.find('.js-converted-price').val(values['currencies'][i]['price']);\n\t\t\t\t\tif (i == baseCurrencyId) {\n\t\t\t\t\t\trow.find('.js-base-currency').prop('checked', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Set value\n\t\t * @param {number} value\n\t\t */\n\t\tsetPrice(value) {\n\t\t\tlet values = JSON.parse(this.getFieldToSave().val());\n\t\t\tlet baseCurrencyId = values['currencyId'] || CONFIG.currencyId;\n\t\t\tvalues['currencies'] = values['currencies'] || {};\n\t\t\tvalues['currencies'][baseCurrencyId] = { price: value };\n\t\t\tvalues['currencyId'] = baseCurrencyId;\n\t\t\tvalues = $.extend({}, values);\n\t\t\tthis.getFieldToSave().val(JSON.stringify($.extend({}, values)));\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-multicurrency-field');\n\t\t}\n\t\t/**\n\t\t * Gets field to save\n\t\t */\n\t\tgetFieldToSave() {\n\t\t\treturn this.container.find('.js-multicurrency-field-to-save');\n\t\t}\n\t\t/**\n\t\t * Save\n\t\t * @param {jQuery} modalContainer\n\t\t */\n\t\tsaveCurrencies(modalContainer) {\n\t\t\tlet enabledBaseCurrency = modalContainer.find('.js-enable-currency').filter(':checked');\n\t\t\tif (enabledBaseCurrency.length < 1) {\n\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\ttext: app.vtranslate('JS_PLEASE_SELECT_BASE_CURRENCY_FOR_PRODUCT'),\n\t\t\t\t\ttype: 'error'\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet selectedBaseCurrency = modalContainer.find('.js-base-currency').filter(':checked');\n\t\t\tif (selectedBaseCurrency.length < 1) {\n\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\ttext: app.vtranslate('JS_PLEASE_ENABLE_BASE_CURRENCY_FOR_PRODUCT'),\n\t\t\t\t\ttype: 'error'\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet selectedRow = selectedBaseCurrency.closest('tr');\n\t\t\tlet symbol = selectedRow.data('currency-symbol');\n\t\t\tthis.container.find('.js-currency').text(symbol);\n\t\t\tlet data = {};\n\t\t\tdata['currencies'] = {};\n\t\t\tenabledBaseCurrency.closest('tr').each((n, e) => {\n\t\t\t\tlet row = $(e),\n\t\t\t\t\tcurrencyId = row.data('currencyId');\n\t\t\t\tdata['currencies'][currencyId] = {};\n\t\t\t\tdata['currencies'][currencyId]['price'] = row.find('.js-converted-price').val();\n\t\t\t\tif (row.find('.js-base-currency:checked').length) {\n\t\t\t\t\tdata['currencyId'] = currencyId;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.getFieldToSave().val(JSON.stringify(data));\n\t\t\tthis.getField().val(selectedRow.find('.js-converted-price').val());\n\t\t\tselectedBaseCurrency.prop('checked', false);\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * Calculate\n\t\t * @param {jQuery} container\n\t\t */\n\t\tcalculateConversionRate(container) {\n\t\t\tlet baseCurrencyConversionRate = container\n\t\t\t\t.find('.js-base-currency')\n\t\t\t\t.filter(':checked')\n\t\t\t\t.closest('tr')\n\t\t\t\t.find('.js-conversion-rate');\n\t\t\tif (baseCurrencyConversionRate.val() == '1') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet baseCurrencyRatePrevValue = baseCurrencyConversionRate.getNumberFromValue();\n\t\t\tcontainer.find('.js-conversion-rate').each(function (key, domElement) {\n\t\t\t\tlet element = $(domElement);\n\t\t\t\tif (!element.is(baseCurrencyConversionRate)) {\n\t\t\t\t\telement.val(\n\t\t\t\t\t\tApp.Fields.Double.formatToDisplay(element.getNumberFromValue() / baseCurrencyRatePrevValue, false)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tbaseCurrencyConversionRate.val('1');\n\t\t}\n\t\t/**\n\t\t * Function to register event for enabling currency on checkbox checked\n\t\t * @param {jQuery} container\n\t\t */\n\t\tregisterEnableCurrencyEvent(container) {\n\t\t\tcontainer.on('change', '.js-enable-currency', (e) => {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet parentRow = element.closest('tr');\n\t\t\t\tif (element.is(':checked')) {\n\t\t\t\t\telement.attr('checked', 'checked');\n\t\t\t\t\tlet price = this.getField().getNumberFromValue() * parentRow.find('.js-conversion-rate').getNumberFromValue();\n\t\t\t\t\t$('input', parentRow).removeAttr('disabled');\n\t\t\t\t\tparentRow.find('.js-currency-reset').removeAttr('disabled');\n\t\t\t\t\tparentRow.find('.js-converted-price').val(App.Fields.Double.formatToDisplay(price));\n\t\t\t\t} else {\n\t\t\t\t\tif (parentRow.find('.js-base-currency').is(':checked')) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\t'\"' +\n\t\t\t\t\t\t\t\tparentRow.find('.js-currency-name').text() +\n\t\t\t\t\t\t\t\t'\" ' +\n\t\t\t\t\t\t\t\tapp.vtranslate('JS_BASE_CURRENCY_CHANGED_TO_DISABLE_CURRENCY')\n\t\t\t\t\t\t});\n\t\t\t\t\t\telement.prop('checked', true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tparentRow.find('input').attr('disabled', 'disabled');\n\t\t\t\t\tparentRow.find('.js-currency-reset').attr('disabled', 'disabled');\n\t\t\t\t\telement.removeAttr('disabled checked');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Function to register event for reseting the currencies\n\t\t * @param {jQuery} container\n\t\t */\n\t\tregisterResetCurrencyEvent(container) {\n\t\t\tcontainer.on('click', '.js-currency-reset', (e) => {\n\t\t\t\tlet parentElem = $(e.currentTarget).closest('tr');\n\t\t\t\tlet price = this.getField().getNumberFromValue() * parentElem.find('.js-conversion-rate').getNumberFromValue();\n\t\t\t\t$('.js-converted-price', parentElem).val(App.Fields.Double.formatToDisplay(price));\n\t\t\t});\n\t\t}\n\t},\n\t/**\n\t * Meeting URL\n\t */\n\tMeetingUrl: class MeetingUrl {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-meeting-container')) {\n\t\t\t\treturn new MeetingUrl(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-meeting-container').each((n, e) => {\n\t\t\t\tinstances.push(new MeetingUrl($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\tlet addButton = $('.js-meeting-add', this.container);\n\t\t\tif (!addButton.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet valElement = $('.js-meeting-val', this.container);\n\t\t\taddButton.off('click').on('click', (e) => {\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tAppConnector.request(this.getUrl(e))\n\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\tlet result = data.result;\n\t\t\t\t\t\tif (result && result.success && result.url) {\n\t\t\t\t\t\t\tvalElement.attr('readonly', true).val(result.url);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t})\n\t\t\t\t\t.fail((_) => {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t});\n\t\t\t});\n\t\t\t$('.js-meeting-clear', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tvalElement.attr('readonly', false).val('');\n\t\t\t\t});\n\t\t\tthis.addEventsForDependentFields();\n\t\t}\n\t\t/**\n\t\t * Gets URL\n\t\t */\n\t\tgetUrl(e) {\n\t\t\tlet url = e.currentTarget.dataset.url;\n\t\t\tlet formData = $(e.currentTarget).closest('form').serializeFormData();\n\t\t\tlet expField = e.currentTarget.dataset.expField;\n\t\t\tif (expField && formData && formData[expField]) {\n\t\t\t\tlet date = formData[expField].split(' ');\n\t\t\t\turl += '&exp=' + encodeURIComponent(date[0]);\n\t\t\t}\n\t\t\tlet roomName = e.currentTarget.dataset.roomName;\n\t\t\tif (roomName && formData && formData[roomName]) {\n\t\t\t\turl += '&roomName=' + encodeURIComponent(formData[roomName]);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t\t/**\n\t\t * Add events for dependent fields\n\t\t */\n\t\taddEventsForDependentFields() {\n\t\t\tlet addButton = $('.js-meeting-add', this.container);\n\t\t\tlet valElement = $('.js-meeting-val', this.container);\n\t\t\tlet data = addButton.data();\n\t\t\tlet formElement = this.container.closest('form');\n\t\t\tfor (let name of ['expField', 'roomName']) {\n\t\t\t\tlet fieldName = data[name];\n\t\t\t\tif (!fieldName) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tformElement.on('change', `[name=${fieldName}]`, (_) => {\n\t\t\t\t\tif (data['domain'] && valElement.val().indexOf(data['domain']) === 0) {\n\t\t\t\t\t\taddButton.trigger('click');\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_MEETING_URL_CHANGED')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Changes Json\n\t */\n\tChangesJson: class ChangesJson {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-changesjson-container')) {\n\t\t\t\treturn new ChangesJson(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-changesjson-container').each((_, e) => {\n\t\t\t\tinstances.push(new ChangesJson($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\t$('.js-changesjson-edit', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tlet field = this.getField();\n\t\t\t\t\tlet value = field.val() ? JSON.parse(field.val()) : { record: 0, module: '', changes: [] };\n\t\t\t\t\tlet relatedField = this.getRelatedField();\n\t\t\t\t\tif (relatedField.length) {\n\t\t\t\t\t\tvalue.record = relatedField.val();\n\t\t\t\t\t\tvalue.module = $('input[name=\"popupReferenceModule\"]', relatedField.closest('.fieldValue')).val();\n\t\t\t\t\t}\n\t\t\t\t\tif (!value.record || value.record == 0) {\n\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_LACK_INFORMATION_ABOUT_RECORD') });\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\tmodule: value.module,\n\t\t\t\t\t\trecord: value.record,\n\t\t\t\t\t\tchanges: value.changes,\n\t\t\t\t\t\tsourceModule: field.data('module'),\n\t\t\t\t\t\tsourceField: field.attr('name'),\n\t\t\t\t\t\tview: 'ChangesJsonModal'\n\t\t\t\t\t})\n\t\t\t\t\t\t.done((requestData) => {\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\tapp.showModalWindow({\n\t\t\t\t\t\t\t\tdata: requestData,\n\t\t\t\t\t\t\t\tcss: {},\n\t\t\t\t\t\t\t\tcb: (data) => {\n\t\t\t\t\t\t\t\t\tthis.saveData(data, value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail((_) => {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Save data to field\n\t\t */\n\t\tsaveData(container, data) {\n\t\t\tlet form = container.find('form');\n\t\t\tcontainer.on('click', '.js-modal__save', (e) => {\n\t\t\t\tif (form.validationEngine('validate')) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (!form.find('input[id^=\"selectRow\"]:checked').length) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_NONE_FIELD_MARKED_IN_MASS_EDIT'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\t\t\tif (invalidFields.length !== 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tform.find('[id^=\"selectRow\"]').each(function (_, checkbox) {\n\t\t\t\t\t\tcheckbox = $(checkbox);\n\t\t\t\t\t\tif (!checkbox.prop('checked')) {\n\t\t\t\t\t\t\tcheckbox\n\t\t\t\t\t\t\t\t.closest('.js-form-row-container')\n\t\t\t\t\t\t\t\t.find('.fieldValue [name]')\n\t\t\t\t\t\t\t\t.each(function (_, element) {\n\t\t\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\t\t\telement.attr('data-element-name', element.attr('name')).removeAttr('name');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tlet changeData = form.serializeFormData();\n\t\t\t\t\tdelete changeData['_csrf'];\n\t\t\t\t\tfor (let fieldName in changeData) {\n\t\t\t\t\t\tif (fieldName.substr(-2) === '[]') {\n\t\t\t\t\t\t\tlet fieldNameShort = fieldName.substr(0, fieldName.length - 2);\n\t\t\t\t\t\t\tchangeData[fieldNameShort] = changeData[fieldName];\n\t\t\t\t\t\t\tdelete changeData[fieldName];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata.changes = changeData;\n\t\t\t\t\tthis.getField().val(JSON.stringify(data));\n\t\t\t\t\tapp.hideModalWindow(null, form.closest('.js-modal-container').attr('id'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-changesjson-value');\n\t\t}\n\t\t/**\n\t\t * Gets related field\n\t\t */\n\t\tgetRelatedField() {\n\t\t\tlet relatedFieldName = this.getField().data('related-field');\n\t\t\treturn this.container.closest('form').find(`[name=${relatedFieldName}]`);\n\t\t}\n\t},\n\t/**\n\t * MultiReference\n\t */\n\tMultiReference: class MultiReference {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-multiReference-container')) {\n\t\t\t\treturn new MultiReference(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-multiReference-container').each((_, e) => {\n\t\t\t\tinstances.push(new MultiReference($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\t$('.js-clear-selection', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tthis.clear();\n\t\t\t\t});\n\t\t\t$('.js-related-popup', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tlet params = {};\n\t\t\t\t\tlet field = this.getField();\n\t\t\t\t\tlet url = field.data('url');\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tparams = this.convertUrl(url);\n\t\t\t\t\t}\n\t\t\t\t\tapp.showRecordsList($.extend(params, this.getParams()), (modal, instance) => {\n\t\t\t\t\t\tinstance.setSelectEvent((data) => {\n\t\t\t\t\t\t\tthis.setReferenceFieldValue(data);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tthis.registerAutoComplete();\n\t\t}\n\t\t/**\n\t\t * Clear selection\n\t\t */\n\t\tclear() {\n\t\t\tlet element = this.getField();\n\t\t\tlet fieldName = element.attr('name');\n\t\t\telement.val('');\n\t\t\tthis.container.find(`#${fieldName}_display`).removeAttr('readonly').val('');\n\t\t}\n\t\t/**\n\t\t * Function which will handle the reference auto complete event registrations\n\t\t */\n\t\tregisterAutoComplete() {\n\t\t\tlet thisInstance = this;\n\t\t\tlet formElement = this.container.closest('form');\n\t\t\tthis.container.find('.js-auto-complete').autocomplete({\n\t\t\t\tdelay: '600',\n\t\t\t\tminLength: '3',\n\t\t\t\tsource: function (request, response) {\n\t\t\t\t\tlet inputElement = $(this.element[0]);\n\t\t\t\t\tlet searchValue = request.term;\n\t\t\t\t\tlet params = {};\n\t\t\t\t\tparams.search_module = $('.js-popup-reference-module', thisInstance.container).val();\n\t\t\t\t\tparams.search_value = searchValue;\n\t\t\t\t\tparams.module = thisInstance.getField().data('module');\n\t\t\t\t\tparams.action = 'BasicAjax';\n\t\t\t\t\tlet sourceRecordElement = $('input[name=\"record\"]', formElement);\n\t\t\t\t\tif (sourceRecordElement.length > 0 && sourceRecordElement.val()) {\n\t\t\t\t\t\tparams.src_record = sourceRecordElement.val();\n\t\t\t\t\t}\n\t\t\t\t\tAppConnector.request(params)\n\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\tlet responseDataList = [];\n\t\t\t\t\t\t\tlet serverDataFormat = data.result;\n\t\t\t\t\t\t\tif (serverDataFormat.length <= 0) {\n\t\t\t\t\t\t\t\t$(inputElement).val('');\n\t\t\t\t\t\t\t\tserverDataFormat = new Array({\n\t\t\t\t\t\t\t\t\tlabel: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\t\t\t\t\t\ttype: 'no results'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (let id in serverDataFormat) {\n\t\t\t\t\t\t\t\tlet responseData = serverDataFormat[id];\n\t\t\t\t\t\t\t\tresponseDataList.push(responseData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresponse(responseDataList);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tselect: function (event, ui) {\n\t\t\t\t\tif (typeof ui.item.type !== 'undefined' && ui.item.type == 'no results') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlet selectedItemData = [];\n\t\t\t\t\tselectedItemData[ui.item.id] = ui.item.value;\n\t\t\t\t\tthisInstance.setReferenceFieldValue(selectedItemData);\n\t\t\t\t},\n\t\t\t\tchange: function (event, ui) {\n\t\t\t\t\tlet element = $(this);\n\t\t\t\t\tif (element.attr('readonly') == undefined) {\n\t\t\t\t\t\tthisInstance.clear();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\topen: function (event, ui) {\n\t\t\t\t\t$(this).data('ui-autocomplete').menu.element.css('z-index', '100001');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Set reference field value\n\t\t * @param {object} data\n\t\t */\n\t\tsetReferenceFieldValue(data) {\n\t\t\tlet sourceField = this.getField(),\n\t\t\t\tfieldName = sourceField.attr('name'),\n\t\t\t\tselectedNames = [],\n\t\t\t\tids = [];\n\t\t\tfor (let index in data) {\n\t\t\t\tids.push(index);\n\t\t\t\tselectedNames.push(data[index]);\n\t\t\t}\n\t\t\tthis.clear();\n\t\t\tsourceField.val(ids.join(','));\n\t\t\tthis.container\n\t\t\t\t.find(`#${fieldName}_display`)\n\t\t\t\t.val(app.decodeHTML(selectedNames.join(', ')))\n\t\t\t\t.attr('readonly', true);\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-source-field');\n\t\t}\n\t\t/**\n\t\t * Convert URL to Object\n\t\t * @param {string} data\n\t\t */\n\t\tconvertUrl(url) {\n\t\t\tlet vars = {};\n\t\t\turl.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (_, key, value) {\n\t\t\t\tvars[key] = value;\n\t\t\t});\n\t\t\treturn vars;\n\t\t}\n\t\t/**\n\t\t * Gets params\n\t\t */\n\t\tgetParams() {\n\t\t\tlet form = this.container.closest('form');\n\t\t\tlet sourceModule = $('input[name=\"module\"]', form).val();\n\t\t\tlet popupReferenceModule = $('.js-popup-reference-module', this.container).val();\n\t\t\tlet sourceField = this.getField();\n\t\t\tlet sourceFieldName = sourceField.attr('name');\n\t\t\tlet sourceRecordElement = $('input[name=\"record\"]', form);\n\t\t\tlet sourceRecordId = '';\n\t\t\tif (sourceRecordElement.length > 0) {\n\t\t\t\tsourceRecordId = sourceRecordElement.val();\n\t\t\t}\n\n\t\t\tlet filterFields = {};\n\t\t\tlet listFilterFieldsJson = form.find('input[name=\"listFilterFields\"]').val();\n\t\t\tlet listFilterFields = listFilterFieldsJson ? JSON.parse(listFilterFieldsJson) : [];\n\t\t\tif (\n\t\t\t\tlistFilterFields[sourceFieldName] != undefined &&\n\t\t\t\tlistFilterFields[sourceFieldName][popupReferenceModule] != undefined\n\t\t\t) {\n\t\t\t\t$.each(listFilterFields[sourceFieldName][popupReferenceModule], function (index, value) {\n\t\t\t\t\tlet mapFieldElement = form.find('[name=\"' + index + '\"]');\n\t\t\t\t\tif (mapFieldElement.length && mapFieldElement.val() != '') {\n\t\t\t\t\t\tfilterFields[index] = mapFieldElement.val();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tmodule: popupReferenceModule,\n\t\t\t\tsrc_module: sourceModule,\n\t\t\t\tsrc_field: sourceFieldName,\n\t\t\t\tsrc_record: sourceRecordId,\n\t\t\t\tfilterFields: filterFields,\n\t\t\t\tmulti_select: sourceField.data('multiple')\n\t\t\t};\n\t\t}\n\t},\n\t/**\n\t * Password\n\t */\n\tPassword: class Password {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-pwd-container')) {\n\t\t\t\treturn new Password(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-pwd-container').each((_, e) => {\n\t\t\t\tinstances.push(new Password($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Get strength meter\n\t\t * @returns {Object}\n\t\t */\n\t\tstatic getStrengthLevels() {\n\t\t\tif (!this.strengthLevels) {\n\t\t\t\tthis.strengthLevels = {\n\t\t\t\t\t0: app.vtranslate('JS_PWD_RIDICULOUS'),\n\t\t\t\t\t1: app.vtranslate('JS_PWD_VERY_WEAK'),\n\t\t\t\t\t2: app.vtranslate('JS_PWD_WEAK'),\n\t\t\t\t\t3: app.vtranslate('JS_PWD_MEDIUM'),\n\t\t\t\t\t4: app.vtranslate('JS_PWD_STRONG'),\n\t\t\t\t\t5: app.vtranslate('JS_PWD_VERY_STRONG')\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn { ...this.strengthLevels };\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\tlet field = this.getField();\n\t\t\t$('.js-pwd-auto-generate', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tthis.getResponse({\n\t\t\t\t\t\tmodule: field.data('module'),\n\t\t\t\t\t\tfield: field.attr('name'),\n\t\t\t\t\t\taction: 'Password',\n\t\t\t\t\t\tmode: 'generatePwd'\n\t\t\t\t\t}).then((response) => {\n\t\t\t\t\t\tif (response.success && response.result && response.result.pwd) {\n\t\t\t\t\t\t\tthis.clear();\n\t\t\t\t\t\t\tfield.val(response.result.pwd).trigger('keyup').focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t$('.js-pwd-validate', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tthis.getResponse({\n\t\t\t\t\t\tmodule: field.data('module'),\n\t\t\t\t\t\tfield: field.attr('name'),\n\t\t\t\t\t\tpassword: field.val(),\n\t\t\t\t\t\taction: 'Password',\n\t\t\t\t\t\tmode: 'validatePwd'\n\t\t\t\t\t}).then((response) => {\n\t\t\t\t\t\tif (response.success && response.result) {\n\t\t\t\t\t\t\tlet message = response.result.message;\n\t\t\t\t\t\t\tif (Array.isArray(message)) {\n\t\t\t\t\t\t\t\tmessage = message.join('<br>');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfield.validationEngine('showPrompt', message, response.result.type, 'topLeft', true);\n\t\t\t\t\t\t\tfield.validationEngine('updatePromptsPosition');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t$('.js-pwd-clear', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tthis.clear();\n\t\t\t\t});\n\t\t\t$('.js-pwd-get', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tlet form = this.container.closest('form');\n\t\t\t\t\tlet recordId = $('input[name=\"record\"]', form).val() || app.getRecordId();\n\t\t\t\t\tthis.getResponse({\n\t\t\t\t\t\tmodule: field.data('module'),\n\t\t\t\t\t\tfield: field.attr('name'),\n\t\t\t\t\t\trecord: recordId,\n\t\t\t\t\t\taction: 'Password',\n\t\t\t\t\t\tmode: 'getPwd'\n\t\t\t\t\t}).then((response) => {\n\t\t\t\t\t\tthis.clear();\n\t\t\t\t\t\tfield.val(response.result.text);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tif (field.data('strengthMeter')) {\n\t\t\t\tfield.off('keyup').on('keyup', (e) => {\n\t\t\t\t\tlet score = this.strengthMeter(e.target.value || '');\n\t\t\t\t\tfield\n\t\t\t\t\t\t.attr('data-original-title', App.Fields.Password.getStrengthLevels()[score])\n\t\t\t\t\t\t.tooltip('show')\n\t\t\t\t\t\t.validationEngine('hide');\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Clear data\n\t\t */\n\t\tclear() {\n\t\t\tthis.getField().val('').attr('disabled', false).tooltip('dispose').validationEngine('hide');\n\t\t\tthis.container.find('.js-pwd-validate, .js-pwd-show').attr('disabled', false);\n\t\t}\n\t\t/**\n\t\t * Get response\n\t\t * @param {Object} params\n\t\t * @returns\n\t\t */\n\t\tgetResponse(params) {\n\t\t\tconst aDeferred = $.Deferred();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\tAppConnector.request(params)\n\t\t\t\t.done((response) => {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\taDeferred.resolve(response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taDeferred.reject(response);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail((_) => {\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\taDeferred.reject(_);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t\t/**\n\t\t * Get strength meter score\n\t\t * @param {string} pwd\n\t\t * @returns {int}\n\t\t */\n\t\tstrengthMeter(pwd) {\n\t\t\tlet score = 0;\n\t\t\tif (pwd.length > 6) score++;\n\t\t\tif (pwd.match(/[a-z]/) && pwd.match(/[A-Z]/)) score++;\n\t\t\tif (pwd.match(/\\d+/)) score++;\n\t\t\tif (pwd.match(/.[!,@,#,$,%,^,&,*,?,_,~,-,(,)]/)) score++;\n\t\t\tif (pwd.length > 12) score++;\n\n\t\t\treturn score;\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-pwd-field');\n\t\t}\n\t},\n\tUtils: {\n\t\tregisterMobileDateRangePicker(element) {\n\t\t\tthis.hideMobileKeyboard(element);\n\t\t\tif (!Quasar.plugins.Platform.is.desktop) {\n\t\t\t\telement\n\t\t\t\t\t.on('showCalendar.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tpicker.container.addClass('js-visible');\n\t\t\t\t\t})\n\t\t\t\t\t.on('hide.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tpicker.container.removeClass('js-visible');\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\thideMobileKeyboard(element) {\n\t\t\tif (!Quasar.plugins.Platform.is.desktop) {\n\t\t\t\telement.attr('readonly', 'true').addClass('bg-white');\n\t\t\t}\n\t\t},\n\t\tpositionPicker(ev, picker) {\n\t\t\tlet offset = picker.element.offset();\n\t\t\tlet $window = $(window);\n\t\t\tif (offset.left - $window.scrollLeft() + picker.container.outerWidth() > $window.width()) {\n\t\t\t\tpicker.opens = 'left';\n\t\t\t} else {\n\t\t\t\tpicker.opens = 'right';\n\t\t\t}\n\t\t\tpicker.move();\n\t\t\tif (offset.top - $window.scrollTop() + picker.container.outerHeight() > $window.height()) {\n\t\t\t\tpicker.drops = 'up';\n\t\t\t} else {\n\t\t\t\tpicker.drops = 'down';\n\t\t\t}\n\t\t\tpicker.move();\n\t\t},\n\t\t/**\n\t\t * Set value\n\t\t *\n\t\t * @param   {object}  fieldElement  jQuery\n\t\t * @param   {string|boolean}  value\n\t\t */\n\t\tsetValue(fieldElement, value) {\n\t\t\tif (fieldElement.is('select')) {\n\t\t\t\tApp.Fields.Picklist.setValue(fieldElement, value);\n\t\t\t} else {\n\t\t\t\tfieldElement.val(value);\n\t\t\t}\n\t\t\tfieldElement.trigger('change');\n\t\t\tlet fieldValue = fieldElement.closest('.fieldValue');\n\t\t\tfieldValue.addClass('border border-info');\n\t\t\tsetTimeout(function () {\n\t\t\t\tfieldValue.removeClass('border border-info');\n\t\t\t}, 5000);\n\t\t}\n\t}\n};\n"], "fixing_code": ["<?php\n\nreturn [\n\t'appVersion' => '6.3.4',\n\t'patchVersion' => '2021.12.13',\n\t'lib_roundcube' => '0.2.3',\n];\n", "<?php\n\n/**\n * Fields Action Class.\n *\n * @package Action\n *\n * @copyright YetiForce Sp. z o.o\n * @license   YetiForce Public License 4.0 (licenses/LicenseEN.txt or yetiforce.com)\n * @author    Mariusz Krzaczkowski <m.krzaczkowski@yetiforce.com>\n * @author    Rados\u0142aw Skrzypczak <r.skrzypczak@yetiforce.com>\n */\nclass Vtiger_Fields_Action extends \\App\\Controller\\Action\n{\n\tuse \\App\\Controller\\ExposeMethod;\n\n\t/**\n\t * Field model instance.\n\t *\n\t * @var Vtiger_Field_Model\n\t */\n\tprotected $fieldModel;\n\n\t/**\n\t * Function to check permission.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function checkPermission(App\\Request $request)\n\t{\n\t\tif ('verifyPhoneNumber' !== $request->getMode()) {\n\t\t\t$currentUserPriviligesModel = Users_Privileges_Model::getCurrentUserPrivilegesModel();\n\t\t\tif (!$currentUserPriviligesModel->hasModulePermission($request->getModule())) {\n\t\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t\t}\n\t\t\tif (!\\App\\Privilege::isPermitted($request->getModule(), 'EditView')) {\n\t\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t\t}\n\t\t}\n\t\tif ('findAddress' !== $request->getMode() && 'getReference' !== $request->getMode()) {\n\t\t\t$this->fieldModel = Vtiger_Module_Model::getInstance($request->getModule())->getFieldByName($request->getByType('fieldName', 2));\n\t\t\tif (!$this->fieldModel || !$this->fieldModel->isEditable()) {\n\t\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD', 406);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\t\t$this->exposeMethod('getOwners');\n\t\t$this->exposeMethod('getReference');\n\t\t$this->exposeMethod('getUserRole');\n\t\t$this->exposeMethod('findAddress');\n\t\t$this->exposeMethod('validate');\n\t\t$this->exposeMethod('verifyPhoneNumber');\n\t\t$this->exposeMethod('verifyIsHolidayDate');\n\t\t$this->exposeMethod('changeFavoriteOwner');\n\t}\n\n\t/**\n\t * Get owners for ajax owners list.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function getOwners(App\\Request $request)\n\t{\n\t\tif (!App\\Config::performance('SEARCH_OWNERS_BY_AJAX')) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t}\n\t\tif ('owner' !== $this->fieldModel->getFieldDataType() && 'sharedOwner' !== $this->fieldModel->getFieldDataType()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t\t$moduleName = $request->getModule();\n\t\t$searchValue = $request->getByType('value', 'Text');\n\t\tif ($request->has('result')) {\n\t\t\t$result = $request->getArray('result', 'Standard');\n\t\t} else {\n\t\t\t$result = ['users', 'groups'];\n\t\t}\n\t\t$response = new Vtiger_Response();\n\t\tif (empty($searchValue)) {\n\t\t\t$response->setResult(['items' => []]);\n\t\t} else {\n\t\t\t$owner = App\\Fields\\Owner::getInstance($moduleName);\n\t\t\t$owner->find($searchValue);\n\n\t\t\t$data = [];\n\t\t\tif (\\in_array('users', $result)) {\n\t\t\t\t$users = $owner->getAccessibleUsers('', 'owner');\n\t\t\t\tif (!empty($users)) {\n\t\t\t\t\t$data[] = ['name' => \\App\\Language::translate('LBL_USERS'), 'type' => 'optgroup'];\n\t\t\t\t\tforeach ($users as $key => $value) {\n\t\t\t\t\t\t$data[] = ['id' => $key, 'name' => $value];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\\in_array('groups', $result)) {\n\t\t\t\t$grup = $owner->getAccessibleGroups('', 'owner', true);\n\t\t\t\tif (!empty($grup)) {\n\t\t\t\t\t$data[] = ['name' => \\App\\Language::translate('LBL_GROUPS'), 'type' => 'optgroup'];\n\t\t\t\t\tforeach ($grup as $key => $value) {\n\t\t\t\t\t\t$data[] = ['id' => $key, 'name' => $value];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$response->setResult(['items' => $data]);\n\t\t}\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Search user roles.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function getUserRole(App\\Request $request)\n\t{\n\t\tif (!App\\Config::performance('SEARCH_ROLES_BY_AJAX')) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t}\n\t\tif ('userRole' !== $this->fieldModel->getFieldDataType()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t\t$searchValue = $request->getByType('value', 'Text');\n\t\t$response = new Vtiger_Response();\n\t\tif (empty($searchValue)) {\n\t\t\t$response->setResult(['items' => []]);\n\t\t} else {\n\t\t\t$rows = $this->fieldModel->getUITypeModel()->getSearchValues($searchValue);\n\t\t\tforeach ($rows as $key => $value) {\n\t\t\t\t$data[] = ['id' => $key, 'name' => $value];\n\t\t\t}\n\t\t\t$response->setResult(['items' => $data]);\n\t\t}\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function getReference(App\\Request $request)\n\t{\n\t\t$fieldModel = Vtiger_Module_Model::getInstance($request->getModule())->getFieldByName($request->getByType('fieldName', 2));\n\t\tif (!$fieldModel || !$fieldModel->isActiveField() || !$fieldModel->isViewEnabled()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD', 406);\n\t\t}\n\t\t$response = new Vtiger_Response();\n\t\t$limit = \\App\\Config::search('GLOBAL_SEARCH_AUTOCOMPLETE_LIMIT');\n\t\t$searchValue = \\App\\RecordSearch::getSearchField()->getUITypeModel()->getDbConditionBuilderValue($request->getByType('value', \\App\\Purifier::TEXT), '');\n\t\t$rows = (new \\App\\RecordSearch($searchValue, $fieldModel->getReferenceList(), $limit))->setMode(\\App\\RecordSearch::LABEL_MODE)->search();\n\t\t$data = $modules = [];\n\t\tforeach ($rows as $row) {\n\t\t\t$modules[$row['setype']][] = $row;\n\t\t}\n\t\tforeach ($modules as $moduleName => $rows) {\n\t\t\t$data[] = ['name' => App\\Language::translateSingleMod($moduleName, $moduleName), 'type' => 'optgroup'];\n\t\t\tforeach ($rows as $row) {\n\t\t\t\t$data[] = ['id' => $row['crmid'], 'name' => \\App\\Purifier::encodeHtml($row['label'])];\n\t\t\t}\n\t\t}\n\t\t$response->setResult(['items' => $data]);\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Verify phone number.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function verifyPhoneNumber(App\\Request $request)\n\t{\n\t\tif ('phone' !== $this->fieldModel->getFieldDataType()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t\t$response = new Vtiger_Response();\n\t\t$data = ['isValidNumber' => false];\n\t\tif ($request->isEmpty('phoneCountry', true)) {\n\t\t\t$data['message'] = \\App\\Language::translate('LBL_NO_PHONE_COUNTRY');\n\t\t}\n\t\tif (empty($data['message'])) {\n\t\t\ttry {\n\t\t\t\t$data = App\\Fields\\Phone::verifyNumber($request->getByType('phoneNumber', 'Text'), $request->getByType('phoneCountry', 1));\n\t\t\t} catch (\\App\\Exceptions\\FieldException $e) {\n\t\t\t\t$data = ['isValidNumber' => false];\n\t\t\t}\n\t\t}\n\t\tif (!$data['isValidNumber'] && empty($data['message'])) {\n\t\t\t$data['message'] = \\App\\Language::translate('LBL_INVALID_PHONE_NUMBER');\n\t\t}\n\t\t$response->setResult($data);\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Find address.\n\t *\n\t * @param \\App\\Request $request\n\t */\n\tpublic function findAddress(App\\Request $request)\n\t{\n\t\t$instance = \\App\\Map\\Address::getInstance($request->getByType('type'));\n\t\t$response = new Vtiger_Response();\n\t\tif ($instance) {\n\t\t\t$response->setResult($instance->find($request->getByType('value', 'Text')));\n\t\t}\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Verify is holiday date.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function verifyIsHolidayDate(App\\Request $request)\n\t{\n\t\tif ('datetime' === $this->fieldModel->getFieldDataType() || 'date' === $this->fieldModel->getFieldDataType()) {\n\t\t\t$response = new Vtiger_Response();\n\t\t\t$result = false;\n\t\t\tif ($request->isEmpty('date', true)) {\n\t\t\t\t$data['message'] = \\App\\Language::translate('LBL_NO_DATE');\n\t\t\t} else {\n\t\t\t\t$date = $request->getArray('date', 'DateInUserFormat');\n\t\t\t\tif (!empty(App\\Fields\\Date::getHolidays(App\\Fields\\Date::formatToDB($date[0]), App\\Fields\\Date::formatToDB($date[1])))) {\n\t\t\t\t\t$result = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$data = ['isHolidayDate' => $result];\n\t\t\t$response->setResult($data);\n\t\t\t$response->emit();\n\t\t} else {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD');\n\t\t}\n\t}\n\n\t/**\n\t * Change favorite owner state.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\IllegalValue\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t * @throws \\yii\\db\\Exception\n\t */\n\tpublic function changeFavoriteOwner(App\\Request $request)\n\t{\n\t\tif (!App\\Config::module('Users', 'FAVORITE_OWNERS') || (\\App\\User::getCurrentUserRealId() !== \\App\\User::getCurrentUserId())) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('LBL_PERMISSION_DENIED', 406);\n\t\t}\n\t\t$moduleName = $request->getModule();\n\t\t$ownerField = \\App\\Fields\\Owner::getInstance($moduleName);\n\t\t$result = $ownerField->changeFavorites($this->fieldModel->getFieldDataType(), $request->getInteger('owner'));\n\t\t$message = $result ? 'LBL_MODIFICATION_SUCCESSFUL_AND_RELOAD' : 'LBL_MODIFICATION_FAILURE';\n\t\t$message = \\App\\Language::translate($this->fieldModel->getFieldLabel(), $moduleName) . ': ' . \\App\\Language::translate($message, $moduleName);\n\t\t$response = new Vtiger_Response();\n\t\t$response->setResult(['result' => $result, 'message' => $message]);\n\t\t$response->emit();\n\t}\n\n\t/**\n\t * Validate the field value.\n\t *\n\t * @param \\App\\Request $request\n\t *\n\t * @throws \\App\\Exceptions\\NoPermitted\n\t */\n\tpublic function validate(App\\Request $request)\n\t{\n\t\t$fieldModel = Vtiger_Module_Model::getInstance($request->getModule())->getFieldByName($request->getByType('fieldName', 2));\n\t\tif (!$fieldModel || !$fieldModel->isActiveField() || !$fieldModel->isViewEnabled()) {\n\t\t\tthrow new \\App\\Exceptions\\NoPermitted('ERR_NO_PERMISSIONS_TO_FIELD', 406);\n\t\t}\n\t\t$recordModel = \\Vtiger_Record_Model::getCleanInstance($fieldModel->getModuleName());\n\t\t$fieldModel->getUITypeModel()->setValueFromRequest($request, $recordModel, 'fieldValue');\n\t\t$response = new Vtiger_Response();\n\t\t$response->setResult([\n\t\t\t'raw' => $recordModel->get($fieldModel->getName()),\n\t\t\t'display' => $recordModel->getDisplayValue($fieldModel->getName()),\n\t\t]);\n\t\t$response->emit();\n\t}\n}\n", "/* {[The file is published on the basis of YetiForce Public License 4.0 that can be found in the following directory: licenses/LicenseEN.txt or yetiforce.com]} */\n'use strict';\n\nwindow.App.Fields = {\n\tDate: {\n\t\tmonths: [\n\t\t\t'JS_JAN',\n\t\t\t'JS_FEB',\n\t\t\t'JS_MAR',\n\t\t\t'JS_APR',\n\t\t\t'JS_MAY_SHORT',\n\t\t\t'JS_JUN',\n\t\t\t'JS_JUL',\n\t\t\t'JS_AUG',\n\t\t\t'JS_SEP',\n\t\t\t'JS_OCT',\n\t\t\t'JS_NOV',\n\t\t\t'JS_DEC'\n\t\t],\n\t\tmonthsTranslated: [\n\t\t\t'JS_JAN',\n\t\t\t'JS_FEB',\n\t\t\t'JS_MAR',\n\t\t\t'JS_APR',\n\t\t\t'JS_MAY_SHORT',\n\t\t\t'JS_JUN',\n\t\t\t'JS_JUL',\n\t\t\t'JS_AUG',\n\t\t\t'JS_SEP',\n\t\t\t'JS_OCT',\n\t\t\t'JS_NOV',\n\t\t\t'JS_DEC'\n\t\t].map((monthName) => app.vtranslate(monthName)),\n\t\tfullMonths: [\n\t\t\t'JS_JANUARY',\n\t\t\t'JS_FEBRUARY',\n\t\t\t'JS_MARCH',\n\t\t\t'JS_APRIL',\n\t\t\t'JS_MAY',\n\t\t\t'JS_JUNE',\n\t\t\t'JS_JULY',\n\t\t\t'JS_AUGUST',\n\t\t\t'JS_SEPTEMBER',\n\t\t\t'JS_OCTOBER',\n\t\t\t'JS_NOVEMBER',\n\t\t\t'JS_DECEMBER'\n\t\t],\n\t\tfullMonthsTranslated: [\n\t\t\t'JS_JANUARY',\n\t\t\t'JS_FEBRUARY',\n\t\t\t'JS_MARCH',\n\t\t\t'JS_APRIL',\n\t\t\t'JS_MAY',\n\t\t\t'JS_JUNE',\n\t\t\t'JS_JULY',\n\t\t\t'JS_AUGUST',\n\t\t\t'JS_SEPTEMBER',\n\t\t\t'JS_OCTOBER',\n\t\t\t'JS_NOVEMBER',\n\t\t\t'JS_DECEMBER'\n\t\t].map((monthName) => app.vtranslate(monthName)),\n\t\tdays: ['JS_SUN', 'JS_MON', 'JS_TUE', 'JS_WED', 'JS_THU', 'JS_FRI', 'JS_SAT'],\n\t\tdaysTranslated: ['JS_SUN', 'JS_MON', 'JS_TUE', 'JS_WED', 'JS_THU', 'JS_FRI', 'JS_SAT'].map((monthName) =>\n\t\t\tapp.vtranslate(monthName)\n\t\t),\n\t\tfullDays: ['JS_SUNDAY', 'JS_MONDAY', 'JS_TUESDAY', 'JS_WEDNESDAY', 'JS_THURSDAY', 'JS_FRIDAY', 'JS_SATURDAY'],\n\t\tfullDaysTranslated: [\n\t\t\t'JS_SUNDAY',\n\t\t\t'JS_MONDAY',\n\t\t\t'JS_TUESDAY',\n\t\t\t'JS_WEDNESDAY',\n\t\t\t'JS_THURSDAY',\n\t\t\t'JS_FRIDAY',\n\t\t\t'JS_SATURDAY'\n\t\t].map((monthName) => app.vtranslate(monthName)),\n\n\t\t/**\n\t\t * Register DatePicker\n\t\t * @param {$} parentElement\n\t\t * @param {boolean} registerForAddon\n\t\t * @param {object} customParams\n\t\t */\n\t\tregister(parentElement, registerForAddon, customParams, className = 'dateField') {\n\t\t\tif (typeof parentElement === 'undefined') {\n\t\t\t\tparentElement = $('body');\n\t\t\t} else {\n\t\t\t\tparentElement = $(parentElement);\n\t\t\t}\n\t\t\tif (typeof registerForAddon === 'undefined') {\n\t\t\t\tregisterForAddon = true;\n\t\t\t}\n\t\t\tlet elements = $('.' + className, parentElement);\n\t\t\tif (parentElement.hasClass(className)) {\n\t\t\t\telements = parentElement;\n\t\t\t}\n\t\t\tif (elements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (registerForAddon === true) {\n\t\t\t\tconst parentDateElem = elements.closest('.date');\n\t\t\t\t$('.js-date__btn', parentDateElem).on('click', function inputGroupAddonClickHandler(e) {\n\t\t\t\t\t// Using focus api of DOM instead of jQuery because show api of datePicker is calling e.preventDefault\n\t\t\t\t\t// which is stopping from getting focus to input element\n\t\t\t\t\t$(e.currentTarget)\n\t\t\t\t\t\t.closest('.date')\n\t\t\t\t\t\t.find('input.' + className)\n\t\t\t\t\t\t.get(0)\n\t\t\t\t\t\t.focus();\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet format = CONFIG.dateFormat;\n\t\t\tconst elementDateFormat = elements.data('dateFormat');\n\t\t\tif (typeof elementDateFormat !== 'undefined') {\n\t\t\t\tformat = elementDateFormat;\n\t\t\t}\n\t\t\tif (typeof $.fn.datepicker.dates[CONFIG.langKey] === 'undefined') {\n\t\t\t\t$.fn.datepicker.dates[CONFIG.langKey] = {\n\t\t\t\t\tdays: App.Fields.Date.fullDaysTranslated,\n\t\t\t\t\tdaysShort: App.Fields.Date.daysTranslated,\n\t\t\t\t\tdaysMin: App.Fields.Date.daysTranslated,\n\t\t\t\t\tmonths: App.Fields.Date.fullMonthsTranslated,\n\t\t\t\t\tmonthsShort: App.Fields.Date.monthsTranslated,\n\t\t\t\t\ttoday: app.vtranslate('JS_TODAY'),\n\t\t\t\t\tclear: app.vtranslate('JS_CLEAR'),\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttitleFormat: 'MM yyyy' /* Leverages same syntax as 'format' */,\n\t\t\t\t\tweekStart: CONFIG.firstDayOfWeekNo\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet params = {\n\t\t\t\ttodayBtn: 'linked',\n\t\t\t\tclearBtn: true,\n\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\tweekStart: CONFIG.firstDayOfWeekNo,\n\t\t\t\tautoclose: true,\n\t\t\t\ttodayHighlight: true,\n\t\t\t\tformat: format\n\t\t\t};\n\t\t\tif (typeof customParams !== 'undefined') {\n\t\t\t\tparams = $.extend(params, customParams);\n\t\t\t}\n\t\t\telements.each((index, element) => {\n\t\t\t\t$(element).datepicker(\n\t\t\t\t\t$.extend(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tObject.assign(params, { enableOnReadonly: !element.hasAttribute('readonly') }),\n\t\t\t\t\t\t$(element).data('params')\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\t\t\tApp.Fields.Utils.hideMobileKeyboard(elements);\n\t\t\treturn elements;\n\t\t},\n\n\t\t/**\n\t\t * Register dateRangePicker\n\t\t * @param {jQuery} parentElement\n\t\t * @param {object} customParams\n\t\t */\n\t\tregisterRange(parentElement, customParams = {}) {\n\t\t\tif (typeof parentElement === 'undefined') {\n\t\t\t\tparentElement = $('body');\n\t\t\t} else {\n\t\t\t\tparentElement = $(parentElement);\n\t\t\t}\n\t\t\tlet elements = $('.dateRangeField', parentElement);\n\t\t\tif (parentElement.hasClass('dateRangeField')) {\n\t\t\t\telements = parentElement;\n\t\t\t}\n\t\t\tif (elements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet format = CONFIG.dateFormat.toUpperCase();\n\t\t\tconst elementDateFormat = elements.data('dateFormat');\n\t\t\tif (typeof elementDateFormat !== 'undefined') {\n\t\t\t\tformat = elementDateFormat.toUpperCase();\n\t\t\t}\n\t\t\tlet ranges = {};\n\t\t\tranges[app.vtranslate('JS_TODAY')] = [moment(), moment()];\n\t\t\tranges[app.vtranslate('JS_TOMORROW')] = [moment().add(1, 'days'), moment().add(1, 'days')];\n\t\t\tranges[app.vtranslate('JS_YESTERDAY')] = [moment().subtract(1, 'days'), moment().subtract(1, 'days')];\n\t\t\tranges[app.vtranslate('JS_LAST_7_DAYS')] = [moment().subtract(6, 'days'), moment()];\n\t\t\tranges[app.vtranslate('JS_NEXT_7_DAYS')] = [moment(), moment().add(6, 'days')];\n\t\t\tranges[app.vtranslate('JS_CURRENT_MONTH')] = [moment().startOf('month'), moment().endOf('month')];\n\t\t\tranges[app.vtranslate('JS_NEXT_MONTH')] = [\n\t\t\t\tmoment().add(1, 'month').startOf('month'),\n\t\t\t\tmoment().add(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_LAST_MONTH')] = [\n\t\t\t\tmoment().subtract(1, 'month').startOf('month'),\n\t\t\t\tmoment().subtract(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_NEXT_MONTH')] = [\n\t\t\t\tmoment().add(1, 'month').startOf('month'),\n\t\t\t\tmoment().add(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_LAST_3_MONTHS')] = [\n\t\t\t\tmoment().subtract(3, 'month').startOf('month'),\n\t\t\t\tmoment().subtract(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_NEXT_3_MONTHS')] = [moment().startOf('month'), moment().add(3, 'month').endOf('month')];\n\t\t\tranges[app.vtranslate('JS_LAST_6_MONTHS')] = [\n\t\t\t\tmoment().subtract(6, 'month').startOf('month'),\n\t\t\t\tmoment().subtract(1, 'month').endOf('month')\n\t\t\t];\n\t\t\tranges[app.vtranslate('JS_NEXT_6_MONTHS')] = [moment().startOf('month'), moment().add(6, 'month').endOf('month')];\n\n\t\t\tlet locale = App.Fields.DateTime.getDefaultLocale();\n\t\t\tlocale.format = format;\n\t\t\tlet params = {\n\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\tautoUpdateInput: false,\n\t\t\t\tautoApply: true,\n\t\t\t\tranges: ranges,\n\t\t\t\tlocale: locale\n\t\t\t};\n\n\t\t\tif (typeof customParams !== 'undefined') {\n\t\t\t\tparams = $.extend(params, customParams);\n\t\t\t}\n\t\t\tparentElement\n\t\t\t\t.find('.js-date__btn')\n\t\t\t\t.off()\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\t$(e.currentTarget).parent().next('.dateRangeField')[0].focus();\n\t\t\t\t});\n\t\t\telements.each((index, element) => {\n\t\t\t\tlet el = $(element);\n\t\t\t\tlet currentParams = $.extend(true, params, el.data('params'));\n\t\t\t\tel.daterangepicker(currentParams)\n\t\t\t\t\t.on('apply.daterangepicker', function (ev, picker) {\n\t\t\t\t\t\t$(this).val(\n\t\t\t\t\t\t\tpicker.startDate.format(currentParams.locale.format) +\n\t\t\t\t\t\t\t\t',' +\n\t\t\t\t\t\t\t\tpicker.endDate.format(currentParams.locale.format)\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$(this).trigger('change');\n\t\t\t\t\t})\n\t\t\t\t\t.on('show.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tApp.Fields.Utils.positionPicker(ev, picker);\n\t\t\t\t\t})\n\t\t\t\t\t.on('showCalendar.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tApp.Fields.Utils.positionPicker(ev, picker);\n\t\t\t\t\t\tpicker.container.addClass('js-visible');\n\t\t\t\t\t})\n\t\t\t\t\t.on('hide.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tpicker.container.removeClass('js-visible');\n\t\t\t\t\t});\n\t\t\t\tApp.Fields.Utils.registerMobileDateRangePicker(el);\n\t\t\t});\n\t\t}\n\t},\n\tDateTime: class DateTime {\n\t\tconstructor(container, params) {\n\t\t\tthis.container = container;\n\t\t\tthis.init(params);\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t * @param {Object} params\n\t\t */\n\t\tstatic register(container, params) {\n\t\t\tif (typeof container === 'undefined') {\n\t\t\t\tcontainer = $('body');\n\t\t\t}\n\t\t\tif (container.hasClass('dateTimePickerField') && !container.prop('disabled')) {\n\t\t\t\treturn new DateTime(container, params);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.dateTimePickerField:not([disabled])').each((_, e) => {\n\t\t\t\tlet element = $(e);\n\t\t\t\tinstances.push(new DateTime(element, params));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Gets default locale data\n\t\t * @returns {Object}\n\t\t */\n\t\tstatic getDefaultLocale() {\n\t\t\tif (!this.locale) {\n\t\t\t\tthis.locale = {\n\t\t\t\t\tseparator: ',',\n\t\t\t\t\tapplyLabel: app.vtranslate('JS_APPLY'),\n\t\t\t\t\tcancelLabel: app.vtranslate('JS_CANCEL'),\n\t\t\t\t\tfromLabel: app.vtranslate('JS_FROM'),\n\t\t\t\t\ttoLabel: app.vtranslate('JS_TO'),\n\t\t\t\t\tcustomRangeLabel: app.vtranslate('JS_CUSTOM'),\n\t\t\t\t\tweekLabel: app.vtranslate('JS_WEEK').substr(0, 1),\n\t\t\t\t\tfirstDay: CONFIG.firstDayOfWeekNo,\n\t\t\t\t\tdaysOfWeek: App.Fields.Date.daysTranslated,\n\t\t\t\t\tmonthNames: App.Fields.Date.fullMonthsTranslated\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn { ...this.locale };\n\t\t}\n\n\t\t/**\n\t\t * Initialization datetime\n\t\t */\n\t\tinit(customParams) {\n\t\t\t$('.input-group-text', this.container.closest('.dateTime')).on('click', function (e) {\n\t\t\t\t$(e.currentTarget).closest('.dateTime').find('input.dateTimePickerField').get(0).focus();\n\t\t\t});\n\t\t\tlet dateFormat = CONFIG.dateFormat.toUpperCase();\n\t\t\tconst elementDateFormat = this.container.data('dateFormat');\n\t\t\tif (typeof elementDateFormat !== 'undefined') {\n\t\t\t\tdateFormat = elementDateFormat.toUpperCase();\n\t\t\t}\n\t\t\tlet hourFormat = CONFIG.hourFormat;\n\t\t\tconst elementHourFormat = this.container.data('hourFormat');\n\t\t\tif (typeof elementHourFormat !== 'undefined') {\n\t\t\t\thourFormat = elementHourFormat;\n\t\t\t}\n\t\t\tlet timePicker24Hour = true;\n\t\t\tlet timeFormat = 'HH:mm';\n\t\t\tif (hourFormat != '24') {\n\t\t\t\ttimePicker24Hour = false;\n\t\t\t\ttimeFormat = 'hh:mm A';\n\t\t\t}\n\t\t\tconst format = dateFormat + ' ' + timeFormat;\n\t\t\tlet isDateRangePicker = this.container.data('calendarType') !== 'range';\n\t\t\tlet locale = App.Fields.DateTime.getDefaultLocale();\n\t\t\tlocale.format = format;\n\t\t\tlet params = {\n\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\tparentEl: this.container.closest('.dateTime'),\n\t\t\t\tsingleDatePicker: isDateRangePicker,\n\t\t\t\tshowDropdowns: true,\n\t\t\t\ttimePicker: true,\n\t\t\t\tautoUpdateInput: false,\n\t\t\t\ttimePicker24Hour: timePicker24Hour,\n\t\t\t\ttimePickerIncrement: 1,\n\t\t\t\tautoApply: true,\n\t\t\t\topens: 'left',\n\t\t\t\tlocale: locale\n\t\t\t};\n\t\t\tif (typeof customParams !== 'undefined') {\n\t\t\t\tparams = $.extend(params, customParams);\n\t\t\t}\n\t\t\tthis.container\n\t\t\t\t.daterangepicker(params)\n\t\t\t\t.on('apply.daterangepicker', function applyDateRangePickerHandler(ev, picker) {\n\t\t\t\t\tif (isDateRangePicker) {\n\t\t\t\t\t\t$(this).val(picker.startDate.format(format));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(this).val(picker.startDate.format(format) + ',' + picker.endDate.format(format));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('showCalendar.daterangepicker', (ev, picker) => {\n\t\t\t\t\tApp.Fields.Utils.positionPicker(ev, picker);\n\t\t\t\t\tpicker.container.addClass('js-visible');\n\t\t\t\t});\n\t\t\tApp.Fields.Utils.registerMobileDateRangePicker(this.container);\n\t\t}\n\t},\n\tColors: {\n\t\t/**\n\t\t * Function to check whether the color is dark or light\n\t\t */\n\t\tgetColorContrast: function (hexcolor) {\n\t\t\tvar r = parseInt(hexcolor.substr(0, 2), 16);\n\t\t\tvar g = parseInt(hexcolor.substr(2, 2), 16);\n\t\t\tvar b = parseInt(hexcolor.substr(4, 2), 16);\n\t\t\tvar yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\t\t\treturn yiq >= 128 ? 'light' : 'dark';\n\t\t},\n\t\tgetRandomColor: function () {\n\t\t\tvar letters = '0123456789ABCDEF'.split('');\n\t\t\tvar color = '#';\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tcolor += letters[Math.floor(Math.random() * 16)];\n\t\t\t}\n\t\t\treturn color;\n\t\t},\n\t\tgetRandomColors: function (count) {\n\t\t\tconst colors = [];\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tcolors.push(this.getRandomColor());\n\t\t\t}\n\t\t\treturn colors;\n\t\t},\n\t\tshowPicker({ color, fieldToUpdate, bgToUpdate, cb }) {\n\t\t\tlet registerPickerEvents = (modalContainer) => {\n\t\t\t\tlet picker = window.ColorPicker.mount({\n\t\t\t\t\tel: modalContainer.find('.js-color-picker')[0],\n\t\t\t\t\tcurrentColor: color\n\t\t\t\t});\n\t\t\t\tmodalContainer.find('.js-modal__save').on('click', (_) => {\n\t\t\t\t\tlet newColor = picker.getColor().hex;\n\t\t\t\t\tcb && cb(newColor);\n\t\t\t\t\tbgToUpdate && bgToUpdate.css('background', newColor);\n\t\t\t\t\tfieldToUpdate && fieldToUpdate.val(newColor);\n\t\t\t\t\tapp.hideModalWindow(false, modalContainer.closest('.js-modal-container')[0].id);\n\t\t\t\t});\n\t\t\t};\n\t\t\tlet url = `index.php?module=AppComponents&view=ColorPickerModal${color ? '&color=' + color : ''}`;\n\t\t\tapp.showModalWindow({ url, cb: registerPickerEvents.bind(this) });\n\t\t}\n\t},\n\tText: {\n\t\t/**\n\t\t * Register clip\n\t\t * @param {HTMLElement|jQuery} container\n\t\t * @param {string} key\n\t\t * @returns {ClipboardJS|undefined}\n\t\t */\n\t\tregisterCopyClipboard: function (container, key = '.clipboard') {\n\t\t\tif (typeof container !== 'object') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontainer = $(container).get(0);\n\t\t\tlet elements = container.querySelectorAll(key);\n\t\t\tif (elements.length === 0) {\n\t\t\t\telements = key;\n\t\t\t\tcontainer = '';\n\t\t\t}\n\t\t\treturn new ClipboardJS(elements, {\n\t\t\t\tcontainer: container,\n\t\t\t\ttext: function (trigger) {\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_NOTIFY_COPY_TEXT'),\n\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t});\n\t\t\t\t\ttrigger = $(trigger);\n\t\t\t\t\tconst element = $(trigger.data('copyTarget'), container);\n\t\t\t\t\tlet val;\n\t\t\t\t\tif (typeof trigger.data('copyType') !== 'undefined') {\n\t\t\t\t\t\tif (element.is('select')) {\n\t\t\t\t\t\t\tval = element.find('option:selected').data(trigger.data('copyType'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tval = element.data(trigger.data('copyType'));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (typeof trigger.data('copy-attribute') !== 'undefined') {\n\t\t\t\t\t\tval = trigger.data(trigger.data('copy-attribute'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval = element.val();\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tEditor: class {\n\t\t\tconstructor(container, params) {\n\t\t\t\tthis.container = container;\n\t\t\t\tthis.init(container, params);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Register function\n\t\t\t * @param {jQuery} container\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tstatic register(container, params) {\n\t\t\t\tif (typeof container === 'undefined') {\n\t\t\t\t\tcontainer = $('body');\n\t\t\t\t}\n\t\t\t\tif (container.hasClass('js-editor') && !container.prop('disabled')) {\n\t\t\t\t\treturn new App.Fields.Text.Editor(container, $.extend(params, container.data()));\n\t\t\t\t}\n\t\t\t\tconst instances = [];\n\t\t\t\tcontainer.find('.js-editor:not([disabled])').each((_, e) => {\n\t\t\t\t\tlet element = $(e);\n\t\t\t\t\tinstances.push(new App.Fields.Text.Editor(element, $.extend(params, element.data())));\n\t\t\t\t});\n\t\t\t\treturn instances;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Initiation\n\t\t\t * @param {jQuery} element\n\t\t\t * @param {Object} params\n\t\t\t */\n\t\t\tinit(element, params) {\n\t\t\t\tlet config = {};\n\t\t\t\tif (element.hasClass('js-editor--basic')) {\n\t\t\t\t\tconfig.toolbar = 'Min';\n\t\t\t\t}\n\t\t\t\tif (element.data('height')) {\n\t\t\t\t\tconfig.height = element.data('height');\n\t\t\t\t}\n\t\t\t\tparams = $.extend(config, params);\n\t\t\t\tthis.isModal = element.closest('.js-modal-container').length;\n\t\t\t\tif (this.isModal && element.is(':visible')) {\n\t\t\t\t\tlet self = this;\n\t\t\t\t\tthis.progressInstance = $.progressIndicator({\n\t\t\t\t\t\tblockInfo: {\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tonBlock: () => {\n\t\t\t\t\t\t\t\tself.loadEditor(element, params);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tApp.Fields.Text.destroyEditor(element);\n\t\t\t\t\tthis.loadEditor(element, params);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\t *Function to set the textArea element\n\t\t\t */\n\t\t\tsetElement(element) {\n\t\t\t\tthis.element = $(element);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t *Function to get the textArea element\n\t\t\t */\n\t\t\tgetElement() {\n\t\t\t\treturn this.element;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Function to return Element's id atrribute value\n\t\t\t */\n\t\t\tgetElementId() {\n\t\t\t\treturn this.getElement().attr('id');\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Function to get the instance of ckeditor\n\t\t\t */\n\t\t\tgetEditorInstanceFromName() {\n\t\t\t\treturn CKEDITOR.instances[this.getElementId()];\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Function to load CkEditor\n\t\t\t * @param {HTMLElement|jQuery} element on which CkEditor has to be loaded\n\t\t\t * @param {Object} customConfig custom configurations for ckeditor\n\t\t\t */\n\t\t\tloadEditor(element, customConfig) {\n\t\t\t\tthis.setElement(element);\n\t\t\t\tconst instance = this.getEditorInstanceFromName();\n\t\t\t\tlet config = {\n\t\t\t\t\tlanguage: CONFIG.langKey,\n\t\t\t\t\tallowedContent: true,\n\t\t\t\t\tdisableNativeSpellChecker: false,\n\t\t\t\t\textraAllowedContent: 'div{page-break-after*}',\n\t\t\t\t\tformat_tags: 'p;h1;h2;h3;h4;h5;h6;pre;address;div',\n\t\t\t\t\tremoveButtons: '',\n\t\t\t\t\tenterMode: CKEDITOR.ENTER_BR,\n\t\t\t\t\tshiftEnterMode: CKEDITOR.ENTER_P,\n\t\t\t\t\temojiEnabled: false,\n\t\t\t\t\tmentionsEnabled: false,\n\t\t\t\t\ton: {\n\t\t\t\t\t\tinstanceReady: (evt) => {\n\t\t\t\t\t\t\tevt.editor.on('blur', function () {\n\t\t\t\t\t\t\t\tevt.editor.updateElement();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (this.isModal && this.progressInstance) {\n\t\t\t\t\t\t\t\tthis.progressInstance.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbeforeCommandExec: (e) => {\n\t\t\t\t\t\t\tif (e.editor.mode === 'source') {\n\t\t\t\t\t\t\t\treturn this.validate(element, e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tremovePlugins: 'scayt',\n\t\t\t\t\textraPlugins:\n\t\t\t\t\t\t'colorbutton,pagebreak,colordialog,find,selectall,showblocks,div,print,font,justify,bidi,ckeditor-image-to-base',\n\t\t\t\t\ttoolbar: 'Full',\n\t\t\t\t\ttoolbar_Full: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'clipboard',\n\t\t\t\t\t\t\titems: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll'] },\n\t\t\t\t\t\t{ name: 'links', items: ['Link', 'Unlink'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'insert',\n\t\t\t\t\t\t\titems: ['ckeditor-image-to-base', 'Table', 'HorizontalRule', 'SpecialChar', 'PageBreak']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'tools', items: ['Maximize', 'ShowBlocks'] },\n\t\t\t\t\t\t{ name: 'paragraph', items: ['Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv'] },\n\t\t\t\t\t\t{ name: 'document', items: ['Source', 'Print'] },\n\t\t\t\t\t\t'/',\n\t\t\t\t\t\t{ name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t'NumberedList',\n\t\t\t\t\t\t\t\t'BulletedList',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'JustifyLeft',\n\t\t\t\t\t\t\t\t'JustifyCenter',\n\t\t\t\t\t\t\t\t'JustifyRight',\n\t\t\t\t\t\t\t\t'JustifyBlock',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'BidiLtr',\n\t\t\t\t\t\t\t\t'BidiRtl'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] }\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_Min: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{ name: 'tools', items: ['Maximize'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t'NumberedList',\n\t\t\t\t\t\t\t\t'BulletedList',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'JustifyLeft',\n\t\t\t\t\t\t\t\t'JustifyCenter',\n\t\t\t\t\t\t\t\t'JustifyRight',\n\t\t\t\t\t\t\t\t'JustifyBlock',\n\t\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t\t'BidiLtr',\n\t\t\t\t\t\t\t\t'BidiRtl'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat', 'Source'] }\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_Micro: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: ['NumberedList', 'BulletedList', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] }\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_Clipboard: [\n\t\t\t\t\t\t{ name: 'document', items: ['Print'] },\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'clipboard',\n\t\t\t\t\t\t\titems: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar_PDF: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'clipboard',\n\t\t\t\t\t\t\titems: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-'] },\n\t\t\t\t\t\t{ name: 'links', items: ['Link', 'Unlink'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'insert',\n\t\t\t\t\t\t\titems: ['ckeditor-image-to-base', 'Table', 'HorizontalRule', 'PageBreak']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'tools', items: ['Maximize', 'ShowBlocks'] },\n\t\t\t\t\t\t{ name: 'document', items: ['Source'] },\n\t\t\t\t\t\t'/',\n\t\t\t\t\t\t{ name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'basicstyles',\n\t\t\t\t\t\t\titems: ['Bold', 'Italic', 'Underline', 'Strike']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'colors', items: ['TextColor', 'BGColor'] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'paragraph',\n\t\t\t\t\t\t\titems: ['JustifyLeft', 'JustifyCenter', 'JustifyRight']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: 'basicstyles', items: ['CopyFormatting', 'RemoveFormat'] }\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\tif (typeof customConfig !== 'undefined') {\n\t\t\t\t\tconfig = $.extend(config, customConfig);\n\t\t\t\t}\n\t\t\t\tconfig = Object.assign(config, element.data());\n\t\t\t\tif (config.emojiEnabled) {\n\t\t\t\t\tlet emojiToolbar = { name: 'links', items: ['EmojiPanel'] };\n\t\t\t\t\tif (typeof config.toolbar === 'string') {\n\t\t\t\t\t\tconfig[`toolbar_${config.toolbar}`].push(emojiToolbar);\n\t\t\t\t\t} else if (Array.isArray(config.toolbar)) {\n\t\t\t\t\t\tconfig.toolbar.push(emojiToolbar);\n\t\t\t\t\t}\n\t\t\t\t\tconfig.extraPlugins = config.extraPlugins + ',emoji';\n\t\t\t\t\tconfig.outputTemplate = '{id}';\n\t\t\t\t}\n\t\t\t\tif (config.mentionsEnabled) {\n\t\t\t\t\tconfig.extraPlugins = config.extraPlugins + ',mentions';\n\t\t\t\t\tconfig.mentions = this.registerMentions();\n\t\t\t\t}\n\t\t\t\tif (instance) {\n\t\t\t\t\tCKEDITOR.remove(instance);\n\t\t\t\t}\n\t\t\t\telement.ckeditor(config);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register mentions\n\t\t\t * @returns {Array}\n\t\t\t */\n\t\t\tregisterMentions() {\n\t\t\t\tlet minSerchTextLength = app.getMainParams('gsMinLength');\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tfeed: this.getMentionUsersData.bind(this),\n\t\t\t\t\t\titemTemplate: `<li data-id=\"{id}\" class=\"row no-gutters\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-2 c-img__completion__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"{icon} m-auto u-w-fit u-fs-14px\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"{image}\" class=\"c-img__completion mr-2\" alt=\"{label}\" title=\"{label}\">\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col row-10 no-gutters u-overflow-x-hidden\">\n\t\t\t\t\t\t\t\t\t\t\t\t<strong class=\"u-text-ellipsis--no-hover col-12\">{label}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"fullname col-12 u-text-ellipsis--no-hover text-muted small\">{category}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</li>`,\n\t\t\t\t\t\toutputTemplate: '<a href=\"#\" data-id=\"@{id}\" data-module=\"{module}\">{label}</a>',\n\t\t\t\t\t\tminChars: minSerchTextLength\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfeed: App.Fields.Text.getMentionData,\n\t\t\t\t\t\tmarker: '#',\n\t\t\t\t\t\tpattern: /#[w\u0430-\u044f]{1,}|#\\w{3,}$/,\n\t\t\t\t\t\titemTemplate: `<li data-id=\"{id}\" class=\"row no-gutters\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-2 c-circle-icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"yfm-{module}\"></span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-10 row no-gutters pl-1 u-overflow-x-hidden\">\n\t\t\t\t\t\t\t\t\t\t\t\t<strong class=\"u-text-ellipsis--no-hover col-12\">{label}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"fullname col-12 u-text-ellipsis--no-hover text-muted small\">{category}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</li>`,\n\t\t\t\t\t\toutputTemplate: '<a href=\"#\" data-id=\"#{id}\" data-module=\"{module}\">{label}</a>',\n\t\t\t\t\t\tminChars: minSerchTextLength\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Get mention Users data (invoked by ck editor mentions plugin)\n\t\t\t * @param {object} opts\n\t\t\t * @param {function} callback\n\t\t\t */\n\t\t\tgetMentionUsersData(opts, callback) {\n\t\t\t\tApp.Fields.Text.getMentionData(opts, callback, 'owners');\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Function to validate the field value\n\t\t\t * @param {jQuery} element\n\t\t\t * @param {object} e\n\t\t\t */\n\t\t\tvalidate(element, e) {\n\t\t\t\tlet status = true;\n\t\t\t\tAppConnector.request({\n\t\t\t\t\tasync: false,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmodule: element.closest('form').find('[name=\"module\"]').val(),\n\t\t\t\t\t\taction: 'Fields',\n\t\t\t\t\t\tmode: 'validate',\n\t\t\t\t\t\tfieldName: element.attr('name'),\n\t\t\t\t\t\tfieldValue: element.val()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\telement.val(data.result.raw);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\ttitle: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\ttext: error\n\t\t\t\t\t\t});\n\t\t\t\t\t\tstatus = false;\n\t\t\t\t\t});\n\n\t\t\t\treturn status;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Completions class for contenteditable html element for records, users and emojis. Params can be passed in data-completions- of contenteditable element or as argument. Default params:\n\t\t * {\n\t\t \t\tcompletionsCollection: {\n\t\t\t\t\t\trecords: true,\n\t\t\t\t\t\tusers: true,\n\t\t\t\t\t\temojis: true\n\t\t\t\t\t}\n\t\t\t}\n\t\t */\n\t\tCompletions: class {\n\t\t\t/**\n\t\t\t * Constructor\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t * @param params\n\t\t\t */\n\t\t\tconstructor(inputDiv = $('.js-completions').eq(0), params = { emojiPanel: true }) {\n\t\t\t\tif (typeof inputDiv === 'undefined' || inputDiv.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (inputDiv.length === undefined) {\n\t\t\t\t\tinputDiv = $(inputDiv);\n\t\t\t\t}\n\t\t\t\tlet basicParams = {\n\t\t\t\t\tcompletionsCollection: {\n\t\t\t\t\t\trecords: true,\n\t\t\t\t\t\tusers: true,\n\t\t\t\t\t\temojis: true\n\t\t\t\t\t},\n\t\t\t\t\tautolink: true\n\t\t\t\t};\n\t\t\t\tthis.params = Object.assign(basicParams, inputDiv.data(), params);\n\t\t\t\tthis.inputDiv = inputDiv;\n\t\t\t\tthis.collection = [];\n\t\t\t\tif (this.params.completionsCollection.records) {\n\t\t\t\t\tthis.collection.push(this.registerMentionCollection('#'));\n\t\t\t\t}\n\t\t\t\tif (this.params.completionsCollection.users) {\n\t\t\t\t\tthis.collection.push(this.registerMentionCollection('@', 'owners'));\n\t\t\t\t}\n\t\t\t\tif (this.params.completionsCollection.emojis) {\n\t\t\t\t\tthis.collection.push(this.registerEmojiCollection());\n\t\t\t\t}\n\t\t\t\tthis.register(inputDiv);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register mention collection for tribute.js\n\t\t\t * @param {string} symbol\n\t\t\t * @param {string} searchModule\n\t\t\t * @returns {{trigger: *, selectTemplate: selectTemplate, values: values, menuItemTemplate: (function(*): string), lookup: string, fillAttr: string}}\n\t\t\t */\n\t\t\tregisterMentionCollection(symbol, searchModule = '-') {\n\t\t\t\tlet self = this;\n\t\t\t\treturn {\n\t\t\t\t\ttrigger: symbol,\n\t\t\t\t\tselectTemplate: function (item) {\n\t\t\t\t\t\tif (this.range.isContentEditable(this.current.element)) {\n\t\t\t\t\t\t\treturn `<a href=\"#\" data-id=\"${symbol + item.original.id}\" data-module=\"${\n\t\t\t\t\t\t\t\titem.original.module\n\t\t\t\t\t\t\t}\">${item.original.label.split('(')[0].trim()}</a>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn symbol + item.original.label;\n\t\t\t\t\t},\n\t\t\t\t\tvalues: (text, cb) => {\n\t\t\t\t\t\tif (text.length >= CONFIG.globalSearchAutocompleteMinLength) {\n\t\t\t\t\t\t\tApp.Fields.Text.getMentionData(text, (users) => cb(users), searchModule);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tmenuItemTemplate: function (item) {\n\t\t\t\t\t\treturn self.mentionTemplate({\n\t\t\t\t\t\t\tid: item.original.id,\n\t\t\t\t\t\t\tmodule: item.original.module,\n\t\t\t\t\t\t\tcategory: item.original.category,\n\t\t\t\t\t\t\timage: item.original.image,\n\t\t\t\t\t\t\tlabel: item.original.label,\n\t\t\t\t\t\t\ticon: item.original.icon\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tlookup: 'label',\n\t\t\t\t\tfillAttr: 'label'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register emoji collection for tribute.js\n\t\t\t * @returns {{trigger: string, selectTemplate: selectTemplate, menuItemTemplate: (function(*): string), lookup: string, fillAttr: string, values: Array}}\n\t\t\t */\n\t\t\tregisterEmojiCollection() {\n\t\t\t\treturn {\n\t\t\t\t\ttrigger: ':',\n\t\t\t\t\tselectTemplate: function (item) {\n\t\t\t\t\t\tif (this.range.isContentEditable(this.current.element)) {\n\t\t\t\t\t\t\treturn `<span data-id=\"${item.original.id}\">${item.original.symbol}</span>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn item.original.symbol;\n\t\t\t\t\t},\n\t\t\t\t\tmenuItemTemplate: function (item) {\n\t\t\t\t\t\treturn `<span data-id=\"${item.original.id}\">${item.original.symbol} ${item.original.id}</span>`;\n\t\t\t\t\t},\n\t\t\t\t\tlookup: 'id',\n\t\t\t\t\tfillAttr: 'keywords',\n\t\t\t\t\tvalues: (text, cb) => {\n\t\t\t\t\t\tif (text.length >= 2) {\n\t\t\t\t\t\t\tcb(App.emoji);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\t/*\n\t\t\t * Mention template\n\t\t\t */\n\t\t\tmentionTemplate(params) {\n\t\t\t\tlet icon = '';\n\t\t\t\tif (params.module !== undefined) {\n\t\t\t\t\ticon = `yfm-${params.module}`;\n\t\t\t\t}\n\t\t\t\tif (params.icon !== undefined && params.icon !== '') {\n\t\t\t\t\ticon = params.icon;\n\t\t\t\t}\n\t\t\t\tlet avatar = `<div class=\"col-2 c-circle-icon\">\n\t\t\t\t\t\t\t\t<span class=\"${icon}\"></span>\n\t\t\t\t\t\t\t</div>`;\n\t\t\t\tif (params.image !== undefined && params.image !== '') {\n\t\t\t\t\tavatar = `<div class=\"col-2 c-img__completion__container m-0\"><img src=\"${params.image}\" class=\"c-img__completion\" alt=${params.label}\" title=\"${params.label}\"></div>`;\n\t\t\t\t}\n\t\t\t\treturn `<div data-id=\"${params.id}\" class=\"row no-gutters\">\n\t\t\t\t\t\t\t${avatar}\n\t\t\t\t\t\t\t<div class=\"col-10 row no-gutters pl-1 u-overflow-x-hidden\">\n\t\t\t\t\t\t\t\t<strong class=\"u-text-ellipsis--no-hover col-12\">${params.label}</strong>\n\t\t\t\t\t\t\t\t<div class=\"fullname col-12 u-text-ellipsis--no-hover text-muted small\">${params.category}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>`;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Auto link\n\t\t\t */\n\t\t\tautoLink() {\n\t\t\t\tlet fillChar = '\\u200B';\n\t\t\t\tlet sel = window.getSelection(),\n\t\t\t\t\trange = sel.getRangeAt(0).cloneRange(),\n\t\t\t\t\toffset,\n\t\t\t\t\tcharCode,\n\t\t\t\t\tgetParentByTagName = function (node, tags) {\n\t\t\t\t\t\tif (node && !isBody(node)) {\n\t\t\t\t\t\t\twhile (node) {\n\t\t\t\t\t\t\t\tif (tags[node.tagName] || isBody(node)) {\n\t\t\t\t\t\t\t\t\treturn !tags[node.tagName] && isBody(node) ? null : node;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t},\n\t\t\t\t\tisBody = function (node) {\n\t\t\t\t\t\treturn node && node.nodeType == 1 && node.tagName.toLowerCase() == 'body';\n\t\t\t\t\t},\n\t\t\t\t\thtml = function (str) {\n\t\t\t\t\t\treturn str.replace(/&((g|l|quo)t|amp|#39);/g, function (m) {\n\t\t\t\t\t\t\treturn { '&lt;': '<', '&amp;': '&', '&quot;': '\"', '&gt;': '>', '&#39;': \"'\" }[m];\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tisFillChar = function (node) {\n\t\t\t\t\t\treturn node.nodeType == 3 && !node.nodeValue.replace(new RegExp('' + fillChar), '').length;\n\t\t\t\t\t};\n\n\t\t\t\tlet start = range.startContainer;\n\t\t\t\twhile (start.nodeType == 1 && range.startOffset > 0) {\n\t\t\t\t\tstart = range.startContainer.childNodes[range.startOffset - 1];\n\t\t\t\t\tif (!start) break;\n\t\t\t\t\trange.setStart(start, start.nodeType == 1 ? start.childNodes.length : start.nodeValue.length);\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\tstart = range.startContainer;\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\tif (range.startOffset == 0) {\n\t\t\t\t\t\tstart = range.startContainer.previousSibling;\n\t\t\t\t\t\twhile (start && start.nodeType == 1) {\n\t\t\t\t\t\t\tstart = start.lastChild;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!start || isFillChar(start)) break;\n\t\t\t\t\t\toffset = start.nodeValue.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstart = range.startContainer;\n\t\t\t\t\t\toffset = range.startOffset;\n\t\t\t\t\t}\n\t\t\t\t\trange.setStart(start, offset - 1);\n\t\t\t\t\tcharCode = range.toString().charCodeAt(0);\n\t\t\t\t} while (charCode != 160 && charCode != 32);\n\t\t\t\tif (\n\t\t\t\t\trange\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.replace(new RegExp(fillChar, 'g'), '')\n\t\t\t\t\t\t.match(/(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i)\n\t\t\t\t) {\n\t\t\t\t\twhile (range.toString().length) {\n\t\t\t\t\t\tif (/^(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i.test(range.toString())) break;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\trange.setStart(range.startContainer, range.startOffset + 1);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlet startCont = range.startContainer,\n\t\t\t\t\t\t\t\tnext;\n\t\t\t\t\t\t\twhile (!(next = startCont.nextSibling)) {\n\t\t\t\t\t\t\t\tif (isBody(startCont)) return;\n\t\t\t\t\t\t\t\tstartCont = startCont.parentNode;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.setStart(next, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (getParentByTagName(range.startContainer, { a: 1, A: 1 })) return;\n\t\t\t\t\tlet href = range\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t.replace(/<[^>]+>/g, '')\n\t\t\t\t\t\t\t.replace(new RegExp(fillChar, 'g'), ''),\n\t\t\t\t\t\threfFull = /^(?:https?:\\/\\/)/gi.test(href) ? href : 'http://' + href,\n\t\t\t\t\t\turl = new URL(hrefFull);\n\t\t\t\t\tlet allowedHosts = CONFIG.purifierAllowedDomains;\n\t\t\t\t\tif (allowedHosts !== false && allowedHosts.indexOf(url.host) === -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet a = document.createElement('a'),\n\t\t\t\t\t\ttext = document.createTextNode(' ');\n\t\t\t\t\ta.appendChild(range.extractContents());\n\t\t\t\t\ta.innerHTML = href;\n\t\t\t\t\ta.href = hrefFull ? html(hrefFull) : '';\n\t\t\t\t\ta.setAttribute('rel', 'noopener noreferrer');\n\t\t\t\t\ta.setAttribute('target', '_blank');\n\n\t\t\t\t\trange.insertNode(a);\n\t\t\t\t\ta.parentNode.insertBefore(text, a.nextSibling);\n\t\t\t\t\trange.setStart(text.nextSibling, 0);\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\tsel.addRange(range);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * Register\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t */\n\t\t\tregister(inputDiv) {\n\t\t\t\tconst self = this;\n\t\t\t\tthis.completionsCollection = new Tribute({\n\t\t\t\t\tcollection: self.collection,\n\t\t\t\t\tallowSpaces: true,\n\t\t\t\t\treplaceTextSuffix: ''\n\t\t\t\t});\n\t\t\t\tthis.completionsCollection.attach(inputDiv[0]);\n\t\t\t\tif (this.params.completionsTextarea !== undefined) {\n\t\t\t\t\tthis.registerCompletionsTextArea(inputDiv);\n\t\t\t\t}\n\t\t\t\tif (this.params.completionsButtons !== undefined) {\n\t\t\t\t\tthis.registerCompletionsButtons();\n\t\t\t\t}\n\t\t\t\tif (this.params.autolink) {\n\t\t\t\t\tthis.registerAutoLinker(inputDiv);\n\t\t\t\t}\n\t\t\t\tif (this.params.emojiPanel) {\n\t\t\t\t\tthis.registerEmojiPanel(this.inputDiv, this.inputDiv.parents().eq(3).find('.js-completions__emojis'));\n\t\t\t\t}\n\t\t\t\tif (App.emoji === undefined) {\n\t\t\t\t\tfetch(`${CONFIG.siteUrl}/vendor/ckeditor/ckeditor/plugins/emoji/emoji.json`)\n\t\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tApp.emoji = response;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => console.error('Error:', error));\n\t\t\t\t}\n\t\t\t\tthis.registerTagClick(inputDiv);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register autolink\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t */\n\t\t\tregisterAutoLinker(inputDiv) {\n\t\t\t\tinputDiv.on('keypress', (e) => {\n\t\t\t\t\tif (e.keyCode === 32 || e.keyCode === 13) {\n\t\t\t\t\t\tthis.autoLink();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register completons hidden textarea - useful with forms\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t */\n\t\t\tregisterCompletionsTextArea(inputDiv) {\n\t\t\t\tlet textarea = inputDiv.siblings(`[name=${inputDiv.attr('id')}]`);\n\t\t\t\tinputDiv\n\t\t\t\t\t.on('focus', function () {\n\t\t\t\t\t\ttextarea.val(inputDiv.html());\n\t\t\t\t\t})\n\t\t\t\t\t.on('blur keyup paste input', function () {\n\t\t\t\t\t\ttextarea.val(inputDiv.html());\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register tag click\n\t\t\t * @param inputDiv\n\t\t\t */\n\t\t\tregisterTagClick(inputDiv) {\n\t\t\t\tinputDiv\n\t\t\t\t\t.closest('.js-completions__container')\n\t\t\t\t\t.find('.js-completions__messages')\n\t\t\t\t\t.on('click', '.js-completions__tag', (e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tinputDiv.append($(e.target).clone());\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register completions buttons\n\t\t\t */\n\t\t\tregisterCompletionsButtons() {\n\t\t\t\tlet completionsContainer = this.inputDiv.parents().eq(3);\n\t\t\t\tcompletionsContainer.find('.js-completions__users').on('click', (e) => {\n\t\t\t\t\tthis.completionsCollection.showMenuForCollection(this.inputDiv[0], 1);\n\t\t\t\t});\n\t\t\t\tcompletionsContainer.find('.js-completions__records').on('click', (e) => {\n\t\t\t\t\tthis.completionsCollection.showMenuForCollection(this.inputDiv[0], 0);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Register emojipanel library\n\t\t\t * @param {jQuery} inputDiv - contenteditable div\n\t\t\t * @param {jQuery} emojisContainer\n\t\t\t */\n\t\t\tregisterEmojiPanel(inputDiv, emojisContainer) {\n\t\t\t\tnew EmojiPanel({\n\t\t\t\t\tcontainer: '.js-completions__emojis',\n\t\t\t\t\tjson_url: CONFIG.siteUrl + 'libraries/emojipanel/dist/emojis.json'\n\t\t\t\t});\n\t\t\t\temojisContainer.on('click', (e) => {\n\t\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\t\telement.toggleClass('active');\n\t\t\t\t});\n\t\t\t\temojisContainer.on('click', '.emoji', (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif ($(e.currentTarget).data('char') !== undefined) {\n\t\t\t\t\t\tlet value = `${$(e.currentTarget).data('char')}`;\n\t\t\t\t\t\tinputDiv.is('textarea') ? (inputDiv.get(0).value += value) : inputDiv.append(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\temojisContainer.on('mouseenter', '.emoji', (e) => {\n\t\t\t\t\tif ($(e.currentTarget).data('name') !== undefined) {\n\t\t\t\t\t\temojisContainer.find('.emoji-hovered').remove();\n\t\t\t\t\t\temojisContainer\n\t\t\t\t\t\t\t.find('footer')\n\t\t\t\t\t\t\t.prepend(\n\t\t\t\t\t\t\t\t`<div class=\"emoji-hovered u-text-ellipsis\">${\n\t\t\t\t\t\t\t\t\t$(e.currentTarget).data('char') + ' ' + $(e.currentTarget).data('name')\n\t\t\t\t\t\t\t\t}</div>`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\temojisContainer.on('clickoutside', () => {\n\t\t\t\t\temojisContainer.removeClass('active');\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Get mention data (invoked by ck editor mentions plugin and tribute.js)\n\t\t * @param {object} opts\n\t\t * @param {function} callback\n\t\t * @param {string} searchModule\n\t\t */\n\t\tgetMentionData(text, callback, searchModule = '-') {\n\t\t\tlet basicSearch = new Vtiger_BasicSearch_Js();\n\t\t\tbasicSearch.reduceNumberResults = app.getMainParams('gsAmountResponse');\n\t\t\tbasicSearch.returnHtml = false;\n\t\t\tbasicSearch.searchModule = searchModule;\n\t\t\tif (typeof text === 'object') {\n\t\t\t\ttext = text.query.toLowerCase();\n\t\t\t}\n\t\t\tif (searchModule === 'owners') {\n\t\t\t\tAppConnector.request({\n\t\t\t\t\taction: 'Search',\n\t\t\t\t\tmode: 'owners',\n\t\t\t\t\tvalue: text\n\t\t\t\t}).done((data) => {\n\t\t\t\t\tcallback(data.result);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tbasicSearch.search(text).done(function (data) {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t\tlet serverDataFormat = data.result,\n\t\t\t\t\t\treponseDataList = [];\n\t\t\t\t\tfor (let id in serverDataFormat) {\n\t\t\t\t\t\tlet responseData = serverDataFormat[id];\n\t\t\t\t\t\treponseDataList.push(responseData);\n\t\t\t\t\t}\n\t\t\t\t\tcallback(reponseDataList);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Destroy ckEditor\n\t\t * @param {jQuery} element\n\t\t */\n\t\tdestroyEditor(element) {\n\t\t\tif (typeof CKEDITOR !== 'undefined' && CKEDITOR.instances && element.attr('id') in CKEDITOR.instances) {\n\t\t\t\tCKEDITOR.instances[element.attr('id')].destroy();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generate random character\n\t\t * @returns {string}\n\t\t */\n\t\tgenerateRandomChar() {\n\t\t\tconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZ';\n\t\t\tconst rand = Math.floor(Math.random() * chars.length);\n\t\t\treturn chars.substring(rand, rand + 1);\n\t\t},\n\n\t\t/**\n\t\t * generate random hash\n\t\t * @returns {string}\n\t\t */\n\t\tgenerateRandomHash(prefix = '') {\n\t\t\tprefix = prefix.toString();\n\t\t\tconst hash =\n\t\t\t\tMath.random().toString(36).substr(2, 10) +\n\t\t\t\tMath.random().toString(36).substr(2, 10) +\n\t\t\t\tnew Date().valueOf() +\n\t\t\t\tMath.random().toString(36).substr(2, 6);\n\t\t\treturn prefix ? prefix + hash : hash;\n\t\t}\n\t},\n\tPicklist: {\n\t\t/**\n\t\t * Function which will convert ui of select boxes.\n\t\t * @params parent - select element\n\t\t * @params view - select2\n\t\t * @params viewParams - select2 params\n\t\t * @returns jquery object list which represents changed select elements\n\t\t */\n\t\tchangeSelectElementView: function (parent, view, viewParams) {\n\t\t\tif (typeof parent === 'undefined') {\n\t\t\t\tparent = $('body');\n\t\t\t}\n\t\t\tif (typeof view === 'undefined') {\n\t\t\t\tconst select2Elements = $('select.select2', parent).toArray();\n\t\t\t\tselect2Elements.forEach((elem) => {\n\t\t\t\t\tthis.changeSelectElementView($(elem), 'select2', viewParams);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//If view is select2, This will convert the ui of select boxes to select2 elements.\n\t\t\tif (view === 'select2') {\n\t\t\t\treturn App.Fields.Picklist.showSelect2ElementView(parent, viewParams);\n\t\t\t} else {\n\t\t\t\tapp.errorLog(new Error(`Unknown select type [${view}]`));\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Function which will show the select2 element for select boxes . This will use select2 library\n\t\t */\n\t\tshowSelect2ElementView(selectElement, params) {\n\t\t\tlet self = this;\n\t\t\tselectElement = $(selectElement);\n\t\t\tif (typeof params === 'undefined') {\n\t\t\t\tparams = {};\n\t\t\t}\n\t\t\tif ($(selectElement).length > 1) {\n\t\t\t\treturn $(selectElement).each((index, element) => {\n\t\t\t\t\tthis.showSelect2ElementView($(element).eq(0), params);\n\t\t\t\t});\n\t\t\t}\n\t\t\tparams = this.registerParams(selectElement, params);\n\t\t\tif (params.selectLazy && !selectElement.hasClass('js-lazy-select-active')) {\n\t\t\t\treturn App.Fields.Picklist.showLazySelect(selectElement, {\n\t\t\t\t\tlazyElements: app.getMainParams('picklistLimit'),\n\t\t\t\t\tdata: this.registerLazySelectOptions(selectElement),\n\t\t\t\t\tselectParams: params\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst computeDropdownHeight = (e, dropdownContainer) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (!dropdownContainer.find('.select2-dropdown--above').length) {\n\t\t\t\t\t\tconst dropdownList = dropdownContainer.find('.select2-results > .select2-results__options');\n\t\t\t\t\t\tconst marginBottom = 35;\n\t\t\t\t\t\tconst selectOffsetTop = $(e.currentTarget).offset().top;\n\t\t\t\t\t\tdropdownList.css({\n\t\t\t\t\t\t\t'max-height':\n\t\t\t\t\t\t\t\t$(window).height() - selectOffsetTop - marginBottom - (dropdownList.offset().top - selectOffsetTop)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t};\n\t\t\tselectElement.each(function () {\n\t\t\t\tlet select = $(this);\n\t\t\t\tlet htmlBoolParams = select.data('select');\n\t\t\t\tif (htmlBoolParams === 'tags') {\n\t\t\t\t\tparams.tags = true;\n\t\t\t\t\tparams.tokenSeparators = [','];\n\t\t\t\t} else {\n\t\t\t\t\tparams[htmlBoolParams] = true;\n\t\t\t\t}\n\t\t\t\tselect\n\t\t\t\t\t.select2(params)\n\t\t\t\t\t.on('select2:open', (e) => {\n\t\t\t\t\t\tcomputeDropdownHeight(e, $('.select2-container--open:not(.select2-container--below)'));\n\t\t\t\t\t\tif (select.data('unselecting')) {\n\t\t\t\t\t\t\tselect.removeData('unselecting');\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tselect.each(function () {\n\t\t\t\t\t\t\t\t\t$(this).select2('close');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet instance = $(e.currentTarget).data('select2');\n\t\t\t\t\t\tinstance.$dropdown.css('z-index', 1000002);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Fix auto focusing in select2 with jQuery 3.6.0\n\t\t\t\t\t\t * see: https://github.com/select2/select2/issues/5993\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (instance.dropdown.$search) {\n\t\t\t\t\t\t\tinstance.dropdown.$search.get(0).focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on('select2:unselect', () => {\n\t\t\t\t\t\tselect.data('unselecting', true);\n\t\t\t\t\t});\n\t\t\t\tif (typeof self[params.selectCb] === 'function') {\n\t\t\t\t\tself[params.selectCb](select, params);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn selectElement;\n\t\t},\n\t\t/**\n\t\t * Register params\n\t\t * @param selectElement\n\t\t * @param params\n\t\t * @returns {*}\n\t\t */\n\t\tregisterParams(selectElement, params) {\n\t\t\tif (typeof params.dropdownParent === 'undefined') {\n\t\t\t\tconst modalParent = $(selectElement).closest('.modal-body');\n\t\t\t\tif (modalParent.length) {\n\t\t\t\t\tparams.dropdownParent = modalParent;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet data = selectElement.data();\n\t\t\tif (data != null) {\n\t\t\t\tparams = $.extend(data, params);\n\t\t\t}\n\t\t\tparams.language = {};\n\t\t\tparams.theme = 'bootstrap';\n\t\t\tconst width = $(selectElement).data('width');\n\t\t\tif (typeof width !== 'undefined') {\n\t\t\t\tparams.width = width;\n\t\t\t} else {\n\t\t\t\tparams.width = '100%';\n\t\t\t}\n\t\t\tparams.containerCssClass = 'form-control w-100';\n\t\t\tconst containerCssClass = selectElement.data('containerCssClass');\n\t\t\tif (typeof containerCssClass !== 'undefined') {\n\t\t\t\tparams.containerCssClass += ' ' + containerCssClass;\n\t\t\t}\n\t\t\tparams.language.noResults = function (msn) {\n\t\t\t\treturn app.vtranslate('JS_NO_RESULTS_FOUND');\n\t\t\t};\n\n\t\t\t// Sort DOM nodes alphabetically in select box.\n\t\t\tif (typeof params['customSortOptGroup'] !== 'undefined' && params['customSortOptGroup']) {\n\t\t\t\t$('optgroup', selectElement).each(function () {\n\t\t\t\t\tvar optgroup = $(this);\n\t\t\t\t\tvar options = optgroup\n\t\t\t\t\t\t.children()\n\t\t\t\t\t\t.toArray()\n\t\t\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\t\t\tvar aText = $(a).text();\n\t\t\t\t\t\t\tvar bText = $(b).text();\n\t\t\t\t\t\t\treturn aText < bText ? 1 : -1;\n\t\t\t\t\t\t});\n\t\t\t\t\t$.each(options, function (i, v) {\n\t\t\t\t\t\toptgroup.prepend(v);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tdelete params['customSortOptGroup'];\n\t\t\t}\n\n\t\t\t//formatSelectionTooBig param is not defined even it has the maximumSelectionLength,\n\t\t\t//then we should send our custom function for formatSelectionTooBig\n\t\t\tif (typeof params.maximumSelectionLength !== 'undefined' && typeof params.formatSelectionTooBig === 'undefined') {\n\t\t\t\t//custom function which will return the maximum selection size exceeds message.\n\t\t\t\tvar formatSelectionExceeds = function (limit) {\n\t\t\t\t\treturn app.vtranslate('JS_YOU_CAN_SELECT_ONLY') + ' ' + limit.maximum + ' ' + app.vtranslate('JS_ITEMS');\n\t\t\t\t};\n\t\t\t\tparams.language.maximumSelected = formatSelectionExceeds;\n\t\t\t}\n\t\t\tif (typeof selectElement.attr('multiple') !== 'undefined' && !params.placeholder) {\n\t\t\t\tparams.placeholder = app.vtranslate('JS_SELECT_SOME_OPTIONS');\n\t\t\t} else if (!params.placeholder) {\n\t\t\t\tparams.placeholder = app.vtranslate('JS_SELECT_AN_OPTION');\n\t\t\t}\n\t\t\tif (typeof params.templateResult === 'undefined') {\n\t\t\t\tparams.templateResult = function (data, container) {\n\t\t\t\t\tif (data.element && data.element.className) {\n\t\t\t\t\t\t$(container).addClass(data.element.className);\n\t\t\t\t\t}\n\t\t\t\t\tlet actualElement = $(data.element);\n\t\t\t\t\tif (typeof selectElement.data('showAdditionalIcons') !== 'undefined' && actualElement.is('option')) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div class=\"js-element__title d-flex justify-content-between\" data-js=\"appendTo\"><div class=\"u-text-ellipsis--no-hover\">' +\n\t\t\t\t\t\t\tactualElement.text() +\n\t\t\t\t\t\t\t'</div></div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof data.name === 'undefined') {\n\t\t\t\t\t\treturn data.text;\n\t\t\t\t\t}\n\t\t\t\t\tif (data.type == 'optgroup') {\n\t\t\t\t\t\treturn '<strong>' + data.name + '</strong>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '<span>' + data.name + '</span>';\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tparams.escapeMarkup = function (markup) {\n\t\t\t\t\treturn markup;\n\t\t\t\t};\n\t\t\t} else if (typeof this[params.templateResult] === 'function') {\n\t\t\t\tparams.templateResult = this[params.templateResult];\n\t\t\t}\n\t\t\tif (typeof params.templateSelection === 'undefined') {\n\t\t\t\tparams.templateSelection = function (data, container) {\n\t\t\t\t\tif (data.element && data.element.className) {\n\t\t\t\t\t\t$(container).addClass(data.element.className);\n\t\t\t\t\t}\n\t\t\t\t\tif (data.text === '') {\n\t\t\t\t\t\treturn data.name;\n\t\t\t\t\t}\n\t\t\t\t\treturn data.text;\n\t\t\t\t};\n\t\t\t} else if (typeof this[params.templateSelection] === 'function') {\n\t\t\t\tparams.templateSelection = this[params.templateSelection];\n\t\t\t}\n\t\t\tif (selectElement.data('ajaxSearch') === 1) {\n\t\t\t\tparams = this.registerAjaxParams(selectElement, params);\n\t\t\t}\n\t\t\treturn params;\n\t\t},\n\t\t/**\n\t\t * Register ajax params\n\t\t * @param selectElement\n\t\t * @param params\n\t\t * @returns {*}\n\t\t */\n\t\tregisterAjaxParams(selectElement, params) {\n\t\t\tparams.tags = false;\n\t\t\tparams.language.searching = function () {\n\t\t\t\treturn app.vtranslate('JS_SEARCHING');\n\t\t\t};\n\t\t\tparams.language.inputTooShort = function (args) {\n\t\t\t\tvar remainingChars = args.minimum - args.input.length;\n\t\t\t\treturn app.vtranslate('JS_INPUT_TOO_SHORT').replace('_LENGTH_', remainingChars);\n\t\t\t};\n\t\t\tparams.language.errorLoading = function () {\n\t\t\t\treturn app.vtranslate('JS_NO_RESULTS_FOUND');\n\t\t\t};\n\t\t\tparams.placeholder = '';\n\t\t\tparams.ajax = {\n\t\t\t\turl: selectElement.data('ajaxUrl'),\n\t\t\t\tdataType: 'json',\n\t\t\t\tdelay: 250,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: function (params) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: params.term, // search term\n\t\t\t\t\t\tpage: params.page\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tprocessResults: function (data, params) {\n\t\t\t\t\tvar items = new Array();\n\t\t\t\t\tif (data.success == true) {\n\t\t\t\t\t\tselectElement.find('option').each(function () {\n\t\t\t\t\t\t\tvar currentTarget = $(this);\n\t\t\t\t\t\t\titems.push({\n\t\t\t\t\t\t\t\tlabel: currentTarget.html(),\n\t\t\t\t\t\t\t\tvalue: currentTarget.val()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\titems = items.concat(data.result.items);\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresults: items,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\tmore: false\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcache: false\n\t\t\t};\n\t\t\tparams.escapeMarkup = function (markup) {\n\t\t\t\tif (markup !== 'undefined') return markup;\n\t\t\t};\n\t\t\tvar minimumInputLength = 3;\n\t\t\tif (selectElement.data('minimumInput') !== 'undefined') {\n\t\t\t\tminimumInputLength = selectElement.data('minimumInput');\n\t\t\t}\n\t\t\tparams.minimumInputLength = minimumInputLength;\n\t\t\tparams.templateResult = function (data) {\n\t\t\t\tif (typeof data.name === 'undefined') {\n\t\t\t\t\treturn data.text;\n\t\t\t\t}\n\t\t\t\tif (data.type == 'optgroup') {\n\t\t\t\t\treturn '<strong>' + data.name + '</strong>';\n\t\t\t\t} else {\n\t\t\t\t\treturn '<span>' + data.name + '</span>';\n\t\t\t\t}\n\t\t\t};\n\t\t\tparams.templateSelection = function (data, container) {\n\t\t\t\tif (data.text === '') {\n\t\t\t\t\treturn data.name;\n\t\t\t\t}\n\t\t\t\treturn data.text;\n\t\t\t};\n\t\t\treturn params;\n\t\t},\n\t\t/**\n\t\t * Prepend template with a flag, function is called select2\n\t\t * @param optionData\n\t\t * @returns {Mixed|jQuery|HTMLElement}\n\t\t */\n\t\tprependDataTemplate(optionData) {\n\t\t\tlet template = optionData.text;\n\t\t\tif (optionData.id !== undefined && optionData.id !== '') {\n\t\t\t\ttemplate = $(optionData.element.dataset.template);\n\t\t\t\tif (optionData.element.dataset.state !== undefined) {\n\t\t\t\t\t//check if element has icons with different states\n\t\t\t\t\tif (optionData.element.dataset.state === 'active') {\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t\t.find('.js-select-option-event')\n\t\t\t\t\t\t\t.removeClass(optionData.element.dataset.iconInactive)\n\t\t\t\t\t\t\t.addClass(optionData.element.dataset.iconActive);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t\t.find('.js-select-option-event')\n\t\t\t\t\t\t\t.removeClass(optionData.element.dataset.iconActive)\n\t\t\t\t\t\t\t.addClass(optionData.element.dataset.iconInactive);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn template;\n\t\t},\n\t\t/**\n\t\t * Register select sortable\n\t\t * @param select\n\t\t * @param params\n\t\t */\n\t\tregisterSelectSortable(select, params) {\n\t\t\tthis.sortSelectOptions(select);\n\t\t\tthis.registerSortEvent(select, params.sortableCb);\n\t\t},\n\t\t/**\n\t\t * Sort elements (options) in select by data-sort-index\n\t\t * @param {jQuery} select2 element\n\t\t */\n\t\tsortSelectOptions(select) {\n\t\t\tselect\n\t\t\t\t.find('option[data-sort-index]')\n\t\t\t\t.sort((a, b) => {\n\t\t\t\t\treturn $(b).data('sort-index') < $(a).data('sort-index') ? 1 : -1;\n\t\t\t\t})\n\t\t\t\t.appendTo(select);\n\t\t},\n\t\t/**\n\t\t * Register select drag and drop sorting\n\t\t * @param {jQuery} select2 element\n\t\t * @param {function} callback function\n\t\t */\n\t\tregisterSortEvent(select, cb = () => {}) {\n\t\t\tlet ul = select.next('.select2-container').first('ul.select2-selection__rendered');\n\t\t\tul.sortable({\n\t\t\t\titems: 'li:not(.select2-search__field)',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tstop: function () {\n\t\t\t\t\t$(ul.find('.select2-selection__choice').get().reverse()).each(function () {\n\t\t\t\t\t\tlet optionTitle = $(this).attr('title');\n\t\t\t\t\t\tselect.find('option').each(function () {\n\t\t\t\t\t\t\tif ($(this).text() === optionTitle) {\n\t\t\t\t\t\t\t\tselect.prepend($(this));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tcb(select);\n\t\t\t\t\tselect.trigger('sortable:change');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register icons events in select2 options\n\t\t * @param selectElement\n\t\t */\n\t\tregisterIconsEvents(selectElement) {\n\t\t\tselectElement.on('select2:selecting', (event) => {\n\t\t\t\tlet currentTarget = $(event.params.args.originalEvent.target);\n\t\t\t\tif (!currentTarget.hasClass('js-select-option-event') && !currentTarget.is('path')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (currentTarget.is('path')) {\n\t\t\t\t\t//svg target fix\n\t\t\t\t\tcurrentTarget = currentTarget.closest('.js-select-option-event');\n\t\t\t\t}\n\t\t\t\tlet currentElementData = $(event.params.args.data.element).data(),\n\t\t\t\t\toptionElement = $(event.params.args.data.element),\n\t\t\t\t\tprogressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tAppConnector.request(currentElementData.url)\n\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\tlet response = data.result;\n\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\tif (optionElement.attr('data-state') === 'active') {\n\t\t\t\t\t\t\t\toptionElement.attr('data-state', 'inactive');\n\t\t\t\t\t\t\t\tcurrentTarget.toggleClass(currentElementData.iconActive + ' ' + currentElementData.iconInactive);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\toptionElement.attr('data-state', 'active');\n\t\t\t\t\t\t\t\tcurrentTarget.toggleClass(currentElementData.iconInactive + ' ' + currentElementData.iconActive);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (response.message) {\n\t\t\t\t\t\t\t\tapp.showNotify({ text: response.message, type: 'success' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (response && response.message) {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: response.message,\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Show lazy select based on data passed in js.\n\t\t *\n\t\t * @param   {object}  selectElement  jQuery\n\t\t * @param   {object}  params         contains selectParams object, lazyElements number, data array\n\t\t */\n\t\tshowLazySelect(selectElement, params) {\n\t\t\t$.fn.select2.amd.require(['select2/data/array', 'select2/utils'], (ArrayData, Utils) => {\n\t\t\t\tfunction CustomData($element, params) {\n\t\t\t\t\tCustomData.__super__.constructor.call(this, $element, params);\n\t\t\t\t}\n\t\t\t\tUtils.Extend(CustomData, ArrayData);\n\t\t\t\tCustomData.prototype.query = (options, callback) => {\n\t\t\t\t\tlet results = [];\n\t\t\t\t\tif (options.term && options.term !== '') {\n\t\t\t\t\t\tresults = params.data.filter((e) => {\n\t\t\t\t\t\t\treturn e.text.toUpperCase().indexOf(options.term.toUpperCase()) >= 0;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults = params.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (!('page' in options)) {\n\t\t\t\t\t\toptions.page = 1;\n\t\t\t\t\t}\n\t\t\t\t\tlet data = {};\n\t\t\t\t\tdata.results = results.slice((options.page - 1) * params.lazyElements, options.page * params.lazyElements);\n\t\t\t\t\tdata.pagination = {};\n\t\t\t\t\tdata.pagination.more = options.page * params.lazyElements < results.length;\n\t\t\t\t\tcallback(data);\n\t\t\t\t};\n\t\t\t\tparams.selectParams = Object.assign(params.selectParams, {\n\t\t\t\t\tajax: {},\n\t\t\t\t\tdataAdapter: CustomData\n\t\t\t\t});\n\t\t\t\tselectElement.addClass('js-lazy-select-active');\n\t\t\t\tthis.showSelect2ElementView(selectElement, params.selectParams);\n\t\t\t\tlet selectedOption = selectElement.data('selected-value');\n\t\t\t\tif (selectedOption) {\n\t\t\t\t\tlet text = selectedOption;\n\t\t\t\t\tif (\n\t\t\t\t\t\tselectElement.data('fieldinfo').picklistvalues.hasOwnProperty(selectedOption) &&\n\t\t\t\t\t\t!selectElement.get(0).dataset.templateResult\n\t\t\t\t\t) {\n\t\t\t\t\t\ttext = selectElement.data('fieldinfo').picklistvalues[selectedOption];\n\t\t\t\t\t}\n\t\t\t\t\tthis.createSelectedOption(selectElement, text, selectedOption);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register lazy select options\n\t\t *\n\t\t * @param   {object}  selectElement  [selectElement description]\n\t\t *\n\t\t * @return  {object}                 [return description]\n\t\t */\n\t\tregisterLazySelectOptions(selectElement) {\n\t\t\tlet options = [];\n\t\t\tif (\n\t\t\t\tselectElement.data('fieldinfo') &&\n\t\t\t\tselectElement.data('fieldinfo').picklistvalues &&\n\t\t\t\t!selectElement.get(0).dataset.templateResult\n\t\t\t) {\n\t\t\t\toptions = $.map(selectElement.data('fieldinfo').picklistvalues, function (val, key) {\n\t\t\t\t\treturn { id: key, text: val };\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions = $.map(selectElement.find('option'), (item) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: item.value,\n\t\t\t\t\t\telement: item,\n\t\t\t\t\t\ttext: item.text,\n\t\t\t\t\t\tselected: item.selected,\n\t\t\t\t\t\tdisabled: item.disabled\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn options;\n\t\t},\n\t\t/**\n\t\t * Set value.\n\t\t *\n\t\t * @param   {object}  selectElement  [selectElement description]\n\t\t * @param   {string}  searchValue\n\t\t * @param   {string}  type           value|text|all\n\t\t *\n\t\t * @return  {boolean|string}         false or set value\n\t\t */\n\t\tsetValue(selectElement, searchValue, type = 'value') {\n\t\t\tconst option = this.findOption(selectElement, searchValue, type);\n\t\t\tif (!option) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (selectElement.hasClass('js-lazy-select-active')) {\n\t\t\t\tthis.createSelectedOption(selectElement, option.text, option.value);\n\t\t\t} else {\n\t\t\t\tselectElement.val(option.value).trigger('change');\n\t\t\t}\n\t\t\treturn option.value;\n\t\t},\n\t\t/**\n\t\t * Find option.\n\t\t *\n\t\t * @param   {object}  selectElement  [selectElement description]\n\t\t * @param   {string}  searchValue\n\t\t * @param   {string}  type           value|text|all\n\t\t *\n\t\t * @return  {boolean|object}         false or option object\n\t\t */\n\t\tfindOption(selectElement, searchValue, type = 'value') {\n\t\t\tlet foundOption = false;\n\t\t\tconst selectValues = this.getSelectOptions(selectElement);\n\t\t\tconst getFieldValueFromText = () => Object.keys(selectValues).find((key) => selectValues[key] === searchValue);\n\t\t\tconst valueExists = () => selectValues.hasOwnProperty(searchValue);\n\t\t\tconst createOption = () => {\n\t\t\t\treturn { text: selectValues[foundOption], value: foundOption };\n\t\t\t};\n\t\t\tswitch (type) {\n\t\t\t\tcase 'value':\n\t\t\t\t\tif (valueExists()) {\n\t\t\t\t\t\tfoundOption = searchValue;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text':\n\t\t\t\t\tfoundOption = getFieldValueFromText();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'all':\n\t\t\t\t\tif (valueExists()) {\n\t\t\t\t\t\tfoundOption = searchValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfoundOption = getFieldValueFromText();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn foundOption ? createOption() : false;\n\t\t},\n\t\t/**\n\t\t * Get select options\n\t\t *\n\t\t * @param   {object}  selectElement  jQuery\n\t\t *\n\t\t * @return  {object}                 [return description]\n\t\t */\n\t\tgetSelectOptions(selectElement) {\n\t\t\tif (selectElement.data('fieldinfo') && selectElement.data('fieldinfo').picklistvalues) {\n\t\t\t\treturn selectElement.data('fieldinfo').picklistvalues;\n\t\t\t} else {\n\t\t\t\tlet optionsObject = {};\n\t\t\t\tselectElement.find('option').each((i, element) => {\n\t\t\t\t\toptionsObject[element.value] = element.text;\n\t\t\t\t});\n\t\t\t\treturn optionsObject;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Create selected option\n\t\t *\n\t\t * @param   {object}  selectElement  jQuery\n\t\t * @param   {string}  text\n\t\t * @param   {string}  value\n\t\t */\n\t\tcreateSelectedOption(selectElement, text, value) {\n\t\t\tconst newOption = new Option(text, value, true, true);\n\t\t\tselectElement.append(newOption).trigger('change');\n\t\t}\n\t},\n\tMultiImage: {\n\t\tcurrentFileUploads: 0,\n\t\tregister(container) {\n\t\t\t$('.js-multi-image', container).each(function () {\n\t\t\t\tnew MultiImage($(this));\n\t\t\t});\n\t\t}\n\t},\n\tMultiEmail: {\n\t\tregister($container) {\n\t\t\t$('.js-multi-email', $container).each((idx, multiEmailField) => {\n\t\t\t\tlet $multiEmailField = $(multiEmailField);\n\t\t\t\t$multiEmailField.on('change', '.js-multi-email', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.parseToJSON($multiEmailField);\n\t\t\t\t});\n\t\t\t\t$multiEmailField.on('click', '.js-multi-email-consenticon', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.toggleConsent($(e.target));\n\t\t\t\t\tApp.Fields.MultiEmail.parseToJSON($multiEmailField);\n\t\t\t\t});\n\t\t\t\t$multiEmailField.on('click', '.js-multi-email-add', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.addItem($multiEmailField);\n\t\t\t\t});\n\t\t\t\t$multiEmailField.on('click', '.js-multi-email-remove', (e) => {\n\t\t\t\t\tApp.Fields.MultiEmail.removeItem($(e.target));\n\t\t\t\t\tApp.Fields.MultiEmail.parseToJSON($multiEmailField);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Converts data to json and set MultiEmail field value\n\t\t * @param $multiEmailField\n\t\t */\n\t\tparseToJSON($multiEmailField) {\n\t\t\tlet value = [];\n\t\t\t$('.js-multi-email-item', $multiEmailField).each((idx, item) => {\n\t\t\t\tlet $item = $(item);\n\t\t\t\tlet email = $('.js-multi-email', $item).val();\n\t\t\t\tlet consent = $('.js-multi-email-consent', $item).is(':visible') ? 1 : 0;\n\t\t\t\tif (email) {\n\t\t\t\t\tvalue.push({\n\t\t\t\t\t\te: email,\n\t\t\t\t\t\to: consent\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\t$('.js-multi-email-value', $multiEmailField).val(JSON.stringify(value));\n\t\t},\n\t\t/**\n\t\t * Adds a new item: email box and consent checkbox\n\t\t * @param $multiEmailField\n\t\t */\n\t\taddItem($multiEmailField) {\n\t\t\tlet $newItem = $('.js-multi-email-item', $multiEmailField).first().clone(false, false);\n\t\t\tif ($newItem) {\n\t\t\t\t$('.js-multi-email', $newItem).attr('value', '').val('');\n\t\t\t\t$('.js-multi-email-consent', $newItem).val('');\n\t\t\t\t$('.js-multi-email-consenticon', $newItem).hide();\n\t\t\t\t$('.js-multi-email-consenticon', $newItem).first().show();\n\t\t\t\t$('.js-multi-email-items', $multiEmailField).append($newItem);\n\t\t\t\t$('.js-multi-email-remove', $multiEmailField).show();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Removes an item: email box and consent checkbox\n\t\t * @param $deleteBtn\n\t\t */\n\t\tremoveItem($deleteBtn) {\n\t\t\tlet $multiEmailField = $deleteBtn.closest('.js-multi-email');\n\t\t\tif (1 < $('.js-multi-email-item', $multiEmailField).length) {\n\t\t\t\t$deleteBtn.closest('.js-multi-email-item').remove();\n\t\t\t}\n\t\t\tif (1 == $('.js-multi-email-item', $multiEmailField).length) {\n\t\t\t\t$('.js-multi-email-remove', $multiEmailField).hide();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Toggle consent boxes\n\t\t * @param $consentBox\n\t\t */\n\t\ttoggleConsent($consentBox) {\n\t\t\tlet $item = $consentBox.closest('.js-multi-email-item');\n\t\t\t$('.js-multi-email-consenticon', $item).toggle();\n\t\t}\n\t},\n\tMultiDependField: {\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tregister(container) {\n\t\t\tcontainer.find('.js-multi-field').each((index, element) => {\n\t\t\t\tconst inputElement = $(element);\n\t\t\t\tconst fields = inputElement.find('.js-multi-field-val').data('fields');\n\t\t\t\tinputElement.find('.js-multi-field-add-item').on('click', (e) => {\n\t\t\t\t\tApp.Fields.MultiDependField.addRow(inputElement, fields);\n\t\t\t\t});\n\t\t\t\tApp.Fields.MultiDependField.registerRow(inputElement, fields);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Register row\n\t\t * @param {jQuery} inputElement\n\t\t * @param {Object} fields\n\t\t */\n\t\tregisterRow(inputElement, fields) {\n\t\t\tfor (let i in fields) {\n\t\t\t\tinputElement.find('[name=\"' + fields[i] + '\"]').on('change', (e) => {\n\t\t\t\t\tApp.Fields.MultiDependField.parseToJson(inputElement, fields);\n\t\t\t\t});\n\t\t\t}\n\t\t\tinputElement.find('.js-remove-item').on('click', (e) => {\n\t\t\t\tApp.Fields.MultiDependField.removeRow($(e.target), inputElement);\n\t\t\t\tApp.Fields.MultiDependField.parseToJson(inputElement.closest('.js-multi-field'), fields);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Invoked after clicking the remove button\n\t\t * @param {jQuery} element\n\t\t * @param {jQuery} container\n\t\t */\n\t\tremoveRow(element, container) {\n\t\t\tif (container.find('.js-multi-field-row').length > 1) {\n\t\t\t\telement.closest('.js-multi-field-row').remove();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Convert data to json\n\t\t * @param {jQuery} element\n\t\t * @param {Object} fields\n\t\t */\n\t\tparseToJson(element, fields) {\n\t\t\tlet arr = [];\n\t\t\tlet allFields = $(element).find('.js-multi-field-row');\n\t\t\tlet arrayLength = allFields.length;\n\t\t\tfor (let i = 0; i < arrayLength; ++i) {\n\t\t\t\tlet partData = {},\n\t\t\t\t\tskip = false;\n\t\t\t\tfor (let k in fields) {\n\t\t\t\t\tpartData[fields[k]] = $(allFields[i])\n\t\t\t\t\t\t.find('[name=\"' + fields[k] + '\"]')\n\t\t\t\t\t\t.val();\n\t\t\t\t\tif (k == 0 && partData[fields[k]] === '') {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tarr.push(partData);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$(element).find('input.js-multi-field-val').val(JSON.stringify(arr));\n\t\t},\n\t\t/**\n\t\t * Invoked after clicking the add button\n\t\t * @param {jQuery} container\n\t\t * @param {Object} fields\n\t\t */\n\t\taddRow(container, fields) {\n\t\t\tlet newField;\n\t\t\tlet lastField = container.find('.js-multi-field-row').last();\n\t\t\tlet selectFields = lastField.find('select.select2');\n\t\t\tif (selectFields.length) {\n\t\t\t\tselectFields.select2('destroy').removeAttr('data-select2-id').find('option').removeAttr('data-select2-id');\n\t\t\t\tnewField = lastField.clone(false, false);\n\t\t\t\tApp.Fields.Picklist.showSelect2ElementView(lastField.find('select.select2'));\n\t\t\t} else {\n\t\t\t\tnewField = lastField.clone(false, false);\n\t\t\t}\n\t\t\tfor (let i in fields) {\n\t\t\t\tnewField.find('[name=\"' + fields[i] + '\"]').val('');\n\t\t\t}\n\t\t\tnewField.insertAfter(container.find('.js-multi-field-row').last());\n\t\t\tApp.Fields.Picklist.showSelect2ElementView(newField.find('select.select2'));\n\t\t\tApp.Fields.Date.register(newField);\n\t\t\tApp.Fields.MultiDependField.registerRow(container, fields);\n\t\t}\n\t},\n\tDependentSelect: {\n\t\t/**\n\t\t * Get options for select from array of items (exclude children)\n\t\t * @param {Array} data {value,text,selected, children => data[]}\n\t\t * @returns {string}\n\t\t */\n\t\tgenerateOptionsFromData(data) {\n\t\t\tlet html = '';\n\t\t\tfor (let item of data) {\n\t\t\t\tlet selected = false;\n\t\t\t\tif (typeof item.selected !== 'undefined' && item.selected) {\n\t\t\t\t\tselected = true;\n\t\t\t\t}\n\t\t\t\thtml += `<option value=${item.value}${selected ? ' selected' : ''}>${item.text}</option>`;\n\t\t\t}\n\t\t\treturn html;\n\t\t},\n\t\t/**\n\t\t * Register dependent selects\n\t\t *\n\t\t * @param {jQuery} container with data- options:\n\t\t * data-slave: selector for slave element\n\t\t * data-data: array of options with children elements for slave select (see getOptions for data format)\n\t\t * data-sort: do we want to sort slave options by text when master has two items selected? if not - just append options to slave\n\t\t */\n\t\tregister(container) {\n\t\t\tif (typeof container === 'undefined' || typeof container.length === 'undefined' || !container.length) {\n\t\t\t\treturn app.errorLog('Dependend select field container is missing.');\n\t\t\t}\n\t\t\tcontainer.each(function () {\n\t\t\t\tconst masterSelect = $(this),\n\t\t\t\t\tslaveSelect = $(masterSelect.data('slave')),\n\t\t\t\t\tdata = masterSelect.data('data');\n\t\t\t\tif (!slaveSelect.length) {\n\t\t\t\t\treturn app.errorLog('Could not find slave select element (data-slave attribute)');\n\t\t\t\t}\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn app.errorLog('Could not load data (data-data attribute)');\n\t\t\t\t}\n\t\t\t\tmasterSelect.on('change', (e) => {\n\t\t\t\t\tlet values = $(e.target).val();\n\t\t\t\t\tif (!Array.isArray(values)) {\n\t\t\t\t\t\tvalues = [values];\n\t\t\t\t\t}\n\t\t\t\t\tlet children = [];\n\t\t\t\t\tfor (let value of values) {\n\t\t\t\t\t\tfor (let item of data) {\n\t\t\t\t\t\t\tif (item.value === value) {\n\t\t\t\t\t\t\t\tif (typeof item.children !== 'undefined') {\n\t\t\t\t\t\t\t\t\titem.children.forEach((child) => {\n\t\t\t\t\t\t\t\t\t\tchildren.push(child);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (masterSelect.data('sort')) {\n\t\t\t\t\t\tchildren.sort((a, b) => {\n\t\t\t\t\t\t\treturn a.text.localeCompare(b.text);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tslaveSelect.html(App.Fields.DependentSelect.generateOptionsFromData(children));\n\t\t\t\t});\n\t\t\t\tmasterSelect.html(App.Fields.DependentSelect.generateOptionsFromData(data));\n\t\t\t});\n\t\t}\n\t},\n\tGantt: {\n\t\tregister(container, data) {\n\t\t\treturn new GanttField(container, data);\n\t\t}\n\t},\n\tInteger: {\n\t\t/**\n\t\t * Function returns the integer in user specified format.\n\t\t * @param {number} value\n\t\t * @param {int} numberOfDecimal\n\t\t * @returns {string}\n\t\t */\n\t\tformatToDisplay(value) {\n\t\t\tif (!value) {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tlet groupSeparator = CONFIG.currencyGroupingSeparator;\n\t\t\tlet groupingPattern = CONFIG.currencyGroupingPattern;\n\t\t\tvalue = parseFloat(value).toFixed(1);\n\t\t\tlet integer = value.toString().split('.')[0];\n\t\t\tif (integer.length > 3) {\n\t\t\t\tif (groupingPattern === '123,456,789') {\n\t\t\t\t\tinteger = integer.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + groupSeparator);\n\t\t\t\t} else if (groupingPattern === '123456,789') {\n\t\t\t\t\tinteger = integer.slice(0, -3) + groupSeparator + integer.slice(-3);\n\t\t\t\t} else if (groupingPattern === '12,34,56,789') {\n\t\t\t\t\tinteger =\n\t\t\t\t\t\tinteger.slice(0, -3).replace(/(\\d)(?=(\\d\\d)+(?!\\d))/g, '$1' + groupSeparator) +\n\t\t\t\t\t\tgroupSeparator +\n\t\t\t\t\t\tinteger.slice(-3);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn integer;\n\t\t}\n\t},\n\tDouble: {\n\t\t/**\n\t\t * Function returns the currency in user specified format.\n\t\t * @param {number} value\n\t\t * @param {boolean} numberOfDecimal\n\t\t * @param {int} numberOfDecimal\n\t\t * @returns {string}\n\t\t */\n\t\tformatToDisplay(value, fixed = true, numberOfDecimal = CONFIG.noOfCurrencyDecimals) {\n\t\t\tif (!value) {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tlet strDecimal = value.toString().split('.')[1];\n\t\t\tlet numberOfZerosAtTheEnd = 0;\n\t\t\tif (typeof strDecimal !== 'undefined') {\n\t\t\t\tfor (let i = strDecimal.length - 1; i > 0; --i) {\n\t\t\t\t\tif (strDecimal[i] == '0') {\n\t\t\t\t\t\tnumberOfZerosAtTheEnd++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = parseFloat(value);\n\t\t\tif (fixed) {\n\t\t\t\tlet base = 10 ** numberOfDecimal;\n\t\t\t\tvalue =\n\t\t\t\t\tMath.round(\n\t\t\t\t\t\tvalue * base + Math.sign(value) * 0.1 ** (17 - 2 - (Math.round(value * base) / base).toString().length)\n\t\t\t\t\t) / base;\n\t\t\t}\n\t\t\tlet splittedFloat = value.toString().split('.');\n\t\t\tlet integer = splittedFloat[0];\n\t\t\tif (integer !== '-0' && integer !== '0') {\n\t\t\t\tinteger = App.Fields.Integer.formatToDisplay(integer);\n\t\t\t}\n\t\t\tlet decimal = splittedFloat[1];\n\t\t\tif (numberOfDecimal) {\n\t\t\t\tif (!CONFIG.truncateTrailingZeros && decimal) {\n\t\t\t\t\tfor (let i = 0; i < numberOfZerosAtTheEnd && decimal.length < numberOfDecimal; ++i) {\n\t\t\t\t\t\tdecimal += '0';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (decimal) {\n\t\t\t\t\treturn integer + CONFIG.currencyDecimalSeparator + decimal;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn integer;\n\t\t},\n\t\t/**\n\t\t * Function to get value for db format.\n\t\t * @param {string} value\n\t\t * @returns {number}\n\t\t */\n\t\tformatToDb(value) {\n\t\t\tif (value == undefined || value == '') {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tvalue = value.toString();\n\t\t\tvalue = value.split(CONFIG.currencyGroupingSeparator).join('');\n\t\t\tvalue = value.replace(/\\s/g, '').replace(CONFIG.currencyDecimalSeparator, '.');\n\t\t\treturn parseFloat(value);\n\t\t}\n\t},\n\t/**\n\t * Tree\n\t */\n\tTree: class Tree {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-tree-container')) {\n\t\t\t\treturn new Tree(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-tree-container').each((n, e) => {\n\t\t\t\tinstances.push(new Tree($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\tthis.modalEvent();\n\t\t\tthis.autoCompleteEvent();\n\t\t\tthis.clearSelectionEvent();\n\t\t}\n\t\t/**\n\t\t * Function which will handle modal view with tree\n\t\t */\n\t\tmodalEvent() {\n\t\t\t$('.js-tree-modal', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (_) => {\n\t\t\t\t\tlet sourceFieldElement = this.container.find('input.sourceField'),\n\t\t\t\t\t\tfieldDisplayElement = this.container.find('input[name=\"' + sourceFieldElement.attr('name') + '_display\"]');\n\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\tmodule: sourceFieldElement.data('modulename'),\n\t\t\t\t\t\tview: 'TreeModal',\n\t\t\t\t\t\ttemplate: sourceFieldElement.data('treetemplate'),\n\t\t\t\t\t\tfieldName: sourceFieldElement.attr('name'),\n\t\t\t\t\t\tmultiple: sourceFieldElement.data('multiple'),\n\t\t\t\t\t\tvalue: sourceFieldElement.val()\n\t\t\t\t\t}).done(function (requestData) {\n\t\t\t\t\t\tapp.modalEvents['treeModal'] = function (modal, instance) {\n\t\t\t\t\t\t\tinstance.setSelectEvent((responseData) => {\n\t\t\t\t\t\t\t\tsourceFieldElement.val(responseData.id);\n\t\t\t\t\t\t\t\tfieldDisplayElement.val(responseData.name).attr('readonly', true);\n\t\t\t\t\t\t\t\tsourceFieldElement.trigger('change');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\tapp.showModalWindow(requestData, { modalId: 'treeModal' });\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Function which will handle the reference auto complete event registrations\n\t\t */\n\t\tautoCompleteEvent() {\n\t\t\tlet autoCompleteElement = $('input.treeAutoComplete', this.container);\n\t\t\tif (autoCompleteElement.hasClass('ui-autocomplete-input')) {\n\t\t\t\tautoCompleteElement.autocomplete('destroy');\n\t\t\t}\n\t\t\tautoCompleteElement.autocomplete({\n\t\t\t\tdelay: '600',\n\t\t\t\tminLength: '3',\n\t\t\t\tsource: function (request, response) {\n\t\t\t\t\tlet inputElement = $(this.element[0]);\n\t\t\t\t\tlet searchValue = request.term.toLowerCase();\n\t\t\t\t\tlet parentElem = inputElement.closest('.js-tree-container');\n\t\t\t\t\tlet sourceFieldElement = $('input.sourceField', parentElem);\n\t\t\t\t\tlet fieldInfo = sourceFieldElement.data('fieldinfo');\n\t\t\t\t\tlet allValues = fieldInfo.picklistvalues;\n\t\t\t\t\tlet responseDataList = [];\n\t\t\t\t\tfor (let id in allValues) {\n\t\t\t\t\t\tif (allValues[id].toLowerCase().indexOf(searchValue) >= 0) {\n\t\t\t\t\t\t\tresponseDataList.push({ label: allValues[id], value: id, id: id });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (responseDataList.length <= 0) {\n\t\t\t\t\t\t$(inputElement).val('');\n\t\t\t\t\t\tresponseDataList.push({\n\t\t\t\t\t\t\tlabel: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\t\t\t\ttype: 'no results'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tresponse(responseDataList);\n\t\t\t\t},\n\t\t\t\tselect: function (event, ui) {\n\t\t\t\t\tlet selectedItemData = ui.item;\n\t\t\t\t\tif (typeof selectedItemData.type !== 'undefined' && selectedItemData.type == 'no results') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tselectedItemData.name = selectedItemData.value;\n\t\t\t\t\tthis.value = selectedItemData.label;\n\t\t\t\t\tlet element = $(this).attr('readonly', true);\n\t\t\t\t\telement.closest('.js-tree-container').find('input.sourceField').val(selectedItemData.id).trigger('change');\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\tchange: function (event, ui) {},\n\t\t\t\topen: function (event, ui) {\n\t\t\t\t\t//To Make the menu come up in the case of quick create\n\t\t\t\t\t$(this).data('ui-autocomplete').menu.element.css('z-index', '100001');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Function which will register reference field clear event\n\t\t */\n\t\tclearSelectionEvent() {\n\t\t\t$('.clearTreeSelection', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tlet fieldElement = this.container.find('.sourceField');\n\t\t\t\t\t$('input[name=\"' + fieldElement.attr('name') + '_display\"]', this.container)\n\t\t\t\t\t\t.removeAttr('readonly')\n\t\t\t\t\t\t.val('');\n\t\t\t\t\tfieldElement.val('').trigger('change');\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\t\t}\n\t},\n\t/**\n\t * TimePeriod class\n\t *\n\t * Save value as time period in 00:m format where '0' is a number of units\n\t * ':' is just separator\n\t * and 'm' is time scale/period in php date format - available formats are [m, d, H, i, s]\n\t * @example 10:i = 10 minutes, 2:m = 2 months, 20:H = 20 hours and so on...\n\t */\n\tTimePeriod: class TimePeriod {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.value = container.val();\n\t\t\tif (this.value) {\n\t\t\t\tconst split = this.value.split(':');\n\t\t\t\tthis.time = Number(split[0]);\n\t\t\t\tthis.period = split[1];\n\t\t\t} else {\n\t\t\t\tthis.time = 0;\n\t\t\t\tthis.period = 'H';\n\t\t\t\tthis.value = '0:H';\n\t\t\t\tcontainer.val(this.value);\n\t\t\t}\n\t\t\tthis.injectContent();\n\t\t}\n\n\t\t/**\n\t\t * Register time period field/s\n\t\t *\n\t\t * @param {jQuery} container it could be input type hidden with js-time-period class\n\t\t *                           or container that contains multiple js-time-period inputs\n\t\t *\n\t\t * @example <input type=\"hidden\" name=\"field_name\" class=\"js-time-period\">\n\t\t *\n\t\t * @returns {TimePeriod|TimePeriod[]} instance/s\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('c-time-period')) {\n\t\t\t\treturn new TimePeriod(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.c-time-period').each((index, value) => {\n\t\t\t\tinstances.push(new TimePeriod($(value)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\n\t\t/**\n\t\t * Inject content next to container\n\t\t *\n\t\t * @returns  {jQuery}  created element with input and select\n\t\t */\n\t\tinjectContent() {\n\t\t\tlet content = `<div class=\"input-group c-time-period\" data-js=\"container\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<a href class=\"btn btn-default c-time-period-input-modifier c-time-period-input-modifier--minus-1\"><span class=\"fas fa-minus\"></span></a>\n\t\t\t\t</div>\n\t\t\t\t<input type=\"number\" class=\"form-control c-time-period-input\" min=\"0\" value=\"${this.time}\"\n\t\t\t\t\tdata-validation-engine=\"validate[required,funcCall[Vtiger_Integer_Validator_Js.invokeValidation]]\">\n\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t<a href class=\"btn btn-default c-time-period-input-modifier c-time-period-input-modifier--plus-1\"><span class=\"fas fa-plus\"></span></a>\n\t\t\t\t\t<select class=\"select2 js-time-period-select time-period-${this.container.attr('name')}\">\n\t\t\t\t\t\t<option value=\"d\"${this.period === 'd' ? ' selected=\"selected\"' : ''}>${app.vtranslate('JS_DAYS_FULL')}</option>\n\t\t\t\t\t\t<option value=\"H\"${this.period === 'H' ? ' selected=\"selected\"' : ''}>${app.vtranslate('JS_HOURS_FULL')}</option>\n\t\t\t\t\t\t<option value=\"i\"${this.period === 'i' ? ' selected=\"selected\"' : ''}>${app.vtranslate('JS_MINUTES_FULL')}</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>`;\n\t\t\tthis.element = this.container.parent().append(content);\n\t\t\tthis.input = this.element.find('.c-time-period-input').eq(0);\n\t\t\tthis.select = this.element.find('.select2').eq(0);\n\t\t\tthis.plus1btn = this.element.find('.c-time-period-input-modifier--plus-1').eq(0);\n\t\t\tthis.minus1btn = this.element.find('.c-time-period-input-modifier--minus-1').eq(0);\n\t\t\tApp.Fields.Picklist.showSelect2ElementView(this.select, { width: '100px' });\n\t\t\tthis.registerEvents();\n\t\t\treturn this.element;\n\t\t}\n\n\t\t/**\n\t\t * Register events\n\t\t */\n\t\tregisterEvents() {\n\t\t\tthis.input.on('input', this.onChange.bind(this));\n\t\t\tthis.select.on('change', this.onChange.bind(this));\n\t\t\tthis.plus1btn.on('click', this.onPlus1Click.bind(this));\n\t\t\tthis.minus1btn.on('click', this.onMinus1Click.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * On change event\n\t\t *\n\t\t * @param {Event} event\n\t\t */\n\t\tonChange(event) {\n\t\t\tthis.time = this.input.val();\n\t\t\tthis.period = this.select.val();\n\t\t\tthis.value = this.input.val() + ':' + this.select.val();\n\t\t\tthis.container.val(this.value);\n\t\t}\n\n\t\t/**\n\t\t * Plus 1 button click event handler\n\t\t *\n\t\t * @param {Event} event\n\t\t */\n\t\tonPlus1Click(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.input.val(Number(this.input.val()) + 1);\n\t\t\tthis.onChange();\n\t\t}\n\n\t\t/**\n\t\t * Minus 1 button click event handler\n\t\t *\n\t\t * @param {Event} event\n\t\t */\n\t\tonMinus1Click(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif (Number(this.input.val()) > 0) {\n\t\t\t\tthis.input.val(Number(this.input.val()) - 1);\n\t\t\t\tthis.onChange();\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Multi currency\n\t */\n\tMultiCurrency: class MultiCurrency {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-multicurrency-container')) {\n\t\t\t\treturn new MultiCurrency(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-multicurrency-container').each((n, e) => {\n\t\t\t\tinstances.push(new MultiCurrency($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\t$('.js-multicurrency-event', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tlet modal = $('<form>').append(this.container.find('.js-currencies-container .js-currencies-modal').clone());\n\t\t\t\t\tthis.registerEnableCurrencyEvent(modal);\n\t\t\t\t\tthis.registerResetCurrencyEvent(modal);\n\t\t\t\t\tthis.loadData(modal);\n\t\t\t\t\tthis.calculateConversionRate(modal);\n\t\t\t\t\tapp.showModalWindow({\n\t\t\t\t\t\tdata: modal,\n\t\t\t\t\t\tcss: {},\n\t\t\t\t\t\tcb: (data) => {\n\t\t\t\t\t\t\tlet form = data.parent();\n\t\t\t\t\t\t\tform.validationEngine(app.validationEngineOptionsForRecord);\n\t\t\t\t\t\t\tform.on('submit', (e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif (form.validationEngine('validate') && this.saveCurrencies(form)) {\n\t\t\t\t\t\t\t\t\tlet id = form.closest('.js-modal-container').attr('id');\n\t\t\t\t\t\t\t\t\tapp.hideModalWindow(null, id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tthis.getField().on('focusout', (e) => {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\telement.formatNumber();\n\t\t\t\tthis.setPrice(element.val());\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Loading data\n\t\t * @param {jQuery} modalContainer\n\t\t */\n\t\tloadData(modalContainer) {\n\t\t\tlet values = JSON.parse(this.getFieldToSave().val());\n\t\t\tlet baseCurrencyId = values['currencyId'] || CONFIG.currencyId;\n\t\t\tif (values['currencies'] === undefined) {\n\t\t\t\tvalues['currencies'] = [];\n\t\t\t\tvalues['currencies'][baseCurrencyId] = { price: 0 };\n\t\t\t}\n\t\t\tfor (let i in values['currencies']) {\n\t\t\t\tlet row = modalContainer.find('[data-currency-id=\"' + i + '\"]');\n\t\t\t\tif (row.length) {\n\t\t\t\t\trow.find('.js-enable-currency').prop('checked', true);\n\t\t\t\t\trow.find('.js-currency-reset,.js-base-currency,[name^=\"currencies[\"]').prop('disabled', false);\n\t\t\t\t\trow.find('.js-converted-price').val(values['currencies'][i]['price']);\n\t\t\t\t\tif (i == baseCurrencyId) {\n\t\t\t\t\t\trow.find('.js-base-currency').prop('checked', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Set value\n\t\t * @param {number} value\n\t\t */\n\t\tsetPrice(value) {\n\t\t\tlet values = JSON.parse(this.getFieldToSave().val());\n\t\t\tlet baseCurrencyId = values['currencyId'] || CONFIG.currencyId;\n\t\t\tvalues['currencies'] = values['currencies'] || {};\n\t\t\tvalues['currencies'][baseCurrencyId] = { price: value };\n\t\t\tvalues['currencyId'] = baseCurrencyId;\n\t\t\tvalues = $.extend({}, values);\n\t\t\tthis.getFieldToSave().val(JSON.stringify($.extend({}, values)));\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-multicurrency-field');\n\t\t}\n\t\t/**\n\t\t * Gets field to save\n\t\t */\n\t\tgetFieldToSave() {\n\t\t\treturn this.container.find('.js-multicurrency-field-to-save');\n\t\t}\n\t\t/**\n\t\t * Save\n\t\t * @param {jQuery} modalContainer\n\t\t */\n\t\tsaveCurrencies(modalContainer) {\n\t\t\tlet enabledBaseCurrency = modalContainer.find('.js-enable-currency').filter(':checked');\n\t\t\tif (enabledBaseCurrency.length < 1) {\n\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\ttext: app.vtranslate('JS_PLEASE_SELECT_BASE_CURRENCY_FOR_PRODUCT'),\n\t\t\t\t\ttype: 'error'\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet selectedBaseCurrency = modalContainer.find('.js-base-currency').filter(':checked');\n\t\t\tif (selectedBaseCurrency.length < 1) {\n\t\t\t\tVtiger_Helper_Js.showMessage({\n\t\t\t\t\ttext: app.vtranslate('JS_PLEASE_ENABLE_BASE_CURRENCY_FOR_PRODUCT'),\n\t\t\t\t\ttype: 'error'\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet selectedRow = selectedBaseCurrency.closest('tr');\n\t\t\tlet symbol = selectedRow.data('currency-symbol');\n\t\t\tthis.container.find('.js-currency').text(symbol);\n\t\t\tlet data = {};\n\t\t\tdata['currencies'] = {};\n\t\t\tenabledBaseCurrency.closest('tr').each((n, e) => {\n\t\t\t\tlet row = $(e),\n\t\t\t\t\tcurrencyId = row.data('currencyId');\n\t\t\t\tdata['currencies'][currencyId] = {};\n\t\t\t\tdata['currencies'][currencyId]['price'] = row.find('.js-converted-price').val();\n\t\t\t\tif (row.find('.js-base-currency:checked').length) {\n\t\t\t\t\tdata['currencyId'] = currencyId;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.getFieldToSave().val(JSON.stringify(data));\n\t\t\tthis.getField().val(selectedRow.find('.js-converted-price').val());\n\t\t\tselectedBaseCurrency.prop('checked', false);\n\t\t\treturn true;\n\t\t}\n\t\t/**\n\t\t * Calculate\n\t\t * @param {jQuery} container\n\t\t */\n\t\tcalculateConversionRate(container) {\n\t\t\tlet baseCurrencyConversionRate = container\n\t\t\t\t.find('.js-base-currency')\n\t\t\t\t.filter(':checked')\n\t\t\t\t.closest('tr')\n\t\t\t\t.find('.js-conversion-rate');\n\t\t\tif (baseCurrencyConversionRate.val() == '1') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet baseCurrencyRatePrevValue = baseCurrencyConversionRate.getNumberFromValue();\n\t\t\tcontainer.find('.js-conversion-rate').each(function (key, domElement) {\n\t\t\t\tlet element = $(domElement);\n\t\t\t\tif (!element.is(baseCurrencyConversionRate)) {\n\t\t\t\t\telement.val(\n\t\t\t\t\t\tApp.Fields.Double.formatToDisplay(element.getNumberFromValue() / baseCurrencyRatePrevValue, false)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tbaseCurrencyConversionRate.val('1');\n\t\t}\n\t\t/**\n\t\t * Function to register event for enabling currency on checkbox checked\n\t\t * @param {jQuery} container\n\t\t */\n\t\tregisterEnableCurrencyEvent(container) {\n\t\t\tcontainer.on('change', '.js-enable-currency', (e) => {\n\t\t\t\tlet element = $(e.currentTarget);\n\t\t\t\tlet parentRow = element.closest('tr');\n\t\t\t\tif (element.is(':checked')) {\n\t\t\t\t\telement.attr('checked', 'checked');\n\t\t\t\t\tlet price = this.getField().getNumberFromValue() * parentRow.find('.js-conversion-rate').getNumberFromValue();\n\t\t\t\t\t$('input', parentRow).removeAttr('disabled');\n\t\t\t\t\tparentRow.find('.js-currency-reset').removeAttr('disabled');\n\t\t\t\t\tparentRow.find('.js-converted-price').val(App.Fields.Double.formatToDisplay(price));\n\t\t\t\t} else {\n\t\t\t\t\tif (parentRow.find('.js-base-currency').is(':checked')) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\t'\"' +\n\t\t\t\t\t\t\t\tparentRow.find('.js-currency-name').text() +\n\t\t\t\t\t\t\t\t'\" ' +\n\t\t\t\t\t\t\t\tapp.vtranslate('JS_BASE_CURRENCY_CHANGED_TO_DISABLE_CURRENCY')\n\t\t\t\t\t\t});\n\t\t\t\t\t\telement.prop('checked', true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tparentRow.find('input').attr('disabled', 'disabled');\n\t\t\t\t\tparentRow.find('.js-currency-reset').attr('disabled', 'disabled');\n\t\t\t\t\telement.removeAttr('disabled checked');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Function to register event for reseting the currencies\n\t\t * @param {jQuery} container\n\t\t */\n\t\tregisterResetCurrencyEvent(container) {\n\t\t\tcontainer.on('click', '.js-currency-reset', (e) => {\n\t\t\t\tlet parentElem = $(e.currentTarget).closest('tr');\n\t\t\t\tlet price = this.getField().getNumberFromValue() * parentElem.find('.js-conversion-rate').getNumberFromValue();\n\t\t\t\t$('.js-converted-price', parentElem).val(App.Fields.Double.formatToDisplay(price));\n\t\t\t});\n\t\t}\n\t},\n\t/**\n\t * Meeting URL\n\t */\n\tMeetingUrl: class MeetingUrl {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-meeting-container')) {\n\t\t\t\treturn new MeetingUrl(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-meeting-container').each((n, e) => {\n\t\t\t\tinstances.push(new MeetingUrl($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\tlet addButton = $('.js-meeting-add', this.container);\n\t\t\tif (!addButton.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet valElement = $('.js-meeting-val', this.container);\n\t\t\taddButton.off('click').on('click', (e) => {\n\t\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\tAppConnector.request(this.getUrl(e))\n\t\t\t\t\t.done((data) => {\n\t\t\t\t\t\tlet result = data.result;\n\t\t\t\t\t\tif (result && result.success && result.url) {\n\t\t\t\t\t\t\tvalElement.attr('readonly', true).val(result.url);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t})\n\t\t\t\t\t.fail((_) => {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t});\n\t\t\t});\n\t\t\t$('.js-meeting-clear', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tvalElement.attr('readonly', false).val('');\n\t\t\t\t});\n\t\t\tthis.addEventsForDependentFields();\n\t\t}\n\t\t/**\n\t\t * Gets URL\n\t\t */\n\t\tgetUrl(e) {\n\t\t\tlet url = e.currentTarget.dataset.url;\n\t\t\tlet formData = $(e.currentTarget).closest('form').serializeFormData();\n\t\t\tlet expField = e.currentTarget.dataset.expField;\n\t\t\tif (expField && formData && formData[expField]) {\n\t\t\t\tlet date = formData[expField].split(' ');\n\t\t\t\turl += '&exp=' + encodeURIComponent(date[0]);\n\t\t\t}\n\t\t\tlet roomName = e.currentTarget.dataset.roomName;\n\t\t\tif (roomName && formData && formData[roomName]) {\n\t\t\t\turl += '&roomName=' + encodeURIComponent(formData[roomName]);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t\t/**\n\t\t * Add events for dependent fields\n\t\t */\n\t\taddEventsForDependentFields() {\n\t\t\tlet addButton = $('.js-meeting-add', this.container);\n\t\t\tlet valElement = $('.js-meeting-val', this.container);\n\t\t\tlet data = addButton.data();\n\t\t\tlet formElement = this.container.closest('form');\n\t\t\tfor (let name of ['expField', 'roomName']) {\n\t\t\t\tlet fieldName = data[name];\n\t\t\t\tif (!fieldName) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tformElement.on('change', `[name=${fieldName}]`, (_) => {\n\t\t\t\t\tif (data['domain'] && valElement.val().indexOf(data['domain']) === 0) {\n\t\t\t\t\t\taddButton.trigger('click');\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_MEETING_URL_CHANGED')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Changes Json\n\t */\n\tChangesJson: class ChangesJson {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-changesjson-container')) {\n\t\t\t\treturn new ChangesJson(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-changesjson-container').each((_, e) => {\n\t\t\t\tinstances.push(new ChangesJson($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\t$('.js-changesjson-edit', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tlet field = this.getField();\n\t\t\t\t\tlet value = field.val() ? JSON.parse(field.val()) : { record: 0, module: '', changes: [] };\n\t\t\t\t\tlet relatedField = this.getRelatedField();\n\t\t\t\t\tif (relatedField.length) {\n\t\t\t\t\t\tvalue.record = relatedField.val();\n\t\t\t\t\t\tvalue.module = $('input[name=\"popupReferenceModule\"]', relatedField.closest('.fieldValue')).val();\n\t\t\t\t\t}\n\t\t\t\t\tif (!value.record || value.record == 0) {\n\t\t\t\t\t\tapp.showNotify({ text: app.vtranslate('JS_LACK_INFORMATION_ABOUT_RECORD') });\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\t\t\tAppConnector.request({\n\t\t\t\t\t\tmodule: value.module,\n\t\t\t\t\t\trecord: value.record,\n\t\t\t\t\t\tchanges: value.changes,\n\t\t\t\t\t\tsourceModule: field.data('module'),\n\t\t\t\t\t\tsourceField: field.attr('name'),\n\t\t\t\t\t\tview: 'ChangesJsonModal'\n\t\t\t\t\t})\n\t\t\t\t\t\t.done((requestData) => {\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t\tapp.showModalWindow({\n\t\t\t\t\t\t\t\tdata: requestData,\n\t\t\t\t\t\t\t\tcss: {},\n\t\t\t\t\t\t\t\tcb: (data) => {\n\t\t\t\t\t\t\t\t\tthis.saveData(data, value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail((_) => {\n\t\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Save data to field\n\t\t */\n\t\tsaveData(container, data) {\n\t\t\tlet form = container.find('form');\n\t\t\tcontainer.on('click', '.js-modal__save', (e) => {\n\t\t\t\tif (form.validationEngine('validate')) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (!form.find('input[id^=\"selectRow\"]:checked').length) {\n\t\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\t\ttext: app.vtranslate('JS_NONE_FIELD_MARKED_IN_MASS_EDIT'),\n\t\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet invalidFields = form.data('jqv').InvalidFields;\n\t\t\t\t\tif (invalidFields.length !== 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tform.find('[id^=\"selectRow\"]').each(function (_, checkbox) {\n\t\t\t\t\t\tcheckbox = $(checkbox);\n\t\t\t\t\t\tif (!checkbox.prop('checked')) {\n\t\t\t\t\t\t\tcheckbox\n\t\t\t\t\t\t\t\t.closest('.js-form-row-container')\n\t\t\t\t\t\t\t\t.find('.fieldValue [name]')\n\t\t\t\t\t\t\t\t.each(function (_, element) {\n\t\t\t\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t\t\t\t\telement.attr('data-element-name', element.attr('name')).removeAttr('name');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tlet changeData = form.serializeFormData();\n\t\t\t\t\tdelete changeData['_csrf'];\n\t\t\t\t\tfor (let fieldName in changeData) {\n\t\t\t\t\t\tif (fieldName.substr(-2) === '[]') {\n\t\t\t\t\t\t\tlet fieldNameShort = fieldName.substr(0, fieldName.length - 2);\n\t\t\t\t\t\t\tchangeData[fieldNameShort] = changeData[fieldName];\n\t\t\t\t\t\t\tdelete changeData[fieldName];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata.changes = changeData;\n\t\t\t\t\tthis.getField().val(JSON.stringify(data));\n\t\t\t\t\tapp.hideModalWindow(null, form.closest('.js-modal-container').attr('id'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-changesjson-value');\n\t\t}\n\t\t/**\n\t\t * Gets related field\n\t\t */\n\t\tgetRelatedField() {\n\t\t\tlet relatedFieldName = this.getField().data('related-field');\n\t\t\treturn this.container.closest('form').find(`[name=${relatedFieldName}]`);\n\t\t}\n\t},\n\t/**\n\t * MultiReference\n\t */\n\tMultiReference: class MultiReference {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-multiReference-container')) {\n\t\t\t\treturn new MultiReference(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-multiReference-container').each((_, e) => {\n\t\t\t\tinstances.push(new MultiReference($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\t$('.js-clear-selection', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tthis.clear();\n\t\t\t\t});\n\t\t\t$('.js-related-popup', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tlet params = {};\n\t\t\t\t\tlet field = this.getField();\n\t\t\t\t\tlet url = field.data('url');\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tparams = this.convertUrl(url);\n\t\t\t\t\t}\n\t\t\t\t\tapp.showRecordsList($.extend(params, this.getParams()), (modal, instance) => {\n\t\t\t\t\t\tinstance.setSelectEvent((data) => {\n\t\t\t\t\t\t\tthis.setReferenceFieldValue(data);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tthis.registerAutoComplete();\n\t\t}\n\t\t/**\n\t\t * Clear selection\n\t\t */\n\t\tclear() {\n\t\t\tlet element = this.getField();\n\t\t\tlet fieldName = element.attr('name');\n\t\t\telement.val('');\n\t\t\tthis.container.find(`#${fieldName}_display`).removeAttr('readonly').val('');\n\t\t}\n\t\t/**\n\t\t * Function which will handle the reference auto complete event registrations\n\t\t */\n\t\tregisterAutoComplete() {\n\t\t\tlet thisInstance = this;\n\t\t\tlet formElement = this.container.closest('form');\n\t\t\tthis.container.find('.js-auto-complete').autocomplete({\n\t\t\t\tdelay: '600',\n\t\t\t\tminLength: '3',\n\t\t\t\tsource: function (request, response) {\n\t\t\t\t\tlet inputElement = $(this.element[0]);\n\t\t\t\t\tlet searchValue = request.term;\n\t\t\t\t\tlet params = {};\n\t\t\t\t\tparams.search_module = $('.js-popup-reference-module', thisInstance.container).val();\n\t\t\t\t\tparams.search_value = searchValue;\n\t\t\t\t\tparams.module = thisInstance.getField().data('module');\n\t\t\t\t\tparams.action = 'BasicAjax';\n\t\t\t\t\tlet sourceRecordElement = $('input[name=\"record\"]', formElement);\n\t\t\t\t\tif (sourceRecordElement.length > 0 && sourceRecordElement.val()) {\n\t\t\t\t\t\tparams.src_record = sourceRecordElement.val();\n\t\t\t\t\t}\n\t\t\t\t\tAppConnector.request(params)\n\t\t\t\t\t\t.done(function (data) {\n\t\t\t\t\t\t\tlet responseDataList = [];\n\t\t\t\t\t\t\tlet serverDataFormat = data.result;\n\t\t\t\t\t\t\tif (serverDataFormat.length <= 0) {\n\t\t\t\t\t\t\t\t$(inputElement).val('');\n\t\t\t\t\t\t\t\tserverDataFormat = new Array({\n\t\t\t\t\t\t\t\t\tlabel: app.vtranslate('JS_NO_RESULTS_FOUND'),\n\t\t\t\t\t\t\t\t\ttype: 'no results'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (let id in serverDataFormat) {\n\t\t\t\t\t\t\t\tlet responseData = serverDataFormat[id];\n\t\t\t\t\t\t\t\tresponseDataList.push(responseData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresponse(responseDataList);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function (error, err) {\n\t\t\t\t\t\t\tapp.errorLog(error, err);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tselect: function (event, ui) {\n\t\t\t\t\tif (typeof ui.item.type !== 'undefined' && ui.item.type == 'no results') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlet selectedItemData = [];\n\t\t\t\t\tselectedItemData[ui.item.id] = ui.item.value;\n\t\t\t\t\tthisInstance.setReferenceFieldValue(selectedItemData);\n\t\t\t\t},\n\t\t\t\tchange: function (event, ui) {\n\t\t\t\t\tlet element = $(this);\n\t\t\t\t\tif (element.attr('readonly') == undefined) {\n\t\t\t\t\t\tthisInstance.clear();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\topen: function (event, ui) {\n\t\t\t\t\t$(this).data('ui-autocomplete').menu.element.css('z-index', '100001');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Set reference field value\n\t\t * @param {object} data\n\t\t */\n\t\tsetReferenceFieldValue(data) {\n\t\t\tlet sourceField = this.getField(),\n\t\t\t\tfieldName = sourceField.attr('name'),\n\t\t\t\tselectedNames = [],\n\t\t\t\tids = [];\n\t\t\tfor (let index in data) {\n\t\t\t\tids.push(index);\n\t\t\t\tselectedNames.push(data[index]);\n\t\t\t}\n\t\t\tthis.clear();\n\t\t\tsourceField.val(ids.join(','));\n\t\t\tthis.container\n\t\t\t\t.find(`#${fieldName}_display`)\n\t\t\t\t.val(app.decodeHTML(selectedNames.join(', ')))\n\t\t\t\t.attr('readonly', true);\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-source-field');\n\t\t}\n\t\t/**\n\t\t * Convert URL to Object\n\t\t * @param {string} data\n\t\t */\n\t\tconvertUrl(url) {\n\t\t\tlet vars = {};\n\t\t\turl.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (_, key, value) {\n\t\t\t\tvars[key] = value;\n\t\t\t});\n\t\t\treturn vars;\n\t\t}\n\t\t/**\n\t\t * Gets params\n\t\t */\n\t\tgetParams() {\n\t\t\tlet form = this.container.closest('form');\n\t\t\tlet sourceModule = $('input[name=\"module\"]', form).val();\n\t\t\tlet popupReferenceModule = $('.js-popup-reference-module', this.container).val();\n\t\t\tlet sourceField = this.getField();\n\t\t\tlet sourceFieldName = sourceField.attr('name');\n\t\t\tlet sourceRecordElement = $('input[name=\"record\"]', form);\n\t\t\tlet sourceRecordId = '';\n\t\t\tif (sourceRecordElement.length > 0) {\n\t\t\t\tsourceRecordId = sourceRecordElement.val();\n\t\t\t}\n\n\t\t\tlet filterFields = {};\n\t\t\tlet listFilterFieldsJson = form.find('input[name=\"listFilterFields\"]').val();\n\t\t\tlet listFilterFields = listFilterFieldsJson ? JSON.parse(listFilterFieldsJson) : [];\n\t\t\tif (\n\t\t\t\tlistFilterFields[sourceFieldName] != undefined &&\n\t\t\t\tlistFilterFields[sourceFieldName][popupReferenceModule] != undefined\n\t\t\t) {\n\t\t\t\t$.each(listFilterFields[sourceFieldName][popupReferenceModule], function (index, value) {\n\t\t\t\t\tlet mapFieldElement = form.find('[name=\"' + index + '\"]');\n\t\t\t\t\tif (mapFieldElement.length && mapFieldElement.val() != '') {\n\t\t\t\t\t\tfilterFields[index] = mapFieldElement.val();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tmodule: popupReferenceModule,\n\t\t\t\tsrc_module: sourceModule,\n\t\t\t\tsrc_field: sourceFieldName,\n\t\t\t\tsrc_record: sourceRecordId,\n\t\t\t\tfilterFields: filterFields,\n\t\t\t\tmulti_select: sourceField.data('multiple')\n\t\t\t};\n\t\t}\n\t},\n\t/**\n\t * Password\n\t */\n\tPassword: class Password {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis.init();\n\t\t}\n\t\t/**\n\t\t * Register function\n\t\t * @param {jQuery} container\n\t\t */\n\t\tstatic register(container) {\n\t\t\tif (container.hasClass('js-pwd-container')) {\n\t\t\t\treturn new Password(container);\n\t\t\t}\n\t\t\tconst instances = [];\n\t\t\tcontainer.find('.js-pwd-container').each((_, e) => {\n\t\t\t\tinstances.push(new Password($(e)));\n\t\t\t});\n\t\t\treturn instances;\n\t\t}\n\t\t/**\n\t\t * Get strength meter\n\t\t * @returns {Object}\n\t\t */\n\t\tstatic getStrengthLevels() {\n\t\t\tif (!this.strengthLevels) {\n\t\t\t\tthis.strengthLevels = {\n\t\t\t\t\t0: app.vtranslate('JS_PWD_RIDICULOUS'),\n\t\t\t\t\t1: app.vtranslate('JS_PWD_VERY_WEAK'),\n\t\t\t\t\t2: app.vtranslate('JS_PWD_WEAK'),\n\t\t\t\t\t3: app.vtranslate('JS_PWD_MEDIUM'),\n\t\t\t\t\t4: app.vtranslate('JS_PWD_STRONG'),\n\t\t\t\t\t5: app.vtranslate('JS_PWD_VERY_STRONG')\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn { ...this.strengthLevels };\n\t\t}\n\t\t/**\n\t\t * Initiation\n\t\t */\n\t\tinit() {\n\t\t\tlet field = this.getField();\n\t\t\t$('.js-pwd-auto-generate', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tthis.getResponse({\n\t\t\t\t\t\tmodule: field.data('module'),\n\t\t\t\t\t\tfield: field.attr('name'),\n\t\t\t\t\t\taction: 'Password',\n\t\t\t\t\t\tmode: 'generatePwd'\n\t\t\t\t\t}).then((response) => {\n\t\t\t\t\t\tif (response.success && response.result && response.result.pwd) {\n\t\t\t\t\t\t\tthis.clear();\n\t\t\t\t\t\t\tfield.val(response.result.pwd).trigger('keyup').focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t$('.js-pwd-validate', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', () => {\n\t\t\t\t\tthis.getResponse({\n\t\t\t\t\t\tmodule: field.data('module'),\n\t\t\t\t\t\tfield: field.attr('name'),\n\t\t\t\t\t\tpassword: field.val(),\n\t\t\t\t\t\taction: 'Password',\n\t\t\t\t\t\tmode: 'validatePwd'\n\t\t\t\t\t}).then((response) => {\n\t\t\t\t\t\tif (response.success && response.result) {\n\t\t\t\t\t\t\tlet message = response.result.message;\n\t\t\t\t\t\t\tif (Array.isArray(message)) {\n\t\t\t\t\t\t\t\tmessage = message.join('<br>');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfield.validationEngine('showPrompt', message, response.result.type, 'topLeft', true);\n\t\t\t\t\t\t\tfield.validationEngine('updatePromptsPosition');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t$('.js-pwd-clear', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tthis.clear();\n\t\t\t\t});\n\t\t\t$('.js-pwd-get', this.container)\n\t\t\t\t.off('click')\n\t\t\t\t.on('click', (e) => {\n\t\t\t\t\tlet form = this.container.closest('form');\n\t\t\t\t\tlet recordId = $('input[name=\"record\"]', form).val() || app.getRecordId();\n\t\t\t\t\tthis.getResponse({\n\t\t\t\t\t\tmodule: field.data('module'),\n\t\t\t\t\t\tfield: field.attr('name'),\n\t\t\t\t\t\trecord: recordId,\n\t\t\t\t\t\taction: 'Password',\n\t\t\t\t\t\tmode: 'getPwd'\n\t\t\t\t\t}).then((response) => {\n\t\t\t\t\t\tthis.clear();\n\t\t\t\t\t\tfield.val(response.result.text);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tif (field.data('strengthMeter')) {\n\t\t\t\tfield.off('keyup').on('keyup', (e) => {\n\t\t\t\t\tlet score = this.strengthMeter(e.target.value || '');\n\t\t\t\t\tfield\n\t\t\t\t\t\t.attr('data-original-title', App.Fields.Password.getStrengthLevels()[score])\n\t\t\t\t\t\t.tooltip('show')\n\t\t\t\t\t\t.validationEngine('hide');\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Clear data\n\t\t */\n\t\tclear() {\n\t\t\tthis.getField().val('').attr('disabled', false).tooltip('dispose').validationEngine('hide');\n\t\t\tthis.container.find('.js-pwd-validate, .js-pwd-show').attr('disabled', false);\n\t\t}\n\t\t/**\n\t\t * Get response\n\t\t * @param {Object} params\n\t\t * @returns\n\t\t */\n\t\tgetResponse(params) {\n\t\t\tconst aDeferred = $.Deferred();\n\t\t\tlet progressIndicatorElement = $.progressIndicator({ blockInfo: { enabled: true } });\n\t\t\tAppConnector.request(params)\n\t\t\t\t.done((response) => {\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\taDeferred.resolve(response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taDeferred.reject(response);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail((_) => {\n\t\t\t\t\tapp.showNotify({\n\t\t\t\t\t\ttext: app.vtranslate('JS_ERROR'),\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t});\n\t\t\t\t\tprogressIndicatorElement.progressIndicator({ mode: 'hide' });\n\t\t\t\t\taDeferred.reject(_);\n\t\t\t\t});\n\t\t\treturn aDeferred.promise();\n\t\t}\n\t\t/**\n\t\t * Get strength meter score\n\t\t * @param {string} pwd\n\t\t * @returns {int}\n\t\t */\n\t\tstrengthMeter(pwd) {\n\t\t\tlet score = 0;\n\t\t\tif (pwd.length > 6) score++;\n\t\t\tif (pwd.match(/[a-z]/) && pwd.match(/[A-Z]/)) score++;\n\t\t\tif (pwd.match(/\\d+/)) score++;\n\t\t\tif (pwd.match(/.[!,@,#,$,%,^,&,*,?,_,~,-,(,)]/)) score++;\n\t\t\tif (pwd.length > 12) score++;\n\n\t\t\treturn score;\n\t\t}\n\t\t/**\n\t\t * Gets field\n\t\t */\n\t\tgetField() {\n\t\t\treturn this.container.find('.js-pwd-field');\n\t\t}\n\t},\n\tUtils: {\n\t\tregisterMobileDateRangePicker(element) {\n\t\t\tthis.hideMobileKeyboard(element);\n\t\t\tif (!Quasar.plugins.Platform.is.desktop) {\n\t\t\t\telement\n\t\t\t\t\t.on('showCalendar.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tpicker.container.addClass('js-visible');\n\t\t\t\t\t})\n\t\t\t\t\t.on('hide.daterangepicker', (ev, picker) => {\n\t\t\t\t\t\tpicker.container.removeClass('js-visible');\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\thideMobileKeyboard(element) {\n\t\t\tif (!Quasar.plugins.Platform.is.desktop) {\n\t\t\t\telement.attr('readonly', 'true').addClass('bg-white');\n\t\t\t}\n\t\t},\n\t\tpositionPicker(ev, picker) {\n\t\t\tlet offset = picker.element.offset();\n\t\t\tlet $window = $(window);\n\t\t\tif (offset.left - $window.scrollLeft() + picker.container.outerWidth() > $window.width()) {\n\t\t\t\tpicker.opens = 'left';\n\t\t\t} else {\n\t\t\t\tpicker.opens = 'right';\n\t\t\t}\n\t\t\tpicker.move();\n\t\t\tif (offset.top - $window.scrollTop() + picker.container.outerHeight() > $window.height()) {\n\t\t\t\tpicker.drops = 'up';\n\t\t\t} else {\n\t\t\t\tpicker.drops = 'down';\n\t\t\t}\n\t\t\tpicker.move();\n\t\t},\n\t\t/**\n\t\t * Set value\n\t\t *\n\t\t * @param   {object}  fieldElement  jQuery\n\t\t * @param   {string|boolean}  value\n\t\t */\n\t\tsetValue(fieldElement, value) {\n\t\t\tif (fieldElement.is('select')) {\n\t\t\t\tApp.Fields.Picklist.setValue(fieldElement, value);\n\t\t\t} else {\n\t\t\t\tfieldElement.val(value);\n\t\t\t}\n\t\t\tfieldElement.trigger('change');\n\t\t\tlet fieldValue = fieldElement.closest('.fieldValue');\n\t\t\tfieldValue.addClass('border border-info');\n\t\t\tsetTimeout(function () {\n\t\t\t\tfieldValue.removeClass('border border-info');\n\t\t\t}, 5000);\n\t\t}\n\t}\n};\n"], "filenames": ["config/version.php", "modules/Vtiger/actions/Fields.php", "public_html/layouts/resources/Fields.js"], "buggy_code_start_loc": [4, 55, 535], "buggy_code_end_loc": [5, 269, 743], "fixing_code_start_loc": [4, 56, 535], "fixing_code_end_loc": [5, 294, 780], "type": "CWE-79", "message": "yetiforcecrm is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", "other": {"cve": {"id": "CVE-2021-4107", "sourceIdentifier": "security@huntr.dev", "published": "2021-12-14T15:15:07.430", "lastModified": "2021-12-15T20:31:37.277", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "yetiforcecrm is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}, {"lang": "es", "value": "yetiforcecrm es vulnerable a una Neutralizaci\u00f3n Inapropiada de la Entrada Durante la Generaci\u00f3n de P\u00e1ginas Web (\"Cross-site Scripting\")"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:yetiforce:yetiforce_customer_relationship_management:*:*:*:*:*:*:*:*", "versionEndIncluding": "6.3.0", "matchCriteriaId": "9857A26D-84A8-4AE3-BCFC-B198918970C8"}]}]}], "references": [{"url": "https://github.com/yetiforcecompany/yetiforcecrm/commit/a062d3d5fecb000db207a2ad8a446db97ad96b89", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/1d124520-cf29-4539-a0f3-6d041af7b5a8", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/yetiforcecompany/yetiforcecrm/commit/a062d3d5fecb000db207a2ad8a446db97ad96b89"}}