{"buggy_code": ["<?php\n\nnamespace MicroweberPackages\\Utils\\System;\n\nuse RecursiveIteratorIterator;\nuse RecursiveDirectoryIterator;\nuse FilesystemIterator;\n\n$mw_static_option_groups = array();\n\nclass Files\n{\n    /**\n     * Copies directory recursively.\n     *\n     * @param $source\n     * @param $destination\n     */\n    public function copy_directory($source, $destination)\n    {\n        static $copies;\n        if (is_dir($source)) {\n            @mkdir($destination);\n            $directory = dir($source);\n            while (false !== ($readdirectory = $directory->read())) {\n                if ($readdirectory == '.' || $readdirectory == '..') {\n                    continue;\n                }\n\n                $PathDir = $source . DIRECTORY_SEPARATOR . $readdirectory;\n                if (is_dir($PathDir)) {\n                    $this->copy_directory($PathDir, $destination . DIRECTORY_SEPARATOR . $readdirectory);\n                    continue;\n                }\n                $copies[] = $destination . DIRECTORY_SEPARATOR . $readdirectory;\n                copy($PathDir, $destination . DIRECTORY_SEPARATOR . $readdirectory);\n            }\n\n            $directory->close();\n        } else {\n            $copies[] = $destination;\n            copy($source, $destination);\n        }\n\n        return $copies;\n    }\n\n    /**\n     * Returns a human readable filesize.\n     *\n     * @category Files\n     *\n     * @author      wesman20 (php.net)\n     * @author      Jonas John\n     *\n     * @version     0.3\n     *\n     * @link        http://www.jonasjohn.de/snippets/php/readable-filesize.htm\n     */\n    public function file_size_nice($size)\n    {\n        // Adapted from: http://www.php.net/manual/en/function.filesize.php\n\n        $mod = 1024;\n\n        $units = explode(' ', 'B KB MB GB TB PB');\n        for ($i = 0; $size > $mod; ++$i) {\n            $size /= $mod;\n        }\n\n        return round($size, 2) . ' ' . $units[$i];\n    }\n\n\n    public function rmdir($dirPath)\n    {\n        foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dirPath, FilesystemIterator::SKIP_DOTS), RecursiveIteratorIterator::CHILD_FIRST) as $path) {\n            $path->isDir() && !$path->isLink() ? rmdir($path->getPathname()) : unlink($path->getPathname());\n        }\n        @rmdir($dirPath);\n    }\n\n//    public function dir_tree($path = '.', $params = false)\n//    {\n//        $params = parse_params($params);\n//        $dir = $path;\n//\n//        return $this->directory_tree_build($dir, $params);\n//    }\n\n    public function md5_dir($path)\n    {\n        if (!file_exists($path)) {\n            throw new \\Exception('Directory doesn\\'t exist.');\n        }\n\n        $directoryIterator = new \\DirectoryIterator($path);\n        $items = array();\n        foreach ($directoryIterator as $fileInfo) {\n            $filePath = $fileInfo->getPathname();\n            if (!$fileInfo->isDot()) {\n                if ($fileInfo->isFile()) {\n                    $md = md5_file($filePath);\n                    $filePath = normalize_path($filePath, false);\n                    $items [$md] = $filePath;\n                } else if ($fileInfo->isDir()) {\n                    $more = $this->md5_dir($filePath);\n                    foreach ($more as $k => $v) {\n                        $items [$k] = $v;\n                    }\n                }\n            }\n        }\n        return $items;\n    }\n\n\n    /**\n     * get_files.\n     *\n     *  Get an array that represents directory and files\n     *\n     * @category    files module api\n     *\n     * @version 1.0\n     *\n     * @since 0.320\n     *\n     * @return mixed Array with files\n     *\n     * @param array $params = array()     the params\n     * @param string $params ['directory']       The directory\n     * @param string $params ['keyword']       If set it will seach the dir and subdirs\n     */\n    public function get($params)\n    {\n        if (is_admin() == false) {\n            mw_error('Must be admin');\n        }\n\n        $params = parse_params($params);\n        if (!isset($params['directory'])) {\n            mw_error('You must define directory');\n        } else {\n            $directory = $params['directory'];\n        }\n\n\n        $filter_extensions = false;\n\n        if (isset($params['extensions']) and is_string($params['extensions'])) {\n            $filter_extensions = explode(',', $params['extensions']);\n        }\n\n        $hide_files = false;\n\n        if (isset($params['hide_files']) and is_string($params['hide_files'])) {\n            $hide_files = explode(',', $params['hide_files']);\n        } else if (isset($params['hide_files']) and is_array($params['hide_files'])) {\n            $hide_files = $params['hide_files'];\n        }\n        $restrict_path = false;\n\n        if (isset($params['restrict_path']) and is_string($params['restrict_path'])) {\n            $restrict_path = $params['restrict_path'];\n        }\n\n        if ($restrict_path) {\n            if (!strstr($directory, $restrict_path)) {\n                $directory = $restrict_path . $directory;\n            }\n        }\n\n        $from_search = 0;\n        $arrayItems = array();\n        if (isset($params['search']) and strval($params['search']) != '') {\n            $from_search = 1;\n            $arrayItems_search = $this->rglob($pattern = DS . '*' . $params['search'] . '*', $flags = 0, $directory);\n        } else {\n            if (!is_dir($directory . DS)) {\n                return false;\n            }\n\n            $arrayItems_search = array();\n            $myDirectory = opendir($directory . DS);\n\n\n\n            while ($entryName = readdir($myDirectory)) {\n\n                if(!empty($hide_files) && in_array($entryName,$hide_files)){\n                    continue;\n                }\n\n                if ($entryName != '..' and $entryName != '.') {\n                    $arrayItems_search[] = $entryName;\n                }\n            }\n\n            closedir($myDirectory);\n        }\n\n        if (!empty($arrayItems_search)) {\n//\n            //usort($myarray, create_function('$a,$b', 'return filemtime($a) - filemtime($b);'));\n\n            $arrayItems_f = array();\n            $arrayItems_d = array();\n            foreach ($arrayItems_search as $file) {\n                if ($from_search == 0) {\n                    $file = $directory . DS . $file;\n                }\n                if (is_file($file)) {\n\n                    $skip = false;\n                    $df = normalize_path($file, false);\n                    $file_ext = get_file_extension($df);\n\n\n                    if ($filter_extensions and !empty($filter_extensions)) {\n                        $skip = true;\n                        foreach ($filter_extensions as $filter_extension) {\n                            if ($filter_extension == $file_ext) {\n                                $skip = false;\n                            }\n                        }\n//                        if(array_search($file_ext,$filter_extensions)){\n//                           // $skip = false;\n//                        }\n                    }\n\n                    if ($skip == false) {\n                        if (!in_array($df, $arrayItems_f)) {\n                            $arrayItems_f[] = $df;\n                        }\n                    }\n                } else {\n                    $df = normalize_path($file, 1);\n                    if (!in_array($df, $arrayItems_d)) {\n                        $arrayItems_d[] = $df;\n                    }\n                }\n            }\n\n            /*\n            // Sort  by filetime\n            $sortedFiles = array();\n            foreach($arrayItems_f as $dir) {\n            \t$sortedFiles[filemtime($dir)] = $dir;\n            }\n            ksort($sortedFiles);\n            $sortedFiles = array_reverse($sortedFiles);\n            */\n\n\n            if (isset($params['sort_by']) and strval($params['sort_by']) != '') {\n                if (!isset($params['sort_order'])) {\n                    $sort_params = explode(' ', $params['sort_by']);\n                    if (isset($sort_params[1])) {\n                        $params['sort_by'] = $sort_params[0];\n                        $params['sort_order'] = $sort_params[1];\n                    }\n                }\n\n\n                if (isset($params['sort_order']) and strval($params['sort_order']) != '') {\n                    $ord = SORT_DESC;\n                    if (strtolower($params['sort_order']) == 'asc') {\n                        $ord = SORT_ASC;\n                    }\n                    $allowed_sort = array('basename', 'filemtime', 'filesize');\n                    if (in_array($params['sort_by'], $allowed_sort)) {\n                        array_multisort(array_map($params['sort_by'], $arrayItems_f), SORT_NUMERIC, $ord, $arrayItems_f);\n                    }\n                }\n            }\n\n            $arrayItems['files'] = $arrayItems_f;\n            $arrayItems['dirs'] = $arrayItems_d;\n        }\n\n\n        return $arrayItems;\n    }\n\n    /**\n     * Recursive glob().\n     *\n     * @category Files\n     *\n     * @uses is_array()\n     *\n     * @param int|string $pattern\n     *                            the pattern passed to glob()\n     * @param int $flags\n     *                            the flags passed to glob()\n     * @param string $path\n     *                            the path to scan\n     *\n     * @return mixed\n     *               an array of files in the given path matching the pattern.\n     */\n    public function rglob($pattern = '*', $flags = 0, $path = '')\n    {\n        if (!$path && ($dir = dirname($pattern)) != '.') {\n            if ($dir == '\\\\' || $dir == '/') {\n                $dir = '';\n            }\n\n            return $this->rglob(basename($pattern), $flags, $dir . DS);\n        }\n\n        if (stristr($path, '_notes') or stristr($path, '.git') or stristr($path, '.svn')) {\n            return false;\n        }\n\n        $paths = glob($path . '*', GLOB_ONLYDIR | GLOB_NOSORT);\n        $files = glob($path . $pattern, $flags);\n\n        if (is_array($paths)) {\n            foreach ($paths as $p) {\n                $temp = array();\n                if (is_dir($p) and is_readable($p)) {\n                    $temp = $this->rglob($pattern, false, $p . DS);\n                }\n\n                if (is_array($temp) and is_array($files)) {\n                    $files = array_merge($files, $temp);\n                } elseif (is_array($temp)) {\n                    $files = $temp;\n                }\n            }\n        }\n\n        return $files;\n    }\n\n    public function dir_tree_build($dir, $params = false)\n    {\n        $params = parse_params($params);\n        $class = 'directory_tree';\n        if (isset($params['class'])) {\n            $class = $params['class'];\n        }\n\n        $title_class = 'is_folder';\n        if (isset($params['title_class'])) {\n            $title_class = $params['title_class'];\n        }\n\n        $basedir = '';\n        if (isset($params['dir_name'])) {\n            $basedir = $params['dir_name'];\n        }\n\n        $max_depth = 100;\n        if (isset($params['max_depth'])) {\n            $max_depth = $params['max_depth'];\n        }\n\n        $url_param = 'file';\n        if (isset($params['url_param'])) {\n            $url_param = $params['url_param'];\n        }\n\n        if (isset($params['url'])) {\n            $url = $params['url'];\n        } else {\n            $url = mw()->url->current(true, true);\n        }\n\n        static $level = 0;\n\n        if ($max_depth > $level) {\n            ++$level;\n            $ffs = scandir($dir);\n            echo '<ul class=\"' . $class . ' depth_' . $level . '\">';\n            foreach ($ffs as $ff) {\n                $is_hidden = substr($ff, 0, 1);\n                if ($is_hidden == '_') {\n                } else {\n                    $file1 = $ff;\n\n                    if (strlen($file1) > 3) {\n                        $pos = strpos($file1, '_', 1);\n\n                        if ($pos != false) {\n                            $substr = substr($file1, 0, $pos);\n                            if (intval($substr) > 0) {\n                                $file1 = substr($file1, $pos, strlen($file1));\n                                $file1 = ltrim($file1, '_');\n                            }\n                        }\n                    }\n\n                    $file1 = str_replace('_', ' ', $file1);\n\n                    if ($ff != '.' && $ff != '..') {\n                        echo '<li class=\"' . $class . ' depth_' . $level . '\">';\n                        if (is_dir($dir . '/' . $ff)) {\n                            $is_index = $dir . DS . $ff . DS . 'index.php';\n                            $link_href = '';\n\n                            if (is_file($is_index)) {\n                                $link = $dir . '/' . $ff . '/index.php';\n                                if (trim($basedir) != '') {\n                                    $link = normalize_path($link, false);\n                                    $basedir = normalize_path($basedir, false);\n                                    $link = str_replace($basedir . DS, '', $link);\n                                    $link = str_replace('\\\\', '/', $link);\n                                    $link = urlencode($link);\n                                }\n                                $active_class = '';\n\n                                if (isset($_REQUEST[$url_param]) and urldecode($_REQUEST[$url_param]) == $link) {\n                                    $active_class = ' active ';\n                                }\n\n                                $file1 = \"<a class='{$active_class}' href='{$url}?{$url_param}={$link}'>{$file1}</a>\";\n                            }\n\n                            $h_start = ($level == 1) ? '<h2 class=\"' . $title_class . '\">' : '<h3 class=\"' . $title_class . '\">';\n                            $h_close = ($level == 1) ? '</h2>' : '</h3>';\n                            echo $h_start . $file1 . $h_close;\n                            $this->dir_tree_build($dir . '/' . $ff, $params);\n                        } else {\n                            $file1 = no_ext($file1);\n\n                            $link = $dir . '/' . $ff;\n\n                            if (trim($basedir) != '') {\n                                $link = normalize_path($link, false);\n                                $basedir = normalize_path($basedir, false);\n                                $link = str_replace($basedir . DS, '', $link);\n                            }\n\n                            $link = str_replace('\\\\', '/', $link);\n                            $class_path = str_replace('/', '--', $link);\n                            $class_path = str_replace(' ', '_', $class_path);\n                            $class_path = str_replace('.', '_', $class_path);\n                            $active_class = '';\n                            if (isset($_REQUEST[$url_param]) and urldecode($_REQUEST[$url_param]) == $link) {\n                                $active_class = ' active ';\n                            }\n\n                            $link_href = $file1;\n                            if ($link != false) {\n                                $link = urlencode($link);\n                                $link_href = \"<a class='{$active_class} page_{$class_path} ' href='{$url}?{$url_param}={$link}'>{$file1}</a>\";\n                            }\n\n                            echo $link_href;\n                        }\n                        echo '</li>';\n                    }\n                }\n            }\n            echo '</ul>';\n        }\n        --$level;\n    }\n\n    public function download_to_browser($filename)\n    {\n        if (file_exists($filename)) {\n            $name = basename($filename);\n            $ext = get_file_extension($filename);\n\n            header('Cache-Control: public');\n            if ($ext == 'zip') {\n                header('Content-Type: application/zip');\n                header('Content-Transfer-Encoding: Binary');\n            } elseif ($ext == 'sql') {\n                header('Content-type: text/plain; charset=utf-8');\n            }\n            header('Content-Description: File Transfer');\n            header('Content-Disposition: attachment; filename=' . $name);\n            header('Content-Length: ' . filesize($filename));\n            readfile($filename);\n            exit;\n//            if (function_exists('mime_content_type')) {\n//                $this->_readfile_laravel_chunked($filename);\n//            } else {\n//\n//            }\n            //$this->_readfile_chunked($filename);\n        }\n    }\n\n    private function _readfile_chunked($filename, $retbytes = true)\n    {\n        $filename = str_replace('..', '', $filename);\n        $chunk_size = 1024 * 1024;\n        $buffer = '';\n        $cnt = 0;\n        $handle = fopen($filename, 'rb');\n        if ($handle === false) {\n            return false;\n        }\n        while (!feof($handle)) {\n            $buffer = fread($handle, $chunk_size);\n            echo $buffer;\n            ob_flush();\n            flush();\n            if ($retbytes) {\n                $cnt += strlen($buffer);\n            }\n        }\n        $status = fclose($handle);\n        if ($retbytes && $status) {\n            return $cnt; // return num. bytes delivered like readfile() does.\n        }\n\n        return $status;\n    }\n\n    private function _readfile_laravel_chunked($path, $name = null, array $headers = array())\n    {\n        if (is_null($name)) {\n            $name = basename($path);\n        }\n\n        // Prepare the headers\n        $headers = array_merge(array(\n            'Content-Description' => 'File Transfer',\n            'Content-Type' => \\File::mime(\\File::extension($path)),\n            'Content-Transfer-Encoding' => 'binary',\n            'Expires' => 0,\n            'Cache-Control' => 'must-revalidate, post-check=0, pre-check=0',\n            'Pragma' => 'public',\n            'Content-Length' => \\File::size($path),\n        ), $headers);\n\n        $response = new \\Response('', 200, $headers);\n        $response->header('Content-Disposition', $response->disposition($name));\n\n        // If there's a session we should save it now\n        if (\\Config::get('session.driver') !== '') {\n            \\Session::save();\n        }\n\n        // Send the headers and the file\n        ob_end_clean();\n        $response->send_headers();\n\n        if ($fp = fread($path, 'rb')) {\n            while (!feof($fp) and (connection_status() == 0)) {\n                echo fread($fp, 8192);\n                flush();\n            }\n        }\n\n        // Finish off, like Laravel would\n        \\Event::fire('laravel.done', array($response));\n        $response->foundation->finish();\n\n        exit;\n    }\n\n\n    function get_dangerous_files_extentions()\n    {\n\n\n        $dangerous = array(\n            'phtml',\n            'php',\n            'php5',\n            'php6',\n            'php7',\n            'php72',\n            'php73',\n            'php74',\n            'php8',\n            'php81',\n            'php82',\n            'php56',\n            'php4',\n            'php3',\n            'phps',\n            'phpt',\n            'ptml',\n            'hphp',\n            'html',\n            'xhtml',\n            'phtml',\n            'shtml',\n            'htm',\n            'pl',\n            'js',\n            'cgi',\n            'rb',\n            'py',\n            'alfa',\n            'asp',\n            'aspx',\n            'htaccess',\n            'exe',\n            'msi',\n            'sh',\n            'bat',\n            'vbs',\n            'vb',\n            'lnk',\n            'jsp',\n            'jspx',\n\n            // from http://www.file-extensions.org/filetype/extension/name/program-executable-files\n            'action ',  //  Automator Action  Mac OS\n            'apk',      //     Application  Android\n            'app',      //     Executable  Mac OS\n            'bat',      //     Batch File  Windows\n            'bin',      //     Binary Executable  Windows, Mac OS, Linux\n            'cmd',      //     Command Script  Windows\n            'com',      //     Command File  Windows\n            'command',  //   Terminal Command  Mac OS\n            'cpl',      //     Control Panel Extension  Windows\n            'csh',      //     C Shell Script  Mac OS, Linux\n            'exe',      //     Executable  Windows\n            'gadget',   //  Windows Gadget  Windows\n            'inf1',     //      Setup Information File  Windows\n            'ins',      //     Internet Communication Settings  Windows\n            'inx',      //     InstallShield Compiled Script  Windows\n            'ipa',      //     Application  iOS\n            'isu',      //     InstallShield Uninstaller Script  Windows\n            'job',      //     Windows Task Scheduler Job File  Windows\n            'jse',      //     JScript Encoded File  Windows\n            'ksh',      //     Unix Korn Shell Script  Linux\n            'lnk',      //     File Shortcut  Windows\n            'msc',      //     Microsoft Common Console Document  Windows\n            'msi',      //     Windows Installer Package  Windows\n            'msp',      //     Windows Installer Patch  Windows\n            'mst',      //     Windows Installer Setup Transform File  Windows\n            'osx',      //     Executable  Mac OS\n            'out',      //     Executable  Linux\n            'paf',      //     Portable Application Installer File  Windows\n            'pif',      //     Program Information File  Windows\n            'prg',      //     Executable  GEM\n            'ps1',      //     Windows PowerShell Cmdlet  Windows\n            'reg',      //     Registry Data File  Windows\n            'rgs',      //     Registry Script  Windows\n            'run',      //     Executable  Linux\n            'sct',      //     Windows Scriptlet  Windows\n            'shb',      //     Windows Document Shortcut  Windows\n            'shs',      //     Shell Scrap Object  Windows\n            'u3p',      //     U3 Smart Application  Windows\n            'vb',       //    VBScript File  Windows\n            'vbe',      //     VBScript Encoded Script  Windows\n            'vbs',      //     VBScript File  Windows\n            'vbscript', //    Visual Basic Script  Windows\n            'workflow', //    Automator Workflow  Mac OS\n            'ws',       //    Windows Script  Windows\n            'wsf',      //  Windows Script  Windows\n\n            // from http://fileinfo.com/filetypes/executable\n            '0xe',        //    F-Secure Renamed Virus File',\n            '73k',        //    TI-73 Application',\n            '89k',        //    TI-89 Application',\n            '8ck',        //    TI-83 and TI-84 Plus Application\n            'a6p',        //    Authorware 6 Program',\n            'a7r',        //    Authorware 7 Runtime File',\n            'ac',        //    Autoconf Script',\n            'acc',        //    GEM Accessory File',\n            'acr',        //    ACRobot Script',\n            'action',        //    Automator Action',\n            'actm',        //    AutoCAD Action Macro File',\n            'ahk',        //    AutoHotkey Script',\n            'air',        //    Adobe AIR Installation Package',\n            'apk',        //    Android Package File',\n            'app',        //    Mac OS X Application',\n            'app',        //    FoxPro Generated Application',\n            'app',        //    Symbian OS Application',\n            'applescripT',        //    AppleScript File',\n            'arscript',        //    ArtRage Script',\n            'asb',        //    Alphacam Stone VB Macro File',\n            'azw2',        //    Kindle Active Content App File',\n            'ba_',        //    Renamed BAT File',\n            'bat',        //    DOS Batch File',\n            'beam',        //    Compiled Erlang File',\n            'bin',        //    Generic Binary Executable File',\n            'bin',        //    Unix Executable File',\n            'btm',        //    4DOS Batch File',\n            'caction',        //    Automator Converter Action',\n            'cel',        //    Celestia Script File',\n            'celx',        //    Celestia Script',\n            'cgi',        //    Common Gateway Interface Script',\n            'cmd',        //    Windows Command File',\n            'cof',        //    MPLAB COFF File',\n            'com',        //    DOS Command File',\n            'command',        //    Terminal Command File',\n            'csh',        //    C Shell Script',\n            'cyw',        //    Rbot.CYW Worm File',\n            'dek',        //    Eavesdropper Batch File',\n            'dld',        //    EdLog Compiled Program',\n            'dmc',        //    Medical Manager Script',\n            'dosexec',\n            'ds',        //    TWAIN Data Source',\n            'dxl',        //    Rational DOORS Script',\n            'e_e',        //    Renamed EXE File',\n            'ear',        //    Java Enterprise Archive File',\n            'ebm',        //    EXTRA! Basic Macro',\n            'ebs',        //    E-Run 1.x Script',\n            'ebs2',        //    E-Run 2.0 Script File',\n            'ecf',        //    SageCRM Component File',\n            'eham',        //    ExtraHAM Executable File',\n            'elf',        //    Nintendo Wii Game File',\n            'es',        //    SageCRM Script File',\n            'esh',        //    Extended Shell Batch File',\n            'ex4',        //    MetaTrader Program File',\n            'ex_',        //    Compressed Executable File',\n            'ex_',        //    Renamed Windows Executable File',\n            'exe',        //    Windows Executable File',\n            'exe',        //    PortableApps.com Application',\n            'exe1',        //    Renamed EXE File',\n            'exopc',        //    ExoPC Application',\n            'ezs',        //    EZ-R Stats Batch Script',\n            'ezt',        //    EZT Malicious Worm File',\n            'fas',        //    Compiled Fast-Load AutoLISP File'\n            'fas',        //    QuickSilver Fast Save Lisp File',\n            'fky',        //    FoxPro Macro',\n            'fpi',        //    FPS Creator Intelligence Script',\n            'frs',        //    Flash Renamer Script',\n            'fxp',        //    FoxPro Compiled Program',\n            'gadget',        //    Windows Gadget',\n            'gpe',        //    GP2X Video Game',\n            'gpu',        //    GP2X Utility Program',\n            'gs',        //    Geosoft Script',\n            'ham',        //    HAM Executable File',\n            'hms',        //    HostMonitor Script File',\n            'hpf',        //    HP9100A Program File',\n            'hta',        //    HTML Application',\n            'icd',        //    SafeDisc Encrypted Program',\n            'iim',        //    iMacro Macro File',\n            'ipa',        //    iOS Application',\n            'ipf',        //    SMS Installer Script',\n            'isu',        //    InstallShield Uninstaller Script'\n            'ita',        //    VTech InnoTab Application File',\n            'jar',        //    Java Archive File',\n            'js',        //    JScript Executable Script',\n            'jse',        //    JScript Encoded File',\n            'jsx',        //    ExtendScript Script File',\n            'kix',        //    KiXtart Script File',\n            'ksh',        //    Unix Korn Shell Script',\n            'lo',        //    Interleaf Compiled Lisp File',\n            'ls',        //    LightWave LScript File',\n            'm3g',        //    Mobile 3D Graphics Program',\n            'mam',        //    Microsoft Access Macro',\n            'mcr',        //    3ds Max Macroscript File',\n            'mcr',        //    Tecplot Macro',\n            'mel',        //    Maya Embedded Language File',\n            'mem',        //    Macro Editor Macro',\n            'mio',        //    MioEngine Application File',\n            'mm',        //    NeXtMidas Macro File',\n            'mpx',        //    FoxPro Compiled Menu Program',\n            'mrc',        //    mIRC Script File',\n            'mrp',        //    Mobile Application File',\n            'ms',        //    3ds Max Script File',\n            'ms',        //    Maxwell Script',\n            'msl',        //    Magick Scripting Language File',\n            'mxe',        //    Macro Express Playable Macro',\n            'n',        //    Neko Bytecode File',\n            'nexe',        //    Chrome Native Client Executable',\n            'ore',        //    Ore Executable File',\n            'osx',        //    PowerPC Executable File',\n            'otm',        //    Outlook Macro File',\n            'out',        //    Compiled Executable File',\n            'paf',        //    Portable Application Installer Fi\n            'paf.exe',        //    PortableApps.com Program File\n            'pex',        //    ProBoard Executable File',\n            'phar',        //    PHP Archive',\n            'pif',        //    Program Information File',\n            'plsc',        //    Messenger Plus! Live Script File'\n            'plx',        //    Perl Executable File',\n            'prc',        //    Palm Resource Code File',\n            'prg',        //    Program File',\n            'prg',        //    GEM Application',\n            'ps1',        //    Windows PowerShell Cmdlet File',\n            'pvd',        //    Instalit Script',\n            'pwc',        //    PictureTaker File',\n            'pyc',        //    Python Compiled File',\n            'pyo',        //    Python Optimized Code',\n            'qit',        //    QIT Trojan Horse File',\n            'qpx',        //    FoxPro Compiled Query Program',\n            'rbx',        //    Rembo-C Compiled Script',\n            'rfu',        //    Remote Firmware Update',\n            'rgs',        //    Registry Script',\n            'rox',        //    Actuate Report Object Executable\n            'rpj',        //    Real Pac Batch Job File',\n            'run',        //    Linux Executable File',\n            'rxe',        //    Lego Mindstorms NXT Executable Pr\n            's2a',        //    SEAL2 Application',\n            'sbs',        //    SPSS Script',\n            'sca',        //    Scala Script File',\n            'scar',        //    SCAR Script',\n            'scb',        //    Scala Published Script',\n            'scpt',        //    AppleScript Script File',\n            'scptd',        //    AppleScript Script Bundle',\n            'scr',        //    Script File',\n            'script',        //    Generic Script File',\n            'sct',        //    Windows Scriptlet',\n            'seed',        //    Linux Preseed File',\n            'shb',        //    Windows Document Shortcut',\n            'smm',        //    Ami Pro Macro',\n            'spr',        //    FoxPro Generated Screen File',\n            'tcp',        //    Tally Compiled Program File',\n            'thm',        //    Thermwood Macro File',\n            'tms',        //    Telemate Script',\n            'u3p',        //    U3 Smart Application',\n            'udf',        //    Excel User Defined Function',\n            'upx',        //    Ultimate Packer for eXecutables F\n            'vb',        //    VBScript File',    \t//\n            'vbe',        //    VBScript Encoded Script File',\n            'vbs',        //    VBScript File',\n            'vbscript',        //    Visual Basic Script',\n            'vdo',        //    Heathen Virus File',\n            'vexe',        //    Virus Executable File',\n            'vlx',        //    Compiled AutoLISP File',\n            'vpm',        //    Vox Proxy Macro File',\n            'vxp',        //    Mobile Application File',\n            'wcm',        //    WordPerfect Macro',\n            'widget',        //    Microsoft Windows Mobile Widget',\n            'widget',        //    Yahoo! Widget',\n            'wiz',        //    Microsoft Wizard File',\n            'workflow',        //    Automator Workflow',\n            'wpk',        //    WordPerfect Macro',\n            'wpm',        //    WordPerfect Macro File',\n            'ws',        //    Windows Script',\n            'wsf',        //    Windows Script File',\n            'wsh',        //    Windows Script Host Settings',\n            'x86',        //    Linux Executable File',\n            'xap',        //    Silverlight Application Package',\n            'xbap',        //    XAML Browser Application File',\n            'xlm',        //    Excel Macro',\n            'xqt',        //    SuperCalc Macro File',\n            'xys',        //    XYplorer Script File',\n            'zl9',        //    ZoneAlarm Quarantined EXE File\n\n\n            'swf',        //    Flash File\n\n        );\n\n\n        return $dangerous;\n    }\n\n\n    public function is_dangerous_file($file_name)\n    {\n        $dangerous = $this->get_dangerous_files_extentions();\n        $is_ext = get_file_extension($file_name);\n        $is_ext = strtolower($is_ext);\n\n        if (in_array($is_ext, $dangerous)) {\n            return true;\n        }\n\n    }\n\n\n    function get_allowed_files_extensions_for_upload($fileTypes = 'images')\n    {\n\n        $are_allowed = '';\n        switch ($fileTypes) {\n\n            case 'img':\n            case 'image':\n            case 'images':\n                $are_allowed .= ',png,gif,jpg,jpeg,tiff,bmp,svg';\n                break;\n            case 'video':\n            case 'videos':\n                $are_allowed .= ',avi,asf,mpg,mpeg,mp4,flv,mkv,webm,ogg,wma,mov,wmv';\n                break;\n            case 'file':\n            case 'files':\n                $are_allowed .= ',doc,docx,pdf,html,js,css,htm,rtf,txt,zip,gzip,rar,cad,xml,psd,xlsx,csv,7z';\n                break;\n            case 'documents':\n            case 'doc':\n                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xml,htm,html,xlr,xls,xlsx';\n                break;\n            case 'archives':\n            case 'arc':\n            case 'arch':\n                $are_allowed .= ',zip,zipx,gzip,rar,gz,7z,cbr,tar.gz';\n                break;\n            case 'all':\n                $are_allowed .= ',*';\n                break;\n            case '*':\n                $are_allowed .= ',*';\n                break;\n            default:\n                $are_allowed .= ',' . $fileTypes;\n        }\n\n        if($are_allowed){\n            $are_allowed = explode(',',$are_allowed);\n            array_unique($are_allowed);\n            $are_allowed = array_filter($are_allowed);\n            $are_allowed = implode(',', $are_allowed);\n        }\n\n        return $are_allowed;\n    }\n}\n"], "fixing_code": ["<?php\n\nnamespace MicroweberPackages\\Utils\\System;\n\nuse RecursiveIteratorIterator;\nuse RecursiveDirectoryIterator;\nuse FilesystemIterator;\n\n$mw_static_option_groups = array();\n\nclass Files\n{\n    /**\n     * Copies directory recursively.\n     *\n     * @param $source\n     * @param $destination\n     */\n    public function copy_directory($source, $destination)\n    {\n        static $copies;\n        if (is_dir($source)) {\n            @mkdir($destination);\n            $directory = dir($source);\n            while (false !== ($readdirectory = $directory->read())) {\n                if ($readdirectory == '.' || $readdirectory == '..') {\n                    continue;\n                }\n\n                $PathDir = $source . DIRECTORY_SEPARATOR . $readdirectory;\n                if (is_dir($PathDir)) {\n                    $this->copy_directory($PathDir, $destination . DIRECTORY_SEPARATOR . $readdirectory);\n                    continue;\n                }\n                $copies[] = $destination . DIRECTORY_SEPARATOR . $readdirectory;\n                copy($PathDir, $destination . DIRECTORY_SEPARATOR . $readdirectory);\n            }\n\n            $directory->close();\n        } else {\n            $copies[] = $destination;\n            copy($source, $destination);\n        }\n\n        return $copies;\n    }\n\n    /**\n     * Returns a human readable filesize.\n     *\n     * @category Files\n     *\n     * @author      wesman20 (php.net)\n     * @author      Jonas John\n     *\n     * @version     0.3\n     *\n     * @link        http://www.jonasjohn.de/snippets/php/readable-filesize.htm\n     */\n    public function file_size_nice($size)\n    {\n        // Adapted from: http://www.php.net/manual/en/function.filesize.php\n\n        $mod = 1024;\n\n        $units = explode(' ', 'B KB MB GB TB PB');\n        for ($i = 0; $size > $mod; ++$i) {\n            $size /= $mod;\n        }\n\n        return round($size, 2) . ' ' . $units[$i];\n    }\n\n\n    public function rmdir($dirPath)\n    {\n        foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dirPath, FilesystemIterator::SKIP_DOTS), RecursiveIteratorIterator::CHILD_FIRST) as $path) {\n            $path->isDir() && !$path->isLink() ? rmdir($path->getPathname()) : unlink($path->getPathname());\n        }\n        @rmdir($dirPath);\n    }\n\n//    public function dir_tree($path = '.', $params = false)\n//    {\n//        $params = parse_params($params);\n//        $dir = $path;\n//\n//        return $this->directory_tree_build($dir, $params);\n//    }\n\n    public function md5_dir($path)\n    {\n        if (!file_exists($path)) {\n            throw new \\Exception('Directory doesn\\'t exist.');\n        }\n\n        $directoryIterator = new \\DirectoryIterator($path);\n        $items = array();\n        foreach ($directoryIterator as $fileInfo) {\n            $filePath = $fileInfo->getPathname();\n            if (!$fileInfo->isDot()) {\n                if ($fileInfo->isFile()) {\n                    $md = md5_file($filePath);\n                    $filePath = normalize_path($filePath, false);\n                    $items [$md] = $filePath;\n                } else if ($fileInfo->isDir()) {\n                    $more = $this->md5_dir($filePath);\n                    foreach ($more as $k => $v) {\n                        $items [$k] = $v;\n                    }\n                }\n            }\n        }\n        return $items;\n    }\n\n\n    /**\n     * get_files.\n     *\n     *  Get an array that represents directory and files\n     *\n     * @category    files module api\n     *\n     * @version 1.0\n     *\n     * @since 0.320\n     *\n     * @return mixed Array with files\n     *\n     * @param array $params = array()     the params\n     * @param string $params ['directory']       The directory\n     * @param string $params ['keyword']       If set it will seach the dir and subdirs\n     */\n    public function get($params)\n    {\n        if (is_admin() == false) {\n            mw_error('Must be admin');\n        }\n\n        $params = parse_params($params);\n        if (!isset($params['directory'])) {\n            mw_error('You must define directory');\n        } else {\n            $directory = $params['directory'];\n        }\n\n\n        $filter_extensions = false;\n\n        if (isset($params['extensions']) and is_string($params['extensions'])) {\n            $filter_extensions = explode(',', $params['extensions']);\n        }\n\n        $hide_files = false;\n\n        if (isset($params['hide_files']) and is_string($params['hide_files'])) {\n            $hide_files = explode(',', $params['hide_files']);\n        } else if (isset($params['hide_files']) and is_array($params['hide_files'])) {\n            $hide_files = $params['hide_files'];\n        }\n        $restrict_path = false;\n\n        if (isset($params['restrict_path']) and is_string($params['restrict_path'])) {\n            $restrict_path = $params['restrict_path'];\n        }\n\n        if ($restrict_path) {\n            if (!strstr($directory, $restrict_path)) {\n                $directory = $restrict_path . $directory;\n            }\n        }\n\n        $from_search = 0;\n        $arrayItems = array();\n        if (isset($params['search']) and strval($params['search']) != '') {\n            $from_search = 1;\n            $arrayItems_search = $this->rglob($pattern = DS . '*' . $params['search'] . '*', $flags = 0, $directory);\n        } else {\n            if (!is_dir($directory . DS)) {\n                return false;\n            }\n\n            $arrayItems_search = array();\n            $myDirectory = opendir($directory . DS);\n\n\n\n            while ($entryName = readdir($myDirectory)) {\n\n                if(!empty($hide_files) && in_array($entryName,$hide_files)){\n                    continue;\n                }\n\n                if ($entryName != '..' and $entryName != '.') {\n                    $arrayItems_search[] = $entryName;\n                }\n            }\n\n            closedir($myDirectory);\n        }\n\n        if (!empty($arrayItems_search)) {\n//\n            //usort($myarray, create_function('$a,$b', 'return filemtime($a) - filemtime($b);'));\n\n            $arrayItems_f = array();\n            $arrayItems_d = array();\n            foreach ($arrayItems_search as $file) {\n                if ($from_search == 0) {\n                    $file = $directory . DS . $file;\n                }\n                if (is_file($file)) {\n\n                    $skip = false;\n                    $df = normalize_path($file, false);\n                    $file_ext = get_file_extension($df);\n\n\n                    if ($filter_extensions and !empty($filter_extensions)) {\n                        $skip = true;\n                        foreach ($filter_extensions as $filter_extension) {\n                            if ($filter_extension == $file_ext) {\n                                $skip = false;\n                            }\n                        }\n//                        if(array_search($file_ext,$filter_extensions)){\n//                           // $skip = false;\n//                        }\n                    }\n\n                    if ($skip == false) {\n                        if (!in_array($df, $arrayItems_f)) {\n                            $arrayItems_f[] = $df;\n                        }\n                    }\n                } else {\n                    $df = normalize_path($file, 1);\n                    if (!in_array($df, $arrayItems_d)) {\n                        $arrayItems_d[] = $df;\n                    }\n                }\n            }\n\n            /*\n            // Sort  by filetime\n            $sortedFiles = array();\n            foreach($arrayItems_f as $dir) {\n            \t$sortedFiles[filemtime($dir)] = $dir;\n            }\n            ksort($sortedFiles);\n            $sortedFiles = array_reverse($sortedFiles);\n            */\n\n\n            if (isset($params['sort_by']) and strval($params['sort_by']) != '') {\n                if (!isset($params['sort_order'])) {\n                    $sort_params = explode(' ', $params['sort_by']);\n                    if (isset($sort_params[1])) {\n                        $params['sort_by'] = $sort_params[0];\n                        $params['sort_order'] = $sort_params[1];\n                    }\n                }\n\n\n                if (isset($params['sort_order']) and strval($params['sort_order']) != '') {\n                    $ord = SORT_DESC;\n                    if (strtolower($params['sort_order']) == 'asc') {\n                        $ord = SORT_ASC;\n                    }\n                    $allowed_sort = array('basename', 'filemtime', 'filesize');\n                    if (in_array($params['sort_by'], $allowed_sort)) {\n                        array_multisort(array_map($params['sort_by'], $arrayItems_f), SORT_NUMERIC, $ord, $arrayItems_f);\n                    }\n                }\n            }\n\n            $arrayItems['files'] = $arrayItems_f;\n            $arrayItems['dirs'] = $arrayItems_d;\n        }\n\n\n        return $arrayItems;\n    }\n\n    /**\n     * Recursive glob().\n     *\n     * @category Files\n     *\n     * @uses is_array()\n     *\n     * @param int|string $pattern\n     *                            the pattern passed to glob()\n     * @param int $flags\n     *                            the flags passed to glob()\n     * @param string $path\n     *                            the path to scan\n     *\n     * @return mixed\n     *               an array of files in the given path matching the pattern.\n     */\n    public function rglob($pattern = '*', $flags = 0, $path = '')\n    {\n        if (!$path && ($dir = dirname($pattern)) != '.') {\n            if ($dir == '\\\\' || $dir == '/') {\n                $dir = '';\n            }\n\n            return $this->rglob(basename($pattern), $flags, $dir . DS);\n        }\n\n        if (stristr($path, '_notes') or stristr($path, '.git') or stristr($path, '.svn')) {\n            return false;\n        }\n\n        $paths = glob($path . '*', GLOB_ONLYDIR | GLOB_NOSORT);\n        $files = glob($path . $pattern, $flags);\n\n        if (is_array($paths)) {\n            foreach ($paths as $p) {\n                $temp = array();\n                if (is_dir($p) and is_readable($p)) {\n                    $temp = $this->rglob($pattern, false, $p . DS);\n                }\n\n                if (is_array($temp) and is_array($files)) {\n                    $files = array_merge($files, $temp);\n                } elseif (is_array($temp)) {\n                    $files = $temp;\n                }\n            }\n        }\n\n        return $files;\n    }\n\n    public function dir_tree_build($dir, $params = false)\n    {\n        $params = parse_params($params);\n        $class = 'directory_tree';\n        if (isset($params['class'])) {\n            $class = $params['class'];\n        }\n\n        $title_class = 'is_folder';\n        if (isset($params['title_class'])) {\n            $title_class = $params['title_class'];\n        }\n\n        $basedir = '';\n        if (isset($params['dir_name'])) {\n            $basedir = $params['dir_name'];\n        }\n\n        $max_depth = 100;\n        if (isset($params['max_depth'])) {\n            $max_depth = $params['max_depth'];\n        }\n\n        $url_param = 'file';\n        if (isset($params['url_param'])) {\n            $url_param = $params['url_param'];\n        }\n\n        if (isset($params['url'])) {\n            $url = $params['url'];\n        } else {\n            $url = mw()->url->current(true, true);\n        }\n\n        static $level = 0;\n\n        if ($max_depth > $level) {\n            ++$level;\n            $ffs = scandir($dir);\n            echo '<ul class=\"' . $class . ' depth_' . $level . '\">';\n            foreach ($ffs as $ff) {\n                $is_hidden = substr($ff, 0, 1);\n                if ($is_hidden == '_') {\n                } else {\n                    $file1 = $ff;\n\n                    if (strlen($file1) > 3) {\n                        $pos = strpos($file1, '_', 1);\n\n                        if ($pos != false) {\n                            $substr = substr($file1, 0, $pos);\n                            if (intval($substr) > 0) {\n                                $file1 = substr($file1, $pos, strlen($file1));\n                                $file1 = ltrim($file1, '_');\n                            }\n                        }\n                    }\n\n                    $file1 = str_replace('_', ' ', $file1);\n\n                    if ($ff != '.' && $ff != '..') {\n                        echo '<li class=\"' . $class . ' depth_' . $level . '\">';\n                        if (is_dir($dir . '/' . $ff)) {\n                            $is_index = $dir . DS . $ff . DS . 'index.php';\n                            $link_href = '';\n\n                            if (is_file($is_index)) {\n                                $link = $dir . '/' . $ff . '/index.php';\n                                if (trim($basedir) != '') {\n                                    $link = normalize_path($link, false);\n                                    $basedir = normalize_path($basedir, false);\n                                    $link = str_replace($basedir . DS, '', $link);\n                                    $link = str_replace('\\\\', '/', $link);\n                                    $link = urlencode($link);\n                                }\n                                $active_class = '';\n\n                                if (isset($_REQUEST[$url_param]) and urldecode($_REQUEST[$url_param]) == $link) {\n                                    $active_class = ' active ';\n                                }\n\n                                $file1 = \"<a class='{$active_class}' href='{$url}?{$url_param}={$link}'>{$file1}</a>\";\n                            }\n\n                            $h_start = ($level == 1) ? '<h2 class=\"' . $title_class . '\">' : '<h3 class=\"' . $title_class . '\">';\n                            $h_close = ($level == 1) ? '</h2>' : '</h3>';\n                            echo $h_start . $file1 . $h_close;\n                            $this->dir_tree_build($dir . '/' . $ff, $params);\n                        } else {\n                            $file1 = no_ext($file1);\n\n                            $link = $dir . '/' . $ff;\n\n                            if (trim($basedir) != '') {\n                                $link = normalize_path($link, false);\n                                $basedir = normalize_path($basedir, false);\n                                $link = str_replace($basedir . DS, '', $link);\n                            }\n\n                            $link = str_replace('\\\\', '/', $link);\n                            $class_path = str_replace('/', '--', $link);\n                            $class_path = str_replace(' ', '_', $class_path);\n                            $class_path = str_replace('.', '_', $class_path);\n                            $active_class = '';\n                            if (isset($_REQUEST[$url_param]) and urldecode($_REQUEST[$url_param]) == $link) {\n                                $active_class = ' active ';\n                            }\n\n                            $link_href = $file1;\n                            if ($link != false) {\n                                $link = urlencode($link);\n                                $link_href = \"<a class='{$active_class} page_{$class_path} ' href='{$url}?{$url_param}={$link}'>{$file1}</a>\";\n                            }\n\n                            echo $link_href;\n                        }\n                        echo '</li>';\n                    }\n                }\n            }\n            echo '</ul>';\n        }\n        --$level;\n    }\n\n    public function download_to_browser($filename)\n    {\n        if (file_exists($filename)) {\n            $name = basename($filename);\n            $ext = get_file_extension($filename);\n\n            header('Cache-Control: public');\n            if ($ext == 'zip') {\n                header('Content-Type: application/zip');\n                header('Content-Transfer-Encoding: Binary');\n            } elseif ($ext == 'sql') {\n                header('Content-type: text/plain; charset=utf-8');\n            }\n            header('Content-Description: File Transfer');\n            header('Content-Disposition: attachment; filename=' . $name);\n            header('Content-Length: ' . filesize($filename));\n            readfile($filename);\n            exit;\n//            if (function_exists('mime_content_type')) {\n//                $this->_readfile_laravel_chunked($filename);\n//            } else {\n//\n//            }\n            //$this->_readfile_chunked($filename);\n        }\n    }\n\n    private function _readfile_chunked($filename, $retbytes = true)\n    {\n        $filename = str_replace('..', '', $filename);\n        $chunk_size = 1024 * 1024;\n        $buffer = '';\n        $cnt = 0;\n        $handle = fopen($filename, 'rb');\n        if ($handle === false) {\n            return false;\n        }\n        while (!feof($handle)) {\n            $buffer = fread($handle, $chunk_size);\n            echo $buffer;\n            ob_flush();\n            flush();\n            if ($retbytes) {\n                $cnt += strlen($buffer);\n            }\n        }\n        $status = fclose($handle);\n        if ($retbytes && $status) {\n            return $cnt; // return num. bytes delivered like readfile() does.\n        }\n\n        return $status;\n    }\n\n    private function _readfile_laravel_chunked($path, $name = null, array $headers = array())\n    {\n        if (is_null($name)) {\n            $name = basename($path);\n        }\n\n        // Prepare the headers\n        $headers = array_merge(array(\n            'Content-Description' => 'File Transfer',\n            'Content-Type' => \\File::mime(\\File::extension($path)),\n            'Content-Transfer-Encoding' => 'binary',\n            'Expires' => 0,\n            'Cache-Control' => 'must-revalidate, post-check=0, pre-check=0',\n            'Pragma' => 'public',\n            'Content-Length' => \\File::size($path),\n        ), $headers);\n\n        $response = new \\Response('', 200, $headers);\n        $response->header('Content-Disposition', $response->disposition($name));\n\n        // If there's a session we should save it now\n        if (\\Config::get('session.driver') !== '') {\n            \\Session::save();\n        }\n\n        // Send the headers and the file\n        ob_end_clean();\n        $response->send_headers();\n\n        if ($fp = fread($path, 'rb')) {\n            while (!feof($fp) and (connection_status() == 0)) {\n                echo fread($fp, 8192);\n                flush();\n            }\n        }\n\n        // Finish off, like Laravel would\n        \\Event::fire('laravel.done', array($response));\n        $response->foundation->finish();\n\n        exit;\n    }\n\n\n    function get_dangerous_files_extentions()\n    {\n\n\n        $dangerous = array(\n            'phtml',\n            'php',\n            'php5',\n            'php6',\n            'php7',\n            'php72',\n            'php73',\n            'php74',\n            'php8',\n            'php81',\n            'php82',\n            'php56',\n            'php4',\n            'php3',\n            'phps',\n            'phpt',\n            'ptml',\n            'hphp',\n            'html',\n            'xhtml',\n            'phtml',\n            'shtml',\n            'htm',\n            'pl',\n            'js',\n            'cgi',\n            'rb',\n            'py',\n            'alfa',\n            'asp',\n            'aspx',\n            'htaccess',\n            'exe',\n            'msi',\n            'sh',\n            'bat',\n            'vbs',\n            'vb',\n            'lnk',\n            'jsp',\n            'jspx',\n\n            // from http://www.file-extensions.org/filetype/extension/name/program-executable-files\n            'action ',  //  Automator Action  Mac OS\n            'apk',      //     Application  Android\n            'app',      //     Executable  Mac OS\n            'bat',      //     Batch File  Windows\n            'bin',      //     Binary Executable  Windows, Mac OS, Linux\n            'cmd',      //     Command Script  Windows\n            'com',      //     Command File  Windows\n            'command',  //   Terminal Command  Mac OS\n            'cpl',      //     Control Panel Extension  Windows\n            'csh',      //     C Shell Script  Mac OS, Linux\n            'exe',      //     Executable  Windows\n            'gadget',   //  Windows Gadget  Windows\n            'inf1',     //      Setup Information File  Windows\n            'ins',      //     Internet Communication Settings  Windows\n            'inx',      //     InstallShield Compiled Script  Windows\n            'ipa',      //     Application  iOS\n            'isu',      //     InstallShield Uninstaller Script  Windows\n            'job',      //     Windows Task Scheduler Job File  Windows\n            'jse',      //     JScript Encoded File  Windows\n            'ksh',      //     Unix Korn Shell Script  Linux\n            'lnk',      //     File Shortcut  Windows\n            'msc',      //     Microsoft Common Console Document  Windows\n            'msi',      //     Windows Installer Package  Windows\n            'msp',      //     Windows Installer Patch  Windows\n            'mst',      //     Windows Installer Setup Transform File  Windows\n            'osx',      //     Executable  Mac OS\n            'out',      //     Executable  Linux\n            'paf',      //     Portable Application Installer File  Windows\n            'pif',      //     Program Information File  Windows\n            'prg',      //     Executable  GEM\n            'ps1',      //     Windows PowerShell Cmdlet  Windows\n            'reg',      //     Registry Data File  Windows\n            'rgs',      //     Registry Script  Windows\n            'run',      //     Executable  Linux\n            'sct',      //     Windows Scriptlet  Windows\n            'shb',      //     Windows Document Shortcut  Windows\n            'shs',      //     Shell Scrap Object  Windows\n            'u3p',      //     U3 Smart Application  Windows\n            'vb',       //    VBScript File  Windows\n            'vbe',      //     VBScript Encoded Script  Windows\n            'vbs',      //     VBScript File  Windows\n            'vbscript', //    Visual Basic Script  Windows\n            'workflow', //    Automator Workflow  Mac OS\n            'ws',       //    Windows Script  Windows\n            'wsf',      //  Windows Script  Windows\n\n            // from http://fileinfo.com/filetypes/executable\n            '0xe',        //    F-Secure Renamed Virus File',\n            '73k',        //    TI-73 Application',\n            '89k',        //    TI-89 Application',\n            '8ck',        //    TI-83 and TI-84 Plus Application\n            'a6p',        //    Authorware 6 Program',\n            'a7r',        //    Authorware 7 Runtime File',\n            'ac',        //    Autoconf Script',\n            'acc',        //    GEM Accessory File',\n            'acr',        //    ACRobot Script',\n            'action',        //    Automator Action',\n            'actm',        //    AutoCAD Action Macro File',\n            'ahk',        //    AutoHotkey Script',\n            'air',        //    Adobe AIR Installation Package',\n            'apk',        //    Android Package File',\n            'app',        //    Mac OS X Application',\n            'app',        //    FoxPro Generated Application',\n            'app',        //    Symbian OS Application',\n            'applescripT',        //    AppleScript File',\n            'arscript',        //    ArtRage Script',\n            'asb',        //    Alphacam Stone VB Macro File',\n            'azw2',        //    Kindle Active Content App File',\n            'ba_',        //    Renamed BAT File',\n            'bat',        //    DOS Batch File',\n            'beam',        //    Compiled Erlang File',\n            'bin',        //    Generic Binary Executable File',\n            'bin',        //    Unix Executable File',\n            'btm',        //    4DOS Batch File',\n            'caction',        //    Automator Converter Action',\n            'cel',        //    Celestia Script File',\n            'celx',        //    Celestia Script',\n            'cgi',        //    Common Gateway Interface Script',\n            'cmd',        //    Windows Command File',\n            'cof',        //    MPLAB COFF File',\n            'com',        //    DOS Command File',\n            'command',        //    Terminal Command File',\n            'csh',        //    C Shell Script',\n            'cyw',        //    Rbot.CYW Worm File',\n            'dek',        //    Eavesdropper Batch File',\n            'dld',        //    EdLog Compiled Program',\n            'dmc',        //    Medical Manager Script',\n            'dosexec',\n            'ds',        //    TWAIN Data Source',\n            'dxl',        //    Rational DOORS Script',\n            'e_e',        //    Renamed EXE File',\n            'ear',        //    Java Enterprise Archive File',\n            'ebm',        //    EXTRA! Basic Macro',\n            'ebs',        //    E-Run 1.x Script',\n            'ebs2',        //    E-Run 2.0 Script File',\n            'ecf',        //    SageCRM Component File',\n            'eham',        //    ExtraHAM Executable File',\n            'elf',        //    Nintendo Wii Game File',\n            'es',        //    SageCRM Script File',\n            'esh',        //    Extended Shell Batch File',\n            'ex4',        //    MetaTrader Program File',\n            'ex_',        //    Compressed Executable File',\n            'ex_',        //    Renamed Windows Executable File',\n            'exe',        //    Windows Executable File',\n            'exe',        //    PortableApps.com Application',\n            'exe1',        //    Renamed EXE File',\n            'exopc',        //    ExoPC Application',\n            'ezs',        //    EZ-R Stats Batch Script',\n            'ezt',        //    EZT Malicious Worm File',\n            'fas',        //    Compiled Fast-Load AutoLISP File'\n            'fas',        //    QuickSilver Fast Save Lisp File',\n            'fky',        //    FoxPro Macro',\n            'fpi',        //    FPS Creator Intelligence Script',\n            'frs',        //    Flash Renamer Script',\n            'fxp',        //    FoxPro Compiled Program',\n            'gadget',        //    Windows Gadget',\n            'gpe',        //    GP2X Video Game',\n            'gpu',        //    GP2X Utility Program',\n            'gs',        //    Geosoft Script',\n            'ham',        //    HAM Executable File',\n            'hms',        //    HostMonitor Script File',\n            'hpf',        //    HP9100A Program File',\n            'hta',        //    HTML Application',\n            'icd',        //    SafeDisc Encrypted Program',\n            'iim',        //    iMacro Macro File',\n            'ipa',        //    iOS Application',\n            'ipf',        //    SMS Installer Script',\n            'isu',        //    InstallShield Uninstaller Script'\n            'ita',        //    VTech InnoTab Application File',\n            'jar',        //    Java Archive File',\n            'js',        //    JScript Executable Script',\n            'jse',        //    JScript Encoded File',\n            'jsx',        //    ExtendScript Script File',\n            'kix',        //    KiXtart Script File',\n            'ksh',        //    Unix Korn Shell Script',\n            'lo',        //    Interleaf Compiled Lisp File',\n            'ls',        //    LightWave LScript File',\n            'm3g',        //    Mobile 3D Graphics Program',\n            'mam',        //    Microsoft Access Macro',\n            'mcr',        //    3ds Max Macroscript File',\n            'mcr',        //    Tecplot Macro',\n            'mel',        //    Maya Embedded Language File',\n            'mem',        //    Macro Editor Macro',\n            'mio',        //    MioEngine Application File',\n            'mm',        //    NeXtMidas Macro File',\n            'mpx',        //    FoxPro Compiled Menu Program',\n            'mrc',        //    mIRC Script File',\n            'mrp',        //    Mobile Application File',\n            'ms',        //    3ds Max Script File',\n            'ms',        //    Maxwell Script',\n            'msl',        //    Magick Scripting Language File',\n            'mxe',        //    Macro Express Playable Macro',\n            'n',        //    Neko Bytecode File',\n            'nexe',        //    Chrome Native Client Executable',\n            'ore',        //    Ore Executable File',\n            'osx',        //    PowerPC Executable File',\n            'otm',        //    Outlook Macro File',\n            'out',        //    Compiled Executable File',\n            'paf',        //    Portable Application Installer Fi\n            'paf.exe',        //    PortableApps.com Program File\n            'pex',        //    ProBoard Executable File',\n            'phar',        //    PHP Archive',\n            'pif',        //    Program Information File',\n            'plsc',        //    Messenger Plus! Live Script File'\n            'plx',        //    Perl Executable File',\n            'prc',        //    Palm Resource Code File',\n            'prg',        //    Program File',\n            'prg',        //    GEM Application',\n            'ps1',        //    Windows PowerShell Cmdlet File',\n            'pvd',        //    Instalit Script',\n            'pwc',        //    PictureTaker File',\n            'pyc',        //    Python Compiled File',\n            'pyo',        //    Python Optimized Code',\n            'qit',        //    QIT Trojan Horse File',\n            'qpx',        //    FoxPro Compiled Query Program',\n            'rbx',        //    Rembo-C Compiled Script',\n            'rfu',        //    Remote Firmware Update',\n            'rgs',        //    Registry Script',\n            'rox',        //    Actuate Report Object Executable\n            'rpj',        //    Real Pac Batch Job File',\n            'run',        //    Linux Executable File',\n            'rxe',        //    Lego Mindstorms NXT Executable Pr\n            's2a',        //    SEAL2 Application',\n            'sbs',        //    SPSS Script',\n            'sca',        //    Scala Script File',\n            'scar',        //    SCAR Script',\n            'scb',        //    Scala Published Script',\n            'scpt',        //    AppleScript Script File',\n            'scptd',        //    AppleScript Script Bundle',\n            'scr',        //    Script File',\n            'script',        //    Generic Script File',\n            'sct',        //    Windows Scriptlet',\n            'seed',        //    Linux Preseed File',\n            'shb',        //    Windows Document Shortcut',\n            'smm',        //    Ami Pro Macro',\n            'spr',        //    FoxPro Generated Screen File',\n            'tcp',        //    Tally Compiled Program File',\n            'thm',        //    Thermwood Macro File',\n            'tms',        //    Telemate Script',\n            'u3p',        //    U3 Smart Application',\n            'udf',        //    Excel User Defined Function',\n            'upx',        //    Ultimate Packer for eXecutables F\n            'vb',        //    VBScript File',    \t//\n            'vbe',        //    VBScript Encoded Script File',\n            'vbs',        //    VBScript File',\n            'vbscript',        //    Visual Basic Script',\n            'vdo',        //    Heathen Virus File',\n            'vexe',        //    Virus Executable File',\n            'vlx',        //    Compiled AutoLISP File',\n            'vpm',        //    Vox Proxy Macro File',\n            'vxp',        //    Mobile Application File',\n            'wcm',        //    WordPerfect Macro',\n            'widget',        //    Microsoft Windows Mobile Widget',\n            'widget',        //    Yahoo! Widget',\n            'wiz',        //    Microsoft Wizard File',\n            'workflow',        //    Automator Workflow',\n            'wpk',        //    WordPerfect Macro',\n            'wpm',        //    WordPerfect Macro File',\n            'ws',        //    Windows Script',\n            'wsf',        //    Windows Script File',\n            'wsh',        //    Windows Script Host Settings',\n            'x86',        //    Linux Executable File',\n            'xap',        //    Silverlight Application Package',\n            'xbap',        //    XAML Browser Application File',\n            'xlm',        //    Excel Macro',\n            'xqt',        //    SuperCalc Macro File',\n            'xys',        //    XYplorer Script File',\n            'zl9',        //    ZoneAlarm Quarantined EXE File\n            'swf',        //    Flash File\n\n            'key',\n            'asax',\n            'btapp',\n            'xd',\n            'fwtemplate',\n            'crdownload',\n            'whtt',\n            'ssp',\n            'fmp',\n            'jspa',\n            'obml16',\n            'a5w',\n            'crt',\n            'vrt',\n            'website',\n            'p7c',\n            'dll',\n            'php',\n            'mjs',\n            'dhtml',\n            'xul',\n            'bml',\n            'download',\n            'cshtml',\n            'vsdisco',\n            'codasite',\n            'webbookmark',\n            'rjs',\n            'wsdl',\n            'dml',\n            'aro',\n            'dcr',\n            'shtml',\n            'dochtml',\n            'dwt',\n            'spc',\n            'a4p',\n            'htaccess',\n            'ascx',\n            'pac',\n            'p7b',\n            'xhtm',\n            'oam',\n            'site',\n            'kit',\n            'aspx',\n            'zul',\n            'tpl',\n            'htm',\n            'seam',\n            'svr',\n            'pem',\n            'url',\n            'dap',\n            'appcache',\n            'chm',\n            'wbs',\n            'htc',\n            'ewp',\n            'gsp',\n            'asr',\n            'der',\n            'master',\n            'stc',\n            'ap',\n            'html',\n            'p12',\n            'xpd',\n            'fwp',\n            'epibrw',\n            'strm',\n            'xss',\n            'node',\n            'disco',\n            'gsp',\n            'pro',\n            'rss',\n            'gne',\n            'sdb',\n            'compressed',\n            'asp',\n            'browser',\n            'php2',\n            'sites2',\n            'dothtml',\n            'bok',\n            'axd',\n            'nzb',\n            'vdw',\n            'obml',\n            'mhtml',\n            'ashx',\n            'con',\n            'rhtml',\n            'alx',\n            'opml',\n            'web',\n            'chat',\n            'csr',\n            'do',\n            'sht',\n            'asa',\n            'cha',\n            'h5p',\n            'qf',\n            'olp',\n            'hyperesources',\n            'sparkle',\n            'razor',\n            'php4',\n            'cms',\n            'mml',\n            'jnlp',\n            'har',\n            'br',\n            'webloc',\n            'srf',\n            'cer',\n            'uhtml',\n            'pptmhtml',\n            'phtml',\n            'xbel',\n            'cfm',\n            'fwtemplateb',\n            'jspx',\n            'jsp',\n            'xfdl',\n            'zhtml',\n            'stml',\n            'jsonl',\n            'maff',\n            'dbm',\n            'aex',\n            'crl',\n            'mht',\n            'wml',\n            'sass',\n            'xht',\n            'awm',\n            'page',\n            'hdml',\n            'webmanifest',\n            'itms',\n            'sitemap',\n            'shtm',\n            'wpp',\n            'jss',\n            'oth',\n            'ucf',\n            'prf',\n            'freeway',\n            'edge',\n            'iqy',\n            'vrml',\n            'mvc',\n            'wdgt',\n            'discomap',\n            'psp',\n            'hxs',\n            'adr',\n            'hype',\n            'csp',\n            'xhtml',\n            'webarchive',\n            'qbo',\n            'jhtml',\n            'svc',\n            'phtm',\n            'rw3',\n            'tpl',\n            'stl',\n            'wbxml',\n            'p7',\n            'ndjson',\n            'ognc',\n            'fwtb',\n            'muse',\n            'vbd',\n            'sites',\n            'rt',\n            'esproj',\n            'private',\n            'srl',\n            'zhtml',\n            'vbhtml', \n            'hypetemplate',\n            'obml15',\n            'hypesymbol',\n            'pub',\n            'ece',\n            'mspx',\n            'docmhtml',\n            'xws',\n            'wgp',\n            'tvpi',\n            'woa',\n            'asmx',\n            'xbl',\n            'webhistory',\n            'idc',\n            'jws',\n            'lbc',\n            'att',\n            'tvvi',\n            'zvz',\n            'php3',\n            'webarchivexml',\n            'widget',\n            'swz',\n            'qrm',\n            'bwp',\n            'atom',\n            'cdf',\n            'map',\n            'hdm',\n            'php5',\n            'rwsw',\n            'wgt',\n            'nod',\n            'rflw',\n            'htx',\n            'mvr',\n            'an',\n            'rwp',\n            'lasso',\n            'vlp',\n            'stp',\n            'nxg',\n            'faces',\n            'kcmsf',\n            'ptw',\n            'less',\n            'saveddeck',\n            'ccbjs',\n            'wn',\n            'ppthtml',\n            'jcz',\n            'jvs',\n            'rwtheme',\n            'jst',\n            'mapx',\n            'cpg',\n            'wpx',\n            'qbx',\n            'suck',\n            'iwdgt',\n            'public',\n            'cphd',\n            'moz',\n            'zfo',\n            'stm',\n            'fcgi',\n            'itpc',\n            'cfml'\n        );\n\n\n        return $dangerous;\n    }\n\n\n    public function is_dangerous_file($file_name)\n    {\n        $dangerous = $this->get_dangerous_files_extentions();\n        $is_ext = get_file_extension($file_name);\n        $is_ext = strtolower($is_ext);\n\n        if (in_array($is_ext, $dangerous)) {\n            return true;\n        }\n\n    }\n\n\n    function get_allowed_files_extensions_for_upload($fileTypes = 'images')\n    {\n\n        $are_allowed = '';\n        switch ($fileTypes) {\n\n            case 'img':\n            case 'image':\n            case 'images':\n                $are_allowed .= ',png,gif,jpg,jpeg,tiff,bmp,svg';\n                break;\n            case 'video':\n            case 'videos':\n                $are_allowed .= ',avi,asf,mpg,mpeg,mp4,flv,mkv,webm,ogg,wma,mov,wmv';\n                break;\n            case 'file':\n            case 'files':\n                $are_allowed .= ',doc,docx,pdf,html,js,css,htm,rtf,txt,zip,gzip,rar,cad,xml,psd,xlsx,csv,7z';\n                break;\n            case 'documents':\n            case 'doc':\n                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xml,htm,html,xlr,xls,xlsx';\n                break;\n            case 'archives':\n            case 'arc':\n            case 'arch':\n                $are_allowed .= ',zip,zipx,gzip,rar,gz,7z,cbr,tar.gz';\n                break;\n            case 'all':\n                $are_allowed .= ',*';\n                break;\n            case '*':\n                $are_allowed .= ',*';\n                break;\n            default:\n                $are_allowed .= ',' . $fileTypes;\n        }\n\n        if($are_allowed){\n            $are_allowed = explode(',',$are_allowed);\n            array_unique($are_allowed);\n            $are_allowed = array_filter($are_allowed);\n            $are_allowed = implode(',', $are_allowed);\n        }\n\n        return $are_allowed;\n    }\n}\n"], "filenames": ["src/MicroweberPackages/Utils/System/Files.php"], "buggy_code_start_loc": [837], "buggy_code_end_loc": [840], "fixing_code_start_loc": [836], "fixing_code_end_loc": [1093], "type": "CWE-79", "message": "File upload filter bypass leading to stored XSS in GitHub repository microweber/microweber prior to 1.2.12.", "other": {"cve": {"id": "CVE-2022-0926", "sourceIdentifier": "security@huntr.dev", "published": "2022-03-12T10:15:08.197", "lastModified": "2022-03-18T19:57:23.983", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "File upload filter bypass leading to stored XSS in GitHub repository microweber/microweber prior to 1.2.12."}, {"lang": "es", "value": "Una omisi\u00f3n del filtro de subida de archivos conllevando a un ataque de tipo XSS almacenado en el repositorio de GitHub microweber/microweber versiones anteriores a 1.2.12"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microweber:microweber:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.12", "matchCriteriaId": "D2D0BDAC-476F-4A5C-98AE-71B23E086168"}]}]}], "references": [{"url": "https://github.com/microweber/microweber/commit/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/dc5d1555-0108-4627-b542-93352f35fa17", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/microweber/microweber/commit/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120"}}