{"buggy_code": ["<?php\nnamespace Rap2hpoutre\\LaravelLogViewer;\n\nif (class_exists(\"\\\\Illuminate\\\\Routing\\\\Controller\")) {\n    class BaseController extends \\Illuminate\\Routing\\Controller {}\n} else if (class_exists(\"Laravel\\\\Lumen\\\\Routing\\\\Controller\")) {\n    class BaseController extends \\Laravel\\Lumen\\Routing\\Controller {}\n}\n\nclass LogViewerController extends BaseController\n{\n    protected $request;\n\n    public function __construct ()\n    {\n        $this->request = app('request');\n    }\n\n    public function index()\n    {\n\n        if ($this->request->input('l')) {\n            LaravelLogViewer::setFile(base64_decode($this->request->input('l')));\n        }\n\n        if ($this->request->input('dl')) {\n            return $this->download(LaravelLogViewer::pathToLogFile(base64_decode($this->request->input('dl'))));\n        } elseif ($this->request->has('del')) {\n            app('files')->delete(LaravelLogViewer::pathToLogFile(base64_decode($this->request->input('del'))));\n            return $this->redirect($this->request->url());\n        } elseif ($this->request->has('delall')) {\n            foreach(LaravelLogViewer::getFiles(true) as $file){\n                app('files')->delete(LaravelLogViewer::pathToLogFile($file));\n            }\n            return $this->redirect($this->request->url());\n        }\n        \n        $data = [\n            'logs' => LaravelLogViewer::all(),\n            'files' => LaravelLogViewer::getFiles(true),\n            'current_file' => LaravelLogViewer::getFileName()\n        ];\n\n        if ($this->request->wantsJson()) {\n            return $data;\n        }\n\n        return app('view')->make('laravel-log-viewer::log', $data);\n    }\n\n    private function redirect($to)\n    {\n        if (function_exists('redirect')) {\n            return redirect($to);\n        }\n\n        return app('redirect')->to($to);\n    }\n\n    private function download($data)\n    {\n        if (function_exists('response')) {\n            return response()->download($data);\n        }\n\n        // For laravel 4.2\n        return app('\\Illuminate\\Support\\Facades\\Response')->download($data);\n    }\n}\n", "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <title>Laravel log viewer</title>\n\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap4.min.css\">\n\n\n  <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n  <!--[if lt IE 9]>\n  <script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\n  <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n  <![endif]-->\n  <style>\n    body {\n      padding: 25px;\n    }\n\n    h1 {\n      font-size: 1.5em;\n      margin-top: 0;\n    }\n\n    #table-log {\n        font-size: 0.85rem;\n    }\n\n    .sidebar {\n        font-size: 0.85rem;\n        line-height: 1;\n    }\n\n    .btn {\n        font-size: 0.7rem;\n    }\n\n\n    .stack {\n      font-size: 0.85em;\n    }\n\n    .date {\n      min-width: 75px;\n    }\n\n    .text {\n      word-break: break-all;\n    }\n\n    a.llv-active {\n      z-index: 2;\n      background-color: #f5f5f5;\n      border-color: #777;\n    }\n\n    .list-group-item {\n      word-wrap: break-word;\n    }\n  </style>\n</head>\n<body>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col sidebar mb-3\">\n      <h1><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Laravel Log Viewer</h1>\n      <p class=\"text-muted\"><i>by Rap2h</i></p>\n      <div class=\"list-group\">\n        @foreach($files as $file)\n          <a href=\"?l={{ base64_encode($file) }}\"\n             class=\"list-group-item @if ($current_file == $file) llv-active @endif\">\n            {{$file}}\n          </a>\n        @endforeach\n      </div>\n    </div>\n    <div class=\"col-10 table-container\">\n      @if ($logs === null)\n        <div>\n          Log file >50M, please download it.\n        </div>\n      @else\n        <table id=\"table-log\" class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th>Level</th>\n            <th>Context</th>\n            <th>Date</th>\n            <th>Content</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          @foreach($logs as $key => $log)\n            <tr data-display=\"stack{{{$key}}}\">\n              <td class=\"text-{{{$log['level_class']}}}\"><span class=\"fa fa-{{{$log['level_img']}}}\"\n                                                               aria-hidden=\"true\"></span> &nbsp;{{$log['level']}}</td>\n              <td class=\"text\">{{$log['context']}}</td>\n              <td class=\"date\">{{{$log['date']}}}</td>\n              <td class=\"text\">\n                @if ($log['stack']) <button type=\"button\" class=\"float-right expand btn btn-outline-dark btn-sm mb-2 ml-2\"\n                                       data-display=\"stack{{{$key}}}\"><span\n                      class=\"fa fa-search\"></span></button>@endif\n                {{{$log['text']}}}\n                @if (isset($log['in_file'])) <br/>{{{$log['in_file']}}}@endif\n                @if ($log['stack'])\n                  <div class=\"stack\" id=\"stack{{{$key}}}\"\n                       style=\"display: none; white-space: pre-wrap;\">{{{ trim($log['stack']) }}}\n                  </div>@endif\n              </td>\n            </tr>\n          @endforeach\n\n          </tbody>\n        </table>\n      @endif\n      <div class=\"p-3\">\n        @if($current_file)\n          <a href=\"?dl={{ base64_encode($current_file) }}\"><span class=\"fa fa-download\"></span>\n            Download file</a>\n          -\n          <a id=\"delete-log\" href=\"?del={{ base64_encode($current_file) }}\"><span\n                class=\"fa fa-trash\"></span> Delete file</a>\n          @if(count($files) > 1)\n            -\n            <a id=\"delete-all-log\" href=\"?delall=true\"><span class=\"fa fa-trash\"></span> Delete all files</a>\n          @endif\n        @endif\n      </div>\n    </div>\n  </div>\n</div>\n<!-- jQuery for Bootstrap -->\n<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\n<!-- FontAwesome -->\n<script defer src=\"https://use.fontawesome.com/releases/v5.0.6/js/all.js\"></script>\n<!-- Datatables -->\n<script type=\"text/javascript\" src=\"https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap4.min.js\"></script>\n<script>\n  $(document).ready(function () {\n    $('.table-container tr').on('click', function () {\n      $('#' + $(this).data('display')).toggle();\n    });\n    $('#table-log').DataTable({\n      \"order\": [1, 'desc'],\n      \"stateSave\": true,\n      \"stateSaveCallback\": function (settings, data) {\n        window.localStorage.setItem(\"datatable\", JSON.stringify(data));\n      },\n      \"stateLoadCallback\": function (settings) {\n        var data = JSON.parse(window.localStorage.getItem(\"datatable\"));\n        if (data) data.start = 0;\n        return data;\n      }\n    });\n    $('#delete-log, #delete-all-log').click(function () {\n      return confirm('Are you sure?');\n    });\n  });\n</script>\n</body>\n</html>\n"], "fixing_code": ["<?php\nnamespace Rap2hpoutre\\LaravelLogViewer;\n\nif (class_exists(\"\\\\Illuminate\\\\Routing\\\\Controller\")) {\n    class BaseController extends \\Illuminate\\Routing\\Controller {}\n} else if (class_exists(\"Laravel\\\\Lumen\\\\Routing\\\\Controller\")) {\n    class BaseController extends \\Laravel\\Lumen\\Routing\\Controller {}\n}\n\nclass LogViewerController extends BaseController\n{\n    protected $request;\n\n    public function __construct ()\n    {\n        $this->request = app('request');\n    }\n\n    public function index()\n    {\n\n        if ($this->request->input('l')) {\n            LaravelLogViewer::setFile(\\Crypt::decrypt($this->request->input('l')));\n        }\n\n        if ($this->request->input('dl')) {\n            return $this->download(LaravelLogViewer::pathToLogFile(\\Crypt::decrypt($this->request->input('dl'))));\n        } elseif ($this->request->has('del')) {\n            app('files')->delete(LaravelLogViewer::pathToLogFile(\\Crypt::decrypt($this->request->input('del'))));\n            return $this->redirect($this->request->url());\n        } elseif ($this->request->has('delall')) {\n            foreach(LaravelLogViewer::getFiles(true) as $file){\n                app('files')->delete(LaravelLogViewer::pathToLogFile($file));\n            }\n            return $this->redirect($this->request->url());\n        }\n        \n        $data = [\n            'logs' => LaravelLogViewer::all(),\n            'files' => LaravelLogViewer::getFiles(true),\n            'current_file' => LaravelLogViewer::getFileName()\n        ];\n\n        if ($this->request->wantsJson()) {\n            return $data;\n        }\n\n        return app('view')->make('laravel-log-viewer::log', $data);\n    }\n\n    private function redirect($to)\n    {\n        if (function_exists('redirect')) {\n            return redirect($to);\n        }\n\n        return app('redirect')->to($to);\n    }\n\n    private function download($data)\n    {\n        if (function_exists('response')) {\n            return response()->download($data);\n        }\n\n        // For laravel 4.2\n        return app('\\Illuminate\\Support\\Facades\\Response')->download($data);\n    }\n}\n", "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <title>Laravel log viewer</title>\n\n  <!-- Bootstrap -->\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap4.min.css\">\n\n\n  <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n  <!--[if lt IE 9]>\n  <script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\n  <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n  <![endif]-->\n  <style>\n    body {\n      padding: 25px;\n    }\n\n    h1 {\n      font-size: 1.5em;\n      margin-top: 0;\n    }\n\n    #table-log {\n        font-size: 0.85rem;\n    }\n\n    .sidebar {\n        font-size: 0.85rem;\n        line-height: 1;\n    }\n\n    .btn {\n        font-size: 0.7rem;\n    }\n\n\n    .stack {\n      font-size: 0.85em;\n    }\n\n    .date {\n      min-width: 75px;\n    }\n\n    .text {\n      word-break: break-all;\n    }\n\n    a.llv-active {\n      z-index: 2;\n      background-color: #f5f5f5;\n      border-color: #777;\n    }\n\n    .list-group-item {\n      word-wrap: break-word;\n    }\n  </style>\n</head>\n<body>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col sidebar mb-3\">\n      <h1><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> Laravel Log Viewer</h1>\n      <p class=\"text-muted\"><i>by Rap2h</i></p>\n      <div class=\"list-group\">\n        @foreach($files as $file)\n          <a href=\"?l={{ \\Crypt::encrypt($file) }}\"\n             class=\"list-group-item @if ($current_file == $file) llv-active @endif\">\n            {{$file}}\n          </a>\n        @endforeach\n      </div>\n    </div>\n    <div class=\"col-10 table-container\">\n      @if ($logs === null)\n        <div>\n          Log file >50M, please download it.\n        </div>\n      @else\n        <table id=\"table-log\" class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th>Level</th>\n            <th>Context</th>\n            <th>Date</th>\n            <th>Content</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          @foreach($logs as $key => $log)\n            <tr data-display=\"stack{{{$key}}}\">\n              <td class=\"text-{{{$log['level_class']}}}\"><span class=\"fa fa-{{{$log['level_img']}}}\"\n                                                               aria-hidden=\"true\"></span> &nbsp;{{$log['level']}}</td>\n              <td class=\"text\">{{$log['context']}}</td>\n              <td class=\"date\">{{{$log['date']}}}</td>\n              <td class=\"text\">\n                @if ($log['stack']) <button type=\"button\" class=\"float-right expand btn btn-outline-dark btn-sm mb-2 ml-2\"\n                                       data-display=\"stack{{{$key}}}\"><span\n                      class=\"fa fa-search\"></span></button>@endif\n                {{{$log['text']}}}\n                @if (isset($log['in_file'])) <br/>{{{$log['in_file']}}}@endif\n                @if ($log['stack'])\n                  <div class=\"stack\" id=\"stack{{{$key}}}\"\n                       style=\"display: none; white-space: pre-wrap;\">{{{ trim($log['stack']) }}}\n                  </div>@endif\n              </td>\n            </tr>\n          @endforeach\n\n          </tbody>\n        </table>\n      @endif\n      <div class=\"p-3\">\n        @if($current_file)\n          <a href=\"?dl={{ \\Crypt::encrypt($current_file) }}\"><span class=\"fa fa-download\"></span>\n            Download file</a>\n          -\n          <a id=\"delete-log\" href=\"?del={{ \\Crypt::encrypt($current_file) }}\"><span\n                class=\"fa fa-trash\"></span> Delete file</a>\n          @if(count($files) > 1)\n            -\n            <a id=\"delete-all-log\" href=\"?delall=true\"><span class=\"fa fa-trash\"></span> Delete all files</a>\n          @endif\n        @endif\n      </div>\n    </div>\n  </div>\n</div>\n<!-- jQuery for Bootstrap -->\n<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\n<!-- FontAwesome -->\n<script defer src=\"https://use.fontawesome.com/releases/v5.0.6/js/all.js\"></script>\n<!-- Datatables -->\n<script type=\"text/javascript\" src=\"https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap4.min.js\"></script>\n<script>\n  $(document).ready(function () {\n    $('.table-container tr').on('click', function () {\n      $('#' + $(this).data('display')).toggle();\n    });\n    $('#table-log').DataTable({\n      \"order\": [1, 'desc'],\n      \"stateSave\": true,\n      \"stateSaveCallback\": function (settings, data) {\n        window.localStorage.setItem(\"datatable\", JSON.stringify(data));\n      },\n      \"stateLoadCallback\": function (settings) {\n        var data = JSON.parse(window.localStorage.getItem(\"datatable\"));\n        if (data) data.start = 0;\n        return data;\n      }\n    });\n    $('#delete-log, #delete-all-log').click(function () {\n      return confirm('Are you sure?');\n    });\n  });\n</script>\n</body>\n</html>\n"], "filenames": ["src/controllers/LogViewerController.php", "src/views/log.blade.php"], "buggy_code_start_loc": [23, 74], "buggy_code_end_loc": [30, 127], "fixing_code_start_loc": [23, 74], "fixing_code_end_loc": [30, 127], "type": "CWE-312", "message": "rap2hpoutre Laravel Log Viewer before v0.13.0 relies on Base64 encoding for l, dl, and del requests, which makes it easier for remote attackers to bypass intended access restrictions, as demonstrated by reading arbitrary files via a dl request.", "other": {"cve": {"id": "CVE-2018-8947", "sourceIdentifier": "cve@mitre.org", "published": "2018-03-25T16:29:00.297", "lastModified": "2019-10-03T00:03:26.223", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "rap2hpoutre Laravel Log Viewer before v0.13.0 relies on Base64 encoding for l, dl, and del requests, which makes it easier for remote attackers to bypass intended access restrictions, as demonstrated by reading arbitrary files via a dl request."}, {"lang": "es", "value": "rap2hpoutre Laravel Log Viewer en versiones anteriores a la v0.13.0 conf\u00eda en la codificaci\u00f3n Base64 para peticiones l, dl y del, lo que facilita a los atacantes remotos omitir las restricciones de acceso planeadas, tal y como queda demostrado al leer archivos arbitrarios con una petici\u00f3n dl."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-312"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:laravel_log_viewer_project:laravel_log_viewer:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.13.0", "matchCriteriaId": "0F93FB9F-AA56-4D52-BB5C-2BC7473AB883"}]}]}], "references": [{"url": "https://github.com/rap2hpoutre/laravel-log-viewer/commit/cda89c06dc5331d06fab863d7cb1c4047ad68357", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/rap2hpoutre/laravel-log-viewer/releases/tag/v0.13.0", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.exploit-db.com/exploits/44343/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/rap2hpoutre/laravel-log-viewer/commit/cda89c06dc5331d06fab863d7cb1c4047ad68357"}}