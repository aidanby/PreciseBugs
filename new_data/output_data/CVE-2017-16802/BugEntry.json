{"buggy_code": ["<?php\n/**\n * Application level Controller\n *\n * This file is application-wide controller file. You can put all\n * application-wide controller-related methods here.\n *\n * PHP 5\n *\n * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)\n * Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)\n * @link          http://cakephp.org CakePHP(tm) Project\n * @package       app.Controller\n * @since         CakePHP(tm) v 0.2.9\n * @license       MIT License (http://www.opensource.org/licenses/mit-license.php)\n */\n\n// TODO GPG encryption has issues when keys are expired\n\nApp::uses('ConnectionManager', 'Model');\nApp::uses('Controller', 'Controller');\nApp::uses('File', 'Utility');\nApp::uses('RequestRearrangeTool', 'Tools');\n\n/**\n * Application Controller\n *\n * Add your application-wide methods in the class below, your controllers\n * will inherit them.\n *\n * @package       app.Controller\n * @link http://book.cakephp.org/2.0/en/controllers.html#the-app-controller\n *\n * @throws ForbiddenException // TODO Exception\n */\nclass AppController extends Controller {\n\n\tpublic $defaultModel = '';\n\n\tpublic $debugMode = false;\n\n\tpublic $helpers = array('Utility');\n\n\tprivate $__queryVersion = '23';\n\tpublic $pyMispVersion = '2.4.82';\n\tpublic $phpmin = '5.6.5';\n\tpublic $phprec = '7.0.16';\n\n\t// Used for _isAutomation(), a check that returns true if the controller & action combo matches an action that is a non-xml and non-json automation method\n\t// This is used to allow authentication via headers for methods not covered by _isRest() - as that only checks for JSON and XML formats\n\tpublic $automationArray = array(\n\t\t'events' => array('csv', 'nids', 'hids', 'xml', 'restSearch', 'stix', 'updateGraph', 'downloadOpenIOCEvent'),\n\t\t'attributes' => array('text', 'downloadAttachment', 'returnAttributes', 'restSearch', 'rpz', 'bro'),\n\t);\n\n\tpublic function __construct($id = false, $table = null, $ds = null) {\n\t\tparent::__construct($id, $table, $ds);\n\n\t\t$name = get_class($this);\n\t\t$name = str_replace('sController', '', $name);\n\t\t$name = str_replace('Controller', '', $name);\n\t\t$this->defaultModel = $name;\n\t}\n\n\tpublic $components = array(\n\t\t\t'Session',\n\t\t\t'Auth' => array(\n\t\t\t\t'authError' => 'Unauthorised access.',\n\t\t\t\t'loginRedirect' => array('controller' => 'users', 'action' => 'routeafterlogin'),\n\t\t\t\t'logoutRedirect' => array('controller' => 'users', 'action' => 'login', 'admin' => false),\n\t\t\t\t'authenticate' => array(\n\t\t\t\t\t'Form' => array(\n\t\t\t\t\t\t'passwordHasher' => 'Blowfish',\n\t\t\t\t\t\t'fields' => array(\n\t\t\t\t\t\t\t'username' => 'email'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\t'Security',\n\t\t\t'ACL',\n\t\t\t'RestResponse'\n\t);\n\n\tprivate function __isApiFunction($controller, $action) {\n\t\tif (isset($this->automationArray[$controller]) && in_array($action, $this->automationArray[$controller])) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic function beforeFilter() {\n\t\t// check for a supported datasource configuration\n\t\t$dataSourceConfig = ConnectionManager::getDataSource('default')->config;\n\t\tif (!isset($dataSourceConfig['encoding'])) {\n\t\t\t$db = ConnectionManager::getDataSource('default');\n\t\t\t$db->setConfig(array('encoding' => 'utf8'));\n\t\t\tConnectionManager::create('default', $db->config);\n\t\t}\n\t\t$dataSource = $dataSourceConfig['datasource'];\n\t\tif ($dataSource != 'Database/Mysql' && $dataSource != 'Database/Postgres') {\n\t\t\tthrow new Exception('datasource not supported: ' . $dataSource);\n\t\t}\n\n\t\t$this->set('queryVersion', $this->__queryVersion);\n\t\t$this->loadModel('User');\n\t\t$auth_user_fields = $this->User->describeAuthFields();\n\n\t\t//if fresh installation (salt empty) generate a new salt\n\t\tif (!Configure::read('Security.salt')) {\n\t\t\t$this->loadModel('Server');\n\t\t\t$this->Server->serverSettingsSaveValue('Security.salt', $this->User->generateRandomPassword(32));\n\t\t}\n\t\t// Check if the instance has a UUID, if not assign one.\n\t\tif (!Configure::read('MISP.uuid')) {\n\t\t\t$this->loadModel('Server');\n\t\t\t$this->Server->serverSettingsSaveValue('MISP.uuid', CakeText::uuid());\n\t\t}\n\t\t// check if Apache provides kerberos authentication data\n\t\t$envvar = Configure::read('ApacheSecureAuth.apacheEnv');\n\t\tif (isset($_SERVER[$envvar])) {\n\t\t\t$this->Auth->className = 'ApacheSecureAuth';\n\t\t\t$this->Auth->authenticate = array(\n\t\t\t\t'Apache' => array(\n\t\t\t\t\t// envvar = field returned by Apache if user is authenticated\n\t\t\t\t\t'fields' => array('username' => 'email', 'envvar' => $envvar),\n\t\t\t\t\t'userFields' => $auth_user_fields\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t$this->Auth->authenticate['Form']['userFields'] = $auth_user_fields;\n\t\t}\n\t\t$versionArray = $this->{$this->modelClass}->checkMISPVersion();\n\t\t$this->mispVersion = implode('.', array_values($versionArray));\n\n\t\t$this->Security->blackHoleCallback = 'blackHole';\n\n\t\t// Let us access $baseurl from all views\n\t\t$baseurl = Configure::read('MISP.baseurl');\n\t\tif (substr($baseurl, -1) == '/') {\n\t\t\t// if the baseurl has a trailing slash, remove it. It can lead to issues with the CSRF protection\n\t\t\t$baseurl = rtrim($baseurl, '/');\n\t\t\tConfigure::write('MISP.baseurl', $baseurl);\n\t\t}\n\t\t$this->set('baseurl', h($baseurl));\n\n\t\t// send users away that are using ancient versions of IE\n\t\t// Make sure to update this if IE 20 comes out :)\n\t\tif (isset($_SERVER['HTTP_USER_AGENT'])) {\n\t\t\tif (preg_match('/(?i)msie [2-8]/',$_SERVER['HTTP_USER_AGENT']) && !strpos($_SERVER['HTTP_USER_AGENT'], 'Opera')) throw new MethodNotAllowedException('You are using an unsecure and outdated version of IE, please download Google Chrome, Mozilla Firefox or update to a newer version of IE. If you are running IE9 or newer and still receive this error message, please make sure that you are not running your browser in compatibility mode. If you still have issues accessing the site, get in touch with your administration team at ' . Configure::read('MISP.contact'));\n\t\t}\n\t\t$userLoggedIn = false;\n\t\tif (Configure::read('Plugin.CustomAuth_enable')) $userLoggedIn = $this->__customAuthentication($_SERVER);\n\t\tif (!$userLoggedIn) {\n\t\t\t// REST authentication\n\t\t\tif ($this->_isRest() || $this->_isAutomation()) {\n\t\t\t\t// disable CSRF for REST access\n\t\t\t\tif (array_key_exists('Security', $this->components))\n\t\t\t\t\t$this->Security->csrfCheck = false;\n\t\t\t\t// Authenticate user with authkey in Authorization HTTP header\n\t\t\t\tif (!empty($_SERVER['HTTP_AUTHORIZATION'])) {\n\t\t\t\t\t$found_misp_auth_key = false;\n\t\t\t\t\t$authentication = explode(',', $_SERVER['HTTP_AUTHORIZATION']);\n\t\t\t\t\t$user = false;\n\t\t\t\t\tforeach ($authentication as $auth_key) {\n\t\t\t\t\t\tif (preg_match('/^[a-zA-Z0-9]{40}$/', trim($auth_key))) {\n\t\t\t\t\t\t\t$found_misp_auth_key = true;\n\t\t\t\t\t\t\t$temp = $this->checkAuthUser(trim($auth_key));\n\t\t\t\t\t\t\tif ($temp) {\n\t\t\t\t\t\t\t\t$user['User'] = $this->checkAuthUser(trim($auth_key));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($found_misp_auth_key) {\n\t\t\t\t\t\tif ($user) {\n\t\t\t\t\t\t\tunset($user['User']['gpgkey']);\n\t\t\t\t\t\t\tunset($user['User']['certif_public']);\n\t\t\t\t\t\t\t// User found in the db, add the user info to the session\n\t\t\t\t\t\t\tif (Configure::read('MISP.log_auth')) {\n\t\t\t\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t\t\t\t'org' => $user['User']['Organisation']['name'],\n\t\t\t\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t\t\t\t'model_id' => $user['User']['id'],\n\t\t\t\t\t\t\t\t\t\t'email' => $user['User']['email'],\n\t\t\t\t\t\t\t\t\t\t'action' => 'auth',\n\t\t\t\t\t\t\t\t\t\t'title' => 'Successful authentication using API key',\n\t\t\t\t\t\t\t\t\t\t'change' => 'HTTP method: ' . $_SERVER['REQUEST_METHOD'] . PHP_EOL . 'Target: ' . $this->here,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$this->Session->renew();\n\t\t\t\t\t\t\t$this->Session->write(AuthComponent::$sessionKey, $user['User']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// User not authenticated correctly\n\t\t\t\t\t\t\t// reset the session information\n\t\t\t\t\t\t\t$this->Session->destroy();\n\t\t\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t\t\t'org' => 'SYSTEM',\n\t\t\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t\t\t'model_id' => 0,\n\t\t\t\t\t\t\t\t\t'email' => 'SYSTEM',\n\t\t\t\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t\t\t\t'title' => 'Failed authentication using API key (' . trim($auth_key) . ')',\n\t\t\t\t\t\t\t\t\t'change' => null,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t\t\tthrow new ForbiddenException('Authentication failed. Please make sure you pass the API key of an API enabled user along in the Authorization header.');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tunset($user);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($this->Auth->user() == null) throw new ForbiddenException('Authentication failed. Please make sure you pass the API key of an API enabled user along in the Authorization header.');\n\t\t\t} else if (!$this->Session->read(AuthComponent::$sessionKey)) {\n\t\t\t\t// load authentication plugins from Configure::read('Security.auth')\n\t\t\t\t$auth = Configure::read('Security.auth');\n\t\t\t\tif ($auth) {\n\t\t\t\t\t$this->Auth->authenticate = array_merge($auth, $this->Auth->authenticate);\n\t\t\t\t\tif ($this->Auth->startup($this)) {\n\t\t\t\t\t\t$user = $this->Auth->user();\n\t\t\t\t\t\tif ($user) {\n\t\t\t\t\t\t\t// User found in the db, add the user info to the session\n\t\t\t\t\t\t\t$this->Session->renew();\n\t\t\t\t\t\t\t$this->Session->write(AuthComponent::$sessionKey, $user);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tunset($user);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tunset($auth);\n\t\t\t}\n\t\t}\n\t\t$this->set('externalAuthUser', $userLoggedIn);\n\t\t// user must accept terms\n\t\t//\n\t\t// grab the base path from our base url for use in the following checks\n\t\t$base_dir = parse_url($baseurl, PHP_URL_PATH);\n\n\t\t// if MISP is running out of the web root already, just set this variable to blank so we don't wind up with '//' in the following if statements\n\t\tif ($base_dir == '/') {\n\t\t\t$base_dir = '';\n\t\t}\n\n\t\tif ($this->Auth->user()) {\n\t\t\t// update script\n\t\t\t$this->{$this->modelClass}->runUpdates();\n\t\t\t$user = $this->Auth->user();\n\t\t\tif (!isset($user['force_logout']) || $user['force_logout']) {\n\t\t\t\t$this->loadModel('User');\n\t\t\t\t$this->User->id = $this->Auth->user('id');\n\t\t\t\t$this->User->saveField('force_logout', false);\n\t\t\t}\n\t\t\tif ($this->Auth->user('disabled')) {\n\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t$this->Log->create();\n\t\t\t\t$log = array(\n\t\t\t\t\t\t'org' => $this->Auth->user('Organisation')['name'],\n\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t'model_id' => $this->Auth->user('id'),\n\t\t\t\t\t\t'email' => $this->Auth->user('email'),\n\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t'title' => 'Login attempt by disabled user.',\n\t\t\t\t\t\t'change' => null,\n\t\t\t\t);\n\t\t\t\t$this->Log->save($log);\n\t\t\t\t$this->Auth->logout();\n\t\t\t\tif ($this->_isRest()) {\n\t\t\t\t\tthrow new ForbiddenException('Authentication failed. Your user account has been disabled.');\n\t\t\t\t} else {\n\t\t\t\t\t$this->Session->setFlash('Your user account has been disabled.');\n\t\t\t\t\t$this->redirect(array('controller' => 'users', 'action' => 'login', 'admin' => false));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!($this->params['controller'] === 'users' && $this->params['action'] === 'login')) $this->redirect(array('controller' => 'users', 'action' => 'login', 'admin' => false));\n\t\t}\n\n\t\t// check if MISP is live\n\t\tif ($this->Auth->user() && !Configure::read('MISP.live')) {\n\t\t\t$role = $this->getActions();\n\t\t\tif (!$role['perm_site_admin']) {\n\t\t\t\t$message = Configure::read('MISP.maintenance_message');\n\t\t\t\tif (empty($message)) {\n\t\t\t\t\t$this->loadModel('Server');\n\t\t\t\t\t$message = $this->Server->serverSettings['MISP']['maintenance_message']['value'];\n\t\t\t\t}\n\t\t\t\tif (strpos($message, '$email') && Configure::read('MISP.email')) {\n\t\t\t\t\t$email = Configure::read('MISP.email');\n\t\t\t\t\t$message = str_replace('$email', $email, $message);\n\t\t\t\t}\n\t\t\t\t$this->Session->setFlash($message);\n\t\t\t\t$this->Auth->logout();\n\t\t\t\tthrow new MethodNotAllowedException($message);//todo this should pb be removed?\n\t\t\t} else {\n\t\t\t\t$this->Session->setFlash('Warning: MISP is currently disabled for all users. Enable it in Server Settings (Administration -> Server Settings -> MISP tab -> live)');\n\t\t\t}\n\t\t}\n\n\t\tif ($this->Session->check(AuthComponent::$sessionKey)) {\n\t\t\tif (!empty(Configure::read('MISP.terms_file')) && !$this->Auth->user('termsaccepted') && (!in_array($this->request->here, array($base_dir.'/users/terms', $base_dir.'/users/logout', $base_dir.'/users/login', $base_dir.'/users/downloadTerms')))) {\n\t\t\t\tif ($this->_isRest()) throw new MethodNotAllowedException('You have not accepted the terms of use yet, please log in via the web interface and accept them.');\n\t\t\t\t$this->redirect(array('controller' => 'users', 'action' => 'terms', 'admin' => false));\n\t\t\t} else if ($this->Auth->user('change_pw') && (!in_array($this->request->here, array($base_dir.'/users/terms', $base_dir.'/users/change_pw', $base_dir.'/users/logout', $base_dir.'/users/login')))) {\n\t\t\t\tif ($this->_isRest()) throw new MethodNotAllowedException('Your user account is expecting a password change, please log in via the web interface and change it before proceeding.');\n\t\t\t\t$this->redirect(array('controller' => 'users', 'action' => 'change_pw', 'admin' => false));\n\t\t\t} else if (!$this->_isRest() && !($this->params['controller'] == 'news' && $this->params['action'] == 'index') && (!in_array($this->request->here, array($base_dir.'/users/terms', $base_dir.'/users/change_pw', $base_dir.'/users/logout', $base_dir.'/users/login')))) {\n\t\t\t\t$newsread = $this->User->field('newsread', array('User.id' => $this->Auth->user('id')));\n\t\t\t\t$this->loadModel('News');\n\t\t\t\t$latest_news = $this->News->field('date_created', array(), 'date_created DESC');\n\t\t\t\tif ($latest_news && $newsread < $latest_news) $this->redirect(array('controller' => 'news', 'action' => 'index', 'admin' => false));\n\t\t\t}\n\t\t}\n\t\tunset($base_dir);\n\n\t\t// We don't want to run these role checks before the user is logged in, but we want them available for every view once the user is logged on\n\t\t// instead of using checkAction(), like we normally do from controllers when trying to find out about a permission flag, we can use getActions()\n\t\t// getActions returns all the flags in a single SQL query\n\t\tif ($this->Auth->user()) {\n\t\t\t$versionArray = $this->{$this->modelClass}->checkMISPVersion();\n\t\t\t$this->mispVersionFull = implode('.', array_values($versionArray));\n\t\t\t$this->set('mispVersion', implode('.', array($versionArray['major'], $versionArray['minor'], 0)));\n\t\t\t$this->set('mispVersionFull', $this->mispVersionFull);\n\t\t\t$role = $this->getActions();\n\t\t\t$this->set('me', $this->Auth->user());\n\t\t\t$this->set('isAdmin', $role['perm_admin']);\n\t\t\t$this->set('isSiteAdmin', $role['perm_site_admin']);\n\t\t\t$this->set('isAclAdd', $role['perm_add']);\n\t\t\t$this->set('isAclModify', $role['perm_modify']);\n\t\t\t$this->set('isAclModifyOrg', $role['perm_modify_org']);\n\t\t\t$this->set('isAclPublish', $role['perm_publish']);\n\t\t\t$this->set('isAclDelegate', $role['perm_delegate']);\n\t\t\t$this->set('isAclSync', $role['perm_sync']);\n\t\t\t$this->set('isAclAdmin', $role['perm_admin']);\n\t\t\t$this->set('isAclAudit', $role['perm_audit']);\n\t\t\t$this->set('isAclAuth', $role['perm_auth']);\n\t\t\t$this->set('isAclRegexp', $role['perm_regexp_access']);\n\t\t\t$this->set('isAclTagger', $role['perm_tagger']);\n\t\t\t$this->set('isAclTagEditor', $role['perm_tag_editor']);\n\t\t\t$this->set('isAclTemplate', $role['perm_template']);\n\t\t\t$this->set('isAclSharingGroup', $role['perm_sharing_group']);\n\t\t\t$this->set('isAclSighting', isset($role['perm_sighting']) ? $role['perm_sighting'] : false);\n\t\t\t$this->userRole = $role;\n\t\t} else {\n\t\t\t$this->set('me', false);\n\t\t}\n\t\tif ($this->_isSiteAdmin()) {\n\t\t\tif (Configure::read('Session.defaults') == 'database') {\n\t\t\t\t$db = ConnectionManager::getDataSource('default');\n\t\t\t\t$sqlResult = $db->query('SELECT COUNT(id) AS session_count FROM cake_sessions WHERE expires < ' . time() . ';');\n\t\t\t\tif (isset($sqlResult[0][0]['session_count']) && $sqlResult[0][0]['session_count'] > 1000) {\n\t\t\t\t\t$this->loadModel('Server');\n\t\t\t\t\t$this->Server->updateDatabase('cleanSessionTable');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Configure::read('site_admin_debug') && (Configure::read('debug') < 2)) {\n\t\t\t\tConfigure::write('debug', 1);\n\t\t\t}\n\t\t}\n\n\t\t$this->debugMode = 'debugOff';\n\t\tif (Configure::read('debug') > 1) $this->debugMode = 'debugOn';\n\t\t$this->set('loggedInUserName', $this->__convertEmailToName($this->Auth->user('email')));\n\t\t$this->set('debugMode', $this->debugMode);\n\t\t$notifications = $this->{$this->modelClass}->populateNotifications($this->Auth->user());\n\t\t$this->set('notifications', $notifications);\n\t\t$this->ACL->checkAccess($this->Auth->user(), Inflector::variable($this->request->params['controller']), $this->action);\n\t}\n\n\tpublic function queryACL($debugType='findMissingFunctionNames', $content = false) {\n\t\t$this->autoRender = false;\n\t\t$this->layout = false;\n\t\t$validCommands = array('printAllFunctionNames', 'findMissingFunctionNames', 'printRoleAccess');\n\t\tif (!in_array($debugType, $validCommands)) throw new MethodNotAllowedException('Invalid function call.');\n\t\t$this->set('data', $this->ACL->$debugType($content));\n\t\t$this->set('flags', JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT);\n\t\t$this->response->type('json');\n\t\t$this->render('/Servers/json/simple');\n\t}\n\n\tprivate function __convertEmailToName($email) {\n\t\t$name = explode('@', $email);\n\t\t$name = explode('.', $name[0]);\n\t\tforeach ($name as $key => $value) $name[$key] = ucfirst($value);\n\t\t$name = implode(' ', $name);\n\t\treturn $name;\n\t}\n\n\tpublic function blackhole($type) {\n\t\tif ($type === 'csrf') throw new BadRequestException(__d('cake_dev', $type));\n\t\tthrow new BadRequestException(__d('cake_dev', 'The request has been black-holed'));\n\t}\n\n\tpublic $userRole = null;\n\n\tprotected function _isJson($data=false) {\n\t\tif ($data) return (json_decode($data) != NULL) ? true : false;\n\t\treturn $this->request->header('Accept') === 'application/json' || $this->RequestHandler->prefers() === 'json';\n\t}\n\n\tprotected function _isRest() {\n\t\t$api = $this->__isApiFunction($this->request->params['controller'], $this->request->params['action']);\n\t\treturn (isset($this->RequestHandler) && ($api || $this->RequestHandler->isXml() || $this->_isJson()));\n\t}\n\n\tprotected function _isAutomation() {\n\t\tforeach ($this->automationArray as $controllerName => $controllerActions) {\n\t\t\tif ($this->params['controller'] == $controllerName && in_array($this->params['action'], $controllerActions)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n/**\n * Convert an array to the same array but with the values also as index instead of an interface_exists\n */\n\tprotected function _arrayToValuesIndexArray($oldArray) {\n\t\t$newArray = Array();\n\t\tforeach ($oldArray as $value)\n\t\t$newArray[$value] = $value;\n\t\treturn $newArray;\n\t}\n\n\t// checks if the currently logged user is an administrator (an admin that can manage the users and events of his own organisation)\n\tprotected function _isAdmin() {\n\t\tif ($this->userRole['perm_site_admin'] || $this->userRole['perm_admin']) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// checks if the currently logged user is a site administrator (an admin that can manage any user or event on the instance and create / edit the roles).\n\tprotected function _isSiteAdmin() {\n\t\treturn $this->userRole['perm_site_admin'];\n\t}\n\n\tprotected function _checkOrg() {\n\t\treturn $this->Auth->user('org_id');\n\t}\n\n\t// pass an action to this method for it to check the active user's access to the action\n\tpublic function checkAction($action = 'perm_sync') {\n\t\t$this->loadModel('Role');\n\t\t$this->Role->recursive = -1;\n\t\t$role = $this->Role->findById($this->Auth->user('role_id'));\n\t\tif ($role['Role'][$action]) return true;\n\t\treturn false;\n\t}\n\n\t// returns the role of the currently authenticated user as an array, used to set the permission variables for views in the AppController's beforeFilter() method\n\tpublic function getActions() {\n\t\t$this->loadModel('Role');\n\t\t$this->Role->recursive = -1;\n\t\t$role = $this->Role->findById($this->Auth->user('role_id'));\n\t\treturn $role['Role'];\n\t}\n\n\tpublic function checkAuthUser($authkey) {\n\t\t$this->loadModel('User');\n\t\t$user = $this->User->getAuthUserByUuid($authkey);\n\t\tif (empty($user)) return false;\n\t\tif (!$user['Role']['perm_auth']) return false;\n\t\tif ($user['Role']['perm_site_admin']) $user['siteadmin'] = true;\n\t\treturn $user;\n\t}\n\n\tpublic function checkExternalAuthUser($authkey) {\n\t\t$this->loadModel('User');\n\t\t$user = $this->User->getAuthUserByExternalAuth($authkey);\n\t\tif (empty($user)) return false;\n\t\tif ($user['Role']['perm_site_admin']) $user['siteadmin'] = true;\n\t\treturn $user;\n\t}\n\n\tpublic function generateCount() {\n\t\tif (!self::_isSiteAdmin() || !$this->request->is('post')) throw new NotFoundException();\n\t\t// do one SQL query with the counts\n\t\t// loop over events, update in db\n\t\t$this->loadModel('Attribute');\n\t\t$events = $this->Attribute->find('all', array(\n\t\t\t'recursive' => -1,\n\t\t\t'fields' => array('event_id', 'count(event_id) as attribute_count'),\n\t\t\t'group' => array('Attribute.event_id'),\n\t\t\t'order' => array('Attribute.event_id ASC'),\n\t\t));\n\t\tforeach ($events as $k => $event) {\n\t\t\t$this->Event->read(null, $event['Attribute']['event_id']);\n\t\t\t$this->Event->set('attribute_count', $event[0]['attribute_count']);\n\t\t\t$this->Event->save();\n\t\t}\n\t\t$this->Session->setFlash(__('All done. attribute_count generated from scratch for ' . (isset($k) ? $k : 'no') . ' events.'));\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function pruneDuplicateUUIDs() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Attribute');\n\t\t$duplicates = $this->Attribute->find('all', array(\n\t\t\t'fields' => array('Attribute.uuid', 'count(*) as occurance'),\n\t\t\t'recursive' => -1,\n\t\t\t'group' => array('Attribute.uuid HAVING COUNT(*) > 1'),\n\t\t));\n\t\t$counter = 0;\n\t\tforeach ($duplicates as $duplicate) {\n\t\t\t$attributes = $this->Attribute->find('all', array(\n\t\t\t\t'recursive' => -1,\n\t\t\t\t'conditions' => array('uuid' => $duplicate['Attribute']['uuid'])\n\t\t\t));\n\t\t\tforeach ($attributes as $k => $attribute) {\n\t\t\t\tif ($k > 0) {\n\t\t\t\t\t$attribute['Attribute']['uuid'] = CakeText::uuid();\n\t\t\t\t\t$this->Attribute->save($attribute);\n\t\t\t\t\t$counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$this->Server->updateDatabase('makeAttributeUUIDsUnique');\n\t\t$this->Session->setFlash('Done. Assigned new UUIDs to ' . $counter . ' attribute(s).');\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function removeDuplicateEvents() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Event');\n\t\t$duplicates = $this->Event->find('all', array(\n\t\t\t\t'fields' => array('Event.uuid', 'count(*) as occurance'),\n\t\t\t\t'recursive' => -1,\n\t\t\t\t'group' => array('Event.uuid HAVING COUNT(*) > 1'),\n\t\t));\n\t\t$counter = 0;\n\n\t\t// load this so we can remove the blacklist item that will be created, this is the one case when we do not want it.\n\t\tif (Configure::read('MISP.enableEventBlacklisting') !== false) $this->EventBlacklist = ClassRegistry::init('EventBlacklist');\n\n\t\tforeach ($duplicates as $duplicate) {\n\t\t\t$events = $this->Event->find('all', array(\n\t\t\t\t\t'recursive' => -1,\n\t\t\t\t\t'conditions' => array('uuid' => $duplicate['Event']['uuid'])\n\t\t\t));\n\t\t\tforeach ($events as $k => $event) {\n\t\t\t\tif ($k > 0) {\n\t\t\t\t\t$uuid = $event['Event']['uuid'];\n\t\t\t\t\t$this->Event->delete($event['Event']['id']);\n\t\t\t\t\t$counter++;\n\t\t\t\t\t// remove the blacklist entry that we just created with the event deletion, if the feature is enabled\n\t\t\t\t\t// We do not want to block the UUID, since we just deleted a copy\n\t\t\t\t\tif (Configure::read('MISP.enableEventBlacklisting') !== false) {\n\t\t\t\t\t\t$this->EventBlacklist->deleteAll(array('EventBlacklist.event_uuid' => $uuid));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$this->Server->updateDatabase('makeEventUUIDsUnique');\n\t\t$this->Session->setFlash('Done. Removed ' . $counter . ' duplicate events.');\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function updateDatabase($command) {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Server');\n\t\t$this->Server->updateDatabase($command);\n\t\t$this->Session->setFlash('Done.');\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function upgrade2324() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Server');\n\t\tif (!Configure::read('MISP.background_jobs')) {\n\t\t\t$this->Server->upgrade2324($this->Auth->user('id'));\n\t\t\t$this->Session->setFlash('Done. For more details check the audit logs.');\n\t\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t\t} else {\n\t\t\t$job = ClassRegistry::init('Job');\n\t\t\t$job->create();\n\t\t\t$data = array(\n\t\t\t\t\t'worker' => 'default',\n\t\t\t\t\t'job_type' => 'upgrade_24',\n\t\t\t\t\t'job_input' => 'Old database',\n\t\t\t\t\t'status' => 0,\n\t\t\t\t\t'retries' => 0,\n\t\t\t\t\t'org_id' => 0,\n\t\t\t\t\t'message' => 'Job created.',\n\t\t\t);\n\t\t\t$job->save($data);\n\t\t\t$jobId = $job->id;\n\t\t\t$process_id = CakeResque::enqueue(\n\t\t\t\t\t'default',\n\t\t\t\t\t'AdminShell',\n\t\t\t\t\tarray('jobUpgrade24', $jobId, $this->Auth->user('id')),\n\t\t\t\t\ttrue\n\t\t\t);\n\t\t\t$job->saveField('process_id', $process_id);\n\t\t\t$this->Session->setFlash(__('Job queued. You can view the progress if you navigate to the active jobs view (administration -> jobs).'));\n\t\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t\t}\n\t}\n\n\tprivate function __preAuthException($message) {\n\t\t$this->set('debugMode', (Configure::read('debug') > 1) ? 'debugOn' : 'debugOff');\n\t\t$this->set('me', array());\n\t\tthrow new ForbiddenException($message);\n\t}\n\n\tprivate function __customAuthentication($server) {\n\t\t$result = false;\n\t\tif (Configure::read('Plugin.CustomAuth_enable')) {\n\t\t\t$header = Configure::read('Plugin.CustomAuth_header') ? Configure::read('Plugin.CustomAuth_header') : 'Authorization';\n\t\t\t$header = strtoupper($header);\n\t\t\t$authName = Configure::read('Plugin.CustomAuth_name') ? Configure::read('Plugin.CustomAuth_name') : 'External authentication';\n\t\t\t$headerNamespace = Configure::read('Plugin.CustomAuth_use_header_namespace') ? (Configure::read('Plugin.CustomAuth_header_namespace') ? Configure::read('Plugin.CustomAuth_header_namespace') : 'HTTP_') : '';\n\t\t\tif (isset($server[$headerNamespace . $header]) && !empty($server[$headerNamespace . $header])) {\n\t\t\t\tif (Configure::read('Plugin.CustomAuth_only_allow_source') && Configure::read('Plugin.CustomAuth_only_allow_source') !== $server['REMOTE_ADDR']) {\n\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t'org' => 'SYSTEM',\n\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t'model_id' => 0,\n\t\t\t\t\t\t\t'email' => 'SYSTEM',\n\t\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t\t'title' => 'Failed authentication using external key (' . trim($server[$headerNamespace . $header]) . ') - the user has not arrived from the expected address. Instead the request came from: ' . $server['REMOTE_ADDR'],\n\t\t\t\t\t\t\t'change' => null,\n\t\t\t\t\t);\n\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t$this->__preAuthException($authName . ' authentication failed. Contact your MISP support for additional information at: ' . Configure::read('MISP.contact'));\n\t\t\t\t}\n\t\t\t\t$temp = $this->checkExternalAuthUser($server[$headerNamespace . $header]);\n\t\t\t\t$user['User'] = $temp;\n\t\t\t\tif ($user['User']) {\n\t\t\t\t\tunset($user['User']['gpgkey']);\n\t\t\t\t\tunset($user['User']['certif_public']);\n\t\t\t\t\t$this->Session->renew();\n\t\t\t\t\t$this->Session->write(AuthComponent::$sessionKey, $user['User']);\n\t\t\t\t\tif (Configure::read('MISP.log_auth')) {\n\t\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t'org' => $user['User']['Organisation']['name'],\n\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t'model_id' => $user['User']['id'],\n\t\t\t\t\t\t\t'email' => $user['User']['email'],\n\t\t\t\t\t\t\t'action' => 'auth',\n\t\t\t\t\t\t\t'title' => 'Successful authentication using ' . $authName . ' key',\n\t\t\t\t\t\t\t'change' => 'HTTP method: ' . $_SERVER['REQUEST_METHOD'] . PHP_EOL . 'Target: ' . $this->here,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t}\n\t\t\t\t\t$result = true;\n\t\t\t\t} else {\n\t\t\t\t\t// User not authenticated correctly\n\t\t\t\t\t// reset the session information\n\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t'org' => 'SYSTEM',\n\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t'model_id' => 0,\n\t\t\t\t\t\t\t'email' => 'SYSTEM',\n\t\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t\t'title' => 'Failed authentication using external key (' . trim($server[$headerNamespace . $header]) . ')',\n\t\t\t\t\t\t\t'change' => null,\n\t\t\t\t\t);\n\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\tif (Configure::read('CustomAuth_required')) {\n\t\t\t\t\t\t$this->Session->destroy();\n\t\t\t\t\t\t$this->__preAuthException($authName . ' authentication failed. Contact your MISP support for additional information at: ' . Configure::read('MISP.contact'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $result;\n\t}\n\n\tpublic function cleanModelCaches() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Server');\n\t\t$this->Server->cleanCacheFiles();\n\t\t$this->Session->setFlash('Caches cleared.');\n\t\t$this->redirect(array('controller' => 'servers', 'action' => 'serverSettings', 'diagnostics'));\n\t}\n}\n", "String.prototype.ucfirst = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1);\n}\n\nfunction deleteObject(type, action, id, event) {\n\tvar destination = 'attributes';\n\tvar alternateDestinations = ['shadow_attributes', 'template_elements', 'taxonomies', 'objects', 'object_references'];\n\tif (alternateDestinations.indexOf(type) > -1) destination = type;\n\telse destination = type;\n\turl = \"/\" + destination + \"/\" + action + \"/\" + id;\n\t$.get(url, function(data) {\n\t\topenPopup(\"#confirmation_box\");\n\t\t$(\"#confirmation_box\").html(data);\n\t});\n}\n\nfunction quickDeleteSighting(id, rawId, context) {\n\turl = \"/sightings/quickDelete/\" + id + \"/\" + rawId + \"/\" + context;\n\t$.get(url, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction publishPopup(id, type) {\n\tvar action = \"alert\";\n\tif (type == \"publish\") action = \"publish\";\n\tvar destination = 'attributes';\n\t$.get( \"/events/\" + action + \"/\" + id, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction delegatePopup(id) {\n\tsimplePopup(\"/event_delegations/delegateEvent/\" + id);\n}\n\nfunction genericPopup(url, popupTarget) {\n\t$.get(url, function(data) {\n\t\t$(popupTarget).html(data);\n\t\t$(popupTarget).fadeIn();\n\t\tleft = ($(window).width() / 2) - ($(popupTarget).width() / 2);\n\t\t$(popupTarget).css({'left': left + 'px'});\n\t\t$(\"#gray_out\").fadeIn();\n\t});\n}\n\nfunction screenshotPopup(screenshotData, title) {\n\tpopupHtml = '<img src=\"' + screenshotData + '\" id=\"screenshot-image\" title=\"' + title + '\" />';\n\tpopupHtml += '<div class=\"close-icon useCursorPointer\" onClick=\"closeScreenshot();\"></div>';\n\t$('#screenshot_box').html(popupHtml);\n\t$('#screenshot_box').show();\n\tleft = ($(window).width() / 2) - ($('#screenshot-image').width() / 2);\n\t$('#screenshot_box').css({'left': left + 'px'});\n\t$(\"#gray_out\").fadeIn();\n}\n\nfunction submitPublish(id, type) {\n\t$(\"#PromptForm\").submit();\n}\n\nfunction editTemplateElement(type, id) {\n\tsimplePopup(\"/template_elements/edit/\" + type + \"/\" + id);\n}\n\nfunction cancelPrompt(isolated) {\n\tif (isolated == undefined) {\n\t\t$(\"#gray_out\").fadeOut();\n\t}\n\t$(\"#confirmation_box\").fadeOut();\n\t$(\"#confirmation_box\").empty();\n}\n\nfunction submitDeletion(context_id, action, type, id) {\n\tvar context = 'event';\n\tif (type == 'template_elements') context = 'template';\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tupdateIndex(context_id, context);\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/\" + type + \"/\" + action + \"/\" + id,\n\t});\n}\n\nfunction removeSighting(caller) {\n\tvar id = $(caller).data('id');\n\tvar rawid = $(caller).data('rawid');\n\tvar context = $(caller).data('context');\n\tif (context != 'attribute') {\n\t\tcontext = 'event';\n\t}\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t\tvar org = \"/\" + $('#org_id').text();\n\t\t\tupdateIndex(id, 'event');\n\t\t\t$.get( \"/sightings/listSightings/\" + rawid + \"/\" + context + org, function(data) {\n\t\t\t\t$(\"#sightingsData\").html(data);\n\t\t\t});\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/sightings/quickDelete/\" + id + \"/\" + rawid + \"/\" + context,\n\t});\n}\n\nfunction toggleSetting(e, setting, id) {\n\te.preventDefault();\n\te.stopPropagation();\n\tswitch (setting) {\n\tcase 'warninglist_enable':\n\t\tformID = '#WarninglistIndexForm';\n\t\tdataDiv = '#WarninglistData';\n\t\treplacementForm = '/warninglists/getToggleField/';\n\t\tsearchString = 'enabled';\n\t\tbreak;\n\tcase 'favourite_tag':\n\t\tformID = '#FavouriteTagIndexForm';\n\t\tdataDiv = '#FavouriteTagData';\n\t\treplacementForm = '/favourite_tags/getToggleField/';\n\t\tsearchString = 'Adding';\n\t\tbreak;\n\tcase 'activate_object_template':\n\t\tformID = '#ObjectTemplateIndexForm';\n\t\tdataDiv = '#ObjectTemplateData';\n\t\treplacementForm = '/ObjectTemplates/getToggleField/';\n\t\tsearchString = 'activated';\n\t\tbreak;\n\t}\n\t$(dataDiv).val(id);\n\tvar formData = $(formID).serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tvar result = data;\n\t\t\tif (result.success) {\n\t\t\t\tvar setting = false;\n\t\t\t\tif (result.success.indexOf(searchString) > -1) setting = true;\n\t\t\t\t$('#checkBox_' + id).prop('checked', setting);\n\t\t\t}\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$.get(replacementForm, function(data) {\n\t\t\t\t$('#hiddenFormDiv').html(data);\n\t\t\t});\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\terror:function() {\n\t\t\thandleGenericAjaxResponse({'saved':false, 'errors':['Request failed due to an unexpected error.']});\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl: $(formID).attr('action'),\n\t});\n}\n\nfunction initiatePasswordReset(id) {\n\t$.get( \"/users/initiatePasswordReset/\" + id, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction submitPasswordReset(id) {\n\tvar formData = $('#PromptForm').serialize();\n\tvar url = \"/users/initiatePasswordReset/\" + id;\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:url,\n\t});\n}\n\nfunction submitMessageForm(url, form, target) {\n\tif (!$('#PostMessage').val()) {\n\t\tshowMessage(\"fail\", \"Cannot submit empty message.\");\n\t} else {\n\t\tsubmitGenericForm(url, form, target);\n\t}\n}\n\nfunction submitGenericForm(url, form, target) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: $('#' + form).serialize(),\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$('#top').html(data);\n\t\t\tshowMessage(\"success\", \"Message added.\");\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:url,\n\t});\n}\n\nfunction acceptObject(type, id, event) {\n\tname = '#ShadowAttribute_' + id + '_accept';\n\tvar formData = $(name).serialize();\n\t$.ajax({\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tupdateIndex(event, 'event');\n\t\t\teventUnpublish();\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/shadow_attributes/accept/\" + id,\n\t});\n}\n\nfunction toggleCorrelation(id) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: $('#PromptForm').serialize(),\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t\t$(\"#correlation_toggle_\" + id).prop('checked', !$(\"#correlation_toggle_\" + id).is(':checked'));\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:'/attributes/toggleCorrelation/' + id,\n\t});\n}\n\nfunction eventUnpublish() {\n\t$('.publishButtons').show();\n\t$('.exportButtons').hide();\n\t$('.published').hide();\n\t$('.notPublished').show();\n}\n\nfunction updateIndex(id, context, newPage) {\n\tif (typeof newPage !== 'undefined') page = newPage;\n\tvar url, div;\n\tif (context == 'event') {\n\t\turl = currentUri;\n\t\tdiv = \"#attributes_div\";\n\t}\n\tif (context == 'template') {\n\t\turl = \"/template_elements/index/\" + id;\n\t\tdiv = \"#templateElements\";\n\t}\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(div).html(data);\n\t\t},\n\t\turl: url,\n\t});\n}\n\nfunction updateAttributeFieldOnSuccess(name, type, id, field, event) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\tif (field != 'timestamp') {\n\t\t\t\t$(\".loading\").show();\n\t\t\t}\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tif (field != 'timestamp') {\n\t\t\t\t$(\".loading\").hide();\n\t\t\t\t$(name + '_solid').html(data);\n\t\t\t\t$(name + '_placeholder').empty();\n\t\t\t\t$(name + '_solid').show();\n\t\t\t} else {\n\t\t\t\t$('#' + type + '_' + id + '_' + 'timestamp_solid').html(data);\n\t\t\t}\n\t\t},\n\t\turl:\"/attributes/fetchViewValue/\" + id + \"/\" + field,\n\t});\n}\n\nfunction activateField(type, id, field, event) {\n\tresetForms();\n\tif (type == 'denyForm') return;\n\tvar objectType = 'attributes';\n\tif (type == 'ShadowAttribute') {\n\t\tobjectType = 'shadow_attributes';\n\t}\n\tvar name = '#' + type + '_' + id + '_' + field;\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(name + '_placeholder').html(data);\n\t\t\tpostActivationScripts(name, type, id, field, event);\n\t\t},\n\t\turl:\"/\" + objectType + \"/fetchEditForm/\" + id + \"/\" + field,\n\t});\n}\n\nfunction submitQuickTag(form) {\n\t$('#' + form).submit();\n}\n\n//if someone clicks an inactive field, replace it with the hidden form field. Also, focus it and bind a focusout event, so that it gets saved if the user clicks away.\n//If a user presses enter, submit the form\nfunction postActivationScripts(name, type, id, field, event) {\n\t$(name + '_field').focus();\n\tinputFieldButtonActive(name + '_field');\n\tif (field == 'value' || field == 'comment') {\n\t\tautoresize($(name + '_field')[0]);\n\t\t$(name + '_field').on('keyup', function () {\n\t\t    autoresize(this);\n\t\t});\n\t}\n\t$(name + '_form').submit(function(e){\n\t\te.preventDefault();\n\t\tsubmitForm(type, id, field, event);\n\t\treturn false;\n\t});\n\n\t$(name + '_form').bind(\"focusout\", function() {\n\t\tinputFieldButtonPassive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"focusin\", function(){\n\t\tinputFieldButtonActive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"keydown\", function(e) {\n\t\tif (e.ctrlKey && (e.keyCode == 13 || e.keyCode == 10)) {\n\t\t\tsubmitForm(type, id, field, event);\n\t\t}\n\t});\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-accept').bind('click', function() {\n\t\tsubmitForm(type, id, field, event);\n\t});\n\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-decline').bind('click', function() {\n\t\tresetForms();\n\t});\n\n\t$(name + '_solid').hide();\n}\n\nfunction addSighting(type, attribute_id, event_id, page) {\n\t$('#Sighting_' + attribute_id + '_type').val(type);\n\t$.ajax({\n\t\tdata: $('#Sighting_' + attribute_id).closest(\"form\").serialize(),\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t\tvar result = data;\n\t\t\tif (result.saved == true) {\n\t\t\t\t$('.sightingsCounter').each(function( counter ) {\n\t\t\t\t\t$(this).html(parseInt($(this).html()) + 1);\n\t\t\t\t});\n\t\t\t\tupdateIndex(event_id, 'event');\n\t\t\t}\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Request failed for an unknown reason.');\n\t\t\tupdateIndex(context, 'event');\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/sightings/add/\" + attribute_id\n\t});\n}\n\nfunction resetForms() {\n\t$('.inline-field-solid').show();\n\t$('.inline-field-placeholder').empty();\n}\n\nfunction inputFieldButtonActive(selector) {\n\t$(selector).closest('.inline-input-container').children('.inline-input-accept').removeClass('inline-input-passive').addClass('inline-input-active');\n\t$(selector).closest('.inline-input-container').children('.inline-input-decline').removeClass('inline-input-passive').addClass('inline-input-active');\n}\n\nfunction inputFieldButtonPassive(selector) {\n\t$(selector).closest('.inline-input-container').children('.inline-input-accept').addClass('inline-input-passive').removeClass('inline-input-active');\n\t$(selector).closest('.inline-input-container').children('.inline-input-daecline').addClass('inline-input-passive').removeClass('inline-input-active');\n}\n\nfunction autoresize(textarea) {\n    textarea.style.height = '20px';\n    textarea.style.height = (textarea.scrollHeight) + 'px';\n}\n\n// submit the form - this can be triggered by unfocusing the activated form field or by submitting the form (hitting enter)\n// after the form is submitted, intercept the response and act on it\nfunction submitForm(type, id, field, context) {\n\tvar object_type = 'attributes';\n\tvar action = \"editField\";\n\tvar name = '#' + type + '_' + id + '_' + field;\n\tif (type == 'ShadowAttribute') {\n\t\tobject_type = 'shadow_attributes';\n\t}\n\t$.ajax({\n\t\tdata: $(name + '_field').closest(\"form\").serialize(),\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleAjaxEditResponse(data, name, type, id, field, context);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Request failed for an unknown reason.');\n\t\t\tupdateIndex(context, 'event');\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/\" + object_type + \"/\" + action + \"/\" + id\n\t});\n\t$(name + '_field').unbind(\"keyup\");\n\t$(name + '_form').unbind(\"focusout\");\n\treturn false;\n};\n\nfunction quickSubmitTagForm(event_id, tag_id) {\n\t$('#EventTag').val(tag_id);\n\t$.ajax({\n\t\tdata: $('#EventSelectTagForm').closest(\"form\").serialize(),\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tloadEventTags(event_id);\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Could not add tag.');\n\t\t\tloadEventTags(event_id);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\"#popover_form\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/events/addTag/\" + event_id\n\t});\n\treturn false;\n}\n\nfunction quickSubmitAttributeTagForm(attribute_id, tag_id) {\n\t$('#AttributeTag').val(tag_id);\n\tif (attribute_id == 'selected') {\n\t\t$('#AttributeAttributeIds').val(getSelected());\n\t}\n\t$.ajax({\n\t\tdata: $('#AttributeSelectTagForm').closest(\"form\").serialize(),\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tif (attribute_id == 'selected') {\n\t\t\t\tupdateIndex(0, 'event');\n\t\t\t} else {\n\t\t\t\tloadAttributeTags(attribute_id);\n\t\t\t}\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Could not add tag.');\n\t\t\tloadAttributeTags(attribute_id);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\"#popover_form\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/attributes/addTag/\" + attribute_id\n\t});\n\treturn false;\n}\n\nfunction handleAjaxEditResponse(data, name, type, id, field, event) {\n\tresponseArray = data;\n\tif (type == 'Attribute') {\n\t\tif (responseArray.saved) {\n\t\t\tshowMessage('success', responseArray.success);\n\t\t\tupdateAttributeFieldOnSuccess(name, type, id, field, event);\n\t\t\tupdateAttributeFieldOnSuccess(name, type, id, 'timestamp', event);\n\t\t\teventUnpublish();\n\t\t} else {\n\t\t\tshowMessage('fail', 'Validation failed: ' + responseArray.errors.value);\n\t\t\tupdateAttributeFieldOnSuccess(name, type, id, field, event);\n\t\t}\n\t}\n\tif (type == 'ShadowAttribute') {\n\t\tupdateIndex(event, 'event');\n\t}\n\tif (responseArray.hasOwnProperty('check_publish')) {\n\t\tcheckAndSetPublishedInfo();\n\t}\n}\n\nfunction handleGenericAjaxResponse(data) {\n\tif (typeof data == 'string') {\n\t\tresponseArray = JSON.parse(data);\n\t} else {\n\t\tresponseArray = data;\n\t}\n\tif (responseArray.saved) {\n\t\tshowMessage('success', responseArray.success);\n\t\tif (responseArray.hasOwnProperty('check_publish')) {\n\t\t\tcheckAndSetPublishedInfo();\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tshowMessage('fail', responseArray.errors);\n\t\treturn false;\n\t}\n}\n\nfunction toggleAllAttributeCheckboxes() {\n\tif ($(\".select_all\").is(\":checked\")) {\n\t\t$(\".select_attribute\").prop(\"checked\", true);\n\t\t$(\".select_proposal\").prop(\"checked\", true);\n\t} else {\n\t\t$(\".select_attribute\").prop(\"checked\", false);\n\t\t$(\".select_proposal\").prop(\"checked\", false);\n\t}\n}\n\nfunction toggleAllCheckboxes() {\n\tif ($(\".select_all\").is(\":checked\")) {\n\t\t$(\".select\").prop(\"checked\", true);\n\t} else {\n\t\t$(\".select\").prop(\"checked\", false);\n\t}\n}\n\nfunction toggleAllTaxonomyCheckboxes() {\n\tif ($(\".select_all\").is(\":checked\")) {\n\t\t$(\".select_taxonomy\").prop(\"checked\", true);\n\t} else {\n\t\t$(\".select_taxonomy\").prop(\"checked\", false);\n\t}\n}\n\nfunction attributeListAnyAttributeCheckBoxesChecked() {\n\tif ($('.select_attribute:checked').length > 0) $('.mass-select').removeClass('hidden');\n\telse $('.mass-select').addClass('hidden');\n}\n\nfunction eventListCheckboxesChecked() {\n\tif ($('.select:checked').length > 0) $('.mass-select').removeClass('hidden');\n\telse $('.mass-select').addClass('hidden');\n}\n\nfunction attributeListAnyProposalCheckBoxesChecked() {\n\tif ($('.select_proposal:checked').length > 0) $('.mass-proposal-select').removeClass('hidden');\n\telse $('.mass-proposal-select').addClass('hidden');\n}\n\nfunction taxonomyListAnyCheckBoxesChecked() {\n\tif ($('.select_taxonomy:checked').length > 0) $('.mass-select').show();\n\telse $('.mass-select').hide();\n}\n\nfunction multiSelectDeleteEvents() {\n\tvar selected = [];\n\t$(\".select\").each(function() {\n\t\tif ($(this).is(\":checked\")) {\n\t\t\tvar temp = $(this).data(\"id\");\n\t\t\tif (temp != null) {\n\t\t\t\tselected.push(temp);\n\t\t\t}\n\t\t}\n\t});\n\t$.get(\"/events/delete/\" + JSON.stringify(selected), function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction multiSelectAction(event, context) {\n\tvar settings = {\n\t\t\tdeleteAttributes: {\n\t\t\t\tconfirmation: \"Are you sure you want to delete all selected attributes?\",\n\t\t\t\tcontroller: \"attributes\",\n\t\t\t\tcamelCase: \"Attribute\",\n\t\t\t\talias: \"attribute\",\n\t\t\t\taction: \"delete\",\n\t\t\t},\n\t\t\tacceptProposals: {\n\t\t\t\tconfirmation: \"Are you sure you want to accept all selected proposals?\",\n\t\t\t\tcontroller: \"shadow_attributes\",\n\t\t\t\tcamelCase: \"ShadowAttribute\",\n\t\t\t\talias: \"proposal\",\n\t\t\t\taction: \"accept\",\n\t\t\t},\n\t\t\tdiscardProposals: {\n\t\t\t\tconfirmation: \"Are you sure you want to discard all selected proposals?\",\n\t\t\t\tcontroller: \"shadow_attributes\",\n\t\t\t\tcamelCase: \"ShadowAttribute\",\n\t\t\t\talias: \"proposal\",\n\t\t\t\taction: \"discard\",\n\t\t\t},\n\t};\n\tvar answer = confirm(\"Are you sure you want to \" + settings[context][\"action\"] + \" all selected \" + settings[context][\"alias\"] + \"s?\");\n\tif (answer) {\n\t\tvar selected = [];\n\t\t$(\".select_\" + settings[context][\"alias\"]).each(function() {\n\t\t\tif ($(this).is(\":checked\")) {\n\t\t\t\tvar temp= $(this).data(\"id\");\n\t\t\t\tselected.push(temp);\n\t\t\t}\n\t\t});\n\t\t$('#' + settings[context][\"camelCase\"] + 'Ids' + settings[context][\"action\"].ucfirst()).attr('value', JSON.stringify(selected));\n\t\tvar formData = $('#' + settings[context][\"action\"] + '_selected').serialize();\n\t\t$.ajax({\n\t\t\tdata: formData,\n\t\t\tcache: false,\n\t\t\ttype:\"POST\",\n\t\t\turl:\"/\" + settings[context][\"controller\"] + \"/\" + settings[context][\"action\"] + \"Selected/\" + event,\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\tupdateIndex(event, 'event');\n\t\t\t\tvar result = handleGenericAjaxResponse(data);\n\t\t\t\tif (settings[context][\"action\"] != \"discard\" && result == true) eventUnpublish();\n\t\t\t},\n\t\t});\n\t}\n\treturn false;\n}\n\nfunction editSelectedAttributes(event) {\n\tsimplePopup(\"/attributes/editSelected/\" + event);\n}\n\nfunction addSelectedTaxonomies(taxonomy) {\n\t$.get(\"/taxonomies/taxonomyMassConfirmation/\"+taxonomy, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction submitMassTaxonomyTag() {\n\t$('#PromptForm').submit();\n}\n\nfunction submitMassEventDelete() {\n\t$('#PromptForm').trigger('submit');\n\tevent.preventDefault();\n}\n\nfunction getSelected() {\n\tvar selected = [];\n\t$(\".select_attribute\").each(function() {\n\t\tif ($(this).is(\":checked\")) {\n\t\t\tvar test = $(this).data(\"id\");\n\t\t\tselected.push(test);\n\t\t}\n\t});\n\treturn JSON.stringify(selected);\n}\n\nfunction getSelectedTaxonomyNames() {\n\tvar selected = [];\n\t$(\".select_taxonomy\").each(function() {\n\t\tif ($(this).is(\":checked\")) {\n\t\t\tvar row = $(this).data(\"id\");\n\t\t\tvar temp = $('#tag_' + row).html();\n\t\t\ttemp = $(\"<div/>\").html(temp).text();\n\t\t\tselected.push(temp);\n\t\t}\n\t});\n\t$('#TaxonomyNameList').val(JSON.stringify(selected));\n}\n\nfunction loadEventTags(id) {\n\t$.ajax({\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".eventTagContainer\").html(data);\n\t\t},\n\t\turl:\"/tags/showEventTag/\" + id,\n\t});\n}\n\nfunction removeEventTag(event, tag) {\n\tvar answer = confirm(\"Are you sure you want to remove this tag from the event?\");\n\tif (answer) {\n\t\tvar formData = $('#removeTag_' + tag).serialize();\n\t\t$.ajax({\n\t\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t\t$(\".loading\").show();\n\t\t\t},\n\t\t\tdata: formData,\n\t\t\ttype:\"POST\",\n\t\t\tcache: false,\n\t\t\turl:\"/events/removeTag/\" + event + '/' + tag,\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\tloadEventTags(event);\n\t\t\t\thandleGenericAjaxResponse(data);\n\t\t\t},\n\t\t\tcomplete:function() {\n\t\t\t\t$(\".loading\").hide();\n\t\t\t}\n\t\t});\n\t}\n\treturn false;\n}\n\nfunction loadAttributeTags(id) {\n\t$.ajax({\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\"#Attribute_\"+id+\"_tr .attributeTagContainer\").html(data);\n\t\t},\n\t\turl:\"/tags/showAttributeTag/\" + id\n\t});\n}\n\nfunction removeObjectTagPopup(context, object, tag) {\n\t$.get( \"/\" + context + \"s/removeTag/\" + object + '/' + tag, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction removeObjectTag(context, object, tag) {\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\ttype:\"POST\",\n\t\tcache: false,\n\t\turl:\"/\" + context.toLowerCase() + \"s/removeTag/\" + object + '/' + tag,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\tif (context == 'Attribute') {\n\t\t\t\tloadAttributeTags(object);\n\t\t\t} else {\n\t\t\t\tloadEventTags(object);\n\t\t\t}\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t}\n\t});\n\treturn false;\n}\n\nfunction clickCreateButton(event, type) {\n\tvar destination = 'attributes';\n\tif (type == 'Proposal') destination = 'shadow_attributes';\n\tsimplePopup(\"/\" + destination + \"/add/\" + event);\n}\n\nfunction submitPopoverForm(context_id, referer, update_context_id) {\n\tvar url = null;\n\tvar context = 'event';\n\tvar contextNamingConvention = 'Attribute';\n\tvar closePopover = true;\n\tswitch (referer) {\n\t\tcase 'add':\n\t\t\turl = \"/attributes/add/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'propose':\n\t\t\turl = \"/shadow_attributes/add/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'massEdit':\n\t\t\turl = \"/attributes/editSelected/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'addTextElement':\n\t\t\turl = \"/templateElements/add/text/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontextNamingConvention = 'TemplateElementText';\n\t\t\tbreak;\n\t\tcase 'editTextElement':\n\t\t\turl = \"/templateElements/edit/text/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontext_id = update_context_id;\n\t\t\tcontextNamingConvention = 'TemplateElementText';\n\t\t\tbreak;\n\t\tcase 'addAttributeElement':\n\t\t\turl = \"/templateElements/add/attribute/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontextNamingConvention = 'TemplateElementAttribute';\n\t\t\tbreak;\n\t\tcase 'editAttributeElement':\n\t\t\turl = \"/templateElements/edit/attribute/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontext_id = update_context_id;\n\t\t\tcontextNamingConvention = 'TemplateElementAttribute';\n\t\t\tbreak;\n\t\tcase 'addFileElement':\n\t\t\turl = \"/templateElements/add/file/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontextNamingConvention = 'TemplateElementFile';\n\t\t\tbreak;\n\t\tcase 'editFileElement':\n\t\t\turl = \"/templateElements/edit/file/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontext_id = update_context_id;\n\t\t\tcontextNamingConvention = 'TemplateElementFile';\n\t\t\tbreak;\n\t\tcase 'replaceAttributes':\n\t\t\turl = \"/attributes/attributeReplace/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'addSighting':\n\t\t\turl = \"/sightings/add/\" + context_id;\n\t\t\tclosePopover = false;\n\t\t\tbreak;\n\t\tcase 'addObjectReference':\n\t\t\turl = \"/objectReferences/add/\" + context_id;\n\t\t\tbreak;\n\t}\n\tif (url !== null) {\n\t\t$.ajax({\n\t\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t\t$(\".loading\").show();\n\t\t\t\tif (closePopover) {\n\t\t\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\t\t\t$(\"#popover_form\").fadeOut();\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: $(\"#submitButton\").closest(\"form\").serialize(),\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\tif (closePopover) {\n\t\t\t\t\tvar result = handleAjaxPopoverResponse(data, context_id, url, referer, context, contextNamingConvention);\n\t\t\t\t}\n\t\t\t\tif (referer == 'addSighting') {\n\t\t\t\t\tupdateIndex(update_context_id, 'event');\n\t\t\t\t\t$.get( \"/sightings/listSightings/\" + id + \"/attribute\", function(data) {\n\t\t\t\t\t\t$(\"#sightingsData\").html(data);\n\t\t\t\t\t});\n\t\t\t\t\t$('.sightingsToggle').removeClass('btn-primary');\n\t\t\t\t\t$('.sightingsToggle').addClass('btn-inverse');\n\t\t\t\t\t$('#sightingsListAllToggle').removeClass('btn-inverse');\n\t\t\t\t\t$('#sightingsListAllToggle').addClass('btn-primary');\n\t\t\t\t}\n\t\t\t\tif (context == 'event' && (referer == 'add' || referer == 'massEdit' || referer == 'replaceAttributes' || referer == 'addObjectReference')) eventUnpublish();\n\t\t\t\t$(\".loading\").hide();\n\t\t\t},\n\t\t\ttype:\"post\",\n\t\t\turl:url\n\t\t});\n\t}\n\treturn false;\n};\n\nfunction handleAjaxPopoverResponse(response, context_id, url, referer, context, contextNamingConvention) {\n\tresponseArray = response;\n\tvar message = null;\n\tif (responseArray.saved) {\n\t\tupdateIndex(context_id, context);\n\t\tif (responseArray.success) {\n\t\t\tshowMessage(\"success\", responseArray.success);\n\t\t}\n\t\tif (responseArray.errors) {\n\t\t\tshowMessage(\"fail\", responseArray.errors);\n\t\t}\n\t} else {\n\t\tvar savedArray = saveValuesForPersistance();\n\t\t$.ajax({\n\t\t\tasync:true,\n\t\t\tdataType:\"html\",\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\t$(\"#popover_form\").html(data);\n\t\t\t\topenPopup(\"#popover_form\");\n\t\t\t\tvar error_context = context.charAt(0).toUpperCase() + context.slice(1);\n\t\t\t\thandleValidationErrors(responseArray.errors, context, contextNamingConvention);\n\t\t\t\tif (!$.isEmptyObject(responseArray)) {\n\t\t\t\t\t$(\"#formWarning\").show();\n\t\t\t\t\t$(\"#formWarning\").html('The object(s) could not be saved. Please, try again.');\n\t\t\t\t}\n\t\t\t\trecoverValuesFromPersistance(savedArray);\n\t\t\t\t$(\".loading\").hide();\n\t\t\t},\n\t\t\turl:url\n\t\t});\n\t}\n}\n\n//before we update the form (in case the action failed), we want to retrieve the data from every field, so that we can set the fields in the new form that we fetch\nfunction saveValuesForPersistance() {\n\tvar formPersistanceArray = new Array();\n\tfor (i = 0; i < fieldsArray.length; i++) {\n\t\tformPersistanceArray[fieldsArray[i]] = $('#' + fieldsArray[i]).val();\n\t}\n\treturn formPersistanceArray;\n}\n\nfunction recoverValuesFromPersistance(formPersistanceArray) {\n\tfor (i = 0; i < fieldsArray.length; i++) {\n\t\t$('#' + fieldsArray[i]).val(formPersistanceArray[fieldsArray[i]]);\n\t}\n}\n\nfunction handleValidationErrors(responseArray, context, contextNamingConvention) {\n\tfor (var k in responseArray) {\n\t\tvar elementName = k.charAt(0).toUpperCase() + k.slice(1);\n\t\t$(\"#\" + contextNamingConvention + elementName).parent().addClass(\"error\");\n\t\t$(\"#\" + contextNamingConvention + elementName).parent().append(\"<div class=\\\"error-message\\\">\" + responseArray[k] + \"</div>\");\n\t}\n}\n\nfunction toggleHistogramType(type, old) {\n\tvar done = false;\n\told.forEach(function(entry) {\n\t\tif (type == entry) {\n\t\t\tdone = true;\n\t\t\told.splice(old.indexOf(entry), 1);\n\t\t}\n\t});\n\tif (done == false) old.push(type);\n\tupdateHistogram(JSON.stringify(old));\n}\n\nfunction updateHistogram(selected) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#histogram\").html(data);\n\t\t},\n\t\turl:\"/users/histogram/\" + selected,\n\t});\n}\n\nfunction showMessage(success, message, context) {\n\tif (typeof context !== \"undefined\") {\n\t\t$(\"#ajax_\" + success, window.parent.document).html(message);\n\t\tvar duration = 1000 + (message.length * 40);\n\t\t$(\"#ajax_\" + success + \"_container\", window.parent.document).fadeIn(\"slow\");\n\t\t$(\"#ajax_\" + success + \"_container\", window.parent.document).delay(duration).fadeOut(\"slow\");\n\t}\n\t$(\"#ajax_\" + success).html(message);\n\tvar duration = 1000 + (message.length * 40);\n\t$(\"#ajax_\" + success + \"_container\").fadeIn(\"slow\");\n\t$(\"#ajax_\" + success + \"_container\").delay(duration).fadeOut(\"slow\");\n}\n\nfunction cancelPopoverForm() {\n\t$(\"#gray_out\").fadeOut();\n\t$(\"#popover_form\").fadeOut();\n\t$(\"#screenshot_box\").fadeOut();\n\t$(\"#confirmation_box\").fadeOut();\n\t$('#gray_out').fadeOut();\n\t$('#popover_form').fadeOut();\n}\n\nfunction activateTagField() {\n\t$(\"#addTagButton\").hide();\n\t$(\"#addTagField\").show();\n}\n\nfunction tagFieldChange() {\n\tif ($(\"#addTagField :selected\").val() > 0) {\n\t\tvar selected_id = $(\"#addTagField :selected\").val();\n\t\tvar selected_text = $(\"#addTagField :selected\").text();\n\t\tif ($.inArray(selected_id, selectedTags)==-1) {\n\t\t\tselectedTags.push(selected_id);\n\t\t\tappendTemplateTag(selected_id);\n\t\t}\n\t}\n\t$(\"#addTagButton\").show();\n\t$(\"#addTagField\").hide();\n}\n\nfunction appendTemplateTag(selected_id) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#tags\").append(data);\n\t\t},\n\t\turl:\"/tags/viewTag/\" + selected_id,\n\t});\n\tupdateSelectedTags();\n}\n\nfunction addAllTags(tagArray) {\n\tparsedTagArray = JSON.parse(tagArray);\n\tparsedTagArray.forEach(function(tag) {\n\t\tappendTemplateTag(tag);\n\t});\n}\n\nfunction removeTemplateTag(id, name) {\n\tselectedTags.forEach(function(tag) {\n\t\tif (tag == id) {\n\t\t\tvar index = selectedTags.indexOf(id);\n\t\t\tif (index > -1) {\n\t\t\t\tselectedTags.splice(index, 1);\n\t\t\t\tupdateSelectedTags();\n\t\t\t}\n\t\t}\n\t});\n\t$('#tag_bubble_' + id).remove();\n}\n\nfunction updateSelectedTags() {\n\t$('#hiddenTags').attr(\"value\", JSON.stringify(selectedTags));\n}\n\nfunction saveElementSorting(order) {\n\t$.ajax({\n\t\tdata: order,\n\t\tdataType:\"json\",\n\t\tcontentType: \"application/json\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/templates/saveElementSorting/\",\n\t});\n}\n\nfunction templateAddElementClicked(id) {\n\tsimplePopup(\"/template_elements/templateElementAddChoices/\" + id);\n}\n\nfunction templateAddElement(type, id) {\n\tsimplePopup(\"/template_elements/add/\" + type + \"/\" + id);\n}\n\nfunction templateUpdateAvailableTypes() {\n\t$(\"#innerTypes\").empty();\n\tvar type = $(\"#TemplateElementAttributeType option:selected\").text();\n\tvar complex = $('#TemplateElementAttributeComplex:checked').val();\n\tif (complex && type != 'Select Type') {\n\t\tcurrentTypes.forEach(function(entry) {\n\t\t\t$(\"#innerTypes\").append(\"<div class=\\\"templateTypeBox\\\" id=\\\"\" + entry + \"TypeBox\\\">\" + entry + \"</div>\");\n\t\t});\n\t\t$('#outerTypes').show();\n\t}\n\telse $('#outerTypes').hide();\n}\n\nfunction populateTemplateTypeDropdown() {\n\tvar cat = $(\"#TemplateElementAttributeCategory option:selected\").text();\n\tcurrentTypes = [];\n\tif (cat == 'Select Category') {\n\t\t$('#TemplateElementAttributeType').html(\"<option>Select Type</option>\");\n\t} else {\n\t\tvar complex = $('#TemplateElementAttributeComplex:checked').val();\n\t\tif (cat in typeGroupCategoryMapping) {\n\t\t\t$('#TemplateElementAttributeType').html(\"<option>Select Type</option>\");\n\t\t\ttypeGroupCategoryMapping[cat].forEach(function(entry) {\n\t\t\t\t$('#TemplateElementAttributeType').append(\"<option>\" + entry + \"</option>\");\n\t\t\t});\n\t\t} else {\n\t\t\tcomplex = false;\n\t\t}\n\t\tif (!complex) {\n\t\t\t$('#TemplateElementAttributeType').html(\"<option>Select Type</option>\");\n\t\t\tcategoryTypes[cat].forEach(function(entry) {\n\t\t\t\t$('#TemplateElementAttributeType').append(\"<option>\" + entry + \"</option>\");\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction templateElementAttributeTypeChange() {\n\tvar complex = $('#TemplateElementAttributeComplex:checked').val();\n\tvar type = $(\"#TemplateElementAttributeType option:selected\").text();\n\tcurrentTypes = [];\n\tif (type != 'Select Type') {\n\t\tif (complex) {\n\t\t\tcomplexTypes[type][\"types\"].forEach(function(entry) {\n\t\t\t\tcurrentTypes.push(entry);\n\t\t\t});\n\t\t} else {\n\t\t\tcurrentTypes.push(type);\n\t\t}\n\t} else {\n\t\tcurrentTypes = [];\n\t}\n\t$(\"#typeJSON\").html(JSON.stringify(currentTypes));\n\ttemplateUpdateAvailableTypes();\n}\n\nfunction templateElementAttributeCategoryChange(category) {\n\tif (category in typeGroupCategoryMapping) {\n\t\t$('#complexToggle').show();\n\t} else {\n\t\t$('#complexToggle').hide();\n\t}\n\tif (category != 'Select Type') {\n\t\tpopulateTemplateTypeDropdown();\n\t}\n\ttemplateUpdateAvailableTypes();\n}\n\nfunction templateElementFileCategoryChange(category) {\n\tif (category == '') {\n\t\t$(\"#TemplateElementFileMalware\")[0].disabled = true;\n\t\t$(\"#TemplateElementFileMalware\")[0].checked = false;\n\t} else {\n\t\tif (categoryArray[category].length == 2) {\n\t\t\t$(\"#TemplateElementFileMalware\")[0].disabled = false;\n\t\t\t$(\"#TemplateElementFileMalware\")[0].checked = true;\n\t\t} else {\n\t\t\t$(\"#TemplateElementFileMalware\")[0].disabled = true;\n\t\t\tif (categoryArray[category] == 'attachment') $(\"#TemplateElementFileMalware\")[0].checked = false;\n\t\t\telse $(\"#TemplateElementFileMalware\")[0].checked = true;\n\t\t}\n\t}\n}\n\nfunction openPopup(id) {\n\tvar window_height = $(window).height();\n\tvar popup_height = $(id).height();\n\tif (window_height < popup_height) {\n\t\t$(id).css(\"top\", 0);\n\t\t$(id).css(\"height\", window_height);\n\t\t$(id).addClass('vertical-scroll');\n\t} else {\n\t\tif (window_height > (300 + popup_height)) {\n\t\t\tvar top_offset = ((window_height - popup_height) / 2) - 150;\n\t\t} else {\n\t\t\tvar top_offset = (window_height - popup_height) / 2;\n\t\t}\n\t\t$(id).css(\"top\", top_offset + 'px');\n\t}\n\t$(\"#gray_out\").fadeIn();\n\t$(id).fadeIn();\n}\n\nfunction getPopup(id, context, target, admin, popupType) {\n\t$(\"#gray_out\").fadeIn();\n\tvar url = \"\";\n\tif (typeof admin !== 'undefined' && admin != '') url+= \"/admin\";\n\tif (context != '') url += \"/\" + context;\n\tif (target != '') url += \"/\" + target;\n\tif (id != '') url += \"/\" + id;\n\tif (popupType == '' || typeof popupType == 'undefined') popupType = '#popover_form';\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tasync: true,\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(popupType).html(data);\n\t\t\topenPopup(popupType);\n\t\t},\n\t\turl: url\n\t});\n}\n\nfunction simplePopup(url) {\n\t$(\"#gray_out\").fadeIn();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tasync: true,\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#popover_form\").html(data);\n\t\t\topenPopup(\"#popover_form\");\n\t\t},\n\t\terror:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\tshowMessage('fail', 'Could not fetch the given PGP key.');\n\t\t},\n\t\turl: url,\n\t});\n}\n\nfunction resizePopoverBody() {\n\tvar bodyheight = $(window).height();\n\tbodyheight = 3 * bodyheight / 4 - 150;\n\t$(\"#popover_choice_main\").css({\"max-height\": bodyheight});\n}\n\nfunction populateTemplateHiddenFileDiv(files) {\n\t$('#TemplateFileArray').val(JSON.stringify(files));\n}\n\nfunction populateTemplateFileBubbles() {\n\tvar fileObjectArray = JSON.parse($('#TemplateFileArray').val());\n\tfileObjectArray.forEach(function(entry) {\n\t\ttemplateAddFileBubble(entry.element_id, false, entry.filename, entry.tmp_name, 'yes');\n\t});\n}\n\nfunction templateFileHiddenAdd(files, element_id, batch) {\n\tvar fileArray = $.parseJSON($('#TemplateFileArray', window.parent.document).val());\n\tvar contained = false;\n\tfor (var j=0; j< files.length; j++) {\n\t\tfor (var i=0; i< fileArray.length; i++) {\n\t\t\tif (fileArray[i].filename == files[j].filename) {\n\t\t\t\tcontained = true;\n\t\t\t}\n\t\t\tif (batch == 'no' && fileArray[i].element_id == element_id) {\n\t\t\t\ttemplateDeleteFileBubble(fileArray[i].filename, fileArray[i].tmp_name, fileArray[i].element_id, 'iframe', batch);\n\t\t\t\tcontained = false;\n\t\t\t\tvar removeId = i;\n\t\t\t}\n\t\t}\n\t\tif (batch == 'no') fileArray.splice(removeId, 1);\n\t\tif (contained == false) {\n\t\t\tfileArray.push(files[j]);\n\t\t\ttemplateAddFileBubble(element_id, true, files[j].filename, files[j].tmp_name, batch);\n\t\t\t$('#TemplateFileArray', window.parent.document).val(JSON.stringify(fileArray));\n\t\t}\n\t}\n}\n\nfunction htmlEncode(value){\n\treturn $('<div/>').text(value).html();\n}\n\nfunction templateAddFileBubble(element_id, iframe, filename, tmp_name, batch) {\n\tfilename = htmlEncode(filename);\n\ttmp_name = htmlEncode(tmp_name);\n\tif (batch == 'no') {\n\t\tif (iframe == true) {\n\t\t\t$('#filenames_' + element_id, window.parent.document).html('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'no\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t} else {\n\t\t\t$('#filenames_' + element_id).html('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'no\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t}\n\t} else {\n\t\tif (iframe == true) {\n\t\t\t$('#filenames_' + element_id, window.parent.document).append('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'yes\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t} else {\n\t\t\t$('#filenames_' + element_id).append('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'yes\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t}\n\t}\n}\n\nfunction templateDeleteFileBubble(filename, tmp_name, element_id, context, batch) {\n\t$(\".loading\").show();\n\t$.ajax({\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/templates/deleteTemporaryFile/\" + tmp_name,\n\t});\n\tvar c = this;\n\tif (context == 'iframe') {\n\t\t$('#' + tmp_name + '_container', window.parent.document).remove();\n\t\tvar oldArray = JSON.parse($('#TemplateFileArray', window.parent.document).val());\n\t} else {\n\t\t$('#' + tmp_name + '_container').remove();\n\t\tvar oldArray = JSON.parse($('#TemplateFileArray').val());\n\t}\n\tvar newArray = [];\n\toldArray.forEach(function(entry) {\n\t\tif (batch == 'no') {\n\t\t\tif (entry.element_id != element_id) {\n\t\t\t\tnewArray.push(entry);\n\t\t\t}\n\t\t} else {\n\t\t\tif (entry.tmp_name != tmp_name) {\n\t\t\t\tnewArray.push(entry);\n\t\t\t}\n\t\t}\n\t});\n\tif (batch == 'no') {\n\t\t$('#fileUploadButton_' + element_id, $('#iframe_' + element_id).contents()).html('Upload File');\n\t}\n\tif (context == 'iframe') {\n\t\t$('#TemplateFileArray', window.parent.document).val(JSON.stringify(newArray));\n\t} else {\n\t\t$('#TemplateFileArray').val(JSON.stringify(newArray));\n\t}\n\t$(\".loading\").hide();\n}\n\nfunction templateFileUploadTriggerBrowse(id) {\n\t$('#upload_' + id + '_file').click();\n}\n\nfunction freetextRemoveRow(id, event_id) {\n\t$('#row_' + id).hide();\n\t$('#Attribute' + id + 'Save').attr(\"value\", \"0\");\n\tif ($(\".freetext_row:visible\").length == 0) {\n\t\twindow.location = \"/events/\" + event_id;\n\t}\n}\n\nfunction indexEvaluateFiltering() {\n\tif (filterContext == \"event\") {\n\t\tif (filtering.published != 2) {\n\t\t\t$('#value_published').html(publishedOptions[filtering.published]);\n\t\t} else {\n\t\t\t$('#value_published').html(\"\");\n\t\t}\n\t\tif (filtering.hasproposal != 2) {\n\t\t\t$('#value_hasproposal').html(publishedOptions[filtering.hasproposal]);\n\t\t} else {\n\t\t\t$('#value_hasproposal').html(\"\");\n\t\t}\n\t\tif (filtering.date.from != null || filtering.date.from != null) {\n\t\t\tvar text = \"\";\n\t\t\tif (filtering.date.from != \"\") text = \"From: \" + $('<span>').text(filtering.date.from).html();\n\t\t\tif (filtering.date.until != \"\") {\n\t\t\t\tif (text != \"\") text += \" \";\n\t\t\t\ttext += \"Until: \" + $('<span>').text(filtering.date.until).html();\n\t\t\t}\n\t\t}\n\t\t$('#value_date').html(text);\n\t\tfor (var i = 0; i < simpleFilters.length; i++) {\n\t\t\tindexEvaluateSimpleFiltering(simpleFilters[i]);\n\t\t}\n\t\tindexRuleChange();\n\t} else {\n\t\tfor (var i = 0; i < differentFilters.length; i++) {\n\t\t\tif (filtering[differentFilters[i]] != \"\") {\n\t\t\t\tvar text = \"\";\n\t\t\t\tif (filtering[differentFilters[i]] == 1) text = \"Yes\";\n\t\t\t\telse if (filtering[differentFilters[i]] == 0) text = \"No\";\n\t\t\t\t$('#value_' + differentFilters[i]).text(text);\n\t\t\t} else {\n\t\t\t\t$('#value_' + differentFilters[i]).text(\"\");\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < simpleFilters.length; i++) {\n\t\t\tindexEvaluateSimpleFiltering(simpleFilters[i]);\n\t\t}\n\t}\n\tindexSetTableVisibility();\n\tindexSetRowVisibility();\n\t$('#generatedURLContent').text(indexCreateFilters());\n}\n\nfunction quickFilter(passedArgs, url) {\n\tpassedArgs[\"searchall\"] = $('#quickFilterField').val().trim();\n\tfor (var key in passedArgs) {\n\t\tif (key !== 'page') {\n\t\t\turl += \"/\" + key + \":\" + passedArgs[key];\n\t\t}\n\t}\n\twindow.location.href=url;\n}\n\nfunction executeFilter(passedArgs, url) {\n\tfor (var key in passedArgs) url += \"/\" + key + \":\" + passedArgs[key];\n\twindow.location.href=url;\n}\n\nfunction quickFilterTaxonomy(taxonomy_id, passedArgs) {\n\tvar url = \"/taxonomies/view/\" + taxonomy_id + \"/filter:\" + $('#quickFilterField').val();\n\twindow.location.href=url;\n}\n\nfunction quickFilterRemoteEvents(passedArgs, id) {\n\tpassedArgs[\"searchall\"] = $('#quickFilterField').val();\n\tvar url = \"/servers/previewIndex/\" + id;\n\tfor (var key in passedArgs) {\n\t\turl += \"/\" + key + \":\" + passedArgs[key];\n\t}\n\twindow.location.href=url;\n}\n\n$('#quickFilterField').bind(\"enterKey\",function(e){\n\t$('#quickFilterButton').trigger(\"click\");\n});\n$('#quickFilterField').keyup(function(e){\n\tif(e.keyCode == 13)\n\t{\n    \t$('#quickFilterButton').trigger(\"click\");\n\t}\n});\n\nfunction remoteIndexApplyFilters() {\n\tvar url = actionUrl + '/' + $(\"#EventFilter\").val();\n\twindow.location.href = url;\n}\n\nfunction indexApplyFilters() {\n\tvar url = indexCreateFilters();\n\twindow.location.href = url;\n}\n\nfunction indexCreateFilters() {\n\ttext = \"\";\n\tif (filterContext == 'event') {\n\t\tif (filtering.published != \"2\") {\n\t\t\ttext += \"searchpublished:\" + filtering.published;\n\t\t}\n\t\tif (filtering.hasproposal != \"2\") {\n\t\t\tif (text != \"\") text += \"/\";\n\t\t\ttext += \"searchhasproposal:\" + filtering.hasproposal;\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < differentFilters.length; i++) {\n\t\t\tif (filtering[differentFilters[i]]) {\n\t\t\t\tif (text != \"\") text += \"/\";\n\t\t\t\ttext += \"search\" + differentFilters[i] + \":\" + filtering[differentFilters[i]];\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i = 0; i < simpleFilters.length; i++) {\n\t\ttext = indexBuildArray(simpleFilters[i], text);\n\t}\n\tif (filterContext == 'event') {\n\t\tif (filtering.date.from) {\n\t\t\tif (text != \"\") text += \"/\";\n\t\t\ttext += \"searchDatefrom:\" + filtering.date.from;\n\t\t}\n\t\tif (filtering.date.until) {\n\t\t\tif (text != \"\") text += \"/\";\n\t\t\ttext += \"searchDateuntil:\" + filtering.date.until;\n\t\t}\n\t\treturn baseurl + '/events/index/' + text;\n\t} else {\n\t\treturn baseurl + '/admin/users/index/' + text;\n\t}\n}\n\nfunction indexBuildArray(type, text) {\n\ttemp = \"\";\n\tif (text != \"\") temp += \"/\";\n\ttemp += \"search\" + type + \":\";\n\tif (filtering[type].NOT.length == 0 && filtering[type].OR.length == 0) return text;\n\tvar swap = filtering[type].OR.length;\n\tvar temp_array = filtering[type].OR.concat(filtering[type].NOT);\n\tfor (var i = 0; i < temp_array.length; i++) {\n\t\tif (i > 0) temp += \"|\";\n\t\tif (i >= swap) temp +=\"!\";\n\t\ttemp += temp_array[i];\n\t}\n\ttext += temp;\n\treturn text;\n}\n\nfunction indexSetRowVisibility() {\n\tfor (var i = 0; i < allFields.length; i++) {\n\t\tif ($(\"#value_\" + allFields[i]).text().trim() != \"\") {\n\t\t\t$(\"#row_\" + allFields[i]).show();\n\t\t} else {\n\t\t\t$(\"#row_\" + allFields[i]).hide();\n\t\t}\n\t}\n}\n\nfunction indexEvaluateSimpleFiltering(field) {\n\ttext = \"\";\n\tif (filtering[field].OR.length == 0 && filtering[field].NOT.length == 0) {\n\t\t$('#value_' + field).html(text);\n\t\treturn false;\n\t}\n\tif (filtering[field].OR.length !=0) {\n\t\tfor (var i = 0; i < filtering[field].OR.length; i++) {\n\t\t\tif (i > 0) text += '<span class=\"green bold\"> OR </span>';\n\t\t\tif (typedFields.indexOf(field) == -1) {\n\t\t\t\ttext += $('<span>').text(filtering[field].OR[i]).html();\n\t\t\t} else {\n\t\t\t\tfor (var j = 0; j < typeArray[field].length; j++) {\n\t\t\t\t\tif (typeArray[field][j].id == filtering[field].OR[i]) {\n\t\t\t\t\t\ttext += $('<span>').text(typeArray[field][j].value).html();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (filtering[field].NOT.length !=0) {\n\t\tfor (var i = 0; i < filtering[field].NOT.length; i++) {\n\t\t\tif (i == 0) {\n\t\t\t\tif (text != \"\") text += '<span class=\"red bold\"> AND NOT </span>';\n\t\t\t\telse text += '<span class=\"red bold\">NOT </span>';\n\t\t\t} else text += '<span class=\"red bold\"> AND NOT </span>';\n\t\t\tif (typedFields.indexOf(field) == -1) {\n\t\t\t\ttext += $('<span>').text(filtering[field].NOT[i]).html();\n\t\t\t} else {\n\t\t\t\tfor (var j = 0; j < typeArray[field].length; j++) {\n\t\t\t\t\tif (typeArray[field][j].id == filtering[field].NOT[i]) {\n\t\t\t\t\t\ttext += $('<span>').text(typeArray[field][j].value).html();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t$('#value_' + field).html(text);\n}\n\nfunction indexAddRule(param) {\n\tvar found = false;\n\tif (filterContext == 'event') {\n\t\tif (param.data.param1 == \"date\") {\n\t\t\tvar val1 = escape($('#EventSearch' + param.data.param1 + 'from').val());\n\t\t\tvar val2 = escape($('#EventSearch' + param.data.param1 + 'until').val());\n\t\t\tif (val1 != \"\") filtering.date.from = val1;\n\t\t\tif (val2 != \"\") filtering.date.until = val2;\n\t\t} else if (param.data.param1 == \"published\") {\n\t\t\tvar value = escape($('#EventSearchpublished').val());\n\t\t\tif (value != \"\") filtering.published = value;\n\t\t} else if (param.data.param1 == \"hasproposal\") {\n\t\t\tvar value = escape($('#EventSearchhasproposal').val());\n\t\t\tif (value != \"\") filtering.hasproposal = value;\n\t\t} else {\n\t\t\tvar value = escape($('#EventSearch' + param.data.param1).val());\n\t\t\tvar operator = operators[escape($('#EventSearchbool').val())];\n\t\t\tif (value != \"\" && filtering[param.data.param1][operator].indexOf(value) < 0) filtering[param.data.param1][operator].push(value);\n\t\t}\n\t} else if (filterContext = 'user') {\n\t\tif (differentFilters.indexOf(param.data.param1) != -1) {\n\t\t\tvar value = escape($('#UserSearch' + param.data.param1).val());\n\t\t\tif (value != \"\") filtering[param.data.param1] = value;\n\t\t} else {\n\t\t\tvar value = escape($('#UserSearch' + param.data.param1).val());\n\t\t\tvar operator = operators[escape($('#UserSearchbool').val())];\n\t\t\tif (value != \"\" && filtering[param.data.param1][operator].indexOf(value) < 0) filtering[param.data.param1][operator].push(value);\n\t\t}\n\t}\n\tindexEvaluateFiltering();\n}\n\nfunction indexSetTableVisibility() {\n\tvar visible = false;\n\tif ($(\"[id^='value_']\").text().trim()!=\"\" && $(\"[id^='value_']\").text().trim()!=\"-1\") {\n\t\tvisible = true;\n\t}\n\tif (visible == true) $('#FilterplaceholderTable').hide();\n\telse $('#FilterplaceholderTable').show();\n}\n\nfunction indexRuleChange() {\n\tvar context = filterContext.charAt(0).toUpperCase() + filterContext.slice(1);\n\t$('[id^=' + context + 'Search]').hide();\n\tvar rule = $('#' + context + 'Rule').val();\n\tvar fieldName = '#' + context + 'Search' + rule;\n\tif (fieldName == '#' + context + 'Searchdate') {\n\t\t$(fieldName + 'from').show();\n\t\t$(fieldName + 'until').show();\n\t} else {\n\t\t$(fieldName).show();\n\t}\n\tif (simpleFilters.indexOf(rule) != -1) {\n\t\t$('#' + context + 'Searchbool').show();\n\t} else $('#' + context + 'Searchbool').hide();\n\n\t$('#addRuleButton').show();\n\t$('#addRuleButton').unbind(\"click\");\n\t$('#addRuleButton').click({param1: rule}, indexAddRule);\n}\n\nfunction indexFilterClearRow(field) {\n\t$('#value_' + field).html(\"\");\n\t$('#row_' + field).hide();\n\tif (field == \"date\") {\n\t\tfiltering.date.from = \"\";\n\t\tfiltering.date.until = \"\";\n\t} else if (field == \"published\") {\n\t\tfiltering.published = 2;\n\t} else if (field == \"hasproposal\") {\n\t\tfiltering.hasproposal = 2;\n\t} else if (differentFilters.indexOf(field) != -1) {\n\t\tfiltering[field] = \"\";\n\t} else {\n\t\tfiltering[field].NOT = [];\n\t\tfiltering[field].OR = [];\n\t}\n\tindexSetTableVisibility();\n\tindexEvaluateFiltering();\n}\n\n\nfunction restrictEventViewPagination() {\n\tvar showPages = new Array();\n\tvar start;\n\tvar end;\n\tvar i;\n\n\tif (page < 6) {\n\t\tstart = 1;\n\t\tif (count - page < 6) {\n\t\t\tend = count;\n\t\t} else {\n\t\t\tend = page + (9 - (page - start));\n\t\t}\n\t} else if (count - page < 6) {\n\t\tend = count;\n\t\tstart = count - 10;\n\t} else {\n\t\tstart = page-5;\n\t\tend = page+5;\n\t}\n\n\tif (start > 2) {\n\t\t$(\"#apage\" + start).parent().before(\"<li><a href id='aExpandLeft'>...</a></li>\");\n\t\t$(\"#aExpandLeft\").click(function() {expandPagination(0, 0); return false;});\n\t\t$(\"#bpage\" + start).parent().before(\"<li><a href id='bExpandLeft'>...</a></li>\");\n\t\t$(\"#bExpandLeft\").click(function() {expandPagination(1, 0); return false;})\n\t}\n\n\tif (end < (count - 1)) {\n\t\t$(\"#apage\" + end).parent().after(\"<li><a href id='aExpandRight'>...</a></li>\");\n\t\t$(\"#aExpandRight\").click(function() {expandPagination(0, 1); return false;});\n\t\t$(\"#bpage\" + end).parent().after(\"<li><a href id='bExpandRight'>...</a></li>\");\n\t\t$(\"#bExpandRight\").click(function() {expandPagination(1, 1); return false;})\n\t}\n\n\tfor (i = 1; i < (count+1); i++) {\n\t\tif (i != 1 && i != count && (i < start || i > end)) {\n\t\t\t$(\"#apage\" + i).hide();\n\t\t\t$(\"#bpage\" + i).hide();\n\t\t}\n\t}\n}\n\nfunction expandPagination(bottom, right) {\n\tvar i;\n\tvar prefix = \"a\";\n\tif (bottom == 1) prefix = \"b\";\n\tvar start = 1;\n\tvar end = page;\n\tif (right == 1) {\n\t\tstart = page;\n\t\tend = count;\n\t\t$(\"#\" + prefix + \"ExpandRight\").remove();\n\t} else $(\"#\" + prefix + \"ExpandLeft\").remove();\n\tfor (i = start; i < end; i++) {\n\t\t$(\"#\" + prefix + \"page\" + i).show();\n\t}\n}\n\nfunction getSubGroupFromSetting(setting) {\n\tvar temp = setting.split('.');\n\tif (temp[0] == \"Plugin\") {\n\t\ttemp = temp[1];\n\t\tif (temp.indexOf('_') > -1) {\n\t\t\ttemp = temp.split('_');\n\t\t\treturn temp[0];\n\t\t}\n\t}\n\treturn 'general';\n}\n\nfunction serverSettingsActivateField(setting, id) {\n\tresetForms();\n\t$('.inline-field-placeholder').hide();\n\tvar fieldName = \"#setting_\" + getSubGroupFromSetting(setting) + \"_\" + id;\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(fieldName + \"_placeholder\").html(data);\n\t\t\t$(fieldName + \"_solid\").hide();\n\t\t\t$(fieldName + \"_placeholder\").show();\n\t\t\tserverSettingsPostActivationScripts(fieldName, setting, id);\n\t\t},\n\t\turl:\"/servers/serverSettingsEdit/\" + setting + \"/\" + id,\n\t});\n}\n\nfunction serverSettingsPostActivationScripts(name, setting, id) {\n\t$(name + '_field').focus();\n\tinputFieldButtonActive(name + '_field');\n\n\t$(name + '_form').submit(function(e){\n\t\te.preventDefault();\n\t\tserverSettingSubmitForm(name, setting, id);\n\t\treturn false;\n\t});\n\n\t$(name + '_form').bind(\"focusout\", function() {\n\t\tinputFieldButtonPassive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"focusin\", function(){\n\t\tinputFieldButtonActive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"keydown\", function(e) {\n\t\tif (e.ctrlKey && (e.keyCode == 13 || e.keyCode == 10)) {\n\t\t\tserverSettingSubmitForm(name, setting, id);\n\t\t}\n\t});\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-accept').bind('click', function() {\n\t\tserverSettingSubmitForm(name, setting, id);\n\t});\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-decline').bind('click', function() {\n\t\tresetForms();\n\t\t$('.inline-field-placeholder').hide();\n\t});\n\n\t$(name + '_solid').hide();\n}\n\nfunction serverSettingSubmitForm(name, setting, id) {\n\tsubGroup = getSubGroupFromSetting(setting);\n\tvar formData = $(name + '_field').closest(\"form\").serialize();\n\t$.ajax({\n\t\tdata: formData,\n\t\tcache: false,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$.ajax({\n\t\t\t\ttype:\"get\",\n\t\t\t\turl:\"/servers/serverSettingsReloadSetting/\" + setting + \"/\" + id,\n\t\t\t\tsuccess:function (data2, textStatus2) {\n\t\t\t\t\t$('#' + subGroup + \"_\" + id + '_row').replaceWith(data2);\n\t\t\t\t\t$(\".loading\").hide();\n\t\t\t\t},\n\t\t\t\terror:function() {\n\t\t\t\t\tshowMessage('fail', 'Could not refresh the table.');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Request failed for an unknown reason.');\n\t\t\tresetForms();\n\t\t\t$('.inline-field-placeholder').hide();\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/servers/serverSettingsEdit/\" + setting + \"/\" + id + \"/\" + 1\n\t});\n\t$(name + '_field').unbind(\"keyup\");\n\t$(name + '_form').unbind(\"focusout\");\n\treturn false;\n}\n\nfunction updateOrgCreateImageField(string) {\n\tstring = escape(string);\n\t$.ajax({\n\t    url:'/img/orgs/' + string + '.png',\n\t    type:'HEAD',\n\t    error:\n\t        function(){\n\t    \t\t$('#logoDiv').html('No image uploaded for this identifier');\n\t        },\n\t    success:\n\t        function(){\n\t    \t\t$('#logoDiv').html('<img src=\"/img/orgs/' + string + '.png\" style=\"width:24px;height:24px;\"></img>');\n\t        }\n\t});\n}\n\nfunction generateOrgUUID() {\n\t$.ajax({\n\t    url:'/admin/organisations/generateuuid.json',\n\t    success:\n\t        function( data ){\n\t    \t\t$('#OrganisationUuid').val(data.uuid);\n\t        }\n\t});\n}\n\n\nfunction sharingGroupIndexMembersCollapse(id) {\n\t$('#' + id + '_down').show();\n\t$('#' + id + '_up').hide();\n}\n\nfunction sharingGroupIndexMembersExpand(id) {\n\t$('#' + id + '_down').hide();\n\t$('#' + id + '_up').show();\n}\n\nfunction popoverStartup() {\n    $('[data-toggle=\"popover\"]').popover({\n        animation: true,\n        html: true,\n    }).click(function(e) {\n    \t$(e.target).popover('show');\n    \t$('[data-toggle=\"popover\"]').not(e.target).popover('hide');\n    });\n    $(document).click(function (e) {\n        if (!$('[data-toggle=\"popover\"]').is(e.target)) {\n            $('[data-toggle=\"popover\"]').popover('hide');\n        }\n    });\n}\n\nfunction changeFreetextImportFrom() {\n\t$('#changeTo').find('option').remove();\n\toptions[$('#changeFrom').val()].forEach(function(element) {\n\t\t$('#changeTo').append('<option value=\"' + element + '\">' + element + '</option>');\n\t});\n}\n\nfunction changeFreetextImportCommentExecute() {\n\t$('.freetextCommentField').val($('#changeComments').val());\n}\n\nfunction changeFreetextImportExecute() {\n\tvar from = $('#changeFrom').val();\n\tvar to = $('#changeTo').val();\n\t$('.typeToggle').each(function() {\n\t\tif ($( this ).val() == from) {\n\t\t\tif (selectContainsOption(\"#\" + $(this).attr('id'), to)) $( this ).val(to);\n\t\t}\n\t});\n}\n\nfunction selectContainsOption(selectid, value) {\n\tvar exists = false;\n\t$(selectid + ' option').each(function(){\n\t    if (this.value == value) {\n\t        exists = true;\n\t        return false;\n\t    }\n\t});\n\treturn exists;\n}\n\nfunction exportChoiceSelect(url, elementId, checkbox) {\n\tif (checkbox == 1) {\n\t\tif ($('#' + elementId + '_toggle').prop('checked')) {\n\t\t\turl = $('#' + elementId + '_set').html();\n\t\t}\n\t}\n\tdocument.location.href = url;\n}\n\nfunction importChoiceSelect(url, elementId, ajax) {\n\tif (ajax == 'false') {\n\t\tdocument.location.href = url;\n\t} else {\n\t\tsimplePopup(url);\n\t}\n}\n\nfunction freetextImportResultsSubmit(id, count) {\n\tvar attributeArray = [];\n\tvar temp;\n\tfor (i = 0; i < count; i++) {\n\t\tif ($('#Attribute' + i + 'Save').val() == 1) {\n\t\t\ttemp = {\n\t\t\t\tvalue:$('#Attribute' + i + 'Value').val(),\n\t\t\t\tcategory:$('#Attribute' + i + 'Category').val(),\n\t\t\t\ttype:$('#Attribute' + i + 'Type').val(),\n\t\t\t\tto_ids:$('#Attribute' + i + 'To_ids')[0].checked,\n\t\t\t\tcomment:$('#Attribute' + i + 'Comment').val(),\n\t\t\t\tdistribution:$('#Attribute' + i + 'Distribution').val(),\n\t\t\t\tsharing_group_id:$('#Attribute' + i + 'SharingGroupId').val(),\n\t\t\t\tdata:$('#Attribute' + i + 'Data').val(),\n\t\t\t\tdata_is_handled:$('#Attribute' + i + 'DataIsHandled').val(),\n\t\t\t\ttags:$('#Attribute' + i + 'Tags').val()\n\t\t\t}\n\t\t\tattributeArray[attributeArray.length] = temp;\n\t\t}\n\t};\n\t$(\"#AttributeJsonObject\").val(JSON.stringify(attributeArray));\n\tvar formData = $(\".mainForm\").serialize();\n\t$.ajax({\n\t\ttype: \"post\",\n\t\tcache: false,\n\t\turl: \"/events/saveFreeText/\" + id,\n\t\tdata: formData,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\twindow.location = '/events/view/' + id;\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t});\n}\n\nfunction objectTemplateViewContent(context, id) {\n\tvar url = \"/objectTemplateElements/viewElements/\" + id + \"/\" + context;\n\t$.ajax({\n\t\t\turl: url,\n\t\t\ttype:'GET',\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\t\terror: function(){\n\t\t\t\t$('#ajaxContent').html('An error has occured, please reload the page.');\n\t\t\t},\n\t\t\tsuccess: function(response){\n\t\t\t\t$('#ajaxContent').html(response);\n\t\t\t},\n\t\tcomplete: function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t});\n\n}\n\nfunction organisationViewContent(context, id) {\n\torganisationViewButtonHighlight(context);\n\tvar action = \"/organisations/landingpage/\";\n\tif (context == 'members') {\n\t\taction = \"/admin/users/index/searchorg:\";\n\t}\n\tif (context == 'events') {\n\t\taction = \"/events/index/searchorg:\";\n\t}\n\t$.ajax({\n\t    url: action + id,\n\t    type:'GET',\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t    error: function(){\n\t    \t$('#ajaxContent').html('An error has occured, please reload the page.');\n\t    },\n\t    success: function(response){\n\t    \t$('#ajaxContent').html(response);\n\t    },\n\t\tcomplete: function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t});\n}\n\nfunction organisationViewButtonHighlight(context) {\n\t$(\".orgViewButtonActive\").hide();\n\t$(\".orgViewButton\").show();\n\t$(\"#button_\" + context).hide();\n\t$(\"#button_\" + context + \"_active\").show();\n}\n\nfunction simpleTabPage(page) {\n\t$(\".tabMenuSides\").removeClass(\"tabMenuActive\");\n\t$(\"#page\" + page + \"_tab\").addClass(\"tabMenuActive\");\n\t$(\".tabContent\").hide();\n\t$(\"#page\" + page + \"_content\").show();\n\tif (page == lastPage) simpleTabPageLast();\n}\n\nfunction simpleTabPageLast() {\n\tvar summaryorgs = summaryextendorgs = remotesummaryorgs = remotesummaryextendorgs = summaryservers = \"\";\n\tvar orgcounter = extendcounter = remoteorgcounter = remoteextendcounter = servercounter = 0;\n\tvar sgname = \"[Sharing group name not set!]\";\n\tif ($('#SharingGroupName').val()) sgname = $('#SharingGroupName').val();\n\tvar sgreleasability = \"[Sharing group releasability not set!]\";\n\tif ($('#SharingGroupReleasability').val()) sgreleasability = $('#SharingGroupReleasability').val();\n\t$('#summarytitle').text(sgname);\n\t$('#summaryreleasable').text(sgreleasability);\n\torganisations.forEach(function(organisation){\n\t\tif (organisation.type == 'local') {\n\t\t\tif (orgcounter > 0) summaryorgs += \", \";\n\t\t\tsummaryorgs += organisation.name;\n\t\t\tif (organisation.extend == true) {\n\t\t\t\tif (extendcounter > 0) summaryextendorgs += \", \"\n\t\t\t\tsummaryextendorgs += organisation.name;\n\t\t\t\textendcounter++;\n\t\t\t}\n\t\t\torgcounter++;\n\t\t} else {\n\t\t\tif (remoteorgcounter > 0) remotesummaryorgs += \", \";\n\t\t\tremotesummaryorgs += organisation.name;\n\t\t\tif (organisation.extend == true) {\n\t\t\t\tif (remoteextendcounter > 0) remotesummaryextendorgs += \", \"\n\t\t\t\tremotesummaryextendorgs += organisation.name;\n\t\t\t\tremoteextendcounter++;\n\t\t\t}\n\t\t\tremoteorgcounter++;\n\t\t}\n\t});\n\tif (orgcounter == 0) $('#localText').hide();\n\tif (remoteorgcounter == 0) $('#externalText').hide();\n\tif (extendcounter == 0) summaryextendorgs = \"nobody\";\n\tif (remoteextendcounter == 0) remotesummaryextendorgs = \"nobody\";\n\tservers.forEach(function(server){\n\t\tif (servercounter > 0) summaryservers += \", \";\n\t\tif (server.id != 0) {\n\t\t\tsummaryservers += server.name;\n\t\t\tif (extendcounter == 0) summaryextendorgs = \"none\";\n\t\t\tservercounter++;\n\t\t}\n\t\tif (server.id == 0 && server.all_orgs == true) summaryorgs = \"all organisations on this instance\";\n\t});\n\tif ($('#SharingGroupRoaming').is(\":checked\")) {\n\t\tsummaryservers = \"any interconnected instances linked by an eligible organisation.\";\n\t} else {\n\t\tif (servercounter == 0) {\n\t\t\tsummaryservers = \"data marked with this sharing group will not be pushed.\";\n\t\t}\n\t}\n\t$('#summarylocal').text(summaryorgs);\n\t$('#summarylocalextend').text(summaryextendorgs);\n\t$('#summaryexternal').text(remotesummaryorgs);\n\t$('#summaryexternalextend').text(remotesummaryextendorgs);\n\t$('#summaryservers').text(summaryservers);\n}\n\nfunction sharingGroupPopulateOrganisations() {\n\t$('input[id=SharingGroupOrganisations]').val(JSON.stringify(organisations));\n\t$('.orgRow').remove();\n\tvar id = 0;\n\tvar html = '';\n\torganisations.forEach(function(org) {\n\t\thtml = '<tr id=\"orgRow' + id + '\" class=\"orgRow\">';\n\t\thtml += '<td class=\"short\">' + org.type + '&nbsp;</td>';\n\t\thtml += '<td>' + org.name + '&nbsp;</td>';\n\t\thtml += '<td>' + org.uuid + '&nbsp;</td>';\n\t\thtml += '<td class=\"short\" style=\"text-align:center;\">';\n\t\tif (org.removable == 1) {\n\t\t\thtml += '<input id=\"orgExtend' + id + '\" type=\"checkbox\" onClick=\"sharingGroupExtendOrg(' + id + ')\" ';\n\t\t\tif (org.extend) html+= 'checked';\n\t\t\thtml += '></input>';\n\t\t} else {\n\t\t\thtml += '<span class=\"icon-ok\"></span>'\n\t\t}\n\t\thtml +='</td>';\n\t\thtml += '<td class=\"actions short\">';\n\t\tif (org.removable == 1) html += '<span class=\"icon-trash\" onClick=\"sharingGroupRemoveOrganisation(' + id + ')\"></span>';\n\t\thtml += '&nbsp;</td></tr>';\n\t\t$('#organisations_table tr:last').after(html);\n\t\tid++;\n\t});\n}\n\nfunction sharingGroupPopulateServers() {\n\t$('input[id=SharingGroupServers]').val(JSON.stringify(servers));\n\t$('.serverRow').remove();\n\tvar id = 0;\n\tvar html = '';\n\tservers.forEach(function(server) {\n\t\thtml = '<tr id=\"serverRow' + id + '\" class=\"serverRow\">';\n\t\thtml += '<td>' + server.name + '&nbsp;</td>';\n\t\thtml += '<td>' + server.url + '&nbsp;</td>';\n\t\thtml += '<td>';\n\t\thtml += '<input id=\"serverAddOrgs' + id + '\" type=\"checkbox\" onClick=\"sharingGroupServerAddOrgs(' + id + ')\" ';\n\t\tif (server.all_orgs) html += 'checked';\n\t\thtml += '></input>';\n\t\thtml +='</td>';\n\t\thtml += '<td class=\"actions short\">';\n\t\tif (server.removable == 1) html += '<span class=\"icon-trash\" onClick=\"sharingGroupRemoveServer(' + id + ')\"></span>';\n\t\thtml += '&nbsp;</td></tr>';\n\t\t$('#servers_table tr:last').after(html);\n\t\tid++;\n\t});\n}\n\nfunction sharingGroupExtendOrg(id) {\n\torganisations[id].extend = $('#orgExtend' + id).is(\":checked\");\n}\n\nfunction sharingGroupServerAddOrgs(id) {\n\tservers[id].all_orgs = $('#serverAddOrgs' + id).is(\":checked\");\n}\n\nfunction sharingGroupPopulateUsers() {\n\t$('input[id=SharingGroupServers]').val(JSON.stringify(organisations));\n}\n\nfunction sharingGroupAdd(context, type) {\n\tif (context == 'organisation') {\n\t\tvar jsonids = JSON.stringify(orgids);\n\t\turl = '/organisations/fetchOrgsForSG/' + jsonids + '/' + type\n\t} else if (context == 'server') {\n\t\tvar jsonids = JSON.stringify(serverids);\n\t\turl = '/servers/fetchServersForSG/' + jsonids\n\t}\n\t$(\"#gray_out\").fadeIn();\n\tsimplePopup(url);\n}\n\nfunction sharingGroupRemoveOrganisation(id) {\n\torganisations.splice(id, 1);\n\torgids.splice(id, 1);\n\tsharingGroupPopulateOrganisations();\n}\n\nfunction sharingGroupRemoveServer(id) {\n\tservers.splice(id, 1);\n\tserverids.splice(id, 1);\n\tsharingGroupPopulateServers();\n}\n\nfunction submitPicklistValues(context, local) {\n\tif (context == 'org') {\n\t\tvar localType = 'local';\n\t\tif (local == 0) localType = 'remote';\n\t\t$(\"#rightValues  option\").each(function() {\n\t\t\tif (orgids.indexOf($(this).val()) == -1) {\n\t\t\t\torganisations.push({\n\t\t\t\t\t\tid: $(this).val(),\n\t\t\t\t\t\ttype: localType,\n\t\t\t\t\t\tname: $(this).text(),\n\t\t\t\t\t\textend: false,\n\t\t\t\t\t\tuuid: '',\n\t\t\t\t\t\tremovable: 1\n\t\t\t\t});\n\t\t\t}\n\t\t\torgids.push($(this).val());\n\t\t\tsharingGroupPopulateOrganisations();\n\t\t});\n\t} else if (context == 'server') {\n\t\t$(\"#rightValues  option\").each(function() {\n\t\t\tif (serverids.indexOf($(this).val()) == -1) {\n\t\t\t\tservers.push({\n\t\t\t\t\t\tid: $(this).val(),\n\t\t\t\t\t\tname: $(this).text(),\n\t\t\t\t\t\turl: $(this).attr(\"data-url\"),\n\t\t\t\t\t\tall_orgs: false,\n\t\t\t\t\t\tremovable: 1\n\t\t\t\t});\n\t\t\t}\n\t\t\tserverids.push($(this).val());\n\t\t\tsharingGroupPopulateServers();\n\t\t});\n\t}\n\t$(\"#gray_out\").fadeOut();\n\t$(\"#popover_form\").fadeOut();\n}\n\nfunction cancelPicklistValues() {\n\t$(\"#popover_form\").fadeOut();\n\t$(\"#gray_out\").fadeOut();\n}\n\nfunction sgSubmitForm(action) {\n\tvar ajax = {\n\t\t\t'organisations': organisations,\n\t\t\t'servers': servers,\n\t\t\t'sharingGroup': {\n\t\t\t\t'name': $('#SharingGroupName').val(),\n\t\t\t\t'releasability': $('#SharingGroupReleasability').val(),\n\t\t\t\t'description': $('#SharingGroupDescription').val(),\n\t\t\t\t'active': $('#SharingGroupActive').is(\":checked\"),\n\t\t\t\t'roaming': $('#SharingGroupRoaming').is(\":checked\"),\n\t\t\t}\n\t};\n\t$('#SharingGroupJson').val(JSON.stringify(ajax));\n\tvar formName = \"#SharingGroup\" + action + \"Form\";\n\t$(formName).submit();\n}\n\nfunction serverSubmitForm(action) {\n\tvar ajax = {};\n\tswitch ($('#ServerOrganisationType').val()) {\n\tcase '0':\n\t\tajax = {\n\t\t\t'id': $('#ServerLocal').val()\n\t\t};\n\t\tbreak;\n\tcase '1':\n\t\tajax = {\n\t\t\t'id': $('#ServerExternal').val()\n\t\t};\n\t\tbreak;\n\tcase '2':\n\t\tajax = {\n\t\t\t'name': $('#ServerExternalName').val(),\n\t\t\t'uuid': $('#ServerExternalUuid').val()\n\t\t};\n\t\tbreak;\n\t}\n\n\t$('#ServerJson').val(JSON.stringify(ajax));\n\tvar formName = \"#Server\" + action + \"Form\";\n\t$(formName).submit();\n}\n\nfunction serverOrgTypeChange() {\n\t$(\".hiddenField\").hide();\n\tswitch ($('#ServerOrganisationType').val()) {\n\t\tcase '0':\n\t\t\t$(\"#ServerLocalContainer\").show();\n\t\t\tbreak;\n\t\tcase '1':\n\t\t\t$(\"#ServerExternalContainer\").show();\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\t$(\"#ServerExternalUuidContainer\").show();\n\t\t\t$(\"#ServerExternalNameContainer\").show();\n\t\t\tbreak;\n\t}\n}\n\nfunction sharingGroupPopulateFromJson() {\n\tvar jsonparsed = JSON.parse($('#SharingGroupJson').val());\n\torganisations = jsonparsed.organisations;\n\tservers = jsonparsed.servers;\n\tif (jsonparsed.sharingGroup.active == 1) {\n\t\t$(\"#SharingGroupActive\").prop(\"checked\", true);\n\t}\n\tif (jsonparsed.sharingGroup.roaming == 1) {\n\t\t$(\"#SharingGroupRoaming\").prop(\"checked\", true);\n\t\t$('#serverList').show();\n\t}\n\t$('#SharingGroupName').attr('value', jsonparsed.sharingGroup.name);\n\t$('#SharingGroupReleasability').attr('value', jsonparsed.sharingGroup.releasability);\n\t$('#SharingGroupDescription').text(jsonparsed.sharingGroup.description);\n}\n\nfunction testConnection(id) {\n\t$.ajax({\n\t    url: '/servers/testConnection/' + id,\n\t    type:'GET',\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\"#connection_test_\" + id).html('Running test...');\n\t\t},\n\t    error: function(){\n\t    \t$(\"#connection_test_\" + id).html('Internal error.');\n\t    },\n\t    success: function(response){\n\t    \tvar result = response;\n\t    \tswitch (result.status) {\n\t\t\tcase 1:\n\t\t\t\tstatus_message = \"OK\";\n\t\t\t\tcompatibility = \"Compatible\";\n\t\t\t\tcompatibility_colour = \"green\";\n\t\t\t\tcolours = {'local': 'class=\"green\"', 'remote': 'class=\"green\"', 'status': 'class=\"green\"'};\n\t\t\t\tissue_colour = \"red\";\n\t\t\t\tif (result.mismatch == \"hotfix\") issue_colour = \"orange\";\n\t\t\t\tif (result.newer == \"local\") {\n\t\t\t\t\tcolours.remote = 'class=\"' + issue_colour + '\"';\n\t\t\t\t\tif (result.mismatch == \"minor\") {\n\t\t\t\t\t\tcompatibility = \"Pull only\";\n\t\t\t\t\t\tcompatibility_colour = \"orange\";\n\t\t\t\t\t} else if (result.mismatch == \"major\") {\n\t\t\t\t\t\tcompatibility = \"Incompatible\";\n\t\t\t\t\t\tcompatibility_colour = \"red\";\n\t\t\t\t\t}\n\t\t\t\t} else if (result.newer == \"remote\") {\n\t\t\t\t\tcolours.local = 'class=\"' + issue_colour + '\"';\n\t\t\t\t\tif (result.mismatch != \"hotfix\") {\n\t\t\t\t\t\tcompatibility = \"Incompatible\";\n\t\t\t\t\t\tcompatibility_colour = \"red\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (result.mismatch != false) {\n\t\t\t\t\tif (result.newer == \"remote\") status_message = \"Local instance outdated, update!\";\n\t\t\t\t\telse status_message = \"Remote outdated, notify admin!\"\n\t\t\t\t\tcolours.status = 'class=\"' + issue_colour + '\"';\n\t\t\t\t}\n\t\t\t\tif (result.post != false) {\n\t\t\t\t\tvar post_colour = \"red\";\n\t\t\t\t\tif (result.post == 1) {\n\t\t\t\t\t\tpost_colour = \"green\";\n\t\t\t\t\t\tpost_result = \"Received sent package\";\n\t\t\t\t\t} else if (result.post == 8) {\n\t\t\t\t\t\tpost_result = \"Could not POST message\";\n\t\t\t\t\t} else if (result.post == 9) {\n\t\t\t\t\t\tpost_result = \"Invalid body\";\n\t\t\t\t\t} else if (result.post == 10) {\n\t\t\t\t\t\tpost_result = \"Invalid headers\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpost_colour = \"orange\";\n\t\t\t\t\t\tpost_result = \"Remote too old for this test\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresultDiv = '<div>Local version: <span ' + colours.local + '>' + result.local_version + '</span><br />';\n\t\t\t\tresultDiv += '<div>Remote version: <span ' + colours.remote + '>' + result.version + '</span><br />';\n\t\t\t\tresultDiv += '<div>Status: <span ' + colours.status + '>' + status_message + '</span><br />';\n\t\t\t\tresultDiv += '<div>Compatiblity: <span class=\"' + compatibility_colour + '\">' + compatibility + '</span><br />';\n\t\t\t\tresultDiv += '<div>POST test: <span class=\"' + post_colour + '\">' + post_result + '</span><br />';\n\t\t\t\t$(\"#connection_test_\" + id).html(resultDiv);\n\t\t\t\t//$(\"#connection_test_\" + id).html('<span class=\"green bold\" title=\"Connection established, correct response received.\">OK</span>');\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"There seems to be a connection issue. Make sure that the entered URL is correct and that the certificates are in order.\">Server unreachable</span>');\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"The server returned an unexpected result. Make sure that the provided URL (or certificate if it applies) are correct.\">Unexpected error</span>');\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"Authentication failed due to incorrect authentication key or insufficient privileges on the remote instance.\">Authentication failed</span>');\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"Authentication failed because the sync user is expected to change passwords. Log into the remote MISP to rectify this.\">Password change required</span>');\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"Authentication failed because the sync user on the remote has not accepted the terms of use. Log into the remote MISP to rectify this.\">Terms not accepted</span>');\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"The user account on the remote instance is not a sync user.\">Remote user not a sync user</span>');\n\t\t\t\tbreak;\n\t    \t}\n\t    }\n\t})\n}\n\nfunction pgpChoiceSelect(uri) {\n\t$(\"#popover_form\").fadeOut();\n\t$(\"#gray_out\").fadeOut();\n\t$.ajax({\n\t\ttype: \"get\",\n\t\turl: \"https://pgp.mit.edu/\" + uri,\n\t\tsuccess: function (data) {\n\t\t\tvar result = data.split(\"<pre>\")[1].split(\"</pre>\")[0];\n\t\t\t$(\"#UserGpgkey\").val(result);\n\t\t\tshowMessage('success', \"Key found!\");\n\t\t},\n\t\terror: function (data, textStatus, errorThrown) {\n\t\t\tshowMessage('fail', textStatus + \": \" + errorThrown);\n\t\t}\n\t});\n}\n\nfunction lookupPGPKey(emailFieldName) {\n\tsimplePopup(\"/users/fetchPGPKey/\" + $('#' + emailFieldName).val());\n}\n\nfunction zeroMQServerAction(action) {\n\t$.ajax({\n\t\ttype: \"get\",\n\t\turl: \"/servers/\" + action + \"ZeroMQServer/\",\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess: function (data) {\n\t\t\t$(\".loading\").hide();\n\t\t\tif (action !== 'status') {\n\t\t\t\twindow.location.reload();\n\t\t\t} else {\n\t\t\t\t$(\"#confirmation_box\").html(data);\n\t\t\t\topenPopup(\"#confirmation_box\");\n\t\t\t}\n\t\t},\n\t\terror: function (data, textStatus, errorThrown) {\n\t\t\tshowMessage('fail', textStatus + \": \" + errorThrown);\n\t\t}\n\t});\n}\n\nfunction convertServerFilterRules(rules) {\n\tvalidOptions.forEach(function (type) {\n\t\tcontainer = \"#\"+ modelContext + type.ucfirst() + \"Rules\";\n\t\tif($(container).val() != '') rules[type] = JSON.parse($(container).val());\n\t});\n\tserverRuleUpdate();\n\treturn rules;\n}\n\nfunction serverRuleUpdate() {\n\tvar statusOptions = [\"OR\", \"NOT\"];\n\tvalidOptions.forEach(function(type) {\n\t\tvalidFields.forEach(function(field) {\n\t\t\tif (type === 'push') {\n\t\t\t\tvar indexedList = {};\n\t\t\t\twindow[field].forEach(function(item) {\n\t\t\t\t\tindexedList[item.id] = item.name;\n\t\t\t\t});\n\t\t\t}\n\t\t\tstatusOptions.forEach(function(status) {\n\t\t\t\tif (rules[type][field][status].length > 0) {\n\t\t\t\t\t$('#' + type + '_' + field + '_' + status).show();\n\t\t\t\t\tvar t = '';\n\t\t\t\t\trules[type][field][status].forEach(function(item) {\n\t\t\t\t\t\tif (t.length > 0) t += ', ';\n\t\t\t\t\t\tif (type === 'pull') t += item;\n\t\t\t\t\t\telse t += indexedList[item];\n\t\t\t\t\t});\n\t\t\t\t\t$('#' + type + '_' + field + '_' + status + '_text').text(t);\n\t\t\t\t} else {\n\t\t\t\t\t$('#' + type + '_' + field + '_' + status).hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\tserverRuleGenerateJSON();\n}\n\nfunction serverRuleFormActivate(type) {\n\tif (type != 'pull' && type != 'push') return false;\n\t$('.server_rule_popover').hide();\n\t$('#gray_out').fadeIn();\n\t$('#server_' + type + '_rule_popover').show();\n}\n\nfunction serverRuleCancel() {\n\t$(\"#gray_out\").fadeOut();\n\t$(\".server_rule_popover\").fadeOut();\n}\n\nfunction serverRuleGenerateJSON() {\n\tvalidOptions.forEach(function(type) {\n\t\tif ($('#Server' + type.ucfirst() + \"Rules\").length) {\n\t\t\t$('#Server' + type.ucfirst() + \"Rules\").val(JSON.stringify(rules[type]));\n\t\t} else {\n\t\t\t$('#Feed' + type.ucfirst() + \"Rules\").val(JSON.stringify(rules[type]));\n\t\t}\n\t});\n}\n\nfunction serverRulePopulateTagPicklist() {\n\tvar fields = [\"tags\", \"orgs\"];\n\tvar target = \"\";\n\tfields.forEach(function(field) {\n\t\ttarget = \"\";\n\t\twindow[field].forEach(function(element) {\n\t\t\tif ($.inArray(element.id, rules[\"push\"][field][\"OR\"]) != -1) target = \"#\" + field + \"pushLeftValues\";\n\t\t\telse if ($.inArray(element.id, rules[\"push\"][field][\"NOT\"]) != -1) target = \"#\" + field + \"pushRightValues\";\n\t\t\telse target = \"#\" + field + \"pushMiddleValues\";\n\t\t\t$(target).append($('<option/>', {\n\t\t\t\tvalue: element.id,\n\t\t\t\ttext : element.name\n\t\t\t}));\n\t\t});\n\t\ttarget = \"#\" + field + \"pullLeftValues\";\n\t\trules[\"pull\"][field][\"OR\"].forEach(function(t) {\n\t\t\t$(target).append($('<option/>', {\n\t\t\t\tvalue: t,\n\t\t\t\ttext : t\n\t\t\t}));\n\t\t});\n\t\ttarget = \"#\" + field + \"pullRightValues\";\n\t\trules[\"pull\"][field][\"NOT\"].forEach(function(t) {\n\t\t\t$(target).append($('<option/>', {\n\t\t\t\tvalue: t,\n\t\t\t\ttext : t\n\t\t\t}));\n\t\t});\n\t});\n}\n\nfunction submitServerRulePopulateTagPicklistValues(context) {\n\tvalidFields.forEach(function(field) {\n\t\trules[context][field][\"OR\"] = [];\n\t\t$(\"#\" + field + context + \"LeftValues option\").each(function() {\n\t\t\trules[context][field][\"OR\"].push($(this).val());\n\t\t});\n\t\trules[context][field][\"NOT\"] = [];\n\t\t$(\"#\" + field + context + \"RightValues option\").each(function() {\n\t\t\trules[context][field][\"NOT\"].push($(this).val());\n\t\t});\n\t});\n\n\t$('#server_' + context + '_rule_popover').fadeOut();\n\t$('#gray_out').fadeOut();\n\tserverRuleUpdate();\n}\n\n// type = pull/push, field = tags/orgs, from = Left/Middle/Right, to = Left/Middle/Right\nfunction serverRuleMoveFilter(type, field, from, to) {\n\tvar opposites = {\"Left\": \"Right\", \"Right\": \"Left\"};\n\t// first fetch the value\n\tvar value = \"\";\n\tif (type == \"pull\" && from == \"Middle\") {\n\t\tvar doInsert = true;\n\t\tvalue = $(\"#\" + field + type + \"NewValue\").val();\n\t\tif (value.length !== 0 && value.trim()) {\n\t\t\t$(\"#\" + field + type + to + \"Values\" + \" option\").each(function() {\n\t\t\t\tif (value == $(this).val()) doInsert = false;\n\t\t\t});\n\t\t\t$(\"#\" + field + type + opposites[to] + \"Values\" + \" option\").each(function() {\n\t\t\t\tif (value == $(this).val()) $(this).remove();\n\t\t\t});\n\t\t\tif (doInsert) {\n\t\t\t\t$(\"#\" + field + type + to + \"Values\").append($('<option/>', {\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttext : value\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t\t$(\"#\" + field + type + \"NewValue\").val('');\n\t} else {\n\t\t$(\"#\" + field + type + from + \"Values option:selected\").each(function () {\n\t\t\tif (type != \"pull\" || to != \"Middle\") {\n\t\t\t\tvalue = $(this).val();\n\t\t\t\ttext = $(this).text();\n\t\t\t\t$(\"#\" + field + type + to + \"Values\").append($('<option/>', {\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttext : text\n\t\t\t\t}));\n\t\t\t}\n\t\t\t$(this).remove();\n\t\t});\n\t}\n}\n\nfunction syncUserSelected() {\n\tif ($('#UserRoleId :selected').val() in syncRoles) {\n\t\t$('#syncServers').show();\n\t} else {\n\t\t$('#syncServers').hide();\n\t}\n}\n\nfunction filterAttributes(filter, id) {\n\turl = \"/events/viewEventAttributes/\" + id + \"/attributeFilter:\" + filter;\n\tif(filter === 'value'){\n\t\tfilter = $('#attributesFilterField').val().trim();\n\t\turl += \"/searchFor:\" + filter;\n\t}\n\tif (deleted) url += '/deleted:true';\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\"#attributes_div\").html(data);\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not fetch attributes.');\n\t\t}\n\t});\n}\n\nfunction pivotObjectReferences(url, uuid) {\n\turl += '/focus:' + uuid;\n\tconsole.log(url);\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\"#attributes_div\").html(data);\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not fetch attributes.');\n\t\t}\n\t});\n}\n\nfunction toggleDeletedAttributes(url) {\n\turl = url.replace(/view\\//i, 'viewEventAttributes/');\n\tif (url.indexOf('deleted:') > -1) {\n\t\turl = url.replace(/\\/deleted:[^\\/]*/i, '');\n\t} else {\n\t\turl = url + '/deleted:true'\n\t}\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\"#attributes_div\").html(data);\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not fetch attributes.');\n\t\t}\n\t});\n}\n\nfunction mergeOrganisationUpdate() {\n\tvar orgTypeOptions = ['local', 'external'];\n\tvar orgTypeSelects = ['OrganisationOrgsLocal', 'OrganisationOrgsExternal'];\n\torgType = orgTypeSelects[$('#OrganisationTargetType').val()];\n\torgID = $('#' + orgType).val();\n\torg = orgArray[orgTypeOptions[$('#OrganisationTargetType').val()]][orgID]['Organisation'];\n\t$('#org_id').text(org['id']);\n\t$('#org_name').text(org['name']);\n\t$('#org_uuid').text(org['uuid']);\n\t$('#org_local').text(orgTypeOptions[$('#OrganisationTargetType').val()]);\n}\n\nfunction mergeOrganisationTypeToggle() {\n\tif ($('#OrganisationTargetType').val() == 0) {\n\t\t$('#orgsLocal').show();\n\t\t$('#orgsExternal').hide();\n\t} else {\n\t\t$('#orgsLocal').hide();\n\t\t$('#orgsExternal').show();\n\t}\n}\n\nfunction feedDistributionChange() {\n\tif ($('#FeedDistribution').val() == 4) $('#SGContainer').show();\n\telse $('#SGContainer').hide();\n}\n\nfunction checkUserPasswordEnabled() {\n\tif ($('#UserEnablePassword').is(':checked')) {\n\t\t$('#PasswordDiv').show();\n\t} else {\n\t\t$('#PasswordDiv').hide();\n\t}\n}\n\nfunction checkUserExternalAuth() {\n\tif ($('#UserExternalAuthRequired').is(':checked')) {\n\t\t$('#externalAuthDiv').show();\n\t\t$('#passwordDivDiv').hide();\n\t} else {\n\t\t$('#externalAuthDiv').hide();\n\t\t$('#passwordDivDiv').show();\n\t}\n}\n\nfunction toggleSettingSubGroup(group) {\n\t$('.subGroup_' + group).toggle();\n}\n\nfunction runHoverLookup(type, id) {\n\t$.ajax({\n\t\tsuccess:function (html) {\n\t\t\tajaxResults[type + \"_\" + id] = html;\n\t\t\t$('.popover').remove();\n\t\t\t$('#' + type + '_' + id + '_container').popover({\n\t\t\t\ttitle: 'Lookup results:',\n\t\t\t\tcontent: html,\n\t\t\t\tplacement: 'left',\n\t\t\t\thtml: true,\n\t\t\t\ttrigger: 'hover',\n\t\t\t\tcontainer: 'body'\n\t\t\t}).popover('show');\n\t\t},\n\t\tcache: false,\n\t\turl:\"/attributes/hoverEnrichment/\" + id,\n\t});\n}\n\n$(\".eventViewAttributeHover\").mouseenter(function() {\n\t$('.popover').remove();\n\ttype = $(this).attr('data-object-type');\n\tid = $(this).attr('data-object-id');\n\tif (type + \"_\" + id in ajaxResults) {\n\t\t$('#' + type + '_' + id + '_container').popover({\n\t\t\ttitle: 'Lookup results:',\n\t\t\tcontent: ajaxResults[type + \"_\" + id],\n\t\t\tplacement: 'left',\n\t\t\thtml: true,\n\t\t\ttrigger: 'hover',\n\t\t\tcontainer: 'body'\n\t\t}).popover('show');\n\t} else {\n\t\ttimer = setTimeout(function() {\n\t\t\t\trunHoverLookup(type, id)\n\t\t\t},\n\t\t\t500\n\t\t);\n\t}\n}).mouseleave(function() {\n\tclearTimeout(timer);\n});\n\n$(\".queryPopover\").click(function() {\n\turl = $(this).data('url');\n\tid = $(this).data('id');\n\t$.get(url + '/' + id, function(data) {\n\t\t$('#popover_form').html(data);\n\t\topenPopup('#popover_form');\n\t});\n});\n\nfunction serverOwnerOrganisationChange(host_org_id) {\n\tif ($('#ServerOrganisationType').val() == \"0\" && $('#ServerLocal').val() == host_org_id) {\n\t\t$('#InternalDiv').show();\n\t} else {\n\t\t$('#ServerInternal').prop(\"checked\", false);\n\t\t$('#InternalDiv').hide();\n\t}\n}\n\nfunction requestAPIAccess() {\n\turl = \"/users/request_API/\";\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\".loading\").hide();\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not request API access.');\n\t\t}\n\t});\n}\n\nfunction initPopoverContent(context) {\n\tfor (var property in formInfoFields) {\n\t\tif (formInfoFields.hasOwnProperty(property)) {\n\t\t\t$('#' + property + 'InfoPopover').popover(\"destroy\").popover({\n\t\t\t\tplacement: 'right',\n\t\t\t\thtml: 'true',\n\t\t\t\ttrigger: 'hover',\n\t\t\t\tcontent: getFormInfoContent(property, '#' + context + formInfoFields[property])\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction getFormInfoContent(property, field) {\n\tvar content = window[property + 'FormInfoValues'][$(field).val()];\n\tif (content === undefined || content === null) {\n\t\treturn 'N/A';\n\t}\n\treturn content;\n}\n\nfunction formCategoryChanged(id) {\n\t// fill in the types\n\tvar options = $('#AttributeType').prop('options');\n\t$('option', $('#AttributeType')).remove();\n\t$.each(category_type_mapping[$('#AttributeCategory').val()], function(val, text) {\n\t\toptions[options.length] = new Option(text, val);\n\t});\n\t// enable the form element\n\t$('#AttributeType').prop('disabled', false);\n}\n\nfunction malwareCheckboxSetter(context) {\n\tidDiv = \"#\" + context + \"Category\" +'Div';\n\tvar value = $(\"#\" + context + \"Category\").val();  // get the selected value\n\t// set the malware checkbox if the category is in the zip types\n\t$(\"#\" + context + \"Malware\").prop('checked', formZipTypeValues[value] == \"true\");\n}\n\nfunction feedFormUpdate() {\n\t$('.optionalField').hide();\n\tswitch($('#FeedSourceFormat').val()) {\n\t\tcase 'freetext':\n\t\t\t$('#TargetDiv').show();\n\t\t\t$('#OverrideIdsDiv').show();\n\t\t\t$('#PublishDiv').show();\n\t\t\tif ($('#FeedTarget').val() != 0) {\n\t\t\t\t$('#TargetEventDiv').show();\n\t\t\t\t$('#DeltaMergeDiv').show();\n\t\t\t}\n\t\t\t$('#settingsCommonExcluderegexDiv').show();\n\t\t\tbreak;\n\t\tcase 'csv':\n\t\t\t$('#TargetDiv').show();\n\t\t\t$('#OverrideIdsDiv').show();\n\t\t\t$('#PublishDiv').show();\n\t\t\tif ($('#FeedTarget').val() != 0) {\n\t\t\t\t$('#TargetEventDiv').show();\n\t\t\t\t$('#DeltaMergeDiv').show();\n\t\t\t}\n\t\t\t$('#settingsCsvValueDiv').show();\n\t\t\t$('#settingsCsvDelimiterDiv').show();\n\t\t\t$('#settingsCommonExcluderegexDiv').show();\n\t\t\tbreak;\n\t}\n\tif ($('#FeedInputSource').val() == 'local') {\n\t\t$('#DeleteLocalFileDiv').show();\n\t} else {\n\t\t$('#DeleteLocalFileDiv').hide();\n\t}\n}\n\n$('.servers_default_role_checkbox').click(function() {\n\tvar id = $(this).data(\"id\");\n\tvar state = $(this).is(\":checked\");\n\t$(\".servers_default_role_checkbox\").not(this).attr('checked', false);\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: '/admin/roles/set_default/' + (state ? id : \"\"),\n\t});\n});\n\nfunction setContextFields() {\n\tif (showContext) {\n\t\t$('.context').show();\n\t\t$('#show_context').addClass(\"attribute_filter_text_active\");\n\t\t$('#show_context').removeClass(\"attribute_filter_text\");\n\t} else {\n\t\t$('.context').hide();\n\t\t$('#show_context').addClass(\"attribute_filter_text\");\n\t\t$('#show_context').removeClass(\"attribute_filter_text_active\");\n\t}\n}\n\nfunction toggleContextFields() {\n\tif (!showContext) {\n\t\tshowContext = true;\n\t} else {\n\t\tshowContext = false;\n\t}\n\tsetContextFields();\n}\n\nfunction checkOrphanedAttributes() {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tvar color = 'red';\n\t\t\tvar text = ' (Removal recommended)';\n\t\t\tif (data == '0') {\n\t\t\t\tcolor = 'green';\n\t\t\t\ttext = ' (OK)';\n\t\t\t}\n\t\t\t$(\"#orphanedAttributeCount\").html('<span class=\"' + color + '\">' + data + text + '</span>');\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/attributes/checkOrphanedAttributes/\",\n\t});\n}\n\nfunction checkAttachments() {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tvar color = 'red';\n\t\t\tvar text = ' (Bad links detected)';\n\t\t\tif (data !== undefined && data.trim() == '0') {\n\t\t\t\tcolor = 'green';\n\t\t\t\ttext = ' (OK)';\n\t\t\t}\n\t\t\t$(\"#orphanedFileCount\").html('<span class=\"' + color + '\">' + data + text + '</span>');\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/attributes/checkAttachments/\",\n\t});\n}\n\nfunction loadTagTreemap() {\n\t$.ajax({\n\t\tasync:true,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".treemapdiv\").html(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/users/tagStatisticsGraph\",\n\t});\n}\n\nfunction loadSightingsData(timestamp) {\n\turl = \"/sightings/toplist\";\n\tif (timestamp != undefined) {\n\t\turl = url + '/' + timestamp;\n\t}\n\t$.ajax({\n\t\tasync:true,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".sightingsdiv\").html(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: url,\n\t});\n}\n\nfunction quickEditEvent(id, field) {\n\t$.ajax({\n\t\tasync:true,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\"#\" + field + \"Field\").html(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/events/quickEdit/\" + id + \"/\" + field,\n\t});\n}\n\nfunction selectAllInbetween(last, current) {\n\tif (last === false || last == current) return false;\n\tif (last < current) {\n\t\tvar temp = current;\n\t\tcurrent = last;\n\t\tlast = temp;\n\t}\n\t$('.select_proposal, .select_attribute').each(function () {\n\t\tif ($(this).parent().data('position') > current && $(this).parent().data('position') < last) {\n\t\t\t$(this).prop('checked', true);\n\t\t}\n\t});\n}\n\n$('.galaxy-toggle-button').click(function() {\n\tvar element = $(this).data('toggle-type');\n\tif ($(this).children('span').hasClass('icon-minus')) {\n\t\t$(this).children('span').addClass('icon-plus');\n\t\t$(this).children('span').removeClass('icon-minus');\n\t\t$('#' + element + '_div').hide();\n\t} else {\n\t\t$(this).children('span').removeClass('icon-plus');\n\t\t$(this).children('span').addClass('icon-minus');\n\t\t$('#' + element + '_div').show();\n\t}\n});\n\n$('#addGalaxy').click(function() {\n\tgetPopup($(this).data('event-id'), 'galaxies', 'selectGalaxy');\n});\n\nfunction quickSubmitGalaxyForm(event_id, cluster_id) {\n\t$('#GalaxyTargetId').val(cluster_id);\n\t$('#GalaxySelectClusterForm').submit();\n\treturn false;\n}\n\nfunction checkAndSetPublishedInfo() {\n\tvar id = $('#hiddenSideMenuData').data('event-id');\n\t$.get( \"/events/checkPublishedStatus/\" + id, function(data) {\n\t\tif (data == 1) {\n\t\t\t$('.published').removeClass('hidden');\n\t\t\t$('.not-published').addClass('hidden');\n\t\t} else {\n\t\t\t$('.published').addClass('hidden');\n\t\t\t$('.not-published').removeClass('hidden');\n\t\t}\n\t});\n}\n\n$(document).keyup(function(e){\n    if (e.keyCode === 27) {\n    $(\"#gray_out\").fadeOut();\n\t\t$(\"#popover_form\").fadeOut();\n\t\t$(\"#screenshot_box\").fadeOut();\n\t\t$(\"#confirmation_box\").fadeOut();\n\t\t$(\".loading\").hide();\n\t\tresetForms();\n    }\n});\n\nfunction closeScreenshot() {\n\t$(\"#screenshot_box\").fadeOut();\n\t$(\"#gray_out\").fadeOut();\n}\n\nfunction loadSightingGraph(id, scope) {\n\t$.get( \"/sightings/viewSightings/\" + id + \"/\" + scope, function(data) {\n\t\t$(\"#sightingsData\").html(data);\n\t});\n}\n\nfunction checkRolePerms() {\n\tif ($(\"#RolePermission\").val() == '0' || $(\"#RolePermission\").val() == '1') {\n\t\t$('.readonlydisabled').prop('checked', false);\n\t\t$('.readonlydisabled').hide();\n\t} else {\n\t\t$('.readonlydisabled').show();\n\t\t$('.permFlags').show();\n\t}\n\tif ($(\"#RolePermSiteAdmin\").prop('checked')) {\n\t\t$('.checkbox').prop('checked', true);\n\t}\n}\n\n// clicking on an element with this class will select all of its contents in a\n// single click\n$('.quickSelect').click(function() {\n\tvar range = document.createRange();\n\tvar selection = window.getSelection();\n\trange.selectNodeContents(this);\n\tselection.removeAllRanges();\n\tselection.addRange(range);\n});\n\nfunction updateMISP() {\n\t$.get( \"/servers/update\", function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction submitMISPUpdate() {\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$('#gitResult').text(data);\n\t\t\t$('#gitResult').removeClass('hidden');\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/servers/update\",\n\t});\n}\n\n$(\".cortex-json\").click(function() {\n\tvar cortex_data = $(this).data('cortex-json');\n\tcortex_data = JSON.stringify(cortex_data, null, 2);\n\tvar popupHtml = '<pre class=\"simplepre\">' + cortex_data + '</pre>';\n\tpopupHtml += '<div class=\"close-icon useCursorPointer\" onClick=\"closeScreenshot();\"></div>';\n\t$('#screenshot_box').html(popupHtml);\n\t$('#screenshot_box').show();\n\t$('#screenshot_box').css({'padding': '5px'});\n\tleft = ($(window).width() / 2) - ($('#screenshot_box').width() / 2);\n\tif (($('#screenshot_box').height() + 250) > $(window).height()) {\n\t\t$('#screenshot_box').height($(window).height() - 250);\n\t\t$('#screenshot_box').css(\"overflow-y\", \"scroll\");\n\t\t$('#screenshot_box').css(\"overflow-x\", \"hidden\");\n\t}\n\t$('#screenshot_box').css({'left': left + 'px'});\n\t$(\"#gray_out\").fadeIn();\n});\n\n// Show $(id) if the enable parameter evaluates to true. Hide it otherwise\nfunction checkAndEnable(id, enable) {\n\tif (enable) {\n\t\t$(id).show();\n\t} else {\n\t\t$(id).hide();\n\t}\n}\n\n// Show and enable checkbox $(id) if the enable parameter evaluates to true. Hide and disable it otherwise.\nfunction checkAndEnableCheckbox(id, enable) {\n\tif (enable) {\n\t\t$(id).removeAttr(\"disabled\");\n\t\t$(id).prop('checked', true);\n\t} else {\n\t\t$(id).prop('checked', false);\n\t\t$(id).attr(\"disabled\", true);\n\t}\n}\n\nfunction enableDisableObjectRows(rows) {\n\trows.forEach(function(i) {\n\t\tif ($(\"#Attribute\" + i + \"ValueSelect\").length != 0) {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", true);\n\t\t} else if ($(\"#Attribute\" + i + \"Attachment\").length != 0) {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(\"#Attribute\" + i + \"Attachment\").val() != \"\");\n\t\t} else {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(\"#Attribute\" + i + \"Value\").val() != \"\");\n\t\t}\n\t\t$(\"#Attribute\" + i + \"Value\").bind('input propertychange', function() {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(this).val() != \"\");\n\t\t});\n\t\t$(\"#Attribute\" + i + \"Attachment\").on('change', function() {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(\"#Attribute\" + i + \"Attachment\").val() != \"\");\n\t\t});\n\t});\n}\n\nfunction objectReferenceInput() {\n\tvar types = [\"Attribute\", \"Object\"];\n\tfor (var type in types) {\n\t\tfor (var k in targetEvent[types[type]]) {\n\t\t\tif (targetEvent[types[type]][k]['uuid'] == $('#ObjectReferenceReferencedUuid').val()) {\n\t\t\t\t$('#targetSelect').val($('#ObjectReferenceReferencedUuid').val());\n\t\t\t\tchangeObjectReferenceSelectOption();\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction objectReferenceCheckForCustomRelationship() {\n\tvar relationship_type_field = $('#ObjectReferenceRelationshipTypeSelect option:selected');\n\tvar relationship_type = $(relationship_type_field).val();\n\tif (relationship_type == 'custom') {\n\t\t$('#ObjectReferenceRelationshipType').parent().removeClass('hidden');\n\t} else {\n\t\t$('#ObjectReferenceRelationshipType').parent().addClass('hidden');\n\t}\n}\n\nfunction changeObjectReferenceSelectOption() {\n\tvar object = $('#targetSelect option:selected');\n\tvar uuid = $(object).val();\n\t$('#ObjectReferenceReferencedUuid').val(uuid);\n\tvar type = $(object).data('type');\n\tif (type == \"Attribute\") {\n\t\t$('#targetData').html(\"\");\n\t\tfor (var k in targetEvent[type][uuid]) {\n\t\t\tif ($.inArray(k, ['uuid', 'category', 'type', 'value', 'to_ids']) !== -1) {\n\t\t\t\t$('#targetData').append('<div><span id=\"' + uuid + '_' + k + '_key\" class=\"bold\"></span>: <span id=\"' + uuid + '_' + k + '_data\"></span></div>');\n\t\t\t\t$('#' + uuid + '_' + k + '_key').text(k);\n\t\t\t\t$('#' + uuid + '_' + k + '_data').text(targetEvent[type][uuid][k]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$('#targetData').html(\"\");\n\t\tfor (var k in targetEvent[type][uuid]) {\n\t\t\tif (k == 'Attribute') {\n\t\t\t\t$('#targetData').append('<br /><div><span id=\"header\" class=\"bold\">Attributes:</span>');\n\t\t\t\tfor (attribute in targetEvent[type][uuid]['Attribute']) {\n\t\t\t\t\tfor (k2 in targetEvent[type][uuid]['Attribute'][attribute]) {\n\t\t\t\t\t\tif ($.inArray(k2, ['category', 'type', 'value', 'to_ids']) !== -1) {\n\t\t\t\t\t\t\t$('#targetData').append('<div class=\"indent\"><span id=\"' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_key\" class=\"bold\"></span>: <span id=\"' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_data\"></span></div>');\n\t\t\t\t\t\t\t$('#' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_key').text(k2);\n\t\t\t\t\t\t\t$('#' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_data').text(targetEvent[type][uuid]['Attribute'][attribute][k2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$('#targetData').append('<br />');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($.inArray(k, ['name', 'uuid', 'meta-category']) !== -1) {\n\t\t\t\t\t$('#targetData').append('<div><span id=\"' + uuid + '_' + k + '_key\" class=\"bold\"></span>: <span id=\"' + uuid + '_' + k + '_data\"></span></div>');\n\t\t\t\t\t$('#' + uuid + '_' + k + '_key').text(k);\n\t\t\t\t\t$('#' + uuid + '_' + k + '_data').text(targetEvent[type][uuid][k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n$('.add_object_attribute_row').click(function() {\n\tvar template_id = $(this).data('template-id');\n\tvar object_relation = $(this).data('object-relation');\n\tvar k = $('#last-row').data('last-row');\n\tvar k = k+1;\n\t$('#last-row').data('last-row', k);\n\turl = \"/objects/get_row/\" + template_id + \"/\" + object_relation + \"/\" + k;\n\t$.get(url, function(data) {\n\t\t$('#row_' + object_relation + '_expand').before($(data).fadeIn()).html();\n\t});\n});\n\n$('.quickToggleCheckbox').toggle(function() {\n\tvar url = $(this).data('checkbox-url');\n});\n\n(function(){\n    \"use strict\";\n    $(\".datepicker\").datepicker({\n        format: 'yyyy-mm-dd',\n    });\n}());\n"], "fixing_code": ["<?php\n/**\n * Application level Controller\n *\n * This file is application-wide controller file. You can put all\n * application-wide controller-related methods here.\n *\n * PHP 5\n *\n * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)\n * Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)\n *\n * Licensed under The MIT License\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)\n * @link          http://cakephp.org CakePHP(tm) Project\n * @package       app.Controller\n * @since         CakePHP(tm) v 0.2.9\n * @license       MIT License (http://www.opensource.org/licenses/mit-license.php)\n */\n\n// TODO GPG encryption has issues when keys are expired\n\nApp::uses('ConnectionManager', 'Model');\nApp::uses('Controller', 'Controller');\nApp::uses('File', 'Utility');\nApp::uses('RequestRearrangeTool', 'Tools');\n\n/**\n * Application Controller\n *\n * Add your application-wide methods in the class below, your controllers\n * will inherit them.\n *\n * @package       app.Controller\n * @link http://book.cakephp.org/2.0/en/controllers.html#the-app-controller\n *\n * @throws ForbiddenException // TODO Exception\n */\nclass AppController extends Controller {\n\n\tpublic $defaultModel = '';\n\n\tpublic $debugMode = false;\n\n\tpublic $helpers = array('Utility');\n\n\tprivate $__queryVersion = '24';\n\tpublic $pyMispVersion = '2.4.82';\n\tpublic $phpmin = '5.6.5';\n\tpublic $phprec = '7.0.16';\n\n\t// Used for _isAutomation(), a check that returns true if the controller & action combo matches an action that is a non-xml and non-json automation method\n\t// This is used to allow authentication via headers for methods not covered by _isRest() - as that only checks for JSON and XML formats\n\tpublic $automationArray = array(\n\t\t'events' => array('csv', 'nids', 'hids', 'xml', 'restSearch', 'stix', 'updateGraph', 'downloadOpenIOCEvent'),\n\t\t'attributes' => array('text', 'downloadAttachment', 'returnAttributes', 'restSearch', 'rpz', 'bro'),\n\t);\n\n\tpublic function __construct($id = false, $table = null, $ds = null) {\n\t\tparent::__construct($id, $table, $ds);\n\n\t\t$name = get_class($this);\n\t\t$name = str_replace('sController', '', $name);\n\t\t$name = str_replace('Controller', '', $name);\n\t\t$this->defaultModel = $name;\n\t}\n\n\tpublic $components = array(\n\t\t\t'Session',\n\t\t\t'Auth' => array(\n\t\t\t\t'authError' => 'Unauthorised access.',\n\t\t\t\t'loginRedirect' => array('controller' => 'users', 'action' => 'routeafterlogin'),\n\t\t\t\t'logoutRedirect' => array('controller' => 'users', 'action' => 'login', 'admin' => false),\n\t\t\t\t'authenticate' => array(\n\t\t\t\t\t'Form' => array(\n\t\t\t\t\t\t'passwordHasher' => 'Blowfish',\n\t\t\t\t\t\t'fields' => array(\n\t\t\t\t\t\t\t'username' => 'email'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\t'Security',\n\t\t\t'ACL',\n\t\t\t'RestResponse'\n\t);\n\n\tprivate function __isApiFunction($controller, $action) {\n\t\tif (isset($this->automationArray[$controller]) && in_array($action, $this->automationArray[$controller])) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic function beforeFilter() {\n\t\t// check for a supported datasource configuration\n\t\t$dataSourceConfig = ConnectionManager::getDataSource('default')->config;\n\t\tif (!isset($dataSourceConfig['encoding'])) {\n\t\t\t$db = ConnectionManager::getDataSource('default');\n\t\t\t$db->setConfig(array('encoding' => 'utf8'));\n\t\t\tConnectionManager::create('default', $db->config);\n\t\t}\n\t\t$dataSource = $dataSourceConfig['datasource'];\n\t\tif ($dataSource != 'Database/Mysql' && $dataSource != 'Database/Postgres') {\n\t\t\tthrow new Exception('datasource not supported: ' . $dataSource);\n\t\t}\n\n\t\t$this->set('queryVersion', $this->__queryVersion);\n\t\t$this->loadModel('User');\n\t\t$auth_user_fields = $this->User->describeAuthFields();\n\n\t\t//if fresh installation (salt empty) generate a new salt\n\t\tif (!Configure::read('Security.salt')) {\n\t\t\t$this->loadModel('Server');\n\t\t\t$this->Server->serverSettingsSaveValue('Security.salt', $this->User->generateRandomPassword(32));\n\t\t}\n\t\t// Check if the instance has a UUID, if not assign one.\n\t\tif (!Configure::read('MISP.uuid')) {\n\t\t\t$this->loadModel('Server');\n\t\t\t$this->Server->serverSettingsSaveValue('MISP.uuid', CakeText::uuid());\n\t\t}\n\t\t// check if Apache provides kerberos authentication data\n\t\t$envvar = Configure::read('ApacheSecureAuth.apacheEnv');\n\t\tif (isset($_SERVER[$envvar])) {\n\t\t\t$this->Auth->className = 'ApacheSecureAuth';\n\t\t\t$this->Auth->authenticate = array(\n\t\t\t\t'Apache' => array(\n\t\t\t\t\t// envvar = field returned by Apache if user is authenticated\n\t\t\t\t\t'fields' => array('username' => 'email', 'envvar' => $envvar),\n\t\t\t\t\t'userFields' => $auth_user_fields\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t$this->Auth->authenticate['Form']['userFields'] = $auth_user_fields;\n\t\t}\n\t\t$versionArray = $this->{$this->modelClass}->checkMISPVersion();\n\t\t$this->mispVersion = implode('.', array_values($versionArray));\n\n\t\t$this->Security->blackHoleCallback = 'blackHole';\n\n\t\t// Let us access $baseurl from all views\n\t\t$baseurl = Configure::read('MISP.baseurl');\n\t\tif (substr($baseurl, -1) == '/') {\n\t\t\t// if the baseurl has a trailing slash, remove it. It can lead to issues with the CSRF protection\n\t\t\t$baseurl = rtrim($baseurl, '/');\n\t\t\tConfigure::write('MISP.baseurl', $baseurl);\n\t\t}\n\t\t$this->set('baseurl', h($baseurl));\n\n\t\t// send users away that are using ancient versions of IE\n\t\t// Make sure to update this if IE 20 comes out :)\n\t\tif (isset($_SERVER['HTTP_USER_AGENT'])) {\n\t\t\tif (preg_match('/(?i)msie [2-8]/',$_SERVER['HTTP_USER_AGENT']) && !strpos($_SERVER['HTTP_USER_AGENT'], 'Opera')) throw new MethodNotAllowedException('You are using an unsecure and outdated version of IE, please download Google Chrome, Mozilla Firefox or update to a newer version of IE. If you are running IE9 or newer and still receive this error message, please make sure that you are not running your browser in compatibility mode. If you still have issues accessing the site, get in touch with your administration team at ' . Configure::read('MISP.contact'));\n\t\t}\n\t\t$userLoggedIn = false;\n\t\tif (Configure::read('Plugin.CustomAuth_enable')) $userLoggedIn = $this->__customAuthentication($_SERVER);\n\t\tif (!$userLoggedIn) {\n\t\t\t// REST authentication\n\t\t\tif ($this->_isRest() || $this->_isAutomation()) {\n\t\t\t\t// disable CSRF for REST access\n\t\t\t\tif (array_key_exists('Security', $this->components))\n\t\t\t\t\t$this->Security->csrfCheck = false;\n\t\t\t\t// Authenticate user with authkey in Authorization HTTP header\n\t\t\t\tif (!empty($_SERVER['HTTP_AUTHORIZATION'])) {\n\t\t\t\t\t$found_misp_auth_key = false;\n\t\t\t\t\t$authentication = explode(',', $_SERVER['HTTP_AUTHORIZATION']);\n\t\t\t\t\t$user = false;\n\t\t\t\t\tforeach ($authentication as $auth_key) {\n\t\t\t\t\t\tif (preg_match('/^[a-zA-Z0-9]{40}$/', trim($auth_key))) {\n\t\t\t\t\t\t\t$found_misp_auth_key = true;\n\t\t\t\t\t\t\t$temp = $this->checkAuthUser(trim($auth_key));\n\t\t\t\t\t\t\tif ($temp) {\n\t\t\t\t\t\t\t\t$user['User'] = $this->checkAuthUser(trim($auth_key));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($found_misp_auth_key) {\n\t\t\t\t\t\tif ($user) {\n\t\t\t\t\t\t\tunset($user['User']['gpgkey']);\n\t\t\t\t\t\t\tunset($user['User']['certif_public']);\n\t\t\t\t\t\t\t// User found in the db, add the user info to the session\n\t\t\t\t\t\t\tif (Configure::read('MISP.log_auth')) {\n\t\t\t\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t\t\t\t'org' => $user['User']['Organisation']['name'],\n\t\t\t\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t\t\t\t'model_id' => $user['User']['id'],\n\t\t\t\t\t\t\t\t\t\t'email' => $user['User']['email'],\n\t\t\t\t\t\t\t\t\t\t'action' => 'auth',\n\t\t\t\t\t\t\t\t\t\t'title' => 'Successful authentication using API key',\n\t\t\t\t\t\t\t\t\t\t'change' => 'HTTP method: ' . $_SERVER['REQUEST_METHOD'] . PHP_EOL . 'Target: ' . $this->here,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$this->Session->renew();\n\t\t\t\t\t\t\t$this->Session->write(AuthComponent::$sessionKey, $user['User']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// User not authenticated correctly\n\t\t\t\t\t\t\t// reset the session information\n\t\t\t\t\t\t\t$this->Session->destroy();\n\t\t\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t\t\t'org' => 'SYSTEM',\n\t\t\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t\t\t'model_id' => 0,\n\t\t\t\t\t\t\t\t\t'email' => 'SYSTEM',\n\t\t\t\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t\t\t\t'title' => 'Failed authentication using API key (' . trim($auth_key) . ')',\n\t\t\t\t\t\t\t\t\t'change' => null,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t\t\tthrow new ForbiddenException('Authentication failed. Please make sure you pass the API key of an API enabled user along in the Authorization header.');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tunset($user);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($this->Auth->user() == null) throw new ForbiddenException('Authentication failed. Please make sure you pass the API key of an API enabled user along in the Authorization header.');\n\t\t\t} else if (!$this->Session->read(AuthComponent::$sessionKey)) {\n\t\t\t\t// load authentication plugins from Configure::read('Security.auth')\n\t\t\t\t$auth = Configure::read('Security.auth');\n\t\t\t\tif ($auth) {\n\t\t\t\t\t$this->Auth->authenticate = array_merge($auth, $this->Auth->authenticate);\n\t\t\t\t\tif ($this->Auth->startup($this)) {\n\t\t\t\t\t\t$user = $this->Auth->user();\n\t\t\t\t\t\tif ($user) {\n\t\t\t\t\t\t\t// User found in the db, add the user info to the session\n\t\t\t\t\t\t\t$this->Session->renew();\n\t\t\t\t\t\t\t$this->Session->write(AuthComponent::$sessionKey, $user);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tunset($user);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tunset($auth);\n\t\t\t}\n\t\t}\n\t\t$this->set('externalAuthUser', $userLoggedIn);\n\t\t// user must accept terms\n\t\t//\n\t\t// grab the base path from our base url for use in the following checks\n\t\t$base_dir = parse_url($baseurl, PHP_URL_PATH);\n\n\t\t// if MISP is running out of the web root already, just set this variable to blank so we don't wind up with '//' in the following if statements\n\t\tif ($base_dir == '/') {\n\t\t\t$base_dir = '';\n\t\t}\n\n\t\tif ($this->Auth->user()) {\n\t\t\t// update script\n\t\t\t$this->{$this->modelClass}->runUpdates();\n\t\t\t$user = $this->Auth->user();\n\t\t\tif (!isset($user['force_logout']) || $user['force_logout']) {\n\t\t\t\t$this->loadModel('User');\n\t\t\t\t$this->User->id = $this->Auth->user('id');\n\t\t\t\t$this->User->saveField('force_logout', false);\n\t\t\t}\n\t\t\tif ($this->Auth->user('disabled')) {\n\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t$this->Log->create();\n\t\t\t\t$log = array(\n\t\t\t\t\t\t'org' => $this->Auth->user('Organisation')['name'],\n\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t'model_id' => $this->Auth->user('id'),\n\t\t\t\t\t\t'email' => $this->Auth->user('email'),\n\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t'title' => 'Login attempt by disabled user.',\n\t\t\t\t\t\t'change' => null,\n\t\t\t\t);\n\t\t\t\t$this->Log->save($log);\n\t\t\t\t$this->Auth->logout();\n\t\t\t\tif ($this->_isRest()) {\n\t\t\t\t\tthrow new ForbiddenException('Authentication failed. Your user account has been disabled.');\n\t\t\t\t} else {\n\t\t\t\t\t$this->Session->setFlash('Your user account has been disabled.');\n\t\t\t\t\t$this->redirect(array('controller' => 'users', 'action' => 'login', 'admin' => false));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!($this->params['controller'] === 'users' && $this->params['action'] === 'login')) $this->redirect(array('controller' => 'users', 'action' => 'login', 'admin' => false));\n\t\t}\n\n\t\t// check if MISP is live\n\t\tif ($this->Auth->user() && !Configure::read('MISP.live')) {\n\t\t\t$role = $this->getActions();\n\t\t\tif (!$role['perm_site_admin']) {\n\t\t\t\t$message = Configure::read('MISP.maintenance_message');\n\t\t\t\tif (empty($message)) {\n\t\t\t\t\t$this->loadModel('Server');\n\t\t\t\t\t$message = $this->Server->serverSettings['MISP']['maintenance_message']['value'];\n\t\t\t\t}\n\t\t\t\tif (strpos($message, '$email') && Configure::read('MISP.email')) {\n\t\t\t\t\t$email = Configure::read('MISP.email');\n\t\t\t\t\t$message = str_replace('$email', $email, $message);\n\t\t\t\t}\n\t\t\t\t$this->Session->setFlash($message);\n\t\t\t\t$this->Auth->logout();\n\t\t\t\tthrow new MethodNotAllowedException($message);//todo this should pb be removed?\n\t\t\t} else {\n\t\t\t\t$this->Session->setFlash('Warning: MISP is currently disabled for all users. Enable it in Server Settings (Administration -> Server Settings -> MISP tab -> live)');\n\t\t\t}\n\t\t}\n\n\t\tif ($this->Session->check(AuthComponent::$sessionKey)) {\n\t\t\tif (!empty(Configure::read('MISP.terms_file')) && !$this->Auth->user('termsaccepted') && (!in_array($this->request->here, array($base_dir.'/users/terms', $base_dir.'/users/logout', $base_dir.'/users/login', $base_dir.'/users/downloadTerms')))) {\n\t\t\t\tif ($this->_isRest()) throw new MethodNotAllowedException('You have not accepted the terms of use yet, please log in via the web interface and accept them.');\n\t\t\t\t$this->redirect(array('controller' => 'users', 'action' => 'terms', 'admin' => false));\n\t\t\t} else if ($this->Auth->user('change_pw') && (!in_array($this->request->here, array($base_dir.'/users/terms', $base_dir.'/users/change_pw', $base_dir.'/users/logout', $base_dir.'/users/login')))) {\n\t\t\t\tif ($this->_isRest()) throw new MethodNotAllowedException('Your user account is expecting a password change, please log in via the web interface and change it before proceeding.');\n\t\t\t\t$this->redirect(array('controller' => 'users', 'action' => 'change_pw', 'admin' => false));\n\t\t\t} else if (!$this->_isRest() && !($this->params['controller'] == 'news' && $this->params['action'] == 'index') && (!in_array($this->request->here, array($base_dir.'/users/terms', $base_dir.'/users/change_pw', $base_dir.'/users/logout', $base_dir.'/users/login')))) {\n\t\t\t\t$newsread = $this->User->field('newsread', array('User.id' => $this->Auth->user('id')));\n\t\t\t\t$this->loadModel('News');\n\t\t\t\t$latest_news = $this->News->field('date_created', array(), 'date_created DESC');\n\t\t\t\tif ($latest_news && $newsread < $latest_news) $this->redirect(array('controller' => 'news', 'action' => 'index', 'admin' => false));\n\t\t\t}\n\t\t}\n\t\tunset($base_dir);\n\n\t\t// We don't want to run these role checks before the user is logged in, but we want them available for every view once the user is logged on\n\t\t// instead of using checkAction(), like we normally do from controllers when trying to find out about a permission flag, we can use getActions()\n\t\t// getActions returns all the flags in a single SQL query\n\t\tif ($this->Auth->user()) {\n\t\t\t$versionArray = $this->{$this->modelClass}->checkMISPVersion();\n\t\t\t$this->mispVersionFull = implode('.', array_values($versionArray));\n\t\t\t$this->set('mispVersion', implode('.', array($versionArray['major'], $versionArray['minor'], 0)));\n\t\t\t$this->set('mispVersionFull', $this->mispVersionFull);\n\t\t\t$role = $this->getActions();\n\t\t\t$this->set('me', $this->Auth->user());\n\t\t\t$this->set('isAdmin', $role['perm_admin']);\n\t\t\t$this->set('isSiteAdmin', $role['perm_site_admin']);\n\t\t\t$this->set('isAclAdd', $role['perm_add']);\n\t\t\t$this->set('isAclModify', $role['perm_modify']);\n\t\t\t$this->set('isAclModifyOrg', $role['perm_modify_org']);\n\t\t\t$this->set('isAclPublish', $role['perm_publish']);\n\t\t\t$this->set('isAclDelegate', $role['perm_delegate']);\n\t\t\t$this->set('isAclSync', $role['perm_sync']);\n\t\t\t$this->set('isAclAdmin', $role['perm_admin']);\n\t\t\t$this->set('isAclAudit', $role['perm_audit']);\n\t\t\t$this->set('isAclAuth', $role['perm_auth']);\n\t\t\t$this->set('isAclRegexp', $role['perm_regexp_access']);\n\t\t\t$this->set('isAclTagger', $role['perm_tagger']);\n\t\t\t$this->set('isAclTagEditor', $role['perm_tag_editor']);\n\t\t\t$this->set('isAclTemplate', $role['perm_template']);\n\t\t\t$this->set('isAclSharingGroup', $role['perm_sharing_group']);\n\t\t\t$this->set('isAclSighting', isset($role['perm_sighting']) ? $role['perm_sighting'] : false);\n\t\t\t$this->userRole = $role;\n\t\t} else {\n\t\t\t$this->set('me', false);\n\t\t}\n\t\tif ($this->_isSiteAdmin()) {\n\t\t\tif (Configure::read('Session.defaults') == 'database') {\n\t\t\t\t$db = ConnectionManager::getDataSource('default');\n\t\t\t\t$sqlResult = $db->query('SELECT COUNT(id) AS session_count FROM cake_sessions WHERE expires < ' . time() . ';');\n\t\t\t\tif (isset($sqlResult[0][0]['session_count']) && $sqlResult[0][0]['session_count'] > 1000) {\n\t\t\t\t\t$this->loadModel('Server');\n\t\t\t\t\t$this->Server->updateDatabase('cleanSessionTable');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Configure::read('site_admin_debug') && (Configure::read('debug') < 2)) {\n\t\t\t\tConfigure::write('debug', 1);\n\t\t\t}\n\t\t}\n\n\t\t$this->debugMode = 'debugOff';\n\t\tif (Configure::read('debug') > 1) $this->debugMode = 'debugOn';\n\t\t$this->set('loggedInUserName', $this->__convertEmailToName($this->Auth->user('email')));\n\t\t$this->set('debugMode', $this->debugMode);\n\t\t$notifications = $this->{$this->modelClass}->populateNotifications($this->Auth->user());\n\t\t$this->set('notifications', $notifications);\n\t\t$this->ACL->checkAccess($this->Auth->user(), Inflector::variable($this->request->params['controller']), $this->action);\n\t}\n\n\tpublic function queryACL($debugType='findMissingFunctionNames', $content = false) {\n\t\t$this->autoRender = false;\n\t\t$this->layout = false;\n\t\t$validCommands = array('printAllFunctionNames', 'findMissingFunctionNames', 'printRoleAccess');\n\t\tif (!in_array($debugType, $validCommands)) throw new MethodNotAllowedException('Invalid function call.');\n\t\t$this->set('data', $this->ACL->$debugType($content));\n\t\t$this->set('flags', JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT);\n\t\t$this->response->type('json');\n\t\t$this->render('/Servers/json/simple');\n\t}\n\n\tprivate function __convertEmailToName($email) {\n\t\t$name = explode('@', $email);\n\t\t$name = explode('.', $name[0]);\n\t\tforeach ($name as $key => $value) $name[$key] = ucfirst($value);\n\t\t$name = implode(' ', $name);\n\t\treturn $name;\n\t}\n\n\tpublic function blackhole($type) {\n\t\tif ($type === 'csrf') throw new BadRequestException(__d('cake_dev', $type));\n\t\tthrow new BadRequestException(__d('cake_dev', 'The request has been black-holed'));\n\t}\n\n\tpublic $userRole = null;\n\n\tprotected function _isJson($data=false) {\n\t\tif ($data) return (json_decode($data) != NULL) ? true : false;\n\t\treturn $this->request->header('Accept') === 'application/json' || $this->RequestHandler->prefers() === 'json';\n\t}\n\n\tprotected function _isRest() {\n\t\t$api = $this->__isApiFunction($this->request->params['controller'], $this->request->params['action']);\n\t\treturn (isset($this->RequestHandler) && ($api || $this->RequestHandler->isXml() || $this->_isJson()));\n\t}\n\n\tprotected function _isAutomation() {\n\t\tforeach ($this->automationArray as $controllerName => $controllerActions) {\n\t\t\tif ($this->params['controller'] == $controllerName && in_array($this->params['action'], $controllerActions)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n/**\n * Convert an array to the same array but with the values also as index instead of an interface_exists\n */\n\tprotected function _arrayToValuesIndexArray($oldArray) {\n\t\t$newArray = Array();\n\t\tforeach ($oldArray as $value)\n\t\t$newArray[$value] = $value;\n\t\treturn $newArray;\n\t}\n\n\t// checks if the currently logged user is an administrator (an admin that can manage the users and events of his own organisation)\n\tprotected function _isAdmin() {\n\t\tif ($this->userRole['perm_site_admin'] || $this->userRole['perm_admin']) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// checks if the currently logged user is a site administrator (an admin that can manage any user or event on the instance and create / edit the roles).\n\tprotected function _isSiteAdmin() {\n\t\treturn $this->userRole['perm_site_admin'];\n\t}\n\n\tprotected function _checkOrg() {\n\t\treturn $this->Auth->user('org_id');\n\t}\n\n\t// pass an action to this method for it to check the active user's access to the action\n\tpublic function checkAction($action = 'perm_sync') {\n\t\t$this->loadModel('Role');\n\t\t$this->Role->recursive = -1;\n\t\t$role = $this->Role->findById($this->Auth->user('role_id'));\n\t\tif ($role['Role'][$action]) return true;\n\t\treturn false;\n\t}\n\n\t// returns the role of the currently authenticated user as an array, used to set the permission variables for views in the AppController's beforeFilter() method\n\tpublic function getActions() {\n\t\t$this->loadModel('Role');\n\t\t$this->Role->recursive = -1;\n\t\t$role = $this->Role->findById($this->Auth->user('role_id'));\n\t\treturn $role['Role'];\n\t}\n\n\tpublic function checkAuthUser($authkey) {\n\t\t$this->loadModel('User');\n\t\t$user = $this->User->getAuthUserByUuid($authkey);\n\t\tif (empty($user)) return false;\n\t\tif (!$user['Role']['perm_auth']) return false;\n\t\tif ($user['Role']['perm_site_admin']) $user['siteadmin'] = true;\n\t\treturn $user;\n\t}\n\n\tpublic function checkExternalAuthUser($authkey) {\n\t\t$this->loadModel('User');\n\t\t$user = $this->User->getAuthUserByExternalAuth($authkey);\n\t\tif (empty($user)) return false;\n\t\tif ($user['Role']['perm_site_admin']) $user['siteadmin'] = true;\n\t\treturn $user;\n\t}\n\n\tpublic function generateCount() {\n\t\tif (!self::_isSiteAdmin() || !$this->request->is('post')) throw new NotFoundException();\n\t\t// do one SQL query with the counts\n\t\t// loop over events, update in db\n\t\t$this->loadModel('Attribute');\n\t\t$events = $this->Attribute->find('all', array(\n\t\t\t'recursive' => -1,\n\t\t\t'fields' => array('event_id', 'count(event_id) as attribute_count'),\n\t\t\t'group' => array('Attribute.event_id'),\n\t\t\t'order' => array('Attribute.event_id ASC'),\n\t\t));\n\t\tforeach ($events as $k => $event) {\n\t\t\t$this->Event->read(null, $event['Attribute']['event_id']);\n\t\t\t$this->Event->set('attribute_count', $event[0]['attribute_count']);\n\t\t\t$this->Event->save();\n\t\t}\n\t\t$this->Session->setFlash(__('All done. attribute_count generated from scratch for ' . (isset($k) ? $k : 'no') . ' events.'));\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function pruneDuplicateUUIDs() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Attribute');\n\t\t$duplicates = $this->Attribute->find('all', array(\n\t\t\t'fields' => array('Attribute.uuid', 'count(*) as occurance'),\n\t\t\t'recursive' => -1,\n\t\t\t'group' => array('Attribute.uuid HAVING COUNT(*) > 1'),\n\t\t));\n\t\t$counter = 0;\n\t\tforeach ($duplicates as $duplicate) {\n\t\t\t$attributes = $this->Attribute->find('all', array(\n\t\t\t\t'recursive' => -1,\n\t\t\t\t'conditions' => array('uuid' => $duplicate['Attribute']['uuid'])\n\t\t\t));\n\t\t\tforeach ($attributes as $k => $attribute) {\n\t\t\t\tif ($k > 0) {\n\t\t\t\t\t$attribute['Attribute']['uuid'] = CakeText::uuid();\n\t\t\t\t\t$this->Attribute->save($attribute);\n\t\t\t\t\t$counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$this->Server->updateDatabase('makeAttributeUUIDsUnique');\n\t\t$this->Session->setFlash('Done. Assigned new UUIDs to ' . $counter . ' attribute(s).');\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function removeDuplicateEvents() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Event');\n\t\t$duplicates = $this->Event->find('all', array(\n\t\t\t\t'fields' => array('Event.uuid', 'count(*) as occurance'),\n\t\t\t\t'recursive' => -1,\n\t\t\t\t'group' => array('Event.uuid HAVING COUNT(*) > 1'),\n\t\t));\n\t\t$counter = 0;\n\n\t\t// load this so we can remove the blacklist item that will be created, this is the one case when we do not want it.\n\t\tif (Configure::read('MISP.enableEventBlacklisting') !== false) $this->EventBlacklist = ClassRegistry::init('EventBlacklist');\n\n\t\tforeach ($duplicates as $duplicate) {\n\t\t\t$events = $this->Event->find('all', array(\n\t\t\t\t\t'recursive' => -1,\n\t\t\t\t\t'conditions' => array('uuid' => $duplicate['Event']['uuid'])\n\t\t\t));\n\t\t\tforeach ($events as $k => $event) {\n\t\t\t\tif ($k > 0) {\n\t\t\t\t\t$uuid = $event['Event']['uuid'];\n\t\t\t\t\t$this->Event->delete($event['Event']['id']);\n\t\t\t\t\t$counter++;\n\t\t\t\t\t// remove the blacklist entry that we just created with the event deletion, if the feature is enabled\n\t\t\t\t\t// We do not want to block the UUID, since we just deleted a copy\n\t\t\t\t\tif (Configure::read('MISP.enableEventBlacklisting') !== false) {\n\t\t\t\t\t\t$this->EventBlacklist->deleteAll(array('EventBlacklist.event_uuid' => $uuid));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$this->Server->updateDatabase('makeEventUUIDsUnique');\n\t\t$this->Session->setFlash('Done. Removed ' . $counter . ' duplicate events.');\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function updateDatabase($command) {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Server');\n\t\t$this->Server->updateDatabase($command);\n\t\t$this->Session->setFlash('Done.');\n\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t}\n\n\tpublic function upgrade2324() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Server');\n\t\tif (!Configure::read('MISP.background_jobs')) {\n\t\t\t$this->Server->upgrade2324($this->Auth->user('id'));\n\t\t\t$this->Session->setFlash('Done. For more details check the audit logs.');\n\t\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t\t} else {\n\t\t\t$job = ClassRegistry::init('Job');\n\t\t\t$job->create();\n\t\t\t$data = array(\n\t\t\t\t\t'worker' => 'default',\n\t\t\t\t\t'job_type' => 'upgrade_24',\n\t\t\t\t\t'job_input' => 'Old database',\n\t\t\t\t\t'status' => 0,\n\t\t\t\t\t'retries' => 0,\n\t\t\t\t\t'org_id' => 0,\n\t\t\t\t\t'message' => 'Job created.',\n\t\t\t);\n\t\t\t$job->save($data);\n\t\t\t$jobId = $job->id;\n\t\t\t$process_id = CakeResque::enqueue(\n\t\t\t\t\t'default',\n\t\t\t\t\t'AdminShell',\n\t\t\t\t\tarray('jobUpgrade24', $jobId, $this->Auth->user('id')),\n\t\t\t\t\ttrue\n\t\t\t);\n\t\t\t$job->saveField('process_id', $process_id);\n\t\t\t$this->Session->setFlash(__('Job queued. You can view the progress if you navigate to the active jobs view (administration -> jobs).'));\n\t\t\t$this->redirect(array('controller' => 'pages', 'action' => 'display', 'administration'));\n\t\t}\n\t}\n\n\tprivate function __preAuthException($message) {\n\t\t$this->set('debugMode', (Configure::read('debug') > 1) ? 'debugOn' : 'debugOff');\n\t\t$this->set('me', array());\n\t\tthrow new ForbiddenException($message);\n\t}\n\n\tprivate function __customAuthentication($server) {\n\t\t$result = false;\n\t\tif (Configure::read('Plugin.CustomAuth_enable')) {\n\t\t\t$header = Configure::read('Plugin.CustomAuth_header') ? Configure::read('Plugin.CustomAuth_header') : 'Authorization';\n\t\t\t$header = strtoupper($header);\n\t\t\t$authName = Configure::read('Plugin.CustomAuth_name') ? Configure::read('Plugin.CustomAuth_name') : 'External authentication';\n\t\t\t$headerNamespace = Configure::read('Plugin.CustomAuth_use_header_namespace') ? (Configure::read('Plugin.CustomAuth_header_namespace') ? Configure::read('Plugin.CustomAuth_header_namespace') : 'HTTP_') : '';\n\t\t\tif (isset($server[$headerNamespace . $header]) && !empty($server[$headerNamespace . $header])) {\n\t\t\t\tif (Configure::read('Plugin.CustomAuth_only_allow_source') && Configure::read('Plugin.CustomAuth_only_allow_source') !== $server['REMOTE_ADDR']) {\n\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t'org' => 'SYSTEM',\n\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t'model_id' => 0,\n\t\t\t\t\t\t\t'email' => 'SYSTEM',\n\t\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t\t'title' => 'Failed authentication using external key (' . trim($server[$headerNamespace . $header]) . ') - the user has not arrived from the expected address. Instead the request came from: ' . $server['REMOTE_ADDR'],\n\t\t\t\t\t\t\t'change' => null,\n\t\t\t\t\t);\n\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t$this->__preAuthException($authName . ' authentication failed. Contact your MISP support for additional information at: ' . Configure::read('MISP.contact'));\n\t\t\t\t}\n\t\t\t\t$temp = $this->checkExternalAuthUser($server[$headerNamespace . $header]);\n\t\t\t\t$user['User'] = $temp;\n\t\t\t\tif ($user['User']) {\n\t\t\t\t\tunset($user['User']['gpgkey']);\n\t\t\t\t\tunset($user['User']['certif_public']);\n\t\t\t\t\t$this->Session->renew();\n\t\t\t\t\t$this->Session->write(AuthComponent::$sessionKey, $user['User']);\n\t\t\t\t\tif (Configure::read('MISP.log_auth')) {\n\t\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t'org' => $user['User']['Organisation']['name'],\n\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t'model_id' => $user['User']['id'],\n\t\t\t\t\t\t\t'email' => $user['User']['email'],\n\t\t\t\t\t\t\t'action' => 'auth',\n\t\t\t\t\t\t\t'title' => 'Successful authentication using ' . $authName . ' key',\n\t\t\t\t\t\t\t'change' => 'HTTP method: ' . $_SERVER['REQUEST_METHOD'] . PHP_EOL . 'Target: ' . $this->here,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\t}\n\t\t\t\t\t$result = true;\n\t\t\t\t} else {\n\t\t\t\t\t// User not authenticated correctly\n\t\t\t\t\t// reset the session information\n\t\t\t\t\t$this->Log = ClassRegistry::init('Log');\n\t\t\t\t\t$this->Log->create();\n\t\t\t\t\t$log = array(\n\t\t\t\t\t\t\t'org' => 'SYSTEM',\n\t\t\t\t\t\t\t'model' => 'User',\n\t\t\t\t\t\t\t'model_id' => 0,\n\t\t\t\t\t\t\t'email' => 'SYSTEM',\n\t\t\t\t\t\t\t'action' => 'auth_fail',\n\t\t\t\t\t\t\t'title' => 'Failed authentication using external key (' . trim($server[$headerNamespace . $header]) . ')',\n\t\t\t\t\t\t\t'change' => null,\n\t\t\t\t\t);\n\t\t\t\t\t$this->Log->save($log);\n\t\t\t\t\tif (Configure::read('CustomAuth_required')) {\n\t\t\t\t\t\t$this->Session->destroy();\n\t\t\t\t\t\t$this->__preAuthException($authName . ' authentication failed. Contact your MISP support for additional information at: ' . Configure::read('MISP.contact'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $result;\n\t}\n\n\tpublic function cleanModelCaches() {\n\t\tif (!$this->_isSiteAdmin() || !$this->request->is('post')) throw new MethodNotAllowedException();\n\t\t$this->loadModel('Server');\n\t\t$this->Server->cleanCacheFiles();\n\t\t$this->Session->setFlash('Caches cleared.');\n\t\t$this->redirect(array('controller' => 'servers', 'action' => 'serverSettings', 'diagnostics'));\n\t}\n}\n", "String.prototype.ucfirst = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1);\n}\n\nfunction deleteObject(type, action, id, event) {\n\tvar destination = 'attributes';\n\tvar alternateDestinations = ['shadow_attributes', 'template_elements', 'taxonomies', 'objects', 'object_references'];\n\tif (alternateDestinations.indexOf(type) > -1) destination = type;\n\telse destination = type;\n\turl = \"/\" + destination + \"/\" + action + \"/\" + id;\n\t$.get(url, function(data) {\n\t\topenPopup(\"#confirmation_box\");\n\t\t$(\"#confirmation_box\").html(data);\n\t});\n}\n\nfunction quickDeleteSighting(id, rawId, context) {\n\turl = \"/sightings/quickDelete/\" + id + \"/\" + rawId + \"/\" + context;\n\t$.get(url, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction publishPopup(id, type) {\n\tvar action = \"alert\";\n\tif (type == \"publish\") action = \"publish\";\n\tvar destination = 'attributes';\n\t$.get( \"/events/\" + action + \"/\" + id, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction delegatePopup(id) {\n\tsimplePopup(\"/event_delegations/delegateEvent/\" + id);\n}\n\nfunction genericPopup(url, popupTarget) {\n\t$.get(url, function(data) {\n\t\t$(popupTarget).html(data);\n\t\t$(popupTarget).fadeIn();\n\t\tleft = ($(window).width() / 2) - ($(popupTarget).width() / 2);\n\t\t$(popupTarget).css({'left': left + 'px'});\n\t\t$(\"#gray_out\").fadeIn();\n\t});\n}\n\nfunction screenshotPopup(screenshotData, title) {\n\tpopupHtml = '<img src=\"' + screenshotData + '\" id=\"screenshot-image\" title=\"' + title + '\" />';\n\tpopupHtml += '<div class=\"close-icon useCursorPointer\" onClick=\"closeScreenshot();\"></div>';\n\t$('#screenshot_box').html(popupHtml);\n\t$('#screenshot_box').show();\n\tleft = ($(window).width() / 2) - ($('#screenshot-image').width() / 2);\n\t$('#screenshot_box').css({'left': left + 'px'});\n\t$(\"#gray_out\").fadeIn();\n}\n\nfunction submitPublish(id, type) {\n\t$(\"#PromptForm\").submit();\n}\n\nfunction editTemplateElement(type, id) {\n\tsimplePopup(\"/template_elements/edit/\" + type + \"/\" + id);\n}\n\nfunction cancelPrompt(isolated) {\n\tif (isolated == undefined) {\n\t\t$(\"#gray_out\").fadeOut();\n\t}\n\t$(\"#confirmation_box\").fadeOut();\n\t$(\"#confirmation_box\").empty();\n}\n\nfunction submitDeletion(context_id, action, type, id) {\n\tvar context = 'event';\n\tif (type == 'template_elements') context = 'template';\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tupdateIndex(context_id, context);\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/\" + type + \"/\" + action + \"/\" + id,\n\t});\n}\n\nfunction removeSighting(caller) {\n\tvar id = $(caller).data('id');\n\tvar rawid = $(caller).data('rawid');\n\tvar context = $(caller).data('context');\n\tif (context != 'attribute') {\n\t\tcontext = 'event';\n\t}\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t\tvar org = \"/\" + $('#org_id').text();\n\t\t\tupdateIndex(id, 'event');\n\t\t\t$.get( \"/sightings/listSightings/\" + rawid + \"/\" + context + org, function(data) {\n\t\t\t\t$(\"#sightingsData\").html(data);\n\t\t\t});\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/sightings/quickDelete/\" + id + \"/\" + rawid + \"/\" + context,\n\t});\n}\n\nfunction toggleSetting(e, setting, id) {\n\te.preventDefault();\n\te.stopPropagation();\n\tswitch (setting) {\n\tcase 'warninglist_enable':\n\t\tformID = '#WarninglistIndexForm';\n\t\tdataDiv = '#WarninglistData';\n\t\treplacementForm = '/warninglists/getToggleField/';\n\t\tsearchString = 'enabled';\n\t\tbreak;\n\tcase 'favourite_tag':\n\t\tformID = '#FavouriteTagIndexForm';\n\t\tdataDiv = '#FavouriteTagData';\n\t\treplacementForm = '/favourite_tags/getToggleField/';\n\t\tsearchString = 'Adding';\n\t\tbreak;\n\tcase 'activate_object_template':\n\t\tformID = '#ObjectTemplateIndexForm';\n\t\tdataDiv = '#ObjectTemplateData';\n\t\treplacementForm = '/ObjectTemplates/getToggleField/';\n\t\tsearchString = 'activated';\n\t\tbreak;\n\t}\n\t$(dataDiv).val(id);\n\tvar formData = $(formID).serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tvar result = data;\n\t\t\tif (result.success) {\n\t\t\t\tvar setting = false;\n\t\t\t\tif (result.success.indexOf(searchString) > -1) setting = true;\n\t\t\t\t$('#checkBox_' + id).prop('checked', setting);\n\t\t\t}\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$.get(replacementForm, function(data) {\n\t\t\t\t$('#hiddenFormDiv').html(data);\n\t\t\t});\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\terror:function() {\n\t\t\thandleGenericAjaxResponse({'saved':false, 'errors':['Request failed due to an unexpected error.']});\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl: $(formID).attr('action'),\n\t});\n}\n\nfunction initiatePasswordReset(id) {\n\t$.get( \"/users/initiatePasswordReset/\" + id, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction submitPasswordReset(id) {\n\tvar formData = $('#PromptForm').serialize();\n\tvar url = \"/users/initiatePasswordReset/\" + id;\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:url,\n\t});\n}\n\nfunction submitMessageForm(url, form, target) {\n\tif (!$('#PostMessage').val()) {\n\t\tshowMessage(\"fail\", \"Cannot submit empty message.\");\n\t} else {\n\t\tsubmitGenericForm(url, form, target);\n\t}\n}\n\nfunction submitGenericForm(url, form, target) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: $('#' + form).serialize(),\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$('#top').html(data);\n\t\t\tshowMessage(\"success\", \"Message added.\");\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:url,\n\t});\n}\n\nfunction acceptObject(type, id, event) {\n\tname = '#ShadowAttribute_' + id + '_accept';\n\tvar formData = $(name).serialize();\n\t$.ajax({\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tupdateIndex(event, 'event');\n\t\t\teventUnpublish();\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/shadow_attributes/accept/\" + id,\n\t});\n}\n\nfunction toggleCorrelation(id) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: $('#PromptForm').serialize(),\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t\t$(\"#correlation_toggle_\" + id).prop('checked', !$(\"#correlation_toggle_\" + id).is(':checked'));\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:'/attributes/toggleCorrelation/' + id,\n\t});\n}\n\nfunction eventUnpublish() {\n\t$('.publishButtons').show();\n\t$('.exportButtons').hide();\n\t$('.published').hide();\n\t$('.notPublished').show();\n}\n\nfunction updateIndex(id, context, newPage) {\n\tif (typeof newPage !== 'undefined') page = newPage;\n\tvar url, div;\n\tif (context == 'event') {\n\t\turl = currentUri;\n\t\tdiv = \"#attributes_div\";\n\t}\n\tif (context == 'template') {\n\t\turl = \"/template_elements/index/\" + id;\n\t\tdiv = \"#templateElements\";\n\t}\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(div).html(data);\n\t\t},\n\t\turl: url,\n\t});\n}\n\nfunction updateAttributeFieldOnSuccess(name, type, id, field, event) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\tif (field != 'timestamp') {\n\t\t\t\t$(\".loading\").show();\n\t\t\t}\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\tif (field != 'timestamp') {\n\t\t\t\t$(\".loading\").hide();\n\t\t\t\t$(name + '_solid').html(data);\n\t\t\t\t$(name + '_placeholder').empty();\n\t\t\t\t$(name + '_solid').show();\n\t\t\t} else {\n\t\t\t\t$('#' + type + '_' + id + '_' + 'timestamp_solid').html(data);\n\t\t\t}\n\t\t},\n\t\turl:\"/attributes/fetchViewValue/\" + id + \"/\" + field,\n\t});\n}\n\nfunction activateField(type, id, field, event) {\n\tresetForms();\n\tif (type == 'denyForm') return;\n\tvar objectType = 'attributes';\n\tif (type == 'ShadowAttribute') {\n\t\tobjectType = 'shadow_attributes';\n\t}\n\tvar name = '#' + type + '_' + id + '_' + field;\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(name + '_placeholder').html(data);\n\t\t\tpostActivationScripts(name, type, id, field, event);\n\t\t},\n\t\turl:\"/\" + objectType + \"/fetchEditForm/\" + id + \"/\" + field,\n\t});\n}\n\nfunction submitQuickTag(form) {\n\t$('#' + form).submit();\n}\n\n//if someone clicks an inactive field, replace it with the hidden form field. Also, focus it and bind a focusout event, so that it gets saved if the user clicks away.\n//If a user presses enter, submit the form\nfunction postActivationScripts(name, type, id, field, event) {\n\t$(name + '_field').focus();\n\tinputFieldButtonActive(name + '_field');\n\tif (field == 'value' || field == 'comment') {\n\t\tautoresize($(name + '_field')[0]);\n\t\t$(name + '_field').on('keyup', function () {\n\t\t    autoresize(this);\n\t\t});\n\t}\n\t$(name + '_form').submit(function(e){\n\t\te.preventDefault();\n\t\tsubmitForm(type, id, field, event);\n\t\treturn false;\n\t});\n\n\t$(name + '_form').bind(\"focusout\", function() {\n\t\tinputFieldButtonPassive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"focusin\", function(){\n\t\tinputFieldButtonActive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"keydown\", function(e) {\n\t\tif (e.ctrlKey && (e.keyCode == 13 || e.keyCode == 10)) {\n\t\t\tsubmitForm(type, id, field, event);\n\t\t}\n\t});\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-accept').bind('click', function() {\n\t\tsubmitForm(type, id, field, event);\n\t});\n\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-decline').bind('click', function() {\n\t\tresetForms();\n\t});\n\n\t$(name + '_solid').hide();\n}\n\nfunction addSighting(type, attribute_id, event_id, page) {\n\t$('#Sighting_' + attribute_id + '_type').val(type);\n\t$.ajax({\n\t\tdata: $('#Sighting_' + attribute_id).closest(\"form\").serialize(),\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t\tvar result = data;\n\t\t\tif (result.saved == true) {\n\t\t\t\t$('.sightingsCounter').each(function( counter ) {\n\t\t\t\t\t$(this).html(parseInt($(this).html()) + 1);\n\t\t\t\t});\n\t\t\t\tupdateIndex(event_id, 'event');\n\t\t\t}\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Request failed for an unknown reason.');\n\t\t\tupdateIndex(context, 'event');\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/sightings/add/\" + attribute_id\n\t});\n}\n\nfunction resetForms() {\n\t$('.inline-field-solid').show();\n\t$('.inline-field-placeholder').empty();\n}\n\nfunction inputFieldButtonActive(selector) {\n\t$(selector).closest('.inline-input-container').children('.inline-input-accept').removeClass('inline-input-passive').addClass('inline-input-active');\n\t$(selector).closest('.inline-input-container').children('.inline-input-decline').removeClass('inline-input-passive').addClass('inline-input-active');\n}\n\nfunction inputFieldButtonPassive(selector) {\n\t$(selector).closest('.inline-input-container').children('.inline-input-accept').addClass('inline-input-passive').removeClass('inline-input-active');\n\t$(selector).closest('.inline-input-container').children('.inline-input-daecline').addClass('inline-input-passive').removeClass('inline-input-active');\n}\n\nfunction autoresize(textarea) {\n    textarea.style.height = '20px';\n    textarea.style.height = (textarea.scrollHeight) + 'px';\n}\n\n// submit the form - this can be triggered by unfocusing the activated form field or by submitting the form (hitting enter)\n// after the form is submitted, intercept the response and act on it\nfunction submitForm(type, id, field, context) {\n\tvar object_type = 'attributes';\n\tvar action = \"editField\";\n\tvar name = '#' + type + '_' + id + '_' + field;\n\tif (type == 'ShadowAttribute') {\n\t\tobject_type = 'shadow_attributes';\n\t}\n\t$.ajax({\n\t\tdata: $(name + '_field').closest(\"form\").serialize(),\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleAjaxEditResponse(data, name, type, id, field, context);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Request failed for an unknown reason.');\n\t\t\tupdateIndex(context, 'event');\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/\" + object_type + \"/\" + action + \"/\" + id\n\t});\n\t$(name + '_field').unbind(\"keyup\");\n\t$(name + '_form').unbind(\"focusout\");\n\treturn false;\n};\n\nfunction quickSubmitTagForm(event_id, tag_id) {\n\t$('#EventTag').val(tag_id);\n\t$.ajax({\n\t\tdata: $('#EventSelectTagForm').closest(\"form\").serialize(),\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tloadEventTags(event_id);\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Could not add tag.');\n\t\t\tloadEventTags(event_id);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\"#popover_form\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/events/addTag/\" + event_id\n\t});\n\treturn false;\n}\n\nfunction quickSubmitAttributeTagForm(attribute_id, tag_id) {\n\t$('#AttributeTag').val(tag_id);\n\tif (attribute_id == 'selected') {\n\t\t$('#AttributeAttributeIds').val(getSelected());\n\t}\n\t$.ajax({\n\t\tdata: $('#AttributeSelectTagForm').closest(\"form\").serialize(),\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tif (attribute_id == 'selected') {\n\t\t\t\tupdateIndex(0, 'event');\n\t\t\t} else {\n\t\t\t\tloadAttributeTags(attribute_id);\n\t\t\t}\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Could not add tag.');\n\t\t\tloadAttributeTags(attribute_id);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\"#popover_form\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/attributes/addTag/\" + attribute_id\n\t});\n\treturn false;\n}\n\nfunction handleAjaxEditResponse(data, name, type, id, field, event) {\n\tresponseArray = data;\n\tif (type == 'Attribute') {\n\t\tif (responseArray.saved) {\n\t\t\tshowMessage('success', responseArray.success);\n\t\t\tupdateAttributeFieldOnSuccess(name, type, id, field, event);\n\t\t\tupdateAttributeFieldOnSuccess(name, type, id, 'timestamp', event);\n\t\t\teventUnpublish();\n\t\t} else {\n\t\t\tshowMessage('fail', 'Validation failed: ' + responseArray.errors.value);\n\t\t\tupdateAttributeFieldOnSuccess(name, type, id, field, event);\n\t\t}\n\t}\n\tif (type == 'ShadowAttribute') {\n\t\tupdateIndex(event, 'event');\n\t}\n\tif (responseArray.hasOwnProperty('check_publish')) {\n\t\tcheckAndSetPublishedInfo();\n\t}\n}\n\nfunction handleGenericAjaxResponse(data) {\n\tif (typeof data == 'string') {\n\t\tresponseArray = JSON.parse(data);\n\t} else {\n\t\tresponseArray = data;\n\t}\n\tif (responseArray.saved) {\n\t\tshowMessage('success', responseArray.success);\n\t\tif (responseArray.hasOwnProperty('check_publish')) {\n\t\t\tcheckAndSetPublishedInfo();\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tshowMessage('fail', responseArray.errors);\n\t\treturn false;\n\t}\n}\n\nfunction toggleAllAttributeCheckboxes() {\n\tif ($(\".select_all\").is(\":checked\")) {\n\t\t$(\".select_attribute\").prop(\"checked\", true);\n\t\t$(\".select_proposal\").prop(\"checked\", true);\n\t} else {\n\t\t$(\".select_attribute\").prop(\"checked\", false);\n\t\t$(\".select_proposal\").prop(\"checked\", false);\n\t}\n}\n\nfunction toggleAllCheckboxes() {\n\tif ($(\".select_all\").is(\":checked\")) {\n\t\t$(\".select\").prop(\"checked\", true);\n\t} else {\n\t\t$(\".select\").prop(\"checked\", false);\n\t}\n}\n\nfunction toggleAllTaxonomyCheckboxes() {\n\tif ($(\".select_all\").is(\":checked\")) {\n\t\t$(\".select_taxonomy\").prop(\"checked\", true);\n\t} else {\n\t\t$(\".select_taxonomy\").prop(\"checked\", false);\n\t}\n}\n\nfunction attributeListAnyAttributeCheckBoxesChecked() {\n\tif ($('.select_attribute:checked').length > 0) $('.mass-select').removeClass('hidden');\n\telse $('.mass-select').addClass('hidden');\n}\n\nfunction eventListCheckboxesChecked() {\n\tif ($('.select:checked').length > 0) $('.mass-select').removeClass('hidden');\n\telse $('.mass-select').addClass('hidden');\n}\n\nfunction attributeListAnyProposalCheckBoxesChecked() {\n\tif ($('.select_proposal:checked').length > 0) $('.mass-proposal-select').removeClass('hidden');\n\telse $('.mass-proposal-select').addClass('hidden');\n}\n\nfunction taxonomyListAnyCheckBoxesChecked() {\n\tif ($('.select_taxonomy:checked').length > 0) $('.mass-select').show();\n\telse $('.mass-select').hide();\n}\n\nfunction multiSelectDeleteEvents() {\n\tvar selected = [];\n\t$(\".select\").each(function() {\n\t\tif ($(this).is(\":checked\")) {\n\t\t\tvar temp = $(this).data(\"id\");\n\t\t\tif (temp != null) {\n\t\t\t\tselected.push(temp);\n\t\t\t}\n\t\t}\n\t});\n\t$.get(\"/events/delete/\" + JSON.stringify(selected), function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction multiSelectAction(event, context) {\n\tvar settings = {\n\t\t\tdeleteAttributes: {\n\t\t\t\tconfirmation: \"Are you sure you want to delete all selected attributes?\",\n\t\t\t\tcontroller: \"attributes\",\n\t\t\t\tcamelCase: \"Attribute\",\n\t\t\t\talias: \"attribute\",\n\t\t\t\taction: \"delete\",\n\t\t\t},\n\t\t\tacceptProposals: {\n\t\t\t\tconfirmation: \"Are you sure you want to accept all selected proposals?\",\n\t\t\t\tcontroller: \"shadow_attributes\",\n\t\t\t\tcamelCase: \"ShadowAttribute\",\n\t\t\t\talias: \"proposal\",\n\t\t\t\taction: \"accept\",\n\t\t\t},\n\t\t\tdiscardProposals: {\n\t\t\t\tconfirmation: \"Are you sure you want to discard all selected proposals?\",\n\t\t\t\tcontroller: \"shadow_attributes\",\n\t\t\t\tcamelCase: \"ShadowAttribute\",\n\t\t\t\talias: \"proposal\",\n\t\t\t\taction: \"discard\",\n\t\t\t},\n\t};\n\tvar answer = confirm(\"Are you sure you want to \" + settings[context][\"action\"] + \" all selected \" + settings[context][\"alias\"] + \"s?\");\n\tif (answer) {\n\t\tvar selected = [];\n\t\t$(\".select_\" + settings[context][\"alias\"]).each(function() {\n\t\t\tif ($(this).is(\":checked\")) {\n\t\t\t\tvar temp= $(this).data(\"id\");\n\t\t\t\tselected.push(temp);\n\t\t\t}\n\t\t});\n\t\t$('#' + settings[context][\"camelCase\"] + 'Ids' + settings[context][\"action\"].ucfirst()).attr('value', JSON.stringify(selected));\n\t\tvar formData = $('#' + settings[context][\"action\"] + '_selected').serialize();\n\t\t$.ajax({\n\t\t\tdata: formData,\n\t\t\tcache: false,\n\t\t\ttype:\"POST\",\n\t\t\turl:\"/\" + settings[context][\"controller\"] + \"/\" + settings[context][\"action\"] + \"Selected/\" + event,\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\tupdateIndex(event, 'event');\n\t\t\t\tvar result = handleGenericAjaxResponse(data);\n\t\t\t\tif (settings[context][\"action\"] != \"discard\" && result == true) eventUnpublish();\n\t\t\t},\n\t\t});\n\t}\n\treturn false;\n}\n\nfunction editSelectedAttributes(event) {\n\tsimplePopup(\"/attributes/editSelected/\" + event);\n}\n\nfunction addSelectedTaxonomies(taxonomy) {\n\t$.get(\"/taxonomies/taxonomyMassConfirmation/\"+taxonomy, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction submitMassTaxonomyTag() {\n\t$('#PromptForm').submit();\n}\n\nfunction submitMassEventDelete() {\n\t$('#PromptForm').trigger('submit');\n\tevent.preventDefault();\n}\n\nfunction getSelected() {\n\tvar selected = [];\n\t$(\".select_attribute\").each(function() {\n\t\tif ($(this).is(\":checked\")) {\n\t\t\tvar test = $(this).data(\"id\");\n\t\t\tselected.push(test);\n\t\t}\n\t});\n\treturn JSON.stringify(selected);\n}\n\nfunction getSelectedTaxonomyNames() {\n\tvar selected = [];\n\t$(\".select_taxonomy\").each(function() {\n\t\tif ($(this).is(\":checked\")) {\n\t\t\tvar row = $(this).data(\"id\");\n\t\t\tvar temp = $('#tag_' + row).html();\n\t\t\ttemp = $(\"<div/>\").html(temp).text();\n\t\t\tselected.push(temp);\n\t\t}\n\t});\n\t$('#TaxonomyNameList').val(JSON.stringify(selected));\n}\n\nfunction loadEventTags(id) {\n\t$.ajax({\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".eventTagContainer\").html(data);\n\t\t},\n\t\turl:\"/tags/showEventTag/\" + id,\n\t});\n}\n\nfunction removeEventTag(event, tag) {\n\tvar answer = confirm(\"Are you sure you want to remove this tag from the event?\");\n\tif (answer) {\n\t\tvar formData = $('#removeTag_' + tag).serialize();\n\t\t$.ajax({\n\t\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t\t$(\".loading\").show();\n\t\t\t},\n\t\t\tdata: formData,\n\t\t\ttype:\"POST\",\n\t\t\tcache: false,\n\t\t\turl:\"/events/removeTag/\" + event + '/' + tag,\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\tloadEventTags(event);\n\t\t\t\thandleGenericAjaxResponse(data);\n\t\t\t},\n\t\t\tcomplete:function() {\n\t\t\t\t$(\".loading\").hide();\n\t\t\t}\n\t\t});\n\t}\n\treturn false;\n}\n\nfunction loadAttributeTags(id) {\n\t$.ajax({\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\"#Attribute_\"+id+\"_tr .attributeTagContainer\").html(data);\n\t\t},\n\t\turl:\"/tags/showAttributeTag/\" + id\n\t});\n}\n\nfunction removeObjectTagPopup(context, object, tag) {\n\t$.get( \"/\" + context + \"s/removeTag/\" + object + '/' + tag, function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction removeObjectTag(context, object, tag) {\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\ttype:\"POST\",\n\t\tcache: false,\n\t\turl:\"/\" + context.toLowerCase() + \"s/removeTag/\" + object + '/' + tag,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\tif (context == 'Attribute') {\n\t\t\t\tloadAttributeTags(object);\n\t\t\t} else {\n\t\t\t\tloadEventTags(object);\n\t\t\t}\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t}\n\t});\n\treturn false;\n}\n\nfunction clickCreateButton(event, type) {\n\tvar destination = 'attributes';\n\tif (type == 'Proposal') destination = 'shadow_attributes';\n\tsimplePopup(\"/\" + destination + \"/add/\" + event);\n}\n\nfunction submitPopoverForm(context_id, referer, update_context_id) {\n\tvar url = null;\n\tvar context = 'event';\n\tvar contextNamingConvention = 'Attribute';\n\tvar closePopover = true;\n\tswitch (referer) {\n\t\tcase 'add':\n\t\t\turl = \"/attributes/add/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'propose':\n\t\t\turl = \"/shadow_attributes/add/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'massEdit':\n\t\t\turl = \"/attributes/editSelected/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'addTextElement':\n\t\t\turl = \"/templateElements/add/text/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontextNamingConvention = 'TemplateElementText';\n\t\t\tbreak;\n\t\tcase 'editTextElement':\n\t\t\turl = \"/templateElements/edit/text/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontext_id = update_context_id;\n\t\t\tcontextNamingConvention = 'TemplateElementText';\n\t\t\tbreak;\n\t\tcase 'addAttributeElement':\n\t\t\turl = \"/templateElements/add/attribute/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontextNamingConvention = 'TemplateElementAttribute';\n\t\t\tbreak;\n\t\tcase 'editAttributeElement':\n\t\t\turl = \"/templateElements/edit/attribute/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontext_id = update_context_id;\n\t\t\tcontextNamingConvention = 'TemplateElementAttribute';\n\t\t\tbreak;\n\t\tcase 'addFileElement':\n\t\t\turl = \"/templateElements/add/file/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontextNamingConvention = 'TemplateElementFile';\n\t\t\tbreak;\n\t\tcase 'editFileElement':\n\t\t\turl = \"/templateElements/edit/file/\" + context_id;\n\t\t\tcontext = 'template';\n\t\t\tcontext_id = update_context_id;\n\t\t\tcontextNamingConvention = 'TemplateElementFile';\n\t\t\tbreak;\n\t\tcase 'replaceAttributes':\n\t\t\turl = \"/attributes/attributeReplace/\" + context_id;\n\t\t\tbreak;\n\t\tcase 'addSighting':\n\t\t\turl = \"/sightings/add/\" + context_id;\n\t\t\tclosePopover = false;\n\t\t\tbreak;\n\t\tcase 'addObjectReference':\n\t\t\turl = \"/objectReferences/add/\" + context_id;\n\t\t\tbreak;\n\t}\n\tif (url !== null) {\n\t\t$.ajax({\n\t\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t\t$(\".loading\").show();\n\t\t\t\tif (closePopover) {\n\t\t\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\t\t\t$(\"#popover_form\").fadeOut();\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: $(\"#submitButton\").closest(\"form\").serialize(),\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\tif (closePopover) {\n\t\t\t\t\tvar result = handleAjaxPopoverResponse(data, context_id, url, referer, context, contextNamingConvention);\n\t\t\t\t}\n\t\t\t\tif (referer == 'addSighting') {\n\t\t\t\t\tupdateIndex(update_context_id, 'event');\n\t\t\t\t\t$.get( \"/sightings/listSightings/\" + id + \"/attribute\", function(data) {\n\t\t\t\t\t\t$(\"#sightingsData\").html(data);\n\t\t\t\t\t});\n\t\t\t\t\t$('.sightingsToggle').removeClass('btn-primary');\n\t\t\t\t\t$('.sightingsToggle').addClass('btn-inverse');\n\t\t\t\t\t$('#sightingsListAllToggle').removeClass('btn-inverse');\n\t\t\t\t\t$('#sightingsListAllToggle').addClass('btn-primary');\n\t\t\t\t}\n\t\t\t\tif (context == 'event' && (referer == 'add' || referer == 'massEdit' || referer == 'replaceAttributes' || referer == 'addObjectReference')) eventUnpublish();\n\t\t\t\t$(\".loading\").hide();\n\t\t\t},\n\t\t\ttype:\"post\",\n\t\t\turl:url\n\t\t});\n\t}\n\treturn false;\n};\n\nfunction handleAjaxPopoverResponse(response, context_id, url, referer, context, contextNamingConvention) {\n\tresponseArray = response;\n\tvar message = null;\n\tif (responseArray.saved) {\n\t\tupdateIndex(context_id, context);\n\t\tif (responseArray.success) {\n\t\t\tshowMessage(\"success\", responseArray.success);\n\t\t}\n\t\tif (responseArray.errors) {\n\t\t\tshowMessage(\"fail\", responseArray.errors);\n\t\t}\n\t} else {\n\t\tvar savedArray = saveValuesForPersistance();\n\t\t$.ajax({\n\t\t\tasync:true,\n\t\t\tdataType:\"html\",\n\t\t\tsuccess:function (data, textStatus) {\n\t\t\t\t$(\"#popover_form\").html(data);\n\t\t\t\topenPopup(\"#popover_form\");\n\t\t\t\tvar error_context = context.charAt(0).toUpperCase() + context.slice(1);\n\t\t\t\thandleValidationErrors(responseArray.errors, context, contextNamingConvention);\n\t\t\t\tif (!$.isEmptyObject(responseArray)) {\n\t\t\t\t\t$(\"#formWarning\").show();\n\t\t\t\t\t$(\"#formWarning\").html('The object(s) could not be saved. Please, try again.');\n\t\t\t\t}\n\t\t\t\trecoverValuesFromPersistance(savedArray);\n\t\t\t\t$(\".loading\").hide();\n\t\t\t},\n\t\t\turl:url\n\t\t});\n\t}\n}\n\n//before we update the form (in case the action failed), we want to retrieve the data from every field, so that we can set the fields in the new form that we fetch\nfunction saveValuesForPersistance() {\n\tvar formPersistanceArray = new Array();\n\tfor (i = 0; i < fieldsArray.length; i++) {\n\t\tformPersistanceArray[fieldsArray[i]] = $('#' + fieldsArray[i]).val();\n\t}\n\treturn formPersistanceArray;\n}\n\nfunction recoverValuesFromPersistance(formPersistanceArray) {\n\tfor (i = 0; i < fieldsArray.length; i++) {\n\t\t$('#' + fieldsArray[i]).val(formPersistanceArray[fieldsArray[i]]);\n\t}\n}\n\nfunction handleValidationErrors(responseArray, context, contextNamingConvention) {\n\tfor (var k in responseArray) {\n\t\tvar elementName = k.charAt(0).toUpperCase() + k.slice(1);\n\t\t$(\"#\" + contextNamingConvention + elementName).parent().addClass(\"error\");\n\t\t$(\"#\" + contextNamingConvention + elementName).parent().append(\"<div class=\\\"error-message\\\">\" + responseArray[k] + \"</div>\");\n\t}\n}\n\nfunction toggleHistogramType(type, old) {\n\tvar done = false;\n\told.forEach(function(entry) {\n\t\tif (type == entry) {\n\t\t\tdone = true;\n\t\t\told.splice(old.indexOf(entry), 1);\n\t\t}\n\t});\n\tif (done == false) old.push(type);\n\tupdateHistogram(JSON.stringify(old));\n}\n\nfunction updateHistogram(selected) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#histogram\").html(data);\n\t\t},\n\t\turl:\"/users/histogram/\" + selected,\n\t});\n}\n\nfunction showMessage(success, message, context) {\n\tif (typeof context !== \"undefined\") {\n\t\t$(\"#ajax_\" + success, window.parent.document).html(message);\n\t\tvar duration = 1000 + (message.length * 40);\n\t\t$(\"#ajax_\" + success + \"_container\", window.parent.document).fadeIn(\"slow\");\n\t\t$(\"#ajax_\" + success + \"_container\", window.parent.document).delay(duration).fadeOut(\"slow\");\n\t}\n\t$(\"#ajax_\" + success).html(message);\n\tvar duration = 1000 + (message.length * 40);\n\t$(\"#ajax_\" + success + \"_container\").fadeIn(\"slow\");\n\t$(\"#ajax_\" + success + \"_container\").delay(duration).fadeOut(\"slow\");\n}\n\nfunction cancelPopoverForm() {\n\t$(\"#gray_out\").fadeOut();\n\t$(\"#popover_form\").fadeOut();\n\t$(\"#screenshot_box\").fadeOut();\n\t$(\"#confirmation_box\").fadeOut();\n\t$('#gray_out').fadeOut();\n\t$('#popover_form').fadeOut();\n}\n\nfunction activateTagField() {\n\t$(\"#addTagButton\").hide();\n\t$(\"#addTagField\").show();\n}\n\nfunction tagFieldChange() {\n\tif ($(\"#addTagField :selected\").val() > 0) {\n\t\tvar selected_id = $(\"#addTagField :selected\").val();\n\t\tvar selected_text = $(\"#addTagField :selected\").text();\n\t\tif ($.inArray(selected_id, selectedTags)==-1) {\n\t\t\tselectedTags.push(selected_id);\n\t\t\tappendTemplateTag(selected_id);\n\t\t}\n\t}\n\t$(\"#addTagButton\").show();\n\t$(\"#addTagField\").hide();\n}\n\nfunction appendTemplateTag(selected_id) {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#tags\").append(data);\n\t\t},\n\t\turl:\"/tags/viewTag/\" + selected_id,\n\t});\n\tupdateSelectedTags();\n}\n\nfunction addAllTags(tagArray) {\n\tparsedTagArray = JSON.parse(tagArray);\n\tparsedTagArray.forEach(function(tag) {\n\t\tappendTemplateTag(tag);\n\t});\n}\n\nfunction removeTemplateTag(id, name) {\n\tselectedTags.forEach(function(tag) {\n\t\tif (tag == id) {\n\t\t\tvar index = selectedTags.indexOf(id);\n\t\t\tif (index > -1) {\n\t\t\t\tselectedTags.splice(index, 1);\n\t\t\t\tupdateSelectedTags();\n\t\t\t}\n\t\t}\n\t});\n\t$('#tag_bubble_' + id).remove();\n}\n\nfunction updateSelectedTags() {\n\t$('#hiddenTags').attr(\"value\", JSON.stringify(selectedTags));\n}\n\nfunction saveElementSorting(order) {\n\t$.ajax({\n\t\tdata: order,\n\t\tdataType:\"json\",\n\t\tcontentType: \"application/json\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/templates/saveElementSorting/\",\n\t});\n}\n\nfunction templateAddElementClicked(id) {\n\tsimplePopup(\"/template_elements/templateElementAddChoices/\" + id);\n}\n\nfunction templateAddElement(type, id) {\n\tsimplePopup(\"/template_elements/add/\" + type + \"/\" + id);\n}\n\nfunction templateUpdateAvailableTypes() {\n\t$(\"#innerTypes\").empty();\n\tvar type = $(\"#TemplateElementAttributeType option:selected\").text();\n\tvar complex = $('#TemplateElementAttributeComplex:checked').val();\n\tif (complex && type != 'Select Type') {\n\t\tcurrentTypes.forEach(function(entry) {\n\t\t\t$(\"#innerTypes\").append(\"<div class=\\\"templateTypeBox\\\" id=\\\"\" + entry + \"TypeBox\\\">\" + entry + \"</div>\");\n\t\t});\n\t\t$('#outerTypes').show();\n\t}\n\telse $('#outerTypes').hide();\n}\n\nfunction populateTemplateTypeDropdown() {\n\tvar cat = $(\"#TemplateElementAttributeCategory option:selected\").text();\n\tcurrentTypes = [];\n\tif (cat == 'Select Category') {\n\t\t$('#TemplateElementAttributeType').html(\"<option>Select Type</option>\");\n\t} else {\n\t\tvar complex = $('#TemplateElementAttributeComplex:checked').val();\n\t\tif (cat in typeGroupCategoryMapping) {\n\t\t\t$('#TemplateElementAttributeType').html(\"<option>Select Type</option>\");\n\t\t\ttypeGroupCategoryMapping[cat].forEach(function(entry) {\n\t\t\t\t$('#TemplateElementAttributeType').append(\"<option>\" + entry + \"</option>\");\n\t\t\t});\n\t\t} else {\n\t\t\tcomplex = false;\n\t\t}\n\t\tif (!complex) {\n\t\t\t$('#TemplateElementAttributeType').html(\"<option>Select Type</option>\");\n\t\t\tcategoryTypes[cat].forEach(function(entry) {\n\t\t\t\t$('#TemplateElementAttributeType').append(\"<option>\" + entry + \"</option>\");\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction templateElementAttributeTypeChange() {\n\tvar complex = $('#TemplateElementAttributeComplex:checked').val();\n\tvar type = $(\"#TemplateElementAttributeType option:selected\").text();\n\tcurrentTypes = [];\n\tif (type != 'Select Type') {\n\t\tif (complex) {\n\t\t\tcomplexTypes[type][\"types\"].forEach(function(entry) {\n\t\t\t\tcurrentTypes.push(entry);\n\t\t\t});\n\t\t} else {\n\t\t\tcurrentTypes.push(type);\n\t\t}\n\t} else {\n\t\tcurrentTypes = [];\n\t}\n\t$(\"#typeJSON\").html(JSON.stringify(currentTypes));\n\ttemplateUpdateAvailableTypes();\n}\n\nfunction templateElementAttributeCategoryChange(category) {\n\tif (category in typeGroupCategoryMapping) {\n\t\t$('#complexToggle').show();\n\t} else {\n\t\t$('#complexToggle').hide();\n\t}\n\tif (category != 'Select Type') {\n\t\tpopulateTemplateTypeDropdown();\n\t}\n\ttemplateUpdateAvailableTypes();\n}\n\nfunction templateElementFileCategoryChange(category) {\n\tif (category == '') {\n\t\t$(\"#TemplateElementFileMalware\")[0].disabled = true;\n\t\t$(\"#TemplateElementFileMalware\")[0].checked = false;\n\t} else {\n\t\tif (categoryArray[category].length == 2) {\n\t\t\t$(\"#TemplateElementFileMalware\")[0].disabled = false;\n\t\t\t$(\"#TemplateElementFileMalware\")[0].checked = true;\n\t\t} else {\n\t\t\t$(\"#TemplateElementFileMalware\")[0].disabled = true;\n\t\t\tif (categoryArray[category] == 'attachment') $(\"#TemplateElementFileMalware\")[0].checked = false;\n\t\t\telse $(\"#TemplateElementFileMalware\")[0].checked = true;\n\t\t}\n\t}\n}\n\nfunction openPopup(id) {\n\tvar window_height = $(window).height();\n\tvar popup_height = $(id).height();\n\tif (window_height < popup_height) {\n\t\t$(id).css(\"top\", 0);\n\t\t$(id).css(\"height\", window_height);\n\t\t$(id).addClass('vertical-scroll');\n\t} else {\n\t\tif (window_height > (300 + popup_height)) {\n\t\t\tvar top_offset = ((window_height - popup_height) / 2) - 150;\n\t\t} else {\n\t\t\tvar top_offset = (window_height - popup_height) / 2;\n\t\t}\n\t\t$(id).css(\"top\", top_offset + 'px');\n\t}\n\t$(\"#gray_out\").fadeIn();\n\t$(id).fadeIn();\n}\n\nfunction getPopup(id, context, target, admin, popupType) {\n\t$(\"#gray_out\").fadeIn();\n\tvar url = \"\";\n\tif (typeof admin !== 'undefined' && admin != '') url+= \"/admin\";\n\tif (context != '') url += \"/\" + context;\n\tif (target != '') url += \"/\" + target;\n\tif (id != '') url += \"/\" + id;\n\tif (popupType == '' || typeof popupType == 'undefined') popupType = '#popover_form';\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tasync: true,\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(popupType).html(data);\n\t\t\topenPopup(popupType);\n\t\t},\n\t\turl: url\n\t});\n}\n\nfunction simplePopup(url) {\n\t$(\"#gray_out\").fadeIn();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tasync: true,\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#popover_form\").html(data);\n\t\t\topenPopup(\"#popover_form\");\n\t\t},\n\t\terror:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t\tshowMessage('fail', 'Could not fetch the given PGP key.');\n\t\t},\n\t\turl: url,\n\t});\n}\n\nfunction resizePopoverBody() {\n\tvar bodyheight = $(window).height();\n\tbodyheight = 3 * bodyheight / 4 - 150;\n\t$(\"#popover_choice_main\").css({\"max-height\": bodyheight});\n}\n\nfunction populateTemplateHiddenFileDiv(files) {\n\t$('#TemplateFileArray').val(JSON.stringify(files));\n}\n\nfunction populateTemplateFileBubbles() {\n\tvar fileObjectArray = JSON.parse($('#TemplateFileArray').val());\n\tfileObjectArray.forEach(function(entry) {\n\t\ttemplateAddFileBubble(entry.element_id, false, entry.filename, entry.tmp_name, 'yes');\n\t});\n}\n\nfunction templateFileHiddenAdd(files, element_id, batch) {\n\tvar fileArray = $.parseJSON($('#TemplateFileArray', window.parent.document).val());\n\tvar contained = false;\n\tfor (var j=0; j< files.length; j++) {\n\t\tfor (var i=0; i< fileArray.length; i++) {\n\t\t\tif (fileArray[i].filename == files[j].filename) {\n\t\t\t\tcontained = true;\n\t\t\t}\n\t\t\tif (batch == 'no' && fileArray[i].element_id == element_id) {\n\t\t\t\ttemplateDeleteFileBubble(fileArray[i].filename, fileArray[i].tmp_name, fileArray[i].element_id, 'iframe', batch);\n\t\t\t\tcontained = false;\n\t\t\t\tvar removeId = i;\n\t\t\t}\n\t\t}\n\t\tif (batch == 'no') fileArray.splice(removeId, 1);\n\t\tif (contained == false) {\n\t\t\tfileArray.push(files[j]);\n\t\t\ttemplateAddFileBubble(element_id, true, files[j].filename, files[j].tmp_name, batch);\n\t\t\t$('#TemplateFileArray', window.parent.document).val(JSON.stringify(fileArray));\n\t\t}\n\t}\n}\n\nfunction htmlEncode(value){\n\treturn $('<div/>').text(value).html();\n}\n\nfunction templateAddFileBubble(element_id, iframe, filename, tmp_name, batch) {\n\tfilename = htmlEncode(filename);\n\ttmp_name = htmlEncode(tmp_name);\n\tif (batch == 'no') {\n\t\tif (iframe == true) {\n\t\t\t$('#filenames_' + element_id, window.parent.document).html('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'no\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t} else {\n\t\t\t$('#filenames_' + element_id).html('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'no\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t}\n\t} else {\n\t\tif (iframe == true) {\n\t\t\t$('#filenames_' + element_id, window.parent.document).append('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'yes\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t} else {\n\t\t\t$('#filenames_' + element_id).append('<div id =\"' + tmp_name + '_container\" class =\"template_file_box_container\"><span class=\"tagFirstHalf template_file_box\">' + filename + '</span><span onClick=\"templateDeleteFileBubble(\\'' + filename + '\\', \\'' + tmp_name + '\\', \\'' + element_id + '\\', \\'normal\\', \\'yes\\');\" class=\"tagSecondHalf useCursorPointer\">x</span></div>');\n\t\t}\n\t}\n}\n\nfunction templateDeleteFileBubble(filename, tmp_name, element_id, context, batch) {\n\t$(\".loading\").show();\n\t$.ajax({\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/templates/deleteTemporaryFile/\" + tmp_name,\n\t});\n\tvar c = this;\n\tif (context == 'iframe') {\n\t\t$('#' + tmp_name + '_container', window.parent.document).remove();\n\t\tvar oldArray = JSON.parse($('#TemplateFileArray', window.parent.document).val());\n\t} else {\n\t\t$('#' + tmp_name + '_container').remove();\n\t\tvar oldArray = JSON.parse($('#TemplateFileArray').val());\n\t}\n\tvar newArray = [];\n\toldArray.forEach(function(entry) {\n\t\tif (batch == 'no') {\n\t\t\tif (entry.element_id != element_id) {\n\t\t\t\tnewArray.push(entry);\n\t\t\t}\n\t\t} else {\n\t\t\tif (entry.tmp_name != tmp_name) {\n\t\t\t\tnewArray.push(entry);\n\t\t\t}\n\t\t}\n\t});\n\tif (batch == 'no') {\n\t\t$('#fileUploadButton_' + element_id, $('#iframe_' + element_id).contents()).html('Upload File');\n\t}\n\tif (context == 'iframe') {\n\t\t$('#TemplateFileArray', window.parent.document).val(JSON.stringify(newArray));\n\t} else {\n\t\t$('#TemplateFileArray').val(JSON.stringify(newArray));\n\t}\n\t$(\".loading\").hide();\n}\n\nfunction templateFileUploadTriggerBrowse(id) {\n\t$('#upload_' + id + '_file').click();\n}\n\nfunction freetextRemoveRow(id, event_id) {\n\t$('#row_' + id).hide();\n\t$('#Attribute' + id + 'Save').attr(\"value\", \"0\");\n\tif ($(\".freetext_row:visible\").length == 0) {\n\t\twindow.location = \"/events/\" + event_id;\n\t}\n}\n\nfunction indexEvaluateFiltering() {\n\tif (filterContext == \"event\") {\n\t\tif (filtering.published != 2) {\n\t\t\t$('#value_published').html(publishedOptions[filtering.published]);\n\t\t} else {\n\t\t\t$('#value_published').html(\"\");\n\t\t}\n\t\tif (filtering.hasproposal != 2) {\n\t\t\t$('#value_hasproposal').html(publishedOptions[filtering.hasproposal]);\n\t\t} else {\n\t\t\t$('#value_hasproposal').html(\"\");\n\t\t}\n\t\tif (filtering.date.from != null || filtering.date.from != null) {\n\t\t\tvar text = \"\";\n\t\t\tif (filtering.date.from != \"\") text = \"From: \" + $('<span>').text(filtering.date.from).html();\n\t\t\tif (filtering.date.until != \"\") {\n\t\t\t\tif (text != \"\") text += \" \";\n\t\t\t\ttext += \"Until: \" + $('<span>').text(filtering.date.until).html();\n\t\t\t}\n\t\t}\n\t\t$('#value_date').html(text);\n\t\tfor (var i = 0; i < simpleFilters.length; i++) {\n\t\t\tindexEvaluateSimpleFiltering(simpleFilters[i]);\n\t\t}\n\t\tindexRuleChange();\n\t} else {\n\t\tfor (var i = 0; i < differentFilters.length; i++) {\n\t\t\tif (filtering[differentFilters[i]] != \"\") {\n\t\t\t\tvar text = \"\";\n\t\t\t\tif (filtering[differentFilters[i]] == 1) text = \"Yes\";\n\t\t\t\telse if (filtering[differentFilters[i]] == 0) text = \"No\";\n\t\t\t\t$('#value_' + differentFilters[i]).text(text);\n\t\t\t} else {\n\t\t\t\t$('#value_' + differentFilters[i]).text(\"\");\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < simpleFilters.length; i++) {\n\t\t\tindexEvaluateSimpleFiltering(simpleFilters[i]);\n\t\t}\n\t}\n\tindexSetTableVisibility();\n\tindexSetRowVisibility();\n\t$('#generatedURLContent').text(indexCreateFilters());\n}\n\nfunction quickFilter(passedArgs, url) {\n\tpassedArgs[\"searchall\"] = $('#quickFilterField').val().trim();\n\tfor (var key in passedArgs) {\n\t\tif (key !== 'page') {\n\t\t\turl += \"/\" + key + \":\" + passedArgs[key];\n\t\t}\n\t}\n\twindow.location.href=url;\n}\n\nfunction executeFilter(passedArgs, url) {\n\tfor (var key in passedArgs) url += \"/\" + key + \":\" + passedArgs[key];\n\twindow.location.href=url;\n}\n\nfunction quickFilterTaxonomy(taxonomy_id, passedArgs) {\n\tvar url = \"/taxonomies/view/\" + taxonomy_id + \"/filter:\" + $('#quickFilterField').val();\n\twindow.location.href=url;\n}\n\nfunction quickFilterRemoteEvents(passedArgs, id) {\n\tpassedArgs[\"searchall\"] = $('#quickFilterField').val();\n\tvar url = \"/servers/previewIndex/\" + id;\n\tfor (var key in passedArgs) {\n\t\turl += \"/\" + key + \":\" + passedArgs[key];\n\t}\n\twindow.location.href=url;\n}\n\n$('#quickFilterField').bind(\"enterKey\",function(e){\n\t$('#quickFilterButton').trigger(\"click\");\n});\n$('#quickFilterField').keyup(function(e){\n\tif(e.keyCode == 13)\n\t{\n    \t$('#quickFilterButton').trigger(\"click\");\n\t}\n});\n\nfunction remoteIndexApplyFilters() {\n\tvar url = actionUrl + '/' + $(\"#EventFilter\").val();\n\twindow.location.href = url;\n}\n\nfunction indexApplyFilters() {\n\tvar url = indexCreateFilters();\n\twindow.location.href = url;\n}\n\nfunction indexCreateFilters() {\n\ttext = \"\";\n\tif (filterContext == 'event') {\n\t\tif (filtering.published != \"2\") {\n\t\t\ttext += \"searchpublished:\" + filtering.published;\n\t\t}\n\t\tif (filtering.hasproposal != \"2\") {\n\t\t\tif (text != \"\") text += \"/\";\n\t\t\ttext += \"searchhasproposal:\" + filtering.hasproposal;\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < differentFilters.length; i++) {\n\t\t\tif (filtering[differentFilters[i]]) {\n\t\t\t\tif (text != \"\") text += \"/\";\n\t\t\t\ttext += \"search\" + differentFilters[i] + \":\" + filtering[differentFilters[i]];\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i = 0; i < simpleFilters.length; i++) {\n\t\ttext = indexBuildArray(simpleFilters[i], text);\n\t}\n\tif (filterContext == 'event') {\n\t\tif (filtering.date.from) {\n\t\t\tif (text != \"\") text += \"/\";\n\t\t\ttext += \"searchDatefrom:\" + filtering.date.from;\n\t\t}\n\t\tif (filtering.date.until) {\n\t\t\tif (text != \"\") text += \"/\";\n\t\t\ttext += \"searchDateuntil:\" + filtering.date.until;\n\t\t}\n\t\treturn baseurl + '/events/index/' + text;\n\t} else {\n\t\treturn baseurl + '/admin/users/index/' + text;\n\t}\n}\n\nfunction indexBuildArray(type, text) {\n\ttemp = \"\";\n\tif (text != \"\") temp += \"/\";\n\ttemp += \"search\" + type + \":\";\n\tif (filtering[type].NOT.length == 0 && filtering[type].OR.length == 0) return text;\n\tvar swap = filtering[type].OR.length;\n\tvar temp_array = filtering[type].OR.concat(filtering[type].NOT);\n\tfor (var i = 0; i < temp_array.length; i++) {\n\t\tif (i > 0) temp += \"|\";\n\t\tif (i >= swap) temp +=\"!\";\n\t\ttemp += temp_array[i];\n\t}\n\ttext += temp;\n\treturn text;\n}\n\nfunction indexSetRowVisibility() {\n\tfor (var i = 0; i < allFields.length; i++) {\n\t\tif ($(\"#value_\" + allFields[i]).text().trim() != \"\") {\n\t\t\t$(\"#row_\" + allFields[i]).show();\n\t\t} else {\n\t\t\t$(\"#row_\" + allFields[i]).hide();\n\t\t}\n\t}\n}\n\nfunction indexEvaluateSimpleFiltering(field) {\n\ttext = \"\";\n\tif (filtering[field].OR.length == 0 && filtering[field].NOT.length == 0) {\n\t\t$('#value_' + field).html(text);\n\t\treturn false;\n\t}\n\tif (filtering[field].OR.length !=0) {\n\t\tfor (var i = 0; i < filtering[field].OR.length; i++) {\n\t\t\tif (i > 0) text += '<span class=\"green bold\"> OR </span>';\n\t\t\tif (typedFields.indexOf(field) == -1) {\n\t\t\t\ttext += $('<span>').text(filtering[field].OR[i]).html();\n\t\t\t} else {\n\t\t\t\tfor (var j = 0; j < typeArray[field].length; j++) {\n\t\t\t\t\tif (typeArray[field][j].id == filtering[field].OR[i]) {\n\t\t\t\t\t\ttext += $('<span>').text(typeArray[field][j].value).html();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (filtering[field].NOT.length !=0) {\n\t\tfor (var i = 0; i < filtering[field].NOT.length; i++) {\n\t\t\tif (i == 0) {\n\t\t\t\tif (text != \"\") text += '<span class=\"red bold\"> AND NOT </span>';\n\t\t\t\telse text += '<span class=\"red bold\">NOT </span>';\n\t\t\t} else text += '<span class=\"red bold\"> AND NOT </span>';\n\t\t\tif (typedFields.indexOf(field) == -1) {\n\t\t\t\ttext += $('<span>').text(filtering[field].NOT[i]).html();\n\t\t\t} else {\n\t\t\t\tfor (var j = 0; j < typeArray[field].length; j++) {\n\t\t\t\t\tif (typeArray[field][j].id == filtering[field].NOT[i]) {\n\t\t\t\t\t\ttext += $('<span>').text(typeArray[field][j].value).html();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t$('#value_' + field).html(text);\n}\n\nfunction indexAddRule(param) {\n\tvar found = false;\n\tif (filterContext == 'event') {\n\t\tif (param.data.param1 == \"date\") {\n\t\t\tvar val1 = escape($('#EventSearch' + param.data.param1 + 'from').val());\n\t\t\tvar val2 = escape($('#EventSearch' + param.data.param1 + 'until').val());\n\t\t\tif (val1 != \"\") filtering.date.from = val1;\n\t\t\tif (val2 != \"\") filtering.date.until = val2;\n\t\t} else if (param.data.param1 == \"published\") {\n\t\t\tvar value = escape($('#EventSearchpublished').val());\n\t\t\tif (value != \"\") filtering.published = value;\n\t\t} else if (param.data.param1 == \"hasproposal\") {\n\t\t\tvar value = escape($('#EventSearchhasproposal').val());\n\t\t\tif (value != \"\") filtering.hasproposal = value;\n\t\t} else {\n\t\t\tvar value = escape($('#EventSearch' + param.data.param1).val());\n\t\t\tvar operator = operators[escape($('#EventSearchbool').val())];\n\t\t\tif (value != \"\" && filtering[param.data.param1][operator].indexOf(value) < 0) filtering[param.data.param1][operator].push(value);\n\t\t}\n\t} else if (filterContext = 'user') {\n\t\tif (differentFilters.indexOf(param.data.param1) != -1) {\n\t\t\tvar value = escape($('#UserSearch' + param.data.param1).val());\n\t\t\tif (value != \"\") filtering[param.data.param1] = value;\n\t\t} else {\n\t\t\tvar value = escape($('#UserSearch' + param.data.param1).val());\n\t\t\tvar operator = operators[escape($('#UserSearchbool').val())];\n\t\t\tif (value != \"\" && filtering[param.data.param1][operator].indexOf(value) < 0) filtering[param.data.param1][operator].push(value);\n\t\t}\n\t}\n\tindexEvaluateFiltering();\n}\n\nfunction indexSetTableVisibility() {\n\tvar visible = false;\n\tif ($(\"[id^='value_']\").text().trim()!=\"\" && $(\"[id^='value_']\").text().trim()!=\"-1\") {\n\t\tvisible = true;\n\t}\n\tif (visible == true) $('#FilterplaceholderTable').hide();\n\telse $('#FilterplaceholderTable').show();\n}\n\nfunction indexRuleChange() {\n\tvar context = filterContext.charAt(0).toUpperCase() + filterContext.slice(1);\n\t$('[id^=' + context + 'Search]').hide();\n\tvar rule = $('#' + context + 'Rule').val();\n\tvar fieldName = '#' + context + 'Search' + rule;\n\tif (fieldName == '#' + context + 'Searchdate') {\n\t\t$(fieldName + 'from').show();\n\t\t$(fieldName + 'until').show();\n\t} else {\n\t\t$(fieldName).show();\n\t}\n\tif (simpleFilters.indexOf(rule) != -1) {\n\t\t$('#' + context + 'Searchbool').show();\n\t} else $('#' + context + 'Searchbool').hide();\n\n\t$('#addRuleButton').show();\n\t$('#addRuleButton').unbind(\"click\");\n\t$('#addRuleButton').click({param1: rule}, indexAddRule);\n}\n\nfunction indexFilterClearRow(field) {\n\t$('#value_' + field).html(\"\");\n\t$('#row_' + field).hide();\n\tif (field == \"date\") {\n\t\tfiltering.date.from = \"\";\n\t\tfiltering.date.until = \"\";\n\t} else if (field == \"published\") {\n\t\tfiltering.published = 2;\n\t} else if (field == \"hasproposal\") {\n\t\tfiltering.hasproposal = 2;\n\t} else if (differentFilters.indexOf(field) != -1) {\n\t\tfiltering[field] = \"\";\n\t} else {\n\t\tfiltering[field].NOT = [];\n\t\tfiltering[field].OR = [];\n\t}\n\tindexSetTableVisibility();\n\tindexEvaluateFiltering();\n}\n\n\nfunction restrictEventViewPagination() {\n\tvar showPages = new Array();\n\tvar start;\n\tvar end;\n\tvar i;\n\n\tif (page < 6) {\n\t\tstart = 1;\n\t\tif (count - page < 6) {\n\t\t\tend = count;\n\t\t} else {\n\t\t\tend = page + (9 - (page - start));\n\t\t}\n\t} else if (count - page < 6) {\n\t\tend = count;\n\t\tstart = count - 10;\n\t} else {\n\t\tstart = page-5;\n\t\tend = page+5;\n\t}\n\n\tif (start > 2) {\n\t\t$(\"#apage\" + start).parent().before(\"<li><a href id='aExpandLeft'>...</a></li>\");\n\t\t$(\"#aExpandLeft\").click(function() {expandPagination(0, 0); return false;});\n\t\t$(\"#bpage\" + start).parent().before(\"<li><a href id='bExpandLeft'>...</a></li>\");\n\t\t$(\"#bExpandLeft\").click(function() {expandPagination(1, 0); return false;})\n\t}\n\n\tif (end < (count - 1)) {\n\t\t$(\"#apage\" + end).parent().after(\"<li><a href id='aExpandRight'>...</a></li>\");\n\t\t$(\"#aExpandRight\").click(function() {expandPagination(0, 1); return false;});\n\t\t$(\"#bpage\" + end).parent().after(\"<li><a href id='bExpandRight'>...</a></li>\");\n\t\t$(\"#bExpandRight\").click(function() {expandPagination(1, 1); return false;})\n\t}\n\n\tfor (i = 1; i < (count+1); i++) {\n\t\tif (i != 1 && i != count && (i < start || i > end)) {\n\t\t\t$(\"#apage\" + i).hide();\n\t\t\t$(\"#bpage\" + i).hide();\n\t\t}\n\t}\n}\n\nfunction expandPagination(bottom, right) {\n\tvar i;\n\tvar prefix = \"a\";\n\tif (bottom == 1) prefix = \"b\";\n\tvar start = 1;\n\tvar end = page;\n\tif (right == 1) {\n\t\tstart = page;\n\t\tend = count;\n\t\t$(\"#\" + prefix + \"ExpandRight\").remove();\n\t} else $(\"#\" + prefix + \"ExpandLeft\").remove();\n\tfor (i = start; i < end; i++) {\n\t\t$(\"#\" + prefix + \"page\" + i).show();\n\t}\n}\n\nfunction getSubGroupFromSetting(setting) {\n\tvar temp = setting.split('.');\n\tif (temp[0] == \"Plugin\") {\n\t\ttemp = temp[1];\n\t\tif (temp.indexOf('_') > -1) {\n\t\t\ttemp = temp.split('_');\n\t\t\treturn temp[0];\n\t\t}\n\t}\n\treturn 'general';\n}\n\nfunction serverSettingsActivateField(setting, id) {\n\tresetForms();\n\t$('.inline-field-placeholder').hide();\n\tvar fieldName = \"#setting_\" + getSubGroupFromSetting(setting) + \"_\" + id;\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdataType:\"html\",\n\t\tcache: false,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(fieldName + \"_placeholder\").html(data);\n\t\t\t$(fieldName + \"_solid\").hide();\n\t\t\t$(fieldName + \"_placeholder\").show();\n\t\t\tserverSettingsPostActivationScripts(fieldName, setting, id);\n\t\t},\n\t\turl:\"/servers/serverSettingsEdit/\" + setting + \"/\" + id,\n\t});\n}\n\nfunction serverSettingsPostActivationScripts(name, setting, id) {\n\t$(name + '_field').focus();\n\tinputFieldButtonActive(name + '_field');\n\n\t$(name + '_form').submit(function(e){\n\t\te.preventDefault();\n\t\tserverSettingSubmitForm(name, setting, id);\n\t\treturn false;\n\t});\n\n\t$(name + '_form').bind(\"focusout\", function() {\n\t\tinputFieldButtonPassive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"focusin\", function(){\n\t\tinputFieldButtonActive(name + '_field');\n\t});\n\n\t$(name + '_form').bind(\"keydown\", function(e) {\n\t\tif (e.ctrlKey && (e.keyCode == 13 || e.keyCode == 10)) {\n\t\t\tserverSettingSubmitForm(name, setting, id);\n\t\t}\n\t});\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-accept').bind('click', function() {\n\t\tserverSettingSubmitForm(name, setting, id);\n\t});\n\t$(name + '_field').closest('.inline-input-container').children('.inline-input-decline').bind('click', function() {\n\t\tresetForms();\n\t\t$('.inline-field-placeholder').hide();\n\t});\n\n\t$(name + '_solid').hide();\n}\n\nfunction serverSettingSubmitForm(name, setting, id) {\n\tsubGroup = getSubGroupFromSetting(setting);\n\tvar formData = $(name + '_field').closest(\"form\").serialize();\n\t$.ajax({\n\t\tdata: formData,\n\t\tcache: false,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$.ajax({\n\t\t\t\ttype:\"get\",\n\t\t\t\turl:\"/servers/serverSettingsReloadSetting/\" + setting + \"/\" + id,\n\t\t\t\tsuccess:function (data2, textStatus2) {\n\t\t\t\t\t$('#' + subGroup + \"_\" + id + '_row').replaceWith(data2);\n\t\t\t\t\t$(\".loading\").hide();\n\t\t\t\t},\n\t\t\t\terror:function() {\n\t\t\t\t\tshowMessage('fail', 'Could not refresh the table.');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Request failed for an unknown reason.');\n\t\t\tresetForms();\n\t\t\t$('.inline-field-placeholder').hide();\n\t\t},\n\t\ttype:\"post\",\n\t\turl:\"/servers/serverSettingsEdit/\" + setting + \"/\" + id + \"/\" + 1\n\t});\n\t$(name + '_field').unbind(\"keyup\");\n\t$(name + '_form').unbind(\"focusout\");\n\treturn false;\n}\n\nfunction updateOrgCreateImageField(string) {\n\tstring = escape(string);\n\t$.ajax({\n\t    url:'/img/orgs/' + string + '.png',\n\t    type:'HEAD',\n\t    error:\n\t        function(){\n\t    \t\t$('#logoDiv').html('No image uploaded for this identifier');\n\t        },\n\t    success:\n\t        function(){\n\t    \t\t$('#logoDiv').html('<img src=\"/img/orgs/' + string + '.png\" style=\"width:24px;height:24px;\"></img>');\n\t        }\n\t});\n}\n\nfunction generateOrgUUID() {\n\t$.ajax({\n\t    url:'/admin/organisations/generateuuid.json',\n\t    success:\n\t        function( data ){\n\t    \t\t$('#OrganisationUuid').val(data.uuid);\n\t        }\n\t});\n}\n\n\nfunction sharingGroupIndexMembersCollapse(id) {\n\t$('#' + id + '_down').show();\n\t$('#' + id + '_up').hide();\n}\n\nfunction sharingGroupIndexMembersExpand(id) {\n\t$('#' + id + '_down').hide();\n\t$('#' + id + '_up').show();\n}\n\nfunction popoverStartup() {\n    $('[data-toggle=\"popover\"]').popover({\n        animation: true,\n        html: true,\n    }).click(function(e) {\n    \t$(e.target).popover('show');\n    \t$('[data-toggle=\"popover\"]').not(e.target).popover('hide');\n    });\n    $(document).click(function (e) {\n        if (!$('[data-toggle=\"popover\"]').is(e.target)) {\n            $('[data-toggle=\"popover\"]').popover('hide');\n        }\n    });\n}\n\nfunction changeFreetextImportFrom() {\n\t$('#changeTo').find('option').remove();\n\toptions[$('#changeFrom').val()].forEach(function(element) {\n\t\t$('#changeTo').append('<option value=\"' + element + '\">' + element + '</option>');\n\t});\n}\n\nfunction changeFreetextImportCommentExecute() {\n\t$('.freetextCommentField').val($('#changeComments').val());\n}\n\nfunction changeFreetextImportExecute() {\n\tvar from = $('#changeFrom').val();\n\tvar to = $('#changeTo').val();\n\t$('.typeToggle').each(function() {\n\t\tif ($( this ).val() == from) {\n\t\t\tif (selectContainsOption(\"#\" + $(this).attr('id'), to)) $( this ).val(to);\n\t\t}\n\t});\n}\n\nfunction selectContainsOption(selectid, value) {\n\tvar exists = false;\n\t$(selectid + ' option').each(function(){\n\t    if (this.value == value) {\n\t        exists = true;\n\t        return false;\n\t    }\n\t});\n\treturn exists;\n}\n\nfunction exportChoiceSelect(url, elementId, checkbox) {\n\tif (checkbox == 1) {\n\t\tif ($('#' + elementId + '_toggle').prop('checked')) {\n\t\t\turl = $('#' + elementId + '_set').html();\n\t\t}\n\t}\n\tdocument.location.href = url;\n}\n\nfunction importChoiceSelect(url, elementId, ajax) {\n\tif (ajax == 'false') {\n\t\tdocument.location.href = url;\n\t} else {\n\t\tsimplePopup(url);\n\t}\n}\n\nfunction freetextImportResultsSubmit(id, count) {\n\tvar attributeArray = [];\n\tvar temp;\n\tfor (i = 0; i < count; i++) {\n\t\tif ($('#Attribute' + i + 'Save').val() == 1) {\n\t\t\ttemp = {\n\t\t\t\tvalue:$('#Attribute' + i + 'Value').val(),\n\t\t\t\tcategory:$('#Attribute' + i + 'Category').val(),\n\t\t\t\ttype:$('#Attribute' + i + 'Type').val(),\n\t\t\t\tto_ids:$('#Attribute' + i + 'To_ids')[0].checked,\n\t\t\t\tcomment:$('#Attribute' + i + 'Comment').val(),\n\t\t\t\tdistribution:$('#Attribute' + i + 'Distribution').val(),\n\t\t\t\tsharing_group_id:$('#Attribute' + i + 'SharingGroupId').val(),\n\t\t\t\tdata:$('#Attribute' + i + 'Data').val(),\n\t\t\t\tdata_is_handled:$('#Attribute' + i + 'DataIsHandled').val(),\n\t\t\t\ttags:$('#Attribute' + i + 'Tags').val()\n\t\t\t}\n\t\t\tattributeArray[attributeArray.length] = temp;\n\t\t}\n\t};\n\t$(\"#AttributeJsonObject\").val(JSON.stringify(attributeArray));\n\tvar formData = $(\".mainForm\").serialize();\n\t$.ajax({\n\t\ttype: \"post\",\n\t\tcache: false,\n\t\turl: \"/events/saveFreeText/\" + id,\n\t\tdata: formData,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\twindow.location = '/events/view/' + id;\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t});\n}\n\nfunction objectTemplateViewContent(context, id) {\n\tvar url = \"/objectTemplateElements/viewElements/\" + id + \"/\" + context;\n\t$.ajax({\n\t\t\turl: url,\n\t\t\ttype:'GET',\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\t\terror: function(){\n\t\t\t\t$('#ajaxContent').html('An error has occured, please reload the page.');\n\t\t\t},\n\t\t\tsuccess: function(response){\n\t\t\t\t$('#ajaxContent').html(response);\n\t\t\t},\n\t\tcomplete: function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t});\n\n}\n\nfunction organisationViewContent(context, id) {\n\torganisationViewButtonHighlight(context);\n\tvar action = \"/organisations/landingpage/\";\n\tif (context == 'members') {\n\t\taction = \"/admin/users/index/searchorg:\";\n\t}\n\tif (context == 'events') {\n\t\taction = \"/events/index/searchorg:\";\n\t}\n\t$.ajax({\n\t    url: action + id,\n\t    type:'GET',\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t    error: function(){\n\t    \t$('#ajaxContent').html('An error has occured, please reload the page.');\n\t    },\n\t    success: function(response){\n\t    \t$('#ajaxContent').html(response);\n\t    },\n\t\tcomplete: function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t});\n}\n\nfunction organisationViewButtonHighlight(context) {\n\t$(\".orgViewButtonActive\").hide();\n\t$(\".orgViewButton\").show();\n\t$(\"#button_\" + context).hide();\n\t$(\"#button_\" + context + \"_active\").show();\n}\n\nfunction simpleTabPage(page) {\n\t$(\".tabMenuSides\").removeClass(\"tabMenuActive\");\n\t$(\"#page\" + page + \"_tab\").addClass(\"tabMenuActive\");\n\t$(\".tabContent\").hide();\n\t$(\"#page\" + page + \"_content\").show();\n\tif (page == lastPage) simpleTabPageLast();\n}\n\nfunction simpleTabPageLast() {\n\tvar summaryorgs = summaryextendorgs = remotesummaryorgs = remotesummaryextendorgs = summaryservers = \"\";\n\tvar orgcounter = extendcounter = remoteorgcounter = remoteextendcounter = servercounter = 0;\n\tvar sgname = \"[Sharing group name not set!]\";\n\tif ($('#SharingGroupName').val()) sgname = $('#SharingGroupName').val();\n\tvar sgreleasability = \"[Sharing group releasability not set!]\";\n\tif ($('#SharingGroupReleasability').val()) sgreleasability = $('#SharingGroupReleasability').val();\n\t$('#summarytitle').text(sgname);\n\t$('#summaryreleasable').text(sgreleasability);\n\torganisations.forEach(function(organisation){\n\t\tif (organisation.type == 'local') {\n\t\t\tif (orgcounter > 0) summaryorgs += \", \";\n\t\t\tsummaryorgs += organisation.name;\n\t\t\tif (organisation.extend == true) {\n\t\t\t\tif (extendcounter > 0) summaryextendorgs += \", \"\n\t\t\t\tsummaryextendorgs += organisation.name;\n\t\t\t\textendcounter++;\n\t\t\t}\n\t\t\torgcounter++;\n\t\t} else {\n\t\t\tif (remoteorgcounter > 0) remotesummaryorgs += \", \";\n\t\t\tremotesummaryorgs += organisation.name;\n\t\t\tif (organisation.extend == true) {\n\t\t\t\tif (remoteextendcounter > 0) remotesummaryextendorgs += \", \"\n\t\t\t\tremotesummaryextendorgs += organisation.name;\n\t\t\t\tremoteextendcounter++;\n\t\t\t}\n\t\t\tremoteorgcounter++;\n\t\t}\n\t});\n\tif (orgcounter == 0) $('#localText').hide();\n\tif (remoteorgcounter == 0) $('#externalText').hide();\n\tif (extendcounter == 0) summaryextendorgs = \"nobody\";\n\tif (remoteextendcounter == 0) remotesummaryextendorgs = \"nobody\";\n\tservers.forEach(function(server){\n\t\tif (servercounter > 0) summaryservers += \", \";\n\t\tif (server.id != 0) {\n\t\t\tsummaryservers += server.name;\n\t\t\tif (extendcounter == 0) summaryextendorgs = \"none\";\n\t\t\tservercounter++;\n\t\t}\n\t\tif (server.id == 0 && server.all_orgs == true) summaryorgs = \"all organisations on this instance\";\n\t});\n\tif ($('#SharingGroupRoaming').is(\":checked\")) {\n\t\tsummaryservers = \"any interconnected instances linked by an eligible organisation.\";\n\t} else {\n\t\tif (servercounter == 0) {\n\t\t\tsummaryservers = \"data marked with this sharing group will not be pushed.\";\n\t\t}\n\t}\n\t$('#summarylocal').text(summaryorgs);\n\t$('#summarylocalextend').text(summaryextendorgs);\n\t$('#summaryexternal').text(remotesummaryorgs);\n\t$('#summaryexternalextend').text(remotesummaryextendorgs);\n\t$('#summaryservers').text(summaryservers);\n}\n\nfunction sharingGroupPopulateOrganisations() {\n\t$('input[id=SharingGroupOrganisations]').val(JSON.stringify(organisations));\n\t$('.orgRow').remove();\n\tvar id = 0;\n\tvar html = '';\n\torganisations.forEach(function(org) {\n\t\thtml = '<tr id=\"orgRow' + id + '\" class=\"orgRow\">';\n\t\thtml += '<td class=\"short\">' + org.type + '&nbsp;</td>';\n\t\thtml += '<td>' + $('<div>').text(org.name).html() + '&nbsp;</td>';\n\t\thtml += '<td>' + org.uuid + '&nbsp;</td>';\n\t\thtml += '<td class=\"short\" style=\"text-align:center;\">';\n\t\tif (org.removable == 1) {\n\t\t\thtml += '<input id=\"orgExtend' + id + '\" type=\"checkbox\" onClick=\"sharingGroupExtendOrg(' + id + ')\" ';\n\t\t\tif (org.extend) html+= 'checked';\n\t\t\thtml += '></input>';\n\t\t} else {\n\t\t\thtml += '<span class=\"icon-ok\"></span>'\n\t\t}\n\t\thtml +='</td>';\n\t\thtml += '<td class=\"actions short\">';\n\t\tif (org.removable == 1) html += '<span class=\"icon-trash\" onClick=\"sharingGroupRemoveOrganisation(' + id + ')\"></span>';\n\t\thtml += '&nbsp;</td></tr>';\n\t\t$('#organisations_table tr:last').after(html);\n\t\tid++;\n\t});\n}\n\nfunction sharingGroupPopulateServers() {\n\t$('input[id=SharingGroupServers]').val(JSON.stringify(servers));\n\t$('.serverRow').remove();\n\tvar id = 0;\n\tvar html = '';\n\tservers.forEach(function(server) {\n\t\thtml = '<tr id=\"serverRow' + id + '\" class=\"serverRow\">';\n\t\thtml += '<td>' + server.name + '&nbsp;</td>';\n\t\thtml += '<td>' + server.url + '&nbsp;</td>';\n\t\thtml += '<td>';\n\t\thtml += '<input id=\"serverAddOrgs' + id + '\" type=\"checkbox\" onClick=\"sharingGroupServerAddOrgs(' + id + ')\" ';\n\t\tif (server.all_orgs) html += 'checked';\n\t\thtml += '></input>';\n\t\thtml +='</td>';\n\t\thtml += '<td class=\"actions short\">';\n\t\tif (server.removable == 1) html += '<span class=\"icon-trash\" onClick=\"sharingGroupRemoveServer(' + id + ')\"></span>';\n\t\thtml += '&nbsp;</td></tr>';\n\t\t$('#servers_table tr:last').after(html);\n\t\tid++;\n\t});\n}\n\nfunction sharingGroupExtendOrg(id) {\n\torganisations[id].extend = $('#orgExtend' + id).is(\":checked\");\n}\n\nfunction sharingGroupServerAddOrgs(id) {\n\tservers[id].all_orgs = $('#serverAddOrgs' + id).is(\":checked\");\n}\n\nfunction sharingGroupPopulateUsers() {\n\t$('input[id=SharingGroupServers]').val(JSON.stringify(organisations));\n}\n\nfunction sharingGroupAdd(context, type) {\n\tif (context == 'organisation') {\n\t\tvar jsonids = JSON.stringify(orgids);\n\t\turl = '/organisations/fetchOrgsForSG/' + jsonids + '/' + type\n\t} else if (context == 'server') {\n\t\tvar jsonids = JSON.stringify(serverids);\n\t\turl = '/servers/fetchServersForSG/' + jsonids\n\t}\n\t$(\"#gray_out\").fadeIn();\n\tsimplePopup(url);\n}\n\nfunction sharingGroupRemoveOrganisation(id) {\n\torganisations.splice(id, 1);\n\torgids.splice(id, 1);\n\tsharingGroupPopulateOrganisations();\n}\n\nfunction sharingGroupRemoveServer(id) {\n\tservers.splice(id, 1);\n\tserverids.splice(id, 1);\n\tsharingGroupPopulateServers();\n}\n\nfunction submitPicklistValues(context, local) {\n\tif (context == 'org') {\n\t\tvar localType = 'local';\n\t\tif (local == 0) localType = 'remote';\n\t\t$(\"#rightValues  option\").each(function() {\n\t\t\tif (orgids.indexOf($(this).val()) == -1) {\n\t\t\t\torganisations.push({\n\t\t\t\t\t\tid: $(this).val(),\n\t\t\t\t\t\ttype: localType,\n\t\t\t\t\t\tname: $(this).text(),\n\t\t\t\t\t\textend: false,\n\t\t\t\t\t\tuuid: '',\n\t\t\t\t\t\tremovable: 1\n\t\t\t\t});\n\t\t\t}\n\t\t\torgids.push($(this).val());\n\t\t\tsharingGroupPopulateOrganisations();\n\t\t});\n\t} else if (context == 'server') {\n\t\t$(\"#rightValues  option\").each(function() {\n\t\t\tif (serverids.indexOf($(this).val()) == -1) {\n\t\t\t\tservers.push({\n\t\t\t\t\t\tid: $(this).val(),\n\t\t\t\t\t\tname: $(this).text(),\n\t\t\t\t\t\turl: $(this).attr(\"data-url\"),\n\t\t\t\t\t\tall_orgs: false,\n\t\t\t\t\t\tremovable: 1\n\t\t\t\t});\n\t\t\t}\n\t\t\tserverids.push($(this).val());\n\t\t\tsharingGroupPopulateServers();\n\t\t});\n\t}\n\t$(\"#gray_out\").fadeOut();\n\t$(\"#popover_form\").fadeOut();\n}\n\nfunction cancelPicklistValues() {\n\t$(\"#popover_form\").fadeOut();\n\t$(\"#gray_out\").fadeOut();\n}\n\nfunction sgSubmitForm(action) {\n\tvar ajax = {\n\t\t\t'organisations': organisations,\n\t\t\t'servers': servers,\n\t\t\t'sharingGroup': {\n\t\t\t\t'name': $('#SharingGroupName').val(),\n\t\t\t\t'releasability': $('#SharingGroupReleasability').val(),\n\t\t\t\t'description': $('#SharingGroupDescription').val(),\n\t\t\t\t'active': $('#SharingGroupActive').is(\":checked\"),\n\t\t\t\t'roaming': $('#SharingGroupRoaming').is(\":checked\"),\n\t\t\t}\n\t};\n\t$('#SharingGroupJson').val(JSON.stringify(ajax));\n\tvar formName = \"#SharingGroup\" + action + \"Form\";\n\t$(formName).submit();\n}\n\nfunction serverSubmitForm(action) {\n\tvar ajax = {};\n\tswitch ($('#ServerOrganisationType').val()) {\n\tcase '0':\n\t\tajax = {\n\t\t\t'id': $('#ServerLocal').val()\n\t\t};\n\t\tbreak;\n\tcase '1':\n\t\tajax = {\n\t\t\t'id': $('#ServerExternal').val()\n\t\t};\n\t\tbreak;\n\tcase '2':\n\t\tajax = {\n\t\t\t'name': $('#ServerExternalName').val(),\n\t\t\t'uuid': $('#ServerExternalUuid').val()\n\t\t};\n\t\tbreak;\n\t}\n\n\t$('#ServerJson').val(JSON.stringify(ajax));\n\tvar formName = \"#Server\" + action + \"Form\";\n\t$(formName).submit();\n}\n\nfunction serverOrgTypeChange() {\n\t$(\".hiddenField\").hide();\n\tswitch ($('#ServerOrganisationType').val()) {\n\t\tcase '0':\n\t\t\t$(\"#ServerLocalContainer\").show();\n\t\t\tbreak;\n\t\tcase '1':\n\t\t\t$(\"#ServerExternalContainer\").show();\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\t$(\"#ServerExternalUuidContainer\").show();\n\t\t\t$(\"#ServerExternalNameContainer\").show();\n\t\t\tbreak;\n\t}\n}\n\nfunction sharingGroupPopulateFromJson() {\n\tvar jsonparsed = JSON.parse($('#SharingGroupJson').val());\n\torganisations = jsonparsed.organisations;\n\tservers = jsonparsed.servers;\n\tif (jsonparsed.sharingGroup.active == 1) {\n\t\t$(\"#SharingGroupActive\").prop(\"checked\", true);\n\t}\n\tif (jsonparsed.sharingGroup.roaming == 1) {\n\t\t$(\"#SharingGroupRoaming\").prop(\"checked\", true);\n\t\t$('#serverList').show();\n\t}\n\t$('#SharingGroupName').attr('value', jsonparsed.sharingGroup.name);\n\t$('#SharingGroupReleasability').attr('value', jsonparsed.sharingGroup.releasability);\n\t$('#SharingGroupDescription').text(jsonparsed.sharingGroup.description);\n}\n\nfunction testConnection(id) {\n\t$.ajax({\n\t    url: '/servers/testConnection/' + id,\n\t    type:'GET',\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\"#connection_test_\" + id).html('Running test...');\n\t\t},\n\t    error: function(){\n\t    \t$(\"#connection_test_\" + id).html('Internal error.');\n\t    },\n\t    success: function(response){\n\t    \tvar result = response;\n\t    \tswitch (result.status) {\n\t\t\tcase 1:\n\t\t\t\tstatus_message = \"OK\";\n\t\t\t\tcompatibility = \"Compatible\";\n\t\t\t\tcompatibility_colour = \"green\";\n\t\t\t\tcolours = {'local': 'class=\"green\"', 'remote': 'class=\"green\"', 'status': 'class=\"green\"'};\n\t\t\t\tissue_colour = \"red\";\n\t\t\t\tif (result.mismatch == \"hotfix\") issue_colour = \"orange\";\n\t\t\t\tif (result.newer == \"local\") {\n\t\t\t\t\tcolours.remote = 'class=\"' + issue_colour + '\"';\n\t\t\t\t\tif (result.mismatch == \"minor\") {\n\t\t\t\t\t\tcompatibility = \"Pull only\";\n\t\t\t\t\t\tcompatibility_colour = \"orange\";\n\t\t\t\t\t} else if (result.mismatch == \"major\") {\n\t\t\t\t\t\tcompatibility = \"Incompatible\";\n\t\t\t\t\t\tcompatibility_colour = \"red\";\n\t\t\t\t\t}\n\t\t\t\t} else if (result.newer == \"remote\") {\n\t\t\t\t\tcolours.local = 'class=\"' + issue_colour + '\"';\n\t\t\t\t\tif (result.mismatch != \"hotfix\") {\n\t\t\t\t\t\tcompatibility = \"Incompatible\";\n\t\t\t\t\t\tcompatibility_colour = \"red\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (result.mismatch != false) {\n\t\t\t\t\tif (result.newer == \"remote\") status_message = \"Local instance outdated, update!\";\n\t\t\t\t\telse status_message = \"Remote outdated, notify admin!\"\n\t\t\t\t\tcolours.status = 'class=\"' + issue_colour + '\"';\n\t\t\t\t}\n\t\t\t\tif (result.post != false) {\n\t\t\t\t\tvar post_colour = \"red\";\n\t\t\t\t\tif (result.post == 1) {\n\t\t\t\t\t\tpost_colour = \"green\";\n\t\t\t\t\t\tpost_result = \"Received sent package\";\n\t\t\t\t\t} else if (result.post == 8) {\n\t\t\t\t\t\tpost_result = \"Could not POST message\";\n\t\t\t\t\t} else if (result.post == 9) {\n\t\t\t\t\t\tpost_result = \"Invalid body\";\n\t\t\t\t\t} else if (result.post == 10) {\n\t\t\t\t\t\tpost_result = \"Invalid headers\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpost_colour = \"orange\";\n\t\t\t\t\t\tpost_result = \"Remote too old for this test\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresultDiv = '<div>Local version: <span ' + colours.local + '>' + result.local_version + '</span><br />';\n\t\t\t\tresultDiv += '<div>Remote version: <span ' + colours.remote + '>' + result.version + '</span><br />';\n\t\t\t\tresultDiv += '<div>Status: <span ' + colours.status + '>' + status_message + '</span><br />';\n\t\t\t\tresultDiv += '<div>Compatiblity: <span class=\"' + compatibility_colour + '\">' + compatibility + '</span><br />';\n\t\t\t\tresultDiv += '<div>POST test: <span class=\"' + post_colour + '\">' + post_result + '</span><br />';\n\t\t\t\t$(\"#connection_test_\" + id).html(resultDiv);\n\t\t\t\t//$(\"#connection_test_\" + id).html('<span class=\"green bold\" title=\"Connection established, correct response received.\">OK</span>');\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"There seems to be a connection issue. Make sure that the entered URL is correct and that the certificates are in order.\">Server unreachable</span>');\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"The server returned an unexpected result. Make sure that the provided URL (or certificate if it applies) are correct.\">Unexpected error</span>');\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"Authentication failed due to incorrect authentication key or insufficient privileges on the remote instance.\">Authentication failed</span>');\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"Authentication failed because the sync user is expected to change passwords. Log into the remote MISP to rectify this.\">Password change required</span>');\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"Authentication failed because the sync user on the remote has not accepted the terms of use. Log into the remote MISP to rectify this.\">Terms not accepted</span>');\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\t$(\"#connection_test_\" + id).html('<span class=\"red bold\" title=\"The user account on the remote instance is not a sync user.\">Remote user not a sync user</span>');\n\t\t\t\tbreak;\n\t    \t}\n\t    }\n\t})\n}\n\nfunction pgpChoiceSelect(uri) {\n\t$(\"#popover_form\").fadeOut();\n\t$(\"#gray_out\").fadeOut();\n\t$.ajax({\n\t\ttype: \"get\",\n\t\turl: \"https://pgp.mit.edu/\" + uri,\n\t\tsuccess: function (data) {\n\t\t\tvar result = data.split(\"<pre>\")[1].split(\"</pre>\")[0];\n\t\t\t$(\"#UserGpgkey\").val(result);\n\t\t\tshowMessage('success', \"Key found!\");\n\t\t},\n\t\terror: function (data, textStatus, errorThrown) {\n\t\t\tshowMessage('fail', textStatus + \": \" + errorThrown);\n\t\t}\n\t});\n}\n\nfunction lookupPGPKey(emailFieldName) {\n\tsimplePopup(\"/users/fetchPGPKey/\" + $('#' + emailFieldName).val());\n}\n\nfunction zeroMQServerAction(action) {\n\t$.ajax({\n\t\ttype: \"get\",\n\t\turl: \"/servers/\" + action + \"ZeroMQServer/\",\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess: function (data) {\n\t\t\t$(\".loading\").hide();\n\t\t\tif (action !== 'status') {\n\t\t\t\twindow.location.reload();\n\t\t\t} else {\n\t\t\t\t$(\"#confirmation_box\").html(data);\n\t\t\t\topenPopup(\"#confirmation_box\");\n\t\t\t}\n\t\t},\n\t\terror: function (data, textStatus, errorThrown) {\n\t\t\tshowMessage('fail', textStatus + \": \" + errorThrown);\n\t\t}\n\t});\n}\n\nfunction convertServerFilterRules(rules) {\n\tvalidOptions.forEach(function (type) {\n\t\tcontainer = \"#\"+ modelContext + type.ucfirst() + \"Rules\";\n\t\tif($(container).val() != '') rules[type] = JSON.parse($(container).val());\n\t});\n\tserverRuleUpdate();\n\treturn rules;\n}\n\nfunction serverRuleUpdate() {\n\tvar statusOptions = [\"OR\", \"NOT\"];\n\tvalidOptions.forEach(function(type) {\n\t\tvalidFields.forEach(function(field) {\n\t\t\tif (type === 'push') {\n\t\t\t\tvar indexedList = {};\n\t\t\t\twindow[field].forEach(function(item) {\n\t\t\t\t\tindexedList[item.id] = item.name;\n\t\t\t\t});\n\t\t\t}\n\t\t\tstatusOptions.forEach(function(status) {\n\t\t\t\tif (rules[type][field][status].length > 0) {\n\t\t\t\t\t$('#' + type + '_' + field + '_' + status).show();\n\t\t\t\t\tvar t = '';\n\t\t\t\t\trules[type][field][status].forEach(function(item) {\n\t\t\t\t\t\tif (t.length > 0) t += ', ';\n\t\t\t\t\t\tif (type === 'pull') t += item;\n\t\t\t\t\t\telse t += indexedList[item];\n\t\t\t\t\t});\n\t\t\t\t\t$('#' + type + '_' + field + '_' + status + '_text').text(t);\n\t\t\t\t} else {\n\t\t\t\t\t$('#' + type + '_' + field + '_' + status).hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\tserverRuleGenerateJSON();\n}\n\nfunction serverRuleFormActivate(type) {\n\tif (type != 'pull' && type != 'push') return false;\n\t$('.server_rule_popover').hide();\n\t$('#gray_out').fadeIn();\n\t$('#server_' + type + '_rule_popover').show();\n}\n\nfunction serverRuleCancel() {\n\t$(\"#gray_out\").fadeOut();\n\t$(\".server_rule_popover\").fadeOut();\n}\n\nfunction serverRuleGenerateJSON() {\n\tvalidOptions.forEach(function(type) {\n\t\tif ($('#Server' + type.ucfirst() + \"Rules\").length) {\n\t\t\t$('#Server' + type.ucfirst() + \"Rules\").val(JSON.stringify(rules[type]));\n\t\t} else {\n\t\t\t$('#Feed' + type.ucfirst() + \"Rules\").val(JSON.stringify(rules[type]));\n\t\t}\n\t});\n}\n\nfunction serverRulePopulateTagPicklist() {\n\tvar fields = [\"tags\", \"orgs\"];\n\tvar target = \"\";\n\tfields.forEach(function(field) {\n\t\ttarget = \"\";\n\t\twindow[field].forEach(function(element) {\n\t\t\tif ($.inArray(element.id, rules[\"push\"][field][\"OR\"]) != -1) target = \"#\" + field + \"pushLeftValues\";\n\t\t\telse if ($.inArray(element.id, rules[\"push\"][field][\"NOT\"]) != -1) target = \"#\" + field + \"pushRightValues\";\n\t\t\telse target = \"#\" + field + \"pushMiddleValues\";\n\t\t\t$(target).append($('<option/>', {\n\t\t\t\tvalue: element.id,\n\t\t\t\ttext : element.name\n\t\t\t}));\n\t\t});\n\t\ttarget = \"#\" + field + \"pullLeftValues\";\n\t\trules[\"pull\"][field][\"OR\"].forEach(function(t) {\n\t\t\t$(target).append($('<option/>', {\n\t\t\t\tvalue: t,\n\t\t\t\ttext : t\n\t\t\t}));\n\t\t});\n\t\ttarget = \"#\" + field + \"pullRightValues\";\n\t\trules[\"pull\"][field][\"NOT\"].forEach(function(t) {\n\t\t\t$(target).append($('<option/>', {\n\t\t\t\tvalue: t,\n\t\t\t\ttext : t\n\t\t\t}));\n\t\t});\n\t});\n}\n\nfunction submitServerRulePopulateTagPicklistValues(context) {\n\tvalidFields.forEach(function(field) {\n\t\trules[context][field][\"OR\"] = [];\n\t\t$(\"#\" + field + context + \"LeftValues option\").each(function() {\n\t\t\trules[context][field][\"OR\"].push($(this).val());\n\t\t});\n\t\trules[context][field][\"NOT\"] = [];\n\t\t$(\"#\" + field + context + \"RightValues option\").each(function() {\n\t\t\trules[context][field][\"NOT\"].push($(this).val());\n\t\t});\n\t});\n\n\t$('#server_' + context + '_rule_popover').fadeOut();\n\t$('#gray_out').fadeOut();\n\tserverRuleUpdate();\n}\n\n// type = pull/push, field = tags/orgs, from = Left/Middle/Right, to = Left/Middle/Right\nfunction serverRuleMoveFilter(type, field, from, to) {\n\tvar opposites = {\"Left\": \"Right\", \"Right\": \"Left\"};\n\t// first fetch the value\n\tvar value = \"\";\n\tif (type == \"pull\" && from == \"Middle\") {\n\t\tvar doInsert = true;\n\t\tvalue = $(\"#\" + field + type + \"NewValue\").val();\n\t\tif (value.length !== 0 && value.trim()) {\n\t\t\t$(\"#\" + field + type + to + \"Values\" + \" option\").each(function() {\n\t\t\t\tif (value == $(this).val()) doInsert = false;\n\t\t\t});\n\t\t\t$(\"#\" + field + type + opposites[to] + \"Values\" + \" option\").each(function() {\n\t\t\t\tif (value == $(this).val()) $(this).remove();\n\t\t\t});\n\t\t\tif (doInsert) {\n\t\t\t\t$(\"#\" + field + type + to + \"Values\").append($('<option/>', {\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttext : value\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t\t$(\"#\" + field + type + \"NewValue\").val('');\n\t} else {\n\t\t$(\"#\" + field + type + from + \"Values option:selected\").each(function () {\n\t\t\tif (type != \"pull\" || to != \"Middle\") {\n\t\t\t\tvalue = $(this).val();\n\t\t\t\ttext = $(this).text();\n\t\t\t\t$(\"#\" + field + type + to + \"Values\").append($('<option/>', {\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttext : text\n\t\t\t\t}));\n\t\t\t}\n\t\t\t$(this).remove();\n\t\t});\n\t}\n}\n\nfunction syncUserSelected() {\n\tif ($('#UserRoleId :selected').val() in syncRoles) {\n\t\t$('#syncServers').show();\n\t} else {\n\t\t$('#syncServers').hide();\n\t}\n}\n\nfunction filterAttributes(filter, id) {\n\turl = \"/events/viewEventAttributes/\" + id + \"/attributeFilter:\" + filter;\n\tif(filter === 'value'){\n\t\tfilter = $('#attributesFilterField').val().trim();\n\t\turl += \"/searchFor:\" + filter;\n\t}\n\tif (deleted) url += '/deleted:true';\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\"#attributes_div\").html(data);\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not fetch attributes.');\n\t\t}\n\t});\n}\n\nfunction pivotObjectReferences(url, uuid) {\n\turl += '/focus:' + uuid;\n\tconsole.log(url);\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\"#attributes_div\").html(data);\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not fetch attributes.');\n\t\t}\n\t});\n}\n\nfunction toggleDeletedAttributes(url) {\n\turl = url.replace(/view\\//i, 'viewEventAttributes/');\n\tif (url.indexOf('deleted:') > -1) {\n\t\turl = url.replace(/\\/deleted:[^\\/]*/i, '');\n\t} else {\n\t\turl = url + '/deleted:true'\n\t}\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\"#attributes_div\").html(data);\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not fetch attributes.');\n\t\t}\n\t});\n}\n\nfunction mergeOrganisationUpdate() {\n\tvar orgTypeOptions = ['local', 'external'];\n\tvar orgTypeSelects = ['OrganisationOrgsLocal', 'OrganisationOrgsExternal'];\n\torgType = orgTypeSelects[$('#OrganisationTargetType').val()];\n\torgID = $('#' + orgType).val();\n\torg = orgArray[orgTypeOptions[$('#OrganisationTargetType').val()]][orgID]['Organisation'];\n\t$('#org_id').text(org['id']);\n\t$('#org_name').text(org['name']);\n\t$('#org_uuid').text(org['uuid']);\n\t$('#org_local').text(orgTypeOptions[$('#OrganisationTargetType').val()]);\n}\n\nfunction mergeOrganisationTypeToggle() {\n\tif ($('#OrganisationTargetType').val() == 0) {\n\t\t$('#orgsLocal').show();\n\t\t$('#orgsExternal').hide();\n\t} else {\n\t\t$('#orgsLocal').hide();\n\t\t$('#orgsExternal').show();\n\t}\n}\n\nfunction feedDistributionChange() {\n\tif ($('#FeedDistribution').val() == 4) $('#SGContainer').show();\n\telse $('#SGContainer').hide();\n}\n\nfunction checkUserPasswordEnabled() {\n\tif ($('#UserEnablePassword').is(':checked')) {\n\t\t$('#PasswordDiv').show();\n\t} else {\n\t\t$('#PasswordDiv').hide();\n\t}\n}\n\nfunction checkUserExternalAuth() {\n\tif ($('#UserExternalAuthRequired').is(':checked')) {\n\t\t$('#externalAuthDiv').show();\n\t\t$('#passwordDivDiv').hide();\n\t} else {\n\t\t$('#externalAuthDiv').hide();\n\t\t$('#passwordDivDiv').show();\n\t}\n}\n\nfunction toggleSettingSubGroup(group) {\n\t$('.subGroup_' + group).toggle();\n}\n\nfunction runHoverLookup(type, id) {\n\t$.ajax({\n\t\tsuccess:function (html) {\n\t\t\tajaxResults[type + \"_\" + id] = html;\n\t\t\t$('.popover').remove();\n\t\t\t$('#' + type + '_' + id + '_container').popover({\n\t\t\t\ttitle: 'Lookup results:',\n\t\t\t\tcontent: html,\n\t\t\t\tplacement: 'left',\n\t\t\t\thtml: true,\n\t\t\t\ttrigger: 'hover',\n\t\t\t\tcontainer: 'body'\n\t\t\t}).popover('show');\n\t\t},\n\t\tcache: false,\n\t\turl:\"/attributes/hoverEnrichment/\" + id,\n\t});\n}\n\n$(\".eventViewAttributeHover\").mouseenter(function() {\n\t$('.popover').remove();\n\ttype = $(this).attr('data-object-type');\n\tid = $(this).attr('data-object-id');\n\tif (type + \"_\" + id in ajaxResults) {\n\t\t$('#' + type + '_' + id + '_container').popover({\n\t\t\ttitle: 'Lookup results:',\n\t\t\tcontent: ajaxResults[type + \"_\" + id],\n\t\t\tplacement: 'left',\n\t\t\thtml: true,\n\t\t\ttrigger: 'hover',\n\t\t\tcontainer: 'body'\n\t\t}).popover('show');\n\t} else {\n\t\ttimer = setTimeout(function() {\n\t\t\t\trunHoverLookup(type, id)\n\t\t\t},\n\t\t\t500\n\t\t);\n\t}\n}).mouseleave(function() {\n\tclearTimeout(timer);\n});\n\n$(\".queryPopover\").click(function() {\n\turl = $(this).data('url');\n\tid = $(this).data('id');\n\t$.get(url + '/' + id, function(data) {\n\t\t$('#popover_form').html(data);\n\t\topenPopup('#popover_form');\n\t});\n});\n\nfunction serverOwnerOrganisationChange(host_org_id) {\n\tif ($('#ServerOrganisationType').val() == \"0\" && $('#ServerLocal').val() == host_org_id) {\n\t\t$('#InternalDiv').show();\n\t} else {\n\t\t$('#ServerInternal').prop(\"checked\", false);\n\t\t$('#InternalDiv').hide();\n\t}\n}\n\nfunction requestAPIAccess() {\n\turl = \"/users/request_API/\";\n\t$.ajax({\n\t\ttype:\"get\",\n\t\turl:url,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data) {\n\t\t\t$(\".loading\").hide();\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\terror:function() {\n\t\t\tshowMessage('fail', 'Something went wrong - could not request API access.');\n\t\t}\n\t});\n}\n\nfunction initPopoverContent(context) {\n\tfor (var property in formInfoFields) {\n\t\tif (formInfoFields.hasOwnProperty(property)) {\n\t\t\t$('#' + property + 'InfoPopover').popover(\"destroy\").popover({\n\t\t\t\tplacement: 'right',\n\t\t\t\thtml: 'true',\n\t\t\t\ttrigger: 'hover',\n\t\t\t\tcontent: getFormInfoContent(property, '#' + context + formInfoFields[property])\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction getFormInfoContent(property, field) {\n\tvar content = window[property + 'FormInfoValues'][$(field).val()];\n\tif (content === undefined || content === null) {\n\t\treturn 'N/A';\n\t}\n\treturn content;\n}\n\nfunction formCategoryChanged(id) {\n\t// fill in the types\n\tvar options = $('#AttributeType').prop('options');\n\t$('option', $('#AttributeType')).remove();\n\t$.each(category_type_mapping[$('#AttributeCategory').val()], function(val, text) {\n\t\toptions[options.length] = new Option(text, val);\n\t});\n\t// enable the form element\n\t$('#AttributeType').prop('disabled', false);\n}\n\nfunction malwareCheckboxSetter(context) {\n\tidDiv = \"#\" + context + \"Category\" +'Div';\n\tvar value = $(\"#\" + context + \"Category\").val();  // get the selected value\n\t// set the malware checkbox if the category is in the zip types\n\t$(\"#\" + context + \"Malware\").prop('checked', formZipTypeValues[value] == \"true\");\n}\n\nfunction feedFormUpdate() {\n\t$('.optionalField').hide();\n\tswitch($('#FeedSourceFormat').val()) {\n\t\tcase 'freetext':\n\t\t\t$('#TargetDiv').show();\n\t\t\t$('#OverrideIdsDiv').show();\n\t\t\t$('#PublishDiv').show();\n\t\t\tif ($('#FeedTarget').val() != 0) {\n\t\t\t\t$('#TargetEventDiv').show();\n\t\t\t\t$('#DeltaMergeDiv').show();\n\t\t\t}\n\t\t\t$('#settingsCommonExcluderegexDiv').show();\n\t\t\tbreak;\n\t\tcase 'csv':\n\t\t\t$('#TargetDiv').show();\n\t\t\t$('#OverrideIdsDiv').show();\n\t\t\t$('#PublishDiv').show();\n\t\t\tif ($('#FeedTarget').val() != 0) {\n\t\t\t\t$('#TargetEventDiv').show();\n\t\t\t\t$('#DeltaMergeDiv').show();\n\t\t\t}\n\t\t\t$('#settingsCsvValueDiv').show();\n\t\t\t$('#settingsCsvDelimiterDiv').show();\n\t\t\t$('#settingsCommonExcluderegexDiv').show();\n\t\t\tbreak;\n\t}\n\tif ($('#FeedInputSource').val() == 'local') {\n\t\t$('#DeleteLocalFileDiv').show();\n\t} else {\n\t\t$('#DeleteLocalFileDiv').hide();\n\t}\n}\n\n$('.servers_default_role_checkbox').click(function() {\n\tvar id = $(this).data(\"id\");\n\tvar state = $(this).is(\":checked\");\n\t$(\".servers_default_role_checkbox\").not(this).attr('checked', false);\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\thandleGenericAjaxResponse(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: '/admin/roles/set_default/' + (state ? id : \"\"),\n\t});\n});\n\nfunction setContextFields() {\n\tif (showContext) {\n\t\t$('.context').show();\n\t\t$('#show_context').addClass(\"attribute_filter_text_active\");\n\t\t$('#show_context').removeClass(\"attribute_filter_text\");\n\t} else {\n\t\t$('.context').hide();\n\t\t$('#show_context').addClass(\"attribute_filter_text\");\n\t\t$('#show_context').removeClass(\"attribute_filter_text_active\");\n\t}\n}\n\nfunction toggleContextFields() {\n\tif (!showContext) {\n\t\tshowContext = true;\n\t} else {\n\t\tshowContext = false;\n\t}\n\tsetContextFields();\n}\n\nfunction checkOrphanedAttributes() {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tvar color = 'red';\n\t\t\tvar text = ' (Removal recommended)';\n\t\t\tif (data == '0') {\n\t\t\t\tcolor = 'green';\n\t\t\t\ttext = ' (OK)';\n\t\t\t}\n\t\t\t$(\"#orphanedAttributeCount\").html('<span class=\"' + color + '\">' + data + text + '</span>');\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/attributes/checkOrphanedAttributes/\",\n\t});\n}\n\nfunction checkAttachments() {\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\tvar color = 'red';\n\t\t\tvar text = ' (Bad links detected)';\n\t\t\tif (data !== undefined && data.trim() == '0') {\n\t\t\t\tcolor = 'green';\n\t\t\t\ttext = ' (OK)';\n\t\t\t}\n\t\t\t$(\"#orphanedFileCount\").html('<span class=\"' + color + '\">' + data + text + '</span>');\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/attributes/checkAttachments/\",\n\t});\n}\n\nfunction loadTagTreemap() {\n\t$.ajax({\n\t\tasync:true,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".treemapdiv\").html(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/users/tagStatisticsGraph\",\n\t});\n}\n\nfunction loadSightingsData(timestamp) {\n\turl = \"/sightings/toplist\";\n\tif (timestamp != undefined) {\n\t\turl = url + '/' + timestamp;\n\t}\n\t$.ajax({\n\t\tasync:true,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\".sightingsdiv\").html(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: url,\n\t});\n}\n\nfunction quickEditEvent(id, field) {\n\t$.ajax({\n\t\tasync:true,\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$(\"#\" + field + \"Field\").html(data);\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t},\n\t\ttype:\"get\",\n\t\tcache: false,\n\t\turl: \"/events/quickEdit/\" + id + \"/\" + field,\n\t});\n}\n\nfunction selectAllInbetween(last, current) {\n\tif (last === false || last == current) return false;\n\tif (last < current) {\n\t\tvar temp = current;\n\t\tcurrent = last;\n\t\tlast = temp;\n\t}\n\t$('.select_proposal, .select_attribute').each(function () {\n\t\tif ($(this).parent().data('position') > current && $(this).parent().data('position') < last) {\n\t\t\t$(this).prop('checked', true);\n\t\t}\n\t});\n}\n\n$('.galaxy-toggle-button').click(function() {\n\tvar element = $(this).data('toggle-type');\n\tif ($(this).children('span').hasClass('icon-minus')) {\n\t\t$(this).children('span').addClass('icon-plus');\n\t\t$(this).children('span').removeClass('icon-minus');\n\t\t$('#' + element + '_div').hide();\n\t} else {\n\t\t$(this).children('span').removeClass('icon-plus');\n\t\t$(this).children('span').addClass('icon-minus');\n\t\t$('#' + element + '_div').show();\n\t}\n});\n\n$('#addGalaxy').click(function() {\n\tgetPopup($(this).data('event-id'), 'galaxies', 'selectGalaxy');\n});\n\nfunction quickSubmitGalaxyForm(event_id, cluster_id) {\n\t$('#GalaxyTargetId').val(cluster_id);\n\t$('#GalaxySelectClusterForm').submit();\n\treturn false;\n}\n\nfunction checkAndSetPublishedInfo() {\n\tvar id = $('#hiddenSideMenuData').data('event-id');\n\t$.get( \"/events/checkPublishedStatus/\" + id, function(data) {\n\t\tif (data == 1) {\n\t\t\t$('.published').removeClass('hidden');\n\t\t\t$('.not-published').addClass('hidden');\n\t\t} else {\n\t\t\t$('.published').addClass('hidden');\n\t\t\t$('.not-published').removeClass('hidden');\n\t\t}\n\t});\n}\n\n$(document).keyup(function(e){\n    if (e.keyCode === 27) {\n    $(\"#gray_out\").fadeOut();\n\t\t$(\"#popover_form\").fadeOut();\n\t\t$(\"#screenshot_box\").fadeOut();\n\t\t$(\"#confirmation_box\").fadeOut();\n\t\t$(\".loading\").hide();\n\t\tresetForms();\n    }\n});\n\nfunction closeScreenshot() {\n\t$(\"#screenshot_box\").fadeOut();\n\t$(\"#gray_out\").fadeOut();\n}\n\nfunction loadSightingGraph(id, scope) {\n\t$.get( \"/sightings/viewSightings/\" + id + \"/\" + scope, function(data) {\n\t\t$(\"#sightingsData\").html(data);\n\t});\n}\n\nfunction checkRolePerms() {\n\tif ($(\"#RolePermission\").val() == '0' || $(\"#RolePermission\").val() == '1') {\n\t\t$('.readonlydisabled').prop('checked', false);\n\t\t$('.readonlydisabled').hide();\n\t} else {\n\t\t$('.readonlydisabled').show();\n\t\t$('.permFlags').show();\n\t}\n\tif ($(\"#RolePermSiteAdmin\").prop('checked')) {\n\t\t$('.checkbox').prop('checked', true);\n\t}\n}\n\n// clicking on an element with this class will select all of its contents in a\n// single click\n$('.quickSelect').click(function() {\n\tvar range = document.createRange();\n\tvar selection = window.getSelection();\n\trange.selectNodeContents(this);\n\tselection.removeAllRanges();\n\tselection.addRange(range);\n});\n\nfunction updateMISP() {\n\t$.get( \"/servers/update\", function(data) {\n\t\t$(\"#confirmation_box\").html(data);\n\t\topenPopup(\"#confirmation_box\");\n\t});\n}\n\nfunction submitMISPUpdate() {\n\tvar formData = $('#PromptForm').serialize();\n\t$.ajax({\n\t\tbeforeSend: function (XMLHttpRequest) {\n\t\t\t$(\".loading\").show();\n\t\t},\n\t\tdata: formData,\n\t\tsuccess:function (data, textStatus) {\n\t\t\t$('#gitResult').text(data);\n\t\t\t$('#gitResult').removeClass('hidden');\n\t\t},\n\t\tcomplete:function() {\n\t\t\t$(\".loading\").hide();\n\t\t\t$(\"#confirmation_box\").fadeOut();\n\t\t\t$(\"#gray_out\").fadeOut();\n\t\t},\n\t\ttype:\"post\",\n\t\tcache: false,\n\t\turl:\"/servers/update\",\n\t});\n}\n\n$(\".cortex-json\").click(function() {\n\tvar cortex_data = $(this).data('cortex-json');\n\tcortex_data = JSON.stringify(cortex_data, null, 2);\n\tvar popupHtml = '<pre class=\"simplepre\">' + cortex_data + '</pre>';\n\tpopupHtml += '<div class=\"close-icon useCursorPointer\" onClick=\"closeScreenshot();\"></div>';\n\t$('#screenshot_box').html(popupHtml);\n\t$('#screenshot_box').show();\n\t$('#screenshot_box').css({'padding': '5px'});\n\tleft = ($(window).width() / 2) - ($('#screenshot_box').width() / 2);\n\tif (($('#screenshot_box').height() + 250) > $(window).height()) {\n\t\t$('#screenshot_box').height($(window).height() - 250);\n\t\t$('#screenshot_box').css(\"overflow-y\", \"scroll\");\n\t\t$('#screenshot_box').css(\"overflow-x\", \"hidden\");\n\t}\n\t$('#screenshot_box').css({'left': left + 'px'});\n\t$(\"#gray_out\").fadeIn();\n});\n\n// Show $(id) if the enable parameter evaluates to true. Hide it otherwise\nfunction checkAndEnable(id, enable) {\n\tif (enable) {\n\t\t$(id).show();\n\t} else {\n\t\t$(id).hide();\n\t}\n}\n\n// Show and enable checkbox $(id) if the enable parameter evaluates to true. Hide and disable it otherwise.\nfunction checkAndEnableCheckbox(id, enable) {\n\tif (enable) {\n\t\t$(id).removeAttr(\"disabled\");\n\t\t$(id).prop('checked', true);\n\t} else {\n\t\t$(id).prop('checked', false);\n\t\t$(id).attr(\"disabled\", true);\n\t}\n}\n\nfunction enableDisableObjectRows(rows) {\n\trows.forEach(function(i) {\n\t\tif ($(\"#Attribute\" + i + \"ValueSelect\").length != 0) {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", true);\n\t\t} else if ($(\"#Attribute\" + i + \"Attachment\").length != 0) {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(\"#Attribute\" + i + \"Attachment\").val() != \"\");\n\t\t} else {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(\"#Attribute\" + i + \"Value\").val() != \"\");\n\t\t}\n\t\t$(\"#Attribute\" + i + \"Value\").bind('input propertychange', function() {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(this).val() != \"\");\n\t\t});\n\t\t$(\"#Attribute\" + i + \"Attachment\").on('change', function() {\n\t\t\tcheckAndEnableCheckbox(\"#Attribute\" + i + \"Save\", $(\"#Attribute\" + i + \"Attachment\").val() != \"\");\n\t\t});\n\t});\n}\n\nfunction objectReferenceInput() {\n\tvar types = [\"Attribute\", \"Object\"];\n\tfor (var type in types) {\n\t\tfor (var k in targetEvent[types[type]]) {\n\t\t\tif (targetEvent[types[type]][k]['uuid'] == $('#ObjectReferenceReferencedUuid').val()) {\n\t\t\t\t$('#targetSelect').val($('#ObjectReferenceReferencedUuid').val());\n\t\t\t\tchangeObjectReferenceSelectOption();\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction objectReferenceCheckForCustomRelationship() {\n\tvar relationship_type_field = $('#ObjectReferenceRelationshipTypeSelect option:selected');\n\tvar relationship_type = $(relationship_type_field).val();\n\tif (relationship_type == 'custom') {\n\t\t$('#ObjectReferenceRelationshipType').parent().removeClass('hidden');\n\t} else {\n\t\t$('#ObjectReferenceRelationshipType').parent().addClass('hidden');\n\t}\n}\n\nfunction changeObjectReferenceSelectOption() {\n\tvar object = $('#targetSelect option:selected');\n\tvar uuid = $(object).val();\n\t$('#ObjectReferenceReferencedUuid').val(uuid);\n\tvar type = $(object).data('type');\n\tif (type == \"Attribute\") {\n\t\t$('#targetData').html(\"\");\n\t\tfor (var k in targetEvent[type][uuid]) {\n\t\t\tif ($.inArray(k, ['uuid', 'category', 'type', 'value', 'to_ids']) !== -1) {\n\t\t\t\t$('#targetData').append('<div><span id=\"' + uuid + '_' + k + '_key\" class=\"bold\"></span>: <span id=\"' + uuid + '_' + k + '_data\"></span></div>');\n\t\t\t\t$('#' + uuid + '_' + k + '_key').text(k);\n\t\t\t\t$('#' + uuid + '_' + k + '_data').text(targetEvent[type][uuid][k]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$('#targetData').html(\"\");\n\t\tfor (var k in targetEvent[type][uuid]) {\n\t\t\tif (k == 'Attribute') {\n\t\t\t\t$('#targetData').append('<br /><div><span id=\"header\" class=\"bold\">Attributes:</span>');\n\t\t\t\tfor (attribute in targetEvent[type][uuid]['Attribute']) {\n\t\t\t\t\tfor (k2 in targetEvent[type][uuid]['Attribute'][attribute]) {\n\t\t\t\t\t\tif ($.inArray(k2, ['category', 'type', 'value', 'to_ids']) !== -1) {\n\t\t\t\t\t\t\t$('#targetData').append('<div class=\"indent\"><span id=\"' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_key\" class=\"bold\"></span>: <span id=\"' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_data\"></span></div>');\n\t\t\t\t\t\t\t$('#' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_key').text(k2);\n\t\t\t\t\t\t\t$('#' + targetEvent[type][uuid]['Attribute'][attribute]['uuid'] + '_' + k2 + '_data').text(targetEvent[type][uuid]['Attribute'][attribute][k2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$('#targetData').append('<br />');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($.inArray(k, ['name', 'uuid', 'meta-category']) !== -1) {\n\t\t\t\t\t$('#targetData').append('<div><span id=\"' + uuid + '_' + k + '_key\" class=\"bold\"></span>: <span id=\"' + uuid + '_' + k + '_data\"></span></div>');\n\t\t\t\t\t$('#' + uuid + '_' + k + '_key').text(k);\n\t\t\t\t\t$('#' + uuid + '_' + k + '_data').text(targetEvent[type][uuid][k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n$('.add_object_attribute_row').click(function() {\n\tvar template_id = $(this).data('template-id');\n\tvar object_relation = $(this).data('object-relation');\n\tvar k = $('#last-row').data('last-row');\n\tvar k = k+1;\n\t$('#last-row').data('last-row', k);\n\turl = \"/objects/get_row/\" + template_id + \"/\" + object_relation + \"/\" + k;\n\t$.get(url, function(data) {\n\t\t$('#row_' + object_relation + '_expand').before($(data).fadeIn()).html();\n\t});\n});\n\n$('.quickToggleCheckbox').toggle(function() {\n\tvar url = $(this).data('checkbox-url');\n});\n\n(function(){\n    \"use strict\";\n    $(\".datepicker\").datepicker({\n        format: 'yyyy-mm-dd',\n    });\n}());\n"], "filenames": ["app/Controller/AppController.php", "app/webroot/js/misp.js"], "buggy_code_start_loc": [49, 2061], "buggy_code_end_loc": [50, 2062], "fixing_code_start_loc": [49, 2061], "fixing_code_end_loc": [50, 2062], "type": "CWE-79", "message": "In the sharingGroupPopulateOrganisations function in app/webroot/js/misp.js in MISP 2.4.82, there is XSS via a crafted organisation name that is manually added.", "other": {"cve": {"id": "CVE-2017-16802", "sourceIdentifier": "cve@mitre.org", "published": "2017-11-13T16:29:00.263", "lastModified": "2017-11-29T14:45:50.503", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In the sharingGroupPopulateOrganisations function in app/webroot/js/misp.js in MISP 2.4.82, there is XSS via a crafted organisation name that is manually added."}, {"lang": "es", "value": "En la funci\u00f3n sharingGroupPopulateOrganisations en app/webroot/js/misp.js en MISP 2.4.82 existe XSS mediante un nombre de organizaci\u00f3n a\u00f1adido manualmente."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:misp-project:misp:2.4.82:*:*:*:*:*:*:*", "matchCriteriaId": "0E69BD26-5502-463A-B63F-C48E0A90506B"}]}]}], "references": [{"url": "https://github.com/MISP/MISP/commit/a659664447a7b2a383cb9e0f6b43dcb43ec69194", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/MISP/MISP/commit/a659664447a7b2a383cb9e0f6b43dcb43ec69194"}}