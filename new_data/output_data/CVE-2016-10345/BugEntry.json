{"buggy_code": ["Next version (not yet released)\n-------------------------------\n\n * Upgrades union_station_hooks_core to version 2.1.2.\n * [Enterprise] When running a Rails app in multithreaded mode, Passenger Enterprise automatically tags Rails logs with the current thread number. This makes it possible to distinguish logs generated by different threads.\n * Fixes permissions issue on Linux when setting OOM score after lowering privileges. Closes GH-1858.\n * [Standalone] Allows raw json envvars in Passengerfile.json. Closes GH-1837.\n * [Standalone] Make the `max_requests` option available on the command line as well. \n * Fixes unaligned memory access in base64 decoder on platforms that have strict aliasing requirements (non x86/x86_64). Closes GH-1646.\n * Introduces daily Passenger security update check to warn (error log) if there are newer Passenger versions with important security fixes (describing what was discovered, what is affected, which version has the fix).\n * Fixes compilation on Linux when a non-glibc C library is in use. Closes GH-1870.\n * `passenger-install-nginx-module` and the standalone compiler now add the http v2, realip and addition module flags for Nginx (just like the APT/RPM/autobuilder already had). Closes GH-1788. \n * [Apache] Fixes PassengerShowVersionInHeader option. Thanks to Sebastian Welther for contributing this.\n * Passenger now reports when you try to use Node.js or Meteor clustering, and tries to continue with just a nonfunctional shim in place, so that if your code uses the clustering APIs your app may still work.\n * Updates libev config.sub and config.guess to support newer platforms such as the IBM power 8.\n * Fixes an issue where passenger-config couldn't restart an app if the TMPDIR variable was set to /tmp\n * `passenger-install-apache-module` now suggests the correct apache package on Ubuntu Xenial. Closes GH-1884.\n * [Standalone] The TempDirToucher will now spend most of its time with reduced privileges, except when it's actively touching files. This allows it to be killed when Passenger is quit in most circumstances. Closes GH-1678.\n * [Standalone] Fixes starting Passenger as a non-extant user. Closes GH-1849.\n * Improved look of the error pages for failing to spawn an application (development & production mode), and Error ID is now also shown in production mode.\n * [Standalone] Enable ipv6 support by default in builtin nginx. Closes GH-1873.\n * [Nginx] Updates to APT package builder (Debian & Ubuntu) with fix for www-data to root privilege escalation via log file handling (CVE-2016-1247/USN-3114-1).\n * [Nginx] Updates to RPM package builder (CentOS & RHEL) with fix for 1.10.x system nginx package overriding the nginx from the Passenger repo. Closes GH-1895.\n * [Nginx] The preferred Nginx version is now 1.10.2 (previously 1.10.1).\n * RPM pkg builder fix for breaking SELinux change in RHEL 7.3.\n\n\nRelease 5.0.30\n--------------\n\n * Changes mbuf block size from 512 to 4096 bytes to better fit modern requests and significantly speed up disk buffering.\n * [Nginx] Fixes PCRE checksum after the preferred version update in 5.0.29 (contributed by: clemensg).\n * [Apache] Fixes buffer limit crash on large file upload (when core disk buffer can't keep up with client for some time), and limits per-client buffer memory usage to 130 KB. Closes GH-1620.\n * Fixes potential hang when an UnseekableSocket gets serialized to json. Closes GH-1838.\n\n\nRelease 5.0.29\n--------------\n\n * Fixes the FreeBSD build breaking due to the `-ldl` flag introduced by the LVE integration patch (5.0.28). Closes GH-1805.\n * Fixes per-application interpreter override (ruby, node, python) being ignored in mass deployment mode. Closes GH-1818.\n * Fixes incomplete refactor from 5.0.27 that could, under specific conditions, lead to a Passenger crash. Closes GH-1794.\n * [Apache] Remove unused code that caused a crash in configurations with thousands of VirtualHost entries. Closes GH-1676.\n * [Nginx] Fixes use of invalid logfile name (memory already released) in backup log redirection code. Possibly related to GH-1774.\n * [Nginx] The preferred Nginx version is now 1.10.1 (previously 1.10.0).\n * [Nginx] The preferred PCRE version is now 8.39 (previously 8.34).\n * [Standalone] Passenger Standalone now supports /dev/stdout and /dev/stderr as log file path (via `--log-file` or Passengerfile.json). This is especially useful in Docker containers. In previous versions logging to those paths did not work, resulting in nothing getting logged at all.\n\n\nRelease 5.0.28\n--------------\n\n * Finalizes the fix (5.0.26) for the `rails server` command integration to prevent \"missing on_event\" errors. Closes GH-1768.\n * Fixes missing -fPIC in Nginx dynamic module compilation (5.0.26) on Linux (rewrite of a patch by Andrei Belov). Closes GH-1793.\n * Fixes memory leak that could occur whenever more than 1024 concurrent requests are handled (more likely since the higher concurrency support options from 5.0.24). Closes GH-1797.\n * Integrates with CloudLinux LVE and CageFS (security checks and a new option PassengerLveMinUid). Thanks to Oleksiy Shchukin from CloudLinux Inc. for contributing this.\n * Fixes the Nginx build when the PCRE library is not available (such as when compiling with `--without-http_rewrite_module`). Closes GH-1796.\n * Extends `passenger-memory-stats` filter to show the instance dir toucher too (as well as the core in valgrind debug runs).\n * Changes the default for friendly error pages to \"off\" unless the environment is set to \"development\", rather than \"on\" unless \"staging\" or \"production\". Closes GH-1782.\n * [Nginx] The preferred Nginx version is now 1.10.0 (previously 1.8.1).\n\n\nRelease 5.0.27\n--------------\n\n * Fixes encoding issue for Ruby apps that resulted in a 0-byte response body. This occurred when the Ruby native support lib was not used and the app outputted an encoding that doesn't mix with UTF-8 (like UTF-16). Closes GH-1763.\n * Fixes Passenger Core and application processes staying on the Watchdogs OOM score (unkillable) when user switching is set to off. Closes GH-1631.\n * Supports Debian GNU/kFreeBSD build. Based on contribution by stevenc99.\n * Switches a number of places in the Passenger Core over to using the monotonic clock instead of the wallclock for robustness against clock time-stepping.\n * Slightly improves out-of-memory detection in some subroutines.\n * Fixes incomplete libuv upgrade: some build files were not autoregenerated during the upgrade from 1.5.0 to 1.8.0 in the previous release.\n * Warnings about 502 responses that are caused by applications aborting their output while the client is no longer connected (e.g. due to half-close event, reported since 5.0.26) are now reduced to debug level.\n * Fixes automatic compilation of Ruby's native_support library in case Passenger was installed through Debian or RPM packages. Closes GH-1778.\n * Fixes memory leak when buffering large request/response bodies to disk (which happens as soon as the 100 KB memory buffer is full).\n * Fixes crash if an application spawn fails and a non-UTF8 character appears in the spawn output. Closes GH-1601.\n * Updates the `rails server` command integration (from 5.0.25) to prevent \"missing on_event\" errors. Closes GH-1768. Update: not all required code made it to the release, the final fix is delivered in 5.0.28.\n * [Union Station] Fixes a crash that occurs if all of the following conditions are met: 1) Union Station support is enabled, 2) the client sent at least one header containing the empty string, 3) the application responds with a 4xx or 5xx status. Closes GH-1776.\n\n\nRelease 5.0.26\n--------------\n\n * `passenger-status --show=server` now reports the speed at which new requests are accepted.\n * `passenger-status --show=server` now reports `last_data_send_time` and `last_data_receive_time` which can be used to troubleshoot long-running requests (for example, to see if a websocket heartbeat is stuck).\n * Passenger now reports TCP half-closing events to Node.js and Meteor applications, which allows them to detect request body and WebSocket closes without having to send data to the client.\n * Fixes outputting Content-Length and Transfer-Encoding headers on HEAD requests for Ruby apps. These headers were omitted in previous versions on HEAD requests.\n * Bumps the default socket backlog size from 1024 to 2048.\n * Upgrades libuv to version 1.8.0.\n * When using our RPM packages, system SELinux policy upgrades no longer break the Passenger SELinux policy. Closes GH-1663.\n * [Apache] Fixes compilation against Apache installations which include `-pie` in CFLAGS. Closes GH-1756.\n * [Nginx, Standalone] Bumps default Nginx worker_connections from 1024 to 4096 (effectively 2048 because of internal reverse proxy)\n * [Nginx, Standalone] Introduces the option `core_file_descriptor_ulimit` and `app_file_descriptor_ulimit`, for setting the file descriptor ulimits of the Passenger core and the application, respectively.\n * [Nginx] Passenger can now be [compiled as an Nginx dynamic module](https://www.phusionpassenger.com/library/install/nginx/install_as_nginx_module.html#dynamic-module). Thanks to Ruslan Ermilov from NGINX Inc for contributing this.\n * [Standalone] Prints a warning when an unsupported configuration option in Passengerfile.json is set.\n * [Standalone] Fixes \"address already in use\" errors when using the builtin engine.\n * [Enterprise] The rolling restart feature now waits until the old process is completely gone (drained its request queue, process exited) before proceeding with rolling restarting the next process. This results in friendlier resource usage during rolling restart.\n * [Union Station] Fixes custom logging time arguments getting overwritten by current time for Ruby apps (so some sub-blocks like \"framework request processing\" appeared shorter than they were). This could happen since the switch to monotonic clock in 5.0.22.\n\n\nRelease 5.0.25\n--------------\n\n * Integrates into the `rails server` command. Please learn more at [the Passenger + Rails integration documentation](https://www.phusionpassenger.com/library/dev/ruby/rails_integration.html).\n * Adds explicit support for Action Cable. Please learn more at the [Passenger Library](https://www.phusionpassenger.com/library/dev/ruby/rails_integration.html#action_cable).\n * Removes packages for Ubuntu 15.04 Vivid and Debian 6. Ubuntu 15.04 and Debian 6 are still supported, we just don't supply packages for them anymore. If you are an Ubuntu 15.04 or Debian 6 user and you want to use Passenger >= 5.0.25, then please upgrade your distribution, or install Passenger from RubyGems/tarball.\n * Fixes a potential crash due to memory corruption in code for `passenger-config reopen-logs`.\n * Fixes a potential crash in the large (inbound/outbound) file buffering code.\n * Fixes a crash that occurs when using Nginx + HTTPS + Sub-requests. Closes GH-1724.\n * Fixes a crash that occurs when using Nginx + syslog and a logfile for Passenger. Also fixes edge cases where the Nginx logpath would override the Passenger logpath. Closes GH-1514 (again).\n * [Union Station] Fixes a potential crash due to a wrong limit on snprintf (introduced in 5.0.24 by GH-1633). Closes GH-1744.\n * [Union Station] Fixes Union Station Node.js request introspection to allow for application.use method chaining. Closes GH-1745.\n * [Union Station] Fixes information about sinks sometimes missing from `passenger-status --show=union_station`.\n * [Union Station] When one or more Union Station gateways are suffering from technical difficulties, the Union Station support code now tries more quickly to reestablish the connection.\n * [Standalone] Don't reject the value 0 (meaning no limit) for `--max-request-queue-size`. Closes GH-1743.\n * [Standalone] Makes the `--address` option work more reliably if the passed hostname may resolve to multiple addresses. For example, if you pass `--address localhost` then previous versions could fail because Passenger thinks it's an IPv6 address (::1) while Nginx thinks it's an IPv4 address (127.0.0.1). Hostname resolution is now done in a consistent manner.\n * [Standalone] Adds the `--unlimited-concurrency-path` configuration option.\n * [Standalone] Adds IPv6 support to the builtin engine.\n\n\nRelease 5.0.24\n--------------\n\n * Fixes a crash when the new `force_max_concurrent_requests_per_process` option (5.0.22) was used for non-Node.js apps (e.g. Ruby). Closes GH-1720.\n * Fixes Solaris compilation. This was a regression due to the patch for GH-1643 in 5.0.22. Closes GH-1694, GH-1701.\n * Logs for [Union Station](https://www.unionstationapp.com) provide more information about request queueing. Closes GH-1633.\n * Also log HTTP headers to Union Station for HTTP 4xx responses (extends the header logging for HTTP 5xx that was added in 5.0.22)\n * Fixes cases where compilation failure of (optional) native utils was not reported.\n * On Ruby, no longer traps SIGEXIT. This fixes erroneously setting `$ERROR_INFO` in `at_exit` callbacks. Closes GH-1730.\n * Fixes a wrong loop exit condition that could cause a deadlock with 100% CPU usage by Passenger core. Closes GH-1709, GH-1732.\n * Adds `socket_backlog` option to configure the Passenger Core socket backlog. For use with e.g. \"Resource temporarily unavailable while connecting to upstream\" errors. Closes GH-1726.\n * [Nginx] The preferred Nginx version is now 1.8.1 (previously 1.8.0).\n * [Standalone] Fixes the default value of the `load_shell_envvars` option. It's supposed to be disabled by default, but due to a typo it was enabled by default.\n\n\nRelease 5.0.23\n--------------\n\n * Fixes the request acceptor error handling timeout. When an error occurs while Passenger is accepting a request (for example, when Passenger has run out of file descriptors), Passenger is supposed to wait for 3 seconds before trying again. Because of a typo, Passenger actually waited 3 milliseconds.\n * [Enterprise] Fixed a regression in the Passenger Standalone Nginx config template that breaks the Mass Deployment feature.\n * The mime type for serving static XHTML files is updated. We no longer use the mobile profile, so it is recognized by desktop browsers. Closes GH-1695.\n * Improves error messages about Ruby native support to indicate the optional nature. Passenger is able to operate even without the native support extension, but that wasn't clear enough to some users, causing them to think of the old messages as errors.\n * [Standalone, Nginx] When using the new `abort_websockets_on_process_shutdown` configuration option, Passenger waited for the app to close without signaling it that shutdown was in progress. Node.js apps now get a SIGINT. Closes GH-1702.\n * With friendly error pages off Passenger would still show a trace (referencing only Passenger code) for unusual spawn errors. This has been changed to a generic error message. Closes GH-1704.\n\n\nRelease 5.0.22\n--------------\n\n * Fixes a header collision vulnerability (CVE-2015-7519, medium severity). Note that this fix involves filtering request headers containing underscores. Please see our blog for detailed vulnerability description and advisory. Thanks to the SUSE security team for reporting this issue.\n * [Apache] Fixes compatibility with Apache 2.4.17's mod_autoindex. Fix contributed by Eric Covener. Closes GH-1642.\n * [Standalone] Passenger Standalone now [accepts configuration options from environment variables](https://www.phusionpassenger.com/library/config/standalone/intro.html). This makes using Passenger Standalone significantly easier on Heroku or on systems that follow the 12-factor principle. Closes GH-1661.\n * [Standalone] The Nginx configuration template has been cleaned up. It is now significantly easier to edit the Nginx configuration template without breaking compatibility with future versions.\n * [Standalone] The `passenger start` command now performs a sanity check on the internally generated Nginx configuration file and advises you accordingly when there is a problem.\n * [Standalone] The `passenger status` and `passenger stop` commands now respect Passengerfile.json. Closes GH-1593.\n * [Standalone] Passenger Standalone on Solaris now properly tails the application log file.\n * [Standalone] Fixes a problem with Passenger Standalone's builtin engine exiting at startup when run on Solaris.\n * [Standalone] `passenger start` now accepts the `--envvar` command line option for passing environment variables to the application.\n * [Standalone] `passenger start` now accepts the `--memory-limit` configuration option.\n * [Standalone] `passenger start` now accepts the `--max-request-queue-size` configuration option.\n * [Standalone] `passenger start` now accepts the `--debug-nginx-config` configuration option. This option allows you to view the Nginx configuration file that Passenger Standalone generates internally.\n * [Standalone, Nginx] Introduces a new configuration option: `abort_websockets_on_process_shutdown`. By default, when Passenger shuts down or restarts an application process, it will abort associated Websocket connections. This option allows you to disable that behavior. Closes GH-1686.\n * Introduces a new configuration option: `force_max_concurrent_requests_per_process`. This option is mostly useful for making dynamic process scaling work in Node.js and Meteor apps.\n * Various administration tools, such as `passenger-status`, no longer raise an flock EBADF error on Solaris. Closes GH-1643.\n * The `passenger-config reopen-logs` command, when used in combination with Passenger Standalone and the Nginx engine, now also instructs Nginx to reopen its log files. Closes GH-1674.\n * Fixes Passenger erroneously adding a `Content-Length` or `Transfer-Encoding` header to Ruby HTTP 204 No Content responses. Closes GH-1595.\n * Fixes Union Station logging of Rack response body actions.\n * The `passenger-config restart-app` command, when given `--ignore-app-not-running`, now properly exits with a zero status when one or more applications are running, but none of them belonging to the invoking user. Closes GH-1655.\n * The `passenger-config validate-install` command no longer prints false warnings about duplicate Passenger installs on systems that use RBenv. Closes GH-1627.\n * Fixes race conditions in the automatic building of the Ruby native support extension. Closes GH-1570.\n * [Enterprise] Fixes compatibility with byebug 7.0. Closes GH-1662.\n * Support Union Station logging for Node.js applications, with Express/MongoDB automatically supported. \n * The Ruby Union Station hooks no longer abort with a fatal error when the application does not call the Union Station initializer method during startup. The error is now only logged.\n * In case of an error response (HTTP 5xx), Union Station logging will also contain request headers.\n * The Union Station hooks are now more resilient against environment variable problems.\n\n\nRelease 5.0.21\n--------------\n\n * Properly handles Ruby applications that output the `Content-Length` and `Transfer-Encoding` headers in non-standard casing, e.g. `Content-length`. Closes GH-1517.\n * Fixes Ruby application loading incompatibilities caused by the use of absolute paths. Closes GH-1596.\n * Fixes OpenSSL detection problems on OS X 10.11 El Capitan. OS X 10.11 no longer includes OpenSSL headers, so Passenger will suggest and use OpenSSL from Homebrew. Closes GH-1630.\n * Introduces the [secure HTTP headers](https://www.phusionpassenger.com/library/indepth/meteor/secure_http_headers.html) feature for Node.js and Meteor apps. This mechanism allows Passenger to send per-request information to the application, while guaranteeing that this information is not spoofed by the client.\n * Per-request Apache environment variables are now passed to Node.js and Meteor apps through the [`!~Passenger-Envvars`](https://www.phusionpassenger.com/library/indepth/nodejs/apache_per_request_envvars.html) secure header.\n * Fixes some unintentional caching of request-specific environment variables. Closes GH-1479.\n * For Node.js applications, Passenger now calls `process.emit('message', 'shutdown')` whenever Passenger shuts down an application process. This is the same hook as used by PM2, allowing applications which use the PM2 graceful shutdown mechanism to be run on Passenger without changes.\n * [Enterprise] Fixes a bug in passenger-irb where printing strings larger than 64 KB would cause it to crash.\n * [Enterprise] Fixes the `passenger-config restart-app` command so that it performs a non-rolling-restart unless `--rolling-restart` is given as command line option, as per the documentation. Previously, `passenger-config restart-app` without `--rolling-restart` would perform a rolling restart if rolling restarts are configured in the configuration file, but this contradicted documented behavior. Closes GH-1634.\n\n\nRelease 5.0.20\n--------------\n\n * Fixes memory management bugs in Union Station support.\n * Improves the error handling in Union Station support.\n * `passenger-config validate-install` now properly handles CR characters in Apache configuration files.\n\n\nRelease 5.0.19\n--------------\n\n * Fixes an encoding crash in `passenger-memory-stats` on OS X in case one or more processes are running on the system with names containing UTF-8 characters. Closes GH-1603.\n * [Ruby] Fixes handling of HTTP 205 responses, which would cause client connections to freeze.\n * Improves Union Station data collection: more Rack I/O events are now logged. The time taken to write out and to close the Rack response body are now logged.\n * Improves Union Station data sending: errors are now logged more clearly, and DNS errors are now handled more robustly.\n * Improves Union Station troubleshooting: errors can now be diagnosed by running `passenger-status --show=union_station`.\n * Refactors the Union Station Ruby hook code. They have been extracted to external gems. However, they are still bundled with Passenger for ease of use.\n\n\nRelease 5.0.18\n--------------\n\n * Fixes more memory corruption issues in the palloc subsystem.\n * Fixes memory corruption issues in the Passenger core that may occur if the application sets many response headers. The issue was caused by an off-by-one bug.\n\n\nRelease 5.0.17\n--------------\n\n * Adds packages for Ubuntu 15.10 \"Wily\", even though Ubuntu 15.10 hasn't been released yet.\n * Fixes some memory corruption issues in the palloc subsystem. Closes GH-1587.\n * Fixes the Node.js `PhusionPassenger.on('exit')` event. This event worked if you restart the app or detach an application process, but not if you stop Passenger.\n * Fixes support for `passenger_pre_start` URLs that contain very long authentication strings. This was caused by the fact that our Base64 encoder generated unexpected newlines.\n * [Standalone] Improves application prestarting. Application prestarting is now available in combination with the 'builtin' engine, and now works when SSL is used.\n\n\nRelease 5.0.16\n--------------\n\n * Allows independent configuration of Union Station gateway address, port and certificate. Closes GH-1543.\n * Supports seek() such that body.rewind works when using Rack middleware that uses Zlib::GzipReader (e.g. for compressed requests). Closes GH-1553.\n * [Apache] Improves detection of Apache configuration file problems. Closes GH-1577.\n * [Enterprise] Fixes installation of the Passenger Enterprise Apache module on Debian Testing.\n * Fixes logging of HTTP response code for Union Station. This regression was introduced by Passenger 5. Closes GH-1581. \n * Adds a new subcommand `passenger-config about support-binaries-dir`.\n * Fixes a regression in the Node.js loader with regard to custom startup files. This bug was introduced in 5.0.14. Closes GH-1557 (again).\n * Fixes a crash when a Ruby application is accessed through a sub-URI and a root virtual host at the same time.\n\n\nRelease 5.0.15\n--------------\n\n * Support SHA256 digests for the Rails asset pipeline, as used by Sprockets 3.x.\n * Support for JRuby 9.0.0.0. Closes GH-1562.\n * Fixes some bugs in Union Station support, which causes some data (such as controller information and exceptions) to not be logged.\n * The old Users Guides have been deprecated in favor of the [Passenger Library](https://www.phusionpassenger.com/library/). The Users Guides now redirect to appropriate sections in the Passenger Library.\n\n\nRelease 5.0.14\n--------------\n\n * [Standalone] Relative path handling has been improved. In previous versions, relative paths were not handled in a consistent manner. Relative paths are now handled consistently according to the following rules:\n\n   - If a relative path is given via a command line option, then it is relative to the current working directory.\n   - If a relative path is given via Passengerfile.json, then it is relative to Passengerfile.json.\n\n   Closes GH-1557.\n * [Standalone] The `--disable-turbocaching` now works with the Nginx engine.\n\n\nRelease 5.0.13\n--------------\n\n * The `passenger-config restart-app` command now supports the option `--ignore-passenger-not-running`. If this option is given, the command will exit normally instead of exiting with an error, if Passenger is not running. This option is useful in deployments involving Passenger Standalone. In an initial deployment, Passenger Standalone may not yet be running. Passing this option allows you to ignore that issue.\n * SELinux policy issues in the RPMs have been fixed.\n * [Apache] `passenger-config reopen-logs` didn't work on Apache unless you explicitly set `PassengerLogFile`. This has now been fixed.\n * [Standalone] Due to some internal refactorings, the Passenger Standalone Nginx configuration template has changed. If you used a custom Nginx configuration template, please merge our latest changes into it.\n\n\nRelease 5.0.12\n--------------\n\n * [Enterprise] Fixed passenger-irb. It was broken in 5.0.10 because of the change that made using admin commands without sudo possible.\n\n\nRelease 5.0.11\n--------------\n\n * In 5.0.10, admin tools such as `passenger-status` and `passenger-config restart-app` display an authorization error if they are run without sudo, while at the same time Passenger isn't serving any applications. Since this is confusing, they have now been modified to display a more appropriate error message.\n * Fixes a bug in the RPMs that prevent admin tools such as `passenger-status` and `passenger-config restart-app` from working when they are invoked without root privileges.\n * Fixes a bug on OS X that prevent admin tools such as `passenger-status` and `passenger-config restart-app` from detecting Passenger instance directories when they are invoked without root privileges. Closes GH-1535.\n * Fixes a bug that causes Passenger not to work if the HOME environment variable is not set.\n * Fixes compatibility with non-Rails Ruby apps that require the actionview gem. Closes GH-1547.\n * Fixes some non-fatal \"permission denied\" error that may occasionally occur if user switching is turned off. Closes GH-1541.\n * Relative values for the `pid_file` and `log_file` options in Passengerfile.json are now supported.\n * If Passengerfile.json contains a syntax error, Passenger Standalone now correctly prints an error message instead of crashing.\n * Sending a SIGABRT signal to a Ruby process now properly makes it terminate.\n * The `passenger-config restart-app` command now accepts `.` as parameter, which it will interpreter as \"restart the app in the current working directory\". Closes GH-1386.\n * [Apache] Setting `PassengerLogLevel` no longer redirects Apache's own stderr to that log file. Closes GH-1373.\n * [Standalone] Passenger Standalone's Nginx engine now includes the RealIP module. Closes GH-1389.\n * [Standalone] The `--max-preloader-idle-time` option has been added.\n\n\nRelease 5.0.10\n--------------\n\n * It is now possible to run `passenger-status`, `passenger-config restart-app` and other admin commands without using sudo. When run without sudo, these admin commands will allow you to operate on apps and processes that are owned by the user that invoked the admin command. Closes GH-1392.\n * Fixes a crash introduces in 5.0.9 due to not properly initializing a variable. Closes GH-1530.\n * The `passenger-config reopen-logs` command now works by instructing the Watchdog process to reopen the log file, while instructing the other Passenger processes to re-inherit the log file from the Watchdog instead of trying to reopen the log file on their own. This makes log file reopening more robust. Closes GH-1452.\n * `passenger-config restart-app` no longer leaves the terminal in a state with black background. Closes GH-1526.\n * `passenger-config admin-command` has been renamed to `passenger-config api-call` in order to avoid confusion with any potential admin interfaces that we will introduce in the future.\n * If Union Station support is enabled, process and system metrics weren't being sent correctly to Union Station. This has been fixed.\n * [Enterprise] Fixes the fact that the Passenger Enterprise RPM didn't correctly set SELinux permissions on its own files.\n * [Apache] passenger-install-apache2-module no longer aborts with an error if the Apache configuration file contains errors. Closes GH-1525.\n * [Apache] Fixes a typo that would cause passenger-install-apache2-module to crash on Red Hat and CentOS systems on which the SELinux command line tools are not installed. Closes GH-1527.\n\n\nRelease 5.0.9\n-------------\n\n * The casing of original headers as generated by the application are now preserved, instead of being downcased. This fixes compatibility issues with broken HTTP clients. Closes GH-1436.\n * Internal refactoring: we've replaced libeio with libuv. This makes some of our code simpler. Closes GH-1428.\n * When the passenger-status tool tries to cleanup a stale instance directory, it will no longer abort with an error when it fails to do that. It will now merely print a warning. Fixes [StackOverflow question 30354732](http://stackoverflow.com/questions/30354732/cap-aborted-capistrano-aborts-rails-deploy-while-attempting-to-chown-tmp-p/30357100#30357100).\n * Fixes compilation problems on Solaris.\n * The Ruby handler has been made more robust. Previously, it was possible for applications to corrupt connections by returning incorrect Rack responses. This may cause connections to get stuck. The Rack handler has been hardened to ensure that connections will never get corrupted or stuck. Closes GH-1512.\n * The Ruby handler now closes the Rack response body even when the socket connection is hijacked by the application. The Rack specification is unclear about what to do in this case, and different Ruby app servers do different things. We have found that by closing the body object anyway, we maximize compatibility with existing Rack middlewares and apps, such as Rack::Lock. Background information about this issue can be found at https://github.com/ngauthier/tubesock/issues/10#issuecomment-72539461.\n * Fixes a crash that could occur if some HTTP request headers are present, but have the empty value. Closes GH-1524.\n * Fixes a permission problem that prevents the web server from communicating with Passenger when user switching is off. Closes GH-1520.\n * Fixes a few small one-time memory leaks in the Passenger agent. This wraps up the workitems discovered in valgrind runs on earlier versions.\n * Fixes use of uninitialized metrics. This could happen for a brief moment after spawning.\n * [Apache] If you pass the `--apxs2-path` parameter to `passenger-install-apache2-module`, and the apxs2 path that you specified is not in PATH, then the installer would think that Apache installation is broken. This has been fixed.\n * [Apache] A `Connection: close` header that was used for internal communication between Passenger processes was being leaked to the client, which breaks HTTP keep-alive connections. This has been fixed. Closes GH-1516.\n * [Nginx] The preferred Nginx version is now 1.8.0. It was previously 1.6.3.\n * [Nginx] Passenger now passes to the application the raw URI as sent by the client, as long as Nginx didn't modify the URI (e.g. as part of rewrite rules). This means that escaped slashes (%2F) in the URI now work correctly and out-of-the-box as long as there are no applicable rewrite rules.\n * [Nginx] Fixes that crash that would occur if Nginx is configured to log to syslog. And to prevent log messages from disappearing into a black hole, Passenger will now ask you to set `passenger_log_file` if Nginx is configured to log to syslog. Closes GH-1514.\n * [Standalone] Prevents an existing instance from being shut down if starting a new instance fails.\n\n\nRelease 5.0.8\n-------------\n\n * We now supply Debian 8 and Ubuntu 15.04 packages. Closes GH-1494 and GH-1400.\n * We now supply Red Hat 6, Red Hat 7, CentOS 6 and CentOS 7 packages.\n * We no longer supply Ubuntu 10.04 packages because Ubuntu 10.04 is no longer supported by Canonical.\n * Fixes a Passenger crash (SIGSEGV) that occurs occasionally when out-of-band garbage collection is enabled. Closes GH-1469.\n * Fixes a Passenger crash (SIGSEGV) that occurs occasionally with redirects to relative URLs. Closes GH-1513.\n * Fixes cases when Passenger shuts down more processes than is allowed by the `min_instances` limit. Closes GH-1500.\n * Fixes \"Bad Gateway\" errors that would occur when an application sets the X-Sendfile or X-Accel-Redirect header, together with a non-empty response body. Closes GH-1498.\n * Fixes the fact that Passenger agent processes don't lower their privilege when user switching is turned off.\n * Fixes autodetection of Apache on Gentoo. Closes GH-1510.\n * Fixes compilation problems on Solaris. Closes GH-1508.\n * [Standalone] Adds the `--pool-idle-time` command line parameter.\n * [Standalone] Adds the `--auto` command line parameter for running non-interactively. This supresses prompts. Closes GH-1511.\n\n\nRelease 5.0.7\n-------------\n\n * Supports changed way of specifying settings for (non-bundled) Meteor apps. Closes GH-1403.\n * Fixes an integer-to-string conversion bug in the code responsible for buffering chunked request bodies. This bug could cause the PassengerAgent to crash due to an exception. Thanks to Marcus R\u00fcckert of SUSE for reporting this.\n * Request-specific environment variables are no longer cached. This fixes a number of issues, such as Shibboleth not working properly and conflicts between HTTPS and non-HTTPS virtual hosts. Closes GH-1472.\n * Fixes a memory corruption bug that would be triggered when using `passenger_base_uri`. The memory corruption bug resided in the code for resolving symlinks. Closes GH-1388.\n * Re-introduced signal catchers during shutdown, to allow clean shutdown in Foreman. Closes GH-1454.\n * `passenger-status --show=xml` no longer outputs the non-XML header by default. This fixes a regression as reported in a comment in GH-1136.\n * Passenger now prefers to load Rack and Bundler from RubyGems instead of from `vendor_ruby`. This solves some issues with Rack and Bundler on Debian systems. Closes GH-1480 and GH-1478.\n * The turbocache no longer caches responses that contain the `X-Sendfile` or the `X-Accel-Redirect` header.\n * The preferred Nginx version has been upgraded to 1.6.3.\n * The logging agent no longer aborts with an error if one of the Passenger root directory's parent directories is not world-executable. Closes GH-1487.\n * [Standalone] It is now possible to configure the Ruby, Node.js and Python executable to use in Passenger Standalone through the command line options --ruby, --nodejs and --python. Closes GH-1442.\n * [Standalone] Running `passenger start --engine=builtin --daemonize` would fail with a timeout error. This has been fixed.\n * [Standalone] Running `passenger start --nginx-version=XXX` would crash. This has been fixed. Closes GH-1490.\n * [Apache] Fixed some issues with X-Sendfile. Closes GH-1376.\n * [Apache] If the installer fails to autodetect Apache while the installer is running as a normal user, it will now ask you to give it root privileges. Closes GH-1289.\n * [Apache] The installer now validates your Apache configuration file to check for common problems. The validator can also be accessed separately by running `passenger-config validate-install --validate-apache2`.\n * [Nginx] Introduces the `passenger_read_timeout` option for rare cases when server needs more than the default 10 minute timeout. Contributed by pkmiec. Closes [GH-PR-34](https://github.com/phusion/passenger/pull/34).\n * [Nginx] The Nginx module now looks for index.html if the path ends in / so that it works intuitively, without needing to use try_files.\n * Fixes wrong memory address display in crash dumps. Thanks to thoughtpolice for pointing it out.\n * Fixes an ugly backtrace that would be shown if an invalid request is made to an application process using the private HTTP interface. Contributed by jbergler. Closes GH-1311.\n * Various documentation improvements. Closes [GH-PR-1332](https://github.com/phusion/passenger/pull/1332), [GH-PR-1354](https://github.com/phusion/passenger/pull/1354), [GH-PR-1216](https://github.com/phusion/passenger/pull/1216), [GH-PR-1385](https://github.com/phusion/passenger/pull/1385), [GH-PR-1302](https://github.com/phusion/passenger/pull/1302).\n\n\nRelease 5.0.6\n-------------\n\n * The turbocache no longer caches responses for which the Cache-Control header contains \"no-cache\". Please note that \"no-cache\" does not mean \"do not cache this response\". Instead, it means \"any caching servers may only serve the cached response after validating it\". Since the turbocache does not support validation, we've chosen to skip caching instead.\n\n   Coincidentally, this change \"fixes\" problems with applications that erroneously use \"no-cache\" as a flag for \"do not cache this response\". What these applications should actually use is \"no-store\". We recommend the developers of such applications to change their caching headers in this manner, because even if Passenger doesn't unintentionally cache the response, any intermediate proxies that visitors are behind may still cache the response.\n * Fixes a number of memory leaks. Memory was leaked upon processing a request with multiple headers, upon processing a response with multiple headers, and upon processing a response with Set-Cookie headers. Every time such a request or response was processed, 512 bytes of memory was leaked due to improperly dereferencing relevant memory buffers. Closes GH-1455.\n * Fixes various bugs related to Union Station data collection.\n\n   Union Station is our upcoming application analytics and performance monitoring SaaS platform. It is opt-in: no data is collected unless you turn the feature on.\n * Fixes a Union Station-related file descriptor leak. Closes GH-1439.\n * Fixes some bugs w.r.t. use of uninitialized memory.\n * More informative error message if a support binary is not found, including a resolution hint. Closes GH-1395.\n * [Apache] `SetEnv` variables are now passed as Rack/CGI/request variables. This was also the case in Passenger 4, but not in Passenger 5.0.0-5.0.5. We've restored the old behavior because the behavior in 5.0.0-5.0.5 breaks certain Apache modules such as Shibboleth. Closes GH-1446.\n * [Standalone] PID and log files now correctly created if user specifies relative path.\n\n\nRelease 5.0.5\n-------------\n\n * Fixes various crashes due to use of uninitialized memory. One such crash is documented in GH-1431.\n * Fixes a connection stall in the Apache module. Closes GH-1425.\n * Fixes a potential read-past-buffer bug in string-to-integer conversion routines. Thanks to dcb314 for spotting this. Closes GH-1441.\n * Fixes a compilation problem on Solaris. This problem was caused by the fact that `tm_gmtoff` is not supported on that platform. Closes GH-1435.\n * There is now an API endpoint for force disconnecting a client: `passenger-config admin-command DELETE /server/<client name>.json`. Closes GH-1246.\n * Fixes some file descriptor leaks. These leaks were caused by the fact that keep-alive connections with application processes were not being closed properly. Closes GH-1439.\n * In order to more easily debug future file descriptor leaks, we've introduced the `PassengerFileDescriptorLogFile` (Apache) and `passenger_file_descriptor_log_file` (Nginx) config options. This allows Passenger to log all file descriptor open/close activity to a specific log file.\n * The `PassengerDebugLogFile` (Apache) and `passenger_debug_log_file` (Nginx) configuration options have been renamed to `PassengerLogFile` and `passenger_log_file`, respectively. The old name is support supported for backward compatibility reasons.\n * [Enterprise] Fixes a bug in Flying Passenger's `--instance-registry-dir` command line parameter. This command line parameter didn't do anything.\n * [Enterprise] The Flying Passenger daemon no longer supports the `--max-preloader-idle-time` config option. This is because the config option never worked. The correct way to set the max preloader idle time is through the Nginx config option, but this was wrongly documented, so the documentation has been fixed.\n\n\nRelease 5.0.4\n-------------\n\n * Fixes a compilation problem introduced in 5.0.3.\n\n\nRelease 5.0.3\n-------------\n\n * [Standalone] When using the builtin engine, `passenger start` may crash during startup due to an initialization race condition. This has been fixed.\n * [Enterprise] Fixes a bug in passenger-irb. Running passenger-irb without a PID parameter worked, but running it with a PID parameter didn't.\n * Fixes an integer overflow that resulted in a file descriptor leak and stalled client connections. Closes GH-1412.\n * Truncates Passenger source code paths in logs (to 3 chars) to reduce redundant info. Closes GH-1383.\n * Fixes invalid JSON output for non-finite double values (e.g. from the HTTP JSON API). Closes GH-1408.\n * All hooks now set the `PASSENGER_HOOK_NAME` environment variable. This variable is set to the name of the hook that is being called.\n * The Ruby handler no longer tries to call #force_encoding on response body strings, which fixes an incompatibility with apps/libraries that return frozen body strings. Closes GH-1414.\n * If the Ruby handler crashes while processing a Rack response body, it will now no longer stall the connection.\n * Fixes env.SERVER_PORT containing 80 instead of 443 when using https on default port. Closes GH-1421.\n * We now handle errors in the `poll()` system call better. This might fix some crashes during shutdown which manifest on FreeBSD.\n\n\nRelease 5.0.2\n-------------\n\n * Fixes a connection freeze that could occur when processing large responses. This would manifest itself under the error message \"This website is under heavy load\" or \"Request queue is full, returning an error\". Closes GH-1404.\n * Debian and Ubuntu packages have been reintroduced.\n * When `passenger-config restart-app` is run interactively, if Passenger is not serving any applications, then the command now prints an error message instead of showing a menu with only a \"Cancel\" option.\n * Fixes a compilation problem on FreeBSD 10 (contributed by: clemensg). Closes GH-1401.\n * [Standalone] Fixes a crash that would occur if you use the `--ctl` parameter.\n * [Enterprise] The `--max-request-time` option has been added to Passenger Standalone.\n * [Enterprise] The `max_request_time_reached` hook has been introduced. This hook allows you to run diagnostics on a process that that took too long to respond to a request.\n\n\nRelease 5.0.1\n-------------\n\n * The `passenger-config restart-app` command is now more user friendly. When run in a terminal, it will show an interactive menu, allowing you to select the app to restart. Closes GH-1387.\n * Fixed a crash bug in the handling of sticky session cookies.\n * Log failed program in error message, not its command line (contributed by: paisleyrob). Closes GH-1397.\n * [Nginx] Fixes cases in which Passenger overrides the Nginx handler function even when it shouldn't, for example when Passenger is disabled. Closes GH-1393.\n * [Enterprise] The `sticky_sessions` and `envvars` options in Passengerfile.json is now also supported in mass deployment mode.\n\n\nRelease 5.0.0 release candidate 2\n---------------------------------\n\n * Fixes an installation problem with the Ruby gem due to incorrect Makefile generation. Closes GH-1382.\n * More helpful message when request queue is full. Closes GH-1375.\n\n\nRelease 5.0.0 release candidate 1\n---------------------------------\n\n * Fixed Date headers not being formatted in the GMT timezone. Closes GH-1367.\n * Fixed Passengerfile.json/passenger-standalone.json not being properly loaded in Passenger Standalone.\n * Fixed support for sticky sessions.\n * Fixed an infinite loop if the ApplicationPool garbage collector fails due to an exception. Closes GH-1360.\n * Fixed Passenger Standalone exiting prematurely when the HelperAgent crashes. Exiting prematurely is not supposed to happen because the watchdog will restart the HelperAgent. Closes GH-1339.\n * Fixed a crash that occurs when using a non-standard startup file value. Closes GH-1378.\n * When dumping system metrics during error page generation, the `passenger-config` command is now invoked under the same Ruby interpreter as the app, instead of the one in PATH. Closes GH-1381.\n * When a Ruby process crashes due to an uncaught exception, this fact is now properly logged.\n * Specifying 0 for the `max_pool_size` config option no longer results in a crash. Closes GH-1334.\n * The timeouts when downloading Passenger Standalone binaries and source files are now customizable. Closes GH-1295.\n * The `envvars` option is now supported in Passengerfile.json, for passing environment variables to the application. Closes GH-1377.\n * Introduced `hook_queue_full_error` for request queue overflows. Closes GH-1358.\n * [Ruby] Fixed handling of \"transfer-encoding chunked\" response bodies which contain zero-sized chunks.\n * [Nginx] It is no longer necessary to re-specify `passenger_enabled` in `location` contexts. Closes GH-1338.\n * [Enterprise] Fixed a bug in mass deployment reloading.\n * [Enterprise] Fixed a bug in mass deployment daemonization.\n * [Enterprise] Fixed passenger-irb. Closes GH-1350.\n * [Enterprise] The mass deployment mode now supports the `app_type` and `startup_file` configuration options in Passengerfile.json/passenger-standalone.json. Closes GH-1366.\n\n\nRelease 5.0.0 beta 3\n--------------------\n\n * The turbocache has received major updates and fixes based on excellent feedback Chris Heald and the community. First, several bugs w.r.t. the handling of caching headers have been fixed. Second, the turbocache has become slightly more conservative for security reasons. In previous versions, default cacheable responses (as defined by RFC 7234) were cached unless caching headers tell us not to. Now, default cacheable responses are only cached if caching headers explicitly tell us to. This change was introduced because there are many applications that set incorrect caching headers on private responses. This new behavior is currently not configurable, but there are plans to make it configurable in 5.0.0 release candidate 1.\n * Introduced a new configuration option, `passenger_response_buffer_high_watermark` (Nginx) and `PassengerResponseBufferHighWatermark` (Apache), for configuring the behavior of the response buffering system. Closes GH-1300.\n * Fixed more cookie handling issues. Closes GH-1310.\n * Fixed various WebSocket issues. Closes GH-1306.\n * Fixed some crashes caused by race conditions. Closes GH-1326.\n * Fixed issues with handling POST data. Closes GH-1331.\n * Fixed some issues on Heroku. Closes GH-1329.\n * Fixed some integer overflows. Fix contributed by Go Maeda. Closes GH-1357.\n * Fixed the `passenger-status --show=union_station` command. Closes GH-1336.\n * Nginx versions earlier than 1.6 are no longer supported.\n * Improved state introspection.\n\n\nRelease 5.0.0 beta 2\n--------------------\n\n * Fixed handling of multiple Set-Cookie headers. Closes GH-1296.\n * `passenger-config system-metrics` now works properly if the agent is installed in ~/.passenger. Closes GH-1304.\n * Documentation enhancements by Igor Vuk. Closes GH-1318.\n * Fixed some crasher bugs.\n * [Standalone] User switching is now correctly disabled.\n * [Standalone] Fixed the `--thread-count` parameter.\n * [Apache] IPs set by mod_remoteip are now respected. Closes GH-1284.\n * [Apache] Fixed support for gzipped chunked responses. Closes GH-1309.\n\n\nRelease 5.0.0 beta 1\n--------------------\n\nVersion 5.0.0 beta 1 contains major changes. It's mostly compatible with version 4, but there are a few minor breakages, which are described below. Major changes and notable breakages are:\n\n * Performance has been much improved. This is thanks to months of optimization work. You can learn more at www.rubyraptor.org.\n * We've published a [server optimization guide](https://www.phusionpassenger.com/documentation/ServerOptimizationGuide.html) for those who are interested in tuning Phusion Passenger.\n * Support for Rails 1.2 - 2.2 has been removed, for performance reasons. Rails 2.3 is still supported.\n * Phusion Passenger now supports integrated HTTP caching, which we call turbocaching. If your app sets the right HTTP headers then Phusion Passenger can tremendously accelerate your app. It is enabled by default, but you can disable it with `--disable-turbocaching` (Standalone), `PassengerTurbocaching off` (Apache), or 'passenger_turbocaching off' (Nginx).\n * Touching restart.txt will no longer restart your app immediately. This is because, for performance reasons, the stat throttle rate now defaults to 10. You can still get back the old behavior by setting `PassengerStatThrottleRate 0` (Apache) or `passenger_stat_throttle_rate 0` (Nginx), but this is not encouraged. Instead, we encourage you to use the `passenger-config restart-app` tool to initiate restarts, which has immediate effect.\n * Websockets are now properly disconnected on application restarts.\n * The Phusion Passneger log levels have been completely revamped. If you were setting a log level before (e.g. through `passenger_log_level`), please read the latest documentation to learn about the new log levels.\n * If you use out-of-band garbage collection, beware that the `X-Passenger-Request-OOB-Work` header has now been renamed to `!~Request-OOB-Work`.\n * When using Rack's full socket hijacking, you must now output an HTTP status line.\n * [Nginx] The `passenger_set_cgi_param` option has been removed and replaced by `passenger_set_header` and `passenger_env_var`.\n * [Nginx] `passenger_show_version_in_header` is now only valid in the `http` context.\n * [Apache] The `PassengerStatThrottleRate` option is now global.\n\nMinor changes:\n\n * The minimum required Nginx version is now 1.6.0.\n * The instance directory is now touched every hour instead of every 6 hours. This should hopefully prevent more problems with /tmp cleaner daemons.\n * Applications are not grouped not only on the application root path, but also on the environment. For example, this allows you to run the same app in both production and staging mode, with only a single directory, without further configuration. Closes GH-664.\n * The `passenger_temp_dir` option (Nginx) and the `PassengerTempDir` option (Apache) have been replaced by two config options. On Nginx they are `passenger_instance_registry_dir` and `passenger_data_buffer_dir`. On Apache they are `PassengerInstanceRegistryDir` and `PassengerDataBufferDir`. On Apache, `PassengerUploadBufferDir` has been replaced by `PassengerDataBufferDir`.\n * Command line tools no longer respect the `PASSENGER_TEMP_DIR` environment variable. Use `PASSENGER_INSTANCE_REGISTRY_DIR` instead.\n * `passenger-status --show=requests` has been deprecated in favor of `passenger-status --show=connections`.\n * Using the SIGUSR1 signal to restart a Ruby app without dropping connections, is no longer supported. Instead, use `passenger-config detach-process`.\n * Introduced the `passenger-config reopen-logs` command, which instructs all Phusion Passenger agent processes to reopen their log files. You should call this after having rotated the web server logs.\n * [Standalone] The Phusion Passenger Standalone config template has changed. Users are encouraged to update it.\n * [Standalone] `passenger-standalone.json` has been renamed to `Passengerfile.json`.\n * [Standalone] `passenger-standalone.json`/`Passengerfile.json` no longer overrides command line options. Instead, command line options now have the highest priority.\n\n\nRelease 4.0.60\n--------------\n\nNote that 4.0.60 is a source-only maintenance release. There will not be any binaries, Debian or RPM packages for this release.\n\n * Adds OS X El Capitan support.\n * Updates preferred Nginx version from 1.6.2 to 1.6.3.\n * Fixes a header collision vulnerability (CVE-2015-7519, medium severity). Please see our blog for detailed vulnerability description and advisory. Thanks to the SUSE security team for reporting this issue.\n * Fixes the password protection of internal Phusion Passenger processes.\n\n   For security reasons, Phusion Passenger limits access to internal processes, by using Unix file permissions and randomly generated passwords that only authorized internal processes know. It turns out that this password wasn't set correctly, which has now been fixed. There was no security vulnerability, because the file permissions already provide sufficient security. The password only serves as an extra layer of security just in case there is a problem with the former.\n\n   This issue is not at all related to any application-level security or application-level passwords. Any database passwords, keys, or secrets used and generated by applications have got nothing to do with the nature of this issue. This issue only relates to some randomly generated passwords that Passenger uses internally, for its internal operations.\n\n\nRelease 4.0.59\n--------------\n\n * [Enterprise] Fixed support for free-style Node.js apps.\n\n\nRelease 4.0.58\n--------------\n\n * [Enterprise] Fixed a bug in the Debian packages which caused Flying Passenger to break when used with non-system Rubies.\n * The Debian packages no longer require Ruby 1.9. Closes GH-1353.\n\n\nRelease 4.0.57\n--------------\n\n * Fixed a native extension compatibility problem with Ruby 2.2. Closes [ruby-core:67152](https://bugs.ruby-lang.org/issues/10656).\n * Fixed compatibility with Nginx 1.7.9. Closes GH-1335.\n\n\nRelease 4.0.56\n--------------\n\n * Fixed a file descriptor leak that manifests when an error page is shown. Contributed by Paul Bonaud, closes GH-1325.\n * Improved Node.js request load balancing. Closes GH-1322. Thanks to Charles Valli\u00e8res for the analysis.\n\n\nRelease 4.0.55\n--------------\n\n * Supports Ruby 2.2. Closes GH-1314.\n * Fixed Linux OS name detection.\n\n\nRelease 4.0.54\n--------------\n\n * Contains a licensing-related hot fix for Enterprise customers.\n\n\nRelease 4.0.53\n--------------\n\n * Upgraded the preferred Nginx version to 1.6.2.\n * Improved RVM gemset autodetection.\n * Fixed some Ruby 2.2 compatibility issues.\n\n\nRelease 4.0.52\n--------------\n\n * Fixed a null termination bug when autodetecting application types.\n * Node.js apps can now also trigger the inverse port binding mechanism by passing `'/passenger'` as argument. This was introduced in order to be able to support the Hapi.js framework. Please read http://stackoverflow.com/questions/20645231/phusion-passenger-error-http-server-listen-was-called-more-than-once/20645549 for more information regarding Hapi.js support.\n * It is now possible to abort Node.js WebSocket connections upon application restart. Please refer to https://github.com/phusion/passenger/wiki/Phusion-Passenger:-Node.js-tutorial#restarting_apps_that_serve_long_running_connections for more information. Closes GH-1200.\n * Passenger Standalone no longer automatically resolves symlinks in its paths.\n * `passenger-config system-metrics` no longer crashes when the system clock is set to a time in the past. Closes GH-1276.\n * `passenger-status`, `passenger-memory-stats`, `passenger-install-apache2-module` and `passenger-install-nginx-module` no longer output ANSI color codes by default when STDOUT is not a TTY. Closes GH-487.\n * `passenger-install-nginx-module --auto` is now all that's necessary to make it fully non-interactive. It is no longer necessary to provide all the answers through command line parameters. Closes GH-852.\n * Minor contribution by Alessandro Lenzen.\n\n\nRelease 4.0.50\n--------------\n\n * Fixed a potential heap corruption bug.\n * Added Union Station support for Rails 4.1.\n\n\nRelease 4.0.49\n--------------\n\n * Upgraded the preferred Nginx version to 1.6.1.\n * Fixed a crash that may be triggered by the `passenger_max_requests` feature.\n * Introduced the `spawn_failed` hook, which is called when an application\n   process fails to spawn. You could use this hook to setup an error\n   notification system. Closes GH-1252.\n * Fonts, RSS and XML are now gzip-compressed by default in Phusion Passenger\n   Standalone. Thanks to Jacob Elder. Closes GH-1254.\n * Fixed some user and group information lookup issues. Closes GH-1253.\n * Fixed some request handling crashes. Closes GH-1250.\n * Fixed some compilation problems on Gentoo. Closes GH-1261.\n * Fixed some compilation problems on Solaris. Closes GH-1260.\n\n\nRelease 4.0.48\n--------------\n\n * Fixed a race condition while determining what user an application should\n   be executed as. This bug could lead to applications being run as the wrong\n   user. Closes GH-1241.\n * [Standalone] Improved autodetection of Rails asset pipeline files. This\n   prevents Standalone from incorrectly setting caching headers on non-asset\n   pipeline files. Closes GH-1225.\n * Fixed compilation problems on CentOS 5. Thanks to J. Smith. Closes GH-1247.\n * Fixed compilation problems on OpenBSD.\n * Fixed compatibility with Ruby 1.8.5.\n\n\nRelease 4.0.47\n--------------\n\n * [Enterprise] Fixed a bug in Flying Passenger's `--max-preloader-idle-time`\n   option.\n\n\nRelease 4.0.46\n--------------\n\n * Further improved Node.js and Socket.io compatibility.\n * Sticky session cookies have been made more reliable.\n * Fixed WebSocket upgrade issues on Firefox. Closes GH-1232.\n * The Python application loader now inserts the application root into `sys.path`.\n   The fact that this was not done previously caused a lot of confusion amongst\n   Python users, who wondered why their `passenger_wsgi.py` could not import any\n   modules from the same directory.\n * Fixed a compatibility problem with Django, which could cause Django apps to\n   freeze indefinitely. Closes GH-1215.\n * Logging of application spawning errors has been much improved. Full details\n   about the error, such as environment variables, are saved to a private log file.\n   In the past, these details were only viewable in the browser. This change also\n   fixes a bug on Phusion Passenger Enterprise, where enabling Deployment Error\n   Resistance causes error messages to get lost. Closes GH-1021 and GH-1175.\n * Fixed a regression in Node.js support. When a Node.js app is deployed on\n   a HTTPS host, the `X-Forwarded-Proto` header wasn't set in 4.0.45.\n   Closes GH-1231.\n * Passenger Standalone no longer, by default, loads shell startup files before\n   loading the application. This is because Passenger Standalone is often invoked\n   from the shell anyway. Indeed, loading shell startup files again can interfere\n   with any environment variables already set in the invoking shell. You can\n   still tell Passenger Standalone to load shell startup files by passing\n   `--load-shell-envvars`. Passenger for Apache and Passenger for Nginx still\n   load shell startup files by default.\n * Passenger Standalone now works properly when the HOME environment variable\n   isn't set. Closes GH-713.\n * Passenger Standalone's `package-runtime` command has been removed. It has\n   been broken for a while and has nowadays been obsolete by our automatic\n   [binary generation system](https://github.com/phusion/passenger_autobuilder).\n   Closes GH-1133.\n * The `passenger_startup_file` option now also works on Python apps. Closes GH-1233.\n * If you are a [Union Station](https://www.unionstationapp.com) customer, then\n   Phusion Passenger will now also log application spawning errors to Union Station.\n   This data isn't shown in the Union Station interface yet, but it will be\n   implemented in the future.\n * Fixed compilation problems on OmniOS and OpenIndiana. Closes GH-1212.\n * Fixed compilation problems when Nginx is configured with OpenResty.\n   Thanks to Yichun Zhang. Closes GH-1226.\n * Fixed Nginx HTTP POST failures on ARM platforms. Thanks to nocelic for the fix.\n   Closes GH-1151.\n * Documentation contributions by Tim Bishop and Tugdual de Kerviler.\n * Minor Nginx bug fix by Feng Gu. Closes GH-1235.\n\n\nRelease 4.0.45\n--------------\n\n * Major improvements in Node.js and Meteor compatibility. Older Phusion Passenger\n   versions implemented Node.js support by emulating Node.js' HTTP library.\n   This approach was found to be unsustainable, so we've abandoned that approach\n   and replaced it with a much simpler approach that does not involve emulating\n   the HTTP library.\n * Introduced support for sticky sessions. Sticky sessions are useful -- or even\n   required -- for apps that store state inside process memory. Prominent examples\n   include SockJS, Socket.io, faye-websocket and Meteor. Sticky sessions are\n   required to make the aforementioned examples work in multi-process scenarios.\n   By introducing sticky sessions support, we've much improved WebSocket support\n   and support for the aforementioned libraries and frameworks.\n * Due to user demand, GET requests with request bodies are once again supported.\n   Support for these kinds of requests was removed in 4.0.42 in an attempt to\n   increase the strictness and robustness of our request handling code. It has\n   been determined that GET requests with request bodies can be adequately\n   supported without degrading robustness in Phusion Passenger. However, GET\n   requests with both request bodies and WebSocket upgrade headers are\n   unsupported. Fixes issue #1092.\n * [Enterprise] The [Flying Passenger](http://www.modrails.com/documentation/Users%20guide%20Apache.html#flying_passenger)\n   feature is now also available on Apache.\n * Fixed some issues with RVM mixed mode support, issue #1121.\n * Fixed Passenger Standalone complaining about not finding PassengerHelperAgent\n   during startup.\n * Fixed various minor issues such as #1190 and #1197.\n * The download timeout for passenger-install-nginx-module has been increased.\n   Patch by \u4e80\u7530 \u7fa9\u88d5.\n\n\nRelease 4.0.44\n--------------\n\n * The issue tracker has now been moved from Google Code to Github.\n   Before version 4.0.44 (May 29 2014, commit 3dd0964c9f4), all\n   issue numbers referred to Google Code. From now on, all issue\n   numbers will refer to Github Issues.\n * Fixed compilation problems on OS X Lion and OS X Mountain Lion.\n * On Ruby, fixed `nil` being frozen on accident in some cases.\n   See issue #1192.\n\n\nRelease 4.0.43\n--------------\n\n * Introduced a new command `passenger-config list-instances`, which prints all\n   running Phusion Passenger instances.\n * Introduced a new command `passenger-config system-metrics, which displays\n   metrics about the system such as the total CPU and memory usage.\n * Fixed some compilation problems caused by the compiler capability autodetector.\n * System metrics such as total CPU usage and memory usage, are now sent to\n   [Union Station](https://www.unionstationapp.com) in preparation for future\n   features.\n\n\nRelease 4.0.42\n--------------\n\n * [Nginx] Upgraded the preferred Nginx version to 1.6.0.\n * [Nginx] Fixed compatibility with Nginx 1.7.0.\n * [Standalone] The MIME type for .woff files has been changed to application/font-woff.\n   Fixes issue #1071.\n * There are now APT packages for Ubuntu 14.04. At the same time, packages for\n   Ubuntu 13.10 have been abandoned.\n * Introduced a new command, `passenger-config build-native-support`, for ensuring\n   that the native_support library for the current Ruby interpreter is built. This\n   is useful in system provisioning scripts.\n * For security reasons, friendly error pages (those black/purple pages that shows\n   the error message, backtrace and environment variable dump when an application\n   fails to start) are now disabled by default when the application environment is\n   set to 'staging' or 'production'. Fixes issue #1063.\n * Fixed some compilation warnings on Ubuntu 14.04.\n * Fixed some compatibility problems with Rake 10.2.0 and later.\n   See [Rake issue 274](https://github.com/jimweirich/rake/issues/274).\n * Improved error handling in [Union Station](https://www.unionstationapp.com) support.\n * Data is now sent to Union Station on a more frequent basis, in order to make new\n   data show up more quickly.\n * Information about the code revision is now sent to Union Station, which will be\n   used in the upcoming deployment tracking feature in Union Station 2.\n\n\nRelease 4.0.41\n--------------\n\n * Fixed some issues with printing UTF-8 log files on Heroku.\n * Added a new flag `--ignore-app-not-running` to `passenger-config restart-app`.\n   When this flag is given, `passenger-config restart-app` will exit successfully\n   when the specified application is not running, instead of exiting with\n   an error.\n * Our precompiled Passenger Standalone binaries have been upgraded to use\n   OpenSSL 1.0.1g, which fixes [the OpenSSL Heartbleed vulnerability](http://heartbleed.com/).\n   Users who are using Passenger Standalone with SSL enabled are vulnerable,\n   and should upgrade immediately. Users who do not use Passenger Standalone,\n   users who use Passenger Standalone without SSL, or users who use Passenger\n   Standalone with SSL behind another SSL-enabled reverse proxy, are not\n   vulnerable.\n\n\nRelease 4.0.40\n--------------\n\n * Upgraded preferred Nginx version to 1.4.7. This Nginx version fixes\n   a buffer overflow. Users are strongly urged to upgrade Nginx as soon\n   as possible.\n\n\nRelease 4.0.39\n--------------\n\n * Fixed a crash that could happen if the client disconnects while a chunked\n   response is being sent. Fixes issue #1062.\n * In Phusion Passenger Standalone, it is now possible to customize the Nginx\n   configuration file on Heroku. It is now also possible to permanently apply\n   changes to the Nginx configuration file, surviving upgrades. Please refer\n   to the \"Advanced configuration\" section of the Phusion Passenger Standalone\n   manual for more information.\n * The programming language selection menu in passenger-install-apache2-module\n   and passenger-install-nginx-module only works on terminals that support\n   UTF-8 and that have a UTF-8 capable font. To cater to users who cannot meet\n   these requirements (e.g. PuTTY users using any of the default Windows fonts),\n   it is now possible to switch the menu to a plain text mode by pressing '!'.\n   Fixes issue #1066.\n * Fixed printing UTF-8 characters in log files in Phusion Passenger Standalone.\n * It is now possible to dump live backtraces of Python apps through the\n   'SIGABRT' signal.\n * Fixed closing of file descriptors on OS X 10.9.\n * Fixed compilation problems with Apple Clang 503.0.38 on OS X.\n * Fixed compilation of native_support on Rubinius.\n\n\nRelease 4.0.38\n--------------\n\n * Added support for the new Ruby 2.1.0 out-of-band garbage collector.\n   This can much improve garbage collection performance, and drastically\n   reduce request times.\n * Fixed a symlink-related security vulnerability.\n\n   Urgency: low\n   Scope: local exploit\n   Summary: writing files to arbitrary directory by hijacking temp directories\n   Affected versions: 4.0.37\n   Fixed versions: 4.0.38\n   CVE-2014-1832\n\n   Description:\n   This issue is related to CVE-2014-1831 (the security issue as mentioned in\n   the 4.0.37 release notes). The previous fix was incomplete, and still has a\n   (albeit smaller) small attack time window in between two filesystem\n   checks. This attack window is now gone.\n * Passenger Standalone is now compatible with IPv6.\n * Fixed some compilation problems on Solaris. See issue #1047.\n * passenger-install-apache2-module and passenger-install-nginx-module\n   now automatically run in `--auto` mode if stdin is not a TTY. Fixes\n   issue #1030.\n * Fixed an issue with non-bundled Meteor apps not correctly running in\n   production mode.\n * The `PassengerPreStart` option is now compatible with IPv6 server sockets.\n * When running Python WSGI apps, `wsgi.run_once` is now set to False.\n   This should improve the performance of certain apps and frameworks.\n * When handling HTTP requests with chunked transfer encoding, the\n   'Transfer-Encoding' header is no longer passed to the application.\n   This is because the web server already buffers and dechunks the\n   request body.\n * Fixed a possible hang in Phusion Passenger for Nginx when Nginx\n   is instructed to reload or reopen log files. Thanks to Feng Gu,\n   [pull request #97](https://github.com/phusion/passenger/pull/97).\n * The preferred Nginx version has been upgraded to 1.4.6.\n * Fixed a problem with running passenger-install-apache2-module and\n   passenger-install-nginx-module on JRuby. They were not able to accept\n   any terminal input after displaying the programming language menu.\n\n\nRelease 4.0.37\n--------------\n\n * Improved Node.js compatibility. Calling on() on the request object\n   now returns the request object itself. This fixes some issues with\n   Express, Connect and Formidable. Furthermore, some WebSocket-related\n   issues have been fixed.\n * Improved Meteor support. Meteor application processes are now shut down\n   quicker. Previously, they linger around for 5 seconds while waiting for\n   all connections to terminate, but that didn't work well because WebSocket\n   connections were kept open indefinitely. Also, some WebSocket-related\n   issues have been fixed.\n * Introduced a new tool `passenger-config detach-process` for gracefully\n   detaching an application process from the process pool. Has a similar\n   effect to killing the application process directly with `kill <PID>`,\n   but killing directly may cause the HTTP client to see an error, while\n   using this command guarantees that clients see no errors.\n * Fixed a crash that occurs when an application fails to spawn, but the HTTP\n   client disconnects before the error page is generated. Fixes issue #1028.\n * Fixed a symlink-related security vulnerability.\n\n   Urgency: low\n   Scope: local exploit\n   Summary: writing files to arbitrary directory by hijacking temp directories\n   Affected versions: 4.0.5 and later\n   Fixed versions: 4.0.37\n   CVE-2014-1831\n\n   Description:\n   Phusion Passenger creates a \"server instance directory\" in /tmp during startup,\n   which is a temporary directory that Phusion Passenger uses to store working files.\n   This directory is deleted after Phusion Passenger exits. For various technical\n   reasons, this directory must have a semi-predictable filename. If a local attacker\n   can predict this filename, and precreates a symlink with the same filename that\n   points to an arbitrary directory with mode 755, owner root and group root, then\n   the attacker will succeed in making Phusion Passenger write files and create\n   subdirectories inside that target directory. The following files/subdirectories\n   are created:\n\n    * control_process.pid\n    * generation-X, where X is a number.\n\n   If you happen to have a file inside the target directory called `control_process.pid`,\n   then that file's contents are overwritten.\n\n   These files and directories are deleted during Phusion Passenger exit. The target\n   directory itself is not deleted, nor are any other contents inside the target\n   directory, although the symlink is.\n\n   Thanks go to Jakub Wilk for discovering this issue.\n\n\nRelease 4.0.36\n--------------\n\n * [Enterprise] Fixed some Mass Deployment bugs.\n * [Enterprise] Fixed a bug that causes an application group to be put into\n   Deployment Error Resistance Mode if rolling restarting fails while\n   deployment error resistance is off. Deployment Error Resistance Mode is\n   now only activated if it's explicitly turned on.\n * Passenger Standalone now gzips JSON responses.\n * Fixed some cases in which Passenger Standalone does not to properly cleanup\n   its temporary files.\n\n\nRelease 4.0.35\n--------------\n\n * Fixed some unit tests.\n\n\nRelease 4.0.34\n--------------\n\n * The Node.js loader code now sets the `isApplicationLoader` attribute on the\n   bootstrapping module. This provides a way for apps and frameworks that check\n   for `module.parent` to check whether the current file is loaded by Phusion\n   Passenger, or by other software that work in a similar way.\n\n   This change has been introduced to solve a compatibility issue with CompoundJS.\n   CompoundJS users should modify their server.js, and change the following:\n\n       if (!module.parent) {\n\n   to:\n\n       if (!module.parent || module.parent.isApplicationLoader) {\n\n * Improved support for Meteor in development mode. Terminating Phusion Passenger\n   now leaves less garbage Meteor processes behind.\n * It is now possible to disable the usage of the Ruby native extension by setting\n   the environment variable `PASSENGER_USE_RUBY_NATIVE_SUPPORT=0`.\n * Fixed incorrect detection of the Apache MPM on Ubuntu 13.10.\n * When using RVM, if you set PassengerRuby/passenger_ruby to the raw Ruby binary\n   instead of the wrapper script, Phusion Passenger will now print an error.\n * Added support for RVM >= 1.25 wrapper scripts.\n * Fixed loading passenger_native_support on Ruby 1.9.2.\n * The Union Station analytics code now works even without native_support.\n * Fixed `passenger-install-apache2-module` and `passenger-install-nginx-module` in\n   Homebrew.\n * Binaries are now downloaded from an Amazon S3 mirror if the main binary server\n   is unavailable.\n * And finally, although this isn't really a change in 4.0.34, it should be noted.\n   In version 4.0.33 we changed the way Phusion Passenger's own Ruby source files\n   are loaded, in order to fix some Debian and RPM packaging issues. The following\n   doesn't work anymore:\n\n       require 'phusion_passenger/foo'\n\n   Instead, it should become:\n\n       PhusionPassenger.require_passenger_lib 'foo'\n\n   However, we overlooked the fact that this change breaks Ruby apps which use\n   our Out-of-Band GC feature, because such apps had to call\n   `require 'phusion_passenger/rack/out_of_band_gc'`. Unfortunately we're not able\n   to maintain compatibility without reintroducing the Debian and RPM packaging\n   issues. Users should modify the following:\n\n       require 'phusion_passenger/rack/out_of_band_gc'\n\n   to:\n\n       if PhusionPassenger.respond_to?(:require_passenger_lib)\n         # Phusion Passenger >= 4.0.33\n         PhusionPassenger.require_passenger_lib 'rack/out_of_band_gc'\n       else\n         # Phusion Passenger < 4.0.33\n         require 'phusion_passenger/rack/out_of_band_gc'\n       end\n\nRelease 4.0.33\n--------------\n\n * Fixed a compatibility problem in passenger-install-apache2-module with Ruby 1.8.\n   The language selection menu didn't work properly.\n\n\nRelease 4.0.32\n--------------\n\n * Fixed compatibility problems with old Ruby versions that didn't include RubyGems.\n\n\nRelease 4.0.31\n--------------\n\n * Introduced a new tool: `passenger-config restart-app`. With this command you\n   can initiate an application restart without touching restart.txt.\n   Unlike touching restart.txt, this tool initiates the restart immediately\n   instead of on the next request.\n * Fixed some problems in process spawning and request handling.\n * Fixed some problems with the handling of HTTP chunked transfer encoding\n   bodies. These problems only occurred in Ruby.\n * Fixed the HelperAgent, upon shutdown, not correctly waiting 5 seconds until\n   all clients have disconnected. Fixes issue #884.\n * Fixed compilation problems on FreeBSD.\n * Fixed some C++ strict aliasing problems.\n * Fixed some problems with spawning applications that print messages without\n   newline during startup. Fixes issue #1039.\n * Fixed potential hangs on JRuby when Ctrl-C is used to shutdown the server.\n   Fixes issue #1035.\n * When Phusion Passenger is installed through the Debian package,\n   passenger-install-apache2-module now checks whether the Apache\n   module package (libapache2-mod-passenger) is properly installed,\n   and installs it using apt-get if it's not installed. Fixes\n   issue #1031.\n * The `passenger-status --show=xml` command no longer prints the non-XML\n   preamble, such as the version number and the time. Fixes issue #1037.\n * The Ruby native extension check whether it's loaded against the right Ruby\n   version, to prevent problems when people upgrade Ruby without recompiling\n   their native extensions.\n * Various other minor Debian packaging improvements.\n\n\nRelease 4.0.30\n--------------\n\n * Fixed wrong autogeneration of HTTP Date header. If the web app does\n   not supply a Date header, then Passenger will add one. Unfortunately\n   due to the use of the wrong format string, December 30 2013 is\n   formatted as December 30 2014. As a result, cookies that expire before\n   2014 would expire on December 30 2013 and December 31 2013. Details can\n   be found at [Github pull request 93](https://github.com/phusion/passenger/pull/93).\n\n   This issue only affects Phusion Passenger for Nginx and Phusion Passenger\n   Standalone, and does not affect Phusion Passenger for Apache.\n\n   You can work around this problem in your application by setting a\n   Date header. For example, in Rails you can do:\n\n       before_filter { response.date = Time.now.utc }\n\n   Many thanks to Jeff Michael Dean (zilkey) and many others for bringing this to our attention and for providing workarounds and feedback.\n\n\nRelease 4.0.29\n--------------\n\n * Fixed a compilation problem on OS X Mavericks.\n\n\nRelease 4.0.28\n--------------\n\n * Introduced a workaround for a GCC 4.6 bug. This bug could cause Phusion\n   Passsenger to crash during startup. Affected operating systems include\n   Ubuntu 12.04 and Amazon Linux 2013.09.01, though not every machine with\n   this OS installed exhibits the problem. See issue #902.\n * Improved Node.js support: the Sails framework is now supported.\n * Improved Node.js support: the streams2 API is now supported.\n * Introduced support for hooks, allowing users to easily extend Phusion\n   Passenger's behavior.\n * Fixed a bug in the `passenger start -R` option. It was broken because of a\n   change introduced in 4.0.25.\n * Fixed a bug in PassengerMaxInstancesPerApp. Fixes issue #1016.\n * Fixed compilation problems on Solaris.\n * Fixed an encoding problem in the Apache autodetection code. Fixes\n   issue #1026.\n * The Debian packages no longer depend on libruby.\n * Application stdout and stderr are now printed without normal\n   Phusion Passenger debugging information, making them easier to read.\n\n\nRelease 4.0.27\n--------------\n\n * [Apache] Fixed a bug in the Apache module which could lock up the Apache\n   process or thread. This is a regression introduced in version 4.0.24.\n * Node.js application processes now have friendly process titles.\n\n\nRelease 4.0.26\n--------------\n\n * Introduced the `PassengerBufferUpload` option for Apache. This option allows one\n   to disable upload buffering, e.g. in order to be able to track upload progress.\n * [Nginx] The `HTTPS` variable is now set correctly for HTTPS connections, even\n   without setting `ssl on`. Fixes issue #401.\n * [Standalone] It is now possible to listen on both a normal HTTP and an HTTPS port.\n * [Enterprise] The `passenger-status` tool now displays rolling restart status.\n\n\nRelease 4.0.25\n--------------\n\n * The `PassengerAppEnv`/`passenger_app_env`/`--environment` option now also sets NODE_ENV,\n   so that Node.js frameworks like Connect can properly respond to the environment.\n * Fixed a bug in our Debian/Ubuntu packages causing `passenger-install-nginx-module`\n   not to be able to compile Nginx.\n * Arbitrary Node.js application structures are now supported.\n * [Nginx] Introduced the `passenger_restart_dir` option.\n * [Nginx] Upgraded preferred Nginx version to 1.4.4 because of CVE-2013-4547.\n\n\nRelease 4.0.24\n--------------\n\n * Introduced the `PassengerNodejs` (Apache) and `passenger_nodejs` (Nginx)\n   configuration options.\n * [Apache] Introduced the `PassengerErrorOverride` option, so that HTTP error\n   responses generated by applications can be intercepted by Apache and customized\n   using the `ErrorDocument` directive.\n * [Standalone] It is now possible to specify some configuration options in\n   a configuration file `passenger-standalone.json`. When Passenger Standalone\n   is used in Mass Deployment mode, this configuration file can be used to customize\n   settings on a per-application basis.\n * [Enterprise] Fixed a potential crash when a rolling restart is triggered\n   while a process is already shutting down.\n * [Enterprise] Fixed Mass Deployment support for Node.js and Meteor.\n\n\nRelease 4.0.23\n--------------\n\n * Fixed compilation problems on GCC 4.8.2 (e.g. Arch Linux 2013-10-27).\n * Fixed a compatibility problem with Solaris /usr/ccs/bin/make: issue #999.\n * Support for the Meteor Javascript framework has been open sourced.\n\n\nRelease 4.0.22\n--------------\n\n * [Enterprised] Fixed compilation problems on OS X Mavericks.\n\n\nRelease 4.0.21\n--------------\n\n * [Nginx] Upgraded the preferred Nginx version to 1.4.3.\n * Node.js support has been open sourced.\n * Prelimenary OS X Mavericks support.\n * Work around an Apache packaging bug in CentOS 5.\n * Various user friendliness improvements in the documentation and the\n   installers.\n * Fixed a bug in the always_restart.txt support. Phusion Passenger was\n   looking for it in the wrong directory.\n * Many Solaris and Sun Studio compatibility fixes. Special thanks to\n   \"mark\" for his extensive assistance.\n * [Standalone] The --temp-dir command line option has been introduced.\n\n\nRelease 4.0.20\n--------------\n\n * Fixed a bug in Phusion Passenger Standalone's daemon mode. When in daemon\n   mode, the Nginx temporary directory was deleted prematurely, causing some\n   POST requests to fail. This was a regression that was introduced in 4.0.15\n   as part of an optimization.\n * Fixed compilation problems on Solaris 10 with Sun Studio 12.3.\n * Improved detection of RVM problems.\n * It is now possible to log the request method to Union Station.\n * Introduced a new option, `PassengerLoadShellEnvvars` (Apache) and\n   `passenger_load_shell_envvars` (Nginx). This allows enabling or disabling\n   the loading of bashrc before spawning the application.\n * [Enterprise] Fixed a packaging problem which caused the flying-passenger\n   executable not to be properly included in the bin path.\n * [Enterprise] Fixed a race condition which sometimes causes the Flying\n   Passenger socket to be deleted after a restart. Fixes issue #939.\n * [Enterprise] The `byebug` gem is now supported for debugging on Ruby 2.0.\n   The byebug gem requires a patch before this works:\n   https://github.com/deivid-rodriguez/byebug/pull/29\n\n\nRelease 4.0.19\n--------------\n\n * Fixed a problem with response buffering. Application processes are now\n   properly marked available for request processing immediately after they're\n   done sending the response, instead of after having sent the entire response\n   to the client.\n * The \"processed\" counter in `passenger-status` is now bumped after the process\n   has handled a request, not at the beginning.\n * [Enterprise] Fixed an off-by-one bug in the `passenger_max_processes` setting.\n\n\nRelease 4.0.18\n--------------\n\n * The Enterprise variant of Phusion Passenger Standalone now supports\n   customizing the concurrency model and thread count from the command line.\n * On Nginx, the Enterprise license is now only checked if Phusion Passenger\n   is enabled in Nginx. This allows you to deploy Nginx binaries, that have\n   Phusion Passenger Enterprise compiled in, to servers that are not\n   actually running Phusion Passenger Enterprise.\n * Fixed a performance bug in the Union Station support code. In certain cases\n   where a lot of data must be sent to Union Station, the code is now over\n   100 times faster.\n * `passenger-status --show=union_station` now displays all clients that\n   are connected to the LoggingAgent.\n * Added a workaround for Heroku so that exited processes are properly detected\n   as such.\n * When using Phusion Passenger Standalone with Foreman, pressing Ctrl-C\n   in Foreman no longer results in runaway Nginx processes.\n * Fixed backtraces in the Apache module.\n\n\nRelease 4.0.17\n--------------\n\n * Fixed compilation problems on GCC 4.8 systems, such as Arch Linux 2013.04.\n   Fixes issue #941.\n * Fixed some deprecation warnings when compiling the Ruby native extension\n   on Ruby 2.0.0.\n * Fixed some Union Station-related stability issues.\n\n\nRelease 4.0.16\n--------------\n\n * Allow Phusion Passenger to work properly on systems where the user's GID\n   does not have a proper entry in /etc/group, such as Heroku.\n\n\nRelease 4.0.15\n--------------\n\n * Out-of-band work has been much improved. The number of processes which\n   may perform out-of-band work concurrently has been limited to 1.\n   Furthermore, processes which are performing out-of-band work are now\n   included in the max pool size constraint calculation. However, this\n   means that in order to use out-of-band work, you need to have at least\n   2 application processes running. Out-of-band work will never be triggered\n   if you just have 1 process. Partially fixes issue #892.\n * Phusion Passenger now displays an error message to clients if too many\n   requests are queued up. By default, \"too many\" is 100. You may customize\n   this with `PassengerMaxRequestQueueSize` (Apache) or\n   `passenger_max_request_queue_size` (Nginx).\n * A new configuration option, `PassengerStartTimeout` (Apache) and\n   `passenger_start_timeout` (Nginx), has been added. This option allows you\n   to specify a timeout for application startup. The startup timeout has exited\n   since version 4.0.0, but before version 4.0.15 it was hardcoded at a value\n   of 90 seconds. Now it is customizable. Fixes issue #936.\n * [Enterprise] The `PassengerMaxRequestTime`/`passenger_max_request_time`\n   feature is now available for Python and Node.js as well, and is no longer\n   limited to just Ruby. Fixes issue #938.\n * [Nginx] Introduced a configuration option `passenger_intercept_errors`,\n   which decides if Nginx will intercept responses with HTTP status codes of\n   400 and higher. Its effect is similar to `proxy_intercept_errors`.\n * [Standalone] Memory usage optimization: when `passenger start` is run with\n   `--daemonize`, the frontend exits after starting the Nginx core. This saves\n   ~20 MB of memory per `passenger start` instance.\n * [Standalone] Phusion Passenger Standalone is now also packaged in the\n   Debian packages.\n * [Standalone] Fix a problem with the `passenger stop` command on Ruby 1.8.7.\n   The 'thread' library was not properly required, causing a crash.\n * [Standalone] There is now builtin support for SSL.\n * Fix a crash when multiple `passenger_pass_header` directives are set.\n   Fixes issue #934.\n * Permissions on the server instance directory are now explicitly set\n   with chmod, so that permissions are correct on systems with a non-default\n   umask. Fixes issue #928.\n * Fix permission problems when running `passenger start` with `--user`.\n * `passenger-config --detect-apache2` now correctly detects the eror log\n   filename on Amazon Linux. Fixes issue #933.\n * An environment variable `PASSENGER_THREAD_LOCAL_STORAGE` has been added\n   to the build system for forcefully disabling the use of thread-local\n   storage within the Phusion Passenger codebase. This flag useful on systems\n   that have broken support for thread-local storage, despite passing our build\n   system's check for proper thread-local storage support. At the time of\n   writing, one user has reported that Ubuntu 12.04 32-bit has broken\n   thread-local storage report although neither the reporter nor us were able\n   to reproduce the problem on any other systems running Ubuntu 12.04 32-bit.\n   Note that this flag has no effect on non-Phusion Passenger code. Fixes\n   issue #937.\n * It is now possible to preprocess events before they are sent to Union\n   Station. This is useful for removing confidential data as demonstrated in\n   this example `config/initializers/passenger.rb` file:\n\n       if defined?(PhusionPassenger)\n           event_preprocessor = lambda do |e|\n               e.payload[:sql].gsub!(\"secret\",\"PASSWORD\") if e.payload[:sql]\n           end\n           PhusionPassenger.install_framework_extensions!(:event_preprocessor => event_preprocessor)\n       end\n\nRelease 4.0.14\n--------------\n\n * Fixed a bug in Passenger Standalone's source compiler, for the specific\n   case when the downloaded Nginx binary doesn't work, and compilation\n   of the Nginx binary did not succeed the first time (e.g. because of\n   missing dependencies).\n * Precompiled Ruby native extensions are now automatically downloaded.\n\n\nRelease 4.0.13\n--------------\n\n * Updated preferred Nginx version to 1.4.2.\n * Worked around the fact that FreeBSD 9.1 has a broken C++ runtime. Patch\n   contributed by David Keller.\n * Autogenerated HTTP Date headers are now in UTC instead of local time.\n   This could cause cookies to have the wrong expiration time. Fixes issue #913.\n * Fixed compatibility problems with Ruby 1.8.6 (issue #924).\n * Introduced a tool, `passenger-config --detect-apache2`, which autodetects\n   all Apache installations on the system along with their parameters (which\n   apachectl command to run, which log file to read, which config file to edit).\n   The tool advises users about how to use that specific Apache installation.\n   Useful if the user has multiple Apache installations but don't know about\n   it, or when the user doesn't know how to work with multiple Apache\n   installations.\n * Added an API for better Rack socket hijacking support.\n * Added a hidden configuration option for customizing the application start\n   timeout. A proper configuration option will be introduced in the future.\n * Added autodetection support for Amazon Linux.\n * Fixed process metrics collection on some operating systems. Some systems'\n   'ps' command expect no space between -p and the list of PIDs.\n\n\nRelease 4.0.10\n--------------\n\n * Fixed a crash in PassengerWatchdog which occurs on some OS X systems.\n * Fixed exception reporting to Union Station.\n * Improved documentation.\n\n\nRelease 4.0.9\n-------------\n\n * [Enterprise] Fixed a problem with passenger-irb.\n\n\nRelease 4.0.8\n-------------\n\n * Fixed a problem with graceful web server restarts. When you gracefully\n   restart the web server, it would cause Phusion Passenger internal sockets\n   to be deleted, thus causing Phusion Passenger to go down. This problem\n   was introduced in 4.0.6 during the attempt to fix issue #910.\n * The PassengerRestartDir/passenger_restart_dir now accepts relative\n   filenames again, just like in Phusion Passenger 3.x. Patch\n   contributed by Ryan Schwartz.\n * Documentation updates contributed by Gokulnath Manakkattil.\n * [Enterprise] Fixed a license key checking issue on some operating systems,\n   such as CentOS 6.\n\n\nRelease 4.0.7\n-------------\n\n * There was a regression in 4.0.6 that sometimes prevents\n   PassengerLoggingAgent from starting up. Unfortunately this slipped\n   our release testing. This regression has been fixed and we've updated\n   our test suite to check for these kinds of regressions.\n\n\nRelease 4.0.6\n-------------\n\n * Fixed a potential 100% CPU lock up in the crash handler, which only occurs\n   on OS X. Fixes issue #908.\n * Fixed a crash in request handling, when certain events are trigger after\n   the client has already disconnected. Fixes issue #889.\n * Phusion Passenger will no longer crash when the Phusion Passenger\n   native_support Ruby extension cannot be compiled, e.g. because the Ruby\n   development headers are not installed or because the current user has no\n   permission to save the native extension file. Fixes issue #890.\n * Fixed OS X 10.9 support. Fixes issue #906.\n * Removed dependency on bash, so that Phusion Passenger works out of the box\n   on BSD platforms without installing/configuring bash. Fixes issue #911.\n * Fix 'PassengerPoolIdleTime 0' not being respected correctly. Issue #904.\n * Admin tools improvement: it is now possible to see all currently running\n   requests by invoking `passenger-status --show=requests`.\n * A new feature called Flying Passenger allows you to decouple the life time\n   of Phusion Passenger from the web server, so that both can be restarted\n   indepedently from each other. Please refer to\n   http://blog.phusion.nl/2013/07/03/technology-preview-introducing-flying-passenger/\n   for an introduction.\n * [Apache] Fixed compatibility with Apache pipe logging. Previously this\n   would cause Phusion Passenger to lock up with 100% CPU during Apache\n   restart.\n * [Nginx] The Nginx configure script now checks whether 'ruby' is in $PATH.\n   Previously, if 'ruby' is not in $PATH, then the compilation process fails\n   with an obscure error.\n * [Nginx] passenger-install-nginx-module now works properly even when Phusion\n   Passenger is installed through the Debian packages. Before, the installer\n   would tell you to install Phusion Passenger through the gem or tarball\n   instead.\n * [Enterprise] Added pretty printing helpers to the Live IRB Console.\n * Fixed permissions on a subdirectory in the server instance directory. The\n   server instance directory is a temporary directory that Phusion Passenger\n   uses to store working files, and is deleted after Phusion Passenger exits.\n   A subdirectory inside it is world-writable (but not world-readable) and is\n   used for storing Unix domain sockets created by different apps, which may\n   run as different users. These sockets had long random filenames to prevent\n   them from being guessed. However because of a typo, this subdirectory was\n   created with the setuid bit, when it should have sticky bit (to prevent\n   existing files from being deleted or renamed by a user that doesn't own the\n   file). This has now been fixed.\n * If the server instance directory already exists, it will now be removed\n   first in order get correct directory permissions. If the directory still\n   exists after removal, Phusion Passenger aborts to avoid writing to a\n   directory with unexpected permissions. Fixes issue #910.\n * The installer now checks whether the system has enough virtual memory, and\n   prints a helpful warning if it doesn't.\n * Linux/AArch64 compatibility fixes. Patch contributed by Dirk Mueller.\n * Improved documentation.\n\n\nRelease 4.0.5\n-------------\n\n * [Standalone] Fixed a regression that prevented Passenger Standalone\n   from starting. Fixes issue #899.\n * Fixed security vulnerability CVE-2013-2119.\n\n   Urgency: low\n   Scope: local exploit\n   Summary: denial of service and arbitrary code execution by hijacking temp files\n   Affected versions: all versions\n   Fixed versions: 3.0.21 and 4.0.5\n\n   Description:\n   Phusion Passenger's code did not always create temporary files and directories in a secure manner. Temporary files and directories were sometimes created with a predictable filename. A local attacker can pre-create temporary files, resulting in a denial of service. In addition, this vulnerability allows a local attacker to run arbitrary code as another user, by hijacking temporary files.\n\n   By pre-creating certain temporary files with certain permissions, attackers can prevent Passenger Standalone from starting (denial of service).\n\n   By pre-creating certain temporary files with certain other permissions, attackers can trick `passenger start` and the build system (which is invoked by `passenger-install-apache2-module`/`passenger-install-nginx-module`) to run arbitrary code. The user that the code is run as, is equal to the user that ran `passenger start` or the build system. Attacks of this nature have to be timed exactly right. The attacker must overwrite the file contents right after Phusion Passenger has created the file contents, but right before the file is used. In the context of `passenger start`, the vulnerable window begins right after Passenger Standalone has created the Nginx config file, and ends when Nginx has read the config file. Once Nginx has started and initialized, the system is no longer vulnerable. `passenger stop` and other Passenger Standalone commands besides `start` are not vulnerable. In the context of the build system, the vulnerable window begins when `passenger-install-apache2-module`/`passenger-install-nginx-module` prints its first dependency checking message, and ends when it prints the first compiler command.\n\n   Only the `passenger start` command, the `passenger-install-apache2-module` command and the `passenger-install-nginx-module` commands are vulnerable. Phusion Passenger for Apache and Phusion Passenger for Nginx (once they are installed) are not vulnerable.\n\n   Fixed versions:\n   3.0.21 and 4.0.5 have been released to address this issue.\n\n   Workaround:\n   You can use this workaround if you are unable to upgrade. Before invoking any Phusion Passenger command, set the `TMPDIR` environment variable to a directory that is not world-writable. Special care must be taken when you use sudo: sudo resets all environment variables, so you should either invoke sudo with `-E`, or you must set the environment variable after gaining root privileges with sudo.\n\n\nRelease 4.0.4\n-------------\n\n * Fixed autodetection of noexec-mount /tmp directory. Fixes issue #850\n   and issue #625.\n * Fixed a WSGI bug. wsgi.input was a file object opened in text mode,\n   but should be opened in binary mode. Fixes issue #881.\n * Fixed a potential crash in Out-of-Band Work. Fixes issue #894.\n * Fixed a potential crash in rolling restarting, which only occurs if a\n   process was also being spawned at the same time. Fixes issue #896.\n * [Apache] The RailsBaseURI and RackBaseURI directives have been unified.\n   For a long time, RailsBaseURI told Phusion Passenger that the given\n   sub-URI belongs to a **Rails 2** application. Attempt to use this\n   directive with Rails 3 or with Rack applications would result in an\n   error. Because this confused users, RailsBaseURI and RackBaseURI\n   have now been unified and can now be used interchangably. Phusion\n   Passenger will automatically detect what kind of application it is.\n   The Nginx version already worked like this. Fixes issue #882.\n * [Standalone] The Passenger Standalone temp directory and\n   PassengerWatchdog server instance directory have been unified.\n   PassengerWatchdog already automatically updates the timestamps of\n   all files in its server instance directory every 6 hours to prevent\n   /tmp cleaners from deleting the directory. Therefore this\n   unification prevents the Passenger Standalone temp directory to be\n   deleted by /tmp cleaners as well. Fixes issue #654.\n * [Standalone] types_hash_max_size has been increased from 1024 to\n   2048. This solves a problem that causes Nginx not to start on some\n   platforms. Contributed by Jan-Willem Koelewijn.\n\n\nRelease 4.0.3\n-------------\n\n * Better protection is now provided against application processes that\n   are stuck and refuse to shut down cleanly. Since version 4.0.0,\n   Phusion Passenger already forcefully shuts down all processes during\n   web server shutdown. In addition to this, 4.0.3 now also forcefully\n   shuts down processes that take more than 1 minute to shut down, even\n   outside the context of web server shutdowns. This feature does not,\n   however, protect against requests that take too long. Use\n   PassengerMaxRequestTime (Apache) or passenger_max_request_time (Nginx)\n   for that.\n * Fixed a crash in the HelperAgent which results in frequent process\n   restarts in some traffic patterns. Fixes issue #862.\n * Fixed a problem that prevents processes from being spawned correctly\n   if the user's bashrc changes working directory. Fixes issue #851.\n * passenger-status now also displays CPU usage.\n * The installer now checks for checksums when automatically downloading\n   PCRE and Nginx. Contributed by Joshua Lund.\n * An error is now printed when trying to daemonize Phusion Passenger\n   Standalone on Ruby implementations that don't support forking.\n   Contributed by Benjamin Fleischer.\n * Although Phusion Passenger already supported JRuby, *installing*\n   Phusion Passenger with JRuby was not possible. This has been fixed.\n * Various other minor bug fixes.\n\n\nRelease 4.0.2\n-------------\n\n * Bumped the preferred Nginx version to 1.4.1 because of a critical\n   Nginx security vulnerability, CVE-2013-2028. Users are advised to\n   upgrade immediately.\n\n\nRelease 4.0.1\n-------------\n\n * Fixed a crasher bug in the Deployment Error Resistance feature.\n * Fixed a bug in PassengerDefaultUser and PassengerDefaultGroup.\n * Fixed a bug which could cause application processes to exit before\n   they've finished their request.\n * Fixed some small file descriptor leaks.\n * Bumped the preferred Nginx version to 1.4.0.\n * Editing the Phusion Passenger Standalone Nginx config template\n   is no longer discouraged.\n * Improved documentation.\n\n\nRelease 4.0.0 release candidate 6\n---------------------------------\n\n * WebSocket support on Nginx. Requires Nginx >= 1.3.15.\n * Improved RVM support.\n * Performance optimizations.\n * Various bug fixes.\n\n\nRelease 4.0.0 release candidate 5\n---------------------------------\n\n * The default config snippet for Apache has changed! It must now contain a\n   `PassengerDefaultRuby` option. The installer has been updated to output\n   this option. The `PassengerRuby` option still exists, but it's only used\n   for configuring different Ruby interpreters in different contexts. Please\n   refer to the manual for more information.\n * We now provide GPG digital signatures for all file releases by Phusion.\n   More information can be found in the manual.\n * `passenger-status` now displays process memory usage and time when it\n   was last used. The latter fixes issue #853.\n * Exceptions in Rack application objects are now caught to prevent\n   application processes from exiting.\n * The `passenger-config` tool now supports the `--ruby-command` argument,\n   which helps the user with figuring out the correct Ruby command to use\n   in case s/he wants to use multiple Ruby interpreters. The manual has\n   also been updated to mention this tool.\n * Fixed streaming responses on Apache.\n * Worked around an OS X Unix domain socket bug. Fixes issue #854.\n * Out-of-Band Garbage Collection now works properly when the application\n   has disabled garbage collection. Fixes issue #859.\n * Fixed support for /usr/bin/python on OS X. Fixes issue #855.\n * Fixed looping-without-sleeping in the ApplicationPool garbage collector\n   if PassengerPoolIdleTime is set to 0. Fixes issue #858.\n * Fixed some process memory usage measurement bugs.\n * Fixed process memory usage measurement on NetBSD. Fixes issue #736.\n * Fixed a file descriptor leak in the Out-of-Band Work feature. Fixes issue #864.\n * The PassengerPreStart helper script now uses the default Ruby\n   interpreter specified in the web server configuration, and no longer\n   requires a `ruby` command to be in `$PATH`.\n * Updated preferred PCRE version to 8.32.\n * Worked around some RVM bugs.\n * The ngx_http_stub_status_module is now enabled by default.\n * Performance optimizations.\n\n\nRelease 4.0.0 release candidate 4\n---------------------------------\n\n * Fixed compilation on systems where /tmp is mounted noexec.\n * Fixed some memory corruption bugs.\n * Improved debugging messages.\n * Phusion Passenger Standalone now sets underscores_in_headers.\n   Fixes issue #708.\n * Fixed some process spawning compatibility problems, as\n   reported in issue #842.\n * The Python WSGI loader now correctly shuts down client sockets\n   even when there are child processes that keep the socket open.\n * A new configuration option PassengerPython (Apache) and\n   passenger_python (Nginx) has been added so that users can\n   customize the Python interpreter on a per-application basis.\n   Fixes issue #852.\n * The Apache module now supports file uploads larger than 2 GB\n   when on 32-bit systems. Fixes issue #838.\n * The Nginx version now supports the `passenger_temp_dir` option.\n * Environment variables set in the Nginx configuration file\n   (through the `env` config option) are now correctly passed to\n   all application processes. Fixes issue #371.\n * Fixed support for RVM mixed mode installations. Fixes issue #828.\n * Phusion Passenger now outputs the Date HTTP header in case the\n   application didn't already do that (and was violating the HTTP spec).\n   Fixes issue #485.\n * Phusion Passenger now checks whether /dev/urandom isn't broken.\n   Fixes issue #516.\n\n\nRelease 3.9.5 (4.0.0 release candidate 3)\n-----------------------------------------\n\n * Fixed Rake autodetection.\n\n\nRelease 3.9.4 (4.0.0 release candidate 2)\n-----------------------------------------\n\n * More bug fixes.\n * More documentation updates.\n * Better crash diagnostics.\n\n\nRelease 3.9.3 (4.0.0 release candidate 1)\n-----------------------------------------\n\n * The Nginx version now supports the `passenger_app_root` configuration option.\n * The Enterprise memory limiting feature has been extended to work with non-Ruby applications as well.\n * Application processes that have been killed are now automatically detected within 5 seconds. Previously Phusion Passenger needed to send a request to the process before detecting that it's gone. This change means that when you kill a process by sending it a signal, Phusion Passenger will automatically respawn it within 5 seconds (provided that the process limit settings allow respawning).\n * Phusion Passenger Standalone's HTTP client body limit has been raised from 50 MB to 1 GB.\n * Python 3 support has been added.\n * The build system has been made compatible with JRuby and Ruby 2.0.\n * The installers now print a lot more information about detected system settings so that the user can see  whether something has been wrongly detected.\n * Some performance optimizations. These involve further extending the zero-copy architecture, and the use of hash table maps instead of binary tree maps.\n * Many potential crasher and freezer bugs have been fixed.\n * Error diagnostics have been further improved.\n * Many documentation improvements.\n\n\nRelease 3.9.2 (4.0.0 beta 2)\n----------------------------\n\n * New feature: JRuby and Rubinius support.\n * New feature: Out of Band Work.\n * Sending SIGBART to a Ruby process will now trigger the same behavior\n   as SIGQUIT - that is, it will print a backtrace. This is necessary\n   for proper JRuby support because JRuby cannot catch SIGQUIT.\n * Rolling restarts and depoyment error resistance are now also available\n   in Phusion Passenger Standalone in the Enterprise version.\n * System call failure simulation framework.\n * Improved crash reporting.\n * Many documentation improvements.\n * Many bug fixes.\n\n\nRelease 3.9.1 (4.0.0 beta 1)\n----------------------------\n\nThis is the first beta of Phusion Passenger 4. The changes are numerous.\n\n * Support for multiple Ruby versions.\n * The internals now use evented I/O.\n * Real-time response buffering.\n * Improved zero-copy architecture.\n * Rewritten ApplicationPool and process spawning subsystem.\n * Multithreading within Ruby apps (Phusion Passenger Enterprise only).\n * Python WSGI support lifted to \"beta\" status.\n * More protection against stuck processes.\n * Automatically picks up environment variables from your bashrc.\n * Allows setting environment variables directly in Apache.\n * Automatic asset pipeline support in Standalone.\n * Deleting restart.txt no longer triggers a restart.\n * More stable Union Station support.\n * Many internal robustness improvements.\n * Better relocatability without wasting space.\n\n\nRelease 3.0.21\n--------------\n\n * Rebootstrapped the libev configure to fix compilation problems on Solaris 11.\n * Fixed support for RVM mixed mode installations. Fixes issue #828.\n * Fixed encoding problems in Phusion Passenger Standalone.\n * Changed preferred Nginx version to 1.2.9.\n * Catch exceptions raised by Rack application objects.\n * Fix for CVE-2013-2119. Details can be found in the announcement for version 4.0.5.\n * Version 3.0.20 was pulled because its fixes were incomplete.\n\n\nRelease 3.0.19\n--------------\n\n * Nginx security fix: do not display Nginx version when\n   server_tokens are off.\n * Fixed compilation problems on some systems.\n * Fixed some Union Station-related bugs.\n\n\nRelease 3.0.18\n--------------\n\n * Fixed compilation problems on Fedora 17.\n * Fixed Union Station compatibility with Rails 3.2.\n * Phusion Passenger Enterprise Standalone now supports rolling\n   restarts and deployment error resistance.\n\n\nRelease 3.0.17\n--------------\n\n * Fixed a Ruby 1.9 encoding-related bug in the memory measurer.\n   (Phusion Passenger Enterprise)\n * Fixed OOM adjustment bugs on Linux.\n * Fixed compilation problems on Fedora 18 and 19.\n * Fixed compilation problems on SunOS.\n * Fixed compilation problems on AIX. Contribution by Perry Smith.\n * Fixed various compilation warnings.\n * Upgraded preferred Nginx version to 1.2.3.\n\n3.0.16 was an unofficial hotfix release, and so its announcement had been skipped.\n\n\nRelease 3.0.15\n--------------\n\n * Updated documentation.\n * Updated website links.\n\n\nRelease 3.0.14\n--------------\n\n * [Apache] Fixed a long-standing mod_rewrite-related problem.\n   Some mod_rewrite rules would not work, but it depends on the exact\n   mod_rewrite configuration so it would work for some people but not\n   for others. Issue #563. Thanks a lot to cedricmaion for providing\n   information on the nature of the bug and to peter.nash55 for\n   providing a VM that allowed us to reproduce the problem.\n * [Nginx] Preferred Nginx version to 1.2.2.\n   The previously preferred version was 1.2.1.\n * Cleared some confusing terminology in the documentation.\n * Fixed some Ruby 1.9 encoding problems.\n\n\nRelease 3.0.13\n--------------\n\n * [Nginx] Preferred Nginx version upgraded to 1.2.1.\n * Fixed compilation problems on FreeBSD 6.4. Fixes issue #766.\n * Fixed compilation problems on GCC >= 4.6.\n * Fixed compilation problems on OpenIndiana and Solaris 11. Fixes issue #742.\n * Union Station-related bug fixes.\n * Sending the soft termination signal twice to application processes no longer makes them crash. Patch contributed by Ian Ehlert.\n\n\nRelease 3.0.12\n--------------\n\n * [Apache] Support Apache 2.4. The event MPM is now also supported.\n * [Nginx] Preferred Nginx version upgraded to 1.0.15.\n * [Nginx] Preferred PCRE version upgraded to 8.30.\n * [Nginx] Fixed compatibility with Nginx < 1.0.10.\n * [Nginx] Nginx is now installed with http_gzip_static_module by default.\n * [Nginx] Fixed a memory disclosure security problem.\n   The issue is documented at http://www.nginx.org/en/security_advisories.html\n   and affects more modules than just Phusion Passenger. Users are advised\n   to upgrade as soon as possible. Patch submitted by Gregory Potamianos.\n * [Nginx] passenger_show_version_in_header now hides the Phusion Passenger version number from the 'Server:' header too.\n   Patch submitted by Gregory Potamianos.\n * Fixed a /proc deprecation warning on Linux kernel >= 3.0.\n\n\nRelease 3.0.11\n--------------\n\n * Fixed a compilation problem on platforms without alloca.h, such as FreeBSD 7.\n * Improved performance and solved some warnings on Xen systems by compiling\n   with `-mno-tls-direct-seg-refs`. Patch contributed by Micha\u0142 Pokrywka.\n\n\nRelease 3.0.10\n--------------\n\n * [Nginx] Dropped support for Nginx versions older than 1.0.0\n * [Nginx] Fixed support for Nginx 1.1.4+\n * [Nginx, Standalone] Upgraded default Nginx version to 1.0.10\n   The previously default version was 1.0.5.\n * [Nginx] New option passenger_max_requests\n   This is equivalent to the PassengerMaxRequests option in the Apache\n   version: Phusion Passenger will automatically shutdown a worker process\n   once it has processed the specified number of requests.\n   Contributed by Paul Kmiec.\n * [Apache] New option PassengerBufferResponse\n   The Apache version did not buffer responses. This could block the Ruby\n   worker process in case of slow clients. We now enable response buffering\n   by default. It can be turned off through this option. Feature contributed\n   by Ryo Onodera.\n * Fixed remaining Ruby 1.9.3 compatibility problems\n   We already supported Ruby 1.9.3 since 3.0.8, but due to bugs in Ruby\n   1.9.3's build system Phusion Passenger would fail to detect Ruby 1.9.3\n   features on some systems. Fixes issue #714.\n * Fixed a bug in PassengerPreStart\n   A regression was introduced in 3.0.8, causing the prespawn script to\n   connect to the host name instead of to 127.0.0.1. Fix contributed by\n   Andy Allan.\n * Fixed compatibility with GCC 4.6\n   Affected systems include Ubuntu 11.10.\n * Fixed various compilation problems.\n * Fixed some Ruby 1.9 encoding problems.\n * Fixed some Ruby 1.9.3 deprecation warnings.\n\n\nRelease 3.0.9\n-------------\n\n * [Nginx] Fixed a NULL pointer crash that occurs on HTTP/1.0 requests\n   when the Host header isn't given.\n * Fixed deprecation warnings on RubyGems >= 1.6.\n * Improved Union Station support stability.\n\n\nRelease 3.0.8\n-------------\n\n * [Nginx] Upgraded preferred Nginx version to 1.0.5.\n * [Nginx] Fixed various compilation problems on various platforms.\n * [Nginx] We now ensure that SERVER_NAME is equal to HTTP_HOST without the port part.\n   This is needed for Rack compliance. By default Nginx sets SERVER_NAME to\n   whatever is specified in the server_name directive, but that's not necessarily\n   the correct value. This fixes, for example, the use of the 'map' statement\n   in config.ru.\n * [Nginx] Added the options passenger_buffer_size, passenger_buffers and passenger_busy_buffers_size.\n   These options are similar to proxy_module's similarly named options. You can\n   use these to e.g. increase the maximum header size limit.\n * [Nginx] passenger_pre_start now supports virtual hosts that listen on Unix domain sockets.\n * [Apache] Fixed the pcre.h compilation problem.\n * [Standalone] Fixed 'passenger stop'.\n   It didn't work properly because it kept waiting for 'tail' to exit.\n   We now properly terminate 'tail' as well.\n * Fixed compatibility with Rake 0.9.\n * Fixed various Ruby 1.9 compatibility issues.\n * Various documentation improvements.\n * New Union Station filter language features.\n   It now supports status codes and response times.\n   Please refer to https://engage.unionstationapp.com/help#filtering\n   for more information.\n\n\nRelease 3.0.7\n-------------\n\n * Fixed a bug passenger-install-apache2-module. It could crash on\n   some systems due to a typo in the code.\n * Upgraded preferred Nginx version to 1.0.0.\n * Phusion Passenger Standalone now pre-starts application processes\n   at startup instead of doing that at the first request.\n * When sending data to Union Station, the HTTP status code is now also\n   logged.\n * Various Union Station-related stability improvements.\n * The Linux OOM killer was previously erroneously disabled for all\n   Phusion Passenger processes, including application processes. The\n   intention was to only disable it for the Watchdog. This has been\n   fixed, and the Watchdog is now the only process for which the OOM\n   killer is disabled.\n * Fixed some compilation problems on OpenBSD.\n * Due to a typo, the dependency on file-tail was not entirely removed\n   in 3.0.6. This has now been fixed.\n\n\nRelease 3.0.6\n-------------\n\n * Fixed various compilation problems such as XCode 4 support and OpenBSD support.\n * Fixed various Union Station-related stability issues.\n * Fixed an issue with host name detection on certain platforms.\n * Improved error logging in various parts.\n * The dependency on the file-tail library has been removed.\n * During installation, check whether /tmp is mounted with 'noexec'.\n   Phusion Passenger's installer relies on /tmp *not* being mounted\n   with 'noexec'. If it is then the installer will now show a helpful\n   error message instead of bailing out in a confusing manner. Users\n   can now tell the installer to use a different directory for storing\n   temporary files by customizing the $TMPDIR environment variable.\n * Phusion Passenger Standalone can now run Rackup files that are not named 'config.ru'.\n   The filename can be passed through the command line using the -R option.\n\n\nRelease 3.0.5\n-------------\n\n * [Apache] Fixed Union Station process statistics collection\n   Union Station users that are using Apache may notice that no process\n   information show up in Union Station. This is because of a bug in\n   Phusion Passenger's Apache version, which has now been fixed.\n * [Apache] PassengerAnalytics has been renamed to UnionStationSupport\n   This option has been renamed for consistency reasons.\n * [Nginx] passenger_analytics has been renamed to union_station_support\n   This option has been renamed for consistency reasons.\n * Fixed Union Station data sending on older libcurl versions\n   Some Union Station users have reported that their data don't show up.\n   Upon investigation this turned out to be a compatibility with older\n   libcurl versions. Affected systems include all RHEL 5 based systems,\n   such as RHEL 5.5 and CentOS 5.5. We've now fixed compatibility\n   with older libcurl versions.\n * Added support for the Union Station filter language\n   This language can be used to limit the kind of data that's sent to\n   Union Station. Please read\n   https://engage.unionstationapp.com/help#filtering for details.\n * Fixed a PassengerMaxPoolSize/passenger_max_pool_size violation bug\n   People who host a lot of different applications on Phusion Passenger\n   may notice that it sometimes spawns more processes than is allowed\n   by PassengerMaxPoolSize/passenger_max_pool_size. This has been fixed.\n\n\nRelease 3.0.4\n-------------\n\n * [Apache] Changed mod_dir workaround hook priority\n   Phusion Passenger temporarily disables mod_dir on all Phusion\n   Passenger-handled requests in order to avoid conflicts. In order to do this\n   it registers some Apache hooks with the APR_HOOK_MIDDLE priority, but it\n   turned out that this breaks some other modules like mod_python. The hook\n   priority has been changed to APR_HOOK_LAST to match mod_dir's hook\n   priorities. Issue reported by Jay Freeman.\n * Added support for Union Station: http://www.unionstationapp.com/\n * Some error messages have been improved.\n\n\nRelease 3.0.3\n-------------\n\n * [Nginx] Preferred Nginx version upgraded to 0.8.54\n   The previous preferred version was 0.8.53.\n * PATH_INFO and REQUEST_URI now contain the original escaped URI\n   Phusion Passenger passes the URI, as reported by Apache/Nginx, to\n   application processes through the PATH_INFO and REQUEST_URI variables.\n   These variables are supposed to contain the original, unescaped URI, e.g.\n   /clubs/%C3%BC. Both Apache and Nginx thought that it would be a good idea\n   to unescape the URI before passing it to modules like Phusion Passenger,\n   thereby causing PATH_INFO and REQUEST_URI to contain the unescaped URI,\n   e.g. /clubs/\u00fc. This causes all sorts of encoding problems. We now manually\n   re-escape the URI when setting PATH_INFO and REQUEST_URI. Issue #404.\n * The installer no longer detects directories as potential commands\n   Previously the installer would look in $PATH for everything that's\n   executable, including directories. If one has /usr/lib in $PATH\n   and a directory /usr/lib/gcc exists then the installer would recognize\n   /usr/lib/gcc as the compiler. We now explicitly check whether the item\n   is also a file.\n * PseudoIO now responds to #to_io\n   Phusion Passenger sets STDERR to a PseudoIO object in order to capture\n   anything written to STDERR during application startup. This breaks\n   some libraries which expect STDERR to respond to #to_io. This has now\n   been fixed. Issue #607.\n * Fixed various other minor bugs\n   See the git commit log for details.\n\n\nRelease 3.0.2\n-------------\n\n * [Nginx] Fixed compilation problems\n   The Nginx compilation process was broken due to not correctly reverting\n   the working directory of the Nginx configure script. This has been fixed:\n   issue #595.\n * [Nginx] Fixed crash if passenger_root refers to a nonexistant directory\n   Issue #599.\n * Fixed compilation problems on NetBSD\n   There was a typo in a NetBSD-specific fcntl() call. It also turns out that\n   NetBSD doesn't support some ISO C99 math functions like llroundl(); this\n   has been worked around by using other functions. Issue #593.\n * Fixed file descriptor closing issues on FreeBSD\n   Phusion Passenger child processes didn't correct close file descriptors\n   on FreeBSD because it queries /dev/fd to do that. On FreeBSD /dev/fd\n   only returns meaningful results if fdescfs is mounted, which it isn't\n   by default. Issue #597.\n\n\nRelease 3.0.1\n-------------\n\n * MUCH faster compilation\n   We've applied code aggregation techniques, allowing Phusion Passenger\n   to be compiled much quicker now. For example, compiling the Nginx\n   component (not Nginx itself) on a MacBook Pro now takes only 29\n   seconds instead of 51 seconds, an improvement of 75%! Compiling the\n   Apache module on a slower Dell Inspiron now takes 39 seconds instead of\n   1 minute 22 seconds, or 110% faster!\n * Fixed malfunction after web server restart\n   On Linux systems that have a non-standard filesystem on /tmp, Phusion\n   Passenger could malfunction after restarting the web server because of\n   a bug that's only triggered on certain filesystems. Issue #569.\n * Boost upgraded to version 1.44.0.\n   We were on 1.42.0.\n * Much improved startup error messages\n   Phusion Passenger performs many extensive checks during startup to ensure\n   integrity. However the error message in some situation could be vague.\n   These startup error messages have now been improved dramatically, so that\n   if something goes wrong during startup you will now more likely know why.\n * Curl < 7.12.1 is now supported\n   The previous version fails to compile with Curl versions earlier than\n   7.12.1. Issue #556.\n * passenger-make-enterprisey fixed\n   This is the command that people can run after donating. It allows people\n   to slightly modify Phusion Passenger's display name as a joke. In 3.0.0 it\n   was broken because of a typo. This has been fixed.\n * Removed passenger-stress-test\n   This tool was used during the early life of Phusion Passenger for stress\n   testing websites. Its performance has never been very good and there are\n   much better tools for stress testing, so this tool has now been removed.\n * [Apache] RailsEnv and RackEnv configuration options are now equivalent\n   In previous versions, RailsEnv only had effect on Rails 1 and Rails 2 apps\n   while RackEnv only had effect on Rack apps. Because Rails 3 apps are\n   considered Rack apps, setting RailsEnv had no effect on Rails 3 apps.\n   Because this is confusing to users, we've now made RailsEnv and RackEnv\n   equivalent. Issue #579.\n * [Nginx] Fixed compilation problems on systems with unpowerful shells\n   Most notably Solaris. Its default shell does not support some basic\n   constructs that we used in the Nginx configure script.\n * [Nginx] Upgraded default Nginx version to to 0.8.53\n   The previous default was 0.8.52.\n * [Nginx] passenger_enabled now only accepts 'on' or 'off' values\n   Previously it would recognize any value not equal to 'on' as meaning\n   'off'. This caused confusion among users who thought they could also\n   specify 'true', so we now throw a proper error if the value is\n   unrecognized. Fixes issue #583.\n\n\nRelease 3.0.0\n-------------\n\nThis is a major release with many changes. Please read our blog for details.\n\n\nRelease 2.2.15\n--------------\n\n * [Apache] Fixed incorrect temp dir cleanup by passenger-status\n   On some systems, running passenger-status could print the following\n   message:\n   \n      *** Cleaning stale folder /tmp/passenger.1234\n   \n   ...after which Phusion Passenger breaks because that directory is\n   necessary for it to function properly. The cause of this problem\n   has been found and has been fixed.\n * [Apache] Fixed some upload handling problems\n   Previous versions of Phusion Passenger check whether the size of\n   the received upload data matches the contents of the Content-Length\n   header as received by the client. It turns out that there could\n   be a mismatch e.g. because of mod_deflate input compression, so\n   we can't trust Content-Length anyway and we're being too strict.\n   The check has now been removed.\n * [Nginx] Fixed compilation issues with Nginx >= 0.7.66\n   Thanks to Potamianos Gregory for reporting this issue. Issue #500.\n * [Nginx] Default Nginx version changed to 0.7.67\n   The previous default version was 0.7.65.\n * Fixed more Bundler problems\n   Previous versions of Phusion Passenger would preload some popular\n   libraries such as mysql and sqlite3 in order to utilize copy-on-write\n   optimizations better. However this behavior conflicts with Bundler\n   so we've removed it.\n\n\nRelease 2.2.14\n--------------\n\n * Added support for Rubinius\n   Patch contributed by Evan Phoenix.\n * Fixed a mistake in the SIGQUIT backtrace message.\n   Patch contributed by Christoffer Sawicki.\n * [Nginx] Fix a localtime() crash on FreeBSD\n   This was caused by insufficient stack space for threads. Issue #499.\n\n\nRelease 2.2.13\n--------------\n\n * Fixed some Rails 3 compatibility issues that were recently introduced.\n * Fixed a typo that causes config/setup_load_paths.rb not to be loaded\n   correctly.\n\n\nRelease 2.2.12\n--------------\n\n * Improved Bundler support.\n   Previous versions might not be able to correctly load gems bundled\n   by Bundler. We've also documented how our Bundler support works and\n   how to override our support if you need special behavior.\n   Please refer to the Phusion Passenger Users Guide, section\n   \"Bundler support\".\n * Worked around some user account handling bugs in Ruby. Issue #192.\n * Fixed some Ruby 1.9 tempfile.rb compatibility problems.\n * Fixed some compilation problems on some ARM Linux platforms.\n * [Apache] Suppress bogus mod_xsendfile-related error messages.\n   When mod_xsendfile is being used, Phusion Passenger might print\n   bogus error messages like \"EPIPE\" or \"Apache stopped forwarding\n   the backend's response\" to the log file. These messages are\n   normal, are harmless and can be safely ignored, but they pollute\n   the log file. So in this release we've added code to suppress\n   these messages when mod_xsendfile is being used. Issue #474.\n * [Nginx] Fixed \"passenger_user_switching off\" permission problems\n   If Nginx is running as root and passenger_user_switching is turned\n   off, then Phusion Passenger would fail to initialize because of\n   a permission problem. This has been fixed. Issue #458.\n * [Nginx] Nginx >= 0.8.38 is now supported.\n   Thanks to Sergey A. Osokin for reporting the problem.\n * [Nginx] passenger-install-nginx-module upgraded\n    It now defaults to installing Nginx 0.7.65 instead of 0.7.64.\n\n\nRelease 2.2.11\n--------------\n\n * This release fixes a regression that appeared in 2.2.10 which only\n   affects Apache. When under high load, Apache might freeze and stop\n   responding to requests. It is caused by a race condition which is\n   why it escaped our last release testing.\n   \n   This problem does not affect Nginx; you only have to upgrade if\n   you're using Apache.\n   \n   http://groups.google.com/group/phusion-passenger/t/d5bb2f17c8446ea0\n\n\nRelease 2.2.10\n--------------\n\n * Fixed some Bundler compatibility problems.\n * Fixed some file descriptor passing problems, which previously\n   could lead to mysterious crashes.\n * Fixed some compilation problems on newer GCC versions. Issue #430.\n * Support #size method in rack.input.\n\n\n\nRelease 2.2.9\n-------------\n\n * Fixed compatibility with Rails 3.\n   Actually, previous Phusion Passenger releases were already compatible\n   with Rails 3, depending on the spawn method that would be invoked. Here's\n   the story:\n   \n   Since Phusion Passenger 2.2.8, when the file config.ru exists, Phusion\n   Passenger will treat the app as a Rack app, not as a Rails app. This is\n   in contrast to earlier versions which gave Rails detection more priority\n   than Rack detection. Phusion Passenger loads Rack apps and Rails apps in\n   different ways. The Rails loader was not compatible with Rails 3, which\n   is what we've fixed in this release.\n   \n   That said, a Rails 3 app would have worked out-of-the-box on Phusion\n   Passenger 2.2.8 as well because Rails 3 apps include a config.ru file\n   by default, causing Phusion Passenger 2.2.8 to use the Rack loader.\n   Earlier versions of Phusion Passenger would just completely bail out\n   because they'd use the Rails loader.\n   \n   That said, with 2.2.9 there are still some caveats:\n   - Smart spawning (the mechanism with which REE's 33% memory reduction\n     is implemented) is *not* supported for Rack apps. This means that if\n     you want to utilize smart spawning with Rails 3, then you should\n     remove your config.ru file.\n   - Rails 3 depends on Rack 1.1.0. You must have Rack 1.1.0 installed as\n     a gem, even if you've bundled it with the gem bundler. This is because\n     Phusion Passenger itself depends on Rack.\n   \n   Both of these caveats are temporary. We have plans to solve both of these\n   properly in the future.\n * What's up with the Gem Bundler?\n   There has been some reports that Phusion Passenger is not compatible with\n   Yehuda Katz's gem bundler (http://github.com/wycats/bundler). This might\n   have been true for an earlier version of the gem bundler, but the latest\n   version seems to work fine. Please note that you need to insert the\n   following snippet in config/preinitializer.rb, as instructed by the gem\n   bundler's README:\n   \n     require \"#{RAILS_ROOT}/vendor/gems/environment\"\n   \n   The Rails::Boot monkey patching code as posted at\n   http://yehudakatz.com/2009/11/03/using-the-new-gem-bundler-today/\n   does not seem to be required anymore.\n * Fixed support for ActiveRecord subclasses that connect to another database.\n   ActiveRecord subclasses that connect to a database other than the default\n   one did not have their connection correctly cleared after forking.\n   This can result in weird errors along the lines of \"Lost connection to\n   MySQL server during query\". Issue #429.\n * [Nginx] Fixed PCRE URL.\n   passenger-install-nginx-module downloads PCRE 7.8 if PCRE is not already\n   installed. However PCRE 7.8 has been removed from their FTP server,\n   so we've updated the URL to point to the latest version, 8.0.\n\n\nRelease 2.2.8\n-------------\n\n * [Nginx] Fixed some signal handling problems.\n   Restarting Nginx on OS X with SIGHUP can sometimes take a long time or\n   even fail completely. This is because of some signal handling problems,\n   which have now been fixed.\n * [Nginx] Added OpenSSL as dependency.\n   OpenSSL is required in order to install Nginx, but this was not checked\n   by passenger-install-nginx-module. As a result,\n   passenger-install-nginx-module fails on e.g. out-of-the-box Ubuntu\n   installations until the user manually installs OpenSSL. Issue #422.\n * [Nginx] Fixed support for internal redirects and subrequests.\n   It is now possible to, for example, point X-Accel-Redirects to Phusion\n   Passenger-served URLs. Patch contributed by W. Andrew Loe III: issue #433.\n * [Apache] Fixed a GnuTLS compatibility issue.\n   mod_gnutls can cause Phusion Passenger to crash because of an unchecked\n   NULL pointer. This problem has now been fixed: issue #391.\n * Fixed thread creation issue on Intel Itanium platforms.\n   This fixes issue #427.\n * Fixed compilation problems on Linux running on the Renesas SH4 CPU.\n   Patch contributed by iwamatsu: issue #428.\n * The Rack library has been unvendored.\n   The original reason for vendoring was to work around broken Rails\n   applications that explicitly specify Rack as a gem dependency. We've\n   found a better workaround that does not require vendoring Rack.\n   This also fixes a compatibility problem with Rails 3, because Rails\n   3 depends on a newer Rack version than the one we had vendored.\n   Issue #432.\n * Fixed compatibility with Ruby 1.9.1 patchlevel >= 152\n   Ruby 1.9.1 patchlevel >= 152 has a bug in its tempfile library. If you've\n   seen an error message along the lines of\n\n      *** Exception IOError in Passenger RequestHandler (closed stream)\n   \n   then this is a Ruby bug at work. This bug has been fixed in Ruby 1.9.2,\n   but Ruby 1.9.1 still contains this bug. We've added a workaround so that\n   the bug is not triggered with this Ruby version. Issue #432.\n\n\nRelease 2.2.7\n-------------\n\n * Removed forgotten debugging code in passenger-install-apache2-module,\n   which caused it not to compile anything.\n\n\nRelease 2.2.6\n-------------\n\n * Some /tmp cleaner programs such as tmpwatch try to remove subdirectories\n   in /tmp/passenger.xxx after a while because they think those\n   subdirectories are unused. This could cause Phusion Passenger to\n   malfunction, requiring a web server restart. Measures have now been\n   taken to prevent those tmp cleaner programs from removing anything\n   in /tmp/passenger.xxx. Issue #365.\n * When autodetecting the application type, Rack is now given more priority\n   than Rails. This allows one to drop a config.ru file in a Rails directory\n   and have it detected as a Rack application instead of a Rails application.\n   Patch contributed by Sam Pohlenz: issue #338.\n * The default socket backlog has been increased from 'SOMAXCONN' (which\n   is 128 on most platforms) to 1024. This should fix most\n   'helper_server.sock failed: Resource temporarily unavailable'\n   errors.\n * Fixed compilation problems on Solaris. Issue #369 and issue #379.\n * Fixed crashes on PowerPC.\n * Some Ruby 1.9 compatibility fixes. Issue #398.\n * The installer now displays correct dependency installation instructions\n   for Mandriva Linux.\n * [Apache] The location of the 'apxs' and 'apr-config' commands can now\n   also be passed to the installer through the --apxs-path and\n   --apr-config-path parameters, in addition to the $APXS2 and $APR_CONFIG\n   environment variables. Issue #3.\n * [Nginx] Various problems that only occur on 64-bit platforms have been fixed.\n * [Nginx] The installer now installs Nginx 0.7.64 by default.\n\n\nRelease 2.2.5\n-------------\n\n * [Apache] Small file uploads are now buffered; fixes potential DoS attack\n   Phusion Passenger buffers large file uploads to temp files so that it\n   doesn't block applications while an upload is in progress, but it sent\n   small uploads directly to the application without buffering it. This could\n   result in a potential DoS attack: the client can send many small, incomplete\n   file uploads to the server, and this would block all application processes\n   until a timeout occurs. In order to solve this problem, Phusion Passenger\n   now buffers small file uploads in memory. Bug #356.\n\n * [Apache] Fixed support for mod_rewrite passthrough rules\n   Mod_rewrite passthrough rules were not properly supported because of a bug\n   fix for supporting encoded slashes (%2f) in URLs. Unfortunately, due to\n   bugs/limitations in Apache, we can support either encoded slashes or\n   mod_rewrite passthrough rules, but not both; supporting one will break the\n   other.\n\n   Support for mod_rewrite passthrough rules is now enabled by default; that\n   is, support for encoded slashes is disabled by default. A new configuration\n   option, \"PassengerAllowEncodedSlashes\", has been added. Turning this option\n   on will enable support for encoded slashes and disable support for\n   mod_rewrite passthrough rules.\n\n   Issue #113 and issue #230.\n\n * [Apache] Added a configuration option for resolving symlinks in the document root path\n   Phusion Passenger 2.2.0 and higher no longer resolves symlinks in\n   the document root path in order to properly support Capistrano-style\n   directory structures. The exact behavior is documented in the Users Guide,\n   section \"How Phusion Passenger detects whether a virtual host is a web\n   application\".\n\n   However, some people relied on the old behavior. A new configuration option,\n   PassengerResolveSymlinksInDocumentRoot, has been added to allow reverting\n   back to the old behavior.\n\n   Patch contributed by Locaweb (http://www.locaweb.com.br/).\n\n * [Apache] mod_env variables are now also passed through CGI environment headers\n   Prior to version 2.2.3, environment variables set by mod_env are passed to\n   the application as CGI environment headers, not through Ruby's ENV variable.\n   In the last release we introduced support for setting ENV environment\n   variables with mod_env, and got rid of the code for setting CGI environment\n   headers. It turns out that some people relied on the old behavior, we so now\n   environment variables set with mod_env are set in both ENV and in the CGI\n   environment.\n   \n   Fixes bug #335.\n\n * [Apache] Fixed compilation problems on some Linux systems with older versions of Apache\n   If you used to see compilation errors like this:\n\n       ext/apache2/Configuration.cpp:554: error: expected primary-expression before '.' token\n\n   then this version should compile properly.\n\n * [Apache] Fixed I/O timeouts for communication with backend processes\n   Got rid of the code for enforcing I/O timeouts when reading from or writing to\n   a backend process. This caused more problems than it solved.\n\n * [Nginx] Support for streaming responses (e.g. Comet or HTTP push)\n   Buffering of backend responses is now disabled. This fixes support for\n   streaming responses, something which the Apache version has supported\n   for a while now. One can generate streaming responses in Ruby on Rails\n   like this:\n\n       render :text => lambda { |response, output|\n           10_000.times do |i|\n               output.write(\"hello #{i}!\\n\")\n           end\n       }\n\n * [Nginx] Installer now installs Nginx 0.7.61 by default\n   Previously it installed 0.6.37 by default.\n\n * [Nginx] Fixed the installer's --extra-configure-flags flag when combined with --auto-download\n   Arguments passed to --extra-configure-flags were not being passed to the\n   Nginx configure script when --auto-download is given. This has been\n   fixed: bug #349.\n\n * [Nginx] Fixed unnecessary download of PCRE\n   The installer now checks whether PCRE is installed in /opt/local (e.g.\n   MacPorts) as well before concluding that it isn't installed and going ahead\n   with downloading PCRE.\n\n * Fixed STDERR capturing\n   While spawning an application, Phusion Passenger captures any output written\n   to STDERR so that it can show them later if the application failed to start.\n   This turns out to be much more difficult than expected, with all kinds of\n   corner cases that can mess up this feature.\n\n   For example, if the Rails log file is not writable, then this can cause\n   Rails to crash with a bizarre and unhelpful error message whenever it tries\n   to write to STDERR:\n\n       /!\\ FAILSAFE /!\\  Thu Aug 20 14:58:39 +1000 2009\n       Status: 500 Internal Server Error\n       undefined method `[]' for nil:NilClass\n\n   Some applications reopen STDERR to a log file. This didn't work.\n\n   Of all of these problems have been fixed now. (Bug #332)\n\n * Fixed some bugs in application sources preloading\n   Rails >= 2.2 already preloads the application sources, in which case Phusion\n   Passenger wasn't supposed to perform it's own preloading, but the Rails\n   >= 2.2 detection code was bugged. This has been fixed.\n\n   Rails < 2.2 doesn't preload the application sources by itself, but there\n   should be a certain order with which the sources are preloaded, otherwise\n   preloading could fail in some applications. We now enforce a specific load\n   order: first models, then controllers, then helpers.\n\n   Bug #359.\n \n * Fixed a few bugs in WSGI compliance\n   PATH_INFO is supposed to be set to the request URI, but without the query\n   string and without the base URI. This has been fixed: bug #360.\n\n * Fixed some Ruby 1.9-specific crashes caused by encoding issues. Bug #354.\n * Fixed loading of config/environment.rb on Ruby 1.9.2, because Ruby 1.9.2\n   no longer has \".\" in the default load path. Patch by metaljastix, issue #368.\n * The Users Guide for Apache now mentions something about correct permissions\n   for application directories.\n * Fixed compilation problems on IA-64 (bug #118). We also reduced the stack\n   sizes for the threads by half, so Phusion Passenger should use even less\n   virtual memory now.\n * Fixed compilation problems on Linux systems with ARM CPU.\n * Fixed a few compatibility problems with 64-bit OpenBSD.\n * Fixed a few typos and minor bugs.\n\n\nOlder releases\n--------------\nPlease consult the blog posts on http://old.blog.phusion.nl/ for the information about older releases.\n", "#!/usr/bin/env ruby\n#  Phusion Passenger - https://www.phusionpassenger.com/\n#  Copyright (c) 2010-2015 Phusion Holding B.V.\n#\n#  \"Passenger\", \"Phusion Passenger\" and \"Union Station\" are registered\n#  trademarks of Phusion Holding B.V.\n#\n#  Permission is hereby granted, free of charge, to any person obtaining a copy\n#  of this software and associated documentation files (the \"Software\"), to deal\n#  in the Software without restriction, including without limitation the rights\n#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#  copies of the Software, and to permit persons to whom the Software is\n#  furnished to do so, subject to the following conditions:\n#\n#  The above copyright notice and this permission notice shall be included in\n#  all copies or substantial portions of the Software.\n#\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#  THE SOFTWARE.\n\n## Magic comment: begin bootstrap ##\nsource_root = File.expand_path(\"..\", File.dirname(__FILE__))\n$LOAD_PATH.unshift(\"#{source_root}/src/ruby_supportlib\")\nbegin\n  require 'rubygems'\nrescue LoadError\nend\nrequire 'phusion_passenger'\n## Magic comment: end bootstrap ##\n\nPhusionPassenger.locate_directories\n\nrequire 'digest/sha2'\nrequire 'optparse'\nrequire 'fileutils'\nPhusionPassenger.require_passenger_lib 'platform_info/ruby'\nPhusionPassenger.require_passenger_lib 'platform_info/openssl'\nPhusionPassenger.require_passenger_lib 'abstract_installer'\nPhusionPassenger.require_passenger_lib 'utils/terminal_choice_menu'\nPhusionPassenger.require_passenger_lib 'utils/tmpio'\nPhusionPassenger.require_passenger_lib 'utils/shellwords'\n\nDOWNLOAD_OPTION = {\n  :connect_timeout => 30,\n  :idle_timeout    => 30\n}\n\nclass Installer < PhusionPassenger::AbstractInstaller\n  include PhusionPassenger\n  TerminalChoiceMenu = PhusionPassenger::Utils::TerminalChoiceMenu\n\n  def dependencies\n    specs = [\n      'depcheck_specs/compiler_toolchain',\n      'depcheck_specs/ruby',\n      'depcheck_specs/gems',\n      'depcheck_specs/libs',\n      'depcheck_specs/utilities'\n    ]\n    ids = [\n      'cc',\n      'c++',\n      'download-tool',\n      'libcurl-dev',\n      'openssl-dev',\n      'zlib-dev',\n      'rake',\n      'ruby-openssl',\n      'rubygems'\n    ]\n    if @languages.include?(\"ruby\")\n      if PlatformInfo.passenger_needs_ruby_dev_header?\n        ids << 'ruby-dev'\n      end\n      ids << 'rack'\n    end\n    return [specs, ids]\n  end\n\n  def install_doc_url\n    \"https://www.phusionpassenger.com/library/install/nginx/\"\n  end\n\n  def troubleshooting_doc_url\n    \"https://www.phusionpassenger.com/library/admin/nginx/troubleshooting/\"\n  end\n\n  def run_steps\n    # Make sure the configure script finds the correct\n    # passenger-config command.\n    ENV['PATH'] = PhusionPassenger.bin_dir + \":\" + ENV['PATH']\n\n    show_welcome_screen\n    query_interested_languages\n    check_gem_install_permission_problems || exit(1)\n    check_directory_accessible_by_web_server\n    check_nginx_module_sources_available || exit(1)\n    check_dependencies || exit(1)\n    if needs_compiling_support_files?\n      check_whether_we_can_write_to(PhusionPassenger.build_system_dir) || exit(1)\n    end\n    check_whether_os_is_broken\n    check_whether_system_has_enough_ram\n\n    download_and_install = should_we_download_and_install_nginx_automatically?\n    if pcre_is_installed?\n      @pcre_source_dir = nil\n    else\n      @pcre_source_dir = download_and_extract_pcre\n    end\n    if download_and_install\n      nginx_source_dir = download_and_extract_nginx\n      if nginx_source_dir.nil?\n        show_possible_solutions_for_download_and_extraction_problems\n        exit(1)\n      end\n      nginx_prefix = ask_for_nginx_install_prefix\n      check_whether_other_nginx_installations_exist(nginx_prefix)\n      if @extra_configure_flags == \"none\"\n        extra_nginx_configure_flags = nil\n      else\n        extra_nginx_configure_flags = @extra_configure_flags\n      end\n    else\n      nginx_source_dir = ask_for_nginx_source_dir\n      nginx_prefix = ask_for_nginx_install_prefix\n      check_whether_other_nginx_installations_exist(nginx_prefix)\n      extra_nginx_configure_flags = ask_for_extra_nginx_configure_flags(nginx_prefix)\n    end\n    check_whether_we_can_write_to(nginx_prefix) || exit(1)\n    nginx_config_already_exists_before_installing = nginx_config_exists?(nginx_prefix)\n    if needs_compiling_support_files?\n      if !compile_passenger_support_files\n        show_possible_solutions_for_compilation_and_installation_problems\n        exit(1)\n      end\n    end\n    if install_nginx(nginx_source_dir, nginx_prefix, extra_nginx_configure_flags)\n      if nginx_config_already_exists_before_installing || !locate_nginx_config_file(nginx_prefix)\n        show_passenger_config_snippets(nginx_prefix)\n      else\n        insert_passenger_config_snippets(nginx_prefix)\n      end\n      show_deployment_example\n    else\n      show_possible_solutions_for_compilation_and_installation_problems\n      exit(1)\n    end\n  end\n\n  def before_install\n    super\n    myself = `whoami`.strip\n    @working_dir = PhusionPassenger::Utils.mktmpdir(\"passenger.\", PlatformInfo.tmpexedir)\n  end\n\n  def after_install\n    super\n    FileUtils.remove_entry_secure(@working_dir) if @working_dir\n  end\n\nprivate\n  def show_welcome_screen\n    render_template 'nginx/welcome', :version => VERSION_STRING\n    wait\n  end\n\n  def query_interested_languages\n    menu = TerminalChoiceMenu.new([\"Ruby\", \"Python\", \"Node.js\", \"Meteor\"])\n    menu[\"Ruby\"].checked = interesting_language?('ruby')\n    menu[\"Python\"].checked = interesting_language?('python')\n    menu[\"Node.js\"].checked = interesting_language?('nodejs', 'node')\n    menu[\"Meteor\"].checked = interesting_language?('meteor')\n\n    new_screen\n    puts \"<banner>Which languages are you interested in?</banner>\"\n    puts\n    if interactive?\n      puts \"Use <space> to select.\"\n      puts \"<dgray>If the menu doesn't display correctly, press '!'</dgray>\"\n    else\n      puts \"Override selection with --languages.\"\n    end\n    puts\n\n    if interactive?\n      begin\n        menu.query\n      rescue Interrupt\n        raise Abort\n      end\n    else\n      menu.display_choices\n      puts\n    end\n\n    @languages = menu.selected_choices.map{ |x| x.downcase.gsub(/\\./, '') }\n  end\n\n  def interesting_language?(name, command = nil)\n    if @languages\n      return @languages.include?(name)\n    else\n      return !!PlatformInfo.find_command(command || name)\n    end\n  end\n\n  def check_nginx_module_sources_available\n    if PhusionPassenger.custom_packaged? &&\n       (!PhusionPassenger.nginx_module_source_dir || !File.exist?(PhusionPassenger.nginx_module_source_dir))\n      new_screen\n      render_template 'nginx/nginx_module_sources_not_available'\n      return false\n    else\n      return true\n    end\n  end\n\n  def needs_compiling_support_files?\n    return !PhusionPassenger.build_system_dir.nil?\n  end\n\n  def compile_passenger_support_files\n    new_screen\n    puts \"<banner>Compiling Passenger support files...</banner>\"\n    Dir.chdir(PhusionPassenger.build_system_dir) do\n      return sh(\"env NOEXEC_DISABLE=1 #{PlatformInfo.rake_command} nginx:clean nginx RELEASE=yes\")\n    end\n  end\n\n  def should_we_download_and_install_nginx_automatically?\n    new_screen\n    render_template 'nginx/query_download_and_install',\n      :nginx_version => PREFERRED_NGINX_VERSION\n    puts\n\n    if @auto_download\n      puts \"<b>=> Proceeding with choice 1.</b>\"\n      return true\n    elsif @nginx_source_dir\n      puts \"<b>=> Proceeding with choice 2.</b>\"\n      return false\n    elsif @auto\n      puts \"<b>=> Proceeding with choice 1.</b>\"\n      return true\n    else\n      choice = prompt(\"Enter your choice (1 or 2) or press Ctrl-C to abort\") do |input|\n        if input == \"1\" || input == \"2\"\n          true\n        elsif input.empty?\n          puts \"<red>No choice has been given.</red>\"\n          false\n        else\n          puts \"<red>'#{input}' is not a valid choice.</red>\"\n          false\n        end\n      end\n      return choice == \"1\"\n    end\n  end\n\n  def download_and_extract_pcre\n    new_screen\n    puts \"<banner>PCRE (required by Nginx) not installed, downloading it...</banner>\"\n\n    url = \"http://downloads.sourceforge.net/project/pcre/pcre/#{PREFERRED_PCRE_VERSION}/pcre-#{PREFERRED_PCRE_VERSION}.tar.gz\"\n    dirname = \"pcre-#{PREFERRED_PCRE_VERSION}\"\n    tarball = \"#{@working_dir}/pcre.tar.gz\"\n\n    if download(url, tarball, DOWNLOAD_OPTION)\n      Dir.chdir(@working_dir) do\n        puts \"<banner>Verifying PCRE checksum...</banner>\"\n        if sha256_file(tarball) != PCRE_SHA256_CHECKSUM\n          new_screen\n          render_template \"nginx/pcre_checksum_could_not_be_verified\"\n          wait\n          return nil\n        end\n\n        puts \"<banner>Extracting PCRE source tarball...</banner>\"\n        if sh(\"tar\", \"xzvf\", tarball)\n          return \"#{@working_dir}/#{dirname}\"\n        else\n          new_screen\n          render_template \"nginx/pcre_could_not_be_extracted\"\n          wait\n          return nil\n        end\n      end\n    else\n      new_screen\n      render_template \"nginx/pcre_could_not_be_downloaded\"\n      wait\n      return nil\n    end\n  rescue Interrupt\n    exit 2\n  end\n\n  def download_and_extract_nginx\n    new_screen\n    puts \"<banner>Downloading Nginx...</banner>\"\n\n    url = \"http://www.nginx.org/download/nginx-#{PREFERRED_NGINX_VERSION}.tar.gz\"\n    dirname = \"nginx-#{PREFERRED_NGINX_VERSION}\"\n    tarball = \"#{@working_dir}/nginx.tar.gz\"\n\n    if download(url, tarball, DOWNLOAD_OPTION)\n      Dir.chdir(@working_dir) do\n        puts \"<banner>Verifying Nginx checksum...</banner>\"\n        if sha256_file(tarball) != NGINX_SHA256_CHECKSUM\n          return nil\n        end\n\n        puts \"<banner>Extracting Nginx source tarball...</banner>\"\n        if sh(\"tar\", \"xzvf\", tarball)\n          return \"#{@working_dir}/#{dirname}\"\n        else\n          return nil\n        end\n      end\n    else\n      return nil\n    end\n  rescue Interrupt\n    exit 2\n  end\n\n  def show_possible_solutions_for_download_and_extraction_problems\n    new_screen\n    render_template \"nginx/possible_solutions_for_download_and_extraction_problems\"\n    puts\n  end\n\n  def ask_for_nginx_install_prefix\n    new_screen\n    puts \"<banner>Where do you want to install Nginx to?</banner>\"\n    puts\n    if @prefix\n      puts \"<b>=> #{@prefix}</b>\"\n      return @prefix\n    elsif @auto\n      puts \"<b>=> /opt/nginx</b>\"\n      return \"/opt/nginx\"\n    else\n      prefix = prompt(\"Please specify a prefix directory [/opt/nginx]\") do |input|\n        if input.empty? || input =~ %r(/)\n          true\n        else\n          puts \"<red>Please specify an absolute path.</red>\"\n          false\n        end\n      end\n      if prefix.empty?\n        prefix = \"/opt/nginx\"\n      end\n      return prefix\n    end\n  end\n\n  def check_whether_other_nginx_installations_exist(nginx_prefix)\n    check_for = [\n      \"/usr/bin/nginx\",\n      \"/usr/sbin/nginx\"\n    ]\n    existing_binary = nil\n    check_for.each do |filename|\n      if File.exist?(filename)\n        existing_binary = filename\n        break\n      end\n    end\n    if existing_binary\n      new_screen\n      render_template 'nginx/other_nginx_installations_exist',\n        :existing_binary => existing_binary,\n        :prefix => nginx_prefix\n      wait\n    end\n  end\n\n  def ask_for_nginx_source_dir\n    new_screen\n    puts \"<banner>Where is your Nginx source code located?</banner>\"\n    puts\n    if @nginx_source_dir\n      puts \"<b>=> #{@nginx_source_dir}</b>\"\n      return @nginx_source_dir\n    else\n      return prompt(\"Please specify the directory\") do |input|\n        if input =~ %r(/)\n          if File.exist?(\"#{input}/src/core/nginx.c\")\n            true\n          else\n            puts \"<red>'#{input}' does not look like an Nginx source directory.</red>\"\n            false\n          end\n        else\n          puts \"<red>Please specify an absolute path.</red>\"\n          false\n        end\n      end\n    end\n  end\n\n  def ask_for_extra_nginx_configure_flags(prefix)\n    done = false\n    while !done\n      new_screen\n      render_template 'nginx/ask_for_extra_configure_flags',\n        :command => build_nginx_configure_command(prefix)\n      puts\n      if @extra_configure_flags\n        if @extra_configure_flags == \"none\"\n          extra_args = \"\"\n          puts \"<b>=> No extra configure flags.</b>\"\n        else\n          extra_args = @extra_configure_flags\n          puts \"<b>=> #{extra_args}</b>\"\n        end\n        return extra_args\n      elsif @auto\n        puts \"<b>=> No extra configure flags.</b>\"\n        return \"\"\n      else\n        extra_args = prompt \"Extra arguments to pass to configure script\"\n\n        new_screen\n        render_template 'nginx/confirm_extra_configure_flags',\n          :command => build_nginx_configure_command(prefix, extra_args)\n        puts\n        answer = prompt(\"Is this what you want? (yes/no) [default=yes]\") do |input|\n          if input.empty? || input == \"yes\" || input == \"no\"\n            true\n          else\n            puts \"<red>Please enter 'yes' or 'no'.</red>\"\n            false\n          end\n        end\n        done = answer.empty? || answer == \"yes\"\n      end\n    end\n    return extra_args\n  end\n\n  def check_whether_we_can_write_to(dir)\n    FileUtils.mkdir_p(dir)\n    File.new(\"#{dir}/__test__.txt\", \"w\").close\n    return true\n  rescue\n    new_screen\n    if Process.uid == 0\n      render_template 'nginx/cannot_write_to_dir', :dir => dir\n    else\n      render_template 'installer_common/run_installer_as_root',\n        :dir  => dir,\n        :sudo => PhusionPassenger::PlatformInfo.ruby_sudo_command,\n        :sudo_s_e => PhusionPassenger::PlatformInfo.ruby_sudo_shell_command(\"-E\"),\n        :ruby => PhusionPassenger::PlatformInfo.ruby_command,\n        :installer => \"#{PhusionPassenger.bin_dir}/passenger-install-nginx-module #{ORIG_ARGV.join(' ')}\"\n    end\n    return false\n  ensure\n    File.unlink(\"#{dir}/__test__.txt\") rescue nil\n  end\n\n  def nginx_config_exists?(prefix)\n    return !!locate_nginx_config_file(prefix)\n  end\n\n  def install_nginx(source_dir, prefix, extra_configure_flags)\n    Dir.chdir(source_dir) do\n      new_screen\n      puts \"<banner>Compiling and installing Nginx...</banner>\"\n      if !sh(build_nginx_configure_command(prefix, extra_configure_flags)) ||\n         !sh(\"make\") ||\n         !sh(\"make install\")\n        return false\n      end\n    end\n    return true\n  rescue Interrupt\n    raise Aborted\n  end\n\n  def show_passenger_config_snippets(prefix)\n    new_screen\n    render_template 'nginx/config_snippets',\n      :config_file => locate_nginx_config_file(prefix),\n      :passenger_root => PhusionPassenger.install_spec,\n      :ruby => PlatformInfo.ruby_command\n    wait\n  end\n\n  def show_deployment_example\n    line\n    puts\n    render_template 'nginx/deployment_example',\n      :deployment_guide_url => \"https://www.phusionpassenger.com/library/deploy/nginx/deploy/\",\n      :phusion_website => PHUSION_WEBSITE,\n      :passenger_website => PASSENGER_WEBSITE\n  end\n\n  def show_possible_solutions_for_compilation_and_installation_problems\n    line\n    puts\n    render_template 'nginx/possible_solutions_for_compilation_and_installation_problems',\n      :support_url => SUPPORT_URL\n  end\n\n  def locate_nginx_config_file(prefix)\n    [\"#{prefix}/conf/nginx.conf\", \"#{prefix}/etc/nginx.conf\"].each do |filename|\n      if File.exist?(filename)\n        return filename\n      end\n    end\n    return nil\n  end\n\n  def insert_passenger_config_snippets(prefix)\n    config_file = locate_nginx_config_file(prefix)\n    contents = File.read(config_file)\n    contents.sub!(/^http \\{/,\n      \"http {\\n\" <<\n      \"    passenger_root #{PhusionPassenger.install_spec};\\n\" <<\n      \"    passenger_ruby #{PlatformInfo.ruby_command};\\n\")\n    File.open(config_file, 'w') do |f|\n      f.write(contents)\n    end\n\n    new_screen\n    render_template 'nginx/config_snippets_inserted',\n      :config_file => config_file,\n      :passenger_root => PhusionPassenger.install_spec,\n      :ruby => PlatformInfo.ruby_command\n    wait\n  end\n\n  def build_nginx_configure_command(prefix, extra_configure_flags = nil)\n    extra_cflags = \"-Wno-error #{PlatformInfo.openssl_extra_cflags}\".strip\n    extra_ldflags = PlatformInfo.openssl_extra_ldflags\n\n    command = \"sh ./configure --prefix='#{prefix}' \"\n    command << \"--with-http_ssl_module \"\n    command << \"--with-http_v2_module \"\n    command << \"--with-http_realip_module \"\n    command << \"--with-http_gzip_static_module \"\n    command << \"--with-http_stub_status_module \"\n    command << \"--with-http_addition_module \"\n    command << \"--with-cc-opt=#{Shellwords.escape extra_cflags} \"\n    command << \"--with-ld-opt=#{Shellwords.escape extra_ldflags} \"\n    if @pcre_source_dir\n      command << \"--with-pcre='#{@pcre_source_dir}' \"\n    elsif !pcre_is_installed?\n      command << \"--without-http_rewrite_module \"\n    end\n    command << \"--add-module='#{PhusionPassenger.nginx_module_source_dir}' #{extra_configure_flags}\"\n    command.strip!\n    return command\n  end\n\n  def pcre_is_installed?\n    if @pcre_is_installed.nil?\n      @pcre_is_installed = begin\n        File.open('/tmp/passenger-check.c', 'w') do |f|\n          f.puts(\"#include <pcre.h>\")\n        end\n        Dir.chdir('/tmp') do\n          # Nginx checks for PCRE in multiple places...\n          system(\"(gcc -I/usr/local/include -I/usr/include/pcre \" <<\n            \"-I/usr/pkg/include -I/opt/local/include \" <<\n            \"-c passenger-check.c) >/dev/null 2>/dev/null\")\n        end\n      ensure\n        File.unlink('/tmp/passenger-check.c') rescue nil\n        File.unlink('/tmp/passenger-check.o') rescue nil\n      end\n    end\n    return @pcre_is_installed\n  end\n\n  def sha256_file(path)\n    # We do this instead of using #file, for Ruby 1.8.5 support.\n    digest = Digest::SHA256.new\n    File.open(path, \"rb\") do |f|\n      buf = ''\n      buf.force_encoding('binary') if buf.respond_to?(:force_encoding)\n      while !f.eof?\n        f.read(1024 * 16, buf)\n        digest.update(buf)\n      end\n    end\n    return digest.hexdigest\n  end\nend\n\nORIG_ARGV = ARGV.dup\noptions = {}\nparser = OptionParser.new do |opts|\n  opts.banner = \"Usage: passenger-install-nginx-module [options]\"\n  opts.separator \"\"\n\n  indent = ' ' * 37\n  opts.separator \"Options:\"\n  opts.on(\"--auto\", \"Automatically confirm 'Press ENTER to\\n\" <<\n          \"#{indent}continue' prompts.\") do\n    options[:auto] = true\n  end\n  opts.on(\"--prefix=DIR\", String, \"Use the given Nginx install prefix instead\\n\" <<\n          \"#{indent}of asking for it interactively.\") do |dir|\n    options[:prefix] = dir\n  end\n  opts.on(\"--auto-download\", \"Download and install Nginx automatically,\\n\" <<\n          \"#{indent}instead of asking interactively whether to\\n\" <<\n          \"#{indent}download+install or to use an existing\\n\" <<\n          \"#{indent}Nginx source directory.\") do\n    options[:auto_download] = true\n  end\n  opts.on(\"--nginx-source-dir=DIR\", String, \"Compile and install Nginx using the given\\n\" <<\n          \"#{indent}Nginx source directory, instead of\\n\" <<\n          \"#{indent}interactively asking to download+install\\n\" <<\n          \"#{indent}or to use an existing Nginx source\\n\" <<\n          \"#{indent}directory. Conflicts with --auto-download.\") do |dir|\n    options[:nginx_source_dir] = dir\n  end\n  opts.on(\"--extra-configure-flags=STRING\", String, \"Pass these extra flags to Nginx's\\n\" <<\n          \"#{indent}'configure' script, instead of asking for\\n\" <<\n          \"#{indent}it interactively. Specify 'none' if you\\n\" <<\n          \"#{indent}do not want to pass additional flags but do\\n\" <<\n          \"#{indent}not want this installer to ask\\n\" <<\n          \"#{indent}interactively either.\") do |flags|\n    options[:extra_configure_flags] = flags\n  end\n  opts.on(\"--languages NAMES\", \"Comma-separated list of interested\\n\" <<\n      \"#{indent}languages (e.g.\\n\" <<\n      \"#{indent}'ruby,python,nodejs,meteor')\") do |value|\n    options[:languages] = value.split(\",\")\n  end\n  opts.on(\"--force-colors\", \"Display colors even if stdout is not a TTY\") do\n    options[:colorize] = true\n  end\nend\nbegin\n  parser.parse!\nrescue OptionParser::ParseError => e\n  puts e\n  puts\n  puts \"Please see '--help' for valid options.\"\n  exit 1\nend\n\nif options[:auto_download] && options[:nginx_source_dir]\n  STDERR.puts \"You cannot specify both --auto-download and --nginx-source-dir.\"\n  exit 1\nend\n\nInstaller.new(options).run\n"], "fixing_code": ["Next version (not yet released)\n-------------------------------\n\n * Upgrades union_station_hooks_core to version 2.1.2.\n * [Enterprise] When running a Rails app in multithreaded mode, Passenger Enterprise automatically tags Rails logs with the current thread number. This makes it possible to distinguish logs generated by different threads.\n * Fixes permissions issue on Linux when setting OOM score after lowering privileges. Closes GH-1858.\n * [Standalone] Allows raw json envvars in Passengerfile.json. Closes GH-1837.\n * [Standalone] Make the `max_requests` option available on the command line as well. \n * Fixes unaligned memory access in base64 decoder on platforms that have strict aliasing requirements (non x86/x86_64). Closes GH-1646.\n * Introduces daily Passenger security update check to warn (error log) if there are newer Passenger versions with important security fixes (describing what was discovered, what is affected, which version has the fix).\n * Fixes compilation on Linux when a non-glibc C library is in use. Closes GH-1870.\n * `passenger-install-nginx-module` and the standalone compiler now add the http v2, realip and addition module flags for Nginx (just like the APT/RPM/autobuilder already had). Closes GH-1788. \n * [Apache] Fixes PassengerShowVersionInHeader option. Thanks to Sebastian Welther for contributing this.\n * Passenger now reports when you try to use Node.js or Meteor clustering, and tries to continue with just a nonfunctional shim in place, so that if your code uses the clustering APIs your app may still work.\n * Updates libev config.sub and config.guess to support newer platforms such as the IBM power 8.\n * Fixes an issue where passenger-config couldn't restart an app if the TMPDIR variable was set to /tmp\n * `passenger-install-apache-module` now suggests the correct apache package on Ubuntu Xenial. Closes GH-1884.\n * [Standalone] The TempDirToucher will now spend most of its time with reduced privileges, except when it's actively touching files. This allows it to be killed when Passenger is quit in most circumstances. Closes GH-1678.\n * Fixes a file overwrite vulnerability caused by a predictable temporary file being written by `passenger-install-nginx-module`. Thanks to Jeremy Evans for reporting this.\n * [Standalone] Fixes starting Passenger as a non-extant user. Closes GH-1849.\n * Improved look of the error pages for failing to spawn an application (development & production mode), and Error ID is now also shown in production mode.\n * [Standalone] Enable ipv6 support by default in builtin nginx. Closes GH-1873.\n * [Nginx] Updates to APT package builder (Debian & Ubuntu) with fix for www-data to root privilege escalation via log file handling (CVE-2016-1247/USN-3114-1).\n * [Nginx] Updates to RPM package builder (CentOS & RHEL) with fix for 1.10.x system nginx package overriding the nginx from the Passenger repo. Closes GH-1895.\n * [Nginx] The preferred Nginx version is now 1.10.2 (previously 1.10.1).\n * RPM pkg builder fix for breaking SELinux change in RHEL 7.3.\n\n\nRelease 5.0.30\n--------------\n\n * Changes mbuf block size from 512 to 4096 bytes to better fit modern requests and significantly speed up disk buffering.\n * [Nginx] Fixes PCRE checksum after the preferred version update in 5.0.29 (contributed by: clemensg).\n * [Apache] Fixes buffer limit crash on large file upload (when core disk buffer can't keep up with client for some time), and limits per-client buffer memory usage to 130 KB. Closes GH-1620.\n * Fixes potential hang when an UnseekableSocket gets serialized to json. Closes GH-1838.\n\n\nRelease 5.0.29\n--------------\n\n * Fixes the FreeBSD build breaking due to the `-ldl` flag introduced by the LVE integration patch (5.0.28). Closes GH-1805.\n * Fixes per-application interpreter override (ruby, node, python) being ignored in mass deployment mode. Closes GH-1818.\n * Fixes incomplete refactor from 5.0.27 that could, under specific conditions, lead to a Passenger crash. Closes GH-1794.\n * [Apache] Remove unused code that caused a crash in configurations with thousands of VirtualHost entries. Closes GH-1676.\n * [Nginx] Fixes use of invalid logfile name (memory already released) in backup log redirection code. Possibly related to GH-1774.\n * [Nginx] The preferred Nginx version is now 1.10.1 (previously 1.10.0).\n * [Nginx] The preferred PCRE version is now 8.39 (previously 8.34).\n * [Standalone] Passenger Standalone now supports /dev/stdout and /dev/stderr as log file path (via `--log-file` or Passengerfile.json). This is especially useful in Docker containers. In previous versions logging to those paths did not work, resulting in nothing getting logged at all.\n\n\nRelease 5.0.28\n--------------\n\n * Finalizes the fix (5.0.26) for the `rails server` command integration to prevent \"missing on_event\" errors. Closes GH-1768.\n * Fixes missing -fPIC in Nginx dynamic module compilation (5.0.26) on Linux (rewrite of a patch by Andrei Belov). Closes GH-1793.\n * Fixes memory leak that could occur whenever more than 1024 concurrent requests are handled (more likely since the higher concurrency support options from 5.0.24). Closes GH-1797.\n * Integrates with CloudLinux LVE and CageFS (security checks and a new option PassengerLveMinUid). Thanks to Oleksiy Shchukin from CloudLinux Inc. for contributing this.\n * Fixes the Nginx build when the PCRE library is not available (such as when compiling with `--without-http_rewrite_module`). Closes GH-1796.\n * Extends `passenger-memory-stats` filter to show the instance dir toucher too (as well as the core in valgrind debug runs).\n * Changes the default for friendly error pages to \"off\" unless the environment is set to \"development\", rather than \"on\" unless \"staging\" or \"production\". Closes GH-1782.\n * [Nginx] The preferred Nginx version is now 1.10.0 (previously 1.8.1).\n\n\nRelease 5.0.27\n--------------\n\n * Fixes encoding issue for Ruby apps that resulted in a 0-byte response body. This occurred when the Ruby native support lib was not used and the app outputted an encoding that doesn't mix with UTF-8 (like UTF-16). Closes GH-1763.\n * Fixes Passenger Core and application processes staying on the Watchdogs OOM score (unkillable) when user switching is set to off. Closes GH-1631.\n * Supports Debian GNU/kFreeBSD build. Based on contribution by stevenc99.\n * Switches a number of places in the Passenger Core over to using the monotonic clock instead of the wallclock for robustness against clock time-stepping.\n * Slightly improves out-of-memory detection in some subroutines.\n * Fixes incomplete libuv upgrade: some build files were not autoregenerated during the upgrade from 1.5.0 to 1.8.0 in the previous release.\n * Warnings about 502 responses that are caused by applications aborting their output while the client is no longer connected (e.g. due to half-close event, reported since 5.0.26) are now reduced to debug level.\n * Fixes automatic compilation of Ruby's native_support library in case Passenger was installed through Debian or RPM packages. Closes GH-1778.\n * Fixes memory leak when buffering large request/response bodies to disk (which happens as soon as the 100 KB memory buffer is full).\n * Fixes crash if an application spawn fails and a non-UTF8 character appears in the spawn output. Closes GH-1601.\n * Updates the `rails server` command integration (from 5.0.25) to prevent \"missing on_event\" errors. Closes GH-1768. Update: not all required code made it to the release, the final fix is delivered in 5.0.28.\n * [Union Station] Fixes a crash that occurs if all of the following conditions are met: 1) Union Station support is enabled, 2) the client sent at least one header containing the empty string, 3) the application responds with a 4xx or 5xx status. Closes GH-1776.\n\n\nRelease 5.0.26\n--------------\n\n * `passenger-status --show=server` now reports the speed at which new requests are accepted.\n * `passenger-status --show=server` now reports `last_data_send_time` and `last_data_receive_time` which can be used to troubleshoot long-running requests (for example, to see if a websocket heartbeat is stuck).\n * Passenger now reports TCP half-closing events to Node.js and Meteor applications, which allows them to detect request body and WebSocket closes without having to send data to the client.\n * Fixes outputting Content-Length and Transfer-Encoding headers on HEAD requests for Ruby apps. These headers were omitted in previous versions on HEAD requests.\n * Bumps the default socket backlog size from 1024 to 2048.\n * Upgrades libuv to version 1.8.0.\n * When using our RPM packages, system SELinux policy upgrades no longer break the Passenger SELinux policy. Closes GH-1663.\n * [Apache] Fixes compilation against Apache installations which include `-pie` in CFLAGS. Closes GH-1756.\n * [Nginx, Standalone] Bumps default Nginx worker_connections from 1024 to 4096 (effectively 2048 because of internal reverse proxy)\n * [Nginx, Standalone] Introduces the option `core_file_descriptor_ulimit` and `app_file_descriptor_ulimit`, for setting the file descriptor ulimits of the Passenger core and the application, respectively.\n * [Nginx] Passenger can now be [compiled as an Nginx dynamic module](https://www.phusionpassenger.com/library/install/nginx/install_as_nginx_module.html#dynamic-module). Thanks to Ruslan Ermilov from NGINX Inc for contributing this.\n * [Standalone] Prints a warning when an unsupported configuration option in Passengerfile.json is set.\n * [Standalone] Fixes \"address already in use\" errors when using the builtin engine.\n * [Enterprise] The rolling restart feature now waits until the old process is completely gone (drained its request queue, process exited) before proceeding with rolling restarting the next process. This results in friendlier resource usage during rolling restart.\n * [Union Station] Fixes custom logging time arguments getting overwritten by current time for Ruby apps (so some sub-blocks like \"framework request processing\" appeared shorter than they were). This could happen since the switch to monotonic clock in 5.0.22.\n\n\nRelease 5.0.25\n--------------\n\n * Integrates into the `rails server` command. Please learn more at [the Passenger + Rails integration documentation](https://www.phusionpassenger.com/library/dev/ruby/rails_integration.html).\n * Adds explicit support for Action Cable. Please learn more at the [Passenger Library](https://www.phusionpassenger.com/library/dev/ruby/rails_integration.html#action_cable).\n * Removes packages for Ubuntu 15.04 Vivid and Debian 6. Ubuntu 15.04 and Debian 6 are still supported, we just don't supply packages for them anymore. If you are an Ubuntu 15.04 or Debian 6 user and you want to use Passenger >= 5.0.25, then please upgrade your distribution, or install Passenger from RubyGems/tarball.\n * Fixes a potential crash due to memory corruption in code for `passenger-config reopen-logs`.\n * Fixes a potential crash in the large (inbound/outbound) file buffering code.\n * Fixes a crash that occurs when using Nginx + HTTPS + Sub-requests. Closes GH-1724.\n * Fixes a crash that occurs when using Nginx + syslog and a logfile for Passenger. Also fixes edge cases where the Nginx logpath would override the Passenger logpath. Closes GH-1514 (again).\n * [Union Station] Fixes a potential crash due to a wrong limit on snprintf (introduced in 5.0.24 by GH-1633). Closes GH-1744.\n * [Union Station] Fixes Union Station Node.js request introspection to allow for application.use method chaining. Closes GH-1745.\n * [Union Station] Fixes information about sinks sometimes missing from `passenger-status --show=union_station`.\n * [Union Station] When one or more Union Station gateways are suffering from technical difficulties, the Union Station support code now tries more quickly to reestablish the connection.\n * [Standalone] Don't reject the value 0 (meaning no limit) for `--max-request-queue-size`. Closes GH-1743.\n * [Standalone] Makes the `--address` option work more reliably if the passed hostname may resolve to multiple addresses. For example, if you pass `--address localhost` then previous versions could fail because Passenger thinks it's an IPv6 address (::1) while Nginx thinks it's an IPv4 address (127.0.0.1). Hostname resolution is now done in a consistent manner.\n * [Standalone] Adds the `--unlimited-concurrency-path` configuration option.\n * [Standalone] Adds IPv6 support to the builtin engine.\n\n\nRelease 5.0.24\n--------------\n\n * Fixes a crash when the new `force_max_concurrent_requests_per_process` option (5.0.22) was used for non-Node.js apps (e.g. Ruby). Closes GH-1720.\n * Fixes Solaris compilation. This was a regression due to the patch for GH-1643 in 5.0.22. Closes GH-1694, GH-1701.\n * Logs for [Union Station](https://www.unionstationapp.com) provide more information about request queueing. Closes GH-1633.\n * Also log HTTP headers to Union Station for HTTP 4xx responses (extends the header logging for HTTP 5xx that was added in 5.0.22)\n * Fixes cases where compilation failure of (optional) native utils was not reported.\n * On Ruby, no longer traps SIGEXIT. This fixes erroneously setting `$ERROR_INFO` in `at_exit` callbacks. Closes GH-1730.\n * Fixes a wrong loop exit condition that could cause a deadlock with 100% CPU usage by Passenger core. Closes GH-1709, GH-1732.\n * Adds `socket_backlog` option to configure the Passenger Core socket backlog. For use with e.g. \"Resource temporarily unavailable while connecting to upstream\" errors. Closes GH-1726.\n * [Nginx] The preferred Nginx version is now 1.8.1 (previously 1.8.0).\n * [Standalone] Fixes the default value of the `load_shell_envvars` option. It's supposed to be disabled by default, but due to a typo it was enabled by default.\n\n\nRelease 5.0.23\n--------------\n\n * Fixes the request acceptor error handling timeout. When an error occurs while Passenger is accepting a request (for example, when Passenger has run out of file descriptors), Passenger is supposed to wait for 3 seconds before trying again. Because of a typo, Passenger actually waited 3 milliseconds.\n * [Enterprise] Fixed a regression in the Passenger Standalone Nginx config template that breaks the Mass Deployment feature.\n * The mime type for serving static XHTML files is updated. We no longer use the mobile profile, so it is recognized by desktop browsers. Closes GH-1695.\n * Improves error messages about Ruby native support to indicate the optional nature. Passenger is able to operate even without the native support extension, but that wasn't clear enough to some users, causing them to think of the old messages as errors.\n * [Standalone, Nginx] When using the new `abort_websockets_on_process_shutdown` configuration option, Passenger waited for the app to close without signaling it that shutdown was in progress. Node.js apps now get a SIGINT. Closes GH-1702.\n * With friendly error pages off Passenger would still show a trace (referencing only Passenger code) for unusual spawn errors. This has been changed to a generic error message. Closes GH-1704.\n\n\nRelease 5.0.22\n--------------\n\n * Fixes a header collision vulnerability (CVE-2015-7519, medium severity). Note that this fix involves filtering request headers containing underscores. Please see our blog for detailed vulnerability description and advisory. Thanks to the SUSE security team for reporting this issue.\n * [Apache] Fixes compatibility with Apache 2.4.17's mod_autoindex. Fix contributed by Eric Covener. Closes GH-1642.\n * [Standalone] Passenger Standalone now [accepts configuration options from environment variables](https://www.phusionpassenger.com/library/config/standalone/intro.html). This makes using Passenger Standalone significantly easier on Heroku or on systems that follow the 12-factor principle. Closes GH-1661.\n * [Standalone] The Nginx configuration template has been cleaned up. It is now significantly easier to edit the Nginx configuration template without breaking compatibility with future versions.\n * [Standalone] The `passenger start` command now performs a sanity check on the internally generated Nginx configuration file and advises you accordingly when there is a problem.\n * [Standalone] The `passenger status` and `passenger stop` commands now respect Passengerfile.json. Closes GH-1593.\n * [Standalone] Passenger Standalone on Solaris now properly tails the application log file.\n * [Standalone] Fixes a problem with Passenger Standalone's builtin engine exiting at startup when run on Solaris.\n * [Standalone] `passenger start` now accepts the `--envvar` command line option for passing environment variables to the application.\n * [Standalone] `passenger start` now accepts the `--memory-limit` configuration option.\n * [Standalone] `passenger start` now accepts the `--max-request-queue-size` configuration option.\n * [Standalone] `passenger start` now accepts the `--debug-nginx-config` configuration option. This option allows you to view the Nginx configuration file that Passenger Standalone generates internally.\n * [Standalone, Nginx] Introduces a new configuration option: `abort_websockets_on_process_shutdown`. By default, when Passenger shuts down or restarts an application process, it will abort associated Websocket connections. This option allows you to disable that behavior. Closes GH-1686.\n * Introduces a new configuration option: `force_max_concurrent_requests_per_process`. This option is mostly useful for making dynamic process scaling work in Node.js and Meteor apps.\n * Various administration tools, such as `passenger-status`, no longer raise an flock EBADF error on Solaris. Closes GH-1643.\n * The `passenger-config reopen-logs` command, when used in combination with Passenger Standalone and the Nginx engine, now also instructs Nginx to reopen its log files. Closes GH-1674.\n * Fixes Passenger erroneously adding a `Content-Length` or `Transfer-Encoding` header to Ruby HTTP 204 No Content responses. Closes GH-1595.\n * Fixes Union Station logging of Rack response body actions.\n * The `passenger-config restart-app` command, when given `--ignore-app-not-running`, now properly exits with a zero status when one or more applications are running, but none of them belonging to the invoking user. Closes GH-1655.\n * The `passenger-config validate-install` command no longer prints false warnings about duplicate Passenger installs on systems that use RBenv. Closes GH-1627.\n * Fixes race conditions in the automatic building of the Ruby native support extension. Closes GH-1570.\n * [Enterprise] Fixes compatibility with byebug 7.0. Closes GH-1662.\n * Support Union Station logging for Node.js applications, with Express/MongoDB automatically supported. \n * The Ruby Union Station hooks no longer abort with a fatal error when the application does not call the Union Station initializer method during startup. The error is now only logged.\n * In case of an error response (HTTP 5xx), Union Station logging will also contain request headers.\n * The Union Station hooks are now more resilient against environment variable problems.\n\n\nRelease 5.0.21\n--------------\n\n * Properly handles Ruby applications that output the `Content-Length` and `Transfer-Encoding` headers in non-standard casing, e.g. `Content-length`. Closes GH-1517.\n * Fixes Ruby application loading incompatibilities caused by the use of absolute paths. Closes GH-1596.\n * Fixes OpenSSL detection problems on OS X 10.11 El Capitan. OS X 10.11 no longer includes OpenSSL headers, so Passenger will suggest and use OpenSSL from Homebrew. Closes GH-1630.\n * Introduces the [secure HTTP headers](https://www.phusionpassenger.com/library/indepth/meteor/secure_http_headers.html) feature for Node.js and Meteor apps. This mechanism allows Passenger to send per-request information to the application, while guaranteeing that this information is not spoofed by the client.\n * Per-request Apache environment variables are now passed to Node.js and Meteor apps through the [`!~Passenger-Envvars`](https://www.phusionpassenger.com/library/indepth/nodejs/apache_per_request_envvars.html) secure header.\n * Fixes some unintentional caching of request-specific environment variables. Closes GH-1479.\n * For Node.js applications, Passenger now calls `process.emit('message', 'shutdown')` whenever Passenger shuts down an application process. This is the same hook as used by PM2, allowing applications which use the PM2 graceful shutdown mechanism to be run on Passenger without changes.\n * [Enterprise] Fixes a bug in passenger-irb where printing strings larger than 64 KB would cause it to crash.\n * [Enterprise] Fixes the `passenger-config restart-app` command so that it performs a non-rolling-restart unless `--rolling-restart` is given as command line option, as per the documentation. Previously, `passenger-config restart-app` without `--rolling-restart` would perform a rolling restart if rolling restarts are configured in the configuration file, but this contradicted documented behavior. Closes GH-1634.\n\n\nRelease 5.0.20\n--------------\n\n * Fixes memory management bugs in Union Station support.\n * Improves the error handling in Union Station support.\n * `passenger-config validate-install` now properly handles CR characters in Apache configuration files.\n\n\nRelease 5.0.19\n--------------\n\n * Fixes an encoding crash in `passenger-memory-stats` on OS X in case one or more processes are running on the system with names containing UTF-8 characters. Closes GH-1603.\n * [Ruby] Fixes handling of HTTP 205 responses, which would cause client connections to freeze.\n * Improves Union Station data collection: more Rack I/O events are now logged. The time taken to write out and to close the Rack response body are now logged.\n * Improves Union Station data sending: errors are now logged more clearly, and DNS errors are now handled more robustly.\n * Improves Union Station troubleshooting: errors can now be diagnosed by running `passenger-status --show=union_station`.\n * Refactors the Union Station Ruby hook code. They have been extracted to external gems. However, they are still bundled with Passenger for ease of use.\n\n\nRelease 5.0.18\n--------------\n\n * Fixes more memory corruption issues in the palloc subsystem.\n * Fixes memory corruption issues in the Passenger core that may occur if the application sets many response headers. The issue was caused by an off-by-one bug.\n\n\nRelease 5.0.17\n--------------\n\n * Adds packages for Ubuntu 15.10 \"Wily\", even though Ubuntu 15.10 hasn't been released yet.\n * Fixes some memory corruption issues in the palloc subsystem. Closes GH-1587.\n * Fixes the Node.js `PhusionPassenger.on('exit')` event. This event worked if you restart the app or detach an application process, but not if you stop Passenger.\n * Fixes support for `passenger_pre_start` URLs that contain very long authentication strings. This was caused by the fact that our Base64 encoder generated unexpected newlines.\n * [Standalone] Improves application prestarting. Application prestarting is now available in combination with the 'builtin' engine, and now works when SSL is used.\n\n\nRelease 5.0.16\n--------------\n\n * Allows independent configuration of Union Station gateway address, port and certificate. Closes GH-1543.\n * Supports seek() such that body.rewind works when using Rack middleware that uses Zlib::GzipReader (e.g. for compressed requests). Closes GH-1553.\n * [Apache] Improves detection of Apache configuration file problems. Closes GH-1577.\n * [Enterprise] Fixes installation of the Passenger Enterprise Apache module on Debian Testing.\n * Fixes logging of HTTP response code for Union Station. This regression was introduced by Passenger 5. Closes GH-1581. \n * Adds a new subcommand `passenger-config about support-binaries-dir`.\n * Fixes a regression in the Node.js loader with regard to custom startup files. This bug was introduced in 5.0.14. Closes GH-1557 (again).\n * Fixes a crash when a Ruby application is accessed through a sub-URI and a root virtual host at the same time.\n\n\nRelease 5.0.15\n--------------\n\n * Support SHA256 digests for the Rails asset pipeline, as used by Sprockets 3.x.\n * Support for JRuby 9.0.0.0. Closes GH-1562.\n * Fixes some bugs in Union Station support, which causes some data (such as controller information and exceptions) to not be logged.\n * The old Users Guides have been deprecated in favor of the [Passenger Library](https://www.phusionpassenger.com/library/). The Users Guides now redirect to appropriate sections in the Passenger Library.\n\n\nRelease 5.0.14\n--------------\n\n * [Standalone] Relative path handling has been improved. In previous versions, relative paths were not handled in a consistent manner. Relative paths are now handled consistently according to the following rules:\n\n   - If a relative path is given via a command line option, then it is relative to the current working directory.\n   - If a relative path is given via Passengerfile.json, then it is relative to Passengerfile.json.\n\n   Closes GH-1557.\n * [Standalone] The `--disable-turbocaching` now works with the Nginx engine.\n\n\nRelease 5.0.13\n--------------\n\n * The `passenger-config restart-app` command now supports the option `--ignore-passenger-not-running`. If this option is given, the command will exit normally instead of exiting with an error, if Passenger is not running. This option is useful in deployments involving Passenger Standalone. In an initial deployment, Passenger Standalone may not yet be running. Passing this option allows you to ignore that issue.\n * SELinux policy issues in the RPMs have been fixed.\n * [Apache] `passenger-config reopen-logs` didn't work on Apache unless you explicitly set `PassengerLogFile`. This has now been fixed.\n * [Standalone] Due to some internal refactorings, the Passenger Standalone Nginx configuration template has changed. If you used a custom Nginx configuration template, please merge our latest changes into it.\n\n\nRelease 5.0.12\n--------------\n\n * [Enterprise] Fixed passenger-irb. It was broken in 5.0.10 because of the change that made using admin commands without sudo possible.\n\n\nRelease 5.0.11\n--------------\n\n * In 5.0.10, admin tools such as `passenger-status` and `passenger-config restart-app` display an authorization error if they are run without sudo, while at the same time Passenger isn't serving any applications. Since this is confusing, they have now been modified to display a more appropriate error message.\n * Fixes a bug in the RPMs that prevent admin tools such as `passenger-status` and `passenger-config restart-app` from working when they are invoked without root privileges.\n * Fixes a bug on OS X that prevent admin tools such as `passenger-status` and `passenger-config restart-app` from detecting Passenger instance directories when they are invoked without root privileges. Closes GH-1535.\n * Fixes a bug that causes Passenger not to work if the HOME environment variable is not set.\n * Fixes compatibility with non-Rails Ruby apps that require the actionview gem. Closes GH-1547.\n * Fixes some non-fatal \"permission denied\" error that may occasionally occur if user switching is turned off. Closes GH-1541.\n * Relative values for the `pid_file` and `log_file` options in Passengerfile.json are now supported.\n * If Passengerfile.json contains a syntax error, Passenger Standalone now correctly prints an error message instead of crashing.\n * Sending a SIGABRT signal to a Ruby process now properly makes it terminate.\n * The `passenger-config restart-app` command now accepts `.` as parameter, which it will interpreter as \"restart the app in the current working directory\". Closes GH-1386.\n * [Apache] Setting `PassengerLogLevel` no longer redirects Apache's own stderr to that log file. Closes GH-1373.\n * [Standalone] Passenger Standalone's Nginx engine now includes the RealIP module. Closes GH-1389.\n * [Standalone] The `--max-preloader-idle-time` option has been added.\n\n\nRelease 5.0.10\n--------------\n\n * It is now possible to run `passenger-status`, `passenger-config restart-app` and other admin commands without using sudo. When run without sudo, these admin commands will allow you to operate on apps and processes that are owned by the user that invoked the admin command. Closes GH-1392.\n * Fixes a crash introduces in 5.0.9 due to not properly initializing a variable. Closes GH-1530.\n * The `passenger-config reopen-logs` command now works by instructing the Watchdog process to reopen the log file, while instructing the other Passenger processes to re-inherit the log file from the Watchdog instead of trying to reopen the log file on their own. This makes log file reopening more robust. Closes GH-1452.\n * `passenger-config restart-app` no longer leaves the terminal in a state with black background. Closes GH-1526.\n * `passenger-config admin-command` has been renamed to `passenger-config api-call` in order to avoid confusion with any potential admin interfaces that we will introduce in the future.\n * If Union Station support is enabled, process and system metrics weren't being sent correctly to Union Station. This has been fixed.\n * [Enterprise] Fixes the fact that the Passenger Enterprise RPM didn't correctly set SELinux permissions on its own files.\n * [Apache] passenger-install-apache2-module no longer aborts with an error if the Apache configuration file contains errors. Closes GH-1525.\n * [Apache] Fixes a typo that would cause passenger-install-apache2-module to crash on Red Hat and CentOS systems on which the SELinux command line tools are not installed. Closes GH-1527.\n\n\nRelease 5.0.9\n-------------\n\n * The casing of original headers as generated by the application are now preserved, instead of being downcased. This fixes compatibility issues with broken HTTP clients. Closes GH-1436.\n * Internal refactoring: we've replaced libeio with libuv. This makes some of our code simpler. Closes GH-1428.\n * When the passenger-status tool tries to cleanup a stale instance directory, it will no longer abort with an error when it fails to do that. It will now merely print a warning. Fixes [StackOverflow question 30354732](http://stackoverflow.com/questions/30354732/cap-aborted-capistrano-aborts-rails-deploy-while-attempting-to-chown-tmp-p/30357100#30357100).\n * Fixes compilation problems on Solaris.\n * The Ruby handler has been made more robust. Previously, it was possible for applications to corrupt connections by returning incorrect Rack responses. This may cause connections to get stuck. The Rack handler has been hardened to ensure that connections will never get corrupted or stuck. Closes GH-1512.\n * The Ruby handler now closes the Rack response body even when the socket connection is hijacked by the application. The Rack specification is unclear about what to do in this case, and different Ruby app servers do different things. We have found that by closing the body object anyway, we maximize compatibility with existing Rack middlewares and apps, such as Rack::Lock. Background information about this issue can be found at https://github.com/ngauthier/tubesock/issues/10#issuecomment-72539461.\n * Fixes a crash that could occur if some HTTP request headers are present, but have the empty value. Closes GH-1524.\n * Fixes a permission problem that prevents the web server from communicating with Passenger when user switching is off. Closes GH-1520.\n * Fixes a few small one-time memory leaks in the Passenger agent. This wraps up the workitems discovered in valgrind runs on earlier versions.\n * Fixes use of uninitialized metrics. This could happen for a brief moment after spawning.\n * [Apache] If you pass the `--apxs2-path` parameter to `passenger-install-apache2-module`, and the apxs2 path that you specified is not in PATH, then the installer would think that Apache installation is broken. This has been fixed.\n * [Apache] A `Connection: close` header that was used for internal communication between Passenger processes was being leaked to the client, which breaks HTTP keep-alive connections. This has been fixed. Closes GH-1516.\n * [Nginx] The preferred Nginx version is now 1.8.0. It was previously 1.6.3.\n * [Nginx] Passenger now passes to the application the raw URI as sent by the client, as long as Nginx didn't modify the URI (e.g. as part of rewrite rules). This means that escaped slashes (%2F) in the URI now work correctly and out-of-the-box as long as there are no applicable rewrite rules.\n * [Nginx] Fixes that crash that would occur if Nginx is configured to log to syslog. And to prevent log messages from disappearing into a black hole, Passenger will now ask you to set `passenger_log_file` if Nginx is configured to log to syslog. Closes GH-1514.\n * [Standalone] Prevents an existing instance from being shut down if starting a new instance fails.\n\n\nRelease 5.0.8\n-------------\n\n * We now supply Debian 8 and Ubuntu 15.04 packages. Closes GH-1494 and GH-1400.\n * We now supply Red Hat 6, Red Hat 7, CentOS 6 and CentOS 7 packages.\n * We no longer supply Ubuntu 10.04 packages because Ubuntu 10.04 is no longer supported by Canonical.\n * Fixes a Passenger crash (SIGSEGV) that occurs occasionally when out-of-band garbage collection is enabled. Closes GH-1469.\n * Fixes a Passenger crash (SIGSEGV) that occurs occasionally with redirects to relative URLs. Closes GH-1513.\n * Fixes cases when Passenger shuts down more processes than is allowed by the `min_instances` limit. Closes GH-1500.\n * Fixes \"Bad Gateway\" errors that would occur when an application sets the X-Sendfile or X-Accel-Redirect header, together with a non-empty response body. Closes GH-1498.\n * Fixes the fact that Passenger agent processes don't lower their privilege when user switching is turned off.\n * Fixes autodetection of Apache on Gentoo. Closes GH-1510.\n * Fixes compilation problems on Solaris. Closes GH-1508.\n * [Standalone] Adds the `--pool-idle-time` command line parameter.\n * [Standalone] Adds the `--auto` command line parameter for running non-interactively. This supresses prompts. Closes GH-1511.\n\n\nRelease 5.0.7\n-------------\n\n * Supports changed way of specifying settings for (non-bundled) Meteor apps. Closes GH-1403.\n * Fixes an integer-to-string conversion bug in the code responsible for buffering chunked request bodies. This bug could cause the PassengerAgent to crash due to an exception. Thanks to Marcus R\u00fcckert of SUSE for reporting this.\n * Request-specific environment variables are no longer cached. This fixes a number of issues, such as Shibboleth not working properly and conflicts between HTTPS and non-HTTPS virtual hosts. Closes GH-1472.\n * Fixes a memory corruption bug that would be triggered when using `passenger_base_uri`. The memory corruption bug resided in the code for resolving symlinks. Closes GH-1388.\n * Re-introduced signal catchers during shutdown, to allow clean shutdown in Foreman. Closes GH-1454.\n * `passenger-status --show=xml` no longer outputs the non-XML header by default. This fixes a regression as reported in a comment in GH-1136.\n * Passenger now prefers to load Rack and Bundler from RubyGems instead of from `vendor_ruby`. This solves some issues with Rack and Bundler on Debian systems. Closes GH-1480 and GH-1478.\n * The turbocache no longer caches responses that contain the `X-Sendfile` or the `X-Accel-Redirect` header.\n * The preferred Nginx version has been upgraded to 1.6.3.\n * The logging agent no longer aborts with an error if one of the Passenger root directory's parent directories is not world-executable. Closes GH-1487.\n * [Standalone] It is now possible to configure the Ruby, Node.js and Python executable to use in Passenger Standalone through the command line options --ruby, --nodejs and --python. Closes GH-1442.\n * [Standalone] Running `passenger start --engine=builtin --daemonize` would fail with a timeout error. This has been fixed.\n * [Standalone] Running `passenger start --nginx-version=XXX` would crash. This has been fixed. Closes GH-1490.\n * [Apache] Fixed some issues with X-Sendfile. Closes GH-1376.\n * [Apache] If the installer fails to autodetect Apache while the installer is running as a normal user, it will now ask you to give it root privileges. Closes GH-1289.\n * [Apache] The installer now validates your Apache configuration file to check for common problems. The validator can also be accessed separately by running `passenger-config validate-install --validate-apache2`.\n * [Nginx] Introduces the `passenger_read_timeout` option for rare cases when server needs more than the default 10 minute timeout. Contributed by pkmiec. Closes [GH-PR-34](https://github.com/phusion/passenger/pull/34).\n * [Nginx] The Nginx module now looks for index.html if the path ends in / so that it works intuitively, without needing to use try_files.\n * Fixes wrong memory address display in crash dumps. Thanks to thoughtpolice for pointing it out.\n * Fixes an ugly backtrace that would be shown if an invalid request is made to an application process using the private HTTP interface. Contributed by jbergler. Closes GH-1311.\n * Various documentation improvements. Closes [GH-PR-1332](https://github.com/phusion/passenger/pull/1332), [GH-PR-1354](https://github.com/phusion/passenger/pull/1354), [GH-PR-1216](https://github.com/phusion/passenger/pull/1216), [GH-PR-1385](https://github.com/phusion/passenger/pull/1385), [GH-PR-1302](https://github.com/phusion/passenger/pull/1302).\n\n\nRelease 5.0.6\n-------------\n\n * The turbocache no longer caches responses for which the Cache-Control header contains \"no-cache\". Please note that \"no-cache\" does not mean \"do not cache this response\". Instead, it means \"any caching servers may only serve the cached response after validating it\". Since the turbocache does not support validation, we've chosen to skip caching instead.\n\n   Coincidentally, this change \"fixes\" problems with applications that erroneously use \"no-cache\" as a flag for \"do not cache this response\". What these applications should actually use is \"no-store\". We recommend the developers of such applications to change their caching headers in this manner, because even if Passenger doesn't unintentionally cache the response, any intermediate proxies that visitors are behind may still cache the response.\n * Fixes a number of memory leaks. Memory was leaked upon processing a request with multiple headers, upon processing a response with multiple headers, and upon processing a response with Set-Cookie headers. Every time such a request or response was processed, 512 bytes of memory was leaked due to improperly dereferencing relevant memory buffers. Closes GH-1455.\n * Fixes various bugs related to Union Station data collection.\n\n   Union Station is our upcoming application analytics and performance monitoring SaaS platform. It is opt-in: no data is collected unless you turn the feature on.\n * Fixes a Union Station-related file descriptor leak. Closes GH-1439.\n * Fixes some bugs w.r.t. use of uninitialized memory.\n * More informative error message if a support binary is not found, including a resolution hint. Closes GH-1395.\n * [Apache] `SetEnv` variables are now passed as Rack/CGI/request variables. This was also the case in Passenger 4, but not in Passenger 5.0.0-5.0.5. We've restored the old behavior because the behavior in 5.0.0-5.0.5 breaks certain Apache modules such as Shibboleth. Closes GH-1446.\n * [Standalone] PID and log files now correctly created if user specifies relative path.\n\n\nRelease 5.0.5\n-------------\n\n * Fixes various crashes due to use of uninitialized memory. One such crash is documented in GH-1431.\n * Fixes a connection stall in the Apache module. Closes GH-1425.\n * Fixes a potential read-past-buffer bug in string-to-integer conversion routines. Thanks to dcb314 for spotting this. Closes GH-1441.\n * Fixes a compilation problem on Solaris. This problem was caused by the fact that `tm_gmtoff` is not supported on that platform. Closes GH-1435.\n * There is now an API endpoint for force disconnecting a client: `passenger-config admin-command DELETE /server/<client name>.json`. Closes GH-1246.\n * Fixes some file descriptor leaks. These leaks were caused by the fact that keep-alive connections with application processes were not being closed properly. Closes GH-1439.\n * In order to more easily debug future file descriptor leaks, we've introduced the `PassengerFileDescriptorLogFile` (Apache) and `passenger_file_descriptor_log_file` (Nginx) config options. This allows Passenger to log all file descriptor open/close activity to a specific log file.\n * The `PassengerDebugLogFile` (Apache) and `passenger_debug_log_file` (Nginx) configuration options have been renamed to `PassengerLogFile` and `passenger_log_file`, respectively. The old name is support supported for backward compatibility reasons.\n * [Enterprise] Fixes a bug in Flying Passenger's `--instance-registry-dir` command line parameter. This command line parameter didn't do anything.\n * [Enterprise] The Flying Passenger daemon no longer supports the `--max-preloader-idle-time` config option. This is because the config option never worked. The correct way to set the max preloader idle time is through the Nginx config option, but this was wrongly documented, so the documentation has been fixed.\n\n\nRelease 5.0.4\n-------------\n\n * Fixes a compilation problem introduced in 5.0.3.\n\n\nRelease 5.0.3\n-------------\n\n * [Standalone] When using the builtin engine, `passenger start` may crash during startup due to an initialization race condition. This has been fixed.\n * [Enterprise] Fixes a bug in passenger-irb. Running passenger-irb without a PID parameter worked, but running it with a PID parameter didn't.\n * Fixes an integer overflow that resulted in a file descriptor leak and stalled client connections. Closes GH-1412.\n * Truncates Passenger source code paths in logs (to 3 chars) to reduce redundant info. Closes GH-1383.\n * Fixes invalid JSON output for non-finite double values (e.g. from the HTTP JSON API). Closes GH-1408.\n * All hooks now set the `PASSENGER_HOOK_NAME` environment variable. This variable is set to the name of the hook that is being called.\n * The Ruby handler no longer tries to call #force_encoding on response body strings, which fixes an incompatibility with apps/libraries that return frozen body strings. Closes GH-1414.\n * If the Ruby handler crashes while processing a Rack response body, it will now no longer stall the connection.\n * Fixes env.SERVER_PORT containing 80 instead of 443 when using https on default port. Closes GH-1421.\n * We now handle errors in the `poll()` system call better. This might fix some crashes during shutdown which manifest on FreeBSD.\n\n\nRelease 5.0.2\n-------------\n\n * Fixes a connection freeze that could occur when processing large responses. This would manifest itself under the error message \"This website is under heavy load\" or \"Request queue is full, returning an error\". Closes GH-1404.\n * Debian and Ubuntu packages have been reintroduced.\n * When `passenger-config restart-app` is run interactively, if Passenger is not serving any applications, then the command now prints an error message instead of showing a menu with only a \"Cancel\" option.\n * Fixes a compilation problem on FreeBSD 10 (contributed by: clemensg). Closes GH-1401.\n * [Standalone] Fixes a crash that would occur if you use the `--ctl` parameter.\n * [Enterprise] The `--max-request-time` option has been added to Passenger Standalone.\n * [Enterprise] The `max_request_time_reached` hook has been introduced. This hook allows you to run diagnostics on a process that that took too long to respond to a request.\n\n\nRelease 5.0.1\n-------------\n\n * The `passenger-config restart-app` command is now more user friendly. When run in a terminal, it will show an interactive menu, allowing you to select the app to restart. Closes GH-1387.\n * Fixed a crash bug in the handling of sticky session cookies.\n * Log failed program in error message, not its command line (contributed by: paisleyrob). Closes GH-1397.\n * [Nginx] Fixes cases in which Passenger overrides the Nginx handler function even when it shouldn't, for example when Passenger is disabled. Closes GH-1393.\n * [Enterprise] The `sticky_sessions` and `envvars` options in Passengerfile.json is now also supported in mass deployment mode.\n\n\nRelease 5.0.0 release candidate 2\n---------------------------------\n\n * Fixes an installation problem with the Ruby gem due to incorrect Makefile generation. Closes GH-1382.\n * More helpful message when request queue is full. Closes GH-1375.\n\n\nRelease 5.0.0 release candidate 1\n---------------------------------\n\n * Fixed Date headers not being formatted in the GMT timezone. Closes GH-1367.\n * Fixed Passengerfile.json/passenger-standalone.json not being properly loaded in Passenger Standalone.\n * Fixed support for sticky sessions.\n * Fixed an infinite loop if the ApplicationPool garbage collector fails due to an exception. Closes GH-1360.\n * Fixed Passenger Standalone exiting prematurely when the HelperAgent crashes. Exiting prematurely is not supposed to happen because the watchdog will restart the HelperAgent. Closes GH-1339.\n * Fixed a crash that occurs when using a non-standard startup file value. Closes GH-1378.\n * When dumping system metrics during error page generation, the `passenger-config` command is now invoked under the same Ruby interpreter as the app, instead of the one in PATH. Closes GH-1381.\n * When a Ruby process crashes due to an uncaught exception, this fact is now properly logged.\n * Specifying 0 for the `max_pool_size` config option no longer results in a crash. Closes GH-1334.\n * The timeouts when downloading Passenger Standalone binaries and source files are now customizable. Closes GH-1295.\n * The `envvars` option is now supported in Passengerfile.json, for passing environment variables to the application. Closes GH-1377.\n * Introduced `hook_queue_full_error` for request queue overflows. Closes GH-1358.\n * [Ruby] Fixed handling of \"transfer-encoding chunked\" response bodies which contain zero-sized chunks.\n * [Nginx] It is no longer necessary to re-specify `passenger_enabled` in `location` contexts. Closes GH-1338.\n * [Enterprise] Fixed a bug in mass deployment reloading.\n * [Enterprise] Fixed a bug in mass deployment daemonization.\n * [Enterprise] Fixed passenger-irb. Closes GH-1350.\n * [Enterprise] The mass deployment mode now supports the `app_type` and `startup_file` configuration options in Passengerfile.json/passenger-standalone.json. Closes GH-1366.\n\n\nRelease 5.0.0 beta 3\n--------------------\n\n * The turbocache has received major updates and fixes based on excellent feedback Chris Heald and the community. First, several bugs w.r.t. the handling of caching headers have been fixed. Second, the turbocache has become slightly more conservative for security reasons. In previous versions, default cacheable responses (as defined by RFC 7234) were cached unless caching headers tell us not to. Now, default cacheable responses are only cached if caching headers explicitly tell us to. This change was introduced because there are many applications that set incorrect caching headers on private responses. This new behavior is currently not configurable, but there are plans to make it configurable in 5.0.0 release candidate 1.\n * Introduced a new configuration option, `passenger_response_buffer_high_watermark` (Nginx) and `PassengerResponseBufferHighWatermark` (Apache), for configuring the behavior of the response buffering system. Closes GH-1300.\n * Fixed more cookie handling issues. Closes GH-1310.\n * Fixed various WebSocket issues. Closes GH-1306.\n * Fixed some crashes caused by race conditions. Closes GH-1326.\n * Fixed issues with handling POST data. Closes GH-1331.\n * Fixed some issues on Heroku. Closes GH-1329.\n * Fixed some integer overflows. Fix contributed by Go Maeda. Closes GH-1357.\n * Fixed the `passenger-status --show=union_station` command. Closes GH-1336.\n * Nginx versions earlier than 1.6 are no longer supported.\n * Improved state introspection.\n\n\nRelease 5.0.0 beta 2\n--------------------\n\n * Fixed handling of multiple Set-Cookie headers. Closes GH-1296.\n * `passenger-config system-metrics` now works properly if the agent is installed in ~/.passenger. Closes GH-1304.\n * Documentation enhancements by Igor Vuk. Closes GH-1318.\n * Fixed some crasher bugs.\n * [Standalone] User switching is now correctly disabled.\n * [Standalone] Fixed the `--thread-count` parameter.\n * [Apache] IPs set by mod_remoteip are now respected. Closes GH-1284.\n * [Apache] Fixed support for gzipped chunked responses. Closes GH-1309.\n\n\nRelease 5.0.0 beta 1\n--------------------\n\nVersion 5.0.0 beta 1 contains major changes. It's mostly compatible with version 4, but there are a few minor breakages, which are described below. Major changes and notable breakages are:\n\n * Performance has been much improved. This is thanks to months of optimization work. You can learn more at www.rubyraptor.org.\n * We've published a [server optimization guide](https://www.phusionpassenger.com/documentation/ServerOptimizationGuide.html) for those who are interested in tuning Phusion Passenger.\n * Support for Rails 1.2 - 2.2 has been removed, for performance reasons. Rails 2.3 is still supported.\n * Phusion Passenger now supports integrated HTTP caching, which we call turbocaching. If your app sets the right HTTP headers then Phusion Passenger can tremendously accelerate your app. It is enabled by default, but you can disable it with `--disable-turbocaching` (Standalone), `PassengerTurbocaching off` (Apache), or 'passenger_turbocaching off' (Nginx).\n * Touching restart.txt will no longer restart your app immediately. This is because, for performance reasons, the stat throttle rate now defaults to 10. You can still get back the old behavior by setting `PassengerStatThrottleRate 0` (Apache) or `passenger_stat_throttle_rate 0` (Nginx), but this is not encouraged. Instead, we encourage you to use the `passenger-config restart-app` tool to initiate restarts, which has immediate effect.\n * Websockets are now properly disconnected on application restarts.\n * The Phusion Passneger log levels have been completely revamped. If you were setting a log level before (e.g. through `passenger_log_level`), please read the latest documentation to learn about the new log levels.\n * If you use out-of-band garbage collection, beware that the `X-Passenger-Request-OOB-Work` header has now been renamed to `!~Request-OOB-Work`.\n * When using Rack's full socket hijacking, you must now output an HTTP status line.\n * [Nginx] The `passenger_set_cgi_param` option has been removed and replaced by `passenger_set_header` and `passenger_env_var`.\n * [Nginx] `passenger_show_version_in_header` is now only valid in the `http` context.\n * [Apache] The `PassengerStatThrottleRate` option is now global.\n\nMinor changes:\n\n * The minimum required Nginx version is now 1.6.0.\n * The instance directory is now touched every hour instead of every 6 hours. This should hopefully prevent more problems with /tmp cleaner daemons.\n * Applications are not grouped not only on the application root path, but also on the environment. For example, this allows you to run the same app in both production and staging mode, with only a single directory, without further configuration. Closes GH-664.\n * The `passenger_temp_dir` option (Nginx) and the `PassengerTempDir` option (Apache) have been replaced by two config options. On Nginx they are `passenger_instance_registry_dir` and `passenger_data_buffer_dir`. On Apache they are `PassengerInstanceRegistryDir` and `PassengerDataBufferDir`. On Apache, `PassengerUploadBufferDir` has been replaced by `PassengerDataBufferDir`.\n * Command line tools no longer respect the `PASSENGER_TEMP_DIR` environment variable. Use `PASSENGER_INSTANCE_REGISTRY_DIR` instead.\n * `passenger-status --show=requests` has been deprecated in favor of `passenger-status --show=connections`.\n * Using the SIGUSR1 signal to restart a Ruby app without dropping connections, is no longer supported. Instead, use `passenger-config detach-process`.\n * Introduced the `passenger-config reopen-logs` command, which instructs all Phusion Passenger agent processes to reopen their log files. You should call this after having rotated the web server logs.\n * [Standalone] The Phusion Passenger Standalone config template has changed. Users are encouraged to update it.\n * [Standalone] `passenger-standalone.json` has been renamed to `Passengerfile.json`.\n * [Standalone] `passenger-standalone.json`/`Passengerfile.json` no longer overrides command line options. Instead, command line options now have the highest priority.\n\n\nRelease 4.0.60\n--------------\n\nNote that 4.0.60 is a source-only maintenance release. There will not be any binaries, Debian or RPM packages for this release.\n\n * Adds OS X El Capitan support.\n * Updates preferred Nginx version from 1.6.2 to 1.6.3.\n * Fixes a header collision vulnerability (CVE-2015-7519, medium severity). Please see our blog for detailed vulnerability description and advisory. Thanks to the SUSE security team for reporting this issue.\n * Fixes the password protection of internal Phusion Passenger processes.\n\n   For security reasons, Phusion Passenger limits access to internal processes, by using Unix file permissions and randomly generated passwords that only authorized internal processes know. It turns out that this password wasn't set correctly, which has now been fixed. There was no security vulnerability, because the file permissions already provide sufficient security. The password only serves as an extra layer of security just in case there is a problem with the former.\n\n   This issue is not at all related to any application-level security or application-level passwords. Any database passwords, keys, or secrets used and generated by applications have got nothing to do with the nature of this issue. This issue only relates to some randomly generated passwords that Passenger uses internally, for its internal operations.\n\n\nRelease 4.0.59\n--------------\n\n * [Enterprise] Fixed support for free-style Node.js apps.\n\n\nRelease 4.0.58\n--------------\n\n * [Enterprise] Fixed a bug in the Debian packages which caused Flying Passenger to break when used with non-system Rubies.\n * The Debian packages no longer require Ruby 1.9. Closes GH-1353.\n\n\nRelease 4.0.57\n--------------\n\n * Fixed a native extension compatibility problem with Ruby 2.2. Closes [ruby-core:67152](https://bugs.ruby-lang.org/issues/10656).\n * Fixed compatibility with Nginx 1.7.9. Closes GH-1335.\n\n\nRelease 4.0.56\n--------------\n\n * Fixed a file descriptor leak that manifests when an error page is shown. Contributed by Paul Bonaud, closes GH-1325.\n * Improved Node.js request load balancing. Closes GH-1322. Thanks to Charles Valli\u00e8res for the analysis.\n\n\nRelease 4.0.55\n--------------\n\n * Supports Ruby 2.2. Closes GH-1314.\n * Fixed Linux OS name detection.\n\n\nRelease 4.0.54\n--------------\n\n * Contains a licensing-related hot fix for Enterprise customers.\n\n\nRelease 4.0.53\n--------------\n\n * Upgraded the preferred Nginx version to 1.6.2.\n * Improved RVM gemset autodetection.\n * Fixed some Ruby 2.2 compatibility issues.\n\n\nRelease 4.0.52\n--------------\n\n * Fixed a null termination bug when autodetecting application types.\n * Node.js apps can now also trigger the inverse port binding mechanism by passing `'/passenger'` as argument. This was introduced in order to be able to support the Hapi.js framework. Please read http://stackoverflow.com/questions/20645231/phusion-passenger-error-http-server-listen-was-called-more-than-once/20645549 for more information regarding Hapi.js support.\n * It is now possible to abort Node.js WebSocket connections upon application restart. Please refer to https://github.com/phusion/passenger/wiki/Phusion-Passenger:-Node.js-tutorial#restarting_apps_that_serve_long_running_connections for more information. Closes GH-1200.\n * Passenger Standalone no longer automatically resolves symlinks in its paths.\n * `passenger-config system-metrics` no longer crashes when the system clock is set to a time in the past. Closes GH-1276.\n * `passenger-status`, `passenger-memory-stats`, `passenger-install-apache2-module` and `passenger-install-nginx-module` no longer output ANSI color codes by default when STDOUT is not a TTY. Closes GH-487.\n * `passenger-install-nginx-module --auto` is now all that's necessary to make it fully non-interactive. It is no longer necessary to provide all the answers through command line parameters. Closes GH-852.\n * Minor contribution by Alessandro Lenzen.\n\n\nRelease 4.0.50\n--------------\n\n * Fixed a potential heap corruption bug.\n * Added Union Station support for Rails 4.1.\n\n\nRelease 4.0.49\n--------------\n\n * Upgraded the preferred Nginx version to 1.6.1.\n * Fixed a crash that may be triggered by the `passenger_max_requests` feature.\n * Introduced the `spawn_failed` hook, which is called when an application\n   process fails to spawn. You could use this hook to setup an error\n   notification system. Closes GH-1252.\n * Fonts, RSS and XML are now gzip-compressed by default in Phusion Passenger\n   Standalone. Thanks to Jacob Elder. Closes GH-1254.\n * Fixed some user and group information lookup issues. Closes GH-1253.\n * Fixed some request handling crashes. Closes GH-1250.\n * Fixed some compilation problems on Gentoo. Closes GH-1261.\n * Fixed some compilation problems on Solaris. Closes GH-1260.\n\n\nRelease 4.0.48\n--------------\n\n * Fixed a race condition while determining what user an application should\n   be executed as. This bug could lead to applications being run as the wrong\n   user. Closes GH-1241.\n * [Standalone] Improved autodetection of Rails asset pipeline files. This\n   prevents Standalone from incorrectly setting caching headers on non-asset\n   pipeline files. Closes GH-1225.\n * Fixed compilation problems on CentOS 5. Thanks to J. Smith. Closes GH-1247.\n * Fixed compilation problems on OpenBSD.\n * Fixed compatibility with Ruby 1.8.5.\n\n\nRelease 4.0.47\n--------------\n\n * [Enterprise] Fixed a bug in Flying Passenger's `--max-preloader-idle-time`\n   option.\n\n\nRelease 4.0.46\n--------------\n\n * Further improved Node.js and Socket.io compatibility.\n * Sticky session cookies have been made more reliable.\n * Fixed WebSocket upgrade issues on Firefox. Closes GH-1232.\n * The Python application loader now inserts the application root into `sys.path`.\n   The fact that this was not done previously caused a lot of confusion amongst\n   Python users, who wondered why their `passenger_wsgi.py` could not import any\n   modules from the same directory.\n * Fixed a compatibility problem with Django, which could cause Django apps to\n   freeze indefinitely. Closes GH-1215.\n * Logging of application spawning errors has been much improved. Full details\n   about the error, such as environment variables, are saved to a private log file.\n   In the past, these details were only viewable in the browser. This change also\n   fixes a bug on Phusion Passenger Enterprise, where enabling Deployment Error\n   Resistance causes error messages to get lost. Closes GH-1021 and GH-1175.\n * Fixed a regression in Node.js support. When a Node.js app is deployed on\n   a HTTPS host, the `X-Forwarded-Proto` header wasn't set in 4.0.45.\n   Closes GH-1231.\n * Passenger Standalone no longer, by default, loads shell startup files before\n   loading the application. This is because Passenger Standalone is often invoked\n   from the shell anyway. Indeed, loading shell startup files again can interfere\n   with any environment variables already set in the invoking shell. You can\n   still tell Passenger Standalone to load shell startup files by passing\n   `--load-shell-envvars`. Passenger for Apache and Passenger for Nginx still\n   load shell startup files by default.\n * Passenger Standalone now works properly when the HOME environment variable\n   isn't set. Closes GH-713.\n * Passenger Standalone's `package-runtime` command has been removed. It has\n   been broken for a while and has nowadays been obsolete by our automatic\n   [binary generation system](https://github.com/phusion/passenger_autobuilder).\n   Closes GH-1133.\n * The `passenger_startup_file` option now also works on Python apps. Closes GH-1233.\n * If you are a [Union Station](https://www.unionstationapp.com) customer, then\n   Phusion Passenger will now also log application spawning errors to Union Station.\n   This data isn't shown in the Union Station interface yet, but it will be\n   implemented in the future.\n * Fixed compilation problems on OmniOS and OpenIndiana. Closes GH-1212.\n * Fixed compilation problems when Nginx is configured with OpenResty.\n   Thanks to Yichun Zhang. Closes GH-1226.\n * Fixed Nginx HTTP POST failures on ARM platforms. Thanks to nocelic for the fix.\n   Closes GH-1151.\n * Documentation contributions by Tim Bishop and Tugdual de Kerviler.\n * Minor Nginx bug fix by Feng Gu. Closes GH-1235.\n\n\nRelease 4.0.45\n--------------\n\n * Major improvements in Node.js and Meteor compatibility. Older Phusion Passenger\n   versions implemented Node.js support by emulating Node.js' HTTP library.\n   This approach was found to be unsustainable, so we've abandoned that approach\n   and replaced it with a much simpler approach that does not involve emulating\n   the HTTP library.\n * Introduced support for sticky sessions. Sticky sessions are useful -- or even\n   required -- for apps that store state inside process memory. Prominent examples\n   include SockJS, Socket.io, faye-websocket and Meteor. Sticky sessions are\n   required to make the aforementioned examples work in multi-process scenarios.\n   By introducing sticky sessions support, we've much improved WebSocket support\n   and support for the aforementioned libraries and frameworks.\n * Due to user demand, GET requests with request bodies are once again supported.\n   Support for these kinds of requests was removed in 4.0.42 in an attempt to\n   increase the strictness and robustness of our request handling code. It has\n   been determined that GET requests with request bodies can be adequately\n   supported without degrading robustness in Phusion Passenger. However, GET\n   requests with both request bodies and WebSocket upgrade headers are\n   unsupported. Fixes issue #1092.\n * [Enterprise] The [Flying Passenger](http://www.modrails.com/documentation/Users%20guide%20Apache.html#flying_passenger)\n   feature is now also available on Apache.\n * Fixed some issues with RVM mixed mode support, issue #1121.\n * Fixed Passenger Standalone complaining about not finding PassengerHelperAgent\n   during startup.\n * Fixed various minor issues such as #1190 and #1197.\n * The download timeout for passenger-install-nginx-module has been increased.\n   Patch by \u4e80\u7530 \u7fa9\u88d5.\n\n\nRelease 4.0.44\n--------------\n\n * The issue tracker has now been moved from Google Code to Github.\n   Before version 4.0.44 (May 29 2014, commit 3dd0964c9f4), all\n   issue numbers referred to Google Code. From now on, all issue\n   numbers will refer to Github Issues.\n * Fixed compilation problems on OS X Lion and OS X Mountain Lion.\n * On Ruby, fixed `nil` being frozen on accident in some cases.\n   See issue #1192.\n\n\nRelease 4.0.43\n--------------\n\n * Introduced a new command `passenger-config list-instances`, which prints all\n   running Phusion Passenger instances.\n * Introduced a new command `passenger-config system-metrics, which displays\n   metrics about the system such as the total CPU and memory usage.\n * Fixed some compilation problems caused by the compiler capability autodetector.\n * System metrics such as total CPU usage and memory usage, are now sent to\n   [Union Station](https://www.unionstationapp.com) in preparation for future\n   features.\n\n\nRelease 4.0.42\n--------------\n\n * [Nginx] Upgraded the preferred Nginx version to 1.6.0.\n * [Nginx] Fixed compatibility with Nginx 1.7.0.\n * [Standalone] The MIME type for .woff files has been changed to application/font-woff.\n   Fixes issue #1071.\n * There are now APT packages for Ubuntu 14.04. At the same time, packages for\n   Ubuntu 13.10 have been abandoned.\n * Introduced a new command, `passenger-config build-native-support`, for ensuring\n   that the native_support library for the current Ruby interpreter is built. This\n   is useful in system provisioning scripts.\n * For security reasons, friendly error pages (those black/purple pages that shows\n   the error message, backtrace and environment variable dump when an application\n   fails to start) are now disabled by default when the application environment is\n   set to 'staging' or 'production'. Fixes issue #1063.\n * Fixed some compilation warnings on Ubuntu 14.04.\n * Fixed some compatibility problems with Rake 10.2.0 and later.\n   See [Rake issue 274](https://github.com/jimweirich/rake/issues/274).\n * Improved error handling in [Union Station](https://www.unionstationapp.com) support.\n * Data is now sent to Union Station on a more frequent basis, in order to make new\n   data show up more quickly.\n * Information about the code revision is now sent to Union Station, which will be\n   used in the upcoming deployment tracking feature in Union Station 2.\n\n\nRelease 4.0.41\n--------------\n\n * Fixed some issues with printing UTF-8 log files on Heroku.\n * Added a new flag `--ignore-app-not-running` to `passenger-config restart-app`.\n   When this flag is given, `passenger-config restart-app` will exit successfully\n   when the specified application is not running, instead of exiting with\n   an error.\n * Our precompiled Passenger Standalone binaries have been upgraded to use\n   OpenSSL 1.0.1g, which fixes [the OpenSSL Heartbleed vulnerability](http://heartbleed.com/).\n   Users who are using Passenger Standalone with SSL enabled are vulnerable,\n   and should upgrade immediately. Users who do not use Passenger Standalone,\n   users who use Passenger Standalone without SSL, or users who use Passenger\n   Standalone with SSL behind another SSL-enabled reverse proxy, are not\n   vulnerable.\n\n\nRelease 4.0.40\n--------------\n\n * Upgraded preferred Nginx version to 1.4.7. This Nginx version fixes\n   a buffer overflow. Users are strongly urged to upgrade Nginx as soon\n   as possible.\n\n\nRelease 4.0.39\n--------------\n\n * Fixed a crash that could happen if the client disconnects while a chunked\n   response is being sent. Fixes issue #1062.\n * In Phusion Passenger Standalone, it is now possible to customize the Nginx\n   configuration file on Heroku. It is now also possible to permanently apply\n   changes to the Nginx configuration file, surviving upgrades. Please refer\n   to the \"Advanced configuration\" section of the Phusion Passenger Standalone\n   manual for more information.\n * The programming language selection menu in passenger-install-apache2-module\n   and passenger-install-nginx-module only works on terminals that support\n   UTF-8 and that have a UTF-8 capable font. To cater to users who cannot meet\n   these requirements (e.g. PuTTY users using any of the default Windows fonts),\n   it is now possible to switch the menu to a plain text mode by pressing '!'.\n   Fixes issue #1066.\n * Fixed printing UTF-8 characters in log files in Phusion Passenger Standalone.\n * It is now possible to dump live backtraces of Python apps through the\n   'SIGABRT' signal.\n * Fixed closing of file descriptors on OS X 10.9.\n * Fixed compilation problems with Apple Clang 503.0.38 on OS X.\n * Fixed compilation of native_support on Rubinius.\n\n\nRelease 4.0.38\n--------------\n\n * Added support for the new Ruby 2.1.0 out-of-band garbage collector.\n   This can much improve garbage collection performance, and drastically\n   reduce request times.\n * Fixed a symlink-related security vulnerability.\n\n   Urgency: low\n   Scope: local exploit\n   Summary: writing files to arbitrary directory by hijacking temp directories\n   Affected versions: 4.0.37\n   Fixed versions: 4.0.38\n   CVE-2014-1832\n\n   Description:\n   This issue is related to CVE-2014-1831 (the security issue as mentioned in\n   the 4.0.37 release notes). The previous fix was incomplete, and still has a\n   (albeit smaller) small attack time window in between two filesystem\n   checks. This attack window is now gone.\n * Passenger Standalone is now compatible with IPv6.\n * Fixed some compilation problems on Solaris. See issue #1047.\n * passenger-install-apache2-module and passenger-install-nginx-module\n   now automatically run in `--auto` mode if stdin is not a TTY. Fixes\n   issue #1030.\n * Fixed an issue with non-bundled Meteor apps not correctly running in\n   production mode.\n * The `PassengerPreStart` option is now compatible with IPv6 server sockets.\n * When running Python WSGI apps, `wsgi.run_once` is now set to False.\n   This should improve the performance of certain apps and frameworks.\n * When handling HTTP requests with chunked transfer encoding, the\n   'Transfer-Encoding' header is no longer passed to the application.\n   This is because the web server already buffers and dechunks the\n   request body.\n * Fixed a possible hang in Phusion Passenger for Nginx when Nginx\n   is instructed to reload or reopen log files. Thanks to Feng Gu,\n   [pull request #97](https://github.com/phusion/passenger/pull/97).\n * The preferred Nginx version has been upgraded to 1.4.6.\n * Fixed a problem with running passenger-install-apache2-module and\n   passenger-install-nginx-module on JRuby. They were not able to accept\n   any terminal input after displaying the programming language menu.\n\n\nRelease 4.0.37\n--------------\n\n * Improved Node.js compatibility. Calling on() on the request object\n   now returns the request object itself. This fixes some issues with\n   Express, Connect and Formidable. Furthermore, some WebSocket-related\n   issues have been fixed.\n * Improved Meteor support. Meteor application processes are now shut down\n   quicker. Previously, they linger around for 5 seconds while waiting for\n   all connections to terminate, but that didn't work well because WebSocket\n   connections were kept open indefinitely. Also, some WebSocket-related\n   issues have been fixed.\n * Introduced a new tool `passenger-config detach-process` for gracefully\n   detaching an application process from the process pool. Has a similar\n   effect to killing the application process directly with `kill <PID>`,\n   but killing directly may cause the HTTP client to see an error, while\n   using this command guarantees that clients see no errors.\n * Fixed a crash that occurs when an application fails to spawn, but the HTTP\n   client disconnects before the error page is generated. Fixes issue #1028.\n * Fixed a symlink-related security vulnerability.\n\n   Urgency: low\n   Scope: local exploit\n   Summary: writing files to arbitrary directory by hijacking temp directories\n   Affected versions: 4.0.5 and later\n   Fixed versions: 4.0.37\n   CVE-2014-1831\n\n   Description:\n   Phusion Passenger creates a \"server instance directory\" in /tmp during startup,\n   which is a temporary directory that Phusion Passenger uses to store working files.\n   This directory is deleted after Phusion Passenger exits. For various technical\n   reasons, this directory must have a semi-predictable filename. If a local attacker\n   can predict this filename, and precreates a symlink with the same filename that\n   points to an arbitrary directory with mode 755, owner root and group root, then\n   the attacker will succeed in making Phusion Passenger write files and create\n   subdirectories inside that target directory. The following files/subdirectories\n   are created:\n\n    * control_process.pid\n    * generation-X, where X is a number.\n\n   If you happen to have a file inside the target directory called `control_process.pid`,\n   then that file's contents are overwritten.\n\n   These files and directories are deleted during Phusion Passenger exit. The target\n   directory itself is not deleted, nor are any other contents inside the target\n   directory, although the symlink is.\n\n   Thanks go to Jakub Wilk for discovering this issue.\n\n\nRelease 4.0.36\n--------------\n\n * [Enterprise] Fixed some Mass Deployment bugs.\n * [Enterprise] Fixed a bug that causes an application group to be put into\n   Deployment Error Resistance Mode if rolling restarting fails while\n   deployment error resistance is off. Deployment Error Resistance Mode is\n   now only activated if it's explicitly turned on.\n * Passenger Standalone now gzips JSON responses.\n * Fixed some cases in which Passenger Standalone does not to properly cleanup\n   its temporary files.\n\n\nRelease 4.0.35\n--------------\n\n * Fixed some unit tests.\n\n\nRelease 4.0.34\n--------------\n\n * The Node.js loader code now sets the `isApplicationLoader` attribute on the\n   bootstrapping module. This provides a way for apps and frameworks that check\n   for `module.parent` to check whether the current file is loaded by Phusion\n   Passenger, or by other software that work in a similar way.\n\n   This change has been introduced to solve a compatibility issue with CompoundJS.\n   CompoundJS users should modify their server.js, and change the following:\n\n       if (!module.parent) {\n\n   to:\n\n       if (!module.parent || module.parent.isApplicationLoader) {\n\n * Improved support for Meteor in development mode. Terminating Phusion Passenger\n   now leaves less garbage Meteor processes behind.\n * It is now possible to disable the usage of the Ruby native extension by setting\n   the environment variable `PASSENGER_USE_RUBY_NATIVE_SUPPORT=0`.\n * Fixed incorrect detection of the Apache MPM on Ubuntu 13.10.\n * When using RVM, if you set PassengerRuby/passenger_ruby to the raw Ruby binary\n   instead of the wrapper script, Phusion Passenger will now print an error.\n * Added support for RVM >= 1.25 wrapper scripts.\n * Fixed loading passenger_native_support on Ruby 1.9.2.\n * The Union Station analytics code now works even without native_support.\n * Fixed `passenger-install-apache2-module` and `passenger-install-nginx-module` in\n   Homebrew.\n * Binaries are now downloaded from an Amazon S3 mirror if the main binary server\n   is unavailable.\n * And finally, although this isn't really a change in 4.0.34, it should be noted.\n   In version 4.0.33 we changed the way Phusion Passenger's own Ruby source files\n   are loaded, in order to fix some Debian and RPM packaging issues. The following\n   doesn't work anymore:\n\n       require 'phusion_passenger/foo'\n\n   Instead, it should become:\n\n       PhusionPassenger.require_passenger_lib 'foo'\n\n   However, we overlooked the fact that this change breaks Ruby apps which use\n   our Out-of-Band GC feature, because such apps had to call\n   `require 'phusion_passenger/rack/out_of_band_gc'`. Unfortunately we're not able\n   to maintain compatibility without reintroducing the Debian and RPM packaging\n   issues. Users should modify the following:\n\n       require 'phusion_passenger/rack/out_of_band_gc'\n\n   to:\n\n       if PhusionPassenger.respond_to?(:require_passenger_lib)\n         # Phusion Passenger >= 4.0.33\n         PhusionPassenger.require_passenger_lib 'rack/out_of_band_gc'\n       else\n         # Phusion Passenger < 4.0.33\n         require 'phusion_passenger/rack/out_of_band_gc'\n       end\n\nRelease 4.0.33\n--------------\n\n * Fixed a compatibility problem in passenger-install-apache2-module with Ruby 1.8.\n   The language selection menu didn't work properly.\n\n\nRelease 4.0.32\n--------------\n\n * Fixed compatibility problems with old Ruby versions that didn't include RubyGems.\n\n\nRelease 4.0.31\n--------------\n\n * Introduced a new tool: `passenger-config restart-app`. With this command you\n   can initiate an application restart without touching restart.txt.\n   Unlike touching restart.txt, this tool initiates the restart immediately\n   instead of on the next request.\n * Fixed some problems in process spawning and request handling.\n * Fixed some problems with the handling of HTTP chunked transfer encoding\n   bodies. These problems only occurred in Ruby.\n * Fixed the HelperAgent, upon shutdown, not correctly waiting 5 seconds until\n   all clients have disconnected. Fixes issue #884.\n * Fixed compilation problems on FreeBSD.\n * Fixed some C++ strict aliasing problems.\n * Fixed some problems with spawning applications that print messages without\n   newline during startup. Fixes issue #1039.\n * Fixed potential hangs on JRuby when Ctrl-C is used to shutdown the server.\n   Fixes issue #1035.\n * When Phusion Passenger is installed through the Debian package,\n   passenger-install-apache2-module now checks whether the Apache\n   module package (libapache2-mod-passenger) is properly installed,\n   and installs it using apt-get if it's not installed. Fixes\n   issue #1031.\n * The `passenger-status --show=xml` command no longer prints the non-XML\n   preamble, such as the version number and the time. Fixes issue #1037.\n * The Ruby native extension check whether it's loaded against the right Ruby\n   version, to prevent problems when people upgrade Ruby without recompiling\n   their native extensions.\n * Various other minor Debian packaging improvements.\n\n\nRelease 4.0.30\n--------------\n\n * Fixed wrong autogeneration of HTTP Date header. If the web app does\n   not supply a Date header, then Passenger will add one. Unfortunately\n   due to the use of the wrong format string, December 30 2013 is\n   formatted as December 30 2014. As a result, cookies that expire before\n   2014 would expire on December 30 2013 and December 31 2013. Details can\n   be found at [Github pull request 93](https://github.com/phusion/passenger/pull/93).\n\n   This issue only affects Phusion Passenger for Nginx and Phusion Passenger\n   Standalone, and does not affect Phusion Passenger for Apache.\n\n   You can work around this problem in your application by setting a\n   Date header. For example, in Rails you can do:\n\n       before_filter { response.date = Time.now.utc }\n\n   Many thanks to Jeff Michael Dean (zilkey) and many others for bringing this to our attention and for providing workarounds and feedback.\n\n\nRelease 4.0.29\n--------------\n\n * Fixed a compilation problem on OS X Mavericks.\n\n\nRelease 4.0.28\n--------------\n\n * Introduced a workaround for a GCC 4.6 bug. This bug could cause Phusion\n   Passsenger to crash during startup. Affected operating systems include\n   Ubuntu 12.04 and Amazon Linux 2013.09.01, though not every machine with\n   this OS installed exhibits the problem. See issue #902.\n * Improved Node.js support: the Sails framework is now supported.\n * Improved Node.js support: the streams2 API is now supported.\n * Introduced support for hooks, allowing users to easily extend Phusion\n   Passenger's behavior.\n * Fixed a bug in the `passenger start -R` option. It was broken because of a\n   change introduced in 4.0.25.\n * Fixed a bug in PassengerMaxInstancesPerApp. Fixes issue #1016.\n * Fixed compilation problems on Solaris.\n * Fixed an encoding problem in the Apache autodetection code. Fixes\n   issue #1026.\n * The Debian packages no longer depend on libruby.\n * Application stdout and stderr are now printed without normal\n   Phusion Passenger debugging information, making them easier to read.\n\n\nRelease 4.0.27\n--------------\n\n * [Apache] Fixed a bug in the Apache module which could lock up the Apache\n   process or thread. This is a regression introduced in version 4.0.24.\n * Node.js application processes now have friendly process titles.\n\n\nRelease 4.0.26\n--------------\n\n * Introduced the `PassengerBufferUpload` option for Apache. This option allows one\n   to disable upload buffering, e.g. in order to be able to track upload progress.\n * [Nginx] The `HTTPS` variable is now set correctly for HTTPS connections, even\n   without setting `ssl on`. Fixes issue #401.\n * [Standalone] It is now possible to listen on both a normal HTTP and an HTTPS port.\n * [Enterprise] The `passenger-status` tool now displays rolling restart status.\n\n\nRelease 4.0.25\n--------------\n\n * The `PassengerAppEnv`/`passenger_app_env`/`--environment` option now also sets NODE_ENV,\n   so that Node.js frameworks like Connect can properly respond to the environment.\n * Fixed a bug in our Debian/Ubuntu packages causing `passenger-install-nginx-module`\n   not to be able to compile Nginx.\n * Arbitrary Node.js application structures are now supported.\n * [Nginx] Introduced the `passenger_restart_dir` option.\n * [Nginx] Upgraded preferred Nginx version to 1.4.4 because of CVE-2013-4547.\n\n\nRelease 4.0.24\n--------------\n\n * Introduced the `PassengerNodejs` (Apache) and `passenger_nodejs` (Nginx)\n   configuration options.\n * [Apache] Introduced the `PassengerErrorOverride` option, so that HTTP error\n   responses generated by applications can be intercepted by Apache and customized\n   using the `ErrorDocument` directive.\n * [Standalone] It is now possible to specify some configuration options in\n   a configuration file `passenger-standalone.json`. When Passenger Standalone\n   is used in Mass Deployment mode, this configuration file can be used to customize\n   settings on a per-application basis.\n * [Enterprise] Fixed a potential crash when a rolling restart is triggered\n   while a process is already shutting down.\n * [Enterprise] Fixed Mass Deployment support for Node.js and Meteor.\n\n\nRelease 4.0.23\n--------------\n\n * Fixed compilation problems on GCC 4.8.2 (e.g. Arch Linux 2013-10-27).\n * Fixed a compatibility problem with Solaris /usr/ccs/bin/make: issue #999.\n * Support for the Meteor Javascript framework has been open sourced.\n\n\nRelease 4.0.22\n--------------\n\n * [Enterprised] Fixed compilation problems on OS X Mavericks.\n\n\nRelease 4.0.21\n--------------\n\n * [Nginx] Upgraded the preferred Nginx version to 1.4.3.\n * Node.js support has been open sourced.\n * Prelimenary OS X Mavericks support.\n * Work around an Apache packaging bug in CentOS 5.\n * Various user friendliness improvements in the documentation and the\n   installers.\n * Fixed a bug in the always_restart.txt support. Phusion Passenger was\n   looking for it in the wrong directory.\n * Many Solaris and Sun Studio compatibility fixes. Special thanks to\n   \"mark\" for his extensive assistance.\n * [Standalone] The --temp-dir command line option has been introduced.\n\n\nRelease 4.0.20\n--------------\n\n * Fixed a bug in Phusion Passenger Standalone's daemon mode. When in daemon\n   mode, the Nginx temporary directory was deleted prematurely, causing some\n   POST requests to fail. This was a regression that was introduced in 4.0.15\n   as part of an optimization.\n * Fixed compilation problems on Solaris 10 with Sun Studio 12.3.\n * Improved detection of RVM problems.\n * It is now possible to log the request method to Union Station.\n * Introduced a new option, `PassengerLoadShellEnvvars` (Apache) and\n   `passenger_load_shell_envvars` (Nginx). This allows enabling or disabling\n   the loading of bashrc before spawning the application.\n * [Enterprise] Fixed a packaging problem which caused the flying-passenger\n   executable not to be properly included in the bin path.\n * [Enterprise] Fixed a race condition which sometimes causes the Flying\n   Passenger socket to be deleted after a restart. Fixes issue #939.\n * [Enterprise] The `byebug` gem is now supported for debugging on Ruby 2.0.\n   The byebug gem requires a patch before this works:\n   https://github.com/deivid-rodriguez/byebug/pull/29\n\n\nRelease 4.0.19\n--------------\n\n * Fixed a problem with response buffering. Application processes are now\n   properly marked available for request processing immediately after they're\n   done sending the response, instead of after having sent the entire response\n   to the client.\n * The \"processed\" counter in `passenger-status` is now bumped after the process\n   has handled a request, not at the beginning.\n * [Enterprise] Fixed an off-by-one bug in the `passenger_max_processes` setting.\n\n\nRelease 4.0.18\n--------------\n\n * The Enterprise variant of Phusion Passenger Standalone now supports\n   customizing the concurrency model and thread count from the command line.\n * On Nginx, the Enterprise license is now only checked if Phusion Passenger\n   is enabled in Nginx. This allows you to deploy Nginx binaries, that have\n   Phusion Passenger Enterprise compiled in, to servers that are not\n   actually running Phusion Passenger Enterprise.\n * Fixed a performance bug in the Union Station support code. In certain cases\n   where a lot of data must be sent to Union Station, the code is now over\n   100 times faster.\n * `passenger-status --show=union_station` now displays all clients that\n   are connected to the LoggingAgent.\n * Added a workaround for Heroku so that exited processes are properly detected\n   as such.\n * When using Phusion Passenger Standalone with Foreman, pressing Ctrl-C\n   in Foreman no longer results in runaway Nginx processes.\n * Fixed backtraces in the Apache module.\n\n\nRelease 4.0.17\n--------------\n\n * Fixed compilation problems on GCC 4.8 systems, such as Arch Linux 2013.04.\n   Fixes issue #941.\n * Fixed some deprecation warnings when compiling the Ruby native extension\n   on Ruby 2.0.0.\n * Fixed some Union Station-related stability issues.\n\n\nRelease 4.0.16\n--------------\n\n * Allow Phusion Passenger to work properly on systems where the user's GID\n   does not have a proper entry in /etc/group, such as Heroku.\n\n\nRelease 4.0.15\n--------------\n\n * Out-of-band work has been much improved. The number of processes which\n   may perform out-of-band work concurrently has been limited to 1.\n   Furthermore, processes which are performing out-of-band work are now\n   included in the max pool size constraint calculation. However, this\n   means that in order to use out-of-band work, you need to have at least\n   2 application processes running. Out-of-band work will never be triggered\n   if you just have 1 process. Partially fixes issue #892.\n * Phusion Passenger now displays an error message to clients if too many\n   requests are queued up. By default, \"too many\" is 100. You may customize\n   this with `PassengerMaxRequestQueueSize` (Apache) or\n   `passenger_max_request_queue_size` (Nginx).\n * A new configuration option, `PassengerStartTimeout` (Apache) and\n   `passenger_start_timeout` (Nginx), has been added. This option allows you\n   to specify a timeout for application startup. The startup timeout has exited\n   since version 4.0.0, but before version 4.0.15 it was hardcoded at a value\n   of 90 seconds. Now it is customizable. Fixes issue #936.\n * [Enterprise] The `PassengerMaxRequestTime`/`passenger_max_request_time`\n   feature is now available for Python and Node.js as well, and is no longer\n   limited to just Ruby. Fixes issue #938.\n * [Nginx] Introduced a configuration option `passenger_intercept_errors`,\n   which decides if Nginx will intercept responses with HTTP status codes of\n   400 and higher. Its effect is similar to `proxy_intercept_errors`.\n * [Standalone] Memory usage optimization: when `passenger start` is run with\n   `--daemonize`, the frontend exits after starting the Nginx core. This saves\n   ~20 MB of memory per `passenger start` instance.\n * [Standalone] Phusion Passenger Standalone is now also packaged in the\n   Debian packages.\n * [Standalone] Fix a problem with the `passenger stop` command on Ruby 1.8.7.\n   The 'thread' library was not properly required, causing a crash.\n * [Standalone] There is now builtin support for SSL.\n * Fix a crash when multiple `passenger_pass_header` directives are set.\n   Fixes issue #934.\n * Permissions on the server instance directory are now explicitly set\n   with chmod, so that permissions are correct on systems with a non-default\n   umask. Fixes issue #928.\n * Fix permission problems when running `passenger start` with `--user`.\n * `passenger-config --detect-apache2` now correctly detects the eror log\n   filename on Amazon Linux. Fixes issue #933.\n * An environment variable `PASSENGER_THREAD_LOCAL_STORAGE` has been added\n   to the build system for forcefully disabling the use of thread-local\n   storage within the Phusion Passenger codebase. This flag useful on systems\n   that have broken support for thread-local storage, despite passing our build\n   system's check for proper thread-local storage support. At the time of\n   writing, one user has reported that Ubuntu 12.04 32-bit has broken\n   thread-local storage report although neither the reporter nor us were able\n   to reproduce the problem on any other systems running Ubuntu 12.04 32-bit.\n   Note that this flag has no effect on non-Phusion Passenger code. Fixes\n   issue #937.\n * It is now possible to preprocess events before they are sent to Union\n   Station. This is useful for removing confidential data as demonstrated in\n   this example `config/initializers/passenger.rb` file:\n\n       if defined?(PhusionPassenger)\n           event_preprocessor = lambda do |e|\n               e.payload[:sql].gsub!(\"secret\",\"PASSWORD\") if e.payload[:sql]\n           end\n           PhusionPassenger.install_framework_extensions!(:event_preprocessor => event_preprocessor)\n       end\n\nRelease 4.0.14\n--------------\n\n * Fixed a bug in Passenger Standalone's source compiler, for the specific\n   case when the downloaded Nginx binary doesn't work, and compilation\n   of the Nginx binary did not succeed the first time (e.g. because of\n   missing dependencies).\n * Precompiled Ruby native extensions are now automatically downloaded.\n\n\nRelease 4.0.13\n--------------\n\n * Updated preferred Nginx version to 1.4.2.\n * Worked around the fact that FreeBSD 9.1 has a broken C++ runtime. Patch\n   contributed by David Keller.\n * Autogenerated HTTP Date headers are now in UTC instead of local time.\n   This could cause cookies to have the wrong expiration time. Fixes issue #913.\n * Fixed compatibility problems with Ruby 1.8.6 (issue #924).\n * Introduced a tool, `passenger-config --detect-apache2`, which autodetects\n   all Apache installations on the system along with their parameters (which\n   apachectl command to run, which log file to read, which config file to edit).\n   The tool advises users about how to use that specific Apache installation.\n   Useful if the user has multiple Apache installations but don't know about\n   it, or when the user doesn't know how to work with multiple Apache\n   installations.\n * Added an API for better Rack socket hijacking support.\n * Added a hidden configuration option for customizing the application start\n   timeout. A proper configuration option will be introduced in the future.\n * Added autodetection support for Amazon Linux.\n * Fixed process metrics collection on some operating systems. Some systems'\n   'ps' command expect no space between -p and the list of PIDs.\n\n\nRelease 4.0.10\n--------------\n\n * Fixed a crash in PassengerWatchdog which occurs on some OS X systems.\n * Fixed exception reporting to Union Station.\n * Improved documentation.\n\n\nRelease 4.0.9\n-------------\n\n * [Enterprise] Fixed a problem with passenger-irb.\n\n\nRelease 4.0.8\n-------------\n\n * Fixed a problem with graceful web server restarts. When you gracefully\n   restart the web server, it would cause Phusion Passenger internal sockets\n   to be deleted, thus causing Phusion Passenger to go down. This problem\n   was introduced in 4.0.6 during the attempt to fix issue #910.\n * The PassengerRestartDir/passenger_restart_dir now accepts relative\n   filenames again, just like in Phusion Passenger 3.x. Patch\n   contributed by Ryan Schwartz.\n * Documentation updates contributed by Gokulnath Manakkattil.\n * [Enterprise] Fixed a license key checking issue on some operating systems,\n   such as CentOS 6.\n\n\nRelease 4.0.7\n-------------\n\n * There was a regression in 4.0.6 that sometimes prevents\n   PassengerLoggingAgent from starting up. Unfortunately this slipped\n   our release testing. This regression has been fixed and we've updated\n   our test suite to check for these kinds of regressions.\n\n\nRelease 4.0.6\n-------------\n\n * Fixed a potential 100% CPU lock up in the crash handler, which only occurs\n   on OS X. Fixes issue #908.\n * Fixed a crash in request handling, when certain events are trigger after\n   the client has already disconnected. Fixes issue #889.\n * Phusion Passenger will no longer crash when the Phusion Passenger\n   native_support Ruby extension cannot be compiled, e.g. because the Ruby\n   development headers are not installed or because the current user has no\n   permission to save the native extension file. Fixes issue #890.\n * Fixed OS X 10.9 support. Fixes issue #906.\n * Removed dependency on bash, so that Phusion Passenger works out of the box\n   on BSD platforms without installing/configuring bash. Fixes issue #911.\n * Fix 'PassengerPoolIdleTime 0' not being respected correctly. Issue #904.\n * Admin tools improvement: it is now possible to see all currently running\n   requests by invoking `passenger-status --show=requests`.\n * A new feature called Flying Passenger allows you to decouple the life time\n   of Phusion Passenger from the web server, so that both can be restarted\n   indepedently from each other. Please refer to\n   http://blog.phusion.nl/2013/07/03/technology-preview-introducing-flying-passenger/\n   for an introduction.\n * [Apache] Fixed compatibility with Apache pipe logging. Previously this\n   would cause Phusion Passenger to lock up with 100% CPU during Apache\n   restart.\n * [Nginx] The Nginx configure script now checks whether 'ruby' is in $PATH.\n   Previously, if 'ruby' is not in $PATH, then the compilation process fails\n   with an obscure error.\n * [Nginx] passenger-install-nginx-module now works properly even when Phusion\n   Passenger is installed through the Debian packages. Before, the installer\n   would tell you to install Phusion Passenger through the gem or tarball\n   instead.\n * [Enterprise] Added pretty printing helpers to the Live IRB Console.\n * Fixed permissions on a subdirectory in the server instance directory. The\n   server instance directory is a temporary directory that Phusion Passenger\n   uses to store working files, and is deleted after Phusion Passenger exits.\n   A subdirectory inside it is world-writable (but not world-readable) and is\n   used for storing Unix domain sockets created by different apps, which may\n   run as different users. These sockets had long random filenames to prevent\n   them from being guessed. However because of a typo, this subdirectory was\n   created with the setuid bit, when it should have sticky bit (to prevent\n   existing files from being deleted or renamed by a user that doesn't own the\n   file). This has now been fixed.\n * If the server instance directory already exists, it will now be removed\n   first in order get correct directory permissions. If the directory still\n   exists after removal, Phusion Passenger aborts to avoid writing to a\n   directory with unexpected permissions. Fixes issue #910.\n * The installer now checks whether the system has enough virtual memory, and\n   prints a helpful warning if it doesn't.\n * Linux/AArch64 compatibility fixes. Patch contributed by Dirk Mueller.\n * Improved documentation.\n\n\nRelease 4.0.5\n-------------\n\n * [Standalone] Fixed a regression that prevented Passenger Standalone\n   from starting. Fixes issue #899.\n * Fixed security vulnerability CVE-2013-2119.\n\n   Urgency: low\n   Scope: local exploit\n   Summary: denial of service and arbitrary code execution by hijacking temp files\n   Affected versions: all versions\n   Fixed versions: 3.0.21 and 4.0.5\n\n   Description:\n   Phusion Passenger's code did not always create temporary files and directories in a secure manner. Temporary files and directories were sometimes created with a predictable filename. A local attacker can pre-create temporary files, resulting in a denial of service. In addition, this vulnerability allows a local attacker to run arbitrary code as another user, by hijacking temporary files.\n\n   By pre-creating certain temporary files with certain permissions, attackers can prevent Passenger Standalone from starting (denial of service).\n\n   By pre-creating certain temporary files with certain other permissions, attackers can trick `passenger start` and the build system (which is invoked by `passenger-install-apache2-module`/`passenger-install-nginx-module`) to run arbitrary code. The user that the code is run as, is equal to the user that ran `passenger start` or the build system. Attacks of this nature have to be timed exactly right. The attacker must overwrite the file contents right after Phusion Passenger has created the file contents, but right before the file is used. In the context of `passenger start`, the vulnerable window begins right after Passenger Standalone has created the Nginx config file, and ends when Nginx has read the config file. Once Nginx has started and initialized, the system is no longer vulnerable. `passenger stop` and other Passenger Standalone commands besides `start` are not vulnerable. In the context of the build system, the vulnerable window begins when `passenger-install-apache2-module`/`passenger-install-nginx-module` prints its first dependency checking message, and ends when it prints the first compiler command.\n\n   Only the `passenger start` command, the `passenger-install-apache2-module` command and the `passenger-install-nginx-module` commands are vulnerable. Phusion Passenger for Apache and Phusion Passenger for Nginx (once they are installed) are not vulnerable.\n\n   Fixed versions:\n   3.0.21 and 4.0.5 have been released to address this issue.\n\n   Workaround:\n   You can use this workaround if you are unable to upgrade. Before invoking any Phusion Passenger command, set the `TMPDIR` environment variable to a directory that is not world-writable. Special care must be taken when you use sudo: sudo resets all environment variables, so you should either invoke sudo with `-E`, or you must set the environment variable after gaining root privileges with sudo.\n\n\nRelease 4.0.4\n-------------\n\n * Fixed autodetection of noexec-mount /tmp directory. Fixes issue #850\n   and issue #625.\n * Fixed a WSGI bug. wsgi.input was a file object opened in text mode,\n   but should be opened in binary mode. Fixes issue #881.\n * Fixed a potential crash in Out-of-Band Work. Fixes issue #894.\n * Fixed a potential crash in rolling restarting, which only occurs if a\n   process was also being spawned at the same time. Fixes issue #896.\n * [Apache] The RailsBaseURI and RackBaseURI directives have been unified.\n   For a long time, RailsBaseURI told Phusion Passenger that the given\n   sub-URI belongs to a **Rails 2** application. Attempt to use this\n   directive with Rails 3 or with Rack applications would result in an\n   error. Because this confused users, RailsBaseURI and RackBaseURI\n   have now been unified and can now be used interchangably. Phusion\n   Passenger will automatically detect what kind of application it is.\n   The Nginx version already worked like this. Fixes issue #882.\n * [Standalone] The Passenger Standalone temp directory and\n   PassengerWatchdog server instance directory have been unified.\n   PassengerWatchdog already automatically updates the timestamps of\n   all files in its server instance directory every 6 hours to prevent\n   /tmp cleaners from deleting the directory. Therefore this\n   unification prevents the Passenger Standalone temp directory to be\n   deleted by /tmp cleaners as well. Fixes issue #654.\n * [Standalone] types_hash_max_size has been increased from 1024 to\n   2048. This solves a problem that causes Nginx not to start on some\n   platforms. Contributed by Jan-Willem Koelewijn.\n\n\nRelease 4.0.3\n-------------\n\n * Better protection is now provided against application processes that\n   are stuck and refuse to shut down cleanly. Since version 4.0.0,\n   Phusion Passenger already forcefully shuts down all processes during\n   web server shutdown. In addition to this, 4.0.3 now also forcefully\n   shuts down processes that take more than 1 minute to shut down, even\n   outside the context of web server shutdowns. This feature does not,\n   however, protect against requests that take too long. Use\n   PassengerMaxRequestTime (Apache) or passenger_max_request_time (Nginx)\n   for that.\n * Fixed a crash in the HelperAgent which results in frequent process\n   restarts in some traffic patterns. Fixes issue #862.\n * Fixed a problem that prevents processes from being spawned correctly\n   if the user's bashrc changes working directory. Fixes issue #851.\n * passenger-status now also displays CPU usage.\n * The installer now checks for checksums when automatically downloading\n   PCRE and Nginx. Contributed by Joshua Lund.\n * An error is now printed when trying to daemonize Phusion Passenger\n   Standalone on Ruby implementations that don't support forking.\n   Contributed by Benjamin Fleischer.\n * Although Phusion Passenger already supported JRuby, *installing*\n   Phusion Passenger with JRuby was not possible. This has been fixed.\n * Various other minor bug fixes.\n\n\nRelease 4.0.2\n-------------\n\n * Bumped the preferred Nginx version to 1.4.1 because of a critical\n   Nginx security vulnerability, CVE-2013-2028. Users are advised to\n   upgrade immediately.\n\n\nRelease 4.0.1\n-------------\n\n * Fixed a crasher bug in the Deployment Error Resistance feature.\n * Fixed a bug in PassengerDefaultUser and PassengerDefaultGroup.\n * Fixed a bug which could cause application processes to exit before\n   they've finished their request.\n * Fixed some small file descriptor leaks.\n * Bumped the preferred Nginx version to 1.4.0.\n * Editing the Phusion Passenger Standalone Nginx config template\n   is no longer discouraged.\n * Improved documentation.\n\n\nRelease 4.0.0 release candidate 6\n---------------------------------\n\n * WebSocket support on Nginx. Requires Nginx >= 1.3.15.\n * Improved RVM support.\n * Performance optimizations.\n * Various bug fixes.\n\n\nRelease 4.0.0 release candidate 5\n---------------------------------\n\n * The default config snippet for Apache has changed! It must now contain a\n   `PassengerDefaultRuby` option. The installer has been updated to output\n   this option. The `PassengerRuby` option still exists, but it's only used\n   for configuring different Ruby interpreters in different contexts. Please\n   refer to the manual for more information.\n * We now provide GPG digital signatures for all file releases by Phusion.\n   More information can be found in the manual.\n * `passenger-status` now displays process memory usage and time when it\n   was last used. The latter fixes issue #853.\n * Exceptions in Rack application objects are now caught to prevent\n   application processes from exiting.\n * The `passenger-config` tool now supports the `--ruby-command` argument,\n   which helps the user with figuring out the correct Ruby command to use\n   in case s/he wants to use multiple Ruby interpreters. The manual has\n   also been updated to mention this tool.\n * Fixed streaming responses on Apache.\n * Worked around an OS X Unix domain socket bug. Fixes issue #854.\n * Out-of-Band Garbage Collection now works properly when the application\n   has disabled garbage collection. Fixes issue #859.\n * Fixed support for /usr/bin/python on OS X. Fixes issue #855.\n * Fixed looping-without-sleeping in the ApplicationPool garbage collector\n   if PassengerPoolIdleTime is set to 0. Fixes issue #858.\n * Fixed some process memory usage measurement bugs.\n * Fixed process memory usage measurement on NetBSD. Fixes issue #736.\n * Fixed a file descriptor leak in the Out-of-Band Work feature. Fixes issue #864.\n * The PassengerPreStart helper script now uses the default Ruby\n   interpreter specified in the web server configuration, and no longer\n   requires a `ruby` command to be in `$PATH`.\n * Updated preferred PCRE version to 8.32.\n * Worked around some RVM bugs.\n * The ngx_http_stub_status_module is now enabled by default.\n * Performance optimizations.\n\n\nRelease 4.0.0 release candidate 4\n---------------------------------\n\n * Fixed compilation on systems where /tmp is mounted noexec.\n * Fixed some memory corruption bugs.\n * Improved debugging messages.\n * Phusion Passenger Standalone now sets underscores_in_headers.\n   Fixes issue #708.\n * Fixed some process spawning compatibility problems, as\n   reported in issue #842.\n * The Python WSGI loader now correctly shuts down client sockets\n   even when there are child processes that keep the socket open.\n * A new configuration option PassengerPython (Apache) and\n   passenger_python (Nginx) has been added so that users can\n   customize the Python interpreter on a per-application basis.\n   Fixes issue #852.\n * The Apache module now supports file uploads larger than 2 GB\n   when on 32-bit systems. Fixes issue #838.\n * The Nginx version now supports the `passenger_temp_dir` option.\n * Environment variables set in the Nginx configuration file\n   (through the `env` config option) are now correctly passed to\n   all application processes. Fixes issue #371.\n * Fixed support for RVM mixed mode installations. Fixes issue #828.\n * Phusion Passenger now outputs the Date HTTP header in case the\n   application didn't already do that (and was violating the HTTP spec).\n   Fixes issue #485.\n * Phusion Passenger now checks whether /dev/urandom isn't broken.\n   Fixes issue #516.\n\n\nRelease 3.9.5 (4.0.0 release candidate 3)\n-----------------------------------------\n\n * Fixed Rake autodetection.\n\n\nRelease 3.9.4 (4.0.0 release candidate 2)\n-----------------------------------------\n\n * More bug fixes.\n * More documentation updates.\n * Better crash diagnostics.\n\n\nRelease 3.9.3 (4.0.0 release candidate 1)\n-----------------------------------------\n\n * The Nginx version now supports the `passenger_app_root` configuration option.\n * The Enterprise memory limiting feature has been extended to work with non-Ruby applications as well.\n * Application processes that have been killed are now automatically detected within 5 seconds. Previously Phusion Passenger needed to send a request to the process before detecting that it's gone. This change means that when you kill a process by sending it a signal, Phusion Passenger will automatically respawn it within 5 seconds (provided that the process limit settings allow respawning).\n * Phusion Passenger Standalone's HTTP client body limit has been raised from 50 MB to 1 GB.\n * Python 3 support has been added.\n * The build system has been made compatible with JRuby and Ruby 2.0.\n * The installers now print a lot more information about detected system settings so that the user can see  whether something has been wrongly detected.\n * Some performance optimizations. These involve further extending the zero-copy architecture, and the use of hash table maps instead of binary tree maps.\n * Many potential crasher and freezer bugs have been fixed.\n * Error diagnostics have been further improved.\n * Many documentation improvements.\n\n\nRelease 3.9.2 (4.0.0 beta 2)\n----------------------------\n\n * New feature: JRuby and Rubinius support.\n * New feature: Out of Band Work.\n * Sending SIGBART to a Ruby process will now trigger the same behavior\n   as SIGQUIT - that is, it will print a backtrace. This is necessary\n   for proper JRuby support because JRuby cannot catch SIGQUIT.\n * Rolling restarts and depoyment error resistance are now also available\n   in Phusion Passenger Standalone in the Enterprise version.\n * System call failure simulation framework.\n * Improved crash reporting.\n * Many documentation improvements.\n * Many bug fixes.\n\n\nRelease 3.9.1 (4.0.0 beta 1)\n----------------------------\n\nThis is the first beta of Phusion Passenger 4. The changes are numerous.\n\n * Support for multiple Ruby versions.\n * The internals now use evented I/O.\n * Real-time response buffering.\n * Improved zero-copy architecture.\n * Rewritten ApplicationPool and process spawning subsystem.\n * Multithreading within Ruby apps (Phusion Passenger Enterprise only).\n * Python WSGI support lifted to \"beta\" status.\n * More protection against stuck processes.\n * Automatically picks up environment variables from your bashrc.\n * Allows setting environment variables directly in Apache.\n * Automatic asset pipeline support in Standalone.\n * Deleting restart.txt no longer triggers a restart.\n * More stable Union Station support.\n * Many internal robustness improvements.\n * Better relocatability without wasting space.\n\n\nRelease 3.0.21\n--------------\n\n * Rebootstrapped the libev configure to fix compilation problems on Solaris 11.\n * Fixed support for RVM mixed mode installations. Fixes issue #828.\n * Fixed encoding problems in Phusion Passenger Standalone.\n * Changed preferred Nginx version to 1.2.9.\n * Catch exceptions raised by Rack application objects.\n * Fix for CVE-2013-2119. Details can be found in the announcement for version 4.0.5.\n * Version 3.0.20 was pulled because its fixes were incomplete.\n\n\nRelease 3.0.19\n--------------\n\n * Nginx security fix: do not display Nginx version when\n   server_tokens are off.\n * Fixed compilation problems on some systems.\n * Fixed some Union Station-related bugs.\n\n\nRelease 3.0.18\n--------------\n\n * Fixed compilation problems on Fedora 17.\n * Fixed Union Station compatibility with Rails 3.2.\n * Phusion Passenger Enterprise Standalone now supports rolling\n   restarts and deployment error resistance.\n\n\nRelease 3.0.17\n--------------\n\n * Fixed a Ruby 1.9 encoding-related bug in the memory measurer.\n   (Phusion Passenger Enterprise)\n * Fixed OOM adjustment bugs on Linux.\n * Fixed compilation problems on Fedora 18 and 19.\n * Fixed compilation problems on SunOS.\n * Fixed compilation problems on AIX. Contribution by Perry Smith.\n * Fixed various compilation warnings.\n * Upgraded preferred Nginx version to 1.2.3.\n\n3.0.16 was an unofficial hotfix release, and so its announcement had been skipped.\n\n\nRelease 3.0.15\n--------------\n\n * Updated documentation.\n * Updated website links.\n\n\nRelease 3.0.14\n--------------\n\n * [Apache] Fixed a long-standing mod_rewrite-related problem.\n   Some mod_rewrite rules would not work, but it depends on the exact\n   mod_rewrite configuration so it would work for some people but not\n   for others. Issue #563. Thanks a lot to cedricmaion for providing\n   information on the nature of the bug and to peter.nash55 for\n   providing a VM that allowed us to reproduce the problem.\n * [Nginx] Preferred Nginx version to 1.2.2.\n   The previously preferred version was 1.2.1.\n * Cleared some confusing terminology in the documentation.\n * Fixed some Ruby 1.9 encoding problems.\n\n\nRelease 3.0.13\n--------------\n\n * [Nginx] Preferred Nginx version upgraded to 1.2.1.\n * Fixed compilation problems on FreeBSD 6.4. Fixes issue #766.\n * Fixed compilation problems on GCC >= 4.6.\n * Fixed compilation problems on OpenIndiana and Solaris 11. Fixes issue #742.\n * Union Station-related bug fixes.\n * Sending the soft termination signal twice to application processes no longer makes them crash. Patch contributed by Ian Ehlert.\n\n\nRelease 3.0.12\n--------------\n\n * [Apache] Support Apache 2.4. The event MPM is now also supported.\n * [Nginx] Preferred Nginx version upgraded to 1.0.15.\n * [Nginx] Preferred PCRE version upgraded to 8.30.\n * [Nginx] Fixed compatibility with Nginx < 1.0.10.\n * [Nginx] Nginx is now installed with http_gzip_static_module by default.\n * [Nginx] Fixed a memory disclosure security problem.\n   The issue is documented at http://www.nginx.org/en/security_advisories.html\n   and affects more modules than just Phusion Passenger. Users are advised\n   to upgrade as soon as possible. Patch submitted by Gregory Potamianos.\n * [Nginx] passenger_show_version_in_header now hides the Phusion Passenger version number from the 'Server:' header too.\n   Patch submitted by Gregory Potamianos.\n * Fixed a /proc deprecation warning on Linux kernel >= 3.0.\n\n\nRelease 3.0.11\n--------------\n\n * Fixed a compilation problem on platforms without alloca.h, such as FreeBSD 7.\n * Improved performance and solved some warnings on Xen systems by compiling\n   with `-mno-tls-direct-seg-refs`. Patch contributed by Micha\u0142 Pokrywka.\n\n\nRelease 3.0.10\n--------------\n\n * [Nginx] Dropped support for Nginx versions older than 1.0.0\n * [Nginx] Fixed support for Nginx 1.1.4+\n * [Nginx, Standalone] Upgraded default Nginx version to 1.0.10\n   The previously default version was 1.0.5.\n * [Nginx] New option passenger_max_requests\n   This is equivalent to the PassengerMaxRequests option in the Apache\n   version: Phusion Passenger will automatically shutdown a worker process\n   once it has processed the specified number of requests.\n   Contributed by Paul Kmiec.\n * [Apache] New option PassengerBufferResponse\n   The Apache version did not buffer responses. This could block the Ruby\n   worker process in case of slow clients. We now enable response buffering\n   by default. It can be turned off through this option. Feature contributed\n   by Ryo Onodera.\n * Fixed remaining Ruby 1.9.3 compatibility problems\n   We already supported Ruby 1.9.3 since 3.0.8, but due to bugs in Ruby\n   1.9.3's build system Phusion Passenger would fail to detect Ruby 1.9.3\n   features on some systems. Fixes issue #714.\n * Fixed a bug in PassengerPreStart\n   A regression was introduced in 3.0.8, causing the prespawn script to\n   connect to the host name instead of to 127.0.0.1. Fix contributed by\n   Andy Allan.\n * Fixed compatibility with GCC 4.6\n   Affected systems include Ubuntu 11.10.\n * Fixed various compilation problems.\n * Fixed some Ruby 1.9 encoding problems.\n * Fixed some Ruby 1.9.3 deprecation warnings.\n\n\nRelease 3.0.9\n-------------\n\n * [Nginx] Fixed a NULL pointer crash that occurs on HTTP/1.0 requests\n   when the Host header isn't given.\n * Fixed deprecation warnings on RubyGems >= 1.6.\n * Improved Union Station support stability.\n\n\nRelease 3.0.8\n-------------\n\n * [Nginx] Upgraded preferred Nginx version to 1.0.5.\n * [Nginx] Fixed various compilation problems on various platforms.\n * [Nginx] We now ensure that SERVER_NAME is equal to HTTP_HOST without the port part.\n   This is needed for Rack compliance. By default Nginx sets SERVER_NAME to\n   whatever is specified in the server_name directive, but that's not necessarily\n   the correct value. This fixes, for example, the use of the 'map' statement\n   in config.ru.\n * [Nginx] Added the options passenger_buffer_size, passenger_buffers and passenger_busy_buffers_size.\n   These options are similar to proxy_module's similarly named options. You can\n   use these to e.g. increase the maximum header size limit.\n * [Nginx] passenger_pre_start now supports virtual hosts that listen on Unix domain sockets.\n * [Apache] Fixed the pcre.h compilation problem.\n * [Standalone] Fixed 'passenger stop'.\n   It didn't work properly because it kept waiting for 'tail' to exit.\n   We now properly terminate 'tail' as well.\n * Fixed compatibility with Rake 0.9.\n * Fixed various Ruby 1.9 compatibility issues.\n * Various documentation improvements.\n * New Union Station filter language features.\n   It now supports status codes and response times.\n   Please refer to https://engage.unionstationapp.com/help#filtering\n   for more information.\n\n\nRelease 3.0.7\n-------------\n\n * Fixed a bug passenger-install-apache2-module. It could crash on\n   some systems due to a typo in the code.\n * Upgraded preferred Nginx version to 1.0.0.\n * Phusion Passenger Standalone now pre-starts application processes\n   at startup instead of doing that at the first request.\n * When sending data to Union Station, the HTTP status code is now also\n   logged.\n * Various Union Station-related stability improvements.\n * The Linux OOM killer was previously erroneously disabled for all\n   Phusion Passenger processes, including application processes. The\n   intention was to only disable it for the Watchdog. This has been\n   fixed, and the Watchdog is now the only process for which the OOM\n   killer is disabled.\n * Fixed some compilation problems on OpenBSD.\n * Due to a typo, the dependency on file-tail was not entirely removed\n   in 3.0.6. This has now been fixed.\n\n\nRelease 3.0.6\n-------------\n\n * Fixed various compilation problems such as XCode 4 support and OpenBSD support.\n * Fixed various Union Station-related stability issues.\n * Fixed an issue with host name detection on certain platforms.\n * Improved error logging in various parts.\n * The dependency on the file-tail library has been removed.\n * During installation, check whether /tmp is mounted with 'noexec'.\n   Phusion Passenger's installer relies on /tmp *not* being mounted\n   with 'noexec'. If it is then the installer will now show a helpful\n   error message instead of bailing out in a confusing manner. Users\n   can now tell the installer to use a different directory for storing\n   temporary files by customizing the $TMPDIR environment variable.\n * Phusion Passenger Standalone can now run Rackup files that are not named 'config.ru'.\n   The filename can be passed through the command line using the -R option.\n\n\nRelease 3.0.5\n-------------\n\n * [Apache] Fixed Union Station process statistics collection\n   Union Station users that are using Apache may notice that no process\n   information show up in Union Station. This is because of a bug in\n   Phusion Passenger's Apache version, which has now been fixed.\n * [Apache] PassengerAnalytics has been renamed to UnionStationSupport\n   This option has been renamed for consistency reasons.\n * [Nginx] passenger_analytics has been renamed to union_station_support\n   This option has been renamed for consistency reasons.\n * Fixed Union Station data sending on older libcurl versions\n   Some Union Station users have reported that their data don't show up.\n   Upon investigation this turned out to be a compatibility with older\n   libcurl versions. Affected systems include all RHEL 5 based systems,\n   such as RHEL 5.5 and CentOS 5.5. We've now fixed compatibility\n   with older libcurl versions.\n * Added support for the Union Station filter language\n   This language can be used to limit the kind of data that's sent to\n   Union Station. Please read\n   https://engage.unionstationapp.com/help#filtering for details.\n * Fixed a PassengerMaxPoolSize/passenger_max_pool_size violation bug\n   People who host a lot of different applications on Phusion Passenger\n   may notice that it sometimes spawns more processes than is allowed\n   by PassengerMaxPoolSize/passenger_max_pool_size. This has been fixed.\n\n\nRelease 3.0.4\n-------------\n\n * [Apache] Changed mod_dir workaround hook priority\n   Phusion Passenger temporarily disables mod_dir on all Phusion\n   Passenger-handled requests in order to avoid conflicts. In order to do this\n   it registers some Apache hooks with the APR_HOOK_MIDDLE priority, but it\n   turned out that this breaks some other modules like mod_python. The hook\n   priority has been changed to APR_HOOK_LAST to match mod_dir's hook\n   priorities. Issue reported by Jay Freeman.\n * Added support for Union Station: http://www.unionstationapp.com/\n * Some error messages have been improved.\n\n\nRelease 3.0.3\n-------------\n\n * [Nginx] Preferred Nginx version upgraded to 0.8.54\n   The previous preferred version was 0.8.53.\n * PATH_INFO and REQUEST_URI now contain the original escaped URI\n   Phusion Passenger passes the URI, as reported by Apache/Nginx, to\n   application processes through the PATH_INFO and REQUEST_URI variables.\n   These variables are supposed to contain the original, unescaped URI, e.g.\n   /clubs/%C3%BC. Both Apache and Nginx thought that it would be a good idea\n   to unescape the URI before passing it to modules like Phusion Passenger,\n   thereby causing PATH_INFO and REQUEST_URI to contain the unescaped URI,\n   e.g. /clubs/\u00fc. This causes all sorts of encoding problems. We now manually\n   re-escape the URI when setting PATH_INFO and REQUEST_URI. Issue #404.\n * The installer no longer detects directories as potential commands\n   Previously the installer would look in $PATH for everything that's\n   executable, including directories. If one has /usr/lib in $PATH\n   and a directory /usr/lib/gcc exists then the installer would recognize\n   /usr/lib/gcc as the compiler. We now explicitly check whether the item\n   is also a file.\n * PseudoIO now responds to #to_io\n   Phusion Passenger sets STDERR to a PseudoIO object in order to capture\n   anything written to STDERR during application startup. This breaks\n   some libraries which expect STDERR to respond to #to_io. This has now\n   been fixed. Issue #607.\n * Fixed various other minor bugs\n   See the git commit log for details.\n\n\nRelease 3.0.2\n-------------\n\n * [Nginx] Fixed compilation problems\n   The Nginx compilation process was broken due to not correctly reverting\n   the working directory of the Nginx configure script. This has been fixed:\n   issue #595.\n * [Nginx] Fixed crash if passenger_root refers to a nonexistant directory\n   Issue #599.\n * Fixed compilation problems on NetBSD\n   There was a typo in a NetBSD-specific fcntl() call. It also turns out that\n   NetBSD doesn't support some ISO C99 math functions like llroundl(); this\n   has been worked around by using other functions. Issue #593.\n * Fixed file descriptor closing issues on FreeBSD\n   Phusion Passenger child processes didn't correct close file descriptors\n   on FreeBSD because it queries /dev/fd to do that. On FreeBSD /dev/fd\n   only returns meaningful results if fdescfs is mounted, which it isn't\n   by default. Issue #597.\n\n\nRelease 3.0.1\n-------------\n\n * MUCH faster compilation\n   We've applied code aggregation techniques, allowing Phusion Passenger\n   to be compiled much quicker now. For example, compiling the Nginx\n   component (not Nginx itself) on a MacBook Pro now takes only 29\n   seconds instead of 51 seconds, an improvement of 75%! Compiling the\n   Apache module on a slower Dell Inspiron now takes 39 seconds instead of\n   1 minute 22 seconds, or 110% faster!\n * Fixed malfunction after web server restart\n   On Linux systems that have a non-standard filesystem on /tmp, Phusion\n   Passenger could malfunction after restarting the web server because of\n   a bug that's only triggered on certain filesystems. Issue #569.\n * Boost upgraded to version 1.44.0.\n   We were on 1.42.0.\n * Much improved startup error messages\n   Phusion Passenger performs many extensive checks during startup to ensure\n   integrity. However the error message in some situation could be vague.\n   These startup error messages have now been improved dramatically, so that\n   if something goes wrong during startup you will now more likely know why.\n * Curl < 7.12.1 is now supported\n   The previous version fails to compile with Curl versions earlier than\n   7.12.1. Issue #556.\n * passenger-make-enterprisey fixed\n   This is the command that people can run after donating. It allows people\n   to slightly modify Phusion Passenger's display name as a joke. In 3.0.0 it\n   was broken because of a typo. This has been fixed.\n * Removed passenger-stress-test\n   This tool was used during the early life of Phusion Passenger for stress\n   testing websites. Its performance has never been very good and there are\n   much better tools for stress testing, so this tool has now been removed.\n * [Apache] RailsEnv and RackEnv configuration options are now equivalent\n   In previous versions, RailsEnv only had effect on Rails 1 and Rails 2 apps\n   while RackEnv only had effect on Rack apps. Because Rails 3 apps are\n   considered Rack apps, setting RailsEnv had no effect on Rails 3 apps.\n   Because this is confusing to users, we've now made RailsEnv and RackEnv\n   equivalent. Issue #579.\n * [Nginx] Fixed compilation problems on systems with unpowerful shells\n   Most notably Solaris. Its default shell does not support some basic\n   constructs that we used in the Nginx configure script.\n * [Nginx] Upgraded default Nginx version to to 0.8.53\n   The previous default was 0.8.52.\n * [Nginx] passenger_enabled now only accepts 'on' or 'off' values\n   Previously it would recognize any value not equal to 'on' as meaning\n   'off'. This caused confusion among users who thought they could also\n   specify 'true', so we now throw a proper error if the value is\n   unrecognized. Fixes issue #583.\n\n\nRelease 3.0.0\n-------------\n\nThis is a major release with many changes. Please read our blog for details.\n\n\nRelease 2.2.15\n--------------\n\n * [Apache] Fixed incorrect temp dir cleanup by passenger-status\n   On some systems, running passenger-status could print the following\n   message:\n   \n      *** Cleaning stale folder /tmp/passenger.1234\n   \n   ...after which Phusion Passenger breaks because that directory is\n   necessary for it to function properly. The cause of this problem\n   has been found and has been fixed.\n * [Apache] Fixed some upload handling problems\n   Previous versions of Phusion Passenger check whether the size of\n   the received upload data matches the contents of the Content-Length\n   header as received by the client. It turns out that there could\n   be a mismatch e.g. because of mod_deflate input compression, so\n   we can't trust Content-Length anyway and we're being too strict.\n   The check has now been removed.\n * [Nginx] Fixed compilation issues with Nginx >= 0.7.66\n   Thanks to Potamianos Gregory for reporting this issue. Issue #500.\n * [Nginx] Default Nginx version changed to 0.7.67\n   The previous default version was 0.7.65.\n * Fixed more Bundler problems\n   Previous versions of Phusion Passenger would preload some popular\n   libraries such as mysql and sqlite3 in order to utilize copy-on-write\n   optimizations better. However this behavior conflicts with Bundler\n   so we've removed it.\n\n\nRelease 2.2.14\n--------------\n\n * Added support for Rubinius\n   Patch contributed by Evan Phoenix.\n * Fixed a mistake in the SIGQUIT backtrace message.\n   Patch contributed by Christoffer Sawicki.\n * [Nginx] Fix a localtime() crash on FreeBSD\n   This was caused by insufficient stack space for threads. Issue #499.\n\n\nRelease 2.2.13\n--------------\n\n * Fixed some Rails 3 compatibility issues that were recently introduced.\n * Fixed a typo that causes config/setup_load_paths.rb not to be loaded\n   correctly.\n\n\nRelease 2.2.12\n--------------\n\n * Improved Bundler support.\n   Previous versions might not be able to correctly load gems bundled\n   by Bundler. We've also documented how our Bundler support works and\n   how to override our support if you need special behavior.\n   Please refer to the Phusion Passenger Users Guide, section\n   \"Bundler support\".\n * Worked around some user account handling bugs in Ruby. Issue #192.\n * Fixed some Ruby 1.9 tempfile.rb compatibility problems.\n * Fixed some compilation problems on some ARM Linux platforms.\n * [Apache] Suppress bogus mod_xsendfile-related error messages.\n   When mod_xsendfile is being used, Phusion Passenger might print\n   bogus error messages like \"EPIPE\" or \"Apache stopped forwarding\n   the backend's response\" to the log file. These messages are\n   normal, are harmless and can be safely ignored, but they pollute\n   the log file. So in this release we've added code to suppress\n   these messages when mod_xsendfile is being used. Issue #474.\n * [Nginx] Fixed \"passenger_user_switching off\" permission problems\n   If Nginx is running as root and passenger_user_switching is turned\n   off, then Phusion Passenger would fail to initialize because of\n   a permission problem. This has been fixed. Issue #458.\n * [Nginx] Nginx >= 0.8.38 is now supported.\n   Thanks to Sergey A. Osokin for reporting the problem.\n * [Nginx] passenger-install-nginx-module upgraded\n    It now defaults to installing Nginx 0.7.65 instead of 0.7.64.\n\n\nRelease 2.2.11\n--------------\n\n * This release fixes a regression that appeared in 2.2.10 which only\n   affects Apache. When under high load, Apache might freeze and stop\n   responding to requests. It is caused by a race condition which is\n   why it escaped our last release testing.\n   \n   This problem does not affect Nginx; you only have to upgrade if\n   you're using Apache.\n   \n   http://groups.google.com/group/phusion-passenger/t/d5bb2f17c8446ea0\n\n\nRelease 2.2.10\n--------------\n\n * Fixed some Bundler compatibility problems.\n * Fixed some file descriptor passing problems, which previously\n   could lead to mysterious crashes.\n * Fixed some compilation problems on newer GCC versions. Issue #430.\n * Support #size method in rack.input.\n\n\n\nRelease 2.2.9\n-------------\n\n * Fixed compatibility with Rails 3.\n   Actually, previous Phusion Passenger releases were already compatible\n   with Rails 3, depending on the spawn method that would be invoked. Here's\n   the story:\n   \n   Since Phusion Passenger 2.2.8, when the file config.ru exists, Phusion\n   Passenger will treat the app as a Rack app, not as a Rails app. This is\n   in contrast to earlier versions which gave Rails detection more priority\n   than Rack detection. Phusion Passenger loads Rack apps and Rails apps in\n   different ways. The Rails loader was not compatible with Rails 3, which\n   is what we've fixed in this release.\n   \n   That said, a Rails 3 app would have worked out-of-the-box on Phusion\n   Passenger 2.2.8 as well because Rails 3 apps include a config.ru file\n   by default, causing Phusion Passenger 2.2.8 to use the Rack loader.\n   Earlier versions of Phusion Passenger would just completely bail out\n   because they'd use the Rails loader.\n   \n   That said, with 2.2.9 there are still some caveats:\n   - Smart spawning (the mechanism with which REE's 33% memory reduction\n     is implemented) is *not* supported for Rack apps. This means that if\n     you want to utilize smart spawning with Rails 3, then you should\n     remove your config.ru file.\n   - Rails 3 depends on Rack 1.1.0. You must have Rack 1.1.0 installed as\n     a gem, even if you've bundled it with the gem bundler. This is because\n     Phusion Passenger itself depends on Rack.\n   \n   Both of these caveats are temporary. We have plans to solve both of these\n   properly in the future.\n * What's up with the Gem Bundler?\n   There has been some reports that Phusion Passenger is not compatible with\n   Yehuda Katz's gem bundler (http://github.com/wycats/bundler). This might\n   have been true for an earlier version of the gem bundler, but the latest\n   version seems to work fine. Please note that you need to insert the\n   following snippet in config/preinitializer.rb, as instructed by the gem\n   bundler's README:\n   \n     require \"#{RAILS_ROOT}/vendor/gems/environment\"\n   \n   The Rails::Boot monkey patching code as posted at\n   http://yehudakatz.com/2009/11/03/using-the-new-gem-bundler-today/\n   does not seem to be required anymore.\n * Fixed support for ActiveRecord subclasses that connect to another database.\n   ActiveRecord subclasses that connect to a database other than the default\n   one did not have their connection correctly cleared after forking.\n   This can result in weird errors along the lines of \"Lost connection to\n   MySQL server during query\". Issue #429.\n * [Nginx] Fixed PCRE URL.\n   passenger-install-nginx-module downloads PCRE 7.8 if PCRE is not already\n   installed. However PCRE 7.8 has been removed from their FTP server,\n   so we've updated the URL to point to the latest version, 8.0.\n\n\nRelease 2.2.8\n-------------\n\n * [Nginx] Fixed some signal handling problems.\n   Restarting Nginx on OS X with SIGHUP can sometimes take a long time or\n   even fail completely. This is because of some signal handling problems,\n   which have now been fixed.\n * [Nginx] Added OpenSSL as dependency.\n   OpenSSL is required in order to install Nginx, but this was not checked\n   by passenger-install-nginx-module. As a result,\n   passenger-install-nginx-module fails on e.g. out-of-the-box Ubuntu\n   installations until the user manually installs OpenSSL. Issue #422.\n * [Nginx] Fixed support for internal redirects and subrequests.\n   It is now possible to, for example, point X-Accel-Redirects to Phusion\n   Passenger-served URLs. Patch contributed by W. Andrew Loe III: issue #433.\n * [Apache] Fixed a GnuTLS compatibility issue.\n   mod_gnutls can cause Phusion Passenger to crash because of an unchecked\n   NULL pointer. This problem has now been fixed: issue #391.\n * Fixed thread creation issue on Intel Itanium platforms.\n   This fixes issue #427.\n * Fixed compilation problems on Linux running on the Renesas SH4 CPU.\n   Patch contributed by iwamatsu: issue #428.\n * The Rack library has been unvendored.\n   The original reason for vendoring was to work around broken Rails\n   applications that explicitly specify Rack as a gem dependency. We've\n   found a better workaround that does not require vendoring Rack.\n   This also fixes a compatibility problem with Rails 3, because Rails\n   3 depends on a newer Rack version than the one we had vendored.\n   Issue #432.\n * Fixed compatibility with Ruby 1.9.1 patchlevel >= 152\n   Ruby 1.9.1 patchlevel >= 152 has a bug in its tempfile library. If you've\n   seen an error message along the lines of\n\n      *** Exception IOError in Passenger RequestHandler (closed stream)\n   \n   then this is a Ruby bug at work. This bug has been fixed in Ruby 1.9.2,\n   but Ruby 1.9.1 still contains this bug. We've added a workaround so that\n   the bug is not triggered with this Ruby version. Issue #432.\n\n\nRelease 2.2.7\n-------------\n\n * Removed forgotten debugging code in passenger-install-apache2-module,\n   which caused it not to compile anything.\n\n\nRelease 2.2.6\n-------------\n\n * Some /tmp cleaner programs such as tmpwatch try to remove subdirectories\n   in /tmp/passenger.xxx after a while because they think those\n   subdirectories are unused. This could cause Phusion Passenger to\n   malfunction, requiring a web server restart. Measures have now been\n   taken to prevent those tmp cleaner programs from removing anything\n   in /tmp/passenger.xxx. Issue #365.\n * When autodetecting the application type, Rack is now given more priority\n   than Rails. This allows one to drop a config.ru file in a Rails directory\n   and have it detected as a Rack application instead of a Rails application.\n   Patch contributed by Sam Pohlenz: issue #338.\n * The default socket backlog has been increased from 'SOMAXCONN' (which\n   is 128 on most platforms) to 1024. This should fix most\n   'helper_server.sock failed: Resource temporarily unavailable'\n   errors.\n * Fixed compilation problems on Solaris. Issue #369 and issue #379.\n * Fixed crashes on PowerPC.\n * Some Ruby 1.9 compatibility fixes. Issue #398.\n * The installer now displays correct dependency installation instructions\n   for Mandriva Linux.\n * [Apache] The location of the 'apxs' and 'apr-config' commands can now\n   also be passed to the installer through the --apxs-path and\n   --apr-config-path parameters, in addition to the $APXS2 and $APR_CONFIG\n   environment variables. Issue #3.\n * [Nginx] Various problems that only occur on 64-bit platforms have been fixed.\n * [Nginx] The installer now installs Nginx 0.7.64 by default.\n\n\nRelease 2.2.5\n-------------\n\n * [Apache] Small file uploads are now buffered; fixes potential DoS attack\n   Phusion Passenger buffers large file uploads to temp files so that it\n   doesn't block applications while an upload is in progress, but it sent\n   small uploads directly to the application without buffering it. This could\n   result in a potential DoS attack: the client can send many small, incomplete\n   file uploads to the server, and this would block all application processes\n   until a timeout occurs. In order to solve this problem, Phusion Passenger\n   now buffers small file uploads in memory. Bug #356.\n\n * [Apache] Fixed support for mod_rewrite passthrough rules\n   Mod_rewrite passthrough rules were not properly supported because of a bug\n   fix for supporting encoded slashes (%2f) in URLs. Unfortunately, due to\n   bugs/limitations in Apache, we can support either encoded slashes or\n   mod_rewrite passthrough rules, but not both; supporting one will break the\n   other.\n\n   Support for mod_rewrite passthrough rules is now enabled by default; that\n   is, support for encoded slashes is disabled by default. A new configuration\n   option, \"PassengerAllowEncodedSlashes\", has been added. Turning this option\n   on will enable support for encoded slashes and disable support for\n   mod_rewrite passthrough rules.\n\n   Issue #113 and issue #230.\n\n * [Apache] Added a configuration option for resolving symlinks in the document root path\n   Phusion Passenger 2.2.0 and higher no longer resolves symlinks in\n   the document root path in order to properly support Capistrano-style\n   directory structures. The exact behavior is documented in the Users Guide,\n   section \"How Phusion Passenger detects whether a virtual host is a web\n   application\".\n\n   However, some people relied on the old behavior. A new configuration option,\n   PassengerResolveSymlinksInDocumentRoot, has been added to allow reverting\n   back to the old behavior.\n\n   Patch contributed by Locaweb (http://www.locaweb.com.br/).\n\n * [Apache] mod_env variables are now also passed through CGI environment headers\n   Prior to version 2.2.3, environment variables set by mod_env are passed to\n   the application as CGI environment headers, not through Ruby's ENV variable.\n   In the last release we introduced support for setting ENV environment\n   variables with mod_env, and got rid of the code for setting CGI environment\n   headers. It turns out that some people relied on the old behavior, we so now\n   environment variables set with mod_env are set in both ENV and in the CGI\n   environment.\n   \n   Fixes bug #335.\n\n * [Apache] Fixed compilation problems on some Linux systems with older versions of Apache\n   If you used to see compilation errors like this:\n\n       ext/apache2/Configuration.cpp:554: error: expected primary-expression before '.' token\n\n   then this version should compile properly.\n\n * [Apache] Fixed I/O timeouts for communication with backend processes\n   Got rid of the code for enforcing I/O timeouts when reading from or writing to\n   a backend process. This caused more problems than it solved.\n\n * [Nginx] Support for streaming responses (e.g. Comet or HTTP push)\n   Buffering of backend responses is now disabled. This fixes support for\n   streaming responses, something which the Apache version has supported\n   for a while now. One can generate streaming responses in Ruby on Rails\n   like this:\n\n       render :text => lambda { |response, output|\n           10_000.times do |i|\n               output.write(\"hello #{i}!\\n\")\n           end\n       }\n\n * [Nginx] Installer now installs Nginx 0.7.61 by default\n   Previously it installed 0.6.37 by default.\n\n * [Nginx] Fixed the installer's --extra-configure-flags flag when combined with --auto-download\n   Arguments passed to --extra-configure-flags were not being passed to the\n   Nginx configure script when --auto-download is given. This has been\n   fixed: bug #349.\n\n * [Nginx] Fixed unnecessary download of PCRE\n   The installer now checks whether PCRE is installed in /opt/local (e.g.\n   MacPorts) as well before concluding that it isn't installed and going ahead\n   with downloading PCRE.\n\n * Fixed STDERR capturing\n   While spawning an application, Phusion Passenger captures any output written\n   to STDERR so that it can show them later if the application failed to start.\n   This turns out to be much more difficult than expected, with all kinds of\n   corner cases that can mess up this feature.\n\n   For example, if the Rails log file is not writable, then this can cause\n   Rails to crash with a bizarre and unhelpful error message whenever it tries\n   to write to STDERR:\n\n       /!\\ FAILSAFE /!\\  Thu Aug 20 14:58:39 +1000 2009\n       Status: 500 Internal Server Error\n       undefined method `[]' for nil:NilClass\n\n   Some applications reopen STDERR to a log file. This didn't work.\n\n   Of all of these problems have been fixed now. (Bug #332)\n\n * Fixed some bugs in application sources preloading\n   Rails >= 2.2 already preloads the application sources, in which case Phusion\n   Passenger wasn't supposed to perform it's own preloading, but the Rails\n   >= 2.2 detection code was bugged. This has been fixed.\n\n   Rails < 2.2 doesn't preload the application sources by itself, but there\n   should be a certain order with which the sources are preloaded, otherwise\n   preloading could fail in some applications. We now enforce a specific load\n   order: first models, then controllers, then helpers.\n\n   Bug #359.\n \n * Fixed a few bugs in WSGI compliance\n   PATH_INFO is supposed to be set to the request URI, but without the query\n   string and without the base URI. This has been fixed: bug #360.\n\n * Fixed some Ruby 1.9-specific crashes caused by encoding issues. Bug #354.\n * Fixed loading of config/environment.rb on Ruby 1.9.2, because Ruby 1.9.2\n   no longer has \".\" in the default load path. Patch by metaljastix, issue #368.\n * The Users Guide for Apache now mentions something about correct permissions\n   for application directories.\n * Fixed compilation problems on IA-64 (bug #118). We also reduced the stack\n   sizes for the threads by half, so Phusion Passenger should use even less\n   virtual memory now.\n * Fixed compilation problems on Linux systems with ARM CPU.\n * Fixed a few compatibility problems with 64-bit OpenBSD.\n * Fixed a few typos and minor bugs.\n\n\nOlder releases\n--------------\nPlease consult the blog posts on http://old.blog.phusion.nl/ for the information about older releases.\n", "#!/usr/bin/env ruby\n#  Phusion Passenger - https://www.phusionpassenger.com/\n#  Copyright (c) 2010-2015 Phusion Holding B.V.\n#\n#  \"Passenger\", \"Phusion Passenger\" and \"Union Station\" are registered\n#  trademarks of Phusion Holding B.V.\n#\n#  Permission is hereby granted, free of charge, to any person obtaining a copy\n#  of this software and associated documentation files (the \"Software\"), to deal\n#  in the Software without restriction, including without limitation the rights\n#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#  copies of the Software, and to permit persons to whom the Software is\n#  furnished to do so, subject to the following conditions:\n#\n#  The above copyright notice and this permission notice shall be included in\n#  all copies or substantial portions of the Software.\n#\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n#  THE SOFTWARE.\n\n## Magic comment: begin bootstrap ##\nsource_root = File.expand_path(\"..\", File.dirname(__FILE__))\n$LOAD_PATH.unshift(\"#{source_root}/src/ruby_supportlib\")\nbegin\n  require 'rubygems'\nrescue LoadError\nend\nrequire 'phusion_passenger'\n## Magic comment: end bootstrap ##\n\nPhusionPassenger.locate_directories\n\nrequire 'digest/sha2'\nrequire 'optparse'\nrequire 'fileutils'\nrequire 'tmpdir'\nPhusionPassenger.require_passenger_lib 'platform_info/ruby'\nPhusionPassenger.require_passenger_lib 'platform_info/openssl'\nPhusionPassenger.require_passenger_lib 'abstract_installer'\nPhusionPassenger.require_passenger_lib 'utils/terminal_choice_menu'\nPhusionPassenger.require_passenger_lib 'utils/shellwords'\n\nDOWNLOAD_OPTION = {\n  :connect_timeout => 30,\n  :idle_timeout    => 30\n}\n\nclass Installer < PhusionPassenger::AbstractInstaller\n  include PhusionPassenger\n  TerminalChoiceMenu = PhusionPassenger::Utils::TerminalChoiceMenu\n\n  def dependencies\n    specs = [\n      'depcheck_specs/compiler_toolchain',\n      'depcheck_specs/ruby',\n      'depcheck_specs/gems',\n      'depcheck_specs/libs',\n      'depcheck_specs/utilities'\n    ]\n    ids = [\n      'cc',\n      'c++',\n      'download-tool',\n      'libcurl-dev',\n      'openssl-dev',\n      'zlib-dev',\n      'rake',\n      'ruby-openssl',\n      'rubygems'\n    ]\n    if @languages.include?(\"ruby\")\n      if PlatformInfo.passenger_needs_ruby_dev_header?\n        ids << 'ruby-dev'\n      end\n      ids << 'rack'\n    end\n    return [specs, ids]\n  end\n\n  def install_doc_url\n    \"https://www.phusionpassenger.com/library/install/nginx/\"\n  end\n\n  def troubleshooting_doc_url\n    \"https://www.phusionpassenger.com/library/admin/nginx/troubleshooting/\"\n  end\n\n  def run_steps\n    # Make sure the configure script finds the correct\n    # passenger-config command.\n    ENV['PATH'] = PhusionPassenger.bin_dir + \":\" + ENV['PATH']\n\n    show_welcome_screen\n    query_interested_languages\n    check_gem_install_permission_problems || exit(1)\n    check_directory_accessible_by_web_server\n    check_nginx_module_sources_available || exit(1)\n    check_dependencies || exit(1)\n    if needs_compiling_support_files?\n      check_whether_we_can_write_to(PhusionPassenger.build_system_dir) || exit(1)\n    end\n    check_whether_os_is_broken\n    check_whether_system_has_enough_ram\n\n    download_and_install = should_we_download_and_install_nginx_automatically?\n    if pcre_is_installed?\n      @pcre_source_dir = nil\n    else\n      @pcre_source_dir = download_and_extract_pcre\n    end\n    if download_and_install\n      nginx_source_dir = download_and_extract_nginx\n      if nginx_source_dir.nil?\n        show_possible_solutions_for_download_and_extraction_problems\n        exit(1)\n      end\n      nginx_prefix = ask_for_nginx_install_prefix\n      check_whether_other_nginx_installations_exist(nginx_prefix)\n      if @extra_configure_flags == \"none\"\n        extra_nginx_configure_flags = nil\n      else\n        extra_nginx_configure_flags = @extra_configure_flags\n      end\n    else\n      nginx_source_dir = ask_for_nginx_source_dir\n      nginx_prefix = ask_for_nginx_install_prefix\n      check_whether_other_nginx_installations_exist(nginx_prefix)\n      extra_nginx_configure_flags = ask_for_extra_nginx_configure_flags(nginx_prefix)\n    end\n    check_whether_we_can_write_to(nginx_prefix) || exit(1)\n    nginx_config_already_exists_before_installing = nginx_config_exists?(nginx_prefix)\n    if needs_compiling_support_files?\n      if !compile_passenger_support_files\n        show_possible_solutions_for_compilation_and_installation_problems\n        exit(1)\n      end\n    end\n    if install_nginx(nginx_source_dir, nginx_prefix, extra_nginx_configure_flags)\n      if nginx_config_already_exists_before_installing || !locate_nginx_config_file(nginx_prefix)\n        show_passenger_config_snippets(nginx_prefix)\n      else\n        insert_passenger_config_snippets(nginx_prefix)\n      end\n      show_deployment_example\n    else\n      show_possible_solutions_for_compilation_and_installation_problems\n      exit(1)\n    end\n  end\n\n  def before_install\n    super\n    myself = `whoami`.strip\n    @working_dir = PhusionPassenger::Utils.mktmpdir(\"passenger.\", PlatformInfo.tmpexedir)\n  end\n\n  def after_install\n    super\n    FileUtils.remove_entry_secure(@working_dir) if @working_dir\n  end\n\nprivate\n  def show_welcome_screen\n    render_template 'nginx/welcome', :version => VERSION_STRING\n    wait\n  end\n\n  def query_interested_languages\n    menu = TerminalChoiceMenu.new([\"Ruby\", \"Python\", \"Node.js\", \"Meteor\"])\n    menu[\"Ruby\"].checked = interesting_language?('ruby')\n    menu[\"Python\"].checked = interesting_language?('python')\n    menu[\"Node.js\"].checked = interesting_language?('nodejs', 'node')\n    menu[\"Meteor\"].checked = interesting_language?('meteor')\n\n    new_screen\n    puts \"<banner>Which languages are you interested in?</banner>\"\n    puts\n    if interactive?\n      puts \"Use <space> to select.\"\n      puts \"<dgray>If the menu doesn't display correctly, press '!'</dgray>\"\n    else\n      puts \"Override selection with --languages.\"\n    end\n    puts\n\n    if interactive?\n      begin\n        menu.query\n      rescue Interrupt\n        raise Abort\n      end\n    else\n      menu.display_choices\n      puts\n    end\n\n    @languages = menu.selected_choices.map{ |x| x.downcase.gsub(/\\./, '') }\n  end\n\n  def interesting_language?(name, command = nil)\n    if @languages\n      return @languages.include?(name)\n    else\n      return !!PlatformInfo.find_command(command || name)\n    end\n  end\n\n  def check_nginx_module_sources_available\n    if PhusionPassenger.custom_packaged? &&\n       (!PhusionPassenger.nginx_module_source_dir || !File.exist?(PhusionPassenger.nginx_module_source_dir))\n      new_screen\n      render_template 'nginx/nginx_module_sources_not_available'\n      return false\n    else\n      return true\n    end\n  end\n\n  def needs_compiling_support_files?\n    return !PhusionPassenger.build_system_dir.nil?\n  end\n\n  def compile_passenger_support_files\n    new_screen\n    puts \"<banner>Compiling Passenger support files...</banner>\"\n    Dir.chdir(PhusionPassenger.build_system_dir) do\n      return sh(\"env NOEXEC_DISABLE=1 #{PlatformInfo.rake_command} nginx:clean nginx RELEASE=yes\")\n    end\n  end\n\n  def should_we_download_and_install_nginx_automatically?\n    new_screen\n    render_template 'nginx/query_download_and_install',\n      :nginx_version => PREFERRED_NGINX_VERSION\n    puts\n\n    if @auto_download\n      puts \"<b>=> Proceeding with choice 1.</b>\"\n      return true\n    elsif @nginx_source_dir\n      puts \"<b>=> Proceeding with choice 2.</b>\"\n      return false\n    elsif @auto\n      puts \"<b>=> Proceeding with choice 1.</b>\"\n      return true\n    else\n      choice = prompt(\"Enter your choice (1 or 2) or press Ctrl-C to abort\") do |input|\n        if input == \"1\" || input == \"2\"\n          true\n        elsif input.empty?\n          puts \"<red>No choice has been given.</red>\"\n          false\n        else\n          puts \"<red>'#{input}' is not a valid choice.</red>\"\n          false\n        end\n      end\n      return choice == \"1\"\n    end\n  end\n\n  def download_and_extract_pcre\n    new_screen\n    puts \"<banner>PCRE (required by Nginx) not installed, downloading it...</banner>\"\n\n    url = \"http://downloads.sourceforge.net/project/pcre/pcre/#{PREFERRED_PCRE_VERSION}/pcre-#{PREFERRED_PCRE_VERSION}.tar.gz\"\n    dirname = \"pcre-#{PREFERRED_PCRE_VERSION}\"\n    tarball = \"#{@working_dir}/pcre.tar.gz\"\n\n    if download(url, tarball, DOWNLOAD_OPTION)\n      Dir.chdir(@working_dir) do\n        puts \"<banner>Verifying PCRE checksum...</banner>\"\n        if sha256_file(tarball) != PCRE_SHA256_CHECKSUM\n          new_screen\n          render_template \"nginx/pcre_checksum_could_not_be_verified\"\n          wait\n          return nil\n        end\n\n        puts \"<banner>Extracting PCRE source tarball...</banner>\"\n        if sh(\"tar\", \"xzvf\", tarball)\n          return \"#{@working_dir}/#{dirname}\"\n        else\n          new_screen\n          render_template \"nginx/pcre_could_not_be_extracted\"\n          wait\n          return nil\n        end\n      end\n    else\n      new_screen\n      render_template \"nginx/pcre_could_not_be_downloaded\"\n      wait\n      return nil\n    end\n  rescue Interrupt\n    exit 2\n  end\n\n  def download_and_extract_nginx\n    new_screen\n    puts \"<banner>Downloading Nginx...</banner>\"\n\n    url = \"http://www.nginx.org/download/nginx-#{PREFERRED_NGINX_VERSION}.tar.gz\"\n    dirname = \"nginx-#{PREFERRED_NGINX_VERSION}\"\n    tarball = \"#{@working_dir}/nginx.tar.gz\"\n\n    if download(url, tarball, DOWNLOAD_OPTION)\n      Dir.chdir(@working_dir) do\n        puts \"<banner>Verifying Nginx checksum...</banner>\"\n        if sha256_file(tarball) != NGINX_SHA256_CHECKSUM\n          return nil\n        end\n\n        puts \"<banner>Extracting Nginx source tarball...</banner>\"\n        if sh(\"tar\", \"xzvf\", tarball)\n          return \"#{@working_dir}/#{dirname}\"\n        else\n          return nil\n        end\n      end\n    else\n      return nil\n    end\n  rescue Interrupt\n    exit 2\n  end\n\n  def show_possible_solutions_for_download_and_extraction_problems\n    new_screen\n    render_template \"nginx/possible_solutions_for_download_and_extraction_problems\"\n    puts\n  end\n\n  def ask_for_nginx_install_prefix\n    new_screen\n    puts \"<banner>Where do you want to install Nginx to?</banner>\"\n    puts\n    if @prefix\n      puts \"<b>=> #{@prefix}</b>\"\n      return @prefix\n    elsif @auto\n      puts \"<b>=> /opt/nginx</b>\"\n      return \"/opt/nginx\"\n    else\n      prefix = prompt(\"Please specify a prefix directory [/opt/nginx]\") do |input|\n        if input.empty? || input =~ %r(/)\n          true\n        else\n          puts \"<red>Please specify an absolute path.</red>\"\n          false\n        end\n      end\n      if prefix.empty?\n        prefix = \"/opt/nginx\"\n      end\n      return prefix\n    end\n  end\n\n  def check_whether_other_nginx_installations_exist(nginx_prefix)\n    check_for = [\n      \"/usr/bin/nginx\",\n      \"/usr/sbin/nginx\"\n    ]\n    existing_binary = nil\n    check_for.each do |filename|\n      if File.exist?(filename)\n        existing_binary = filename\n        break\n      end\n    end\n    if existing_binary\n      new_screen\n      render_template 'nginx/other_nginx_installations_exist',\n        :existing_binary => existing_binary,\n        :prefix => nginx_prefix\n      wait\n    end\n  end\n\n  def ask_for_nginx_source_dir\n    new_screen\n    puts \"<banner>Where is your Nginx source code located?</banner>\"\n    puts\n    if @nginx_source_dir\n      puts \"<b>=> #{@nginx_source_dir}</b>\"\n      return @nginx_source_dir\n    else\n      return prompt(\"Please specify the directory\") do |input|\n        if input =~ %r(/)\n          if File.exist?(\"#{input}/src/core/nginx.c\")\n            true\n          else\n            puts \"<red>'#{input}' does not look like an Nginx source directory.</red>\"\n            false\n          end\n        else\n          puts \"<red>Please specify an absolute path.</red>\"\n          false\n        end\n      end\n    end\n  end\n\n  def ask_for_extra_nginx_configure_flags(prefix)\n    done = false\n    while !done\n      new_screen\n      render_template 'nginx/ask_for_extra_configure_flags',\n        :command => build_nginx_configure_command(prefix)\n      puts\n      if @extra_configure_flags\n        if @extra_configure_flags == \"none\"\n          extra_args = \"\"\n          puts \"<b>=> No extra configure flags.</b>\"\n        else\n          extra_args = @extra_configure_flags\n          puts \"<b>=> #{extra_args}</b>\"\n        end\n        return extra_args\n      elsif @auto\n        puts \"<b>=> No extra configure flags.</b>\"\n        return \"\"\n      else\n        extra_args = prompt \"Extra arguments to pass to configure script\"\n\n        new_screen\n        render_template 'nginx/confirm_extra_configure_flags',\n          :command => build_nginx_configure_command(prefix, extra_args)\n        puts\n        answer = prompt(\"Is this what you want? (yes/no) [default=yes]\") do |input|\n          if input.empty? || input == \"yes\" || input == \"no\"\n            true\n          else\n            puts \"<red>Please enter 'yes' or 'no'.</red>\"\n            false\n          end\n        end\n        done = answer.empty? || answer == \"yes\"\n      end\n    end\n    return extra_args\n  end\n\n  def check_whether_we_can_write_to(dir)\n    FileUtils.mkdir_p(dir)\n    File.new(\"#{dir}/__test__.txt\", \"w\").close\n    return true\n  rescue\n    new_screen\n    if Process.uid == 0\n      render_template 'nginx/cannot_write_to_dir', :dir => dir\n    else\n      render_template 'installer_common/run_installer_as_root',\n        :dir  => dir,\n        :sudo => PhusionPassenger::PlatformInfo.ruby_sudo_command,\n        :sudo_s_e => PhusionPassenger::PlatformInfo.ruby_sudo_shell_command(\"-E\"),\n        :ruby => PhusionPassenger::PlatformInfo.ruby_command,\n        :installer => \"#{PhusionPassenger.bin_dir}/passenger-install-nginx-module #{ORIG_ARGV.join(' ')}\"\n    end\n    return false\n  ensure\n    File.unlink(\"#{dir}/__test__.txt\") rescue nil\n  end\n\n  def nginx_config_exists?(prefix)\n    return !!locate_nginx_config_file(prefix)\n  end\n\n  def install_nginx(source_dir, prefix, extra_configure_flags)\n    Dir.chdir(source_dir) do\n      new_screen\n      puts \"<banner>Compiling and installing Nginx...</banner>\"\n      if !sh(build_nginx_configure_command(prefix, extra_configure_flags)) ||\n         !sh(\"make\") ||\n         !sh(\"make install\")\n        return false\n      end\n    end\n    return true\n  rescue Interrupt\n    raise Aborted\n  end\n\n  def show_passenger_config_snippets(prefix)\n    new_screen\n    render_template 'nginx/config_snippets',\n      :config_file => locate_nginx_config_file(prefix),\n      :passenger_root => PhusionPassenger.install_spec,\n      :ruby => PlatformInfo.ruby_command\n    wait\n  end\n\n  def show_deployment_example\n    line\n    puts\n    render_template 'nginx/deployment_example',\n      :deployment_guide_url => \"https://www.phusionpassenger.com/library/deploy/nginx/deploy/\",\n      :phusion_website => PHUSION_WEBSITE,\n      :passenger_website => PASSENGER_WEBSITE\n  end\n\n  def show_possible_solutions_for_compilation_and_installation_problems\n    line\n    puts\n    render_template 'nginx/possible_solutions_for_compilation_and_installation_problems',\n      :support_url => SUPPORT_URL\n  end\n\n  def locate_nginx_config_file(prefix)\n    [\"#{prefix}/conf/nginx.conf\", \"#{prefix}/etc/nginx.conf\"].each do |filename|\n      if File.exist?(filename)\n        return filename\n      end\n    end\n    return nil\n  end\n\n  def insert_passenger_config_snippets(prefix)\n    config_file = locate_nginx_config_file(prefix)\n    contents = File.read(config_file)\n    contents.sub!(/^http \\{/,\n      \"http {\\n\" <<\n      \"    passenger_root #{PhusionPassenger.install_spec};\\n\" <<\n      \"    passenger_ruby #{PlatformInfo.ruby_command};\\n\")\n    File.open(config_file, 'w') do |f|\n      f.write(contents)\n    end\n\n    new_screen\n    render_template 'nginx/config_snippets_inserted',\n      :config_file => config_file,\n      :passenger_root => PhusionPassenger.install_spec,\n      :ruby => PlatformInfo.ruby_command\n    wait\n  end\n\n  def build_nginx_configure_command(prefix, extra_configure_flags = nil)\n    extra_cflags = \"-Wno-error #{PlatformInfo.openssl_extra_cflags}\".strip\n    extra_ldflags = PlatformInfo.openssl_extra_ldflags\n\n    command = \"sh ./configure --prefix='#{prefix}' \"\n    command << \"--with-http_ssl_module \"\n    command << \"--with-http_v2_module \"\n    command << \"--with-http_realip_module \"\n    command << \"--with-http_gzip_static_module \"\n    command << \"--with-http_stub_status_module \"\n    command << \"--with-http_addition_module \"\n    command << \"--with-cc-opt=#{Shellwords.escape extra_cflags} \"\n    command << \"--with-ld-opt=#{Shellwords.escape extra_ldflags} \"\n    if @pcre_source_dir\n      command << \"--with-pcre='#{@pcre_source_dir}' \"\n    elsif !pcre_is_installed?\n      command << \"--without-http_rewrite_module \"\n    end\n    command << \"--add-module='#{PhusionPassenger.nginx_module_source_dir}' #{extra_configure_flags}\"\n    command.strip!\n    return command\n  end\n\n  def pcre_is_installed?\n    if @pcre_is_installed.nil?\n      Dir.mktmpdir do |safe_tmpdir|\n        @pcre_is_installed = begin\n          File.open(\"#{safe_tmpdir}/passenger-check.c\", 'w') do |f|\n            f.puts(\"#include <pcre.h>\")\n          end\n          Dir.chdir(\"#{safe_tmpdir}\") do\n            # Nginx checks for PCRE in multiple places...\n            system(\"(gcc -I/usr/local/include -I/usr/include/pcre \" <<\n              \"-I/usr/pkg/include -I/opt/local/include \" <<\n              \"-c passenger-check.c) >/dev/null 2>/dev/null\")\n          end\n        ensure\n          File.unlink(\"#{safe_tmpdir}/passenger-check.c\") rescue nil\n          File.unlink(\"#{safe_tmpdir}/passenger-check.o\") rescue nil\n        end\n      end\n    end\n    return @pcre_is_installed\n  end\n\n  def sha256_file(path)\n    # We do this instead of using #file, for Ruby 1.8.5 support.\n    digest = Digest::SHA256.new\n    File.open(path, \"rb\") do |f|\n      buf = ''\n      buf.force_encoding('binary') if buf.respond_to?(:force_encoding)\n      while !f.eof?\n        f.read(1024 * 16, buf)\n        digest.update(buf)\n      end\n    end\n    return digest.hexdigest\n  end\nend\n\nORIG_ARGV = ARGV.dup\noptions = {}\nparser = OptionParser.new do |opts|\n  opts.banner = \"Usage: passenger-install-nginx-module [options]\"\n  opts.separator \"\"\n\n  indent = ' ' * 37\n  opts.separator \"Options:\"\n  opts.on(\"--auto\", \"Automatically confirm 'Press ENTER to\\n\" <<\n          \"#{indent}continue' prompts.\") do\n    options[:auto] = true\n  end\n  opts.on(\"--prefix=DIR\", String, \"Use the given Nginx install prefix instead\\n\" <<\n          \"#{indent}of asking for it interactively.\") do |dir|\n    options[:prefix] = dir\n  end\n  opts.on(\"--auto-download\", \"Download and install Nginx automatically,\\n\" <<\n          \"#{indent}instead of asking interactively whether to\\n\" <<\n          \"#{indent}download+install or to use an existing\\n\" <<\n          \"#{indent}Nginx source directory.\") do\n    options[:auto_download] = true\n  end\n  opts.on(\"--nginx-source-dir=DIR\", String, \"Compile and install Nginx using the given\\n\" <<\n          \"#{indent}Nginx source directory, instead of\\n\" <<\n          \"#{indent}interactively asking to download+install\\n\" <<\n          \"#{indent}or to use an existing Nginx source\\n\" <<\n          \"#{indent}directory. Conflicts with --auto-download.\") do |dir|\n    options[:nginx_source_dir] = dir\n  end\n  opts.on(\"--extra-configure-flags=STRING\", String, \"Pass these extra flags to Nginx's\\n\" <<\n          \"#{indent}'configure' script, instead of asking for\\n\" <<\n          \"#{indent}it interactively. Specify 'none' if you\\n\" <<\n          \"#{indent}do not want to pass additional flags but do\\n\" <<\n          \"#{indent}not want this installer to ask\\n\" <<\n          \"#{indent}interactively either.\") do |flags|\n    options[:extra_configure_flags] = flags\n  end\n  opts.on(\"--languages NAMES\", \"Comma-separated list of interested\\n\" <<\n      \"#{indent}languages (e.g.\\n\" <<\n      \"#{indent}'ruby,python,nodejs,meteor')\") do |value|\n    options[:languages] = value.split(\",\")\n  end\n  opts.on(\"--force-colors\", \"Display colors even if stdout is not a TTY\") do\n    options[:colorize] = true\n  end\nend\nbegin\n  parser.parse!\nrescue OptionParser::ParseError => e\n  puts e\n  puts\n  puts \"Please see '--help' for valid options.\"\n  exit 1\nend\n\nif options[:auto_download] && options[:nginx_source_dir]\n  STDERR.puts \"You cannot specify both --auto-download and --nginx-source-dir.\"\n  exit 1\nend\n\nInstaller.new(options).run\n"], "filenames": ["CHANGELOG", "bin/passenger-install-nginx-module"], "buggy_code_start_loc": [18, 40], "buggy_code_end_loc": [18, 582], "fixing_code_start_loc": [19, 41], "fixing_code_end_loc": [20, 584], "type": "CWE-264", "message": "In Phusion Passenger before 5.1.0, a known /tmp filename was used during passenger-install-nginx-module execution, which could allow local attackers to gain the privileges of the passenger user.", "other": {"cve": {"id": "CVE-2016-10345", "sourceIdentifier": "cve@mitre.org", "published": "2017-04-18T20:59:00.153", "lastModified": "2017-04-24T21:26:37.567", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In Phusion Passenger before 5.1.0, a known /tmp filename was used during passenger-install-nginx-module execution, which could allow local attackers to gain the privileges of the passenger user."}, {"lang": "es", "value": "En Phusion Passenger en versiones anteriores a 5.1.0, un nombre de archivo /tmp conocido fue utilizado durante la ejecuci\u00f3n de passenger-install-nginx-module, lo que podr\u00eda permitir a atacantes locales obtener los privilegios del usuario de passenger."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-264"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phusion:passenger:*:*:*:*:*:*:*:*", "versionEndIncluding": "5.0.30", "matchCriteriaId": "DAC73972-CB17-4C3D-A09A-DF5CF226AA10"}]}]}], "references": [{"url": "https://github.com/phusion/passenger/blob/stable-5.1/CHANGELOG", "source": "cve@mitre.org", "tags": ["Patch", "Release Notes"]}, {"url": "https://github.com/phusion/passenger/commit/e5b4b0824d6b648525b4bf63d9fa37e5beeae441", "source": "cve@mitre.org", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/phusion/passenger/commit/e5b4b0824d6b648525b4bf63d9fa37e5beeae441"}}