{"buggy_code": ["<?php\ninclude_once('./_common.php');\n\nif ($is_guest)\n    alert_close('\ud68c\uc6d0\ub9cc \uc774\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.');\n\nset_session('ss_memo_delete_token', $token = uniqid(time()));\n\n$g5['title'] = '\ub0b4 \ucabd\uc9c0\ud568';\ninclude_once(G5_PATH.'/head.sub.php');\n\n$kind = isset($_GET['kind']) ? clean_xss_tags($_GET['kind'], 0, 1) : 'recv';\n\nif ($kind == 'recv')\n    $unkind = 'send';\nelse if ($kind == 'send')\n    $unkind = 'recv';\nelse\n    alert(''.$kind .'\uac12\uc744 \ub118\uaca8\uc8fc\uc138\uc694.');\n\nif ($page < 1) { $page = 1; } // \ud398\uc774\uc9c0\uac00 \uc5c6\uc73c\uba74 \uccab \ud398\uc774\uc9c0 (1 \ud398\uc774\uc9c0)\n\nrun_event('memo_list', $kind, $unkind, $page);\n\n$sql = \" select count(*) as cnt from {$g5['memo_table']} where me_{$kind}_mb_id = '{$member['mb_id']}' and me_type = '$kind' \";\n$row = sql_fetch($sql);\n$total_count = $row['cnt'];\n\n$total_page  = ceil($total_count / $config['cf_page_rows']);  // \uc804\uccb4 \ud398\uc774\uc9c0 \uacc4\uc0b0\n$from_record = ((int) $page - 1) * $config['cf_page_rows']; // \uc2dc\uc791 \uc5f4\uc744 \uad6c\ud568\n\nif ($kind == 'recv')\n{\n    $kind_title = '\ubc1b\uc740';\n    $recv_img = 'on';\n    $send_img = 'off';\n}\nelse\n{\n    $kind_title = '\ubcf4\ub0b8';\n    $recv_img = 'off';\n    $send_img = 'on';\n}\n\n$list = array();\n\n$sql = \" select a.*, b.mb_id, b.mb_nick, b.mb_email, b.mb_homepage\n            from {$g5['memo_table']} a\n            left join {$g5['member_table']} b on (a.me_{$unkind}_mb_id = b.mb_id)\n            where a.me_{$kind}_mb_id = '{$member['mb_id']}' and a.me_type = '$kind'\n            order by a.me_id desc limit $from_record, {$config['cf_page_rows']} \";\n\n$result = sql_query($sql);\nfor ($i=0; $row=sql_fetch_array($result); $i++)\n{\n    $list[$i] = $row;\n\n    $mb_id = $row[\"me_{$unkind}_mb_id\"];\n\n    if ($row['mb_nick'])\n        $mb_nick = $row['mb_nick'];\n    else\n        $mb_nick = '\uc815\ubcf4\uc5c6\uc74c';\n\n    $name = get_sideview($row['mb_id'], $row['mb_nick'], $row['mb_email'], $row['mb_homepage']);\n\n    if (substr($row['me_read_datetime'],0,1) == 0)\n        $read_datetime = '\uc544\uc9c1 \uc77d\uc9c0 \uc54a\uc74c';\n    else\n        $read_datetime = substr($row['me_read_datetime'],2,14);\n\n    $send_datetime = substr($row['me_send_datetime'],2,14);\n\n    $list[$i]['mb_id'] = $mb_id;\n    $list[$i]['name'] = $name;\n    $list[$i]['send_datetime'] = $send_datetime;\n    $list[$i]['read_datetime'] = $read_datetime;\n    $list[$i]['view_href'] = './memo_view.php?me_id='.$row['me_id'].'&amp;kind='.$kind.'&amp;page='.$page;\n    $list[$i]['del_href'] = './memo_delete.php?me_id='.$row['me_id'].'&amp;token='.$token.'&amp;kind='.$kind;\n}\n\n$write_pages = get_paging(G5_IS_MOBILE ? $config['cf_mobile_pages'] : $config['cf_write_pages'], $page, $total_page, \"./memo.php?kind=$kind\".$qstr.\"&amp;page=\");\n\ninclude_once($member_skin_path.'/memo.skin.php');\n\ninclude_once(G5_PATH.'/tail.sub.php');"], "fixing_code": ["<?php\ninclude_once('./_common.php');\n\nif ($is_guest)\n    alert_close('\ud68c\uc6d0\ub9cc \uc774\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.');\n\nset_session('ss_memo_delete_token', $token = uniqid(time()));\n\n$g5['title'] = '\ub0b4 \ucabd\uc9c0\ud568';\ninclude_once(G5_PATH.'/head.sub.php');\n\n$kind = isset($_GET['kind']) ? clean_xss_tags($_GET['kind'], 0, 1) : 'recv';\n\nif ($kind == 'recv')\n    $unkind = 'send';\nelse if ($kind == 'send')\n    $unkind = 'recv';\nelse {\n    $kind = clean_xss_tags(trim($kind));\n    alert(''.$kind .'\uac12\uc744 \ub118\uaca8\uc8fc\uc138\uc694.');\n}\n\nif ($page < 1) { $page = 1; } // \ud398\uc774\uc9c0\uac00 \uc5c6\uc73c\uba74 \uccab \ud398\uc774\uc9c0 (1 \ud398\uc774\uc9c0)\n\nrun_event('memo_list', $kind, $unkind, $page);\n\n$sql = \" select count(*) as cnt from {$g5['memo_table']} where me_{$kind}_mb_id = '{$member['mb_id']}' and me_type = '$kind' \";\n$row = sql_fetch($sql);\n$total_count = $row['cnt'];\n\n$total_page  = ceil($total_count / $config['cf_page_rows']);  // \uc804\uccb4 \ud398\uc774\uc9c0 \uacc4\uc0b0\n$from_record = ((int) $page - 1) * $config['cf_page_rows']; // \uc2dc\uc791 \uc5f4\uc744 \uad6c\ud568\n\nif ($kind == 'recv')\n{\n    $kind_title = '\ubc1b\uc740';\n    $recv_img = 'on';\n    $send_img = 'off';\n}\nelse\n{\n    $kind_title = '\ubcf4\ub0b8';\n    $recv_img = 'off';\n    $send_img = 'on';\n}\n\n$list = array();\n\n$sql = \" select a.*, b.mb_id, b.mb_nick, b.mb_email, b.mb_homepage\n            from {$g5['memo_table']} a\n            left join {$g5['member_table']} b on (a.me_{$unkind}_mb_id = b.mb_id)\n            where a.me_{$kind}_mb_id = '{$member['mb_id']}' and a.me_type = '$kind'\n            order by a.me_id desc limit $from_record, {$config['cf_page_rows']} \";\n\n$result = sql_query($sql);\nfor ($i=0; $row=sql_fetch_array($result); $i++)\n{\n    $list[$i] = $row;\n\n    $mb_id = $row[\"me_{$unkind}_mb_id\"];\n\n    if ($row['mb_nick'])\n        $mb_nick = $row['mb_nick'];\n    else\n        $mb_nick = '\uc815\ubcf4\uc5c6\uc74c';\n\n    $name = get_sideview($row['mb_id'], $row['mb_nick'], $row['mb_email'], $row['mb_homepage']);\n\n    if (substr($row['me_read_datetime'],0,1) == 0)\n        $read_datetime = '\uc544\uc9c1 \uc77d\uc9c0 \uc54a\uc74c';\n    else\n        $read_datetime = substr($row['me_read_datetime'],2,14);\n\n    $send_datetime = substr($row['me_send_datetime'],2,14);\n\n    $list[$i]['mb_id'] = $mb_id;\n    $list[$i]['name'] = $name;\n    $list[$i]['send_datetime'] = $send_datetime;\n    $list[$i]['read_datetime'] = $read_datetime;\n    $list[$i]['view_href'] = './memo_view.php?me_id='.$row['me_id'].'&amp;kind='.$kind.'&amp;page='.$page;\n    $list[$i]['del_href'] = './memo_delete.php?me_id='.$row['me_id'].'&amp;token='.$token.'&amp;kind='.$kind;\n}\n\n$write_pages = get_paging(G5_IS_MOBILE ? $config['cf_mobile_pages'] : $config['cf_write_pages'], $page, $total_page, \"./memo.php?kind=$kind\".$qstr.\"&amp;page=\");\n\ninclude_once($member_skin_path.'/memo.skin.php');\n\ninclude_once(G5_PATH.'/tail.sub.php');"], "filenames": ["bbs/memo.php"], "buggy_code_start_loc": [18], "buggy_code_end_loc": [19], "fixing_code_start_loc": [18], "fixing_code_end_loc": [22], "type": "CWE-79", "message": "gnuboard5 is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", "other": {"cve": {"id": "CVE-2021-3831", "sourceIdentifier": "security@huntr.dev", "published": "2021-12-14T11:15:07.417", "lastModified": "2021-12-16T15:03:36.453", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "gnuboard5 is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}, {"lang": "es", "value": "gnuboard5 es vulnerable a una Neutralizaci\u00f3n Inapropiada de la Entrada Durante la Generaci\u00f3n de P\u00e1ginas Web (\"Cross-site Scripting\")"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gnuboard:gnuboard5:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.4.20", "matchCriteriaId": "959326D8-E70B-4C98-9495-58C2B5EF9585"}]}]}], "references": [{"url": "https://github.com/gnuboard/gnuboard5/commit/2e81619ea87bc9c0b4a073d8df3c7693a6fdbf0d", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/25775287-88cd-4f00-b978-692d627dff04", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/gnuboard/gnuboard5/commit/2e81619ea87bc9c0b4a073d8df3c7693a6fdbf0d"}}