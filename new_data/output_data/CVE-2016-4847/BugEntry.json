{"buggy_code": ["<?php\n/* @(#) $Id: search.php,v 1.18 2008/03/03 19:37:26 dcid Exp $ */\n\n/* Copyright (C) 2006-2013 Trend Micro\n * All rights reserved.\n *\n * This program is a free software; you can redistribute it\n * and/or modify it under the terms of the GNU General Public\n * License (version 3) as published by the FSF - Free Software\n * Foundation\n */\n       \n/* OS PHP init */\nif (!function_exists('os_handle_start'))\n{\n    echo \"<b class='red'>You are not allowed direct access.</b><br />\\n\";\n    return(1);\n}\n\n\n/* Starting handle */\n$ossec_handle = os_handle_start($ossec_dir);\nif($ossec_handle == NULL)\n{\n    echo \"Unable to access ossec directory.\\n\";\n    exit(1);\n}\n\n\n/* Initializing some variables */\n$u_final_time = time(0);\n$u_init_time = $u_final_time - $ossec_search_time;\n$u_level = $ossec_search_level;\n$u_pattern = \"\";\n$u_rule = \"\";\n$u_srcip = \"\";\n$u_user = \"\";\n$u_location = \"\";\n\n\n$USER_pattern = NULL;\n$LOCATION_pattern = NULL;\n$USER_group = NULL;\n$USER_log = NULL;\n$USER_rule = NULL;\n$USER_srcip = NULL;\n$USER_user = NULL;\n$USER_page = 1;\n$USER_searchid = 0;\n$USER_monitoring = 0;\n$used_stored = 0;\n\n\n/* Getting search id */\nif(isset($_POST['searchid']))\n{\n    if(preg_match('/[a-z0-9]+/', $_POST['searchid']))\n    {\n        $USER_searchid = $_POST['searchid'];\n    }\n}\n\n\n$rt_sk = \"\";\n$sv_sk = 'checked=\"checked\"';\nif(isset($_POST['monitoring']) && ($_POST['monitoring'] == 1))\n{\n    $rt_sk = 'checked=\"checked\"';\n    $sv_sk = \"\";\n\n    /* Cleaning up time */\n    $USER_final = $u_final_time;\n    $USER_init = $u_init_time;\n    $USER_monitoring = 1;\n\n    /* Cleaning up fields */\n    $_POST['search'] = \"Search\";\n    unset($_POST['initdate']);\n    unset($_POST['finaldate']);\n\n    /* Deleting search */\n    if($USER_searchid != 0)\n    {\n        os_cleanstored($USER_searchid);\n    }\n\n    /* Refreshing every 90 seconds by default */\n    $m_ossec_refresh_time = $ossec_refresh_time * 1000;\n\n    echo '\n        <script language=\"javascript\">\n            setTimeout(\"document.dosearch.submit()\",'.\n            $m_ossec_refresh_time.');\n        </script>\n        ';\n}\n\n\n/* Reading user input -- being very careful parsing it */\n$datepattern = \"/^([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})$/\";\nif(isset($_POST['initdate']))\n{             \n    if(preg_match($datepattern, $_POST['initdate'], $regs))\n    {\n        $USER_init = mktime($regs[4], $regs[5], 0,$regs[2],$regs[3],$regs[1]);\n        $u_init_time = $USER_init;\n    }\n}\nif(isset($_POST['finaldate']))\n{             \n    if(preg_match($datepattern, $_POST['finaldate'], $regs) == true)\n    {\n        $USER_final = mktime($regs[4], $regs[5], 0,$regs[2],$regs[3],$regs[1]);\n        $u_final_time = $USER_final;\n    }\n}\nif(isset($_POST['level']))\n{             \n    if((is_numeric($_POST['level'])) && \n        ($_POST['level'] > 0) &&\n        ($_POST['level'] < 16))\n    {\n        $USER_level = $_POST['level'];\n        $u_level = $USER_level;\n    }\n}\nif(isset($_POST['page']))\n{\n    if((is_numeric($_POST['page'])) &&\n        ($_POST['page'] > 0) &&\n        ($_POST['page'] <= 999))\n    {\n        $USER_page = $_POST['page'];\n    }\n}\n\n\n$strpattern = \"/^[0-9a-zA-Z.: _|^!\\-()?]{1,128}$/\";\n$intpattern = \"/^[0-9]{1,8}$/\";\n\nif(isset($_POST['strpattern']))\n{\n   if(preg_match($strpattern, $_POST['strpattern']) == true)\n   {\n       $USER_pattern = $_POST['strpattern'];\n       $u_pattern = $USER_pattern;\n   }\n}\n\n\n/* Getting location */\nif(isset($_POST['locationpattern']))\n{\n    $lcpattern = \"/^[0-9a-zA-Z.: _|^!>\\/\\\\-]{1,156}$/\";    \n    if(preg_match($lcpattern, $_POST['locationpattern']) == true)\n    {\n        $LOCATION_pattern = $_POST['locationpattern'];\n        $u_location = $LOCATION_pattern;\n    }\n}\n\n\n/* Group pattern */\nif(isset($_POST['grouppattern']))\n{\n    if($_POST['grouppattern'] == \"ALL\")\n    {\n        $USER_group = NULL;\n    }\n    else if(preg_match($strpattern,$_POST['grouppattern']) == true)\n    {\n        $USER_group = $_POST['grouppattern'];\n    }\n}\n\n/* Group pattern */\nif(isset($_POST['logpattern']))\n{\n    if($_POST['logpattern'] == \"ALL\")\n    {\n        $USER_log = NULL;\n    }\n    else if(preg_match($strpattern,$_POST['logpattern']) == true)\n    {\n        $USER_log = $_POST['logpattern'];\n    }\n}\n\n\n/* Rule pattern */\nif(isset($_POST['rulepattern']))\n{\n   if(preg_match($strpattern, $_POST['rulepattern']) == true)\n   {\n       $USER_rule = $_POST['rulepattern'];\n       $u_rule = $USER_rule;\n   }\n}\n\n\n/* Src ip pattern */\nif(isset($_POST['srcippattern']))\n{\n   if(preg_match($strpattern, $_POST['srcippattern']) == true)\n   {\n       $USER_srcip = $_POST['srcippattern'];\n       $u_srcip = $USER_srcip;\n   }\n}\n\n\n/* User pattern */\nif(isset($_POST['userpattern']))\n{\n   if(preg_match($strpattern, $_POST['userpattern']) == true)\n   {\n       $USER_user = $_POST['userpattern'];\n       $u_user = $USER_user;\n   }\n}\n\n\n/* Maximum number of alerts */\nif(isset($_POST['max_alerts_per_page']))\n{\n    if(preg_match($intpattern, $_POST['max_alerts_per_page']) == true)\n    {\n        if(($_POST['max_alerts_per_page'] > 200) &&\n           ($_POST['max_alerts_per_page'] < 10000))\n        {\n            $ossec_max_alerts_per_page = $_POST['max_alerts_per_page'];\n        }\n    }\n}    \n\n\n\n/* Getting search id  -- should be enough to avoid duplicates */\nif( array_key_exists( 'search', $_POST ) ) {\n    if($_POST['search'] == \"Search\")\n    {\n        /* Creating new search id */\n        $USER_searchid = md5(uniqid(rand(), true));\n        $USER_page = 1;\n    }\n    else if($_POST['search'] == \"<< First\")\n    {\n        $USER_page = 1;\n    }\n    else if($_POST['search'] == \"< Prev\")\n    {\n        if($USER_page > 1)\n\t    {\n\t        $USER_page--;\n\t    }\n\t}\n\telse if($_POST['search'] == \"Next >\")\n\t{\n\t    $USER_page++;\n\t}\n\telse if($_POST['search'] == \"Last >>\")\n\t{\n\t    $USER_page = 999;\n\t}\n\telse if($_POST['search'] == \"\")\n\t{\n\t}\n\telse\n\t{\n\t    echo \"<b class='red'>Invalid search. </b><br />\\n\";\n\t    return;\n\t}\n}\n\n/* Printing current date */\necho '<div class=\"smaller2\">'.date('F dS Y h:i:s A').'<br />';\nif($USER_monitoring == 1)\n{\n    echo ' -- Refreshing every '.$ossec_refresh_time.' secs</div><br />';\n}\nelse\n{\n    echo '</div><br />';\n}\n\n\n/* Getting all agents. */\n$agent_list = os_getagents($ossec_handle);\n\n\n//echo '<a href=\"?f=sf\">Firewall Search</a> - <a href=\"?f=s\">Alerts Search</a>';\necho \"<h2>Alert search options:</h2>\\n\";\n\n\n/* Search forms */\necho '\n<form name=\"dosearch\" method=\"post\" action=\"index.php?f=s\">\n<table><tr valign=\"top\">\n    <td><input type=\"radio\" name=\"monitoring\" value=\"0\" checked=\"checked\"/>\n    </td>\n    <td>From: &nbsp;<input type=\"text\" name=\"initdate\" \n    id=\"i_date_a\" size=\"17\"\n    value=\"'.date('Y-m-d H:i', $u_init_time).'\" maxlength=\"16\" \n    class=\"formText\" />\n    <img src=\"img/calendar.gif\" id=\"i_trigger\" title=\"Date selector\"\n    alt=\"Date selector\" class=\"formText\" />\n    </td><td>&nbsp;&nbsp;\n    To: &nbsp;<input type=\"text\" name=\"finaldate\" id=\"f_date_a\" size=\"17\"\n    value=\"'.date('Y-m-d H:i', $u_final_time).'\" maxlength=\"16\" \n    class=\"formText\" />\n    <img src=\"img/calendar.gif\" id=\"f_trigger\" title=\"Date selector\"\n    alt=\"Date selector\" class=\"formText\" />\n    </td>\n    </tr>\n';\n\necho '<tr><td><input type=\"radio\" name=\"monitoring\" value=\"1\" '.$rt_sk.'/></td> \n      <td>Real time monitoring</td></tr>\n      </table>\n      <br />\n      <table>\n     ';\n\necho '<tr><td>Minimum level:</td><td><select name=\"level\" class=\"formText\">';\nif($u_level == 1)\n{\n    echo '   <option value=\"1\" selected=\"selected\">All</option>';\n}\nelse\n{\n    echo '   <option value=\"1\">All</option>';\n}\nfor($l_counter = 15; $l_counter >= 2; $l_counter--)\n{\n    if($l_counter == $u_level)\n    {\n        echo '   <option value=\"'.$l_counter.'\" selected=\"selected\">'.\n             $l_counter.'</option>';\n    }\n    else\n    {\n        echo '   <option value=\"'.$l_counter.'\">'.$l_counter.'</option>';\n    }\n}\necho '  </select>';\n\n\n/* Category */\necho '</td><td>\n     Category: </td><td><select name=\"grouppattern\" class=\"formText\">';\necho '<option value=\"ALL\" class=\"bluez\">All categories</option>';\n\nforeach($global_categories as $_cat_name => $_cat)\n{\n    foreach($_cat as $cat_name => $cat_val)\n    {\n        $sl = \"\";\n        if($USER_group == $cat_val)\n        {\n            $sl = ' selected=\"selected\"';\n        }\n        if(strpos($cat_name, \"(all)\") !== FALSE)\n        {\n            echo '<option class=\"bluez\" '.$sl.\n                 ' value=\"'.$cat_val.'\">'.$cat_name.'</option>';\n        }\n        else\n        {\n            echo '<option value=\"'.$cat_val.'\" '.$sl.\n                 '> &nbsp; '.$cat_name.'</option>';\n        }\n    }\n}\necho '</select>';\n\n/* Str pattern */\necho '</td></tr><tr><td>    \n    Pattern: </td><td><input type=\"text\" name=\"strpattern\" size=\"16\" \n                    value=\"'.$u_pattern.'\" class=\"formText\" /></td>';\n\n\n/* Log formats */\necho '<td>\n     Log formats: </td><td><select name=\"logpattern\" class=\"formText\">';\necho '<option value=\"ALL\" class=\"bluez\">All log formats</option>';\n\nforeach($log_categories as $_cat_name => $_cat)\n{\n    foreach($_cat as $cat_name => $cat_val)\n    {\n        $sl = \"\";\n        if($USER_log == $cat_val)\n        {\n            $sl = ' selected=\"selected\"';\n        }\n        if(strpos($cat_name, \"(all)\") !== FALSE)\n        {\n            echo '<option class=\"bluez\" '.$sl.\n                 ' value=\"'.$cat_val.'\">'.$cat_name.'</option>';\n        }\n        else\n        {\n            echo '<option value=\"'.$cat_val.'\" '.$sl.\n                 '> &nbsp; '.$cat_name.'</option>';\n        }\n    }\n}\necho '</select>';\n\n\n/* Srcip pattern */\necho '</td></tr><tr><td>    \n    Srcip: </td><td>\n    <input type=\"text\" name=\"srcippattern\" size=\"16\" class=\"formText\" \n                    value=\"'.$u_srcip.'\"/>&nbsp;&nbsp;';\n\n/* Rule pattern */\necho '</td><td>\n    User: </td><td><input type=\"text\" name=\"userpattern\" size=\"8\" \n                    value=\"'.$u_user.'\" class=\"formText\" /></td></tr>';\n\n/* Location */\necho '<tr><td>    \n    Location:</td><td>\n    <input type=\"text\" name=\"locationpattern\" size=\"16\" class=\"formText\" \n                    value=\"'.$u_location.'\"/>&nbsp;&nbsp;';\n\n/* Rule pattern */\necho '</td><td>\n    Rule id: </td><td><input type=\"text\" name=\"rulepattern\" size=\"8\" \n                    value=\"'.$u_rule.'\" class=\"formText\"/>';\n\n/* Max Alerts  */\necho '</td></tr><tr><td>\n    Max Alerts:</td>\n    <td><input type=\"text\" name=\"max_alerts_per_page\" size=\"8\"\n    value=\"'.$ossec_max_alerts_per_page.'\" class=\"formText\" /></td></tr>';\n\n\n/* Agent */    \n//foreach ($agent_list as $agent)\n    \n/* Final form */\necho '\n    <tr><td>                    \n    <input type=\"submit\" name=\"search\" value=\"Search\" class=\"button\" />\n';\n\n\necho '</td></tr></table>\n     <input type=\"hidden\" name=\"searchid\" value=\"'.$USER_searchid.'\" />\n     </form><br /> <br />\n     ';\n\n\n/* Java script for date */\necho '\n<script type=\"text/javascript\">\nCalendar.setup({\nbutton          :   \"i_trigger\", \ninputField     :    \"i_date_a\",\nifFormat       :    \"%Y-%m-%d %H:%M\",\nshowsTime      :    true,\ntimeFormat     :    \"24\"\n});\nCalendar.setup({\nbutton          :   \"f_trigger\", \ninputField     :    \"f_date_a\",\nifFormat       :    \"%Y-%m-%d %H:%M\",\nshowsTime      :    true,\ntimeFormat     :    \"24\"\n});\n</script>\n\n';\n\necho \"<h2>Results:</h2>\\n\";\n\nif(!isset($USER_init) || !isset($USER_final) || !isset($USER_level))\n{\n    echo \"<b>No search performed.</b><br />\\n\";\n    return(1);\n}\n\n$output_list = NULL;\n\n\n/* Getting stored alerts */\nif($_POST['search'] != \"Search\")\n{\n    $output_list = os_getstoredalerts($ossec_handle, $USER_searchid);\n    $used_stored = 1;\n}\n\n/* Searching for new ones */\nelse\n{\n    /* Getting alerts */\n    $output_list = os_searchalerts($ossec_handle, $USER_searchid,\n                                   $USER_init, $USER_final, \n                                   $ossec_max_alerts_per_page,\n                                   $USER_level,$USER_rule, $LOCATION_pattern,\n                                   $USER_pattern, $USER_group,\n                                   $USER_srcip, $USER_user,\n                                   $USER_log);\n}\n\nif($output_list == NULL || $output_list[1] == NULL)\n{\n    if($used_stored == 1)\n    {\n        echo \"<b class='red'>Nothing returned (search expired). </b><br />\\n\";\n    }\n    else\n    {\n        echo \"<b class='red'>Nothing returned. </b><br />\\n\";\n    }\n    return(1);\n}\n\n\n/* Checking for no return */\nif(!isset($output_list[0]{'count'}))\n{\n    echo \"<b class='red'>Nothing returned. </b><br />\\n\";\n    return(1);\n}\n\n\n/* Checking maximum page size */\nif($USER_page >= $output_list[0]{'pg'})\n{\n    $USER_page = $output_list[0]{'pg'};\n}\n\n/* Page 1 will become the latest and the latest, page 1 */\n$real_page = ($output_list[0]{'pg'} + 1) - $USER_page;\n\n\necho \"<b>Total alerts found: </b>\".$output_list[0]{'count'}.\"<br />\";\n\nif($output_list[0]{'pg'} > 1)\n{\n    echo \"<b>Output divided in </b>\".\n         $output_list[0]{'pg'}.\" pages.<br />\";\n\n    echo '<br /><form name=\"dopage\" method=\"post\" action=\"index.php?f=s\">';\n}\n\n\nif($output_list[0]{'pg'} > 1)\n{\n    echo '\n        <input type=\"submit\" name=\"search\" value=\"<< First\" class=\"button\"\n               class=\"formText\" />\n                   \n        <input type=\"submit\" name=\"search\" value=\"< Prev\" class=\"button\"\n               class=\"formText\" />\n         ';\n\n    echo 'Page <b>'.$USER_page.'</b> ('.$output_list[0]{$real_page}.' alerts)';\n}\n\n/* Currently page */\necho '\n    <input type=\"hidden\" name=\"initdate\" \n           value=\"'.date('Y-m-d H:i', $u_init_time).'\" /> \n    <input type=\"hidden\" name=\"finaldate\" \n           value=\"'.date('Y-m-d H:i', $u_final_time).'\" /> \n    <input type=\"hidden\" name=\"rulepattern\" value=\"'.$u_rule.'\" />\n    <input type=\"hidden\" name=\"srcippattern\" value=\"'.$u_srcip.'\" />\n    <input type=\"hidden\" name=\"userpattern\" value=\"'.$u_user.'\" />\n    <input type=\"hidden\" name=\"locationpattern\" value=\"'.$u_location.'\" />\n    <input type=\"hidden\" name=\"level\" value=\"'.$u_level.'\" />\n    <input type=\"hidden\" name=\"page\" value=\"'.$USER_page.'\" />\n    <input type=\"hidden\" name=\"searchid\" value=\"'.$USER_searchid.'\" />\n    <input type=\"hidden\" name=\"monitoring\" value=\"'.$USER_monitoring.'\" />\n    <input type=\"hidden\" name=\"max_alerts_per_page\" \n                         value=\"'.$ossec_max_alerts_per_page.'\" />';\n\n\nif($output_list[0]{'pg'} > 1)\n{    \necho '    \n    &nbsp;&nbsp;\n    <input type=\"submit\" name=\"search\" value=\"Next >\" class=\"button\"\n           class=\"formText\" />\n     <input type=\"submit\" name=\"search\" value=\"Last >>\" class=\"button\"\n           class=\"formText\" />      \n    </form>\n';\n}\n\n\n/* Checking if page exists */\nif(!isset($output_list[0]{$real_page}) || \n   (strlen($output_list[$real_page]) < 5) ||\n   (!file_exists($output_list[$real_page])))\n{\n    echo \"<b class='red'>Nothing returned (or search expired). </b><br />\\n\";\n    return(1);\n}\n\necho \"<br /><br />\";\n\n\n/* Printing page */\n// TODO: There are functions for slurping file contents.\n$fp = fopen($output_list[$real_page], \"r\");\nif($fp)\n{\n    while(!feof($fp))\n    {\n        echo fgets($fp);\n    }\n}\n\n/* EOF */\n?>\n"], "fixing_code": ["<?php\n/* @(#) $Id: search.php,v 1.18 2008/03/03 19:37:26 dcid Exp $ */\n\n/* Copyright (C) 2006-2013 Trend Micro\n * All rights reserved.\n *\n * This program is a free software; you can redistribute it\n * and/or modify it under the terms of the GNU General Public\n * License (version 3) as published by the FSF - Free Software\n * Foundation\n */\n\n/* OS PHP init */\nif (!function_exists('os_handle_start'))\n{\n    echo \"<b class='red'>You are not allowed direct access.</b><br />\\n\";\n    return(1);\n}\n\n\n/* Starting handle */\n$ossec_handle = os_handle_start($ossec_dir);\nif($ossec_handle == NULL)\n{\n    echo \"Unable to access ossec directory.\\n\";\n    exit(1);\n}\n\n\n/* Initializing some variables */\n$u_final_time = time(0);\n$u_init_time = $u_final_time - $ossec_search_time;\n$u_level = $ossec_search_level;\n$u_pattern = \"\";\n$u_rule = \"\";\n$u_srcip = \"\";\n$u_user = \"\";\n$u_location = \"\";\n\n\n$USER_pattern = NULL;\n$LOCATION_pattern = NULL;\n$USER_group = NULL;\n$USER_log = NULL;\n$USER_rule = NULL;\n$USER_srcip = NULL;\n$USER_user = NULL;\n$USER_page = 1;\n$USER_searchid = 0;\n$USER_monitoring = 0;\n$used_stored = 0;\n\n\n/* Getting search id */\nif(isset($_POST['searchid']))\n{\n    if(preg_match('/^[a-z0-9]+$/', $_POST['searchid']))\n    {\n        $USER_searchid = $_POST['searchid'];\n    }\n}\n\n\n$rt_sk = \"\";\n$sv_sk = 'checked=\"checked\"';\nif(isset($_POST['monitoring']) && ($_POST['monitoring'] == 1))\n{\n    $rt_sk = 'checked=\"checked\"';\n    $sv_sk = \"\";\n\n    /* Cleaning up time */\n    $USER_final = $u_final_time;\n    $USER_init = $u_init_time;\n    $USER_monitoring = 1;\n\n    /* Cleaning up fields */\n    $_POST['search'] = \"Search\";\n    unset($_POST['initdate']);\n    unset($_POST['finaldate']);\n\n    /* Deleting search */\n    if($USER_searchid != 0)\n    {\n        os_cleanstored($USER_searchid);\n    }\n\n    /* Refreshing every 90 seconds by default */\n    $m_ossec_refresh_time = $ossec_refresh_time * 1000;\n\n    echo '\n        <script language=\"javascript\">\n            setTimeout(\"document.dosearch.submit()\",'.\n            $m_ossec_refresh_time.');\n        </script>\n        ';\n}\n\n\n/* Reading user input -- being very careful parsing it */\n$datepattern = \"/^([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})$/\";\nif(isset($_POST['initdate']))\n{\n    if(preg_match($datepattern, $_POST['initdate'], $regs))\n    {\n        $USER_init = mktime($regs[4], $regs[5], 0,$regs[2],$regs[3],$regs[1]);\n        $u_init_time = $USER_init;\n    }\n}\nif(isset($_POST['finaldate']))\n{\n    if(preg_match($datepattern, $_POST['finaldate'], $regs) == true)\n    {\n        $USER_final = mktime($regs[4], $regs[5], 0,$regs[2],$regs[3],$regs[1]);\n        $u_final_time = $USER_final;\n    }\n}\nif(isset($_POST['level']))\n{\n    if((is_numeric($_POST['level'])) &&\n        ($_POST['level'] > 0) &&\n        ($_POST['level'] < 16))\n    {\n        $USER_level = $_POST['level'];\n        $u_level = $USER_level;\n    }\n}\nif(isset($_POST['page']))\n{\n    if((is_numeric($_POST['page'])) &&\n        ($_POST['page'] > 0) &&\n        ($_POST['page'] <= 999))\n    {\n        $USER_page = $_POST['page'];\n    }\n}\n\n\n$strpattern = \"/^[0-9a-zA-Z.: _|^!\\-()?]{1,128}$/\";\n$intpattern = \"/^[0-9]{1,8}$/\";\n\nif(isset($_POST['strpattern']))\n{\n   if(preg_match($strpattern, $_POST['strpattern']) == true)\n   {\n       $USER_pattern = $_POST['strpattern'];\n       $u_pattern = $USER_pattern;\n   }\n}\n\n\n/* Getting location */\nif(isset($_POST['locationpattern']))\n{\n    $lcpattern = \"/^[0-9a-zA-Z.: _|^!>\\/\\\\-]{1,156}$/\";\n    if(preg_match($lcpattern, $_POST['locationpattern']) == true)\n    {\n        $LOCATION_pattern = $_POST['locationpattern'];\n        $u_location = $LOCATION_pattern;\n    }\n}\n\n\n/* Group pattern */\nif(isset($_POST['grouppattern']))\n{\n    if($_POST['grouppattern'] == \"ALL\")\n    {\n        $USER_group = NULL;\n    }\n    else if(preg_match($strpattern,$_POST['grouppattern']) == true)\n    {\n        $USER_group = $_POST['grouppattern'];\n    }\n}\n\n/* Group pattern */\nif(isset($_POST['logpattern']))\n{\n    if($_POST['logpattern'] == \"ALL\")\n    {\n        $USER_log = NULL;\n    }\n    else if(preg_match($strpattern,$_POST['logpattern']) == true)\n    {\n        $USER_log = $_POST['logpattern'];\n    }\n}\n\n\n/* Rule pattern */\nif(isset($_POST['rulepattern']))\n{\n   if(preg_match($strpattern, $_POST['rulepattern']) == true)\n   {\n       $USER_rule = $_POST['rulepattern'];\n       $u_rule = $USER_rule;\n   }\n}\n\n\n/* Src ip pattern */\nif(isset($_POST['srcippattern']))\n{\n   if(preg_match($strpattern, $_POST['srcippattern']) == true)\n   {\n       $USER_srcip = $_POST['srcippattern'];\n       $u_srcip = $USER_srcip;\n   }\n}\n\n\n/* User pattern */\nif(isset($_POST['userpattern']))\n{\n   if(preg_match($strpattern, $_POST['userpattern']) == true)\n   {\n       $USER_user = $_POST['userpattern'];\n       $u_user = $USER_user;\n   }\n}\n\n\n/* Maximum number of alerts */\nif(isset($_POST['max_alerts_per_page']))\n{\n    if(preg_match($intpattern, $_POST['max_alerts_per_page']) == true)\n    {\n        if(($_POST['max_alerts_per_page'] > 200) &&\n           ($_POST['max_alerts_per_page'] < 10000))\n        {\n            $ossec_max_alerts_per_page = $_POST['max_alerts_per_page'];\n        }\n    }\n}\n\n\n\n/* Getting search id  -- should be enough to avoid duplicates */\nif( array_key_exists( 'search', $_POST ) ) {\n    if($_POST['search'] == \"Search\")\n    {\n        /* Creating new search id */\n        $USER_searchid = md5(uniqid(rand(), true));\n        $USER_page = 1;\n    }\n    else if($_POST['search'] == \"<< First\")\n    {\n        $USER_page = 1;\n    }\n    else if($_POST['search'] == \"< Prev\")\n    {\n        if($USER_page > 1)\n\t    {\n\t        $USER_page--;\n\t    }\n\t}\n\telse if($_POST['search'] == \"Next >\")\n\t{\n\t    $USER_page++;\n\t}\n\telse if($_POST['search'] == \"Last >>\")\n\t{\n\t    $USER_page = 999;\n\t}\n\telse if($_POST['search'] == \"\")\n\t{\n\t}\n\telse\n\t{\n\t    echo \"<b class='red'>Invalid search. </b><br />\\n\";\n\t    return;\n\t}\n}\n\n/* Printing current date */\necho '<div class=\"smaller2\">'.date('F dS Y h:i:s A').'<br />';\nif($USER_monitoring == 1)\n{\n    echo ' -- Refreshing every '.$ossec_refresh_time.' secs</div><br />';\n}\nelse\n{\n    echo '</div><br />';\n}\n\n\n/* Getting all agents. */\n$agent_list = os_getagents($ossec_handle);\n\n\n//echo '<a href=\"?f=sf\">Firewall Search</a> - <a href=\"?f=s\">Alerts Search</a>';\necho \"<h2>Alert search options:</h2>\\n\";\n\n\n/* Search forms */\necho '\n<form name=\"dosearch\" method=\"post\" action=\"index.php?f=s\">\n<table><tr valign=\"top\">\n    <td><input type=\"radio\" name=\"monitoring\" value=\"0\" checked=\"checked\"/>\n    </td>\n    <td>From: &nbsp;<input type=\"text\" name=\"initdate\"\n    id=\"i_date_a\" size=\"17\"\n    value=\"'.date('Y-m-d H:i', $u_init_time).'\" maxlength=\"16\"\n    class=\"formText\" />\n    <img src=\"img/calendar.gif\" id=\"i_trigger\" title=\"Date selector\"\n    alt=\"Date selector\" class=\"formText\" />\n    </td><td>&nbsp;&nbsp;\n    To: &nbsp;<input type=\"text\" name=\"finaldate\" id=\"f_date_a\" size=\"17\"\n    value=\"'.date('Y-m-d H:i', $u_final_time).'\" maxlength=\"16\"\n    class=\"formText\" />\n    <img src=\"img/calendar.gif\" id=\"f_trigger\" title=\"Date selector\"\n    alt=\"Date selector\" class=\"formText\" />\n    </td>\n    </tr>\n';\n\necho '<tr><td><input type=\"radio\" name=\"monitoring\" value=\"1\" '.$rt_sk.'/></td>\n      <td>Real time monitoring</td></tr>\n      </table>\n      <br />\n      <table>\n     ';\n\necho '<tr><td>Minimum level:</td><td><select name=\"level\" class=\"formText\">';\nif($u_level == 1)\n{\n    echo '   <option value=\"1\" selected=\"selected\">All</option>';\n}\nelse\n{\n    echo '   <option value=\"1\">All</option>';\n}\nfor($l_counter = 15; $l_counter >= 2; $l_counter--)\n{\n    if($l_counter == $u_level)\n    {\n        echo '   <option value=\"'.$l_counter.'\" selected=\"selected\">'.\n             $l_counter.'</option>';\n    }\n    else\n    {\n        echo '   <option value=\"'.$l_counter.'\">'.$l_counter.'</option>';\n    }\n}\necho '  </select>';\n\n\n/* Category */\necho '</td><td>\n     Category: </td><td><select name=\"grouppattern\" class=\"formText\">';\necho '<option value=\"ALL\" class=\"bluez\">All categories</option>';\n\nforeach($global_categories as $_cat_name => $_cat)\n{\n    foreach($_cat as $cat_name => $cat_val)\n    {\n        $sl = \"\";\n        if($USER_group == $cat_val)\n        {\n            $sl = ' selected=\"selected\"';\n        }\n        if(strpos($cat_name, \"(all)\") !== FALSE)\n        {\n            echo '<option class=\"bluez\" '.$sl.\n                 ' value=\"'.$cat_val.'\">'.$cat_name.'</option>';\n        }\n        else\n        {\n            echo '<option value=\"'.$cat_val.'\" '.$sl.\n                 '> &nbsp; '.$cat_name.'</option>';\n        }\n    }\n}\necho '</select>';\n\n/* Str pattern */\necho '</td></tr><tr><td>\n    Pattern: </td><td><input type=\"text\" name=\"strpattern\" size=\"16\"\n                    value=\"'.$u_pattern.'\" class=\"formText\" /></td>';\n\n\n/* Log formats */\necho '<td>\n     Log formats: </td><td><select name=\"logpattern\" class=\"formText\">';\necho '<option value=\"ALL\" class=\"bluez\">All log formats</option>';\n\nforeach($log_categories as $_cat_name => $_cat)\n{\n    foreach($_cat as $cat_name => $cat_val)\n    {\n        $sl = \"\";\n        if($USER_log == $cat_val)\n        {\n            $sl = ' selected=\"selected\"';\n        }\n        if(strpos($cat_name, \"(all)\") !== FALSE)\n        {\n            echo '<option class=\"bluez\" '.$sl.\n                 ' value=\"'.$cat_val.'\">'.$cat_name.'</option>';\n        }\n        else\n        {\n            echo '<option value=\"'.$cat_val.'\" '.$sl.\n                 '> &nbsp; '.$cat_name.'</option>';\n        }\n    }\n}\necho '</select>';\n\n\n/* Srcip pattern */\necho '</td></tr><tr><td>\n    Srcip: </td><td>\n    <input type=\"text\" name=\"srcippattern\" size=\"16\" class=\"formText\"\n                    value=\"'.$u_srcip.'\"/>&nbsp;&nbsp;';\n\n/* Rule pattern */\necho '</td><td>\n    User: </td><td><input type=\"text\" name=\"userpattern\" size=\"8\"\n                    value=\"'.$u_user.'\" class=\"formText\" /></td></tr>';\n\n/* Location */\necho '<tr><td>\n    Location:</td><td>\n    <input type=\"text\" name=\"locationpattern\" size=\"16\" class=\"formText\"\n                    value=\"'.$u_location.'\"/>&nbsp;&nbsp;';\n\n/* Rule pattern */\necho '</td><td>\n    Rule id: </td><td><input type=\"text\" name=\"rulepattern\" size=\"8\"\n                    value=\"'.$u_rule.'\" class=\"formText\"/>';\n\n/* Max Alerts  */\necho '</td></tr><tr><td>\n    Max Alerts:</td>\n    <td><input type=\"text\" name=\"max_alerts_per_page\" size=\"8\"\n    value=\"'.$ossec_max_alerts_per_page.'\" class=\"formText\" /></td></tr>';\n\n\n/* Agent */\n//foreach ($agent_list as $agent)\n\n/* Final form */\necho '\n    <tr><td>\n    <input type=\"submit\" name=\"search\" value=\"Search\" class=\"button\" />\n';\n\n\necho '</td></tr></table>\n     <input type=\"hidden\" name=\"searchid\" value=\"'.$USER_searchid.'\" />\n     </form><br /> <br />\n     ';\n\n\n/* Java script for date */\necho '\n<script type=\"text/javascript\">\nCalendar.setup({\nbutton          :   \"i_trigger\",\ninputField     :    \"i_date_a\",\nifFormat       :    \"%Y-%m-%d %H:%M\",\nshowsTime      :    true,\ntimeFormat     :    \"24\"\n});\nCalendar.setup({\nbutton          :   \"f_trigger\",\ninputField     :    \"f_date_a\",\nifFormat       :    \"%Y-%m-%d %H:%M\",\nshowsTime      :    true,\ntimeFormat     :    \"24\"\n});\n</script>\n\n';\n\necho \"<h2>Results:</h2>\\n\";\n\nif(!isset($USER_init) || !isset($USER_final) || !isset($USER_level))\n{\n    echo \"<b>No search performed.</b><br />\\n\";\n    return(1);\n}\n\n$output_list = NULL;\n\n\n/* Getting stored alerts */\nif($_POST['search'] != \"Search\")\n{\n    $output_list = os_getstoredalerts($ossec_handle, $USER_searchid);\n    $used_stored = 1;\n}\n\n/* Searching for new ones */\nelse\n{\n    /* Getting alerts */\n    $output_list = os_searchalerts($ossec_handle, $USER_searchid,\n                                   $USER_init, $USER_final,\n                                   $ossec_max_alerts_per_page,\n                                   $USER_level,$USER_rule, $LOCATION_pattern,\n                                   $USER_pattern, $USER_group,\n                                   $USER_srcip, $USER_user,\n                                   $USER_log);\n}\n\nif($output_list == NULL || $output_list[1] == NULL)\n{\n    if($used_stored == 1)\n    {\n        echo \"<b class='red'>Nothing returned (search expired). </b><br />\\n\";\n    }\n    else\n    {\n        echo \"<b class='red'>Nothing returned. </b><br />\\n\";\n    }\n    return(1);\n}\n\n\n/* Checking for no return */\nif(!isset($output_list[0]{'count'}))\n{\n    echo \"<b class='red'>Nothing returned. </b><br />\\n\";\n    return(1);\n}\n\n\n/* Checking maximum page size */\nif($USER_page >= $output_list[0]{'pg'})\n{\n    $USER_page = $output_list[0]{'pg'};\n}\n\n/* Page 1 will become the latest and the latest, page 1 */\n$real_page = ($output_list[0]{'pg'} + 1) - $USER_page;\n\n\necho \"<b>Total alerts found: </b>\".$output_list[0]{'count'}.\"<br />\";\n\nif($output_list[0]{'pg'} > 1)\n{\n    echo \"<b>Output divided in </b>\".\n         $output_list[0]{'pg'}.\" pages.<br />\";\n\n    echo '<br /><form name=\"dopage\" method=\"post\" action=\"index.php?f=s\">';\n}\n\n\nif($output_list[0]{'pg'} > 1)\n{\n    echo '\n        <input type=\"submit\" name=\"search\" value=\"<< First\" class=\"button\"\n               class=\"formText\" />\n\n        <input type=\"submit\" name=\"search\" value=\"< Prev\" class=\"button\"\n               class=\"formText\" />\n         ';\n\n    echo 'Page <b>'.$USER_page.'</b> ('.$output_list[0]{$real_page}.' alerts)';\n}\n\n/* Currently page */\necho '\n    <input type=\"hidden\" name=\"initdate\"\n           value=\"'.date('Y-m-d H:i', $u_init_time).'\" />\n    <input type=\"hidden\" name=\"finaldate\"\n           value=\"'.date('Y-m-d H:i', $u_final_time).'\" />\n    <input type=\"hidden\" name=\"rulepattern\" value=\"'.$u_rule.'\" />\n    <input type=\"hidden\" name=\"srcippattern\" value=\"'.$u_srcip.'\" />\n    <input type=\"hidden\" name=\"userpattern\" value=\"'.$u_user.'\" />\n    <input type=\"hidden\" name=\"locationpattern\" value=\"'.$u_location.'\" />\n    <input type=\"hidden\" name=\"level\" value=\"'.$u_level.'\" />\n    <input type=\"hidden\" name=\"page\" value=\"'.$USER_page.'\" />\n    <input type=\"hidden\" name=\"searchid\" value=\"'.$USER_searchid.'\" />\n    <input type=\"hidden\" name=\"monitoring\" value=\"'.$USER_monitoring.'\" />\n    <input type=\"hidden\" name=\"max_alerts_per_page\"\n                         value=\"'.$ossec_max_alerts_per_page.'\" />';\n\n\nif($output_list[0]{'pg'} > 1)\n{\necho '\n    &nbsp;&nbsp;\n    <input type=\"submit\" name=\"search\" value=\"Next >\" class=\"button\"\n           class=\"formText\" />\n     <input type=\"submit\" name=\"search\" value=\"Last >>\" class=\"button\"\n           class=\"formText\" />\n    </form>\n';\n}\n\n\n/* Checking if page exists */\nif(!isset($output_list[0]{$real_page}) ||\n   (strlen($output_list[$real_page]) < 5) ||\n   (!file_exists($output_list[$real_page])))\n{\n    echo \"<b class='red'>Nothing returned (or search expired). </b><br />\\n\";\n    return(1);\n}\n\necho \"<br /><br />\";\n\n\n/* Printing page */\n// TODO: There are functions for slurping file contents.\n$fp = fopen($output_list[$real_page], \"r\");\nif($fp)\n{\n    while(!feof($fp))\n    {\n        echo fgets($fp);\n    }\n}\n\n/* EOF */\n?>\n"], "filenames": ["site/search.php"], "buggy_code_start_loc": [12], "buggy_code_end_loc": [597], "fixing_code_start_loc": [12], "fixing_code_end_loc": [597], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in site/search.php in OSSEC Web UI before 0.9 allows remote attackers to inject arbitrary web script or HTML by leveraging an unanchored regex.", "other": {"cve": {"id": "CVE-2016-4847", "sourceIdentifier": "vultures@jpcert.or.jp", "published": "2017-04-20T17:59:00.290", "lastModified": "2017-04-25T18:42:23.287", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in site/search.php in OSSEC Web UI before 0.9 allows remote attackers to inject arbitrary web script or HTML by leveraging an unanchored regex."}, {"lang": "es", "value": "Vulnerabilidad XSS en site/search.php en OSSEC Web UI en versiones anteriores a 0.9 permite a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios mediante el aprovechamiento de un regex sin anclaje."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ossec:web_ui:*:*:*:*:*:*:*:*", "versionEndIncluding": "0.8", "matchCriteriaId": "2E2BA6F9-FB78-49E6-9596-1F95C69F67E3"}]}]}], "references": [{"url": "http://jvn.jp/en/jp/JVN58455472/index.html", "source": "vultures@jpcert.or.jp", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://jvndb.jvn.jp/en/contents/2016/JVNDB-2016-000141.html", "source": "vultures@jpcert.or.jp", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.securityfocus.com/bid/92536", "source": "vultures@jpcert.or.jp", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/ossec/ossec-wui/commit/b4dcbba7a8eb09ba9d38fc69807a8861255736d0", "source": "vultures@jpcert.or.jp", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/ossec/ossec-wui/commit/b4dcbba7a8eb09ba9d38fc69807a8861255736d0"}}