{"buggy_code": ["<?php\n/**\n * Prepare PHP SELF function\n *\n * @package RosarioSIS\n * @subpackage functions\n */\n\n/**\n * Prepare PHP SELF\n * Generates `Modules.php` SELF URL with GET parameters\n *\n * @example PreparePHP_SELF( $_REQUEST, array(), array( 'modfunc' => 'delete' ) );\n *\n * @uses URLEscape()\n *\n * @param  array  $tmp_REQUEST REQUEST vars (optional). Defaults to $_REQUEST array.\n * @param  array  $remove      Remove indexes from $tmp_REQUEST (optional).\n * @param  array  $add         Add values $tmp_REQUEST (associative array) (optional).\n *\n * @return string Modules.php SELF URL\n */\nfunction PreparePHP_SELF( $tmp_REQUEST = [], $remove = [], $add = [] )\n{\n\tif ( empty( $tmp_REQUEST ) )\n\t{\n\t\t$tmp_REQUEST = $_REQUEST;\n\t}\n\n\t// Remove Cookie vars.\n\tforeach ( $_COOKIE as $key => $value )\n\t{\n\t\tunset( $tmp_REQUEST[ $key ] );\n\t}\n\n\t// Remove vars in $remove.\n\tforeach ( (array) $remove as $key )\n\t{\n\t\tunset( $tmp_REQUEST[ $key ] );\n\t}\n\n\t// Unescape DB strings.\n\tarray_rwalk(\n\t\t$tmp_REQUEST,\n\t\tfunction ( $input )\n\t\t{\n\t\t\treturn is_null( $input ) ? $input : str_replace( \"''\", \"'\", $input );\n\t\t}\n\t);\n\n\t// Add vars in $add.\n\tforeach ( (array) $add as $key => $value )\n\t{\n\t\t$tmp_REQUEST[ $key ] = $value;\n\t}\n\n\t// Add modname param.\n\t$PHP_tmp_SELF = 'Modules.php?modname=' . ( isset( $tmp_REQUEST['modname'] ) ? $tmp_REQUEST['modname'] : '' );\n\n\tunset( $tmp_REQUEST['modname'] );\n\n\t// Add other params.\n\tforeach ( (array) $tmp_REQUEST as $key => $value )\n\t{\n\t\tif ( is_array( $value ) )\n\t\t{\n\t\t\tforeach ( $value as $key1 => $value1 )\n\t\t\t{\n\t\t\t\tif ( is_array( $value1 ) )\n\t\t\t\t{\n\t\t\t\t\tforeach ( $value1 as $key2 => $value2 )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( is_array( $value2 ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tforeach ( $value2 as $key3 => $value3 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ( $value3 !== '' )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$PHP_tmp_SELF .= '&' . $key .\n\t\t\t\t\t\t\t\t\t\t'[' . $key1 . '][' . $key2 .\n\t\t\t\t\t\t\t\t\t\t'][' . $key3 . ']=' . $value3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telseif ( $value2 !== '' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$PHP_tmp_SELF .= '&' . $key . '[' . $key1 .\n\t\t\t\t\t\t\t\t'][' . $key2 . ']=' . $value2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telseif ( $value1 !== '' )\n\t\t\t\t{\n\t\t\t\t\t$PHP_tmp_SELF .= '&' . $key . '[' . $key1 . ']=' . $value1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telseif ( $value !== '' )\n\t\t{\n\t\t\t$PHP_tmp_SELF .= '&' . $key . \"=\" . $value;\n\t\t}\n\t}\n\n\treturn URLEscape( $PHP_tmp_SELF );\n}\n\n\n/**\n * Redirect URL\n * Will update the requested URL in the browser,\n * (soft redirection using the X-Redirect-Url header)\n * removing the requested parameters passed as argument.\n * Use after a successful remove / delete / update / save operation.\n * Prevents showing an obsolete & confusing delete confirmation screen on page reload.\n *\n * @since 3.3\n *\n * @example RedirectURL( array( 'modfunc', 'id' ) );\n *\n * @uses X-Redirect-Url header.\n * @uses PreparePHP_SELF\n *\n * @see warehouse.js check for X-Redirect-Url\n *\n * @param array|string $remove Parameters to remove from the $_REQUEST & $_SESSION['_REQUEST_vars'] arrays.\n *\n * @return boolean     False if nothing to remove, else true.\n */\nfunction RedirectURL( $remove )\n{\n\tstatic $remove_all = [];\n\n\tif ( ! $remove )\n\t{\n\t\treturn false;\n\t}\n\n\tforeach ( (array) $remove as $request_key )\n\t{\n\t\tif ( ! isset( $_REQUEST[ $request_key ] ) )\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t$_REQUEST[ $request_key ] = false;\n\n\t\tif ( isset( $_SESSION['_REQUEST_vars'][ $request_key ] ) )\n\t\t{\n\t\t\t$_SESSION['_REQUEST_vars'][ $request_key ] = false;\n\t\t}\n\t}\n\n\t$remove_all = array_unique( array_merge( $remove_all, (array) $remove ) );\n\n\t$redirect_url = PreparePHP_SELF( $_GET, $remove_all );\n\n\t// Redirect URL.\n\theader( 'X-Redirect-Url: ' . $redirect_url );\n\n\treturn true;\n}\n\n\n/**\n * My URL encode\n * RFC 3986 compliant\n *\n * @see http://php.net/manual/en/function.urlencode.php#97969\n *\n * @param  string $string String to encode.\n *\n * @return string Encoded string\n */\nfunction URLEscape( $string )\n{\n\t$string = preg_replace_callback(\n\t\t// Match both decimal & hex code (although hex codes can contain a-f letters).\n\t\t// Should be enough as the alphabet hex codes only have numbers.\n\t\t\"/(&#x?[0-9]+;?)/i\",\n\t\tfunction( $match ) {\n\t\t\tif ( mb_substr( $match[1], -1 ) !== ';' )\n\t\t\t{\n\t\t\t\t// Fix stored XSS security issue: add semicolon to HTML entity so it can be decoded.\n\t\t\t\t// @link https://www.php.net/manual/en/function.html-entity-decode.php#104617\n\t\t\t\t$match[1] .= ';';\n\t\t\t}\n\n\t\t\treturn $match[1];\n\t\t},\n\t\t$string\n\t);\n\n\t// Fix stored XSS security issue: decode HTML entities from URL.\n\t$string = html_entity_decode( (string) $string );\n\n\t$remove = [\n\t\t// Fix stored XSS security issue: remove inline JS from URL.\n\t\t'javascript:',\n\t];\n\n\tforeach ( $remove as $remove_string )\n\t{\n\t\twhile ( strpos( $string, $remove_string ) !== false )\n\t\t{\n\t\t\t$string = str_ireplace( $remove, '', $string );\n\t\t}\n\t}\n\n\t$entities = [\n\t\t'%21',\n\t\t'%2A',\n\t\t'%27',\n\t\t'%28',\n\t\t'%29',\n\t\t'%3B',\n\t\t'%3A',\n\t\t'%40',\n\t\t'%26',\n\t\t'%3D',\n\t\t'%2B',\n\t\t'%24',\n\t\t'%2C',\n\t\t'%2F',\n\t\t'%3F',\n\t\t'%25',\n\t\t'%23',\n\t\t'%5B',\n\t\t'%5D',\n\t];\n\n\t$replacements = [\n\t\t'!',\n\t\t'*',\n\t\t\"'\",\n\t\t'(',\n\t\t')',\n\t\t';',\n\t\t':',\n\t\t'@',\n\t\t'&',\n\t\t'=',\n\t\t'+',\n\t\t'$',\n\t\t',',\n\t\t'/',\n\t\t'?',\n\t\t'%',\n\t\t'#',\n\t\t'[',\n\t\t']',\n\t];\n\n\treturn str_replace(\n\t\t$entities,\n\t\t$replacements,\n\t\trawurlencode( $string )\n\t);\n}\n\n// @deprecated since 6.8 Use URLEscape().\nfunction _myURLEncode( $string )\n{\n\treturn URLEscape( $string );\n}\n"], "fixing_code": ["<?php\n/**\n * Prepare PHP SELF function\n *\n * @package RosarioSIS\n * @subpackage functions\n */\n\n/**\n * Prepare PHP SELF\n * Generates `Modules.php` SELF URL with GET parameters\n *\n * @example PreparePHP_SELF( $_REQUEST, array(), array( 'modfunc' => 'delete' ) );\n *\n * @uses URLEscape()\n *\n * @param  array  $tmp_REQUEST REQUEST vars (optional). Defaults to $_REQUEST array.\n * @param  array  $remove      Remove indexes from $tmp_REQUEST (optional).\n * @param  array  $add         Add values $tmp_REQUEST (associative array) (optional).\n *\n * @return string Modules.php SELF URL\n */\nfunction PreparePHP_SELF( $tmp_REQUEST = [], $remove = [], $add = [] )\n{\n\tif ( empty( $tmp_REQUEST ) )\n\t{\n\t\t$tmp_REQUEST = $_REQUEST;\n\t}\n\n\t// Remove Cookie vars.\n\tforeach ( $_COOKIE as $key => $value )\n\t{\n\t\tunset( $tmp_REQUEST[ $key ] );\n\t}\n\n\t// Remove vars in $remove.\n\tforeach ( (array) $remove as $key )\n\t{\n\t\tunset( $tmp_REQUEST[ $key ] );\n\t}\n\n\t// Unescape DB strings.\n\tarray_rwalk(\n\t\t$tmp_REQUEST,\n\t\tfunction ( $input )\n\t\t{\n\t\t\treturn is_null( $input ) ? $input : str_replace( \"''\", \"'\", $input );\n\t\t}\n\t);\n\n\t// Add vars in $add.\n\tforeach ( (array) $add as $key => $value )\n\t{\n\t\t$tmp_REQUEST[ $key ] = $value;\n\t}\n\n\t// Add modname param.\n\t$PHP_tmp_SELF = 'Modules.php?modname=' . ( isset( $tmp_REQUEST['modname'] ) ? $tmp_REQUEST['modname'] : '' );\n\n\tunset( $tmp_REQUEST['modname'] );\n\n\t// Add other params.\n\tforeach ( (array) $tmp_REQUEST as $key => $value )\n\t{\n\t\tif ( is_array( $value ) )\n\t\t{\n\t\t\tforeach ( $value as $key1 => $value1 )\n\t\t\t{\n\t\t\t\tif ( is_array( $value1 ) )\n\t\t\t\t{\n\t\t\t\t\tforeach ( $value1 as $key2 => $value2 )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( is_array( $value2 ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tforeach ( $value2 as $key3 => $value3 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ( $value3 !== '' )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$PHP_tmp_SELF .= '&' . $key .\n\t\t\t\t\t\t\t\t\t\t'[' . $key1 . '][' . $key2 .\n\t\t\t\t\t\t\t\t\t\t'][' . $key3 . ']=' . $value3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telseif ( $value2 !== '' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$PHP_tmp_SELF .= '&' . $key . '[' . $key1 .\n\t\t\t\t\t\t\t\t'][' . $key2 . ']=' . $value2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telseif ( $value1 !== '' )\n\t\t\t\t{\n\t\t\t\t\t$PHP_tmp_SELF .= '&' . $key . '[' . $key1 . ']=' . $value1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telseif ( $value !== '' )\n\t\t{\n\t\t\t$PHP_tmp_SELF .= '&' . $key . \"=\" . $value;\n\t\t}\n\t}\n\n\treturn URLEscape( $PHP_tmp_SELF );\n}\n\n\n/**\n * Redirect URL\n * Will update the requested URL in the browser,\n * (soft redirection using the X-Redirect-Url header)\n * removing the requested parameters passed as argument.\n * Use after a successful remove / delete / update / save operation.\n * Prevents showing an obsolete & confusing delete confirmation screen on page reload.\n *\n * @since 3.3\n *\n * @example RedirectURL( array( 'modfunc', 'id' ) );\n *\n * @uses X-Redirect-Url header.\n * @uses PreparePHP_SELF\n *\n * @see warehouse.js check for X-Redirect-Url\n *\n * @param array|string $remove Parameters to remove from the $_REQUEST & $_SESSION['_REQUEST_vars'] arrays.\n *\n * @return boolean     False if nothing to remove, else true.\n */\nfunction RedirectURL( $remove )\n{\n\tstatic $remove_all = [];\n\n\tif ( ! $remove )\n\t{\n\t\treturn false;\n\t}\n\n\tforeach ( (array) $remove as $request_key )\n\t{\n\t\tif ( ! isset( $_REQUEST[ $request_key ] ) )\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t$_REQUEST[ $request_key ] = false;\n\n\t\tif ( isset( $_SESSION['_REQUEST_vars'][ $request_key ] ) )\n\t\t{\n\t\t\t$_SESSION['_REQUEST_vars'][ $request_key ] = false;\n\t\t}\n\t}\n\n\t$remove_all = array_unique( array_merge( $remove_all, (array) $remove ) );\n\n\t$redirect_url = PreparePHP_SELF( $_GET, $remove_all );\n\n\t// Redirect URL.\n\theader( 'X-Redirect-Url: ' . $redirect_url );\n\n\treturn true;\n}\n\n\n/**\n * My URL encode\n * RFC 3986 compliant\n *\n * @see http://php.net/manual/en/function.urlencode.php#97969\n *\n * @param  string $string String to encode.\n *\n * @return string Encoded string\n */\nfunction URLEscape( $string )\n{\n\t$string = preg_replace_callback(\n\t\t// Match both decimal & hex code (although hex codes can contain a-f letters).\n\t\t// Should be enough as the alphabet hex codes only have numbers.\n\t\t\"/(&#x?[0-9]+;?)/i\",\n\t\tfunction( $match ) {\n\t\t\tif ( mb_substr( $match[1], -1 ) !== ';' )\n\t\t\t{\n\t\t\t\t// Fix stored XSS security issue: add semicolon to HTML entity so it can be decoded.\n\t\t\t\t// @link https://www.php.net/manual/en/function.html-entity-decode.php#104617\n\t\t\t\t$match[1] .= ';';\n\t\t\t}\n\n\t\t\treturn $match[1];\n\t\t},\n\t\t$string\n\t);\n\n\t// Fix stored XSS security issue: decode HTML entities from URL.\n\t$string = html_entity_decode( (string) $string );\n\n\t$remove = [\n\t\t// Fix stored XSS security issue: remove inline JS from URL.\n\t\t'javascript:',\n\t];\n\n\tforeach ( $remove as $remove_string )\n\t{\n\t\twhile ( stripos( $string, $remove_string ) !== false )\n\t\t{\n\t\t\t$string = str_ireplace( $remove, '', $string );\n\t\t}\n\t}\n\n\t$entities = [\n\t\t'%21',\n\t\t'%2A',\n\t\t'%27',\n\t\t'%28',\n\t\t'%29',\n\t\t'%3B',\n\t\t'%3A',\n\t\t'%40',\n\t\t'%26',\n\t\t'%3D',\n\t\t'%2B',\n\t\t'%24',\n\t\t'%2C',\n\t\t'%2F',\n\t\t'%3F',\n\t\t'%25',\n\t\t'%23',\n\t\t'%5B',\n\t\t'%5D',\n\t];\n\n\t$replacements = [\n\t\t'!',\n\t\t'*',\n\t\t\"'\",\n\t\t'(',\n\t\t')',\n\t\t';',\n\t\t':',\n\t\t'@',\n\t\t'&',\n\t\t'=',\n\t\t'+',\n\t\t'$',\n\t\t',',\n\t\t'/',\n\t\t'?',\n\t\t'%',\n\t\t'#',\n\t\t'[',\n\t\t']',\n\t];\n\n\treturn str_replace(\n\t\t$entities,\n\t\t$replacements,\n\t\trawurlencode( $string )\n\t);\n}\n\n// @deprecated since 6.8 Use URLEscape().\nfunction _myURLEncode( $string )\n{\n\treturn URLEscape( $string );\n}\n"], "filenames": ["functions/PreparePHP_SELF.fnc.php"], "buggy_code_start_loc": [203], "buggy_code_end_loc": [204], "fixing_code_start_loc": [203], "fixing_code_end_loc": [204], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository francoisjacquet/rosariosis prior to 9.0.", "other": {"cve": {"id": "CVE-2022-1997", "sourceIdentifier": "security@huntr.dev", "published": "2022-06-08T14:15:07.793", "lastModified": "2022-06-14T19:25:15.987", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository francoisjacquet/rosariosis prior to 9.0."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Almacenado en el repositorio de GitHub francoisjacquet/rosariosis versiones anteriores a 9.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.3}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:rosariosis:rosariosis:*:*:*:*:*:*:*:*", "versionEndExcluding": "9.0", "matchCriteriaId": "2BB9E0BA-2A26-4ACA-8636-DCF3512F2180"}]}]}], "references": [{"url": "https://github.com/francoisjacquet/rosariosis/commit/6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/28861ae9-7b09-45b7-a003-eccf903db71d", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/francoisjacquet/rosariosis/commit/6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8"}}