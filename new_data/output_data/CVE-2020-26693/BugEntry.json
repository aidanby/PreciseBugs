{"buggy_code": ["<?php\n/*\n * load_balancer_monitor.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2020 Rubicon Communications, LLC (Netgate)\n * Copyright (c) 2005-2008 Bill Marquette <bill.marquette@gmail.com>\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-services-loadbalancer-monitor\n##|*NAME=Services: Load Balancer: Monitors\n##|*DESCR=Allow access to the 'Services: Load Balancer: Monitors' page.\n##|*MATCH=load_balancer_monitor.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"filter.inc\");\n\ninit_config_arr(array('load_balancer', 'monitor_type'));\n$a_monitor = &$config['load_balancer']['monitor_type'];\n\n$pconfig = $_POST;\n\nif ($_POST['apply']) {\n\t$retval = 0;\n\t$retval |= filter_configure();\n\t$retval |= relayd_configure();\n\n\tclear_subsystem_dirty('loadbalancer');\n}\n\n\nif ($_POST['act'] == \"del\") {\n\tif (array_key_exists($_POST['id'], $a_monitor)) {\n\t\t/* make sure no pools reference this entry */\n\t\tif (is_array($config['load_balancer']['lbpool'])) {\n\t\t\tforeach ($config['load_balancer']['lbpool'] as $pool) {\n\t\t\t\tif ($pool['monitor'] == $a_monitor[$_POST['id']]['name']) {\n\t\t\t\t\t$input_errors[] = gettext(\"This entry cannot be deleted because it is still referenced by at least one pool.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!$input_errors) {\n\t\t\tunset($a_monitor[$_POST['id']]);\n\t\t\twrite_config();\n\t\t\tmark_subsystem_dirty('loadbalancer');\n\t\t\theader(\"Location: load_balancer_monitor.php\");\n\t\t\texit;\n\t\t}\n\t}\n}\n\n$pgtitle = array(gettext(\"Services\"), gettext(\"Load Balancer\"), gettext(\"Monitors\"));\n$pglinks = array(\"\", \"load_balancer_pool.php\", \"@self\");\n$shortcut_section = \"relayd\";\n\ninclude(\"head.inc\");\n\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\n\nif ($_POST['apply']) {\n\tprint_apply_result_box($retval);\n}\n\nif (is_subsystem_dirty('loadbalancer')) {\n\tprint_apply_box(gettext(\"The load balancer configuration has been changed.\") . \"<br />\" . gettext(\"The changes must be applied for them to take effect.\"));\n}\n\n/* active tabs */\n$tab_array = array();\n$tab_array[] = array(gettext(\"Pools\"), false, \"load_balancer_pool.php\");\n$tab_array[] = array(gettext(\"Virtual Servers\"), false, \"load_balancer_virtual_server.php\");\n$tab_array[] = array(gettext(\"Monitors\"), true, \"load_balancer_monitor.php\");\n$tab_array[] = array(gettext(\"Settings\"), false, \"load_balancer_setting.php\");\ndisplay_top_tabs($tab_array);\n?>\n\n<form action=\"load_balancer_monitor.php\" method=\"post\">\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-heading\"><h2 class=\"panel-title\"><?=gettext('Monitor')?></h2></div>\n\t\t<div class=\"panel-body table-responsive\">\n\t\t\t<table class=\"table table-striped table-hover table-condensed table-rowdblclickedit\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th><?=gettext('Name')?></th>\n\t\t\t\t\t\t<th><?=gettext('Type')?></th>\n\t\t\t\t\t\t<th><?=gettext('Description')?></th>\n\t\t\t\t\t\t<th><?=gettext('Actions')?></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n<?php\n$idx = 0;\nforeach ($a_monitor as $monitor) {\n?>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?=$monitor['name']?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?=$monitor['type']?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?=$monitor['descr']?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a class=\"fa fa-pencil\"\ttitle=\"<?=gettext('Edit monitor')?>\"\thref=\"load_balancer_monitor_edit.php?id=<?=$idx?>\"></a>\n\t\t\t\t\t\t\t<a class=\"fa fa-clone\"\ttitle=\"<?=gettext('Copy monitor')?>\"\thref=\"load_balancer_monitor_edit.php?act=dup&amp;id=<?=$idx?>\"></a>\n\t\t\t\t\t\t\t<a class=\"fa fa-trash\"\ttitle=\"<?=gettext('Delete monitor')?>\"\thref=\"load_balancer_monitor.php?act=del&amp;id=<?=$idx?>\" usepost></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n<?php\n\t$idx++;\n}\n?>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</form>\n\n<nav class=\"action-buttons\">\n\t<a href=\"load_balancer_monitor_edit.php\" class=\"btn btn-success btn-sm\">\n\t\t<i class=\"fa fa-plus icon-embed-btn\"></i>\n\t\t<?=gettext('Add')?>\n\t</a>\n</nav>\n\n<?php\n\ninclude(\"foot.inc\");\n", "<?php\n/*\n * load_balancer_monitor_edit.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2020 Rubicon Communications, LLC (Netgate)\n * Copyright (c) 2005-2008 Bill Marquette <bill.marquette@gmail.com>\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-services-loadbalancer-monitor-edit\n##|*NAME=Services: Load Balancer: Monitor: Edit\n##|*DESCR=Allow access to the 'Services: Load Balancer: Monitor: Edit' page.\n##|*MATCH=load_balancer_monitor_edit.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\n\n$referer = (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '/load_balancer_monitor.php');\n\ninit_config_arr(array('load_balancer', 'monitor_type'));\n$a_monitor = &$config['load_balancer']['monitor_type'];\n$id = $_REQUEST['id'];\n\nif (isset($id) && $a_monitor[$id]) {\n\t$pconfig['name'] = $a_monitor[$id]['name'];\n\t$pconfig['type'] = $a_monitor[$id]['type'];\n\t$pconfig['descr'] = $a_monitor[$id]['descr'];\n\t$pconfig['options'] = array();\n\t$pconfig['options'] = $a_monitor[$id]['options'];\n} else {\n\t/* Some sane page defaults */\n\t$pconfig['options']['path'] = '/';\n\t$pconfig['options']['code'] = 200;\n}\n\nif ($_REQUEST['act'] == \"dup\") {\n\tunset($id);\n}\n\n$changedesc = gettext(\"Load Balancer: Monitor:\") . \" \";\n$changecount = 0;\n\nif ($_POST['save']) {\n\t$changecount++;\n\n\tunset($input_errors);\n\t$pconfig = $_POST;\n\n\t/* turn $_POST['http_options_*'] into $pconfig['options'][*] */\n\tforeach ($_POST as $key => $val) {\n\t\tif (stristr($key, 'options') !== false) {\n\t\t\tif (stristr($key, $pconfig['type'].'_') !== false) {\n\t\t\t\t$opt = explode('_', $key);\n\t\t\t\t$pconfig['options'][$opt[2]] = $val;\n\t\t\t}\n\t\t\tunset($pconfig[$key]);\n\t\t}\n\t}\n\n\t/* input validation */\n\t$reqdfields = explode(\" \", \"name type descr\");\n\t$reqdfieldsn = array(gettext(\"Name\"), gettext(\"Type\"), gettext(\"Description\"));\n\n\tdo_input_validation($_POST, $reqdfields, $reqdfieldsn, $input_errors);\n\n\t/* Ensure that our monitor names are unique */\n\tfor ($i = 0; isset($config['load_balancer']['monitor_type'][$i]); $i++) {\n\t\tif (($_POST['name'] == $config['load_balancer']['monitor_type'][$i]['name']) && ($i != $id)) {\n\t\t\t$input_errors[] = gettext(\"This monitor name has already been used.  Monitor names must be unique.\");\n\t\t}\n\t}\n\n\tif (preg_match('/[ \\/]/', $_POST['name'])) {\n\t\t$input_errors[] = gettext(\"Spaces or slashes cannot be used in the 'name' field.\");\n\t}\n\n\tif (strlen($_POST['name']) > 16) {\n\t\t$input_errors[] = gettext(\"The 'name' field must be 16 characters or less.\");\n\t}\n\n\tswitch ($_POST['type']) {\n\t\tcase 'icmp': {\n\t\t\tbreak;\n\t\t}\n\t\tcase 'tcp': {\n\t\t\tbreak;\n\t\t}\n\t\tcase 'http':\n\t\tcase 'https': {\n\t\t\tif (is_array($pconfig['options'])) {\n\t\t\t\tif (isset($pconfig['options']['host']) && $pconfig['options']['host'] != \"\") {\n\t\t\t\t\tif (!is_hostname($pconfig['options']['host'])) {\n\t\t\t\t\t\t$input_errors[] = gettext(\"The hostname can only contain the characters A-Z, 0-9 and '-'.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isset($pconfig['options']['code']) && $pconfig['options']['code'] != \"\") {\n\t\t\t\t\t// Check code\n\t\t\t\t\tif (!is_rfc2616_code($pconfig['options']['code'])) {\n\t\t\t\t\t\t$input_errors[] = gettext(\"HTTP(s) codes must be from RFC2616.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isset($pconfig['options']['path']) || $pconfig['options']['path'] == \"\") {\n\t\t\t\t\t$input_errors[] = gettext(\"The path to monitor must be set.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'send': {\n\t\t\tif (is_array($pconfig['options'])) {\n\t\t\t\tif (isset($pconfig['options']['send']) && $pconfig['options']['send'] != \"\") {\n\t\t\t\t\t// Check send\n\t\t\t\t}\n\t\t\t\tif (isset($pconfig['options']['expect']) && $pconfig['options']['expect'] != \"\") {\n\t\t\t\t\t// Check expect\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!$input_errors) {\n\t\t$monent = array();\n\t\tif (isset($id) && $a_monitor[$id]) {\n\t\t\t$monent = $a_monitor[$id];\n\t\t}\n\t\tif ($monent['name'] != \"\") {\n\t\t\t$changedesc .= \" \" . sprintf(gettext(\"modified '%s' monitor:\"), $monent['name']);\n\t\t}\n\n\t\tupdate_if_changed(\"name\", $monent['name'], $pconfig['name']);\n\t\tupdate_if_changed(\"type\", $monent['type'], $pconfig['type']);\n\t\tupdate_if_changed(\"description\", $monent['descr'], $pconfig['descr']);\n\t\tif ($pconfig['type'] == \"http\" || $pconfig['type'] == \"https\") {\n\t\t\t/* log updates, then clear array and reassign - dumb, but easiest way to have a clear array */\n\t\t\tupdate_if_changed(\"path\", $monent['options']['path'], $pconfig['options']['path']);\n\t\t\tupdate_if_changed(\"host\", $monent['options']['host'], $pconfig['options']['host']);\n\t\t\tupdate_if_changed(\"code\", $monent['options']['code'], $pconfig['options']['code']);\n\t\t\t$monent['options'] = array();\n\t\t\t$monent['options']['path'] = $pconfig['options']['path'];\n\t\t\t$monent['options']['host'] = $pconfig['options']['host'];\n\t\t\t$monent['options']['code'] = $pconfig['options']['code'];\n\t\t}\n\t\tif ($pconfig['type'] == \"send\") {\n\t\t\t/* log updates, then clear array and reassign - dumb, but easiest way to have a clear array */\n\t\t\tupdate_if_changed(\"send\", $monent['options']['send'], $pconfig['options']['send']);\n\t\t\tupdate_if_changed(\"expect\", $monent['options']['expect'], $pconfig['options']['expect']);\n\t\t\t$monent['options'] = array();\n\t\t\t$monent['options']['send'] = $pconfig['options']['send'];\n\t\t\t$monent['options']['expect'] = $pconfig['options']['expect'];\n\t\t}\n\t\tif ($pconfig['type'] == \"tcp\" || $pconfig['type'] == \"icmp\") {\n\t\t\t$monent['options'] = array();\n\t\t}\n\n\t\tif (isset($id) && $a_monitor[$id]) {\n\t\t\t/* modify all pools with this name */\n\t\t\tfor ($i = 0; isset($config['load_balancer']['lbpool'][$i]); $i++) {\n\t\t\t\tif ($config['load_balancer']['lbpool'][$i]['monitor'] == $a_monitor[$id]['name']) {\n\t\t\t\t\t$config['load_balancer']['lbpool'][$i]['monitor'] = $monent['name'];\n\t\t\t\t}\n\t\t\t}\n\t\t\t$a_monitor[$id] = $monent;\n\t\t} else {\n\t\t\t$a_monitor[] = $monent;\n\t\t}\n\n\t\tif ($changecount > 0) {\n\t\t\t/* Mark config dirty */\n\t\t\tmark_subsystem_dirty('loadbalancer');\n\t\t\twrite_config($changedesc);\n\t\t}\n\n\t\theader(\"Location: load_balancer_monitor.php\");\n\t\texit;\n\t}\n}\n\n$pgtitle = array(gettext(\"Services\"), gettext(\"Load Balancer\"), gettext(\"Monitors\"), gettext(\"Edit\"));\n$pglinks = array(\"\", \"load_balancer_pool.php\", \"load_balancer_monitor.php\", \"@self\");\n$shortcut_section = \"relayd\";\n\ninclude(\"head.inc\");\n$types = array(\"icmp\" => gettext(\"ICMP\"), \"tcp\" => gettext(\"TCP\"), \"http\" => gettext(\"HTTP\"), \"https\" => gettext(\"HTTPS\"), \"send\" => gettext(\"Send/Expect\"));\n\n?>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nevents.push(function() {\n\n\t// Hides all elements of the specified class. This will usually be a section\n\tfunction hideClass(s_class, hide) {\n\t\tif (hide) {\n\t\t\t$('.' + s_class).hide();\n\t\t} else {\n\t\t\t$('.' + s_class).show();\n\t\t}\n\t}\n\n\t// Hide all sections except 't'\n\tfunction updateType(t) {\n\t\tswitch (t) {\n\t<?php\n\t\t/* OK, so this is sick using php to generate javascript, but it needed to be done */\n\t\tforeach ($types as $key => $val) {\n\t\t\techo \"\t\tcase \\\"{$key}\\\": {\\n\";\n\t\t\t$t = $types;\n\t\t\tforeach ($t as $k => $v) {\n\t\t\t\tif ($k != $key) {\n\t\t\t\t\techo \"\t\t\thideClass('{$k}', true);\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\techo \"\t\t}\\n\";\n\t\t}\n\t?>\n\t\t}\n\n\t\thideClass(t, false);\n\t}\n\n\t// ---------- Click checkbox handlers ---------------------------------------------------------\n\n\t$('#type').on('change', function() {\n\t\tupdateType($('#type').val());\n\t});\n\n\t// ---------- On initial page load ------------------------------------------------------------\n\n\tupdateType($('#type').val());\n});\n\n//]]>\n</script>\n\n<?php\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\n\n$form = new Form();\n$form->setAction(\"load_balancer_monitor_edit.php\");\n\n$section = new Form_Section('Edit Load Balancer - Monitor Entry');\n\n$section->addInput(new Form_Input(\n\t'name',\n\t'*Name',\n\t'text',\n\t$pconfig['name']\n));\n\n$section->addInput(new Form_Input(\n\t'descr',\n\t'*Description',\n\t'text',\n\t$pconfig['descr']\n));\n\n$section->addInput(new Form_Select(\n\t'type',\n\t'Type',\n\t$pconfig['type'],\n\t$types\n));\n\n$form->add($section);\n\n$section = new Form_Section('HTTP Options');\n$section->addClass('http');\n\n$section->addInput(new Form_Input(\n\t'http_options_path',\n\t'Path',\n\t'text',\n\t$pconfig['options']['path']\n));\n\n$section->addInput(new Form_Input(\n\t'http_options_host',\n\t'Host',\n\t'text',\n\t$pconfig['options']['host']\n))->setHelp('Hostname for Host: header if needed.');\n\n$section->addInput(new Form_Select(\n\t'http_options_code',\n\t'HTTP Code',\n\t$pconfig['options']['code'],\n\t$rfc2616\n));\n\n$form->add($section);\n\n$section = new Form_Section('HTTPS Options');\n$section->addClass('https');\n\n$section->addInput(new Form_Input(\n\t'https_options_path',\n\t'Path',\n\t'text',\n\t$pconfig['options']['path']\n));\n\n$section->addInput(new Form_Input(\n\t'https_options_host',\n\t'Host',\n\t'text',\n\t$pconfig['options']['host']\n))->setHelp('Hostname for Host: header if needed.');\n\n$section->addInput(new Form_Select(\n\t'https_options_code',\n\t'HTTPS Code',\n\t$pconfig['options']['code'],\n\t$rfc2616\n));\n\n$form->add($section);\n\n$section = new Form_Section('Send/Expect Options');\n$section->addClass('send');\n\n$section->addInput(new Form_Input(\n\t'send_options_send',\n\t'Send',\n\t'text',\n\t$pconfig['options']['send']\n));\n\n$section->addInput(new Form_Input(\n\t'send_options_expect',\n\t'Expect',\n\t'text',\n\t$pconfig['options']['expect']\n));\n\nif (isset($id) && $a_monitor[$id]) {\n\t$section->addInput(new Form_Input(\n\t\t'id',\n\t\tnull,\n\t\t'hidden',\n\t\t$id\n\t));\n}\n\n$form->add($section);\n\nprint($form);\n\ninclude(\"foot.inc\");\n"], "fixing_code": ["<?php\n/*\n * load_balancer_monitor.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2020 Rubicon Communications, LLC (Netgate)\n * Copyright (c) 2005-2008 Bill Marquette <bill.marquette@gmail.com>\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-services-loadbalancer-monitor\n##|*NAME=Services: Load Balancer: Monitors\n##|*DESCR=Allow access to the 'Services: Load Balancer: Monitors' page.\n##|*MATCH=load_balancer_monitor.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"filter.inc\");\n\ninit_config_arr(array('load_balancer', 'monitor_type'));\n$a_monitor = &$config['load_balancer']['monitor_type'];\n\n$pconfig = $_POST;\n\nif ($_POST['apply']) {\n\t$retval = 0;\n\t$retval |= filter_configure();\n\t$retval |= relayd_configure();\n\n\tclear_subsystem_dirty('loadbalancer');\n}\n\n\nif ($_POST['act'] == \"del\") {\n\tif (array_key_exists($_POST['id'], $a_monitor)) {\n\t\t/* make sure no pools reference this entry */\n\t\tif (is_array($config['load_balancer']['lbpool'])) {\n\t\t\tforeach ($config['load_balancer']['lbpool'] as $pool) {\n\t\t\t\tif ($pool['monitor'] == $a_monitor[$_POST['id']]['name']) {\n\t\t\t\t\t$input_errors[] = gettext(\"This entry cannot be deleted because it is still referenced by at least one pool.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!$input_errors) {\n\t\t\tunset($a_monitor[$_POST['id']]);\n\t\t\twrite_config();\n\t\t\tmark_subsystem_dirty('loadbalancer');\n\t\t\theader(\"Location: load_balancer_monitor.php\");\n\t\t\texit;\n\t\t}\n\t}\n}\n\n$pgtitle = array(gettext(\"Services\"), gettext(\"Load Balancer\"), gettext(\"Monitors\"));\n$pglinks = array(\"\", \"load_balancer_pool.php\", \"@self\");\n$shortcut_section = \"relayd\";\n\ninclude(\"head.inc\");\n\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\n\nif ($_POST['apply']) {\n\tprint_apply_result_box($retval);\n}\n\nif (is_subsystem_dirty('loadbalancer')) {\n\tprint_apply_box(gettext(\"The load balancer configuration has been changed.\") . \"<br />\" . gettext(\"The changes must be applied for them to take effect.\"));\n}\n\n/* active tabs */\n$tab_array = array();\n$tab_array[] = array(gettext(\"Pools\"), false, \"load_balancer_pool.php\");\n$tab_array[] = array(gettext(\"Virtual Servers\"), false, \"load_balancer_virtual_server.php\");\n$tab_array[] = array(gettext(\"Monitors\"), true, \"load_balancer_monitor.php\");\n$tab_array[] = array(gettext(\"Settings\"), false, \"load_balancer_setting.php\");\ndisplay_top_tabs($tab_array);\n?>\n\n<form action=\"load_balancer_monitor.php\" method=\"post\">\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-heading\"><h2 class=\"panel-title\"><?=gettext('Monitor')?></h2></div>\n\t\t<div class=\"panel-body table-responsive\">\n\t\t\t<table class=\"table table-striped table-hover table-condensed table-rowdblclickedit\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th><?=gettext('Name')?></th>\n\t\t\t\t\t\t<th><?=gettext('Type')?></th>\n\t\t\t\t\t\t<th><?=gettext('Description')?></th>\n\t\t\t\t\t\t<th><?=gettext('Actions')?></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n<?php\n$idx = 0;\nforeach ($a_monitor as $monitor) {\n?>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?=htmlspecialchars($monitor['name'])?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?=htmlspecialchars($monitor['type'])?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?=htmlspecialchars($monitor['descr'])?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a class=\"fa fa-pencil\"\ttitle=\"<?=gettext('Edit monitor')?>\"\thref=\"load_balancer_monitor_edit.php?id=<?=$idx?>\"></a>\n\t\t\t\t\t\t\t<a class=\"fa fa-clone\"\ttitle=\"<?=gettext('Copy monitor')?>\"\thref=\"load_balancer_monitor_edit.php?act=dup&amp;id=<?=$idx?>\"></a>\n\t\t\t\t\t\t\t<a class=\"fa fa-trash\"\ttitle=\"<?=gettext('Delete monitor')?>\"\thref=\"load_balancer_monitor.php?act=del&amp;id=<?=$idx?>\" usepost></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n<?php\n\t$idx++;\n}\n?>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</form>\n\n<nav class=\"action-buttons\">\n\t<a href=\"load_balancer_monitor_edit.php\" class=\"btn btn-success btn-sm\">\n\t\t<i class=\"fa fa-plus icon-embed-btn\"></i>\n\t\t<?=gettext('Add')?>\n\t</a>\n</nav>\n\n<?php\n\ninclude(\"foot.inc\");\n", "<?php\n/*\n * load_balancer_monitor_edit.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2020 Rubicon Communications, LLC (Netgate)\n * Copyright (c) 2005-2008 Bill Marquette <bill.marquette@gmail.com>\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n##|+PRIV\n##|*IDENT=page-services-loadbalancer-monitor-edit\n##|*NAME=Services: Load Balancer: Monitor: Edit\n##|*DESCR=Allow access to the 'Services: Load Balancer: Monitor: Edit' page.\n##|*MATCH=load_balancer_monitor_edit.php*\n##|-PRIV\n\nrequire_once(\"guiconfig.inc\");\n\n$types = array(\n\t\"icmp\" => gettext(\"ICMP\"),\n\t\"tcp\" => gettext(\"TCP\"),\n\t\"http\" => gettext(\"HTTP\"),\n\t\"https\" => gettext(\"HTTPS\"),\n\t\"send\" => gettext(\"Send/Expect\")\n);\n\n$referer = (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '/load_balancer_monitor.php');\n\ninit_config_arr(array('load_balancer', 'monitor_type'));\n$a_monitor = &$config['load_balancer']['monitor_type'];\n$id = $_REQUEST['id'];\n\nif (isset($id) && $a_monitor[$id]) {\n\t$pconfig['name'] = $a_monitor[$id]['name'];\n\t$pconfig['type'] = $a_monitor[$id]['type'];\n\t$pconfig['descr'] = $a_monitor[$id]['descr'];\n\t$pconfig['options'] = array();\n\t$pconfig['options'] = $a_monitor[$id]['options'];\n} else {\n\t/* Some sane page defaults */\n\t$pconfig['options']['path'] = '/';\n\t$pconfig['options']['code'] = 200;\n}\n\nif ($_REQUEST['act'] == \"dup\") {\n\tunset($id);\n}\n\n$changedesc = gettext(\"Load Balancer: Monitor:\") . \" \";\n$changecount = 0;\n\nif ($_POST['save']) {\n\t$changecount++;\n\n\tunset($input_errors);\n\t$pconfig = $_POST;\n\n\t/* turn $_POST['http_options_*'] into $pconfig['options'][*] */\n\tforeach ($_POST as $key => $val) {\n\t\tif (stristr($key, 'options') !== false) {\n\t\t\tif (stristr($key, $pconfig['type'].'_') !== false) {\n\t\t\t\t$opt = explode('_', $key);\n\t\t\t\t$pconfig['options'][$opt[2]] = $val;\n\t\t\t}\n\t\t\tunset($pconfig[$key]);\n\t\t}\n\t}\n\n\t/* input validation */\n\t$reqdfields = explode(\" \", \"name type descr\");\n\t$reqdfieldsn = array(gettext(\"Name\"), gettext(\"Type\"), gettext(\"Description\"));\n\n\tdo_input_validation($_POST, $reqdfields, $reqdfieldsn, $input_errors);\n\n\t/* Ensure that our monitor names are unique */\n\tfor ($i = 0; isset($config['load_balancer']['monitor_type'][$i]); $i++) {\n\t\tif (($_POST['name'] == $config['load_balancer']['monitor_type'][$i]['name']) && ($i != $id)) {\n\t\t\t$input_errors[] = gettext(\"This monitor name has already been used.  Monitor names must be unique.\");\n\t\t}\n\t}\n\n\tif (!array_key_exists($_POST['type'], $types)) {\n\t\t$input_errors[] = gettext(\"Select a valid monitor type.\");\n\t}\n\tif (preg_match('/[ \\/]/', $_POST['name'])) {\n\t\t$input_errors[] = gettext(\"Spaces or slashes cannot be used in the 'name' field.\");\n\t}\n\n\tif (strlen($_POST['name']) > 16) {\n\t\t$input_errors[] = gettext(\"The 'name' field must be 16 characters or less.\");\n\t}\n\n\tswitch ($_POST['type']) {\n\t\tcase 'icmp': {\n\t\t\tbreak;\n\t\t}\n\t\tcase 'tcp': {\n\t\t\tbreak;\n\t\t}\n\t\tcase 'http':\n\t\tcase 'https': {\n\t\t\tif (is_array($pconfig['options'])) {\n\t\t\t\tif (isset($pconfig['options']['host']) && $pconfig['options']['host'] != \"\") {\n\t\t\t\t\tif (!is_hostname($pconfig['options']['host'])) {\n\t\t\t\t\t\t$input_errors[] = gettext(\"The hostname can only contain the characters A-Z, 0-9 and '-'.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isset($pconfig['options']['code']) && $pconfig['options']['code'] != \"\") {\n\t\t\t\t\t// Check code\n\t\t\t\t\tif (!is_rfc2616_code($pconfig['options']['code'])) {\n\t\t\t\t\t\t$input_errors[] = gettext(\"HTTP(s) codes must be from RFC2616.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isset($pconfig['options']['path']) || $pconfig['options']['path'] == \"\") {\n\t\t\t\t\t$input_errors[] = gettext(\"The path to monitor must be set.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'send': {\n\t\t\tif (is_array($pconfig['options'])) {\n\t\t\t\tif (isset($pconfig['options']['send']) && $pconfig['options']['send'] != \"\") {\n\t\t\t\t\t// Check send\n\t\t\t\t}\n\t\t\t\tif (isset($pconfig['options']['expect']) && $pconfig['options']['expect'] != \"\") {\n\t\t\t\t\t// Check expect\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!$input_errors) {\n\t\t$monent = array();\n\t\tif (isset($id) && $a_monitor[$id]) {\n\t\t\t$monent = $a_monitor[$id];\n\t\t}\n\t\tif ($monent['name'] != \"\") {\n\t\t\t$changedesc .= \" \" . sprintf(gettext(\"modified '%s' monitor:\"), $monent['name']);\n\t\t}\n\n\t\tupdate_if_changed(\"name\", $monent['name'], $pconfig['name']);\n\t\tupdate_if_changed(\"type\", $monent['type'], $pconfig['type']);\n\t\tupdate_if_changed(\"description\", $monent['descr'], $pconfig['descr']);\n\t\tif ($pconfig['type'] == \"http\" || $pconfig['type'] == \"https\") {\n\t\t\t/* log updates, then clear array and reassign - dumb, but easiest way to have a clear array */\n\t\t\tupdate_if_changed(\"path\", $monent['options']['path'], $pconfig['options']['path']);\n\t\t\tupdate_if_changed(\"host\", $monent['options']['host'], $pconfig['options']['host']);\n\t\t\tupdate_if_changed(\"code\", $monent['options']['code'], $pconfig['options']['code']);\n\t\t\t$monent['options'] = array();\n\t\t\t$monent['options']['path'] = $pconfig['options']['path'];\n\t\t\t$monent['options']['host'] = $pconfig['options']['host'];\n\t\t\t$monent['options']['code'] = $pconfig['options']['code'];\n\t\t}\n\t\tif ($pconfig['type'] == \"send\") {\n\t\t\t/* log updates, then clear array and reassign - dumb, but easiest way to have a clear array */\n\t\t\tupdate_if_changed(\"send\", $monent['options']['send'], $pconfig['options']['send']);\n\t\t\tupdate_if_changed(\"expect\", $monent['options']['expect'], $pconfig['options']['expect']);\n\t\t\t$monent['options'] = array();\n\t\t\t$monent['options']['send'] = $pconfig['options']['send'];\n\t\t\t$monent['options']['expect'] = $pconfig['options']['expect'];\n\t\t}\n\t\tif ($pconfig['type'] == \"tcp\" || $pconfig['type'] == \"icmp\") {\n\t\t\t$monent['options'] = array();\n\t\t}\n\n\t\tif (isset($id) && $a_monitor[$id]) {\n\t\t\t/* modify all pools with this name */\n\t\t\tfor ($i = 0; isset($config['load_balancer']['lbpool'][$i]); $i++) {\n\t\t\t\tif ($config['load_balancer']['lbpool'][$i]['monitor'] == $a_monitor[$id]['name']) {\n\t\t\t\t\t$config['load_balancer']['lbpool'][$i]['monitor'] = $monent['name'];\n\t\t\t\t}\n\t\t\t}\n\t\t\t$a_monitor[$id] = $monent;\n\t\t} else {\n\t\t\t$a_monitor[] = $monent;\n\t\t}\n\n\t\tif ($changecount > 0) {\n\t\t\t/* Mark config dirty */\n\t\t\tmark_subsystem_dirty('loadbalancer');\n\t\t\twrite_config($changedesc);\n\t\t}\n\n\t\theader(\"Location: load_balancer_monitor.php\");\n\t\texit;\n\t}\n}\n\n$pgtitle = array(gettext(\"Services\"), gettext(\"Load Balancer\"), gettext(\"Monitors\"), gettext(\"Edit\"));\n$pglinks = array(\"\", \"load_balancer_pool.php\", \"load_balancer_monitor.php\", \"@self\");\n$shortcut_section = \"relayd\";\n\ninclude(\"head.inc\");\n\n?>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nevents.push(function() {\n\n\t// Hides all elements of the specified class. This will usually be a section\n\tfunction hideClass(s_class, hide) {\n\t\tif (hide) {\n\t\t\t$('.' + s_class).hide();\n\t\t} else {\n\t\t\t$('.' + s_class).show();\n\t\t}\n\t}\n\n\t// Hide all sections except 't'\n\tfunction updateType(t) {\n\t\tswitch (t) {\n\t<?php\n\t\t/* OK, so this is sick using php to generate javascript, but it needed to be done */\n\t\tforeach ($types as $key => $val) {\n\t\t\techo \"\t\tcase \\\"{$key}\\\": {\\n\";\n\t\t\t$t = $types;\n\t\t\tforeach ($t as $k => $v) {\n\t\t\t\tif ($k != $key) {\n\t\t\t\t\techo \"\t\t\thideClass('{$k}', true);\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\techo \"\t\t}\\n\";\n\t\t}\n\t?>\n\t\t}\n\n\t\thideClass(t, false);\n\t}\n\n\t// ---------- Click checkbox handlers ---------------------------------------------------------\n\n\t$('#type').on('change', function() {\n\t\tupdateType($('#type').val());\n\t});\n\n\t// ---------- On initial page load ------------------------------------------------------------\n\n\tupdateType($('#type').val());\n});\n\n//]]>\n</script>\n\n<?php\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\n\n$form = new Form();\n$form->setAction(\"load_balancer_monitor_edit.php\");\n\n$section = new Form_Section('Edit Load Balancer - Monitor Entry');\n\n$section->addInput(new Form_Input(\n\t'name',\n\t'*Name',\n\t'text',\n\t$pconfig['name']\n));\n\n$section->addInput(new Form_Input(\n\t'descr',\n\t'*Description',\n\t'text',\n\t$pconfig['descr']\n));\n\n$section->addInput(new Form_Select(\n\t'type',\n\t'Type',\n\t$pconfig['type'],\n\t$types\n));\n\n$form->add($section);\n\n$section = new Form_Section('HTTP Options');\n$section->addClass('http');\n\n$section->addInput(new Form_Input(\n\t'http_options_path',\n\t'Path',\n\t'text',\n\t$pconfig['options']['path']\n));\n\n$section->addInput(new Form_Input(\n\t'http_options_host',\n\t'Host',\n\t'text',\n\t$pconfig['options']['host']\n))->setHelp('Hostname for Host: header if needed.');\n\n$section->addInput(new Form_Select(\n\t'http_options_code',\n\t'HTTP Code',\n\t$pconfig['options']['code'],\n\t$rfc2616\n));\n\n$form->add($section);\n\n$section = new Form_Section('HTTPS Options');\n$section->addClass('https');\n\n$section->addInput(new Form_Input(\n\t'https_options_path',\n\t'Path',\n\t'text',\n\t$pconfig['options']['path']\n));\n\n$section->addInput(new Form_Input(\n\t'https_options_host',\n\t'Host',\n\t'text',\n\t$pconfig['options']['host']\n))->setHelp('Hostname for Host: header if needed.');\n\n$section->addInput(new Form_Select(\n\t'https_options_code',\n\t'HTTPS Code',\n\t$pconfig['options']['code'],\n\t$rfc2616\n));\n\n$form->add($section);\n\n$section = new Form_Section('Send/Expect Options');\n$section->addClass('send');\n\n$section->addInput(new Form_Input(\n\t'send_options_send',\n\t'Send',\n\t'text',\n\t$pconfig['options']['send']\n));\n\n$section->addInput(new Form_Input(\n\t'send_options_expect',\n\t'Expect',\n\t'text',\n\t$pconfig['options']['expect']\n));\n\nif (isset($id) && $a_monitor[$id]) {\n\t$section->addInput(new Form_Input(\n\t\t'id',\n\t\tnull,\n\t\t'hidden',\n\t\t$id\n\t));\n}\n\n$form->add($section);\n\nprint($form);\n\ninclude(\"foot.inc\");\n"], "filenames": ["src/usr/local/www/load_balancer_monitor.php", "src/usr/local/www/load_balancer_monitor_edit.php"], "buggy_code_start_loc": [116, 31], "buggy_code_end_loc": [123, 198], "fixing_code_start_loc": [116, 32], "fixing_code_end_loc": [123, 207], "type": "CWE-79", "message": "A stored cross-site scripting (XSS) vulnerability was discovered in pfSense 2.4.5-p1 which allows an authenticated attacker to execute arbitrary web scripts via exploitation of the load_balancer_monitor.php function.", "other": {"cve": {"id": "CVE-2020-26693", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-01T15:15:07.553", "lastModified": "2021-06-09T13:59:29.503", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A stored cross-site scripting (XSS) vulnerability was discovered in pfSense 2.4.5-p1 which allows an authenticated attacker to execute arbitrary web scripts via exploitation of the load_balancer_monitor.php function."}, {"lang": "es", "value": "Se ha detectado una vulnerabilidad de tipo cross-site scripting (XSS) almacenado en pfSense versi\u00f3n 2.4.5-p1, que permite a un atacante autentificado ejecutar scripts web arbitrarios por medio de la explotaci\u00f3n de la funci\u00f3n load_balancer_monitor.php"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pfsense:pfsense:2.4.5:p1:*:*:*:*:*:*", "matchCriteriaId": "AE5A44DF-5D6E-458C-940A-D7A98035A7E4"}]}]}], "references": [{"url": "https://github.com/pfsense/pfsense/commit/a220a22a8c05c10a7b875ac6b565f2c4fe7b251c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/pfsense/pfsense/commit/a220a22a8c05c10a7b875ac6b565f2c4fe7b251c"}}