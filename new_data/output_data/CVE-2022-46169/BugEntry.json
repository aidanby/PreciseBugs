{"buggy_code": ["Cacti CHANGELOG\n\n1.2.23\n-security#4920: Add .htaccess file to scripts folder\n-issue#4418: When using Single Signon Frameworks like SiteMinder Cacti does not properly detect ticket revocation in callbacks\n-issue#4682: New templates are not installed during the update\n-issue#4838: CLI Based upgrade generates warnings in PHP 8.1\n-issue#4888: Cacti audit_database.php script fails on MySQL 8.0.29 and likely will on newer versions\n-issue#4889: Increase host query performance by removing check for NULL after 1.2.22\n-issue#4892: Recache Loop after many devices go offline\n-issue#4893: in cacti 1.2.22 real time counter gets stuck and does not count down\n-issue#4897: Technical support page on remote poller shows max connections of Main poller\n-issue#4903: MySQL 8.x regular expressions break Cacti Automation\n-issue#4904: The Recommendation for innodb_buffer_pool_instances is incorrect for MySQL 8 and MariaDB < 10.5\n-issue#4905: Labels on AREA having a colon breaks the gradient creation with an rrdtool error\n-issue#4917: Under certain circumstances Real Time counter gets stuck and does not count down\n-issue#4921: Aggregate Graph Permissions not working as expected\n-issue#4923: Graph template \"duplicate\" action does not working - 500 Internal Server Error\n-issue#4927: When running audit_database.php script will fail if cacti password had a ')' in it\n-issue#4934: Updated phpseclib to version 2.0.38 to support PHP 8.1\n-issue#4935: Net-SNMP - Device I/O template Maximum Value is zero\n-issue#4940: Error display Data Collectors when sorting by hostname\n-issue#4941: Viewing graphs can break when boost is running in some rare cases\n-issue#4944: Newer Cacti Packages should be signed with SHA256 as SHA1 is being deprecated\n-issue#4947: When creating a Data Template, ensure that the default max value is always 'U' and not '0'\n-issue#4960: Setting context for connections throws error in PHP 8.x\n-issue#4963: Will the calculation rules of 95nth_percentile involve php and rrdtool versions\n-issue#4964: Tree search not hiding non-matching tree objects\n-issue#4966: When viewing the Device page, ensure that the Device Template filter only includes Devices Types in use\n-issue#4971: Deprecation warnings in log files with php 8.2 associate with mib parser\n-issue#4978: Graph timezone issue\n-issue#4980: Business Hour php errors\n-issue#4988: Data Templates that include many Data Sources bug only a few are used, cause RRDfile bloat\n-issue#4990: Backtrace generated on the Links page due to undefined variable use\n-issue#4991: Updating a Data Template does not properly switch the rrd_heartbeat properly for all data sources resulting in empty graphs\n-issue#4993: Data Debug Troubleshooter does not pick up invalid RRD_heartbeat settings\n-issue#4996: Graph Name in Graph Management shows the same name multiple times\n-issue#5001: Data Debug Troubleshooter Reports False Positive Issues with Missing Data Sources\n-issue#5006: Cannot delete vdef and cdef item (in theme paw) - php error\n-issue#5012: Fixed three error for PHP 8 when execute cli/upgrade_database.php\n-issue#5013: Cacti Bulk Walk Size of 'Auto-detect at First Reindex' not working\n-issue#5015: Upgrade for 1.2.21 reporting unknown status\n-issue#5017: Undefined array key and Rounding causes errors\n-issue#5018: It is possible in some rare cases to have 'remember me' enabled and still be logged out after a browser timeout \n-issue#5024: SNMP connection does not replace escape char in 'community'\n-issue#5028: Cacti User Stats can throw errors depending on the PHP version that you running\n-issue#5029: Searching for a plugin by name sometimes does not work from Plugin management interface\n-issue#5030: Installer shows innodb unset\n-issue#5033: Installer shows deprecated messages on PHP 8.1.2\n-issue#5034: RRD Proxy Server not supported by CLI script \"structure_rra_paths.php\"\n-feature#1100: Structured path not created when using remote poller and Update On-Demand\n-feature#1392: AJAX handled errors do not notify Admins that page errors exist\n-feature#2239: Allow Import and Export to be more controlled\n-feature#2485: Importing Template requires you to upload the same file after previewing\n-feature#2548: Logs display Order vs head or tail\n-feature#2567: For large systems, the sort buffer should be optimized for large tables\n-feature#2747: Provide better sorting in Console >Management > Graphs\n-feature#2871: Report when RRA's heartbeat is below the data source profile's interval\n-feature#3131: Button to reindex bad indexes\n-feature#3578: Scheduled Automatic Re-indexing of Devices\n-feature#4025: When importing a Template or Package, allow the user to use the system default Height, Width, and Image format instead of the one embedded in the Template\n-feature#4239: On \"Graph Utility View\" add the name of and a link to the graph template which the graph is based on\n-feature#4417: Remote Pollers - Support execution of custom functions at poller bottom\n-feature#4638: Detect the graph with stale rrd or missing rrd\n-feature#4754: The script ss_fping.php should timeout based upon the actual device if its searchable\n-feature#4762: Allow Package Import to be selective\n-feature#4967: Make adding Associated Graph Templates and Data Queries easier to use\n-feature#4786: Windows install does not support SVG rendering\n-feature#4820: When importing, make it possible to only import certain components\n-feature#4841: Move the cactid function db_check_reconnect() to lib/database.php for other service oriented scripts\n-feature#4874: Add support for showing business hours\n-feature#4890: Add multi threading for Poller rechace script\n-feature#4899: Pass poller status to script_server to avoid connecting to the main database when offline or in recovery\n-feature#4901: Make the script server accept arguments in the standard way\n-feature#4902: Updated Support for MySQL 8.x\n-feature#4907: Add lmSensors to the Net-SNMP Device Template\n-feature#4926: Allow the user to override Cacti auto-client time zone detection\n-feature#4943: Add ability to periodically check RRDfiles for errors in batch\n-feature#4948: When using proxies to load balance Cacti, if the proxy cookie times out, Cacti should properly redirect\n-feature#4955: Provide Common Sense Memory Tuning based upon MySQL Tuner Recommendations\n-feature#4956: The function db_check_reconnect() should be able to work with any connection\n-feature#4957: Add Device Template Classes to match the Classes in Upcoming release of the Package Plugin\n-feature#4965: Make Tree the unlock process not have to rebuild the page\n-feature#4989: Cache Cacti 'Total Rows' by Hash to Improve Performance\n-feature#5009: Adding a new method for use in xml files: value_parse_index\n-feature: Adding ESXi Device Template\n-feature: Upgrade billboard.js to version 3.6\n-feature: Upgrade jQuery to version 3.6.1\n-feature: Upgrade jQueryUI to version 1.13.2\n-feature: Introduce exec() function with timeout\n\n1.2.22\n-security#4834: When creating new graphs, cross site injection is possible\n-issue#4768: When creating user from template, multiple Domain FullName and Mail are not propagated\n-issue#4791: Nectar Aggregate 95th emailed report broken\n-issue#4796: Boost may not find archive tables correctly\n-issue#4802: Users may be unable to change their password when forced during a login\n-issue#4803: Net-SNMP Memory Graph Template has Wrong GPRINT\n-issue#4806: Search in tree view unusable on larger installations\n-issue#4808: Increased bulk insert size to avoid partial inserts and potential data loss.\n-issue#4810: Call to undefined function boost_debug in Cacti log\n-issue#4814: When no guest template is set, login cookies are not properly set\n-issue#4817: Later RRDtool releases do not need to check last_update time\n-issue#4818: Regex filters are not always long enough\n-issue#4819: Domains based LDAP and AD Fullname and Email not auto-populated\n-issue#4822: Cacti polling and boost report the wrong number of Data Sources when Devices are disabled\n-issue#4823: When editing Graph Template Items there are cases where VDEF's are hidden when they should be shown\n-issue#4831: Database SSL setting lacks default value\n-issue#4837: Update default path cacti under *BSD by xmacan\n-issue#4840: Web Basic authentication not creating template user\n-issue#4846: Unable to change the Heartbeat of a Data Source Profile\n-issue#4849: Tree Search Does Not Properly Search All Trees\n-issue#4850: When structured paths are setup, RRDfiles may not always be created when possible\n-issue#4851: When parsing the logs, caching would help speed up processing\n-issue#4853: Deprecation warnings when attempting real-time Graphs with PHP8.1\n-issue#4860: Custom Timespan is lost when clicking other tree branches\n-issue#4863: Non device based Data Sources not being polled\n-issue#4865: When Resource XML file inproperly formatted, graph creation can fail with errors\n-issue#4866: Update code style to support PHP 8 requirements\n-issue#4867: In Graph Management, filtering for \"Device: None\" shows all graphs\n-issue#4871: Realtime popup window experiences issues on some browsers\n-issue#4873: Auth settings do not always properly reflect the options selected by ddb4github\n-issue#4880: MySQL can cause cacti to become stalled due to locking issues\n-issue#4882: Boost process can get hung under rare conditions until the poller times out\n-issue#4884: Exporting graphs under PHP 8 can cause errors\n-issue#4887: Host table has wrong default for disabled and deleted columns\n-feature#4533: RRD storage paths do not scale properly\n-feature#4820: When importing, make it possible to only import certain components\n-feature#4825: Update change_device script to include new features by bmfmancini\n-feature#4827: Make help pages use latest online version wherever possible\n-feature#4832: Cacti should show PHP INI locations during install\n-feature#4833: Detect PHP INI values that are different in the INI vs running config\n-feature#4870: Added Gradient Color support for AREA charts by thurban\n-feature#4872: Update CDEF functions for RRDtool\n-feature#4881: When boost is running, it's not clear which processes are running and how long they have to complete\n\n1.2.21\n-issue#4531: Correct duplicate keys within database\n-issue#4614: Add support for hooks during polling loop or at poller end\n-issue#4683: When adding a device, errors may be reported whilst updating templates\n-issue#4684: When creating RRD error image, font may not exist by xmacan\n-issue#4685: Correct issues with corrupted Cacti Packages\n-issue#4687: Poller output not empty all the time\n-issue#4688: When running under PHP 5.4, certain operators are not valid by ddb4github\n-issue#4689: Package Import generates errors when you try to import directory or non-file\n-issue#4693: Correct issues with Heartbeat definitions under PHP 8.x\n-issue#4695: When importing packages, hash types are not properly processed by ddb4github\n-issue#4697: Login problem\n-issue#4698: When creating a device, unexpected poller down message may be shown\n-issue#4701: Editing a new user or user group may cause errors\n-issue#4705: Unable to automatically login using Remember Me option\n-issue#4707: Unable to duplicate graph templates due to missing column\n-issue#4716: Correct issues with Data Source Edit under PHP 8.x\n-issue#4719: Browsers may reject CactiTimeZone and CactiDateTime cookies due to SameSite requirements\n-issue#4721: Some JavaScript and image files URL are broken under midwinter theme by ddb4github\n-issue#4722: When upgrading from pre 1.x, various errors may be seen by ddb4github\n-issue#4726: When running under Fedora, issues may be seen with snmp values\n-issue#4729: Add ability for Template and Package Installs to update Suggested Name Values/Patterns\n-issue#4732: When using audit tool, text/mediumtext columns may not be properly processed by ddb4github\n-issue#4735: When changing data source profiles, errors may be shown\n-issue#4736: Update PHP recommendations to meet current expectations\n-issue#4743: When viewing graphs, fontawesome may not always been found\n-issue#4744: When using automation, numeric values may be treated as strings\n-issue#4748: When saving a device, errors may be generated\n-issue#4756: Importing very old Data Input Methods generate dependency warnings\n-issue#4757: Correct issues with Boost running under PHP 8.x\n-issue#4763: Unable to login locally when LDAP authentication enabled\n-feature#4720: Add a CLI script to install/enable/disable/uninstall plugins\n-feature#4740: Add log message when purging DS stats and poller repopulate\n\n1.2.20\n-security#4562: When using LDAP, authentication process may be bypassed\n-security#4576: Device, Graph, Graph Template, and Graph Items may be vulnerable to XSS issues\n-security#4579: Lockout policies are not properly applied to LDAP and Domain Users\n-security#4593: When using 'remember me' option, incorrect realm may be selected\n-security#4678: User and Group maintenance are vulnerable to SQL attacks\n-security#4679: Color Templates are vulnerable to XSS attack\n-issue#3816: When replicating data during installation/upgrade, system may appear to hang\n-issue#4363: Graph Template Items may have duplicated entries\n-issue#4435: Unable to Save Graph Settings\n-issue#4449: Script Server may crash if an OID is missing or unavailable\n-issue#4451: When system-wide polling is disabled, remote pollers may fail to sync changed settings\n-issue#4455: When updating poller name, duplicate name protection may be over zealous\n-issue#4457: Titles may show \"Missing Datasource\" incorectly\n-issue#4458: Checking for MIB Cache can cause crashes\n-issue#4460: Polling cycles may not always complete as expected\n-issue#4461: When viewing graph data, non-numeric values may appear\n-issue#4472: Utilities view has calculation errors when there are no data sources\n-issue#4475: Add support for PHP 8\n-issue#4477: Remote pollers do not force connection when online\n-issue#4479: Rebuild Poller Cache CLI script should have filter options\n-issue#4480: Saving a bad Data Template can damage Data Sources\n-issue#4481: Reports still use Legacy attributes, despite having a format file\n-issue#4482: Graph Automation slowed by in-efficient index selection\n-issue#4491: When rebuilding poller cache, SNMP settings do not properly update\n-issue#4492: When an OID starts with space, SNMP returns undefined data\n-issue#4495: Datasource Statistics may obtain invalid data for some rebooted devices\n-issue#4498: When attempting to calculate width, some input elements may cause console errors\n-issue#4500: Datasource Statistics may not scale properly on larger systems\n-issue#4508: Changing Multi-Device SNMP settings may not work as expected\n-issue#4509: Updating Items for a Graph Template may be slow on larger systems\n-issue#4511: When using the time-based view, SVG Graphs may not resize properly\n-issue#4512: When using API calls, graphs without data sources may be unremovable\n-issue#4516: Add additional information to help when creating graphs from templates\n-issue#4519: When remote host poll fails, poller ID may not be found and cause errors\n-issue#4521: Backtraces Logged in Cacti 1.2.x Branch - Gettext Translation\n-issue#4522: When entering custom input, layout issues may be seen\n-issue#4528: When creating a device, default setting for Device Threads may be ignored\n-issue#4529: Primary Admin account notifications may not work in certain cases\n-issue#4530: On larger systems, user interface for reporting may become unusable\n-issue#4536: When using Web Basic Authentication, user is always mapped as guest.\n-issue#4539: When handling plugin dependancies, notices may not be displayed properly\n-issue#4540: Certain account types should not allow their enabled status to be changed\n-issue#4543: Emails sent multiple times to the same address can be rejected\n-issue#4545: Reports Tab always shows 'Administration' despite a users permissions\n-issue#4546: When unauthorized, user may be redirected instead of notified\n-issue#4547: Add debug options to LDAP for diagnostic purposes\n-issue#4548: Rounding causes errors with variable substitution\n-issue#4549: Boost may become disabled due to an invalid path\n-issue#4551: Add support for PHP 8\n-issue#4552: Error messages are not always cleared, resulting in duplicated messages.\n-issue#4554: Add support for Automation under PHP 8\n-issue#4557: When selecting a Consolidation Function, errors may be reported\n-issue#4563: Breadcrumbs not always display the correct path\n-issue#4564: When clicking tabs, page may not always respond\n-issue#4567: Editing current user should prevent changes of account status\n-issue#4568: Authentication cache does not always use the correct realm\n-issue#4569: When editing users or groups, template permissions may not work as intended\n-issue#4571: When changing authentication method, unneeded settings may not be hidden\n-issue#4572: When basic authentication is used, login screen should not be seen\n-issue#4573: On larger systems, permission checks may render system unusable\n-issue#4575: When you delete a user, cookie data is not automatically removed\n-issue#4577: When editing current user, last administrator may be removed\n-issue#4578: The Cacti login algorithm is complicated to understand due to too much strait line code\n-issue#4580: When using Web Basic Authentication, users may be seen as guests\n-issue#4586: When viewing graphs, excess database queries may occur\n-issue#4587: Settings may be read more often than required\n-issue#4588: Unable to save host with multi-byte characters\n-issue#4589: When updating tables, ensure engine, row_format and charset by ddb4github\n-issue#4594: When selecting font, attempt to use system-based font before internally supplied version by ddb4github\n-issue#4597: Selective Device Debug does not work with Remote Data Collectors\n-issue#4598: Plugin tab does not stay visible when main poller is offline\n-issue#4603: When failing back to PHP GetText, module is not always selected\n-issue#4607: Configuration file may be improperly moved into the resource cache\n-issue#4609: When handling sessions, user agent may not always be present\n-issue#4610: When hiding disabled devices, some may still be shown\n-issue#4611: When replicating to remote pollers, plugins are not always properly sync'd\n-issue#4612: When using cookie authentication, Same Site support does not always work properly\n-issue#4613: Newer versions of MySQL/MariaDB may prevent structure replication changes\n-issue#4614: Add support for hooks during polling loop or at poller end\n-issue#4615: Plugin status on a Remote Data Collector may not always be detectable\n-issue#4616: When performing certain plugin actions, replication should be forced to Remote Collectors\n-issue#4617: When removing a plugin, removed tables are not removed from remote pollers\n-issue#4618: When plugin exceed runtimes, they should not be automatic disabled\n-issue#4620: When using CLI, Remote Data Collector scripts may connect to the wrong database\n-issue#4623: Boost does not operate as it should in certain situations\n-issue#4624: System uptime may be missing under certain circumstances\n-issue#4629: When removing many Graphs and Data Sources, polling cycles may overrun\n-issue#4630: Session data is not always started correctly\n-issue#4632: When creating a Datasource, Input Field Checking is not always enforced\n-issue#4634: When using Basic Authentication, the Logout Everywhere button should not be shown\n-issue#4645: When format file does not exist, changing certain settings may result in errors\n-issue#4651: Device Description is not consistent in Poller Cache view\n-issue#4652: After repopulating graph, navigation to check cumbersome\n-issue#4654: When saving a data template, replication may cause errors\n-issue#4658: When upgrading from pre-1.0, tree information may not properly update by ddb4github\n-issue#4659: When moving a device between pollers, errors may occur\n-issue#4666: Add date calculation support for PHP 8\n-issue#4671: Add poller sleeping support for PHP 8\n-issue#4672: When editing Reports, drag and drop may not function as intended\n-issue#4680: When data drive is full, viewing a Graph can result in errors\n-feature#4574: On larger systems, permissions may need alternative methods\n-feature#4631: When creating a Data Source Profile, allow additional choices for Heartbeat\n-feature#4636: Upgrade jQueryMulti-select to 3.0.1\n-feature#4637: Change select all options to use Font Awesome icons\n-feature#4641: Improve spine performance by storing the total number of system snmp_ports in use\n-feature#4663: Prevent Template User Accounts from being Removed\n-feature#4664: When managing by users, allow filtering by Realm\n-feature#4665: Allow plugins to supply template account names\n-feature#4667: When viewing logs, additional message types should be filterable\n-feature#4668: When creating a Graph Template Item, allow filtering by Data Template\n-feature#4669: Allow language handler to be selected via UI\n-feature#4673: Updated Device packages for Synology, Citrix NetScaler, Cisco ASA/Cisco\n-feature#4674: Add Advanced Ping Graph Template to initial Installable templates\n-feature#4675: Add LDAP Debug Mode option\n-feature#4676: Allow Reports to include devices not on a Tree\n-feature#4677: Allow Basic Authentication to display custom failure message\n\n1.2.19\n-security#4356: Further fixes for grave character security protection\n-issue: Over aggressive escaping causes menu visibility issues on Create Device page\n-issue#3787: Add SHA256 and AES256 security levels for SNMP polling\n-issue#4289: Import graph template(Preview Only) show color_id new value as a blank area\n-issue#4341: Editing graphs can cause errors due to missing sequence\n-issue#4342: When hovering over a Tree Graph, row shows same highlighting as Graph Edit screen\n-issue#4343: When RealTime is not active, console errors may appear\n-issue#4347: Race conditions may occur when multiple RRDtool processes are running\n-issue#4352: Creating graphs from templates may sometimes result in errors\n-issue#4353: When duplicating reports, errors may occur\n-issue#4375: Boost may be blocked by overflowing poller_output table\n-issue#4378: Template import may be blocked due to unmet dependency warnings with snmp ports\n-issue#4381: Newer MySQL versions may error if committing a transaction when not in one\n-issue#4382: SNMP Agent may not find a cache item\n-issue#4383: Correct issues running under PHP 8.x\n-issue#4391: When polling is disabled, boost may crash and creates many arch tables\n-issue#4396: When poller runs, memory tables may not always be present\n-issue#4400: Removal of redunant code\n-issue#4403: Timezones may sometimes be incorrectly calculated\n-issue#4404: Allow monitoring IPv6 with interface graphs\n-issue#4408: When a data source uses a Data Input Method, those without a mapping should be flagged\n-issue#4410: When RRDfile is not yet created, errors may appear when displaying the graph\n-issue#4419: Cacti missing key indexes that result in Preset pages slowdowns\n-issue#4420: Data Sources page shows no name when Data Source has no name cache\n-issue#4421: db_update_table function can not alter table from signed to unsigned\n-issue#4422: data remains in poller_output table even if it's flushed to rrd files\n-issue#4423: Parameter list for lib/database.php:db_connect_real() is not correct in 3 places\n-issue#4424: Offset is a reserved word in MariaDB 10.6 affecting Report\n-issue#4425: Rendering large trees slowed due to lack of permission caching\n-issue#4428: Error on interpretation of snmpUtime, when to big\n-issue#4431: Applying right axis formatting creates an error-image\n-issue#4435: Unable to Save Graph Settings from the Graphs pages\n-issue#4437: Graph Template Cache is nullified too often when Graph Automation is running\n-issue#4438: When Adding a Data Query to a Device, no Progress Spinner is shown\n-issue#4439: New Browser Breaks Plugins that depend on non UTC date time data\n-issue#4440: Undefined index: timeout_exceed /lib/poller.php on line: 1953\n-issue#4442: When testing remote poller connectivity Errors occour\n-issue#4443: When renaming poller errors occour\n-issue#4444: Removing spikes by Variance does not appear to be working beyond the first RRA\n-issue#4445: LDAP API lacks timeout options leading to bad login experiences\n-issue#4525: When using CMD for polling, pipes are not properly referenced for PHP scripts\n-feature: Add a normal/wrap class for general use\n-feature: Limit File Types available for Template Import operations\n-feature#1573: Cacti does not provide an option of providing a client side certificate for LDAP/AD authentication\n-feature#3113: Support Stronger Encryption Available Starting in Net-SNMP v5.8\n-feature#4299: Allow Cacti to use multiple possible LDAP servers\n-feature#4344: Add a 15 minute polling/sampling interval\n-feature#4385: Provide additional admin email notifications\n-feature#4390: Add warnings for undesired changes to plugin hook return values\n-feature#4409: When creating a Graph, make testing the Data Sources optional by Template\n-feature#4412: Update phpseclib to 2.0.33\n-feature#4413: Update jstree.js to 3.3.12\n-feature#4414: Improve performance of Cacti poller on heavily loaded systems\n-feature#4426: MariaDB recommendations need some tuning for recent updates\n\n1.2.18\n-security#4261: Lack of escaping on template import can lead to XSS exposure under 'midwinter' theme (CVE-2020-14424)\n-security#4276: Real time graphs can expose XSS issue\n-security#4282: Session IDs are not always recreated when logging out under PHP 5\n-issue#4250: Unable to create graphs due to Data Source verification failure\n-issue#4254: When poller first runs, time since last run produces an error\n-issue#4259: Data Template caching does not update and causes errors\n-issue#4263: Graphs with multiple data sources can no longer display percenticles\n-issue#4266: Incomplete items from a previous polling session may be updated twice\n-issue#4267: Unnecessary warnings appear when host name is not resolved\n-issue#4269: Installation Wizard can become stuck when creating graphs for default device\n-issue#4271: Continued timeout of registered processes\n-issue#4272: Unexpected errors may appear when using hostnames without a DNS domain\n-issue#4273: When adding a device from command line, testing of data sources can cause errors to be recorded\n-issue#4274: When you start to zoom a graph, the auto graph refresh should be disabled\n-issue#4279: Default Setting \"Device Threads\" will not be saved correctly\n-issue#4284: Whilst upgrading, errors in upgrade scripts prevent properly execution\n-issue#4293: Tree search does not take hosts belonging to a site into account\n-issue#4294: Tables outside of pre-built list that need fixing, cause bad unknown column errors\n-issue#4295: If a page contains multiple tables, a larger table can cause small ones to lose columns\n-issue#4297: Unable to search using regular expressions when trying to filter graphs\n-issue#4312: When using CMD.PHP as the poller, warnings can appear if you only use a subset of data input types\n-issue#4314: When disabling the snmpagent, you can introduce significant delay to data collection\n-issue#4315: Reduce repeatative warnings when resources are exhausted\n-issue#4316: Remove Spikes CLI interface is unable to provide localized spike, gap fill or float operations\n-issue#4321: Earlier versions of RRDTool do not correctly ignore previous updates\n-issue#4324: Date/Time format of replacement field on graph cannot be changed\n-issue#4325: When editing graph items, make identifying rows easier\n-issue#4326: When using large lists, ensure selection is visible in dropdown menus\n-issue#4330: Automation attempts to call undefined debug function\n-issue#4333: Under FreeBSD, allow ping to work properly for IPv6\n-issue#4367: Report owner - show at least the username when the full name is empty\n-feature#4258: Update phpseclib to 2.0.31\n-feature#4283: Content Security Policy may block Plugin functionality\n-feature#4317: Allow the Cacti administrator to perform bulk gap filling and floating in parallel\n-feature#4322: Update pace.js to version 1.2.4\n\n1.2.17\n-security#4019: Incorrect handling of fields led to potential XSS issues\n-security#4022: SQL Injection was possible due to incorrect validation order (CVE-2020-35701)\n-security#4035: Various XSS issues with HTML Forms handling\n-issue: CLI scripts should not have a max allowed runtime\n-issue: Normalize plugin hooks between user_admin.php and user_group_admin.php\n-issue#1052: TimeZones are not handled correctly with Daylight Savings changes\n-issue#3392: Allow plugins to customize device listing page\n-issue#3879: Allow Graph/Data Source with custom fields to prompt during manual creation\n-issue#3908: When poller overruns the script server can throw errors upon shutdown\n-issue#3936: Editing a graph created from Aggregate Graph can fail\n-issue#3945: CSV export can show NaN for date if TimeZone does not match system\n-issue#3969: SNMPv3 Password field does not correctly limit to size of database field\n-issue#3976: Font colors are being overridden leading to display issues\n-issue#3977: Database upgrade may fail when using upgrade_database.php\n-issue#3978: Input Validation was not handled correctly when displaying graph trees\n-issue#3981: Missing API include leads to runtime errors in Automation\n-issue#3985: Collation was not always handled correctly in the database library\n-issue#3988: Automation raises errors when default snmp options is set to none\n-issue#3990: PHP Information was not being displayed properly under Tech Support\n-issue#3999: Ensure database audit code attempts to use passwordless options before sending credentials\n-issue#4001: Ensure Cacti can support PHP 8\n-issue#4002: Pollers may sometimes not recover properly once they go offline\n-issue#4005: When viewing Realtime Graphs, validation errors may be seen for Size parameter\n-issue#4008: Massive decrease in poller performance due to unset variable\n-issue#4009: Ensure number format functions are consistent for i18n usage\n-issue#4021: Increase maximum number of device threads\n-issue#4031: Secondary filters on Data Collectors and Data Profiles do not work as expected\n-issue#4033: Action Icons changed to be consistent with admin UI\n-issue#4036: During discovery, Automation can throw unexpected errors due to null values\n-issue#4038: When creating new graphs, a second click is required even if not needed\n-issue#4042: RRD Updates can become disabled when saving performance options\n-issue#4043: Boost can become unresponsive when large number of archive tables exist\n-issue#4049: Enable sensitive graph information to be hidden from standard users\n-issue#4050: When showing table conversion script, the example path can be displayed incorrectly\n-issue#4056: Rename \"Show Exceptions\" checkbox to \"Only Show Exceptions\" which more actually reflects its function\n-issue#4060: When attempting to get client address, incorrect information may be returned\n-issue#4061: When getting date format, default options are not always honored\n-issue#4066: Enable Boost to utilize multiple processes\n-issue#4067: Disable BOOST image caching when using Graph Zoom features\n-issue#4068: When viewing graphs, individual graph sizes can be ignored in favour of global default\n-issue#4070: Summary data can fail to calculate when the RRDfile lacks the Data Source\n-issue#4073: Zoom functionality can fail when a graph has lost focus.\n-issue#4074: Realtime Images are not always adhering to defined format\n-issue#4075: LDAP Settings lead to confusion when setting up LDAP authentication\n-issue#4076: MariaDB tuning link points to a dead URL within System Utilities\n-issue#4077: If user has no permissions assigned and tries to login, a redirect loop occours\n-issue#4079: When checking current timestamps, make audit replace mysql function usage with preferred CURRENT_TIMESTAMP variable\n-issue#4080: Cacti regular expression searching does not quote expressions\n-issue#4082: RRDtool version detection not working for RRDproxy setup\n-issue#4083: RRDCleaner does not support RRDproxy\n-issue#4086: Large system performance negatively impacted due to $spikekill_templates behavior\n-issue#4092: On large systems, Primary ID usage on heavily used tables will overflow due to default MySQL variable size\n-issue#4095: When viewing Plugins page, icons can sometimes be misaligned\n-issue#4098: Graphs and Data Sources lists can become unresponsive on very large systems\n-issue#4100: When viewing User Admins, a division by zero error can sometimes be seen\n-issue#4105: Allow admins to define bulk walk repetition sizes\n-issue#4109: Realtime graphing can sometimes cause gaps in historic data\n-issue#4110: Graph Variables are not always parsed correctly leading to errors in log files\n-issue#4116: Upgrading large trees from 0.8.x to 1.x is slow\n-issue#4117: Script server throws errors if a command line argument includes a backslash\n-issue#4119: Implicit flushing is not always enabled, depending on OS, resulting in Script Server result issues\n-issue#4121: LDAP search filter cannot be configured if too many OUs or filters are nested\n-issue#4122: Automation causes SQL syntax errors when invalid operations are present\n-issue#4125: On completing the installation wizard, an internal server error can sometimes be observed\n-issue#4126: Deleting a damaged graph can sometimes led to removal of valid graphs too\n-issue#4127: When updating Trees, graph titles are calculated too often leading to unresponsiveness\n-issue#4130: On large systens, Graph creation can become unresponsive due to large number of data sources\n-issue#4131: A design flaw makes importing new Graph Template slow on large systems\n-issue#4134: MIB Caching does not always work as expected\n-issue#4135: On large Cacti installs, editing Data Templates is slow\n-issue#4136: When repairing database at command line, no option exists to skip table checks and force Data Source repair\n-issue#4141: Unusually long comments do not wrap when viewing graphs, and haven't in this CHANGELOG entry either\n-issue#4143: Prevent some false positive scenarios when detection orphan graphs\n-issue#4147: Poller items are evaluated too quickly when mixed polling cycles are used\n-issue#4148: Ensure automatic refresh of cacti log view works consistently\n-issue#4149: Ensure utilities show correct information when in offline mode\n-issue#4161: Data source template names should be shown in the respective \"suggested values\" sections\n-issue#4162: Allow Persistent Connections to MariaDB/MySQL to be configured\n-issue#4164: Unable to easily track Cacti login sessions when using database sessions\n-issue#4166: Auto-select text when focusing auto complete elements\n-issue#4169: Ensure Log Viewer 'Go' and 'Clear' buttons behave as expected\n-issue#4170: Enable full name tooltips for Alias/Description columns\n-issue#4173: Ensure Console menu icons are properly aligned\n-issue#4174: When using replication, ensure binary logging can be disabled\n-issue#4175: When syncing Templates, prevent false 'Damaged Graph' notifications from appearing\n-issue#4177: Simplify Graph/Template authorization searches when not using restricted mode\n-issue#4179: Correct class usage on Graph Sidebar Icons to be consistent\n-issue#4180: Remove logoff option when using basic authentication\n-issue#4181: Ensure realm names are more consistent\n-issue#4182: Allow Automatic Graph Creation to utilise Data Templates with Overriden Values\n-issue#4183: Processes can be terminated early due to incorrect timeout calculation\n-issue#4184: Ensure error logging is consistent when using CMD processor instead of spine\n-issue#4185: Updating Signal Handling to recommended standards for PHP 7.1+\n-issue#4186: When editing a Fixed String on Tree Rule it is improperly displayed as \"Unknown\"\n-issue#4187: Provide more direct method fo navigating to Data Source from Graph\n-issue#4188: Replacement variable names are difficult to find for Aggregate Graphs and Templates\n-issue#4189: Allow links from a page to its specific documentation\n-issue#4190: Augmenting roles can incorrectly link to roles instead of realms in rare cases\n-issue#4192: Devices search can return a black screen if device name contains the hash/pound # character\n-issue#4193: Allow command line reindex to work with disabled devices\n-issue#4195: When search text includes # character, filtering does not always work as expected\n-issue#4197: When attempting to do a rollback on versions, the installer will not restart\n-issue#4199: Allow Cacti administrator to define a min refresh interval to prevent graph gaps\n-issue#4205: When removing Data-query Associated Graph Templates, it deletes the graphs Templates from bottom to top\n-issue#4206: When a report was delayed, the report's time is incorrectly changed\n-issue#4215: Poller recovery starts multiple processes and fails to recover properly\n-issue#4223: Parallel boost restart due to timeout can result in errors.\n-issue#4227: When remote poller is in offline mode, data is written to more tables than necessary\n-issue#4228: Under specific circumstances, redirection issues can occur after login\n-issue#4229: When no snmp option is set, automation can incorrectly report a number of issues\n-issue#4232: Database TLS configuration requires client certificates as well\n-issue#4233: Potential typos and incomplete parameter lists for database connection variables\n-issue#4241: Tree sort mechanism does not take sites into account\n-issue#4251: Caching of Graph Titles can be incorrect\n-feature: Add Theme 'Midwinter'\n-feature: Update phpseclib to version 2.0.30\n-feature#645: Modify automation to test for data before creating graphs\n-feature#3513: Add hooks for plugins to show customize graph source and customize template url\n-feature#3572: Missing prompts during automation's device creation leads to blank data\n-feature#4012: Allow CSRF security key to be refreshed at command line\n-feature#4013: Allow remote pollers statistics to be cleared\n-feature#4113: Allow user to be automatically logged out after admin defined period\n-feature#4176: When replicating, ensure Cacti can detect and verify replica servers\n-feature#4210: Replace c3.js with billboard.js\n\n1.2.16\n-issue#3704: When generating a report, the Cascade to Branches function does not as expected\n-issue#3859: When viewing graphs, automatic refresh so not always work as expected\n-issue#3898: Realtime graph pop up counter bug\n-issue#3903: Undefined variable errors may occur when creating a new datasource\n-issue#3907: The cli-based installer does not exit with a non-zero exit code when error occurs\n-issue#3912: When an export is complete, sometimes the progress bar remains\n-issue#3915: When enabling many devices, a threshold can be reached causing a slowdown in the process\n-issue#3916: When performing actions against Devices, replicated device information could sometimes be lost\n-issue#3917: When using API to rename a tree node, backtrace may be incorrectly shown\n-issue#3919: When searching, valid pages can sometimes be shown as empty\n-issue#3920: When exporting data from graphs, not all data was properly included\n-issue#3924: Graph Templates filter is not updated after new graph created\n-issue#3926: Username and password on the login page is not visible in Classic theme\n-issue#3929: Improve wording of concurrent process and thread settings\n-issue#3930: Location filter should remove blank entries\n-issue#3931: When syncing data collectors, a reindex event may be triggered unnecessarily\n-issue#3932: Automation Networks allows discovery of invalid IP addresses\n-issue#3933: When changing permissions of the current user, they don't take effect immediately\n-issue#3935: When reindexing a device, an incorrect page was sometimes displayed\n-issue#3942: When repairing database, audit_database.php does not add missing columns\n-issue#3948: Spine 1.2.15 - Spine Encountered An Unhandled Exception Signal Number: '6' [11, Resource temporarily unavailable] (Spine thread)\n-issue#3949: Log page should not be empty if no log info exists\n-issue#3953: During upgrade, there are times when realms can be duplicated leading to SQL errors\n-issue#3957: When using ping.php, UDP response times are not interpreted properly\n-issue#3960: Improve warning you get when attempting to view a log file you don't have access to\n-issue#3962: When replicating files, scripts are not marked as executable\n-issue#3963: When creating plugin tables, collation is not set properly\n-feature: Update c3.js to version 0.7.20\n-feature: Update Chart.js to version 2.9.4\n-feature: Update phpseclib to version 2.0.29\n-feature: Update PHPMailer to version 6.1.8\n-feature: Use LSB shebang notation for cli scripts\n-feature: Add support for cactid daemon based launcher\n-feature#3923: Add ability to hide the Graph Drilldown icons\n-feature#3943: Add hooks for plugins to show custom Graph Source and custom Template URL (List View)\n\n1.2.15\n-issue#3643: When editing Maximum OIDs Per Get Request, blank value can cause errors\n-issue#3656: Boost may run more often than it should\n-issue#3693: Recache Event Loop can cause Interface Graphs to show gaps\n-issue#3703: When searching Graph Tree's, non matching devices remain visible\n-issue#3711: Page validation errors may occur when opening real time graphs\n-issue#3722: External Links do not always open if they are still open from previous usage\n-issue#3730: Cultural changes to various word usage\n-issue#3741: Replicate deleted device status instead of poller sync\n-issue#3743: Description field allows more characters entered than is stored\n-issue#3747: When installing or upgrading, LDAP functions may not always be included properly\n-issue#3748: Unable to remove discovered device\n-issue#3753: When installing or upgrading, PHP recommendations may not always return a valid value\n-issue#3755: Graph Templates has duplicate SQL delete statement\n-issue#3759: When syncing to remote poller, missing function errors may occur\n-issue#3760: When removing devices from remote pollers, devices may reappear without details\n-issue#3761: When removing devices, array errors may sometimes be recorded\n-issue#3763: Variable injection does not always work as expected\n-issue#3764: Editing Data Queries with multiple data templates can give errors about Suggested values\n-issue#3767: Progress bar does not provide enough visual information during long page loads\n-issue#3768: Some themes do not allow for a way to see which user is currently signed in\n-issue#3769: When viewing tables, allow users to force all columns to be visible\n-issue#3770: Column sizing is being lost between pages refreshes\n-issue#3771: When viewing input methods table, no ID is shown to help identify which method is being viewed\n-issue#3775: Filters do not always respect using keyboard to initiate searching\n-issue#3778: When exporting a data query, an invalid column name error can sometimes be shown\n-issue#3781: When checking if a view is allowed, having no session can result in errors\n-issue#3782: When removing devices via the CLI, undefined variable errors may be seen\n-issue#3786: Real Time Graphs may cause invalid index errors\n-issue#3790: On newer versions of MySQL/MariaDB, 'system' keyword can cause issues\n-issue#3793: Plugin setup can generate errors when reading options via system function\n-issue#3809: Plugin version numbers can be unexpectedly truncated\n-issue#3815: When PHP Session is set to autostart, an error can be reported as Cacti attempts to start it\n-issue#3820: When removing multiple items, selection process does not always work\n-issue#3821: When exporting colors, the indicator is not always removed upon completion\n-issue#3825: Unable to pass tree and leaf ID to 'graph_button' hook\n-issue#3827: When performing maintenance, various errors may sometimes be seen\n-issue#3828: When Guest User setting is active, current user is not always properly set\n-issue#3831: When installing Cacti, minor errors in text can be seen\n-issue#3835: Numbers are not always formatted properly when there are no decimal places\n-issue#3836: When viewing Real Time Graphs, an undefined index error may be recorded\n-issue#3844: Minor memory leaks and refresh issues when zooming on graphs\n-issue#3847: Real Time Graphs may sometimes fail due to folder permissions\n-issue#3849: Navigation can sometimes occur unexpectedly due to background timers\n-issue#3850: Trees management screen not reporting correct number of trees\n-issue#3858: Tree sequences can sometimes skip numbers during resorting\n-issue#3862: Guest user selection should not allow setting the currently logged in user\n-issue#3864: Links in Table Headers do not show clearly when in modern theme\n-issue#3868: Under some cases tree logic leads to undefined index errors\n-issue#3869: Cacti Data Debug can show errors if the Data Source is damaged or has been removed\n-issue#3871: When importing a data query, an invalid column name error can sometimes be shown\n-issue#3874: When using shift functions on graphs, negative values are not allowed\n-issue#3881: Correct issue when file is unreadable reporting no file was specified\n-issue#3883: Orphaned Plugins have no option to be removed\n-issue#3884: Update MySQL recommendations for Character Set and Colation\n-issue#3888: Correct sorting of IP addresses to be numeric not alpha\n-issue#3890: Saving a device should not always repopulate the poller cache\n-feature: Update FontAwesome to Version 5.14\n\n1.2.14\n-issue#3676: Device not showing up in device page but showing up in Monitor tab\n-issue#3678: More or Equal incorrect highlighting max_heap_table_size and tmp_table_size\n-issue#3694: Spikekill `percent` is converted from percent to decimal twice, making it 1/100 of the true size\n-issue#3713: When sorting data debug checks by user, no results are shown and errors recorded\n-issue#3719: When tooltip is too long, the scroll bar exists, and cannot be scrolled, which makes the tooltip be hided\n-issue#3723: Improper escaping of error message leads to XSS during template import preview\n-issue#3728: Invalid uptime is not handled properly\n-issue#3737: Poller functions may not run if 'processes' table is missing\n-feature#3615: Poller keeps using old IP address for a device\n\n1.2.13\n-security#3544: jQuery XSS vulnerabilities require vendor package update (CVE-2020-11022 / CVE-2020-11023)\n-security#3549: Lack of escaping on some pages can lead to XSS exposure (CVE-2020-23226)\n-security#3582: Update PHPMailer to 6.1.6 (CVE-2020-13625)\n-security#3622: SQL Injection vulnerability due to input validation failure when editing colors (CVE-2020-14295)\n-security#3628: Lack of escaping on template import can lead to XSS exposure\n-issue#3517: When generating reports, function looping can occur resulting in 100% cpu usage\n-issue#3525: When viewing Graphs, zoom functionality prevents drag and drop of image\n-issue#3527: When using 95th Percentiles, undefined index errors can be generated\n-issue#3532: When using Realtime, if no graph contents are present an error is generated\n-issue#3533: When exporting data, Start date for RRDfile does not match start date of first data row\n-issue#3536: When using Navigation Menu, Show/Hide in Response mode does not always work\n-issue#3538: When using Realtime, race conditions between browser and function loading can occur\n-issue#3543: When exporting CSV data, Unicode prefix is not properly set\n-issue#3551: Authentication can fail when using Web Basic Authentication and Template User\n-issue#3553: When attempting to view an aggregate graph that does not exist, many errors are generated\n-issue#3563: Current orphan handling disrupts graphing transient indexes\n-issue#3566: Automation incorrectly attempts to use MacTrack to duplicate options\n-issue#3567: When Boost runs, locks are not always released properly and crash is detected\n-issue#3569: Invalid font results in large number of log entries\n-issue#3571: Correct various runtime errors due to incorrect message variables\n-issue#3574: Saving Graph Template Items take a long time on large systems\n-issue#3577: Hosts are being incorrectly filtered when first displaying with filter set to all\n-issue#3579: Graphs can incorrectly show as 'Empty Graph'\n-issue#3581: Realtime graph window is not resizing properly\n-issue#3588: Validation warnings are generated when viewing/editing devices\n-issue#3594: Automation hangs for certain schedule types\n-issue#3595: Template to Device sync text is not consistent\n-issue#3596: When importing template, resources aren't checked properly\n-issue#3597: Template to Device sync provides no feedback\n-issue#3598: When editing graphs and graph templates, back button results in broken page\n-issue#3599: When downgrading, templates are fully selected for install\n-issue#3601: When a device is down, instate can show wrong time\n-issue#3607: When session timeout occurs, subsequent authorized access to areas can become blocked\n-issue#3611: Allow CHANGELOG to be viewable from the GUI\n-issue#3613: When modifying trees, devices and graphs lists ignore Autocomplete Rows setting\n-issue#3614: When section tabs wrap, the title of the first section can become obscured\n-issue#3624: When previewing graphs, sometimes the images fail to appear\n-issue#3629: Log files are not rotated properly on remote pollers\n-issue#3631: Command line scripts do not allow an unlimited runtime causing timeouts\n-issue#3632: When mysql connection fails, various unexpected errors are recorded\n-issue#3635: Automate generates undefined index errors when communicating with remote pollers\n-issue#3639: When updating a device, duplicate entry errors occur when inserting to the database\n-issue#3646: Adding datasource fails from CLI due to missing function\n-issue#3651: Editing any item on an Aggregate Graph that has been converted to a normal graph breaks entire graph\n-issue#3655: Rare race condition between Boost and Poller can result in unexpected missing table errors\n-issue#3659: When viewing logs, unexpected 'needle' errors can be seen on rare occasions\n-issue#3663: Disabling a Data Collector can cause unexpected errors\n-issue#3668: When Input Field is in error, message reports field will be highlighted which is incorrect\n-issue#3669: When adding an Input Field, the Input Method can be renamed unexpected\n-issue#3673: Spikekill does not receive correct `avgnan` value when launching from GUI\n-issue#3676: Device not showing up in device page but showing up in Monitor tab\n-issue#3681: Item movement arrows do not properly align on all themes\n-issue#3682: When in 'Time Graph View' mode, Zoom features do not work correctly\n-feature#3611: Allow CHANGELOG to be viewable from the GUI\n-feature#3647: When adding datasource fails from CLI, created Datasource ID should be printed\n-feature#3666: Update jstree.js to 3.3.10\n-feature#3688: Update phpseclib to 2.0.28\n\n1.2.12\n-security#3467: Lack of escaping of color items can lead to XSS exposure (CVE-2020-7106)\n-issue#3422: When Graph Item is not linked to a data source, Comments do not always get variables substituted correctly\n-issue#3424: Hosts are being incorrectly filtered when no location filter is set\n-issue#3427: When exporting to a CSV with unicode characters, contents can become garbled\n-issue#3429: When using SNMP v3, Automation can report extraneous warnings\n-issue#3432: Rare race condition exists when both boost and dsstats enabled\n-issue#3434: When attempting to exploit Cacti using alert, unexpected errors can be seen\n-issue#3436: Unable to login due to incorrect default of Cookie Domains in config.php.dist\n-issue#3438: When upgrading to 1.2.11, installer can appear to stop at 42%\n-issue#3447: SNMP Issues on recent version of PHP\n-issue#3449: When viewing the installation wizard's directory permission step, items are overlapping unexpectedly\n-issue#3450: When installing Cacti under XAMPP and PHP 7.4, exceptions are being recorded and installation fails\n-issue#3452: New Content-Security-Policy prevents External Links from being opened\n-issue#3454: Cacti's Reports are not displaying messages correctly\n-issue#3457: Graphs can not properly handle negative axis values\n-issue#3459: When installing a new remote poller, connection tests can incorrectly fail\n-issue#3460: Addtional changes to allow plugin folder/display names to be handled better\n-issue#3462: Increase default memory limit for cli scripts to prevent runtime memory issues\n-issue#3463: When listing VDEF's, selecting 'has graph' can cause unexpected exceptions in logs\n-issue#3468: Graph rules cannot be created for automation\n-issue#3474: The SSL option to set the SSL_CA should be optional for Client Connections\n-issue#3477: Boost leaking memory when a large number of Data Sources disabled\n-issue#3478: Reindexing can sometimes run longer than expected\n-issue#3479: When viewing the Data Query table interface, the Data Input Method should be right aligned\n-issue#3483: When recording log entries, cacti should default to hyphenated date format\n-issue#3484: When editing SNMP v3 passwords, previous setting is not obfuscated\n-issue#3488: In automation, when viewing an 'SNMP option set', the private passphrase is in clear\n-issue#3495: When installing templates, default 'all' selection will reset all existing graphs, removing customisations\n-issue#3496: Graph Items can show a double percent sign incorrectly\n-issue#3502: When viewing Graphs, can not switch between list, preview and tree submodes\n-issue#3504: Viewing graphs before the poller has run for the first time can produce unexpected errors\n-issue#3505: When viewing graph previews, clicking Go or Refresh prevents calendars from working\n-issue#3506: After successfully logging in, a user can become automatically logged out again\n-issue#3507: Changes to JavaScript's Storage API cause exceptions to be thrown\n-issue#3510: Only guests can actually guest only pages, logged in users are denied access incorrectly\n-issue#3512: When plugins update, registered files list cannot always be updated\n-issue#3520: When viewing graphs, shifting time does not work when using non-english languages\n-issue#3576: LDAP Authentication succeeds, but login fails due to bad session handling\n-issue#3629: Log files are not rotated properly on remote pollers\n-feature#3480: Created 'custom_denied' hook to allow customisation of permission denied notifications\n-feature#3498: Update js.storage.js to 1.1.0\n-feature#3499: Update jstree.js to 3.3.9\n-feature#3500: Update phpseclib to 2.0.27\n\n1.2.11\n-security#1566: Add SameSite support for cookies\n-security#1985: Cookie should be properly verified against password\n-security#3342: CSRF at Admin Email\n-security#3343: Improper Access Control on disabling a user.\n-security#3414: Update to jQuery 3.4.1 to resolve XSS issues with jQuery 3.3.1\n-issue#2265: When attempting to save Graph field, query_ifSpeed is not properly validated\n-issue#2400: Allow ability to duplicate site settings\n-issue#2428: Make plugins non-case sensitive for folder names, whilst allowing nicer display names\n-issue#2580: When running DSSTATS, system isn't properly detecting that another is already running\n-issue#2853: Discovered Devices filtering do not include snmp description or name\n-issue#3231: Allow user to unlock a tree that has been locked for editing by another\n-issue#3237: Report gets resent every poller cycle\n-issue#3247: Language source files do not update \"PO-Revision-Date\" attribute\n-issue#3261: Automation rules aren't run for new devices on remote data collectors\n-issue#3296: Bad PHP memory limit values can result in failed upgrades\n-issue#3299: When using php-snmp and setting SNMPv3, warning is now shown as library does not support it properly\n-issue#3303: When installing under Windows OS, path expansion is not converted to PHP required format\n-issue#3310: When using 32-bit OS, automation errors can be seen due to subnet mask calculations\n-issue#3312: Console menu does not auto-expand for graph item editor page\n-issue#3313: When installing, multiple issues can be seen due to bad packages\n-issue#3314: Script Server has invalid debug code left in\n-issue#3317: Warnings can appear from CSRF Magic library due to multiple token values being found\n-issue#3319: Errors can occur upgrading from 0.8.x due to incorrectly detected data source profile id\n-issue#3322: When searching for LDAP accounts, allow recursive searching\n-issue#3330: Packages that are not properly formatted can cause installation issues\n-issue#3334: When upgrading from 0.8.x Automation SNMP Options should be populated\n-issue#3335: Unable to hide Device based Aggregate Graphs on Tree\n-issue#3336: Plugins need the ability to relax some content security policies in order to work properly\n-issue#3340: Undefined variable warning can appear when using 95th percentile graphs\n-issue#3341: MoTranslator does not appear to be handing null values properly\n-issue#3345: When attempting to refresh datetime picker, unexpected results can appear\n-issue#3346: When attempting to rewrite octet strings, extra space breaks pattern matching\n-issue#3348: When attempting to handle Orphans and/or Sync Graphs, results are not as expected\n-issue#3349: Prevent setting the PHP variable max_input_vars since it is read only\n-issue#3350: When editing a data source template, inconsistent results can be seen due to database query\n-issue#3355: When viewing raw graph data via the GUI, values are not always calculated correctly\n-issue#3357: Tree Search textbox resizes to 0 in some cases\n-issue#3360: When using guest accounts, after several timeouts result in refreshes, guest becomes logged out\n-issue#3363: The current user and user group permissions pages are not responsive\n-issue#3367: When Data Queries timeout, data is removed from the Host SNMP Cache table causing issues\n-issue#3368: Saving a Graph Template Item fails due to missing includes\n-issue#3373: When logging in via LDAP, ActiveDirectory would sometimes report insufficient access\n-issue#3375: When polling more often than default period of collecting data, distribution of collected data was not occurring\n-issue#3376: Improve speed when recovering from a poller from offline state\n-issue#3378: When attempting to check whether to include MoTranslator, typo makes it appear unavailable\n-issue#3380: php error when trigger threshold sendmail\n-issue#3386: Second data collector shows as running when its has no items to gather\n-issue#3387: Minor corrections to CSRF Magic\n-issue#3388: Naming of CLI programs does not always match name used within syntax usage advice\n-issue#3390: Incorrect breadcrumb bar if current tab is not \"Graphs\"\n-issue#3402: Cacti scores low on performance audit on lighthouse audit\n-issue#3408: CSRF Secret path is not passed properly when attempting to initialize secret\n-issue#3409: Issues with navigation link activations to other base Cacti pages\n-issue#3410: Zoom looses focus in advanced mode while crossing chart border\n-issue#3411: When upgrading a primary server, full synchronization is not happening as expected\n-issue#3412: When upgrading a primary server, automation templates are removed\n-issue#3413: When upgrading and choosing to upgrade your packages, installer finishes without package data in log\n-feature#1551: Allow system uptime to be a variable for use with graphs\n-feature#1990: Plugin Realm should have a 'role' to help maintain changes between plugins\n-feature#2110: Add Refresh Interval to Data Collectors display\n-feature#2156: Add Location based filtering\n-feature#2236: Allow for Purging of Data Source Statistics from the GUI\n-feature#2268: Restore ability to duplicate a data profile\n-feature#2534: Enhance table navigation bars to support systems with larger number of items\n-feature#2688: Increase length of Graph Item 'value' field to support pango-markup better\n-feature#3304: Allow Basic Auth Accounts to be mapped by CSV file\n-feature#3366: Make form elements under checkbox_groups flow using flex grid style\n-feature#3374: Set the domain attribute to secure cookies for the 'remember me' option\n-feature#3403: Enhance the \"Graph Debug Mode\" to display RRDtool Command lengths and excess warnings\n\n1.2.10\n-security#3285: When guest users have access to realtime graphs, remote code could be executed (CVE-2020-8813)\n-issue#3240: When using User Domains, global template user is used instead of the configured domain template user\n-issue#3245: Unix timestamps after Sep 13 2020 are rejected as graph start/end arguments\n-issue#3246: When upgrading with remote collectors, sync status does not always return properly\n-issue#3250: When PHP memory limit is set to -1, recommendation value fails\n-issue#3253: Upgrade can stall when checking permissions on csrf-secret.php\n-issue#3254: Installer shows script owner rather than running user for suggested chown command\n-issue#3266: When setting User Groups to 'Defer to the User', setting can lead to user being told they have no permissions\n-issue#3269: When searching Graphs under a Chinese language, an unexpected error as sometimes shown\n-issue#3274: When editing a tree, multiple device drag/drop does not work\n-issue#3276: When spine aborts, script server can be left wanting or generating unnecessary logs\n-issue#3277: When boost does not find an initial time, numeric errors can be raised\n-issue#3281: When changing Graph Template options, incorrect image format may be selected\n-issue#3282: Graph's can be sized incorrectly if image is SVG format\n-issue#3283: When setting a file path, valid characters not recognised properly\n-issue#3287: When using graph template 'Cacti Stats - User Logins', an incorrect count of invalid users can be seen\n-issue#3288: When on Device page, pressing 'Go' on the filter caused Device New menu pick to appear\n-issue#3289: When using CMD.PHP, poller id is not always shown properly\n-issue#3290: When using CMD.PHP, inconsistent device logging levels may occur\n-issue#3298: When initialising fields in JavaScript, text/textarea elements have width set to zero if it is hidden by parent\n-issue#3302: Editing a Graph Template does not show the Data Template name\n\n1.2.9\n-security#3191: Lack of escaping on some pages can lead to XSS exposure (CVE-2020-7106)\n-security#3201: Remote Code Execution due to input validation failure in Performance Boost Debug Log (CVE-2020-7237)\n-issue#2937: Devices still show in lists despite being deleted\n-issue#3038: When editing an aggregate on smaller screens, layout may not be correct\n-issue#3136: Upgrade may fail between 1.2.7 and 1.2.8 if incompatible database format used\n-issue#3142: Chrome sets graphs tree navigation view to width 0px\n-issue#3146: Unable to create aggregate graphs on new installations\n-issue#3149: After refresh of page, tooltips stop working\n-issue#3150: When using Time Graph View, Zooming can cause errors\n-issue#3151: Passing glue string after array is deprecated in PHP 7.4\n-issue#3155: Aggregate does not correctly follow color template when reordered\n-issue#3156: On new installs, gprint_format was missing from table aggregate_graphs\n-issue#3157: Back button not working properly with Classic theme\n-issue#3158: Classic theme show only 3 tabs on mobile device. Don't show Console menu\n-issue#3159: PHP Memory is not correctly identified when value is not in megabytes\n-issue#3161: When the poller_output_boost table is missing, recreate it before a poller run\n-issue#3163: When using RPMlint, Free Software Foundation address is shown to be incorrect\n-issue#3165: Zoom looses its focus after all graphs on page rendered\n-issue#3166: When changing zoom level, graphs are resized inappropriately at the end\n-issue#3167: Installer should initialize the csrf-secret.php file automatically\n-issue#3168: sqltable_to_php.php script does not pick up row_format\n-issue#3177: Remove legacy plugin hook that presents potential 3rd party security issues\n-issue#3178: The change password page is not displaying the rules\n-issue#3180: Receiving undefined index errors when working with some Data Queries\n-issue#3181: When configuration file is unreadable, Cacti shows database connection errors if non defaults are needed\n-issue#3182: When a database connection error occurs, there is no way to report actual error\n-issue#3184: Improve program path detection by using system path and PHP_BINDIR\n-issue#3193: Starting with MySQL 5.7 some sql_mode variables are required for some plugins\n-issue#3196: Minimize use of eval() in JavaScript due to emerging Content-Security-Context guidelines\n-issue#3200: Unable to mass change Graph Template image format in mass\n-issue#3206: Converted aggregate graph cannot be edited\n-issue#3209: Error occurs when Creating New Graphs through Automatically Added Devices using Sync Device Template\n-issue#3216: When editing a Data Source Profile size is shown as 'N/A'\n-issue#3224: When removing graphs by command line, regex is not properly validated when empty\n-issue#3225: Unable to Import Templates due to invalid dependency hash\n-issue#3226: When processing secpass login, failed logins are not recorded\n-issue#3228: Login page does not remember the last realm used by user\n-issue#3232: When editing HRULE and VRULE items, color selector was not presented\n-issue#3233: When working with non-templated graphs, it can be difficult to determine what items represent\n-issue#3235: Transient errors may occur with table poller_output_boost_arch\n\n1.2.8\n-security#3025: CVE-2019-17357 When viewing graphs, some input variables are not properly checked (SQL injection possible)\n-security#3026: CVE-2019-17358 When deserializating data, ensure basic sanitization has been performed\n-security#3066: When using HTTPS, secure cookie to prevent potential weakness\n-issue#1228: Any tree or branch with a long name force main content off screen\n-issue#2133: Long snmp_indexes are being cut off\n-issue#2888: Long hostnames cause template filter to go off page\n-issue#2987: Changing Color Template does not update Aggregate\n-issue#2989: Allow Remote Data Collectors to maintain their own path variables\n-issue#2991: Cacti Statistics device template can generate unexpected errors\n-issue#2995: When editing a report, column setting may be ignored incorrectly\n-issue#2996: When editing a user, graph options do not properly reflect previously saved settings\n-issue#2998: Session performance issues due to excessive use for database storage\n-issue#2999: Blank arguments can lead to extra spaces in script arguments\n-issue#3006: Boost generates undefined variables warning during poller run\n-issue#3011: i18n logging does not check write permission exists\n-issue#3012: When viewing realtime graphs, some input variables are not properly checked\n-issue#3013: Allow legends to be modified for Aggregate Graphs\n-issue#3017: Automation network range with spaces fails validation\n-issue#3019: User selected language is not always adhered to\n-issue#3021: Tree view cuts off at the bottom of page on modern theme\n-issue#3023: When clicking highlighted tab, side panel is not always shown/hidden correctly\n-issue#3027: Aggregate Graph re-ordering does not work\n-issue#3028: When zooming a graph, unable to reach edge of graph without losing focus\n-issue#3030: Pace continues to run even after a page is finished rendering\n-issue#3032: Graphs may select MAX instead of AVERAGE as consolidation function even if there is no item with MAX present.\n-issue#3035: When editing a tree, can not remove entries due to CSS bug\n-issue#3037: When emptying poller output using cli, debug functions are not properly included\n-issue#3039: Allow packagers to be able to specify an alternate location of csrf-secret.php file\n-issue#3040: When running automation, discovery can still run even if cancelled\n-issue#3041: When running automation, scans do not always respond to being cancelled\n-issue#3042: When running automation, scan can fail when selecting remote pollers\n-issue#3045: When viewing Aggregate Graphs, an error due to undefined referrer may occur\n-issue#3047: When saving settings, ignore remote pollers who have not checked in recently\n-issue#3050: When viewing graph trees, some input variables are not properly checked\n-issue#3052: When editing CDEF's, slow database performance can occur\n-issue#3053: When viewing graph thumbnails, some input variables are not properly checked\n-issue#3055: During install/upgrade, database tests are not performed correctly\n-issue#3059: When using nth_percentile, correct value is not always returned if using MAX consolidation\n-issue#3060: When upgrading from older MySQL databases, format is not changed from compact to dynamic\n-issue#3061: When running automation, allow SNMP to be used as a ping method\n-issue#3068: When administrating users, some input variables are not properly checked\n-issue#3070: Improve database logging when a crashed table is encountered\n-issue#3073: Automation network range does not always produce the correct start/end values\n-issue#3078: When viewing graph debug from remote data collector, File Not Found warnings can appear incorrectly\n-issue#3079: Allow domain names to be stripped from a device's long description\n-issue#3080: Remote Agent throws warnings that graph_nolegend has not been sanitized\n-issue#3085: When editing a poller, ensure each listening IP is unique\n-issue#3081: External Links are not showing a glyph when they appear on the Console menu\n-issue#3089: When viewing graphs in realtime, undefined variable can be logged for 95th Percentile graphs\n-issue#3099: Graph template 'Linux - Memory Usage' has the wrong unit on its vertical_label\n-issue#3101: Polling times can be slightly inconsistent due\n-issue#3104: When viewing graphs, a byref error can be seen in the error logs\n-issue#3105: When viewing hosts, some input variables are not properly checked\n-issue#3111: When adding devices via command line, bad SNMP versions are not reported\n-issue#3112: When zooming on Graphs, too many requests are being made causing slowness\n-issue#3114: Support for USB devices that change name due to their hosts restarting\n-issue#3118: When converting tables, the dynamic row format should be selected\n-issue#3119: Main Data Collector should perform a Full Sync whenever it is installed/upgraded\n-issue#3120: Correct issues causing incompatibility with PHP 7.4\n-issue#3121: When converting tables during install, show what will be changed\n-issue#3123: Named colors table is not properly imported/upgraded\n-issue#3124: When a second data collector is added, boost is not enabled automatically\n-issue#3128: i18n handler checks for existence of wrong mo file\n-issue#3129: Logout repeated occurs even when already logged out\n-issue#3132: Installer fails to continue if automation range is array of networks\n-issue#3098: Support percent sign(%) in graph gprint item like legend area.\n-feature#3077: Allow disabling remote poller resource cache replication to support upgrade testing\n\n1.2.7\n-security#2964: CVE-2019-16723 Security issue allows to view all graphs\n-issue#1181: When opening the Scheduler, it may appear off screen when opened near the bottom of a window\n-issue#2894: When using Remote Data Collectors, database information and recommendations may show Incorrect values\n-issue#2895: When using data sources from different RRDs, Percentile calculation may be incorrect\n-issue#2899: When displaying a form, variable substitution may not always work as expected\n-issue#2922: When running a data query, the result may come back as undefined\n-issue#2925: When using consolidation functions, retrieving the first step can cause errors\n-issue#2926: When editing a graph, variable validation errors may prevent changes from being saved\n-issue#2929: Boost performance may become poor even in single server mode\n-issue#2930: RRDtool can generate errors to standard output which can corrupt images\n-issue#2932: When RRDTool generates an error creating an image, it is not always reportedly properly\n-issue#2936: Installer will loop when number of tables exceeds PHP's max_input_vars limit\n-issue#2938: Under CentOS packages, upgrade_database.php script uses incorrect location for DB upgrade scripts\n-issue#2940: Images are not always properly sized until the page size changes\n-issue#2949: Order icons may not be properly aligned\n-issue#2951: Allow legends to be modified for Aggregate Graphs\n-issue#2958: Drop down autocomplete lists do not always open as expected\n-issue#2961: When syncing device templates, undefined function may be raised\n-issue#2963: When running ss_cpoller script, avgTime incorrect returns maxTime\n-issue#2966: Realtime popup windows do not always honor settings\n-issue#2967: When using Spikekill, gap and range fill are not operating as expected\n-issue#2970: When a user edits their profile, buttons may appear as unusable whilst still being enabled\n-issue#2973: User menu does not always display properly on mobile devices\n-issue#2974: Script Server can raise unexpected warnings when 'arg_num_indexes' set but not found in data source\n-issue#2975: Datasource Debug does not properly handle European numbers in certain circumstances\n-issue#2976: Boost messages should be stored in their own log file\n-issue#2977: Data updates with past timestamps can cause boost errors\n-issue#2978: Moving hosts between data collectors is slow\n-issue#2979: Multi Output Fields are not parsed correctly\n-issue#2984: When checking SQL fields, value was not always primed\n-issue#2986: Selecting 'Devices' menu pick closes 'Management' menu\n-feature#2943: Allow all Data Queries of a device to be re-indexed at once\n-feature#2952: If device is down or threshold breached, highlight in tree view\n-feature#2985: Update phpseclib to 2.0.23\n\n1.2.6\n-issue#2794: Graph template not saved on graph edit\n-issue#2825: \"innodb_doublewrite = off\" possibly dangerous recommendation\n-issue#2829: PHP recommendations always see memory limit as unlimited\n-issue#2830: Disabled Top/Bottom external links should not be displayed\n-issue#2832: Install/Upgrade log does not show anything\n-issue#2833: Undefined index can occur when data source does not have an snmp_index\n-issue#2834: Boost performance drops on very large systems\n-issue#2835: When creating graphs and inneficient query is causing long creation times\n-issue#2837: Sunrise theme does not render checkboxes 100% correctly\n-issue#2838: jQueryMultiselect does not match upstream due to forking\n-issue#2839: Non regular expression search filters don't support international characters\n-issue#2841: Total count is wrong after searching for External Link pages\n-issue#2843: DSStats reruns Daily Aggregation every minute\n-issue#2844: Autocomplete settings for passwords are not properly defined\n-issue#2845: Data Template can't be edited when it is in use\n-issue#2846: Allow tooltips for section headers with 'question' icon\n-issue#2847: Permanently convert an Aggregate to a regular graph\n-issue#2848: Aggregate graphs get clipped due to incorrect date range\n-issue#2856: Aggregate issues with very long RRDtool command lines\n-issue#2857: When trying to find the best index to use, a 'must implement Countable' warning appears\n-issue#2860: When testing remote poller connections during install, undefined variable warning can occur\n-issue#2862: Automation does not calculate network information correctly for single hosts\n-issue#2866: Add poller ID to subject for admin notifications\n-issue#2869: When creating aggregates from Graphs, JavaScript issues can occur\n-issue#2872: Add support for MySQL 8 and use of grouping as name for a column\n-issue#2875: Undefined variable when removing spikes in some cases\n-issue#2877: When attempting to send report, undefined function 'get_tinespan' messages appear\n-issue#2878: Function get_magic_quotes_gpc() is now deprecated in PHP 7.4\n-issue#2879: Switching from authPriv to authNoPriv produces error when saving\n-issue#2884: Replication continues to occur when poller has been disabled\n-issue#2891: Script server script ss_fping.php generates error when not called by script server\n-issue#2901: Poller overrun warning message is badly worded\n-issue#2902: Mailer incorrectly reports it is sending to noone\n-issue#2903: PHP recommendations can generate a warning causing JSON issues\n-issue#2905: Sorting plugins by version can lead to unexpected ordering\n-issue#2907: SSL column for multiple pollers can be incorrectly set causing SQL errors\n-issue#2908: When URL_PATH is blank, it should assume that it is '/'\n-issue#2909: Correct usage of affect vs effect in strings\n-issue#2910: Can not show user menu when in portrait mode on mobile devices\n-issue#2911: Graph variables are not always encoded to JSON properly resulting in warnings\n-issue#2912: Navigation cache can sometimes be corrupted resulting in a non-array value\n-issue#2913: When adding new graphs, the type of graph is not remembered\n-issue#2917: Action icons next to graphs can sometimes become unselectable due to zoom\n-issue#2919: When refreshing menu, selected items are sometimes lost and submenu items can become hidden\n\n1.2.5\n-issue#1978: Popup Menus can appear off screen when using Graph Thumbnails\n-issue#2282: Installation wizard does not detect RRDtool version correctly\n-issue#2524: When editing a tree, Drag and Drop of Devices does not always work as expected\n-issue#2573: Associated Graph Template for Data Query can sometime disappear\n-issue#2656: GPRINT text_format does not replace Data Query and Host Fields\n-issue#2661: Automation does not always calculate network range/subnet correctly\n-issue#2663: Some legacy Data Queries can not determine their index order causing broken graphs\n-issue#2674: Large strings can sometimes cause language translation can fail\n-issue#2719: Automation may sometimes create empty graphs\n-issue#2721: When replacing '|input_xxxx|' strings, undefined index can occur\n-issue#2722: Calls to _db_replace() are not consistent resulting in warnings\n-issue#2723: When replicating to remote pollers, Undefined Variable errors may be seen\n-issue#2724: When graphing HRULE items, 'Only Variables should be passed by reference' error may be seen\n-issue#2725: When viewing logs in utilities, filenames should be limited the same as clog\n-issue#2726: During Automation logging, include the Rule ID that triggers the creation of an item\n-issue#2732: When using basic authentication, automatically strip any @domain information\n-issue#2734: Allow non-english labels to be used on Graph Templates\n-issue#2727: When using Polling Hosts Template, warnings can be issued when CMD.PHP is the poller\n-issue#2733: When processing SNMP data, space delimited hex strings do not always convert into MAC addresses\n-issue#2735: Mouse cursor should show as default pointer if column is not sortable\n-issue#2736: When using MySQL 8 or above, 'function' is considered a reserved word unless quoted\n-issue#2741: Various errors can occur due to undefined or incorrect variable names\n-issue#2742: Various errors can occur due to undefined or incorrect variable names\n-issue#2743: Attempts to close a tooltip when no tooltip has been set may cause errors\n-issue#2744: When changing password, undefined index error can occur if user is not logged in\n-issue#2748: If PHP location setting is invalid during install/upgrade, this should be notified on modules page\n-issue#2750: When performing multiple sort, highlighting of content occurs\n-issue#2751: When editing a Tree, display filter may not allow 'All' option to work\n-issue#2752: When running verbose query on device, you are unable to copy text from items\n-issue#2753: Unable to copy entire verbose query using clipboard command\n-issue#2757: Page Navigation can be subject to XSS injection\n-issue#2758: Various sensitive directories are browsable if web server directory browsing is enabled\n-issue#2760: Unable to add items into a report\n-issue#2762: Creating an aggregate graph can sometimes fail due to unknown RRD tools error\n-issue#2766: When modifying Aggregate Templates, changes are not always cascaded to Graph\n-issue#2768: Aggregate Graphs may sometimes show the wrong row count\n-issue#2770: ItemType is not updated when saving Report Items\n-issue#2772: Add tooltip support to html_header() and html_header_checkbox()\n-issue#2775: Remote pollers may sometimes fail to replicate data back to main system\n-issue#2777: Attempting to edit a non-existent report generates an error\n-issue#2778: When rendering graphs, resizing can sometimes occur repeatedly\n-issue#2779: On new installations, automation rules for Interface Graphs are broken\n-issue#2780: Upgrade database script not actually upgrading Cacti\n-issue#2782: When replicating the syslog plugin, the configuration file is ignored causing errors\n-issue#2783: When limiting the number of displayed characters, international characters may sometimes display incorrectly\n-issue#2784: When removing a device with graphs but no data sources , errors are generated\n-issue#2785: When editing a graph rule, warnings incorrectly appear about unsaved changes\n-issue#2792: When a checkbox 'friendly name' has a comma, checkbox functionality stops working\n-issue#2797: When upgrading from before 1.x, SuperLinks view permissions may not be correct\n-issue#2799: Under heavy use of Real Time Graphs, SQL errors may start appearing\n-issue#2800: When editing a tree, using a comma in the search field stops search from working\n-issue#2802: If a Device lacks ifName, an alternative field is not always found even if available\n-issue#2807: When editing a Data Template that has dependant graphs, some attributes should not be modifiable\n-issue#2808: When navigating a tree, the layout may unexpectedly move\n-issue#2814: When viewing the utilities page, HTML tags may be seen rather than rendered\n-issue#2816: When viewing logs, paging does not always working correctly\n-issue#2818: Automation can sometimes incorrectly add duplicate devices with the same sysname\n-issue#2820: When path is blank, is_resource_writable() will generate 'Uninitialized string offset: -1'\n-issue#2821: When the desired locale can not be located, a number format issue may occur\n-feature#2728: Update phpseclib to 2.0.17\n-feature#2809: Update c3.js & d3.js\n-feature#2730: Update jstree.js to 3.3.8\n-feature#2754: Allow Devices, Graphs and Data Sources to be searched by ID\n-feature#2765: When editing a tree, allow cascading selection of available graphics\n-feature#2805: Merged plugins are not always upgraded correctly\n-feature#2823: Enhance the splice_rrd.php to be able to merge RRDfiles of differing step\n\n1.2.4\n-issue#2523: Send A Test Email stops working under PHP 7.3\n-issue#2589: Missing RRD file can cause DSSTATS to throw errors\n-issue#2590: When installing, chosen language is sometimes lost\n-issue#2591: Menu selection does not always match selected page/section\n-issue#2592: When viewing an aggregate graph, 'Display graphs from this aggregate' option does always not work\n-issue#2593: Unable to migrate aggregate graphs to matching aggregate template\n-issue#2598: Creating an aggregate graph without associated template causes RRDtool error\n-issue#2599: Creating/Updating an Aggregate Graph to use LINE/STACK's generates invalid SQL statements\n-issue#2604: When adding a dataquery, SQL errors can be generated\n-issue#2605: When installing, checking database tables can cause errors\n-issue#2608: db_update_table() function should not require an engine type or comment\n-issue#2609: When updating from earlier than 1.2, timezone column might not exist\n-issue#2610: Data Sources troubleshooter generates warning that each() function is deprecated\n-issue#2612: When RRDtool fails to initialize, DSStats generates lots of warnings\n-issue#2618: ifAdminStatus in snmp_queries/interfaces.xml\n-issue#2621: File paths that accept blanks are not allowing blanks\n-issue#2622: Various undefined variables generate errors within database.php\n-issue#2623: When using form_text_area(), invalid HTML can be generated\n-issue#2627: Some filenames can be lost in log file selection list\n-issue#2629: When upgrading, ldap library is not loaded properly due to incorrect paths\n-issue#2632: Automated Networks are not being properly replicated to additional pollers\n-issue#2635: When running automation scans, database connection should be forced to central database\n-issue#2638: Support disabling PHP SNMP extension\n-issue#2645: Some URLs are incorrectly calculated\n-issue#2649: Automation not creating graphs when there are custom items\n-issue#2650: Several undefined variables are generating warnings\n-issue#2662: HRULE objects broken in some cases\n-issue#2668: Trailing parentheses are removed from the SNMP system description\n-issue#2672: Cacti Install on Windows Fails\n-issue#2676: Skin paper plane not working on iPhone XR\n-issue#2678: Call to undefined function _() in data_queries.php\n-issue#2679: Users with passwords that do not meet complexity requirements are not redirected to the Change Password page\n-issue#2680: Remove deprecated $php_errormsg usage\n-issue#2689: Increase boost maximum memory limits\n-issue#2693: Graph links do not contain URL path causing links to fail\n-issue#2698: Avoid duplicated icon in the main.js of all themes\n-issue#2699: Login option \"Show the page that user pointed their browser to\" does not work properly\n-issue#2702: sqltable_to_php.php does not always generate valid table data arrays\n-issue#2707: Some pages that have permission errors dont raise proper messages\n-issue#2712: PHP memory should be unlimited in scripts that need more memory than the default\n-issue#2713: SNMP System Description with UTF8 strings properly are not properly parsed\n-issue#2718: When links are converted to ajax calls, mailto links should not be included\n-issue#2720: When calculating percentiles, the value is incorrect as the steps are not placed in correct order\n-issue#2822: When stderr log file is not populated, clog generates 'empty needle' error\n-feature#2538: Allow users to change default method of removing data sources when deleting graphs\n-feature#2539: Allow users to set the default graph lock status\n-feature#2540: Allow users to enable/disable graph tree history\n-feature#2646: Allow application of automation rules on CLI\n-feature#2654: New hook to notify plugins of user profile changes ('auth_profile_update_data')\n-feature#2664: Add option to purge spikekill backups\n-feature#2701: Provide option to continue graphing objects that loose their index\n-feature#2704: Device and template cache do not refresh properly\n\n1.2.3\n-issue#1063: Tree View does not display the last item correctly under 'Modern' theme\n-issue#2282: Installation Wizard does not Detect RRDtool Version on Windows\n-issue#2430: \"New Device\" menu item showing as selected incorrect when \"Devices\" clicked\n-issue#2435: Tree View becomes narrower and narrower when expanding/collapsing nodes with long names\n-issue#2449: Index incorrectly changed to 1 if the index is alphanumeric when OID/REGEXP: or OIDVALUE/REGEXP:\n-issue#2452: Missing 'getSNMPQueries()' function when calling add_data_query.php\n-issue#2453: When running add_graphs.php, cannot retrieve list of valid snmp values\n-issue#2460: sqltable_to_php.php does not export 'default' value of columns correctly\n-issue#2456: When attempting to display actions that can be taken, having no actions caused error\n-issue#2457: When creating a graph, undefined function prevents confirmation from appearing\n-issue#2459: ss_host_disk.php attempts to return an empty array instead of a string\n-issue#2463: Partial Fix: Display zombie data sources without graphs\n-issue#2464: When viewing a User's effective permissions, disabled devices should show denied\n-issue#2465: Too many groups hide effective permission column when viewing User's effective permissions\n-issue#2466: Manual data source creation is broken\n-issue#2469: When using Matching Objects filter within Automation Graph Rules, unexpected redirect occurs\n-issue#2471: When Creating a new Graph Template, clear the Graph Template permissions cache\n-issue#2472: Bad navigation items cause Array to string conversion errors\n-issue#2474: REGEXP_SNMP_TRIM does not handle Gauge fields properly\n-issue#2475: When resetting filters, multiple sort session variables do not always reset properly\n-issue#2476: When using CMD.PHP for polling, device polling time is not updated\n-issue#2477: When saving a Data Input Method, Output Field name changes to incorrect value\n-issue#2478: When saving a LINEX type Graph Item, the Line Width value is too restrictive\n-issue#2479: RPN function select list should be sorted when editing CDEF and VDEF's\n-issue#2480: RRDtool versions in Cacti not granular enough\n-issue#2482: When upgrading past 1.1.34, upgrade attempts to drop a non-existing primary key\n-issue#2491: Data Source Info suggests commands RRDTool can't honor\n-issue#2492: When data templates are filtered by profile, data source list does not get same filter applied\n-issue#2493: Data Source Info is not separated properly\n-issue#2494: User Login History is not fully enabled for translations\n-issue#2497: When linking to Graphs, unless both start and end are specified, only defaults are used\n-issue#2499: Data Source reapply names does not update name from data query or template.\n-issue#2500: Allow Data Source repairs from the Data Source Debug and Data Source Info pages\n-issue#2502: Unable to have a min or max value for RRDfile at zero '0'\n-issue#2503: The Cacti Statistics Device Template is not include in release\n-issue#2509: When checking for correct Unicode, minimum MySQL version is incorrect\n-issue#2513: When a plugin INFO file is malformed or missing elements, plugin_load_info_file() should fill missing elements with defaults\n-issue#2519: When editing a data query, graph template picker shows poor performance\n-issue#2518: Unexpected errors when filtering Data Sources with invalid 'rows' value\n-issue#2522: When upgrading from pre-1.0.0, colors were not upgraded properly\n-issue#2525: Tree branches that includes sites which have valid devices do not appear on Graph Tree\n-issue#2527: When importing a package, if Cacti version is below the version which that exported, a clear message should be shown\n-issue#2531: When updating color template items, the table name used is incorrect\n-issue#2532: Ensure Graph ListView table is displayed in line with Management -> Graphs\n-issue#2535: Ensure Graph ListView uses same UI logic as Graph Management -> Graphs\n-issue#2537: Incorrect title showing when changes are made to Tree\n-issue#2543: Poor performance showing a device's graphs on a tree\n-issue#2547: RRD values are not being properly trimmed\n-issue#2551: When checking MySQL configuration values, consider ON/OFF to be equal to 1/0\n-issue#2553: When upgrading from 1.0.0 or below, renaming automation columns can cause issues\n-issue#2555: Missing configuration defaults prevent installations/upgrades without showing reason\n-issue#2563: When sorting Data Sources, missing index causes unnecessary delays\n-issue#2564: Filtering for Orphan Data Sources is unreliable\n-issue#2565: Pages with 500+ selectable items in a single able can suffer from poor performance\n-issue#2568: When querying for diagnostic data, devices on remote pollers should proxy the request\n-issue#2571: External Links do not properly validate user permissions\n-issue#2575: Poller errors occur if a file exists that the website cannot read\n-issue#2576: Spikekill API does not work when called from plugins\n-issue#2578: When importing packages, missing/new resources are not created\n-issue#2581: When viewing poller cache, Device SNMP community is not properly escaped\n-issue#2583: When JSON module is not installed, Installer does not correctly show missing message\n-issue#2584: When user/group permissions are reset, this is not reflected immediately to the end user\n-feature#2505: Improve performance of Data Source Statistics\n-feature#2515: Allow more than one SNMP port to be specified when adding devices via CLI\n-feature: Update phpseclib to version 2.0.15\n-feature: Adjust the max table rows based upon value of 'max_input_vars'\n\n1.2.2\n-issue#599: Aggregate graph templates assume AVG consolidation function\n-issue#2312: Retrieving Device Information appears to fail on Safari\n-issue#2317: Unabe to add new records to 'poller_time' table\n-issue#2327: Memory exhausted whilst running poller replication\n-issue#2334: Some browsers report JavaScript errors when switching to console\n-issue#2337: When running an upgrade, the path of the log file is reset\n-issue#2339: Certain characters in recipient address can cause email to fail\n-issue#2343: Export hooks no longer work due to missing default keyword\n-issue#2346: When listing plugin permissions, \"Legacy 1.x Plugins\" can appear in the wrong cell\n-issue#2347: Allow sort output to inject returned data into a specific object\n-issue#2350: Unable to Select Data Source for HRULES and COMMENTS that include nth Percentile and Bandwidth\n-issue#2352: SNMP description field can sometimes contain mangled data\n-issue#2354: When reindexing in Automation, titles are not updated for Graph and Data Source\n-issue#2355: Data Sources are sometimes duplicated when Custom Data is specified\n-issue#2357: When indexes are incorrect, poller should log more information\n-issue#2359: When upgrading, \"Install/Upgrade\" privilege may have been previously lost\n-issue#2360: When retrieving database / table / column information, schema name is not always applied\n-issue#2362: No way to default an interface speed when ifSpeed and ifHighSpeed come back as zero\n-issue#2365: When editing Aggregate Graphs, orphaned items were not always removed\n-issue#2372: Data Query reindexing leads gaps in Graphs\n-issue#2376: Manually adding a device discovered by Automation causes errors to be logged\n-issue#2380: Devices may experience constant reindexing\n-issue#2384: When authentication method is set to None, change to Builtin as None has been removed\n-issue#2393: When reindexing a device, Graph Automation creates duplicate graphs every time\n-issue#2416: SELinux wants APPEND not WRITE permission for Fedora/EPEL (RHEL, Centos)\n-issue#2419: Host state time was not correctly calculated\n-issue#2426: Reinstate missing plugin hooks for 'custom_logout_message' and 'custom_denied'\n-issue#2431: Default value for 'Mail Method' (settings_how) is incorrect resulting in errors\n-issue#2432: Undefined variable warnings when updating RRD data\n-issue#2451: Drag and drop does not always function correctly\n-feature: Update JavaScript library c3.js to version 0.6.12\n-feature: Update phpseclib to version 2.0.14\n-feature: Update PHPMailer to version 6.0.7\n-feature: Update JavaScript library d3.js to version 5.9.1\n\n1.2.1\n-issue#2259: Unable to View Aggregate Graphs\n-issue#2267: Remove unnecessary includes in aggregate template code\n-issue#2270: Realtime Graphs consuming too much memory\n-issue#2272: Site Tree Branches not showing Graphs\n-issue#2273: Error when saving changes to Data Collectors\n-issue#2279: SQL Errors in add_graphs.php\n-issue#2280: SQL Errors in snmpagent cache table inserts\n-issue#2281: Database audit cli giving incorrect results\n-issue#2285: Allow HRULEs for bandwith and ptile\n-issue#2292: Allow Realtime to use 1 second data collection\n-issue#2298: Ambiguous Toggle Switches in Sunrise Theme\n-issue#2303: Problem with \"Notify Primary Admin of Issues\" function\n-issue#2304: Installation progress stays at 0%\n-issue#2305: BOOST PROGERR: ERRNO:'8'\n-issue#2311: Unable to update PHP location during installation due to incorrect CLI environment\n-issue#2319: Primary admin account not always given access to a plugin when that plugin is enabled\n-issue#2321: Date separator not being used properly for graphs\n-issue#2322: Modifying plugin realm registration files and description not supported\n-issue: Installer does not identify when shell_exec()/exec() are disabled\n-issue: Removing a Device or Graph Template can not be seen till next login\n-issue: Visual issues with custom data when using paper-plane theme\n-issue: Undefined function errors attempting to sync device templates\n-issue: Plugin dependency handling inconsistant\n-issue: Editing a report shows incorrect graphs from dropdown\n\n1.2.0\n-feature: Add a Timeout setting for Remote Agent calls\n-feature: Add Graphs and Data Sources hyperlinks on Device page\n-feature: Add One Minute Sampling to the default Data Source Profiles\n-feature: Add support for DDERIVE and DCOUNTER to Cacti\n-feature: Add Timezone support for Remote Data Collectors\n-feature: Allow Adding Aggregate Graphs to a Report\n-feature: Allow ASCII filepath paths to not be found on settings save\n-feature: Allow drill down from Graphs to Data Queries or Templates\n-feature: Allow Import/Export to be hookable\n-feature: Allow snmpagent to be disabled for very large installs\n-feature: Allow Top tabs to be Glyphs or Text or both\n-feature: Big Spanish translation update plus massive QA fixes\n-feature: Change password page provides visible confirmation of password rules\n-feature: Do not allow second data source to be added to an SNMP Get data template\n-feature: Don't allow removal of Data Sources from Data Template once its in use\n-feature: Inform the primary Cacti administrator of problems by Email\n-feature: Make all user settings dynamic and allow resetting to default.\n-feature: Make Graph and Data Source suggested naming more efficient\n-feature: Make it easy to find Data Query based graphs that have lost indexes\n-feature: Make Top Tabs use Ajax Callback\n-feature: Make tree editing responive\n-feature: New Install/Upgrade user permission to limit access to being able to upgrade\n-feature: Provide option to debug width errors where output exceeds column width\n-feature: Removed the Authentication Method of 'None'\n-feature: Tree automation is now defaulted to on for new install\n-feature: Update JavaScript library c3.js to version 0.6.8\n-feature: Update JavaScript library Chart.js to 2.7.3\n-feature: Update JavaScript library d3.js to version 5.7.0\n-feature: Update JavaScript library jquery.js to 3.3.1\n-feature: Update JavaScript library jquery-migrate.js to 3.0.1\n-feature: Update JavaScript library jquery.tablesorter.js to version 2.30.7\n-feature: Update JavaScript library jstree.js to 3.3.7\n-feature: Update JavaScript library screenfull.js to 3.3.3\n-feature: Update phpmailer to version 6.0.6\n-feature: Update phpseclib to version 2.0.13\n-feature#289: Allow external nologin access for Realtime Graphs\n-feature#553: When display a host, include Aggregated Graphs as well as standard graphs\n-feature#614: Allow users to duplicate Data Input Methods\n-feature#973: When creating a new user authenticated via LDAP, attempt to retrieve users email and full name\n-feature#122: Support a Site Branch Type\n-feature#1060: Design Enhancement for Large scale Cacti Implementations\n-feature#1142: Add Site dropdown to the Graphs and Data Source pages\n-feature#1184: Improve Data Input Methods editability and message handling\n-feature#1200: Aggregate Graphs can now include COMMENT\n-feature#1282: Email notification for Automation Network discovery process\n-feature#1347: Update automation logging to work better\n-feature#1395: Ensure messages have each new line keep the same prefix in cacti_log()\n-feature#1399: Allow 'requires' to include version against a plugin\n-feature#1400: User settings are now dynamic and can be reset (removed) to return to global settings\n-feature#1422: Automatically select the next unused data input field when clicking add on data input method\n-feature#1505: When displaying a graph, provide breadcrumb link to edit device\n-feature#1527: Update Fontawesome from 4.7 to 5.0.10\n-feature#1580: Support Drag & Drop for Builtin Report Items\n-feature#1581: Allow Mass Adding of Graphs to Reports\n-feature#1584: Allow theme selection when installing\n-feature#1588: Check that PHP can run a test file\n-feature#1593: Allow External links to auto refresh\n-feature#1597: Ensure synchronised files have same attributes as originals\n-feature#1610: On Unix, redirect error messages to log files when running external scripts\n-feature#1628: Allow the User to define an initial Automation Network for discovery when installing\n-feature#1670: Improve Graph Management to show type of source for a graph\n-feature#1671: When duplicating a Graph Template, properly duplicate Data Query Graph Template Mappings\n-feature#1677: Default Tree nodes sorting to be inherited\n-feature#1691: On Graph context menu, add a 'Copy graph' option to copy graph image\n-feature#1692: Separate option for logging Input Validation issues\n-feature#1703: On Graph context menu, text is now multi-lingual\n-feature#1708: Allow the User to override global Automation email recipients at the Automation Network level\n-feature#1709: Suppress warning from RRDTool when attempting to make updates in the past\n-feature#1711: Add support for SSL connections to MySQL\n-feature#1731: Prevent loss of changes by warning user about unsaved items\n-feature#1734: When displaying a graph, provide more information when error image is displayed (see also #1428)\n-feature#1763: Enable automatic refresh for Time Graph View\n-feature#1806: Control low level debug routines via config.php (Develoepr Use)\n-feature#1819: Provide CLI program to enable graphs to be removed by scripts\n-feature#1969: Graph previews can now be linked using a host's external id\n-feature#2006: Introduce new Data Source Profile to handle decade long graphs\n-feature#2173: Introduce Device and Graph Template Caching to Speed UI\n-feature#2228: Add Device ID to Device search field\n-issue: Fix issue with display_custom_error_message() causing problem with system error message handling\n-issue: Graph List View was not fully responsive\n-issue: Move Graph removal function to Graph API\n-issue: On the Data Sources page, if there is no filtered Device and a Data Source is edited, device association is lost\n-issue: Typo in Dutch translations when an error occurred while downgrading\n-issue: Unable to display user profile tabs\n-issue: Verify all Fields not working due to Cacti 1.x upgrade error\n-issue#186: Cacti does not support jQueryUI 1.12.x\n-issue#187: Remove the use of jQuery Migrate plugin\n-issue#948: Do not create a new datasource when adding a new Graph for the same device/field\n-issue#454: Cacti Re-Index does not resolve index changes properly during re-index\n-issue#983: Import Template Preview is misleading\n-issue#1097: Template user should be disable to prevent logging in directly. And newly created user should always be enabled to allow logging in when copying template user.\n-issue#1174: When display a tree, disable drag and drop unless in edit mode\n-issue#1298: Display fatal error to prevent issues caused when system log is not writable\n-issue#1350: When switching an Automation Tree Rule's leaf type, remove invalid Automation Rule Items\n-issue#1383: CSRF Timeout does not obey session timeout\n-issue#1408: Update SQL / Backtrace to use new clean_up_lines() function\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1420: Fix issues found by Debian package builds\n-issue#1421: Fix issue when SQL had all bad modes, missing variable warning was generated\n-issue#1426: Fix issue where remote poller was not using unique filenames when attempting to verify files\n-issue#1437: Plugin install hover message sometimes shows line breaks rather than formatted text\n-issue#1454: When using oid_regexp_parse, filter indexes to those that match\n-issue#1473: Recovery Date overwritten by subsequent checks\n-issue#1494: Unable to Deep Link/Bookmark Trees\n-issue#1503: Undefined function clearstatscache in DSSTATS\n-issue#1507: When saving graph settings from the graph page, the graph template id should not be included\n-issue#1510: New Graphs Undefined Variable $graph_template_name\n-issue#1521: Force boost to be enabled when there are Remote Data Collectors\n-issue#1528: Saving a device can result in WARNINGS related to string vs array handling\n-issue#1529: Allow Aggregate Graphs to Sum Bandwidth and Percentile COMMENTS\n-issue#1543: Graph Preview appends header=false too many times\n-issue#1553: Poller does not set rrd_step_counter correctly if no steps taken\n-issue#1559: CLI Output Issues due to over escaping\n-issue#1560: Warning that escapeshellarg() is escaping a null\n-issue#1567: Technical support - add notification if Cacti and Spine version is different\n-issue#1574: User templates are not correctly being applied\n-issue#1589: Installer now checks that the temporary folder is writable\n-issue#1590: User Admin generates SQL error if user is not part of any groups\n-issue#1601: Aggregate Graphs can not include some classes of COMMENT\n-issue#1602: PHP ERROR: Call to undefined function api_data_source_cache_crc_update()\n-issue#1604: Failed to connect to remote collector\n-issue#1606: Boost debug log not functional\n-issue#1607: Boost next run time occurs in the past\n-issue#1608: Possible boost race conditions\n-issue#1609: Remote pollers update 'stats_poller' on main poller\n-issue#1617: Editing a data query results in missing $header variable\n-issue#1621: Realtime Popup can cause automatic logout\n-issue#1626: httpd-error.log have message about Fontconfig\n-issue#1634: Default snmp quick print setting resulting in false poller ASSERTS on some php releases\n-issue#1651: Check temporary folder has write access during import\n-issue#1655: Correct Cacti to handle new MySQL 8.0 reserved word `system`\n-issue#1658: Devices drop down should be filtered by Site\n-issue#1660: Reports based upon Tree don't maintain graph order\n-issue#1665: Must change password not working for local users when main realm is not local\n-issue#1669: Console log header grammar issue\n-issue#1674: Threads and Processes values not migrated to Poller table during upgrade\n-issue#1676: Allow automation discovery to add the same sysname on different hosts\n-issue#1682: Slow Select Statement lib/api_automation.php\n-issue#1689: Technical Support's RRDTool version should show detected RRD version\n-issue#1690: Report a warning if the default collation is not utf8mb4_unicode_ci\n-issue#1700: Mail sent without auth causes errors to appear in logs\n-issue#1710: RRDtool create command causes first update to fail\n-issue#1721: Console Side Bar not correct on first login\n-issue#1723: die() messages should include PHP_EOF for better logging\n-issue#1726: Poor page performance editing a Graphs Graph Items\n-issue#1746: Poller with no hosts does not exit until timeout is reached\n-issue#1761: Graph Management page shows bogus template names\n-issue#1783: Browser Back button still does not working\n-issue#1796: Import: Fixed handling of references to objects not included in file\n-issue#1799: Default User log sort should be date descending\n-issue#1810: Correct SQL errors with authentication set to no authentication\n-issue#1839: Dummy cosmetic bug on down device selection option\n-issue#1841: Data Source Stats table not properly migrated from pre 1.x Cacti plugin\n-issue#1849: SNMPAgent not sending traps\n-issue#1852: Reports Preview/Mails show no graphs\n-issue#1889: Insecure $ENV{ENV} which running setgid\n-issue#1901: Upgrade from 0.8.8h fails on external_links statement\n-issue#1921: Data Query XML field method 'rewrite_index' does not correctly query for value\n-issue#1926: Deselecting items should present warning or disable GO button\n-issue#1948: Device Template should warn about need to re-sync\n-issue#1953: set_default_action() should warn if more than one action provided\n-issue#1973: SpikeKill Menu does not display properly\n-issue#1976: Default admin permissions do not allow everything\n-issue#1982: Certain hooks should occur within api functions rather than UI functions\n-issue#2002: api_plugin_db_table_create should support non-string defaults\n-issue#2012: For kernel 3.2+, \"Linux - Memory - Free\" should grep for \"MemAvailable:\", not \"MemFree:\"\n-issue#2085: CLOG Regex Parser does not verify registered function exists\n-issue#2126: api_device.php generates undefined function poller_push_to_remote_db_connect()\n-issue#2127: Unable to save error when duplicating graph\n-issue#2135: api_tree_lock() and api_tree_unlock() forcing redirection incorrectly\n-issue#2143: export.php Illegal string offset 'method'\n-issue#2144: Device Management \"Status\" column does not sort properly\n-issue#2152: When editing a device, should show disable/enable option\n-issue#2153: Utilities page issues the wrong hook for tabs\n-issue#2163: LDAP functions are not consistent\n-issue#2164: Login page does not remember selected realm\n-issue#2171: datepicker and timepick translation not available\n-issue#2178: Header/Footer included more than once\n-issue#2182: Graph View missing 'html_graph_template_multiselect()' function\n-issue#2184: html_host_filter() does not handle host_id consequently\n-issue#2186: Boost generates invalid SQL during on demand update\n-issue#2188: SNMP timeout errors are being duplicated\n-issue#2191: i18n_themes is not properly primed in global_arrays.php\n-issue#2202: Can't create more than one graph with add_graphs.php from one template\n-issue#2207: Removing Graph Template does not Remove Data Query Associations\n-issue#2217: cmd.php not handling quoted snmp values properly\n-issue#2240: SNMP system Data Input Methods should not be modified on import\n-issue#2241: Spike removal not functional due to Debian packaging\n-security#1072: Prevent exploitation of Data Input Methods to escalate privileges (CVE-2009-4112)\n-security#1882: Bypass output validation in select cases\n-security#2212: Stored XSS in \"Website Hostname\" field\n-security#2213: Stored XSS in \"Website Hostname\" field - Devices\n-security#2214: Stored XSS in \"Vertical Label\" field - Graph\n-security#2215: Stored XSS in \"Name\" field - Color\n\n1.1.38\n-issue#1501: cmd.php poller not stripping alpha from snmp get values\n-issue#1515: Special characters not rendered properly in settings\n-issue#1530: Inconsistent behaviour handling blank Field Name/Value when editing data query suggested values\n-issue#1537: Numeric validation not ignoring blank elements\n\n1.1.37\n-issue#274: Allow Realtime Graph Popup Mode\n-issue#1405: When Data Query columns are wide, they cause rendering issues\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1419: Filtering log results in errors in the log\n-issue#1420: PHP NOTICE editing cdef and vdef items\n-issue#1421: CLI upgrade_database.php PHP Warning on execution\n-issue#1426: Remote poller erroring attempting to verify files\n-issue#1432: Delete confirmation does not disappear\n-issue#1443: Partial Save warnings under Settings -> Mail/Reporting/DNS\n-issue#1447: CLI audit_database.php not detecting database name, and failed to create audit tables when run fresh\n-issue#1453: CLI add_graph.php not allowing title to be set\n-issue#1456: Increase minimum php version maintaining support for RHEL6\n-issue#1457: Path-Based Cross-Site Scripting (XSS) issues\n-issue#1458: Error in logs when creating new graphs\n-issue#1459: Automation filter not applied correctly\n-issue#1461: Setting output_format on input type causes no values to be returned\n-issue#1464: Poller stuck in infinitely loop causing excess logging\n-issue#1466: No scrollbars in mobile browsers\n-issue#1468: Increase max length of host.snmp_sysObjectID column\n-issue#1471: Undefined function found in global_languages.php\n-issue#1472: Change Device Options - Style needs updating\n-issue#1474: Check possibility for creation of temporary tables on install\n-issue#1487: Undefined constant in ldap.php\n-issue#1483: Create New Graphs - Paw Styling Issue\n-issue#1493: Can't create tree branches with '#' sign\n-feature#1489: Add ability to use parts of OID as value via regex\n-feature: Updated Chinese Simplified translations\n-feature: Updated Dutch translations\n-feature: JavaScript library Chart.js updated 2.7.2\n-feature: Allow snmp formatting functions to detect UTF-8 output\n\n1.1.36\n-issue#934: Template names missing in graph management list\n-issue#1211: CDEF and VDEF Item Edit do not use correct procedures\n-issue#1250: Language support does not support localization properly\n-issue#1331: Log Rotation should occur at midnight on system\n-issue#1334: Console->Users->(Edit) Permissions checkmark descriptions missing\n-issue#1336: Debian test suite reports php error\n-issue#1338: Allow automation to be run in debug mode from GUI\n-issue#1339: First graph of second page does not render\n-issue#1340: Unable to open Time Graph View in new tab\n-issue#1348: Toggle context menu of Zoom\n-issue#1351: Errorimage does not render on systems without GD ttf support\n-issue#1353: New installation without config.php silently throws errors\n-issue#1355: Single tree can have the order of the tree changed\n-issue#1357: Data Profile disable fields shown temporarily as editable\n-issue#1359: Settings page generates error for removed plugin tab\n-issue#1362: DSStats Avg/Peak function broken due to change in RRDtool processing\n-issue#1365: Plugin Management enforce folder name\n-issue#1366: Improve error/info message display\n-issue#1380: Potential failure when updating script type\n-issue#1384: When installing/enabling plugins, current user and admin should get permissions\n-issue#1386: form_selectable_cell() ignores width if no style_or_class is passed\n-issue#1389: Poller is including plugins that are not installed\n-issue#1390: Plugin uninstall should prompt user before removal\n-issue#1396: Prevent installation/uninstallation of a plugin if dependency is present\n-issue#1397: Distinguish between plugin tabs and core tabs in settings\n-issue#1371: Allow dynamic setting of from name when emailing\n-issue: Data Query Cache filter layout more consistent\n-issue: Minor plugin permissions format change\n-issue: Implementation of error handling causes errors creating New Graphs\n-issue: Deprecated DDStats setting removed\n-issue: Graph context menu items are now context aware\n-issue: Validate spine path before allowing enabling of spine\n-issue: Errored settings fields now highlighted correctly on error\n-issue: Add the Default Device to the Default Tree at install time\n-issue: Secpass password verification error message unuseful\n-feature: Searching of SNMP Index in View Data Query Cache now works\n-feature: Presets now have default device Template\n-feature: JavaScript library c3.js updated (v0.4.21) / jstree.js (3.3.5)\n-feature: PHPSecLib updated 2.0.10\n-feature: Updated Dutch translations\n\n1.1.35\n-issue#114: *all_max_peak* percentile calculations incorrect\n-issue#430: Pressing Back often fails to work as expected\n-issue#564: Fail to move items in graph template as desired\n-issue#981: Hyperlinks for Data Profile stats\n-issue#993: Realtime not working on remote pollers for certain data query\n-issue#1244: Errors importing templates with deprecated hashes\n-issue#1251: Allow zoom out through mouse mmiddle button\n-issue#1281: Max OIDs setting is for bulkget and not bulkwalk operations\n-issue#1286: Correct CHUNKED_ENCODING error when retrieving graph with some browsers\n-issue#1306: Graphs are not always refreshed properly\n-issue#1309: Provide meaningful authentication errors in graph_json.php and graph_image.php\n-issue#1310: Return button fails on change password page\n-issue#1315: Realtime not working on local data collector\n-issue#1316: CDEF Item Value dialog does not update creating items\n-issue#1319: Front end + remote poller - connection timeout issue\n-issue#1321: Use RRDtool pipelining functions within DSSTATS\n-issue#1323: Enhance form layout for readability\n-issue#1329: Spelling errors in automation_networks.php\n-issue: Validate regular expressions if specified in add_graphs.php\n-issue: Ensure compression levels are consistent when importing package\n\n1.1.34\n-issue#1040: PHP version 7.2 - ERROR PHP WARNING: sizeof()\n-issue#1195: Improved Javascript error message handling\n-issue#1245: Unable to reorder graph name suggested values\n-issue#1256: Error reporting of custom errors not displayed correctly\n-issue#1257: Boost excessively logging updates\n-issue#1258: cacti.sql updated to match expected schema\n-issue#1260: Tab images fail to render due to TrueType support in PHP GD Module\n-issue#1261: Automatic logout timeout does not apply to web basic authenication\n-issue#1263: CLI utility to validate database schema\n-issue#1266: Inconsistent usage graphWrapper CSS causes odd graph zoom behavior\n-issue#1268: Regex filters not working properly\n-issue#1274: Host CPU script checks value existance to avoid error\n-issue#1275: SNMP v3 authPriv fails to work\n-issue#1287: JSON calls return validation error in HTML format\n-issue#1289: Script Server should output parameter array rather than parameters\n-issue#1292: Chrome to aggressively caches Javascript files\n-issue#1293: Correctly identify if command 'snmpbulkwalk' is available\n-issue#1296: CactiErrorHandler does not ignore PHP suppressed errors\n-issue#1300: Automation discovery : New devices added by automation discovery have empty SNMP community field\n-issue#1302: Automatic logout should not be enforced on login page\n-issue#1304: mib_cache.php file contains unsafe transactions for binary logging\n-feature: CLI utilily to generate and verify file hashes for installed Cacti files\n-feature: Logging links back to appropriate areas for troubleshooting\n-feature: Logging lists filenames in reverse order\n\n1.1.33\n-issue#1253: Automatically generated RRDtool DEF names in Cacti 1.1.32 break existing Graph Templates\n\n1.1.32\n-issue#969: Undefined index: color_id / task_item when viewing graphs\n-issue#1166: Fix typo of 'locale' in global_languages.php\n-issue#1222: Graphs with large number of items causes RRDTool to error\n-issue#1230: PHP Fatal error: Call to undefined function get_max_tree_sequence()\n-issue#1238: SNMP functions fail to handle \"Invalid object identifier\" error\n-issue#1239: Browser console error in layout.js\n-issue#1240: Page layout issues caused by library update\n-issue#1246: Make SNMP Error return more info\n-issue: Missing or corrupted theme files can corrupt user settings\n-issue: Theme may not change until next login\n-issue: Tree edit Tree/Device/Graph drag areas incorrect\n-issue: Make callback error handling compatible with jQuery 3.x\n-issue: Ensure the snmp_error is cleared before every call\n-issue: Indicate unknown error when RRDTool returns no error message\n-feature: Update Javascript library: js.storage.js, d3.js, jquery.js, jquery.tablednd.js, jquery.timepicker.js\n\n1.1.31\n-issue#629: Site reload after delete the last letter in the searchbar\n-issue#1022: Discovery network stuck in \"running\" state does not return results\n-issue#1164: Version compare function fails on major/minor only versions\n-issue#1166: Invalid New User default language selection\n-issue#1175: Automatic logout inconsistent redirect\n-issue#1179: Warn during installation if installing moving to older version\n-issue#1183: Automatically detect missing Theme and use alternate\n-issue#1185: Layout with Graphs having large number of data columns\n-issue#1189: Allow ability to sort tree list by name asc/desc\n-issue#1190: Enabling, Disabling, Uninstalling plugin, you should page refresh\n-issue#1191: Tree sequences were not set or checked\n-issue#1197: Add more collection intervals to Data Source Profiles\n-issue#1206: Display issue with internationalization number format\n-issue#1210: CDEF and VDEF Items can not be properly edited\n-issue#1212: Navigation breadcrumbs fail to handle External links correctly\n-issue#1213: PHPMailer trying TLS despite SMTPSecure setting\n-issue#1215: Show version when installation prompts for license\n-issue#1217: Add ability to view/edit Input/Query when editing Data Template\n-issue: Named colors fail to import on install or upgrade\n-issue: Drag and Drop issues on multiple pages could corrupt sequencing\n-feature: Enhance filter to permit more glyphs for table headers\n-feature: Add a page refresh dropdown to the Automation Networks\n-feature: Enhanced SNMP v3 input forms\n-feature: Allow Trees to be rearranged using Drag and Drop\n-feature: Trap GUI callback errors and present error message\n\n1.1.30\n-issue#1155: Non-secure mail setting not functional due to changes in phpmailer\n-issue#1157: Resolve issue with branch permission api\n-issue#1158: Change CLOG to use regex replacement so line details are not mangled\n-issue#1161: Graph View regex's are not preserved during automatic page refresh\n-issue#1162: Error messages are not display when editing a user\n-issue#1166: Default language was not correctly set when editing a user\n-issue: basename function undefined during upgrade to 1.0.x\n-issue: Storage API and translations required for Change password function\n-issue: ALTER IGNORE still throws an error when attempting to drop the primary key\n-issue: Data Source profile form API generates error when system is half upgraded\n-issue: Resolve issue with importing packages\n-feature: Update package versions for Cacti version 1.1.29\n\n1.1.29\n-issue#871: Allow Nth Percentile and Bandwidth Summation to respect 'Base Value' in template\n-issue#965: Duplicate error message and incorrect error code when using LDAP authentication\n-issue#1084: Graph Tree Branch not properly populating when editing report item\n-issue#1104: Datetime formatting in developer debug mode incorrect\n-issue#1106: Template Filters has empty row\n-issue#1109: URL used in redirection when referrer already has parameters in it\n-issue#1110: Add CPU Total to 'SNMP - Get Processor Information'\n-issue#1111: PHP NOTICE when using LDAP authenication\n-issue#1116: Filters not allowing \"None\" or \"All\" when editing report item\n-issue#1119: Reduced amount of data fetched for CPU usage to just the data used\n-issue#1121: Bandwidth summation not using correct locale\n-issue#1122: Fix issue with local login / potential password problems\n-issue#1128: Resolve php warning when raising messages\n-issue#1130: Fix logging level issue where logs of same level as setting where not logged\n-issue#1131: Make upgrade_database.php use same version compare as /install/ system\n-issue#1133: Fix issues with variable name and debug log\n-issue#1141: When viewing graphs from list view, pagination causes list view filter to be cleared\n-issue#1143: ss_host_cpu.php - Division by zero / Invalid Return Value\n-issue#1146: Installation now checks URI path matchs with configuration option URL_PATH\n-issue: Updated Graph pagenation and filter reset\n-issue: Resolve issues with cacti_version_compare() processing\n-issue: Zoom context menu stays open after zoom out actions\n-issue: Paginator object was not always translated\n\n1.1.28\n-issue#958: User Group Tree permissions not calculated fully\n-issue#959: Issue viewing email reports due to email client decoding problems\n-issue#992: RRDfile naming issues that result from random sorting during export\n-issue#1012: Issue where disabled devices will not appear in Tree editor\n-issue#1044: Handle invalid exclusion regex properly when viewing the log\n-issue#1045: Issue with multiple pages and confirmation dialogs\n-issue#1048: Problem importing vdefs from templates\n-issue#1053: Remote Data Collector now works with https and self signed certificates\n-issue#1055: Errors in data source statistics inserts when invalid output is encountered\n-issue#1057: CVE-2017-16641 - Potential vulnerability in RRDtool functions\n-issue#1058: ICMP Ping to and IPv6 address fails to gather data for ping latency\n-issue#1059: Aggregate item filter should use regular expressions to avoid SQL errors due to flawed filter logic\n-issue#1064: When a Device Template is removed, Automation Templates for that Device Template remain\n-issue#1066: CVE-2017-16660 in remote_agent.php logging function\n-issue#1066: CVE-2017-16661 in view log file\n-issue#1071: CVE-2017-16785 in global_session.php Reflection XSS\n-issue#1074: Boost records get stuck in archive\n-issue#1079: Undefined index in lib/snmpagent.php\n-issue#1085: Undefined function html_log_input_error\n-issue#1086: Rerun data queries in automation process has no effect\n-issue#1087: cli/add_device.php --proxy option does not work with non-snmp devices\n-issue#1088: Set timeout for remote data collector context\n-issue: Minor performance increase in boost processing\n-issue: Poller output not empty not processed correctly on Log tab\n-feature: Timeout to the remote agent for realtime graphs\n-feature: Updated Dutch translations\n-feature: Database update adding additional indexes for increased performance\n-feature: Updated PHPMailer to version 5.2.26\n-feature: Updated phpseclib to version 2.0.7\n\n1.1.27\n-issue#1033: Issues inserting into dsstats table due to legacy data\n-issue#1039: Using html_escape still double escapes.  Use strip_tags instead\n-issue#1040: Resolving compatibility issue with PHP7.2\n\n1.1.26\n-issue#841: --input-fields variable not working with add_graphs.php cli\n-issue#986: Resolve minor appearance problem on Modern theme\n-issue#989: Resolve issue with data input method commands loosing spaces on import\n-issue#1000: add_graphs.php not recognizing input fields\n-issue#1003: Reversing resolution to Issue#995 due to adverse impact to polling times\n-issue#1008: Remove developer debug warning about thumbnail validation\n-issue#1009: Resolving minor issue with cmd_realtime.php and a changing hostname\n-issue#1010: CVE-2017-15194 - Path-Based Cross-Site Scripting (XSS)\n-issue#1027: Confirm that the PHP date.timezone setting is properly set during install\n-issue: Fixed database session handling for PHP 7.1\n-issue: Fixed some missing i18n\n-issue: Fixed typo's\n-feature: Updated Dutch translations\n-feature: Schema changes; Examined queries without key usage and added/changed some keys\n-feature: Some small improvements\n\n1.1.25\n-issue#966: Email still using SMTP security even though set to none\n-issue#995: Redirecting exec_background() to dev null breaks some functions\n-issue#998: Allow removal of external data template and prevent their creation\n-issue: Remove spikes uses wrong variance value from WebGUI\n-issue: Changing filters on log page does not reset to first page\n-issue: Allow manual creation of external data sources once again\n-feature: Updated Dutch translations\n\n1.1.24\n-issue#932: Zoom positioning breaks when you scroll the graph page\n-issue#970: Remote Data Collector Cache Synchronization missing plugin sub-directories\n-issue#980: Resolve issue where a new tree branches refreshs before you have a chance to name it\n-issue#982: Data Source Profile size information not showing properly\n-issue: Long sysDescriptions on automation page cause columns to be hidden\n-issue: Resolve visual issues in Classic theme\n-feature: Allow Resynchronization of Poller Resource Cache\n-feature: Update Spanish Translation\n\n1.1.23\n-issue#963: SQL Errors with snmpagent and MariaDB 10.2\n-issue#964: SQL Mode optimization failing in 1.1.22\n\n1.1.22\n-issue#950: Automation - New graph rule looses name on change\n-issue#952: CSV Export not rendering chinese characters correctly (Second attempt)\n-issue#955: Validation error trying to view graph debug syntax\n-issue: MySQL/MariaDB database sql_mode NO_AUTO_VALUE_ON_ZERO corrupts Cacti database\n-issue: When creating a data source, the data source profile does not default to the system default\n-feature: Enhance table filters to support new Cycle plugin\n-feature: Updated Dutch Translations\n\n1.1.21\n-issue#938: Problems upgrading to 1.1.20 with one table alter statement\n-issue#952: CSV Export not rendering chinese characters correctly\n-issue: Minor alignment issue on tables\n\n1.1.20\n-issue#920: Issue with scrollbars after update to 1.1.19 related to #902\n-issue#921: Tree Mode no longer expands to accomodate full tree item names\n-issue#922: When using LDAP domains some setings are not passed correctly to the Cacti LDAP library\n-issue#923: Warninga in cacti.log are displayed incorrectly\n-issue#926: Update Utilities page to provide more information on rebuilding poller cache\n-issue#927: Minor schema change to support XtraDB Cluster\n-issue#929: Overlapping frames on certain themes\n-issue#931: Aggregate graphs missing from list view\n-issue#933: Aggregate graphs page counter off\n-issue#935: Support utf8 printable in data query inserts\n-issue#936: TimeZone query failure undefined function\n-issue: Taking actions on users does not use callbacks\n-issue: Undefined constant in lib/snmp.php on RHEL7\n-issue: Human readable socket errno's not defined\n-issue: Audit of ping methods tcp, udp, and icmp ping. IPv6 will still not work till php 5.5.4\n\n1.1.19\n-issue#810: Scripts in packages don't match distribution\n-issue#919: Unable to upgrade to 1.1.18\n-issue: Update documentation for minimum PHP 5.4\n\n1.1.18\n-issue#902: Correcting some issues with Console and External Links\n-issue#903: Upgrade pace.js to v0.7.8\n-issue#904: Allow user to hide Graphs from disabled Devices\n-issue#906: Create a separate Realm for Realtime Graphs\n-issue#907: XSS issue in spikekill.php\n-issue#910: Boost last run duration generates an error on new install\n-issue#914: Unable to purge Cacti logfile from System Utilities\n-issue#915: Non-numeric data in ss_host_disk.php\n-issue#916: Resolve display of errors when encountering ldap issues\n-issue#918: Minor XSS and create generalized escape function\n-issue: Resolve JavaScript errors on Login page\n-issue: Resolve JavaScript errors on Permission Denied pages\n-issue: Graphs tab would appear in non-classic even if you did not have permissions\n-feature: Updated dutch translations\n\n1.1.17\n-issue#450: List View to Preview shows no results\n-issue#486: Export Device table results to CSV\n-issue#544: Allow Log Rotation to be other than Daily\n-issue#673: Downtime/Recovery time/date is set incorrectly\n-issue#819: Customized timespans for graphs\n-issue#888: Rebuilding Poller Cache when External data sources are present results in false positive warnings in the log\n-issue#891: Database.php unable to connect to MySQL when using port different than 3306\n-issue#893: Warning messages when duplicating CDEF objects\n-issue#897: Due to browser use of special key, deprecate ctrl-shift-x for clearing filter\n-issue#898: Issue with tcp and udp ping due to file description allocation changes\n-issue: Unable use ipv6 ip addresses for snmp ping in the Cacti GUI\n-issue: Update language of the Rebuild Poller Cache menu pick\n-issue: Broken design for input controls with Sunrise theme\n-issue: Timespan switching not switching to Custom in Preview Mode\n-issue: Log rotation would not occur under certain conditions.  Provide more control over log functions\n-issue: Purge log file always purged the cacti.log, not the selected log\n-issue: Unable to view graphs for errored data sources from Cacti log\n\n1.1.16\n-issue#865: Escape Data Query arguments to prevent issues with special characters\n-issue#872: Can't add device items to graphs generated with no device and no template\n-issue#875: When modifying Realm permissions, realms that are listed multiple times don't stay in sync\n-issue#877: Improving resolution to issue#847 and one additional vulnerability\n-issue#878: Ambiguous language in purge log function\n-issue#879: SQL Error when adding a report item to a report\n-issue#880: Device drop down is limited to 20 devices and lacks a scroll bar\n-issue#885: Graph generated with no device and no graph template forgets device definitions\n-issue#886: Unable to export templates other than Device templates\n-issue: Address additional corner cases around get_order_string usage\n-issue: Data Queries sharing a Data Source can result in poller output table not empty errors\n-issue: Fix Sunrise theme to properly theme multiselect widgets\n-issue: Increase height of multiselects so that more options are visible\n-issue: When a graph is locked, anchor tags are still functional\n-issue: Autocomplete does not populate none-value when the selected value is not set\n\n1.1.15\n-issue: PHP Fatal Exception on upgrade from 1.1.11 or earlier\n-feature: Added test to detect install upgrade code problems\n\n1.1.14\n-issue#849: Unable to select host in Graph Item pick\n-issue#850: Reporting not allowing Non-templated Graphs\n-issue#858: Pagination on SNMP Options wrong\n-issue#860: Network Discovery Subnet Range character limit too small\n-issue#861: The search filter does not support Cyrillic\n-issue#862: Automation - When editing Graph Rules, unable to Change Data Query\n-issue#863: Typo error in auth_login.php for LDAP authentication\n-issue#867: Cross-site scripting (XSS) vulnerability in auth_profile.php\n-issue: Link's not showing in Automation Graph and Tree rules on Sunshine theme\n-issue: Make Templates Export responsive\n-issue: Don't wrap menu glyphs and menuitems\n-issue: The function get_order_string() can fail when encountering reserved word columns\n-issue: Data Query Delete is not using callback\n-feature: Resize Graphs on Graph page to be responsive\n-feature: Make import text a hidden field as it is likely seldom used\n\n1.1.13\n-issue#605: Remove Spikes feature not fully functional\n-issue#814: Allow 'Save' feature from New Graphs\n-issue#837: Using the add_device.php CLI script, you can not 'default' the device threads to other than 1\n-issue#838: CVE-2017-10970: XSS Issue in link.php\n-issue#839: The Database column name 'rows' is a reserved word in MariaDB 10.2+\n-issue#845: External links tabs should appear at the end of the tab view\n-issue#846: Web crawl of Cacti site shows errors in the log\n-issue#847: CVE-2017-10970: XSS Issue in lib/html_form.php.\n-issue#853: Go and Clear buttons do not work in all cases on Graph Rules pages\n-issue: Up/Down arrow titles labeled incorrectly on Tree Management page\n-issue: Make the default Export Type a Device Template\n-issue: Fix SNMPagent MIB cache issues\n-issue: Realtime cache cleanup now only removes rrd and png\n-issue: When redirected from reports, you can receive a validation error\n-feature: updated Dutch language\n\n1.1.12\n-issue#822: Aggregate Graph Items are incorrectly editable\n-issue#823: Allow Filters to be hidden\n-issue#834: Add spacing on graphs pages\n-issue: Uninstalled plugins can not install\n-issue: Location of filter functions in host.php prevent full responsive filter implementation\n-feature: Implement first phase of responsive search filters\n\n1.1.11\n-issue#642: RRA not written or WARNING: Poller Output Table not Empty\n-issue#779: PHP running out of memory due to date format issues\n-issue#791: SeLinux causing problems due to recent enhancement of the Cacti log\n-issue#818: Unable to unselect all SpikeKill templates under settings\n-issue#831: Unable to add devices from automation devices that don't have a snmpSysname\n-issue: incorrect version of pace: fix progess bar\n-issue: date_format(): fix date separator character\n-issue: host.php: fix itemCount en rowCount when result = null\n-issue: clog: fix scandir for systems with limited permissions to log directory\n-issue: clog: fix listing of logfiles\n-issue: Stop New Graphs filter interface from taking too much space\n-issue: Pagination of clog is not done via ajax\n-issue: Unable to dry run spikekill's from Graphs page\n-issue: Default sort order does not highlight on Aggregate Template page\n-issue: Correct display issue with Graph Templates when editing Device\n-issue: External Data Sources show as having poller interval on Data Source page\n-issue: Allow Selecting 'External' as the Data Source Profile when creating non-templated Data Source\n-issue: Remove Field Order on Data Input output data as it's not required\n-issue: Data Templates not using Ajax callbacks to switch Data Sources\n-issue: Visual issue when creating non-templated Aggregate Graphs\n-feature: new skin: Sunrise\n-feature: Provide Non Compatible explanation when a plugin is not compatible\n-feature: Updated Dutch translations\n-feature: Allow Graph Templates with multiple flag to be created repeatedly from Graphs New interface\n-feature: Allow plugins to exclude files and directories from their remote poller synchronization process\n-feature: Add Device Description to View Poller Cache UI\n\n1.1.10\n-issue#779: Resolve random Apache segfault due to recursion\n-issue#786: Unable to create second RRA for a Data Source Profile with collection rate less than 5 minutes\n-issue#789: Unable to Clear Filter due to JavaScript name space collision\n-issue#791: cacti 1.1.9 and clog_webapi.php permission issue\n-issue#794: SQL Error when creating graphs manually\n-issue#798: Cosmetic issue when checking checkboxes in Cacti\n-issue#800: Unchecked loop in lib/html_utility.php causing race condition\n-issue#802: Issue updating device hostname with SNMP data queries\n-issue#803: Issues with utf8mb4 introduced via optimization\n-issue: If the device is down and snmp_sysUpTimeInstance is 0, time in state can be wrong\n-feature: Updated Dutch translations\n\n1.1.9\n-issue#788: Fails on PHP Fatal error if LDAP auth enabled\n\n1.1.8\n-issue#529: Issue on Graph New page with checkbox unselected\n-issue#552: Minor selectable row checkbox issue\n-issue#577: Dragging multiple items causes the tree to refresh too early\n-issue#617: Correct poller timeouts when no devices are associated with active data collector\n-issue#706: Classic external link template images missing\n-issue#726: Undefined variable in upgrade script\n-issue#728: Resolve issues with jQueryUI empty dialogs\n-issue#731: Add class to radio button labels to correct display issue\n-issue#736: Sequence numbers not visible when editing templates using modern theme\n-issue#739: Graph Titles missing on aggregate graphs\n-issue#740: Spacer manipulation broken after update to responsive forms\n-issue#741: Errors in dsstats with very large RRDfiles with more than 60 data sources\n-issue#748: Search results are not cleared on Aggregates\n-issue#754: Default Language for user and system are not set on new installation\n-issue#755: RRDtool Graph Watermark is incorrect\n-issue#756: Resolving some translation issues\n-issue#763: Template Export not functional\n-issue#765: Validation error when viewing Utility View\n-issue#771: Editing a report renders no options after creation\n-issue#780: Preview always shows thumbnails in reports interface\n-issue: Hide Aggregate system cdefs when editing graphs and graph templates\n-issue: Updating Utility View zoom was not updating table data\n-feature#723: Convert Data Source dropdown to autocomplete when editing standalone graphs\n-feature#735: Allow color selection in graphs and templates to be autocomplete\n-feature#753: Preliminary support for RRDtool 1.7.\n-feature: Add function to obtain the current execution user\n-feature: Implement Site timezones as autocomplete for performance\n-feature: For themes other than classic, make color id selection autocomplete\n-feature: CLOG timestamp is now formatted as defined in settings\n-feature: CLOG can show loginformation from rotated logfiles\n\n1.1.7\n-issue#470: Enhance Cacti's SNMP function and Data Query XML, add <output_format>hex|string|guess</output_format>\n-issue#653: Devices with empty sysNames are not added to discovered devices\n-issue#655: Data source not displaying device name\n-issue#658: Scheduled Reports (type \"tree\") not working\n-issue#662: Sending test Email should optionally bypass ping\n-issue#667: In Classic theme initial view of Tree view broken\n-issue#669: Invalid SQL Messages when upgrading to Cacti 1.0.5\n-issue#670: Validation error when you do \"Change Graph Template\" in Cacti\n-issue#672: Cacti unable to enable snmp notification receiver mibs\n-issue#680: Sort order in Time Graph View\n-issue#687: Cacti DB access not compatible with PHP 7\n-issue#696: Multiple issues with snmpagent notification UI\n-issue#699: Add custom error handler for ping functions\n-issue#704: Fix GUI issues for Graphs not belonging to a device\n-issue#707: Back button not working\n-issue#708: Issues finding lib/snmp.php in host disk functions\n-issue#712: Change Graph Template dropdown invalid\n-issue#717: Allow ajax callbacks when adding non-templated graph items\n-issue: Reports were not using Cacti's permission system for checking access\n-issue: User Admin page reported wrong permissions at Tree level missing some i18n as well\n-issue: Short data_name can cause data collection issues\n-feature: Updated Dutch language\n-feature: Updating PHPMailer to 5.2.23\n-feature: Support input-output Data Query types\n-feature: Introduce new get_cacti_version() to reduce database calls on pages\n\n1.1.6\n-issue#620: The table poller_data_template_field_mappings can get out of sync when manipulating data templates\n-issue#622: Can not connect to MySQL over a socket\n-issue#628: Cacti upgrade process is complex and error pront for developers\n-issue#635: Error when saving change to data template\n-issue#637: When displaying tree graphs, use the same layout as preview mode\n-issue#646: When a plugin is disabled during page operations, warnings can appear\n-issue#651: Unable to view cacti log (because of allowed memory size exhausted)\n-issue#657: Error in log when host is down, using icmp and using cmd.php on FreeBSD\n-issue: List for creating a Graph type shows already added Graph Templates\n-issue: Fix and undefined variable on data source page when first creating a manual data source\n-issue: Remove tabindex and other non-required manual aria controls from pages\n-issue: Table type and column type in poller_output table wrong\n-issue: FILTER_VALIDATE_MAC not defined on PHP less than 5.5\n-issue: When changing your language Cacti would not do a full page refresh\n-feature#106: Paginated CLOG and log administration\n-feature: Dutch translations\n-feature: Responsive Graphs page\n-feature: Convert forms from table based to div based for responsive design\n-feature: Better support for phones and tablets\n-feature: Simplified installation code to facilitate easier release cycle\n-feature: Updating Tablesorter to v2.28.9, adding widgets and pager\n\n1.1.5\n-issue#580: Data collection warnings when using cmd.php\n-issue#592: Incorrectly formatted HTML\n-issue#606: Replace <path_php_binary> in data input methods\n-issue#607: Allow draw_menu to specify multiple actions for the same URL\n-issue#608: Spaces adjacent to double quotes are eliminated during data input method import\n-issue#609: Honor the column setting in graph tree view mode\n-issue#610: Change Graph Template action not available\n-issue#611: Cacti Installation Wizard - Spine page incorrect on Windows\n-issue#612: Uncaught Error: Call to a member function row() on a string\n-issue#613: Network Automation, now requires a site or your are unable to save rules\n-issue#615: Data Input field length too short for longer scripts\n-issue#619: Export logging option in settings no longer used\n\n1.1.4\n-issue#524: Reporting not working when Tree branch is device\n-issue#560: Add 'Duplicate' and 'Convert to Graph Template' back to Graph Management page for Advanced mode\n-issue#573: Missing Graph Template dropdown items\n-issue#575: Very large hex strings result in scientific notation that RRDtool rejects\n-issue#579: Problems logging in using nginx web server\n-issue#581: session_start() warnings when manually sending reports\n-issue#584: Issues reporting memory recommendation on utilities page\n-issue#586: Overrunning pollers can cause system load spikes\n-issue#587: Data Collector setting under Network Discovery is not being used\n-issue#588: Devices with blank sysDescr are added to the first Device Template in error\n-issue#589: Automation discovery does not allow site association\n-issue#590: Unable to create a plugin based menu\n-issue#591: Row selection in Device Automation Templates not sane with drag-n-drop enabled\n-issue#601: Resolving some translation issues\n-issue#604: Unexpected backtrace on regular expression filters\n-issue#605: Remove Spikes non-numeric data causes warnings\n-issue: Ping email does not use a from email address\n-issue: Automation does not recognize default size or poller\n-issue: Unable to drag-n-drop on automation templates pages when enabled\n-issue: Fixed number of hosts in poller stats for first poller\n-issue: Fixed screenwidth issue in tab PHP-Info of Utilities module\n-issue: Recovery poller could get stuck in some situations\n-issue: Fix JavaScript errors when managing Aggregate Graphs\n-feature: Reorganize defaults to place more on device defaults page\n-feature: Update jQuery tableDnD to version 0.9\n-feature: More tolerant of empty PHP_SELF found with some web servers\n\n1.1.3\n-issue#515: Unable to import color CSV file\n-issue#519: In non-classic themes its not possible to remove Cacti log or reporting tabs\n-issue#520: SQL error in graph automation\n-issue#521: Cacti allows removal of Data Query Graph Template associations when they are in use\n-issue#525: LAST GPRINT type not rendered correctly due to lack of escaping\n-issue#530: Undefined function get_vdef in lib/rrd.php\n-issue#531: Issues with TextAlign and Tick graph items\n-issue#532: Unreliable scroll height causes issues in Chrome\n-issue#533: User settings not cleared after saving profile\n-issue#534: Automation issue with AS clause\n-issue#538: Unable to rename tree folder\n-issue#541: Issues with mobile graph viewing\n-issue#555: DSStats SQL insert errors due to data collection issues\n-issue#563: Division by zero in removespikes.php\n-issue: Fixed rendering issues with HRULE's on graphs\n-issue: Update jsTree to 3.3.4 version\n-feature: Improved responsiveness UI tables, filters, and menus\n\n1.1.2\n-issue#492: Error while adding non data query (cg) graphs\n-issue#494: CLI error while importing template\n-issue#499: SQL error in graph automation resulting in no graphs on tree\n-issue#500: Generic SNMP device package damaged - Unix Ping Host\n-issue#505: Log rotation does not work in some cases\n-issue#506: Undefined index: cactiStatsDeviceFailedPolls\n-issue#507: Nextwork discovery 'export' produces no results\n-issue#509: Minor bug with device ownership selection\n-feature: Add new legend type that includes Current/Average/Minimum/Maximum\n-feature: Update d3.js to latest version 4.7.4\n\n1.1.1\n-issue#457: Continued LDAP issues with initial user creation\n-issue#461: The function escapeshell arg not appropriate on Windows\n-issue#462: LDAP authorization issues: group membership check broken for 'Group Member Type' = 'Username'\n-issue#464: Change default batch spike removal limits for standard deviation and variance\n-issue#465: Less than sign inside items and labels of graph break graph\n-issue#466: Call to member function row() on a non-object in lib/snmpagent.php\n-issue#467: Reduce the number of queries in log function\n-issue#472: Schema changes to improve performance\n-issue#485: When editing a device, the ping status was not always returned\n-issue: Back button issues due to syntax problems in JavaScript\n-issue: Zoom periodically would loose it's crosshairs after zooming\n-issue: Zoom would zoom out into the future even when disabled\n-issue: Fixing lite corruption in graph_templates_item table\n-feature: Make SpikeKill options more consistent\n-feature#459: Add variable date time option to report mail subject\n-feature#460: Add external_id to host variables\n-feature#469: Change re-index method of Data Query from Device edit\n-feature: Support generalized date format approach in the GUI\n-feature: Use localStorage over a Cookie for Zoom setting storage\n-feature: Fully implement 'Remove Orphans' from Package import process\n\n1.1.0\n-issue#337: Generic SNMP OID Graph Template damanged\n-issue#338: Extremely slow new graph/DS creation\n-issue#353: Broadcast & Multicast Packet counters missing\n-issue#376: Structured RRD path permission issues\n-issue#389: Manual template based graph creation not working\n-issue#407: The RRDfile does not exist message is misleading\n-issue#410: Select character data was interpreted as hex by cacti_snmp_walk()\n-issue#422: additional issues with LDAP authentication\n-issue#424: Automation does not discover devices w/o resolvable hostnames\n-issue#427: undefined index TotalVisibleMemorySize on FreeBSD\n-issue#432: SpikeKill menu wonky on Paw Theme\n-issue#434: password_verify not compatible in php5.4-\n-issue#435: urlPath missing from paw theme links\n-issue#436: Restricted user does not see graphs in tree view\n-issue#443: Allow remote_agent.php through a NAT\n-issue#446: No local admin when using multiple LDAP configuration\n-issue#447: Creating another non data query graph from same template reuses first data source\n-issue#449: exec_poll_php does not flush pipes when using script server\n-issue#450: Graph list view - No Graphs Found\n-issue: Improve email test exception errors and change default timeout to 10 seconds\n-issue: When on links page, breadcrumbs would become corrupted\n-issue: When upgrading from any version of Cacti to 1.0.5, SQL's relative to poller_reindex might appear\n-issue: Color page performance poor\n-issue: The Device dropdown on the Graph View page was unreliable\n-issue: Aggregate and non-Device Graphs in list view had not Device or Title description\n-issue: Re-engineer back button design to accomocate ajax and native navigation\n-issue: Make Graph Template filter wider\n-issue: Resolve some visual issues in Classic theme\n-feature: Add page refresh API to make page refreshing in Ajax easier to accomplish\n-feature: Update fontawesome to version 4.7\n-feature: Use fontawesome glyphs for menu items\n-feature: Support multiple column sort in table library\n-feature: Add glyphs to main Cacti console menu\n\n1.0.6\n-issue#386: Allow special characters in graph title\n-issue#414: Install Wizard check path for spine\n-issue#415: SNMP session handling broken\n-issue#418: LDAP create user from template not working\n\n1.0.5\n-issue#296: Poller warning for Non-SNMP device\n-issue#319: Add default 'High Collection Rate' data source profile to new installs to demonstrate concept of multiple rates\n-issue#330: Import templates to non-default Data Profile\n-issue#337: Error when try create new graph - SNMP - Generic OID\n-issue#342: Infinite loop in poller_automation.php with invalid schedule\n-issue#343: Device discovery cannot handle dots in device name\n-issue#344: Unable to upgrade to latest Cacti on FreeBSD\n-issue#353: Legacy broadcast & multicast packet counters missing in interface.xml\n-issue#354: Place on tree dashes / ordering is not correct\n-issue#355: Replace table rows with count when using InnoDB tables\n-issue#357: If recovery mode runs longer than a polling interval, a second is spawned\n-issue#358: Sending test e-mail results in warning\n-issue#360: Issue importing cacti.sql with some charsets\n-issue#364: Moving graph item causes page render issue\n-issue#365: ss_host_disk.php and ss_host_cpu.php should use return\n-issue#367: Upgrade chart.js to version 2.5\n-issue#368: Issue with device automation ip vs. ip_address\n-issue#369: Interface bits/second total Bandwidth wrong CDEF\n-issue#375: Drag and Drop of Devices and Graphs allows dropping onto self\n-issue#380: Ignores a non-standard SNMP port\n-issue#382: When using php5.5+ new users unable to change their password\n-issue#384: graph_view.php backtrace errors\n-issue#385: Unable to place an aggregate grapn on a subtree\n-issue#390: Display graphs from this aggregate icon next to graph not displaying\n-issue#392: cdef.php missing sql where for system cdef's\n-issue#398: checkbox is not honored when creating tree\n-issue#399: External link configuration: Order buttons don't work\n-issue#400: SNMP Engine ID (v3) field too short\n-issue#401: Graphs -> Apply Automation Rules fails\n-issue#404: Success even when test mail fails\n-issue#406: HRULE text format special characters not escaped\n-issue#408: Suppress SNMP units suffix from cacti_snmp_get() output\n-issue: Improve is_ipaddress functions\n-issue: Drag & drop showing when disabled on page automation_templates.php\n-issue: Output messages displayed incorrectly in automation_templates.php and automation_snmp.php\n-issue: Importing template from old Cacti would not show data templates\n-issue: Handle snmp error exceptions better\n-issue: Update Apache .htaccess files to support multiple version\n-issue: When executing a full sync, if the table structured has changed, recreate the remote table\n-issue: Multiple domains not working as expected\n-feature#197: Add external_id to Cacti for linking Cacti to other monitoring systems\n-feature#332: Support copy user groups\n-feature: Log proper IP address if logging in behind a NAT\n-feature: New qquery parsing rules: VALUE/TEST, VALUE/TABLE, VALUE/HEX2IP\n\n1.0.4\n-feature: Javascript: make menu movement smooth and use localStorage\n-feature: Added cacti_snmp_get_raw() for plugin developers\n-issue#288: Function cacti_snmp_get bad handling of wierd value into snmp_value\n-issue#298: Graph generation issue with SNMP - Bits/Sec + Total Bandwith\n-issue#301: Unresolvable DNS hostname causing backtraces\n-issue#302: spikekill memory leak\n-issue#303: Error when creating tree items with \"&\" in the name\n-issue#307: Aggregate graph gives CMDPHP errors\n-issue#308: UI resize issue\n-issue#309: Show \"Save Successful\" notification permanently\n-issue#311: Graph thumbnail settings in profile setting does not work\n-issue#320: Users can not change their own password\n-issue#324: Aggregate template graph template JavaScript error\n-issue#352: Add configurable auto-logout and page-reload options\n-issue#329: Customize the favicon\n-issue#334: primary key on poller output boost table not efficient/not being used correctly\n-issue: Fixed issues with Dark theme\n-issue: Fixed issues with Paw theme\n-issue: Fix timespan calculation\n-issue: Added misplaced join condition when generating RRDtool graphs\n-issue: Fix the selection of timestan based on local_graph_id and rra_id\n-issue: Correct error in discovery not adding devices\n-issue: Action message did not always display\n-issue: fix regex to use Domains like www.t-online.de\n-issue: Properly align Order columns.\n-issue: address renaming issues with tree items.\n-issue: Add device snmp --version is ambiguous\n-issue: SNMP Availability failed to report down devices - This only was occuring for cmd.php collector.\n-issue: i18n remove embedded HTML syntax\n-issue: Wrap menu items to avoid scrolling\n\n1.0.3\n-issue#297: Upgrade 0.8.8h to 1.0.0 fails to create poller_output_boost table\n-issue: Added missing template import hash for 1.0.2\n\n1.0.2\n-issue#279: Correct Boost Status display issue\n-issue#275: Permission View issue and Device Dropdown when in Classic Theme\n-issue#270: Major Mib Cache corruption.  Rebuild your MIB Cache after upgrading\n-issue: Resolve Cacti logo on Graphs page in Classic Theme\n\n1.0.1\n-feature: SpikeKill allows filling range to last known good value\n-issue#261: Add IPv4 and IPv6 Specific Counters to interfaces.xml\n-issue#257: Poller Output Table not Empty WARNING messages in cacti.log\n-issue#256: New Graph - Add Graph Items Fails (Data Sources shows None)\n-issue#255: Errors Creating new Graphs - Undefined Index Errors\n-issue#254: Unable to Properly add Data Source\n-issue#251: Remote Data Collector stuck on upgrade page\n-issue#247: Devices missing from tree device list\n-issue#245: Drag and Drop in Tree Edit Erratic\n-issue#243: SMTP Ping Failure with not SNMP Authentication\n-issue#241: Authentication Method: None not functional\n-issue#240: SQL error when install plugin\n-issue#238: Duplicate color id's cause error during Upgrade\n-issue#231: SNMPv3 - PHP ERROR WARNING: Fatal error: Unknown user name in file\n-issue: Resolving visual issues with row counts.\n-issue: When deleting Graphs prevent the removal of Data Sources that are still in use\n-issue: Improve SNMP agent performance through SQL optimizations\n\n1.0.0\n-feature: Support for remote data collectors\n-feature: Support Internationalization (i18n) for the main Cacti site, and supported plugins\n-feature: Data Source Profiles replace RRA settings allowing a single system to have multiple polling intervals\n-feature: Redesigned Tree page including Drag & Drop functionality\n-feature: New Graph Permissions system designed to make permissions simple to manage\n-feature: Add Themes 'Classic', 'Modern', 'Dark', and 'Paw'\n-feature: Debug Data Sources by comparing them to the Data Template\n-feature: New special Data Source type to detect the poller interval\n-feature: Bulk inserts in PHP poller to address latency issues\n-feature: Optimize data collection through in memory caching giving a 50% reduction in polling times when dealing with large sites\n-feature: Support RRDtool VDEFs\n-feature: Support new Graph Items: AREA:STACK, GPRINT:AVERAGE, GPRINT:LAST, GPRINT:MAX, GPRINT:MIN, LINE:STACK, TEXTALIGN, TICK\n-feature: Support RRDtool features: Right Axis Support, Dynamic Labels, Tab Width, Legend Position, Legend Direction\n-feature; Resizeable table columns\n-feature: Deprecated Single Pane Tree View\n-feature: Role Based Access Control (RBAC)\n-feature: Support User Group Permissions\n-feature: Show number of in use Graphs, Data Sources, and Devices for a given Template\n-feature: Support bulk re-sync of graphs to assigned Graph Template\n-feature: Bulk Device Settings changes\n-feature: CDEFs, Colors, GPrint Presets consolidated to Presets menu\n-feature: Authentication cookies for 'remember me' functionality\n-feature: Automatic logout after session inactivity\n-feature: Replace Boost server in favor of RRDtool Proxy\n-feature: Graph Details include CSV output, zoom, debug, and download links\n-feature: Graph Export moved to a plugin\n-feature: User change password functionality\n-feature: Automation added to core functionality through the merge of the Discovery and AutoM8 plugins\n-feature: Change interface graphs from 32 bit to 64 bit with ease\n-feature: Plugins now have hooks in device templates and automation\n-feature: Allow users to preview template imports to determine if there will be issues from importing\n-feature: Automatic removal of orphaned graph items when importing newer versions of graph templates\n-feature: Support for MySQL 5.7\n-feature: Support for PHP 7.0\n-feature: Merge Aggregate Plugin - Aggregate graph creation\n-feature: Merge AutoM8 Plugin - Automation of graph creation\n-feature: Merge Boost Plugin - Faster polling, result caching, on-demand RRDtool file updates\n-feature: Merge CLog Plugin - View Cacti logs\n-feature: Merge Discovery Plugin - Device discovery\n-feature: Merge Domains Plugin - Support for domain (ADS/LDAP) specific user templates\n-feature: Merge DSStats Plugin - Cache Data Source values for easy retrieval\n-feature: Merge Logrotate Plugin - Rotate Cacti logs\n-feature: Merge Realtime Plugin - Realtime graph viewing\n-feature: Merge Reporting (Nectar) Plugin - Reporting\n-feature: Merge RRDclean Plugin - RRD file cleanup and management\n-feature: Merge Secpass Plugin - User password policy enforcement\n-feature: Merge Settings Plugin - Shared settings for plugins\n-feature: Merge SNMP Agent Plugin - SNMP Agent for Cacti providing system statistics\n-feature: Merge SpikeKill Plugin - Remove unwanted spikes from graphs\n-feature: Merge SSL Plugin - Force https\n-feature: Merge SuperLinks Plugin - Add external links within Cacti\n-feature: Merge UGroup Plugin - User groups with permissions\n-feature: Merge Watermark Plugin - Watermark your Cacti graphs\n-bug: Fixed issue where old graph templates (0.8.6-), could import bogus data causing issues with Data Input Methods\n-bug#0000168: Duplicate data sources should be avoided when creating new graphs\n-bug#0000851: Review an imported template\n-bug#0001155: When viewing graph tree do not show empty nodes\n-bug#0001337: Form to filter for graphs in host view mode\n-bug#0001552: Date ranges not shown on graphs in the view with Daily, Weekly, Monthly & Yearly graphs\n-bug#0001573: RRA templates/grouping\n-bug#0001577: Override session handling and store session in Database\n-bug#0001790: Allow for XML delimiter in fields of a script query\n-bug#0001820: Unable to use a Data Input Method Output Field in more than one Data Source Item\n-bug#0001827: Changing the graph template messes up the graph item fields\n-bug#0001836: Add mysql error message to log\n-bug#0001877: Cookies path is not properly set\n-bug#0001966: Expand Devices in tree view not honored\n-bug#0001970: Data query index order cache should be populated on re-index\n-bug#0001981: Cacti is not full UTF-8\n-bug#0001986: CLI allow add_graphs.php to have multiples --snmp-field and --snmp-value options\n-bug#0001996: Allow using data input field in graph title\n-bug#0002096: Enumerated SNMP values not parsed correctly\n-bug#0002112: CLI add configurable parameters for device_add.php\n-bug#0002133: Restrict User to only manage specific device(s)\n-bug#0002135: Regular expression support for filter\n-bug#0002137: Data query oid_suffix parameter does not function\n-bug#0002159: Database creation file not fully compliant with strict SQL mode\n-bug#0002162: Unable to authenticate user with password containing UTF-8\n-bug#0002196: Incorrect script server instance number in log\n-bug#0002225: Make -Cc SNMP option configurable\n-bug#0002255: Script query_unix_partitions.pl should only query local mounts\n-bug#0002336: Implement php-snmp class library\n-bug#0002340: Data query script execution should be escaped\n-bug#0002350: SNMP Data Query index_order ignored\n-bug#0002351: Ping does not work with non-English locale\n-bug#0002361: Spine does not log unknowns the same way cmd.php\n-bug#0002362: Poller cmd.php makes wrong hex-string to decimal conversion\n-bug#0002370: Cacti prints wrong date formats, does not honor a systems locale\n-bug#0002403: Typo in DELETE statement leading to poor graphing performance\n-bug#0002412: Graph Template duplication causes \\t to be converted to TAB char\n-bug#0002418: Data Source Items named 'ds' break UI ability to add more items\n-bug#0002419: SNMP enum results not parsed correctly by cmd.php poller\n-bug#0002452: CVE-2014-4000 PHP Object Injection Vulnerabilities\n-bug#0002454: OS Command Injection\n-bug#0002468: Changing graph format to anything but PNG causes no output\n-bug#0002476: Add support for SNMP v3 EngineID\n-bug#0002483: Cisco ASA using Re-index method of verify all causes recache event every time\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002521: Unable to create two devices via CLI with the same IP-Address\n-bug#0002522: Zero padded hex strings are parsed incorrectly\n-bug#0002535: Graph Template Changes not updating RRDtool command\n-bug#0002636: Creating Data Template with \"U\" for min and max saves field data_input_field_id as 0 for first item\n-bug#0002697: CVE-2016-2313 allows remote authenticated users who use web authentication to bypass intended access\n-bug#0002698: When the host is down the wrong data type are used for some columns in the host table\n-bug#0002723: Renaming a disabled device still attempts to connect and get SNMP host information\n-bug#0002724: Multipage graphs the menu can disappear\n-bug#0002725: Changing graph template does not mark correct interfaces disabled on data query generated list\n\n0.8.8h\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access (regression)\n-bug:0002667: Cacti SQL Injection Vulnerability\n-bug:0002666: When click the [Clear] button after clicking the [Refresh] button in Preview Mode , fails to CSRFcheck\n-bug:0002673: CVE-2016-3659 - Cacti graph_view.php SQL Injection Vulnerability\n-bug:0002676: Outdated MIBs for non-unicast packets\n-bug:0002677: Index is a MySQL 5.6 reserved word\n-bug:0002681: generate_graph_def_name() generates reserved word \"cf\"\n\n0.8.8g\n-bug:0002161: Graph management \"graph()\" function conflicts with graphviz PECL extension graph()\n-bug:0002320: Unable to delete more than 500 graphs at once\n-bug:0002591: graph_view.php - unable to advance to Next Page in Tree View\n-bug:0002608: cacti 0.8.8f - Data Templates - Poller/script issue with backslash\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002616: cdef.php -- Extra php closing tag\n-bug:0002617: PHP Warning is thrown when trying to include auth_login.php\n-bug:0002623: log warning display wrong time_interval\n-bug:0002627: Graph tree doesn't work in Internet Explorer\n-bug:0002601: graphs_new.php query not sorted as per definition xml:index_order\n-bug:0002625: Plugins don't display the next page\n-bug:0002631: RRDtool export not XML compliant - results in empty CSV exports\n-bug:0002622: graph_view.php -- Navigation and Content Areas are not visible in Tree Mode\n-bug:0002626: Unable to add two users in a row - Notice: Undefined index: id\n-bug:0002620: Unable to copy user\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002646: SQL injection in graph.php\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access\n-bug:0002647: 0.8.8g rev 7767 Can add cacti devices to graph tree \"Save Failed\"\n-bug:0002652: CVE-2015-8604: SQL injection in graphs_new.php\n-bug:0002655: CVE-2015-8377: SQL injection vulnerability in the host_new_graphs_save function in graphs_new.php\n-bug:0002629: Cacti lacks tab icons in chrome from android\n-bug:0002619: Fix incorrect placement of htmlspecialchars() in tree.php\n-bug:0002642: ping.pl does not take into account host port numbers\n-bug:0002567: RRDtool 1.5.x Support\n-bug:0002269: |query_ifSpeed| in --upper-limit for graph template does not work with empty ifSpee\n\n0.8.8f\n-bug:0002599: 0.8.8e Poller Script Parser is Broken\n-bug:0002600: cli/upgrade_database.php is missing releases\n-bug:0002603: Graph managment graphs.php save button does not work\n-bug:0002599: Poller Script Parser is Broken\n\n0.8.8e\n-bug: Fixed issue with graph zooming failing to work\n-bug: Fixed various SQL Injection vectors\n-bug#0002569: Impossible to have a URL pointing directly to a graph\n-bug#0002574: SQL Injection Vulnerabilities in graph items and graph template items\n-bug#0002577: CVE-2015-4634 - SQL injection in graphs.php\n-bug#0002579: SQL Injection Vulnerabilities in data sources\n-bug#0002580: SQL Injection in cdef.php\n-bug#0002582: SQL Injection in data_templates.php\n-bug#0002583: SQL Injection in graph_templates.php\n-bug#0002584: SQL Injection in host_templates.php\n-bug#0002586: Cannot delete data sources from the GUI\n-bug#0002592: graph_view.php - viewing host in new tab - Undefined index: nodeid\n-bug#0002594: status_fail_date and status_rec_date are set incorrectly after host is marked down\n-bug#0002597: Incorrect value in Hosts column on Host Templates page\n-bug#0002598: Incorrect row number in Devices -> (Edit) page\n\n0.8.8d\n-feature: Remove un-needed fonts and javascript files\n-bug: Fixed XSS VN: JVN#78187936 / TN:JPCERT#98968540\n-bug#0002261: PHP 5.4.0 added new error_reporting variable, causing cacti to show errors\n-bug#0002391: Odd Behaviour on ReIndex of Data Query Data\n-bug#0002393: Broken thumbnail images for graph templates\n-bug#0002402: Subtree must not have the same header as the parent header\n-bug#0002474: CLI add_device.php dows not set availability_method correctly\n-bug#0002449: The Save button does not work: Invalid html on page Console -> Cacti Settings: empty form tag\n-bug#0002428: Fail to delete all data input items when removing more than 1000 data sources\n-bug#0002439: Password with special character don't work with LDAP authentication\n-bug#0002461: invalid bn with ldap and anonymous bind\n-bug#0002465: Graph Export return empty CSV file\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002485: Broken pagenation on graph viewing\n-bug#0002489: SNMP - Get Mounted Partitions using Re-index method of Index Count Changed causes recache event every time\n-bug#0002490: Can not select page for multiple datasources per device\n-bug#0002494: CSV export always shows last day\n-bug#0002504: Data template search not functional\n-bug#0002542: [FG-VD-15-017] Cacti Cross-Site Scripting Vulnerability Notification\n-bug#0002543: Unable to switch pages within graphs_new.php due to invalid URL generation\n-bug#0002544: Duplicate entry in $nav_url during list view\n-bug#0002571: SQL Injection and Location header injection from cdef id CVE-2015-4342\n-bug#0002572: SQL injection in graph templates CVE-2015-4454\n\n0.8.8c\n-bug#0002228: GPL incompatible files included in Cacti project in include/treeview\n-bug#0002383: Sanitize the step and id variables CVE-2013-5588, CVE-2013-5589\n-bug#0002385: Cannot export host templates while including dependencies\n-bug#0002386: cli/upgrade_database.php is missing the last two releases\n-bug#0002390: Poller/script issue with slash and backslash\n-bug#0002405: SQL injection in graph_xport.php\n-bug#0002431: CVE-2014-2326 Unspecified HTML Injection Vulnerability\n-bug#0002432: CVE-2014-2327 Cross Site Request Forgery Vulnerability - Special Thanks to Deutsche Telekom CERT\n-bug#0002433: CVE-2014-2328 Unspecified Remote Command Execution Vulnerability\n-bug#0002434: Suppress SNMP UNITS Suffix from cacti_snmp_get() output\n-bug#0002438: Down Host Detection issue when using SNMP Desc or SNMP getNext\n-bug#0002446: Subtract plugin processing time from Poller sleep time\n-bug#0002453: CVE-2014-4002 Cross-Site Scripting Vulnerability - Special Thanks to G. Geshev (munmap)\n-bug#0002455: Incomplete and incorrect input parsing leads to remote code execution and SQL injection attack scenarios\n-bug#0002456: CVE-2014-5025 / CVE-2014-5026 - Cross-Site Scripting Vulnerability - Special Thanks to Adan Alvarez and Paul Gevers\n-bug#0002495: Graph Filter Date Range\n-bug: Fix COMMENT handling, even in case COMMENT is empty, with or without HR and with variable substitution\n-bug: Fix issues when SNMP data holds a \"=\"; \"explode\" must be treated accordingly\n-bug: Fix filter highlighting on data sources for the data template field\n-bug: correct description of SNMP V3 parameters\n-feature: Added native jquery, jqueryui, and jstree\n-feature: Fixed issues with 'Clear' under preview not working\n-feature: Added new Tree navigation\n-feature: Added Columns and Thumbnails to Preview\n-feature: Added Columns to Tree (Preview only)\n-feature: Both Graphs and Columns default to 'Default'\n-feature: Resolved Left hand navigation taking entire page\n-feature: Added new graph zoom to tree view and preview offering a \"quick\" (default) and an \"advanced\" mode\n\n0.8.8b\n-bug: Fixed issue with custom data source information being lost when saved from edit\n-bug: Repopulate the poller cache on new installations\n-bug: Fix issue with poller not escaping the script query path correctly\n-bug: Allow snmpv3 priv proto none\n-bug: Fix issue where host activate may flush the entire poller item cache\n-security: SQL injection and shell escaping issues\n\n0.8.8a\n-bug#0002207: cannot export graph templates\n-bug#0002208: Graphs with CDEFs fail to generate\n-bug#0002209: External auth does not work behind a reverse proxy\n-bug#0002211: creating an index USING BTREE fails ony MySQL < 5.0.60\n-bug#0002213: CLI upgrade script is missing 0.8.7i as a target\n-bug#0002214: SQL error during non-PIA upgrade to 088 when giving a default for a text field in plugin_realms\n-bug#0002216: use of define_syslog_variables() gone in PHP 5.4\n-bug#0002217: url_path should default to /cacti/\n-bug#0002221: Missing plugin directory causes endless loop in plugins.php\n-bug#0002222: tail_logfile hangs when cacti.log not readable, filling apache log with fgets warnings\n\n0.8.8\n-bug#0002056: un-initialized datetime used for host status (was: Zero length string != NULL)\n-bug#0002081: In Graph Management, search display graph title breaks when using pattern symbol \"/\"\n-bug#0002132: need to include pa.sql with the 0.8.7i and future releases\n-bug#0002134: rebuild_poller_cache.php --host-id deletes table poller_item completely\n-bug#0002141: cacti.sql missing BTREE PRIMARY KEY for poller_output\n-bug#0002146: Utilities -> View Log File -> refresh does not work\n-bug#0002150: usort_data_query_index() is broken -> graph order for hosts with data query sort option fails\n-bug#0002151: When building HTML forms with sub_checkbox on_change parameter is not used\n-bug#0002152: Issue with filter on graphs_new.php\n-bug#0002153: Cant search for patterns containing a forward-slash\n-bug#0002156: CDEF strings are not escaped before passed to rrdtool command\n-bug#0002158: Minor changes to grammar of displayed messages\n-bug#0002165: Using data input field in data source name (related to 2079 in 0.8.7i)\n-bug#0002167: New poller hook poller_finishing\n-bug#0002172: structure_rra_paths.php does not handle disabled data sources\n-bug#0002174: poller_item.host_id has wrong type\n-bug#0002178: typo in include/global_form.php: Mimimum -> Minimum\n-bug#0002181: session_unregister (use in functions.php) doesn't exist anymore in PHP 5.4\n-bug#0002182: When there is no suitable (unique) index, graphs are not shown in data query ordering on host leafs\n-bug#0002189: Proper graph hooks\n-bug#0002191: Refresh issues\n-bug#0002194: changing data query XML <index_order> does not propagate to existing data sources\n-bug: Fix input validation on cli/api_device.php\n-bug: Fix issue with data source template associate command line script inserting incorrect rra information\n-bug: Fix minor display issue on data source pages\n-bug: Fix minor issue with counting items in the poller_output table\n-bug: Graph settings and settings check boxes do not allow unchecking to be saved\n-bug: Fix minor issue with plugin library caused by non-session\n-bug: Fix SQL error on data input save for non-templated graphs\n-bug: user_log index added to increase performance\n-feature: Merge Plugin Architecture into Cacti\n-feature: Added index to data_template_data to increase performance\n\n0.8.7i\n-bug#0001963: Bandwidth summation \"total in\" and \"total out\" are always 0\n-bug#0002040: ICMP ping errors for Windows 7 with PHP 5.3\n-bug#0002062: Multiple security vulnerabilities\n-bug#0002063: Multiple value poller output incorrectly interpreted as hexadecimal value\n-bug#0002064: Removing \"~\" (tilde) by sanitize_uri() conflicts with Apache UserDir translation\n-bug#0002066: Graph without host id \"Notice: Undefined variable: host_id\"\n-bug#0002067: Custom time range filter not working\n-bug#0002068: Missing header include in analyze_database.php\n-bug#0002071: MySQL table poller_item is dropped always when \"Data Input Method\" is changed or added.\n-bug#0002079: Using input field of a script in graph title does not work\n-bug#0002080: Database password containing \"@\" does not connect\n-bug#0002083: Adding a new users generates errors in apache logs\n-bug#0002084: Incorrect normalization of hrStorageTable values over 2^31\n-bug#0002086: Incorrect usage of mysql custom tcp port\n-bug#0002087: PHP recache problems due to missing slashes in reindex table\n-bug#0002093: Unit exponent value of 0 not imported with graph template\n-bug#0002094: CDEF: \"another cdef\" references not included in template export\n-bug#0002106: Command line add device does not accept \"None\" for host template\n-bug: Update host template cli script help to fix incorrect options\n-bug: Refresh of Cacti log viewer not working\n-bug: Problems saving User Graph Permissions in IE9\n-bug: Bandwidth summation fails if NAN values are present\n-bug: Special Type Code \"host_id\" available in Data Queries by Not Data Input Methods\n-bug: Do not generate error messages when creating non host based graphs\n-bug: Wrong index used for Data Queries using VALUE/REGEXP\n-bug: Fix issue with title variable replacement failing when no host is associated with graph\n-bug: Cacti generating MySQL 1100 Errors when modifying the tree\n-bug: Resolved \"Fatal error: Cannot use string offset as an array\" in lib/data_query.php\n-feature: Properly support ifHighSpeed replacement variable\n-feature: Increase granularity of availability options to correct spine bug\n-feature: Replace \"event count\" with last changed date for host availability\n\n0.8.7h\n-bug#0001403: Reapply Suggested Names does not work correctly for graphs and data sources not associated with Data Queries\n-bug#0001568: Remove PHP 5.3 deprecated functions\n-bug#0001584: Concurrent changes to graph tree ordering can corrupt sort values\n-bug#0001626: Symbol ($) does not appear in labels/gprint strings to rrdtool during graph generation\n-bug#0001632: Script server treats quoted arguments with spaces incorrectly as multiple separate arguments\n-bug#0001646: MySQL SSL connection support\n-bug#0001660: Modifying data template values does not propagate as expected\n-bug#0001678: Adding graphs to a device fails to add entries to poller_item if using the script server\n-bug#0001768: Perform consistency check on ds maximum vs. ds minimum\n-bug#0001783: Graph Export export date is incorrect\n-bug#0001812: Data template copying ignores some item templating\n-bug#0001814: Command line device add script fails when SNMP default is disabled\n-bug#0001815: One minute polling not working correctly\n-bug#0001816: Cannot export graph data to CSV with IE 8\n-bug#0001819: MySQL \"TYPE=\" command deprecated since MySQL 4.1 removed in MySQL 5.4.4\n-bug#0001826: Zoomed graph views should auto refresh\n-bug#0001828: Reapply Suggested Name prompt as spelling problems\n-bug#0001835: Graph edit page has more than one html form tag\n-bug#0001847: Graph export API function has required argument not defined\n-bug#0001851: Graph creation selector does not work with data query that has no associated graph templates\n-bug#0001855: Improper formatting of data queries can result in SQL errors\n-bug#0001862: Ping script does not process output of update ping utility\n-bug#0001867: RRDtool Cacti fetch function does not work for some locales\n-bug#0001876: PHP function strip_quotes causes HEX values to be truncated\n-bug#0001880: Form validation error message does not highlight text area control\n-bug#0001882: Cacti snmp_walk function fails if max_oids is an empty value\n-bug#0001890: Default tree view mode set to single pane mode not working\n-bug#0001893: Data input method description text does not make sense\n-bug#0001900: Equal sign not correctly parsed in snmp data results\n-bug#0001903: Undefined variable: mode in lib/ldap.php on line 375\n-bug#0001918: Script server does not accept more than one blank space before the function name\n-bug#0001926: Importing templates \"using defaults for this installation\" associates all rra's defined\n-bug#0001928: graph_image.php does not check local_graph_id\n-bug#0001929: Error when exporting templates are not properly reported\n-bug#0001930: No error reporting for wrong RRA\n-bug#0001934: Poller does not process SIGTERM signal correctly\n-bug#0001936: Removing multiple data sources is inefficient\n-bug#0001937: Technical support page uses check table which waits for table lock\n-bug#0001939: Do not query for number or items per host if concurrent polling processes is set to one\n-bug#0001954: Usage of PHP_SELF without basename in html.php (at least partly fixed)\n-bug#0001956: Attempts to update existing tree item fail\n-bug#0001967: Reflected XSS on Cacti 0.8.7g\n-bug#0001989: IE9 breaks Cacti when objects are hidden using 'display:none;' style tag\n-bug#0001993: Undefined index in lib/html.php\n-bug#0001995: REQUEST_URI not properly escaped in graph_view.php for preview mode\n-bug#0002005: Saving Script Server or Script Data Input Method Results in SQL Error\n-bug#0002060: NAN values in hdd utilisation graphs (Poller Output Table not Empty)\n-bug: Fix SQL injection issues in login page\n-bug: RRDtool fetch in Cacti fails to function properly on rrdtool files with NaN values in the output\n-bug: Accept \"Connection refused\" on TCP ping tests\n-bug: Add missing row selection javascript to graph preview\n-bug: Script server throws \"undefined variable\" error when in debug mode\n-bug: Removing graphs does not take advantage of bulk deletes\n-bug: Fixed issue with multiple \"U\" results for a data input method with multiple output parameters\n-bug: SNMP v3 use AuthNoPriv when privacy passphrase is empty\n-bug: Fixed sql errors when using template and search filter on graph management\n-bug: Delete Data Source multi fails to perform bulk deletes on Data Source items\n-bug: Allow Timespan Selector to work with $_REQUEST as well as $_POST\n-bug: While in the mrtg view of Cacti Graphs, or in viewing graph properties zoom fails\n-bug: The filepath api call should trim the filename before checking for the files existance\n-bug: Fix issues with IE9 while editing templates\n-bug: Form action in graph_items.php incorrect\n-bug: Initial drawing of tree causing Next/Previous with malformed URI\n-feature#0001519: Spine enhancement for parallel collection of data at device level\n-feature#0001667: Get values of |host_*| variables in graph elements from data source\n-feature#0001922: Reindex method \"Index Count Changed\" requires that OID_NUM_INDEXES is given for SNMP Data Queries\n-feature#0001923: Implement counting for script (server) data queries just like OID_NUM_INDEXES\n-feature#0001924: Allow for reindex method \"Index Count Changed\" to apply to script (server) queries as well\n-feature#0001952: Ability to use input field of a script in graph title\n-feature: Make reindexing and repopulating the poller cache a lossless process\n-feature: Change default font sizes\n-feature: Add analyze database and push out host cli scripts\n\n0.8.7g\n-bug: RRDtool 1.4.x not recognized during installation\n-bug: Implement windows-aware shell escaping\n-bug: Fixed multiple cross site scripting vulnerabilities reported by Tomas Hoger of the Red Hat Security Response Team\n-bug#0001292: Over 8TByte Partition in Windows cant get correct data from snmp\n-bug#0001486: Unable to login after redirection to access denied page\n-bug#0001516: \"Show the page that user pointed their browser\" does not seem to work\n-bug#0001561: Over zelous HTML excaping on filter strings\n-bug#0001575: LDAP-Authentifications does not work due to ldap_host being set incorrect\n-bug#0001587: Feature from bug#0001271 breaks on large values\n-bug#0001607: Web Basic authentication does not work with fastcgi\n-bug#0001620: Max OID's max value reported incorrectly in Web UI\n-bug#0001747: oid_suffix do not work correctly for input direction on data queries\n-bug#0001756: Alternate font styles do not work correctly\n-bug#0001757: LDAP realm authentication outputs warning for undefined index\n-bug#0001763: Unable to add graph permissions on a user\n-bug#0001765: Tech support does not work correctly with RRDtool 1.4.x\n-bug#0001766: Page refresh setting not being honored\n-bug#0001771: \"index count changed\" not implemented for query_unix_partitions.pl, query_host_partitions.pl, query_cpu_partitions.pl, ss_host_cpu.php and ss_host_disk.php\n-bug#0001773: Character encoding problem after upgrade to 0.8.7f\n-bug#0001775: Tech support page does account for no memory limit set for PHP\n-bug#0001776: Simultaneous databases connections are not supported\n\n0.8.7f\n-security: SQL injection and shell escaping issues reported by Bonsai Information Security (http://www.bonsai-sec.com)\n-security: Cross-site scripting issues reported by VUPEN Security (http://www.vupen.com)\n-security: MOPS-2010-023: Cacti Graph Viewer SQL Injection Vulnerability (http://php-security.org)\n-bug#0001125: XML parse error on template import with degree symbol\n-bug#0001311: Access denied for graph-only users when accessing index.php directly\n-bug#0001366: Exported data templates do not import special characters properly\n-bug#0001416: Graph Export fails with EXPORT FATAL ERROR: Export path /some/path/root/export is within a system path /root. Can not continue.\n-bug#0001452: Missing \"<\" and \">\" in \"Collection Methods=>Data Input Methods=>\"Input String\" after importing template\n-bug#0001461: Data query export/import fails\n-bug#0001492: RRDtool 1.3 series fonts (fontconfig) support\n-bug#0001506: Reindexing fails due to global include issue in lib/snmp.php\n-bug#0001522: Special characters break parsing of template data\n-bug#0001524: Export graphs and Classical Presentation does not honor per graph export rules\n-bug#0001528: ICMP Ping availabilty broken in UI for Windows Servers using IIS\n-bug#0001535: No display of parent ID in tree nodes for CLI tree add script\n-bug#0001543: All graphs are exported dispite graph export rules\n-bug#0001549: Function array_to_sql_or creates poor sql where clauses\n-bug#0001557: Quotes in Text Format graph template field break graph rendering\n-bug#0001587: 64bit HEX Strings do not convert to Decimal on 32bit Systems\n-bug#0001604: HEX Counter values enclosed in quotes not recognized as HEX\n-bug#0001609: Script server timeout too aggressive with 10 second poller interval\n-bug#0001628: Inconsistent message for Change SNMP Options related to available buttons\n-bug#0001695: Suppress deprecated warnings in Cacti code\n-bug#0001725: PHP Fatal Error while trying to add a tree node via cli\n-bug: When creating new graphs without a data source, print error to user instead of throwing php error\n-bug: Browser query string does not contain arguments\n-bug: Function inject_form_variables does not operate if more than 1 variable needs replacing\n-bug: Script imposed memory limits cause issues with some scripts\n-bug: Turn off process leveling if there are not enough poller items to substantiate it\n-bug: Add device should allow no-snmp type devices\n-bug: Firefox Autocomplete causes issues with password validation\n-bug: Access Denied messages do not allow re-direction to login page\n-bug: When clearing filter on new-graphs do not clear host or template\n-bug: When clearing filter, reset page to 1 for all queries\n-bug: Graph List selectors do not persist between pages\n-bug: allow empty [upper|lower]_limit even without autoscaling\n-bug: Availability method Ping or SNMP generates meaningless warnings\n-feature: Add logging to SQL Save error handling\n-feature: Add utility to convert database to InnoDB\n-feature: Return nav as the title for the page\n-feature: Detect and correct for RRDtool segfaults\n-feature: Add rra_id for hosts and graphs to be used during tree export\n-feature: Make the Graphs pages render like the rest of Cacti\n-feature: Convert base Cacti UI to use buttons and not images\n-feature: Make poller sane so that it can be used by other cacti processes\n-feature: Add snmp timeout warnings for lib/snmp.php\n\n0.8.7e\n-bug#0001044: Creating a DS, Output field can't be selected for DT with a DIM when \"Use Per-Data Source Value\" is on\n-bug#0001341: SNMP query: add oid_suffix for weird SNMP queries\n-bug#0001345: Overwriting $snmp_index in query_snmp_host() breaks SNMP Data query if using get method\n-bug#0001346: Strip out noisy 'No Such Instance currently exists at this OID'\n-bug#0001404: timeout in \"function ping_icmp\" (lib/ping.php)\n-bug#0001405: Spaces in DS when .rrd file is created, so it fails\n-bug#0001407: Place graph thumbnail into div to lower page length changes on load graphs\n-bug#0001410: Thumbnail Columns is not honored for host display with snmp index group style\n-bug#0001411: Graph searching issue\n-bug#0001413: strip_quotes fails\n-bug#0001426: multiple form opening due to bug in draw_edit_form()\n-bug#0001436: CSV Export Start Date and End Date are always 1970-01-01 01:00:00\n-bug#0001443: format_snmp_string can return a number with a leading space\n-bug#0001446: Wrong dates override in CSV export\n-bug#0001456: oid_uptime is not parsed correctly\n-bug#0001460: Skiping input parameters in data_query_field_list() may lead to SQL errors\n-bug#0001464: Typo in install/index.php\n-bug#0001467: Customisable oid index parse regexp for weird MIBs\n-bug#0001468: Tree is not expanded correctly\n-bug#0001469: Tree is not being expanded if user followed link outside of cacti\n-bug#0001476: Mark stacked columns in rrdtool_function_xport() output\n-bug#0001477: Spelling error in a variable in html_tree.php\n-bug#0001478: Combo boxes on Graph Management page produce URLs with leading spaces\n-bug: Top Graph Header Breaks When Plugins Used\n-bug: SNMP v3 Password issue caused by Firefox's Password AutoFill\n-bug: Strip Quotes does not properly handle the value 'U'\n-bug: Changes to the graph tree would not show up immediately for current user\n\n0.8.7d\n-bug#0001336: Allow to specify on_change handler for checkbox_group\n-bug#0001338: When Using Web Basic Authentication HTML Bookmarks Do Not Work\n-bug#0001388: Spine uses illegal flag for ping on Mac OS X\n-bug#0001351: Deleting 1000 graphs along with their Data Sources crashes the Server\n-bug#0001361: SNMP query: 'No more variables left in this MIB View' instead of value of input field\n-bug#0001374: ss_host_disk.php etc. error corrected when using SNMP V3 (index off by 1)\n-bug#0001376: graph_items.php variable $id defined in wrong place\n-bug#0001377: Several bugs in new cli script \"structured_rra_paths\"\n-bug#0001378: ping.pl script fails when using tcp:hostname\n-bug#0001382: cdef.php error due to wrong function name\n-bug#0001383: syntax error in lib/rrd.php with PHP 4.4.4\n-bug#0001384: utilities.php does not handle view_snmp_cache when host_id = -1 (Any)\n-bug#0001385: LDAP Error: Group DN could not be found\n-bug#0001391: parsing snmp string with \"=\" ?? --> WARNING: Result from SNMP not valid\n-bug#0001392: Problem on CDEF function ALL|SIMILAR_DATA_SOURCES_(NO)?DUPS\n-bug#0001394: Error of variable in lib/html_tree.php\n-bug#0001398: Cross site scripting checking is overly protective on search filters\n-bug#0001400: LDAP authentication results in PHP warning message\n-bug: Resolved issue with reapply suggested names not working for data sources under certain conditions\n-bug: Correct missing db_conn argument issue\n-bug: Deleting large number of hosts results in SQL errors due to MySQL buffer overrun\n-feature: SNMP cli version information added to tech support page\n\n0.8.7c\n-bug#0000157: Dual pane tree does not have the option of not rendering all trees in one page\n-bug#0000486: RRA template edit allows invalid XFF values\n-bug#0000626: Setting \"Default Graph Tree\" does not work with dual pane view\n-bug#0000828: Truncated IOS description in |query_ifAlias|\n-bug#0000909: ALL_DATA_SOURCES_NODUPS breaks graphing when using \"Consolidation Function\" MAX\n-bug#0000943: scripts/ping.pl has incorrect response when \"icmp hop redirect\" occurs\n-bug#0000948: Exporting graphs to a local path does not work correctly in some cases\n-bug#0000986: Graphs that are done by graph type are not exported when using the tree view\n-bug#0001022: strip_quotes incorrectly parses script output\n-bug#0001090: LDAP authentication fails when using quote character in password\n-bug#0001135: Graph export feature not exporting as per user level selected\n-bug#0001136: Regex ambiguous for mbstring\n-bug#0001138: Lack of error checking causes graphs to not update when rrdtool crashes\n-bug#0001141: Script server appears broken for \"index\" and \"query\" requests (Documentation Fix)\n-bug#0001145: Save Failed error when changing Graph Details\n-bug#0001153: Undefined variable: local_graph_id in graphs.php on line 201\n-bug#0001166: Installer does not properly handle disabled guest_user conversion\n-bug#0001174: Unidentified index warning\n-bug#0001175: Hide hosts in Graph Permissions that you already have access to\n-bug#0001176: Problem validating IPv6 addresses\n-bug#0001188: Graph export issues in tree mode\n-bug#0001191: Faulty IP address validation by ping.php script\n-bug#0001180: Graph Export to CSV failed by using IE 6 SP2\n-bug#0001194: RRDtool URL is incorrect on the about page\n-bug#0001204: Since upgrade to 0.87b the hosts with ip address with 255 are down and have no datas\n-bug#0001206: Graphs are not zoom-able with PHP warnings turned on\n-bug#0001211: Allow use of \"REMOTE_USER\" if \"PHP_AUTH_USER\" is not set for authentication\n-bug#0001213: Template Copy does not hash copied template_items\n-bug#0001215: Impossible to define a none availability with the client cli/add_device.php\n-bug#0001216: CSV Export for zoomed graph, results in Validation error\n-bug#0001217: Default Graph Tree is not reflected in Left Pane of the graph page\n-bug#0001223: Missing Hard return on last GPRINT causes bad formatting\n-bug#0001228: LDAP server port not honored\n-bug#0001230: Poller stops updating rrd files\n-bug#0001236: Set 'stats_recache' to zero when no re-index is present\n-bug#0001238: Guest user has access to change password\n-bug#0001239: Using the TOTAL_ALL_DATA_SOURCES in a graph where all item are using the MAX CF yields an invalid(empty) CDEF\n-bug#0001240: SNMP string cleanup removes too many '=' signs\n-bug#0001244: Missing closing </form> on host.php\n-bug#0001247: Snmp ping won't work for snmp v3\n-bug#0001256: Spine-poller.c : Bug in size string sysUptime\n-bug#0001258: \"Remove Verification\" is an ambiguous definition, leads to data loss\n-bug#0001259: LDAP Authentication using Solaris 10 standard ldap client fails\n-bug#0001262: Do not allow deletion of Graph Export User\n-bug#0001264: CDEFs can't recognize |query_*|\n-bug#0001268: resource/snmp_queries/net-snmp_disk.xml has incorrect name for \"Percent Available\"\n-bug#0001271: Hex string to decimal conversion for proper RRDtool storage\n-bug#0001273: Escape windows paths to accommodate spaces\n-bug#0001281: ICMP Ping fails if an octet == 255\n-bug#0001283: graph_image.php causes PHP Notice errors on view\n-bug#0001286: poller_item cache is not updated when \"Data Input Method\" is changed\n-bug#0001288: A host with ICMP ping selected as method does not properly perform ping\n-bug#0001291: Reapply Suggested Names fails on Script Queries\n-bug#0001293: When Creating Data Query Graphs, Performing Search will Cause List to Disappear\n-bug#0001294: Stack overflow if database is not correctly initialized\n-bug#0001295: Division by zero when rrd_step < poller_interval\n-bug#0001296: add_graphs.php does not add the graph template to the host\n-bug#0001299: When creating graphs the entire poller cache is recreated for a host\n-bug#0001314: Use Data Query variables as HRULE input for graph templates\n-bug#0001318: Graph Export with 1 minute poller re-exports graphs 5 times\n-bug#0001320: Invalid PHP_SELF Path\n-bug#0001326: If a user's password contains a single quote the login fails\n-bug#0001342: VRULE printed as HRULE on graph_templates.php graph template item list\n-bug#0001380: Expand description of ping retries\n-bug: Remove include/html files to mitigate XSS issues\n-bug: IE generates errors on both the host and graph settings pages\n-bug: Host save failed in FireFox 3 for non-SNMP V3 hosts, complaining about \"password mismatch\"\n-bug: Initialization of snmp_auth when using SNMP=NONE\n-bug: Speed up add_graphs.php in most cases (still slow only if --input-fields is used)\n-bug: If the poller_output table is not empty, do not flood the log\n-bug: Remove warnings appear in the httpd log relative to reset attempts on settings array\n-bug: Add API Automation tool quietMode to additional functions\n-bug: When Cacti is launched from within an iframe, cookies are dropped from IE6\n-bug: Database upgrade and cacti.sql differ\n-bug: drop color setting background on FF does not work\n-bug: cli/add_tree.php requires as least a host-id for --list-graphs\n-bug: add_tree.php did not allow nodes with propagating sort options\n-bug: When adding a tree node via the api numeric and natural were reversed\n-bug: When saving a data query based data templates, their data sources would become corrupt\n-bug: If your system contains INNODB tables, the Technical Support page would hang\n-bug: The default user tree link icon would not be properly highlighted when opening graphs\n-bug: Severe performance problems when adding data query based graphs.\n-bug: Default refresh on Cacti Log was too quick\n-bug: Some users do not like the idea of automatic page refreshes\n-bug: Allow more rows to be visible in Cacti pages\n-bug: Ping and SNMP should test both conditions\n-bug: When step is less than poller interval, item will stop polling for long period of time\n-bug: When using Web Basic authentication, user is directed to default page and not REQUEST URI\n-feature#0000284: Custom <path_rra> for each device\n-feature#0000431: Add php-xml to requirements, verify required PHP extensions\n-feature#0000852: Have \"Previous\" and \"Next\" disappear when not in use (only for graph display)\n-feature#0001082: Mirror Graph Rename based on template function to work with Data Sources\n-feature#0001140: CLI-Script to associate a graph template to a host\n-feature#0001162: WEB UI now accepts max_oids on SNMP bulkwalks\n-feature#0001177: CLI Reindexing - poller_reindex_hosts.php: allow filter on \"host description\"\n-feature#0001189: Introducing |data_source_title| variable\n-feature#0001195: Add graph title to graphs page\n-feature#0001201: Reapply Suggested Names for Data Sources and cli/poller_data_sources_reapply_names.php\n-feature#0001205: Add filtering and pagination to cdef management; add \"Duplicate CDEF\"\n-feature#0001220: Disable snmpbulkwalk if max OIDS is less than 2\n-feature#0001233: Move $export_types variable definition from templates_export.php to include/global_form.php\n-feature#0001235: CLI script needs to activate a query: add_data_query.php\n-feature#0001250: Dispatching job in poller can lead to unbalanced threads\n-feature#0001249: New pseudo CDEF variables for \"Count All|Similar Data Sources (NO)?DUPS\"\n-feature#0001289: Add \"Graph Properties\" wrench to tree+preview mode\n-feature#0001323: List all graph template associated with a host template\n-feature#0001306: Add Blank Line as possible graph item\n-feature: Paginate Treeview Dual Pane\n-feature: Allow user to specify maximum graphs per page from Treeview Dual Pane\n-feature: Allow Treeview Dual Pane to be filtered for graph titles\n-feature: Allow the user to add or remove graph text from page for searching with the browser\n-feature: Add links to Graph Management and Data Sources to Device Edit Screen\n-feature: Add links to Graph Template and Host Edit to Graph Edit Screen\n-feature: Add links to Data Template and Host Edit to Data Source Edit Screen\n-feature: Support using the cacti database api with more than one connection\n-feature: Add some more debug lines to Data Query debugging (Verbose Query)\n-feature: Fix compatibility issues for RRDtool 1.3\n-feature: Make the tabs section work a little better with existing plugins\n-feature: Add additional options to speed data query graph automation process\n-feature: Add additional indexes to speed data query graph creation\n-feature: Allow the cli reindexing of hosts to be limited to a single query\n-feature: New cli command host_update_template to allow re-templating of hosts using an updated template\n-feature: When reindexing hosts, allow a queryid to be specified\n-feature: Add command line Database upgrade script\n-feature: Add api call to associate graphs with their data sources\n-feature: Move the notes field to bottom of page\n-feature: New availability option \"Ping or SNMP\"\n-feature: Allow for specification of a default reindex method\n-feature: Show more colors on a single color's page\n-feature: Exit is either a database or table does not exist\n-feature: Add developer debug level to reduce SQL messages in DEBUG\n-feature: Add support for group membership for LDAP authenication\n\n0.8.7b\n-bug#0000855: Unnecessary (and faulty) DEF generation for CF:AVERAGE\n-bug#0001083: Small visual fix for Cacti in \"View Cacti Log File\"\n-bug#0001089: Graph xport modification to increase default rows output\n-bug#0001091: Poller incorrectly identifies unique hosts\n-bug#0001093: CLI Scripts bring MySQL down on large installations\n-bug#0001094: Filtering broken on Data Sources page\n-bug#0001103: Fix looping poller recache events\n-bug#0001107: ss_fping.php 100% \"Pkt Loss\" does not work properly\n-bug#0001114: Graphs with no template and/or no host cause filtering errors on Graph Management page\n-bug#0001115: View Poller Cache does not show Data Sources that have no host\n-bug#0001118: Graph Generation fails if e.g. ifDescr contains some blanks\n-bug#0001132: TCP/UDP ping port ignored\n-bug#0001133: Downed Device Detection: None leads to database errors\n-bug#0001134: update_host_status handles ping_availability incorrectly\n-bug#0001143: \"U\" not allowed as min/max RRD value\n-bug#0001158: Deleted user causes error on user log viewer\n-bug#0001161: Re-assign duplicate radio button IDs\n-bug#0001164: Add HTML title attributes for certain pages\n-bug#0001168: ALL_DATA_SOURCES_NODUPS includes DUPs? SIMILAR_DATA_SOURCES_DUPS is available again\n-bug: Cacti does not guarentee RRA consolidation functions exist in RRA's\n-bug: Alert on changing logarithmic scaling removed\n-bug: add_hosts.php did not accept privacy protocol\n-security: Fix several security vulnerabilities\n-feature: show basic RRDtool graph options on Graph Template edit\n-feature: Add additional logging to Graph Xport\n-feature: Add rows dropdown to devices, graphs and data sources\n-feature: Add device_id and event count to devices\n-feature: Add ids to devices, graphs and data sources pages\n-feature: Add database repair utility\n-feature: Default Script Server/Script Queries now accept host specific ping_retries, max_oids\n-feature: Support for new variables |host_ping_retries| and |host_max_oids|\n\n0.8.7a\n-bug#0000895: \"Use Per-Data Source Value (Ignore this Value)\" runs only when when checking \"Allow Empty Input\"\n-bug#0001029: Add --autoscale-min (rrdtool 1.2.x only) and --autoscale-max (using upper AND lower limit)\n-bug#0001035: Allow for --logarithmic scaling without autoscaling\n-bug#0001038: Data sources in RRAs have random order, messing up predefined CDEFs\n-bug#0001043: Graph Templates drop down populates with duplicates\n-bug#0001046: Upgrade from 0.8.6j to 0.8.7 defaults to Authentication Method NONE\n-bug#0001052: Graph template - GRINT creates CF function DEF\n-bug#0001055: Invalid date format - \"half hour\" not the GNU Date format\n-bug#0001057: SQL error when using 'Auth Method' None when no 'guest' user exists\n-bug#0001058: Graph Filter dropdowns do not respect user graph permissions\n-bug#0001059: Potential SQL injection vulnerability\n-bug#0001060: RRDtool 1.2.15 complain for garbage characters when rrdtool_function_xport is used\n-bug#0001061: cmd.php: potential call to invalid \"availability_method\" key on wrong hash\n-bug#0001064: Log file viewer inefficient filtering uses excess memory\n-bug#0001066: doc change for using COUNTERs as integers only\n-bug#0001067: Fixed extra spaces in GPRINT. Better Alignment for Autopadding\n-bug#0001068: doc change for patching cacti when running SELinux\n-bug#0001070: Cron interval detection causes multiple pollers to run\n-bug#0001073: Max OIDS is not saved in device view\n-bug#0001078: Undefined variable: rra in graph.php on line 241\n-bug#0001079: Dates are not stored in host table using correct format\n-bug#0001080: Graph Export Generates SQL Errors\n-bug#0001081: Usernames with spaces and dashes are not able to save\n-feature#0001035: Allow for --units=si on logarithmic scaled graphs (rrdtool-1.2.x only).\n-feature#0001069: add opacity/alpha channel to graph items (rrdtool-1.2.x only).\n-feature#0001065: Move to Top for List and Tree View. Omit boring scrolling\n-feature: add availability pings to host interface\n\n0.8.7\n-bug#0000480: Fix error after altering graphs displayed per page\n-bug#0000740: Add support for setting the PHP session name of Cacti\n-bug#0000829: Add support for an specifying an uptime OID for SNMP queries\n-bug#0000830: Add filtering graphs by Graph Template\n-bug#0000833: Add favicon.ico support\n-bug#0000850: Add Select All for graph list view\n-bug#0000854: Move \"Downed Host Detection\" into the device edit screen\n-bug#0000873: Fix issues with the poller hanging in certain situations\n-bug#0000876: Add ability to search for host with a not UP status\n-bug#0000898: Selecting a CUSTOM timespan and then CLEARing yields \"LAST HALF HOUR\" preset\n-bug#0000899: Add local checking to the Paths tab on the Settings page\n-bug#0000902: Fix issues with cmd.php and PHP 4.4.1 under windows\n-bug#0000903: snmpgetnext function does not exist in PHP less than 5.0\n-bug#0000904: Data Source creation fails without php-snmp\n-bug#0000906: Every tenth host does not show on tree during console edit\n-bug#0000907: Sorting of data sources when interface numbers are used without leading zeros are incorrectly sorted\n-bug#0000908: Graphs created by SNMP data queries are losing their specific names if the template is modified\n-bug#0000910: Cacti complains when trying to set the data source \"maximum value\" to any number with a decimal point\n-bug#0000912: Nth Percentile thumbnail graphs fail with RRDtool 1.2.15, 1.2.18\n-bug#0000913: Allow direct linking to specific graph pages\n-bug#0000919: Fix problem with ping_tcp function\n-bug#0000920: Improved handling of rrdtool --font parameter\n-bug#0000921: Improvement to ping.pl script\n-bug#0000925: Support for host_* variables in the legend\n-bug#0000926: Stop removing useful characters when searching\n-bug#0000927: Classic export does not recognize thumbnail columns properly\n-bug#0000931: New rrdtool fails on empty comment\n-bug#0000934: Column 'status_last_error' in table 'host' too short.\n-bug#0000937: System output in hosts.php poor for Alcatel\n-bug#0000946: Timetick of zero returns down for device\n-bug#0000947: Trailing blank on OID in form causes problems\n-bug#0000953: SNMP Passphrase is displayed in cleartext\n-bug#0000954: Y-grid lables are not informative when using --alt-autoscale\n-bug#0000955: Fixed possible denial of service attack by modifying graph image URL\n-bug#0000956: Additional editing help with tree management\n-bug#0000957: Script server output's beginning/trailing data during \"Include\" causing a synchronization issue\n-bug#0000958: Slope Mode is now selectable\n-bug#0000959: Alarming added when poller output table is not empty\n-bug#0000963: TCP/UDP capitalization\n-bug#0000965: When setting filters under utilities, pressing enter takes you back to the main page\n-bug#0000966: Log file viewing utility has no ability to filter\n-bug#0000969: In some versions of PHP, the graph tree will not view properly\n-bug#0000970: Incorrect debug messages in lib/ping.php for failed UDP ping\n-bug#0000974: No graphs on Fedora core6 using sunone/iplanet 6.1 SP5\n-bug#0000975: Add Nth Percentile aggregate_current - Summing Multiple Data Sources with like names for Nth Percentile\n-bug#0000982: Remove invalid references to the \"output_string\" column in the \"data_input\" table\n-bug#0000983: Bad SQL: snmp_query_graph_rrd.snmp_query_graph_id=\n-bug#0000984: Poller does not correctly flush poller_output table after a memory error\n-bug#0000989: hyphen - host description used with Data Source Path\n-bug#0001001: \"Purge User Log\" keeps invalid entries\n-bug#0001002: Cacti reports incomplete interface status\n-bug#0001007: SNMPv3 password field allows command injection\n-bug: ss_sql.php causes the script server to crash\n-bug: Timeshifter added to base code\n-bug: Allow query_ and host_ substitution in COMMENT and CDEF's.\n-bug: Command line interface scripts to add devices, graphs, tree's and permissions.\n-bug: Correct index error when creating graphs when you have no hosts on your system.\n-bug: More recent versions of net-snmp broke SNMP walk functions.\n-bug: Adjust for problematic responses from some SNMP agents (IBM AIX).\n-bug: Improve logging in cmd.php and poller.php when parameters are not specified correctly.\n-bug: Reduce the total number of SQL queries called\n-bug: Replace inefficient strip function in process_poller_output\n-bug: Some php_snmp implementations return strings as \"Hex-STRING:\".  In these cases properly resolve the string\n-bug: Correctly assign right and left click actions for Opera\n-bug: Fix SQL error when viewing an invalid Data Source via the Log Viewer\n-bug: Fix command line user copy utility\n-feature: Paginate the Graph Creation Page\n-feature: Add SNMPv3 Support to Cacti\n-feature: Add a Notes field to the Device that can contain arbitrary information\n-feature: Add Availability Methods to Cacti including per Host Ping Methods and Timeouts\n-feature: Add Max OID's to te Host Level\n-feature: Allow CSV Export from the various Graphs page\n-feature: Add rra_path as a global.php config variable\n-feature: Add drop down actions to data queries\n-feature: Add drop down actions to data input methods\n-feature: Add drop down actions to user administration\n-feature: Add filtering and pagination to data queries\n-feature: Add filtering and pagination to data input methods\n-feature: Add filtering and pagination to host templates\n-feature: Add filtering and pagination to user administration\n-feature: Add extended LDAP authentication support\n-feature: Add Web Basic authentication\n-feature: Add authentication realm to modifiable user parameters\n-feature: Add multiple polling intervals\n-feature: Moved command line scripts to cli sub directory\n-feature: include/config.php now only includes database configuration\n-feature: include/config_* have been renamed to include/global_*. Note: Script servers need to be updated.\n-feature: Allow VRULE's in Cacti to specify an absolute timestamp in addition to [+/-]HH:MM\n-feature: Add 1 minute RRA\n-feature: Add item select highlighting to main pages\n-feature: Let poller.php be more intelligent about poller intervals less than 60 seconds\n-feature: Add consistency to Filters by adding nowrap to td items\n-feature: Add Graph and Data Source counts to Device page\n-feature: Add Poller Interval to Data Sources page\n-feature: Keep filters aligned with main page content on window resize\n-feature: Add Enable/Disable user\n-feature: Add copy and batch copy of users\n-feature: Reduce ADODB memory consumption during polling\n-feature: Add new RRDtool Function to facilitate CSV export\n-feature: Add the ability to ignore custom RRA settings when importing templates and use this behavior by default\n-feature: Add technical support output to System Utilities\n-compat: Add additional checking due to php-snmp changes in Windows\n-compat: Remove GIF as a supported file type for RRDtool 1.2.x and added SVG file type\n\n0.8.6j\n-bug#0000842: SNMPv3 password field does not check if entered passwords match.\n-bug#0000848: Fix \"PHP Script Server communications lost\" error in the poller under high network load.\n-bug#0000859: User log \"purge\" now keeps the last successful login.\n-bug#0000861: Use downed host detection even when the SNMP community is blank.\n-bug#0000864: Apply natural sort to graph items in the tree.\n-bug#0000867: Apply various cleanups to poller.php and lib/poller.php.\n-bug#0000870: Add sorting to the graph templates list on the \"Change Graph Template\" page.\n-bug#0000877: Fix issue that caused PHP 5.2.0 to break the Windows cmd.php poller.\n-bug#0000882: Add \"collapsible\" branches to the graph tree editor.\n-bug#0000883: Fix exploit in cmd.php with register_argc_argv enabled in PHP.\n-bug#0000884: Add bottom navigation bar to graph viewing.\n-bug#0000885: Fix issue causing spaces to be removed when importing/exporting data input methods.\n-bug#0000886: Allow SNMP ping to utilize the snmpgetnext call instead of snmpget.\n-bug#0000890: Fix issue with dec-vulnerability-poller patch breaking graph_view.php.\n-bug#0000892: Fix hostname sorting on the devices page for IP addresses.\n-bug#0000894: poller.php does not give any output with MySQL disabled in CLI's php.ini.\n-bug: Template export produces invalid XML escaped character encoding.\n-bug: Data queries were not sorted properly during initial display.\n-bug: Apply various graph changes required for Boost plugin.\n-bug: If your system has no hosts or graphs, you would get a warning when creating new graphs.\n-bug: If using the CGI version of PHP, the script server risked not starting properly.\n\n0.8.6i\n-bug#0000188: Add ability to sort columns by selecting column headers.\n-bug#0000199: Exported thumbnail graphics shows limited time range only.\n-bug#0000207: Correct unit size displayed in the default 'Localhost - Memory Usage' graph.\n-bug#0000286: Fix issue with bandwidth summation on exported graphs.\n-bug#0000313/#0000561: Don't print menu/titlebar by using CSS class noprint.\n-bug#0000316: Take the unit value field into account when creating graphs.\n-bug#0000395: Fix graph export FTP functionality in Unix environments.\n-bug#0000430: Add natural sort order option for graph trees.\n-bug#0000433: Remove script server restriction on varying case path names.\n-bug#0000488: Remove reliance on HTTP_USER_AGENT to prevent possible notices.\n-bug#0000527: Fix issue updating the RRA for a graph tree item.\n-bug#0000584: Add barometer decimal fix to scripts/weatherbug.pl.\n-bug#0000624: Generate DEFs for graph items other than AREA, STACK, and LINE.\n-bug#0000643: Always display a human readable sysUpTime in the device edit page.\n-bug#0000665: Invalid index error on empty or 0 return set from rrdfetch with Nth Percentile.\n-bug#0000672: When creating a device, the Host Template was not properly validated.\n-bug#0000678: Allow graph export to a Cacti sub directory.\n-bug#0000681: Increase the size of the arg1, arg2, and arg3 fields in the poller_item table.\n-bug#0000692: Fix problems with FTP and the tree export method.\n-bug#0000693: Fix problems with the \"Expand Host\" option and the tree export method.\n-bug#0000698: Make arguments to 'df' more compatible with FreeBSD 6.0 in the \"Get Unix Partitions\" data query.\n-bug#0000705: Fix problem with the current selected data source item and SIMILAR_DATA_SOURCES_NODUPS (again).\n-bug#0000709: Fix problems with FTP and the tree export method (duplicate).\n-bug#0000720: Fix undefined variable message in script_server.php.\n-bug#0000721: SNMPv2 Query has issues with ifAlias & ifName when none present.\n-bug#0000727: Allow a user with specific graph permissions to be used when exporting graphs.\n-bug#0000730: Allow non-standard MySQL ports to be specified.\n-bug#0000731: Use proper defaults when adding a device to a tree from the Devices page.\n-bug#0000739: Stop ignoring the \"Unit value\" parameter in the graph template.\n-bug#0000741: Fix issue with links getting mismatched after using zoom on a graph.\n-bug#0000746: Make sure clearing Cacti log file from web interface preserves file permissions.\n-bug#0000752: Allow OID's greater than 255 characters except for the index OID because of MySQL index limitations.\n-bug#0000758: LDAP user with non-alphanumeric characters in the password failed to authenticate.\n-bug#0000761: Correct input validation to allow all possible numbers in the RRAs form.\n-bug#0000766: Increase the size of the id field in the graph tree items table.\n-bug#0000769: Use only selected RRA's when exporting graphs.\n-bug#0000775: Add pagination to the SNMP cache viewer to handle large numbers of items.\n-bug#0000779: Scale down the size of text when viewing thumbnail graphs.\n-bug#0000781: Add an \"enabled\" filter status item in the devices list.\n-bug#0000785: Fix issue with Graph Tree View and Data Query Index Sorting showing \"Non Indexed\" even if empty.\n-bug#0000786: Expose the SNMP port field to data sources that use SNMP.\n-bug#0000789: Remove use of \"action\" attribute on graph tree image which is incompatible with newer Opera browsers and HTML4.\n-bug#0000797: Fix issue with filtering on multiple fields on the Data Sources and Graph Management pages.\n-bug#0000809: Add an option to \"purge\" the user_log table.\n-bug#0000814: Prevent Apache from segfaulting if the database permissions are not correct.\n-bug#0000815: Paginated the Cacti log file viewer to handle large numbers of items.\n-bug#0000821: Add missing menuarrow.gif image.\n-bug#0000823: Prevent Cacti from overwriting data during the creation of a new data template.\n-bug: Do not allow the device filter on the graph items editor to clear the selected data source.\n-bug: SQL query incorrectly formatted causing SQL queries to fail in preview mode.\n-bug: Setting a host template filter in devices, followed by moving off and then back on the page generated an error.\n-bug: PHP 5.1 snmpwalks utilize the bulk method by default.  Therefore, prefer them over the bulkwalk binary.\n-bug: Allow read_config_option to force a database refresh when one is wanted.\n-bug: Fix to resolve script server script not returning data as expected.\n-bug: Make load average script compatible with Mac OS X systems.\n-bug: Correct an issue where under certain circumstances, |query_ifSize| was being implemented as the maximum value for an RRD.\n-bug: Correct issue where DHTML caching was not working with expand hosts enabled.\n-bug: Add SNMP retries option to Cacti's SNMP functions.\n-bug: Once Graph Export has been enabled, do not allow Cacti to run even after it has been disabled.\n-bug: Correct alphabetic tree sorting to be more natural.\n-bug: Fix meta refresh tags to use proper URL syntax.\n-bug: Do not allow the graphs setting page to use the refresh interval, which can cause it to refresh while the user is inputting data.\n-bug: Make sure that data query index ordering with the \"index_order\" XML field is always respected.\n-bug: Limit the number of rows retrieved from the poller_output table to minimize the impact low memory system configurations.\n\n0.8.6h\n-bug#0000383: Add more verbose RRDtool debug output from Graph Management.\n-bug#0000522: Take 'oid_index_parse' into consideration when handling 'OID/REGEXP:' data query fields.\n-bug#0000528: Allow template_import.php to return without error when XML file is invalid in PHP 4.4 and above.\n-bug#0000557: Changing filter value resulted in invalid page/row selection.\n-bug#0000572: Added $database_port to config.php.\n-bug#0000570: Grammar edit for text about already up-to-date.\n-bug#0000571: Misleading diagnostic error messages during install have been updated.\n-bug#0000582: Ampersand present in graph template graph name causes XML import to fail.\n-bug#0000585: Graphing fails using AREA/STACK/LINE/HRULE/VRULE without defined color.\n-bug#0000586: Remove static reference to RRA ID #1.\n-bug#0000596: Proper escape of ' in graph titles.\n-bug#0000599: Add filtering to graphs and data templates.\n-bug#0000601: Add ability to add multiple hosts to a tree.\n-bug#0000603: user_log.ip field not ipv6 compatible.\n-bug#0000608: Minor coding error in lib/poller.php with a erroneous pclose statement.\n-bug#0000615: Add sysContact and sysLocation output to device edit page.\n-bug#0000619: Host templates not alphabetized on device creation form.\n-bug#0000625: Cannot modify/create a user with a period in the username.\n-bug#0000631: Invalid information concerning delimiter for index_order in SNMP Query documentation.\n-bug#0000650: Clicking Cancel in Create Graphs for this Host does nothing.\n-bug#0000656: Perl scripts using back ticks is not portable.\n-bug: Stop MySQL connect messages from appearing in user interface.\n-bug: Allow primary keys other than \"ID\" to work in sql_save and in HTML code.\n-bug: Save statistics even when the poller times out.\n-bug: Only call poller_commands.php or poller_export.php if they require calling.\n-bug: Incorporate a timeout to ss_fping.php so that a host that takes to long to finish at least returns data.\n-bug: Correct the display of custom data under data input methods to follow the proper order.\n-bug: Change the default behavior of ping.php to mark a host as up if either SNMP or ping are successful.\n-bug: Don't allow graph_export to delete your web site.\n-bug: Correct issue where SNMP was not returning both hex and text data under certain circumstances.\n-bug: Prevent a never ending table lock in lib/tree.php.\n-bug: Correct issue where either AREA or LINEx without color were causing RRD_NL without any elements in rrdtool_graph.\n-bug: Allow hostname to include the TCP: prefix for TCP based snmp and keep tcp, icmp, udp ping functional\n-bug: Better error reporting for Clear Cacti Log File in Utilities\n-bug: Graphs with items having Legend text defined but no color will fail under RRDtool 1.2.x.\n-feature: Add MySQL 5.x support.\n-feature: Add IPv6 support to lib/ping.php.\n-feature: When utilizing cmd.php, do not run the script_server if it is not required for a process.\n-feature: Incorporate snmpbulkwalk binary path to user interface to speed snmpv2 and snmpv3 walk calls.\n-feature: Incorporate snmpgetnext binary path to user interface to make available for certain plugins.\n-feature; Add support for Nth percentile functions, not just 95th.\n-feature: Add support for new Nth percentile variables: aggregate, aggregate_max, aggregate_sum.\n-feature: Allow additional filtering for graph item adding while creating graphs.\n-feature: Add Command line script to copy users: copy_cacti_user.php.\n-feature: Add Command line script to reindex hosts: poller_reindex_hosts.php.\n-feature: Add Command line script to rebuild the poller cache: rebuild_poller_cache.php.\n\n0.8.6g\n-bug#0000351: Fix zooming capability in Safari.\n-bug#0000491: Allow underscore, dash, and forward slash characters through search string validation.\n-bug#0000498: Fix issue where editing data input methods damaged portions of the database.\n-bug#0000502: Fix Syslog support in unix.\n-bug#0000506/#0000517: Properly handle special XML characters when importing/exporting templates.\n-bug#0000508: Fix issues where filter functionality would not work in preview mode.\n-bug#0000512: Increase script server buffer size for large output.\n-bug#0000520: Fix issue where LDAP authentication causes crash/abort.\n-bug#0000521: Add graph/data source title mouseover support.\n-bug#0000525: Make sure that all files in the Cacti distribution contain an EOF character.\n-bug#0000530: Remove 132 character limitation for OID's during polling.\n-bug#0000531: Make sure that quote characters in suggested value fields are properly escaped.\n-bug#0000535: Fix template export support for PHP 4.4.\n-bug#0000536: Fix printing of zoomed graphs where in IE where a white box would appear over the graph.\n-bug#0000537: Re-implement functional SNMPv3 support (authNoPriv only)\n-bug#0000543: Always allow non-templated graph/data template fields to be blank.\n-bug#0000544: See graph tree export contrib below.\n-bug#0000547: Fix issue with escaping certain control characters, causing the graph tree to break.\n-bug#0000552: Fix typo on the Settings page.\n-bug: Fix multiple output support in the script server.\n-bug: Fix incompatible binary SNMP calling parameter issue with NET-SNMP versions earlier than 5.1.\n-bug: Fix issues encountered when polling invalid data sources.\n-bug: Fix issue where if a host was deleted, re-indexing would continue to attempt to be performed on it.\n-bug: Allow lib/ping.php to be included in user script server scripts.\n-bug: Eliminate the need to run php-win.exe in Windows environment.  Will now work with just php.exe.\n-feature: Add a great new graph export format \"Tree Presentation\", thanks to our friend from Toulouse France (forums user: jaybob).\n-feature: Allow data query |query_*| variables to be used within a CDEF string.\n-feature: Force export functions into a separate poller process.\n-feature: Force re-caching of data queries into a separate poller process.\n-feature: Added filter capability to graph list view mode.\n-feature: Enhanced ss_fping.php and ping.php to inclue ICMP, TCP and UDP ping functionality and to specify a port.\n\n0.8.6f\n-security: Hardened PHP Project Advisory #042005 - Cacti Authentification/Addslashes Bypass Vulnerability\n-security: Hardened PHP Project Advisory #022005 - Cacti Multiple SQL Injection Vulnerabilities\n-security: Hardened PHP Project Advisory #032005 - Cacti Remote Command Execution Vulnerability\n\n0.8.6e\n-bug#0000143: Allow the user to enter 'U' for unknown minimum and maximum data source input values.\n-bug#0000377: Fix logarithmic graph creation issues.\n-bug#0000392: Implement caching to reduce the number of SQL queries needed to render the graph tree.\n-bug#0000402/#0000457: Allow bounds to be set properly for logarithmic graph creation.\n-bug#0000428: Unable to try login again after Access Denied.\n-bug#0000450: Force strict checking for data query parsing to prevent numeric values from being incorrectly handled.\n-bug#0000453: SPAN tag between each character of GraphTitle in Graph Management.\n-bug#0000458: Generate and error message and exit poller.php if the cactid binary path is invalid.\n-bug#0000463: Fix Syslog logging of poller statistics.\n-bug#0000464: Remove dates from Syslog generated messages.\n-bug#0000465: Allow for the mass resize of graphs.\n-bug#0000471: Remove the graph 'Settings' tab if the user is not allowed to save graph settings.\n-bug#0000478: Validate field input values on the Data Templates page. Prevent duplicate data template items from appearing as a result of this bug.\n-bug#0000481: Add several checks to prevent PHP errors when parsing data query XML files.\n-bug: Graph zoom feature had incorrect bounding box when using RRD 1.2.x\n-bug: Speed the generation of the Tree View Dual Pane by caching the Tree to a local session variable.\n-bug: Handle STACK graph items properly in RRDtool 1.2.\n-bug: Prevent data query recaches if the device returns empty input.\n-bug: Fix potential issues with graph gaps when using a large number of poller processes.\n-bug: Fix issues when zooming with new RRDtool 1.2 title fonts with a point size other than 10\n-bug: Fix issues when zooming outside of the select areas causing a broken graph\n-bug: Fix issues experienced when users attempted to create custom graphs and thousands of data sources exist\n-feature: Add ability to filter by host status as well as add ability to filter accross both description and hostname\n-feature: Add additional options to control RRDtool 1.2 fonts.\n-feature: Allow the user to Enable/Disable Data Sources from the user interface and automatically disable hosts when deleting a device.\n-feature: Add Data Source information to the Cacti Log File to assist with troubleshooting.\n-feature: Add html links to both hosts and data sources in the Cacti Log File.\n-security: Fix several remote inclusion bugs that were exploitable when PHP's 'register_global' feature is turned on [IDEF0941], [IDEF1023], [IDEF1024].\n-security: Fix several SQL injection bugs due to improper input validation [IDEF1001].\n\n0.8.6d\n-bug#0000416: Speed up binary net-snmp calls by removing MIB lookup requirement.\n-bug#0000434/#0000403: Allow for periods in script return variable names.\n-bug#0000436: Made snmp.php more like version 0.9 code base.\n-bug#0000419: Fixed session initialization problems with some browsers.\n-bug#0000394: Fixed a web server crash when reordering items in a graph tree.\n-bug#0000390: Remove deep linking in Cacti.\n-bug#0000389: Implement directory security in Cacti.\n-bug#0000443: Add SNMP port/timeout to the Host MIB CPU/disk script queries.\n-bug: Corrected issues encountered when creating multiple graphs from a single graph template.\n-bug: Corrected a problem where no graphs are displayed in the graph tree when authentication is turned off.\n-bug: Allow RRDtool fetch command to retrieve negative numbers.\n-bug: Increased some field lengths for very long OID's.\n-bug: Removed references to non-existing code when attempting to make database connections.\n-bug: Give poller cache more time to process entries during a clear operation, give it more memory.\n-bug: Changed default value in Unix ping script to correct for template bug.\n-bug: Fixed page refresh issue.\n-bug: Fixed include ordering in config.php to accommodate MySQL bugs and logging.\n-bug: Changed SNMP ping OID to be sysUptime because it is more common.\n-bug: Increased PHP timeout to accommodate for long running recache events causing poller issues.\n-bug: LDAP Auth with no DN specified and blank username would allow login.\n-feature: Basic support for RRDtool 1.2 including specifying a default True Type Font.\n-feature: Added support for spike suppression within the cmd.php poller.\n-feature: Support php_snmp version 2 builtin functions.\n\n0.8.6c\n-bug#0000354: User Name field always displays \"admin\" in Mozilla web browser.\n-bug#0000293: JavaScript selection bug on the \"New Graphs\" page.\n-bug#0000352: Problem with the current data source item when using the \"Similar Data Sources\" special data source.\n-bug#0000348: Scale problems with the \"ucd/net - Memory Usage\" graph template.\n-bug#0000358: Problems adding the same graph to more than one graph tree.\n-bug#0000355: Allow scientific and negative numbers to be returned from a script.\n-bug#0000347: Change Order of Graph Templates and Data Queries in Host.\n-bug#0000339: LDAP description misspell 'allow'.\n-bug: Maximum runtime issues with the script server.\n-bug: User could select a data query graph type from \"Graph Templates\", causing duplicate data source items.\n-bug: Auto-recache failed and caused the poller to crash under specific circumstances.\n-bug: Problems saving a user's graph settings from the user admin page.\n-bug: Poller cache not being updated properly for some host types upon change.\n-bug: Hope it's final this time: 95th percentile and bandwidth summation fixes.\n-bug: Added more verbose error handling with template XML importing.\n-bug: Sort host templates when creating a host.\n-bug: Corrected user form edit array problem that didn't show the graph options for an edited user.\n-bug: Access Denied error when user doesn't have console access.\n-bug: Return type bug in cacti_snmp_walk() which could cause extra blank data query rows.\n-feature: Data queries now support indexes that span multiple OIDs (see the manual).\n-feature: Re-apply suggested naming to graphs from the user interface.\n-feature: TreeView-specific feature to speed up rendering the tree for large databases.\n-feature: Added retry logic to the MySQL connect statements.\n-feature: Changed default connect method to a 'pconnect' from a 'connect' to improve performance with large implementations.\n-feature: Add support for Safari on the graph zoom page.\n\n0.8.6b\n-bug#0000318: Only delete the Cacti system user when uninstalling the RPM package rather than during each upgrade.\n-bug: Problems with the 95th percentile and bandwidth summation graph variables.\n-bug: Problem with random gaps in some or all graphs caused by staggered RRDtool update times.\n\n0.8.6a\n-bug#0000287: Non-host based scripts failing to populate the poller cache (0.8.6).\n-bug#0000285: Data query variables on graphs should reflect the data source of each individual graph item (0.8.6).\n-bug#0000289: Check the value of PHP's \"magic_quotes_gpc\" setting to prevent potential security holes (0.8.6).\n-bug#0000295: Problem with the DHTML tree when Cacti is included inside of a parent frame.\n-bug#0000311: Set PHP's \"max_execution_time\" to \"0\" during all upgrades.\n-bug#0000303: Correct the logic that checks if the export path directory exists or not.\n-bug#0000310: Problems viewing data templates with the \"Data Input Method\" set to \"None\".\n-bug#0000304: Problems displaying duplicate data templates on the main \"Data Templates\" screen.\n-bug#0000302: Update the Windows install documentation to mention the \"PHPRC\" environment variable.\n-bug#0000293: Problem with the JavaScript that grays out already created graphs on the \"New Graphs\" page.\n-bug#0000312: Make sure that the \"host_graph\" table is populated in the installer for users coming from a version less than 0.8.4.\n-bug#0000296: Remove references to PHP's ob_flush() function it doesn't exist until verion 4.2.\n-bug#0000314: Respect graph export timing settings.\n-bug: Problem saving a templated graph or data source that contained a checkbox field that had a value different from the default.\n-bug: Typo in graphs.php when placing graph(s) on a tree.\n-bug: Make sure that there is a user logged in before trying to read a per-user graph configuration value.\n-bug: Fix support for multiple cmd.php/cactid polling sessions in a single poller.php session.\n-bug: Revert back to older RRDtool update method as to correct several poller related issues with 0.8.6.\n-bug: Fix PHP-SNMP support in cmd.php.\n-bug: Fix multiple graph/data template corruption issues when converting from graphs or data sources.\n\n0.8.6\n-bug#0000051: HTTP header caching problems (0.8.5).\n-bug#0000121: It is no longer possible to add the same graph twice to a single graph tree branch.\n-bug#0000123: Several UI fixes on the tree item edit page (0.8.5).\n-bug#0000124: Select all check boxes would actually invert the selection.\n-bug#0000128: Graph template item corruption issues (0.8.5a).\n-bug#0000139: Graph tree deletion corruption issue (0.8.5a).\n-bug#0000140: Replaced the 'None' option in several host drop downs with 'Any' and redefined 'None' to mean host = 0 (0.8.5a).\n-bug#0000144: Possible corruption issues when deleting tree items from the root of the tree.\n-bug#0000149: Error using the 'total' type for 95th percentile or bandwidth summation.\n-bug#0000151: Added the ability to duplicate a host template.\n-bug#0000160: A change in Mozilla 1.5+ caused extra vertical space to appear on many table rows throughout the console.\n-bug#0000164: HostMIB scripts do not respect SNMP port and timeout parameters.\n-bug#0000173: Increase the number of characters dedicated to each tier from 2 to 3 which increases the item per tier/branch limit to 999.\n-bug#0000174: Broken thumbnail graphs that contained a 95th percentile HRULE item.\n-bug#0000175: Strip quotes from SNMP output to prevent UI escaping issues.\n-bug#0000176: Added the '-P' argument to 'df' to prevent multi-line output for the query_unix_partitions.pl script.\n-bug#0000179: Updated ADODB to version 4.23 which enabled Cacti work with PHP 5.\n-bug#0000198: Strip greater and less than characters from SNMP output to prevent UI escaping issues.\n-bug#0000214: Rename 'Utilities' to 'System Utilities' and move it under the 'Utilities' menu heading.\n-bug#0000235: Limit the number of pages displayed for graph management, data sources, and devices.\n-bug#0000244: Prevent PHP errors from being displayed during summation/95th percentile calculation when the .rrd file does not exist.\n-bug#0000253: Fixed recursive CDEFs.\n-bug#0000254: CDEF dropdown list in adding another CDEF is not sorted.\n-bug#0000265: Removed \"CANNOT FIND GUEST USER\" error message.\n-bug#0000273: Fixed 'rrdtool fetch' parsing for RRDtool 1.0.9.\n-bug: A hash was not being generated for duplicated graph and data templates which would cause import/export for those templates to fail.\n-bug: A user's graph permissions may fail to delete properly after removing that user.\n-bug: The \"Export Every x Times\" feature did not work correctly.\n-bug: Work correctly with PHP's get_magic_quotes_gpc() turned off.\n-bug: Eliminated potential password injection attack in auth_login.php.\n-bug: Eliminated popen issues in cactid win32 with threads > 1.\n-feature/bug#0000118: Data source screen UI enhancements (0.8.5).\n-feature/bug#0000120: Deleting a tree header should delete all child items (0.8.4).\n-feature/bug#0000125: A forced sort type can be specified for data query indexes which will be used to sort data query results in the UI.\n-feature/bug#0000152: Added filter/search/pagination capabilities to the Devices page.\n-feature/bug#0000155: Allow hosts on the graph tree to be grouped by data query index (ie. switch port, partition, etc) instead of only graph template.\n-feature/bug#0000156: Added the ability to sort a graph tree branch alphabetically or numerically.\n-feature/bug#0000161: Removing a graph now gives the user the option to remove all associated data sources.\n-feature/bug#0000172: Added the ability to control which graph viewing areas should display thumbnail graphs and which ones should display full sized graphs.\n-feature/bug#0000185: Deleting a device gives the user the option of deleting all associated graphs and data sources.\n-feature/bug#0000187: Add host availability and device enabled/disable controls to the main devices page.\n-feature/bug#0000189: Add a system-wide defaults for SNMP community, version, port, timeout and retries configurable under 'Cacti Settings'.\n-feature/bug#0000192: Add the ability to log poller runtime statistics to the log.\n-feature/bug#0000194: Add host availability capability which allows Cacti to track of downed devices as well as a device's uptime history.\n-feature/bug#0000200: Implement three different auto re-index methods which allow Cacti to automatically 'refresh' a data query when an indexes changes.\n-feature/bug#0000213: Add a 'Clear' button to all filter forms which resets the form to its default state.\n-feature/bug#0000240: Add moonman's SIMILAR_DATA_SOURCES_NODUPS CDEF patch.\n-feature/bug#0000250: Allow host/graph tree items to change parents.\n-feature: Data query index types are now automatically selected which eliminates the need to prompt the user for this information at graph creation time.\n-feature: Better message handling on the \"New Graphs\" page.\n-feature: Get rid of the \"Data Input Method\" box from the data query edit screen as this data can be automatically derived.\n-feature: Customizable log levels.\n-feature: Ability to log to syslog (Unix) and event log (Windows) in addition to the log file.\n-feature: UDP/ICMP/SNMP ping support used to determine a host's availability status.\n-feature: A PHP script server which enables PHP script to be interpreted by the poller without spawning a separate PHP process for each item. See the manual for more details.\n-feature: Ability to choose the type of poller (cmd.php, cactid) and number of threads (cactid only) from the UI.\n-feature: Ability to spawn multiple simultaneous cmd.php/cactid processes to speed up the polling process.\n-feature: Allow data templates and data sources that use SNMP to override host fields (hostname, snmp port, etc) in the poller cache.\n-feature: Added Eric Steffen's Bonsai patch which enables users to zoom a graph by dragging a box around the area of interest.\n-feature: Added branix's graph export enhancements patch which adds many more graph export configuration options including remote FTP support.\n-feature: Ability to view/clear the log file from the console.\n-feature: Use a single RRDtool stdin pipe for all update, create, and graph export actions.\n-feature: Advanced timespan selector which provides a large number of presets and a calendar control for custom timespans.\n-feature: Better support for SNMP v2 from UI.  Speed up some UI queries.\n-feature: Enable/Disable Poller from UI.\n-feature: Added ifOperStatus to Graph Creation page to show either Up or Down.\n-feature: Rearchitected poller subsystem to prepare for multiple poller architecture in future releases.\n-feature: Added validation logic in the pollers to prevent system and log anomalies.\n-feature: Removed SNMP v3 options until SNMP v3 is supported.\n\n0.8.5a\n-bug#84: Updated internal CDEF caching to take CFs into account.\n-bug#86: Updated the LDAP code to correctly copy template users.\n-bug#136: Inaccurate total bandwidth readings for RRAs with a step > 1.\n-bug#138: Typo on install/index.php\n-bug#141: Incorrect pre-requisite file check when doing a graph export.\n-bug#142: Added the '-t' option when calling ucd-snmp or net-snmp to support numeric timeticks.\n-bug#145: phpMyAdmin was choking on the import of cacti.sql.\n-bug#146: Minor HTML fix in lib/form.php\n-bug: Fixed potential graph item input corruption when saving a graph template item.\n-bug: Fixed problem saving a data source using a template that had more than one item.\n-bug: Correctly display the console menu when authentication has been turned off.\n-bug: Correctly display the two pane tree when authentication has been turned off.\n-bug: Support regular expression characters in passwords: \\+*?[^]$(){}=!<>|:\n-bug: Fixed certain re-ordering problems when deleting branches from a graph tree.\n-bug: Add support for a 3 digit exponents in RRDtool fetch output on Windows.\n-bug: Correctly escape community strings with a quotation mark under Windows.\n-bug: 95th percentile and bandwidth summation code should result in less errors when things don't go as planned.\n-bug: Fix 'data_input_data_fcache' orphan when deleting a data source.\n-feature: Make the 'None' option on the graph management and data sources host filter dropdowns only display items with no host assigned. Add an 'Any' option to display items assigned to all hosts.\n-cactid: Fix segfault problems on all platforms when performing SNMP queries.\n-cactid: Fix deadlock issues on Windows and Solaris when making popen calls.\n\n0.8.5\n-bug#102: Fix problem with SNMP community strings that contain certain variable shell characters.\n-bug#103: Under \"New Graphs\", make sure to highlight the host template line when the right-hand checkbox is selected.\n-bug#104: Typo in the usage for the query_unix_partitions.pl script.\n-bug#105: On the data query edit page, only display compatible items in the \"Data Input Method\" dropdown.\n-bug#106: Render the main menu based on a user's permissions so graph-only users cannot see a list of menu options when attempting to view 'index.php'.\n-bug#109: Replaced all instances of 'ifDesc' with the correct 'ifDescr' when dealing with the IF MIB.\n-bug#110: Be smarter about redirecting the user to the correct page when the user's login option is set to \"Show the page that user pointed their browser to\".\n-bug#111: Take host permissions into account when rendering the left-hand pane in tree view.\n-bug#112: Every 10th tree item was not being displayed.\n-bug#115: Fixed a bunch of misspellings of the word 'substitute' throughout the code.\n-bug#116: Restructured the edit screens for CDEF items and tree items, making them less confusing to users.\n-bug#119: Added a \"Search:\" label to the filter textboxes on the \"Graph Management\" and \"Data Sources\" pages.\n-bug#127: Added an HTML \"title\" tag to the three graph mode images.\n-bug#129: Added support for correctly parsing timeticks in both cmd.php and cactid.\n-bug#130: Users are sometimes redirected to the incorrect host when selecting the \"Create Graphs for this Host\" link under \"Polling Hosts\".\n-bug#131: Load averages above '10' were not being returned correctly from the loadavg_multi.pl script.\n-bug#133: Non-SNMP data sources were not being removed from the poller cache when a host became 'disabled'.\n-bug#134: Make sure to delete associated 'host' tree items when deleting a host.\n-bug#135: Fix the navigation display so it doesn't display errors when directly linking to a graph.\n-bug#137: Remove the 'td.shadow' CSS class as it isn't being used and contains an incorrect image reference.\n-bug: Allow the user to enter a \"Unit Exponent Value\" of '0'.\n-bug: Remove all references to $_SERVER[\"HTTP_REFERER\"] for web servers that do not include this variable.\n-bug: Extend the \"Maximum JavaScript Rows\" feature to work for host templates as well.\n-bug: Fixed a few parsing problems that were causing problems for users including a '\\' or '/' in their script's input string.\n-bug: The correct representation of memory usage using net-snmp should be 'free memory + cache memory + buffered memory'.\n-bug: Fixed a problem importing CDEF items correctly from an XML file.\n-bug: Deleting a GPRINT preset now correctly displays the name of the item about to be removed.\n-bug: Problems importing XML that contained a host template with more than one associated graph template.\n-bug: Added a potential workaround for the PHP session/popen bug which occurs on Windows systems using PHP in ISAPI mode.\n-feature: Data query variables such as |query_ifAlias| can now be included on the actual graph in the \"Text Format\" or \"Value\" field.\n-feature: Added two new special data sources to CDEFs, which enable users to use the data source's maximum or minimum value in a CDEF.\n-feature: Added a new SNMP query source type, \"VALUE/REGEXP\", which enables users to parse the SNMP value with a regular expression before passing it onto Cacti.\n-feature: Hide the \"Console\" tab from users that only have rights to view graphs.\n-feature: Added a new 95th percentile type, \"max\", which calculates 95th percentile based on the maximum of either inbound or outbound for each sample. This is how most co-location facilities calculate 95th percentile for billing purposes.\n-feature: Update ADODB to version 4.05.\n-feature: Data source graph inputs are automatically added and maintained by Cacti for new graph templates as to reduce user confusion.\n-feature: The \"Graph Management\" and \"Data Sources\" edit pages are much improved when using a template.\n-feature: Renamed \"Polling Hosts\" to \"Devices\" since polling hosts technically implies that you are managing the hosts that poll data, which could be reserved for later use.\n-feature: If you enter a value for a \"host field\" in the data template, Cacti will use that value rather than always defaulting to the host. If you leave it blank, Cacti will use the value from the host.\n-feature: Data input method type codes 'snmp_timeout' and 'snmp_port' are now supported.\n-feature: Users will only see tabs for the graph viewing modes that they have access to.\n-doc: Completely re-written manual in SGML/Docbook so HTML, PDF, and ASCII versions of the manual are now possible. The new manual also includes a better introduction to Cacti for new users and makes use of screen shots to illustrate various portions of the user interface.\n-cactid: Fixed segfault problems using cactid on Solaris platforms.\n\n0.8.4\n-bug#87: Deleting top level branches without children on the tree caused ordering problems.\n-bug#88: Possibly popen/pclose concurrency problem with cactid.\n-bug#89: Missing \"check all\" checkbox on polling hosts page when an empty column was drawn.\n-bug#91: Fix undefined index errors on data source checkbox popups.\n-bug#92: Fix undefined index errors on graph management checkbox popups.\n-bug#96: Problems creating graphs from data queries where there was only row row total in the query result.\n-bug#97: Typo in cmd.php\n-bug#98: Creating a data source or graph with no host or template, would result in an extra empty item.\n-bug#99: Deleting a graph or data template that was still attached to one or more items would cause the graph/data source to appear to still have the deleted template still attached.\n-bug: Removed size limits on Linux memory data template.\n-bug: Undefined variable errors when creating new graphs/data sources without a template.\n-bug: multiple problems that caused the Windows disk space and CPU graphs to stop working.\n-bug: Broken images for bandwidth summation graphs that were less than a day old.\n-bug: Graph order changes on the tree would affect other graph trees.\n-bug: Problem with the \"Host MIB - Hard Drive Space\" data template that broke Windows disk spaces graphs.\n-bug: Fixed the LDAP authentication code, which was partially broken in 0.8.3.\n-bug: Fixed a cmd.php parsing problem when input and output fields are sharing the same name.\n-bug: Added basename() to all PHP_SELF references to make sure all hrefs stay absolute.\n-bug: The RRA field is now honored for the dual pane tree view.\n-bug: The |date_time| graph variable now displays the current day of the month.\n-feature: The \"Total All Items\" CDEF is now able to total NaN's without becoming 'U'.\n-feature: Data query results are now grayed out if they have already been created.\n-feature: The \"cacti Web Root\" and \"Web Server Document Root\" settings are completely auto-detected now.\n-feature: Add SNMP port and SNMP timeout fields to each host.\n-feature: Removed the \"Management IP\" field in polling hosts in favor of \"Hostname\".\n-feature: Re-organized the menus expand/contract for less used items to help save vertical space.\n-feature: Added complete template to XML import and export support.\n-feature: Moved the graph creation features of \"Polling Hosts\" to a new menu item,\"New Graphs\".\n-feature: Added verbose debugging support for data queries.\n-doc: Added a FAQ.\n-cactid: Removed lots of potential buffer overflows.\n-cactid: Several libz/openssl autoconf fixes that improve FreeBSD 5.x support.\n-cactid: Fixed some potential segfaults on FreeBSD when reading information from the targets table.\n-cactid: The snmp_get() function now respects the SNMP version chosen under \"Polling Hosts\", so 64-bit counters should work.\n\n0.8.3a\n-bug#81: Partial/complete poller cache rebuild failure after an upgrade.\n-bug#82: Undefined variable error messages under win32/IIS.\n-bug: Problems with overlapping graph permissions with multiple users.\n\n0.8.3\n-bug#50: When viewing a graph, only display it for the RRAs used on the graph.\n-bug#66: Users can see a list of all hosts in graph preview mode.\n-bug#71: Extra escape characters in the |date_time| variable output.\n-bug#72: Disk space graph for ucd/net was broken for original 0.8 users.\n-bug#75: Problems monitoring more than one CPU with query_host_cpu.php.\n-bug#76: Cactid segfault on Solaris caused by unchecked use of NULL with sprintf.\n-bug#77: Cactid segfault upon a MySQL connect error.\n-bug#79: Check for unique/valid data when the user selects a field to index their new data sources off of.\n-bug: Redirect user to the correct page after a forced password change.\n-bug: Problems entering negative numbers for upper/lower limit fields on graph pages.\n-bug: Never try to use internal SNMP support if SNMP version 2 or 3 is selected.\n-bug: Adding or removing data source items in a data template should update attached data sources as well.\n-bug: Problems updating certain fields when switching or turning off both graph and data templates.\n-bug: Got rid of the \"Use Per-Data Source Value\" checkbox where it isn't usable.\n-bug: Strange sequence/ordering behavior after updating an already created tree item.\n-bug: Error message displayed instead of 'Access Denied' message.\n-feature: Added host and graph template permissions for graph viewing users.\n-feature: Added a new 'dual pane' tree view type that draws the graph trees on a DHTML tree on the left side of the page.\n-feature: Added the ability to add hosts to a tree.\n-feature: Added a 'timespan' field to \"Round Robin Archives\" to determine the timespan (in seconds) of graphs using each RRA.\n-feature: Completely replaced the header images/layout for both the console and graph viewing pages\n-feature: Added a navigation bar in the header so you can keep track of you location in the UI.\n-feature: Added bandwidth summation support. See the manual for more information.\n-feature: Made the installer more verbose about SQL it runs during an upgrade.\n-cactid: Changed threading strategy to spawn threads based on hosts.\n-cactid: Created header files for each source file and moved precasts out of cactid.h.\n-cactid: A bunch of autoconf updates.\n\n0.8.2a\n-bug: Fixed various problems updating the poller cache.\n-bug: Fixed the Weatherbug script to work under Redhat 9.\n-cactid: Updated poller to use detached threads based on each host.\n\n0.8.2\n-bug#47: The 'cacti_server_os' variable is now auto-detected.\n-bug#56: Possible endless loop for non 0.8 users in version upgrade loop.\n-bug#57: Cacti does not take the 'graph_tree_id' column into account when re-ordering trees which can cause unexpected results.\n-bug#59: Regular expression bug that caused 'query_unix_partitions.pl' not to function on FreeBSD.\n-bug#60: Incorrect index OID in the (currently unused) 'host_disk.xml' SNMP query.\n-bug#61: Problems adding additional graph items to an input after the template is in use by graphs.\n-bug#64: Cactid now checks for the RRDtool path in the 'settings' table.\\\n-bug#67: Problems with wrapping and 'diskfree.pl'.\n-bug: Problems deleting GPRINT presets.\n-bug: Undefined variable errors on the graph settings page if built in user authentication was turned off.\n-bug: Kill cached field value when messages are displayed.\n-bug: Graph trees now honor the RRA selected when creating the tree (andyfud.org.nz)\n-bug: Graph and data source titles are now properly updated when making changes to graph or data templates.\n-bug: Unexpected results when trying to delete top level branches from a graph tree.\n-bug: Problems expanding/contracting trees when two or more nested branches had the hidden flag set.\n-feature: Added ability to turn off checks for an entire host.\n-feature: Added SNMP and operating system variable printout to the about page.\n-feature: Added 95th percentile support. See the manual for more information.\n-feature: Added setting for data query maximum field length.\n-cactid: Added downed host detection.\n-cactid: Code cleanup: formatting, compiler warnings, and removal of unused functions.\n-cactid: Daemon support has been removed from cactid for the time being, it must be run out of CRON.\n-cactid: Have autoconf detect net-snmp before trying ucd-snmp to prevent failure on default Redhat installs.\n\n0.8.1\n-bug#40: Fixed OIDs in serveral Netware data templates.\n-bug#41: Data source and graph names are lost when created from a  template.\n-bug#44: Fixed Host MIB logged in users OID in data template.\n-bug#46: Fixed an RRDtool/PHP binary variable mixup on the install page for win32 users.\n-bug#48: Changed the \"Create\" button on the settings page to \"Save\".\n-bug#52: Make sure the data source/graph names are pulled down after clicking \"Create\", so the user can press cancel.\n-bug: Changed references from $_SERVER[\"SCRIPT_NAME\"] to $_SERVER[\"PHP_SELF\"] because of strange behavior on PHP 4.3.2 under Windows.\n-bug: Make sure to filter on the \"cached title\" for on both the data sources and graph management pages.\n-bug: Fixed error when debug mode was on and the user tried to add a new graph or data source.\n-bug: Take tree permissions into account when displaying the \"Default Tree\" dropdown on the graph settings page.\n-bug: Incorrect graph title was displayed on graph tree delete confirmation.\n-bug: Win32: Graphs were being exported even when the graph export path was left blank.\n-bug: Exported graphs were displayed in the incorrect order.\n-bug: Legends were not displayed on exported graphs.\n-bug: HRULE items caused graphs to break.\n-feature: You can now use negative VRULE items, such as '-12:00' to display a line 12 hours ago.\n-bug: Data queries that had a non-integer index would not render graph/data source titles properly.\n-auth: LDAP authentication updates\n\n0.8\n-feature: Added support for graph, data source, and host templates.\n-feature: Added a stricter concept of hosts which enables better organization and easier graph creation.\n-feature: Created data queries which enable the retrieval of indexable data in the form of a query.\n-feature: Revised the entire UI creating more functional and attractive forms.\n-feature: New generic poller interface enables other pollers to handle the data gathering for Cacti.\n-feature: Added support for net-snmp 5.x.\n-docs: Revised the install documentation and re-wrote the manual for this version.\n-feature: The beginnings of a threaded c-based poller (cactid), which is not completely function at this point.\n-feature: And much much more...\n\n0.6.8a\n-bug: Unchecked string being passed to rrdtool caused a potential security problem.\n-bug: The logout funtionality was broken for some users because of a missing fourth argument.\n-bug: Fixed some SNMP parsing problems.\n-bug: Fixed a problem with using quotes for data source input.\n\n0.6.8\n-feature: Added the following new rrdtool graph options: --units-exponent value, --unit, and --logarithmic.\n-feature: Added the ability to show exact numbers in GPRINT, users can now specify a custom GPRINT string on a per-graph item basis.\n-bug: Any data input source with more than one output would be added as a multi-data source .rrd file.\n-bug: Some data source file name issues.\n-bug: Cacti now checks to see if a host exists when adding it to be graphed.\n-feature: There is now an optional \"remove verification\" for most of cacti's dialogs.\n-feature: There is a \"logout\" button when viewing graphs (not for the guest user).\n-docs: Updated the Win32 docs (thanks Larry).\n-bug: Fixed some rare HTML \"multipart/form\" bugs with PHP.\n-feature: Added a \"Default View Mode\" for each user when viewing graphs.\n-bug: Fixed some bugs where you would change a parent graph item to a child or a child graph item to a parent when graph grouping was turned on.\n-bug: Fixed some potential security bugs by eliminating cacti's use of cookies.\n\n0.6.7\n-feature: Added a \"none\" option for a data source when creating a CDEF. This can be used if you check the \"Use the current data source being used on the graph instead of a preset one\" box.\n-feature: Each user has a default graph policy: ALLOW or DENY for their graph permissions.\n-bug: Unique .rrd filename/data source name issues for SNMP \"Make Graph\" have been fixed.\n-feature: Changing the data source for a graph group parent will change the data sources for each of the child items.\n-bug: Logging has been fixed so errors do not show up in the Apache error_log any more.\n-bug: VRULE's work correctly now. Enter a time in the \"value\" field to use them, such as \"00:00\" or \"14:00\".\n-feature: If you select a graph to be added to the graph hierarchy, the \"This Item is a Graph\" checkbox is automatically selected.\n-docs: Install docs have been updated for Unix/Win32, documentation on upgrading cacti has been added. See the 'docs/' directory for more information.\n-bug: SNMP can function on win32/unix without snmpwalk/snmpget binaries. This will only work if you have php-snmp support compiled into both your php binary and web server modules. This is already the case for win32.\n-bug: A bug when more than one data source was created using the same data input source with multiple outputs has been fixed.\n-feature: The default install/upgrade screen has been revised.\n\n0.6.6\n-feature: Multiple data sources per .rrd is supported. To use this feature, simply create a data input source with multiple outputs that 'Update RRA'.\n-feature: Graph item grouping, which enables you to delete/reorder groups of similair graph items.\n-feature: Graph preview and output preview in the console, which allows you to preview what a graph will look like/what rrdtool's output is.\n-feature: Graph-based permissions have added, you can also show/hide certain hierarchies per user.\n-feature: Multiple data source per .rrd file support, read the docs for more information.\n-feature: You can now export graphs to static png's/html's every n times.\n-feature: By default, SNMP data source names come from <IP>_<IFNUM>, instead of just <IFDESC> which is more unique.\n-feature: More options for users such as where to go when the user logs in and whether the user can have their own settings or not.\n\n0.6.5\n-bug: Fixed some of the data source naming issues. You can now use any data source name you want; cacti will take care of making the name \"rrdtool friendly\".\n-feature: Cacti will use PHP's builtin SNMP support if detected, SNMP is overall faster now too. NOTE: PHP's SNMP support may not work with all of your MIB names, you may have to use the OID instead!\n-feature: Basic high speed counter support has been added, use 'hcin'/'hcout' to use it. Also may not work with PHP's builtin SNMP support yet.\n-bug: Using the MAX consolidation function with graph data works better now. You can make graphs that look like the MRTG ones (5 minute maximum). This code still needs a little work though.\n\n0.6.4\n-bug: You can now add the same CDEF to multiple data sources in the same graph.\n-feature: Ability to \"sync\" changes with the .rrd file with rrdtool's TUNE function. Cacti also tries to fill in internal data source path and name information to keep graphs from \"breaking\" when possible.\n-settings: You can now change the PHP Binary path from within cacti.\n-feature: Cacti can now export static images/html files when it gathers data like MRTG did.\n-feature: Multiple graph hierarchies are supported.\n-feature: You can now \"zoom in\" on any portion of the graph hierarchy by clicking on a header item.\n-bug: Some changes were made to make cacti more win32 complaint; a tutorial on how to setup cacti on win32 can be found on the raXnet page.\n-feature: You can now create all graphs for an SNMP host with one click.\n-feature: You can customize the graph title when creating graphs using the 'Make Graph' or 'Make All Graphs' link.\n-feature: Data sources in cacti are no longer limited to 19 characters. If you create a data source name that rrdtool will not like, cacti will automatically modify the name and save it internally for rrdtool-only use.\n\n0.6.3\n-feature: Put limits (HTML 'maxlength') on fields that have a maximum length.\n-feature: Added 'cacti Settings' and 'User Administration' to the cacti menu.\n-feature: Added a 'Step' field for Data Sources to graph data at non-300 second intervals.\n-feature: Added a '--rigid' on/off option, plus the ability to choose between '--alt-autoscale' and '--alt-autoscale-max' when using auto scale.\n-feature: Added a 'Base Value' field to the graphs to adjust how the vertical axis is displayed.\n-feature: Updated the menu/header graphics for a smoother look and easier navigation.\n-feature: cacti now stores its settings in the database instead of config.php, so they can be manipulated under 'cacti Settings'. Database credentials are still located in config.php however.\n-feature: Added a preview of the rrdtool source when creating data sources.\n-feature: Added a \"data source duplicate\" function and moved \"graph duplicate\" to \"Graphs\" on the cacti menu.\n-settings: You can now turn on/off cacti's builtin authentication.\n-settings: You can control what is logged (create, graph, snmp, update).\n-feature: Added a \"Total All Data Sources\" CDEF, which can be used to represent the total of all of the data on a graph.\n-bug: Fixed a few add/edit/delete form-related bugs.\n-docs: Added some more content to the documentation and made it more visible from within cacti.\n\n0.6.2\n-bug: Fixed some bugs when creating CDEF's using multiple data sources.\n-bug: Fixed more SNMP parsing bugs with some versions of net-snmp.\n-feature: added an \"auto-refresh\" feature to the graphs (thanks Nossie).\n-bug: HRULE's and VRULE's acually work now.\n-docs: the beginnings of some real documentation.\n-bug: you can select the color black now.\n\n0.6.1\n-bug: Fixed a parsing bug with snmp, more parsing is done in cacti's code and not via arguments passed to snmpget.\n-auth: Updated the function used to hash passwords (more compatible with older MySQL versions), more strict on document caching.\n-feature: Easier installation: cacti now checks for common problems and gives suggestions. Database updates are also done at this time.\n-bug: Fixed a problem with adding new data input sources.\n-bug: Problem saving the wrong numbers for 'Round Robin Archives'.\n-feature: Ability to preview the output of the cron script from a web browser under 'Cron Printout'.\n-feature: Added 'Logout User' to the menu.\n-bug: Removed some occurances of /var/www/html and replaced them with more dynamic variables.\n\n0.6\n-new tree code\n-some html table issues in graph view mode\n-fixed the settings code for saved graph-view data\n\n0.5\n-initial release\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* include ldap support */\ninclude_once(__DIR__ . '/lib/ldap.php');\n\n/* set default action */\nset_default_action();\n\n/**\n * get the username from the post variable\n * For all but basic, this means that two post variables must be\n * set.  Additionally, for basic authentication verify the user,\n * and if not valid generate a fatal error.\n */\n$username = auth_get_username(); // Get the username from either basic auth or the login form\n$version  = get_cacti_version(); // Get the current Cacti version\n\n/* initialize some variables */\n$user          = array();                             // An array that will include all user details\n$user_enabled  = true;                                // A variable to let plugins know that the user is enabled\n$guest_user    = false;                               // Indicates the Guest account is being used\n$realm         = 0;                                   // The compensated realm used for template and user validation\n$frv_realm     = get_nfilter_request_var('realm', 0); // The dropdown value for realm\n$auth_method   = read_config_option('auth_method');   // The authentication method for Cacti\n$error         = false;                               // Global variable, will be true if any errors occur\n$error_msg     = '';                                  // The errors message in case there was a login error\n\n/* global variables for exception handling */\nglobal $error, $error_msg;\n\nif (get_nfilter_request_var('action') == 'login' || $auth_method == 2) {\n\tif ($auth_method > 2 && $frv_realm <= 1) {\n\t\t// User picked 'local' from dropdown;\n\t\t$auth_method = 1;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\t// Compensate as the dropdown for LDAP is off by one\n\tif ($frv_realm == 2) {\n\t\t$realm = 3;\n\t} elseif ($auth_method == 2) {\n\t\t$realm = $auth_method;\n\t} else {\n\t\t$realm = $frv_realm;\n\t}\n\n\tcacti_log(\"DEBUG: User '\" . $username . \"' attempting to login with realm \". $frv_realm . \", using method \" . $auth_method, false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\tswitch ($auth_method) {\n\t\tcase '0': // No authentication, should not be reachable\n\t\t\t$error     = true;\n\t\t\t$error_msg = __esc('Cacti no longer supports No Authentication mode. Please contact your System Administrator.');\n\n\t\t\tcacti_log(\"FATAL: No authentication attempted and not supported.\", false, 'AUTH');\n\n\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\texit;\n\n\t\t\tbreak;\n\t\tcase '1': // Local authentication\n\t\t\tcacti_log(\"DEBUG: Local User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = local_auth_login_process($username);\n\n\t\t\tbreak;\n\t\tcase '2': // Basic authentication\n\t\t\tcacti_log(\"DEBUG: Basic Auth User '\" . $username . \"' attempting to login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = basic_auth_login_process($username);\n\n\t\t\tbreak;\n\t\tcase '3': // LDAP Authentication\n\t\t\tcacti_log(\"DEBUG: LDAP User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = ldap_login_process($username);\n\n\t\t\tbreak;\n\t\tcase '4': // LDAP Domains login\n\t\t\tcacti_log(\"DEBUG: Domains User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = domains_login_process($username);\n\n\t\t\tbreak;\n\t\tdefault: // Login Realm not determined\n\t\t\t$error     = true;\n\t\t\t$error_msg = __esc('Unable to determine user Login Realm or Domain. Please contact your System Administrator.');\n\n\t\t\tcacti_log(\"LOGIN FAILED: User '\" . $username . \"' Unable to determine Login Realm.  Exiting.\", false, 'AUTH');\n\n\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\texit;\n\n\t\t\tbreak;\n\t}\n\n\t/* Create user from template if available */\n\tif (!$error && !cacti_sizeof($user) && get_template_account($username) > 0 && $username != '') {\n\t\t$user = auth_login_create_user_from_template($username, $realm);\n\t}\n\n\t/* Guest account checking - Not for builtin */\n\tif (!$error && !cacti_sizeof($user) && get_guest_account() > 0) {\n\t\t/* Locate guest user record */\n\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_guest_account()));\n\n\t\tif ($user) {\n\t\t\tcacti_log(\"LOGIN: Authenticated user '\" . $username . \"' using guest account '\" . $user['username'] . \"'\", false, 'AUTH');\n\n\t\t\tif ($username != '' && get_template_account($username) == 0) {\n\t\t\t\traise_message('template_disabled', __('User was Authenticated, but the Template Account is disabled.  Using Guest Account'), MESSAGE_LEVEL_WARN);\n\t\t\t}\n\n\t\t\t$guest_user = true;\n\t\t} else {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  Guest user id %s does not exist.  Please contact your Administrator.', read_config_option('guest_user'));\n\n\t\t\tcacti_log(\"LOGIN FAILED: Unable to locate guest user '\" . read_config_option('guest_user') . \"'\", false, 'AUTH');\n\n\t\t\tif ($auth_method == 2) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* We have a valid user, do final checks, log their login attempt, and redirect as required */\n\tif (!$error && cacti_sizeof($user)) {\n\t\tif (!$guest_user) {\n\t\t\tcacti_log(\"LOGIN: User '\" . $user['username'] . \"' authenticated\", false, 'AUTH');\n\t\t} else {\n\t\t\tcacti_log(\"LOGIN: Guest User '\" . $user['username'] . \"' in use\", false, 'AUTH');\n\t\t}\n\n\t\t$client_addr = get_client_addr('');\n\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t(username, user_id, result, ip, time)\n\t\t\tVALUES (?, ?, 1, ?, NOW())',\n\t\t\tarray($username, $user['id'], $client_addr));\n\n\t\t/* check if the user account is enabled with the exception of guest users */\n\t\t$user_enabled = true;\n\t\tif (!$guest_user && isset($user['enabled'])) {\n\t\t\t$user_enabled = ($user['enabled'] == 'on' ? true:false);\n\t\t}\n\n\t\t/* check if the user is enabled */\n\t\tif (!$user_enabled) {\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  User account disabled.');\n\n\t\t\tif ($auth_method == 2) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\tif (!$error && !auth_user_has_access($user)) {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('You do not have access to any area of Cacti.  Contact your administrator.');\n\n\t\t\tcacti_log(sprintf(\"LOGIN FAILED: User %s with id %s does not have access to any area of Cacti.\", $user['username'], $user['id']), false, 'AUTH');\n\n\t\t\tif ($auth_method == 2) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t/* remember me support.  Not for guest of basic auth */\n\t\tif ($auth_method != 2 && $user['id'] !== get_guest_account()) {\n\t\t\tif (!$error && isset_request_var('remember_me') && read_config_option('auth_cache_enabled') == 'on') {\n\t\t\t\tset_auth_cookie($user);\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t/* set the php session */\n\t\t\t$_SESSION['sess_user_id'] = $user['id'];\n\n\t\t\t/* handle 'force change password' */\n\t\t\tif ($user['must_change_password'] == 'on' && $auth_method == 1 && $user['password_change'] == 'on') {\n\t\t\t\t$_SESSION['sess_change_password'] = true;\n\t\t\t}\n\n\t\t\tif (db_table_exists('user_auth_group')) {\n\t\t\t\t$group_options = db_fetch_cell_prepared('SELECT MAX(login_opts)\n\t\t\t\t\tFROM user_auth_group AS uag\n\t\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\t\tON uag.id=uagm.group_id\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND login_opts != 4',\n\t\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\t\tif (!empty($group_options)) {\n\t\t\t\t\t$user['login_opts'] = $group_options;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (user_setting_exists('user_language', $_SESSION['sess_user_id'])) {\n\t\t\t\t$_SESSION['sess_user_language'] = read_user_setting('user_language');\n\t\t\t}\n\n\t\t\tcacti_log(\"DEBUG: User '\" . $username . \"' about to re-direct to preferred login page\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tauth_login_redirect($user['login_opts']);\n\t\t}\n\t} else {\n\t\t$id = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = ?',\n\t\t\tarray($username, $frv_realm));\n\n\t\tswitch($frv_realm) {\n\t\t\tcase '0':\n\t\t\tcase '1':\n\t\t\t\t$realm_name = 'Local';\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\t\t$realm_name = 'LDAP';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$realm_name = 'Domains LDAP';\n\t\t\t\tbreak;\n\t\t}\n\n\t\t/* BAD username/password builtin and LDAP */\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t(username, user_id, result, ip, time)\n\t\t\tVALUES (?, ?, 0, ?, NOW())',\n\t\t\tarray($username, !empty($id) ? $id:0, get_client_addr('')));\n\n\t\tcacti_log('LOGIN FAILED: ' . $realm_name . \" Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr('') . \"'.\", false, 'AUTH');\n\t}\n}\n\nif (api_plugin_hook_function('custom_login', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\treturn;\n}\n\n$selectedTheme = get_selected_theme();\n\n?>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n\t<?php html_common_header(api_plugin_hook_function('login_title', __('Login to Cacti')));?>\n</head>\n<body class='loginBody'>\n\t<div class='loginLeft'></div>\n\t<div class='loginCenter'>\n\t<div class='loginArea'>\n\t\t<div class='cactiLoginLogo'></div>\n\t\t\t<legend><?php print __('User Login');?></legend>\n\t\t\t<form id='login' name='login' method='post' action='<?php print get_current_page();?>'>\n\t\t\t\t<input type='hidden' name='action' value='login'>\n\t\t\t\t<?php api_plugin_hook_function('login_before',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'error'        => $error,\n\t\t\t\t\t\t'error_msg'    => $error_msg,\n\t\t\t\t\t\t'username'     => $username,\n\t\t\t\t\t\t'user_enabled' => $user_enabled,\n\t\t\t\t\t\t'action'       => get_nfilter_request_var('action')\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t?>\n\t\t\t\t<div class='loginTitle'>\n\t\t\t\t\t<p><?php print __('Enter your Username and Password below');?></p>\n\t\t\t\t</div>\n\t\t\t\t<div class='cactiLogin'>\n\t\t\t\t\t<table class='cactiLoginTable'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_username'><?php print __('Username');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='login_username' name='login_username' value='<?php print html_escape($username); ?>' placeholder='<?php print __esc('Username');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_password'><?php print __('Password');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='password' autocomplete='new-password' class='ui-state-default ui-corner-all' id='login_password' name='login_password' placeholder='********'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif (read_config_option('auth_method') == '3' || read_config_option('auth_method') == '4') {\n\t\t\t\t\t\t\tif (read_config_option('auth_method') == '3') {\n\t\t\t\t\t\t\t\t$realms = api_plugin_hook_function('login_realms',\n\t\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\t\t'1' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => __('Local'),\n\t\t\t\t\t\t\t\t\t\t\t'selected' => false\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t'2' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => __('LDAP'),\n\t\t\t\t\t\t\t\t\t\t\t'selected' => true\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$realms = get_auth_realms(true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// try and remember previously selected realm\n\t\t\t\t\t\t\tif ($frv_realm && array_key_exists($frv_realm, $realms)) {\n\t\t\t\t\t\t\t\tforeach ($realms as $key => $realm) {\n\t\t\t\t\t\t\t\t\t$realms[$key]['selected'] = ($frv_realm == $key);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='realm'><?php print __('Realm');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<select id='realm' name='realm' class='ui-state-default ui-corner-all'><?php\n\t\t\t\t\t\t\t\t\tif (cacti_sizeof($realms)) {\n\t\t\t\t\t\t\t\t\t\tforeach($realms as $index => $realm) {\n\t\t\t\t\t\t\t\t\t\t\tprint \"\\t\\t\\t\\t\\t<option value='\" . $index . \"'\" . ($realm['selected'] ? ' selected=\"selected\"':'') . '>' . html_escape($realm['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } if (read_config_option('auth_cache_enabled') == 'on') { ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t<input style='vertical-align:-3px;' type='checkbox' id='remember_me' name='remember_me' <?php print (isset($_COOKIE['cacti_remembers']) || !isempty_request_var('remember_me') ? 'checked':'');?>>\n\t\t\t\t\t\t\t\t<label for='remember_me'><?php print __('Keep me signed in');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Login');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t<?php api_plugin_hook('login_after'); ?>\n\t\t\t</form>\n\t\t\t<div class='loginErrors'>\n\t\t\t\t<?php\n\t\t\t\tif ($error) {\n\t\t\t\t\tprint $error_msg;\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class='versionInfo'><?php print __('Version %1$s | %2$s', $version, COPYRIGHT_YEARS_SHORT);?></div>\n\t</div>\n\t<div class='loginRight'></div>\n\t<script type='text/javascript'>\n\tvar storage = Storages.localStorage;\n\n\t$(function() {\n\t\tif (storage.isSet('user_realm')) {\n\t\t\tvar preferredRealm = storage.get('user_realm');\n\t\t} else {\n\t\t\tvar preferredRealm = null;\n\t\t}\n\n\t\tif (preferredRealm == null) {\n\t\t\tpreferredRealm = $('#realm option:selected').val();\n\t\t}\n\n\t\t// Restore the preferred realm\n\t\tif ($('#realm').length) {\n\t\t\tif (preferredRealm !== null) {\n\t\t\t\t$('#realm').val(preferredRealm);\n\t\t\t\tif ($('#realm').selectmenu('instance') !== undefined) {\n\t\t\t\t\t$('#realm').selectmenu('refresh');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Control submit in order to store preferred realm\n\t\t$('#login').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tif ($('#realm').length) {\n\t\t\t\tstorage.set('user_realm', $('#realm').val());\n\t\t\t}\n\t\t\t$('#login').off('submit').trigger('submit');\n\t\t});\n\n\t\t$('body').css('height', $(window).height());\n\t\t$('.loginLeft').css('width',parseInt($(window).width()*0.33)+'px');\n\t\t$('.loginRight').css('width',parseInt($(window).width()*0.33)+'px');\n<?php if (empty($username)) { ?>\n\t\t$('#login_username').focus();\n<?php } else { ?>\n\t\t$('#login_password').focus();\n<?php } ?>\n\t});\n\t</script>\n\t<?php include_once(__DIR__ . '/include/global_session.php');?>\n</body>\n</html>\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2020 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/*\n * Make sure these values reflect your actual database/host/user/password\n */\n\n$database_type     = 'mysql';\n$database_default  = 'cacti';\n$database_hostname = 'localhost';\n$database_username = 'cactiuser';\n$database_password = 'cactiuser';\n$database_port     = '3306';\n$database_retries  = 5;\n$database_ssl      = false;\n$database_ssl_key  = '';\n$database_ssl_cert = '';\n$database_ssl_ca   = '';\n$database_persist  = false;\n\n/*\n * When the cacti server is a remote poller, then these entries point to\n * the main cacti server. Otherwise, these variables have no use and\n * must remain commented out.\n */\n\n#$rdatabase_type     = 'mysql';\n#$rdatabase_default  = 'cacti';\n#$rdatabase_hostname = 'localhost';\n#$rdatabase_username = 'cactiuser';\n#$rdatabase_password = 'cactiuser';\n#$rdatabase_port     = '3306';\n#$rdatabase_retries  = 5;\n#$rdatabase_ssl      = false;\n#$rdatabase_ssl_key  = '';\n#$rdatabase_ssl_cert = '';\n#$rdatabase_ssl_ca   = '';\n\n/*\n * The poller_id of this system.  set to `1` for the main cacti web server.\n * Otherwise, you this value should be the poller_id for the remote poller.\n */\n\n$poller_id = 1;\n\n/*\n * Set the $url_path to point to the default URL of your cacti install.\n * For example if your cacti install as at `https://serverip/cacti/` this\n * would be set to `/cacti/`.\n */\n\n$url_path = '/cacti/';\n\n/*\n * Default session name - session name must contain alpha characters\n */\n\n$cacti_session_name = 'Cacti';\n\n/*\n * Default Cookie domain - The cookie domain to be used for Cacti\n */\n\n//$cacti_cookie_domain = 'cacti.net';\n\n/*\n * Save sessions to a database for load balancing\n */\n\n$cacti_db_session = false;\n\n/*\n * Disable log rotation settings for packagers\n */\n\n$disable_log_rotation = false;\n\n/*\n * Optional parameters to define scripts and resource paths. These\n * variables become important when using remote poller installs when the\n * scripts and resource files are not in the main Cacti web server path.\n */\n\n//$scripts_path = '/var/www/html/cacti/scripts';\n//$resource_path = '/var/www/html/cacti/resource/';\n\n/*\n * Optional parameter to define a data input whitelist command string. This\n * whitelist file will help protect cacti from unauthorized changes to Cacti\n * data input command string.\n */\n\n//$input_whitelist = '/usr/local/etc/cacti/input_whitelist.json';\n\n/*\n * Optional parameter to give explicit path to PHP\n */\n//$php_path = '/bin/php';\n\n/*\n * Optional parameter to disable the PHP SNMP extension. If not set, defaults\n * to class_exists('SNMP').\n */\n\n//$php_snmp_support = false;\n\n/*\n * Optional parameter to define the path of the csrf_secret.php path.  This\n * variable is for packagers who wish to specify an alternate location of\n * the CRSF secret file.\n */\n\n//$path_csrf_secret = '/usr/share/cacti/resource/csrf-secret.php';\n\n/*\n * The following are optional variables for debugging low level system\n * functions that are generally only used by Cacti Developers to help\n * identify potential issues in commonly used functions\n *\n * To use them, uncomment and the equivalent field will be set in the\n * $config variable allowing for instant on but still allowing the\n * ability to fine turn and turn them off.\n */\n\n/*\n * Debug the read_config_option program flow\n */\n# define('DEBUG_READ_CONFIG_OPTION', true);\n\n/*\n * Automatically suppress the DEBUG_READ_CONFIG_OPTION\n */\n# define('DEBUG_READ_CONFIG_OPTION_DB_OPEN', true);\n\n/*\n * Always write the SQL command to the cacti log file\n */\n# define('DEBUG_SQL_CMD', true);\n\n/*\n * Debug the flow of calls to the db_xxx functions that\n * are defined in lib/database.php\n */\n# define('DEBUG_SQL_FLOW', true);\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/*\n   !!! IMPORTANT !!!\n\n   The following defaults are not to be altered.  Please refer to\n   include/config.php for user configurable settings.\n\n*/\n\n/* load cacti version from file */\n$cacti_version_file = dirname(__FILE__) . '/cacti_version';\n\nif (! file_exists($cacti_version_file)) {\n\tdie ('ERROR: failed to find cacti version file');\n}\n\n$cacti_version = file_get_contents($cacti_version_file, false);\nif ($cacti_version === false) {\n\tdie ('ERROR: failed to load cacti version file');\n}\n$cacti_version = trim($cacti_version);\n\n/* define cacti version */\ndefine('CACTI_VERSION', $cacti_version);\n#define('CACTI_VERSION_BETA', 1);\n\n/* define if cacti is in CLI mode */\ndefine('CACTI_CLI', (php_sapi_name() == 'cli'));\nif (defined('CACTI_CLI_ONLY') && !CACTI_CLI) {\n\tdie('<br><strong>This script is only meant to run at the command line.</strong>');\n}\n\n// define documentation table of contents\ndefine('CACTI_DOCUMENTATION_TOC', 'docs/Table-of-Contents.html');\n\n/* Default database settings*/\n$database_type     = 'mysql';\n$database_default  = 'cacti';\n$database_hostname = 'localhost';\n$database_username = 'cactiuser';\n$database_password = 'cactiuser';\n$database_port     = '3306';\n$database_retries  = 2;\n\n$database_ssl      = false;\n$database_ssl_key  = '';\n$database_ssl_cert = '';\n$database_ssl_ca   = '';\n$database_persist  = true;\n\n/* Default session name - Session name must contain alpha characters */\n$cacti_session_name = 'Cacti';\n\n/* define default url path */\n$url_path = '/cacti/';\n\n/* disable log rotation setting */\n$disable_log_rotation = false;\n\n$config = array();\n\n/* Include configuration, or use the defaults */\nif (file_exists(dirname(__FILE__) . '/config.php')) {\n\tif (!is_readable(dirname(__FILE__) . '/config.php')) {\n\t\tdie('Configuration file include/config.php is present, but unreadable.' . PHP_EOL);\n\t}\n\tinclude(dirname(__FILE__) . '/config.php');\n}\n\nif (isset($config['cacti_version'])) {\n\tdie('Invalid include/config.php file detected.' . PHP_EOL);\n\texit;\n}\n\n/* Set the poller_id */\nif (isset($poller_id)) {\n\t$config['poller_id'] = $poller_id;\n} else {\n\t$config['poller_id'] = 1;\n}\n\n$db_var_defaults = array(\n\t'database_type'     => 'mysql',\n\t'database_default'  => NULL,\n\t'database_hostname' => NULL,\n\t'database_username' => NULL,\n\t'database_password' => NULL,\n\t'database_port'     => '3306',\n\t'database_retries'  => 2,\n\t'database_ssl'      => false,\n\t'database_ssl_key'  => '',\n\t'database_ssl_cert' => '',\n\t'database_ssl_ca'   => '',\n);\n\n$db_var_prefixes = array('');\nif ($config['poller_id'] > 1 || isset($rdatabase_hostname)) {\n\t$db_var_prefixes[] = 'r';\n}\n\n$db_missing_vars = '';\nforeach ($db_var_prefixes as $db_var_prefix) {\n\tforeach ($db_var_defaults as $db_var_name => $db_var_default) {\n\t\t$db_var_full = $db_var_prefix . $db_var_name;\n\t\tif (!isset($$db_var_full)) {\n\t\t\tif ($db_var_default !== NULL) {\n\t\t\t\t$$db_var_full = $db_var_default;\n\t\t\t} else {\n\t\t\t\t$db_missing_vars .= (($db_missing_vars == '') ? 'missing ' : ', ') . $db_var_full;\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (!empty($db_missing_vars)) {\n\tdie(\"config.php is $db_missing_vars\" . PHP_EOL);\n}\n\nif (empty($url_path)) {\n\t/* define default url path */\n\t$url_path = '/';\n}\n\n/* set the local for international users */\nsetlocale(LC_CTYPE, 'en_US.UTF-8');\n\n/* Files that do not need http header information - Command line scripts */\n$no_http_header_files = array(\n\t'add_device.php',\n\t'add_graphs.php',\n\t'add_perms.php',\n\t'add_tree.php',\n\t'boost_rrdupdate.php',\n\t'cmd.php',\n\t'cmd_realtime.php',\n\t'copy_user.php',\n\t'host_update_template.php',\n\t'poller_automation.php',\n\t'poller_boost.php',\n\t'poller_commands.php',\n\t'poller_dsstats.php',\n\t'poller_export.php',\n\t'poller_graphs_reapply_names.php',\n\t'poller_maintenance.php',\n\t'poller_output_empty.php',\n\t'poller.php',\n\t'poller_realtime.php',\n\t'poller_recovery.php',\n\t'poller_reindex_hosts.php',\n\t'poller_reports.php',\n\t'poller_spikekill.php',\n\t'query_host_cpu.php',\n\t'query_host_partitions.php',\n\t'rebuild_poller_cache.php',\n\t'repair_database.php',\n\t'script_server.php',\n\t'snmpagent_mibcachechild.php',\n\t'snmpagent_mibcache.php',\n\t'snmpagent_persist.php',\n\t'sql.php',\n\t'ss_host_cpu.php',\n\t'ss_host_disk.php',\n\t'ss_sql.php',\n\t'structure_rra_paths.php',\n);\n\n$colors = array();\n\n/* this should be auto-detected, set it manually if needed */\n$config['cacti_server_os'] = (strstr(PHP_OS, 'WIN')) ? 'win32' : 'unix';\n\nif (!empty($path_csrf_secret)) {\n\t$config['path_csrf_secret'] = $path_csrf_secret;\n}\n\n/* built-in snmp support */\nif ((isset($php_snmp_support) && $php_snmp_support == false) || !function_exists('snmpget')) {\n\t$config['php_snmp_support'] = false;\n} else {\n\t$config['php_snmp_support'] = class_exists('SNMP');\n}\n\n/* PHP binary location */\nif (isset($php_path)) {\n\t$config['php_path'] = $php_path;\n}\n\n/* Set various debug fields */\n$config['DEBUG_READ_CONFIG_OPTION']         = defined('DEBUG_READ_CONFIG_OPTION');\n$config['DEBUG_READ_CONFIG_OPTION_DB_OPEN'] = defined('DEBUG_READ_CONFIG_OPTION_DB_OPEN');\n$config['DEBUG_SQL_CMD']                    = defined('DEBUG_SQL_CMD');\n$config['DEBUG_SQL_FLOW']                   = defined('DEBUG_SQL_FLOW');\n\n/* check for an empty database port */\nif (empty($database_port)) {\n\t$database_port = '3306';\n}\n\n/* set URL path */\nif (!isset($url_path)) {\n\t$url_path = '';\n}\n$config['url_path'] = $url_path;\ndefine('URL_PATH', $url_path);\n\n/* used for includes */\nif ($config['cacti_server_os'] == 'win32') {\n\t$config['base_path']    = str_replace(\"\\\\\", \"/\", substr(dirname(__FILE__),0,-8));\n\t$config['library_path'] = $config['base_path'] . '/lib';\n} else {\n\t$config['base_path']    = preg_replace(\"/(.*)[\\/]include/\", \"\\\\1\", dirname(__FILE__));\n\t$config['library_path'] = preg_replace(\"/(.*[\\/])include/\", \"\\\\1lib\", dirname(__FILE__));\n}\n$config['include_path'] = dirname(__FILE__);\n$config['rra_path'] = $config['base_path'] . '/rra';\n\n/* for multiple pollers, we need to know this location */\nif (!isset($scripts_path)) {\n\t$config['scripts_path'] = $config['base_path'] . '/scripts';\n} else {\n\t$config['scripts_path'] = $scripts_path;\n}\n\nif (!isset($resource_path)) {\n\t$config['resource_path'] = $config['base_path'] . '/resource';\n} else {\n\t$config['resource_path'] = $resource_path;\n}\n\nif (isset($input_whitelist)) {\n\t$config['input_whitelist'] = $input_whitelist;\n}\n\n/* include base modules */\ninclude_once($config['library_path'] . '/database.php');\ninclude_once($config['library_path'] . '/functions.php');\ninclude_once($config['include_path'] . '/global_constants.php');\ninclude_once($config['library_path'] . '/html.php');\ninclude_once($config['library_path'] . '/html_utility.php');\ninclude_once($config['library_path'] . '/html_validate.php');\n\n$filename = get_current_page();\n\n$config['is_web'] = !defined('CACTI_CLI_ONLY');\nif ((isset($no_http_headers) && $no_http_headers == true) || in_array($filename, $no_http_header_files, true)) {\n\t$config['is_web'] = false;\n}\n\n/* set poller mode */\nglobal $local_db_cnn_id, $remote_db_cnn_id, $conn_mode;\n\n$config['connection'] = 'online';\n\nif ($config['poller_id'] > 1 || isset($rdatabase_hostname)) {\n\t$local_db_cnn_id = db_connect_real($database_hostname, $database_username, $database_password, $database_default, $database_type, $database_port, $database_retries, $database_ssl, $database_ssl_key, $database_ssl_cert, $database_ssl_ca);\n\n\tif (!isset($rdatabase_retries))  $rdatabase_retries  = 2;\n\tif (!isset($rdatabase_ssl))      $rdatabase_ssl      = false;\n\tif (!isset($rdatabase_ssl_key))  $rdatabase_ssl_key  = false;\n\tif (!isset($rdatabase_ssl_cert)) $rdatabase_ssl_cert = false;\n\tif (!isset($rdatabase_ssl_ca))   $rdatabase_ssl_ca   = false;\n\n\t// Check for recovery\n\tif (is_object($local_db_cnn_id)) {\n\t\t$boost_records = db_fetch_cell('SELECT COUNT(*)\n\t\t\tFROM poller_output_boost', '', true, $local_db_cnn_id);\n\n\t\tif ($boost_records > 0) {\n\t\t\t$config['connection'] = 'recovery';\n\t\t}\n\t}\n\n\t/* gather the existing cactidb version */\n\t$config['cacti_db_version'] = db_fetch_cell('SELECT cacti FROM version LIMIT 1', false, $local_db_cnn_id);\n\n\t/**\n\t * If we have not been forced offline by the $conn_mode global and since we are\n\t * a remote poller, let's attempt to get back online.\n\t */\n\tif ($conn_mode != 'offline') {\n\t\t$remote_db_cnn_id = db_connect_real($rdatabase_hostname, $rdatabase_username, $rdatabase_password, $rdatabase_default, $rdatabase_type, $rdatabase_port, $database_retries, $rdatabase_ssl, $rdatabase_ssl_key, $rdatabase_ssl_cert, $rdatabase_ssl_ca);\n\t}\n\n\tif ($config['is_web'] && is_object($remote_db_cnn_id) &&\n\t\t$config['connection'] != 'recovery' &&\n\t\t$config['cacti_db_version'] != 'new_install') {\n\n\t\t// Connection worked, so now override the default settings so that it will always utilize the remote connection\n\t\t$database_default   = $rdatabase_default;\n\t\t$database_hostname  = $rdatabase_hostname;\n\t\t$database_username  = $rdatabase_username;\n\t\t$database_password  = $rdatabase_password;\n\t\t$database_port      = $rdatabase_port;\n\t\t$database_ssl       = $rdatabase_ssl;\n\t\t$database_ssl_key   = $rdatabase_ssl_key;\n\t\t$database_ssl_cert  = $rdatabase_ssl_cert;\n\t\t$database_ssl_ca    = $rdatabase_ssl_ca;\n\t} elseif (is_object($remote_db_cnn_id)) {\n\t\tif ($config['connection'] != 'recovery') {\n\t\t\t$config['connection'] = 'online';\n\t\t}\n\t} else {\n\t\t$config['connection'] = 'offline';\n\t}\n} else {\n\tif (!isset($database_ssl))      $database_ssl      = false;\n\tif (!isset($database_ssl_key))  $database_ssl_key  = false;\n\tif (!isset($database_ssl_cert)) $database_ssl_cert = false;\n\tif (!isset($database_ssl_ca))   $database_ssl_ca   = false;\n\n\tif (!db_connect_real($database_hostname, $database_username, $database_password, $database_default, $database_type, $database_port, $database_retries, $database_ssl, $database_ssl_key, $database_ssl_cert, $database_ssl_ca)) {\n\t\t$ps = $config['is_web'] ? '<p>' : '';\n\t\t$sp = $config['is_web'] ? '</p>' : PHP_EOL;\n\t\t$ul = $config['is_web'] ? '<ul>' : PHP_EOL;\n\t\t$li = $config['is_web'] ? '<li>' : PHP_EOL . '  - ';\n\t\t$lu = $config['is_web'] ? '</ul>' : '';\n\t\t$il = $config['is_web'] ? '</li>' : '';\n\t\tprint $ps . 'FATAL: Connection to Cacti database failed. Please ensure: ' . $ul;\n\t\tprint $li . 'the PHP MySQL module is installed and enabled.' . $il;\n\t\tprint $li . 'the database is running.' . $il;\n\t\tprint $li . 'the credentials in config.php are valid.' . $il;\n\t\tprint $lu . $sp;\n\t\tif (isset($_REQUEST['display_db_errors']) && !empty($config['DATABASE_ERROR'])) {\n\t\t\tprint $ps . 'The following database errors occurred: ' . $ul;\n\t\t\tforeach ($config['DATABASE_ERROR'] as $e) {\n\t\t\t\tprint $li . $e['Code'] . ': ' . $e['Error'] . $il;\n\t\t\t}\n\t\t\tprint $lu . $sp;\n\t\t}\n\t\texit;\n\t} else {\n\t\t/* gather the existing cactidb version */\n\t\t$config['cacti_db_version'] = db_fetch_cell('SELECT cacti FROM version LIMIT 1');\n\t}\n}\n\n/* check cacti log is available */\n$log_filename = cacti_log_file();\nif (!is_resource_writable($log_filename)) {\n\tdie('System log file is not available for writing, please enable write access' . PHP_EOL . 'Log: ' . $log_filename . PHP_EOL);\n}\n\n/* prime the most popular config settings */\nprime_common_config_settings();\n\nif ($config['poller_id'] > 1) {\n\t$timezone = db_fetch_cell_prepared('SELECT timezone\n\t\tFROM poller\n\t\tWHERE id = ?',\n\t\tarray($config['poller_id']));\n\n\tif ($timezone != '') {\n\t\tdb_execute_prepared('SET time_zone = ?', array($timezone));\n\t}\n}\n\nif (isset($cacti_db_session) && $cacti_db_session && db_table_exists('sessions')) {\n\tinclude(dirname(__FILE__) . '/session.php');\n} else {\n\t$cacti_db_session = false;\n}\n\nif (!defined('IN_CACTI_INSTALL')) {\n\tset_error_handler('CactiErrorHandler');\n\tregister_shutdown_function('CactiShutdownHandler');\n}\n\n/* verify the cacti database is initialized before moving past here */\ndb_cacti_initialized($config['is_web']);\n\nif ($config['is_web']) {\n\tif (read_config_option('force_https') == 'on') {\n\t\tif (!isset($_SERVER['HTTPS']) && isset($_SERVER['HTTP_HOST']) && isset($_SERVER['REQUEST_URI'])) {\n\t\t\theader('Location: https://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] . PHP_EOL . PHP_EOL);\n\t\t\texit;\n\t\t}\n\t}\n\n\t/* set the maximum post size */\n\tini_set('post_max_size', '8M');\n\n\t/* add additional cookie directives */\n\tini_set('session.cookie_httponly', true);\n\tini_set('session.cookie_path', $config['url_path']);\n\tini_set('session.use_strict_mode', true);\n\n\t$options = array(\n\t\t'cookie_httponly' => true,\n\t\t'cookie_path'     => $config['url_path'],\n\t\t'use_strict_mode' => true\n\t);\n\n\tif (isset($cacti_cookie_domain) && $cacti_cookie_domain != '') {\n\t\tini_set('session.cookie_domain', $cacti_cookie_domain);\n\t\t$options['cookie_domain'] = $cacti_cookie_domain;\n\t}\n\n\t// SameSite php7.3+ behavior\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\tini_set('session.cookie_samesite', 'Strict');\n\t\t$options['cookie_samesite'] = 'Strict';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\tini_set('session.cookie_secure', true);\n\t\t$options['cookie_secure'] = true;\n\t}\n\n\t$config['cookie_options']     = $options;\n\t$config['cacti_session_name'] = $cacti_session_name;\n\n\t/* we don't want these pages cached */\n\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');\n\theader('X-Frame-Options: SAMEORIGIN');\n\n\t/* increased web hardening */\n\t$script_policy = read_config_option('content_security_policy_script');\n\tif ($script_policy == 'unsafe-eval') {\n\t\t$script_policy = \"'$script_policy'\";\n\t} else {\n\t\t$script_policy = '';\n\t}\n\t$alternates = html_escape(read_config_option('content_security_alternate_sources'));\n\n\theader(\"Content-Security-Policy: default-src *; img-src 'self' $alternates data: blob:; style-src 'self' 'unsafe-inline' $alternates; script-src 'self' $script_policy 'unsafe-inline' $alternates; frame-ancestors 'self'; worker-src 'self' $alternates;\");\n\n\t/* prevent IE from silently rejects cookies sent from third party sites. */\n\theader('P3P: CP=\"CAO PSA OUR\"');\n\theader('Cache-Control: no-store, no-cache, must-revalidate');\n\theader('Cache-Control: max-age=31536000');\n\n\tcacti_session_start();\n\n\t/* we never run with magic quotes on */\n\tif (version_compare(PHP_VERSION, '5.4', '<=')) {\n\t\tif (get_magic_quotes_gpc()) {\n\t\t\t$process = array(&$_GET, &$_POST, &$_COOKIE, &$_REQUEST);\n\t\t\tforeach ($process as $key => $val) {\n\t\t\t\tforeach ($val as $k => $v) {\n\t\t\t\t\tunset($process[$key][$k]);\n\t\t\t\t\tif (is_array($v)) {\n\t\t\t\t\t\t$process[$key][stripslashes($k)] = $v;\n\t\t\t\t\t\t$process[] = &$process[$key][stripslashes($k)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$process[$key][stripslashes($k)] = stripslashes($v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tunset($process);\n\t\t}\n\t}\n\n\t/* make sure to start only Cacti session at a time */\n\tif (!isset($_SESSION['cacti_cwd'])) {\n\t\t$_SESSION['cacti_cwd'] = $config['base_path'];\n\t} else {\n\t\tif ($_SESSION['cacti_cwd'] != $config['base_path']) {\n\t\t\tcacti_session_destroy();\n\t\t}\n\t}\n\n\t/* Sanitize the http referer */\n\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t$_SERVER['HTTP_REFERER'] = sanitize_uri($_SERVER['HTTP_REFERER']);\n\t}\n}\n\n/* emulate 'register_globals' = 'off' if turned on */\nif ((bool)ini_get('register_globals')) {\n\t$not_unset = array('_GET', '_POST', '_COOKIE', '_SERVER', '_SESSION', '_ENV', '_FILES', 'database_type', 'database_default', 'database_hostname', 'database_username', 'database_password', 'config', 'colors');\n\n\t/* Not only will array_merge give a warning if a parameter is not an array, it will\n\t* actually fail. So we check if HTTP_SESSION_VARS has been initialised. */\n\tif (!isset($_SESSION)) {\n\t\t$_SESSION = array();\n\t}\n\n\t/* Merge all into one extremely huge array; unset this later */\n\t$input = array_merge($_GET, $_POST, $_COOKIE, $_SERVER, $_SESSION, $_ENV, $_FILES);\n\n\tunset($input['input']);\n\tunset($input['not_unset']);\n\n\tforeach ($input as $var => $val) {\n\t\tif (!in_array($var, $not_unset)) {\n\t\t\tunset($$var);\n\t\t}\n\t}\n\n\tunset($input);\n}\n\ndefine('CACTI_DATE_TIME_FORMAT', date_time_format());\n\ninclude_once($config['include_path'] . '/global_languages.php');\ninclude_once($config['library_path'] . '/auth.php');\ninclude_once($config['library_path'] . '/plugins.php');\ninclude_once($config['include_path'] . '/plugins.php');\ninclude_once($config['include_path'] . '/global_arrays.php');\ninclude_once($config['include_path'] . '/global_settings.php');\ninclude_once($config['include_path'] . '/global_form.php');\ninclude_once($config['library_path'] . '/html_form.php');\ninclude_once($config['library_path'] . '/html_filter.php');\ninclude_once($config['library_path'] . '/variables.php');\ninclude_once($config['library_path'] . '/mib_cache.php');\ninclude_once($config['library_path'] . '/poller.php');\ninclude_once($config['library_path'] . '/snmpagent.php');\ninclude_once($config['library_path'] . '/aggregate.php');\ninclude_once($config['library_path'] . '/api_automation.php');\ninclude_once($config['include_path'] . '/csrf.php');\n\nif ($config['is_web']) {\n\tif (isset_request_var('newtheme')) {\n\t\tunset($_SESSION['selected_theme']);\n\t}\n\n\tif (isset_request_var('csrf_timeout')) {\n\t\traise_message('csrf_ptimeout');\n\t}\n\n\t/* check for save actions using GET */\n\tif (isset_request_var('action')) {\n\t\t$action = get_nfilter_request_var('action');\n\n\t\t$bad_actions = array('save', 'update_data', 'changepassword');\n\n\t\tforeach($bad_actions as $bad) {\n\t\t\tif ($action == $bad && !isset($_POST['__csrf_magic'])) {\n\t\t\t\tcacti_log('WARNING: Attempt to use GET method for POST operations from IP ' . get_client_addr(), false, 'WEBUI');\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset($_COOKIE['CactiTimeZone'])) {\n\t\t$gmt_offset = $_COOKIE['CactiTimeZone'];\n\n\t\tcacti_time_zone_set($gmt_offset);\n\t}\n}\n\napi_plugin_hook('config_insert');\n\n/* set config cacti_version for plugins */\n$config['cacti_version'] = CACTI_VERSION;\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nglobal $menu, $menu_glyphs, $graph_sources;\n\n/* Array of Cacti versions and template hash codes\n   Remember to add every version here. */\n$cacti_version_codes = array(\n\t'0.8'    => 'NaN',\n\t'0.8.1'  => 'NaN',\n\t'0.8.2'  => 'NaN',\n\t'0.8.2a' => 'NaN',\n\t'0.8.3'  => 'NaN',\n\t'0.8.3a' => 'NaN',\n\t'0.8.4'  => '0000',\n\t'0.8.5'  => '0001',\n\t'0.8.5a' => '0002',\n\t'0.8.6'  => '0003',\n\t'0.8.6a' => '0004',\n\t'0.8.6b' => '0005',\n\t'0.8.6c' => '0006',\n\t'0.8.6d' => '0007',\n\t'0.8.6e' => '0008',\n\t'0.8.6f' => '0009',\n\t'0.8.6g' => '0010',\n\t'0.8.6h' => '0011',\n\t'0.8.6i' => '0012',\n\t'0.8.6j' => '0013',\n\t'0.8.7'  => '0014',\n\t'0.8.7a' => '0015',\n\t'0.8.7b' => '0016',\n\t'0.8.7c' => '0017',\n\t'0.8.7d' => '0018',\n\t'0.8.7e' => '0019',\n\t'0.8.7f' => '0020',\n\t'0.8.7g' => '0021',\n\t'0.8.7h' => '0022',\n\t'0.8.7i' => '0023',\n\t'0.8.8'  => '0024',\n\t'0.8.8a' => '0024',\n\t'0.8.8b' => '0024',\n\t'0.8.8c' => '0025',\n\t'0.8.8d' => '0025',\n\t'0.8.8e' => '0025',\n\t'0.8.8f' => '0025',\n\t'0.8.8g' => '0025',\n\t'0.8.8h' => '0025',\n\t'1.0.0'  => '0100',\n\t'1.0.1'  => '0100',\n\t'1.0.2'  => '0100',\n\t'1.0.3'  => '0100',\n\t'1.0.4'  => '0100',\n\t'1.0.5'  => '0100',\n\t'1.0.6'  => '0100',\n\t'1.1.0'  => '0100',\n\t'1.1.1'  => '0100',\n\t'1.1.2'  => '0100',\n\t'1.1.3'  => '0100',\n\t'1.1.4'  => '0100',\n\t'1.1.5'  => '0100',\n\t'1.1.6'  => '0101',\n\t'1.1.7'  => '0101',\n\t'1.1.8'  => '0101',\n\t'1.1.9'  => '0101',\n\t'1.1.10' => '0101',\n\t'1.1.11' => '0101',\n\t'1.1.12' => '0101',\n\t'1.1.13' => '0101',\n\t'1.1.14' => '0101',\n\t'1.1.15' => '0101',\n\t'1.1.16' => '0101',\n\t'1.1.17' => '0101',\n\t'1.1.18' => '0101',\n\t'1.1.19' => '0101',\n\t'1.1.20' => '0101',\n\t'1.1.21' => '0101',\n\t'1.1.22' => '0101',\n\t'1.1.23' => '0101',\n\t'1.1.24' => '0101',\n\t'1.1.25' => '0101',\n\t'1.1.26' => '0101',\n\t'1.1.27' => '0101',\n\t'1.1.28' => '0101',\n\t'1.1.29' => '0101',\n\t'1.1.30' => '0101',\n\t'1.1.31' => '0101',\n\t'1.1.32' => '0101',\n\t'1.1.33' => '0101',\n\t'1.1.34' => '0101',\n\t'1.1.35' => '0101',\n\t'1.1.36' => '0101',\n\t'1.1.37' => '0101',\n\t'1.1.38' => '0101',\n\t'1.2.0'  => '0101',\n\t'1.2.1'  => '0101',\n\t'1.2.2'  => '0101',\n\t'1.2.3'  => '0102',\n\t'1.2.4'  => '0102',\n\t'1.2.5'  => '0102',\n\t'1.2.6'  => '0102',\n\t'1.2.7'  => '0102',\n\t'1.2.8'  => '0102',\n\t'1.2.9'  => '0102',\n\t'1.2.10'  => '0102',\n\t'1.2.11'  => '0102',\n\t'1.2.12'  => '0102',\n\t'1.2.13'  => '0102',\n\t'1.2.14'  => '0102',\n\t'1.2.15'  => '0102',\n\t'1.2.16'  => '0102',\n\t'1.2.17'  => '0102',\n\t'1.2.18'  => '0102',\n\t'1.2.19'  => '0103',\n\t'1.2.20'  => '0103',\n\t'1.2.21'  => '0103',\n\t'1.2.22'  => '0103',\n\t'1.2.23'  => '0103',\n);\n\n$messages = array(\n\t1  => array(\n\t\t'message' => __('Save Successful.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t2  => array(\n\t\t'message' => __('Save Failed.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t3  => array(\n\t\t'message' => __('Save Failed due to field input errors (Check red fields).'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t4  => array(\n\t\t'message' => __('Passwords do not match, please retype.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t5  => array(\n\t\t'message' => __('You must select at least one field.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t6  => array(\n\t\t'message' => __('You must have built in user authentication turned on to use this feature.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t7  => array(\n\t\t'message' => __('XML parse error.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t8  => array(\n\t\t'message' => __('The directory highlighted does not exist.  Please enter a valid directory.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t9  => array(\n\t\t'message' => __('The Cacti log file must have the extension \\'.log\\''),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t10  => array(\n\t\t'message' => __('Data Input for method does not appear to be whitelisted.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t11  => array(\n\t\t'message' => __('Data Source does not exist.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t12 => array(\n\t\t'message' => __('Username already in use.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t13  => array(\n\t\t'message' => __('The SNMP v3 Privacy Passphrases do not match'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t14  => array(\n\t\t'message' => __('The SNMP v3 Authentication Passphrases do not match'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t15 => array(\n\t\t'message' => __('XML: Cacti version does not exist.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t16 => array(\n\t\t'message' => __('XML: Hash version does not exist.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t17 => array(\n\t\t'message' => __('XML: Generated with a newer version of Cacti.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t18 => array(\n\t\t'message' => __('XML: Cannot locate type code.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t19 => array(\n\t\t'message' => __('Username already exists.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t20 => array(\n\t\t'message' => __('Username change not permitted for designated template or guest user.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t21 => array(\n\t\t'message' => __('User delete not permitted for designated template or guest user.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t22 => array(\n\t\t'message' => __('User delete not permitted for designated graph export user.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t23 => array(\n\t\t'message' => __('Data Template includes deleted Data Source Profile.  Please resave the Data Template with an existing Data Source Profile.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t24 => array(\n\t\t'message' => __('Graph Template includes deleted GPrint Prefix.  Please run database repair script to identify and/or correct.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t25 => array(\n\t\t'message' => __('Graph Template includes deleted CDEFs.  Please run database repair script to identify and/or correct.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t26 => array(\n\t\t'message' => __('Graph Template includes deleted Data Input Method.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t27 => array(\n\t\t'message' => __('Data Template not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t28 => array(\n\t\t'message' => __('Device Template not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t29 => array(\n\t\t'message' => __('Data Query not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t30 => array(\n\t\t'message' => __('Graph Template not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t31 => array(\n\t\t'message' => __('Graph not found.  Either it has been deleted or your database needs repair.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t32 => array(\n\t\t'message' => __('SNMPv3 Auth Passphrases must be 8 characters or greater.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t33 => array(\n\t\t'message' => __('Some Graphs not updated. Unable to change device for Data Query based Graphs.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t34 => array(\n\t\t'message' => __('Unable to change device for Data Query based Graphs.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t35 => array(\n\t\t'message' => __('Some settings not saved. Check messages below.  Check red fields for errors.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t36 => array(\n\t\t'message' => __('The file highlighted does not exist.  Please enter a valid file name.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t37 => array(\n\t\t'message' => __('All User Settings have been returned to their default values.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t38 => array(\n\t\t'message' => __('Suggested Field Name was not entered.  Please enter a field name and try again.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t39 => array(\n\t\t'message' => __('Suggested Value was not entered.  Please enter a suggested value and try again.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t40 => array(\n\t\t'message' => __('You must select at least one object from the list.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t41 => array(\n\t\t'message' => __('Device Template updated.  Remember to Sync Devices to push all changes to Devices that use this Device Template.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t42 => array(\n\t\t'message' => __('Save Successful. Settings replicated to Remote Data Collectors.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t43 => array(\n\t\t'message' => __('Save Failed.  Minimum Values must be less than Maximum Value.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t44 => array(\n\t\t'message' => __('Unable to change password.  User account not found.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'input_save_wo_ds' => array(\n\t\t'message' => __('Data Input Saved.  You must update the Data Templates referencing this Data Input Method before creating Graphs or Data Sources.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'input_save_w_ds' => array(\n\t\t'message' => __('Data Input Saved.  You must update the Data Templates referencing this Data Input Method before the Data Collectors will start using any new or modified Data Input - Input Fields.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'input_field_save_wo_ds' => array(\n\t\t'message' => __('Data Input Field Saved.  You must update the Data Templates referencing this Data Input Method before creating Graphs or Data Sources.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'input_field_save_w_ds' => array(\n\t\t'message' => __('Data Input Field Saved.  You must update the Data Templates referencing this Data Input Method before the Data Collectors will start using any new or modified Data Input - Input Fields.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_invalid' => array(\n\t\t'message' => __('Log file specified is not a Cacti log or archive file.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_remove' => array(\n\t\t'message' => __('Log file specified was Cacti archive file and was removed.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_purged' => array(\n\t\t'message' => __('Cacti log purged successfully'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'password_change' => array(\n\t\t'message' => __('If you force a password change, you must also allow the user to change their password.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nopassword' => array(\n\t\t'message' => __('You are not allowed to change your password.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nopasswordlen' => array(\n\t\t'message' => __('Unable to determine size of password field, please check permissions of db user'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nopasswordinc' => array(\n\t\t'message' => __('Unable to increase size of password field, pleas check permission of db user'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nodomainpassword' => array(\n\t\t'message' => __('LDAP/AD based password change not supported.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'password_success' => array(\n\t\t'message' => __('Password successfully changed.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_permissions' => array(\n\t\t'message' => __('Unable to clear log, no write permissions'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'clog_missing' => array(\n\t\t'message' => __('Unable to clear log, file does not exist'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'csrf_timeout' => array(\n\t\t'message' => __('CSRF Timeout, refreshing page.'),\n\t\t'level' => MESSAGE_LEVEL_CSRF),\n\t'csrf_ptimeout' => array(\n\t\t'message' => __('CSRF Timeout occurred due to inactivity, page refreshed.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'mg_mailtime_invalid' => array(\n\t\t'message' => __('Invalid timestamp. Select timestamp in the future.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_sync' => array(\n\t\t'message' => __('Data Collector(s) synchronized for offline operation'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'poller_notfound' => array(\n\t\t'message' => __('Data Collector(s) not found when attempting synchronization'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_noconnect' => array(\n\t\t'message' => __('Unable to establish MySQL connection with Remote Data Collector.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_nosync' => array(\n\t\t'message' => __('Data Collector synchronization must be initiated from the main Cacti server.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_nomain' => array(\n\t\t'message' => __('Synchronization does not include the Central Cacti Database server.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_nodupe' => array(\n\t\t'message' => __('When saving a Remote Data Collector, the Database Hostname must be unique from all others.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_dbhost' => array(\n\t\t'message' => __('Your Remote Database Hostname must be something other than \\'localhost\\' for each Remote Data Collector.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_paths' => array(\n\t\t'message' => __('Path variables on this page were only saved locally.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'reports_save' => array(\n\t\t'message' => __('Report Saved'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'reports_save_failed' => array(\n\t\t'message' => __('Report Save Failed'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_item_save' => array(\n\t\t'message' => __('Report Item Saved'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'reports_item_save_failed' => array(\n\t\t'message' => __('Report Item Save Failed'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_graph_not_found' => array(\n\t\t'message' => __('Graph was not found attempting to Add to Report'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_not_owner' => array(\n\t\t'message' => __('Unable to Add Graphs.  Current user is not owner'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_add_error' => array(\n\t\t'message' => __('Unable to Add all Graphs.  See error message for details.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_no_graph' => array(\n\t\t'message' => __('You must select at least one Graph to add to a Report.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_graphs_added' => array(\n\t\t'message' => __('All Graphs have been added to the Report.  Duplicate Graphs with the same Timespan were skipped.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'resource_cache_rebuild' => array(\n\t\t'message' => __('Poller Resource Cache cleared.  Main Data Collector will rebuild at the next poller start, and Remote Data Collectors will sync afterwards.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'permission_denied' => array(\n\t\t'message' => __('Permission Denied.  You do not have permission to the requested action.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'page_not_defined' => array(\n\t\t'message' => __('Page is not defined.  Therefore, it can not be displayed.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'custom_error' => array(\n\t\t'message' => __('Unexpected error occurred'),\n\t\t'level' => MESSAGE_LEVEL_ERROR)\n);\n\n$cdef_operators = array(1 =>\n\t'+',\n\t'-',\n\t'*',\n\t'/',\n\t'%'\n);\n\n$cdef_functions = array(1 =>\n\t'SIN',\n\t'COS',\n\t'LOG',\n\t'EXP',\n\t'FLOOR',\n\t'CEIL',\n\t'LT',\n\t'LE',\n\t'GT',\n\t'GE',\n\t'EQ',\n\t'IF',\n\t'MIN',\n\t'MAX',\n\t'LIMIT',\n\t'DUP',\n\t'EXC',\n\t'POP',\n\t'UN',\n\t'UNKN',\n\t'PREV',\n\t'INF',\n\t'NEGINF',\n\t'NOW',\n\t'TIME',\n\t'LTIME',\n\t'ADDNAN',\n\t'TREND',\n\t'TRENDNAN',\n\t'PREDICT',\n\t'PREDICTSIGMA',\n\t'PREDICTPERC',\n\t'SQRT',\n\t'ATAN',\n\t'ATAN2',\n\t'POW',\n\t'ISINF',\n\t'MINNAN',\n\t'MAXNAN',\n\t'DEG2RAD',\n\t'RAD2DEG',\n\t'ABS',\n\t'REV',\n\t'SMIN',\n\t'SMAX',\n\t'MEDIAN',\n\t'STDEV',\n\t'PERCENT',\n\t'COUNT',\n\t'STEPWIDTH',\n\t'NEWDAY',\n\t'NEWWEEK',\n\t'NEWMONTH',\n\t'NEWYEAR',\n\t'DEPTH',\n\t'COPY',\n\t'INDEX',\n\t'ROLL'\n);\n\n$phperrors = array (\n\tE_ERROR => 'ERROR',\n\tE_WARNING => 'WARNING',\n\tE_PARSE => 'PARSE',\n\tE_NOTICE => 'NOTICE',\n\tE_CORE_ERROR => 'CORE_ERROR',\n\tE_CORE_WARNING => 'CORE_WARNING',\n\tE_COMPILE_ERROR  => 'COMPILE_ERROR',\n\tE_COMPILE_WARNING => 'COMPILE_WARNING',\n\tE_USER_ERROR => 'USER_ERROR',\n\tE_USER_WARNING => 'USER_WARNING',\n\tE_USER_NOTICE  => 'USER_NOTICE',\n\tE_STRICT => 'STRICT',\n\tE_RECOVERABLE_ERROR  => 'RECOVERABLE_ERROR',\n\tE_DEPRECATED => 'DEPRECATED',\n\tE_USER_DEPRECATED  => 'USER_DEPRECATED',\n\tE_ALL => 'ALL'\n);\n\nif (cacti_version_compare(get_rrdtool_version(), '1.8.0', '>=')) {\n\t$cdef_functions[] = 'ROUND';\n}\n\n$vdef_functions = array(1 =>\n\t'MAXIMUM',\n\t'MINIMUM',\n\t'AVERAGE',\n\t'STDEV',\n\t'LAST',\n\t'FIRST',\n\t'TOTAL',\n\t'PERCENT',\n\t'PERCENTNAN',\n\t'LSLSLOPE',\n\t'LSLINT',\n\t'LSLCORREL'\n);\n\n$vdef_item_types = array(\n\tCVDEF_ITEM_TYPE_FUNCTION => __('Function'),\n\tCVDEF_ITEM_TYPE_SPEC_DS  => __('Special Data Source'),\n\tCVDEF_ITEM_TYPE_STRING   => __('Custom String'),\n);\n\n$custom_vdef_data_source_types = array( // this may change as soon as RRDtool supports math in VDEF, until then only reference to CDEF may help\n\t'CURRENT_DATA_SOURCE' => __('Current Graph Item Data Source'),\n);\n\n$input_types = array(\n\tDATA_INPUT_TYPE_SNMP                => __('SNMP Get'), // Action 0:\n\tDATA_INPUT_TYPE_SNMP_QUERY          => __('SNMP Query'),\n\tDATA_INPUT_TYPE_SCRIPT              => __('Script/Command'),  // Action 1:\n\tDATA_INPUT_TYPE_SCRIPT_QUERY        => __('Script Query'), // Action 1:\n\tDATA_INPUT_TYPE_PHP_SCRIPT_SERVER   => __('Script Server'),\n\tDATA_INPUT_TYPE_QUERY_SCRIPT_SERVER => __('Script Server Query')\n);\n\n$input_types_script = array(\n\tDATA_INPUT_TYPE_SCRIPT              => __('Script/Command'),  // Action 1:\n\tDATA_INPUT_TYPE_PHP_SCRIPT_SERVER   => __('Script Server'),\n);\n\n$reindex_types = array(\n\tDATA_QUERY_AUTOINDEX_NONE               => __('None'),\n\tDATA_QUERY_AUTOINDEX_BACKWARDS_UPTIME   => __('Uptime'),\n\tDATA_QUERY_AUTOINDEX_INDEX_NUM_CHANGE   => __('Index Count'),\n\tDATA_QUERY_AUTOINDEX_FIELD_VERIFICATION => __('Verify All')\n);\n\n$reindex_types_tips = array(\n\tDATA_QUERY_AUTOINDEX_NONE               => __('All Re-Indexing will be manual or managed through scripts or Device Automation.'),\n\tDATA_QUERY_AUTOINDEX_BACKWARDS_UPTIME   => __('When the Devices SNMP uptime goes backward, a Re-Index will be performed.'),\n\tDATA_QUERY_AUTOINDEX_INDEX_NUM_CHANGE   => __('When the Data Query index count changes, a Re-Index will be performed.'),\n\tDATA_QUERY_AUTOINDEX_FIELD_VERIFICATION => __('Every polling cycle, a Re-Index will be performed.  Very expensive.')\n);\n\n$snmp_query_field_actions = array(1 =>\n\t__('SNMP Field Name (Dropdown)'),\n\t__('SNMP Field Value (From User)'),\n\t__('SNMP Output Type (Dropdown)')\n);\n\n$consolidation_functions = array(1 =>\n\t'AVERAGE',\n\t'MIN',\n\t'MAX',\n\t'LAST'\n);\n\n$data_source_types = array(\n\t1 => 'GAUGE',\n\t2 => 'COUNTER',\n\t3 => 'DERIVE',\n\t4 => 'ABSOLUTE',\n\t5 => 'COMPUTE'\n);\n\nif (cacti_version_compare(get_rrdtool_version(), '1.5', '>=')) {\n\t$data_source_types[6] = 'DCOUNTER';\n\t$data_source_types[7] = 'DDERIVE';\n}\n\n$rrd_font_render_modes = array(\n\tRRD_FONT_RENDER_NORMAL  => __('Normal'),\n\tRRD_FONT_RENDER_LIGHT   => __('Light'),\n\tRRD_FONT_RENDER_MONO    => __('Mono'),\n);\n\n$rrd_graph_render_modes = array(\n\tRRD_GRAPH_RENDER_NORMAL => __('Normal'),\n\tRRD_GRAPH_RENDER_MONO   => __('Mono'),\n);\n\n$rrd_legend_position = array(\n\tRRD_LEGEND_POS_NORTH    => __('North'),\n\tRRD_LEGEND_POS_SOUTH    => __('South'),\n\tRRD_LEGEND_POS_WEST     => __('West'),\n\tRRD_LEGEND_POS_EAST     => __('East'),\n);\n\n$rrd_textalign = array(\n\tRRD_ALIGN_NONE          => __('None'),\n\tRRD_ALIGN_LEFT          => __('Left'),\n\tRRD_ALIGN_RIGHT         => __('Right'),\n\tRRD_ALIGN_JUSTIFIED     => __('Justified'),\n\tRRD_ALIGN_CENTER        => __('Center'),\n);\n\n$rrd_legend_direction = array(\n\tRRD_LEGEND_DIR_TOPDOWN  => __('Top -> Down'),\n\tRRD_LEGEND_DIR_BOTTOMUP => __('Bottom -> Up'),\n);\n\n$rrd_axis_formatters = array(\n\t'numeric'   => __('Numeric'),\n\t'timestamp' => __('Timestamp'),\n\t'duration'  => __('Duration')\n);\n\n$graph_item_types = array(\n\tGRAPH_ITEM_TYPE_COMMENT         => 'COMMENT',\n\tGRAPH_ITEM_TYPE_HRULE           => 'HRULE',\n\tGRAPH_ITEM_TYPE_VRULE           => 'VRULE',\n\tGRAPH_ITEM_TYPE_LINE1           => 'LINE1',\n\tGRAPH_ITEM_TYPE_LINE2           => 'LINE2',\n\tGRAPH_ITEM_TYPE_LINE3           => 'LINE3',\n\tGRAPH_ITEM_TYPE_AREA            => 'AREA',\n\tGRAPH_ITEM_TYPE_STACK           => 'AREA:STACK',\n\tGRAPH_ITEM_TYPE_GPRINT          => 'GPRINT',\n\tGRAPH_ITEM_TYPE_GPRINT_AVERAGE  => 'GPRINT:AVERAGE',\n\tGRAPH_ITEM_TYPE_GPRINT_LAST     => 'GPRINT:LAST',\n\tGRAPH_ITEM_TYPE_GPRINT_MAX      => 'GPRINT:MAX',\n\tGRAPH_ITEM_TYPE_GPRINT_MIN      => 'GPRINT:MIN',\n\tGRAPH_ITEM_TYPE_LEGEND          => 'LEGEND',\n\tGRAPH_ITEM_TYPE_LEGEND_CAMM     => 'LEGEND_CAMM',\n\tGRAPH_ITEM_TYPE_LINESTACK       => 'LINE:STACK',\n\tGRAPH_ITEM_TYPE_TIC             => 'TICK',\n\tGRAPH_ITEM_TYPE_TEXTALIGN       => 'TEXTALIGN',\n);\n\nasort($graph_item_types);\n\n$image_types = array(\n\t1 => 'PNG',\n\t3 => 'SVG'\n);\n\n$snmp_security_levels = array(\n\t'noAuthNoPriv' => 'noAuthNoPriv',\n\t'authNoPriv' => 'authNoPriv',\n\t'authPriv' => 'authPriv'\n);\n\n$snmp_versions = array(0 =>\n\t__('Not In Use'),\n\t__('Version %d', 1),\n\t__('Version %d', 2),\n\t__('Version %d', 3)\n);\n\n$snmp_auth_protocols = array(\n\t'[None]' => __('[None]'),\n\t'MD5'    => __('MD5'),\n\t'SHA'    => __('SHA'),\n\t'SHA224' => __('SHA-224'),\n\t'SHA256' => __('SHA-256'),\n\t'SHA392' => __('SHA-392'),\n\t'SHA512' => __('SHA-512'),\n);\n\n$snmp_priv_protocols = array(\n\t'[None]' => __('[None]'),\n\t'DES'    => __('DES'),\n\t'AES128' => __('AES-128'),\n\t'AES192' => __('AES-192'),\n\t'AES256' => __('AES-256')\n);\n\n$banned_snmp_strings = array(\n\t'End of MIB',\n\t'No Such'\n);\n\n$logfile_options = array(1 =>\n\t__('Logfile Only'),\n\t__('Logfile and Syslog/Eventlog'),\n\t__('Syslog/Eventlog Only')\n);\n\n$availability_options = array(\n\tAVAIL_NONE             => __('None'),\n\tAVAIL_SNMP_AND_PING    => __('Ping and SNMP Uptime'),\n\tAVAIL_SNMP_OR_PING     => __('Ping or SNMP Uptime'),\n\tAVAIL_SNMP             => __('SNMP Uptime'),\n\tAVAIL_SNMP_GET_SYSDESC => __('SNMP Desc'),\n\tAVAIL_SNMP_GET_NEXT    => __('SNMP getNext'),\n\tAVAIL_PING             => __('Ping')\n);\n\n$ping_methods = array(\n\tPING_ICMP => __('ICMP Ping'),\n\tPING_TCP  => __('TCP Ping'),\n\tPING_UDP  => __('UDP Ping')\n);\n\n$logfile_verbosity = array(\n\tPOLLER_VERBOSITY_NONE   => __('NONE - Syslog Only if Selected'),\n\tPOLLER_VERBOSITY_LOW    => __('LOW - Statistics and Errors'),\n\tPOLLER_VERBOSITY_MEDIUM => __('MEDIUM - Statistics, Errors and Results'),\n\tPOLLER_VERBOSITY_HIGH   => __('HIGH - Statistics, Errors, Results and Major I/O Events'),\n\tPOLLER_VERBOSITY_DEBUG  => __('DEBUG - Statistics, Errors, Results, I/O and Program Flow'),\n\tPOLLER_VERBOSITY_DEVDBG => __('DEVEL - Developer DEBUG Level')\n);\n\n$poller_options = array(\n\t1 => 'cmd.php',\n\t2 => 'spine'\n);\n\nif (read_config_option('path_spine') != '' && (!file_exists(read_config_option('path_spine')) || !is_executable(read_config_option('path_spine')))) {\n\tunset($poller_options[2]);\n}\n\n$aggregation_levels = array(\n\t1       => __('Selected Poller Interval'),\n\t30      => __('%d Seconds', 30),\n\t60      => __('1 Minute'),\n\t300     => __('%d Minutes', 5),\n\t600     => __('%d Minutes', 10),\n\t900     => __('%d Minutes', 15),\n\t1800    => __('%d Minutes', 30),\n\t3600    => __('1 Hour'),\n\t7200    => __('%d Hours', 2),\n\t10800   => __('%d Hours', 3),\n\t14400   => __('%d Hours', 4),\n\t21600   => __('%d Hours', 6),\n\t43200   => __('%d Hours', 12),\n\t86400   => __('%d Day', 1),\n\t604800  => __('%d Week', 1)\n);\n\n$sampling_intervals = array(\n\t10    => __('Every %d Seconds', 10),\n\t15    => __('Every %d Seconds', 15),\n\t20    => __('Every %d Seconds', 20),\n\t30    => __('Every %d Seconds', 30),\n\t60    => __('Every Minute'),\n\t300   => __('Every %d Minutes', 5),\n\t600   => __('Every %d Minutes', 10),\n\t900   => __('Every %d Minutes', 15),\n\t1200  => __('Every %d Minutes', 20),\n\t1800  => __('Every %d Minutes', 30),\n\t3600  => __('Every Hour'),\n\t7200  => __('Every %d Hours', 2),\n\t14400 => __('Every %d Hours', 4),\n\t28800 => __('Every %d Hours', 8),\n\t43200 => __('Every %d Hours', 12),\n\t86400 => __('Every %d Day', 1)\n);\n\n$heartbeats = array(\n\t20     => __('%d Seconds', 20),\n\t30     => __('%d Seconds', 30),\n\t40     => __('%d Seconds', 40),\n\t45     => __('%d Seconds', 45),\n\t60     => __('%d Seconds', 60),\n\t90     => __('%d Seconds', 90),\n\t120    => __('%d Minutes', 2),\n\t300    => __('%d Minutes', 5),\n\t330    => __('%0.1f Minutes', 5.5),\n\t600    => __('%d Minutes', 10),\n\t660    => __('%d Minutes', 11),\n\t900    => __('%d Minutes', 15),\n\t1200   => __('%d Minutes', 20),\n\t1800   => __('%d Minutes', 30),\n\t2400   => __('%d Minutes', 40),\n\t3600   => __('%d Hour', 1),\n\t7200   => __('%d Hours', 2),\n\t14400  => __('%d Hours', 4),\n\t28800  => __('%d Hours', 8),\n\t57600  => __('%d Hours', 16),\n\t86400  => __('%d Day', 1),\n\t172800 => __('%d Days', 2)\n);\n\n$timespans = array(\n\t3600      => __('%d Hour', 1),\n\t7200      => __('%d Hours', 2),\n\t14400     => __('%d Hours', 4),\n\t21600     => __('%d Hours', 6),\n\t43200     => __('%d Hours', 12),\n\t86400     => __('%d Day', 1),\n\t172800    => __('%d Days', 2),\n\t345600    => __('%d Days', 4),\n\t604800    => __('%d Week', 1),\n\t1209600   => __('%d Weeks', 2),\n\t1814400   => __('%d Weeks', 3),\n\t2618784   => __('%d Month', 1),\n\t5237568   => __('%d Months', 2),\n\t7856352   => __('%d Months', 3),\n\t10475136  => __('%d Months', 4),\n\t15712704  => __('%d Months', 6),\n\t31536000  => __('%d Year', 1),\n\t63072000  => __('%d Years', 2),\n\t94608000  => __('%d Years', 3),\n\t126144000 => __('%d Years', 4),\n\t157680000 => __('%d Years', 5),\n\t189216000 => __('%d Years', 6),\n\t220752000 => __('%d Years', 7),\n\t252288000 => __('%d Years', 8),\n\t283824000 => __('%d Years', 9),\n\t315360000 => __('%d Years', 10)\n);\n\n$poller_intervals = array(\n\t10  => __('Every %d Seconds', 10),\n\t15  => __('Every %d Seconds', 15),\n\t20  => __('Every %d Seconds', 20),\n\t30  => __('Every %d Seconds', 30),\n\t60  => __('Every Minute'),\n\t300 => __('Every %d Minutes', 5)\n);\n\n$poller_sync_intervals = array(\n\t0     => __('Disabled/Manual'),\n\t1800  => __('Every %d Minutes', 30),\n\t3600  => __('Every Hour'),\n\t7200  => __('Every %d Hours', 2),\n\t14400 => __('Every %d Hours', 4),\n\t28800 => __('Every %d Hours', 8),\n\t57600 => __('Every %d Hours', 16),\n\t86400 => __('Every day'),\n);\n\n$device_threads = array(\n\t1 => __('1 Thread'),\n\t2 => __('%d Threads', 2),\n\t3 => __('%d Threads', 3),\n\t4 => __('%d Threads', 4),\n\t5 => __('%d Threads', 5),\n\t6 => __('%d Threads', 6),\n\t7 => __('%d Threads', 7),\n\t8 => __('%d Threads', 8),\n\t9 => __('%d Threads', 9),\n\t10 => __('%d Threads', 10)\n);\n\n$cron_intervals = array(\n\t60  => __('Every Minute'),\n\t300 => __('Every %d Minutes', 5)\n);\n\n$registered_cacti_names = array(\n\t'path_cacti'\n);\n\n$graph_views = array(1 =>\n\t__('Tree View'),\n\t__('List View'),\n\t__('Preview View')\n);\n\n$auth_methods = array(\n\t1 => __('Builtin Authentication'),\n\t2 => __('Web Basic Authentication')\n);\n\nif (function_exists('ldap_connect')) {\n\t$auth_methods[3] = __('LDAP Authentication');\n\t$auth_methods[4] = __('Multiple LDAP/AD Domains');\n}\n\n$domain_types = array(\n\t'1' => __('LDAP'),\n\t'2' => __('Active Directory')\n);\n\n$auth_realms = get_auth_realms();\n\n$ldap_versions = array(\n\t2 => __('Version %d', 2),\n\t3 => __('Version %d', 3)\n);\n\n$ldap_encryption = array(\n\t0 => __('None'),\n\t1 => __('LDAPS'),\n\t2 => __('LDAP + TLS')\n);\n\n$ldap_tls_cert_req = array(\n\tLDAP_OPT_X_TLS_NEVER  => __('Never'),\n\tLDAP_OPT_X_TLS_HARD   => __('Hard'),\n\tLDAP_OPT_X_TLS_DEMAND => __('Demand'),\n\tLDAP_OPT_X_TLS_ALLOW  => __('Allow'),\n\tLDAP_OPT_X_TLS_TRY    => __('Try')\n);\n\n$ldap_modes = array(\n\t0 => __('No Searching'),\n\t1 => __('Anonymous Searching'),\n\t2 => __('Specific Searching')\n);\n\n$rrdtool_versions = array(\n\t'1.3.0' => 'RRDtool 1.3+',\n\t'1.4.0' => 'RRDtool 1.4+',\n\t'1.5.0' => 'RRDtool 1.5+',\n\t'1.6.0' => 'RRDtool 1.6+',\n\t'1.7.0' => 'RRDtool 1.7+',\n\t'1.7.1' => 'RRDtool 1.7.1+',\n\t'1.7.2' => 'RRDtool 1.7.2+',\n\t'1.8.0' => 'RRDtool 1.8+'\n);\n\n$i18n_modes = array(\n    0 => __('Disabled'),\n    1 => __('Enabled'),\n    2 => __('Enabled (strict mode)'),\n);\n\n$cdef_item_types = array(\n\tCVDEF_ITEM_TYPE_FUNCTION => __('Function'),\n\tCVDEF_ITEM_TYPE_OPERATOR => __('Operator'),\n\tCVDEF_ITEM_TYPE_SPEC_DS  => __('Special Data Source'),\n\tCVDEF_ITEM_TYPE_CDEF     => __('Another CDEF'),\n\tCVDEF_ITEM_TYPE_STRING   => __('Custom String')\n);\n\n$graph_color_alpha = array(\n\t'00' => '  0%',\n\t'19' => ' 10%',\n\t'33' => ' 20%',\n\t'4C' => ' 30%',\n\t'66' => ' 40%',\n\t'7F' => ' 50%',\n\t'99' => ' 60%',\n\t'B2' => ' 70%',\n\t'CC' => ' 80%',\n\t'E5' => ' 90%',\n\t'FF' => '100%'\n);\n\n$tree_sort_types = array(\n\tTREE_ORDERING_INHERIT    => __('Inherit Parent Sorting'),\n\tTREE_ORDERING_NONE       => __('Manual Ordering (No Sorting)'),\n\tTREE_ORDERING_ALPHABETIC => __('Alphabetic Ordering'),\n\tTREE_ORDERING_NATURAL    => __('Natural Ordering'),\n\tTREE_ORDERING_NUMERIC    => __('Numeric Ordering')\n);\n\n$tree_item_types = array(\n\tTREE_ITEM_TYPE_HEADER => __('Header'),\n\tTREE_ITEM_TYPE_GRAPH  => __('Graph'),\n\tTREE_ITEM_TYPE_HOST   => __('Device')\n);\n\n$host_group_types = array(\n\tHOST_GROUPING_GRAPH_TEMPLATE   => __('Graph Template'),\n\tHOST_GROUPING_DATA_QUERY_INDEX => __('Data Query Index')\n);\n\n$custom_data_source_types = array(\n\t'CURRENT_DATA_SOURCE'            => __('Current Graph Item Data Source'),\n\t'CURRENT_DATA_SOURCE_PI'         => __('Current Graph Item Polling Interval'),\n\t'ALL_DATA_SOURCES_NODUPS'        => __('All Data Sources (Do not Include Duplicates)'),\n\t'ALL_DATA_SOURCES_DUPS'          => __('All Data Sources (Include Duplicates)'),\n\t'SIMILAR_DATA_SOURCES_NODUPS'    => __('All Similar Data Sources (Do not Include Duplicates)'),\n\t'SIMILAR_DATA_SOURCES_NODUPS_PI' => __('All Similar Data Sources (Do not Include Duplicates) Polling Interval'),\n\t'SIMILAR_DATA_SOURCES_DUPS'      => __('All Similar Data Sources (Include Duplicates)'),\n\t'CURRENT_DS_MINIMUM_VALUE'       => __('Current Data Source Item: Minimum Value'),\n\t'CURRENT_DS_MAXIMUM_VALUE'       => __('Current Data Source Item: Maximum Value'),\n\t'CURRENT_GRAPH_MINIMUM_VALUE'    => __('Graph: Lower Limit'),\n\t'CURRENT_GRAPH_MAXIMUM_VALUE'    => __('Graph: Upper Limit'),\n\t'COUNT_ALL_DS_NODUPS'            => __('Count of All Data Sources (Do not Include Duplicates)'),\n\t'COUNT_ALL_DS_DUPS'              => __('Count of All Data Sources (Include Duplicates)'),\n\t'COUNT_SIMILAR_DS_NODUPS'        => __('Count of All Similar Data Sources (Do not Include Duplicates)'),\n\t'COUNT_SIMILAR_DS_DUPS'\t         => __('Count of All Similar Data Sources (Include Duplicates)')\n);\n\nif ($config['poller_id'] == 1 || $config['connection'] == 'online') {\n\t$menu = array(\n\t\t__('Main Console') => array(\n\t\t\t'index.php' => __('Console Page')\n\t\t\t),\n\t\t__('Create') => array(\n\t\t\t'graphs_new.php' => __('New Graphs'),\n\t\t\t'host.php?action=edit&create=true' => __('New Device')\n\t\t\t),\n\t\t__('Management') => array(\n\t\t\t'host.php'             => __('Devices'),\n\t\t\t'sites.php'            => __('Sites'),\n\t\t\t'tree.php'             => __('Trees'),\n\t\t\t'graphs.php'           => __('Graphs'),\n\t\t\t'data_sources.php'     => __('Data Sources'),\n\t\t\t'aggregate_graphs.php' => __('Aggregates'),\n\t\t\t),\n\t\t__('Data Collection') => array(\n\t\t\t'pollers.php' => __('Data Collectors'),\n\t\t\t'data_queries.php' => __('Data Queries'),\n\t\t\t'data_input.php'   => __('Data Input Methods')\n\t\t\t),\n\t\t__('Templates') => array(\n\t\t\t'host_templates.php'      => __('Device'),\n\t\t\t'graph_templates.php'     => __('Graph'),\n\t\t\t'data_templates.php'      => __('Data Source'),\n\t\t\t'aggregate_templates.php' => __('Aggregate'),\n\t\t\t'color_templates.php'     => __('Color')\n\t\t\t),\n\t\t__('Automation') => array(\n\t\t\t'automation_networks.php'    => __('Networks'),\n\t\t\t'automation_devices.php'     => __('Discovered Devices'),\n\t\t\t'automation_templates.php'   => __('Device Rules'),\n\t\t\t'automation_graph_rules.php' => __('Graph Rules'),\n\t\t\t'automation_tree_rules.php'  => __('Tree Rules'),\n\t\t\t'automation_snmp.php'        => __('SNMP Options'),\n\t\t\t),\n\t\t__('Presets') => array(\n\t\t\t'data_source_profiles.php' => __('Data Profiles'),\n\t\t\t'cdef.php'                 => __('CDEFs'),\n\t\t\t'vdef.php'                 => __('VDEFs'),\n\t\t\t'color.php'                => __('Colors'),\n\t\t\t'gprint_presets.php'       => __('GPRINTs')\n\t\t\t),\n\t\t__('Import/Export') => array(\n\t\t\t'templates_import.php' => __('Import Templates'),\n\t\t\t'package_import.php'   => __('Import Packages'),\n\t\t\t'templates_export.php' => __('Export Templates')\n\t\t\t),\n\t\t__('Configuration')  => array(\n\t\t\t'settings.php'         => __('Settings'),\n\t\t\t'user_admin.php'       => __('Users'),\n\t\t\t'user_group_admin.php' => __('User Groups'),\n\t\t\t'user_domains.php'     => __('User Domains')\n\t\t\t),\n\t\t__('Utilities') => array(\n\t\t\t'utilities.php'  => __('System Utilities'),\n\t\t\t'links.php'      => __('External Links'),\n\t\t\t),\n\t\t__('Troubleshooting') => array(\n\t\t\t'data_debug.php' => __('Data Sources'),\n\t\t)\n\t);\n} else {\n\t$menu = array(\n\t\t__('Management') => array(\n\t\t\t'host.php' => __('Devices')\n\t\t\t),\n\t\t__('Data Collection') => array(\n\t\t\t'pollers.php' => __('Data Collectors')\n\t\t\t),\n\t\t__('Configuration')  => array(\n\t\t\t'settings.php' => __('Settings')\n\t\t\t),\n\t\t__('Utilities') => array(\n\t\t\t'utilities.php' => __('System Utilities')\n\t\t\t)\n\t);\n}\n\n$menu_glyphs = array(\n\t__('Main Console') => 'fa fa-map',\n\t__('Create') => 'fa fa-chart-area',\n\t__('Management') => 'fa fa-home',\n\t__('Data Collection') => 'fa fa-database',\n\t__('Templates') => 'fa fa-clone',\n\t__('Automation') => 'fab fa-superpowers',\n\t__('Presets') => 'fa fa-archive',\n\t__('Import/Export') => 'fa fa-exchange-alt',\n\t__('Configuration')  => 'fa fa-sliders-h',\n\t__('Utilities') => 'fa fa-cogs',\n\t__('External Links') => 'fa fa-external-link-alt',\n\t__('Support') => 'fa fa-question-circle',\n\t__('Troubleshooting') => 'fa fa-bug'\n);\n\n$device_classes = array(\n\t'wireless'     => __('Access Points, Controllers'),\n\t'application'  => __('Application Related'),\n\t'cacti'        => __('Cacti Related'),\n\t'database'     => __('Database Related'),\n\t'facilities'   => __('Facilities Related'),\n\t'general'      => __('Generic Device'),\n\t'hpc'          => __('HPC/Grid Computing'),\n\t'hypervisor'   => __('Hypervisor Related'),\n\t'remotemgmt'   => __('ILO, IPMI, iDrac, etc.'),\n\t'license'      => __('Licensing Related'),\n\t'linux'        => __('Linux Related'),\n\t'loadbalancer' => __('Load Balancer'),\n\t'switch'       => __('Network Switch'),\n\t'router'       => __('Network Router'),\n\t'firewall'     => __('Network Firewall'),\n\t'storage'      => __('Storage Related'),\n\t'telephony'    => __('Telco Related'),\n\t'webserver'    => __('Web Server Related'),\n\t'windows'      => __('Windows Related'),\n\t'ups'          => __('UPS Related'),\n\t'unassigned'   => __('Unassigned')\n);\n\nif ((isset($_SESSION['sess_user_id']))) {\n\tif (db_table_exists('external_links')) {\n\t\t$consoles = db_fetch_assoc('SELECT id, title, extendedstyle\n\t\t\tFROM external_links\n\t\t\tWHERE style=\"CONSOLE\"\n\t\t\tAND enabled=\"on\"\n\t\t\tORDER BY extendedstyle, sortorder, id');\n\n\t\tif (cacti_sizeof($consoles)) {\n\t\t\tforeach ($consoles as $page) {\n\t\t\t\tif (!$config['is_web'] || is_realm_allowed($page['id']+10000)) {\n\t\t\t\t\t$menuname = (isset($page['extendedstyle']) && $page['extendedstyle'] != '' ? $page['extendedstyle'] : __('External Links'));\n\t\t\t\t\t$menu[$menuname]['link.php?id=' . $page['id']] = $page['title'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n$log_tail_lines = array(\n\t-1    => __('All Lines'),\n\t10    => __('%d Lines', 10),\n\t15    => __('%d Lines', 15),\n\t20    => __('%d Lines', 20),\n\t50    => __('%d Lines', 50),\n\t100   => __('%d Lines', 100),\n\t200   => __('%d Lines', 200),\n\t500   => __('%d Lines', 500),\n\t1000  => __('%d Lines', 1000),\n\t2000  => __('%d Lines', 2000),\n\t3000  => __('%d Lines', 3000),\n\t5000  => __('%d Lines', 5000),\n\t10000 => __('%d Lines', 10000)\n);\n\n$item_rows = array(\n\t10    => '10',\n\t15    => '15',\n\t16    => '16',\n\t17    => '17',\n\t18    => '18',\n\t19    => '19',\n\t20    => '20',\n\t21    => '21',\n\t22    => '22',\n\t23    => '23',\n\t24    => '24',\n\t25    => '25',\n\t26    => '26',\n\t27    => '27',\n\t30    => '30',\n\t40    => '40',\n\t44    => '44',\n\t45    => '45',\n\t50    => '50',\n\t100   => '100',\n\t250   => '250',\n\t500   => '500',\n\t750   => '750',\n\t1000  => '1000',\n\t2000  => '2000',\n\t3000  => '3000',\n\t4000  => '4000',\n\t5000  => '5000',\n);\n\n// Adjust the number of items rows based upon max_input_vars\n$max_size = ini_get('max_input_vars') - 20;\nforeach($item_rows as $index => $row) {\n\tif ($index > $max_size) {\n\t\tunset($item_rows[$index]);\n\t}\n}\n\n$graphs_per_page = array(\n\t4   => '4',\n\t6   => '6',\n\t8   => '8',\n\t9   => '9',\n\t10  => '10',\n\t12  => '12',\n\t14  => '14',\n\t15  => '15',\n\t16  => '16',\n\t18  => '18',\n\t20  => '20',\n\t24  => '24',\n\t25  => '25',\n\t27  => '27',\n\t28  => '28',\n\t30  => '30',\n\t32  => '32',\n\t35  => '35',\n\t40  => '40',\n\t50  => '50',\n\t100 => '100'\n);\n\n$page_refresh_interval = array(\n\t5       => __('%d Seconds', 5),\n\t10      => __('%d Seconds', 10),\n\t20      => __('%d Seconds', 20),\n\t30      => __('%d Seconds', 30),\n\t60      => __('1 Minute'),\n\t300     => __('%d Minutes', 5),\n\t600     => __('%d Minutes', 10),\n\t9999999 => __('Never')\n);\n\n$user_auth_realms = array(\n\t8    => __('Console Access'),\n\t7    => __('View Graphs'),\n\t25   => __('Realtime Graphs'),\n\t20   => __('Update Profile'),\n\t24   => __('External Links'),\n\n\t1    => __('Users/Groups'),\n\t15   => __('Settings/Utilities'),\n\t23   => __('Automation'),\n\t26   => __('Installation/Upgrades'),\n\n\t2    => __('Data Input Methods'),\n\t13   => __('Data Queries'),\n\n\t3    => __('Sites/Devices/Data'),\n\t5    => __('Graphs'),\n\t4    => __('Trees'),\n\t1043 => __('Spike Handling'),\n\n\t9    => __('Data Source Profiles'),\n\t14   => __('Presets'),\n\n\t10   => __('Graph Templates'),\n\t11   => __('Data Templates'),\n\t12   => __('Device Templates'),\n\n\t16   => __('Export Templates'),\n\t17   => __('Import Templates'),\n\n\t18   => __('Log Administration'),\n\t19   => __('Log Viewing'),\n\n\t21   => __('Reports Administration'),\n\t22   => __('Reports Creation'),\n\t27   => __('Show Graph Action Icons'),\n\t28   => __('Show User Help Links'),\n\t101  => __('Plugin Administration')\n);\n\n$user_auth_roles = array(\n\t__('Normal User')            => array(7, 19, 20, 22, 24, 25, 27, 28),\n\t__('Template Editor')        => array(8, 2, 9, 10, 11, 12, 13, 14, 16, 17),\n\t__('General Administration') => array(8, 3, 4, 5, 23, 1043),\n\t__('System Administration')  => array(8, 15, 26, 1, 18, 21, 101)\n);\n\n$user_auth_realm_filenames = array(\n\t'about.php' => -1,\n\t'cdef.php' => 14,\n\t'clog.php' => 18,\n\t'clog_user.php' => 19,\n\t'color.php' => 5,\n\t'data_debug.php' => 15,\n\t'data_input.php' => 2,\n\t'data_sources.php' => 3,\n\t'data_source_profiles.php' => 9,\n\t'data_templates.php' => 11,\n\t'gprint_presets.php' => 5,\n\t'graph.php' => 7,\n\t'graph_image.php' => 7,\n\t'graph_json.php' => 7,\n\t'graph_xport.php' => 7,\n\t'graph_templates.php' => 10,\n\t'graph_templates_inputs.php' => 10,\n\t'graph_templates_items.php' => 10,\n\t'graph_view.php' => 7,\n\t'graph_realtime.php' => 25,\n\t'graphs.php' => 5,\n\t'graphs_items.php' => 5,\n\t'graphs_new.php' => 5,\n\t'sites.php' => 3,\n\t'pollers.php' => 3,\n\t'host.php' => 3,\n\t'host_templates.php' => 12,\n\t'index.php' => 8,\n\t'install.php' => 26,\n\t'step_json.php' => 26,\n\t'managers.php' => 15,\n\t'rrdcleaner.php' => 15,\n\t'rrdcheck.php' => 15,\n\t'settings.php' => 15,\n\t'links.php' => 15,\n\t'data_queries.php' => 13,\n\t'templates_export.php' => 16,\n\t'templates_import.php' => 17,\n\t'package_import.php' => 17,\n\t'tree.php' => 4,\n\t'user_admin.php' => 1,\n\t'user_domains.php' => 1,\n\t'user_group_admin.php' => 1,\n\t'utilities.php' => 15,\n\t'vdef.php' => 14,\n\t'smtp_servers.php' => 8,\n\t'email_templates.php' => 8,\n\t'event_queue.php' => 8,\n\t'smtp_queue.php' => 8,\n\t'logout.php' => -1,\n\t'auth_profile.php' => 20,\n\t'auth_changepassword.php' => -1,\n\t'reports_user.php' => 22,\n\t'reports_admin.php' => 21,\n\t'automation_graph_rules.php' => 23,\n\t'automation_tree_rules.php' => 23,\n\t'automation_templates.php' => 23,\n\t'automation_networks.php' => 23,\n\t'automation_devices.php' => 23,\n\t'automation_snmp.php' => 23,\n\t'color_templates.php' => 5,\n\t'color_templates_items.php' => 5,\n\t'aggregate_templates.php' => 5,\n\t'aggregate_graphs.php' => 5,\n\t'aggregate_items.php' => 5,\n\t'spikekill.php' => 1043,\n\t'permission_denied.php' => -1,\n\t'help.php' => -1\n);\n\n$hash_type_codes = array(\n\t'round_robin_archive' => '15',\n\t'cdef' => '05',\n\t'cdef_item' => '14',\n\t'gprint_preset' => '06',\n\t'data_input_method' => '03',\n\t'data_input_field' => '07',\n\t'data_template' => '01',\n\t'data_template_item' => '08',\n\t'graph_template' => '00',\n\t'graph_template_item' => '10',\n\t'graph_template_input' => '09',\n\t'data_query' => '04',\n\t'data_query_graph' => '11',\n\t'data_query_sv_graph' => '12',\n\t'data_query_sv_data_source' => '13',\n\t'host_template' => '02',\n\t'vdef' => '18',\n\t'vdef_item' => '19',\n\t'data_source_profile' => '20'\n);\n\n$hash_type_names = array(\n\t'cdef'                 => __('CDEF'),\n\t'cdef_item'            => __('CDEF Item'),\n\t'gprint_preset'        => __('GPRINT Preset'),\n\t'data_template'        => __('Data Template'),\n\t'data_input_method'    => __('Data Input Method'),\n\t'data_input_field'     => __('Data Input Field'),\n\t'data_source_profile'  => __('Data Source Profile'),\n\t'data_template_item'   => __('Data Template Item'),\n\t'graph_template'       => __('Graph Template'),\n\t'graph_template_item'  => __('Graph Template Item'),\n\t'graph_template_input' => __('Graph Template Input'),\n\t'data_query'           => __('Data Query'),\n\t'host_template'        => __('Device Template'),\n\t'vdef'                 => __('VDEF'),\n\t'vdef_item'            => __('VDEF Item')\n);\n\n$hash_system_data_inputs = array(\n\t'3eb92bb845b9660a7445cf9740726522', // Get SNMP Data\n\t'bf566c869ac6443b0c75d1c32b5a350e', // Get SNMP Data (Indexed)\n\t'80e9e4c4191a5da189ae26d0e237f015', // Get Script Data (Indexed)\n\t'332111d8b54ac8ce939af87a7eac0c06'  // Get Script Server Data (Indexed)\n);\n\n$host_struc = array(\n\t'host_template_id',\n\t'description',\n\t'hostname',\n\t'site_id',\n\t'poller_id',\n\t'notes',\n\t'snmp_community',\n\t'snmp_version',\n\t'snmp_username',\n\t'snmp_password',\n\t'snmp_auth_protocol',\n\t'snmp_priv_passphrase',\n\t'snmp_priv_protocol',\n\t'snmp_context',\n\t'snmp_engine_id',\n\t'snmp_port',\n\t'snmp_timeout',\n\t'max_oids',\n\t'bulk_walk_size',\n\t'device_threads',\n\t'availability_method',\n\t'location',\n\t'external_id',\n\t'ping_method',\n\t'ping_port',\n\t'ping_timeout',\n\t'ping_retries',\n\t'disabled',\n\t'status',\n\t'status_event_count',\n\t'status_fail_date',\n\t'status_rec_date',\n\t'status_last_error',\n\t'min_time',\n\t'max_time',\n\t'cur_time',\n\t'avg_time',\n\t'total_polls',\n\t'failed_polls',\n\t'availability'\n);\n\n$graph_timespans = array(\n\tGT_LAST_HALF_HOUR => __('Last Half Hour'),\n\tGT_LAST_HOUR      => __('Last Hour'),\n\tGT_LAST_2_HOURS   => __('Last %d Hours', 2),\n\tGT_LAST_4_HOURS   => __('Last %d Hours', 4),\n\tGT_LAST_6_HOURS   => __('Last %d Hours', 6),\n\tGT_LAST_12_HOURS  => __('Last %d Hours', 12),\n\tGT_LAST_DAY       => __('Last Day'),\n\tGT_LAST_2_DAYS    => __('Last %d Days', 2),\n\tGT_LAST_3_DAYS    => __('Last %d Days', 3),\n\tGT_LAST_4_DAYS    => __('Last %d Days', 4),\n\tGT_LAST_WEEK      => __('Last Week'),\n\tGT_LAST_2_WEEKS   => __('Last %d Weeks', 2),\n\tGT_LAST_MONTH     => __('Last Month'),\n\tGT_LAST_2_MONTHS  => __('Last %d Months', 2),\n\tGT_LAST_3_MONTHS  => __('Last %d Months', 3),\n\tGT_LAST_4_MONTHS  => __('Last %d Months', 4),\n\tGT_LAST_6_MONTHS  => __('Last %d Months', 6),\n\tGT_LAST_YEAR      => __('Last Year'),\n\tGT_LAST_2_YEARS   => __('Last %d Years', 2),\n\tGT_DAY_SHIFT      => __('Day Shift'),\n\tGT_THIS_DAY       => __('This Day'),\n\tGT_THIS_WEEK      => __('This Week'),\n\tGT_THIS_MONTH     => __('This Month'),\n\tGT_THIS_YEAR      => __('This Year'),\n\tGT_PREV_DAY       => __('Previous Day'),\n\tGT_PREV_WEEK      => __('Previous Week'),\n\tGT_PREV_MONTH     => __('Previous Month'),\n\tGT_PREV_YEAR      => __('Previous Year')\n);\n\n// ***** MUST BE KEPT IN SYNC WITH graph_timeshifts_vals *********\n$graph_timeshifts = array(\n\tGTS_HALF_HOUR => __('%d Min', 30),\n\tGTS_1_HOUR    => __('%d Hour', 1),\n\tGTS_2_HOURS   => __('%d Hours', 2),\n\tGTS_4_HOURS   => __('%d Hours', 4),\n\tGTS_6_HOURS   => __('%d Hours', 6),\n\tGTS_12_HOURS  => __('%d Hours', 12),\n\tGTS_1_DAY     => __('%d Day', 1),\n\tGTS_2_DAYS    => __('%d Days', 2),\n\tGTS_3_DAYS    => __('%d Days', 3),\n\tGTS_4_DAYS    => __('%d Days', 4),\n\tGTS_1_WEEK    => __('%d Week', 1),\n\tGTS_2_WEEKS   => __('%d Weeks', 2),\n\tGTS_1_MONTH   => __('%d Month', 1),\n\tGTS_2_MONTHS  => __('%d Months', 2),\n\tGTS_3_MONTHS  => __('%d Months', 3),\n\tGTS_4_MONTHS  => __('%d Months', 4),\n\tGTS_6_MONTHS  => __('%d Months', 6),\n\tGTS_1_YEAR    => __('%d Year', 1),\n\tGTS_2_YEARS   => __('%d Years', 2)\n);\n\n// ***** MUST BE KEPT IN SYNC WITH graph_timeshifts *********\n$graph_timeshifts_vals = array(\n\tGTS_HALF_HOUR => sprintf('%d Min', 30),\n\tGTS_1_HOUR    => sprintf('%d Hour', 1),\n\tGTS_2_HOURS   => sprintf('%d Hours', 2),\n\tGTS_4_HOURS   => sprintf('%d Hours', 4),\n\tGTS_6_HOURS   => sprintf('%d Hours', 6),\n\tGTS_12_HOURS  => sprintf('%d Hours', 12),\n\tGTS_1_DAY     => sprintf('%d Day', 1),\n\tGTS_2_DAYS    => sprintf('%d Days', 2),\n\tGTS_3_DAYS    => sprintf('%d Days', 3),\n\tGTS_4_DAYS    => sprintf('%d Days', 4),\n\tGTS_1_WEEK    => sprintf('%d Week', 1),\n\tGTS_2_WEEKS   => sprintf('%d Weeks', 2),\n\tGTS_1_MONTH   => sprintf('%d Month', 1),\n\tGTS_2_MONTHS  => sprintf('%d Months', 2),\n\tGTS_3_MONTHS  => sprintf('%d Months', 3),\n\tGTS_4_MONTHS  => sprintf('%d Months', 4),\n\tGTS_6_MONTHS  => sprintf('%d Months', 6),\n\tGTS_1_YEAR    => sprintf('%d Year', 1),\n\tGTS_2_YEARS   => sprintf('%d Years', 2)\n);\n\n$graph_weekdays = array(\n\tWD_SUNDAY    => date('l', strtotime('Sunday')),\n\tWD_MONDAY    => date('l', strtotime('Monday')),\n\tWD_TUESDAY   => date('l', strtotime('Tuesday')),\n\tWD_WEDNESDAY => date('l', strtotime('Wednesday')),\n\tWD_THURSDAY  => date('l', strtotime('Thursday')),\n\tWD_FRIDAY    => date('l', strtotime('Friday')),\n\tWD_SATURDAY  => date('l', strtotime('Saturday'))\n);\n\n$dateformats = array(\n\tGD_MO_D_Y => __('Month Number, Day, Year'),\n\tGD_MN_D_Y => __('Month Name, Day, Year'),\n\tGD_D_MO_Y => __('Day, Month Number, Year'),\n\tGD_D_MN_Y => __('Day, Month Name, Year'),\n\tGD_Y_MO_D => __('Year, Month Number, Day'),\n\tGD_Y_MN_D => __('Year, Month Name, Day')\n);\n\n$datechar = array(\n\tGDC_HYPHEN => '-',\n\tGDC_SLASH  => '/',\n\tGDC_DOT    => '.'\n);\n\n$dsstats_refresh_interval = array(\n\t'boost' => __('After Boost'),\n\t'60'    => __('1 Hour'),\n\t'120'   => __('%d Hours', 2),\n\t'180'   => __('%d Hours', 3),\n\t'240'   => __('%d Hours', 4),\n\t'300'   => __('%d Hours', 5),\n\t'360'   => __('%d Hours', 6)\n);\n\n$dsstats_max_memory = array(\n\t'32'   => __('%d MBytes', 32),\n\t'64'   => __('%d MBytes', 64),\n\t'128'  => __('%d MBytes', 128),\n\t'256'  => __('%d MBytes', 256),\n\t'512'  => __('%d MBytes', 512),\n\t'1024' => __('1 GByte'),\n\t'1536' => __('%s GBytes', '1.5'),\n\t'2048' => __('%d GBytes', 2),\n\t'3072' => __('%d GBytes', 3)\n);\n\n$dsstats_hourly_avg = array(\n\t'60'  => __('1 Hour'),\n\t'120' => __('%d Hours', 2),\n\t'180' => __('%d Hours', 3),\n\t'240' => __('%d Hours', 4),\n\t'300' => __('%d Hours', 5),\n\t'360' => __('%d Hours', 6)\n);\n\n$rrdcheck_intervals = array(\n\t'boost' => __('After Boost'),\n\t'60'  => __('1 Hour'),\n\t'240' => __('%d Hours', 4),\n\t'1440' => __('%d Hours', 24)\n);\n\n$boost_max_rows_per_select = array(\n\t'2000'   => __('2,000 Data Source Items'),\n\t'5000'   => __('5,000 Data Source Items'),\n\t'10000'  => __('10,000 Data Source Items'),\n\t'15000'  => __('15,000 Data Source Items'),\n\t'25000'  => __('25,000 Data Source Items'),\n\t'50000'  => __('50,000 Data Source Items (Default)'),\n\t'100000' => __('100,000 Data Source Items'),\n\t'200000' => __('200,000 Data Source Items'),\n\t'400000' => __('400,000 Data Source Items')\n);\n\n$boost_utilities_interval = array(\n\t'999999' => __('Disabled'),\n\t'5'      => __('%d Seconds', 5),\n\t'10'     => __('%d Seconds', 10),\n\t'15'     => __('%d Seconds', 15),\n\t'20'     => __('%d Seconds', 20),\n\t'30'     => __('%d Seconds', 30),\n\t'60'     => __('1 Minute'),\n\t'300'    => __('%d Minutes', 5)\n);\n\n$boost_refresh_interval = array(\n\t'30'  => __('%d Minutes', 30),\n\t'60'  => __('1 Hour'),\n\t'120' => __('2 Hours', 2),\n\t'240' => __('4 Hours', 4),\n\t'360' => __('6 Hours', 6)\n);\n\n$boost_max_runtime = array(\n\t'1200' => __('%d Minutes', 20),\n\t'2400' => __('%d Minutes', 40),\n\t'3600' => __('1 Hour'),\n\t'4800' => __('%s Hours', '1.5')\n);\n\n$boost_max_memory = array(\n\t'256'  => __('%d MBytes', 256),\n\t'512'  => __('%d MBytes', 512),\n\t'1024' => __('%d GByte', 1),\n\t'1536' => __('%s GBytes', '1.5'),\n\t'2048' => __('%d GBytes', 2),\n\t'3072' => __('%d GBytes', 3),\n\t'4096' => __('%d GBytes', 4),\n\t'5120' => __('%d GBytes', 5),\n\t'6144' => __('%d GBytes', 6),\n\t'8192' => __('%d GBytes', 8),\n\t'-1' => __('Infinity')\n);\n\n$realtime_window = array(\n\t30   => __('%d Seconds', 30),\n\t45   => __('%d Seconds', 45),\n\t60   => __('1 Minute'),\n\t90   => __('%s Minutes', '1.5'),\n\t120  => __('%d Minutes', 2),\n\t300  => __('%d Minutes', 5),\n\t600  => __('%d Minutes', 10),\n\t1200 => __('%d Minutes', 20),\n\t1800 => __('%d Minutes', 30),\n\t3600 => __('1 Hour')\n);\n\n$realtime_refresh = array(\n\t1   => __('%d Seconds', 1),\n\t2   => __('%d Seconds', 2),\n\t5   => __('%d Seconds', 5),\n\t10  => __('%d Seconds', 10),\n\t15  => __('%d Seconds', 15),\n\t20  => __('%d Seconds', 20),\n\t30  => __('%d Seconds', 30),\n\t60  => __('1 Minute'),\n\t120 => __('%d Minutes', 2)\n);\n\n$attachment_sizes = array(\n\t1048576   => __('1 Megabyte'),\n\t2097152   => __('%d Megabytes', 2),\n\t4194304   => __('%d Megabytes', 4),\n\t10485760  => __('%d Megabytes', 10),\n\t20971520  => __('%d Megabytes', 20),\n\t52428800  => __('%d Megabytes', 50),\n\t104857600 => __('%d Megabytes', 100),\n);\n\n$reports_actions = array(\n\tREPORTS_SEND_NOW  => __('Send Now'),\n\tREPORTS_DUPLICATE => __('Duplicate'),\n\tREPORTS_ENABLE    => __('Enable'),\n\tREPORTS_DISABLE   => __('Disable'),\n\tREPORTS_DELETE    => __('Delete'),\n);\n\nif (!$config['is_web'] || is_realm_allowed(21)) {\n\t$reports_actions[REPORTS_OWN] = __('Take Ownership');\n}\n\n$attach_types = array(\n\tREPORTS_TYPE_INLINE_PNG => __('Inline PNG Image'),\n\t#REPORTS_TYPE_INLINE_JPG => 'Inline JPEG Image'\n);\n\nif (extension_loaded(REPORTS_EXTENSION_GD)) {\n\t$attach_types[REPORTS_TYPE_INLINE_JPG] = __('Inline JPEG Image');\n\t$attach_types[REPORTS_TYPE_INLINE_GIF] = __('Inline GIF Image');\n}\n\n$attach_types[REPORTS_TYPE_ATTACH_PNG] = __('Attached PNG Image');\n\nif (extension_loaded(REPORTS_EXTENSION_GD)) {\n\t$attach_types[REPORTS_TYPE_ATTACH_JPG] = __('Attached JPEG Image');\n\t$attach_types[REPORTS_TYPE_ATTACH_GIF] = __('Attached GIF Image');\n}\n\nif (read_config_option('reports_allow_ln') != '') {\n\t$attach_types[REPORTS_TYPE_INLINE_PNG_LN] = __('Inline PNG Image, LN Style');\n\tif (extension_loaded(REPORTS_EXTENSION_GD)) {\n\t\t$attach_types[REPORTS_TYPE_INLINE_JPG_LN] = __('Inline JPEG Image, LN Style');\n\t\t$attach_types[REPORTS_TYPE_INLINE_GIF_LN] = __('Inline GIF Image, LN Style');\n\t}\n}\n\n$item_types = array(\n\tREPORTS_ITEM_TEXT  => __('Text'),\n\tREPORTS_ITEM_TREE  => __('Tree'),\n\tREPORTS_ITEM_GRAPH => __('Graph'),\n\tREPORTS_ITEM_HOST  => __('Device'),\n\tREPORTS_ITEM_HR    => __('Horizontal Rule')\n);\n\n$alignment = array(\n\tREPORTS_ALIGN_LEFT   => __('left'),\n\tREPORTS_ALIGN_CENTER => __('center'),\n\tREPORTS_ALIGN_RIGHT  => __('right')\n);\n\n$reports_interval = array(\n\tREPORTS_SCHED_INTVL_MINUTE        => __('Minute(s)'),\n\tREPORTS_SCHED_INTVL_HOUR          => __('Hour(s)'),\n\tREPORTS_SCHED_INTVL_DAY           => __('Day(s)'),\n\tREPORTS_SCHED_INTVL_WEEK          => __('Week(s)'),\n\tREPORTS_SCHED_INTVL_MONTH_DAY     => __('Month(s), Day of Month'),\n\tREPORTS_SCHED_INTVL_MONTH_WEEKDAY => __('Month(s), Day of Week'),\n\tREPORTS_SCHED_INTVL_YEAR          => __('Year(s)'),\n);\n\n$agg_graph_types = array(\n\tAGGREGATE_GRAPH_TYPE_KEEP         => __('Keep Graph Types'),\n\tAGGREGATE_GRAPH_TYPE_KEEP_STACKED => __('Keep Type and STACK'),\n\tGRAPH_ITEM_TYPE_STACK             => __('Convert to AREA/STACK Graph'),\n\tGRAPH_ITEM_TYPE_LINE1             => __('Convert to LINE1 Graph'),\n\tGRAPH_ITEM_TYPE_LINE2             => __('Convert to LINE2 Graph'),\n\tGRAPH_ITEM_TYPE_LINE3             => __('Convert to LINE3 Graph'),\n\tAGGREGATE_GRAPH_TYPE_LINE1_STACK  => __('Convert to LINE1/STACK Graph'),\n\tAGGREGATE_GRAPH_TYPE_LINE2_STACK  => __('Convert to LINE2/STACK Graph'),\n\tAGGREGATE_GRAPH_TYPE_LINE3_STACK  => __('Convert to LINE3/STACK Graph'),\n);\n\n$agg_totals = array(\n\tAGGREGATE_TOTAL_NONE => __('No Totals'),\n\tAGGREGATE_TOTAL_ALL  => __('Print All Legend Items'),\n\tAGGREGATE_TOTAL_ONLY => __('Print Totaling Legend Items Only'),\n);\n\n$agg_totals_type = array(\n\tAGGREGATE_TOTAL_TYPE_SIMILAR => __('Total Similar Data Sources'),\n\tAGGREGATE_TOTAL_TYPE_ALL     => __('Total All Data Sources'),\n);\n\n$agg_order_types = array(\n\tAGGREGATE_ORDER_NONE       => __('No Reordering'),\n\tAGGREGATE_ORDER_DS_GRAPH   => __('Data Source, Graph'),\n\tAGGREGATE_ORDER_GRAPH_DS   => __('Graph, Data Source'),\n\tAGGREGATE_ORDER_BASE_GRAPH => __('Base Graph Order')\n);\n\n# operators for use with SQL/pattern matching\n$automation_op_array = array(\n\t'display' => array(\n\t\tAUTOMATION_OP_NONE         => __('None'),\n\t\tAUTOMATION_OP_CONTAINS     => __('contains'),\n\t\tAUTOMATION_OP_CONTAINS_NOT => __('does not contain'),\n\t\tAUTOMATION_OP_BEGINS       => __('begins with'),\n\t\tAUTOMATION_OP_BEGINS_NOT   => __('does not begin with'),\n\t\tAUTOMATION_OP_ENDS         => __('ends with'),\n\t\tAUTOMATION_OP_ENDS_NOT     => __('does not end with'),\n\t\tAUTOMATION_OP_MATCHES      => __('matches'),\n\t\tAUTOMATION_OP_MATCHES_NOT  => __('is not equal to'),\n\t\tAUTOMATION_OP_LT           => __('is less than'),\n\t\tAUTOMATION_OP_LE           => __('is less than or equal'),\n\t\tAUTOMATION_OP_GT           => __('is greater than'),\n\t\tAUTOMATION_OP_GE           => __('is greater than or equal'),\n\t\tAUTOMATION_OP_UNKNOWN      => __('is unknown'),\n\t\tAUTOMATION_OP_NOT_UNKNOWN  => __('is not unknown'),\n\t\tAUTOMATION_OP_EMPTY        => __('is empty'),\n\t\tAUTOMATION_OP_NOT_EMPTY    => __('is not empty'),\n\t\tAUTOMATION_OP_REGEXP       => __('matches regular expression'),\n\t\tAUTOMATION_OP_NOT_REGEXP   => __('does not match regular expression'),\n\t),\n\t'op' => array(\n\t\tAUTOMATION_OP_NONE          => '',\n\t\tAUTOMATION_OP_CONTAINS      => 'LIKE',\n\t\tAUTOMATION_OP_CONTAINS_NOT  => 'NOT LIKE',\n\t\tAUTOMATION_OP_BEGINS        => 'LIKE',\n\t\tAUTOMATION_OP_BEGINS_NOT    => 'NOT LIKE',\n\t\tAUTOMATION_OP_ENDS          => 'LIKE',\n\t\tAUTOMATION_OP_ENDS_NOT      => 'NOT LIKE',\n\t\tAUTOMATION_OP_MATCHES       => '<=>',\n\t\tAUTOMATION_OP_MATCHES_NOT   => '<>',\n\t\tAUTOMATION_OP_LT            => '<',\n\t\tAUTOMATION_OP_LE            => '<=',\n\t\tAUTOMATION_OP_GT            => '>',\n\t\tAUTOMATION_OP_GE            => '>=',\n\t\tAUTOMATION_OP_UNKNOWN       => 'IS NULL',\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => 'IS NOT NULL',\n\t\tAUTOMATION_OP_EMPTY         => \"LIKE ''\",\n\t\tAUTOMATION_OP_NOT_EMPTY     => \"NOT LIKE ''\",\n\t\tAUTOMATION_OP_REGEXP        => 'REGEXP',\n\t\tAUTOMATION_OP_NOT_REGEXP    => 'NOT REGEXP',\n\t),\n\t'binary' => array(\n\t\tAUTOMATION_OP_NONE          => false,\n\t\tAUTOMATION_OP_CONTAINS      => true,\n\t\tAUTOMATION_OP_CONTAINS_NOT  => true,\n\t\tAUTOMATION_OP_BEGINS        => true,\n\t\tAUTOMATION_OP_BEGINS_NOT    => true,\n\t\tAUTOMATION_OP_ENDS          => true,\n\t\tAUTOMATION_OP_ENDS_NOT      => true,\n\t\tAUTOMATION_OP_MATCHES       => true,\n\t\tAUTOMATION_OP_MATCHES_NOT   => true,\n\t\tAUTOMATION_OP_LT            => true,\n\t\tAUTOMATION_OP_LE            => true,\n\t\tAUTOMATION_OP_GT            => true,\n\t\tAUTOMATION_OP_GE            => true,\n\t\tAUTOMATION_OP_UNKNOWN       => false,\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => false,\n\t\tAUTOMATION_OP_EMPTY         => false,\n\t\tAUTOMATION_OP_NOT_EMPTY     => false,\n\t\tAUTOMATION_OP_REGEXP        => true,\n\t\tAUTOMATION_OP_NOT_REGEXP    => true,\n\t),\n\t'pre' => array(\n\t\tAUTOMATION_OP_NONE          => '',\n\t\tAUTOMATION_OP_CONTAINS      => '%',\n\t\tAUTOMATION_OP_CONTAINS_NOT  => '%',\n\t\tAUTOMATION_OP_BEGINS        => '',\n\t\tAUTOMATION_OP_BEGINS_NOT    => '',\n\t\tAUTOMATION_OP_ENDS          => '%',\n\t\tAUTOMATION_OP_ENDS_NOT      => '%',\n\t\tAUTOMATION_OP_MATCHES       => '',\n\t\tAUTOMATION_OP_MATCHES_NOT   => '',\n\t\tAUTOMATION_OP_LT            => '',\n\t\tAUTOMATION_OP_LE            => '',\n\t\tAUTOMATION_OP_GT            => '',\n\t\tAUTOMATION_OP_GE            => '',\n\t\tAUTOMATION_OP_UNKNOWN       => '',\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => '',\n\t\tAUTOMATION_OP_EMPTY         => '',\n\t\tAUTOMATION_OP_NOT_EMPTY     => '',\n\t\tAUTOMATION_OP_REGEXP        => '',\n\t\tAUTOMATION_OP_NOT_REGEXP    => '',\n\t),\n\t'post' => array(\n\t\tAUTOMATION_OP_NONE          => '',\n\t\tAUTOMATION_OP_CONTAINS      => '%',\n\t\tAUTOMATION_OP_CONTAINS_NOT  => '%',\n\t\tAUTOMATION_OP_BEGINS        => '%',\n\t\tAUTOMATION_OP_BEGINS_NOT    => '%',\n\t\tAUTOMATION_OP_ENDS          => '',\n\t\tAUTOMATION_OP_ENDS_NOT      => '',\n\t\tAUTOMATION_OP_MATCHES       => '',\n\t\tAUTOMATION_OP_MATCHES_NOT   => '',\n\t\tAUTOMATION_OP_LT            => '',\n\t\tAUTOMATION_OP_LE            => '',\n\t\tAUTOMATION_OP_GT            => '',\n\t\tAUTOMATION_OP_GE            => '',\n\t\tAUTOMATION_OP_UNKNOWN       => '',\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => '',\n\t\tAUTOMATION_OP_EMPTY         => '',\n\t\tAUTOMATION_OP_NOT_EMPTY     => '',\n\t\tAUTOMATION_OP_REGEXP        => '',\n\t\tAUTOMATION_OP_NOT_REGEXP    => '',\n\t)\n);\n\n$automation_oper = array(\n\tAUTOMATION_OPER_NULL            => '',\n\tAUTOMATION_OPER_AND             => 'AND',\n\tAUTOMATION_OPER_OR              => 'OR',\n\tAUTOMATION_OPER_LEFT_BRACKET    => '(',\n\tAUTOMATION_OPER_RIGHT_BRACKET   => ')',\n);\n\n$automation_tree_item_types  = array(\n\tTREE_ITEM_TYPE_GRAPH => __('Graph'),\n\tTREE_ITEM_TYPE_HOST  => __('Device')\n);\n\n$automation_tree_header_types  = array(\n\tAUTOMATION_TREE_ITEM_TYPE_STRING => __('Fixed String'),\n);\n\n$automation_frequencies = array(\n\t'disabled' => __('Disabled'),\n\t'60'       => __('Every 1 Hour'),\n\t'120'      => __('Every %d Hours', 2),\n\t'240'      => __('Every %d Hours', 4),\n\t'360'      => __('Every %d Hours', 6),\n\t'480'      => __('Every %d Hours', 8),\n\t'720'      => __('Every %d Hours', 12),\n\t'1440'     => __('Every Day'),\n\t'10080'    => __('Every Week'),\n\t'20160'    => __('Every %d Weeks', 2),\n\t'40320'    => __('Every %d Weeks', 4)\n);\n\n$logrotate_frequency = array(\n\t'1'  => __('Daily'),\n\t'7'  => __('Weekly'),\n\t'30' => __('Monthly')\n);\n\n$no_session_write = array(\n\t'graph_xport.php',\n\t'graph_image.php',\n\t'graph_json.php'\n);\n\n$i18n_months = array(\n\t'January'\t=> __('January'),\n\t'February'\t=> __('February'),\n\t'March'\t\t=> __('March'),\n\t'April'\t\t=> __('April'),\n\t'May'\t\t=> __('May'),\n\t'June'\t\t=> __('June'),\n\t'July'\t\t=> __('July'),\n\t'August'\t=> __('August'),\n\t'September'\t=> __('September'),\n\t'October'\t=> __('October'),\n\t'November'\t=> __('November'),\n\t'December'\t=> __('December'),\n);\n\n$i18n_months_short = array(\n\t'Jan'\t=> __x('A short textual representation of a month, three letters', 'Jan'),\n\t'Feb'\t=> __x('A short textual representation of a month, three letters', 'Feb'),\n\t'Mar'\t=> __x('A short textual representation of a month, three letters', 'Mar'),\n\t'Arp'\t=> __x('A short textual representation of a month, three letters', 'Apr'),\n\t'May'\t=> __x('A short textual representation of a month, three letters', 'May'),\n\t'Jun'\t=> __x('A short textual representation of a month, three letters', 'Jun'),\n\t'Jul'\t=> __x('A short textual representation of a month, three letters', 'Jul'),\n\t'Aug'\t=> __x('A short textual representation of a month, three letters', 'Aug'),\n\t'Sep'\t=> __x('A short textual representation of a month, three letters', 'Sep'),\n\t'Oct'\t=> __x('A short textual representation of a month, three letters', 'Oct'),\n\t'Nov'\t=> __x('A short textual representation of a month, three letters', 'Nov'),\n\t'Dec'\t=> __x('A short textual representation of a month, three letters', 'Dec'),\n);\n\n$i18n_supported_languages = array(\n\tCACTI_LANGUAGE_HANDLER_DEFAULT => __('Use the First Handler Found'),\n);\n\nif (is_dir($config['base_path'] . '/include/vendor/phpgettext')) {\n\t$i18n_supported_languages[CACTI_LANGUAGE_HANDLER_PHPGETTEXT]  = __('Use the PHP GetText Handler');\n}\n\nif (is_dir($config['base_path'] . '/include/vendor/gettext') && version_compare(PHP_VERSION, '8.0', '<=')) {\n\t$i18n_supported_languages[CACTI_LANGUAGE_HANDLER_OSCAROTERO]  = __('Use the Oscarotero GetText Handler');\n}\n\nif (is_dir($config['base_path'] . '/include/vendor/monotranslator')) {\n\t$i18n_supported_languages[CACTI_LANGUAGE_HANDLER_MOTRANSLATOR]  = __('Use the MonoTranslator GetText Handler');\n}\n\n$i18n_weekdays = array(\n\t'Sunday'\t=> __('Sunday'),\n\t'Monday'\t=> __('Monday'),\n\t'Tuesday'\t=> __('Tuesday'),\n\t'Wednesday'\t=> __('Wednesday'),\n\t'Thursday'\t=> __('Thursday'),\n\t'Friday'\t=> __('Friday'),\n\t'Saturday'\t=> __('Saturday')\n);\n\n$i18n_weekdays_short = array(\n\t'Sun'\t=> __x('A textual representation of a day, three letters', 'Sun'),\n\t'Mon'\t=> __x('A textual representation of a day, three letters', 'Mon'),\n\t'Tue'\t=> __x('A textual representation of a day, three letters', 'Tue'),\n\t'Wed'\t=> __x('A textual representation of a day, three letters', 'Wed'),\n\t'Thu'\t=> __x('A textual representation of a day, three letters', 'Thu'),\n\t'Fri'\t=> __x('A textual representation of a day, three letters', 'Fri'),\n\t'Sat'\t=> __x('A textual representation of a day, three letters', 'Sat')\n);\n\n$i18n_languages = array(\n\t__('Arabic'),\n\t__('Bulgarian'),\n\t__('Chinese (China)'),\n\t__('Chinese (Taiwan)'),\n\t__('Dutch'),\n\t__('English'),\n\t__('French'),\n\t__('German'),\n\t__('Greek'),\n\t__('Hebrew'),\n\t__('Hindi'),\n\t__('Italian'),\n\t__('Japanese'),\n\t__('Korean'),\n\t__('Polish'),\n\t__('Portuguese'),\n\t__('Portuguese (Brazil)'),\n\t__('Russian'),\n\t__('Spanish'),\n\t__('Swedish'),\n\t__('Turkish'),\n\t__('Vietnamese')\n);\n\n$i18n_themes = array(\n\t__('Classic'),\n\t__('Modern'),\n\t__('Dark'),\n\t__('Paper-plane'),\n\t__('Paw'),\n\t__('Sunrise'),\n);\n\n$database_statuses = array(\n\t0 => __('[Fail]'),\n\t1 => __('[Warning]'),\n\t2 => __('[Restart]'),\n\t3 => __('[Success]'),\n\t4 => __('[Skipped]'),\n);\n\n$navigation = array(\n\t'auth_profile.php:' => array(\n\t\t'title' => __('User Profile (Edit)'),\n\t\t'mapping' => '',\n\t\t'url' => '',\n\t\t'level' => '0'\n\t),\n\t'auth_profile.php:edit' => array(\n\t\t'title' => __('User Profile (Edit)'),\n\t\t'mapping' => '',\n\t\t'url' => '',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:' => array(\n\t\t'title' => __('Graphs'),\n\t\t'mapping' => '',\n\t\t'url' => 'graph_view.php',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:tree' => array(\n\t\t'title' => __('Tree Mode'),\n\t\t'mapping' => 'graph_view.php:',\n\t\t'url' => 'graph_view.php?action=tree',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:tree_content' => array(\n\t\t'title' => __('Tree Mode'),\n\t\t'mapping' => 'graph_view.php:',\n\t\t'url' => 'graph_view.php?action=tree',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:list' => array(\n\t\t'title' => __('List Mode'),\n\t\t'mapping' => '',\n\t\t'url' => 'graph_view.php?action=list',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:preview' => array(\n\t\t'title' => __('Preview Mode'),\n\t\t'mapping' => '',\n\t\t'url' => 'graph_view.php?action=preview',\n\t\t'level' => '0'\n\t),\n\t'graph.php:' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'graph.php:view' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'graph.php:zoom' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'graph.php:update_timespan' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'index.php:' => array(\n\t\t'title' => __('Console'),\n\t\t'mapping' => '',\n\t\t'url' => $config['url_path'] . 'index.php',\n\t\t'level' => '0'\n\t),\n\t'index.php:login' => array(\n\t\t'title' => __('Console'),\n\t\t'mapping' => '',\n\t\t'url' => $config['url_path'] . 'index.php',\n\t\t'level' => '0'\n\t),\n\t'graphs.php:' => array(\n\t\t'title' => __('Graph Management'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'graphs.php',\n\t\t'level' => '1'\n\t),\n\t'graphs.php:graph_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graphs.php:graph_diff' => array(\n\t\t'title' => __('Change Graph Template'),\n\t\t'mapping' => 'index.php:,graphs.php:,graphs.php:graph_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graphs.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graphs_items.php:item_edit' => array(\n\t\t'title' => __('Graph Items'),\n\t\t'mapping' => 'index.php:,graphs.php:,graphs.php:graph_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graphs_new.php:' => array(\n\t\t'title' => __('Create New Graphs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'graphs_new.php',\n\t\t'level' => '1'\n\t),\n\t'graphs_new.php:save' => array(\n\t\t'title' => __('Create Graphs from Data Query'),\n\t\t'mapping' => 'index.php:,graphs_new.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'gprint_presets.php:' => array(\n\t\t'title' => __('GPRINT Presets'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'gprint_presets.php',\n\t\t'level' => '1'\n\t),\n\t'gprint_presets.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,gprint_presets.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'gprint_presets.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,gprint_presets.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'cdef.php:' => array(\n\t\t'title' => __('CDEFs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'cdef.php',\n\t\t'level' => '1'\n\t),\n\t'cdef.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,cdef.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'cdef.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,cdef.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'cdef.php:item_edit' => array(\n\t\t'title' => __('CDEF Items'),\n\t\t'mapping' => 'index.php:,cdef.php:,cdef.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'cdef.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,cdef.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'clog.php:' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog.php',\n\t\t'level' => '0'\n\t),\n\t'clog.php:preview' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog.php',\n\t\t'level' => '0'\n\t),\n\t'clog_user.php:' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog_user.php',\n\t\t'level' => '0'\n\t),\n\t'clog_user.php:preview' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog_user.php',\n\t\t'level' => '0'\n\t),\n\t'tree.php:' => array(\n\t\t'title' => __('Graph Trees'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'tree.php',\n\t\t'level' => '1'\n\t),\n\t'tree.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,tree.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'pollers.php:' => array(\n\t\t'title' => __('Data Collectors'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'pollers.php',\n\t\t'level' => '1'\n\t),\n\t'pollers.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,pollers.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'links.php:' => array(\n\t\t'title' => __('External Links'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'links.php',\n\t\t'level' => '1'\n\t),\n\t'links.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,links.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color.php:' => array(\n\t\t'title' => __('Colors'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'color.php',\n\t\t'level' => '1'\n\t),\n\t'color.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,color.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graph_templates.php:' => array(\n\t\t'title' => __('Graph Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'graph_templates.php',\n\t\t'level' => '1'\n\t),\n\t'graph_templates.php:template_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,graph_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graph_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,graph_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graph_templates_items.php:item_edit' => array(\n\t\t'title' => __('Graph Template Items'),\n\t\t'mapping' => 'index.php:,graph_templates.php:,graph_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graph_templates_inputs.php:input_edit' => array(\n\t\t'title' => __('Graph Item Inputs'),\n\t\t'mapping' => 'index.php:,graph_templates.php:,graph_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graph_templates_inputs.php:input_remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,graph_templates.php:,graph_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'host_templates.php:' => array(\n\t\t'title' => __('Device Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'host_templates.php',\n\t\t'level' => '1'\n\t),\n\t'host_templates.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,host_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'host_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,host_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_templates.php:' => array(\n\t\t'title' => __('Data Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_templates.php',\n\t\t'level' => '1'\n\t),\n\t'data_templates.php:template_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_sources.php:' => array(\n\t\t'title' => __('Data Sources'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_sources.php',\n\t\t'level' => '1'\n\t),\n\t'data_sources.php:ds_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_sources.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_sources.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_sources.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'host.php:' => array(\n\t\t'title' => __('Devices'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'host.php',\n\t\t'level' => '1'\n\t),\n\t'host.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,host.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'host.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,host.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'rra.php:' => array(\n\t\t'title' => __('Round Robin Archives'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'rra.php',\n\t\t'level' => '1'\n\t),\n\t'rra.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,rra.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'rra.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,rra.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:' => array(\n\t\t'title' => __('Data Input Methods'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_input.php',\n\t\t'level' => '1'\n\t),\n\t'data_input.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_input.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_input.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,data_input.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:field_edit' => array(\n\t\t'title' => __('Data Input Fields'),\n\t\t'mapping' => 'index.php:,data_input.php:,data_input.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'data_input.php:field_remove' => array(\n\t\t'title' => __('(Remove Item)'),\n\t\t'mapping' => 'index.php:,data_input.php:,data_input.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'data_queries.php:' => array(\n\t\t'title' => __('Data Queries'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_queries.php',\n\t\t'level' => '1'\n\t),\n\t'data_queries.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_queries.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_queries.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_queries.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_queries.php:item_edit' => array(\n\t\t'title' => __('Associated Graph Templates'),\n\t\t'mapping' => 'index.php:,data_queries.php:,data_queries.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'data_queries.php:item_remove' => array(\n\t\t'title' => __('(Remove Item)'),\n\t\t'mapping' => 'index.php:,data_queries.php:,data_queries.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'rrdcleaner.php:' => array(\n\t\t'title' => __('RRD Cleaner'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'rrdcleaner.php',\n\t\t'level' => '2'\n\t),\n\t'rrdcleaner.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,rrdcleaner.php:',\n\t\t'url' => 'rrdcleaner.php?action=actions',\n\t\t'level' => '2'\n\t),\n\t'rrdcleaner.php:restart' => array(\n\t\t'title' => __('List unused Files'),\n\t\t'mapping' => 'rrdcleaner.php:',\n\t\t'url' => 'rrdcleaner.php?action=restart',\n\t\t'level' => '2'\n\t),\n\t'rrdcheck.php:' => array(\n\t\t'title' => __('RRD Check'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'rrdcheck.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:' => array(\n\t\t'title' => __('Utilities'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '1'\n\t),\n\t'utilities.php:view_poller_cache' => array(\n\t\t'title' => __('View Poller Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_snmp_cache' => array(\n\t\t'title' => __('View Data Query Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:clear_poller_cache' => array(\n\t\t'title' => __('View Poller Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_logfile' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:clear_logfile' => array(\n\t\t'title' => __('Clear Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_user_log' => array(\n\t\t'title' => __('View User Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:clear_user_log' => array(\n\t\t'title' => __('Clear User Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_tech' => array(\n\t\t'title' => __('Technical Support'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_boost_status' => array(\n\t\t'title' => __('Boost Status'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_snmpagent_cache' => array(\n\t\t'title' => __('View SNMP Agent Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_snmpagent_events' => array(\n\t\t'title' => __('View SNMP Agent Notification Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:' => array(\n\t\t'title' => __('VDEFs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '1'\n\t),\n\t'vdef.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,vdef.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,vdef.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,vdef.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:item_edit' => array(\n\t\t'title' => __('VDEF Items'),\n\t\t'mapping' => 'index.php:,vdef.php:,vdef.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'managers.php:' => array(\n\t\t'title' => __('View SNMP Notification Receivers'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'managers.php',\n\t\t'level' => '2'\n\t),\n\t'managers.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,utilities.php:,managers.php:',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'settings.php:' => array(\n\t\t'title' => __('Cacti Settings'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'settings.php',\n\t\t'level' => '1'\n\t),\n\t'link.php:' => array(\n\t\t'title' => __('External Link'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'link.php',\n\t\t'level' => '1'\n\t),\n\t'user_admin.php:' => array(\n\t\t'title' => __('Users'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'user_admin.php',\n\t\t'level' => '1'\n\t),\n\t'user_admin.php:user_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,user_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'user_admin.php:actions' => array(\n\t\t'title' => __('(Action)'),\n\t\t'mapping' => 'index.php:,user_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'user_domains.php:' => array(\n\t\t'title' => __('User Domains'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'user_domains.php',\n\t\t'level' => '1'\n\t),\n\t'user_domains.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'user_domains.php:,index.php:',\n\t\t'url' => 'user_domains.php',\n\t\t'level' => '2'\n\t),\n\t'user_group_admin.php:' => array(\n\t\t'title' => __('User Groups'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'user_group_admin.php',\n\t\t'level' => '1'\n\t),\n\t'user_group_admin.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,user_group_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'user_group_admin.php:actions' => array(\n\t\t'title' => __('(Action)'),\n\t\t'mapping' => 'index.php:,user_group_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'about.php:' => array(\n\t\t'title' => __('About Cacti'),\n\t\t'mapping' => '',\n\t\t'url' => 'about.php',\n\t\t'level' => '1'\n\t),\n\t'help.php:' => array(\n\t\t'title' => __('Cacti Help'),\n\t\t'mapping' => '',\n\t\t'url' => 'help.php',\n\t\t'level' => '1'\n\t),\n\t'templates_export.php:' => array(\n\t\t'title' => __('Export Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'templates_export.php',\n\t\t'level' => '1'\n\t),\n\t'templates_export.php:save' => array(\n\t\t'title' => __('Export Results'),\n\t\t'mapping' => 'index.php:,templates_export.php:',\n\t\t'url' => 'templates_export.php',\n\t\t'level' => '2'\n\t),\n\t'templates_import.php:' => array(\n\t\t'title' => __('Import Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'templates_import.php',\n\t\t'level' => '1'\n\t),\n\t'package_import.php:' => array(\n\t\t'title' => __('Import Packages'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'package_import.php',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:' => array(\n\t\t'title' => __('Reporting'),\n\t\t'mapping' => '',\n\t\t'url' => 'reports_admin.php',\n\t\t'level' => '0'\n\t),\n\t'reports_admin.php:actions' => array(\n\t\t'title' => __('Report Add'),\n\t\t'mapping' => 'reports_admin.php:',\n\t\t'url' => 'reports_admin.php',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:delete' => array(\n\t\t'title' => __('Report Delete'),\n\t\t'mapping' => 'reports_admin.php:',\n\t\t'url' => 'reports_admin.php',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:edit' => array(\n\t\t'title' => __('Report Edit'),\n\t\t'mapping' => 'reports_admin.php:',\n\t\t'url' => 'reports_admin.php?action=edit',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:item_edit' => array(\n\t\t'title' => __('Report Edit Item'),\n\t\t'mapping' => 'reports_admin.php:,reports_admin.php:edit',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'reports_user.php:' => array(\n\t\t'title' => __('Reporting'),\n\t\t'mapping' => '',\n\t\t'url' => 'reports_user.php',\n\t\t'level' => '0'\n\t),\n\t'reports_user.php:actions' => array(\n\t\t'title' => __('Report Add'),\n\t\t'mapping' => 'reports_user.php:',\n\t\t'url' => 'reports_user.php',\n\t\t'level' => '1'\n\t),\n\t'reports_user.php:delete' => array(\n\t\t'title' => __('Report Delete'),\n\t\t'mapping' => 'reports_user.php:',\n\t\t'url' => 'reports_user.php',\n\t\t'level' => '1'\n\t),\n\t'reports_user.php:edit' => array(\n\t\t'title' => __('Report Edit'),\n\t\t'mapping' => 'reports_user.php:',\n\t\t'url' => 'reports_user.php?action=edit',\n\t\t'level' => '1'\n\t),\n\t'reports_user.php:item_edit' => array(\n\t\t'title' => __('Report Edit Item'),\n\t\t'mapping' => 'reports_user.php:,reports_user.php:edit',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color_templates.php:' => array(\n\t\t'title' => __('Color Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'color_templates.php',\n\t\t'level' => '1'\n\t),\n\t'color_templates.php:template_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,color_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,color_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color_templates_items.php:item_edit' => array(\n\t\t'title' => __('Color Template Items'),\n\t\t'mapping' => 'index.php:,color_templates.php:,color_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'aggregate_templates.php:' => array(\n\t\t'title' => __('Aggregate Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'aggregate_templates.php',\n\t\t'level' => '1'\n\t),\n\t'aggregate_templates.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,aggregate_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_templates.php:actions'=> array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,aggregate_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_graphs.php:' => array(\n\t\t'title' => __('Aggregate Graphs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'aggregate_graphs.php',\n\t\t'level' => '1'\n\t),\n\t'aggregate_graphs.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,aggregate_graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_graphs.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,aggregate_graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_items.php:' => array(\n\t\t'title' => __('Aggregate Items'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'aggregate_items.php',\n\t\t'level' => '1'\n\t),\n\t'aggregate_items.php:item_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,aggregate_graphs.php:,aggregate_items.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_items.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,aggregate_items.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_graph_rules.php:' => array(\n\t\t'title' => __('Graph Rules'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'automation_graph_rules.php',\n\t\t'level' => '1'\n\t),\n\t'automation_graph_rules.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,automation_graph_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_graph_rules.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,automation_graph_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_graph_rules.php:item_edit' => array(\n\t\t'title' => __('Graph Rule Items'),\n\t\t'mapping' => 'index.php:,automation_graph_rules.php:,automation_graph_rules.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'automation_tree_rules.php:' => array(\n\t\t'title' => __('Tree Rules'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'automation_tree_rules.php',\n\t\t'level' => '1'\n\t),\n\t'automation_tree_rules.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,automation_tree_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_tree_rules.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,automation_tree_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_tree_rules.php:item_edit' => array(\n\t\t'title' => __('Tree Rule Items'),\n\t\t'mapping' => 'index.php:,automation_tree_rules.php:,automation_tree_rules.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t)\n);\n\n$snmpagent_event_severity = array(\n\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'low',\n\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'medium',\n\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'high',\n\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'critical'\n);\n\n$days_from_time_settings = array(\n\t'mods' => array(\n\t\t'd' => 86400,\n\t\t'h' => 3600,\n\t\t'm' => '60',\n\t\t's' => 0,\n\t),\n\t'text' => array(\n\t\tDAYS_FORMAT_SHORT => array(\n\t\t\t'd' => 'd',\n\t\t        'h' => 'h',\n\t\t        'm' => 'm',\n\t\t\t's' => 's',\n\t\t\t'suffix' => ':',\n\t\t\t'prefix' => '',\n\t\t),\n\t\tDAYS_FORMAT_MEDIUM => array(\n\t\t\t'd' => __('days'),\n\t\t\t'h' => __('hrs'),\n\t\t\t'm' => __('mins'),\n\t\t\t's' => __('secs'),\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t\tDAYS_FORMAT_MEDIUM_LOG => array(\n\t\t\t'd' => 'days',\n\t\t\t'h' => 'hrs',\n\t\t\t'm' => 'mins',\n\t\t\t's' => 'secs',\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t\tDAYS_FORMAT_LONG => array(\n\t\t\t'd' => __('days'),\n\t\t\t'h' => __('hours'),\n\t\t\t'm' => __('minutes'),\n\t\t\t's' => __('seconds'),\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t\tDAYS_FORMAT_LONG_LOG => array(\n\t\t\t'd' => 'days',\n\t\t\t'h' => 'hours',\n\t\t\t'm' => 'minutes',\n\t\t\t's' => 'seconds',\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t),\n);\n\n$graph_sources = array(\n\t0 => __('Not Templated'),\n\t1 => __('Data Query'),\n\t2 => __('Template'),\n\t3 => __('Aggregate'),\n);\n\nif ($config['cacti_server_os'] == 'unix') {\n\t$dejavu_paths = array(\n\t\t'/usr/share/fonts/dejavu/', //RHEL/CentOS\n\t\t'/usr/share/fonts/truetype/', //SLES\n\t\t'/usr/share/fonts/truetype/dejavu/', //Ubuntu\n\t\t'/usr/local/share/fonts/dejavu/', //FreeBSD\n\t\t__DIR__ . '/fonts'  //Build-in\n\t);\n} else {\n\t$dejavu_paths = array(\n\t\t'C:/Windows/Fonts/' //Windows\n\t);\n}\n\napi_plugin_hook('config_arrays');\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n\n/**\n * clear_auth_cookie - clears a users security token\n *\n * @return (void)\n */\nfunction clear_auth_cookie() {\n\tglobal $config;\n\n\tif (isset($_COOKIE['cacti_remembers']) && read_config_option('auth_cache_enabled') == 'on') {\n\t\t$parts = explode(',', $_COOKIE['cacti_remembers']);\n\n\t\tif (cacti_sizeof($parts) == 2) {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = -1;\n\t\t\t$token    = $parts[1];\n\t\t} else {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = $parts[1];\n\t\t\t$token    = $parts[2];\n\t\t}\n\n\t\t// Legacy support which leaked usernames\n\t\tif (!is_numeric($user_id)) {\n\t\t\t$user_id = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?',\n\t\t\t\tarray($user_id));\n\t\t}\n\n\t\tif ($user_id > 0) {\n\t\t\t$secret = hash('sha512', $token, false);\n\n\t\t\tcacti_cookie_session_logout();\n\n\t\t\tdb_execute_prepared('DELETE FROM user_auth_cache\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tAND token = ?',\n\t\t\t\tarray($user_id, $secret));\n\t\t}\n\t}\n}\n\n/**\n * set_auth_cookie - sets a users security token\n *\n * @param  (array) user is the user_auth row for the user\n *\n * @return (bool) True if token set worked, otherwise false\n */\nfunction set_auth_cookie($user) {\n\tglobal $config;\n\n\tif (db_table_exists('user_auth_cache')) {\n\t\tclear_auth_cookie();\n\n\t\t$nssecret = md5($_SERVER['REQUEST_TIME'] .  mt_rand(10000,10000000)) . md5(get_client_addr(''));\n\n\t\t$secret = hash('sha512', $nssecret, false);\n\n\t\tdb_execute_prepared('REPLACE INTO user_auth_cache\n\t\t\t(user_id, hostname, last_update, token)\n\t\t\tVALUES\n\t\t\t(?, ?, NOW(), ?);',\n\t\t\tarray($user['id'], get_client_addr(''), $secret));\n\n\t\tcacti_cookie_session_set($user['id'], $user['realm'], $nssecret);\n\t}\n}\n\n/**\n * check_auth_cookie - clears a users security token\n *\n * @return (int) The user of the session cookie, otherwise false\n */\nfunction check_auth_cookie() {\n\tif (isset($_COOKIE['cacti_remembers']) &&\n\t\tread_config_option('auth_cache_enabled') == 'on' &&\n\t\tdb_table_exists('user_auth_cache')) {\n\n\t\t$parts = explode(',', $_COOKIE['cacti_remembers']);\n\n\t\tif (cacti_sizeof($parts) == 2) {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = -1;\n\t\t\t$token    = $parts[1];\n\t\t} else {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = $parts[1];\n\t\t\t$token    = $parts[2];\n\t\t}\n\n\t\t// Legacy support which leaked usernames\n\t\tif (!is_numeric($user_id)) {\n\t\t\t$user_id = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?',\n\t\t\t\tarray($user_id));\n\t\t}\n\n\t\tif ($user_id > 0 && $user_id != get_guest_account()) {\n\t\t\tif ($realm_id == -1) {\n\t\t\t\t$user_info = db_fetch_row_prepared('SELECT id, realm, username\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($user_id));\n\t\t\t} else {\n\t\t\t\t$user_info = db_fetch_row_prepared('SELECT id, realm, username\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND realm = ?',\n\t\t\t\t\tarray($user_id, $realm_id));\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($user_info)) {\n\t\t\t\t$secret = hash('sha512', $token, false);\n\n\t\t\t\t$found  = db_fetch_cell_prepared('SELECT user_id\n\t\t\t\t\tFROM user_auth_cache\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND token = ?',\n\t\t\t\t\tarray($user_info['id'], $secret)\n\t\t\t\t);\n\n\t\t\t\tif (empty($found)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tset_auth_cookie($user_info);\n\n\t\t\t\t\tcacti_log(\"LOGIN: User '\" . $user_info['username'] . \"' Authenticated via Authentication Cookie\", false, 'AUTH');\n\n\t\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t\t\t\t(username, user_id, result, ip, time)\n\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t(?, ?, 2, ?, NOW())',\n\t\t\t\t\t\tarray($user_info['username'], $user_info['id'], get_client_addr(''))\n\t\t\t\t\t);\n\n\t\t\t\t\treturn $user_info['id'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * is_template_account - given a username or user_id test if this is a template account\n *   Template accounts could be accounts used for the administrative email, for both\n *   the guest and template accounts, or a user that is specified by a plugin as a\n *   template account.\n *\n * @param  (int|string) user_id is either the user_id or a username\n *\n * @return (bool) true if template account, false otherwise\n */\nfunction is_template_account($user_id) {\n\tif (!is_numeric($user_id)) {\n\t\t$user_id = db_fetch_cell_prepared('SELECT id FROM user_auth WHERE username = ?', array($user_id));\n\t}\n\n\tif (empty($user_id)) {\n\t\treturn false;\n\t}\n\n\tif (read_config_option('admin_user') == $user_id) {\n\t\treturn true;\n\t} elseif (read_config_option('guest_user') == $user_id) {\n\t\treturn true;\n\t} elseif (read_config_option('user_template') == $user_id) {\n\t\treturn true;\n\t} else {\n\t\t$domain_template = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM user_domains\n\t\t\tWHERE user_id = ?',\n\t\t\tarray($user_id));\n\n\t\tif ($domain_template > 0) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\t$plugin_template = get_template_account($user_id);\n\n\t\t\tif ($plugin_template == $user_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * get_basic_auth_username - If basic auth is used, return the valid username\n *\n * @return (string) the new username, or false if one was not passed\n */\nfunction get_basic_auth_username() {\n\tif (isset($_SERVER['PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['PHP_AUTH_USER']);\n\t} elseif (isset($_SERVER['REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REMOTE_USER']);\n\t} elseif (isset($_SERVER['REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REDIRECT_REMOTE_USER']);\n\t} elseif (isset($_SERVER['HTTP_PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_PHP_AUTH_USER']);\n\t} elseif (isset($_SERVER['HTTP_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REMOTE_USER']);\n\t} elseif (isset($_SERVER['HTTP_REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REDIRECT_REMOTE_USER']);\n\t} else {\n\t\t$username = false;\n\t}\n\n\tif ($username !== false) {\n\t\tif (strpos($username, '@') !== false) {\n\t\t\t$upart = explode('@', $username);\n\t\t\t$username = $upart[0];\n\t\t}\n\n\t\t/* Handle mapping basic accounts to shortform accounts.\n\t\t * Format of map file is CSV: basic,shortform */\n\t\t$mapfile = read_config_option('path_basic_mapfile');\n\t\tif ($mapfile != '' && file_exists($mapfile) && is_readable($mapfile)) {\n\t\t\t$records = file($mapfile);\n\t\t\t$found   = false;\n\n\t\t\tif (cacti_sizeof($records)) {\n\t\t\t\tforeach($records as $r) {\n\t\t\t\t\tlist($basic, $shortform) = str_getcsv($r);\n\n\t\t\t\t\tif (trim($basic) == $username) {\n\t\t\t\t\t\t$username = trim($shortform);\n\t\t\t\t\t\t$found    = true;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$found) {\n\t\t\t\tcacti_log(\"WARNING: Username $username not found in basic mapfile.\", false, 'AUTH');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $username;\n}\n\n/**\n * user_copy - copies user account\n *\n * @param  (string)  $template_user - username of the user account that should be used as the template\n * @param  (string)  $new_user - new username of the account to be created/overwritten\n * @param  (int)     $template_realm - new realm of the account\n * @param  (int)     $new_realm - new realm of the account to be created, overwrite not affected, but is used for lookup\n * @param  (bool)    $overwrite - Allow overwrite of existing user, preserves username, fullname, password and realm\n * @param  (array)   $data_override - Array of user_auth field and values to override on the new user\n *\n * @return (int|bool) the new users id, or false on no copy\n */\nfunction user_copy($template_user, $new_user, $template_realm = 0, $new_realm = 0, $overwrite = false, $data_override = array()) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($template_realm);\n\tinput_validate_input_number($new_realm);\n\t/* ==================================================== */\n\n\t/* Check get template users array */\n\t$user_auth = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE username = ?\n\t\tAND realm = ?',\n\t\tarray($template_user, $template_realm));\n\n\tif (!cacti_sizeof($user_auth)) {\n\t\treturn false;\n\t}\n\n\t$template_id = $user_auth['id'];\n\n\t/* Create update/insert for new/existing user */\n\t$user_exist = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE username = ?\n\t\tAND realm = ?',\n\t\tarray($new_user, $new_realm));\n\n\tif (cacti_sizeof($user_exist)) {\n\t\tif ($overwrite) {\n\t\t\t/* Overwrite existing user */\n\t\t\t$user_auth['id']            = $user_exist['id'];\n\t\t\t$user_auth['username']      = $user_exist['username'];\n\t\t\t$user_auth['password']      = $user_exist['password'];\n\t\t\t$user_auth['realm']         = $user_exist['realm'];\n\t\t\t$user_auth['full_name']     = $user_exist['full_name'];\n\t\t\t$user_auth['email_address'] = $user_exist['email_address'];\n \t\t\t$user_auth['must_change_password'] = $user_exist['must_change_password'];\n\t\t\t$user_auth['enabled']       = $user_exist['enabled'];\n\t\t} else {\n\t\t\t/* User already exists, duplicate users are bad */\n\t\t\traise_message(19);\n\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t/* new user */\n\t\t$user_auth['id']            = 0;\n\t\t$user_auth['username']      = $new_user;\n\t\t$user_auth['enabled']       = 'on';\n\t\t$user_auth['password']      = mt_rand(100000, 10000000);\n\t\t$user_auth['email_address'] = '';\n \t\t$user_auth['realm']         = $new_realm;\n\t}\n\n\t/* Update data_override fields */\n\tif (is_array($data_override)) {\n\t\tforeach ($data_override as $field => $value) {\n\t\t\tif (isset($user_auth[$field]) && $field != 'id' && $field != 'username') {\n\t\t\t\t$user_auth[$field] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* Save the user */\n\t$new_id = sql_save($user_auth, 'user_auth');\n\n\t/* Create/Update permissions and settings */\n\tif (cacti_sizeof($user_exist) && $overwrite) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms WHERE user_id = ?', array($user_exist['id']));\n\t\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE user_id = ?', array($user_exist['id']));\n\t\tdb_execute_prepared('DELETE FROM settings_user WHERE user_id = ?', array($user_exist['id']));\n\t\tdb_execute_prepared('DELETE FROM settings_tree WHERE user_id = ?', array($user_exist['id']));\n\t}\n\n\t$user_auth_perms = db_fetch_assoc_prepared('SELECT *\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($user_auth_perms)) {\n\t\tforeach ($user_auth_perms as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'user_auth_perms', array('user_id', 'item_id', 'type'), false);\n\t\t}\n\t}\n\n\t$user_auth_realm = db_fetch_assoc_prepared('SELECT *\n\t\tFROM user_auth_realm\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($user_auth_realm)) {\n\t\tforeach ($user_auth_realm as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'user_auth_realm', array('realm_id', 'user_id'), false);\n\t\t}\n\t}\n\n\t$settings_user = db_fetch_assoc_prepared('SELECT *\n\t\tFROM settings_user\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($settings_user)) {\n\t\tforeach ($settings_user as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'settings_user', array('user_id', 'name'), false);\n\t\t}\n\t}\n\n\t$settings_tree = db_fetch_assoc_prepared('SELECT *\n\t\tFROM settings_tree\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($settings_tree)) {\n\t\tforeach ($settings_tree as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'settings_tree', array('user_id', 'graph_tree_item_id'), false);\n\t\t}\n\t}\n\n\t/* apply group permissions for the user */\n\t$groups = db_fetch_assoc_prepared('SELECT group_id\n\t\tFROM user_auth_group_members\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($groups)) {\n\t\tforeach($groups as $g) {\n\t\t\t$sql[] = '(' . $new_id . ', ' . $g['group_id'] . ')';\n\t\t}\n\n\t\tdb_execute('INSERT IGNORE INTO user_auth_group_members\n\t\t\t(user_id, group_id) VALUES ' . implode(',', $sql));\n\t}\n\n\tapi_plugin_hook_function('copy_user', array('template_id' => $template_id, 'new_id' => $new_id));\n\n\treturn $new_id;\n}\n\n\n/**\n * user_remove - remove a user account\n *\n * @param  (int) $user_id - Id os the user account to remove\n *\n * @return (void)\n */\nfunction user_remove($user_id) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($user_id);\n\t/* ==================================================== */\n\n\t/* check for guest or template user */\n\t$username = db_fetch_cell_prepared('SELECT username\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\tif ($username != get_nfilter_request_var('username')) {\n\t\tif (is_template_account($user_id)) {\n\t\t\traise_message(21);\n\t\t\treturn;\n\t\t}\n\n\t\tif ($user_id === get_guest_account()) {\n\t\t\traise_message(21);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE FROM user_auth WHERE id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_cache WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_perms WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_row_cache WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_members WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM settings_user WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM settings_tree WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM sessions WHERE user_id = ?', array($user_id));\n\n\tapi_plugin_hook_function('user_remove', $user_id);\n}\n\n/**\n * user_disable - disable a user account\n *\n * @param  (int) $user_id - Id of the user account to disable\n *\n * @return (void)\n */\nfunction user_disable($user_id) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($user_id);\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\"UPDATE user_auth SET enabled = '' WHERE id = ?\", array($user_id));\n\n\treset_user_perms($user_id);\n}\n\n/**\n * user_enable - enable a user account\n *\n * @param  (int) $user_id - Id of the user account to enable\n *\n * @return (void)\n */\nfunction user_enable($user_id) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($user_id);\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\"UPDATE user_auth SET enabled = 'on' WHERE id = ?\", array($user_id));\n\n\treset_user_perms($user_id);\n}\n\n/**\n * get_auth_realms - return a list of system user authentication realms\n *\n * @param  (bool) $login - If true, we also set the local login realm\n *\n * @return (array) Array of login realms\n */\nfunction get_auth_realms($login = false) {\n\tif (read_config_option('auth_method') == 4) {\n\t\t$drealms = db_fetch_assoc('SELECT domain_id, domain_name\n\t\t\tFROM user_domains\n\t\t\tWHERE enabled=\"on\"\n\t\t\tORDER BY domain_name');\n\n\t\tif (cacti_sizeof($drealms)) {\n\t\t\tif ($login) {\n\t\t\t\t$new_realms['0'] = array(\n\t\t\t\t\t'name' => __('Local'),\n\t\t\t\t\t'selected' => false\n\t\t\t\t);\n\n\t\t\t\tforeach($drealms as $realm) {\n\t\t\t\t\t$new_realms[1000+$realm['domain_id']] = array(\n\t\t\t\t\t\t'name' => $realm['domain_name'],\n\t\t\t\t\t\t'selected' => false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t$default_realm = db_fetch_cell('SELECT domain_id\n\t\t\t\t\tFROM user_domains\n\t\t\t\t\tWHERE defdomain=1\n\t\t\t\t\tAND enabled=\"on\"');\n\n\t\t\t\tif (!empty($default_realm)) {\n\t\t\t\t\t$new_realms[1000+$default_realm]['selected'] = true;\n\t\t\t\t} else {\n\t\t\t\t\t$new_realms['0']['selected'] = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$new_realms['0'] = __('Local');\n\t\t\t\tforeach($drealms as $realm) {\n\t\t\t\t\t$new_realms[1000+$realm['domain_id']] = $realm['domain_name'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $new_realms;\n\t\t}\n\t}\n\n\treturn array(\n\t\t'0' => __('Local'),\n\t\t'3' => __('LDAP'),\n\t\t'2' => __('Web Basic')\n\t);\n}\n\n/**\n * is_graph_allowed - determines whether the current user is allowed to view a certain graph\n *\n * @param  (int) $local_graph_id - the ID of the graph to check permissions for\n *\n * @return (bool) whether the current user is allowed the view the specified graph or not\n */\nfunction is_graph_allowed($local_graph_id, $user_id = 0) {\n\t$rows  = 0;\n\n\tget_allowed_graphs('', '', '', $rows, $user_id, $local_graph_id);\n\n\treturn ($rows > 0);\n}\n\n/**\n * auth_check_perms - A helper function to checking Tree permissions\n *\n * @param  (array) A set of tree objects\n * @param  (int)   $policy - The policy to check\n *\n * @return (bool) true if there is access else false\n */\nfunction auth_check_perms($objects, $policy) {\n\t$objectSize = cacti_sizeof($objects);\n\n\t/* policy == allow AND matches = DENY */\n\tif ($objectSize && $policy == 1) {\n\t\treturn false;\n\t/* policy == deny AND matches = ALLOW */\n\t} elseif ($objectSize && $policy == 2) {\n\t\treturn true;\n\t/* policy == allow AND no matches = ALLOW */\n\t} elseif (!$objectSize && $policy == 1) {\n\t\treturn true;\n\t/* policy == deny AND no matches = DENY */\n\t} elseif (!$objectSize && $policy == 2) {\n\t\treturn false;\n\t}\n}\n\n/**\n * auth_augment_roles - A helper function to extend Cacti roles with additional realms\n *   or to add a new role.\n *\n * @param  (string) $role_name - The role to extend or add\n * @param  (array)  $files - The filenames to add to the role\n *\n * @return (void)\n */\nfunction auth_augment_roles($role_name, $files) {\n\tglobal $user_auth_roles, $user_auth_realm_filenames;\n\n\tforeach($files as $file) {\n\t\tif (array_search($file, $user_auth_realm_filenames, true) !== false) {\n\t\t\tif (array_search($user_auth_realm_filenames[$file], $user_auth_roles[$role_name], true) === false) {\n\t\t\t\t$user_auth_roles[$role_name][] = $user_auth_realm_filenames[$file];\n\t\t\t}\n\t\t} else {\n\t\t\tif (isset($_SESSION['sess_auth_names'][$role_name])) {\n\t\t\t\t$realm_id = $_SESSION['sess_auth_names'][$role_name];\n\t\t\t} else {\n\t\t\t\t$realm_id = db_fetch_cell_prepared('SELECT id+100 AS realm\n\t\t\t\t\tFROM plugin_realms\n\t\t\t\t\tWHERE file = ?\n\t\t\t\t\tOR file LIKE ?\n\t\t\t\t\tOR file LIKE ?\n\t\t\t\t\tOR file LIKE ?',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t$file,\n\t\t\t\t\t\t$file . ',%',\n\t\t\t\t\t\t'%,' . $file . ',%',\n\t\t\t\t\t\t'%,' . $file\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif ($realm_id > 0) {\n\t\t\t\t\t$_SESSION['sess_auth_names'][$role_name] = $realm_id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!empty($realm_id)) {\n\t\t\t\tif (!isset($user_auth_roles[$role_name])) {\n\t\t\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t\t\t} elseif (array_search($realm_id, $user_auth_roles[$role_name]) === false) {\n\t\t\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * auth_augment_roles_byname - A helper function to extend Cacti roles with additional realms\n *   or to add a new role.\n *\n * @param  (string)  $role_name - The role to extend or add\n * @param  (string)  $auth_name - The name that must be mapped\n *\n * @return (void)\n */\nfunction auth_augment_roles_byname($role_name, $auth_name) {\n\tglobal $user_auth_roles, $user_auth_realm_filenames;\n\n\tif (isset($_SESSION['sess_auth_names'][$auth_name])) {\n\t\t$realm_id = $_SESSION['sess_auth_names'][$auth_name];\n\t} else {\n\t\t$realm_id = db_fetch_cell_prepared('SELECT id+100 AS realm\n\t\t\tFROM plugin_realms\n\t\t\tWHERE display = ?',\n\t\t\tarray($auth_name));\n\n\t\tif ($realm_id > 0) {\n\t\t\t$_SESSION['sess_auth_names'][$auth_name] = $realm_id;\n\t\t}\n\t}\n\n\tif (!empty($realm_id)) {\n\t\tif (!isset($user_auth_roles[$role_name])) {\n\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t} elseif (array_search($realm_id, $user_auth_roles[$role_name]) === false) {\n\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t}\n\t}\n}\n\n/**\n * is_tree_allowed - determines whether the current user is allowed to view a certain graph tree\n *\n * @param  (int)  $tree_id the ID of the graph tree to check permissions for\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (bool) whether the current user is allowed the view the specified graph tree or not\n */\nfunction is_tree_allowed($tree_id, $user_id = 0) {\n\tif ($user_id == -1) {\n\t\treturn true;\n\t}\n\n\tif (isset($_SESSION['sess_tree_perms'][$tree_id])) {\n\t\treturn $_SESSION['sess_tree_perms'][$tree_id];\n\t}\n\n\tif (read_config_option('auth_method') != 0) {\n\t\tif ($user_id == 0) {\n\t\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t\t} else {\n\t\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = false;\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t$policy = db_fetch_cell_prepared('SELECT policy_trees\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($user_id));\n\n\t\t$trees  = db_fetch_assoc_prepared('SELECT user_id\n\t\t\tFROM user_auth_perms\n\t\t\tWHERE user_id = ?\n\t\t\tAND type = 2\n\t\t\tAND item_id = ?',\n\t\t\tarray($user_id, $tree_id));\n\n\t\tif (auth_check_perms($trees, $policy)) {\n\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/* check for group perms */\n\t\t$groups = db_fetch_assoc_prepared(\"SELECT uag.policy_trees\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tWHERE uag.enabled = 'on'\n\t\t\tAND uagm.user_id = ?\",\n\t\t\tarray($user_id));\n\n\t\tif (!cacti_sizeof($groups)) {\n\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = false;\n\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ($groups as $g) {\n\t\t\tif (auth_check_perms($trees, $g['policy_trees'])) {\n\t\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t/* check for group trees */\n\t\t$gtrees = db_fetch_assoc_prepared(\"SELECT uagm.user_id\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tINNER JOIN user_auth_group_perms as uagp\n\t\t\tON uagp.group_id = uag.id\n\t\t\tWHERE uag.enabled = 'on'\n\t\t\tAND uagm.user_id = ?\n\t\t\tAND uagp.item_id = ?\",\n\t\t\tarray($user_id, $tree_id));\n\n\t\tforeach ($groups as $g) {\n\t\t\tif (auth_check_perms($gtrees, $g['policy_trees'])) {\n\t\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t$_SESSION['sess_tree_perms'][$tree_id] = false;\n\n\t\treturn false;\n\t} else {\n\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\n\t\treturn true;\n\t}\n}\n\n/**\n * is_device_allowed - determines whether the current user is allowed to view a certain device\n *\n * @param  (int)  $device_id - the ID of the device to check permissions for\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (bool) whether the current user is allowed the view the specified device or not\n */\nfunction is_device_allowed($device_id, $user_id = 0) {\n\t$total_rows = -2;\n\tget_allowed_devices('', '', '', $total_rows, $user_id, $device_id);\n\treturn ($total_rows > 0);\n}\n\n/**\n * is_graph_template_allowed - determines whether the current user is allowed to view a certain graph template\n *\n * @param  (int)  $graph_template_id - The ID of the graph template to check permissions for\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (bool) whether the current user is allowed the view the specified graph template or not\n */\nfunction is_graph_template_allowed($graph_template_id, $user = 0) {\n\t$total_rows = -2;\n\tget_allowed_graph_templates('', '', '', $total_rows, $user, $graph_template_id);\n\n\treturn ($total_rows > 0);\n}\n\n/**\n * is_view_allowed - Returns a true or false as to whether or not a specific view type is allowed\n *   View options include 'show_tree', 'show_list', 'show_preview', 'graph_settings'\n *\n * @param  (string) $view - the view to check for permissions on\n *\n * @return (bool) True if allowed, else false\n */\nfunction is_view_allowed($view = 'show_tree') {\n\tif (read_config_option('auth_method') != 0) {\n\t\tif (!isset($_SESSION['sess_user_id'])) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (db_table_exists('user_auth_group')) {\n\t\t\t$values = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT $view\n\t\t\t\t\tFROM user_auth_group AS uag\n\t\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\t\tON uag.id = uagm.user_id\n\t\t\t\t\tWHERE uag.enabled = 'on'\n\t\t\t\t\tAND uagm.user_id = ?\",\n\t\t\t\t\tarray($_SESSION['sess_user_id'])\n\t\t\t\t), $view, $view\n\t\t\t);\n\n\t\t\tif (isset($values[3])) {\n\t\t\t\treturn false;\n\t\t\t} elseif (isset($values['on'])) {\n\t\t\t\treturn true;\n\t\t\t} elseif (isset($values[2])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t$value = db_fetch_cell_prepared(\"SELECT $view\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?\",\n\t\t\tarray($_SESSION['sess_user_id'])\n\t\t);\n\n\t\treturn ($value == 'on');\n\t} else {\n\t\treturn true;\n\t}\n}\n\n/**\n * is_tree_branch_empty - Given a tree id and a branch id, check if it's empty\n *\n * @param  (int)  $tree_id - The Cacti Tree id\n * @param  (int)  $parent  - The Cacti Tree branch id\n *\n * @return (bool) True if empty, else false\n */\nfunction is_tree_branch_empty($tree_id, $parent = 0) {\n\t$graphs = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT local_graph_id\n\t\t\tFROM graph_tree_items\n\t\t\tWHERE graph_tree_id = ?\n\t\t\tAND local_graph_id > 0\n\t\t\tAND parent = ?',\n\t\t\tarray($tree_id, $parent)\n\t\t), 'local_graph_id', 'local_graph_id'\n\t);\n\n\t$simple_perms = get_simple_graph_perms($_SESSION['sess_user_id']);\n\n\tif (cacti_sizeof($graphs) && ($simple_perms || cacti_sizeof(get_allowed_graphs('gl.id IN(' . implode(',', $graphs) . ')'))) > 0) {\n\t\treturn false;\n\t}\n\n\t$hosts = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT host_id\n\t\t\tFROM graph_tree_items\n\t\t\tWHERE graph_tree_id = ?\n\t\t\tAND host_id > 0\n\t\t\tAND parent = ?',\n\t\t\tarray($tree_id, $parent)\n\t\t), 'host_id', 'host_id'\n\t);\n\n\t$sites = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT site_id\n\t\t\tFROM graph_tree_items\n\t\t\tWHERE graph_tree_id = ?\n\t\t\tAND site_id > 0\n\t\t\tAND parent = ?',\n\t\t\tarray($tree_id, $parent)\n\t\t), 'site_id', 'site_id'\n\t);\n\n\tif (!cacti_sizeof($sites)) {\n\t\tif (cacti_sizeof($hosts) && cacti_sizeof(get_allowed_devices('h.id IN(' . implode(',', $hosts) . ')'), 'description', '', -1) > 0) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t$site_hosts = array();\n\t\tforeach($sites as $site) {\n\t\t\t$site_hosts += array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT id\n\t\t\t\t\tFROM host\n\t\t\t\t\tWHERE site_id = ?',\n\t\t\t\t\tarray($site)\n\t\t\t\t), 'id', 'id'\n\t\t\t);\n\t\t}\n\n\t\tif (cacti_sizeof($site_hosts) && cacti_sizeof(get_allowed_devices('h.id IN(' . implode(',', $site_hosts) . ')'), 'description', '', -1) > 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$branches = db_fetch_assoc_prepared('SELECT id, graph_tree_id\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $parent));\n\n\tif (cacti_sizeof($branches)) {\n\t\tforeach($branches as $b) {\n\t\t\tif (!is_tree_branch_empty($b['graph_tree_id'], $b['id'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * is_realm_allowed - Given a realm and a user, check their permissions if the\n *   admin changed a users settings, setup the case to redirect by clearing\n *   session variables so that when an admin makes a change, the user does not\n *   have to login again to receive them.\n *\n * @param  (int)      $realm      The realm to check\n * @param  (int|bool) $check_user The either false or the user id to check\n *\n * @return (bool) True if allowed, otherwise false\n */\nfunction is_realm_allowed($realm, $check_user = false) {\n\tglobal $config;\n\n\t/* list all realms that this user has access to */\n\tif (read_config_option('auth_method') != 0) {\n\t\t/* if we are only checking another users permission, don't check cache */\n\t\tif ($check_user == false) {\n\t\t\t/* user is not set, no permissions */\n\t\t\tif (!isset($_SESSION['sess_user_id'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/* check to see if the admin invalidated a permission */\n\t\t\tif (!is_user_perms_valid($_SESSION['sess_user_id'])) {\n\t\t\t\tif (db_table_exists('user_auth_cache')) {\n\t\t\t\t\t$enabled = db_fetch_cell_prepared('SELECT enabled\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\t\t\tif ($enabled == '' && get_guest_account() !== $_SESSION['sess_user_id']) {\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_cache\n\t\t\t\t\t\t\tWHERE user_id = ?',\n\t\t\t\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\t\t\t\tkill_session_var('sess_user_id');\n\t\t\t\t\t\tkill_session_var('sess_user_realms');\n\t\t\t\t\t\tkill_session_var('sess_user_config_array');\n\t\t\t\t\t\tkill_session_var('sess_config_array');\n\t\t\t\t\t\tkill_session_var('sess_auth_names');\n\t\t\t\t\t\tkill_session_var('sess_tree_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_template_perms');\n\n\t\t\t\t\t\tprint '<span style=\"display:none;\">cactiLoginSuspend</span>';\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkill_session_var('sess_user_realms');\n\t\t\t\t\t\tkill_session_var('sess_user_config_array');\n\t\t\t\t\t\tkill_session_var('sess_config_array');\n\t\t\t\t\t\tkill_session_var('sess_auth_names');\n\t\t\t\t\t\tkill_session_var('sess_tree_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_template_perms');\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '<span style=\"display:none;\">cactiRedirect</span>';\n\t\t\t\t\texit;\n\t\t\t\t} else {\n\t\t\t\t\tkill_session_var('sess_user_realms');\n\t\t\t\t\tkill_session_var('sess_user_config_array');\n\t\t\t\t\tkill_session_var('sess_config_array');\n\t\t\t\t\tkill_session_var('sess_auth_names');\n\t\t\t\t\tkill_session_var('sess_tree_perms');\n\t\t\t\t\tkill_session_var('sess_simple_perms');\n\t\t\t\t\tkill_session_var('sess_simple_template_perms');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* if the permission is already valid, the session variable will be set */\n\t\t\tif (isset($_SESSION['sess_user_realms'][$realm])) {\n\t\t\t\treturn $_SESSION['sess_user_realms'][$realm];\n\t\t\t}\n\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\t$user_id = $check_user;\n\t\t}\n\n\t\t/**\n\t\t * check the permissions from the table, should only happen once per login\n\t\t * of after a permission change by the administrator.\n\t\t */\n\t\tif (read_config_option('auth_method') != 0) {\n\t\t\tif (cacti_version_compare($config['cacti_db_version'], '1.0.0', '>=')) {\n\t\t\t\t$user_realm = db_fetch_cell_prepared(\"SELECT realm_id\n\t\t\t\t\tFROM user_auth_realm\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND realm_id = ?\n\t\t\t\t\tUNION\n\t\t\t\t\tSELECT realm_id\n\t\t\t\t\tFROM user_auth_group_realm AS uagr\n\t\t\t\t\tINNER JOIN user_auth_group AS uag\n\t\t\t\t\tON uag.id = uagr.group_id\n\t\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\t\tON uag.id = uagm.group_id\n\t\t\t\t\tWHERE uag.enabled = 'on'\n\t\t\t\t\tAND uagr.realm_id = ?\n\t\t\t\t\tAND uagm.user_id = ?\",\n\t\t\t\t\tarray($user_id, $realm, $realm, $user_id));\n\t\t\t} else {\n\t\t\t\t$user_realm = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\t\tFROM user_auth_realm\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND realm_id = ?',\n\t\t\t\t\tarray($user_id, $realm));\n\t\t\t}\n\n\t\t\tif (!empty($user_realm)) {\n\t\t\t\tif ($check_user == false) {\n\t\t\t\t\t$_SESSION['sess_user_realms'][$realm] = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($check_user == false) {\n\t\t\t\t\t$_SESSION['sess_user_realms'][$realm] = false;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif ($check_user == false) {\n\t\t\t\t$_SESSION['sess_user_realms'][$realm] = true;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($check_user == false) {\n\t\t\t$_SESSION['sess_user_realms'][$realm] = true;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn $_SESSION['sess_user_realms'][$realm];\n}\n\n/**\n * get_allowed_tree_level - Get the permitted tree branch data available to the user\n *\n * @param  (int)  The tree id to check\n * @param  (int)  The branch id, 0 is the root of the tree\n * @param  (bool) Tells the function that the user is editing\n * @param  (int)  The user id to check for permissions. if 0 then check the current user\n *\n * @return (array) An array of Tree branch items that a re allowed (graphs, devices)\n */\nfunction get_allowed_tree_level($tree_id, $parent_id, $editing = false, $user_id = 0) {\n\t$items = db_fetch_assoc_prepared('SELECT gti.id, gti.title, gti.host_id,\n\t\tgti.site_id, gti.local_graph_id, gti.host_grouping_type,\n\t\th.description AS hostname, s.name AS sitename\n\t\tFROM graph_tree_items AS gti\n\t\tINNER JOIN graph_tree AS gt\n\t\tON gt.id = gti.graph_tree_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id = gti.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON s.id = gti.site_id\n\t\tWHERE gti.graph_tree_id = ?\n\t\tAND gti.parent = ?\n\t\tORDER BY gti.position ASC',\n\t\tarray($tree_id, $parent_id));\n\n\tif (!$editing) {\n\t\t$i = 0;\n\t\tif (cacti_sizeof($items)) {\n\t\t\tforeach($items as $item) {\n\t\t\t\tif ($item['host_id'] > 0) {\n\t\t\t\t\tif (!is_device_allowed($item['host_id'], $user_id)) {\n\t\t\t\t\t\tunset($items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif($item['local_graph_id'] > 0) {\n\t\t\t\t\tif (!is_graph_allowed($item['local_graph_id'], $user_id)) {\n\t\t\t\t\t\tunset($items[$i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $items;\n}\n\n/**\n * get_allowed_tree_content - A function that gathers items and statistics of those items\n *   that are permitted on the tree specified\n *\n * @param  (int)    The tree id to check\n * @param  (int)    The branch id, 0 is the root of the tree\n * @param  (string) The Tree SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of items\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) An array of Tree branch items that a re allowed (graphs, devices)\n */\nfunction get_allowed_tree_content($tree_id, $parent = 0, $sql_where = '', $sql_order = '', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif (!is_numeric($tree_id)) {\n\t\treturn array();\n\t}\n\n\tif (!is_numeric($parent)) {\n\t\treturn array();\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE gti.local_graph_id=0\n\t\t\tAND gti.parent=$parent\n\t\t\tAND gti.graph_tree_id=$tree_id\n\t\t\tAND (\" . $sql_where . ')';\n\t} else {\n\t\t$sql_where = \"WHERE gti.local_graph_id=0\n\t\t\tAND gti.parent=$parent\n\t\t\tAND gti.graph_tree_id=$tree_id\";\n\t}\n\n\t$trees = array_rekey(\n\t\tget_allowed_trees(false, false, '', '', '', $total_rows, $user_id),\n\t\t'id', 'name'\n\t);\n\n\tif ($tree_id > 0) {\n\t\tif (cacti_sizeof($trees)) {\n\t\t\t$sql_where .= ' AND gt.id IN (' . implode(', ', array_keys($trees)) . ')';\n\t\t}\n\n\t\t$hierarchy = db_fetch_assoc(\"SELECT gti.graph_tree_id AS tree_id, gti.id, gti.title, gti.host_id, gti.site_id,\n\t\t\tgti.local_graph_id, gti.host_grouping_type, h.description AS hostname, s.name AS sitename\n\t\t\tFROM graph_tree_items AS gti\n\t\t\tINNER JOIN graph_tree AS gt\n\t\t\tON gt.id = gti.graph_tree_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gti.host_id\n\t\t\tLEFT JOIN sites AS s\n\t\t\tON gti.site_id=s.id\n\t\t\t$sql_where\n\t\t\tORDER BY gti.position\");\n\t} elseif (cacti_sizeof($trees)) {\n\t\t$hierarchy = db_fetch_assoc(\"SELECT gt.id AS tree_id, '0' AS id, gt.name AS title, '0' AS host_id, '0' AS site_id,\n\t\t\t'0' AS local_graph_id, '1' AS host_grouping_type, '' AS hostname, '' AS sitename\n\t\t\tFROM graph_tree AS gt\n\t\t\tWHERE enabled='on'\n\t\t\tAND gt.id IN (\" . implode(', ', array_keys($trees)) . \")\n\t\t\tORDER BY gt.sequence\");\n\t}\n\n\tif (read_config_option('auth_method') != 0) {\n\t\t$new_hierarchy = array();\n\t\tif (cacti_sizeof($hierarchy)) {\n\t\t\tforeach($hierarchy as $h) {\n\t\t\t\tif ($h['host_id'] > 0) {\n\t\t\t\t\tif (is_device_allowed($h['host_id'])) {\n\t\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($h['id'] == 0) {\n\t\t\t\t\tif (!is_tree_branch_empty($h['tree_id'], $h['id'])) {\n\t\t\t\t\t\tif (is_tree_allowed($h['tree_id'])) {\n\t\t\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif ($h['site_id'] > 0) {\n\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t} elseif (!is_tree_branch_empty($h['tree_id'], $h['id'])) {\n\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $new_hierarchy;\n\t} else {\n\t\treturn $hierarchy;\n\t}\n}\n\n/**\n * get_policies - Searches both the users and the users groups and returns a policy\n *   array to be used for determining object permissions.\n *\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) An array of policy objects comprising the users permissions\n */\nfunction get_policies($user_id) {\n\t/* get policies for all user groups */\n\t$policies = db_fetch_assoc_prepared(\"SELECT uag.id, 'group' AS type, uag.name,\n\t\tuag.policy_graphs, uag.policy_hosts, uag.policy_graph_templates, uag.policy_trees\n\t\tFROM user_auth_group AS uag\n\t\tINNER JOIN user_auth_group_members AS uagm\n\t\tON uag.id = uagm.group_id\n\t\tWHERE uag.enabled = 'on'\n\t\tAND uagm.user_id = ?\",\n\t\tarray($user_id));\n\n\t/* get policies for the user */\n\t$policies[] = db_fetch_row_prepared(\"SELECT id, 'user' AS type, 'user' AS name,\n\t\tpolicy_graphs, policy_hosts, policy_graph_templates, policy_trees\n\t\tFROM user_auth\n\t\tWHERE id = ?\",\n\t\tarray($user_id));\n\n\treturn $policies;\n}\n\n/**\n * get_allowed_tree_header_graphs - Returns the graphs that are permitted at the branch/leaf id specified\n *\n * @param  (int)    The tree id to check\n * @param  (int)    The branch id, 0 is the root of the tree\n * @param  (string) The Tree SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of items\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) Array of tree header graphs to display\n */\nfunction get_allowed_tree_header_graphs($tree_id, $leaf_id = 0, $sql_where = '', $sql_order = 'gti.position', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif (!is_numeric($tree_id)) {\n\t\treturn array();\n\t}\n\n\tif (!is_numeric($leaf_id)) {\n\t\treturn array();\n\t}\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \" AND ($sql_where)\";\n\t}\n\n\t$sql_where = \"WHERE (gti.graph_tree_id=$tree_id AND gti.parent=$leaf_id)\" . $sql_where;\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif ($auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT gti.id, gti.title, gtg.local_graph_id, h.description,\n\t\tgt.name AS template_name, gtg.title_cache, gtg.width, gtg.height,\n\t\tgl.snmp_index, gl.snmp_query_id\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id = gtg.local_graph_id\n\t\tINNER JOIN graph_tree_items AS gti\n\t\tON gti.local_graph_id = gl.id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id = gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id = gl.host_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(*)\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tINNER JOIN graph_tree_items AS gti\n\t\tON gti.local_graph_id=gl.id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'graph');\n\n\treturn $graphs;\n}\n\n/**\n * get_allowed_graphs - Returns the graphs that are permitted by the user.  Used for table displays\n *   where users will view the graphs that they are permitted to access\n *\n * @param  (string) The SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph is permitted, the id of that graph\n *\n * @return (array) Array of allowed graphs\n */\nfunction get_allowed_graphs($sql_where = '', $sql_order = 'gtg.title_cache', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_id = 0) {\n\tif ($sql_limit != '') {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($graph_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : ' ') . \" gl.id = $graph_id\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL)\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/* see if permissions are simple */\n\t$simple_perms = get_simple_graph_perms($user_id);\n\n\t/* in case we need to review get the graph_auth_method */\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, h.description, gt.name AS template_name,\n\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id,\n\t\tIF(gl.graph_template_id=0, 0, IF(gl.snmp_query_id=0, 2, 1)) AS graph_source\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(*)\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\";\n\n\tif ($graph_id == 0) {\n\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'graph');\n\t} else {\n\t\t$total_rows = db_fetch_cell($sql);\n\t}\n\n\treturn $graphs;\n}\n\n/**\n * get_allowed_aggregate_graphs - Returns the aggregate graphs that are permitted by the user.\n *   Used for table displays where users will view the graphs that they are permitted to access\n *\n * @param  (string) The SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph is permitted, the id of that graph\n *\n * @return (array) Array of allowed graphs\n */\nfunction get_allowed_aggregate_graphs($sql_where = '', $sql_order = 'gtg.title_cache', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($graph_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : ' ') . \" gl.id = $graph_id\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL)\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/* see if permissions are simple */\n\t$simple_perms = get_simple_graph_perms($user_id);\n\n\t/* in case we need to review get the graph_auth_method */\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, '' AS description, gt.name AS template_name,\n\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN (\n\t\t\tSELECT ag.local_graph_id AS id, gl.host_id, gl.graph_template_id,\n\t\t\tgl.snmp_query_id, gl.snmp_query_graph_id, gl.snmp_index\n\t\t\tFROM aggregate_graphs AS ag\n\t\t\tINNER JOIN aggregate_graphs_items AS agi\n\t\t\tON ag.id=agi.aggregate_graph_id\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id=agi.local_graph_id\n\t\t) AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\n\t\tGROUP BY gtg.local_graph_id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(DISTINCT gl.id)\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN (\n\t\t\tSELECT ag.local_graph_id AS id, gl.host_id, gl.graph_template_id,\n\t\t\tgl.snmp_query_id, gl.snmp_query_graph_id, gl.snmp_index\n\t\t\tFROM aggregate_graphs AS ag\n\t\t\tINNER JOIN aggregate_graphs_items AS agi\n\t\t\tON ag.id=agi.aggregate_graph_id\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id=agi.local_graph_id\n\t\t) AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'aggregate_graph');\n\n\treturn $graphs;\n}\n\n/**\n * get_simple_device_perms - Returns a boolean true or false if the user has full access to\n *   all devices in the system.  This function is used to shortcut complex queries that may\n *   take multiple seconds to return an answer.\n *\n * @param  (int)    The user id to check for permissions for\n *\n * @return (bool)   True if simple permissions are in place, otherwise false\n */\nfunction get_simple_device_perms($user) {\n\t$policy_hosts = db_fetch_cell_prepared('SELECT policy_hosts\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user));\n\n\t$perm_count = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?\n\t\tAND type = 2',\n\t\tarray($user));\n\n\tif ($policy_hosts == 1 && $perm_count == 0) {\n\t\treturn true;\n\t} else {\n\t\t$policies = db_fetch_assoc_prepared('SELECT policy_hosts, COUNT(*) AS exceptions\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_perms AS uagp\n\t\t\tON uag.id = uagp.group_id\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uagm.group_id = uag.id\n\t\t\tWHERE uagp.type = 2\n\t\t\tAND uagm.user_id = ?\n\t\t\tGROUP BY uag.id',\n\t\t\tarray($user));\n\n\t\tif (cacti_sizeof($policies)) {\n\t\t\tforeach($policies as $p) {\n\t\t\t\tif ($p['policy_hosts'] == 1 && $p['exceptions'] == 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n/**\n * get_simple_graph_perms - Returns a boolean true or false if the user has full access to\n *   all graphs in the system.  This function is used to shortcut complex queries that may\n *   take multiple seconds to return an answer.\n *\n * @param  (int)    The user id to check for permissions for\n *\n * @return (bool)   True if simple permissions are in place, otherwise false\n */\nfunction get_simple_graph_perms($user_id) {\n\tif (isset($_SESSION['sess_simple_perms'])) {\n\t\treturn $_SESSION['sess_simple_perms'];\n\t}\n\n\t$policy_graphs = db_fetch_cell_prepared('SELECT policy_graphs\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\t$perm_count = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?\n\t\tAND type = 1',\n\t\tarray($user_id));\n\n\tif ($policy_graphs == 1 && $perm_count == 0) {\n\t\t$_SESSION['sess_simple_perms'] = true;\n\n\t\treturn true;\n\t} else {\n\t\t$policies = db_fetch_assoc_prepared('SELECT policy_graphs, COUNT(*) AS exceptions\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_perms AS uagp\n\t\t\tON uag.id = uagp.group_id\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uagm.group_id = uag.id\n\t\t\tWHERE uagp.type = 1\n\t\t\tAND uagm.user_id = ?\n\t\t\tGROUP BY uag.id',\n\t\t\tarray($user_id));\n\n\t\tif (cacti_sizeof($policies)) {\n\t\t\tforeach($policies as $p) {\n\t\t\t\tif ($p['policy_graphs'] == 1 && $p['exceptions'] == 0) {\n\t\t\t\t\t$_SESSION['sess_simple_perms'] = true;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$_SESSION['sess_simple_perms'] = false;\n\n\t\treturn false;\n\t}\n}\n\n/**\n * get_simple_graph_template_perms - Returns a boolean true or false if the user has full access to\n *   all graphs templates in the system.  This function is used to shortcut complex queries that may\n *   take multiple seconds to return an answer.\n *\n * @param  (int)    The user id to check for permissions for\n *\n * @return (bool)   True if simple permissions are in place, otherwise false\n */\nfunction get_simple_graph_template_perms($user_id) {\n\tif (isset($_SESSION['sess_simple_template_perms'])) {\n\t\treturn $_SESSION['sess_simple_template_perms'];\n\t}\n\n\t$policy_graph_templates = db_fetch_cell_prepared('SELECT policy_graph_templates\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\t$perm_count = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?\n\t\tAND type = 4',\n\t\tarray($user_id));\n\n\tif ($policy_graph_templates == 1 && $perm_count == 0) {\n\t\t$_SESSION['sess_simple_template_perms'] = true;\n\n\t\treturn true;\n\t} else {\n\t\t$policies = db_fetch_assoc_prepared('SELECT policy_graph_templates, COUNT(*) AS exceptions\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_perms AS uagp\n\t\t\tON uag.id = uagp.group_id\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uagm.group_id = uag.id\n\t\t\tWHERE uagp.type = 4\n\t\t\tAND uagm.user_id = ?\n\t\t\tGROUP BY uag.id',\n\t\t\tarray($user_id));\n\n\t\tif (cacti_sizeof($policies)) {\n\t\t\tforeach($policies as $p) {\n\t\t\t\tif ($p['policy_graph_templates'] == 1 && $p['exceptions'] == 0) {\n\t\t\t\t\t$_SESSION['sess_simple_template_perms'] = true;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$_SESSION['sess_simple_template_perms'] = false;\n\n\t\treturn false;\n\t}\n}\n\n/**\n * get_allowed_graph_templates - returns the list of Graph Templates that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays.\n *\n * @param  (string) The SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph template is permitted, the id of that graph template\n *\n * @return (array)  An array of permitted Graph Templates\n */\nfunction get_allowed_graph_templates($sql_where = '', $sql_order = 'gt.name', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_template_id = 0) {\n\tif ($user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t// For timing\n\t$start = microtime(true);\n\n\t$init_rows = $total_rows;\n\n\t$templates = array();\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($graph_template_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : ' ') . \"(gl.graph_template_id = $graph_template_id)\";\n\t}\n\n\t$sql_where = 'WHERE ' . ($sql_where != '' ? $sql_where . ' AND ':' ') . '(gt.id IS NOT NULL) ';\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/* see if permissions are simple */\n\t$simple_perms = get_simple_graph_perms($user_id);\n\n\t/* in case we need to review get the graph_auth_method */\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\t/* short circuit if we don't have a user */\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\treturn array();\n\t}\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\tif ($total_rows != -2) {\n\t\t$templates = db_fetch_assoc(\"SELECT gt.id, gt.name, COUNT(*) AS graphs\n\t\t\tFROM graph_local AS gl\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\n\t\t\t$sql_order\n\t\t\t$sql_limit\");\n\t}\n\n\tif ($total_rows >= 0 || $total_rows == -2) {\n\t\t$sql = \"SELECT COUNT(DISTINCT gl.graph_template_id) AS id\n\t\t\tFROM graph_local AS gl\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_where\";\n\n\t\tif ($graph_template_id == 0) {\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'graph');\n\t\t} else {\n\t\t\t$total_rows = db_fetch_cell($sql);\n\t\t}\n\t}\n\n\t// For timing\n\t$end = microtime(true);\n\n\tcacti_log(sprintf('The Get Templates total time was %4.2f', $end - $start), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\tif ($templates === false) {\n\t\t$templates = array();\n\t}\n\n\treturn $templates;\n}\n\n/**\n * get_policy_join_select - Parse the policies in order to visually display user permissions\n *\n * @param  (array) $policies  The list of user and group policies.  Will be reversed to\n *   show user permissions first.\n *\n * @return (array)  Array containing both $sql_select and $sql_join\n */\nfunction get_policy_join_select($policies) {\n\t$sql_join   = '';\n\t$sql_select = '';\n\n\t$i = 1;\n\t$j = 1;\n\tforeach($policies as $p) {\n\t\t$sql_join   .= \"LEFT JOIN (SELECT * FROM user_auth_\" . ($p['type'] == 'user' ? '' : 'group_') . \"perms WHERE \" . $p['type'] . '_id = ' . $p['id'] . \") AS uap$j ON (gl.id = uap$j.item_id AND uap$j.type = 1) \";\n\t\t$sql_select .= ($sql_select != '' ? ', ' : '') . \"uap$j.\" . $p['type'] . \"_id AS graph$i\";\n\t\t$j++;\n\n\t\t$sql_join   .= 'LEFT JOIN (SELECT * FROM user_auth_' . ($p['type'] == 'user' ? '' : 'group_') . \"perms WHERE \" . $p['type'] . '_id = ' . $p['id'] . \") AS uap$j ON (gl.host_id = uap$j.item_id AND uap$j.type = 3) \";\n\t\t$sql_select .= ($sql_select != '' ? ', ' : '') . \"uap$j.\" . $p['type'] . \"_id AS device$i\";\n\t\t$j++;\n\n\t\t$sql_join   .= 'LEFT JOIN (SELECT * FROM user_auth_' . ($p['type'] == 'user' ? '' : 'group_') . \"perms WHERE \" . $p['type'] . '_id = ' . $p['id'] . \") AS uap$j ON (gl.graph_template_id = uap$j.item_id AND uap$j.type = 4) \";\n\t\t$sql_select .= ($sql_select != '' ? ', ' : '') . \"uap$j.\" . $p['type'] . \"_id AS template$i\";\n\t\t$j++;\n\n\t\t$i++;\n\t}\n\n\treturn array('sql_select' => $sql_select, 'sql_join' => $sql_join);\n}\n\n/**\n * get_policy_where - Parse the policies in order to downselect matching graphs\n *   without the use of the SQL Having clause which is very inefficient\n *\n * @param  (int)    $graph_auth_method - The graph auth method: permissive, restrictive, device, graph_template\n * @param  (array)  $policies - The list of user and group policies.  Will be reversed to\n * @param  (string) $sql_where - The SQL where filter provided by the calling function.\n *\n * @return (string) - Updated sql_where value\n */\nfunction get_policy_where($graph_auth_method, $policies, $sql_where) {\n\tif ($graph_auth_method == 1) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t// Permissive means access to the graph, or access to either the host or template\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index > 0 ? ' OR (':'(');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= ')';\n\t} elseif ($graph_auth_method == 2) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t// Restrictive means access to the graph, or access to both the host and template\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index == 0 ? '((':' OR ((');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' AND ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= ' gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= ' gl.graph_template_id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ')';\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' AND ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ')';\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= ')';\n\t} elseif ($graph_auth_method == 3) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index == 0 ? '((' : ') OR ((');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= '))';\n\t} elseif ($graph_auth_method == 4) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index == 0 ? '((' : ') OR ((');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id =' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= '))';\n\t}\n\n\treturn $sql_where;\n}\n\n/**\n * get_permission_string - get the effective permission string for the graph in question.  The\n *   logic for this is somewhat complex, but understandable.  First, the $graph object will include\n *   three columns generally graphX, deviceX, and templateX for each of the user or groups in the collection.\n *   The way we assign a restrictive or permissive value is based upon the graph permission setting\n *   in Cacti, but also whether or not the default access for the object type is either 'Allow' or 'Deny'.\n *\n *   - If the 'default access' for the object type is 'Deny', then a numeric value in userX means\n *     the user has permission to an object.\n *   - If the default access for the object is 'Allow', then a numeric\n *     value in userX means that the object is blocked.\n *\n *   Again, each of the graphX, deviceX, and templateX will always come in three's.  They equate to:\n *\n *   - graphX    - The user does or does not have permission to the Graph at the Graph Level\n *   - deviceX   - The user does or does not have permission to the Graph at the Device Level\n *   - templateX - The user does or does not have permission to the Graph at the Graph Template Level\n *\n *   Then, the effective permission are calculated by the Graph Permission Model in Cacti.  They are\n *\n *   - Permissive - If the user has access to the Graph, the Device, or Graph Template, then the\n *     user will have access to the Graph.\n *\n *   - Restrictive - If the user has access to the Graph, or both the Device and Graph Template,\n *     then the user will have access to the Graph\n *\n *   - Device - If the user has access to the Graph, or the Device, then the user will have\n *     access to the Graph\n *\n *   - Graph Template - If the user has access to the Graph, or the Graph Template, then the user\n *     will have access to the Graph.\n *\n *   This function will apply this logic, and then respond to the user a 'Granted' or 'Restricted'\n *   column value, and a Tooltip, that shows how the permissions were evaluated.  In other words\n *   why was the user either permitted to or denied access to the Graph.\n */\nfunction get_permission_string(&$graph, &$policies) {\n\t$grantStr   = '';\n\t$rejectStr  = '';\n\t$reasonStr  = '';\n\t$drejectStr = '';\n\n\t// Methods:\n\t// 1 - Permissive\n\t// 2 - Restrictive\n\t// 3 - Device\n\t// 4 - Graph Template\n\t$method = read_config_option('graph_auth_method');\n\n\tif ($graph['disabled'] == 'on' && read_user_setting('hide_disabled', false, false, get_request_var('user_id'))) {\n\t\t$drejectStr .= __esc('Device:(Hide Disabled)');\n\t}\n\n\t// Policies:\n\t// 1 - Default Allow All - Numeric means blocked\n\t// 2 - Default Deny All  - Numeric means allowed\n\n\t$i = 1;\n\tforeach($policies as $p) {\n\t\t$allowed  = 0;\n\t\t$rejected = 0;\n\n\t\t// Perform the Graph Check first\n\t\t// If a user has access at the Graph Access, they always get Access\n\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t// Default is to allow\n\t\t\tif (empty($graph[\"graph$i\"])) {\n\t\t\t\t// Allow the access at the level\n\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t} else {\n\t\t\t\t$rejectStr .= ($rejectStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t$rejected++;\n\t\t\t}\n\t\t} else {\n\t\t\t// Default is to Deny\n\t\t\tif (!empty($graph[\"graph$i\"])) {\n\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t} else {\n\t\t\t\t$rejectStr .= ($rejectStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t$rejected++;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Now we check at the Device and Graph Template Level.  Here the permission get a bit more dicey, so we will\n\t\t * Use case logic to make it read more simply.\n\t\t */\n\t\tswitch($method) {\n\t\t\tcase 1: // Permissive\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\tif (empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\tif (empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($rejected == 3) {\n\t\t\t\t\t$rejectStr .= ($rejectStr != '' ? ', ':'') . __esc('Graph+Device+Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 2: // Restrictive\n\t\t\t\t$allowed  = 0;\n\t\t\t\t$rejected = 0;\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\tif (empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\tif (empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($allowed == 2) {\n\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device+Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t} else {\n\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Device+Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 3: // Device\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\tif (empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 4: // Graph Template\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\tif (empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$i++;\n\t}\n\n\t$permStr = '';\n\n\tif ($drejectStr != '') {\n\t\t$reasonStr .= ($reasonStr != '' ? ', ':'') . __esc('Restricted By: ') . $drejectStr;\n\t}\n\n\tif ($grantStr != '') {\n\t\t$reasonStr .= ($reasonStr != '' ? ', ':'') . __esc('Granted By: ') . trim($grantStr, ',');\n\n\t\tif ($rejectStr != '') {\n\t\t\t$reasonStr .= ', ' . __esc('Restricted By: ') . trim($rejectStr, ',');\n\t\t}\n\n\t\tif ($drejectStr == '') {\n\t\t\t$permStr = \"<span data-tooltip='\" . trim($reasonStr) . \"' class='accessGranted'>\" . __('Granted') . '</span>';\n\t\t} else {\n\t\t\t$permStr = \"<span data-tooltip='\" . trim($reasonStr) . \"' class='accessRestricted'>\" . __('Restricted') . '</span>';\n\t\t}\n\t} elseif ($rejectStr != '') {\n\t\t$reasonStr .= ($reasonStr != '' ? ', ':'') . __esc('Restricted By: ') . trim($rejectStr, ',');\n\n\t\t$permStr   = \"<span data-tooltip='\" . $reasonStr . \"' class='accessRestricted'>\" . __('Restricted') . '</span>';\n\t} else {\n\t\t$permStr = __('Unknown');\n\t}\n\n\treturn $permStr;\n}\n\n/**\n * get_allowed_trees - returns the list of Trees that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as to build out the tree for a user.\n *\n * @param  (bool)   Is the Tree in Edit mode or not\n * @param  (bool)   Return either the SQL used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph template is permitted, the id of that graph template\n *\n * @return (string|array)  An array of permitted Trees or the SQL to gather them\n */\nfunction get_allowed_trees($edit = false, $return_sql = false, $sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method != 0) {\n\t\tif ($user_id == 0) {\n\t\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t\t} else {\n\t\t\t\treturn array();\n\t\t\t}\n\t\t}\n\n\t\t/* get policies for all groups and user */\n\t\t$policies = db_fetch_assoc_prepared(\"SELECT uag.id, 'group' AS type, policy_trees FROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tWHERE uag.enabled = 'on'\n\t\t\tAND uagm.user_id = ?\",\n\t\t\tarray($user_id));\n\n\t\t$policies[] = db_fetch_row_prepared(\"SELECT id, 'user' as type, policy_trees FROM user_auth WHERE id = ?\", array($user_id));\n\n\t\t$i          = 0;\n\t\t$sql_join   = '';\n\t\t$sql_where1 = '';\n\n\t\tforeach($policies as $policy) {\n\t\t\tif ($policy['policy_trees'] == '1') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NULL\";\n\t\t\t} elseif ($policy['policy_trees'] == '2') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NOT NULL\";\n\t\t\t}\n\n\t\t\t$sql_join .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'group' ? 'group_':'') . \"perms AS uap$i\n\t\t\t\tON (gt.id=uap$i.item_id AND uap$i.type=2 AND uap$i.\" . $policy['type'] . '_id=' . $policy['id'] . ') ';\n\n\t\t\t$i++;\n\t\t}\n\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = 'WHERE ' . ($edit == false ? '(gt.enabled=\"on\") AND ':'') . '(' . $sql_where . ') AND (' . $sql_where1 . ')';\n\t\t} else {\n\t\t\t$sql_where = 'WHERE ' . ($edit == false ? '(gt.enabled=\"on\") AND ':'') . '(gt.enabled=\"on\") AND (' . $sql_where1 . ')';\n\t\t}\n\n\t\t$sql = \"SELECT id, name\n\t\t\tFROM graph_tree AS gt\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t$sql_order\n\t\t\t$sql_limit\";\n\n\t\tif ($return_sql) {\n\t\t\treturn $sql;\n\t\t} else {\n\t\t\t$trees = db_fetch_assoc($sql);\n\n\t\t\t$sql = \"SELECT COUNT(gt.id)\n\t\t\t\tFROM graph_tree AS gt\n\t\t\t\t$sql_join\n\t\t\t\t$sql_where\";\n\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'tree');\n\t\t}\n\t} else {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = \"WHERE enabled='on' AND $sql_where\";\n\t\t} else {\n\t\t\t$sql_where = \"WHERE enabled='on'\";\n\t\t}\n\n\t\tif ($return_sql) {\n\t\t\treturn \"SELECT id, name FROM graph_tree $sql_where $sql_order\";\n\t\t} else {\n\t\t\t$trees = db_fetch_assoc(\"SELECT id, name FROM graph_tree AS gt $sql_where $sql_order\");\n\n\t\t\t$sql = \"SELECT COUNT(*) FROM graph_tree AS gt $sql_where\";\n\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'tree');\n\t\t}\n\t}\n\n\treturn $trees;\n}\n\n/**\n * get_allowed_branches - returns the list of Tree branches that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as to build out the tree for a user.\n *\n * @param  (bool)   Is the Tree in Edit mode or not\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of branches\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array)  An array of permitted Tree branches\n */\nfunction get_allowed_branches($sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\t// suppress total rows\n\t$total_rows = -1;\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$simple_perms = get_simple_device_perms($user_id);\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\t$sql_hosts_where = '';\n\n\tif (!$simple_perms) {\n\t\t$hosts = get_allowed_devices('', 'description', '', $total_rows);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\t$hosts = array_rekey($hosts, 'id', 'description');\n\t\t}\n\n\t\t$tree_hosts = db_fetch_assoc(\"SELECT DISTINCT h.id, h.description\n\t\t\tFROM graph_tree_items AS gti\n\t\t\tINNER JOIN graph_tree AS gt\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tINNER JOIN host AS h\n\t\t\tON gti.host_id = h.id\n\t\t\tWHERE gti.host_id > 0\n\t\t\tAND $sql_where\", false);\n\n\t\tif (cacti_sizeof($tree_hosts)) {\n\t\t\t$tree_hosts = array_rekey($tree_hosts, 'id', 'description');\n\t\t}\n\n\t\t$hosts = array_intersect_key($hosts, $tree_hosts);\n\n\t\tif (cacti_sizeof($hosts) > 0) {\n\t\t\t$sql_hosts_where =  'AND h.id IN (' . implode(',', array_keys($hosts)) . ')';\n\t\t}\n\t}\n\n\tif ($auth_method != 0) {\n\t\t$i          = 0;\n\t\t$sql_join   = '';\n\t\t$sql_where1 = '';\n\n\t\tforeach($policies as $policy) {\n\t\t\tif ($policy['policy_trees'] == '1') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NULL\";\n\t\t\t} elseif ($policy['policy_trees'] == '2') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NOT NULL\";\n\t\t\t}\n\n\t\t\t$sql_join .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'group' ? 'group_':'') . \"perms AS uap$i\n\t\t\t\tON (gt.id=uap$i.item_id AND uap$i.type=2 AND uap$i.\" . $policy['type'] . '_id=' . $policy['id'] . ') ';\n\n\t\t\t$i++;\n\t\t}\n\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = 'WHERE gt.enabled=\"on\" AND (' . $sql_where . ')' . ($sql_where1 != '' ? ' AND (' . $sql_where1 . ')':'');\n\t\t} elseif ($sql_where1 != '') {\n\t\t\t$sql_where = 'WHERE gt.enabled=\"on\" AND (' . $sql_where1 . ')';\n\t\t}\n\n\t\t$sql = \"(SELECT gti.id, CONCAT('\". __('Branch:') . \" ', gti.title) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tAND gti.host_id = 0\n\t\t\tAND gti.local_graph_id=0\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t) UNION (\n\t\t\tSELECT gti.id, CONCAT('\" . __('Device:') . \" ', h.description) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tINNER JOIN host AS h\n\t\t\tON h.id=gti.host_id\n\t\t\t$sql_hosts_where\n\t\t\t$sql_join\n\t\t\t$sql_where\n \t\t\t)\n\t\t\t$sql_order\n\t\t\t$sql_limit\";\n\n\t\t$branches = db_fetch_assoc($sql);\n\n\t\t$sql = 'SELECT COUNT(*) FROM (' . $sql . ') AS rower';\n\n\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'branch');\n\t} else {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = \"WHERE gt.enabled='on' AND h.disabled='' AND ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t\t} else {\n\t\t\t$sql_where = \"WHERE gt.enabled='on' AND h.disabled='on' AND ((h.id > 0 AND h.deleted = '') OR h.id IS NULL)\";\n\t\t}\n\n\t\t$sql = \"(\n\t\t\tSELECT gti.id, CONCAT('\". __('Branch:') . \" ', gti.title) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tAND gti.host_id=0\n\t\t\tAND gti.local_graph_id=0\n\t\t\t$sql_where\n\t\t\t) UNION (\n\t\t\tSELECT gti.id, CONCAT('\" . __('Device:') . \" ', h.description) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tINNER JOIN host AS h\n\t\t\tON h.id=gti.host_id\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t)\n\t\t\t$sql_order\n\t\t\t$sql_limit\";\n\n\t\t$branches = db_fetch_assoc($sql);\n\n\t\t$sql = 'SELECT COUNT(*) FROM (' . $sql . ') AS rower';\n\n\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'branch');\n\t}\n\n\treturn $branches;\n}\n\n/**\n * get_allowed_devices - returns the list of devices that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as other tasks.\n *\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array)  An array of permitted devices\n */\nfunction get_allowed_devices($sql_where = '', $sql_order = 'description', $sql_limit = '', &$total_rows = 0, $user_id = 0, $device_id = 0) {\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$simple_perms = get_simple_device_perms($user_id);\n\n\t$init_rows = $total_rows;\n\n\t$host_list = array();\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) \";\n\t}\n\n\tif ($device_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . \" h.id = $device_id\";\n\t}\n\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\tif ($total_rows != -2) {\n\t\t$host_list = db_fetch_assoc(\"SELECT h1.*\n\t\t\tFROM host AS h1\n\t\t\tINNER JOIN (\n\t\t\t\tSELECT DISTINCT id\n\t\t\t\tFROM (\n\t\t\t\t\tSELECT h.id\n\t\t\t\t\tFROM host AS h\n\t\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\t\tON h.id=gl.host_id\n\t\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\t\tON gt.id=gl.graph_template_id\n\t\t\t\t\tLEFT JOIN host_template AS ht\n\t\t\t\t\tON h.host_template_id=ht.id\n\t\t\t\t\t$sql_where\n\t\t\t\t) AS rs1\n\t\t\t) AS rs2\n\t\t\tON rs2.id=h1.id\n\t\t\t$sql_order\n\t\t\t$sql_limit\");\n\t}\n\n\tif ($total_rows >= 0 || $total_rows == -2) {\n\t\t$sql = \"SELECT COUNT(DISTINCT id)\n\t\t\tFROM (\n\t\t\t\tSELECT h.id\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\tON h.id=gl.host_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id=gl.graph_template_id\n\t\t\t\tLEFT JOIN host_template AS ht\n\t\t\t\tON h.host_template_id=ht.id\n\t\t\t\t$sql_where\n\t\t\t) AS rower\";\n\n\t\tif ($device_id == 0) {\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'device');\n\t\t} else {\n\t\t\t$total_rows = db_fetch_cell($sql);\n\t\t}\n\t}\n\n\treturn $host_list;\n}\n\n/**\n * get_allowed_sites - returns the list of sites that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as other tasks.\n *\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If checking a single site, specify the site_id\n *\n * @return (array)  An array of permitted sites\n */\nfunction get_allowed_sites($sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0, $site_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE $sql_where\";\n\t}\n\n\tif ($site_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . \" s.id=$site_id\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif (isset($_SESSION['sess_user_id']) && $user_id == 0) {\n\t\t$user_id = $_SESSION['sess_user_id'];\n\t} elseif ($auth_method > 0) {\n\t\treturn array();\n\t}\n\n\t$sites = db_fetch_assoc(\"SELECT s.id, s.name\n\t\tFROM sites AS s\n\t\tINNER JOIN host AS h\n\t\tON s.id=h.site_id\n\t\t$sql_where\n\t\tGROUP BY s.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(DISTINCT s.id)\n\t\tFROM sites AS s\n\t\tINNER JOIN host AS h\n\t\tON s.id=h.site_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'site_device');\n\n\treturn $sites;\n}\n\n/**\n * get_allowed_site_devices - returns the list of devices in a site that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as other tasks.\n *\n * @param  (int)    The site id for the site\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array)  An array of permitted site devices\n */\nfunction get_allowed_site_devices($site_id, $sql_where = '', $sql_order = 'description', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$simple_perms = get_simple_device_perms($user_id);\n\n\t$policies = get_policies($user_id);\n\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) \";\n\t}\n\n\tif ($site_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . \" h.site_id=$site_id\";\n\t}\n\n\tif ($auth_method != 0 && !$simple_perms) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$host_list = db_fetch_assoc(\"SELECT h1.*, ht.name AS host_template_name\n\t\tFROM host AS h1\n\t\tLEFT JOIN host_template AS ht\n\t\tON h1.host_template_id=ht.id\n\t\tINNER JOIN (\n\t\t\tSELECT DISTINCT id\n\t\t\tFROM (\n\t\t\t\tSELECT h.id\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\tON h.id=gl.host_id\n\t\t\t\tLEFT JOIN graph_templates_graph AS gtg\n\t\t\t\tON gl.id=gtg.local_graph_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id=gl.graph_template_id\n\t\t\t\tLEFT JOIN host_template AS ht\n\t\t\t\tON h.host_template_id=ht.id\n\t\t\t\t$sql_where\n\t\t\t) AS rs1\n\t\t) AS rs2\n\t\tON rs2.id=h1.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(DISTINCT id)\n\t\tFROM (\n\t\t\tSELECT h.id\n\t\t\tFROM host AS h\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON h.id=gl.host_id\n\t\t\tLEFT JOIN graph_templates_graph AS gtg\n\t\t\tON gl.id=gtg.local_graph_id\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id=gl.graph_template_id\n\t\t\tLEFT JOIN host_template AS ht\n\t\t\tON h.host_template_id=ht.id\n\t\t\t$sql_where\n\t\t) AS rower\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'site_device');\n\n\treturn $host_list;\n}\n\n/**\n * get_allowed_graph_templates_normalized - returns the list of graph templates aligned with the\n *   To be able to differentiate between Graph Templates based on a non-data query data input mode\n *   and those related to data queries.\n *\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If checking a single graph template, specify the graph_template_id\n *\n * @return (array)  An array of permitted and normalized graph templates\n */\nfunction get_allowed_graph_templates_normalized($sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_template_id = 0) {\n\t$templates = array_rekey(get_allowed_graph_templates($sql_where, $sql_order, $sql_limit, $total_rows, $user_id, $graph_template_id), 'id', 'name');\n\n\tif (!cacti_sizeof($templates)) {\n\t\treturn array();\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = ' WHERE (' . $sql_where . ') AND gl.graph_template_id IN(' . implode(', ', array_keys($templates)) . ') AND (gl.snmp_query_graph_id=0 OR sqg.name IS NOT NULL) AND (gt.name IS NOT NULL)';\n\t} else {\n\t\t$sql_where = ' WHERE gl.graph_template_id IN(' . implode(', ', array_keys($templates)) . ') AND (gl.snmp_query_graph_id=0 OR sqg.name IS NOT NULL) AND (gt.name IS NOT NULL)';\n\t}\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\t$templates = db_fetch_assoc(\"SELECT\n\t\tIF(snmp_query_graph_id=0, CONCAT('cg_',gl.graph_template_id), CONCAT('dq_', gl.snmp_query_graph_id)) AS id,\n\t\tIF(snmp_query_graph_id=0, gt.name, CONCAT(gt.name, ' [', sqg.name, ']')) AS name\n\t\tFROM graph_local AS gl\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\tON gl.snmp_query_graph_id=sqg.id\n\t\tAND gl.graph_template_id=sqg.graph_template_id\n\t\t$sql_where\n\t\tGROUP BY id, name\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\treturn $templates;\n}\n\n/**\n * get_total_row_data - returns the total rows based upon a set of criteria\n *\n * This function will hash the $sql, and then search for the total\n * row counter based upon that criteria and if it finds a unexpired\n * match for that data, it will return the row count in the table\n * otherwise, it will execute the SQL and return the data.\n *\n * @param  (int)    The user id making the request\n * @param  (string) The sql to be executed, either prepared or otherwise\n * @param  (array)  In the case of a prepared statement the\n * @param  (string) The user defined class of data\n * @param  (int)    The timeout for the Class if not controlled by Cacti\n *\n * @return (array) an array containing a list of hosts\n */\nfunction get_total_row_data($user_id, $sql, $sql_params = array(), $class = '', $timeout = 86400) {\n\t$execute  = true;\n\t$now_time = time();\n\n\tif (cacti_sizeof($sql_params)) {\n\t\t$nsql = str_replace('?', \"'%s'\", $sql);\n\t\t$nsql = vsprintf($nsql, $sql_params);\n\n\t\t$hash = md5($nsql);\n\t} else {\n\t\t$hash = md5($sql);\n\t}\n\n\t$row_data = db_fetch_row_prepared('SELECT total_rows, UNIX_TIMESTAMP(time) AS time\n\t\tFROM user_auth_row_cache\n\t\tWHERE user_id = ?\n\t\tAND class = ?\n\t\tAND hash = ?',\n\t\tarray($user_id, $class, $hash));\n\n\t$cached = false;\n\n\tif (cacti_sizeof($row_data)) {\n\t\t$cached    = true;\n\t\t$last_time = read_config_option('time_last_change_' . $class);\n\n\t\tif (!empty($last_time)) {\n\t\t\tif ($row_data['time'] >= $last_time) {\n\t\t\t\treturn $row_data['total_rows'];\n\t\t\t}\n\t\t} elseif ($now_time - $row_data['time'] < $timeout) {\n\t\t\treturn $row_data['total_rows'];\n\t\t}\n\t}\n\n\tif (cacti_sizeof($sql_params)) {\n\t\t$rows = db_fetch_cell($sql, $sql_params);\n\t} else {\n\t\t$rows = db_fetch_cell($sql);\n\t}\n\n\tif ($user_id > 0) {\n\t\tdb_execute_prepared('REPLACE INTO user_auth_row_cache\n\t\t\t(user_id, class, hash, total_rows, time)\n\t\t\tVALUES (?, ?, ?, ?, FROM_UNIXTIME(?))',\n\t\t\tarray($user_id, $class, $hash, $rows, $now_time));\n\t}\n\n\treturn $rows;\n}\n\n/**\n * get_host_array - returns a list of hosts taking permissions into account if necessary\n *\n * @return (array) an array containing a list of hosts\n */\nfunction get_host_array() {\n\t$total_rows = -1;\n\n\t$hosts = get_allowed_devices('', 'description', '', $total_rows);\n\n\tforeach($hosts as $host) {\n\t\t$return_devices[] = strip_domain($host['description']) . ' (' . strip_domain($host['hostname']) . ')';\n\t}\n\n\treturn $return_devices;\n}\n\n/**\n * get_allowed_ajax_hosts - returns a list of hosts in a way that can be easily read through\n *   a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n * @param  (bool)   Include the 'Any' item as the first in the list\n @ @param  (bool)   Include the 'None' item as the first or second in the list\n * @param  (string) SQL Where expression to use to gather the hosts in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching devices upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_hosts($include_any = true, $include_none = true, $sql_where = '') {\n\t$return = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') .\n\t\t\t'(hostname LIKE ' . db_qstr(\"%$term%\") .\n\t\t\t' OR description LIKE ' . db_qstr(\"%$term%\") .\n\t\t\t' OR notes LIKE ' . db_qstr(\"%$term%\") . ')';\n\t}\n\n\tif (get_request_var('term') == '') {\n\t\tif ($include_any) {\n\t\t\t$return[] = array('label' => __('Any'), 'value' => 'Any', 'id' => '-1');\n\t\t}\n\t\tif ($include_none) {\n\t\t\t$return[] = array('label' => __('None'), 'value' => 'None', 'id' => '0');\n\t\t}\n\t}\n\n\t$total_rows = -1;\n\n\t$hosts = get_allowed_devices($sql_where, 'description', read_config_option('autocomplete_rows'), $total_rows);\n\n\tif (cacti_sizeof($hosts)) {\n\t\tforeach($hosts as $host) {\n\t\t\t$return[] = array('label' => html_escape(strip_domain($host['description'])), 'value' => html_escape($host['description']), 'id' => $host['id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_ajax_graph_templates - returns a list of graph_template in a way that can be easily\n *   read through a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n * @param  (bool)   Include the 'Any' item as the first in the list\n @ @param  (bool)   Include the 'None' item as the first or second in the list\n * @param  (string) SQL Where expression to use to gather the graph templates in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching graph templates upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_graph_templates($include_any = true, $include_none = true, $sql_where = '') {\n\t$return = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'name LIKE ' . db_qstr(\"%$term%\");\n\t}\n\n\tif (get_request_var('term') == '') {\n\t\tif ($include_any) {\n\t\t\t$return[] = array('label' => __('Any'), 'value' => 'Any', 'id' => '-1');\n\t\t}\n\t\tif ($include_none) {\n\t\t\t$return[] = array('label' => __('None'), 'value' => 'None', 'id' => '0');\n\t\t}\n\t}\n\n\t$total_rows = -1;\n\n\t$templates = get_allowed_graph_templates($sql_where, 'gt.name', read_config_option('autocomplete_rows'), $total_rows);\n\tif (cacti_sizeof($templates)) {\n\t\tforeach($templates as $template) {\n\t\t\t$return[] = array('label' => html_escape($template['name']), 'value' => html_escape($template['name']), 'id' => $template['id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_ajax_graph_items - returns a list of graph items in a way that can be easily\n *   read through a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n @ @param  (bool)   Include the 'None' item as the first item in the list\n * @param  (string) SQL Where expression to use to gather the hosts in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching graph items upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_graph_items($include_none = true, $sql_where = '') {\n\t$return    = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') .\n\t\t\t'name_cache LIKE ' . db_qstr(\"%$term%\") .\n\t\t\t' OR data_source_name LIKE ' . db_qstr(\"%$term%\");\n\t}\n\n\tif (get_request_var('term') == '') {\n\t\tif ($include_none) {\n\t\t\t$return[] = array('label' => __('None'), 'value' => 'None', 'id' => '0');\n\t\t}\n\t}\n\n\t$graph_items = get_allowed_graph_items($sql_where, 'name_cache', read_config_option('autocomplete_rows'));\n\tif (cacti_sizeof($graph_items)) {\n\t\tforeach($graph_items as $gi) {\n\t\t\t$return[] = array('label' => html_escape($gi['name']), 'value' => html_escape($gi['name']), 'id' => $gi['id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_ajax_graph - returns a list of allowed graphs in a way that can be easily\n *   read through a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n * @param  (string) SQL Where expression to use to gather the graphs in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching graphs upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_graphs($sql_where = '') {\n\t$return = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'title_cache LIKE ' . db_qstr(\"%$term%\");\n\t}\n\n\t$total_rows = -1;\n\n\t$graphs = get_allowed_graphs($sql_where, 'gtg.title_cache', read_config_option('autocomplete_rows'), $total_rows);\n\tif (cacti_sizeof($graphs)) {\n\t\tforeach($graphs as $graph) {\n\t\t\t$return[] = array('label' => html_escape($graph['title_cache']), 'value' => html_escape($graph['title_cache']), 'id' => $graph['local_graph_id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_graph_items - returns a array of allowed graph items in a way that can be easily\n *   use in a table or list.\n *\n * @param  (string) The SQL Where expression to use to gather the graph items\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) An array of permitted graph items\n */\nfunction get_allowed_graph_items($sql_where, $sql_order = 'name', $sql_limit = 20, $user_id = 0) {\n\t$return = array();\n\n\tif ($user_id == 0 && isset($_SESSION['sess_user_id'])) {\n\t\t$user_id = $_SESSION['sess_user_id'];\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = 'WHERE ' . $sql_where;\n\t}\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = 'LIMIT ' . $sql_limit;\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\t$items = db_fetch_assoc(\"SELECT\n\t\tCONCAT_WS('', dtd.name_cache,' (', dtr.data_source_name, ')') as name, dtr.id, dl.host_id\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id=dl.id\n\t\tINNER JOIN data_template_rrd AS dtr\n\t\tON dtr.local_data_id=dl.id\n\t\tLEFT JOIN host AS h\n\t\tON dl.host_id=h.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\tif (cacti_sizeof($items)) {\n\t\tforeach($items as $i) {\n\t\t\tif (is_device_allowed($i['host_id'], $user_id)) {\n\t\t\t\t$return[] = array('id' => $i['id'], 'name' => $i['name']);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n * auth_get_username - returns the login username for the user attempting to login\n *\n * @return (string) the username attempting to login\n */\nfunction auth_get_username() {\n\t$auth_method = read_config_option('auth_method');\n\n\tif ($auth_method == 2) {\n\t\t$username = get_basic_auth_username();\n\n\t\t/* Get the Web Basic Auth username and set action so we login right away */\n\t\tset_request_var('action', 'login');\n\n\t} elseif (get_nfilter_request_var('action') == 'login') {\n\t\t$username = get_nfilter_request_var('login_username');\n\t} else {\n\t\t$username = '';\n\t}\n\n\t$username = sanitize_search_string($username);\n\n\treturn $username;\n}\n\n/**\n * auth_checkclear_lockout - checks the lockout status of a user and unlocks if necessary\n *\n * @param  (string) $username The username of the user to check\n * @param  (int)    $realm The realm of the user to check\n *\n * @return (void)\n */\nfunction auth_checkclear_lockout($username, $realm) {\n\t// Unlock the user account if timing permits\n\t$secPassLockFailed = read_config_option('secpass_lockfailed');\n\tif ($secPassLockFailed > 0) {\n\t\t$max = intval($secPassLockFailed);\n\t\tif ($max > 0) {\n\t\t\t$user = db_fetch_row_prepared(\"SELECT id, username, lastfail, failed_attempts, `locked`, password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = ?\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\tarray($username, $realm));\n\n\t\t\tif (cacti_sizeof($user)) {\n\t\t\t\t$unlock = intval(read_config_option('secpass_unlocktime'));\n\t\t\t\tif ($unlock > 1440) {\n\t\t\t\t\t$unlock = 1440;\n\t\t\t\t}\n\n\t\t\t\t$secs_unlock = $unlock * 60;\n\t\t\t\t$secs_fail = time() - $user['lastfail'];\n\n\t\t\t\tcacti_log('DEBUG: User \\'' . $username . '\\' secs_fail = ' . $secs_fail . ', secs_unlock = ' . $secs_unlock, false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t\tif ($unlock > 0 && ($secs_fail > $secs_unlock)) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\t\tSET lastfail = 0, failed_attempts = 0, `locked` = ''\n\t\t\t\t\t\tWHERE username = ?\n\t\t\t\t\t\tAND realm = ?\n\t\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\t\tarray($username, $realm));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * auth_process_lockout_check - checks to see if the user is locked out of their account\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that a lockout is present and not to proceed with login.\n *\n * @param  (string) $username - The name of the user account\n * @param  (int)    $realm - The logging realm for the user\n *\n * @return (bool)   True if locked out, otherwise false\n */\nfunction auth_process_lockout_check($username, $realm) {\n\tglobal $error, $error_msg;\n\n\t// Mark failed login attempts\n\t$secPassLockFailed = read_config_option('secpass_lockfailed');\n\tif ($secPassLockFailed > 0) {\n\t\t$max = intval($secPassLockFailed);\n\t\tif ($max > 0) {\n\t\t\t$user = db_fetch_row_prepared(\"SELECT id, username, lastfail, failed_attempts, `locked`, password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = ?\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\tarray($username, $realm));\n\n\t\t\tif (cacti_sizeof($user)) {\n\t\t\t\tif ($user['locked'] == 'on') {\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Your account has been locked.  Please contact your Administrator.');\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * auth_process_lockout - called when a user login attempt fails to increment or lockout the user\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that a lockout is present and not to proceed with login.\n *\n * @param  (string) $username - The name of the user account\n * @param  (int)    $realm - The logging realm for the user\n *\n * @return (void)\n */\nfunction auth_process_lockout($username, $realm) {\n\tglobal $error, $error_msg;\n\n\t// Mark failed login attempts\n\t$secPassLockFailed = read_config_option('secpass_lockfailed');\n\tif ($secPassLockFailed > 0) {\n\t\t$max = intval($secPassLockFailed);\n\t\tif ($max > 0) {\n\t\t\t$user = db_fetch_row_prepared(\"SELECT id, username, enabled, lastfail, failed_attempts, `locked`, password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = ?\",\n\t\t\t\tarray($username, $realm));\n\n\t\t\tif (cacti_sizeof($user)) {\n\t\t\t\tif ($user['enabled'] == '') {\n\t\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr('') . \"'.  User account Disabled.\", false, 'AUTH');\n\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Access Denied!  Login Disabled.');\n\t\t\t\t}\n\n\t\t\t\t$failed = intval($user['failed_attempts']) + 1;\n\n\t\t\t\tcacti_log('LOGIN FAILED: User \\'' . $username . '\\' failed authentication, incrementing lockout (' . $failed . ' of ' . $max . ')', false, 'AUTH', POLLER_VERBOSITY_LOW);\n\n\t\t\t\tif ($failed >= $max) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\t\tSET `locked` = 'on'\n\t\t\t\t\t\tWHERE username = ?\n\t\t\t\t\t\tAND realm = ?\n\t\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\t\tarray($username, $realm));\n\n\t\t\t\t\t$user['locked'] = 'on';\n\t\t\t\t}\n\n\t\t\t\t$user['lastfail'] = time();\n\n\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\tSET lastfail = ?, failed_attempts = ?\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = ?\n\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray($user['lastfail'], $failed, $username, $realm));\n\n\t\t\t\t// Log the invalid password attempt\n\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t\t\t(username, user_id, result, ip, time)\n\t\t\t\t\tVALUES (?, ?, 0, ?, NOW())',\n\t\t\t\t\tarray($username, isset($user['id']) ? $user['id']:0, get_client_addr('')));\n\n\t\t\t\tif ($user['locked'] == 'on') {\n\t\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr('') . \"'.  Account is locked out.\", false, 'AUTH');\n\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Your account has been locked.  Please contact your Administrator.');\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr('') . \"'.\", false, 'AUTH');\n\n\t\t\t\t\t/* error */\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Access Denied!  Login Failed.');\n\t\t\t\t}\n\t\t\t} elseif ($user['locked'] == 'on') {\n\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr('') . \"'.\", false, 'AUTH');\n\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied!  Login Failed.');\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * basic_auth_login_process - login a basic auth account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that a lockout is present and not to proceed with login.  This function will also\n *   exit and return html to the display to notify the user of critical errors.\n *\n * @param  (string) $username The user to process\n *\n * @return (array|void) $user The valid user, an empty array if the user must be created\n *   or void in the case of an exit condition\n */\nfunction basic_auth_login_process($username) {\n\tglobal $error, $error_msg;\n\n\tif (empty($username)) {\n\t\tcacti_log('ERROR: No username passed with Web Basic Authentication enabled.', false, 'AUTH');\n\t\tauth_display_custom_error_message(__('Web Basic Authentication configured, but no username was passed from the web server. Please make sure you have authentication enabled on the web server.'));\n\n\t\texit;\n\t}\n\n\t/* Locate user in database */\n\t$user = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE username = ?\n\t\tAND realm = 2',\n\t\tarray($username));\n\n\tif (!$user && get_template_account($username) == 0 && get_guest_account() === 0) {\n\t\t$error     = true;\n\t\t$error_msg = __esc('%s authenticated by Web Server, but both Template and Guest Users are not defined in Cacti.', $username);\n\n\t\tcacti_log(\"LOGIN FAILED: User '\" . $username . \"' authenticated by Web Server, but both Template and Guest Users are not defined in Cacti.  Exiting.\", false, 'AUTH');\n\n\t\tauth_display_custom_error_message($error_msg);\n\t\texit;\n\t}\n\n\treturn $user;\n}\n\n/**\n * local_auth_login_process - login a local account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username - The user to process\n *\n * @return (array)  $user - The valid user information, or empty array if user must be created\n */\nfunction local_auth_login_process($username) {\n\t$user = array();\n\n\tif (!api_plugin_hook_function('login_process', false)) {\n\t\t$user = secpass_login_process($username);\n\n\t\t/**\n\t\t * If the password needs to be rehashed for security purposes,\n\t\t * do that now.\n\t\t */\n\t\t$stored_pass = db_fetch_cell_prepared('SELECT password\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0',\n\t\t\tarray($username));\n\n\t\tif ($stored_pass != '') {\n\t\t\t$password = get_nfilter_request_var('login_password');\n\n\t\t\t$valid = compat_password_verify($password, $stored_pass);\n\n\t\t\tcacti_log(\"DEBUG: User '\" . $username . \"' password for rehash is \" . ($valid ? '':'in') . 'valid', false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tif ($valid) {\n\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = 0',\n\t\t\t\t\tarray($username));\n\n\t\t\t\tif (compat_password_needs_rehash($stored_pass, PASSWORD_DEFAULT)) {\n\t\t\t\t\t$password = compat_password_hash($password, PASSWORD_DEFAULT);\n\t\t\t\t\tdb_check_password_length();\n\t\t\t\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\t\t\t\tSET password = ?\n\t\t\t\t\t\tWHERE username = ?',\n\t\t\t\t\t\tarray($password, $username));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $user;\n}\n\n/**\n * ldap_login_process - login to an LDAP account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username - The user to process\n *\n * @return (array)  $user - The valid user information, or empty array if user must be created\n */\nfunction ldap_login_process($username) {\n\tglobal $error, $error_msg;\n\n\t$password = get_nfilter_request_var('login_password');\n\n\tif ($username == '') {\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log('LOGIN FAILED: Empty LDAP Username provided', false, 'AUTH');\n\n\t\treturn array();\n\t}\n\n\tauth_checkclear_lockout($username, 3);\n\n\tif (auth_process_lockout_check($username, 3)) {\n\t\treturn array();\n\t}\n\n\t$user  = array();\n\t$realm = 3;\n\n\tif ($password != '') {\n\t\t/* get user DN */\n\t\t$ldap_dn_search_response = cacti_ldap_search_dn($username);\n\n\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t} else {\n\t\t\t/* error searching */\n\t\t\t$error     = true;\n\t\t\t$error_msg =  __('Access Denied!  LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\n\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t/* auth user with LDAP */\n\t\t\t$ldap_auth_response = cacti_ldap_auth($username, $password, $ldap_dn);\n\n\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t/* Locate user in database */\n\t\t\t\tcacti_log(\"LOGIN: LDAP User '\" . $username . \"' Authenticated\", false, 'AUTH');\n\n\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = ?',\n\t\t\t\t\tarray($username, $realm));\n\t\t\t} else {\n\t\t\t\t/* error */\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied!  LDAP Error: %s', $ldap_auth_response['error_text']);\n\n\t\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\n\t\t\t\tif ($ldap_auth_response['error_num'] == 1) {\n\t\t\t\t\tauth_process_lockout($username, $realm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  No password provided by user.');\n\n\t\tcacti_log(sprintf('LOGIN FAILED: LDAP No password provided for user %s', $username), false, 'AUTH');\n\n\t\tauth_process_lockout($username, $realm);\n\t}\n\n\treturn $user;\n}\n\n/**\n * domains_login_process - login to an LDAP domain account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username - The user to process\n *\n * @return (array)  $user - The valid user information, or empty array if user must be created\n */\nfunction domains_login_process($username) {\n\tglobal $realm, $error, $error_msg;\n\n\t$realm    = get_nfilter_request_var('realm');\n\t$password = get_nfilter_request_var('login_password');\n\n\tif ($username == '') {\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log('LOGIN FAILED: Empty Domains Username provided', false, 'AUTH');\n\n\t\treturn array();\n\t}\n\n\tauth_checkclear_lockout($username, $realm);\n\n\tif (auth_process_lockout_check($username, $realm)) {\n\t\treturn array();\n\t}\n\n\t$user = array();\n\n\tif ($realm > 3 && $password != '') {\n\t\t/* get user DN */\n\t\t$ldap_dn_search_response = domains_ldap_search_dn($username, $realm);\n\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t} else {\n\t\t\t/* error searching */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\n\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t/* auth user with LDAP */\n\t\t\t$ldap_auth_response = domains_ldap_auth($username, $password, $ldap_dn, $realm);\n\n\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t/* User ok */\n\t\t\t\t$domain_name = db_fetch_cell_prepared('SELECT domain_name\n\t\t\t\t\tFROM user_domains\n\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t/* Locate user in database */\n\t\t\t\tcacti_log(\"LOGIN: LDAP User '$username' Authenticated from Domain '$domain_name'\", false, 'AUTH');\n\n\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = ?',\n\t\t\t\t\tarray($username, $realm));\n\n\t\t\t\t/* Create user from template if requested */\n\t\t\t\t$template_user = db_fetch_cell_prepared('SELECT user_id\n\t\t\t\t\tFROM user_domains\n\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t$template_username = db_fetch_cell_prepared('SELECT username\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($template_user));\n\n\t\t\t\tif (!cacti_sizeof($user) && $template_user > 0 && $username != '') {\n\t\t\t\t\tcacti_log(\"NOTE: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\n\t\t\t\t\t/* check that template user exists */\n\t\t\t\t\t$user_template = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($template_user));\n\n\t\t\t\t\tif (cacti_sizeof($user_template)) {\n\t\t\t\t\t\t/* template user found */\n\t\t\t\t\t\t$cn_full_name = db_fetch_cell_prepared('SELECT cn_full_name\n\t\t\t\t\t\t\tFROM user_domains_ldap\n\t\t\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t\t\t$cn_email = db_fetch_cell_prepared('SELECT cn_email\n\t\t\t\t\t\t\tFROM user_domains_ldap\n\t\t\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t\t\tif ($cn_full_name != '' || $cn_email != '') {\n\t\t\t\t\t\t\t$ldap_cn_search_response = cacti_ldap_search_cn($username, array($cn_full_name, $cn_email));\n\n\t\t\t\t\t\t\tif (isset($ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t\t\t$data_override = array();\n\n\t\t\t\t\t\t\t\tif (array_key_exists($cn_full_name, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t\t\t\t$data_override['full_name'] = $ldap_cn_search_response['cn'][$cn_full_name];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$data_override['full_name'] = '';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (array_key_exists($cn_email, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t\t\t\t$data_override['email_address'] = $ldap_cn_search_response['cn'][$cn_email];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$data_override['email_address'] = '';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tuser_copy($user_template['username'], $username, 0, $realm, false, $data_override);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcacti_log('LOGIN: fields not found ' . $ldap_cn_search_response[0] . 'code: ' . $ldap_cn_search_response['error_num'], false, 'AUTH');\n\t\t\t\t\t\t\t\tuser_copy($user_template['username'], $username, 0, $realm);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuser_copy($user_template['username'], $username, 0, $realm);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* requery newly created user */\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\t\tWHERE username = ?\n\t\t\t\t\t\t\tAND realm = ?',\n\t\t\t\t\t\t\tarray($username, $realm));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* error */\n\t\t\t\t\t\t$error     = true;\n\t\t\t\t\t\t$error_msg = __('Access Denied!  Template user id %s does not exist.  Please contact your Administrator.', $template_user);\n\n\t\t\t\t\t\tcacti_log(\"LOGIN FAILED: Template user id '\" . $template_user . \"' does not exist.\", false, 'AUTH');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* error */\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied!  LDAP Error: %s', $ldap_auth_response['error_text']);\n\n\t\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\n\t\t\t\tif ($ldap_auth_response['error_text'] == 1) {\n\t\t\t\t\tauth_lockout_process($username, $realm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif ($password == '') {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  No password provided by user.');\n\n\t\tcacti_log(sprintf('LOGIN FAILED: LDAP No password provided for user %s', $username), false, 'AUTH');\n\n\t\tauth_process_lockout($username, $realm);\n\t}\n\n\treturn $user;\n}\n\n/**\n * domains_ldap_auth - authentications a LDAP domain login\n *\n * @param  (string) $username  - The user to process\n * @param  (string) $password  - The users password\n * @param  (string) $dn        - The domain name\n * @param  (int)    $realm     - The LDAP Realm number\n *\n * @return (array)  $response - The ldap response of false on a general error\n */\nfunction domains_ldap_auth($username, $password = '', $dn = '', $realm = 0) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\tif (!empty($password)) $ldap->password = $password;\n\n\t$ldap->dn = $dn;\n\n\t$ld = db_fetch_row_prepared('SELECT *\n\t\tFROM user_domains_ldap\n\t\tWHERE domain_id = ?',\n\t\tarray($realm-1000));\n\n\tif (cacti_sizeof($ld)) {\n\t\tif (empty($dn) && !empty($ld['dn'])) {\n\t\t\t$ldap->dn = $ld['dn'];\n\t\t}\n\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\n\t\tif (!empty($ld['mode']))              $ldap->mode              = $ld['mode'];\n\t\tif (!empty($ld['search_base']))       $ldap->search_base       = $ld['search_base'];\n\t\tif (!empty($ld['search_filter']))     $ldap->search_filter     = $ld['search_filter'];\n\t\tif (!empty($ld['specific_dn']))       $ldap->specific_dn       = $ld['specific_dn'];\n\t\tif (!empty($ld['specific_password'])) $ldap->specific_password = $ld['specific_password'];\n\n\t\tif ($ld['group_require'] == 'on') {\n\t\t\t$ldap->group_require = true;\n\t\t} else {\n\t\t\t$ldap->group_require = false;\n\t\t}\n\n\t\tif (!empty($ld['group_dn']))          $ldap->group_dn          = $ld['group_dn'];\n\t\tif (!empty($ld['group_attrib']))      $ldap->group_attrib      = $ld['group_attrib'];\n\t\tif (!empty($ld['group_member_type'])) $ldap->group_member_type = $ld['group_member_type'];\n\n\t\t/* If the server list is a space delimited set of servers\n\t\t * process each server until you get a bind, or fail\n\t\t */\n\t\t$ldap_servers = preg_split('/\\s+/', $ldap->host);\n\n\t\tforeach($ldap_servers as $ldap_server) {\n\t\t\t$ldap->host = $ldap_server;\n\n\t\t\t$response = $ldap->Authenticate();\n\n\t\t\tif ($response['error_num'] == 0) {\n\t\t\t\treturn $response;\n\t\t\t}\n\t\t}\n\n\t\treturn $response;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * domains_ldap_search_dn - searches the user dn for existence\n *\n * @param  (string) $username  - The user to process\n * @param  (int)    $realm     - The LDAP Realm number\n *\n * @return (array)  $response - The ldap response, or false on general error\n */\nfunction domains_ldap_search_dn($username, $realm) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\n\t$ld = db_fetch_row_prepared('SELECT *\n\t\tFROM user_domains_ldap\n\t\tWHERE domain_id = ?',\n\t\tarray($realm-1000));\n\n\tif (cacti_sizeof($ld)) {\n\t\tif (!empty($ld['dn']))                $ldap->dn                = $ld['dn'];\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\n\t\tif (!empty($ld['mode']))              $ldap->mode              = $ld['mode'];\n\t\tif (!empty($ld['search_base']))       $ldap->search_base       = $ld['search_base'];\n\t\tif (!empty($ld['search_filter']))     $ldap->search_filter     = $ld['search_filter'];\n\t\tif (!empty($ld['specific_dn']))       $ldap->specific_dn       = $ld['specific_dn'];\n\t\tif (!empty($ld['specific_password'])) $ldap->specific_password = $ld['specific_password'];\n\n\t\tif ($ld['group_require'] == 'on') {\n\t\t\t$ldap->group_require = true;\n\t\t} else {\n\t\t\t$ldap->group_require = false;\n\t\t}\n\n\t\tif (!empty($ld['group_dn']))          $ldap->group_dn          = $ld['group_dn'];\n\t\tif (!empty($ld['group_attrib']))      $ldap->group_attrib      = $ld['group_attrib'];\n\t\tif (!empty($ld['group_member_type'])) $ldap->group_member_type = $ld['group_member_type'];\n\n\t\t/* If the server list is a space delimited set of servers\n\t\t * process each server until you get a bind, or fail\n\t\t */\n\t\t$ldap_servers = preg_split('/\\s+/', $ldap->host);\n\n\t\tforeach($ldap_servers as $ldap_server) {\n\t\t\t$ldap->host = $ldap_server;\n\n\t\t\t$response = $ldap->Search();\n\n\t\t\tif ($response['error_num'] == 0) {\n\t\t\t\treturn $response;\n\t\t\t}\n\t\t}\n\n\t\treturn $response;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * secpass_login_process - process a local login checking for triggers\n *   such as those that would force a password check and take the appropriate action.\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username  - The user to process\n *\n * @return (array)  $user - The login user or an empty array if the user does not exist\n */\nfunction secpass_login_process($username) {\n\tglobal $error, $error_msg;\n\n\t$password = get_nfilter_request_var('login_password');\n\n\tif ($username == '') {\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log('LOGIN FAILED: Empty Local Username provided', false, 'AUTH');\n\n\t\treturn array();\n\t}\n\n\tauth_checkclear_lockout($username, 0);\n\n\tif (auth_process_lockout_check($username, 0)) {\n\t\treturn array();\n\t}\n\n\tif (db_column_exists('user_auth', 'lastfail')) {\n\t\t$user = db_fetch_row_prepared(\"SELECT id, username, lastfail, failed_attempts, `locked`, password\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($username));\n\t} else {\n\t\t$user = db_fetch_row_prepared(\"SELECT id, username, password\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($username));\n\t}\n\n\tif (cacti_sizeof($user)) {\n\t\tif (trim($password) == '') {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  No password provided by user.');\n\n\t\t\tcacti_log(sprintf('LOGIN FAILED: No password provided for user %s', $username), false, 'AUTH');\n\n\t\t\t$valid_pass = false;\n\t\t} else {\n\t\t\t$valid_pass = compat_password_verify($password, $user['password']);\n\t\t}\n\n\t\tcacti_log('DEBUG: User \\'' . $username . '\\' valid password = ' . $valid_pass, false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\tif (!$valid_pass) {\n\t\t\tauth_process_lockout($username, 0);\n\n\t\t\tif (!$error) {\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied! Login failed.');\n\t\t\t}\n\n\t\t\treturn array();\n\t\t}\n\t} else {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log(sprintf('LOGIN FAILED: Invalid user %s specified.', $username), false, 'AUTH');\n\t}\n\n\t/**\n\t * Check if old password doesn't meet specifications and must be changed\n\t * This only applies to local logins where we store the actual hashed\n\t * password.\n\t */\n\tif (read_config_option('secpass_forceold') == 'on') {\n\t\t$message = secpass_check_pass($password);\n\n\t\tif ($message != 'ok') {\n\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\tSET must_change_password = 'on'\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = 0\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\tarray($username));\n\n\t\t\t$error_msg = __('Your Cacti administrator has forced complex passwords for logins and your current Cacti password does not match the new requirements.  Therefore, you must change your password now.');\n\n\t\t\traise_message('forced_password', $error_msg, MESSAGE_LEVEL_INFO);\n\t\t\theader('Location: auth_changepassword.php?header=false');\n\t\t\texit;\n\t\t}\n\t}\n\n\t// Set the last Login time\n\tif (read_config_option('secpass_expireaccount') > 0) {\n\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\tSET lastlogin = ?\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray(time(), $username));\n\t}\n\n\treturn $user;\n}\n\n/**\n * secpass_check_pass - Validate a given password for various password rules\n *\n * @param  (string) $password - The user password\n *\n * @return (string) Either 'ok', or an error message to present to the user\n */\nfunction secpass_check_pass($password) {\n\t$minlen = read_config_option('secpass_minlen');\n\tif (strlen($password) < $minlen) {\n\t\treturn __('Password must be at least %d characters!', $minlen);\n\t}\n\n\tif (read_config_option('secpass_reqnum') == 'on' &&\n\t\tstr_replace(array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'), '', $password) == $password\n\t) {\n\t\treturn __('Your password must contain at least 1 numerical character!');\n\t}\n\n\tif (read_config_option('secpass_reqmixcase') == 'on' && strtolower($password) == $password) {\n\t\treturn __('Your password must contain a mix of lower case and upper case characters!');\n\t}\n\n\tif (read_config_option('secpass_reqspec') == 'on' &&\n\t\tstr_replace(array('~', '`', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '_', '+', '=', '[', '{', ']', '}', ';', ':', '<', ',', '.', '>', '?', '|', '/', '\\\\'), '', $password) == $password\n\t) {\n\t\treturn __('Your password must contain at least 1 special character!');\n\t}\n\n\treturn 'ok';\n}\n\n/**\n * secpass_check_history - Checks for password reuse for local accounts\n *\n * @param  (int)    $id - The user id to check\n * @param  (string) $password  - The user password\n *\n * @return (bool)   True if the user password provided meets history rules\n */\nfunction secpass_check_history($id, $password) {\n\t$history = intval(read_config_option('secpass_history'));\n\n\tif ($history > 0) {\n\t\t$user = db_fetch_row_prepared(\"SELECT password, password_history\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($id));\n\n\t\tif (compat_password_verify($password, $user['password'])) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$passes = explode('|', $user['password_history']);\n\t\t// Double check this incase the password history setting was changed\n\t\twhile (cacti_count($passes) > $history) {\n\t\t\tarray_shift($passes);\n\t\t}\n\n\t\tif (!empty($passes)) {\n\t\t\tforeach ($passes as $hash) {\n\t\t\t\tif (compat_password_verify($password, $hash)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * rsa_check_keypair - Checks that Cacti ras_public_key is present.  If not\n *   it will insert the information into the Cacti database.\n *\n * @return (void)\n */\nfunction rsa_check_keypair() {\n\tglobal $config;\n\n\tset_include_path($config['include_path'] . '/vendor/phpseclib/');\n\tinclude('Crypt/Base.php');\n\tinclude('Math/BigInteger.php');\n\tinclude('Crypt/Hash.php');\n\tinclude('Crypt/RSA.php');\n\tinclude('Crypt/Rijndael.php');\n\tinclude('Crypt/AES.php');\n\n\t$public_key = read_config_option('rsa_public_key');\n\n\tif(!$public_key) {\n\t\t$rsa = new phpseclib\\Crypt\\RSA();\n\t\t$keys = $rsa->createKey(2048);\n\t\t$rsa->loadKey($keys['publickey']);\n\t\t$fingerprint = $rsa->getPublicKeyFingerprint();\n\n\t\tdb_execute_prepared(\"INSERT INTO settings\n\t\t\t(`name`, `value`)\n\t\t\tVALUES\n\t\t\t('rsa_public_key', '\" . $keys['publickey'] . \"'),\n\t\t\t('rsa_private_key', '\" . $keys['privatekey'] . \"'),\n\t\t\t('rsa_fingerprint', '\" . $fingerprint . \"')\"\n\t\t);\n\t}\n}\n\n/**\n * reset_group_perms - sets a flag for all users of a group logged in that their perms\n *   need to be reloaded from the database\n *\n * @param  (int) $group_id - the id of the group to check\n *\n * @return (void)\n */\nfunction reset_group_perms($group_id) {\n\t$users = array_rekey(db_fetch_assoc_prepared('SELECT user_id\n\t\tFROM user_auth_group_members\n\t\tWHERE group_id = ?',\n\t\tarray($group_id)), 'user_id', 'user_id');\n\n\tif (cacti_sizeof($users)) {\n\t\tdb_execute('UPDATE user_auth\n\t\t\tSET reset_perms=FLOOR(RAND() * 4294967295) + 1\n\t\t\tWHERE id IN (' . implode(',', $users) . ')');\n\t}\n}\n\n/**\n * reset_user_perms - sets a flag for all users logged in as this user that their perms\n *   need to be reloaded from the database\n *\n * @param  (int) $user_id - the id of the current user\n *\n * @return (void)\n */\nfunction reset_user_perms($user_id) {\n\tdb_execute_prepared('UPDATE user_auth\n\t\tSET reset_perms=FLOOR(RAND() * 4294967295) + 1\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\tif ($user_id == $_SESSION['sess_user_id']) {\n\t\tkill_session_var('sess_user_realms');\n\t\tkill_session_var('sess_user_config_array');\n\t\tkill_session_var('sess_config_array');\n\t\tkill_session_var('sess_auth_names');\n\t}\n}\n\n/**\n * is_user_perms_valid - checks to see if the admin has changed users permissions\n *\n *  @param  (int)  $user_id - the id of the current user\n *\n *  @return (bool) true if still valid, false otherwise\n */\nfunction is_user_perms_valid($user_id) {\n\tglobal $config;\n\n\tstatic $valid = null;\n\tstatic $key   = null;\n\n\tif ($valid === null && cacti_version_compare($config['cacti_db_version'], '1.0.0', '>=')) {\n\t\t$key = db_fetch_cell_prepared('SELECT reset_perms\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($user_id));\n\t}\n\n\tif (isset($_SESSION['sess_user_perms_key'])) {\n\t\tif ($key != $_SESSION['sess_user_perms_key']) {\n\t\t\t$valid = false;\n\t\t} else {\n\t\t\t$valid = true;\n\t\t}\n\t} else {\n\t\t$valid = true;\n\t}\n\n\t$_SESSION['sess_user_perms_key'] = $key;\n\n\treturn $valid;\n}\n\n/**\n * compat_password_verify - if the secure function exists, verify against that\n *   first.  If that checks fails or does not exist, check against older md5\n *   version\n *\n * @param  (string) $password - password to verify\n * @param  (string) $hash     - current password hash\n *\n * @return (bool)   true if password hash matches, false otherwise\n */\nfunction compat_password_verify($password, $hash) {\n\tif (function_exists('password_verify')) {\n\t\tif (password_verify($password, $hash)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t$md5 = md5($password);\n\n\treturn ($md5 == $hash);\n}\n\n/**\n * compat_password_hash - if the secure function exists, hash using that.\n *   If that does not exist, hash older md5 function instead\n *\n * @param  (string) $password - password to hash\n * @param  (string) $algo     - algorithm to use (PASSWORD_DEFAULT)\n *\n * @return (bool)   true if password hash matches, false otherwise\n */\nfunction compat_password_hash($password, $algo, $options = array()) {\n\tif (function_exists('password_hash')) {\n\t\t// Check if options array has anything, only pass when required\n\t\treturn (cacti_sizeof($options) > 0) ?\n\t\t\tpassword_hash($password, $algo, $options) :\n\t\t\tpassword_hash($password, $algo);\n\t}\n\n\treturn md5($password);\n}\n\n/**\n * compat_password_needs_rehash - if the secure function exists, check hash\n *   using that. If that does not exist, return false as md5 doesn't need a\n *   rehash\n *\n * @param  (string) $password - password to hash\n * @param  (string) $algo     - algorithm to use (PASSWORD_DEFAULT)\n *\n * @return (bool)   true if password hash needs changing, false otherwise\n */\nfunction compat_password_needs_rehash($password, $algo, $options = array()) {\n\tif (function_exists('password_needs_rehash')) {\n\t\t// Check if options array has anything, only pass when required\n\t\treturn (cacti_sizeof($options) > 0) ?\n\t\t\tpassword_needs_rehash($password, $algo, $options) :\n\t\t\tpassword_needs_rehash($password, $algo);\n\t}\n\n\treturn true;\n}\n\n/**\n * auth_user_has_access - Verify that the user account has some access to cacti\n *\n * @param  (int)  $user - The user id of the account to check\n *\n * @return (bool) True if the user has access false otherwise\n */\nfunction auth_user_has_access($user) {\n\t$access = false;\n\n\t// See if they have access to any realms\n\t$realms = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_realm\n\t\tWHERE user_id = ?',\n\t\tarray($user['id']));\n\n\tif ($realms > 0) {\n\t\treturn true;\n\t}\n\n\t// See if they have general graph access as a guest account\n\tif (read_config_option('guest_user') > 0) {\n\t\tif ($user['show_tree'] == 'on' || $user['show_list'] == 'on' || $user['show_preview'] == 'on') {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// See if they have access to any group realms\n\t$user_groups = db_fetch_assoc_prepared('SELECT *\n\t\tFROM user_auth_group_members\n\t\tWHERE user_id = ?',\n\t\tarray($user['id']));\n\n\tif (cacti_sizeof($user_groups)) {\n\t\tforeach($user_groups as $g) {\n\t\t\t$realms = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM user_auth_group_realm\n\t\t\t\tWHERE group_id = ?',\n\t\t\t\tarray($g['group_id']));\n\n\t\t\tif ($realms > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// See if they have general graph access as a guest account\n\t\t\tif (read_config_option('guest_user') > 0) {\n\t\t\t\tif ($g['show_tree'] == 'on' || $g['show_list'] == 'on' || $g['show_preview'] == 'on') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * auth_display_custom_error_message - displays a custom error message to the browser that looks like\n *   the pre-defined error messages\n *\n * @param  (string) $message - the actual text of the error message to display\n *\n * @return (void)\n */\nfunction auth_display_custom_error_message($message) {\n\tglobal $config;\n\n\t$auth_method = read_config_option('auth_method');\n\n\tif ($auth_method == 2) {\n\t\t$custom_message = read_config_option('basic_auth_fail_message');\n\t} else {\n\t\t$custom_message = '';\n\t}\n\n\t/* kill the session */\n\tcacti_cookie_logout();\n\n\t/* print error */\n\tprint '<!DOCTYPE html>';\n\tprint '<html>';\n\tprint '<head>';\n\n\thtml_common_header(__('Cacti Login Failure'));\n\n\tprint '</head>';\n\tprint '<body><center>';\n\tprint '<div class=\"ui-state-error ui-corner-all\" style=\"width:50%;margin-left:auto;margin-right:auto;margin-top:200px;padding:20px\"><p>' . $message . '</p><p>' . $custom_message . '</p></div>';\n\n\tif ($auth_method != 2) {\n\t\tprint '<div class=\"ui-corner-all\" style=\"width:50%;margin:auto;padding:20px\"><a href=\"index.php\">' . __('Login Again') . '</a></div><script type=\"text/javascript\">$(function() { $(\"a\").button(); });</script>';\n\t}\n\n\tprint '</center></body></html>';\n}\n\n/**\n * auth_login_redirect - provide default page re-direction when a user first logs in.\n *\n * @param  (string|array) $login_opts - optional array of user details\n *\n * @return (void)\n */\nfunction auth_login_redirect($login_opts = '') {\n\tglobal $config;\n\n\tif ($login_opts == '') {\n\t\t$login_opts = db_fetch_cell_prepared('SELECT login_opts\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($_SESSION['sess_user_id']));\n\t}\n\n\t$newtheme = false;\n\tif (user_setting_exists('selected_theme', $_SESSION['sess_user_id']) && read_config_option('selected_theme') != read_user_setting('selected_theme')) {\n\t\tunset($_SESSION['selected_theme']);\n\t\t$newtheme = true;\n\t}\n\n\t// Decide what to do with an authenticated user\n\tswitch ($login_opts) {\n\t\tcase '1': /* referer */\n\t\t\t/**\n\t\t\t * because we use plugins, we can't redirect back to graph_view.php if they don't\n\t\t\t * have console access\n\t\t\t */\n\t\t\tif (isset($_SERVER['REDIRECT_URL'])) {\n\t\t\t\t$referer = sanitize_uri($_SERVER['REDIRECT_URL']);\n\n\t\t\t\tif (isset($_SERVER['REDIRECT_QUERY_STRING'])) {\n\t\t\t\t\t$referer .= '?' . $_SERVER['REDIRECT_QUERY_STRING'];\n\t\t\t\t}\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer from REDIRECT_URL with Value: '%s', Effective: '%s'\", $_SERVER['REDIRECT_URL'], $referer), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t} elseif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t\t\t$referer = $_SERVER['HTTP_REFERER'];\n\n\t\t\t\tif (auth_basename($referer) == 'logout.php') {\n\t\t\t\t\t$referer = $config['url_path'] . 'index.php';\n\t\t\t\t} elseif (strpos($referer, $config['url_path']) === false) {\n\t\t\t\t\tif (!is_realm_allowed(8)) {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer from HTTP_REFERER with Value: '%s', Effective: '%s'\", $_SERVER['HTTP_REFERER'], $referer), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t} elseif (isset($_SERVER['REQUEST_URI'])) {\n\t\t\t\t$referer = sanitize_uri($_SERVER['REQUEST_URI']);\n\n\t\t\t\tif (auth_basename($referer) == 'logout.php') {\n\t\t\t\t\t$referer = $config['url_path'] . 'index.php';\n\t\t\t\t}\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer from REQUEST_URI with Value: '%s', Effective: '%s'\", $_SERVER['REQUEST_URI'], $referer), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t} else {\n\t\t\t\t$referer = $config['url_path'] . 'index.php';\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer Short Circuit to '%s'\", 'index.php'), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t}\n\n\t\t\t$referer .= ($newtheme ? (strpos($referer, '?') === false ? '?':'&') . 'newtheme=1':'');\n\n\t\t\t/* Strip out the login from the referer if present */\n\t\t\t$referer  = str_replace('?action=login', '', $referer);\n\n\t\t\tif (api_user_realm_auth(auth_basename($referer))) {\n\t\t\t\theader('Location: ' . $referer);\n\t\t\t} elseif (!is_realm_allowed(8)) {\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer Overridden Due to Permissions to '%s'\", 'graph_view.php'), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t\theader('Location: graph_view.php');\n\t\t\t} else {\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer Overridden Due to Permissions to '%s'\", 'index.php'), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t\theader('Location: index.php');\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase '2': /* default console page */\n\t\t\tif (!is_realm_allowed(8)) {\n\t\t\t\theader('Location: ' . $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\t\t\t} else {\n\t\t\t\theader('Location: ' . $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':''));\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase '3': /* default graph page */\n\t\t\theader('Location: ' . $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tapi_plugin_hook_function('login_options_navigate', $login_opts);\n\t}\n\n\texit;\n}\n\n/**\n * auth_basename - provides a URL knowledgable basename function\n *\n * @param  (string) $referer - a URL that will included a basename\n *\n * @return (string) the file name without the arguments\n */\nfunction auth_basename($referer) {\n\t$parts = explode('?', $referer);\n\n\treturn basename($parts[0]);\n}\n\n/**\n * auth_login_create_user_from_template - creates a new user account from a template account\n *   if there is an error that would block login, the function set's the globals\n *   error and error_msg to inform the caller not to proceed with the login.\n *   in special cases, such as basic auth, the function will print out a custom\n *   error message and exit.\n *\n * @param  (string) $username - The username to use for the copy\n * @param  (int)    $realm - The login realm to use for the copy\n *\n * @return (array|void)  The copied new user account details or void on exit\n */\nfunction auth_login_create_user_from_template($username, $realm) {\n\tglobal $error, $error_msg;\n\n\tcacti_log(\"NOTE: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\n\t$user = array();\n\n\t$user_template = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray(get_template_account($username)));\n\n\t/* check that template user exists */\n\tif (!empty($user_template)) {\n\t\tif ($realm == 3) { // This is an ldap login\n\t\t\t/* get user CN*/\n\t\t\t$cn_full_name = read_config_option('cn_full_name');\n\t\t\t$cn_email     = read_config_option('cn_email');\n\n\t\t\tif ($cn_full_name != '' || $cn_email != '') {\n\t\t\t\t$ldap_cn_search_response = cacti_ldap_search_cn($username, array($cn_full_name, $cn_email));\n\n  \t\t\t\t\tif (isset($ldap_cn_search_response['cn'])) {\n\t\t\t\t\t$data_override = array();\n\n\t\t\t\t\tif (array_key_exists($cn_full_name, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t$data_override['full_name'] = $ldap_cn_search_response['cn'][$cn_full_name];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$data_override['full_name'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (array_key_exists($cn_email, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t$data_override['email_address'] = $ldap_cn_search_response['cn'][$cn_email];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$data_override['email_address'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm, false, $data_override);\n\t\t\t\t} else {\n\t\t\t\t\t$ldap_response = (isset($ldap_cn_search_response[0]) ? $ldap_cn_search_response[0] : '(no response given)');\n\t\t\t\t\t$ldap_code = (isset($ldap_cn_search_response['error_num']) ? $ldap_cn_search_response['error_num'] : '(no code given)');\n\t\t\t\t\tcacti_log('LOGIN: Email Address and Full Name fields not found, reason: ' . $ldap_response . 'code: ' . $ldap_code, false, 'AUTH');\n\t\t\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm);\n\t\t\t}\n\t\t} else {\n\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm);\n\t\t}\n\n\t\t/* requery newly created user */\n\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = ?',\n\t\t\tarray($username, $realm));\n\t} else {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Template user id %s does not exist.  Please contact your Administrator.', read_config_option('user_template'));\n\n\t\tcacti_log(\"LOGIN FAILED: Template user id '\" . read_config_option('user_template') . \"' does not exist.\", false, 'AUTH');\n\n\t\tif ($auth_method == 2) {\n\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\texit;\n\t\t}\n\t}\n\n\treturn $user;\n}\n\n/**\n * check_reset_no_authentication - Attempts to switch Cacti from No Authentication to Local\n *   authentication, or generate an error on failure through the globals error, and error_msg.\n *\n * @param  (int)  $auth_method - The current auth method\n *\n * @return (bool) Returns false on failure to set user account, otherwise redirects\n */\nfunction check_reset_no_authentication($auth_method) {\n\tglobal $error, $error_msg;\n\n\tif ($auth_method == 0) {\n\t\t$admin_id = db_execute_prepared('SELECT id\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray(read_config_option('admin_user')));\n\n\t\tcacti_log('Admin User (' . read_config_option('admin_user') . ' vs ' . $admin_id . ')', true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\n\t\tif (!$admin_id) {\n\t\t\t$admin_sql_query = 'SELECT TOP 1 id FROM (\n\t\t\t\tSELECT ua.id\n\t\t\t\tFROM user_auth AS ua\n\t\t\t\tINNER JOIN user_auth_realm AS uar\n\t\t\t\tON uar.user_id = ua.id\n\t\t\t\tWHERE uar.realm_id = ?';\n\n\t\t\t$admin_sql_params = array(15);\n\n\t\t\tif (db_table_exists('user_auth_group_realm')) {\n\t\t\t\t$admin_sql_query .= '\n\t\t\t\tUNION\n\t\t\t\tSELECT ua.id\n\t\t\t\tFROM user_auth AS ua\n\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\tON uagm.user_id = ua.id\n\t\t\t\tINNER JOIN user_auth_group AS uag\n\t\t\t\tON uag.id = uagm.group_id\n\t\t\t\tINNER JOIN user_auth_group_realm AS uagr\n\t\t\t\tON uagr.group_id=uag.group_id\n\t\t\t\tWHERE uag.enabled=\"on\" AND ua.enabled=\"on\"\n\t\t\t\tAND uagr.realm_id = ?';\n\n\t\t\t\t$admin_sql_params[] = 15;\n\t\t\t}\n\n\t\t\t$admin_sql_query .= '\n\t\t\t\t) AS id';\n\n\t\t\tcacti_log('SQL query ' . $admin_sql_query, true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t\tcacti_log('SQL param ' . implode(',', $admin_sql_params), true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t\t$admin_id = db_fetch_cell_prepared($admin_sql_query, $admin_sql_params);\n\t\t\tcacti_log('SQL result ' . $admin_id, true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t}\n\n\t\tif (!$admin_id) {\n\t\t\t$admin_id = db_fetch_cell('SELECT id FROM user_auth WHERE username = \\'admin\\'');\n\t\t\tcacti_log('Final attempt ' . $admin_id, true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t}\n\n\t\tif (!$admin_id) {\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Authentication was previously not set.  Attempted to set to Local Authentication, but no Administrative account was found.');\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Authentication method is currently set to none\n\t\t// lets switch this to basic and allow setting of\n\t\t// a password.\n\t\tdb_execute_prepared(\"UPDATE user_auth SET\n\t\t\tpassword = '',\n\t\t\tmust_change_password = 'on',\n\t\t\tpassword_change = 'on'\n\t\t\tWHERE id = ?\",\n\t\t\tarray($admin_id));\n\n\t\t$auth_method = 1;\n\t\tset_config_option('auth_method', $auth_method, true);\n\n\t\t$_SESSION['sess_user_id'] = $admin_id;\n\t\t$_SESSION['sess_change_password'] = true;\n\t\theader ('Location: ' . $config['url_path'] . 'auth_changepassword.php?action=force&ref=' . (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : 'index.php'));\n\t\texit;\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/**\n * title_trim - takes a string of text, truncates it to $max_length and appends\n * three periods onto the end\n *\n * @param $text - the string to evaluate\n * @param $max_length - the maximum number of characters the string can contain\n *   before it is truncated\n *\n * @return - the truncated string if len($text) is greater than $max_length, else\n *   the original string\n */\nfunction title_trim($text, $max_length) {\n\tif (strlen($text) > $max_length) {\n\t\treturn mb_substr($text, 0, $max_length) . '...';\n\t} else {\n\t\treturn $text;\n\t}\n}\n\n/**\n * filter_value - a quick way to highlight text in a table from general filtering\n *\n * @param $text - the string to filter\n * @param $filter - the search term to filter for\n * @param $href - the href if you wish to have an anchor returned\n *\n * @return - the filtered string\n */\nfunction filter_value($value, $filter, $href = '') {\n\tstatic $charset;\n\n\tif ($charset == '') {\n\t\t$charset = ini_get('default_charset');\n\t}\n\n\tif ($charset == '') {\n\t\t$charset = 'UTF-8';\n\t}\n\n\tif (empty($value)) {\n\t\treturn $value;\n\t}\n\n\t$value =  htmlspecialchars($value, ENT_QUOTES, $charset, false);\n\t// Grave Accent character can lead to xss\n\t$value = str_replace('`', '&#96;', $value);\n\n\tif ($filter != '') {\n\t\t$value = preg_replace('#(' . preg_quote($filter) . ')#i', \"<span class='filteredValue'>\\\\1</span>\", $value);\n\t}\n\n\tif ($href != '') {\n\t\t$value = '<a class=\"linkEditMain\" href=\"' . htmlspecialchars($href, ENT_QUOTES, $charset, false) . '\">' . $value  . '</a>';\n\t}\n\n\treturn $value;\n}\n\n/**\n * set_graph_config_option - deprecated - wrapper to set_user_setting().\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $user        - the user id, otherwise the session user\n *\n * @return            - void\n */\nfunction set_graph_config_option($config_name, $value, $user = -1) {\n\tset_user_setting($config_name, $value, $user);\n}\n\n/**\n * graph_config_value_exists - deprecated - wrapper to user_setting_exists\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $user_id - the id of the user to check the configuration value for\n *\n * @return (bool) - true if a value exists, false if a value does not exist\n */\nfunction graph_config_value_exists($config_name, $user_id) {\n\treturn user_setting_exists($config_name, $user_id);\n}\n\n/**\n * read_default_graph_config_option - deprecated - wrapper to read_default_user_setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the default value of the configuration option\n */\nfunction read_default_graph_config_option($config_name) {\n\treturn read_default_user_setting($config_name);\n}\n\n/**\n * read_graph_config_option - deprecated - finds the current value of a graph configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n *\n * @return - the current value of the graph configuration option\n */\nfunction read_graph_config_option($config_name, $force = false) {\n\treturn read_user_setting($config_name, false, $force);\n}\n\n/**\n * save_user_setting - sets/updates aLL user settings\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $user        - the user id, otherwise the session user\n *\n * @return            - void\n */\nfunction save_user_settings($user = -1) {\n\tglobal $settings_user;\n\n\tif ($user == -1 || empty($user)) {\n\t\t$user = $_SESSION['sess_user_id'];\n\t}\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t/* Check every field with a numeric default value and reset it to default if the inputted value is not numeric  */\n\t\t\tif (isset($field_array['default']) && is_numeric($field_array['default']) && !is_numeric(get_nfilter_request_var($field_name))) {\n\t\t\t\tset_request_var($field_name, $field_array['default']);\n\t\t\t}\n\n\t\t\tif (isset($field_array['method'])) {\n\t\t\t\tif ($field_array['method'] == 'checkbox') {\n\t\t\t\t\tset_user_setting($field_name, (isset_request_var($field_name) ? 'on' : ''), $user);\n\t\t\t\t} elseif ($field_array['method'] == 'checkbox_group') {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tset_user_setting($sub_field_name, (isset_request_var($sub_field_name) ? 'on' : ''), $user);\n\t\t\t\t\t}\n\t\t\t\t} elseif ($field_array['method'] == 'textbox_password') {\n\t\t\t\t\tif (get_nfilter_request_var($field_name) != get_nfilter_request_var($field_name.'_confirm')) {\n\t\t\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t\t\t$errors[4] = 4;\n\t\t\t\t\t} elseif (isset_request_var($field_name)) {\n\t\t\t\t\t\tset_user_setting($field_name, get_nfilter_request_var($field_name), $user);\n\t\t\t\t\t}\n\t\t\t\t} elseif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tif (isset_request_var($sub_field_name)) {\n\t\t\t\t\t\t\tset_user_setting($sub_field_name, get_nfilter_request_var($sub_field_name), $user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (isset_request_var($field_name)) {\n\t\t\t\t\tset_user_setting($field_name, get_nfilter_request_var($field_name), $user);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * set_user_setting - sets/updates a user setting with the given value.\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $user        - the user id, otherwise the session user\n *\n * @return          - void\n */\nfunction set_user_setting($config_name, $value, $user = -1) {\n\tglobal $settings_user;\n\n\tif ($user == -1 && isset($_SESSION['sess_user_id'])) {\n\t\t$user = $_SESSION['sess_user_id'];\n\t}\n\n\tif ($user == -1) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$mode = 'WEBUI';\n\t\t} else {\n\t\t\t$mode = 'POLLER';\n\t\t}\n\n\t\tcacti_log('NOTE: Attempt to set user setting \\'' . $config_name . '\\', with no user id: ' . cacti_debug_backtrace('', false, false, 0, 1), false, $mode, POLLER_VERBOSITY_MEDIUM);\n\t} elseif (db_table_exists('settings_user')) {\n\t\tdb_execute_prepared('REPLACE INTO settings_user\n\t\t\tSET user_id = ?,\n\t\t\tname = ?,\n\t\t\tvalue = ?',\n\t\t\tarray($user, $config_name, $value));\n\n\t\tunset($_SESSION['sess_user_config_array']);\n\t\t$settings_user[$config_name]['value'] = $value;\n\t}\n}\n\n/**\n * user_setting_exists - determines if a value exists for the current user/setting specified\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $user_id - the id of the user to check the configuration value for\n *\n * @return (bool) - true if a value exists, false if a value does not exist\n */\nfunction user_setting_exists($config_name, $user_id) {\n\tstatic $user_setting_values = array();\n\n\tif (!isset($user_setting_values[$config_name])) {\n\t\t$value = 0;\n\t\tif (db_table_exists('settings_user')) {\n\t\t\t$value = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM settings_user\n\t\t\t\tWHERE name = ?\n\t\t\t\tAND user_id = ?',\n\t\t\t\tarray($config_name, $user_id));\n\t\t}\n\n\t\tif ($value !== false && $value > 0) {\n\t\t\t$user_setting_values[$config_name] = true;\n\t\t} else {\n\t\t\t$user_setting_values[$config_name] = false;\n\t\t}\n\t}\n\n\treturn $user_setting_values[$config_name];\n}\n\n/**\n * clear_user_setting - if a value exists for the current user/setting specified, removes it\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $user_id - the id of the user to remove the configuration value for\n */\nfunction clear_user_setting($config_name, $user = -1) {\n\tglobal $settings_user;\n\n\tif ($user == -1) {\n\t\t$user = $_SESSION['sess_user_id'];\n\t}\n\n\tif (db_table_exists('settings_user')) {\n\t\tdb_execute_prepared('DELETE FROM settings_user\n\t\t\tWHERE name = ?\n\t\t\tAND user_id = ?',\n\t\t\tarray($config_name, $user));\n\t}\n\n\tunset($_SESSION['sess_user_config_array']);\n}\n\n/**\n * read_default_user_setting - finds the default value of a user configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the default value of the configuration option\n */\nfunction read_default_user_setting($config_name) {\n\tglobal $config, $settings_user;\n\n\tforeach ($settings_user as $tab_array) {\n\t\tif (isset($tab_array[$config_name]) && isset($tab_array[$config_name]['default'])) {\n\t\t\treturn $tab_array[$config_name]['default'];\n\t\t} else {\n\t\t\tforeach ($tab_array as $field_array) {\n\t\t\t\tif (isset($field_array['items']) && isset($field_array['items'][$config_name]) && isset($field_array['items'][$config_name]['default'])) {\n\t\t\t\t\treturn $field_array['items'][$config_name]['default'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * read_user_setting - finds the current value of a graph configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $default - the default value is none is set\n * @param $force - pull the data from the database if true ignoring session\n * @param $user - assume this user's identity\n *\n * @return - the current value of the user setting\n */\nfunction read_user_setting($config_name, $default = false, $force = false, $user = 0) {\n\tglobal $config;\n\n\t/* users must have cacti user auth turned on to use this, or the guest account must be active */\n\tif ($user == 0 && isset($_SESSION['sess_user_id'])) {\n\t\t$effective_uid = $_SESSION['sess_user_id'];\n\t} elseif (read_config_option('auth_method') == 0 || $user > 0) {\n\t\t/* first attempt to get the db setting for guest */\n\t\tif ($user == 0) {\n\t\t\t$effective_uid = db_fetch_cell(\"SELECT user_auth.id\n\t\t\t\tFROM settings\n\t\t\t\tINNER JOIN user_auth\n\t\t\t\tON user_auth.username = settings.value\n\t\t\t\tWHERE settings.name = 'guest_user'\");\n\n\t\t\tif ($effective_uid == '') {\n\t\t\t\t$effective_uid = 0;\n\t\t\t}\n\t\t} else {\n\t\t\t$effective_uid = $user;\n\t\t}\n\n\t\t$db_setting = false;\n\t\tif (db_table_exists('settings_user')) {\n\t\t\t$db_setting = db_fetch_row_prepared('SELECT value\n\t\t\t\tFROM settings_user\n\t\t\t\tWHERE name = ?\n\t\t\t\tAND user_id = ?',\n\t\t\t\tarray($config_name, $effective_uid));\n\t\t}\n\n\t\tif (cacti_sizeof($db_setting)) {\n\t\t\treturn $db_setting['value'];\n\t\t} elseif ($default !== false) {\n\t\t\treturn $default;\n\t\t} else {\n\t\t\treturn read_default_user_setting($config_name);\n\t\t}\n\t} else {\n\t\t$effective_uid = 0;\n\t}\n\n\tif (!$force) {\n\t\tif (isset($_SESSION['sess_user_config_array'])) {\n\t\t\t$user_config_array = $_SESSION['sess_user_config_array'];\n\t\t}\n\t}\n\n\tif (!isset($user_config_array[$config_name])) {\n\t\t$db_setting = false;\n\t\tif (db_table_exists('settings_user')) {\n\t\t\t$db_setting = db_fetch_row_prepared('SELECT value\n\t\t\t\tFROM settings_user\n\t\t\t\tWHERE name = ?\n\t\t\t\tAND user_id = ?',\n\t\t\t\tarray($config_name, $effective_uid));\n\t\t}\n\n\t\tif (cacti_sizeof($db_setting)) {\n\t\t\t$user_config_array[$config_name] = $db_setting['value'];\n\t\t} elseif ($default !== false) {\n\t\t\t$user_config_array[$config_name] = $default;\n\t\t} else {\n\t\t\t$user_config_array[$config_name] = read_default_user_setting($config_name);\n\t\t}\n\n\t\tif (isset($_SESSION)) {\n\t\t\t$_SESSION['sess_user_config_array'] = $user_config_array;\n\t\t} else {\n\t\t\t$config['config_user_settings_array'] = $user_config_array;\n\t\t}\n\t}\n\n\treturn $user_config_array[$config_name];\n}\n\n/**\n * is_remote_path_setting - determines of a Cacti setting should be maintained\n *   on the Remote Data Collector separate from the Main cacti server\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *\n * @return (bool) - true if the setting should be saved locally\n */\nfunction is_remote_path_setting($config_name) {\n\tglobal $config;\n\n\tif ($config['poller_id'] > 1 && (strpos($config_name, 'path_') !== false || strpos($config_name, '_path') !== false)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * set_config_option - sets/updates a cacti config option with the given value.\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $remote      - push the setting to the remote with the exception of path variables\n *\n * @return (void)\n */\nfunction set_config_option($config_name, $value, $remote = false) {\n\tglobal $config;\n\n\tinclude_once($config['base_path'] . '/lib/poller.php');\n\n\tdb_execute_prepared('REPLACE INTO settings\n\t\tSET name = ?, value = ?',\n\t\tarray($config_name, $value));\n\n\tif ($remote && !is_remote_path_setting($config_name)) {\n\t\t$gone_time = read_config_option('poller_interval') * 2;\n\n\t\t$pollers = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT\n\t\t\t\tid,\n\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(last_status) AS last_polled\n\t\t\t\tFROM poller\n\t\t\t\tWHERE id > 1\n\t\t\t\tAND disabled=\"\"'),\n\t\t\t'id', 'last_polled'\n\t\t);\n\n\t\t$sql = 'INSERT INTO settings (name, value) VALUES (?, ?) ON DUPLICATE KEY UPDATE value=VALUES(value)';\n\n\t\tforeach($pollers as $p => $t) {\n\t\t\tif ($t > $gone_time) {\n\t\t\t\traise_message('poller_' . $p, __('Settings save to Data Collector %d skipped due to heartbeat.', $p), MESSAGE_LEVEL_WARN);\n\t\t\t} else {\n\t\t\t\t$rcnn_id = poller_connect_to_remote($p);\n\n\t\t\t\tif ($rcnn_id) {\n\t\t\t\t\tif (db_execute_prepared($sql, array($config_name, $value), false, $rcnn_id) === false) {\n\t\t\t\t\t\t$rcnn_id = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// check if we still have rcnn_id, if it's now become false, we had a problem\n\t\t\t\tif (!$rcnn_id) {\n\t\t\t\t\traise_message('poller_' . $p, __('Settings save to Data Collector %d Failed.', $p), MESSAGE_LEVEL_ERROR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$config_array = array();\n\tif ($config['is_web']) {\n\t\t$sess = true;\n\t} else {\n\t\t$sess = false;\n\t}\n\n\t// Store the array back for later retrieval\n\tif ($sess) {\n\t\t$_SESSION['sess_config_array']  = $value;\n\t} else {\n\t\t$config['config_options_array'] = $value;\n\t}\n\n\tif (!empty($config['DEBUG_SET_CONFIG_OPTION'])) {\n\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() . cacti_debug_backtrace($config_name, false, false, 0, 1) . \"\\n\", FILE_APPEND);\n\t}\n}\n\n/**\n * config_value_exists - determines if a value exists for the current user/setting specified\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - true if a value exists, false if a value does not exist\n */\nfunction config_value_exists($config_name) {\n\tstatic $config_values = array();\n\n\tif (!isset($config_values[$config_name])) {\n\t\t$value = db_fetch_cell_prepared('SELECT COUNT(*) FROM settings WHERE name = ?', array($config_name));\n\n\t\tif ($value > 0) {\n\t\t\t$config_values[$config_name] = true;\n\t\t} else {\n\t\t\t$config_values[$config_name] = false;\n\t\t}\n\t}\n\n\treturn $config_values[$config_name];\n}\n\n/**\n * read_default_config_option - finds the default value of a Cacti configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the default value of the configuration option\n */\nfunction read_default_config_option($config_name) {\n\tglobal $config, $settings;\n\n\tif (isset($settings) && is_array($settings)) {\n\t\tforeach ($settings as $tab_array) {\n\t\t\tif (isset($tab_array[$config_name]) && isset($tab_array[$config_name]['default'])) {\n\t\t\t\treturn $tab_array[$config_name]['default'];\n\t\t\t} else {\n\t\t\t\tforeach ($tab_array as $field_array) {\n\t\t\t\t\tif (isset($field_array['items']) && isset($field_array['items'][$config_name]) && isset($field_array['items'][$config_name]['default'])) {\n\t\t\t\t\t\treturn $field_array['items'][$config_name]['default'];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction prime_common_config_settings() {\n\tglobal $config;\n\n\t//$start = microtime(true);\n\n\t$common_settings = array(\n\t\t'auth_method',\n\t\t'auth_cache_enabled',\n\t\t'path_cactilog',\n\t\t'rrdtool_version',\n\t\t'log_verbosity',\n\t\t'log_destination',\n\t\t'default_image_format',\n\t\t'default_graph_width',\n\t\t'default_graph_height',\n\t\t'default_datechar',\n\t\t'default_date_format',\n\t\t'default_poller',\n\t\t'default_site',\n\t\t'i18n_language_support',\n\t\t'i18n_default_language',\n\t\t'reports_allow_ln',\n\n\t\t// Common page rendering\n\t\t'selective_debug',\n\t\t'selected_theme',\n\t\t'min_tree_width',\n\t\t'max_tree_width',\n\t);\n\n\tif ($config['is_web']) {\n\t\t$extra_settings = array(\n\t\t\t// Common all pages\n\t\t\t'force_https',\n\t\t\t'content_security_policy_script',\n\t\t\t'content_security_alternate_sources',\n\t\t\t'deletion_verification',\n\n\t\t\t// Common graphing\n\t\t\t'rrdtool_watermark',\n\t\t\t'realtime_cache_path',\n\t\t\t'path_rrdtool',\n\t\t\t'hide_disabled',\n\t\t\t'graph_watermark',\n\t\t\t'graph_dateformat',\n\t\t\t'font_method',\n\t\t\t'date',\n\t\t\t'boost_rrd_update_system_enable',\n\t\t\t'boost_rrd_update_max_records_per_select',\n\t\t\t'boost_rrd_update_enable',\n\t\t\t'boost_png_cache_enable',\n\t\t\t'remote_storage_method',\n\t\t);\n\t} else {\n\t\t$extra_settings = array(\n\t\t\t// Common polling\n\t\t\t'poller_interval',\n\t\t\t'snmp_version',\n\t\t\t'snmp_username',\n\t\t\t'snmp_timeout',\n\t\t\t'snmp_community',\n\t\t\t'snmp_auth_protocol',\n\t\t\t'snmp_security_level',\n\t\t\t'snmp_priv_protocol',\n\t\t\t'snmp_priv_passphrase',\n\t\t\t'snmp_port',\n\t\t\t'snmp_password',\n\t\t\t'snmp_retries',\n\t\t\t'device_threads',\n\t\t\t'max_get_size',\n\t\t\t'availability_method',\n\t\t\t'ping_method',\n\t\t\t'ping_port',\n\t\t\t'ping_retries',\n\t\t\t'ping_timeout',\n\t\t\t'path_snmpbulkwalk',\n\t\t\t'path_snmpwalk',\n\t\t\t'path_snmpget',\n\t\t\t'path_spine',\n\n\t\t\t// Common API\n\t\t\t'default_template',\n\t\t\t'delete_verification',\n\n\t\t\t// Thold\n\t\t\t'alert_bl_trigger',\n\t\t\t'alert_deadnotify',\n\t\t\t'alert_email',\n\t\t\t'alert_exempt',\n\t\t\t'alert_repeat',\n\t\t\t'alert_trigger',\n\t\t\t'base_url',\n\t\t\t'thold_alert_snmp_warning',\n\t\t\t'thold_alert_snmp_normal',\n\t\t\t'thold_alert_snmp',\n\t\t\t'thold_daemon_debug',\n\t\t\t'thold_disable_all',\n\t\t\t'thold_log_debug',\n\t\t\t'thold_send_text_only',\n\t\t\t'thold_show_datasource',\n\t\t);\n\t}\n\n\t$common_settings = array_merge($common_settings, $extra_settings);\n\n\t$settings = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT name, value\n\t\t\tFROM settings\n\t\t\tWHERE name IN (' . trim(str_repeat('?, ', cacti_sizeof($common_settings)),', ') . ')',\n\t\t\t$common_settings),\n\t\t'name', 'value'\n\t);\n\n\tif (isset($_SESSION['sess_config_array'])) {\n\t\t$sess = true;\n\t} else {\n\t\t$sess = false;\n\t}\n\n\tif (cacti_sizeof($settings)) {\n\t\tforeach($settings as $name => $value) {\n\t\t\tif ($sess) {\n\t\t\t\t$_SESSION['sess_config_array'][$name] = $value;\n\t\t\t} else {\n\t\t\t\t$config['config_options_array'][$name] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\t//$end = microtime(true);\n\n\t//cacti_log('The Total common load time:' . round($end - $start, 4));\n}\n\n/**\n * read_config_option - finds the current value of a Cacti configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the current value of the configuration option\n */\nfunction read_config_option($config_name, $force = false) {\n\tglobal $config, $database_hostname, $database_default, $database_port, $database_sessions;\n\n\t$loaded = false;\n\n\tif ($config['is_web']) {\n\t\t$sess = true;\n\t\tif (isset($_SESSION['sess_config_array'][$config_name])) {\n\t\t\t$loaded = true;\n\t\t}\n\t} else {\n\t\t$sess = false;\n\t\tif (isset($config['config_options_array'][$config_name])) {\n\t\t\t$loaded = true;\n\t\t}\n\t}\n\n\tif (!empty($config['DEBUG_READ_CONFIG_OPTION'])) {\n\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() . cacti_debug_backtrace($config_name, false, false, 0, 1) . \"\\n\", FILE_APPEND);\n\t}\n\n\t// Do we have a value already stored in the array, or\n\t// do we want to make sure we have the latest value\n\t// from the database?\n\tif (!$loaded || $force) {\n\t\t// We need to check against the DB, but lets assume default value\n\t\t// unless we can actually read the DB\n\t\t$value = read_default_config_option($config_name);\n\n\t\tif (!empty($config['DEBUG_READ_CONFIG_OPTION'])) {\n\t\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() .\n\t\t\t\t\" $config_name: \" .\n\t\t\t\t' dh: ' . isset($database_hostname) .\n\t\t\t\t' dp: ' . isset($database_port) .\n\t\t\t\t' dd: ' . isset($database_default) .\n\t\t\t\t' ds: ' . isset($database_sessions[\"$database_hostname:$database_port:$database_default\"]) .\n\t\t\t\t\"\\n\", FILE_APPEND);\n\n\t\t\tif (isset($database_hostname) && isset($database_port) && isset($database_default)) {\n\t\t\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() .\n\t\t\t\t\t\" $config_name: [$database_hostname:$database_port:$database_default]\\n\", FILE_APPEND);\n\t\t\t}\n\t\t}\n\n\t\t// Are the database variables set, and do we have a connection??\n\t\t// If we don't, we'll only use the default value without storing\n\t\t// so that we can read the database version later.\n\t\tif (isset($database_hostname) && isset($database_port) && isset($database_default) &&\n\t\t    isset($database_sessions[\"$database_hostname:$database_port:$database_default\"])) {\n\n\t\t\t// Get the database setting\n\t\t\t$db_result = db_fetch_row_prepared('SELECT value FROM settings WHERE name = ?', array($config_name));\n\n\t\t\tif (cacti_sizeof($db_result)) {\n\t\t\t\t$value = $db_result['value'];\n\t\t\t}\n\n\t\t\t// Store whatever value we have in the array\n\t\t\tif ($sess) {\n\t\t\t\tif (!isset($_SESSION['sess_config_array']) || !is_array($_SESSION['sess_config_array'])) {\n\t\t\t\t\t$_SESSION['sess_config_array'] = array();\n\t\t\t\t}\n\n\t\t\t\t$_SESSION['sess_config_array'][$config_name] = $value;\n\t\t\t} else {\n\t\t\t\tif (!isset($config['config_options_array']) || !is_array($config['config_options_array'])) {\n\t\t\t\t\t$config['config_options_array'] = array();\n\t\t\t\t}\n\n\t\t\t\t$config['config_options_array'][$config_name] = $value;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// We already have the value stored in the array and\n\t\t// we don't want to force a db read, so use the cached\n\t\t// version\n\t\tif ($sess) {\n\t\t\t$value = $_SESSION['sess_config_array'][$config_name];\n\t\t} else {\n\t\t\t$value = $config['config_options_array'][$config_name];\n\t\t}\n\t}\n\n\treturn $value;\n}\n\n/**\n * get_selected_theme - checks the user settings and if the user selected\n * theme is set, returns it otherwise returns the system default.\n *\n * @return - the theme name\n */\nfunction get_selected_theme() {\n\tglobal $config, $themes;\n\n\t// shortcut if theme is set in session\n\tif (isset($_SESSION['selected_theme'])) {\n\t\tif (file_exists($config['base_path'] . '/include/themes/' . $_SESSION['selected_theme'] . '/main.css')) {\n\t\t\treturn $_SESSION['selected_theme'];\n\t\t}\n\t}\n\n\t// default to system selected theme\n\t$theme = read_config_option('selected_theme');\n\n\t// check for a pre-1.x cacti being upgraded\n\tif ($theme == '' && !db_table_exists('settings_user')) {\n\t\treturn 'modern';\n\t}\n\n\t// figure out user defined theme\n\tif (isset($_SESSION['sess_user_id'])) {\n\t\t// fetch user defined theme\n\t\t$user_theme = db_fetch_cell_prepared(\"SELECT value\n\t\t\tFROM settings_user\n\t\t\tWHERE name='selected_theme'\n\t\t\tAND user_id = ?\",\n\t\t\tarray($_SESSION['sess_user_id']), '', false);\n\n\t\t// user has a theme\n\t\tif (! empty($user_theme)) {\n\t\t\t$theme = $user_theme;;\n\t\t}\n\t}\n\n\tif (!file_exists($config['base_path'] . '/include/themes/' . $theme . '/main.css')) {\n\t\tforeach($themes as $t => $name) {\n\t\t\tif (file_exists($config['base_path'] . '/include/themes/' . $t . '/main.css')) {\n\t\t\t\t$theme = $t;\n\n\t\t\t\tdb_execute_prepared('UPDATE settings_user\n\t\t\t\t\tSET value = ?\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND name=\"selected_theme\"',\n\t\t\t\t\tarray($theme, $_SESSION['sess_user_id']));\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// update session\n\t$_SESSION['selected_theme'] = $theme;\n\n\treturn $theme;\n}\n\n/**\n * form_input_validate - validates the value of a form field and Takes the appropriate action if the input\n * is not valid\n *\n * @param $field_value - the value of the form field\n * @param $field_name - the name of the $_POST field as specified in the HTML\n * @param $regexp_match - (optionally) enter a regular expression to match the value against\n * @param $allow_nulls - (bool) whether to allow an empty string as a value or not\n * @param $custom_message - (int) the ID of the message to raise upon an error which is defined in the\n *   $messages array in 'include/global_arrays.php'\n *\n * @return - the original $field_value\n */\nfunction form_input_validate($field_value, $field_name, $regexp_match, $allow_nulls, $custom_message = 3) {\n\tglobal $messages;\n\n\t/* write current values to the \"field_values\" array so we can retain them */\n\t$_SESSION['sess_field_values'][$field_name] = $field_value;\n\n\tif (($allow_nulls == true) && ($field_value == '')) {\n\t\treturn $field_value;\n\t}\n\n\tif ($allow_nulls == false && $field_value == '') {\n\t\tif (read_config_option('log_validation') == 'on') {\n\t\t\tcacti_log(\"Form Validation Failed: Variable '$field_name' does not allow nulls and variable is null\", false);\n\t\t}\n\n\t\traise_message($custom_message);\n\n\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t} elseif ($regexp_match != '' && !preg_match('/' . $regexp_match . '/', $field_value)) {\n\t\tif (read_config_option('log_validation') == 'on') {\n\t\t\tcacti_log(\"Form Validation Failed: Variable '$field_name' with Value '$field_value' Failed REGEX '$regexp_match'\", false);\n\t\t}\n\n\t\traise_message($custom_message);\n\n\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t}\n\n\treturn $field_value;\n}\n\n/**\n * check_changed - determines if a request variable has changed between page loads\n *\n * @return - true if the value changed between loads\n */\nfunction check_changed($request, $session) {\n\tif ((isset_request_var($request)) && (isset($_SESSION[$session]))) {\n\t\tif (get_nfilter_request_var($request) != $_SESSION[$session]) {\n\t\t\treturn 1;\n\t\t}\n\t}\n}\n\n/**\n * is_error_message - finds whether an error message has been raised and has not been outputted to the\n * user\n *\n * @return - whether the messages array contains an error or not\n */\nfunction is_error_message() {\n\tglobal $config, $messages;\n\n\tif (isset($_SESSION['sess_error_fields']) && cacti_sizeof($_SESSION['sess_error_fields'])) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction get_message_level($current_message) {\n\t$current_level = MESSAGE_LEVEL_NONE;\n\n\tif (isset($current_message['level'])) {\n\t\t$current_level = $current_message['level'];\n\t} elseif (isset($current_message['type'])) {\n\t\tswitch ($current_message['type']) {\n\t\t\tcase 'error':\n\t\t\t\t$current_level = MESSAGE_LEVEL_ERROR;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\t$current_level = MESSAGE_LEVEL_INFO;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn $current_level;\n}\n\n/**\n * get_format_message_instance - finds the level of the current message instance\n *\n * @param message array the message instance\n *\n * @return - a formatted message\n */\nfunction get_format_message_instance($current_message) {\n\tif (is_array($current_message)) {\n\t\t$fmessage = isset($current_message['message']) ? $current_message['message'] : __esc('Message Not Found.');\n\t} else {\n\t\t$fmessage = $current_message;\n\t}\n\n\t$level = get_message_level($current_message);\n\n\tswitch ($level) {\n\t\tcase MESSAGE_LEVEL_NONE:\n\t\t\t$message = '<span>' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_INFO:\n\t\t\t$message = '<span class=\"deviceUp\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_WARN:\n\t\t\t$message = '<span class=\"deviceWarning\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_ERROR:\n\t\t\t$message = '<span class=\"deviceDown\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_CSRF:\n\t\t\t$message = '<span class=\"deviceDown\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tdefault;\n\t\t\t$message = '<span class=\"deviceUnknown\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t}\n\n\treturn $message;\n}\n\n/**\n * get_message_max_type - finds the message and returns its type\n *\n * @return - the message type 'info', 'warn', 'error' or 'csrf'\n */\nfunction get_message_max_type() {\n\tglobal $messages;\n\n\t$level = MESSAGE_LEVEL_NONE;\n\tif (isset($_SESSION['sess_messages'])) {\n\t\tif (is_array($_SESSION['sess_messages'])) {\n\t\t\tforeach ($_SESSION['sess_messages'] as $current_message_id => $current_message) {\n\t\t\t\t$current_level = get_message_level($current_message);\n\t\t\t\tif ($current_level == MESSAGE_LEVEL_NONE && isset($messages[$current_message_id])) {\n\t\t\t\t\t$current_level = get_message_level($messages[$current_message_id]);\n\t\t\t\t}\n\n\t\t\t\tif ($current_level != $level && $level != MESSAGE_LEVEL_NONE) {\n\t\t\t\t\t$level = MESSAGE_LEVEL_MIXED;\n\t\t\t\t} else {\n\t\t\t\t\t$level = $current_level;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $level;\n}\n\n/**\n * raise_message - mark a message to be displayed to the user once display_output_messages() is called\n *\n * @param $message_id - the ID of the message to raise as defined in $messages in 'include/global_arrays.php'\n */\nfunction raise_message($message_id, $message = '', $message_level = MESSAGE_LEVEL_NONE) {\n\tglobal $config, $messages, $no_http_headers;\n\n\t// This function should always exist, if not its an invalid install\n\tif (function_exists('session_status')) {\n\t\t$need_session = (session_status() == PHP_SESSION_NONE) && (!isset($no_http_headers));\n\t} else {\n\t\treturn false;\n\t}\n\n\tif (empty($message)) {\n\t\tif (array_key_exists($message_id, $messages)) {\n\t\t\t$predefined = $messages[$message_id];\n\t\t\tif (isset($predefined['message'])) {\n\t\t\t\t$message = $predefined['message'];\n\t\t\t} else {\n\t\t\t\t$message = $predefined;\n\t\t\t}\n\n\t\t\tif ($message_level == MESSAGE_LEVEL_NONE) {\n\t\t\t\t$message_level = get_message_level($predefined);\n\t\t\t}\n\t\t} elseif (isset($_SESSION[$message_id])) {\n\t\t\t$message = $_SESSION[$message_id];\n\t\t\t$message_level = MESSAGE_LEVEL_ERROR;\n\t\t} else {\n\t\t\t$message = __('Message Not Found.');\n\t\t\t$message_level = MESSAGE_LEVEL_ERROR;\n\t\t}\n\t}\n\n\tif ($need_session) {\n\t\tcacti_session_start();\n\t}\n\n\tif (!isset($_SESSION['sess_messages'])) {\n\t\t$_SESSION['sess_messages'] = array();\n\t}\n\n\t$_SESSION['sess_messages'][$message_id] = array('message' => $message, 'level' => $message_level);\n\n\tif ($need_session) {\n\t\tcacti_session_close();\n\t}\n}\n\n/**\n * raise_message_javascript - raises a message that will appear in the UI\n * as the result of an server side error that can not be captured\n * normally.\n *\n * @param  (string) The title for the dialog title bar\n * @param  (string) Header section for the message\n * @param  (string) The actual error message to display\n *\n * @return (void)\n */\nfunction raise_message_javascript($title, $header, $message) {\n\t?>\n\t<script type='text/javascript'>\n\tvar mixedReasonTitle = '<?php print $title;?>';\n\tvar mixedOnPage      = '<?php print $header;?>';\n\tsessionMessage   = {\n\t\tmessage: '<?php print $message;?>',\n\t\tlevel: MESSAGE_LEVEL_MIXED\n\t};\n\n\t$(function() {\n\t\tdisplayMessages();\n\t});\n\t</script>\n\t<?php\n\n\texit;\n}\n\n/**\n * display_output_messages - displays all of the cached messages from the raise_message() function and clears\n * the message cache\n */\nfunction display_output_messages() {\n\tglobal $messages;\n\n\t$omessage      = array();\n\t$debug_message = debug_log_return('new_graphs');\n\n\tif ($debug_message != '') {\n\t\t$omessage['level']    = MESSAGE_LEVEL_NONE;\n\t\t$omessage['message'] = $debug_message;\n\n\t\tdebug_log_clear('new_graphs');\n\t} elseif (isset($_SESSION['sess_messages'])) {\n\t\tif (!is_array($_SESSION['sess_messages'])) {\n\t\t\t$_SESSION['sess_messages'] = array('custom_error' => array('level' => 3, 'message' => $_SESSION['sess_messages']));\n\t\t}\n\n\t\t$omessage['level'] = get_message_max_type();\n\n\t\tforeach ($_SESSION['sess_messages'] as $current_message_id => $current_message) {\n\t\t\t$message = get_format_message_instance($current_message);\n\n\t\t\tif (!empty($message)) {\n\t\t\t\t$omessage['message'] = (isset($omessage['message']) && $omessage['message'] != '' ? $omessage['message'] . '<br>':'') . $message;\n\t\t\t} else {\n\t\t\t\tcacti_log(\"ERROR: Cacti Error Message Id '$current_message_id' Not Defined\", false, 'WEBUI');\n\t\t\t}\n\t\t}\n\t}\n\n\tclear_messages();\n\n\treturn json_encode($omessage);\n}\n\nfunction display_custom_error_message($message) {\n\traise_message('custom_error', $message);\n}\n\n/**\n * clear_messages - clears the message cache\n */\nfunction clear_messages() {\n\t// This function should always exist, if not its an invalid install\n\tif (function_exists('session_status')) {\n\t\t$need_session = (session_status() == PHP_SESSION_NONE) && (!isset($no_http_headers));\n\t} else {\n\t\treturn false;\n\t}\n\n\tif ($need_session) {\n\t\tcacti_session_start();\n\t}\n\n\tkill_session_var('sess_error_fields');\n\tkill_session_var('sess_messages');\n\n\tif ($need_session) {\n\t\tcacti_session_close();\n\t}\n}\n\n/**\n * kill_session_var - kills a session variable using unset()\n */\nfunction kill_session_var($var_name) {\n\t/* register_global = on: reset local settings cache so the user sees the new settings */\n\tunset($_SESSION[$var_name]);\n\n\t/* register_global = off: reset local settings cache so the user sees the new settings */\n\t/* session_unregister is deprecated in PHP 5.3.0, unset is sufficient */\n\tif (version_compare(PHP_VERSION, '5.3.0', '<')) {\n\t\tsession_unregister($var_name);\n\t} else {\n\t\tunset($var_name);\n\t}\n}\n\n/**\n * force_session_data - forces session data into the session if the session was closed for some reason\n */\nfunction force_session_data() {\n\t// This function should always exist, if not its an invalid install\n\tif (!function_exists('session_status')) {\n\t\treturn false;\n\t} elseif (session_status() == PHP_SESSION_NONE) {\n\t\t$data = $_SESSION;\n\n\t\tcacti_session_start();\n\n\t\t$_SESSION = $data;\n\n\t\tcacti_session_close();\n\t}\n}\n\n/**\n * array_rekey - changes an array in the form:\n *\n * '$arr[0] = array('id' => 23, 'name' => 'blah')'\n * to the form\n * '$arr = array(23 => 'blah')'\n *\n * @param $array - (array) the original array to manipulate\n * @param $key - the name of the key\n * @param $key_value - the name of the key value\n *\n * @return - the modified array\n */\nfunction array_rekey($array, $key, $key_value) {\n\t$ret_array = array();\n\n\tif (is_array($array)) {\n\t\tforeach ($array as $item) {\n\t\t\t$item_key = $item[$key];\n\n\t\t\tif (is_array($key_value)) {\n\t\t\t\tforeach ($key_value as $value) {\n\t\t\t\t\t$ret_array[$item_key][$value] = $item[$value];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$ret_array[$item_key] = $item[$key_value];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $ret_array;\n}\n\n/**\n * cacti_log_file - returns the log filename\n */\nfunction cacti_log_file() {\n\tglobal $config;\n\t$logfile        = read_config_option('path_cactilog');\n\tif ($logfile == '') {\n\t\t$logfile = $config['base_path'] . '/log/cacti.log';\n\t}\n\t$config['log_path'] = $logfile;\n\treturn $logfile;\n}\n\nfunction get_selective_log_level() {\n\tstatic $force_level = null;\n\n\tif ($force_level !== null) {\n\t\treturn $force_level;\n\t}\n\n\tif (isset($_SERVER['PHP_SELF'])) {\n\t\t$current_file = basename($_SERVER['PHP_SELF']);\n\t\t$dir_name     = dirname($_SERVER['PHP_SELF']);\n\t} elseif (isset($_SERVER['SCRIPT_NAME'])) {\n\t\t$current_file = basename($_SERVER['SCRIPT_NAME']);\n\t\t$dir_name     = dirname($_SERVER['SCRIPT_NAME']);\n\t} elseif (isset($_SERVER['SCRIPT_FILENAME'])) {\n\t\t$current_file = basename($_SERVER['SCRIPT_FILENAME']);\n\t\t$dir_name     = dirname($_SERVER['SCRIPT_FILENAME']);\n\t} else {\n\t\t$current_file = basename(__FILE__);\n\t\t$dir_name     = dirname(__FILE__);\n\t}\n\n\t$force_level = '';\n\t$debug_files = read_config_option('selective_debug');\n\tif ($debug_files != '') {\n\t\t$files = explode(',', $debug_files);\n\n\t\tif (array_search($current_file, $files) !== false) {\n\t\t\t$force_level = POLLER_VERBOSITY_DEBUG;\n\t\t}\n\t}\n\n\tif (strpos($dir_name, 'plugins') !== false) {\n\t\t$debug_plugins = read_config_option('selective_plugin_debug');\n\t\tif ($debug_plugins != '') {\n\t\t\t$debug_plugins = explode(',', $debug_plugins);\n\n\t\t\tforeach($debug_plugins as $myplugin) {\n\t\t\t\tif (strpos($dir_name, DIRECTORY_SEPARATOR . $myplugin) !== false) {\n\t\t\t\t\t$force_level = POLLER_VERBOSITY_DEBUG;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $force_level;\n}\n\n/**\n * cacti_log - logs a string to Cacti's log file or optionally to the browser\n *\n * @param $string - the string to append to the log file\n * @param $output - (bool) whether to output the log line to the browser using print() or not\n * @param $environ - (string) tells from where the script was called from\n * @param $level - (int) only log if above the specified log level\n */\nfunction cacti_log($string, $output = false, $environ = 'CMDPHP', $level = '') {\n\tglobal $config, $database_log;\n\n\tstatic $start = null;\n\n\tif ($start == null) {\n\t\t$start = microtime(true);\n\t}\n\n\tif (!isset($database_log)) {\n\t\t$database_log = false;\n\t}\n\n\t$last_log     = $database_log;\n\t$database_log = false;\n\t$force_level  = get_selective_log_level();\n\t$oprefix      = '';\n\t$omessage     = '';\n\n\t/* only log if the specific level is reached, developer debug is special low + specific devdbg calls */\n\tif ($force_level == '') {\n\t\tif ($level != '') {\n\t\t\t$logVerbosity = read_config_option('log_verbosity');\n\t\t\tif ($logVerbosity == POLLER_VERBOSITY_DEVDBG) {\n\t\t\t\tif ($level != POLLER_VERBOSITY_DEVDBG) {\n\t\t\t\t\tif ($level > POLLER_VERBOSITY_LOW) {\n\t\t\t\t\t\t$database_log = $last_log;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif ($level > $logVerbosity) {\n\t\t\t\t$database_log = $last_log;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tcacti_system_zone_set();\n\n\t/* fill in the current date for printing in the log */\n\tif (defined('CACTI_DATE_TIME_FORMAT')) {\n\t\t$date = date(CACTI_DATE_TIME_FORMAT);\n\t} else {\n\t\t$date = date('Y-m-d H:i:s');\n\t}\n\n\tcacti_browser_zone_set();\n\n\t/* determine how to log data */\n\t$logdestination = read_config_option('log_destination');\n\t$logfile        = cacti_log_file();\n\n\t/* format the message */\n\tif ($environ == 'POLLER') {\n\t\t$prefix = \"$date - \" . $environ . ': Poller[' . $config['poller_id'] . '] PID[' . getmypid() . '] ';\n\n\t\tif ($output) {\n\t\t\t$oprefix = sprintf('Total[%3.4f] ', microtime(true) - $start);\n\t\t}\n\t} else {\n\t\t$prefix  = \"$date - \" . $environ . ' ';\n\n\t\tif ($output) {\n\t\t\t$oprefix = $prefix;\n\t\t}\n\t}\n\n\t/* Log to Logfile */\n\t$message = clean_up_lines($string) . PHP_EOL;\n\n\tif ($output) {\n\t\t$omessage = $oprefix . $message;\n\t}\n\n\tif (($logdestination == 1 || $logdestination == 2) && read_config_option('log_verbosity') != POLLER_VERBOSITY_NONE) {\n\t\t/* print the data to the log (append) */\n\t\t$fp = @fopen($logfile, 'a');\n\n\t\tif ($fp) {\n\t\t\t$message = $prefix . $message;\n\t\t\t@fwrite($fp, $message);\n\t\t\tfclose($fp);\n\t\t}\n\t}\n\n\t/* Log to Syslog/Eventlog */\n\t/* Syslog is currently Unstable in Win32 */\n\tif ($logdestination == 2 || $logdestination == 3) {\n\t\t$log_type = '';\n\t\tif (strpos($string, 'ERROR:') !== false) {\n\t\t\t$log_type = 'err';\n\t\t} elseif (strpos($string, 'WARNING:') !== false) {\n\t\t\t$log_type = 'warn';\n\t\t} elseif (strpos($string, 'STATS:') !== false) {\n\t\t\t$log_type = 'stat';\n\t\t} elseif (strpos($string, 'NOTICE:') !== false) {\n\t\t\t$log_type = 'note';\n\t\t}\n\n\t\tif ($log_type != '') {\n\t\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t\topenlog('Cacti', LOG_NDELAY | LOG_PID, LOG_USER);\n\t\t\t} else {\n\t\t\t\topenlog('Cacti', LOG_NDELAY | LOG_PID, LOG_SYSLOG);\n\t\t\t}\n\n\t\t\tif ($log_type == 'err' && read_config_option('log_perror')) {\n\t\t\t\tsyslog(LOG_CRIT, $environ . ': ' . $string);\n\t\t\t} elseif ($log_type == 'warn' && read_config_option('log_pwarn')) {\n\t\t\t\tsyslog(LOG_WARNING, $environ . ': ' . $string);\n\t\t\t} elseif (($log_type == 'stat' || $log_type == 'note') && read_config_option('log_pstats')) {\n\t\t\t\tsyslog(LOG_INFO, $environ . ': ' . $string);\n\t\t\t}\n\n\t\t\tcloselog();\n\t\t}\n\t}\n\n\t/* print output to standard out if required */\n\tif ($output == true && isset($_SERVER['argv'][0])) {\n\t\tprint $omessage;\n\t}\n\n\t$database_log = $last_log;\n}\n\n/**\n * tail_file - Emulates the tail function with PHP native functions.\n * It is used in 0.8.6 to speed the viewing of the Cacti log file, which\n * can be problematic in the 0.8.6 branch.\n *\n * @param $file_name    - (char constant) the name of the file to tail\n * @param $line_cnt     - (int constant)  the number of lines to count\n * @param $message_type - (int constant) the type of message to return\n * @param $filter       - (char) the filtering expression to search for\n * @param $page_nr      - (int) the page we want to show rows for\n * @param $total_rows   - (int) the total number of rows in the logfile\n */\nfunction tail_file($file_name, $number_of_lines, $message_type = -1, $filter = '', &$page_nr = 1, &$total_rows = 0) {\n\tif (!file_exists($file_name)) {\n\t\ttouch($file_name);\n\t\treturn array();\n\t}\n\n\tif (!is_readable($file_name)) {\n\t\treturn array(__('Error %s is not readable', $file_name));\n\t}\n\n\t$filter = strtolower($filter);\n\n\t$fp = fopen($file_name, 'r');\n\n\t/* Count all lines in the logfile */\n\t$total_rows = 0;\n\twhile (($line = fgets($fp)) !== false) {\n\t\tif (determine_display_log_entry($message_type, $line, $filter)) {\n\t\t\t++$total_rows;\n\t\t}\n\t}\n\n\t// Reset the page count to 1 if the number of lines is exceeded\n\tif (($page_nr - 1) * $number_of_lines > $total_rows) {\n\t\tset_request_var('page', 1);\n\t\t$page_nr = 1;\n\t}\n\n\t/* rewind file pointer, to start all over */\n\trewind($fp);\n\n\t$start = $total_rows - ($page_nr * $number_of_lines);\n\t$end   = $start + $number_of_lines;\n\n\tif ($start < 0) {\n\t\t$start = 0;\n\t}\n\n\tforce_session_data();\n\n\t/* load up the lines into an array */\n\t$file_array = array();\n\t$i = 0;\n\twhile (($line = fgets($fp)) !== false) {\n\t\t$display = determine_display_log_entry($message_type, $line, $filter);\n\n\t\tif ($display === false) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($i < $start) {\n\t\t\t++$i;\n\t\t\tcontinue;\n\t\t}\n\t\tif ($i >= $end) {\n\t\t\tbreak;\n\t\t}\n\n\t\t++$i;\n\t\t$file_array[$i] = $line;\n\t}\n\n\tfclose($fp);\n\n\treturn $file_array;\n}\n\n/**\n * determine_display_log_entry - function to determine if we display the line\n *\n * @param $message_type\n * @param $line\n * @param $filter\n *\n * @return - should the entry be displayed\n */\nfunction determine_display_log_entry($message_type, $line, $filter) {\n\tstatic $thold_enabled = null;\n\n\tif ($thold_enabled == null) {\n\t\t$thold_enabled = api_plugin_is_enabled('thold');\n\t}\n\n\t/* determine if we are to display the line */\n\tswitch ($message_type) {\n\t\tcase 1: /* stats only */\n\t\t\t$display = (strpos($line, 'STATS') !== false);\n\n\t\t\tbreak;\n\t\tcase 2: /* warnings only */\n\t\t\t$display = (strpos($line, 'WARN') !== false);\n\n\t\t\tbreak;\n\t\tcase 3: /* warnings + */\n\t\t\t$display = (strpos($line, 'WARN') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'ERROR') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'DEBUG') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, ' SQL') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 4: /* errors only */\n\t\t\t$display = (strpos($line, 'ERROR') !== false);\n\n\t\t\tbreak;\n\t\tcase 5: /* errors + */\n\t\t\t$display = (strpos($line, 'ERROR') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'DEBUG') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, ' SQL') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 6: /* debug only */\n\t\t\t$display = (strpos($line, 'DEBUG') !== false && strpos($line, ' SQL ') === false);\n\n\t\t\tbreak;\n\t\tcase 7: /* sql calls only */\n\t\t\t$display = (strpos($line, ' SQL ') !== false);\n\n\t\t\tbreak;\n\t\tcase 8: /* AutoM8 Only */\n\t\t\t$display = (strpos($line, 'AUTOM8') !== false);\n\n\t\t\tbreak;\n\t\tcase 9: /* Non Stats */\n\t\t\t$display = (strpos($line, 'STATS') === false);\n\n\t\t\tbreak;\n \t\tcase 10: /* Boost Only*/\n\t\t\t$display = (strpos($line, 'BOOST') !== false);\n\n\t\t\tbreak;\n\t\tcase 11: /* device events + */\n\t\t\t$display = (strpos($line, 'HOST EVENT') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, '] is recovering!') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, '] is down!') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n \t\tcase 12: /* Assertions */\n\t\t\t$display = (strpos($line, 'ASSERT FAILED') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'Recache Event') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase -1: /* all */\n\t\t\t$display = true;\n\n\t\t\tbreak;\n\t\tdefault: /* all other lines */\n\t\t\tif ($thold_enabled) {\n\t\t\t\tif ($message_type == 99) {\n\t\t\t\t\t$display = (strpos($line, 'THOLD: Threshold') !== false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$display = true;\n\t\t\t}\n\t}\n\n\t/* match any lines that match the search string */\n\tif ($display === true && $filter != '') {\n\t\tif (stripos($line, $filter) !== false) {\n\t\t\treturn $line;\n\t\t} elseif (validate_is_regex($filter) && preg_match('/' . $filter . '/i', $line)) {\n\t\t\treturn $line;\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn $display;\n}\n\n/**\n * update_host_status - updates the host table with information about its status.\n * It will also output to the appropriate log file when an event occurs.\n *\n * @param $status - (int constant) the status of the host (Up/Down)\n * @param $host_id - (int) the host ID for the results\n * @param $ping - (class array) results of the ping command.\n */\nfunction update_host_status($status, $host_id, &$ping, $ping_availability, $print_data_to_stdout) {\n\t$issue_log_message   = false;\n\t$ping_failure_count  = read_config_option('ping_failure_count');\n\t$ping_recovery_count = read_config_option('ping_recovery_count');\n\n\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\n\t/* initialize fail and recovery dates correctly */\n\tif ($host['status_fail_date'] == '') {\n\t\t$host['status_fail_date'] = strtotime('0000-00-00 00:00:00');\n\t}\n\n\tif ($host['status_rec_date'] == '') {\n\t\t$host['status_rec_date'] = strtotime('0000-00-00 00:00:00');\n\t}\n\n\tif ($status == HOST_DOWN) {\n\t\t/* Set initial date down. BUGFIX */\n\t\tif (empty($host['status_fail_date'])) {\n\t\t\t$host['status_fail_date'] = time();\n\t\t}\n\n\t\t/* update total polls, failed polls and availability */\n\t\t$host['failed_polls']++;\n\t\t$host['total_polls']++;\n\t\t$host['availability'] = 100 * ($host['total_polls'] - $host['failed_polls']) / $host['total_polls'];\n\n\t\t/* determine the error message to display */\n\t\tif (($ping_availability == AVAIL_SNMP_AND_PING) || ($ping_availability == AVAIL_SNMP_OR_PING)) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t/* snmp version 1/2 without community string assume SNMP test to be successful\n\t\t\t\t   due to backward compatibility issues */\n\t\t\t\t$host['status_last_error'] = $ping->ping_response;\n\t\t\t} else {\n\t\t\t\t$host['status_last_error'] = $ping->snmp_response . ', ' . $ping->ping_response;\n\t\t\t}\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t$host['status_last_error'] = 'Device does not require SNMP';\n\t\t\t} else {\n\t\t\t\t$host['status_last_error'] = $ping->snmp_response;\n\t\t\t}\n\t\t} else {\n\t\t\t$host['status_last_error'] = $ping->ping_response;\n\t\t}\n\n\t\t/* determine if to send an alert and update remainder of statistics */\n\t\tif ($host['status'] == HOST_UP) {\n\t\t\t/* increment the event failure count */\n\t\t\t$host['status_event_count']++;\n\n\t\t\t/* if it's time to issue an error message, indicate so */\n\t\t\tif ($host['status_event_count'] >= $ping_failure_count) {\n\t\t\t\t/* host is now down, flag it that way */\n\t\t\t\t$host['status'] = HOST_DOWN;\n\n\t\t\t\t$issue_log_message = true;\n\n\t\t\t\t/* update the failure date only if the failure count is 1 */\n\t\t\t\tif ($host['status_event_count'] == $ping_failure_count) {\n\t\t\t\t\t$host['status_fail_date'] = time();\n\t\t\t\t}\n\t\t\t/* host is down, but not ready to issue log message */\n\t\t\t} else {\n\t\t\t\t/* host down for the first time, set event date */\n\t\t\t\tif ($host['status_event_count'] == $ping_failure_count) {\n\t\t\t\t\t$host['status_fail_date'] = time();\n\t\t\t\t}\n\t\t\t}\n\t\t/* host is recovering, put back in failed state */\n\t\t} elseif ($host['status'] == HOST_RECOVERING) {\n\t\t\t$host['status_event_count'] = 1;\n\t\t\t$host['status'] = HOST_DOWN;\n\t\t/* host was unknown and now is down */\n\t\t} elseif ($host['status'] == HOST_UNKNOWN) {\n\t\t\t$host['status'] = HOST_DOWN;\n\t\t\t$host['status_event_count'] = 0;\n\t\t} else {\n\t\t\t$host['status_event_count']++;\n\t\t}\n\t/* host is up!! */\n\t} else {\n\t\t/* update total polls and availability */\n\t\t$host['total_polls']++;\n\t\t$host['availability'] = 100 * ($host['total_polls'] - $host['failed_polls']) / $host['total_polls'];\n\n\t\tif ((($ping_availability == AVAIL_SNMP_AND_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP_OR_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP)) &&\n\t\t\t(!is_numeric($ping->snmp_status))) {\n\t\t\t$ping->snmp_status = 0.000;\n\t\t}\n\n\t\tif ((($ping_availability == AVAIL_SNMP_AND_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP_OR_PING) ||\n\t\t\t($ping_availability == AVAIL_PING)) &&\n\t\t\t(!is_numeric($ping->ping_status))) {\n\t\t\t$ping->ping_status = 0.000;\n\t\t}\n\n\t\t/* determine the ping statistic to set and do so */\n\t\tif (($ping_availability == AVAIL_SNMP_AND_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP_OR_PING)) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t$ping_time = 0.000;\n\t\t\t} else {\n\t\t\t\t/* calculate the average of the two times */\n\t\t\t\t$ping_time = ($ping->snmp_status + $ping->ping_status) / 2;\n\t\t\t}\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t$ping_time = 0.000;\n\t\t\t} else {\n\t\t\t\t$ping_time = $ping->snmp_status;\n\t\t\t}\n\t\t} elseif ($ping_availability == AVAIL_NONE) {\n\t\t\t$ping_time = 0.000;\n\t\t} else {\n\t\t\t$ping_time = $ping->ping_status;\n\t\t}\n\n\t\t/* update times as required */\n\t\tif (is_numeric($ping_time)) {\n\t\t\t$host['cur_time'] = $ping_time;\n\n\t\t\t/* maximum time */\n\t\t\tif ($ping_time > $host['max_time']) {\n\t\t\t\t$host['max_time'] = $ping_time;\n\t\t\t}\n\n\t\t\t/* minimum time */\n\t\t\tif ($ping_time < $host['min_time']) {\n\t\t\t\t$host['min_time'] = $ping_time;\n\t\t\t}\n\n\t\t\t/* average time */\n\t\t\t$host['avg_time'] = (($host['total_polls'] - 1 - $host['failed_polls'])\n\t\t\t\t* $host['avg_time'] + $ping_time) / ($host['total_polls'] - $host['failed_polls']);\n\t\t}\n\n\t\t/* the host was down, now it's recovering */\n\t\tif (($host['status'] == HOST_DOWN) || ($host['status'] == HOST_RECOVERING )) {\n\t\t\t/* just up, change to recovering */\n\t\t\tif ($host['status'] == HOST_DOWN) {\n\t\t\t\t$host['status'] = HOST_RECOVERING;\n\t\t\t\t$host['status_event_count'] = 1;\n\t\t\t} else {\n\t\t\t\t$host['status_event_count']++;\n\t\t\t}\n\n\t\t\t/* if it's time to issue a recovery message, indicate so */\n\t\t\tif ($host['status_event_count'] >= $ping_recovery_count) {\n\t\t\t\t/* host is up, flag it that way */\n\t\t\t\t$host['status'] = HOST_UP;\n\n\t\t\t\t$issue_log_message = true;\n\n\t\t\t\t/* update the recovery date only if the recovery count is 1 */\n\t\t\t\tif ($host['status_event_count'] == $ping_recovery_count) {\n\t\t\t\t\t$host['status_rec_date'] = time();\n\t\t\t\t}\n\n\t\t\t\t/* reset the event counter */\n\t\t\t\t$host['status_event_count'] = 0;\n\t\t\t\t/* host is recovering, but not ready to issue log message */\n\t\t\t} else {\n\t\t\t\t/* host recovering for the first time, set event date */\n\t\t\t\tif ($host['status_event_count'] == $ping_recovery_count) {\n\t\t\t\t\t$host['status_rec_date'] = time();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/* host was unknown and now is up */\n\t\t\t$host['status'] = HOST_UP;\n\t\t\t$host['status_event_count'] = 0;\n\t\t}\n\t}\n\t/* if the user wants a flood of information then flood them */\n\tif (($host['status'] == HOST_UP) || ($host['status'] == HOST_RECOVERING)) {\n\t\t/* log ping result if we are to use a ping for reachability testing */\n\t\tif ($ping_availability == AVAIL_SNMP_AND_PING) {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\tcacti_log(\"Device[$host_id] SNMP: Device does not require SNMP\", $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\t} else {\n\t\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t}\n\t} else {\n\t\tif ($ping_availability == AVAIL_SNMP_AND_PING) {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t} else {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t}\n\t}\n\n\t/* if there is supposed to be an event generated, do it */\n\tif ($issue_log_message) {\n\t\tif ($host['status'] == HOST_DOWN) {\n\t\t\tcacti_log(\"Device[$host_id] ERROR: HOST EVENT: Device is DOWN Message: \" . $host['status_last_error'], $print_data_to_stdout);\n\t\t} else {\n\t\t\tcacti_log(\"Device[$host_id] NOTICE: HOST EVENT: Device Returned FROM DOWN State: \", $print_data_to_stdout);\n\t\t}\n\t}\n\n\tdb_execute_prepared('UPDATE host SET\n\t\tstatus = ?,\n\t\tstatus_event_count = ?,\n\t\tstatus_fail_date = FROM_UNIXTIME(?),\n\t\tstatus_rec_date = FROM_UNIXTIME(?),\n\t\tstatus_last_error = ?,\n\t\tmin_time = ?,\n\t\tmax_time = ?,\n\t\tcur_time = ?,\n\t\tavg_time = ?,\n\t\ttotal_polls = ?,\n\t\tfailed_polls = ?,\n\t\tavailability = ?\n\t\tWHERE hostname = ?\n\t\tAND deleted = \"\"',\n\t\tarray(\n\t\t\t$host['status'],\n\t\t\t$host['status_event_count'],\n\t\t\t$host['status_fail_date'],\n\t\t\t$host['status_rec_date'],\n\t\t\t$host['status_last_error'],\n\t\t\t$host['min_time'],\n\t\t\t$host['max_time'],\n\t\t\t$host['cur_time'],\n\t\t\t$host['avg_time'],\n\t\t\t$host['total_polls'],\n\t\t\t$host['failed_polls'],\n\t\t\t$host['availability'],\n\t\t\t$host['hostname']\n\t\t)\n\n\t);\n}\n\n/**\n * is_hexadecimal - test whether a string represents a hexadecimal number,\n * ignoring space and tab, and case insensitive.\n *\n * @param $result - the string to test\n * @param 1 if the argument is hex, 0 otherwise, and false on error\n */\nfunction is_hexadecimal($result) {\n\t$hexstr = str_replace(array(' ', '-'), ':', trim($result));\n\n\t$parts = explode(':', $hexstr);\n\tforeach($parts as $part) {\n\t\tif (strlen($part) != 2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (ctype_xdigit($part) == false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * strip_domain - removes the domain from a hostname\n *\n * @param $hostname - the hostname for a device\n *\n * @return - the stripped hostname\n */\nfunction strip_domain($hostname) {\n\tif (is_ipaddress($hostname)) {\n\t\treturn $hostname;\n\t} elseif (read_config_option('strip_domain') == 'on') {\n\t\t$parts = explode('.', $hostname);\n\n\t\treturn $parts[0];\n\t} else {\n\t\treturn $hostname;\n\t}\n}\n\n\n/**\n * is_mac_address - determines if the result value is a mac address\n *\n * @param $result - some string to be evaluated\n *\n * @return - either to result is a mac address of not\n */\nfunction is_mac_address($result) {\n\tif (!defined('FILTER_VALIDATE_MAC')) {\n\t\tif (preg_match('/^([0-9a-f]{1,2}[\\.:-]) {5}([0-9a-f]{1,2})$/i', $result)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn filter_var($result, FILTER_VALIDATE_MAC);\n\t}\n}\n\nfunction is_hex_string(&$result) {\n\tif ($result == '') {\n\t\treturn false;\n\t}\n\n\t$compare = strtolower($result);\n\n\t/* strip off the 'Hex:, Hex-, and Hex-STRING:'\n\t * Hex- is considered due to the stripping of 'String:' in\n\t * lib/snmp.php\n\t */\n\tif (substr($compare, 0, 4) == 'hex-') {\n\t\t$check = trim(str_ireplace('hex-', '', $result));\n\t} elseif (substr($compare, 0, 11) == 'hex-string:') {\n\t\t$check = trim(str_ireplace('hex-string:', '', $result));\n\t} else {\n\t\treturn false;\n\t}\n\n\t$parts = explode(' ', $check);\n\n\t/* assume if something is a hex string\n\t   it will have a length > 1 */\n\tif (cacti_sizeof($parts) == 1) {\n\t\treturn false;\n\t}\n\n\tforeach($parts as $part) {\n\t\tif (strlen($part) != 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (ctype_xdigit($part) == false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$result = $check;\n\n\treturn true;\n}\n\n/**\n * prepare_validate_result - determines if the result value is valid or not.  If not valid returns a \"U\"\n *\n * @param $result - the result from the poll, the result can be modified in the call\n *\n * @return - either to result is valid or not\n */\nfunction prepare_validate_result(&$result) {\n\t/* first trim the string */\n\t$result = trim($result, \"'\\\"\\n\\r\");\n\n\t/* clean off ugly non-numeric data */\n\tif (is_numeric($result)) {\n\t\tdsv_log('prepare_validate_result','data is numeric');\n\t\treturn true;\n\t} elseif ($result == 'U') {\n\t\tdsv_log('prepare_validate_result', 'data is U');\n\t\treturn true;\n\t} elseif (is_hexadecimal($result)) {\n\t\tdsv_log('prepare_validate_result', 'data is hex');\n\t\treturn hexdec($result);\n\t} elseif (substr_count($result, ':') || substr_count($result, '!')) {\n\t\t/* looking for name value pairs */\n\t\tif (substr_count($result, ' ') == 0) {\n\t\t\tdsv_log('prepare_validate_result', 'data has no spaces');\n\t\t\treturn true;\n\t\t} else {\n\t\t\t$delim_cnt = 0;\n\t\t\tif (substr_count($result, ':')) {\n\t\t\t\t$delim_cnt = substr_count($result, ':');\n\t\t\t} elseif (strstr($result, '!')) {\n\t\t\t\t$delim_cnt = substr_count($result, '!');\n\t\t\t}\n\n\t\t\t$space_cnt = substr_count(trim($result), ' ');\n\t\t\tdsv_log('prepare_validate_result', \"data has $space_cnt spaces and $delim_cnt fields which is \" . (($space_cnt+1 == $delim_cnt) ? 'NOT ' : '') . ' okay');\n\n\t\t\treturn ($space_cnt+1 == $delim_cnt);\n\t\t}\n\t} else {\n\t\t$result = strip_alpha($result);\n\n\t\tif ($result === false) {\n\t\t\t$result = 'U';\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\n/**\n * strip_alpha - remove non-numeric data from a string and return the numeric part\n *\n * @param $string - the string to be evaluated\n *\n * @return - either the numeric value or false if not numeric\n */\nfunction strip_alpha($string) {\n\t/* strip all non numeric data */\n\t$string = trim(preg_replace('/[^0-9,.+-]/', '', $string));\n\n\t/* check the easy cases first */\n\t/* it has no delimiters, and no space, therefore, must be numeric */\n\tif (is_numeric($string) || is_float($string)) {\n\t\treturn $string;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * is_valid_pathname - takes a pathname are verifies it matches file name rules\n *\n * @param $path - the pathname to be tested\n *\n * @return - either true or false\n*/\nfunction is_valid_pathname($path) {\n\tif (preg_match('/^([a-zA-Z0-9\\_\\.\\-\\\\\\:\\/]+)$/', trim($path))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * dsv_log - provides debug logging when tracing Graph/Data Source creation\n *\n * @param $message - the message to output to the log\n * @param $data  - the data to be carried with the message\n*/\nfunction dsv_log($message,$data) {\n\tif (read_config_option('data_source_trace') == 'on') {\n\t\tcacti_log(($message . ' = ') . (is_array($data) ? json_encode($data) : $data), false, 'DSTRACE');\n\t}\n}\n\n/**\n * test_data_sources\n *\n * Tests all data sources to confirm that it returns valid data.  This\n * function is used by automation to prevent the creation of graphs\n * that will never generate data.\n *\n * @param $graph_template_id - The Graph Template to test\n * @param $host_id - The Host to test\n *\n * @return boolean true or false\n */\nfunction test_data_sources($graph_template_id, $host_id, $snmp_query_id = 0, $snmp_index = '', $values = array()) {\n\t$data_template_ids = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT DISTINCT data_template_id\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\tON gti.task_item_id = dtr.id\n\t\t\tWHERE gti.hash != \"\"\n\t\t\tAND gti.local_graph_id = 0\n\t\t\tAND dtr.local_data_id = 0\n\t\t\tAND gti.graph_template_id = ?',\n\t\t\tarray($graph_template_id)),\n\t\t'data_template_id', 'data_template_id'\n\t);\n\n\t$test_source = db_fetch_cell_prepared('SELECT test_source\n\t\tFROM graph_templates\n\t\tWHERE id = ?',\n\t\tarray($graph_template_id));\n\n\tif (cacti_sizeof($data_template_ids) && $test_source == 'on') {\n\t\tforeach($data_template_ids as $dt) {\n\t\t\tdsv_log(\"test_data_source\", [ 'dt' => $dt, 'host_id' => $host_id, 'snmp_query_id' => $snmp_query_id, 'snmp_index' => $snmp_index, 'values' => $values]);\n\t\t\tif (!test_data_source($dt, $host_id, $snmp_query_id, $snmp_index, $values)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * test_data_source\n *\n * Tests a single data source to confirm that it returns valid data.  This\n * function is used by automation to prevent the creation of graphs\n * that will never generate data.\n *\n * @param $graph_template_id - The Graph Template to test\n * @param $host_id - The Host to test\n *\n * @return boolean true or false\n */\nfunction test_data_source($data_template_id, $host_id, $snmp_query_id = 0, $snmp_index = '', $suggested_vals = array()) {\n\tglobal $called_by_script_server;\n\n\t$called_by_script_server = true;\n\n\tdsv_log('test_data_source', [ 'data_template_id' => $data_template_id, 'host_id' => $host_id, 'snmp_query_id' => $snmp_query_id, 'snmp_index' => $snmp_index, 'suggested_vals' => $suggested_vals]);\n\t$data_input = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\tdi.id, di.type_id, dtd.id AS data_template_data_id,\n\t\tdtd.data_template_id, dtd.active, dtd.rrd_step, di.name\n\t\tFROM data_template_data AS dtd\n\t\tINNER JOIN data_input AS di\n\t\tON dtd.data_input_id=di.id\n\t\tWHERE dtd.local_data_id = 0\n\t\tAND dtd.data_template_id = ?',\n\t\tarray($data_template_id));\n\n\tdsv_log('data_input', $data_input);\n\n\t$host = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . ' *\n\t\tFROM host\n\t\tWHERE id = ?',\n\t\tarray($host_id));\n\n\tdsv_log('host', $host);\n\n\t$data_template_data_id = 0;\n\n\tif (cacti_sizeof($data_input) && $data_input['active'] == 'on') {\n\t\t$data_template_data_id = $data_input['data_template_data_id'];\n\t\t/* we have to perform some additional sql queries if this is a 'query' */\n\t\tif (($data_input['type_id'] == DATA_INPUT_TYPE_SNMP_QUERY) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_SCRIPT_QUERY) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER)) {\n\n\t\t\t$field = data_query_field_list($data_template_data_id);\n\t\t\tdsv_log('query field', $field);\n\n\t\t\t$params   = array();\n\t\t\t$params[] = $data_input['data_template_id'];\n\n\t\t\tif ($field['output_type'] != '') {\n\t\t\t\t$output_type_sql = ' AND sqgr.snmp_query_graph_id = ?';\n\t\t\t\t$params[] = $field['output_type'];\n\t\t\t} else {\n\t\t\t\t$output_type_sql = '';\n\t\t\t}\n\n\t\t\t$outputs_sql = 'SELECT DISTINCT ' . SQL_NO_CACHE . \"\n\t\t\t\tsqgr.snmp_field_name, dtr.id as data_template_rrd_id\n\t\t\t\tFROM snmp_query_graph_rrd AS sqgr\n\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\tON sqgr.data_template_rrd_id = dtr.id\n\t\t\t\tWHERE sqgr.data_template_id = ?\n\t\t\t\tAND dtr.local_data_id = 0\n\t\t\t\t$output_type_sql\n\t\t\t\tORDER BY dtr.id\";\n\n\t\t\tdsv_log('outputs_sql', $outputs_sql);\n\t\t\tdsv_log('outputs_params', $params);\n\n\t\t\t$outputs = db_fetch_assoc_prepared($outputs_sql, $params);\n\n\t\t\tdsv_log('outputs', $outputs);\n\t\t}\n\n\t\tif (($data_input['type_id'] == DATA_INPUT_TYPE_SCRIPT) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_PHP_SCRIPT_SERVER)) {\n\t\t\tif ($data_input['type_id'] == DATA_INPUT_TYPE_PHP_SCRIPT_SERVER) {\n\t\t\t\t$action = POLLER_ACTION_SCRIPT_PHP;\n\t\t\t} else {\n\t\t\t\t$action = POLLER_ACTION_SCRIPT;\n\t\t\t}\n\n\t\t\t$script_path = get_full_test_script_path($data_template_id, $host_id);\n\t\t\tdsv_log('script_path', $script_path);\n\n\t\t\t$num_output_fields_sql = 'SELECT ' . SQL_NO_CACHE . ' id\n\t\t\t\tFROM data_input_fields\n\t\t\t\tWHERE data_input_id = ?\n\t\t\t\tAND input_output = \"out\"\n\t\t\t\tAND update_rra=\"on\"';\n\t\t\tdsv_log('num_output_fields_sql',$num_output_fields_sql);\n\n\t\t\t$num_output_fields = cacti_sizeof(db_fetch_assoc_prepared($num_output_fields_sql, array($data_input['id'])));\n\t\t\tdsv_log('num_output_fields', $num_output_fields);\n\n\t\t\tif ($num_output_fields == 1) {\n\t\t\t\t$data_template_rrd_id = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . ' id\n\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\tWHERE local_data_id = 0\n\t\t\t\t\tAND hash != \"\"\n\t\t\t\t\tAND data_template_id = ?',\n\t\t\t\t\tarray($data_template_id));\n\n\t\t\t\t$data_source_item_name = get_data_source_item_name($data_template_rrd_id);\n\t\t\t} else {\n\t\t\t\t$data_source_item_name = '';\n\t\t\t}\n\n\t\t\tdsv_log('data_source_item_name', $data_source_item_name);\n\t\t\tif ($action == POLLER_ACTION_SCRIPT) {\n\t\t\t\tdsv_log('script_path', $script_path);\n\t\t\t\t$output = shell_exec($script_path);\n\t\t\t} else {\n\t\t\t\t// Script server is a bit more complicated\n\t\t\t\t$php   = read_config_option('path_php_binary');\n\t\t\t\t$parts = explode(' ', $script_path);\n\n\t\t\t\tdsv_log('parts', $parts);\n\t\t\t\tif (file_exists($parts[0])) {\n\t\t\t\t\tunset($parts[1]);\n\n\t\t\t\t\t$script = implode(' ', $parts);\n\n\t\t\t\t\tdsv_log('script', $script);\n\t\t\t\t\t$output = shell_exec(\"$php -q $script\");\n\t\t\t\t\tif ($output == '' || $output == false) {\n\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$output = 'U';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('output', $output);\n\t\t\tif (!is_numeric($output)) {\n\t\t\t\tif ($output == 'U') {\n\t\t\t\t\treturn false;\n\t\t\t\t} elseif (prepare_validate_result($output) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} elseif ($data_input['type_id'] == DATA_INPUT_TYPE_SNMP) {\n\t\t\t/* get host fields first */\n\t\t\t$host_fields_sql = 'SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code IN(\"hostname\",\"host_id\"))\n\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\tAND did.value != \"\"';\n\t\t\tdsv_log('host_fields_sql',$host_fields_sql);\n\t\t\tdsv_log('host_fields_sql_params', ['data_template_data_id' => $data_template_data_id]);\n\n\t\t\t$host_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared($host_fields_sql,\n\t\t\t\t\tarray($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\tdsv_log('SNMP host_fields', $host_fields);\n\n\t\t\t$data_template_data = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id = did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\tAND did.data_template_data_id = ?',\n\t\t\t\tarray($data_template_data_id));\n\n\t\t\tdsv_log('SNMP data_template_data', $data_template_data);\n\t\t\tif (cacti_sizeof($data_template_data)) {\n\t\t\t\tforeach ($data_template_data as $field) {\n\t\t\t\t\t$key   = $field['type_code'];\n\t\t\t\t\t$value = $field['value'];\n\t\t\t\t\tdsv_log('SNMP field', $field);\n\t\t\t\t\t//dsv_log('SNMP suggested_val', $suggested_vals['custom_data'][$data_template_id]);\n\t\t\t\t\tif (!empty($suggested_vals['custom_data'][$data_template_id][$field['id']])) {\n\t\t\t\t\t\t$value = $suggested_vals['custom_data'][$data_template_id][$field['id']];\n\t\t\t\t\t\tdsv_log(\"SNMP value replace suggested $key\", $value);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($value) && !isset($host_fields[$key])) {\n\t\t\t\t\t\t$host_fields[$key] = $value;\n\t\t\t\t\t\tdsv_log(\"SNMP value replace template $key\", $value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('SNMP [updated] host_fields', $host_fields);\n\t\t\t$host = array_merge($host, $host_fields);\n\n\t\t\tdsv_log('SNMP [updated] host', $host);\n\n\t\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t$output = cacti_snmp_session_get($session, $host['snmp_oid']);\n\n\t\t\tdsv_log('SNMP output', $output);\n\n\t\t\tif (!is_numeric($output)) {\n\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} elseif ($data_input['type_id'] == DATA_INPUT_TYPE_SNMP_QUERY) {\n\t\t\t$snmp_queries = get_data_query_array($snmp_query_id);\n\n\t\t\t/* get host fields first */\n\t\t\t$host_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\t\tAND did.value != \"\"', array($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\tdsv_log('SNMP_QUERY host_fields', $host_fields);\n\n\t\t\t$data_template_data = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\tAND did.data_template_data_id = ?',\n\t\t\t\tarray($data_template_data_id));\n\n\t\t\tdsv_log('SNMP_QUERY data_template_data', $data_template_data);\n\n\t\t\tif (cacti_sizeof($data_template_data)) {\n\t\t\t\tforeach ($data_template_data as $field) {\n\t\t\t\t\t$key   = $field['type_code'];\n\t\t\t\t\t$value = $field['value'];\n\t\t\t\t\tdsv_log('SNMP_QUERY field', $field);\n\t\t\t\t\t//dsv_log('SNMP_QUERY suggested_val', $suggested_vals['custom_data'][$data_template_id]);\n\t\t\t\t\tif (!empty($suggested_vals['custom_data'][$data_template_id][$field['id']])) {\n\t\t\t\t\t\t$value = $suggested_vals['custom_data'][$data_template_id][$field['id']];\n\t\t\t\t\t\tdsv_log(\"SNMP_QUERY value replace suggested $key\", $value);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($value) && !isset($host_fields[$key])) {\n\t\t\t\t\t\t$host_fields[$key] = $value;\n\t\t\t\t\t\tdsv_log(\"SNMP_QUERY value replace template $key\", $value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('SNMP_QUERY [updated] host_fields', $host_fields);\n\n\t\t\t$host = array_merge($host, $host_fields);\n\n\t\t\tdsv_log('SNMP_QUERY [updated] host', $host);\n\n\t\t\tif (cacti_sizeof($outputs) && cacti_sizeof($snmp_queries)) {\n\t\t\t\tforeach ($outputs as $output) {\n\t\t\t\t\tif (isset($snmp_queries['fields'][$output['snmp_field_name']]['oid'])) {\n\t\t\t\t\t\t$oid = $snmp_queries['fields'][$output['snmp_field_name']]['oid'] . '.' . $snmp_index;\n\n\t\t\t\t\t\tif (isset($snmp_queries['fields'][$output['snmp_field_name']]['oid_suffix'])) {\n\t\t\t\t\t\t\t$oid .= '.' . $snmp_queries['fields'][$output['snmp_field_name']]['oid_suffix'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($oid)) {\n\t\t\t\t\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t\t\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t\t\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t\t\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $oid);\n\n\t\t\t\t\t\tif (!is_numeric($output)) {\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif (($data_input['type_id'] == DATA_INPUT_TYPE_SCRIPT_QUERY) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER)) {\n\t\t\t$script_queries = get_data_query_array($snmp_query_id);\n\n\t\t\t/* get host fields first */\n\t\t\t$host_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\t\tAND did.value != \"\"', array($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\tdsv_log('SCRIPT host_fields', $host_fields);\n\n\t\t\t$data_template_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\t\tAND did.value != \"\"', array($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\t$data_template_data = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\tAND did.data_template_data_id = ?',\n\t\t\t\tarray($data_template_data_id));\n\n\t\t\tdsv_log('SCRIPT data_template_data', $data_template_data);\n\n\t\t\tif (cacti_sizeof($data_template_data)) {\n\t\t\t\tforeach ($data_template_data as $field) {\n\t\t\t\t\t$key = $field['type_code'];\n\t\t\t\t\t$value = $field['value'];\n\t\t\t\t\tdsv_log('SCRIPT field', $field);\n\t\t\t\t\t//dsv_log('SCRIPT suggested_val', $suggested_vals['custom_data'][$data_template_id]);\n\t\t\t\t\tif (!empty($suggested_vals['custom_data'][$data_template_id][$field['id']])) {\n\t\t\t\t\t\t$value = $suggested_vals['custom_data'][$data_template_id][$field['id']];\n\t\t\t\t\t\tdsv_log(\"SCRIPT value replace suggested $key\", $value);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($value) && !isset($host_fields[$key])) {\n\t\t\t\t\t\t$host_fields[$key] = $value;\n\t\t\t\t\t\tdsv_log(\"SCRIPT value replace template $key\", $value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('SCRIPT [updated] host_fields', $host_fields);\n\n\t\t\t$host = array_merge($host, $host_fields);\n\n\t\t\tdsv_log('SCRIPT [updated] host', $host);\n\n\t\t\tif (cacti_sizeof($outputs) && cacti_sizeof($script_queries)) {\n\t\t\t\tforeach ($outputs as $output) {\n\t\t\t\t\tif (isset($script_queries['fields'][$output['snmp_field_name']]['query_name'])) {\n\t\t\t\t\t\t$identifier = $script_queries['fields'][$output['snmp_field_name']]['query_name'];\n\n\t\t\t\t\t\tif ($data_input['type_id'] == DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER) {\n\t\t\t\t\t\t\t$action = POLLER_ACTION_SCRIPT;\n\n\t\t\t\t\t\t\t$prepend = '';\n\t\t\t\t\t\t\tif (isset($script_queries['arg_prepend']) && $script_queries['arg_prepend'] != '') {\n\t\t\t\t\t\t\t\t$prepend = $script_queries['arg_prepend'];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$script_path = read_config_option('path_php_binary') . ' -q ' . get_script_query_path(trim($prepend . ' ' . $script_queries['arg_get'] . ' ' . $identifier . ' ' . $snmp_index), $script_queries['script_path'], $host_id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$action = POLLER_ACTION_SCRIPT;\n\t\t\t\t\t\t\t$script_path = get_script_query_path(trim((isset($script_queries['arg_prepend']) ? $script_queries['arg_prepend'] : '') . ' ' . $script_queries['arg_get'] . ' ' . $identifier . ' ' . $snmp_index), $script_queries['script_path'], $host_id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($script_path)) {\n\t\t\t\t\t\t$output = shell_exec($script_path);\n\n\t\t\t\t\t\tif (!is_numeric($output)) {\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * get_full_test_script_path - gets the full path to the script to execute to obtain data for a\n * given data template for testing. this function does not work on SNMP actions, only\n * script-based actions\n *\n * @param $data_template_id - (int) the ID of the data template\n *\n * @return - the full script path or (bool) false for an error\n */\nfunction get_full_test_script_path($data_template_id, $host_id) {\n\tglobal $config;\n\n\t$data_source = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\tdtd.id,\n\t\tdtd.data_input_id,\n\t\tdi.type_id,\n\t\tdi.input_string\n\t\tFROM data_template_data AS dtd\n\t\tINNER JOIN data_input AS di\n\t\tON dtd.data_input_id = di.id\n\t\tWHERE dtd.local_data_id = 0\n\t\tAND dtd.data_template_id = ?',\n\t\tarray($data_template_id));\n\n\t$data = db_fetch_assoc_prepared(\"SELECT \" . SQL_NO_CACHE . \" dif.data_name, did.value\n\t\tFROM data_input_fields AS dif\n\t\tLEFT JOIN data_input_data AS did\n\t\tON dif.id = did.data_input_field_id\n\t\tWHERE dif.data_input_id  = ?\n\t\tAND did.data_template_data_id = ?\n\t\tAND dif.input_output = 'in'\",\n\t\tarray($data_source['data_input_id'], $data_source['id']));\n\n\t$full_path = $data_source['input_string'];\n\n\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\n\tif (cacti_sizeof($data)) {\n\t\tforeach ($data as $item) {\n\t\t\tif (isset($host[$item['data_name']])) {\n\t\t\t\t$value = cacti_escapeshellarg($host[$item['data_name']]);\n\t\t\t} elseif ($item['data_name'] == 'host_id' || $item['data_name'] == 'hostid') {\n\t\t\t\t$value = cacti_escapeshellarg($host['id']);\n\t\t\t} else {\n\t\t\t\t$value = \"'\" . $item['value'] . \"'\";\n\t\t\t}\n\n\t\t\t$full_path = str_replace('<' . $item['data_name'] . '>', $value, $full_path);\n\t\t}\n\t}\n\n\t$search    = array('<path_cacti>', '<path_snmpget>', '<path_php_binary>');\n\t$replace   = array($config['base_path'], read_config_option('path_snmpget'), read_config_option('path_php_binary'));\n\t$full_path = str_replace($search, $replace, $full_path);\n\n\t/**\n\t * sometimes a certain input value will not have anything entered... null out these fields\n\t * in the input string so we don't mess up the script\n\t */\n\treturn preg_replace('/(<[A-Za-z0-9_]+>)+/', '', $full_path);\n}\n\n/**\n * get_full_script_path - gets the full path to the script to execute to obtain data for a\n * given data source. this function does not work on SNMP actions, only script-based actions\n *\n * @param $local_data_id - (int) the ID of the data source\n *\n * @return - the full script path or (bool) false for an error\n */\nfunction get_full_script_path($local_data_id) {\n\tglobal $config;\n\n\t$data_source = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . ' dtd.id, dtd.data_input_id,\n\t\tdi.type_id, di.input_string\n\t\tFROM data_template_data AS dtd\n\t\tINNER JOIN data_input AS di\n\t\tON dtd.data_input_id = di.id\n\t\tWHERE dtd.local_data_id = ?',\n\t\tarray($local_data_id));\n\n\t/* snmp-actions don't have paths */\n\tif (($data_source['type_id'] == DATA_INPUT_TYPE_SNMP) || ($data_source['type_id'] == DATA_INPUT_TYPE_SNMP_QUERY)) {\n\t\treturn false;\n\t}\n\n\t$data = db_fetch_assoc_prepared(\"SELECT \" . SQL_NO_CACHE . \" dif.data_name, did.value\n\t\tFROM data_input_fields AS dif\n\t\tLEFT JOIN data_input_data AS did\n\t\tON dif.id = did.data_input_field_id\n\t\tWHERE dif.data_input_id = ?\n\t\tAND did.data_template_data_id = ?\n\t\tAND dif.input_output = 'in'\",\n\t\tarray($data_source['data_input_id'], $data_source['id']));\n\n\t$full_path = $data_source['input_string'];\n\n\tif (cacti_sizeof($data)) {\n\t\tforeach ($data as $item) {\n\t\t\t$value = cacti_escapeshellarg($item['value']);\n\n\t\t\tif ($value == '') {\n\t\t\t\t$value = \"''\";\n\t\t\t}\n\n\t\t\t$full_path = str_replace('<' . $item['data_name'] . '>', $value, $full_path);\n\t\t}\n\t}\n\n\t$search    = array('<path_cacti>', '<path_snmpget>', '<path_php_binary>');\n\t$replace   = array($config['base_path'], read_config_option('path_snmpget'), read_config_option('path_php_binary'));\n\t$full_path = str_replace($search, $replace, $full_path);\n\n\t/* sometimes a certain input value will not have anything entered... null out these fields\n\tin the input string so we don't mess up the script */\n\treturn preg_replace('/(<[A-Za-z0-9_]+>)+/', '', $full_path);\n}\n\n/**\n * get_data_source_item_name - gets the name of a data source item or generates a new one if one does not\n * already exist\n *\n * @param $data_template_rrd_id - (int) the ID of the data source item\n *\n * @return - the name of the data source item or an empty string for an error\n */\nfunction get_data_source_item_name($data_template_rrd_id) {\n\tif (empty($data_template_rrd_id)) {\n\t\treturn '';\n\t}\n\n\t$data_source = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\tdtr.data_source_name, dtd.name\n\t\tFROM data_template_rrd AS dtr\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtr.local_data_id = dtd.local_data_id\n\t\tWHERE dtr.id = ?',\n\t\tarray($data_template_rrd_id)\n\t);\n\n\t/* use the cacti ds name by default or the user defined one, if entered */\n\tif (empty($data_source['data_source_name'])) {\n\t\t/* limit input to 19 characters */\n\t\t$data_source_name = clean_up_name($data_source['name']);\n\t\t$data_source_name = substr(strtolower($data_source_name), 0, (19-strlen($data_template_rrd_id))) . $data_template_rrd_id;\n\n\t\treturn $data_source_name;\n\t} else {\n\t\treturn $data_source['data_source_name'];\n\t}\n}\n\n/**\n * get_data_source_path - gets the full path to the .rrd file associated with a given data source\n *\n * @param $local_data_id - (int) the ID of the data source\n * @param $expand_paths - (bool) whether to expand the <path_rra> variable into its full path or not\n *\n * @return - the full path to the data source or an empty string for an error\n */\nfunction get_data_source_path($local_data_id, $expand_paths) {\n\tglobal $config;\n\tstatic $data_source_path_cache = array();\n\n\tif (empty($local_data_id)) {\n\t\treturn '';\n\t}\n\n\tif (isset($data_source_path_cache[$local_data_id])) {\n\t\treturn $data_source_path_cache[$local_data_id];\n\t}\n\n\t$data_source = db_fetch_row_prepared('SELECT name, data_source_path\n\t\tFROM data_template_data AS dtd\n\t\tWHERE local_data_id = ?',\n\t\tarray($local_data_id));\n\n\tif (cacti_sizeof($data_source)) {\n\t\tif (empty($data_source['data_source_path'])) {\n\t\t\t/* no custom path was specified */\n\t\t\t$data_source_path = generate_data_source_path($local_data_id);\n\t\t} elseif (!strstr($data_source['data_source_path'], '/')) {\n\t\t\t$data_source_path = '<path_rra>/' . $data_source['data_source_path'];\n\t\t} else {\n\t\t\t$data_source_path = $data_source['data_source_path'];\n\t\t}\n\n\t\t/* whether to show the \"actual\" path or the <path_rra> variable name (for edit boxes) */\n\t\tif ($expand_paths == true) {\n\t\t\t$data_source_path = str_replace('<path_rra>/', $config['rra_path'] . '/', $data_source_path);\n\t\t}\n\n\t\t$data_source_path_cache[$local_data_id] = $data_source_path;\n\n\t\treturn $data_source_path;\n\t}\n}\n\n/**\n * stri_replace - a case insensitive string replace\n *\n * @param $find - needle\n * @param $replace - replace needle with this\n * @param $string - haystack\n *\n * @return - the original string with '$find' replaced by '$replace'\n */\nfunction stri_replace($find, $replace, $string) {\n\t$parts = explode(strtolower($find), strtolower($string));\n\n\t$pos = 0;\n\n\t$findLength = strlen($find);\n\tforeach ($parts as $key => $part) {\n\t\t$partLength = strlen($part);\n\n\t\t$parts[$key] = substr($string, $pos, $partLength);\n\t\t$pos += $partLength + $findLength;\n\t}\n\n\treturn (join($replace, $parts));\n}\n\n/**\n * clean_up_lines - runs a string through a regular expression designed to remove\n * new lines and the spaces around them\n *\n * @param $string - the string to modify/clean\n *\n * @return - the modified string\n */\nfunction clean_up_lines($string) {\n\tif ($string != '') {\n\t\treturn preg_replace('/\\s*[\\r\\n]+\\s*/',' ', $string);\n\t} else {\n\t\treturn $string;\n\t}\n}\n\n/**\n * clean_up_name - runs a string through a series of regular expressions designed to\n * eliminate \"bad\" characters\n *\n * @param $string - the string to modify/clean\n *\n * @return - the modified string\n */\nfunction clean_up_name($string) {\n\tif ($string != '') {\n\t\t$string = preg_replace('/[\\s\\.]+/', '_', $string);\n\t\t$string = preg_replace('/[^a-zA-Z0-9_]+/', '', $string);\n\t\t$string = preg_replace('/_{2,}/', '_', $string);\n\t}\n\n\treturn $string;\n}\n\n/**\n * clean_up_file name - runs a string through a series of regular expressions designed to\n * eliminate \"bad\" characters\n *\n * @param $string - the string to modify/clean\n *\n * @return - the modified string\n */\nfunction clean_up_file_name($string) {\n\tif ($string != '') {\n\t\t$string = preg_replace('/[\\s\\.]+/', '_', $string);\n\t\t$string = preg_replace('/[^a-zA-Z0-9_-]+/', '', $string);\n\t\t$string = preg_replace('/_{2,}/', '_', $string);\n\t}\n\n\treturn $string;\n}\n\n/**\n * clean_up_path - takes any path and makes sure it contains the correct directory\n * separators based on the current operating system\n *\n * @param $path - the path to modify\n *\n * @return - the modified path\n */\nfunction clean_up_path($path) {\n\tglobal $config;\n\n\tif ($config['cacti_server_os'] == 'win32') {\n\t\treturn str_replace('/', \"\\\\\", $path);\n\t} elseif ($config['cacti_server_os'] == 'unix' || read_config_option('using_cygwin') == 'on' || read_config_option('storage_location')) {\n\t\treturn str_replace(\"\\\\\", '/', $path);\n\t} else {\n\t\treturn $path;\n\t}\n}\n\n/**\n * get_data_source_title - returns the title of a data source without using the title cache\n *\n * @param $local_data_id - (int) the ID of the data source to get a title for\n *\n * @return - the data source title\n */\nfunction get_data_source_title($local_data_id) {\n\t$data = db_fetch_row_prepared('SELECT\n\t\tdl.host_id, dl.snmp_query_id, dl.snmp_index, dl.data_template_id,\n\t\tdtd.name, dtd.id as template_id\n\t\tFROM data_local AS dl\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = dl.id\n\t\tWHERE dl.id = ?',\n\t\tarray($local_data_id));\n\n\t$title = 'Missing Datasource ' . $local_data_id;\n\tif (cacti_sizeof($data)) {\n\t\tif (strstr($data['name'], '|') !== false && $data['host_id'] > 0) {\n\t\t\t$data['name'] = substitute_data_input_data($data['name'], '', $local_data_id);\n\t\t\t$title = expand_title($data['host_id'], $data['snmp_query_id'], $data['snmp_index'], $data['name']);\n\t\t} else {\n\t\t\t$title = $data['name'];\n\t\t}\n\n\t\t// Is the data source linked to a template?  If so, make sure we have a template on the\n\t\t// LEFT JOIN since it may not find one.  Also, we can't check that they are the same ID\n\t\t// ID yet because there are two, one with a 0 local_data_id (base template) and one with\n\t\t// this source's id (instance of template).\n\t\tif ($data['data_template_id'] && !$data['template_id']) {\n\t\t\t$title .= ' (Bad template \"' . $data['data_template_id'] . '\")';\n\t\t}\n\t}\n\treturn $title;\n}\n\n/**\n * get_device_name - returns the description of the device in cacti host table\n *\n * @param $host_id - (int) the ID of the device to get a description for\n *\n * @return - the device name\n */\nfunction get_device_name($host_id) {\n\treturn db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($host_id));\n}\n\n/**\n * get_color - returns the hex color value from the cacti colors table\n *\n * @param $color_id - (int) the ID of the cacti color\n * @return - the hex color value\n *\n */\nfunction get_color($color_id) {\n\treturn db_fetch_cell_prepared('SELECT hex FROM colors WHERE id = ?', array($color_id));\n}\n\n/**\n * get_graph_title_cache - returns the title of the graph using the title cache\n *\n * @param $local_graph_id - (int) the ID of the graph to get the title for\n *\n * @return - the graph title\n */\nfunction get_graph_title_cache($local_graph_id) {\n\treturn db_fetch_cell_prepared('SELECT title_cache\n\t\tFROM graph_templates_graph\n\t\tWHERE local_graph_id = ?',\n\t\tarray($local_graph_id));\n}\n\n/**\n * get_graph_title - returns the title of a graph without using the title cache\n *\n * @param $local_graph_id - (int) the ID of the graph to get a title for\n *\n * @return - the graph title\n */\nfunction get_graph_title($local_graph_id) {\n\t$graph = db_fetch_row_prepared('SELECT gl.host_id, gl.snmp_query_id,\n\t\tgl.snmp_index, gtg.local_graph_id, gtg.t_title, gtg.title\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id = gl.id\n\t\tWHERE gl.id = ?',\n\t\tarray($local_graph_id));\n\n\tif (cacti_sizeof($graph)) {\n\t\tif (strstr($graph['title'], '|') !== false && $graph['host_id'] > 0 && empty($graph['t_title'])) {\n\t\t\t$graph['title'] = substitute_data_input_data($graph['title'], $graph, 0);\n\t\t\treturn expand_title($graph['host_id'], $graph['snmp_query_id'], $graph['snmp_index'], $graph['title']);\n\t\t} else {\n\t\t\treturn $graph['title'];\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n}\n\n/**\n * get_guest_account - return the guest account as defined in the system\n *   if there is one, else return 0.\n *\n * @return (int) the guest account if greater than 0\n */\nfunction get_guest_account() {\n\t$user = db_fetch_cell_prepared('SELECT id\n\t\tFROM user_auth\n\t\tWHERE username = ? OR id = ?',\n\t\tarray(read_config_option('guest_user'), read_config_option('guest_user')));\n\n\tif (empty($user)) {\n\t\treturn 0;\n\t} else {\n\t\treturn $user;\n\t}\n}\n\n/**\n * get_template_account - return the template account given a user.\n *   if a user is not given, provide the 'default' template account.\n *   This function is hookable by third party plugins.\n *\n * @param  (int|string) either the username or user_id of the user\n *\n * @return (int) the template account if one exist for the user\n */\nfunction get_template_account($user = '') {\n\tif ($user == '') {\n\t\t// no username or user_id passed, use default functionality\n\t\t$user = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ? OR id = ?',\n\t\t\tarray(read_config_option('user_template'), read_config_option('user_template')));\n\n\t\tif (empty($user)) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn $user;\n\t\t}\n\t} else {\n\t\t$template = api_plugin_hook_function('get_template_account', $user);\n\n\t\tif ($template == $user) {\n\t\t\t// no plugin present, use default functionality\n\t\t\t$user = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ? OR id = ?',\n\t\t\t\tarray(read_config_option('user_template'), read_config_option('user_template')));\n\n\t\t\tif (empty($user)) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn $user;\n\t\t\t}\n\t\t} elseif ($template > 0) {\n\t\t\t// plugin present and returned account\n\t\t\treturn $template;\n\t\t} else {\n\t\t\t// plugin present and returned no account\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\n/**\n * get_username - returns the username for the selected user\n *\n * @param $user_id - (int) the ID of the user\n *\n * @return - the username */\nfunction get_username($user_id) {\n\treturn db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($user_id));\n}\n\n/**\n * get_execution_user - returns the username of the running process\n *\n * @return - the username\n */\nfunction get_execution_user() {\n\tif (function_exists('posix_getpwuid')) {\n\t\t$user_info = posix_getpwuid(posix_geteuid());\n\n\t\treturn $user_info['name'];\n\t} else {\n\t\treturn exec('whoami');\n\t}\n}\n\n/**\n * generate_data_source_path - creates a new data source path from scratch using the first data source\n * item name and updates the database with the new value\n *\n * @param $local_data_id - (int) the ID of the data source to generate a new path for\n *\n * @return - the new generated path\n */\nfunction generate_data_source_path($local_data_id) {\n\tglobal $config;\n\n\tstatic $extended_paths = false;\n\tstatic $pattern = false;\n\n\tif ($extended_paths === false) {\n\t\t$extended_paths = read_config_option('extended_paths');\n\t}\n\n\tif ($pattern === false) {\n\t\t$pattern = read_config_option('extended_paths_type');\n\t}\n\n\t/* try any prepend the name with the host description */\n\t$data = db_fetch_row_prepared('SELECT dl.host_id, h.description, dl.snmp_query_id\n\t\tFROM host AS h\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.host_id = h.id\n\t\tAND dl.id = ?',\n\t\tarray($local_data_id));\n\n\tif (cacti_sizeof($data)) {\n\t\t$host_name     = $data['description'];\n\t\t$host_id       = $data['host_id'];\n\t\t$data_query_id = $data['snmp_query_id'];\n\t} else {\n\t\t$host_name     = 'undefinedhost';\n\t\t$host_id       = 0;\n\t\t$data_query_id = 0;\n\t}\n\n\t/* put it all together using the local_data_id at the end */\n\tif ($extended_paths == 'on') {\n\t\t$maxdirs = read_config_option('extended_paths_hashes');\n\t\tif (empty($maxdirs) || $maxdirs < 0 || !is_numeric($maxdirs)) {\n\t\t\t$maxdirs = 100;\n\t\t}\n\n\t\t$hash_id = $host_id % $maxdirs;\n\n\t\tif ($pattern == 'device' || $pattern == '') {\n\t\t\t$new_path = \"<path_rra>/$host_id/$local_data_id.rrd\";\n\t\t} elseif ($pattern == 'device_dq') {\n\t\t\t$new_path = \"<path_rra>/$host_id/$data_query_id/$local_data_id.rrd\";\n\t\t} elseif ($pattern == 'hash_device') {\n\t\t\t$new_path = \"<path_rra>/$hash_id/$host_id/$local_data_id.rrd\";\n\t\t} elseif ($pattern == 'hash_device_dq') {\n\t\t\t$new_path = \"<path_rra>/$hash_id/$host_id/$data_query_id/$local_data_id.rrd\";\n\t\t}\n\t} else {\n\t\t$host_part = strtolower(clean_up_file_name($host_name)) . '_';\n\n\t\t/* then try and use the internal DS name to identify it */\n\t\t$data_source_rrd_name = db_fetch_cell_prepared('SELECT data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id = ?\n\t\t\tORDER BY id\n\t\t\tLIMIT 1',\n\t\t\tarray($local_data_id)\n\t\t);\n\n\t\tif (!empty($data_source_rrd_name)) {\n\t\t\t$ds_part = strtolower(clean_up_file_name($data_source_rrd_name));\n\t\t} else {\n\t\t\t$ds_part = 'ds';\n\t\t}\n\n\t\t$new_path = \"<path_rra>/$host_part$ds_part\" . '_' . \"$local_data_id.rrd\";\n\t}\n\n\t/* update our changes to the db */\n\tdb_execute_prepared('UPDATE data_template_data SET data_source_path = ? WHERE local_data_id = ?', array($new_path, $local_data_id));\n\n\treturn $new_path;\n}\n\n/**\n * generate graph_best_cf - takes the requested consolidation function and maps against\n * the list of available consolidation functions for the consolidation functions and returns\n * the most appropriate.  Typically, this will be the requested value\n *\n *  @param $data_template_id\n *  @param $requested_cf\n *  @param $ds_step\n *\n *  @return - the best cf to use\n */\nfunction generate_graph_best_cf($local_data_id, $requested_cf, $ds_step = 60) {\n\tstatic $best_cf;\n\n\tif ($local_data_id > 0) {\n\t\t$avail_cf_functions = get_rrd_cfs($local_data_id);\n\n\t\tif (cacti_sizeof($avail_cf_functions)) {\n\t\t\t/* workaround until we have RRA presets in 0.8.8 */\n\t\t\t/* check through the cf's and get the best */\n\t\t\t/* if none was found, take the first */\n\t\t\t$best_cf = reset($avail_cf_functions);\n\n\t\t\tforeach($avail_cf_functions as $cf) {\n\t\t\t\tif ($cf == $requested_cf) {\n\t\t\t\t\t$best_cf = $requested_cf;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$best_cf = '1';\n\t\t}\n\t}\n\n\t/* if you can not figure it out return average */\n\treturn $best_cf;\n}\n\n/**\n * get_rrd_cfs - reads the RRDfile and gets the RRAs stored in it.\n *\n * @param $local_data_id\n *\n * @return - array of the CF functions\n */\nfunction get_rrd_cfs($local_data_id) {\n\tglobal $consolidation_functions;\n\tstatic $rrd_cfs = array();\n\n\tif (array_key_exists($local_data_id, $rrd_cfs)) {\n\t\treturn $rrd_cfs[$local_data_id];\n\t}\n\n\t$cfs = array();\n\n\t$rrdfile = get_data_source_path($local_data_id, true);\n\n\t$output = @rrdtool_execute(\"info $rrdfile\", false, RRDTOOL_OUTPUT_STDOUT);\n\n\t/* search for\n\t * \t\trra[0].cf = 'LAST'\n\t * or similar\n\t */\n\tif ($output != '') {\n\t\t$output = explode(\"\\n\", $output);\n\n\t\tif (cacti_sizeof($output)) {\n\t\t\tforeach($output as $line) {\n\t\t\t\tif (substr_count($line, '.cf')) {\n\t\t\t\t\t$values = explode('=',$line);\n\n\t\t\t\t\tif (!in_array(trim($values[1], '\" '), $cfs)) {\n\t\t\t\t\t\t$cfs[] = trim($values[1], '\" ');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$new_cfs = array();\n\n\tif (cacti_sizeof($cfs)) {\n\t\tforeach($cfs as $cf) {\n\t\t\tswitch($cf) {\n\t\t\tcase 'AVG':\n\t\t\tcase 'AVERAGE':\n\t\t\t\t$new_cfs[1] = array_search('AVERAGE', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\tcase 'MIN':\n\t\t\t\t$new_cfs[2] = array_search('MIN', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\tcase 'MAX':\n\t\t\t\t$new_cfs[3] = array_search('MAX', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\tcase 'LAST':\n\t\t\t\t$new_cfs[4] = array_search('LAST', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t$rrd_cfs[$local_data_id] = $new_cfs;\n\n\treturn $new_cfs;\n}\n\n/**\n * generate_graph_def_name - takes a number and turns each digit into its letter-based\n * counterpart for RRDtool DEF names (ex 1 -> a, 2 -> b, etc)\n *\n * @param $graph_item_id - (int) the ID to generate a letter-based representation of\n *\n * @return - a letter-based representation of the input argument\n */\nfunction generate_graph_def_name($graph_item_id) {\n\t$lookup_table = array('a','b','c','d','e','f','g','h','i','j');\n\n\t$result = '';\n\t$strValGII = strval($graph_item_id);\n\tfor ($i=0; $i<strlen($strValGII); $i++) {\n\t\t$result .= $lookup_table[substr($strValGII, $i, 1)];\n\t}\n\n\tif (preg_match('/^(cf|cdef|def)$/', $result)) {\n\t\treturn 'zz' . $result;\n\t} else {\n\t\treturn $result;\n\t}\n}\n\n/**\n * generate_data_input_field_sequences - re-numbers the sequences of each field associated\n * with a particular data input method based on its position within the input string\n *\n * @param $string - the input string that contains the field variables in a certain order\n * @param $data_input_id - (int) the ID of the data input method\n */\nfunction generate_data_input_field_sequences($string, $data_input_id) {\n\tglobal $config, $registered_cacti_names;\n\n\tif (preg_match_all('/<([_a-zA-Z0-9]+)>/', $string, $matches)) {\n\t\t$j = 0;\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names) == false) {\n\t\t\t\t$j++;\n\n\t\t\t\tdb_execute_prepared(\"UPDATE data_input_fields\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE data_input_id = ?\n\t\t\t\t\tAND input_output IN ('in')\n\t\t\t\t\tAND data_name = ?\",\n\t\t\t\t\tarray($j, $data_input_id, $matches[1][$i]));\n\t\t\t}\n\t\t}\n\n\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t}\n}\n\n/**\n * move_graph_group - takes a graph group (parent+children) and swaps it with another graph\n * group\n *\n * @param $graph_template_item_id - (int) the ID of the (parent) graph item that was clicked\n * @param $graph_group_array - (array) an array containing the graph group to be moved\n * @param $target_id - (int) the ID of the (parent) graph item of the target group\n * @param $direction - ('next' or 'previous') whether the graph group is to be swapped with\n *   group above or below the current group\n */\nfunction move_graph_group($graph_template_item_id, $graph_group_array, $target_id, $direction) {\n\t$graph_item = db_fetch_row_prepared('SELECT local_graph_id, graph_template_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray($graph_template_item_id));\n\n\tif (empty($graph_item['local_graph_id'])) {\n\t\t$sql_where = 'graph_template_id = ' . $graph_item['graph_template_id'] . ' AND local_graph_id = 0';\n\t} else {\n\t\t$sql_where = 'local_graph_id = ' . $graph_item['local_graph_id'];\n\t}\n\n\t/* get a list of parent+children of our target group */\n\t$target_graph_group_array = get_graph_group($target_id);\n\n\t/* if this \"parent\" item has no children, then treat it like a regular gprint */\n\tif (cacti_sizeof($target_graph_group_array) == 0) {\n\t\tif ($direction == 'next') {\n\t\t\tmove_item_down('graph_templates_item', $graph_template_item_id, $sql_where);\n\t\t} elseif ($direction == 'previous') {\n\t\t\tmove_item_up('graph_templates_item', $graph_template_item_id, $sql_where);\n\t\t}\n\n\t\treturn;\n\t}\n\n\t/* start the sequence at '1' */\n\t$sequence_counter = 1;\n\n\t$graph_items = db_fetch_assoc_prepared(\"SELECT id, sequence\n\t\tFROM graph_templates_item\n\t\tWHERE $sql_where\n\t\tORDER BY sequence\");\n\n\tif (cacti_sizeof($graph_items)) {\n\t\tforeach ($graph_items as $item) {\n\t\t\t/* check to see if we are at the \"target\" spot in the loop; if we are, update the sequences and move on */\n\t\t\tif ($target_id == $item['id']) {\n\t\t\t\tif ($direction == 'next') {\n\t\t\t\t\t$group_array1 = $target_graph_group_array;\n\t\t\t\t\t$group_array2 = $graph_group_array;\n\t\t\t\t} elseif ($direction == 'previous') {\n\t\t\t\t\t$group_array1 = $graph_group_array;\n\t\t\t\t\t$group_array2 = $target_graph_group_array;\n\t\t\t\t}\n\n\t\t\t\tforeach ($group_array1 as $graph_template_item_id) {\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\n\t\t\t\t\t/* propagate to ALL graphs using this template */\n\t\t\t\t\tif (empty($graph_item['local_graph_id'])) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\t\tWHERE local_graph_template_item_id = ?',\n\t\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\t\t\t\t\t}\n\n\t\t\t\t\t$sequence_counter++;\n\t\t\t\t}\n\n\t\t\t\tforeach ($group_array2 as $graph_template_item_id) {\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\n\t\t\t\t\t/* propagate to ALL graphs using this template */\n\t\t\t\t\tif (empty($graph_item['local_graph_id'])) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\t\tWHERE local_graph_template_item_id = ?',\n\t\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\t\t\t\t\t}\n\n\t\t\t\t\t$sequence_counter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* make sure to \"ignore\" the items that we handled above */\n\t\t\tif ((!isset($graph_group_array[$item['id']])) && (!isset($target_graph_group_array[$item['id']]))) {\n\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence_counter, $item['id']));\n\n\t\t\t\t$sequence_counter++;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * get_graph_group - returns an array containing each item in the graph group given a single\n * graph item in that group\n *\n * @param $graph_template_item_id - (int) the ID of the graph item to return the group of\n *\n * @return - (array) an array containing each item in the graph group\n */\nfunction get_graph_group($graph_template_item_id) {\n\tglobal $graph_item_types;\n\n\t$graph_item = db_fetch_row_prepared('SELECT graph_type_id, sequence, local_graph_id, graph_template_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray($graph_template_item_id));\n\n\t$params[] = $graph_item['sequence'];\n\n\tif (empty($graph_item['local_graph_id'])) {\n\t\t$params[] = $graph_item['graph_template_id'];\n\t\t$sql_where = 'graph_template_id = ? AND local_graph_id = 0';\n\t} else {\n\t\t$params[] = $graph_item['sequence'];\n\t\t$sql_where = 'local_graph_id = ?';\n\t}\n\n\t/* parents are LINE%, AREA%, and STACK%. If not return */\n\tif (!preg_match('/(LINE|AREA|STACK)/', $graph_item_types[$graph_item['graph_type_id']])) {\n\t\treturn array();\n\t}\n\n\t$graph_item_children_array = array();\n\n\t/* put the parent item in the array as well */\n\t$graph_item_children_array[$graph_template_item_id] = $graph_template_item_id;\n\n\t$graph_items = db_fetch_assoc_prepared(\"SELECT id, graph_type_id, text_format, hard_return\n\t\tFROM graph_templates_item\n\t\tWHERE sequence > ?\n\t\tAND $sql_where\n\t\tORDER BY sequence\",\n\t\t$params);\n\n\t$is_hard = false;\n\n\tif (cacti_sizeof($graph_items)) {\n\t\tforeach ($graph_items as $item) {\n\t\t\tif ($is_hard) {\n\t\t\t\treturn $graph_item_children_array;\n\t\t\t} elseif (strstr($graph_item_types[$item['graph_type_id']], 'GPRINT') !== false) {\n\t\t\t\t/* a child must be a GPRINT */\n\t\t\t\t$graph_item_children_array[$item['id']] = $item['id'];\n\n\t\t\t\tif ($item['hard_return'] == 'on') {\n\t\t\t\t\t$is_hard = true;\n\t\t\t\t}\n\t\t\t} elseif (strstr($graph_item_types[$item['graph_type_id']], 'COMMENT') !== false) {\n\t\t\t\tif (preg_match_all('/\\|([0-9]{1,2}):(bits|bytes):(\\d):(current|total|max|total_peak|all_max_current|all_max_peak|aggregate_max|aggregate_sum|aggregate_current|aggregate):(\\d)?\\|/', $item['text_format'], $matches, PREG_SET_ORDER)) {\n\t\t\t\t\t$graph_item_children_array[$item['id']] = $item['id'];\n\t\t\t\t} elseif (preg_match_all('/\\|sum:(\\d|auto):(current|total|atomic):(\\d):(\\d+|auto)\\|/', $item['text_format'], $matches, PREG_SET_ORDER)) {\n\t\t\t\t\t$graph_item_children_array[$item['id']] = $item['id'];\n\t\t\t\t} else {\n\t\t\t\t\t/* if not a GPRINT or special COMMENT then get out */\n\t\t\t\t\treturn $graph_item_children_array;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* if not a GPRINT or special COMMENT then get out */\n\t\t\t\treturn $graph_item_children_array;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $graph_item_children_array;\n}\n\n/**\n * get_graph_parent - returns the ID of the next or previous parent graph item id\n *\n * @param $graph_template_item_id - the ID of the current graph item\n * @param $direction - ('next' or 'previous') whether to find the next or previous parent\n *\n * @return - the ID of the next or previous parent graph item id\n */\nfunction get_graph_parent($graph_template_item_id, $direction) {\n\t$graph_item = db_fetch_row_prepared('SELECT sequence, local_graph_id, graph_template_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray($graph_template_item_id));\n\n\tif (empty($graph_item['local_graph_id'])) {\n\t\t$sql_where = 'graph_template_id = ' . $graph_item['graph_template_id'] . ' AND local_graph_id = 0';\n\t} else {\n\t\t$sql_where = 'local_graph_id = ' . $graph_item['local_graph_id'];\n\t}\n\n\tif ($direction == 'next') {\n\t\t$sql_operator = '>';\n\t\t$sql_order = 'ASC';\n\t} elseif ($direction == 'previous') {\n\t\t$sql_operator = '<';\n\t\t$sql_order = 'DESC';\n\t}\n\n\t$next_parent_id = db_fetch_cell(\"SELECT id\n\t\tFROM graph_templates_item\n\t\tWHERE sequence $sql_operator \" . $graph_item['sequence'] . \"\n\t\tAND graph_type_id IN (4, 5, 6, 7, 8, 20)\n\t\tAND $sql_where\n\t\tORDER BY sequence $sql_order\n\t\tLIMIT 1\");\n\n\tif (empty($next_parent_id)) {\n\t\treturn 0;\n\t} else {\n\t\treturn $next_parent_id;\n\t}\n}\n\n/**\n * get_item - returns the ID of the next or previous item id\n *\n * @param $tblname - the table name that contains the target id\n * @param $field - the field name that contains the target id\n * @param $startid - (int) the current id\n * @param $lmt_query - an SQL \"where\" clause to limit the query\n * @param $direction - ('next' or 'previous') whether to find the next or previous item id\n *\n * @return - (int) the ID of the next or previous item id\n */\nfunction get_item($tblname, $field, $startid, $lmt_query, $direction) {\n\tif ($direction == 'next') {\n\t\t$sql_operator = '>';\n\t\t$sql_order = 'ASC';\n\t} elseif ($direction == 'previous') {\n\t\t$sql_operator = '<';\n\t\t$sql_order = 'DESC';\n\t}\n\n\t$current_sequence = db_fetch_cell_prepared(\"SELECT $field\n\t\tFROM $tblname\n\t\tWHERE id = ?\",\n\t\tarray($startid));\n\n\t$new_item_id = db_fetch_cell(\"SELECT id\n\t\tFROM $tblname\n\t\tWHERE $field $sql_operator $current_sequence \" . ($lmt_query != '' ? \" AND $lmt_query\":\"\") . \"\n\t\tORDER BY $field $sql_order\n\t\tLIMIT 1\");\n\n\tif (empty($new_item_id)) {\n\t\treturn $startid;\n\t} else {\n\t\treturn $new_item_id;\n\t}\n}\n\n/**\n * get_sequence - returns the next available sequence id\n *\n * @param $id - (int) the current id\n * @param $field - the field name that contains the target id\n * @param $table_name - the table name that contains the target id\n * @param $group_query - an SQL \"where\" clause to limit the query\n *\n * @return - (int) the next available sequence id\n */\nfunction get_sequence($id, $field, $table_name, $group_query) {\n\tif (empty($id)) {\n\t\t$data = db_fetch_row(\"SELECT max($field)+1 AS seq\n\t\t\tFROM $table_name\n\t\t\tWHERE $group_query\");\n\n\t\tif ($data['seq'] == '') {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn $data['seq'];\n\t\t}\n\t} else {\n\t\t$data = db_fetch_row_prepared(\"SELECT $field\n\t\t\tFROM $table_name\n\t\t\tWHERE id = ?\",\n\t\t\tarray($id));\n\n\t\treturn $data[$field];\n\t}\n}\n\n/**\n * move_item_down - moves an item down by swapping it with the item below it\n *\n * @param $table_name - the table name that contains the target id\n * @param $current_id - (int) the current id\n * @param $group_query - an SQL \"where\" clause to limit the query\n */\nfunction move_item_down($table_name, $current_id, $group_query = '') {\n\t$next_item = get_item($table_name, 'sequence', $current_id, $group_query, 'next');\n\n\t$sequence = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($current_id));\n\n\t$sequence_next = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($next_item));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence_next, $current_id));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence, $next_item));\n}\n\n/**\n * move_item_up - moves an item down by swapping it with the item above it\n *\n * @param $table_name - the table name that contains the target id\n * @param $current_id - (int) the current id\n * @param $group_query - an SQL \"where\" clause to limit the query\n */\nfunction move_item_up($table_name, $current_id, $group_query = '') {\n\t$last_item = get_item($table_name, 'sequence', $current_id, $group_query, 'previous');\n\n\t$sequence = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($current_id));\n\n\t$sequence_last = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($last_item));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence_last, $current_id));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence, $last_item));\n}\n\n/**\n * exec_into_array - executes a command and puts each line of its output into\n * an array\n *\n * @param $command_line - the command to execute\n *\n * @return - (array) an array containing the command output\n */\nfunction exec_into_array($command_line) {\n\t$out = array();\n\t$err = 0;\n\texec($command_line,$out,$err);\n\n\treturn array_values($out);\n}\n\n/**\n * get_web_browser - determines the current web browser in use by the client\n *\n * @return - ('ie' or 'moz' or 'other')\n */\nfunction get_web_browser() {\n\tif (!empty($_SERVER['HTTP_USER_AGENT'])) {\n\t\tif (stristr($_SERVER['HTTP_USER_AGENT'], 'Mozilla') && (!(stristr($_SERVER['HTTP_USER_AGENT'], 'compatible')))) {\n\t\t\treturn 'moz';\n\t\t} elseif (stristr($_SERVER['HTTP_USER_AGENT'], 'MSIE')) {\n\t\t\treturn 'ie';\n\t\t} else {\n\t\t\treturn 'other';\n\t\t}\n\t} else {\n\t\treturn 'other';\n\t}\n}\n\n/**\n * draw_login_status - provides a consistent login status page for all pages that use it\n */\nfunction draw_login_status($using_guest_account = false) {\n\tglobal $config;\n\n\t$guest_account = get_guest_account();\n\t$auth_method   = read_config_option('auth_method');\n\n\tif (isset($_SESSION['sess_user_id']) && $_SESSION['sess_user_id'] === $guest_account) {\n\t\tapi_plugin_hook('nav_login_before');\n\n\t\tprint __('Logged in as') . \" <span id='user' class='user usermenuup'>\". __('guest') . \"</span></div><div><ul class='menuoptions' style='display:none;'>\" . ($auth_method != 2 ? \"<li><a href='\" . $config['url_path'] . \"index.php?login=true'>\" . __('Login as Regular User') . \"</a></li>\":\"<li><a href='#'>\" . __('Logged in a Guest') . '</a></li>');\n\n\t\tprint \"<li class='menuHr'><hr class='menu'></li>\";\n\t\tprint \"<li id='userCommunity'><a href='https://forums.cacti.net' target='_blank' rel='noopener'>\" . __('User Community') . \"</a></li>\";\n\t\tprint \"<li id='userDocumentation'><a href='https://github.com/Cacti/documentation/blob/develop/README.md' target='_blank' rel='noopener'>\" . __('Documentation') . \"</a></li>\";\n\t\tprint \"</ul>\";\n\n\t\tapi_plugin_hook('nav_login_after');\n\t} elseif (isset($_SESSION['sess_user_id']) && $using_guest_account == false) {\n\t\t$user = db_fetch_row_prepared('SELECT username, password_change, realm\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\tapi_plugin_hook('nav_login_before');\n\n\t\tprint __('Logged in as') . \" <span id='user' class='user usermenuup'>\" . html_escape($user['username']) .\n\t\t\t\"</span></div><div><ul class='menuoptions' style='display:none;'>\";\n\n\t\tprint \"<li><a href='#' class='loggedInAs' style='display:none;'>\" . __esc('Logged in as %s', $user['username']) . \"</a></li><hr class='menu'>\";\n\n\t\tprint (is_realm_allowed(20) ? \"<li><a href='\" . html_escape($config['url_path'] . 'auth_profile.php?action=edit') . \"'>\" . __('Edit Profile') . '</a></li>':'');\n\t\tprint ($user['password_change'] == 'on' && $user['realm'] == 0 ? \"<li><a href='\" . html_escape($config['url_path'] . 'auth_changepassword.php') . \"'>\" . __('Change Password') . '</a></li>':'');\n\t\tprint ((is_realm_allowed(20) || ($user['password_change'] == 'on' && $user['realm'] == 0)) ? \"<li class='menuHr'><hr class='menu'></li>\":'');\n\n\t\tif (is_realm_allowed(28)) {\n\t\t\tprint \"<li id='userCommunity'><a href='https://forums.cacti.net' target='_blank' rel='noopener'>\" . __('User Community') . '</a></li>';\n\t\t\tprint \"<li id='userDocumentation'><a href='https://github.com/Cacti/documentation/blob/develop/README.md' target='_blank' rel='noopener'>\" . __('Documentation') . '</a></li>';\n\t\t\tprint \"<li class='menuHr'><hr class='menu'></li>\";\n\t\t}\n\n\t\tprint ($auth_method > 0 && $auth_method != 2 ? \"<li><a href='\" . html_escape($config['url_path'] . 'logout.php') . \"'>\" . __('Logout') . '</a></li>':'');\n\t\tprint '</ul>';\n\n\t\tapi_plugin_hook('nav_login_after');\n\t}\n}\n\n/**\n * draw_navigation_text - determines the top header navigation text for the current page and displays it to\n *\n * @param $type - Either 'url' or 'title'\n *\n * @return - Either the navigation text or title\n */\nfunction draw_navigation_text($type = 'url') {\n\tglobal $config, $navigation;\n\n\t$navigation      = api_plugin_hook_function('draw_navigation_text', $navigation);\n\t$current_page    = get_current_page();\n\n\tif (!isempty_request_var('action')) {\n\t\tget_filter_request_var('action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([-a-zA-Z0-9_\\s]+)$/')));\n\t}\n\n\t$current_action = (isset_request_var('action') ? get_request_var('action') : '');\n\n\t// find the current page in the big array\n\tif (isset($navigation[$current_page . ':' . $current_action])) {\n\t\t$current_array = $navigation[$current_page . ':' . $current_action];\n\t} else {\n\t\t// If it's not set in the array, then default to a generic title\n\t\t$current_array = array(\n\t\t\t'mapping' => 'index.php:',\n\t\t\t'title'   => ucwords(str_replace('_', ' ', basename(get_current_page(), '.php'))),\n\t\t\t'level'   => 0\n\t\t);\n\t}\n\n\t// Extract the full breadcrumb path from the current_array\n\tif (isset($current_array['mapping'])) {\n\t\t$current_mappings = explode(',', $current_array['mapping']);\n\t} else {\n\t\t$current_mappings = array();\n\t}\n\n\t$current_nav = \"<ul id='breadcrumbs'>\";\n\t$title       = '';\n\t$nav_count   = 0;\n\n\t// resolve all mappings to build the navigation string\n\t// this process is more simple than you might think\n\t// we don't care about history as the breadcrumb is\n\t// always based upon it's parent.\n\tforeach($current_mappings as $i => $breadcrumb) {\n\t\t$url = '';\n\n\t\tif (empty($breadcrumb)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ($i == 0) {\n\t\t\t// Always use the default for level == 0\n\t\t\t$url = $navigation[basename($breadcrumb)]['url'];\n\n\t\t\tif (basename($url) == 'graph_view.php') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} elseif (isset($current_array['url']) && $current_array['url'] != '') {\n\t\t\t// Where the user specified a non-blank URL\n\t\t\t$url = $current_array['url'];\n\t\t} else {\n\t\t\t// No 'url' was specified, so parse the breadcrumb path and use it\n\t\t\t$parts = explode(':', $breadcrumb);\n\t\t\t$url = $parts[0] . (isset($parts[1]) && $parts[1] != '' ? '?action=' . $parts[1]:'');\n\t\t}\n\n\t\t// Construct the list item and anchor from the 'url' if there was one.  There should always\n\t\t// be one.\n\t\t$current_nav .= \"<li><a id='nav_$i' href='\" . (empty($url) ? '#':html_escape($url)) . \"'>\";\n\t\t$current_nav .= html_escape(resolve_navigation_variables($navigation[basename($breadcrumb)]['title']));\n\t\t$current_nav .= '</a>' . (get_selected_theme() == 'classic' ? ' > ':'') . '</li>';\n\t\t$title .= html_escape(resolve_navigation_variables($navigation[basename($breadcrumb)]['title'])) . ' > ';\n\n\t\t$nav_count++;\n\t}\n\n\t// Add a title for the current level\n\tif ($nav_count) {\n\t\t// We've already appended the full path, not the end bit\n\t\tif (isset($current_array['title'])) {\n\t\t\t$current_nav .= \"<li><a id='nav_$i' href='#'>\" . html_escape(resolve_navigation_variables($current_array['title'])) . '</a></li>';\n\t\t}\n\t} else {\n\t\t// No breadcrumb was found for the current path, make one up\n\t\t$current_array = $navigation[$current_page . ':' . $current_action];\n\t\t$url = (isset($current_array['url']) ? $current_array['url']:'');\n\n\t\tif (isset($current_array['title'])) {\n\t\t\t$current_nav  .= \"<li><a id='nav_$i' href='$url'>\" . html_escape(resolve_navigation_variables($current_array['title'])) . '</a></li>';\n\t\t}\n\t}\n\n\t// Handle Special Navigation Cases of Tree's and External Links\n\tif (isset_request_var('action') || get_nfilter_request_var('action') == 'tree_content') {\n\t\t$tree_id = 0;\n\t\t$leaf_id = 0;\n\n\t\tif (isset_request_var('node')) {\n\t\t\t$parts = explode('-', get_request_var('node'));\n\n\t\t\t// Check for tree anchor\n\t\t\tif (strpos(get_request_var('node'), 'tree_anchor') !== false) {\n\t\t\t\t$tree_id = $parts[1];\n\t\t\t\t$leaf_id = 0;\n\t\t\t} elseif (strpos(get_request_var('node'), 'tbranch') !== false) {\n\t\t\t\t// Check for branch\n\t\t\t\t$leaf_id = $parts[1];\n\t\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($leaf_id));\n\t\t\t}\n\t\t}\n\n\t\tif ($leaf_id > 0) {\n\t\t\t$leaf = db_fetch_row_prepared('SELECT host_id, title, graph_tree_id\n\t\t\t\tFROM graph_tree_items\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($leaf_id));\n\n\t\t\tif (cacti_sizeof($leaf)) {\n\t\t\t\tif ($leaf['host_id'] > 0) {\n\t\t\t\t\t$leaf_name = db_fetch_cell_prepared('SELECT description\n\t\t\t\t\t\tFROM host\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($leaf['host_id']));\n\t\t\t\t} else {\n\t\t\t\t\t$leaf_name = $leaf['title'];\n\t\t\t\t}\n\n\t\t\t\t$tree_name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\tFROM graph_tree\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($leaf['graph_tree_id']));\n\t\t\t} else {\n\t\t\t\t$leaf_name = __('Leaf');\n\t\t\t\t$tree_name = '';\n\t\t\t}\n\n\t\t\tif (isset_request_var('hgd') && get_nfilter_request_var('hgd') != '') {\n\t\t\t\t$parts = explode(':', get_nfilter_request_var('hgd'));\n\t\t\t\tinput_validate_input_number($parts[1]);\n\n\t\t\t\tif ($parts[0] == 'gt') {\n\t\t\t\t\t$leaf_sub = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\tFROM graph_templates\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($parts[1]));\n\t\t\t\t} else {\n\t\t\t\t\tif ($parts[1] > 0) {\n\t\t\t\t\t\t$leaf_sub = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\t\tFROM snmp_query\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($parts[1]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$leaf_sub = __('Non Query Based');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$leaf_sub = '';\n\t\t\t}\n\t\t} else {\n\t\t\t$leaf_name = '';\n\t\t\t$leaf_sub  = '';\n\n\t\t\tif ($tree_id > 0) {\n\t\t\t\t$tree_name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\tFROM graph_tree\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($tree_id));\n\t\t\t} else {\n\t\t\t\t$tree_name = '';\n\t\t\t}\n\t\t}\n\n\t\t$tree_title = $tree_name . ($leaf_name != '' ? ' (' . trim($leaf_name):'') . ($leaf_sub != '' ? ':' . trim($leaf_sub) . ')':($leaf_name != '' ? ')':''));\n\n\t\tif ($tree_title != '') {\n\t\t\t$current_nav .= \"<li><a id='nav_title' href='#'>\" . html_escape($tree_title) . '</a></li>';\n\t\t}\n\t} elseif (preg_match('#link.php\\?id=(\\d+)#', $_SERVER['REQUEST_URI'], $matches)) {\n\t\t$externalLinks = db_fetch_row_prepared('SELECT title, style FROM external_links WHERE id = ?', array($matches[1]));\n\t\t$title = $externalLinks['title'];\n\t\t$style = $externalLinks['style'];\n\n\t\tif ($style == 'CONSOLE') {\n\t\t\t$current_nav = \"<ul id='breadcrumbs'>\n\t\t\t\t<li>\n\t\t\t\t\t<a id='nav_0' href='\" . $config['url_path'] . \"index.php'>\" . __('Console') . '</a>' . (get_selected_theme() == 'classic' ? ' > ':'') .\n\t\t\t\t'</li>';\n\n\t\t\t$current_nav .= \"<li><a id='nav_1' href='#'>\" . __('Link %s', html_escape($title)) . '</a></li>';\n\t\t} else {\n\t\t\t$current_nav = \"<ul id='breadcrumbs'><li><a id='nav_0'>\" . html_escape($title) . '</a></li>';\n\t\t}\n\n\t\t$tree_title = '';\n\t} else {\n\t\t$tree_title = '';\n\t}\n\n\t// Finally create a navigation title\n\tif (isset($current_array['title'])) {\n\t\t$title .= html_escape(resolve_navigation_variables($current_array['title']) . ' ' . $tree_title);\n\t}\n\n\t$current_nav .= '</ul>';\n\n\tif ($type == 'url') {\n\t\treturn $current_nav;\n\t} else {\n\t\treturn $title;\n\t}\n}\n\n/**\n * resolve_navigation_variables - substitute any variables contained in the navigation text\n *\n * @param $text - the text to substitute in\n *\n * @return - the original navigation text with all substitutions made\n */\nfunction resolve_navigation_variables($text) {\n\t$graphTitle = get_graph_title(get_filter_request_var('local_graph_id'));\n\n\tif (preg_match_all(\"/\\|([a-zA-Z0-9_]+)\\|/\", $text, $matches)) {\n\t\tforeach($matches[1] as $i => $match) {\n\t\t\tswitch ($match) {\n\t\t\t\tcase 'current_graph_title':\n\t\t\t\t\t$text = str_replace('|' . $match . '|', $graphTitle, $text);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $text;\n}\n\n/**\n * get_associated_rras - returns a list of all RRAs referenced by a particular graph\n *\n * @param $local_graph_id - (int) the ID of the graph to retrieve a list of RRAs for\n *\n * @return - (array) an array containing the name and id of each RRA found\n */\nfunction get_associated_rras($local_graph_id, $sql_where = '') {\n\treturn db_fetch_assoc_prepared('SELECT DISTINCT ' . SQL_NO_CACHE . \"\n\t\tdspr.id, dsp.step, dspr.steps, dspr.rows, dspr.name, dtd.rrd_step, dspr.timespan\n\t\tFROM graph_templates_item AS gti\n\t\tLEFT JOIN data_template_rrd AS dtr\n\t\tON gti.task_item_id=dtr.id\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON dtr.local_data_id = dtd.local_data_id\n\t\tLEFT JOIN data_source_profiles AS dsp\n\t\tON dtd.data_source_profile_id=dsp.id\n\t\tLEFT JOIN data_source_profiles_rra AS dspr\n\t\tON dsp.id=dspr.data_source_profile_id\n\t\tAND dtd.local_data_id != 0\n\t\tWHERE gti.local_graph_id = ?\n\t\t$sql_where\n\t\tORDER BY dspr.steps\",\n\t\tarray($local_graph_id)\n\t);\n}\n\n/**\n * get_nearest_timespan - returns the nearest defined timespan.  Used for adding a default\n * graph timespan for data source profile rras.\n *\n * @param $timespan - (int) the timespan to fine a default for\n *\n * @return - (int) the timespan to apply for the data source profile rra value\n */\nfunction get_nearest_timespan($timespan) {\n\tglobal $timespans;\n\n\t$last = end($timespans);\n\n\tforeach($timespans as $index => $name) {\n\t\tif ($timespan > $index) {\n\t\t\t$last = $index;\n\t\t\tcontinue;\n\t\t} elseif ($timespan == $index) {\n\t\t\treturn $index;\n\t\t} else {\n\t\t\treturn $last;\n\t\t}\n\t}\n\n\treturn $last;\n}\n\n/**\n * get_browser_query_string - returns the full url, including args requested by the browser\n *\n * @return - the url requested by the browser\n */\nfunction get_browser_query_string() {\n\tif (!empty($_SERVER['REQUEST_URI'])) {\n\t\treturn sanitize_uri($_SERVER['REQUEST_URI']);\n\t} else {\n\t\treturn sanitize_uri(get_current_page() . (empty($_SERVER['QUERY_STRING']) ? '' : '?' . $_SERVER['QUERY_STRING']));\n\t}\n}\n\n/**\n * get_current_page - returns the basename of the current page in a web server friendly way\n *\n * @return - the basename of the current script file\n */\nfunction get_current_page($basename = true) {\n\tif (isset($_SERVER['SCRIPT_NAME']) && $_SERVER['SCRIPT_NAME'] != '') {\n\t\tif ($basename) {\n\t\t\treturn basename($_SERVER['SCRIPT_NAME']);\n\t\t} else {\n\t\t\treturn $_SERVER['SCRIPT_NAME'];\n\t\t}\n\t} elseif (isset($_SERVER['SCRIPT_FILENAME']) && $_SERVER['SCRIPT_FILENAME'] != '') {\n\t\tif ($basename) {\n\t\t\treturn basename($_SERVER['SCRIPT_FILENAME']);\n\t\t} else {\n\t\t\treturn $_SERVER['SCRIPT_FILENAME'];\n\t\t}\n\t} else {\n\t\tcacti_log('ERROR: unable to determine current_page');\n\t}\n\n\treturn false;\n}\n\n/**\n * get_hash_graph_template - returns the current unique hash for a graph template\n *\n * @param $graph_template_id - (int) the ID of the graph template to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_graph_template($graph_template_id, $sub_type = 'graph_template') {\n\tswitch ($sub_type) {\n\t\tcase 'graph_template':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_templates WHERE id = ?', array($graph_template_id));\n\t\t\tbreak;\n\t\tcase 'graph_template_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_templates_item WHERE id = ?', array($graph_template_id));\n\t\t\tbreak;\n\t\tcase 'graph_template_input':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_template_input WHERE id = ?', array($graph_template_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (preg_match('/[a-fA-F0-9]{32}/', $hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_template - returns the current unique hash for a data template\n *\n * @param $graph_template_id - (int) the ID of the data template to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_template($data_template_id, $sub_type = 'data_template') {\n\tswitch ($sub_type) {\n\t\tcase 'data_template':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_template WHERE id = ?', array($data_template_id));\n\t\t\tbreak;\n\t\tcase 'data_template_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_template_rrd WHERE id = ?', array($data_template_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (preg_match('/[a-fA-F0-9]{32}/', $hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_input - returns the current unique hash for a data input method\n *\n * @param $graph_template_id - (int) the ID of the data input method to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_input($data_input_id, $sub_type = 'data_input_method') {\n\tswitch ($sub_type) {\n\t\tcase 'data_input_method':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_input WHERE id = ?', array($data_input_id));\n\t\t\tbreak;\n\t\tcase 'data_input_field':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_input_fields WHERE id = ?', array($data_input_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (preg_match('/[a-fA-F0-9]{32}/', $hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_cdef - returns the current unique hash for a cdef\n *\n * @param $graph_template_id - (int) the ID of the cdef to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_cdef($cdef_id, $sub_type = 'cdef') {\n\tif (!is_numeric($cdef_id)) {\n\t\treturn generate_hash();\n\t}\n\n\tswitch ($sub_type) {\n\t\tcase 'cdef':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM cdef WHERE id = ?', array($cdef_id));\n\t\t\tbreak;\n\t\tcase 'cdef_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM cdef_items WHERE id = ?', array($cdef_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_gprint - returns the current unique hash for a gprint preset\n *\n * @param $graph_template_id - (int) the ID of the gprint preset to return a hash for\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_gprint($gprint_id) {\n\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_templates_gprint WHERE id = ?', array($gprint_id));\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * returns the current unique hash for a vdef\n *\n * @param $graph_template_id - the ID of the vdef to return a hash for\n * @param $sub_type          - return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_vdef($vdef_id, $sub_type = \"vdef\") {\n\tswitch ($sub_type) {\n\t\tcase 'vdef':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM vdef WHERE id = ?', array($vdef_id));\n\t\t\tbreak;\n\t\tcase 'vdef_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM vdef_items WHERE id = ?', array($vdef_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_source_profile - returns the current unique hash for a vdef\n *\n * @param $data_source_profile_id - the ID of the data_source_profile to return a hash for\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_source_profile($data_source_profile_id) {\n\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_source_profiles WHERE id = ?', array($data_source_profile_id));\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_host_template - returns the current unique hash for a gprint preset\n *\n * @param $host_template_id - the ID of the host template to return a hash for\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_host_template($host_template_id) {\n\t$hash = db_fetch_cell_prepared('SELECT hash FROM host_template WHERE id = ?', array($host_template_id));\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_query - returns the current unique hash for a data query\n *\n * @param $graph_template_id - the ID of the data query to return a hash for\n * @param $sub_type return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_query($data_query_id, $sub_type = 'data_query') {\n\tswitch ($sub_type) {\n\t\tcase 'data_query':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tcase 'data_query_graph':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query_graph WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tcase 'data_query_sv_data_source':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query_graph_rrd_sv WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tcase 'data_query_sv_graph':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query_graph_sv WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_version - returns the item type and cacti version in a hash format\n *\n * @param $type - the type of item to represent ('graph_template','data_template',\n *   'data_input_method','cdef','vdef','gprint_preset','data_query','host_template')\n *\n * @return - a 24-bit hexadecimal hash (8-bits for type, 16-bits for version)\n */\nfunction get_hash_version($type) {\n\tglobal $hash_type_codes, $cacti_version_codes, $config;\n\n\treturn $hash_type_codes[$type] . $cacti_version_codes[CACTI_VERSION];\n}\n\n/**\n * generate_hash - generates a new unique hash\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction generate_hash() {\n\treturn md5(session_id() . microtime() . rand(0,1000));\n}\n\n/**\n * debug_log_insert_section_start - creates a header item for breaking down the debug log\n *\n * @param $type - the 'category' or type of debug message\n * @param $text - section header\n */\nfunction debug_log_insert_section_start($type, $text, $allowcopy = false) {\n\t$copy_prefix = '';\n\t$copy_dataid = '';\n\tif ($allowcopy) {\n\t\t$uid = generate_hash();\n\t\t$copy_prefix   = '<div class=\\'cactiTableButton debug\\'><span><a class=\\'linkCopyDark cactiTableCopy\\' id=\\'copyToClipboard' . $uid . '\\'>' . __esc('Copy') . '</a></span></div>';\n\t\t$copy_dataid = ' id=\\'clipboardData'.$uid.'\\'';\n\t\t$copy_headerid = ' id=\\'clipboardHeader'.$uid.'\\'';\n\t}\n\n\tdebug_log_insert($type, '<table class=\\'cactiTable debug\\'' . $copy_headerid . '><tr class=\\'tableHeader\\'><td>' . html_escape($text) . $copy_prefix . '</td></tr><tr><td style=\\'padding:0px;\\'><table style=\\'display:none;\\'' . $copy_dataid . '><tr><td><div style=\\'font-family: monospace;\\'>');\n}\n\n/**\n * debug_log_insert_section_end - finalizes the header started with the start function\n *\n * @param $type - the 'category' or type of debug message\n */\nfunction debug_log_insert_section_end($type) {\n\tdebug_log_insert($type, \"</div></td></tr></table></td></tr></td></table>\");\n}\n\n/**\n * debug_log_insert - inserts a line of text into the debug log\n *\n * @param $type - the 'category' or type of debug message\n * @param $text - the actual debug message\n */\nfunction debug_log_insert($type, $text) {\n\tglobal $config;\n\n\tif ($config['poller_id'] == 1 || isset($_SESSION)) {\n\t\tif (!isset($_SESSION['debug_log'][$type])) {\n\t\t\t$_SESSION['debug_log'][$type] = array();\n\t\t}\n\n\t\tarray_push($_SESSION['debug_log'][$type], $text);\n\t} else {\n\t\tif (!isset($config['debug_log'][$type])) {\n\t\t\t$config['debug_log'][$type] = array();\n\t\t}\n\n\t\tarray_push($config['debug_log'][$type], $text);\n\t}\n}\n\n/**\n * debug_log_clear - clears the debug log for a particular category\n *\n * @param $type - the 'category' to clear the debug log for. omitting this argument\n *   implies all categories\n */\nfunction debug_log_clear($type = '') {\n\tif ($type == '') {\n\t\tkill_session_var('debug_log');\n\t} else {\n\t\tif (isset($_SESSION['debug_log'])) {\n\t\t\tunset($_SESSION['debug_log'][$type]);\n\t\t}\n\t}\n}\n\n/**\n * debug_log_return - returns the debug log for a particular category\n *\n * @param $type - the 'category' to return the debug log for.\n *\n * @return - the full debug log for a particular category\n */\nfunction debug_log_return($type) {\n\t$log_text = '';\n\n\tif ($type == 'new_graphs') {\n\t\tif (isset($_SESSION['debug_log'][$type])) {\n\t\t\t$log_text .= \"<table style='width:100%;'>\";\n\t\t\tfor ($i=0; $i<cacti_count($_SESSION['debug_log'][$type]); $i++) {\n\t\t\t\t$log_text .= '<tr><td>' . $_SESSION['debug_log'][$type][$i] . '</td></tr>';\n\t\t\t}\n\t\t\t$log_text .= '</table>';\n\t\t}\n\t} else {\n\t\tif (isset($_SESSION['debug_log'][$type])) {\n\t\t\t$log_text .= \"<table style='width:100%;'>\";\n\t\t\tforeach($_SESSION['debug_log'][$type] as $key => $val) {\n\t\t\t\t$log_text .= \"<tr><td>$val</td></tr>\\n\";\n\t\t\t\tunset($_SESSION['debug_log'][$type][$key]);\n\t\t\t}\n\t\t\t$log_text .= '</table>';\n\t\t}\n\t}\n\n\treturn $log_text;\n}\n\n/**\n * sanitize_search_string - cleans up a search string submitted by the user to be passed\n * to the database. NOTE: some of the code for this function came from the phpBB project.\n *\n * @param $string - the original raw search string\n *\n * @return - the sanitized search string\n */\nfunction sanitize_search_string($string) {\n\tstatic $drop_char_match = array('(',')','^', '$', '<', '>', '`', '\\'', '\"', '|', ',', '?', '+', '[', ']', '{', '}', '#', ';', '!', '=', '*');\n\tstatic $drop_char_replace = array('','',' ', ' ', ' ', ' ', '', '', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ');\n\n\t/* Replace line endings by a space */\n\t$string = preg_replace('/[\\n\\r]/is', ' ', $string);\n\n\t/* HTML entities like &nbsp; */\n\t$string = preg_replace('/\\b&[a-z]+;\\b/', ' ', $string);\n\n\t/* Remove URL's */\n\t$string = preg_replace('/\\b[a-z0-9]+:\\/\\/[a-z0-9\\.\\-]+(\\/[a-z0-9\\?\\.%_\\-\\+=&\\/]+)?/', ' ', $string);\n\n\t/* Filter out strange characters like ^, $, &, change \"it's\" to \"its\" */\n\tfor($i = 0; $i < cacti_count($drop_char_match); $i++) {\n\t\t$string =  str_replace($drop_char_match[$i], $drop_char_replace[$i], $string);\n\t}\n\n\treturn $string;\n}\n\n/**\n * cleans up a URI, e.g. from REQUEST_URI and/or QUERY_STRING\n * in case of XSS attack, expect the result to be broken\n * we do NOT sanitize in a way, that attacks are converted to valid HTML\n * it is ok, when the result is broken but the application stays alive\n *\n * @param string $uri   - the uri to be sanitized\n *\n * @return string    - the sanitized uri\n */\nfunction sanitize_uri($uri) {\n\tstatic $drop_char_match =   array('^', '$', '<', '>', '`', \"'\", '\"', '|', '+', '[', ']', '{', '}', ';', '!', '(', ')');\n\tstatic $drop_char_replace = array( '', '',  '',  '',  '',  '',   '',  '',  '',  '',  '',  '',  '',  '',  '');\n\n\tif (strpos($uri, 'graph_view.php')) {\n\t\tif (!strpos($uri, 'action=')) {\n\t\t\t$uri = $uri . (strpos($uri, '?') ? '&':'?') . 'action=' . get_nfilter_request_var('action');\n\t\t}\n\t}\n\n\treturn str_replace($drop_char_match, $drop_char_replace, strip_tags(urldecode($uri)));\n}\n\n/**\n * Checks to see if a string is base64 encoded\n *\n * @param string $data   - the string to be validated\n *\n * @return boolean    - true is the string is base64 otherwise false\n */\nfunction is_base64_encoded($data) {\n\t// Perform a simple check first\n\tif (!preg_match('/^[a-zA-Z0-9\\/\\r\\n+]*={0,2}$/', $data)) {\n\t\treturn false;\n\t}\n\n\t// Now test with the built-in function\n\t$ndata = base64_decode($data, true);\n\tif ($ndata === false) {\n\t\treturn false;\n\t}\n\n\t// Do a re-encode test and compare\n\tif (base64_encode($ndata) != $data) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * cleans up a CDEF/VDEF string\n * the CDEF/VDEF must have passed all magic string replacements beforehand\n *\n * @param string $cdef   - the CDEF/VDEF to be sanitized\n *\n * @return string    - the sanitized CDEF/VDEF\n */\nfunction sanitize_cdef($cdef) {\n\tstatic $drop_char_match =   array('^', '$', '<', '>', '`', '\\'', '\"', '|', '[', ']', '{', '}', ';', '!');\n\tstatic $drop_char_replace = array( '', '',  '',  '',  '',  '',   '',  '',  '',  '',  '',  '',  '',  '');\n\n\treturn str_replace($drop_char_match, $drop_char_replace, $cdef);\n}\n\n/**\n * verifies all selected items are numeric to guard against injection\n *\n * @param array $items   - an array of serialized items from a post\n *\n * @return array      - the sanitized selected items array\n */\nfunction sanitize_unserialize_selected_items($items) {\n\tif ($items != '') {\n\t\t$unstripped = stripslashes($items);\n\n\t\t// validate that sanitized string is correctly formatted\n\t\tif (preg_match('/^a:[0-9]+:{/', $unstripped) && !preg_match('/(^|;|{|})O:\\+?[0-9]+:\"/', $unstripped)) {\n\t\t\t$items = unserialize($unstripped);\n\n\t\t\tif (is_array($items)) {\n\t\t\t\tforeach ($items as $item) {\n\t\t\t\t\tif (is_array($item)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} elseif (!is_numeric($item) && ($item != '')) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\treturn $items;\n}\n\nfunction cacti_escapeshellcmd($string) {\n\tglobal $config;\n\n\tif ($string == '') {\n\t\treturn $string;\n\t}\n\n\tif ($config['cacti_server_os'] == 'unix') {\n\t\treturn escapeshellcmd($string);\n\t} else {\n\t\t$replacements = \"#&;`|*?<>^()[]{}$\\\\\";\n\n\t\tfor ($i=0; $i < strlen($replacements); $i++) {\n\t\t\t$string = str_replace($replacements[$i], ' ', $string);\n\t\t}\n\n\t\treturn $string;\n\t}\n}\n\n/**\n * mimics escapeshellarg, even for windows\n *\n * @param $string \t- the string to be escaped\n * @param $quote \t- true: do NOT remove quotes from result; false: do remove quotes\n *\n * @return\t\t\t- the escaped [quoted|unquoted] string\n */\nfunction cacti_escapeshellarg($string, $quote = true) {\n\tglobal $config;\n\n\tif ($string == '') {\n\t\treturn $string;\n\t}\n\n\t/* we must use an apostrophe to escape community names under Unix in case the user uses\n\tcharacters that the shell might interpret. the ucd-snmp binaries on Windows flip out when\n\tyou do this, but are perfectly happy with a quotation mark. */\n\tif ($config['cacti_server_os'] == 'unix') {\n\t\t$string = escapeshellarg($string);\n\t\tif ($quote) {\n\t\t\treturn $string;\n\t\t} else {\n\t\t\t# remove first and last char\n\t\t\treturn substr($string, 1, (strlen($string)-2));\n\t\t}\n\t} else {\n\t\t/* escapeshellarg takes care of different quotation for both linux and windows,\n\t\t * but unfortunately, it blanks out percent signs\n\t\t * we want to keep them, e.g. for GPRINT format strings\n\t\t * so we need to create our own escapeshellarg\n\t\t * on windows, command injection requires to close any open quotation first\n\t\t * so we have to escape any quotation here */\n\t\tif (substr_count($string, CACTI_ESCAPE_CHARACTER)) {\n\t\t\t$string = str_replace(CACTI_ESCAPE_CHARACTER, \"\\\\\" . CACTI_ESCAPE_CHARACTER, $string);\n\t\t}\n\n\t\t/* ... before we add our own quotation */\n\t\tif ($quote) {\n\t\t\treturn CACTI_ESCAPE_CHARACTER . $string . CACTI_ESCAPE_CHARACTER;\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t}\n}\n\n/**\n * set a page refresh in Cacti through a callback\n *\n * @param $refresh - an array containing the page, seconds, and logout\n *\n * @return         - nill\n */\nfunction set_page_refresh($refresh) {\n\tif (isset($refresh['seconds'])) {\n\t\t$_SESSION['refresh']['seconds'] = $refresh['seconds'];\n\t}\n\n\tif (read_config_option('auth_cache_enabled') == 'on' && isset($_SESSION['cacti_remembers']) && $_SESSION['cacti_remembers'] == true) {\n\t\t$_SESSION['refresh']['logout'] = 'false';\n\t} elseif (isset($refresh['logout'])) {\n\t\tif ($refresh['logout'] == 'true' || $refresh['logout'] === true) {\n\t\t\t$_SESSION['refresh']['logout'] = 'true';\n\t\t} else {\n\t\t\t$_SESSION['refresh']['logout'] = 'false';\n\t\t}\n\t} else {\n\t\t$_SESSION['refresh']['logout'] = 'true';\n\t}\n\n\tif (isset($refresh['page'])) {\n\t\t$_SESSION['refresh']['page'] = $refresh['page'];\n\t}\n}\n\nfunction bottom_footer() {\n\tglobal $config, $no_session_write;\n\n\tinclude_once($config['base_path'] . '/include/global_session.php');\n\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/bottom_footer.php');\n\t}\n\n\t/* we use this session var to store field values for when a save fails,\n \t   this way we can restore the field's previous values. we reset it here, because\n\t   they only need to be stored for a single page\n\t*/\n\tkill_session_var('sess_field_values');\n\n\t/* make sure the debug log doesn't get too big */\n\tdebug_log_clear();\n\n\t/* close the session */\n\tif (array_search(get_current_page(), $no_session_write) === false) {\n\t\tcacti_session_close();\n\t}\n\n\t/* close the database connection */\n\tdb_close();\n}\n\nfunction top_header() {\n\tglobal $config;\n\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/top_header.php');\n\t}\n}\n\nfunction top_graph_header() {\n\tglobal $config;\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/top_graph_header.php');\n\t}\n}\n\nfunction general_header() {\n\tglobal $config;\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/top_general_header.php');\n\t}\n}\n\nfunction appendHeaderSuppression($url) {\n\tif (strpos($url, 'header=false') < 0) {\n\t\treturn $url . (strpos($url, '?') ? '&':'?') . 'header=false';\n\t}\n\n\treturn $url;\n}\n\nfunction admin_email($subject, $message) {\n\tif (read_config_option('admin_user') > 0) {\n\t\tif (read_config_option('notify_admin') == 'on') {\n\t\t\t$admin_details = db_fetch_row_prepared('SELECT full_name, email_address\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(read_config_option('admin_user')));\n\n\t\t\tif (cacti_sizeof($admin_details)) {\n\t\t\t\t$email = read_config_option('settings_from_email');\n\t\t\t\t$name  = read_config_option('settings_from_name');\n\n\t\t\t\tif ($name != '') {\n\t\t\t\t\t$from = '\"' . $name . '\" <' . $email . '>';\n\t\t\t\t} else {\n\t\t\t\t\t$from = $email;\n\t\t\t\t}\n\n\t\t\t\tif ($admin_details['email_address'] != '') {\n\t\t\t\t\tif ($admin_details['full_name'] != '') {\n\t\t\t\t\t\t$to = '\"' . $admin_details['full_name'] . '\" <' . $admin_details['email_address'] . '>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$to = $admin_details['email_address'];\n\t\t\t\t\t}\n\n\t\t\t\t\tsend_mail($to, $from, $subject, $message, '', '', true);\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log('WARNING: Primary Admin account does not have an email address!  Unable to send administrative Email.', false, 'SYSTEM');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcacti_log('WARNING: Primary Admin account set to an invalid user!  Unable to send administrative Email.', false, 'SYSTEM');\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log('WARNING: Primary Admin account notifications disabled!  Unable to send administrative Email.', false, 'SYSTEM');\n\t\t}\n\t} else {\n\t\tcacti_log('WARNING: Primary Admin account not set!  Unable to send administrative Email.', false, 'SYSTEM');\n\t}\n}\n\nfunction send_mail($to, $from, $subject, $body, $attachments = '', $headers = '', $html = false) {\n\t$fromname = '';\n\tif (is_array($from)) {\n\t\t$fromname = $from[1];\n\t\t$from     = $from[0];\n\t}\n\n\tif ($from == '') {\n\t\t$from     = read_config_option('settings_from_email');\n\t\t$fromname = read_config_option('settings_from_name');\n\t} elseif ($fromname == '') {\n\t\t$full_name = db_fetch_cell_prepared('SELECT full_name\n\t\t\tFROM user_auth\n\t\t\tWHERE email_address = ?',\n\t\t\tarray($from));\n\n\t\tif (empty($full_name)) {\n\t\t\t$fromname = $from;\n\t\t} else {\n\t\t\t$fromname = $full_name;\n\t\t}\n\t}\n\n\t$from = array(0 => $from, 1 => $fromname);\n\treturn mailer($from, $to, '', '', '', $subject, $body, '', $attachments, $headers, $html);\n}\n\n/**\n * mailer - function to send mails to users\n *\n * @param $from        - single contact (see below)\n * @param $to          - single or multiple contacts (see below)\n * @param $cc          - none, single or multiple contacts (see below)\n * @param $bcc         - none, single or multiple contacts (see below)\n * @param $replyto     - none, single or multiple contacts (see below)\n *                       note that this value is used when hitting reply (overriding the default of using from)\n * @param $subject     - the email subject\n * @param $body        - the email body, in HTML format.  If content_text is not set, the function will attempt to extract\n *                       from the HTML format.\n * @param $body_text   - the email body in TEXT format.  If set, it will override the stripping tags method\n * @param $attachments - the emails attachments as an array\n * @param $headers     - an array of name value pairs representing custom headers.\n * @param $html        - if set to true, html is the default, otherwise text format will be used\n *\n * For contact parameters, they can accept arrays containing zero or more values in the forms of:\n *     'email@email.com,email2@email.com,email3@email.com'\n *     array('email1@email.com' => 'My email', 'email2@email.com' => 'Your email', 'email3@email.com' => 'Whose email')\n *     array(array('email' => 'email1@email.com', 'name' => 'My email'), array('email' => 'email2@email.com',\n *         'name' => 'Your email'), array('email' => 'email3@email.com', 'name' => 'Whose email'))\n *\n * The $from field will only use the first contact specified.  If no contact is provided for $replyto\n * then $from is used for that too. If $from is empty, it will default to cacti@<server> or if no server name can\n * be found, it will use cacti@cacti.net\n *\n * The $attachments parameter may either be a single string, or a list of attachments\n * either as strings or an array.  The array can have the following keys:\n *\n * filename    : name of the file to attach (display name for graphs)\n * display     : displayed name of the attachment\n * mime_type   : MIME type to be set against the attachment.  If blank or missing mailer will attempt to auto detect\n * attachment  : String containing attachment for image-based attachments (<GRAPH> or <GRAPH:#> activates graph mode\n *               and requires $body parameter is HTML containing one of those values)\n * inline      : Whether to attach 'inline' (default for graph mode) or as 'attachment' (default for all others)\n * encoding    : Encoding type, normally base64\n */\nfunction mailer($from, $to, $cc, $bcc, $replyto, $subject, $body, $body_text = '', $attachments = '', $headers = '', $html = true) {\n\tglobal $config, $cacti_locale, $mail_methods;\n\n\trequire_once($config['include_path'] . '/vendor/phpmailer/src/Exception.php');\n\trequire_once($config['include_path'] . '/vendor/phpmailer/src/PHPMailer.php');\n\trequire_once($config['include_path'] . '/vendor/phpmailer/src/SMTP.php');\n\n\t$start_time = microtime(true);\n\n\t// Create the PHPMailer instance\n\t$mail = new PHPMailer\\PHPMailer\\PHPMailer;\n\n\t// Set a reasonable timeout of 5 seconds\n\t$timeout = read_config_option('settings_smtp_timeout');\n\tif (empty($timeout) || $timeout < 0 || $timeout > 300) {\n\t\t$mail->Timeout = 5;\n\t} else {\n\t\t$mail->Timeout = $timeout;\n\t}\n\n\t$langparts = explode('-', $cacti_locale);\n\tif (file_exists($config['include_path'] . '/vendor/phpmailer/language/phpmailer.lang-' . $langparts[0] . '.php')) {\n\t\t$mail->setLanguage($langparts[0], $config['include_path'] . '/vendor/phpmailer/language/');\n\t}\n\n\t$how = read_config_option('settings_how');\n\tif ($how < 0 || $how > 2) {\n\t\t$how = 0;\n\t}\n\n\tif ($how == 0) {\n\t\t$mail->isMail();\n\t} elseif ($how == 1) {\n\t\t$mail->Sendmail = read_config_option('settings_sendmail_path');\n\t\t$mail->isSendmail();\n\t} elseif ($how == 2) {\n\t\t$mail->isSMTP();\n\t\t$mail->Host     = read_config_option('settings_smtp_host');\n\t\t$mail->Port     = read_config_option('settings_smtp_port');\n\n\t\tif (read_config_option('settings_smtp_username') != '') {\n\t\t\t$mail->SMTPAuth = true;\n\t\t\t$mail->Username = read_config_option('settings_smtp_username');\n\n\t\t\tif (read_config_option('settings_smtp_password') != '') {\n\t\t\t\t$mail->Password = read_config_option('settings_smtp_password');\n\t\t\t}\n\t\t} else {\n\t\t\t$mail->SMTPAuth = false;\n\t\t}\n\n\t\t$secure  = read_config_option('settings_smtp_secure');\n\t\tif (!empty($secure) && $secure != 'none') {\n\t\t\t$mail->SMTPSecure = true;\n\t\t\tif (substr_count($mail->Host, ':') == 0) {\n\t\t\t\t$mail->Host = $secure . '://' . $mail->Host;\n\t\t\t}\n\t\t} else {\n\t\t\t$mail->SMTPAutoTLS = false;\n\t\t\t$mail->SMTPSecure = false;\n\t\t}\n\t}\n\n\t/* perform data substitution */\n\tif (strpos($subject, '|date_time|') !== false) {\n\t\t$date = read_config_option('date');\n\t\tif (!empty($date)) {\n\t\t\t$time = strtotime($date);\n\t\t} else {\n\t\t\t$time = time();\n\t\t}\n\n\t\t$subject = str_replace('|date_time|', date(CACTI_DATE_TIME_FORMAT, $time), $subject);\n\t}\n\n\t/*\n\t * Set the from details using the variable passed in\n\t * - if name is blank, use setting's name\n\t * - if email is blank, use setting's email, otherwise default to\n\t *   cacti@<server> or cacti@cacti.net if no known server name\n\t */\n\t$from = parse_email_details($from, 1);\n\n\t// from name was empty, use value in settings\n\tif (empty($from['name'])) {\n\t\t$from['name'] = read_config_option('settings_from_name');\n\t}\n\n\t// from email was empty, use email in settings\n\tif (empty($from['email'])) {\n\t\t$from['email'] = read_config_option('settings_from_email');\n\t}\n\n\tif (empty($from['email'])) {\n\t\tif (isset($_SERVER['HOSTNAME'])) {\n\t\t\t$from['email'] = 'Cacti@' . $_SERVER['HOSTNAME'];\n\t\t} else {\n\t\t\t$from['email'] = 'Cacti@cacti.net';\n\t\t}\n\n\t\tif (empty($from['name'])) {\n\t\t\t$from['name'] = 'Cacti';\n\t\t}\n\t}\n\n\t// Sanity test the from email\n\tif (!filter_var($from['email'], FILTER_VALIDATE_EMAIL)) {\n\t\treturn 'Bad email address format. Invalid from email address ' . $from['email'];\n\t}\n\n\t$fromText  = add_email_details(array($from), $result, array($mail, 'setFrom'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($fromText, $mail->ErrorInfo);\n\t}\n\n\t// Convert $to variable to proper array structure\n\t$to        = parse_email_details($to);\n\t$toText    = add_email_details($to, $result, array($mail, 'addAddress'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($toText, $mail->ErrorInfo);\n\t}\n\n\t$cc        = parse_email_details($cc);\n\t$ccText    = add_email_details($cc, $result, array($mail, 'addCC'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($ccText, $mail->ErrorInfo);\n\t}\n\n\t$bcc       = parse_email_details($bcc);\n\t$bccText   = add_email_details($bcc, $result, array($mail, 'addBCC'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($bccText, $mail->ErrorInfo);\n\t}\n\n\t// This is a failsafe, should never happen now\n\tif (!(cacti_sizeof($to) || cacti_sizeof($cc) || cacti_sizeof($bcc))) {\n\t\tcacti_log('ERROR: No recipient address set!!', false, 'MAILER');\n\t\tcacti_debug_backtrace('MAILER ERROR');\n\n\t\treturn __('Mailer Error: No recipient address set!!<br>If using the <i>Test Mail</i> link, please set the <b>Alert e-mail</b> setting.');\n\t}\n\n\t$replyto   = parse_email_details($replyto);\n\t$replyText = add_email_details($replyto, $result, array($mail, 'addReplyTo'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($replyText, $mail->ErrorInfo);\n\t}\n\n\t$body = str_replace('<SUBJECT>', $subject,   $body);\n\t$body = str_replace('<TO>',      $toText,    $body);\n\t$body = str_replace('<CC>',      $ccText,    $body);\n\t$body = str_replace('<FROM>',    $fromText,  $body);\n\t$body = str_replace('<REPLYTO>', $replyText, $body);\n\n\t$body_text = str_replace('<SUBJECT>', $subject,   $body_text);\n\t$body_text = str_replace('<TO>',      $toText,    $body_text);\n\t$body_text = str_replace('<CC>',      $ccText,    $body_text);\n\t$body_text = str_replace('<FROM>',    $fromText,  $body_text);\n\t$body_text = str_replace('<REPLYTO>', $replyText, $body_text);\n\n\t// Set the subject\n\t$mail->Subject = $subject;\n\n\t// Support i18n\n\t$mail->CharSet = 'UTF-8';\n\t$mail->Encoding = 'base64';\n\n\t// Set the wordwrap limits\n\t$wordwrap = read_config_option('settings_wordwrap');\n\tif ($wordwrap == '') {\n\t\t$wordwrap = 76;\n\t} elseif ($wordwrap > 9999) {\n\t\t$wordwrap = 9999;\n\t} elseif ($wordwrap < 0) {\n\t\t$wordwrap = 76;\n\t}\n\n\t$mail->WordWrap = $wordwrap;\n\t$mail->setWordWrap();\n\n\tif (!$html) {\n\t\t$mail->ContentType = 'text/plain';\n\t} else {\n\t\t$mail->ContentType = 'text/html';\n\t}\n\n\t$i = 0;\n\n\t// Handle Graph Attachments\n\tif (!empty($attachments) && !is_array($attachments)) {\n\t\t$attachments = array('attachment' => $attachments);\n\t}\n\n\tif (is_array($attachments) && cacti_sizeof($attachments)) {\n\t\t$graph_mode = (substr_count($body, '<GRAPH>') > 0);\n\t\t$graph_ids = (substr_count($body, '<GRAPH:') > 0);\n\n\t\t$default_opts = array(\n\t\t\t// MIME type to be set against the attachment\n\t\t\t'mime_type'  => '',\n\t\t\t// Display name of the attachment\n\t\t\t'filename'    => '',\n\t\t\t// String containing attachment for image-based attachments\n\t\t\t'attachment' => '',\n\t\t\t// Whether to attach inline or as attachment\n\t\t\t'inline'     => ($graph_mode || $graph_ids) ? 'inline' : 'attachment',\n\t\t\t// Encoding type, normally base64\n\t\t\t'encoding'   => 'base64',\n\t\t);\n\n\t\tforeach($attachments as $attachment) {\n\t\t\tif (!is_array($attachment)) {\n\t\t\t\t$attachment = array('attachment' => $attachment);\n\t\t\t}\n\n\t\t\tforeach ($default_opts as $opt_name => $opt_default) {\n\t\t\t\tif (!array_key_exists($opt_name, $attachment)) {\n\t\t\t\t\t$attachment[$opt_name] = $opt_default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!empty($attachment['attachment'])) {\n\t\t\t\t/* get content id and create attachment */\n\t\t\t\t$cid = getmypid() . '_' . $i . '@' . 'localhost';\n\n\t\t\t\tif (empty($attachment['filename']) && file_exists($attachment['attachment'])) {\n\t\t\t\t\t$attachment['filename'] = $attachment['attachment'];\n\t\t\t\t}\n\n\t\t\t\t/* attempt to attach */\n\t\t\t\tif (!($graph_mode || $graph_ids)) {\n\t\t\t\t\tif (!empty($attachment['attachment']) && @file_exists($attachment['attachment'])) {\n\t\t\t\t\t\t$result = $mail->addAttachment($attachment['attachment'], $attachment['filename'], $attachment['encoding'], $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$result = $mail->addStringAttachment($attachment['attachment'], $attachment['filename'], 'base64', $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($attachment['attachment']) && @file_exists($attachment['attachment'])) {\n\t\t\t\t\t\t$result = $mail->addEmbeddedImage($attachment['attachment'], $cid, $attachment['filename'], $attachment['encoding'], $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$result = $mail->addStringEmbeddedImage($attachment['attachment'], $cid, $attachment['filename'], 'base64', $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($result == false) {\n\t\t\t\t\tcacti_log('ERROR: ' . $mail->ErrorInfo, false, 'MAILER');\n\t\t\t\t\treturn $mail->ErrorInfo;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t\tif ($graph_mode) {\n\t\t\t\t\t$body = str_replace('<GRAPH>', \"<br><br><img src='cid:$cid'>\", $body);\n\t\t\t\t} elseif ($graph_ids) {\n\t\t\t\t\t/* handle the body text */\n\t\t\t\t\tswitch ($attachment['inline']) {\n\t\t\t\t\t\tcase 'inline':\n\t\t\t\t\t\t\t$body = str_replace('<GRAPH:' . $attachment['local_graph_id'] . ':' . $attachment['timespan'] . '>', \"<img src='cid:$cid' >\", $body);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\t$body = str_replace('<GRAPH:' . $attachment['local_graph_id'] . ':' . $attachment['timespan'] . '>', '', $body);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* process custom headers */\n\tif (is_array($headers) && cacti_sizeof($headers)) {\n\t\tforeach($headers as $name => $value) {\n\t\t\t$mail->addCustomHeader($name, $value);\n\t\t}\n\t}\n\n\t// Set both html and non-html bodies\n\t$brs = array('<br>', '<br />', '</br>');\n\tif ($html) {\n\t\t$body  = $body . '<br>';\n\t}\n\n\tif ($body_text == '') {\n\t\t$body_text = strip_tags(str_ireplace($brs, \"\\n\", $body));\n\t}\n\n\t$mail->isHTML($html);\n\t$mail->Body = ($html ? $body : $body_text);\n\tif ($html && $body_text != '') {\n\t\t$mail->AltBody = $body_text;\n\t}\n\n\t$result   = $mail->send();\n\t$error    = $mail->ErrorInfo; //$result ? '' : $mail->ErrorInfo;\n\t$method   = $mail_methods[intval(read_config_option('settings_how'))];\n\t$rtype    = $result ? 'INFO' : 'WARNING';\n\t$rmsg     = $result ? 'successfully sent' : 'failed';\n\t$end_time = microtime(true);\n\n\tif ($error != '') {\n\t\t$message = sprintf(\"%s: Mail %s via %s from '%s', to '%s', cc '%s', and took %2.2f seconds, Subject '%s'%s\",\n\t\t\t$rtype, $rmsg, $method, $fromText, $toText, $ccText, ($end_time - $start_time), $subject,\n\t\t\t\", Error: $error\");\n\t} else {\n\t\t$message = sprintf(\"%s: Mail %s via %s from '%s', to '%s', cc '%s', and took %2.2f seconds, Subject '%s'\",\n\t\t\t$rtype, $rmsg, $method, $fromText, $toText, $ccText, ($end_time - $start_time), $subject);\n\t}\n\n\tcacti_log($message, false, 'MAILER');\n\tif ($result == false) {\n\t\tcacti_log(cacti_debug_backtrace($rtype), false, 'MAILER');\n\t}\n\n\treturn $error;\n}\n\nfunction record_mailer_error($retError, $mailError) {\n\t$errorInfo = empty($retError) ? $mailError : $retError;\n\tcacti_log('ERROR: ' . $errorInfo, false, 'CMDPHP MAILER');\n\tcacti_debug_backtrace('MAILER ERROR');\n\treturn $errorInfo;\n}\n\nfunction add_email_details($emails, &$result, callable $addFunc) {\n\t$arrText = array();\n\n\tforeach ($emails as $e) {\n\t\tif (!empty($e['email'])) {\n\t\t\t//if (is_callable($addFunc)) {\n\t\t\tif (!empty($addFunc)) {\n\t\t\t\t$result = $addFunc($e['email'], $e['name']);\n\t\t\t\tif (!$result) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$arrText[] = create_emailtext($e);\n\t\t} elseif (!empty($e['name'])) {\n\t\t\t$result = false;\n\t\t\treturn 'Bad email format, name but no address: ' . $e['name'];\n\t\t}\n\t}\n\n\t$text = implode(',', $arrText);\n\t//print \"add_email_sw_details(): $text\\n\";\n\treturn $text;\n}\n\nfunction parse_email_details($emails, $max_records = 0, $details = array()) {\n\tif (!is_array($emails)) {\n\t\t$emails = array($emails);\n\t}\n\n\t$update = array();\n\tforeach ($emails as $check_email) {\n\t\tif (!empty($check_email)) {\n\t\t\tif (!is_array($check_email)) {\n\t\t\t\t$emails = explode(',', $check_email);\n\n\t\t\t\tforeach($emails as $email) {\n\t\t\t\t\t$email_array = split_emaildetail($email);\n\t\t\t\t\t$details[$email_array['email']] = $email_array;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$has_name  = array_key_exists('name', $check_email);\n\t\t\t\t$has_email = array_key_exists('email', $check_email);\n\n\t\t\t\tif ($has_name || $has_email) {\n\t\t\t\t\t$name  = $has_name  ? $check_email['name']  : '';\n\t\t\t\t\t$email = $has_email ? $check_email['email'] : '';\n\t\t\t\t} else {\n\t\t\t\t\t$name  = array_key_exists(1, $check_email) ? $check_email[1] : '';\n\t\t\t\t\t$email = array_key_exists(0, $check_email) ? $check_email[0] : '';\n\t\t\t\t}\n\n\t\t\t\t$details[trim(strtolower($email))] = array('name' => trim($name), 'email' => trim(strtolower($email)));\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($max_records == 1) {\n\t\t$detail  = reset($details);\n\t\t$results = is_array($detail) ? $detail : array();\n\t} elseif ($max_records != 0 && $max_records < count($details)) {\n\t\t$results = array();\n\t\tforeach ($details as $d) {\n\t\t\t$results[] = $d;\n\t\t\t$max_records--;\n\t\t\tif ($max_records == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$results = $details;\n\t}\n\n\treturn $results;\n}\n\nfunction split_emaildetail($email) {\n\t$rname  = '';\n\t$rmail = '';\n\n\tif (!is_array($email)) {\n\t\t$email = trim($email);\n\n\t\t$sPattern = '/(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/i';\n\t\tpreg_match($sPattern, $email, $aMatch);\n\n\t\tif (isset($aMatch[1])) {\n\t\t\t$rname = trim($aMatch[1]);\n\t\t}\n\n\t\tif (isset($aMatch[2])) {\n\t\t\t$rmail = trim($aMatch[2]);\n\t\t}\n\t} else {\n\t\t$rmail = $email[0];\n\t\t$rname = $email[1];\n\t}\n\n\treturn array('name' => $rname, 'email' => strtolower($rmail));\n}\n\nfunction create_emailtext($e) {\n\tif (empty($e['email'])) {\n\t\t$text = '';\n\t} else {\n\t\tif (empty($e['name'])) {\n\t\t\t$text = $e['email'];\n\t\t} else {\n\t\t\t$text = $e['name'] . ' <' . $e['email'] . '>';\n\t\t}\n\t}\n\n\treturn $text;\n}\n\nfunction ping_mail_server($host, $port, $user, $password, $timeout = 10, $secure = 'none') {\n\tglobal $config;\n\n    require_once($config['include_path'] . '/vendor/phpmailer/src/Exception.php');\n    require_once($config['include_path'] . '/vendor/phpmailer/src/PHPMailer.php');\n    require_once($config['include_path'] . '/vendor/phpmailer/src/SMTP.php');\n\n\t//Create a new SMTP instance\n\t$smtp = new PHPMailer\\PHPMailer\\SMTP;\n\n\tif (!empty($secure) && $secure != 'none') {\n\t\t$smtp->SMTPSecure = $secure;\n\t\tif (substr_count($host, ':') == 0) {\n\t\t\t$host = $secure . '://' . $host;\n\t\t}\n\t} else {\n\t\t$smtp->SMTPAutoTLS = false;\n\t\t$smtp->SMTPSecure = false;\n\t}\n\n\t//Enable connection-level debug output\n\t$smtp->do_debug = 0;\n\t//$smtp->do_debug = SMTP::DEBUG_LOWLEVEL;\n\n\t$results = true;\n\ttry {\n\t\t//Connect to an SMTP server\n\t\tif ($smtp->connect($host, $port, $timeout)) {\n\t\t\t//Say hello\n\t\t\tif ($smtp->hello(gethostbyname(gethostname()))) { //Put your host name in here\n\t\t\t\t//Authenticate\n\t\t\t\tif ($user != '') {\n\t\t\t\t\tif ($smtp->authenticate($user, $password)) {\n\t\t\t\t\t\t$results = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Exception(__('Authentication failed: %s', $smtp->getLastReply()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Exception(__('HELO failed: %s', $smtp->getLastReply()));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Exception(__('Connect failed: %s', $smtp->getLastReply()));\n\t\t}\n\t} catch (Exception $e) {\n\t\t$results = __('SMTP error: ') . $e->getMessage();\n\t\tcacti_log($results);\n\t}\n\n\t//Whatever happened, close the connection.\n\t$smtp->quit(true);\n\n\treturn $results;\n}\n\nfunction email_test() {\n\tglobal $config;\n\n\t$message =  __('This is a test message generated from Cacti.  This message was sent to test the configuration of your Mail Settings.') . '<br><br>';\n\t$message .= __('Your email settings are currently set as follows') . '<br><br>';\n\t$message .= '<b>' . __('Method') . '</b>: ';\n\n\tprint __('Checking Configuration...<br>');\n\n\t$ping_results = true;\n\t$how = read_config_option('settings_how');\n\tif ($how < 0 || $how > 2)\n\t\t$how = 0;\n\tif ($how == 0) {\n\t\t$mail = __('PHP\\'s Mailer Class');\n\t} elseif ($how == 1) {\n\t\t$mail = __('Sendmail') . '<br><b>' . __('Sendmail Path'). '</b>: ';\n\t\t$sendmail = read_config_option('settings_sendmail_path');\n\t\t$mail .= $sendmail;\n\t} elseif ($how == 2) {\n\t\tprint __('Method: SMTP') . '<br>';\n\t\t$mail = __('SMTP') . '<br>';\n\t\t$smtp_host = read_config_option('settings_smtp_host');\n\t\t$smtp_port = read_config_option('settings_smtp_port');\n\t\t$smtp_username = read_config_option('settings_smtp_username');\n\t\t$smtp_password = read_config_option('settings_smtp_password');\n\t\t$smtp_secure   = read_config_option('settings_smtp_secure');\n\t\t$smtp_timeout  = read_config_option('settings_smtp_timeout');\n\n\t\t$mail .= \"<b>\" . __('Device') . \"</b>: $smtp_host<br>\";\n\t\t$mail .= \"<b>\" . __('Port') . \"</b>: $smtp_port<br>\";\n\n\t\tif ($smtp_username != '' && $smtp_password != '') {\n\t\t\t$mail .= '<b>' . __('Authentication') . '</b>: true<br>';\n\t\t\t$mail .= '<b>' . __('Username') . \"</b>: $smtp_username<br>\";\n\t\t\t$mail .= '<b>' . __('Password') . '</b>: (' . __('Not Shown for Security Reasons') . ')<br>';\n\t\t\t$mail .= '<b>' . __('Security') . \"</b>: $smtp_secure<br>\";\n\t\t} else {\n\t\t\t$mail .= '<b>' . __('Authentication') . '</b>: false<br>';\n\t\t}\n\n\t\tif (read_config_option('settings_ping_mail') == 0) {\n\t\t\t$ping_results = ping_mail_server($smtp_host, $smtp_port, $smtp_username, $smtp_password, $smtp_timeout, $smtp_secure);\n\n\t\t\tprint __('Ping Results:') . ' ' . ($ping_results == 1 ? __('Success'):$ping_results) . '<br>';\n\n\t\t\tif ($ping_results != 1) {\n\t\t\t\t$mail .= '<b>' . __('Ping Results') . '</b>: ' . $ping_results . '<br>';\n\t\t\t} else {\n\t\t\t\t$mail .= '<b>' . __('Ping Results') . '</b>: ' . __('Success') . '<br>';\n\t\t\t}\n\t\t} else {\n\t\t\t$ping_results = 1;\n\t\t\t$mail .= '<b>' . __('Ping Results') . '</b>: ' . __('Bypassed') . '<br>';\n\t\t}\n\t}\n\t$message .= $mail;\n\t$message .= '<br>';\n\n\t$errors = '';\n\tif ($ping_results == 1) {\n\t\tprint __('Creating Message Text...') . '<br><br>';\n\t\tprint \"<center><table><tr><td>\";\n\t\tprint \"<table style='width:100%;'><tr><td>$message</td><tr></table></table></center><br>\";\n\t\tprint __('Sending Message...') . '<br><br>';\n\n\t\t$global_alert_address = read_config_option('settings_test_email');\n\n\t\t$errors = send_mail($global_alert_address, '', __('Cacti Test Message'), $message, '', '', true);\n\t\tif ($errors == '') {\n\t\t\t$errors = __('Success!');\n\t\t}\n\t} else {\n\t\tprint __('Message Not Sent due to ping failure.'). '<br><br>';\n\t}\n\n\tprint \"<center><table><tr><td>\";\n\tprint \"<table><tr><td>$errors</td><tr></table></table></center>\";\n}\n\n/**\n * gethostbyaddr_wtimeout - This function provides a good method of performing\n * a rapid lookup of a DNS entry for a host so long as you don't have to look far.\n */\nfunction get_dns_from_ip ($ip, $dns, $timeout = 1000) {\n\t/* random transaction number (for routers etc to get the reply back) */\n\t$data = rand(10, 99);\n\n\t/* trim it to 2 bytes */\n\t$data = substr($data, 0, 2);\n\n\t/* create request header */\n\t$data .= \"\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\";\n\n\t/* split IP into octets */\n\t$octets = explode('.', $ip);\n\n\t/* perform a quick error check */\n\tif (cacti_count($octets) != 4) return 'ERROR';\n\n\t/* needs a byte to indicate the length of each segment of the request */\n\tfor ($x=3; $x>=0; $x--) {\n\t\tswitch (strlen($octets[$x])) {\n\t\tcase 1: // 1 byte long segment\n\t\t\t$data .= \"\\1\"; break;\n\t\tcase 2: // 2 byte long segment\n\t\t\t$data .= \"\\2\"; break;\n\t\tcase 3: // 3 byte long segment\n\t\t\t$data .= \"\\3\"; break;\n\t\tdefault: // segment is too big, invalid IP\n\t\t\treturn 'ERROR';\n\t\t}\n\n\t\t/* and the segment itself */\n\t\t$data .= $octets[$x];\n\t}\n\n\t/* and the final bit of the request */\n\t$data .= \"\\7in-addr\\4arpa\\0\\0\\x0C\\0\\1\";\n\n\t/* create UDP socket */\n\t$handle = @fsockopen(\"udp://$dns\", 53);\n\n\t@stream_set_timeout($handle, floor($timeout/1000), ($timeout*1000)%1000000);\n\t@stream_set_blocking($handle, 1);\n\n\t/* send our request (and store request size so we can cheat later) */\n\t$requestsize = @fwrite($handle, $data);\n\n\t/* get the response */\n\t$response = @fread($handle, 1000);\n\n\t/* check to see if it timed out */\n\t$info = @stream_get_meta_data($handle);\n\n\t/* close the socket */\n\t@fclose($handle);\n\n\tif ($info['timed_out']) {\n\t\treturn 'timed_out';\n\t}\n\n\t/* more error handling */\n\tif ($response == '') { return $ip; }\n\n\t/* parse the response and find the response type */\n\t$type = @unpack('s', substr($response, $requestsize+2));\n\n\tif (isset($type[1]) && $type[1] == 0x0C00) {\n\t\t/* set up our variables */\n\t\t$host = '';\n\t\t$len = 0;\n\n\t\t/* set our pointer at the beginning of the hostname uses the request\n\t\t   size from earlier rather than work it out.\n\t\t*/\n\t\t$position = $requestsize + 12;\n\n\t\t/* reconstruct the hostname */\n\t\tdo {\n\t\t\t/* get segment size */\n\t\t\t$len = unpack('c', substr($response, $position));\n\n\t\t\t/* null terminated string, so length 0 = finished */\n\t\t\tif ($len[1] == 0) {\n\t\t\t\t/* return the hostname, without the trailing '.' */\n\t\t\t\treturn strtoupper(substr($host, 0, strlen($host) -1));\n\t\t\t}\n\n\t\t\t/* add the next segment to our host */\n\t\t\t$host .= substr($response, $position+1, $len[1]) . '.';\n\n\t\t\t/* move pointer on to the next segment */\n\t\t\t$position += $len[1] + 1;\n\t\t} while ($len != 0);\n\n\t\t/* error - return the hostname we constructed (without the . on the end) */\n\t\treturn strtoupper($ip);\n\t}\n\n\t/* error - return the hostname */\n\treturn strtoupper($ip);\n}\n\nfunction poller_maintenance () {\n\tglobal $config;\n\n\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\n\t// If its not set, just assume its in the path\n\tif (trim($command_string) == '') {\n\t\t$command_string = 'php';\n\t}\n\n\t$extra_args = ' -q ' . cacti_escapeshellarg($config['base_path'] . '/poller_maintenance.php');\n\n\texec_background($command_string, $extra_args);\n}\n\nfunction clog_admin() {\n\tif (!isset($_SESSION['sess_clog_level'])) {\n\t\tclog_authorized();\n\t}\n\n\tif ($_SESSION[\"sess_clog_level\"] == CLOG_PERM_ADMIN) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction clog_authorized() {\n\tif (!isset($_SESSION['sess_clog_level'])) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\tif (is_realm_allowed(18)) {\n\t\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_ADMIN;\n\t\t\t} else {\n\t\t\t\tif (is_realm_allowed(19)) {\n\t\t\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_USER;\n\t\t\t\t} else {\n\t\t\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_NONE;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_NONE;\n\t\t}\n\t}\n\n\tif ($_SESSION['sess_clog_level'] == CLOG_PERM_USER) {\n\t\treturn true;\n\t} elseif ($_SESSION['sess_clog_level'] == CLOG_PERM_ADMIN) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction cacti_debug_backtrace($entry = '', $html = false, $record = true, $limit = 0, $skip = 0) {\n\tglobal $config;\n\n\t$skip = $skip >= 0 ? $skip : 1;\n\t$limit = $limit > 0 ? ($limit + $skip) : 0;\n\n\t$callers = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS, $limit);\n\twhile ($skip > 0) {\n\t\tarray_shift($callers);\n\t\t$skip--;\n\t}\n\n\t$s='';\n\tforeach ($callers as $c) {\n\t\tif (isset($c['line'])) {\n\t\t\t$line = '[' . $c['line'] . ']';\n\t\t} else {\n\t\t\t$line = '';\n\t\t}\n\n\t\tif (isset($c['file'])) {\n\t\t\t$file = str_replace($config['base_path'], '', $c['file']) . $line;\n\t\t} else {\n\t\t\t$file = $line;\n\t\t}\n\n\t\t$func = $c['function'].'()';\n\t\tif (isset($c['class'])) {\n\t\t\t$func = $c['class'] . $c['type'] . $func;\n\t\t}\n\n\t\t$s = ($file != '' ? $file . ':':'') . \"$func\" . (empty($s) ? '' : ', ') . $s;\n\t}\n\n\tif (!empty($s)) {\n\t\t$s = ' (' . $s . ')';\n\t}\n\n\tif ($record) {\n\t\tif ($html) {\n\t\t\tprint \"<table style='width:100%;text-align:center;'><tr><td>$s</td></tr></table>\\n\";\n\t\t}\n\n\t\tcacti_log(trim(\"$entry Backtrace: \" . clean_up_lines($s)), false);\n\t} else {\n\t\tif (!empty($entry)) {\n\t\t\treturn trim(\"$entry Backtrace: \" . clean_up_lines($s));\n\t\t} else {\n\t\t\treturn trim(clean_up_lines($s));\n\t\t}\n\t}\n}\n\n/**\n * calculate_percentiles - Given and array of numbers, calculate the Nth percentile,\n * optionally, return an array of numbers containing elements required for\n * a whisker chart.\n *\n * @param $data       - an array of data\n * @param $percentile - the Nth percentile to calculate.  By default 95th.\n * @param $whisker    - if whisker is true, an array of values will be returned\n *                      including 25th, median, 75th, and 90th percentiles.\n *\n * @return - either the Nth percentile, the elements for a whisker chart,\n *            or false if there is insufficient data to determine.\n */\nfunction calculate_percentiles($data, $percentile = 95, $whisker = false) {\n\tif ($percentile > 0 && $percentile < 1) {\n\t\t$p = $percentile;\n\t} elseif ($percentile > 1 && $percentile <= 100) {\n\t\t$p = $percentile * .01;\n\t} else {\n\t\treturn false;\n\t}\n\n\tif ($whisker) {\n\t\t$tiles = array(\n\t\t\t'25th' => 0.25,\n\t\t\t'50th' => 0.50,\n\t\t\t'75th' => 0.75,\n\t\t\t'90th' => 0.90,\n\t\t\t'95th' => 0.95,\n\t\t);\n\t} else {\n\t\t$tiles = array(\n\t\t\t'custom' => $p\n\t\t);\n\t}\n\n\t$results  = array();\n\t$elements = cacti_sizeof($data);\n\n\t/* sort the array to return */\n\tsort($data);\n\n\tforeach($tiles as $index => $p) {\n\t\t/* calculate offsets into the array */\n\t\t$allindex    = ($elements - 1) * $p;\n\t\t$intvalindex = floor($allindex);\n\t\t$floatval    = $allindex - $intvalindex;\n\n\t\tif (!is_float($floatval)) {\n\t\t\t$ptile = $data[$intvalindex];\n\t\t} else {\n\t\t\tif ($elements > $intvalindex + 1) {\n\t\t\t\t$ptile = $floatval * ($data[$intvalindex + 1] - $data[$intvalindex]) + $data[$intvalindex];\n\t\t\t} else {\n\t\t\t\t$ptile = $data[$intvalindex];\n\t\t\t}\n\t\t}\n\n\t\tif ($index == 'custom') {\n\t\t\treturn $ptile;\n\t\t} else {\n\t\t\t$results[$index] = $ptile;\n\t\t}\n\t}\n\n\treturn $results;\n}\n\nfunction get_timeinstate($host) {\n\t$interval = read_config_option('poller_interval');\n\tif ($host['availability_method'] == 0) {\n\t\t$time = 0;\n\t} elseif (isset($host['instate'])) {\n\t\t$time = $host['instate'];\n\t} elseif ($host['status_event_count'] > 0 && ($host['status'] == 1 || $host['status'] == 2 || $host['status'] == 5)) {\n\t\t$time = $host['status_event_count'] * $interval;\n\t} elseif (strtotime($host['status_rec_date']) < 943916400 && ($host['status'] == 0 || $host['status'] == 3)) {\n\t\t$time = $host['total_polls'] * $interval;\n\t} elseif (strtotime($host['status_rec_date']) > 943916400) {\n\t\t$time = time() - strtotime($host['status_rec_date']);\n\t} elseif ($host['snmp_sysUpTimeInstance'] > 0) {\n\t\t$time = $host['snmp_sysUpTimeInstance']/100;\n\t} else {\n\t\t$time = 0;\n\t}\n\n\tif ($time > 2E13) {\n\t\t$time = 0;\n\t}\n\n\treturn ($time > 0) ? get_daysfromtime($time) : __('N/A');\n}\n\nfunction get_uptime($host) {\n\treturn ($host['snmp_sysUpTimeInstance'] > 0) ? get_daysfromtime(intval($host['snmp_sysUpTimeInstance']/100)) : __('N/A');\n}\n\nfunction get_daysfromtime($time, $secs = false, $pad = '', $format = DAYS_FORMAT_SHORT, $all = false) {\n\tglobal $days_from_time_settings;\n\n\t// Work around stricter typing in PHP 8.1.2+\n\tif (is_float($time)) {\n\t\t$time = intval(ceil($time));\n\t}\n\n\t// Ensure we use an existing format or we'll end up with no text at all\n\tif (!isset($days_from_time_settings['text'][$format])) {\n\t\t$format = DAYS_FORMAT_SHORT;\n\t}\n\n\t$mods = $days_from_time_settings['mods'];\n\t$text = $days_from_time_settings['text'][$format];\n\n\t$result = '';\n\tforeach ($mods as $index => $mod) {\n\t\tif ($mod > 0 || $secs) {\n\t\t\tif ($time >= $mod) {\n\t\t\t\tif ($mod < 1 || !is_numeric($mod)) {\n\t\t\t\t\t$mod = 1;\n\t\t\t\t}\n\t\t\t\t$val   = floor($time/$mod);\n\t\t\t\t$time %= $mod;\n\t\t\t} else {\n\t\t\t\t$val   = 0;\n\t\t\t}\n\n\t\t\tif ($all || $val > 0) {\n\t\t\t\t$result .= padleft($pad, $val, 2) . $text['prefix'] . $text[$index] . $text['suffix'];\n\t\t\t\t$all = true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn trim($result,$text['suffix']);\n}\n\nfunction padleft($pad = '', $value = '', $min = 2) {\n\t$result = \"$value\";\n\tif (strlen($result) < $min && $pad != '') {\n\t\t$padded = $pad . $result;\n\t\twhile ($padded != $result && strlen($result) < $min) {\n\t\t\t$padded = $pad . $result;\n\t\t}\n\t\t$result = $padded;\n\t}\n\treturn $result;\n}\n\nfunction get_classic_tabimage($text, $down = false) {\n\tglobal $config, $dejavu_paths;\n\n\t$images = array(\n\t\tfalse => 'tab_template_blue.gif',\n\t\ttrue  => 'tab_template_red.gif'\n\t);\n\n\tif ($text == '') return false;\n\n\t$text = strtolower($text);\n\n\t$possibles = array(\n\t\tarray('DejaVuSans-Bold.ttf', 9, true),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 9, false),\n\t\tarray('DejaVuSans-Bold.ttf', 9, false),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 9, false),\n\t\tarray('DejaVuSans-Bold.ttf', 8, false),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 8, false),\n\t\tarray('DejaVuSans-Bold.ttf', 7, false),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 7, true),\n\t);\n\n\t$y        = 30;\n\t$x        = 44;\n\t$wlimit   = 72;\n\t$wrapsize = 12;\n\n\tif (file_exists($config['base_path'] . '/images/' . $images[$down])) {\n\t\tforeach ($dejavu_paths as $dejavupath) {\n\t\t\tif (file_exists($dejavupath)) {\n\t\t\t\t$font_path = $dejavupath;\n\t\t\t}\n\t\t}\n\n\t\t$originalpath = getenv('GDFONTPATH');\n\t\tputenv('GDFONTPATH=' . $font_path);\n\n\t\t$template = imagecreatefromgif ($config['base_path'] . '/images/' . $images[$down]);\n\n\t\t$w = imagesx($template);\n\t\t$h = imagesy($template);\n\n\t\t$tab = imagecreatetruecolor($w, $h);\n\t\timagecopy($tab, $template, 0, 0, 0, 0, $w, $h);\n\n\t\t$txcol = imagecolorat($tab, 0, 0);\n\t\timagecolortransparent($tab,$txcol);\n\n\t\t$white = imagecolorallocate($tab, 255, 255, 255);\n\t\t$ttf_functions = function_exists('imagettftext') && function_exists('imagettfbbox');\n\n\t\tif ($ttf_functions) {\n\t\t\tforeach ($possibles as $variation) {\n\t\t\t\t$font     = $variation[0];\n\t\t\t\t$fontsize = $variation[1];\n\n\t\t\t\t$lines = array();\n\n\t\t\t\t// if no wrapping is requested, or no wrapping is possible...\n\t\t\t\tif ((!$variation[2]) || ($variation[2] && strpos($text,' ') === false)) {\n\t\t\t\t\t$bounds  = imagettfbbox($fontsize, 0, $font, $text);\n\t\t\t\t\t$w       = $bounds[4] - $bounds[0];\n\t\t\t\t\t$h       = $bounds[1] - $bounds[5];\n\t\t\t\t\t$realx   = $x - $w/2 -1;\n\t\t\t\t\t$lines[] = array($text, $font, $fontsize, $realx, $y);\n\t\t\t\t\t$maxw    = $w;\n\t\t\t\t} else {\n\t\t\t\t\t$texts = explode(\"\\n\", wordwrap($text, $wrapsize), 2);\n\t\t\t\t\t$line  = 1;\n\t\t\t\t\t$maxw  = 0;\n\t\t\t\t\tforeach ($texts as $txt) {\n\t\t\t\t\t\t$bounds  = imagettfbbox($fontsize, 0, $font, $txt);\n\t\t\t\t\t\t$w       = $bounds[4] - $bounds[0];\n\t\t\t\t\t\t$h       = $bounds[1] - $bounds[5];\n\t\t\t\t\t\t$realx   = $x - $w/2 -1;\n\t\t\t\t\t\t$realy   = $y - $h * $line + 3;\n\t\t\t\t\t\t$lines[] = array($txt, $font, $fontsize, $realx, $realy);\n\t\t\t\t\t\tif ($maxw < $w) {\n\t\t\t\t\t\t\t$maxw = $w;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$line--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($maxw<$wlimit) break;\n\t\t\t}\n\t\t} else {\n\t\t\twhile ($text > '') {\n\t\t\t\tfor ($fontid = 5; $fontid>0; $fontid--) {\n\t\t\t\t\t$fontw = imagefontwidth($fontid);\n\t\t\t\t\t$fonth = imagefontheight($fontid);\n\t\t\t\t\t$realx = ($w - ($fontw * strlen($text)))/2;\n\t\t\t\t\t$realy = ($h - $fonth - 5);\n\n\t\t\t\t\t// Since we can't use FreeType, lets use a fixed location\n\t\t\t\t\t$lines = array();\n\t\t\t\t\t$lines[] = array($text, $fontid, 0, $realx, $realy);\n\n\t\t\t\t\tif ($realx > 10 && $realy > 0) break;\n\t\t\t\t}\n\n\t\t\t\tif ($fontid == 0) {\n\t\t\t\t\t$spacer = strrpos($text,' ');\n\t\t\t\t\tif ($spacer === false) {\n\t\t\t\t\t\t$spacer = strlen($text) - 1;\n\t\t\t\t\t}\n\t\t\t\t\t$text = substr($text,0,$spacer);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tforeach ($lines as $line) {\n\t\t\tif ($ttf_functions) {\n\t\t\t\timagettftext($tab, $line[2], 0, $line[3], $line[4], $white, $line[1], $line[0]);\n\t\t\t} else {\n\t\t\t\timagestring($tab, $line[1], $line[3], $line[4], $line[0], $white);\n\t\t\t}\n\t\t}\n\n\t\tputenv('GDFONTPATH=' . $originalpath);\n\n\t\timagetruecolortopalette($tab, true, 256);\n\n\t\t// generate the image an return the data directly\n\t\tob_start();\n\t\timagegif ($tab);\n\t\t$image = ob_get_contents();\n\t\tob_end_clean();\n\n\t\treturn(\"data:image/gif;base64,\" . base64_encode($image));\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction cacti_oid_numeric_format() {\n\tif (function_exists('snmp_set_oid_output_format')) {\n\t\tsnmp_set_oid_output_format(SNMP_OID_OUTPUT_NUMERIC);\n\t} elseif (function_exists(\"snmp_set_oid_numeric_print\")) {\n\t\tsnmp_set_oid_numeric_print(true);\n\t}\n}\n\nfunction IgnoreErrorHandler($message) {\n\tglobal $snmp_error;\n\n\t$snmp_ignore = array(\n\t\t'No response from',\n\t\t'noSuchName',\n\t\t'No Such Object',\n\t\t'Error in packet',\n\t\t'This name does not exist',\n\t\t'End of MIB',\n\t\t'Timeout',\n\t\t'Unknown host',\n\t\t'Connection timed out',\n\t\t'Invalid object identifier',\n\t\t'Name or service not known',\n\t\t'USM generic error in file',\n\t);\n\n\tforeach ($snmp_ignore as $i) {\n\t\tif (stripos($message, $i) !== false) {\n\t\t\t$snmp_error = trim($message, \"\\\\\\n\\t \");\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t$general_ignore = array(\n\t\t'unable to read from socket',  # ping.php line 387 socket refusal\n\t\t'Maximum execution time of',\n\t);\n\n\tforeach ($general_ignore as $i) {\n\t\tif (stripos($message, $i) !== false) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction CactiErrorHandler($level, $message, $file, $line, $context = array()) {\n\tglobal $phperrors;\n\n\tif (defined('IN_CACTI_INSTALL')) {\n\t\treturn true;\n\t}\n\n\tif (IgnoreErrorHandler($message)) {\n\t\treturn true;\n\t}\n\n\tif (error_reporting() == 0) {\n\t\treturn true;\n\t}\n\n\tpreg_match(\"/.*\\/plugins\\/([\\w-]*)\\/.*/\", $file, $output_array);\n\n\t$plugin = (is_array($output_array) && isset($output_array[1]) ? $output_array[1] : '');\n\t$error  = 'PHP ' . $phperrors[$level] . ($plugin != '' ? \" in  Plugin '$plugin'\" : '') . \": $message in file: $file  on line: $line\";\n\n\tswitch ($level) {\n\t\tcase E_COMPILE_ERROR:\n\t\tcase E_CORE_ERROR:\n\t\tcase E_ERROR:\n\t\tcase E_PARSE:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR PARSE', false, true, 0, 1);\n\t\t\tif ($plugin != '') {\n\t\t\t\tapi_plugin_disable_all($plugin);\n\t\t\t\tcacti_log(\"ERRORS DETECTED - DISABLING PLUGIN '$plugin'\");\n\t\t\t\tadmin_email(__('Cacti System Warning'), __('Cacti disabled plugin %s due to the following error: %s!  See the Cacti logfile for more details.', $plugin, $error));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase E_RECOVERABLE_ERROR:\n\t\tcase E_USER_ERROR:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR', false, true, 0, 1);\n\t\t\tbreak;\n\t\tcase E_COMPILE_WARNING:\n\t\tcase E_CORE_WARNING:\n\t\tcase E_USER_WARNING:\n\t\tcase E_WARNING:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR WARNING', false, true, 0, 1);\n\t\t\tbreak;\n\t\tcase E_NOTICE:\n\t\tcase E_USER_NOTICE:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR NOTICE', false, true, 0, 1);\n\t\t\tbreak;\n\t\tcase E_STRICT:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR STRICT', false, true, 0, 1);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR', false, true, 0, 1);\n\t}\n\n\treturn false;\n}\n\nfunction CactiShutdownHandler() {\n\tglobal $phperrors;\n\t$error = error_get_last();\n\n\tif (is_array($error)) {\n\t\tif (isset($error['message']) && IgnoreErrorHandler($error['message'])) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (isset($error['type'])) {\n\t\t\tswitch ($error['type']) {\n\t\t\t\tcase E_ERROR:\n\t\t\t\tcase E_CORE_ERROR:\n\t\t\t\tcase E_COMPILE_ERROR:\n\t\t\t\tcase E_CORE_WARNING:\n\t\t\t\tcase E_COMPILE_WARNING:\n\t\t\t\tcase E_PARSE:\n\t\t\t\t\tpreg_match('/.*\\/plugins\\/([\\w-]*)\\/.*/', $error['file'], $output_array);\n\n\t\t\t\t\t$plugin = (isset($output_array[1]) ? $output_array[1] : '' );\n\n\t\t\t\t\t$message = 'PHP ' . $phperrors[$error['type']] .\n\t\t\t\t\t\t($plugin != '' ? \" in  Plugin '$plugin'\" : '') . ': ' . $error['message'] .\n\t\t\t\t\t\t' in file: ' .  $error['file'] . ' on line: ' . $error['line'];\n\n\t\t\t\t\tcacti_log($message, false, 'ERROR');\n\t\t\t\t\tcacti_debug_backtrace('PHP ERROR', false, true, 0, 1);\n\n\t\t\t\t\tif ($plugin != '') {\n\t\t\t\t\t\tapi_plugin_disable_all($plugin);\n\t\t\t\t\t\tcacti_log(\"ERRORS DETECTED - DISABLING PLUGIN '$plugin'\");\n\t\t\t\t\t\tadmin_email(__('Cacti System Warning'), __('Cacti disabled plugin %s due to the following error: %s!  See the Cacti logfile for more details.', $plugin, $message));\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * enable_device_debug - Enables device debug for a device\n * if it is disabled.\n *\n * @param $host_id - the device id to search for\n *\n * @return - void\n */\nfunction enable_device_debug($host_id) {\n\t$device_debug = read_config_option('selective_device_debug', true);\n\tif ($device_debug != '') {\n\t\t$devices = explode(',', $device_debug);\n\t\tif (array_search($host_id, $devices) === false) {\n\t\t\tset_config_option('selective_device_debug', $device_debug . ',' . $host_id, true);\n\t\t}\n\t} else {\n\t\tset_config_option('selective_device_debug', $host_id, true);\n\t}\n}\n\n/**\n * disable_device_debug - Disables device debug for a device\n * if it is enabled.\n *\n * @param $host_id - the device id to search for\n *\n * @return - void\n */\nfunction disable_device_debug($host_id) {\n\t$device_debug = read_config_option('selective_device_debug', true);\n\tif ($device_debug != '') {\n\t\t$devices = explode(',', $device_debug);\n\t\tforeach($devices as $key => $device) {\n\t\t\tif ($device == $host_id) {\n\t\t\t\tunset($devices[$key]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tset_config_option('selective_device_debug', implode(',', $devices), true);\n\t}\n}\n\n/**\n * is_device_debug_enabled - Determines if device debug is enabled\n * for a device.\n *\n * @param $host_id - the device id to search for\n *\n * @return - boolean true or false\n */\nfunction is_device_debug_enabled($host_id) {\n\t$device_debug = read_config_option('selective_device_debug', true);\n\tif ($device_debug != '') {\n\t\t$devices = explode(',', $device_debug);\n\t\tif (array_search($host_id, $devices) !== false) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * get_url_type - Determines if remote communications are over\n * http or https for remote services.\n *\n * @return - http or https\n */\nfunction get_url_type() {\n\tif (read_config_option('force_https') == 'on') {\n\t\treturn 'https';\n\t} else {\n\t\treturn 'http';\n\t}\n}\n\n/**\n * get_default_contextoption - Sets default context options for self-signed SSL\n * related protocols if necessary. Allows plugins to add additional header information\n * to fulfill system setup related requirements like the usage of Web Single Login\n * cookies for example.\n *\n * @param  (int|bool) A numeric timeout value, or null if not set\n *\n * @return (array)    An array to a context\n */\nfunction get_default_contextoption($timeout = false) {\n\t$fgc_contextoption = array();\n\n\tif ($timeout === false) {\n\t\t$timeout = read_config_option('remote_agent_timeout');\n\t}\n\n\tif (!is_numeric($timeout) || empty($timeout) || $timeout <= 0) {\n\t\t$timeout = 5;\n\t}\n\n\t$protocol = get_url_type();\n\n\tif (in_array($protocol, array('ssl', 'https', 'ftps'))) {\n\t\t$fgc_contextoption = array(\n\t\t\t'ssl' => array(\n\t\t\t\t'verify_peer' => false,\n\t\t\t\t'verify_peer_name' => false,\n\t\t\t\t'allow_self_signed' => true,\n\t\t\t)\n\t\t);\n\t}\n\n\tif ($protocol == 'https') {\n\t\t$fgc_contextoption['https'] = array(\n\t\t\t'timeout' => $timeout,\n\t\t\t'ignore_errors' => true\n\t\t);\n\t} elseif ($protocol == 'http') {\n\t\t$fgc_contextoption['http'] = array(\n\t\t\t'timeout' => $timeout,\n\t\t\t'ignore_errors' => true\n\t\t);\n\t}\n\n\t$fgc_contextoption = api_plugin_hook_function('fgc_contextoption', $fgc_contextoption);\n\n\treturn $fgc_contextoption;\n}\n\n/**\n * repair_system_data_input_methods - This utility will repair\n * system data input methods when they are detected on the system\n *\n * @return - null\n */\nfunction repair_system_data_input_methods($step = 'import') {\n\t$system_hashes = array(\n\t\t'3eb92bb845b9660a7445cf9740726522', // Get SNMP Data\n\t\t'bf566c869ac6443b0c75d1c32b5a350e', // Get SNMP Data (Indexed)\n\t\t'80e9e4c4191a5da189ae26d0e237f015', // Get Script Data (Indexed)\n\t\t'332111d8b54ac8ce939af87a7eac0c06', // Get Script Server Data (Indexed)\n\t);\n\n\t$good_field_hashes = array(\n\t\t'3eb92bb845b9660a7445cf9740726522' => array( // Get SNMP Data (1)\n\t\t\t'92f5906c8dc0f964b41f4253df582c38', // IP Address\n\t\t\t'012ccb1d3687d3edb29c002ea66e72da', // SNMP Version\n\t\t\t'32285d5bf16e56c478f5e83f32cda9ef', // SNMP Community\n\t\t\t'fc64b99742ec417cc424dbf8c7692d36', // SNMP Port\n\t\t\t'ad14ac90641aed388139f6ba86a2e48b', // SNMP Username\n\t\t\t'9c55a74bd571b4f00a96fd4b793278c6', // SNMP Password\n\t\t\t'20832ce12f099c8e54140793a091af90', // SNMP Authentication Protocol\n\t\t\t'c60c9aac1e1b3555ea0620b8bbfd82cb', // SNMP Privacy Passphrase\n\t\t\t'feda162701240101bc74148415ef415a', // SNMP Privacy Protocol\n\t\t\t'4276a5ec6e3fe33995129041b1909762'  // SNMP OID\n\t\t),\n\t\t'bf566c869ac6443b0c75d1c32b5a350e' => array( // Get SNMP Data (Indexed) (2)\n\t\t\t'617cdc8a230615e59f06f361ef6e7728', // IP Address\n\t\t\t'b5c23f246559df38662c255f4aa21d6b', // SNMP Version\n\t\t\t'acb449d1451e8a2a655c2c99d31142c7', // SNMP Community\n\t\t\t'c1f36ee60c3dc98945556d57f26e475b', // SNMP Port\n\t\t\t'f4facc5e2ca7ebee621f09bc6d9fc792', // SNMP Username\n\t\t\t'1cc1493a6781af2c478fa4de971531cf', // SNMP Password\n\t\t\t'2cf7129ad3ff819a7a7ac189bee48ce8', // SNMP Authentication Protocol\n\t\t\t'6b13ac0a0194e171d241d4b06f913158', // SNMP Privacy Passphrase\n\t\t\t'3a33d4fc65b8329ab2ac46a36da26b72', // SNMP Privacy Protocol\n\t\t\t'6027a919c7c7731fbe095b6f53ab127b', // Index Type\n\t\t\t'cbbe5c1ddfb264a6e5d509ce1c78c95f', // Index Value\n\t\t\t'e6deda7be0f391399c5130e7c4a48b28'  // Output Type ID\n\t\t),\n\t\t'80e9e4c4191a5da189ae26d0e237f015' => array( // Get Script Data (Indexed) 11\n\t\t\t'd39556ecad6166701bfb0e28c5a11108', // Index Type\n\t\t\t'3b7caa46eb809fc238de6ef18b6e10d5', // Index Value\n\t\t\t'74af2e42dc12956c4817c2ef5d9983f9', // Output Type ID\n\t\t\t'8ae57f09f787656bf4ac541e8bd12537'  // Output Value\n\t\t),\n\t\t'332111d8b54ac8ce939af87a7eac0c06' => array( // Get Script Server Data (Indexed) 12\n\t\t\t'172b4b0eacee4948c6479f587b62e512', // Index Type\n\t\t\t'30fb5d5bcf3d66bb5abe88596f357c26', // Index Value\n\t\t\t'31112c85ae4ff821d3b288336288818c', // Output Type ID\n\t\t\t'5be8fa85472d89c621790b43510b5043'  // Output Value\n\t\t)\n\t);\n\n\tforeach($good_field_hashes as $hash => $field_hashes) {\n\t\t$data_input_id = db_fetch_cell_prepared('SELECT id FROM data_input WHERE hash = ?', array($hash));\n\n\t\tif (!empty($data_input_id)) {\n\t\t\t$bad_hashes = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM data_input_fields\n\t\t\t\tWHERE hash NOT IN (\"' . implode('\",\"', $field_hashes) . '\")\n\t\t\t\tAND hash != \"\"\n\t\t\t\tAND data_input_id = ?',\n\t\t\t\tarray($data_input_id));\n\n\t\t\tif (cacti_sizeof($bad_hashes)) {\n\t\t\t\tcacti_log(strtoupper($step) . ' NOTE: Repairing ' . cacti_sizeof($bad_hashes) . ' Damaged data_input_fields', false);\n\n\t\t\t\tforeach($bad_hashes as $bhash) {\n\t\t\t\t\t$good_field_id = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\t\tFROM data_input_fields\n\t\t\t\t\t\tWHERE hash != ?\n\t\t\t\t\t\tAND data_input_id = ?\n\t\t\t\t\t\tAND data_name = ?',\n\t\t\t\t\t\tarray($bhash['hash'], $data_input_id, $bhash['data_name']));\n\n\t\t\t\t\tif (!empty($good_field_id)) {\n\t\t\t\t\t\tcacti_log(\"Data Input ID $data_input_id Bad Field ID is \" . $bhash['id'] . \", Good Field ID: \" . $good_field_id, false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\tcacti_log('Executing Data Input Data Check', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t// Data Input Data\n\t\t\t\t\t\t$bad_mappings = db_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\t\tWHERE data_input_field_id = ?',\n\t\t\t\t\t\t\tarray($bhash['id']));\n\n\t\t\t\t\t\tif (cacti_sizeof($bad_mappings)) {\n\t\t\t\t\t\t\tcacti_log(strtoupper($step) . ' NOTE: Found ' . cacti_sizeof($bad_mappings) . ' Damaged data_input_fields', false);\n\t\t\t\t\t\t\tforeach($bad_mappings as $mfid) {\n\t\t\t\t\t\t\t\t$good_found = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['data_template_data_id']));\n\n\t\t\t\t\t\t\t\tif ($good_found > 0) {\n\t\t\t\t\t\t\t\t\tcacti_log('Good Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_input_data\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($mfid['data_input_field_id'], $mfid['data_template_data_id']));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcacti_log('Good NOT Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE data_input_data\n\t\t\t\t\t\t\t\t\t\tSET data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['data_input_field_id'], $mfid['data_template_data_id']));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcacti_log('No Bad Data Input Data Records', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Data Template RRD\n\t\t\t\t\t\tcacti_log('Executing Data Template RRD Check', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);;\n\n\t\t\t\t\t\t$bad_mappings = db_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE data_input_field_id = ?',\n\t\t\t\t\t\t\tarray($bhash['id']));\n\n\t\t\t\t\t\tif (cacti_sizeof($bad_mappings)) {\n\t\t\t\t\t\t\tcacti_log(strtoupper($step) . ' NOTE: Found ' . cacti_sizeof($bad_mappings) . ' Damaged data_template_rrd', false);\n\n\t\t\t\t\t\t\tforeach($bad_mappings as $mfid) {\n\t\t\t\t\t\t\t\t$good_found = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\tAND id = ?',\n\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['id']));\n\n\t\t\t\t\t\t\t\tif ($good_found > 0) {\n\t\t\t\t\t\t\t\t\tcacti_log('Good Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_template_rrd\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($mfid['data_input_field_id'], $mfid['id']));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcacti_log('Good NOT Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE data_template_rrd\n\t\t\t\t\t\t\t\t\t\tSET data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['data_input_field_id'], $mfid['id']));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcacti_log('No Bad Data Template RRD Records', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_input_fields WHERE hash = ?', array($bhash['hash']));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcacti_log('WARNING: Could not find Cacti default matching hash for unknown system hash \"' . $bhash['hash'] . '\" for ' . $data_input_id . '.  No repair performed.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log(\"Could not find hash '\" . $hash . \"' for Data Input\", false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\t\t}\n\t}\n}\n\nif (isset($config['cacti_server_os']) && $config['cacti_server_os'] == 'win32' && !function_exists('posix_kill')) {\n\tfunction posix_kill($pid, $signal = SIGTERM) {\n\t\t$wmi   = new COM(\"winmgmts:{impersonationLevel=impersonate}!\\\\\\\\.\\\\root\\\\cimv2\");\n\t\t$procs = $wmi->ExecQuery(\"SELECT ProcessId FROM Win32_Process WHERE ProcessId='\" . $pid . \"'\");\n\n\t\tif (cacti_sizeof($procs)) {\n\t\t\tif ($signal == SIGTERM) {\n\t\t\t\tforeach($procs as $proc) {\n\t\t\t\t\t$proc->Terminate();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nfunction is_ipaddress($ip_address = '') {\n\t/* check for ipv4/v6 */\n\tif (function_exists('filter_var')) {\n\t\tif (filter_var($ip_address, FILTER_VALIDATE_IP) !== false) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} elseif (inet_pton($ip_address) !== false) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * date_time_format\t\tcreate a format string for date/time\n *\n * @return string returns\tdate time format\n */\nfunction date_time_format() {\n\t$datechar = array(\n\t\tGDC_HYPHEN => '-',\n\t\tGDC_SLASH  => '/',\n\t\tGDC_DOT    => '.'\n\t);\n\n\t/* setup date format */\n\t$date_fmt        = read_config_option('default_date_format');\n\t$dateCharSetting = read_config_option('default_datechar');\n\n\tif (!isset($datechar[$dateCharSetting])) {\n\t\t$dateCharSetting = GDC_SLASH;\n\t}\n\n\t$datecharacter = $datechar[$dateCharSetting];\n\n\tswitch ($date_fmt) {\n\t\tcase GD_MO_D_Y:\n\t\t\treturn 'm' . $datecharacter . 'd' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_MN_D_Y:\n\t\t\treturn 'M' . $datecharacter . 'd' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_D_MO_Y:\n\t\t\treturn 'd' . $datecharacter . 'm' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_D_MN_Y:\n\t\t\treturn 'd' . $datecharacter . 'M' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_Y_MO_D:\n\t\t\treturn 'Y' . $datecharacter . 'm' . $datecharacter . 'd H:i:s';\n\t\tcase GD_Y_MN_D:\n\t\t\treturn 'Y' . $datecharacter . 'M' . $datecharacter . 'd H:i:s';\n\t\tdefault:\n\t\t\treturn 'Y' . $datecharacter . 'm' . $datecharacter . 'd H:i:s';\n\t}\n}\n\n/**\n * get_cacti_version    Generic function to get the cacti version\n */\nfunction get_cacti_version() {\n\tstatic $version = '';\n\n\tif ($version == '') {\n\t\t$version = trim(db_fetch_cell('SELECT cacti FROM version LIMIT 1'));\n\t}\n\n\treturn $version;\n}\n\n/**\n * get_cacti_version_text    Return the cacti version text including beta moniker\n */\nfunction get_cacti_version_text($include_version = true) {\n\tif ($include_version) {\n\t\treturn trim(__('Version %s %s', CACTI_VERSION, (defined('CACTI_VERSION_BETA') ? __('- Beta %s', CACTI_VERSION_BETA):'')));\n\t} else {\n\t\treturn trim(__('%s %s', CACTI_VERSION, (defined('CACTI_VERSION_BETA') ? __('- Beta %s', CACTI_VERSION_BETA):'')));\n\t}\n}\n\n/**\n * get_cacti_cli_version() {\n */\nfunction get_cacti_cli_version() {\n\t$dbversion = get_cacti_version();\n\t$version = get_cacti_version_text(false);\n\treturn $version . ' (DB: ' . $dbversion . ')';\n}\n\n/**\n * cacti_version_compare - Compare Cacti version numbers\n */\nfunction cacti_version_compare($version1, $version2, $operator = '>') {\n\tif ($version1 == 'new_install') {\n\t\t$version1 = CACTI_VERSION;\n\t}\n\n\t$length   = max(cacti_sizeof(explode('.', $version1)), cacti_sizeof(explode('.', $version2)));\n\t$version1 = version_to_decimal($version1, $length);\n\t$version2 = version_to_decimal($version2, $length);\n\n\tswitch ($operator) {\n\t\tcase '<':\n\t\t\tif ($version1 < $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\tif ($version1 <= $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\tif ($version1 >= $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\tif ($version1 > $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '==':\n\t\t\tif ($version1 == $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn version_compare($version1, $version2, $operator);\n\t}\n\treturn false;\n}\n\n/**\n * version_to_decimal - convert version string to decimal\n */\nfunction version_to_decimal($version, $length = 1) {\n\t$newver = '';\n\t$minor  = '';\n\n\t$parts = explode('.', $version);\n\tforeach($parts as $part) {\n\t\tif (is_numeric($part)) {\n\t\t\t$part = substr('00' . $part, -2);\n\t\t\t$newver .= $part;\n\t\t} else {\n\t\t\t$minor = substr($part, -1);\n\t\t\t$major = substr($part, 0, strlen($part)-1);\n\t\t\t$major = substr('00' . $major, -2);\n\t\t\t$newver .= $major;\n\t\t}\n\t}\n\n\tif (cacti_sizeof($parts) < $length) {\n\t\t$i = cacti_sizeof($parts);\n\t\twhile($i < $length) {\n\t\t\t$newver .= '00';\n\t\t\t$i++;\n\t\t}\n\t}\n\n\tif ($minor != '') {\n\t\t$int = ord($minor);\n\t} else {\n\t\t$int = 0;\n\t}\n\n\treturn @hexdec($newver) * 1000 + $int;\n}\n\n/**\n * cacti_gethostinfo - obtains the dns information for a host\n */\nfunction cacti_gethostinfo($hostname, $type = DNS_ALL) {\n\treturn dns_get_record($hostname, $type);\n}\n\n/**\n * cacti_gethostbyname - a ip/ipv6 replacement for php's gethostbyname function\n */\nfunction cacti_gethostbyname($hostname, $type = '') {\n\tif ($type == '') {\n\t\t$type = DNS_A + DNS_AAAA;\n\t}\n\n\tif ($type != DNS_AAAA) {\n\t\t$host = gethostbyname($hostname);\n\t\tif ($host !== $hostname) {\n\t\t\treturn $host;\n\t\t}\n\t}\n\n\t$return = cacti_gethostinfo($hostname, $type);\n\n\tif (cacti_sizeof($return)) {\n\t\tforeach($return as $record) {\n\t\t\tswitch($record['type']) {\n\t\t\tcase 'A':\n\t\t\t\treturn $record['ip'];\n\t\t\t\tbreak;\n\t\t\tcase 'AAAA':\n\t\t\t\treturn $record['ipv6'];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $hostname;\n}\n\nfunction get_nonsystem_data_input($data_input_id) {\n\tglobal $hash_system_data_inputs;\n\n\t$diid = db_fetch_cell_prepared('SELECT id FROM data_input\n\t\tWHERE hash NOT IN (\"' . implode('\",\"', $hash_system_data_inputs) . '\")\n\t\tAND id = ?',\n\t\tarray($data_input_id));\n\n\treturn $diid;\n}\n\nfunction get_rrdtool_version() {\n\tstatic $version = '';\n\n\tif ($version == '') {\n\t\t$version = str_replace('rrd-', '', str_replace('.x', '.0', read_config_option('rrdtool_version') ?: read_default_config_option('rrdtool_version') ?: '1.4.0' ));\n\t}\n\n\treturn $version;\n}\n\nfunction get_installed_rrdtool_version() {\n\tglobal $config, $rrdtool_versions;\n\tstatic $version = '';\n\n\tif ($version == '') {\n\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t$shell = shell_exec(cacti_escapeshellcmd(read_config_option('path_rrdtool')) . ' -v');\n\t\t} else {\n\t\t\t$shell = shell_exec(cacti_escapeshellcmd(read_config_option('path_rrdtool')) . ' -v 2>&1');\n\t\t}\n\n\t\t$version = false;\n\t\tif (preg_match('/^RRDtool ([0-9.]+) /', $shell, $matches)) {\n\t\t\tforeach ($rrdtool_versions as $rrdtool_version => $rrdtool_version_text) {\n\t\t\t\tif (cacti_version_compare($rrdtool_version, $matches[1], '<=')) {\n\t\t\t\t\t$version = $rrdtool_version;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $version;\n}\n\nfunction get_md5_hash($path) {\n\t$md5 = 0;\n\n\tif (db_table_exists('poller_resource_cache')) {\n\t\t$md5 = db_fetch_cell_prepared('SELECT md5sum\n\t\t\tFROM poller_resource_cache\n\t\t\tWHERE `path` = ?',\n\t\t\tarray($path));\n\t}\n\n\tif (empty($md5)) {\n\t\tif (file_exists($path)) {\n\t\t\t$md5 = md5_file($path);\n\t\t} else {\n\t\t\t$md5 = md5_file(dirname(__FILE__) . '/../' . $path);\n\t\t}\n\t}\n\n\treturn $md5;\n}\n\nfunction get_md5_include_js($path, $async = false) {\n\tglobal $config;\n\n\tif (file_exists($path)) {\n\t\t$npath = str_replace($config['base_path'] . '/', '', $path);\n\t} else {\n\t\t$npath = $path;\n\t}\n\n\tif ($async) {\n\t\treturn '<script type=\\'text/javascript\\' src=\\'' . $config['url_path'] . $npath . '?' . get_md5_hash($path) . '\\' async></script>' . PHP_EOL;\n\t} else {\n\t\treturn '<script type=\\'text/javascript\\' src=\\'' . $config['url_path'] . $npath . '?' . get_md5_hash($path) . '\\'></script>' . PHP_EOL;\n\t}\n}\n\nfunction get_md5_include_css($path) {\n\tglobal $config;\n\n\treturn '<link href=\\''. $config['url_path'] . $path . '?' . get_md5_hash($path) . '\\' type=\\'text/css\\' rel=\\'stylesheet\\'>' . PHP_EOL;\n}\n\nfunction is_resource_writable($path) {\n\tif (empty($path)) {\n\t\treturn false;\n\t}\n\n\tif ($path[strlen($path)-1] == '/') {\n\t\treturn is_resource_writable($path . uniqid(mt_rand()) . '.tmp');\n\t}\n\n\tif (file_exists($path)) {\n\t\tif (($f = @fopen($path, 'a'))) {\n\t\t\tfclose($f);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tif (($f = @fopen($path, 'w'))) {\n\t\tfclose($f);\n\t\tunlink($path);\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction recursive_chown($path, $uid, $gid) {\n    $d = opendir($path);\n\n\twhile(($file = readdir($d)) !== false) {\n\t\tif ($file != '.' && $file != '..') {\n\t\t\t$fullpath = $path . '/' . $file ;\n\n\t\t\tif (filetype($fullpath) == 'dir') {\n\t\t\t\treturn recursive_chown($fullpath, $uid, $gid);\n\t\t\t}\n\n\t\t\t$success = chown($fullpath, $uid);\n\t\t\tif ($success) {\n\t\t\t\t$success = chgrp($fullpath, $gid);\n\t\t\t}\n        }\n\n\t\tif (!$success) {\n\t\t\treturn false;\n\t\t}\n    }\n\n\treturn true;\n}\n\nfunction get_validated_theme($theme, $defaultTheme) {\n\tglobal $config;\n\tif (isset($theme) && strlen($theme)) {\n\t\t$themePath = $config['base_path'] . '/include/themes/' . $theme . '/main.css';\n\t\tif (file_exists($themePath)) {\n\t\t\treturn $theme;\n\t\t}\n\t}\n\n\treturn $defaultTheme;\n}\n\nfunction get_validated_language($language, $defaultLanguage) {\n\tif (isset($language) && strlen($language)) {\n\t\treturn $language;\n\t}\n\n\treturn $defaultLanguage;\n}\n\nfunction get_running_user() {\n\tglobal $config;\n\n\tstatic $tmp_user = '';\n\n\tif (empty($tmp_user)) {\n\t\tif (function_exists('posix_geteuid')) {\n\t\t\t$tmp_user = posix_getpwuid(posix_geteuid())['name'];\n\t\t}\n\t}\n\n\tif (empty($tmp_user)) {\n\t\t$tmp_file = tempnam(sys_get_temp_dir(), 'uid'); $f_owner = '';\n\n\t\tif (is_resource_writable($tmp_file)) {\n\t\t\tif (file_exists($tmp_file)) {\n\t\t\t\tunlink($tmp_file);\n\t\t\t}\n\n\t\t\tfile_put_contents($tmp_file, 'cacti');\n\n\t\t\t$f_owner = fileowner($tmp_file);\n\t\t\t$f_source = 'file';\n\n\t\t\tif (file_exists($tmp_file)) {\n\t\t\t\tunlink($tmp_file);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($f_owner) && function_exists('posix_getuid')) {\n\t\t\t$f_owner = posix_getuid();\n\t\t\t$f_source = 'posix';\n\t\t}\n\n\t\tif (!empty($f_owner) && function_exists('posix_getpwuid1')) {\n\t\t\t$f_array = posix_getpwuid($f_owner);\n\t\t\tif (isset($f_array['name'])) {\n\t\t\t\t$tmp_user = $f_array['name'];\n\t\t\t}\n\t\t}\n\n\t\tif (empty($tmp_user)) {\n\t\t\texec('id -nu', $o, $r);\n\t\t\tif ($r == 0) {\n\t\t\t\t$tmp_user = trim($o['0']);\n\t\t\t}\n\t\t}\n\n\t\t/*** Code left here for future development, don't think it is right ***\n\t\t *\n\t\tif (empty($tmp_user) && !empty($f_owner) && is_readable('/etc/passwd'))\n\t\t{\n\t\t\texec(sprintf('grep :%s: /etc/passwd | cut -d: -f1', (int) $uid), $o, $r);\n\t\t\tif ($r == 0) {\n\t\t\t\t$tmp_user = 'passwd-' . trim($o['0']);\n\t\t\t}\n\t\t}\n\t\t */\n\n\t\t// Easy way first\n\t\tif (empty($tmp_user)) {\n\t\t\t$user = get_current_user();\n\t\t\tif ($user != '') {\n\t\t\t\t$tmp_user = $user;\n\t\t\t}\n\t\t}\n\n\t\t// Fallback method\n\t\tif (empty($tmp_user)) {\n\t\t\t$user = getenv('USERNAME');\n\t\t\tif ($user != '') {\n\t\t\t\t$tmp_user = $user;\n\t\t\t}\n\n\t\t\tif (empty($tmp_user)) {\n\t\t\t\t$user = getenv('USER');\n\t\t\t\tif ($user != '') {\n\t\t\t\t\t$tmp_user = $user;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (empty($tmp_user) ? 'apache' : $tmp_user);\n}\n\nfunction get_debug_prefix() {\n\t$dateTime = new DateTime('NOW');\n\t$dateTime = $dateTime->format('Y-m-d H:i:s.u');\n\n\treturn sprintf('<[ %s | %7d ]> -- ', $dateTime, getmypid());\n}\n\nfunction get_client_addr($client_addr = false, $restrictive = false) {\n\tif (!$restrictive) {\n\t\t$http_addr_headers = array(\n\t\t\t'X-Forwarded-For',\n\t\t\t'X-Client-IP',\n\t\t\t'X-Real-IP',\n\t\t\t'X-ProxyUser-Ip',\n\t\t\t'CF-Connecting-IP',\n\t\t\t'True-Client-IP',\n\t\t\t'HTTP_X_FORWARDED',\n\t\t\t'HTTP_X_FORWARDED_FOR',\n\t\t\t'HTTP_X_CLUSTER_CLIENT_IP',\n\t\t\t'HTTP_FORWARDED_FOR',\n\t\t\t'HTTP_FORWARDED',\n\t\t\t'HTTP_CLIENT_IP',\n\t\t\t'REMOTE_ADDR',\n\t\t);\n\t} else {\n\t\t$http_addr_headers = array(\n\t\t\t'X-Forwarded-For',\n\t\t\t'X-Client-IP',\n\t\t\t'X-Real-IP',\n\t\t\t'X-ProxyUser-Ip',\n\t\t\t'CF-Connecting-IP',\n\t\t\t'True-Client-IP',\n\t\t\t'REMOTE_ADDR',\n\t\t);\n\t}\n\n\t$client_addr = false;\n\tforeach ($http_addr_headers as $header) {\n\t\tif (!empty($_SERVER[$header])) {\n\t\t\t$header_ips = explode(',', $_SERVER[$header]);\n\t\t\tforeach ($header_ips as $header_ip) {\n\t\t\t\tif (!empty($header_ip)) {\n\t\t\t\t\tif (!filter_var($header_ip, FILTER_VALIDATE_IP)) {\n\t\t\t\t\t\tcacti_log('ERROR: Invalid remote client IP Address found in header (' . $header . ').', false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$client_addr = $header_ip;\n\t\t\t\t\t\tcacti_log('DEBUG: Using remote client IP Address found in header (' . $header . '): ' . $client_addr . ' (' . $_SERVER[$header] . ')', false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $client_addr;\n}\n\nfunction cacti_pton($ipaddr) {\n\t// Strip out the netmask, if there is one.\n\t$subnet_pos = strpos($ipaddr, '/');\n\tif ($subnet_pos) {\n\t\t$subnet = substr($ipaddr, $subnet_pos+1);\n\t\t$ipaddr = substr($ipaddr, 0, $subnet_pos);\n\t} else {\n\t\t$subnet = null; // No netmask present\n\t}\n\n\t// Convert address to packed format\n\t$addr = @inet_pton($ipaddr);\n\tif ($addr === false) {\n\t\treturn false;\n\t}\n\n\t// Maximum netmask length = same as packed address\n\t$len = 8*strlen($addr);\n\n\tif (!empty($subnet)) {\n\t\tif (!is_numeric($subnet)) {\n\t\t\treturn false;\n\t\t} elseif ($subnet > $len) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!is_numeric($subnet)) {\n\t\t$subnet=$len;\n\t} else {\n\t\t$subnet=(int)$subnet;\n\t}\n\n\t// Create a hex expression of the subnet mask\n\t$mask=str_repeat('f',$subnet>>2);\n\tswitch($subnet&3) {\n\t\tcase 3:\n\t\t\t$mask.='e';\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t$mask.='c'; break;\n\t\tcase 1:\n\t\t\t$mask.='8'; break;\n\t}\n\t$mask=str_pad($mask,$len>>2,'0');\n\n\t// Packed representation of netmask\n\t$mask=pack('H*',$mask);\n\n\t$result = array('ip' => $addr, 'subnet' => $mask);\n\treturn $result;\n}\n\nfunction cacti_ntop($addr) {\n\tif (empty($addr)) {\n\t\treturn false;\n\t}\n\n\tif (is_array($addr)) {\n\t\tforeach ($addr as $ip) {\n\t\t\t$addr = $ip;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn @inet_ntop($addr);\n}\n\nfunction cacti_ntoc($subnet, $ipv6 = false) {\n\t$result = false;\n\t$count = 0;\n\tforeach(str_split($subnet) as $char) {\n\t\t$i = ord($char);\n\t\twhile (($i & 128) == 128) {\n\t\t\t$count++;\n\t\t\t$i = ($i << 1) % 256;\n\t\t}\n\t}\n\n\treturn $count;\n}\n\nfunction cacti_ptoa($title, $addr) {\n\t// Let's display it as hexadecimal format\n\tforeach(str_split($addr) as $char) {\n\t\tprint str_pad(dechex(ord($char)),2,'0',STR_PAD_LEFT);\n\t}\n}\n\nfunction cacti_sizeof($array) {\n\treturn ($array === false || !is_array($array)) ? 0 : sizeof($array);\n}\n\nfunction cacti_count($array) {\n\treturn ($array === false || !is_array($array)) ? 0 : count($array);\n}\n\nfunction is_function_enabled($name) {\n\treturn function_exists($name) &&\n\t\t!in_array($name, array_map('trim', explode(', ', ini_get('disable_functions')))) &&\n\t\tstrtolower(ini_get('safe_mode')) != 1;\n}\n\nfunction is_page_ajax() {\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest' ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction raise_ajax_permission_denied() {\n\tif (is_page_ajax()) {\n\t\theader('HTTP/1.1 401 ' . __('Permission Denied'));\n\t\tprint __('You are not permitted to access this section of Cacti.') . '  ' . __('If you feel that this is an error. Please contact your Cacti Administrator.');\n\t\texit;\n\t}\n}\n\n/**\n * cacti_session_start - Create a Cacti session from the settings set by the administrator\n *\n * @return - null\n */\nfunction cacti_session_start() {\n\tglobal $config;\n\n\t/* initialize php session */\n\tif (!function_exists('session_name')) {\n\t\tdie('PHP Session Management is missing, please install PHP Session module');\n\t}\n\n\tsession_name($config['cacti_session_name']);\n\n\tif (session_status() === PHP_SESSION_NONE) {\n\t\t$session_restart = '';\n\t} else {\n\t\t$session_restart = 're';\n\t}\n\n\t$session_result = session_start($config['cookie_options']);\n\n\tif (!$session_result) {\n\t\tcacti_log('Session \"' . session_id() . '\" ' . $session_restart . 'start failed! ' . cacti_debug_backtrace('', false, false, 0, 1), false, 'WARNING:');\n\t}\n}\n\n/**\n * cacti_session_close - Closes the open Cacti session if it is open\n * it can be re-opened afterwards in the case after a long running query\n *\n * @return - null\n */\nfunction cacti_session_close() {\n\tsession_write_close();\n}\n\n/**\n * cacti_session_destroy - Destroys the login current session\n *\n * @return - null\n */\nfunction cacti_session_destroy() {\n\tsession_unset();\n\tsession_destroy();\n}\n\n/**\n * cacti_cookie_set - Allows for settings an arbitry cookie name and value\n * used for CSRF protection.\n *\n * @return - null\n */\nfunction cacti_cookie_set($session, $val) {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() + 3600,\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie($session, $val, $options);\n\t} else {\n\t\tsetcookie($session, $val, time() + 3600, $config['url_path'], $domain, $secure, true);\n\t}\n}\n\n/**\n * cacti_cookie_logout - Clears the Cacti and the 'keep me logged in' cookies\n *\n * @return - null\n */\nfunction cacti_cookie_logout() {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() - 3600,\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie(session_name(), '', $options);\n\t\tsetcookie('cacti_remembers', '', $options);\n\t} else {\n\t\tsetcookie(session_name(), '', time() - 3600, $config['url_path'], $domain, $secure, true);\n\t\tsetcookie('cacti_remembers', '', time() - 3600, $config['url_path'], $domain, $secure, true);\n\t}\n\n\tunset($_COOKIE[$config['cacti_session_name']]);\n}\n\n/**\n * cacti_cookie_session_set - Sets the cacti 'keep me logged in' cookie\n *\n * @return - null\n */\nfunction cacti_cookie_session_set($user, $realm, $nssecret) {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\t$_SESSION['cacti_remembers'] = true;\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() + (86400*30),\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie('cacti_remembers', $user . ',' . $realm . ',' . $nssecret, $options);\n\t} else {\n\t\tsetcookie('cacti_remembers', $user . ',' . $realm . ',' . $nssecret, time() + (86400*30), $config['url_path'], $domain, $secure, true);\n\t}\n}\n\n/**\n * cacti_cookie_session_logout - Logs out of Cacti and the remember me session\n *\n * @return - null\n */\nfunction cacti_cookie_session_logout() {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() - 3600,\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie('cacti_remembers', '', $options);\n\t} else {\n\t\tsetcookie('cacti_remembers', '', time() - 3600, $config['url_path'], $domain, $secure, true);\n\t}\n}\n\n/**\n * cacti_browser_zone_set - Set the PHP timezone to the\n * browsers timezone if enabled.\n *\n * @return - null\n */\nfunction cacti_browser_zone_set() {\n\tif (cacti_browser_zone_enabled()) {\n\t\tif (isset($_SESSION['sess_browser_php_tz'])) {\n\t\t\tini_set('date.timezone', $_SESSION['sess_browser_php_tz']);\n\t\t\tputenv('TZ=' . $_SESSION['sess_browser_system_tz']);\n\t\t}\n\t}\n}\n\n/**\n * cacti_system_zone_set - Set the PHP timezone to the\n * systems timezone.\n *\n * @return - null\n */\nfunction cacti_system_zone_set() {\n\tif (cacti_browser_zone_enabled()) {\n\t\tif (isset($_SESSION['sess_php_tz'])) {\n\t\t\tini_set('date.timezone', $_SESSION['sess_php_tz']);\n\t\t\tputenv('TZ=' . $_SESSION['sess_system_tz']);\n\t\t}\n\t}\n}\n\nfunction cacti_browser_zone_enabled() {\n\t$system_setting = read_config_option('client_timezone_support');\n\n\tif (empty($system_setting)) {\n\t\treturn false;\n\t} else {\n\t\t$user_setting = read_user_setting('client_timezone_support', '0');\n\n\t\tif (empty($user_setting)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\n/**\n * cacti_time_zone_set - Givin an offset in minutes, attempt\n * to set a PHP date.timezone.  There are some oddballs that\n * we have to accomodate.\n *\n * @return - null\n */\nfunction cacti_time_zone_set($gmt_offset) {\n\tif (!cacti_browser_zone_enabled()) {\n\t\treturn;\n\t}\n\n\t$hours     = floor($gmt_offset / 60);\n\t$remaining = $gmt_offset % 60;\n\n\tif (!isset($_SESSION['sess_php_tz'])) {\n\t\t$_SESSION['sess_php_tz']    = ini_get('date.timezone');\n\t\t$_SESSION['sess_system_tz'] = getenv('TZ');\n\t}\n\n\t$zone = timezone_name_from_abbr('', $gmt_offset);\n\n\tif ($remaining == 0) {\n\t\tputenv('TZ=GMT' . ($hours > 0 ? '-':'+') . abs($hours));\n\n\t\t$sys_offset = 'GMT' . ($hours > 0 ? '-':'+') . abs($hours);\n\n\t\tif ($zone !== false) {\n\t\t\t$php_offset = $zone;\n\t\t\tini_set('date.timezone', $zone);\n\t\t} else {\n\t\t\t$php_offset = 'Etc/GMT' . ($hours > 0 ? '-':'+') . abs($hours);\n\t\t\tini_set('date.timezone', 'Etc/GMT' . ($hours > 0 ? '-':'+') . abs($hours));\n\t\t}\n\n\t\t$_SESSION['sess_browser_system_tz'] = $sys_offset;\n\t\t$_SESSION['sess_browser_php_tz']    = $php_offset;\n\t} else {\n\t\t$time = ($hours > 0 ? '-':'+') . abs($hours) . ':' . substr('00' . $remaining, -2);\n\n\t\tif ($zone === false) {\n\t\t\tswitch($time) {\n\t\t\t\tcase '+3:30':\n\t\t\t\t\t$zone = 'IRST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+4:30':\n\t\t\t\t\t$zone = 'IRDT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+5:30':\n\t\t\t\t\t$zone = 'IST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+5:45':\n\t\t\t\t\t$zone = 'NPT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+6:30':\n\t\t\t\t\t$zone = 'CCT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+9:30':\n\t\t\t\t\t$zone = 'ACST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+10:30':\n\t\t\t\t\t$zone = 'ACDT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+8:45':\n\t\t\t\t\t$zone = 'ACWST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+12:45':\n\t\t\t\t\t$zone = 'CHAST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+13:45':\n\t\t\t\t\t$zone = 'CHADT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-3:30':\n\t\t\t\t\t$zone = 'NST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-2:30':\n\t\t\t\t\t$zone = 'NDT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-9:30':\n\t\t\t\t\t$zone = 'MART';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ($zone !== false) {\n\t\t\t\t$zone = timezone_name_from_abbr($zone);\n\t\t\t}\n\t\t}\n\n\t\t$php_offset = $zone;\n\t\t$sys_offset = 'GMT' . $time;\n\n\t\tputenv('TZ=GMT' . $time);\n\n\t\tif ($zone != '') {\n\t\t\tini_set('date.timezone', $zone);\n\t\t}\n\n\t\t$_SESSION['sess_browser_system_tz'] = $sys_offset;\n\t\t$_SESSION['sess_browser_php_tz']    = $php_offset;\n\t}\n}\n\nfunction debounce_run_notification($id, $freqnency = 1200) {\n\t/* debounce admin emails */\n\t$last = read_config_option('debounce_' . $id);\n\t$now  = time();\n\n\tif (empty($last) || $now - $last > 7200) {\n\t\tset_config_option('debounce_' . $id, $now);\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire(__DIR__ . '/include/global.php');\nrequire_once($config['base_path'] . '/lib/api_device.php');\nrequire_once($config['base_path'] . '/lib/api_data_source.php');\ninclude_once($config['base_path'] . '/lib/data_query.php');\nrequire_once($config['base_path'] . '/lib/api_graph.php');\nrequire_once($config['base_path'] . '/lib/api_tree.php');\nrequire_once($config['base_path'] . '/lib/data_query.php');\nrequire_once($config['base_path'] . '/lib/html_form_template.php');\nrequire_once($config['base_path'] . '/lib/ping.php');\nrequire_once($config['base_path'] . '/lib/poller.php');\nrequire_once($config['base_path'] . '/lib/rrd.php');\nrequire_once($config['base_path'] . '/lib/snmp.php');\nrequire_once($config['base_path'] . '/lib/sort.php');\nrequire_once($config['base_path'] . '/lib/template.php');\nrequire_once($config['base_path'] . '/lib/utility.php');\n\n$debug = false;\n\nif ($config['poller_id'] > 1 && $config['connection'] == 'online') {\n\tif (get_nfilter_request_var('action') == 'runquery') {\n\t\tdb_force_remote_cnn();\n\t}\n\n\t$poller_db_cnn_id = $remote_db_cnn_id;\n} else {\n\t$poller_db_cnn_id = false;\n}\n\nif (!remote_client_authorized()) {\n\tprint 'FATAL: You are not authorized to use this service';\n\texit;\n}\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'polldata':\n\t\t// Only let realtime polling run for a short time\n\t\tini_set('max_execution_time', read_config_option('script_timeout'));\n\n\t\tdebug('Start: Poling Data for Realtime');\n\t\tpoll_for_data();\n\t\tdebug('End: Poling Data for Realtime');\n\n\t\tbreak;\n\tcase 'runquery':\n\t\tdebug('Start: Running Data Query');\n\t\trun_remote_data_query();\n\t\tdebug('End: Running Data Query');\n\n\t\tbreak;\n\tcase 'ping':\n\t\tdebug('Start: Pinging Device');\n\t\tping_device();\n\t\tdebug('End: Pinging Device');\n\n\t\tbreak;\n\tcase 'snmpget':\n\t\tdebug('Start: Performing SNMP Get Request');\n\t\tget_snmp_data();\n\t\tdebug('End: Performing SNMP Get Request');\n\n\t\tbreak;\n\tcase 'snmpwalk':\n\t\tdebug('Start: Performing SNMP Walk Request');\n\t\tget_snmp_data_walk();\n\t\tdebug('End: Performing SNMP Walk Request');\n\n\t\tbreak;\n\tcase 'graph_json':\n\t\tdebug('Start: Performing Graph Request');\n\t\tget_graph_data();\n\t\tdebug('End: Performing Graph Request');\n\n\t\tbreak;\n\tcase 'discover':\n\t\tdebug('Start:Performing Network Discovery Request');\n\t\trun_remote_discovery();\n\t\tdebug('End:Performing Network Discovery Request');\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('remote_agent', get_request_var('action'))) {\n\t\t\tdebug('WARNING: Unknown Agent Request');\n\t\t\tprint 'Unknown Agent Request';\n\t\t}\n}\n\nexit;\n\nfunction debug($message) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\tcacti_log(\"REMOTE DEBUG: \" . trim($message), false, 'WEBSVCS');\n\t}\n}\n\nfunction remote_agent_strip_domain($host) {\n\tif (strpos($host, '.') !== false) {\n\t\t$parts = explode('.', $host);\n\t\treturn $parts[0];\n\t} else {\n\t\treturn $host;\n\t}\n}\n\nfunction remote_client_authorized() {\n\tglobal $poller_db_cnn_id;\n\n\t/* don't allow to run from the command line */\n\t$client_addr = get_client_addr();\n\tif ($client_addr === false) {\n\t\treturn false;\n\t}\n\n\tif (!filter_var($client_addr, FILTER_VALIDATE_IP)) {\n\t\tcacti_log('ERROR: Invalid remote agent client IP Address.  Exiting');\n\t\treturn false;\n\t}\n\n\t$client_name = gethostbyaddr($client_addr);\n\n\tif ($client_name == $client_addr) {\n\t\tcacti_log('NOTE: Unable to resolve hostname from address ' . $client_addr, false, 'WEBUI', POLLER_VERBOSITY_MEDIUM);\n\t} else {\n\t\t$client_name = remote_agent_strip_domain($client_name);\n\t}\n\n\t$pollers = db_fetch_assoc('SELECT * FROM poller', true, $poller_db_cnn_id);\n\n\tif (cacti_sizeof($pollers)) {\n\t\tforeach($pollers as $poller) {\n\t\t\tif (remote_agent_strip_domain($poller['hostname']) == $client_name) {\n\t\t\t\treturn true;\n\t\t\t} elseif ($poller['hostname'] == $client_addr) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tcacti_log(\"Unauthorized remote agent access attempt from $client_name ($client_addr)\");\n\n\treturn false;\n}\n\nfunction get_graph_data() {\n\tget_filter_request_var('graph_start');\n\tget_filter_request_var('graph_end');\n\tget_filter_request_var('graph_height');\n\tget_filter_request_var('graph_width');\n\tget_filter_request_var('local_graph_id');\n\tget_filter_request_var('rra_id');\n\tget_filter_request_var('graph_theme', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tget_filter_request_var('graph_nolegend', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tget_filter_request_var('effective_user');\n\n\t$local_graph_id   = get_filter_request_var('local_graph_id');\n\t$rra_id           = get_filter_request_var('rra_id');\n\n\t$graph_data_array = array();\n\n\t/* override: graph start time (unix time) */\n\tif (!isempty_request_var('graph_start') && get_request_var('graph_start') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t\t$graph_data_array['graph_start'] = get_request_var('graph_start');\n\t}\n\n\t/* override: graph end time (unix time) */\n\tif (!isempty_request_var('graph_end') && get_request_var('graph_end') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t\t$graph_data_array['graph_end'] = get_request_var('graph_end');\n\t}\n\n\t/* override: graph height (in pixels) */\n\tif (!isempty_request_var('graph_height') && get_request_var('graph_height') < 3000) {\n\t\t$graph_data_array['graph_height'] = get_request_var('graph_height');\n\t}\n\n\t/* override: graph width (in pixels) */\n\tif (!isempty_request_var('graph_width') && get_request_var('graph_width') < 3000) {\n\t\t$graph_data_array['graph_width'] = get_request_var('graph_width');\n\t}\n\n\t/* override: skip drawing the legend? */\n\tif (!isempty_request_var('graph_nolegend')) {\n\t\t$graph_data_array['graph_nolegend'] = get_request_var('graph_nolegend');\n\t}\n\n\t/* print RRDtool graph source? */\n\tif (!isempty_request_var('show_source')) {\n\t\t$graph_data_array['print_source'] = get_request_var('show_source');\n\t}\n\n\t/* disable cache check */\n\tif (isset_request_var('disable_cache')) {\n\t\t$graph_data_array['disable_cache'] = true;\n\t}\n\n\t/* set the theme */\n\tif (isset_request_var('graph_theme')) {\n\t\t$graph_data_array['graph_theme'] = get_request_var('graph_theme');\n\t}\n\n\t/* set the theme */\n\tif (isset_request_var('effective_user')) {\n\t\t$user = get_request_var('effective_user');\n\t} else {\n\t\t$user = 0;\n\t}\n\n\t$graph_data_array['graphv'] = true;\n\n\t$xport_options = array();\n\n\tprint @rrdtool_function_graph($local_graph_id, $rra_id, $graph_data_array, null, $xport_options, $user);\n\n\treturn true;\n}\n\nfunction get_snmp_data() {\n\t$host_id = get_filter_request_var('host_id');\n\t$oid     = get_nfilter_request_var('oid');\n\n\tif (!empty($host_id)) {\n\t\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\tif ($session === false) {\n\t\t\t$output = 'U';\n\t\t} else {\n\t\t\t$output = cacti_snmp_session_get($session, $oid);\n\t\t\t$session->close();\n\t\t}\n\t}\n\n\tprint $output;\n}\n\nfunction get_snmp_data_walk() {\n\t$host_id = get_filter_request_var('host_id');\n\t$oid     = get_nfilter_request_var('oid');\n\n\tif (!empty($host_id)) {\n\t\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\tif ($session === false) {\n\t\t\t$output = 'U';\n\t\t} else {\n\t\t\t$output = cacti_snmp_session_walk($session, $oid);\n\t\t\t$session->close();\n\t\t}\n\t}\n\n\tif (cacti_sizeof($output)) {\n\t\tprint json_encode($output);\n\t} else {\n\t\tprint 'U';\n\t}\n}\n\nfunction ping_device() {\n\t$host_id = get_filter_request_var('host_id');\n\tapi_device_ping_device($host_id, true);\n}\n\nfunction poll_for_data() {\n\tglobal $config;\n\n\t$local_data_ids = get_nfilter_request_var('local_data_ids');\n\t$host_id        = get_filter_request_var('host_id');\n\t$poller_id      = get_nfilter_request_var('poller_id');\n\t$return         = array();\n\n\t$i = 0;\n\n\tif (cacti_sizeof($local_data_ids)) {\n\t\tforeach($local_data_ids as $local_data_id) {\n\t\t\tinput_validate_input_number($local_data_id);\n\n\t\t\t$items = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM poller_item\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tAND local_data_id = ?',\n\t\t\t\tarray($host_id, $local_data_id));\n\n\t\t\t$script_server_calls = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM poller_item\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tAND local_data_id = ?\n\t\t\t\tAND action = 2',\n\t\t\t\tarray($host_id, $local_data_id));\n\n\t\t\tif (cacti_sizeof($items)) {\n\t\t\t\tforeach($items as $item) {\n\t\t\t\t\tswitch ($item['action']) {\n\t\t\t\t\tcase POLLER_ACTION_SNMP: /* snmp */\n\t\t\t\t\t\tif (($item['snmp_version'] == 0) || (($item['snmp_community'] == '') && ($item['snmp_version'] != 3))) {\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$host = db_fetch_row_prepared('SELECT ping_retries, max_oids FROM host WHERE hostname = ?', array($item['hostname']));\n\t\t\t\t\t\t\t$session = cacti_snmp_session($item['hostname'], $item['snmp_community'], $item['snmp_version'],\n\t\t\t\t\t\t\t\t$item['snmp_username'], $item['snmp_password'], $item['snmp_auth_protocol'], $item['snmp_priv_passphrase'],\n\t\t\t\t\t\t\t\t$item['snmp_priv_protocol'], $item['snmp_context'], $item['snmp_engine_id'], $item['snmp_port'],\n\t\t\t\t\t\t\t\t$item['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t\t\t\t\tif ($session === false) {\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $item['arg1']);\n\t\t\t\t\t\t\t\t$session->close();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT: /* script (popen) */\n\t\t\t\t\t\t$output = trim(exec_poll($item['arg1']));\n\n\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT_PHP: /* script (php script server) */\n\t\t\t\t\t\t$cactides = array(\n\t\t\t\t\t\t\t0 => array('pipe', 'r'), // stdin is a pipe that the child will read from\n\t\t\t\t\t\t\t1 => array('pipe', 'w'), // stdout is a pipe that the child will write to\n\t\t\t\t\t\t\t2 => array('pipe', 'w')  // stderr is a pipe to write to\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (function_exists('proc_open')) {\n\t\t\t\t\t\t\t$cactiphp = proc_open(read_config_option('path_php_binary') . ' -q ' . $config['base_path'] . '/script_server.php realtime ' . $poller_id, $cactides, $pipes);\n\t\t\t\t\t\t\t$output = fgets($pipes[1], 1024);\n\t\t\t\t\t\t\t$using_proc_function = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$using_proc_function = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($using_proc_function == true) {\n\t\t\t\t\t\t\t$output = trim(str_replace(\"\\n\", '', exec_poll_php($item['arg1'], $using_proc_function, $pipes, $cactiphp)));\n\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\tif (($using_proc_function == true) && ($script_server_calls > 0)) {\n\t\t\t\t\t\t\t/* close php server process */\n\t\t\t\t\t\t\tfwrite($pipes[0], \"quit\\r\\n\");\n\t\t\t\t\t\t\tfclose($pipes[0]);\n\t\t\t\t\t\t\tfclose($pipes[1]);\n\t\t\t\t\t\t\tfclose($pipes[2]);\n\n\t\t\t\t\t\t\t$return_value = proc_close($cactiphp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\nfunction run_remote_data_query() {\n\t$host_id = get_filter_request_var('host_id');\n\t$data_query_id = get_filter_request_var('data_query_id');\n\n\tif ($host_id > 0 && $data_query_id > 0) {\n\t\trun_data_query($host_id, $data_query_id);\n\t}\n}\n\nfunction run_remote_discovery() {\n\tglobal $config;\n\n\t$poller_id = $config['poller_id'];\n\t$network   = get_filter_request_var('network');\n\t$php       = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t$path      = cacti_escapeshellarg(read_config_option('path_webroot') . '/poller_automation.php');\n\n\t$options   = ' --poller=' . $poller_id . ' --network=' . $network . ' --force';\n\tif (isset_request_var('debug')) {\n\t\t$options .= ' --debug';\n\t}\n\n\texec_background($php, '-q ' . $path . $options);\n\n\tsleep(2);\n\n\treturn;\n}\n\n"], "fixing_code": ["Cacti CHANGELOG\n\n1.2.23\n-security#4920: Add .htaccess file to scripts folder\n-security#XXXX: CVE-2022-46169 Unauthenticated Command Injection in Remote Agent\n-issue#4418: When using Single Signon Frameworks like SiteMinder Cacti does not properly detect ticket revocation in callbacks\n-issue#4682: New templates are not installed during the update\n-issue#4838: CLI Based upgrade generates warnings in PHP 8.1\n-issue#4888: Cacti audit_database.php script fails on MySQL 8.0.29 and likely will on newer versions\n-issue#4889: Increase host query performance by removing check for NULL after 1.2.22\n-issue#4892: Recache Loop after many devices go offline\n-issue#4893: in cacti 1.2.22 real time counter gets stuck and does not count down\n-issue#4897: Technical support page on remote poller shows max connections of Main poller\n-issue#4903: MySQL 8.x regular expressions break Cacti Automation\n-issue#4904: The Recommendation for innodb_buffer_pool_instances is incorrect for MySQL 8 and MariaDB < 10.5\n-issue#4905: Labels on AREA having a colon breaks the gradient creation with an rrdtool error\n-issue#4917: Under certain circumstances Real Time counter gets stuck and does not count down\n-issue#4921: Aggregate Graph Permissions not working as expected\n-issue#4923: Graph template \"duplicate\" action does not working - 500 Internal Server Error\n-issue#4927: When running audit_database.php script will fail if cacti password had a ')' in it\n-issue#4934: Updated phpseclib to version 2.0.38 to support PHP 8.1\n-issue#4935: Net-SNMP - Device I/O template Maximum Value is zero\n-issue#4940: Error display Data Collectors when sorting by hostname\n-issue#4941: Viewing graphs can break when boost is running in some rare cases\n-issue#4944: Newer Cacti Packages should be signed with SHA256 as SHA1 is being deprecated\n-issue#4947: When creating a Data Template, ensure that the default max value is always 'U' and not '0'\n-issue#4960: Setting context for connections throws error in PHP 8.x\n-issue#4963: Will the calculation rules of 95nth_percentile involve php and rrdtool versions\n-issue#4964: Tree search not hiding non-matching tree objects\n-issue#4966: When viewing the Device page, ensure that the Device Template filter only includes Devices Types in use\n-issue#4971: Deprecation warnings in log files with php 8.2 associate with mib parser\n-issue#4978: Graph timezone issue\n-issue#4980: Business Hour php errors\n-issue#4988: Data Templates that include many Data Sources bug only a few are used, cause RRDfile bloat\n-issue#4990: Backtrace generated on the Links page due to undefined variable use\n-issue#4991: Updating a Data Template does not properly switch the rrd_heartbeat properly for all data sources resulting in empty graphs\n-issue#4993: Data Debug Troubleshooter does not pick up invalid RRD_heartbeat settings\n-issue#4996: Graph Name in Graph Management shows the same name multiple times\n-issue#5001: Data Debug Troubleshooter Reports False Positive Issues with Missing Data Sources\n-issue#5006: Cannot delete vdef and cdef item (in theme paw) - php error\n-issue#5012: Fixed three error for PHP 8 when execute cli/upgrade_database.php\n-issue#5013: Cacti Bulk Walk Size of 'Auto-detect at First Reindex' not working\n-issue#5015: Upgrade for 1.2.21 reporting unknown status\n-issue#5017: Undefined array key and Rounding causes errors\n-issue#5018: It is possible in some rare cases to have 'remember me' enabled and still be logged out after a browser timeout \n-issue#5024: SNMP connection does not replace escape char in 'community'\n-issue#5028: Cacti User Stats can throw errors depending on the PHP version that you running\n-issue#5029: Searching for a plugin by name sometimes does not work from Plugin management interface\n-issue#5030: Installer shows innodb unset\n-issue#5033: Installer shows deprecated messages on PHP 8.1.2\n-issue#5034: RRD Proxy Server not supported by CLI script \"structure_rra_paths.php\"\n-feature#1100: Structured path not created when using remote poller and Update On-Demand\n-feature#1392: AJAX handled errors do not notify Admins that page errors exist\n-feature#2239: Allow Import and Export to be more controlled\n-feature#2485: Importing Template requires you to upload the same file after previewing\n-feature#2548: Logs display Order vs head or tail\n-feature#2567: For large systems, the sort buffer should be optimized for large tables\n-feature#2747: Provide better sorting in Console >Management > Graphs\n-feature#2871: Report when RRA's heartbeat is below the data source profile's interval\n-feature#3131: Button to reindex bad indexes\n-feature#3578: Scheduled Automatic Re-indexing of Devices\n-feature#4025: When importing a Template or Package, allow the user to use the system default Height, Width, and Image format instead of the one embedded in the Template\n-feature#4239: On \"Graph Utility View\" add the name of and a link to the graph template which the graph is based on\n-feature#4417: Remote Pollers - Support execution of custom functions at poller bottom\n-feature#4638: Detect the graph with stale rrd or missing rrd\n-feature#4754: The script ss_fping.php should timeout based upon the actual device if its searchable\n-feature#4762: Allow Package Import to be selective\n-feature#4967: Make adding Associated Graph Templates and Data Queries easier to use\n-feature#4786: Windows install does not support SVG rendering\n-feature#4820: When importing, make it possible to only import certain components\n-feature#4841: Move the cactid function db_check_reconnect() to lib/database.php for other service oriented scripts\n-feature#4874: Add support for showing business hours\n-feature#4890: Add multi threading for Poller rechace script\n-feature#4899: Pass poller status to script_server to avoid connecting to the main database when offline or in recovery\n-feature#4901: Make the script server accept arguments in the standard way\n-feature#4902: Updated Support for MySQL 8.x\n-feature#4907: Add lmSensors to the Net-SNMP Device Template\n-feature#4926: Allow the user to override Cacti auto-client time zone detection\n-feature#4943: Add ability to periodically check RRDfiles for errors in batch\n-feature#4948: When using proxies to load balance Cacti, if the proxy cookie times out, Cacti should properly redirect\n-feature#4955: Provide Common Sense Memory Tuning based upon MySQL Tuner Recommendations\n-feature#4956: The function db_check_reconnect() should be able to work with any connection\n-feature#4957: Add Device Template Classes to match the Classes in Upcoming release of the Package Plugin\n-feature#4965: Make Tree the unlock process not have to rebuild the page\n-feature#4989: Cache Cacti 'Total Rows' by Hash to Improve Performance\n-feature#5009: Adding a new method for use in xml files: value_parse_index\n-feature: Adding ESXi Device Template\n-feature: Upgrade billboard.js to version 3.6\n-feature: Upgrade jQuery to version 3.6.1\n-feature: Upgrade jQueryUI to version 1.13.2\n-feature: Introduce exec() function with timeout\n\n1.2.22\n-security#4834: When creating new graphs, cross site injection is possible\n-issue#4768: When creating user from template, multiple Domain FullName and Mail are not propagated\n-issue#4791: Nectar Aggregate 95th emailed report broken\n-issue#4796: Boost may not find archive tables correctly\n-issue#4802: Users may be unable to change their password when forced during a login\n-issue#4803: Net-SNMP Memory Graph Template has Wrong GPRINT\n-issue#4806: Search in tree view unusable on larger installations\n-issue#4808: Increased bulk insert size to avoid partial inserts and potential data loss.\n-issue#4810: Call to undefined function boost_debug in Cacti log\n-issue#4814: When no guest template is set, login cookies are not properly set\n-issue#4817: Later RRDtool releases do not need to check last_update time\n-issue#4818: Regex filters are not always long enough\n-issue#4819: Domains based LDAP and AD Fullname and Email not auto-populated\n-issue#4822: Cacti polling and boost report the wrong number of Data Sources when Devices are disabled\n-issue#4823: When editing Graph Template Items there are cases where VDEF's are hidden when they should be shown\n-issue#4831: Database SSL setting lacks default value\n-issue#4837: Update default path cacti under *BSD by xmacan\n-issue#4840: Web Basic authentication not creating template user\n-issue#4846: Unable to change the Heartbeat of a Data Source Profile\n-issue#4849: Tree Search Does Not Properly Search All Trees\n-issue#4850: When structured paths are setup, RRDfiles may not always be created when possible\n-issue#4851: When parsing the logs, caching would help speed up processing\n-issue#4853: Deprecation warnings when attempting real-time Graphs with PHP8.1\n-issue#4860: Custom Timespan is lost when clicking other tree branches\n-issue#4863: Non device based Data Sources not being polled\n-issue#4865: When Resource XML file inproperly formatted, graph creation can fail with errors\n-issue#4866: Update code style to support PHP 8 requirements\n-issue#4867: In Graph Management, filtering for \"Device: None\" shows all graphs\n-issue#4871: Realtime popup window experiences issues on some browsers\n-issue#4873: Auth settings do not always properly reflect the options selected by ddb4github\n-issue#4880: MySQL can cause cacti to become stalled due to locking issues\n-issue#4882: Boost process can get hung under rare conditions until the poller times out\n-issue#4884: Exporting graphs under PHP 8 can cause errors\n-issue#4887: Host table has wrong default for disabled and deleted columns\n-feature#4533: RRD storage paths do not scale properly\n-feature#4820: When importing, make it possible to only import certain components\n-feature#4825: Update change_device script to include new features by bmfmancini\n-feature#4827: Make help pages use latest online version wherever possible\n-feature#4832: Cacti should show PHP INI locations during install\n-feature#4833: Detect PHP INI values that are different in the INI vs running config\n-feature#4870: Added Gradient Color support for AREA charts by thurban\n-feature#4872: Update CDEF functions for RRDtool\n-feature#4881: When boost is running, it's not clear which processes are running and how long they have to complete\n\n1.2.21\n-issue#4531: Correct duplicate keys within database\n-issue#4614: Add support for hooks during polling loop or at poller end\n-issue#4683: When adding a device, errors may be reported whilst updating templates\n-issue#4684: When creating RRD error image, font may not exist by xmacan\n-issue#4685: Correct issues with corrupted Cacti Packages\n-issue#4687: Poller output not empty all the time\n-issue#4688: When running under PHP 5.4, certain operators are not valid by ddb4github\n-issue#4689: Package Import generates errors when you try to import directory or non-file\n-issue#4693: Correct issues with Heartbeat definitions under PHP 8.x\n-issue#4695: When importing packages, hash types are not properly processed by ddb4github\n-issue#4697: Login problem\n-issue#4698: When creating a device, unexpected poller down message may be shown\n-issue#4701: Editing a new user or user group may cause errors\n-issue#4705: Unable to automatically login using Remember Me option\n-issue#4707: Unable to duplicate graph templates due to missing column\n-issue#4716: Correct issues with Data Source Edit under PHP 8.x\n-issue#4719: Browsers may reject CactiTimeZone and CactiDateTime cookies due to SameSite requirements\n-issue#4721: Some JavaScript and image files URL are broken under midwinter theme by ddb4github\n-issue#4722: When upgrading from pre 1.x, various errors may be seen by ddb4github\n-issue#4726: When running under Fedora, issues may be seen with snmp values\n-issue#4729: Add ability for Template and Package Installs to update Suggested Name Values/Patterns\n-issue#4732: When using audit tool, text/mediumtext columns may not be properly processed by ddb4github\n-issue#4735: When changing data source profiles, errors may be shown\n-issue#4736: Update PHP recommendations to meet current expectations\n-issue#4743: When viewing graphs, fontawesome may not always been found\n-issue#4744: When using automation, numeric values may be treated as strings\n-issue#4748: When saving a device, errors may be generated\n-issue#4756: Importing very old Data Input Methods generate dependency warnings\n-issue#4757: Correct issues with Boost running under PHP 8.x\n-issue#4763: Unable to login locally when LDAP authentication enabled\n-feature#4720: Add a CLI script to install/enable/disable/uninstall plugins\n-feature#4740: Add log message when purging DS stats and poller repopulate\n\n1.2.20\n-security#4562: When using LDAP, authentication process may be bypassed\n-security#4576: Device, Graph, Graph Template, and Graph Items may be vulnerable to XSS issues\n-security#4579: Lockout policies are not properly applied to LDAP and Domain Users\n-security#4593: When using 'remember me' option, incorrect realm may be selected\n-security#4678: User and Group maintenance are vulnerable to SQL attacks\n-security#4679: Color Templates are vulnerable to XSS attack\n-issue#3816: When replicating data during installation/upgrade, system may appear to hang\n-issue#4363: Graph Template Items may have duplicated entries\n-issue#4435: Unable to Save Graph Settings\n-issue#4449: Script Server may crash if an OID is missing or unavailable\n-issue#4451: When system-wide polling is disabled, remote pollers may fail to sync changed settings\n-issue#4455: When updating poller name, duplicate name protection may be over zealous\n-issue#4457: Titles may show \"Missing Datasource\" incorectly\n-issue#4458: Checking for MIB Cache can cause crashes\n-issue#4460: Polling cycles may not always complete as expected\n-issue#4461: When viewing graph data, non-numeric values may appear\n-issue#4472: Utilities view has calculation errors when there are no data sources\n-issue#4475: Add support for PHP 8\n-issue#4477: Remote pollers do not force connection when online\n-issue#4479: Rebuild Poller Cache CLI script should have filter options\n-issue#4480: Saving a bad Data Template can damage Data Sources\n-issue#4481: Reports still use Legacy attributes, despite having a format file\n-issue#4482: Graph Automation slowed by in-efficient index selection\n-issue#4491: When rebuilding poller cache, SNMP settings do not properly update\n-issue#4492: When an OID starts with space, SNMP returns undefined data\n-issue#4495: Datasource Statistics may obtain invalid data for some rebooted devices\n-issue#4498: When attempting to calculate width, some input elements may cause console errors\n-issue#4500: Datasource Statistics may not scale properly on larger systems\n-issue#4508: Changing Multi-Device SNMP settings may not work as expected\n-issue#4509: Updating Items for a Graph Template may be slow on larger systems\n-issue#4511: When using the time-based view, SVG Graphs may not resize properly\n-issue#4512: When using API calls, graphs without data sources may be unremovable\n-issue#4516: Add additional information to help when creating graphs from templates\n-issue#4519: When remote host poll fails, poller ID may not be found and cause errors\n-issue#4521: Backtraces Logged in Cacti 1.2.x Branch - Gettext Translation\n-issue#4522: When entering custom input, layout issues may be seen\n-issue#4528: When creating a device, default setting for Device Threads may be ignored\n-issue#4529: Primary Admin account notifications may not work in certain cases\n-issue#4530: On larger systems, user interface for reporting may become unusable\n-issue#4536: When using Web Basic Authentication, user is always mapped as guest.\n-issue#4539: When handling plugin dependancies, notices may not be displayed properly\n-issue#4540: Certain account types should not allow their enabled status to be changed\n-issue#4543: Emails sent multiple times to the same address can be rejected\n-issue#4545: Reports Tab always shows 'Administration' despite a users permissions\n-issue#4546: When unauthorized, user may be redirected instead of notified\n-issue#4547: Add debug options to LDAP for diagnostic purposes\n-issue#4548: Rounding causes errors with variable substitution\n-issue#4549: Boost may become disabled due to an invalid path\n-issue#4551: Add support for PHP 8\n-issue#4552: Error messages are not always cleared, resulting in duplicated messages.\n-issue#4554: Add support for Automation under PHP 8\n-issue#4557: When selecting a Consolidation Function, errors may be reported\n-issue#4563: Breadcrumbs not always display the correct path\n-issue#4564: When clicking tabs, page may not always respond\n-issue#4567: Editing current user should prevent changes of account status\n-issue#4568: Authentication cache does not always use the correct realm\n-issue#4569: When editing users or groups, template permissions may not work as intended\n-issue#4571: When changing authentication method, unneeded settings may not be hidden\n-issue#4572: When basic authentication is used, login screen should not be seen\n-issue#4573: On larger systems, permission checks may render system unusable\n-issue#4575: When you delete a user, cookie data is not automatically removed\n-issue#4577: When editing current user, last administrator may be removed\n-issue#4578: The Cacti login algorithm is complicated to understand due to too much strait line code\n-issue#4580: When using Web Basic Authentication, users may be seen as guests\n-issue#4586: When viewing graphs, excess database queries may occur\n-issue#4587: Settings may be read more often than required\n-issue#4588: Unable to save host with multi-byte characters\n-issue#4589: When updating tables, ensure engine, row_format and charset by ddb4github\n-issue#4594: When selecting font, attempt to use system-based font before internally supplied version by ddb4github\n-issue#4597: Selective Device Debug does not work with Remote Data Collectors\n-issue#4598: Plugin tab does not stay visible when main poller is offline\n-issue#4603: When failing back to PHP GetText, module is not always selected\n-issue#4607: Configuration file may be improperly moved into the resource cache\n-issue#4609: When handling sessions, user agent may not always be present\n-issue#4610: When hiding disabled devices, some may still be shown\n-issue#4611: When replicating to remote pollers, plugins are not always properly sync'd\n-issue#4612: When using cookie authentication, Same Site support does not always work properly\n-issue#4613: Newer versions of MySQL/MariaDB may prevent structure replication changes\n-issue#4614: Add support for hooks during polling loop or at poller end\n-issue#4615: Plugin status on a Remote Data Collector may not always be detectable\n-issue#4616: When performing certain plugin actions, replication should be forced to Remote Collectors\n-issue#4617: When removing a plugin, removed tables are not removed from remote pollers\n-issue#4618: When plugin exceed runtimes, they should not be automatic disabled\n-issue#4620: When using CLI, Remote Data Collector scripts may connect to the wrong database\n-issue#4623: Boost does not operate as it should in certain situations\n-issue#4624: System uptime may be missing under certain circumstances\n-issue#4629: When removing many Graphs and Data Sources, polling cycles may overrun\n-issue#4630: Session data is not always started correctly\n-issue#4632: When creating a Datasource, Input Field Checking is not always enforced\n-issue#4634: When using Basic Authentication, the Logout Everywhere button should not be shown\n-issue#4645: When format file does not exist, changing certain settings may result in errors\n-issue#4651: Device Description is not consistent in Poller Cache view\n-issue#4652: After repopulating graph, navigation to check cumbersome\n-issue#4654: When saving a data template, replication may cause errors\n-issue#4658: When upgrading from pre-1.0, tree information may not properly update by ddb4github\n-issue#4659: When moving a device between pollers, errors may occur\n-issue#4666: Add date calculation support for PHP 8\n-issue#4671: Add poller sleeping support for PHP 8\n-issue#4672: When editing Reports, drag and drop may not function as intended\n-issue#4680: When data drive is full, viewing a Graph can result in errors\n-feature#4574: On larger systems, permissions may need alternative methods\n-feature#4631: When creating a Data Source Profile, allow additional choices for Heartbeat\n-feature#4636: Upgrade jQueryMulti-select to 3.0.1\n-feature#4637: Change select all options to use Font Awesome icons\n-feature#4641: Improve spine performance by storing the total number of system snmp_ports in use\n-feature#4663: Prevent Template User Accounts from being Removed\n-feature#4664: When managing by users, allow filtering by Realm\n-feature#4665: Allow plugins to supply template account names\n-feature#4667: When viewing logs, additional message types should be filterable\n-feature#4668: When creating a Graph Template Item, allow filtering by Data Template\n-feature#4669: Allow language handler to be selected via UI\n-feature#4673: Updated Device packages for Synology, Citrix NetScaler, Cisco ASA/Cisco\n-feature#4674: Add Advanced Ping Graph Template to initial Installable templates\n-feature#4675: Add LDAP Debug Mode option\n-feature#4676: Allow Reports to include devices not on a Tree\n-feature#4677: Allow Basic Authentication to display custom failure message\n\n1.2.19\n-security#4356: Further fixes for grave character security protection\n-issue: Over aggressive escaping causes menu visibility issues on Create Device page\n-issue#3787: Add SHA256 and AES256 security levels for SNMP polling\n-issue#4289: Import graph template(Preview Only) show color_id new value as a blank area\n-issue#4341: Editing graphs can cause errors due to missing sequence\n-issue#4342: When hovering over a Tree Graph, row shows same highlighting as Graph Edit screen\n-issue#4343: When RealTime is not active, console errors may appear\n-issue#4347: Race conditions may occur when multiple RRDtool processes are running\n-issue#4352: Creating graphs from templates may sometimes result in errors\n-issue#4353: When duplicating reports, errors may occur\n-issue#4375: Boost may be blocked by overflowing poller_output table\n-issue#4378: Template import may be blocked due to unmet dependency warnings with snmp ports\n-issue#4381: Newer MySQL versions may error if committing a transaction when not in one\n-issue#4382: SNMP Agent may not find a cache item\n-issue#4383: Correct issues running under PHP 8.x\n-issue#4391: When polling is disabled, boost may crash and creates many arch tables\n-issue#4396: When poller runs, memory tables may not always be present\n-issue#4400: Removal of redunant code\n-issue#4403: Timezones may sometimes be incorrectly calculated\n-issue#4404: Allow monitoring IPv6 with interface graphs\n-issue#4408: When a data source uses a Data Input Method, those without a mapping should be flagged\n-issue#4410: When RRDfile is not yet created, errors may appear when displaying the graph\n-issue#4419: Cacti missing key indexes that result in Preset pages slowdowns\n-issue#4420: Data Sources page shows no name when Data Source has no name cache\n-issue#4421: db_update_table function can not alter table from signed to unsigned\n-issue#4422: data remains in poller_output table even if it's flushed to rrd files\n-issue#4423: Parameter list for lib/database.php:db_connect_real() is not correct in 3 places\n-issue#4424: Offset is a reserved word in MariaDB 10.6 affecting Report\n-issue#4425: Rendering large trees slowed due to lack of permission caching\n-issue#4428: Error on interpretation of snmpUtime, when to big\n-issue#4431: Applying right axis formatting creates an error-image\n-issue#4435: Unable to Save Graph Settings from the Graphs pages\n-issue#4437: Graph Template Cache is nullified too often when Graph Automation is running\n-issue#4438: When Adding a Data Query to a Device, no Progress Spinner is shown\n-issue#4439: New Browser Breaks Plugins that depend on non UTC date time data\n-issue#4440: Undefined index: timeout_exceed /lib/poller.php on line: 1953\n-issue#4442: When testing remote poller connectivity Errors occour\n-issue#4443: When renaming poller errors occour\n-issue#4444: Removing spikes by Variance does not appear to be working beyond the first RRA\n-issue#4445: LDAP API lacks timeout options leading to bad login experiences\n-issue#4525: When using CMD for polling, pipes are not properly referenced for PHP scripts\n-feature: Add a normal/wrap class for general use\n-feature: Limit File Types available for Template Import operations\n-feature#1573: Cacti does not provide an option of providing a client side certificate for LDAP/AD authentication\n-feature#3113: Support Stronger Encryption Available Starting in Net-SNMP v5.8\n-feature#4299: Allow Cacti to use multiple possible LDAP servers\n-feature#4344: Add a 15 minute polling/sampling interval\n-feature#4385: Provide additional admin email notifications\n-feature#4390: Add warnings for undesired changes to plugin hook return values\n-feature#4409: When creating a Graph, make testing the Data Sources optional by Template\n-feature#4412: Update phpseclib to 2.0.33\n-feature#4413: Update jstree.js to 3.3.12\n-feature#4414: Improve performance of Cacti poller on heavily loaded systems\n-feature#4426: MariaDB recommendations need some tuning for recent updates\n\n1.2.18\n-security#4261: Lack of escaping on template import can lead to XSS exposure under 'midwinter' theme (CVE-2020-14424)\n-security#4276: Real time graphs can expose XSS issue\n-security#4282: Session IDs are not always recreated when logging out under PHP 5\n-issue#4250: Unable to create graphs due to Data Source verification failure\n-issue#4254: When poller first runs, time since last run produces an error\n-issue#4259: Data Template caching does not update and causes errors\n-issue#4263: Graphs with multiple data sources can no longer display percenticles\n-issue#4266: Incomplete items from a previous polling session may be updated twice\n-issue#4267: Unnecessary warnings appear when host name is not resolved\n-issue#4269: Installation Wizard can become stuck when creating graphs for default device\n-issue#4271: Continued timeout of registered processes\n-issue#4272: Unexpected errors may appear when using hostnames without a DNS domain\n-issue#4273: When adding a device from command line, testing of data sources can cause errors to be recorded\n-issue#4274: When you start to zoom a graph, the auto graph refresh should be disabled\n-issue#4279: Default Setting \"Device Threads\" will not be saved correctly\n-issue#4284: Whilst upgrading, errors in upgrade scripts prevent properly execution\n-issue#4293: Tree search does not take hosts belonging to a site into account\n-issue#4294: Tables outside of pre-built list that need fixing, cause bad unknown column errors\n-issue#4295: If a page contains multiple tables, a larger table can cause small ones to lose columns\n-issue#4297: Unable to search using regular expressions when trying to filter graphs\n-issue#4312: When using CMD.PHP as the poller, warnings can appear if you only use a subset of data input types\n-issue#4314: When disabling the snmpagent, you can introduce significant delay to data collection\n-issue#4315: Reduce repeatative warnings when resources are exhausted\n-issue#4316: Remove Spikes CLI interface is unable to provide localized spike, gap fill or float operations\n-issue#4321: Earlier versions of RRDTool do not correctly ignore previous updates\n-issue#4324: Date/Time format of replacement field on graph cannot be changed\n-issue#4325: When editing graph items, make identifying rows easier\n-issue#4326: When using large lists, ensure selection is visible in dropdown menus\n-issue#4330: Automation attempts to call undefined debug function\n-issue#4333: Under FreeBSD, allow ping to work properly for IPv6\n-issue#4367: Report owner - show at least the username when the full name is empty\n-feature#4258: Update phpseclib to 2.0.31\n-feature#4283: Content Security Policy may block Plugin functionality\n-feature#4317: Allow the Cacti administrator to perform bulk gap filling and floating in parallel\n-feature#4322: Update pace.js to version 1.2.4\n\n1.2.17\n-security#4019: Incorrect handling of fields led to potential XSS issues\n-security#4022: SQL Injection was possible due to incorrect validation order (CVE-2020-35701)\n-security#4035: Various XSS issues with HTML Forms handling\n-issue: CLI scripts should not have a max allowed runtime\n-issue: Normalize plugin hooks between user_admin.php and user_group_admin.php\n-issue#1052: TimeZones are not handled correctly with Daylight Savings changes\n-issue#3392: Allow plugins to customize device listing page\n-issue#3879: Allow Graph/Data Source with custom fields to prompt during manual creation\n-issue#3908: When poller overruns the script server can throw errors upon shutdown\n-issue#3936: Editing a graph created from Aggregate Graph can fail\n-issue#3945: CSV export can show NaN for date if TimeZone does not match system\n-issue#3969: SNMPv3 Password field does not correctly limit to size of database field\n-issue#3976: Font colors are being overridden leading to display issues\n-issue#3977: Database upgrade may fail when using upgrade_database.php\n-issue#3978: Input Validation was not handled correctly when displaying graph trees\n-issue#3981: Missing API include leads to runtime errors in Automation\n-issue#3985: Collation was not always handled correctly in the database library\n-issue#3988: Automation raises errors when default snmp options is set to none\n-issue#3990: PHP Information was not being displayed properly under Tech Support\n-issue#3999: Ensure database audit code attempts to use passwordless options before sending credentials\n-issue#4001: Ensure Cacti can support PHP 8\n-issue#4002: Pollers may sometimes not recover properly once they go offline\n-issue#4005: When viewing Realtime Graphs, validation errors may be seen for Size parameter\n-issue#4008: Massive decrease in poller performance due to unset variable\n-issue#4009: Ensure number format functions are consistent for i18n usage\n-issue#4021: Increase maximum number of device threads\n-issue#4031: Secondary filters on Data Collectors and Data Profiles do not work as expected\n-issue#4033: Action Icons changed to be consistent with admin UI\n-issue#4036: During discovery, Automation can throw unexpected errors due to null values\n-issue#4038: When creating new graphs, a second click is required even if not needed\n-issue#4042: RRD Updates can become disabled when saving performance options\n-issue#4043: Boost can become unresponsive when large number of archive tables exist\n-issue#4049: Enable sensitive graph information to be hidden from standard users\n-issue#4050: When showing table conversion script, the example path can be displayed incorrectly\n-issue#4056: Rename \"Show Exceptions\" checkbox to \"Only Show Exceptions\" which more actually reflects its function\n-issue#4060: When attempting to get client address, incorrect information may be returned\n-issue#4061: When getting date format, default options are not always honored\n-issue#4066: Enable Boost to utilize multiple processes\n-issue#4067: Disable BOOST image caching when using Graph Zoom features\n-issue#4068: When viewing graphs, individual graph sizes can be ignored in favour of global default\n-issue#4070: Summary data can fail to calculate when the RRDfile lacks the Data Source\n-issue#4073: Zoom functionality can fail when a graph has lost focus.\n-issue#4074: Realtime Images are not always adhering to defined format\n-issue#4075: LDAP Settings lead to confusion when setting up LDAP authentication\n-issue#4076: MariaDB tuning link points to a dead URL within System Utilities\n-issue#4077: If user has no permissions assigned and tries to login, a redirect loop occours\n-issue#4079: When checking current timestamps, make audit replace mysql function usage with preferred CURRENT_TIMESTAMP variable\n-issue#4080: Cacti regular expression searching does not quote expressions\n-issue#4082: RRDtool version detection not working for RRDproxy setup\n-issue#4083: RRDCleaner does not support RRDproxy\n-issue#4086: Large system performance negatively impacted due to $spikekill_templates behavior\n-issue#4092: On large systems, Primary ID usage on heavily used tables will overflow due to default MySQL variable size\n-issue#4095: When viewing Plugins page, icons can sometimes be misaligned\n-issue#4098: Graphs and Data Sources lists can become unresponsive on very large systems\n-issue#4100: When viewing User Admins, a division by zero error can sometimes be seen\n-issue#4105: Allow admins to define bulk walk repetition sizes\n-issue#4109: Realtime graphing can sometimes cause gaps in historic data\n-issue#4110: Graph Variables are not always parsed correctly leading to errors in log files\n-issue#4116: Upgrading large trees from 0.8.x to 1.x is slow\n-issue#4117: Script server throws errors if a command line argument includes a backslash\n-issue#4119: Implicit flushing is not always enabled, depending on OS, resulting in Script Server result issues\n-issue#4121: LDAP search filter cannot be configured if too many OUs or filters are nested\n-issue#4122: Automation causes SQL syntax errors when invalid operations are present\n-issue#4125: On completing the installation wizard, an internal server error can sometimes be observed\n-issue#4126: Deleting a damaged graph can sometimes led to removal of valid graphs too\n-issue#4127: When updating Trees, graph titles are calculated too often leading to unresponsiveness\n-issue#4130: On large systens, Graph creation can become unresponsive due to large number of data sources\n-issue#4131: A design flaw makes importing new Graph Template slow on large systems\n-issue#4134: MIB Caching does not always work as expected\n-issue#4135: On large Cacti installs, editing Data Templates is slow\n-issue#4136: When repairing database at command line, no option exists to skip table checks and force Data Source repair\n-issue#4141: Unusually long comments do not wrap when viewing graphs, and haven't in this CHANGELOG entry either\n-issue#4143: Prevent some false positive scenarios when detection orphan graphs\n-issue#4147: Poller items are evaluated too quickly when mixed polling cycles are used\n-issue#4148: Ensure automatic refresh of cacti log view works consistently\n-issue#4149: Ensure utilities show correct information when in offline mode\n-issue#4161: Data source template names should be shown in the respective \"suggested values\" sections\n-issue#4162: Allow Persistent Connections to MariaDB/MySQL to be configured\n-issue#4164: Unable to easily track Cacti login sessions when using database sessions\n-issue#4166: Auto-select text when focusing auto complete elements\n-issue#4169: Ensure Log Viewer 'Go' and 'Clear' buttons behave as expected\n-issue#4170: Enable full name tooltips for Alias/Description columns\n-issue#4173: Ensure Console menu icons are properly aligned\n-issue#4174: When using replication, ensure binary logging can be disabled\n-issue#4175: When syncing Templates, prevent false 'Damaged Graph' notifications from appearing\n-issue#4177: Simplify Graph/Template authorization searches when not using restricted mode\n-issue#4179: Correct class usage on Graph Sidebar Icons to be consistent\n-issue#4180: Remove logoff option when using basic authentication\n-issue#4181: Ensure realm names are more consistent\n-issue#4182: Allow Automatic Graph Creation to utilise Data Templates with Overriden Values\n-issue#4183: Processes can be terminated early due to incorrect timeout calculation\n-issue#4184: Ensure error logging is consistent when using CMD processor instead of spine\n-issue#4185: Updating Signal Handling to recommended standards for PHP 7.1+\n-issue#4186: When editing a Fixed String on Tree Rule it is improperly displayed as \"Unknown\"\n-issue#4187: Provide more direct method fo navigating to Data Source from Graph\n-issue#4188: Replacement variable names are difficult to find for Aggregate Graphs and Templates\n-issue#4189: Allow links from a page to its specific documentation\n-issue#4190: Augmenting roles can incorrectly link to roles instead of realms in rare cases\n-issue#4192: Devices search can return a black screen if device name contains the hash/pound # character\n-issue#4193: Allow command line reindex to work with disabled devices\n-issue#4195: When search text includes # character, filtering does not always work as expected\n-issue#4197: When attempting to do a rollback on versions, the installer will not restart\n-issue#4199: Allow Cacti administrator to define a min refresh interval to prevent graph gaps\n-issue#4205: When removing Data-query Associated Graph Templates, it deletes the graphs Templates from bottom to top\n-issue#4206: When a report was delayed, the report's time is incorrectly changed\n-issue#4215: Poller recovery starts multiple processes and fails to recover properly\n-issue#4223: Parallel boost restart due to timeout can result in errors.\n-issue#4227: When remote poller is in offline mode, data is written to more tables than necessary\n-issue#4228: Under specific circumstances, redirection issues can occur after login\n-issue#4229: When no snmp option is set, automation can incorrectly report a number of issues\n-issue#4232: Database TLS configuration requires client certificates as well\n-issue#4233: Potential typos and incomplete parameter lists for database connection variables\n-issue#4241: Tree sort mechanism does not take sites into account\n-issue#4251: Caching of Graph Titles can be incorrect\n-feature: Add Theme 'Midwinter'\n-feature: Update phpseclib to version 2.0.30\n-feature#645: Modify automation to test for data before creating graphs\n-feature#3513: Add hooks for plugins to show customize graph source and customize template url\n-feature#3572: Missing prompts during automation's device creation leads to blank data\n-feature#4012: Allow CSRF security key to be refreshed at command line\n-feature#4013: Allow remote pollers statistics to be cleared\n-feature#4113: Allow user to be automatically logged out after admin defined period\n-feature#4176: When replicating, ensure Cacti can detect and verify replica servers\n-feature#4210: Replace c3.js with billboard.js\n\n1.2.16\n-issue#3704: When generating a report, the Cascade to Branches function does not as expected\n-issue#3859: When viewing graphs, automatic refresh so not always work as expected\n-issue#3898: Realtime graph pop up counter bug\n-issue#3903: Undefined variable errors may occur when creating a new datasource\n-issue#3907: The cli-based installer does not exit with a non-zero exit code when error occurs\n-issue#3912: When an export is complete, sometimes the progress bar remains\n-issue#3915: When enabling many devices, a threshold can be reached causing a slowdown in the process\n-issue#3916: When performing actions against Devices, replicated device information could sometimes be lost\n-issue#3917: When using API to rename a tree node, backtrace may be incorrectly shown\n-issue#3919: When searching, valid pages can sometimes be shown as empty\n-issue#3920: When exporting data from graphs, not all data was properly included\n-issue#3924: Graph Templates filter is not updated after new graph created\n-issue#3926: Username and password on the login page is not visible in Classic theme\n-issue#3929: Improve wording of concurrent process and thread settings\n-issue#3930: Location filter should remove blank entries\n-issue#3931: When syncing data collectors, a reindex event may be triggered unnecessarily\n-issue#3932: Automation Networks allows discovery of invalid IP addresses\n-issue#3933: When changing permissions of the current user, they don't take effect immediately\n-issue#3935: When reindexing a device, an incorrect page was sometimes displayed\n-issue#3942: When repairing database, audit_database.php does not add missing columns\n-issue#3948: Spine 1.2.15 - Spine Encountered An Unhandled Exception Signal Number: '6' [11, Resource temporarily unavailable] (Spine thread)\n-issue#3949: Log page should not be empty if no log info exists\n-issue#3953: During upgrade, there are times when realms can be duplicated leading to SQL errors\n-issue#3957: When using ping.php, UDP response times are not interpreted properly\n-issue#3960: Improve warning you get when attempting to view a log file you don't have access to\n-issue#3962: When replicating files, scripts are not marked as executable\n-issue#3963: When creating plugin tables, collation is not set properly\n-feature: Update c3.js to version 0.7.20\n-feature: Update Chart.js to version 2.9.4\n-feature: Update phpseclib to version 2.0.29\n-feature: Update PHPMailer to version 6.1.8\n-feature: Use LSB shebang notation for cli scripts\n-feature: Add support for cactid daemon based launcher\n-feature#3923: Add ability to hide the Graph Drilldown icons\n-feature#3943: Add hooks for plugins to show custom Graph Source and custom Template URL (List View)\n\n1.2.15\n-issue#3643: When editing Maximum OIDs Per Get Request, blank value can cause errors\n-issue#3656: Boost may run more often than it should\n-issue#3693: Recache Event Loop can cause Interface Graphs to show gaps\n-issue#3703: When searching Graph Tree's, non matching devices remain visible\n-issue#3711: Page validation errors may occur when opening real time graphs\n-issue#3722: External Links do not always open if they are still open from previous usage\n-issue#3730: Cultural changes to various word usage\n-issue#3741: Replicate deleted device status instead of poller sync\n-issue#3743: Description field allows more characters entered than is stored\n-issue#3747: When installing or upgrading, LDAP functions may not always be included properly\n-issue#3748: Unable to remove discovered device\n-issue#3753: When installing or upgrading, PHP recommendations may not always return a valid value\n-issue#3755: Graph Templates has duplicate SQL delete statement\n-issue#3759: When syncing to remote poller, missing function errors may occur\n-issue#3760: When removing devices from remote pollers, devices may reappear without details\n-issue#3761: When removing devices, array errors may sometimes be recorded\n-issue#3763: Variable injection does not always work as expected\n-issue#3764: Editing Data Queries with multiple data templates can give errors about Suggested values\n-issue#3767: Progress bar does not provide enough visual information during long page loads\n-issue#3768: Some themes do not allow for a way to see which user is currently signed in\n-issue#3769: When viewing tables, allow users to force all columns to be visible\n-issue#3770: Column sizing is being lost between pages refreshes\n-issue#3771: When viewing input methods table, no ID is shown to help identify which method is being viewed\n-issue#3775: Filters do not always respect using keyboard to initiate searching\n-issue#3778: When exporting a data query, an invalid column name error can sometimes be shown\n-issue#3781: When checking if a view is allowed, having no session can result in errors\n-issue#3782: When removing devices via the CLI, undefined variable errors may be seen\n-issue#3786: Real Time Graphs may cause invalid index errors\n-issue#3790: On newer versions of MySQL/MariaDB, 'system' keyword can cause issues\n-issue#3793: Plugin setup can generate errors when reading options via system function\n-issue#3809: Plugin version numbers can be unexpectedly truncated\n-issue#3815: When PHP Session is set to autostart, an error can be reported as Cacti attempts to start it\n-issue#3820: When removing multiple items, selection process does not always work\n-issue#3821: When exporting colors, the indicator is not always removed upon completion\n-issue#3825: Unable to pass tree and leaf ID to 'graph_button' hook\n-issue#3827: When performing maintenance, various errors may sometimes be seen\n-issue#3828: When Guest User setting is active, current user is not always properly set\n-issue#3831: When installing Cacti, minor errors in text can be seen\n-issue#3835: Numbers are not always formatted properly when there are no decimal places\n-issue#3836: When viewing Real Time Graphs, an undefined index error may be recorded\n-issue#3844: Minor memory leaks and refresh issues when zooming on graphs\n-issue#3847: Real Time Graphs may sometimes fail due to folder permissions\n-issue#3849: Navigation can sometimes occur unexpectedly due to background timers\n-issue#3850: Trees management screen not reporting correct number of trees\n-issue#3858: Tree sequences can sometimes skip numbers during resorting\n-issue#3862: Guest user selection should not allow setting the currently logged in user\n-issue#3864: Links in Table Headers do not show clearly when in modern theme\n-issue#3868: Under some cases tree logic leads to undefined index errors\n-issue#3869: Cacti Data Debug can show errors if the Data Source is damaged or has been removed\n-issue#3871: When importing a data query, an invalid column name error can sometimes be shown\n-issue#3874: When using shift functions on graphs, negative values are not allowed\n-issue#3881: Correct issue when file is unreadable reporting no file was specified\n-issue#3883: Orphaned Plugins have no option to be removed\n-issue#3884: Update MySQL recommendations for Character Set and Colation\n-issue#3888: Correct sorting of IP addresses to be numeric not alpha\n-issue#3890: Saving a device should not always repopulate the poller cache\n-feature: Update FontAwesome to Version 5.14\n\n1.2.14\n-issue#3676: Device not showing up in device page but showing up in Monitor tab\n-issue#3678: More or Equal incorrect highlighting max_heap_table_size and tmp_table_size\n-issue#3694: Spikekill `percent` is converted from percent to decimal twice, making it 1/100 of the true size\n-issue#3713: When sorting data debug checks by user, no results are shown and errors recorded\n-issue#3719: When tooltip is too long, the scroll bar exists, and cannot be scrolled, which makes the tooltip be hided\n-issue#3723: Improper escaping of error message leads to XSS during template import preview\n-issue#3728: Invalid uptime is not handled properly\n-issue#3737: Poller functions may not run if 'processes' table is missing\n-feature#3615: Poller keeps using old IP address for a device\n\n1.2.13\n-security#3544: jQuery XSS vulnerabilities require vendor package update (CVE-2020-11022 / CVE-2020-11023)\n-security#3549: Lack of escaping on some pages can lead to XSS exposure (CVE-2020-23226)\n-security#3582: Update PHPMailer to 6.1.6 (CVE-2020-13625)\n-security#3622: SQL Injection vulnerability due to input validation failure when editing colors (CVE-2020-14295)\n-security#3628: Lack of escaping on template import can lead to XSS exposure\n-issue#3517: When generating reports, function looping can occur resulting in 100% cpu usage\n-issue#3525: When viewing Graphs, zoom functionality prevents drag and drop of image\n-issue#3527: When using 95th Percentiles, undefined index errors can be generated\n-issue#3532: When using Realtime, if no graph contents are present an error is generated\n-issue#3533: When exporting data, Start date for RRDfile does not match start date of first data row\n-issue#3536: When using Navigation Menu, Show/Hide in Response mode does not always work\n-issue#3538: When using Realtime, race conditions between browser and function loading can occur\n-issue#3543: When exporting CSV data, Unicode prefix is not properly set\n-issue#3551: Authentication can fail when using Web Basic Authentication and Template User\n-issue#3553: When attempting to view an aggregate graph that does not exist, many errors are generated\n-issue#3563: Current orphan handling disrupts graphing transient indexes\n-issue#3566: Automation incorrectly attempts to use MacTrack to duplicate options\n-issue#3567: When Boost runs, locks are not always released properly and crash is detected\n-issue#3569: Invalid font results in large number of log entries\n-issue#3571: Correct various runtime errors due to incorrect message variables\n-issue#3574: Saving Graph Template Items take a long time on large systems\n-issue#3577: Hosts are being incorrectly filtered when first displaying with filter set to all\n-issue#3579: Graphs can incorrectly show as 'Empty Graph'\n-issue#3581: Realtime graph window is not resizing properly\n-issue#3588: Validation warnings are generated when viewing/editing devices\n-issue#3594: Automation hangs for certain schedule types\n-issue#3595: Template to Device sync text is not consistent\n-issue#3596: When importing template, resources aren't checked properly\n-issue#3597: Template to Device sync provides no feedback\n-issue#3598: When editing graphs and graph templates, back button results in broken page\n-issue#3599: When downgrading, templates are fully selected for install\n-issue#3601: When a device is down, instate can show wrong time\n-issue#3607: When session timeout occurs, subsequent authorized access to areas can become blocked\n-issue#3611: Allow CHANGELOG to be viewable from the GUI\n-issue#3613: When modifying trees, devices and graphs lists ignore Autocomplete Rows setting\n-issue#3614: When section tabs wrap, the title of the first section can become obscured\n-issue#3624: When previewing graphs, sometimes the images fail to appear\n-issue#3629: Log files are not rotated properly on remote pollers\n-issue#3631: Command line scripts do not allow an unlimited runtime causing timeouts\n-issue#3632: When mysql connection fails, various unexpected errors are recorded\n-issue#3635: Automate generates undefined index errors when communicating with remote pollers\n-issue#3639: When updating a device, duplicate entry errors occur when inserting to the database\n-issue#3646: Adding datasource fails from CLI due to missing function\n-issue#3651: Editing any item on an Aggregate Graph that has been converted to a normal graph breaks entire graph\n-issue#3655: Rare race condition between Boost and Poller can result in unexpected missing table errors\n-issue#3659: When viewing logs, unexpected 'needle' errors can be seen on rare occasions\n-issue#3663: Disabling a Data Collector can cause unexpected errors\n-issue#3668: When Input Field is in error, message reports field will be highlighted which is incorrect\n-issue#3669: When adding an Input Field, the Input Method can be renamed unexpected\n-issue#3673: Spikekill does not receive correct `avgnan` value when launching from GUI\n-issue#3676: Device not showing up in device page but showing up in Monitor tab\n-issue#3681: Item movement arrows do not properly align on all themes\n-issue#3682: When in 'Time Graph View' mode, Zoom features do not work correctly\n-feature#3611: Allow CHANGELOG to be viewable from the GUI\n-feature#3647: When adding datasource fails from CLI, created Datasource ID should be printed\n-feature#3666: Update jstree.js to 3.3.10\n-feature#3688: Update phpseclib to 2.0.28\n\n1.2.12\n-security#3467: Lack of escaping of color items can lead to XSS exposure (CVE-2020-7106)\n-issue#3422: When Graph Item is not linked to a data source, Comments do not always get variables substituted correctly\n-issue#3424: Hosts are being incorrectly filtered when no location filter is set\n-issue#3427: When exporting to a CSV with unicode characters, contents can become garbled\n-issue#3429: When using SNMP v3, Automation can report extraneous warnings\n-issue#3432: Rare race condition exists when both boost and dsstats enabled\n-issue#3434: When attempting to exploit Cacti using alert, unexpected errors can be seen\n-issue#3436: Unable to login due to incorrect default of Cookie Domains in config.php.dist\n-issue#3438: When upgrading to 1.2.11, installer can appear to stop at 42%\n-issue#3447: SNMP Issues on recent version of PHP\n-issue#3449: When viewing the installation wizard's directory permission step, items are overlapping unexpectedly\n-issue#3450: When installing Cacti under XAMPP and PHP 7.4, exceptions are being recorded and installation fails\n-issue#3452: New Content-Security-Policy prevents External Links from being opened\n-issue#3454: Cacti's Reports are not displaying messages correctly\n-issue#3457: Graphs can not properly handle negative axis values\n-issue#3459: When installing a new remote poller, connection tests can incorrectly fail\n-issue#3460: Addtional changes to allow plugin folder/display names to be handled better\n-issue#3462: Increase default memory limit for cli scripts to prevent runtime memory issues\n-issue#3463: When listing VDEF's, selecting 'has graph' can cause unexpected exceptions in logs\n-issue#3468: Graph rules cannot be created for automation\n-issue#3474: The SSL option to set the SSL_CA should be optional for Client Connections\n-issue#3477: Boost leaking memory when a large number of Data Sources disabled\n-issue#3478: Reindexing can sometimes run longer than expected\n-issue#3479: When viewing the Data Query table interface, the Data Input Method should be right aligned\n-issue#3483: When recording log entries, cacti should default to hyphenated date format\n-issue#3484: When editing SNMP v3 passwords, previous setting is not obfuscated\n-issue#3488: In automation, when viewing an 'SNMP option set', the private passphrase is in clear\n-issue#3495: When installing templates, default 'all' selection will reset all existing graphs, removing customisations\n-issue#3496: Graph Items can show a double percent sign incorrectly\n-issue#3502: When viewing Graphs, can not switch between list, preview and tree submodes\n-issue#3504: Viewing graphs before the poller has run for the first time can produce unexpected errors\n-issue#3505: When viewing graph previews, clicking Go or Refresh prevents calendars from working\n-issue#3506: After successfully logging in, a user can become automatically logged out again\n-issue#3507: Changes to JavaScript's Storage API cause exceptions to be thrown\n-issue#3510: Only guests can actually guest only pages, logged in users are denied access incorrectly\n-issue#3512: When plugins update, registered files list cannot always be updated\n-issue#3520: When viewing graphs, shifting time does not work when using non-english languages\n-issue#3576: LDAP Authentication succeeds, but login fails due to bad session handling\n-issue#3629: Log files are not rotated properly on remote pollers\n-feature#3480: Created 'custom_denied' hook to allow customisation of permission denied notifications\n-feature#3498: Update js.storage.js to 1.1.0\n-feature#3499: Update jstree.js to 3.3.9\n-feature#3500: Update phpseclib to 2.0.27\n\n1.2.11\n-security#1566: Add SameSite support for cookies\n-security#1985: Cookie should be properly verified against password\n-security#3342: CSRF at Admin Email\n-security#3343: Improper Access Control on disabling a user.\n-security#3414: Update to jQuery 3.4.1 to resolve XSS issues with jQuery 3.3.1\n-issue#2265: When attempting to save Graph field, query_ifSpeed is not properly validated\n-issue#2400: Allow ability to duplicate site settings\n-issue#2428: Make plugins non-case sensitive for folder names, whilst allowing nicer display names\n-issue#2580: When running DSSTATS, system isn't properly detecting that another is already running\n-issue#2853: Discovered Devices filtering do not include snmp description or name\n-issue#3231: Allow user to unlock a tree that has been locked for editing by another\n-issue#3237: Report gets resent every poller cycle\n-issue#3247: Language source files do not update \"PO-Revision-Date\" attribute\n-issue#3261: Automation rules aren't run for new devices on remote data collectors\n-issue#3296: Bad PHP memory limit values can result in failed upgrades\n-issue#3299: When using php-snmp and setting SNMPv3, warning is now shown as library does not support it properly\n-issue#3303: When installing under Windows OS, path expansion is not converted to PHP required format\n-issue#3310: When using 32-bit OS, automation errors can be seen due to subnet mask calculations\n-issue#3312: Console menu does not auto-expand for graph item editor page\n-issue#3313: When installing, multiple issues can be seen due to bad packages\n-issue#3314: Script Server has invalid debug code left in\n-issue#3317: Warnings can appear from CSRF Magic library due to multiple token values being found\n-issue#3319: Errors can occur upgrading from 0.8.x due to incorrectly detected data source profile id\n-issue#3322: When searching for LDAP accounts, allow recursive searching\n-issue#3330: Packages that are not properly formatted can cause installation issues\n-issue#3334: When upgrading from 0.8.x Automation SNMP Options should be populated\n-issue#3335: Unable to hide Device based Aggregate Graphs on Tree\n-issue#3336: Plugins need the ability to relax some content security policies in order to work properly\n-issue#3340: Undefined variable warning can appear when using 95th percentile graphs\n-issue#3341: MoTranslator does not appear to be handing null values properly\n-issue#3345: When attempting to refresh datetime picker, unexpected results can appear\n-issue#3346: When attempting to rewrite octet strings, extra space breaks pattern matching\n-issue#3348: When attempting to handle Orphans and/or Sync Graphs, results are not as expected\n-issue#3349: Prevent setting the PHP variable max_input_vars since it is read only\n-issue#3350: When editing a data source template, inconsistent results can be seen due to database query\n-issue#3355: When viewing raw graph data via the GUI, values are not always calculated correctly\n-issue#3357: Tree Search textbox resizes to 0 in some cases\n-issue#3360: When using guest accounts, after several timeouts result in refreshes, guest becomes logged out\n-issue#3363: The current user and user group permissions pages are not responsive\n-issue#3367: When Data Queries timeout, data is removed from the Host SNMP Cache table causing issues\n-issue#3368: Saving a Graph Template Item fails due to missing includes\n-issue#3373: When logging in via LDAP, ActiveDirectory would sometimes report insufficient access\n-issue#3375: When polling more often than default period of collecting data, distribution of collected data was not occurring\n-issue#3376: Improve speed when recovering from a poller from offline state\n-issue#3378: When attempting to check whether to include MoTranslator, typo makes it appear unavailable\n-issue#3380: php error when trigger threshold sendmail\n-issue#3386: Second data collector shows as running when its has no items to gather\n-issue#3387: Minor corrections to CSRF Magic\n-issue#3388: Naming of CLI programs does not always match name used within syntax usage advice\n-issue#3390: Incorrect breadcrumb bar if current tab is not \"Graphs\"\n-issue#3402: Cacti scores low on performance audit on lighthouse audit\n-issue#3408: CSRF Secret path is not passed properly when attempting to initialize secret\n-issue#3409: Issues with navigation link activations to other base Cacti pages\n-issue#3410: Zoom looses focus in advanced mode while crossing chart border\n-issue#3411: When upgrading a primary server, full synchronization is not happening as expected\n-issue#3412: When upgrading a primary server, automation templates are removed\n-issue#3413: When upgrading and choosing to upgrade your packages, installer finishes without package data in log\n-feature#1551: Allow system uptime to be a variable for use with graphs\n-feature#1990: Plugin Realm should have a 'role' to help maintain changes between plugins\n-feature#2110: Add Refresh Interval to Data Collectors display\n-feature#2156: Add Location based filtering\n-feature#2236: Allow for Purging of Data Source Statistics from the GUI\n-feature#2268: Restore ability to duplicate a data profile\n-feature#2534: Enhance table navigation bars to support systems with larger number of items\n-feature#2688: Increase length of Graph Item 'value' field to support pango-markup better\n-feature#3304: Allow Basic Auth Accounts to be mapped by CSV file\n-feature#3366: Make form elements under checkbox_groups flow using flex grid style\n-feature#3374: Set the domain attribute to secure cookies for the 'remember me' option\n-feature#3403: Enhance the \"Graph Debug Mode\" to display RRDtool Command lengths and excess warnings\n\n1.2.10\n-security#3285: When guest users have access to realtime graphs, remote code could be executed (CVE-2020-8813)\n-issue#3240: When using User Domains, global template user is used instead of the configured domain template user\n-issue#3245: Unix timestamps after Sep 13 2020 are rejected as graph start/end arguments\n-issue#3246: When upgrading with remote collectors, sync status does not always return properly\n-issue#3250: When PHP memory limit is set to -1, recommendation value fails\n-issue#3253: Upgrade can stall when checking permissions on csrf-secret.php\n-issue#3254: Installer shows script owner rather than running user for suggested chown command\n-issue#3266: When setting User Groups to 'Defer to the User', setting can lead to user being told they have no permissions\n-issue#3269: When searching Graphs under a Chinese language, an unexpected error as sometimes shown\n-issue#3274: When editing a tree, multiple device drag/drop does not work\n-issue#3276: When spine aborts, script server can be left wanting or generating unnecessary logs\n-issue#3277: When boost does not find an initial time, numeric errors can be raised\n-issue#3281: When changing Graph Template options, incorrect image format may be selected\n-issue#3282: Graph's can be sized incorrectly if image is SVG format\n-issue#3283: When setting a file path, valid characters not recognised properly\n-issue#3287: When using graph template 'Cacti Stats - User Logins', an incorrect count of invalid users can be seen\n-issue#3288: When on Device page, pressing 'Go' on the filter caused Device New menu pick to appear\n-issue#3289: When using CMD.PHP, poller id is not always shown properly\n-issue#3290: When using CMD.PHP, inconsistent device logging levels may occur\n-issue#3298: When initialising fields in JavaScript, text/textarea elements have width set to zero if it is hidden by parent\n-issue#3302: Editing a Graph Template does not show the Data Template name\n\n1.2.9\n-security#3191: Lack of escaping on some pages can lead to XSS exposure (CVE-2020-7106)\n-security#3201: Remote Code Execution due to input validation failure in Performance Boost Debug Log (CVE-2020-7237)\n-issue#2937: Devices still show in lists despite being deleted\n-issue#3038: When editing an aggregate on smaller screens, layout may not be correct\n-issue#3136: Upgrade may fail between 1.2.7 and 1.2.8 if incompatible database format used\n-issue#3142: Chrome sets graphs tree navigation view to width 0px\n-issue#3146: Unable to create aggregate graphs on new installations\n-issue#3149: After refresh of page, tooltips stop working\n-issue#3150: When using Time Graph View, Zooming can cause errors\n-issue#3151: Passing glue string after array is deprecated in PHP 7.4\n-issue#3155: Aggregate does not correctly follow color template when reordered\n-issue#3156: On new installs, gprint_format was missing from table aggregate_graphs\n-issue#3157: Back button not working properly with Classic theme\n-issue#3158: Classic theme show only 3 tabs on mobile device. Don't show Console menu\n-issue#3159: PHP Memory is not correctly identified when value is not in megabytes\n-issue#3161: When the poller_output_boost table is missing, recreate it before a poller run\n-issue#3163: When using RPMlint, Free Software Foundation address is shown to be incorrect\n-issue#3165: Zoom looses its focus after all graphs on page rendered\n-issue#3166: When changing zoom level, graphs are resized inappropriately at the end\n-issue#3167: Installer should initialize the csrf-secret.php file automatically\n-issue#3168: sqltable_to_php.php script does not pick up row_format\n-issue#3177: Remove legacy plugin hook that presents potential 3rd party security issues\n-issue#3178: The change password page is not displaying the rules\n-issue#3180: Receiving undefined index errors when working with some Data Queries\n-issue#3181: When configuration file is unreadable, Cacti shows database connection errors if non defaults are needed\n-issue#3182: When a database connection error occurs, there is no way to report actual error\n-issue#3184: Improve program path detection by using system path and PHP_BINDIR\n-issue#3193: Starting with MySQL 5.7 some sql_mode variables are required for some plugins\n-issue#3196: Minimize use of eval() in JavaScript due to emerging Content-Security-Context guidelines\n-issue#3200: Unable to mass change Graph Template image format in mass\n-issue#3206: Converted aggregate graph cannot be edited\n-issue#3209: Error occurs when Creating New Graphs through Automatically Added Devices using Sync Device Template\n-issue#3216: When editing a Data Source Profile size is shown as 'N/A'\n-issue#3224: When removing graphs by command line, regex is not properly validated when empty\n-issue#3225: Unable to Import Templates due to invalid dependency hash\n-issue#3226: When processing secpass login, failed logins are not recorded\n-issue#3228: Login page does not remember the last realm used by user\n-issue#3232: When editing HRULE and VRULE items, color selector was not presented\n-issue#3233: When working with non-templated graphs, it can be difficult to determine what items represent\n-issue#3235: Transient errors may occur with table poller_output_boost_arch\n\n1.2.8\n-security#3025: CVE-2019-17357 When viewing graphs, some input variables are not properly checked (SQL injection possible)\n-security#3026: CVE-2019-17358 When deserializating data, ensure basic sanitization has been performed\n-security#3066: When using HTTPS, secure cookie to prevent potential weakness\n-issue#1228: Any tree or branch with a long name force main content off screen\n-issue#2133: Long snmp_indexes are being cut off\n-issue#2888: Long hostnames cause template filter to go off page\n-issue#2987: Changing Color Template does not update Aggregate\n-issue#2989: Allow Remote Data Collectors to maintain their own path variables\n-issue#2991: Cacti Statistics device template can generate unexpected errors\n-issue#2995: When editing a report, column setting may be ignored incorrectly\n-issue#2996: When editing a user, graph options do not properly reflect previously saved settings\n-issue#2998: Session performance issues due to excessive use for database storage\n-issue#2999: Blank arguments can lead to extra spaces in script arguments\n-issue#3006: Boost generates undefined variables warning during poller run\n-issue#3011: i18n logging does not check write permission exists\n-issue#3012: When viewing realtime graphs, some input variables are not properly checked\n-issue#3013: Allow legends to be modified for Aggregate Graphs\n-issue#3017: Automation network range with spaces fails validation\n-issue#3019: User selected language is not always adhered to\n-issue#3021: Tree view cuts off at the bottom of page on modern theme\n-issue#3023: When clicking highlighted tab, side panel is not always shown/hidden correctly\n-issue#3027: Aggregate Graph re-ordering does not work\n-issue#3028: When zooming a graph, unable to reach edge of graph without losing focus\n-issue#3030: Pace continues to run even after a page is finished rendering\n-issue#3032: Graphs may select MAX instead of AVERAGE as consolidation function even if there is no item with MAX present.\n-issue#3035: When editing a tree, can not remove entries due to CSS bug\n-issue#3037: When emptying poller output using cli, debug functions are not properly included\n-issue#3039: Allow packagers to be able to specify an alternate location of csrf-secret.php file\n-issue#3040: When running automation, discovery can still run even if cancelled\n-issue#3041: When running automation, scans do not always respond to being cancelled\n-issue#3042: When running automation, scan can fail when selecting remote pollers\n-issue#3045: When viewing Aggregate Graphs, an error due to undefined referrer may occur\n-issue#3047: When saving settings, ignore remote pollers who have not checked in recently\n-issue#3050: When viewing graph trees, some input variables are not properly checked\n-issue#3052: When editing CDEF's, slow database performance can occur\n-issue#3053: When viewing graph thumbnails, some input variables are not properly checked\n-issue#3055: During install/upgrade, database tests are not performed correctly\n-issue#3059: When using nth_percentile, correct value is not always returned if using MAX consolidation\n-issue#3060: When upgrading from older MySQL databases, format is not changed from compact to dynamic\n-issue#3061: When running automation, allow SNMP to be used as a ping method\n-issue#3068: When administrating users, some input variables are not properly checked\n-issue#3070: Improve database logging when a crashed table is encountered\n-issue#3073: Automation network range does not always produce the correct start/end values\n-issue#3078: When viewing graph debug from remote data collector, File Not Found warnings can appear incorrectly\n-issue#3079: Allow domain names to be stripped from a device's long description\n-issue#3080: Remote Agent throws warnings that graph_nolegend has not been sanitized\n-issue#3085: When editing a poller, ensure each listening IP is unique\n-issue#3081: External Links are not showing a glyph when they appear on the Console menu\n-issue#3089: When viewing graphs in realtime, undefined variable can be logged for 95th Percentile graphs\n-issue#3099: Graph template 'Linux - Memory Usage' has the wrong unit on its vertical_label\n-issue#3101: Polling times can be slightly inconsistent due\n-issue#3104: When viewing graphs, a byref error can be seen in the error logs\n-issue#3105: When viewing hosts, some input variables are not properly checked\n-issue#3111: When adding devices via command line, bad SNMP versions are not reported\n-issue#3112: When zooming on Graphs, too many requests are being made causing slowness\n-issue#3114: Support for USB devices that change name due to their hosts restarting\n-issue#3118: When converting tables, the dynamic row format should be selected\n-issue#3119: Main Data Collector should perform a Full Sync whenever it is installed/upgraded\n-issue#3120: Correct issues causing incompatibility with PHP 7.4\n-issue#3121: When converting tables during install, show what will be changed\n-issue#3123: Named colors table is not properly imported/upgraded\n-issue#3124: When a second data collector is added, boost is not enabled automatically\n-issue#3128: i18n handler checks for existence of wrong mo file\n-issue#3129: Logout repeated occurs even when already logged out\n-issue#3132: Installer fails to continue if automation range is array of networks\n-issue#3098: Support percent sign(%) in graph gprint item like legend area.\n-feature#3077: Allow disabling remote poller resource cache replication to support upgrade testing\n\n1.2.7\n-security#2964: CVE-2019-16723 Security issue allows to view all graphs\n-issue#1181: When opening the Scheduler, it may appear off screen when opened near the bottom of a window\n-issue#2894: When using Remote Data Collectors, database information and recommendations may show Incorrect values\n-issue#2895: When using data sources from different RRDs, Percentile calculation may be incorrect\n-issue#2899: When displaying a form, variable substitution may not always work as expected\n-issue#2922: When running a data query, the result may come back as undefined\n-issue#2925: When using consolidation functions, retrieving the first step can cause errors\n-issue#2926: When editing a graph, variable validation errors may prevent changes from being saved\n-issue#2929: Boost performance may become poor even in single server mode\n-issue#2930: RRDtool can generate errors to standard output which can corrupt images\n-issue#2932: When RRDTool generates an error creating an image, it is not always reportedly properly\n-issue#2936: Installer will loop when number of tables exceeds PHP's max_input_vars limit\n-issue#2938: Under CentOS packages, upgrade_database.php script uses incorrect location for DB upgrade scripts\n-issue#2940: Images are not always properly sized until the page size changes\n-issue#2949: Order icons may not be properly aligned\n-issue#2951: Allow legends to be modified for Aggregate Graphs\n-issue#2958: Drop down autocomplete lists do not always open as expected\n-issue#2961: When syncing device templates, undefined function may be raised\n-issue#2963: When running ss_cpoller script, avgTime incorrect returns maxTime\n-issue#2966: Realtime popup windows do not always honor settings\n-issue#2967: When using Spikekill, gap and range fill are not operating as expected\n-issue#2970: When a user edits their profile, buttons may appear as unusable whilst still being enabled\n-issue#2973: User menu does not always display properly on mobile devices\n-issue#2974: Script Server can raise unexpected warnings when 'arg_num_indexes' set but not found in data source\n-issue#2975: Datasource Debug does not properly handle European numbers in certain circumstances\n-issue#2976: Boost messages should be stored in their own log file\n-issue#2977: Data updates with past timestamps can cause boost errors\n-issue#2978: Moving hosts between data collectors is slow\n-issue#2979: Multi Output Fields are not parsed correctly\n-issue#2984: When checking SQL fields, value was not always primed\n-issue#2986: Selecting 'Devices' menu pick closes 'Management' menu\n-feature#2943: Allow all Data Queries of a device to be re-indexed at once\n-feature#2952: If device is down or threshold breached, highlight in tree view\n-feature#2985: Update phpseclib to 2.0.23\n\n1.2.6\n-issue#2794: Graph template not saved on graph edit\n-issue#2825: \"innodb_doublewrite = off\" possibly dangerous recommendation\n-issue#2829: PHP recommendations always see memory limit as unlimited\n-issue#2830: Disabled Top/Bottom external links should not be displayed\n-issue#2832: Install/Upgrade log does not show anything\n-issue#2833: Undefined index can occur when data source does not have an snmp_index\n-issue#2834: Boost performance drops on very large systems\n-issue#2835: When creating graphs and inneficient query is causing long creation times\n-issue#2837: Sunrise theme does not render checkboxes 100% correctly\n-issue#2838: jQueryMultiselect does not match upstream due to forking\n-issue#2839: Non regular expression search filters don't support international characters\n-issue#2841: Total count is wrong after searching for External Link pages\n-issue#2843: DSStats reruns Daily Aggregation every minute\n-issue#2844: Autocomplete settings for passwords are not properly defined\n-issue#2845: Data Template can't be edited when it is in use\n-issue#2846: Allow tooltips for section headers with 'question' icon\n-issue#2847: Permanently convert an Aggregate to a regular graph\n-issue#2848: Aggregate graphs get clipped due to incorrect date range\n-issue#2856: Aggregate issues with very long RRDtool command lines\n-issue#2857: When trying to find the best index to use, a 'must implement Countable' warning appears\n-issue#2860: When testing remote poller connections during install, undefined variable warning can occur\n-issue#2862: Automation does not calculate network information correctly for single hosts\n-issue#2866: Add poller ID to subject for admin notifications\n-issue#2869: When creating aggregates from Graphs, JavaScript issues can occur\n-issue#2872: Add support for MySQL 8 and use of grouping as name for a column\n-issue#2875: Undefined variable when removing spikes in some cases\n-issue#2877: When attempting to send report, undefined function 'get_tinespan' messages appear\n-issue#2878: Function get_magic_quotes_gpc() is now deprecated in PHP 7.4\n-issue#2879: Switching from authPriv to authNoPriv produces error when saving\n-issue#2884: Replication continues to occur when poller has been disabled\n-issue#2891: Script server script ss_fping.php generates error when not called by script server\n-issue#2901: Poller overrun warning message is badly worded\n-issue#2902: Mailer incorrectly reports it is sending to noone\n-issue#2903: PHP recommendations can generate a warning causing JSON issues\n-issue#2905: Sorting plugins by version can lead to unexpected ordering\n-issue#2907: SSL column for multiple pollers can be incorrectly set causing SQL errors\n-issue#2908: When URL_PATH is blank, it should assume that it is '/'\n-issue#2909: Correct usage of affect vs effect in strings\n-issue#2910: Can not show user menu when in portrait mode on mobile devices\n-issue#2911: Graph variables are not always encoded to JSON properly resulting in warnings\n-issue#2912: Navigation cache can sometimes be corrupted resulting in a non-array value\n-issue#2913: When adding new graphs, the type of graph is not remembered\n-issue#2917: Action icons next to graphs can sometimes become unselectable due to zoom\n-issue#2919: When refreshing menu, selected items are sometimes lost and submenu items can become hidden\n\n1.2.5\n-issue#1978: Popup Menus can appear off screen when using Graph Thumbnails\n-issue#2282: Installation wizard does not detect RRDtool version correctly\n-issue#2524: When editing a tree, Drag and Drop of Devices does not always work as expected\n-issue#2573: Associated Graph Template for Data Query can sometime disappear\n-issue#2656: GPRINT text_format does not replace Data Query and Host Fields\n-issue#2661: Automation does not always calculate network range/subnet correctly\n-issue#2663: Some legacy Data Queries can not determine their index order causing broken graphs\n-issue#2674: Large strings can sometimes cause language translation can fail\n-issue#2719: Automation may sometimes create empty graphs\n-issue#2721: When replacing '|input_xxxx|' strings, undefined index can occur\n-issue#2722: Calls to _db_replace() are not consistent resulting in warnings\n-issue#2723: When replicating to remote pollers, Undefined Variable errors may be seen\n-issue#2724: When graphing HRULE items, 'Only Variables should be passed by reference' error may be seen\n-issue#2725: When viewing logs in utilities, filenames should be limited the same as clog\n-issue#2726: During Automation logging, include the Rule ID that triggers the creation of an item\n-issue#2732: When using basic authentication, automatically strip any @domain information\n-issue#2734: Allow non-english labels to be used on Graph Templates\n-issue#2727: When using Polling Hosts Template, warnings can be issued when CMD.PHP is the poller\n-issue#2733: When processing SNMP data, space delimited hex strings do not always convert into MAC addresses\n-issue#2735: Mouse cursor should show as default pointer if column is not sortable\n-issue#2736: When using MySQL 8 or above, 'function' is considered a reserved word unless quoted\n-issue#2741: Various errors can occur due to undefined or incorrect variable names\n-issue#2742: Various errors can occur due to undefined or incorrect variable names\n-issue#2743: Attempts to close a tooltip when no tooltip has been set may cause errors\n-issue#2744: When changing password, undefined index error can occur if user is not logged in\n-issue#2748: If PHP location setting is invalid during install/upgrade, this should be notified on modules page\n-issue#2750: When performing multiple sort, highlighting of content occurs\n-issue#2751: When editing a Tree, display filter may not allow 'All' option to work\n-issue#2752: When running verbose query on device, you are unable to copy text from items\n-issue#2753: Unable to copy entire verbose query using clipboard command\n-issue#2757: Page Navigation can be subject to XSS injection\n-issue#2758: Various sensitive directories are browsable if web server directory browsing is enabled\n-issue#2760: Unable to add items into a report\n-issue#2762: Creating an aggregate graph can sometimes fail due to unknown RRD tools error\n-issue#2766: When modifying Aggregate Templates, changes are not always cascaded to Graph\n-issue#2768: Aggregate Graphs may sometimes show the wrong row count\n-issue#2770: ItemType is not updated when saving Report Items\n-issue#2772: Add tooltip support to html_header() and html_header_checkbox()\n-issue#2775: Remote pollers may sometimes fail to replicate data back to main system\n-issue#2777: Attempting to edit a non-existent report generates an error\n-issue#2778: When rendering graphs, resizing can sometimes occur repeatedly\n-issue#2779: On new installations, automation rules for Interface Graphs are broken\n-issue#2780: Upgrade database script not actually upgrading Cacti\n-issue#2782: When replicating the syslog plugin, the configuration file is ignored causing errors\n-issue#2783: When limiting the number of displayed characters, international characters may sometimes display incorrectly\n-issue#2784: When removing a device with graphs but no data sources , errors are generated\n-issue#2785: When editing a graph rule, warnings incorrectly appear about unsaved changes\n-issue#2792: When a checkbox 'friendly name' has a comma, checkbox functionality stops working\n-issue#2797: When upgrading from before 1.x, SuperLinks view permissions may not be correct\n-issue#2799: Under heavy use of Real Time Graphs, SQL errors may start appearing\n-issue#2800: When editing a tree, using a comma in the search field stops search from working\n-issue#2802: If a Device lacks ifName, an alternative field is not always found even if available\n-issue#2807: When editing a Data Template that has dependant graphs, some attributes should not be modifiable\n-issue#2808: When navigating a tree, the layout may unexpectedly move\n-issue#2814: When viewing the utilities page, HTML tags may be seen rather than rendered\n-issue#2816: When viewing logs, paging does not always working correctly\n-issue#2818: Automation can sometimes incorrectly add duplicate devices with the same sysname\n-issue#2820: When path is blank, is_resource_writable() will generate 'Uninitialized string offset: -1'\n-issue#2821: When the desired locale can not be located, a number format issue may occur\n-feature#2728: Update phpseclib to 2.0.17\n-feature#2809: Update c3.js & d3.js\n-feature#2730: Update jstree.js to 3.3.8\n-feature#2754: Allow Devices, Graphs and Data Sources to be searched by ID\n-feature#2765: When editing a tree, allow cascading selection of available graphics\n-feature#2805: Merged plugins are not always upgraded correctly\n-feature#2823: Enhance the splice_rrd.php to be able to merge RRDfiles of differing step\n\n1.2.4\n-issue#2523: Send A Test Email stops working under PHP 7.3\n-issue#2589: Missing RRD file can cause DSSTATS to throw errors\n-issue#2590: When installing, chosen language is sometimes lost\n-issue#2591: Menu selection does not always match selected page/section\n-issue#2592: When viewing an aggregate graph, 'Display graphs from this aggregate' option does always not work\n-issue#2593: Unable to migrate aggregate graphs to matching aggregate template\n-issue#2598: Creating an aggregate graph without associated template causes RRDtool error\n-issue#2599: Creating/Updating an Aggregate Graph to use LINE/STACK's generates invalid SQL statements\n-issue#2604: When adding a dataquery, SQL errors can be generated\n-issue#2605: When installing, checking database tables can cause errors\n-issue#2608: db_update_table() function should not require an engine type or comment\n-issue#2609: When updating from earlier than 1.2, timezone column might not exist\n-issue#2610: Data Sources troubleshooter generates warning that each() function is deprecated\n-issue#2612: When RRDtool fails to initialize, DSStats generates lots of warnings\n-issue#2618: ifAdminStatus in snmp_queries/interfaces.xml\n-issue#2621: File paths that accept blanks are not allowing blanks\n-issue#2622: Various undefined variables generate errors within database.php\n-issue#2623: When using form_text_area(), invalid HTML can be generated\n-issue#2627: Some filenames can be lost in log file selection list\n-issue#2629: When upgrading, ldap library is not loaded properly due to incorrect paths\n-issue#2632: Automated Networks are not being properly replicated to additional pollers\n-issue#2635: When running automation scans, database connection should be forced to central database\n-issue#2638: Support disabling PHP SNMP extension\n-issue#2645: Some URLs are incorrectly calculated\n-issue#2649: Automation not creating graphs when there are custom items\n-issue#2650: Several undefined variables are generating warnings\n-issue#2662: HRULE objects broken in some cases\n-issue#2668: Trailing parentheses are removed from the SNMP system description\n-issue#2672: Cacti Install on Windows Fails\n-issue#2676: Skin paper plane not working on iPhone XR\n-issue#2678: Call to undefined function _() in data_queries.php\n-issue#2679: Users with passwords that do not meet complexity requirements are not redirected to the Change Password page\n-issue#2680: Remove deprecated $php_errormsg usage\n-issue#2689: Increase boost maximum memory limits\n-issue#2693: Graph links do not contain URL path causing links to fail\n-issue#2698: Avoid duplicated icon in the main.js of all themes\n-issue#2699: Login option \"Show the page that user pointed their browser to\" does not work properly\n-issue#2702: sqltable_to_php.php does not always generate valid table data arrays\n-issue#2707: Some pages that have permission errors dont raise proper messages\n-issue#2712: PHP memory should be unlimited in scripts that need more memory than the default\n-issue#2713: SNMP System Description with UTF8 strings properly are not properly parsed\n-issue#2718: When links are converted to ajax calls, mailto links should not be included\n-issue#2720: When calculating percentiles, the value is incorrect as the steps are not placed in correct order\n-issue#2822: When stderr log file is not populated, clog generates 'empty needle' error\n-feature#2538: Allow users to change default method of removing data sources when deleting graphs\n-feature#2539: Allow users to set the default graph lock status\n-feature#2540: Allow users to enable/disable graph tree history\n-feature#2646: Allow application of automation rules on CLI\n-feature#2654: New hook to notify plugins of user profile changes ('auth_profile_update_data')\n-feature#2664: Add option to purge spikekill backups\n-feature#2701: Provide option to continue graphing objects that loose their index\n-feature#2704: Device and template cache do not refresh properly\n\n1.2.3\n-issue#1063: Tree View does not display the last item correctly under 'Modern' theme\n-issue#2282: Installation Wizard does not Detect RRDtool Version on Windows\n-issue#2430: \"New Device\" menu item showing as selected incorrect when \"Devices\" clicked\n-issue#2435: Tree View becomes narrower and narrower when expanding/collapsing nodes with long names\n-issue#2449: Index incorrectly changed to 1 if the index is alphanumeric when OID/REGEXP: or OIDVALUE/REGEXP:\n-issue#2452: Missing 'getSNMPQueries()' function when calling add_data_query.php\n-issue#2453: When running add_graphs.php, cannot retrieve list of valid snmp values\n-issue#2460: sqltable_to_php.php does not export 'default' value of columns correctly\n-issue#2456: When attempting to display actions that can be taken, having no actions caused error\n-issue#2457: When creating a graph, undefined function prevents confirmation from appearing\n-issue#2459: ss_host_disk.php attempts to return an empty array instead of a string\n-issue#2463: Partial Fix: Display zombie data sources without graphs\n-issue#2464: When viewing a User's effective permissions, disabled devices should show denied\n-issue#2465: Too many groups hide effective permission column when viewing User's effective permissions\n-issue#2466: Manual data source creation is broken\n-issue#2469: When using Matching Objects filter within Automation Graph Rules, unexpected redirect occurs\n-issue#2471: When Creating a new Graph Template, clear the Graph Template permissions cache\n-issue#2472: Bad navigation items cause Array to string conversion errors\n-issue#2474: REGEXP_SNMP_TRIM does not handle Gauge fields properly\n-issue#2475: When resetting filters, multiple sort session variables do not always reset properly\n-issue#2476: When using CMD.PHP for polling, device polling time is not updated\n-issue#2477: When saving a Data Input Method, Output Field name changes to incorrect value\n-issue#2478: When saving a LINEX type Graph Item, the Line Width value is too restrictive\n-issue#2479: RPN function select list should be sorted when editing CDEF and VDEF's\n-issue#2480: RRDtool versions in Cacti not granular enough\n-issue#2482: When upgrading past 1.1.34, upgrade attempts to drop a non-existing primary key\n-issue#2491: Data Source Info suggests commands RRDTool can't honor\n-issue#2492: When data templates are filtered by profile, data source list does not get same filter applied\n-issue#2493: Data Source Info is not separated properly\n-issue#2494: User Login History is not fully enabled for translations\n-issue#2497: When linking to Graphs, unless both start and end are specified, only defaults are used\n-issue#2499: Data Source reapply names does not update name from data query or template.\n-issue#2500: Allow Data Source repairs from the Data Source Debug and Data Source Info pages\n-issue#2502: Unable to have a min or max value for RRDfile at zero '0'\n-issue#2503: The Cacti Statistics Device Template is not include in release\n-issue#2509: When checking for correct Unicode, minimum MySQL version is incorrect\n-issue#2513: When a plugin INFO file is malformed or missing elements, plugin_load_info_file() should fill missing elements with defaults\n-issue#2519: When editing a data query, graph template picker shows poor performance\n-issue#2518: Unexpected errors when filtering Data Sources with invalid 'rows' value\n-issue#2522: When upgrading from pre-1.0.0, colors were not upgraded properly\n-issue#2525: Tree branches that includes sites which have valid devices do not appear on Graph Tree\n-issue#2527: When importing a package, if Cacti version is below the version which that exported, a clear message should be shown\n-issue#2531: When updating color template items, the table name used is incorrect\n-issue#2532: Ensure Graph ListView table is displayed in line with Management -> Graphs\n-issue#2535: Ensure Graph ListView uses same UI logic as Graph Management -> Graphs\n-issue#2537: Incorrect title showing when changes are made to Tree\n-issue#2543: Poor performance showing a device's graphs on a tree\n-issue#2547: RRD values are not being properly trimmed\n-issue#2551: When checking MySQL configuration values, consider ON/OFF to be equal to 1/0\n-issue#2553: When upgrading from 1.0.0 or below, renaming automation columns can cause issues\n-issue#2555: Missing configuration defaults prevent installations/upgrades without showing reason\n-issue#2563: When sorting Data Sources, missing index causes unnecessary delays\n-issue#2564: Filtering for Orphan Data Sources is unreliable\n-issue#2565: Pages with 500+ selectable items in a single able can suffer from poor performance\n-issue#2568: When querying for diagnostic data, devices on remote pollers should proxy the request\n-issue#2571: External Links do not properly validate user permissions\n-issue#2575: Poller errors occur if a file exists that the website cannot read\n-issue#2576: Spikekill API does not work when called from plugins\n-issue#2578: When importing packages, missing/new resources are not created\n-issue#2581: When viewing poller cache, Device SNMP community is not properly escaped\n-issue#2583: When JSON module is not installed, Installer does not correctly show missing message\n-issue#2584: When user/group permissions are reset, this is not reflected immediately to the end user\n-feature#2505: Improve performance of Data Source Statistics\n-feature#2515: Allow more than one SNMP port to be specified when adding devices via CLI\n-feature: Update phpseclib to version 2.0.15\n-feature: Adjust the max table rows based upon value of 'max_input_vars'\n\n1.2.2\n-issue#599: Aggregate graph templates assume AVG consolidation function\n-issue#2312: Retrieving Device Information appears to fail on Safari\n-issue#2317: Unabe to add new records to 'poller_time' table\n-issue#2327: Memory exhausted whilst running poller replication\n-issue#2334: Some browsers report JavaScript errors when switching to console\n-issue#2337: When running an upgrade, the path of the log file is reset\n-issue#2339: Certain characters in recipient address can cause email to fail\n-issue#2343: Export hooks no longer work due to missing default keyword\n-issue#2346: When listing plugin permissions, \"Legacy 1.x Plugins\" can appear in the wrong cell\n-issue#2347: Allow sort output to inject returned data into a specific object\n-issue#2350: Unable to Select Data Source for HRULES and COMMENTS that include nth Percentile and Bandwidth\n-issue#2352: SNMP description field can sometimes contain mangled data\n-issue#2354: When reindexing in Automation, titles are not updated for Graph and Data Source\n-issue#2355: Data Sources are sometimes duplicated when Custom Data is specified\n-issue#2357: When indexes are incorrect, poller should log more information\n-issue#2359: When upgrading, \"Install/Upgrade\" privilege may have been previously lost\n-issue#2360: When retrieving database / table / column information, schema name is not always applied\n-issue#2362: No way to default an interface speed when ifSpeed and ifHighSpeed come back as zero\n-issue#2365: When editing Aggregate Graphs, orphaned items were not always removed\n-issue#2372: Data Query reindexing leads gaps in Graphs\n-issue#2376: Manually adding a device discovered by Automation causes errors to be logged\n-issue#2380: Devices may experience constant reindexing\n-issue#2384: When authentication method is set to None, change to Builtin as None has been removed\n-issue#2393: When reindexing a device, Graph Automation creates duplicate graphs every time\n-issue#2416: SELinux wants APPEND not WRITE permission for Fedora/EPEL (RHEL, Centos)\n-issue#2419: Host state time was not correctly calculated\n-issue#2426: Reinstate missing plugin hooks for 'custom_logout_message' and 'custom_denied'\n-issue#2431: Default value for 'Mail Method' (settings_how) is incorrect resulting in errors\n-issue#2432: Undefined variable warnings when updating RRD data\n-issue#2451: Drag and drop does not always function correctly\n-feature: Update JavaScript library c3.js to version 0.6.12\n-feature: Update phpseclib to version 2.0.14\n-feature: Update PHPMailer to version 6.0.7\n-feature: Update JavaScript library d3.js to version 5.9.1\n\n1.2.1\n-issue#2259: Unable to View Aggregate Graphs\n-issue#2267: Remove unnecessary includes in aggregate template code\n-issue#2270: Realtime Graphs consuming too much memory\n-issue#2272: Site Tree Branches not showing Graphs\n-issue#2273: Error when saving changes to Data Collectors\n-issue#2279: SQL Errors in add_graphs.php\n-issue#2280: SQL Errors in snmpagent cache table inserts\n-issue#2281: Database audit cli giving incorrect results\n-issue#2285: Allow HRULEs for bandwith and ptile\n-issue#2292: Allow Realtime to use 1 second data collection\n-issue#2298: Ambiguous Toggle Switches in Sunrise Theme\n-issue#2303: Problem with \"Notify Primary Admin of Issues\" function\n-issue#2304: Installation progress stays at 0%\n-issue#2305: BOOST PROGERR: ERRNO:'8'\n-issue#2311: Unable to update PHP location during installation due to incorrect CLI environment\n-issue#2319: Primary admin account not always given access to a plugin when that plugin is enabled\n-issue#2321: Date separator not being used properly for graphs\n-issue#2322: Modifying plugin realm registration files and description not supported\n-issue: Installer does not identify when shell_exec()/exec() are disabled\n-issue: Removing a Device or Graph Template can not be seen till next login\n-issue: Visual issues with custom data when using paper-plane theme\n-issue: Undefined function errors attempting to sync device templates\n-issue: Plugin dependency handling inconsistant\n-issue: Editing a report shows incorrect graphs from dropdown\n\n1.2.0\n-feature: Add a Timeout setting for Remote Agent calls\n-feature: Add Graphs and Data Sources hyperlinks on Device page\n-feature: Add One Minute Sampling to the default Data Source Profiles\n-feature: Add support for DDERIVE and DCOUNTER to Cacti\n-feature: Add Timezone support for Remote Data Collectors\n-feature: Allow Adding Aggregate Graphs to a Report\n-feature: Allow ASCII filepath paths to not be found on settings save\n-feature: Allow drill down from Graphs to Data Queries or Templates\n-feature: Allow Import/Export to be hookable\n-feature: Allow snmpagent to be disabled for very large installs\n-feature: Allow Top tabs to be Glyphs or Text or both\n-feature: Big Spanish translation update plus massive QA fixes\n-feature: Change password page provides visible confirmation of password rules\n-feature: Do not allow second data source to be added to an SNMP Get data template\n-feature: Don't allow removal of Data Sources from Data Template once its in use\n-feature: Inform the primary Cacti administrator of problems by Email\n-feature: Make all user settings dynamic and allow resetting to default.\n-feature: Make Graph and Data Source suggested naming more efficient\n-feature: Make it easy to find Data Query based graphs that have lost indexes\n-feature: Make Top Tabs use Ajax Callback\n-feature: Make tree editing responive\n-feature: New Install/Upgrade user permission to limit access to being able to upgrade\n-feature: Provide option to debug width errors where output exceeds column width\n-feature: Removed the Authentication Method of 'None'\n-feature: Tree automation is now defaulted to on for new install\n-feature: Update JavaScript library c3.js to version 0.6.8\n-feature: Update JavaScript library Chart.js to 2.7.3\n-feature: Update JavaScript library d3.js to version 5.7.0\n-feature: Update JavaScript library jquery.js to 3.3.1\n-feature: Update JavaScript library jquery-migrate.js to 3.0.1\n-feature: Update JavaScript library jquery.tablesorter.js to version 2.30.7\n-feature: Update JavaScript library jstree.js to 3.3.7\n-feature: Update JavaScript library screenfull.js to 3.3.3\n-feature: Update phpmailer to version 6.0.6\n-feature: Update phpseclib to version 2.0.13\n-feature#289: Allow external nologin access for Realtime Graphs\n-feature#553: When display a host, include Aggregated Graphs as well as standard graphs\n-feature#614: Allow users to duplicate Data Input Methods\n-feature#973: When creating a new user authenticated via LDAP, attempt to retrieve users email and full name\n-feature#122: Support a Site Branch Type\n-feature#1060: Design Enhancement for Large scale Cacti Implementations\n-feature#1142: Add Site dropdown to the Graphs and Data Source pages\n-feature#1184: Improve Data Input Methods editability and message handling\n-feature#1200: Aggregate Graphs can now include COMMENT\n-feature#1282: Email notification for Automation Network discovery process\n-feature#1347: Update automation logging to work better\n-feature#1395: Ensure messages have each new line keep the same prefix in cacti_log()\n-feature#1399: Allow 'requires' to include version against a plugin\n-feature#1400: User settings are now dynamic and can be reset (removed) to return to global settings\n-feature#1422: Automatically select the next unused data input field when clicking add on data input method\n-feature#1505: When displaying a graph, provide breadcrumb link to edit device\n-feature#1527: Update Fontawesome from 4.7 to 5.0.10\n-feature#1580: Support Drag & Drop for Builtin Report Items\n-feature#1581: Allow Mass Adding of Graphs to Reports\n-feature#1584: Allow theme selection when installing\n-feature#1588: Check that PHP can run a test file\n-feature#1593: Allow External links to auto refresh\n-feature#1597: Ensure synchronised files have same attributes as originals\n-feature#1610: On Unix, redirect error messages to log files when running external scripts\n-feature#1628: Allow the User to define an initial Automation Network for discovery when installing\n-feature#1670: Improve Graph Management to show type of source for a graph\n-feature#1671: When duplicating a Graph Template, properly duplicate Data Query Graph Template Mappings\n-feature#1677: Default Tree nodes sorting to be inherited\n-feature#1691: On Graph context menu, add a 'Copy graph' option to copy graph image\n-feature#1692: Separate option for logging Input Validation issues\n-feature#1703: On Graph context menu, text is now multi-lingual\n-feature#1708: Allow the User to override global Automation email recipients at the Automation Network level\n-feature#1709: Suppress warning from RRDTool when attempting to make updates in the past\n-feature#1711: Add support for SSL connections to MySQL\n-feature#1731: Prevent loss of changes by warning user about unsaved items\n-feature#1734: When displaying a graph, provide more information when error image is displayed (see also #1428)\n-feature#1763: Enable automatic refresh for Time Graph View\n-feature#1806: Control low level debug routines via config.php (Develoepr Use)\n-feature#1819: Provide CLI program to enable graphs to be removed by scripts\n-feature#1969: Graph previews can now be linked using a host's external id\n-feature#2006: Introduce new Data Source Profile to handle decade long graphs\n-feature#2173: Introduce Device and Graph Template Caching to Speed UI\n-feature#2228: Add Device ID to Device search field\n-issue: Fix issue with display_custom_error_message() causing problem with system error message handling\n-issue: Graph List View was not fully responsive\n-issue: Move Graph removal function to Graph API\n-issue: On the Data Sources page, if there is no filtered Device and a Data Source is edited, device association is lost\n-issue: Typo in Dutch translations when an error occurred while downgrading\n-issue: Unable to display user profile tabs\n-issue: Verify all Fields not working due to Cacti 1.x upgrade error\n-issue#186: Cacti does not support jQueryUI 1.12.x\n-issue#187: Remove the use of jQuery Migrate plugin\n-issue#948: Do not create a new datasource when adding a new Graph for the same device/field\n-issue#454: Cacti Re-Index does not resolve index changes properly during re-index\n-issue#983: Import Template Preview is misleading\n-issue#1097: Template user should be disable to prevent logging in directly. And newly created user should always be enabled to allow logging in when copying template user.\n-issue#1174: When display a tree, disable drag and drop unless in edit mode\n-issue#1298: Display fatal error to prevent issues caused when system log is not writable\n-issue#1350: When switching an Automation Tree Rule's leaf type, remove invalid Automation Rule Items\n-issue#1383: CSRF Timeout does not obey session timeout\n-issue#1408: Update SQL / Backtrace to use new clean_up_lines() function\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1420: Fix issues found by Debian package builds\n-issue#1421: Fix issue when SQL had all bad modes, missing variable warning was generated\n-issue#1426: Fix issue where remote poller was not using unique filenames when attempting to verify files\n-issue#1437: Plugin install hover message sometimes shows line breaks rather than formatted text\n-issue#1454: When using oid_regexp_parse, filter indexes to those that match\n-issue#1473: Recovery Date overwritten by subsequent checks\n-issue#1494: Unable to Deep Link/Bookmark Trees\n-issue#1503: Undefined function clearstatscache in DSSTATS\n-issue#1507: When saving graph settings from the graph page, the graph template id should not be included\n-issue#1510: New Graphs Undefined Variable $graph_template_name\n-issue#1521: Force boost to be enabled when there are Remote Data Collectors\n-issue#1528: Saving a device can result in WARNINGS related to string vs array handling\n-issue#1529: Allow Aggregate Graphs to Sum Bandwidth and Percentile COMMENTS\n-issue#1543: Graph Preview appends header=false too many times\n-issue#1553: Poller does not set rrd_step_counter correctly if no steps taken\n-issue#1559: CLI Output Issues due to over escaping\n-issue#1560: Warning that escapeshellarg() is escaping a null\n-issue#1567: Technical support - add notification if Cacti and Spine version is different\n-issue#1574: User templates are not correctly being applied\n-issue#1589: Installer now checks that the temporary folder is writable\n-issue#1590: User Admin generates SQL error if user is not part of any groups\n-issue#1601: Aggregate Graphs can not include some classes of COMMENT\n-issue#1602: PHP ERROR: Call to undefined function api_data_source_cache_crc_update()\n-issue#1604: Failed to connect to remote collector\n-issue#1606: Boost debug log not functional\n-issue#1607: Boost next run time occurs in the past\n-issue#1608: Possible boost race conditions\n-issue#1609: Remote pollers update 'stats_poller' on main poller\n-issue#1617: Editing a data query results in missing $header variable\n-issue#1621: Realtime Popup can cause automatic logout\n-issue#1626: httpd-error.log have message about Fontconfig\n-issue#1634: Default snmp quick print setting resulting in false poller ASSERTS on some php releases\n-issue#1651: Check temporary folder has write access during import\n-issue#1655: Correct Cacti to handle new MySQL 8.0 reserved word `system`\n-issue#1658: Devices drop down should be filtered by Site\n-issue#1660: Reports based upon Tree don't maintain graph order\n-issue#1665: Must change password not working for local users when main realm is not local\n-issue#1669: Console log header grammar issue\n-issue#1674: Threads and Processes values not migrated to Poller table during upgrade\n-issue#1676: Allow automation discovery to add the same sysname on different hosts\n-issue#1682: Slow Select Statement lib/api_automation.php\n-issue#1689: Technical Support's RRDTool version should show detected RRD version\n-issue#1690: Report a warning if the default collation is not utf8mb4_unicode_ci\n-issue#1700: Mail sent without auth causes errors to appear in logs\n-issue#1710: RRDtool create command causes first update to fail\n-issue#1721: Console Side Bar not correct on first login\n-issue#1723: die() messages should include PHP_EOF for better logging\n-issue#1726: Poor page performance editing a Graphs Graph Items\n-issue#1746: Poller with no hosts does not exit until timeout is reached\n-issue#1761: Graph Management page shows bogus template names\n-issue#1783: Browser Back button still does not working\n-issue#1796: Import: Fixed handling of references to objects not included in file\n-issue#1799: Default User log sort should be date descending\n-issue#1810: Correct SQL errors with authentication set to no authentication\n-issue#1839: Dummy cosmetic bug on down device selection option\n-issue#1841: Data Source Stats table not properly migrated from pre 1.x Cacti plugin\n-issue#1849: SNMPAgent not sending traps\n-issue#1852: Reports Preview/Mails show no graphs\n-issue#1889: Insecure $ENV{ENV} which running setgid\n-issue#1901: Upgrade from 0.8.8h fails on external_links statement\n-issue#1921: Data Query XML field method 'rewrite_index' does not correctly query for value\n-issue#1926: Deselecting items should present warning or disable GO button\n-issue#1948: Device Template should warn about need to re-sync\n-issue#1953: set_default_action() should warn if more than one action provided\n-issue#1973: SpikeKill Menu does not display properly\n-issue#1976: Default admin permissions do not allow everything\n-issue#1982: Certain hooks should occur within api functions rather than UI functions\n-issue#2002: api_plugin_db_table_create should support non-string defaults\n-issue#2012: For kernel 3.2+, \"Linux - Memory - Free\" should grep for \"MemAvailable:\", not \"MemFree:\"\n-issue#2085: CLOG Regex Parser does not verify registered function exists\n-issue#2126: api_device.php generates undefined function poller_push_to_remote_db_connect()\n-issue#2127: Unable to save error when duplicating graph\n-issue#2135: api_tree_lock() and api_tree_unlock() forcing redirection incorrectly\n-issue#2143: export.php Illegal string offset 'method'\n-issue#2144: Device Management \"Status\" column does not sort properly\n-issue#2152: When editing a device, should show disable/enable option\n-issue#2153: Utilities page issues the wrong hook for tabs\n-issue#2163: LDAP functions are not consistent\n-issue#2164: Login page does not remember selected realm\n-issue#2171: datepicker and timepick translation not available\n-issue#2178: Header/Footer included more than once\n-issue#2182: Graph View missing 'html_graph_template_multiselect()' function\n-issue#2184: html_host_filter() does not handle host_id consequently\n-issue#2186: Boost generates invalid SQL during on demand update\n-issue#2188: SNMP timeout errors are being duplicated\n-issue#2191: i18n_themes is not properly primed in global_arrays.php\n-issue#2202: Can't create more than one graph with add_graphs.php from one template\n-issue#2207: Removing Graph Template does not Remove Data Query Associations\n-issue#2217: cmd.php not handling quoted snmp values properly\n-issue#2240: SNMP system Data Input Methods should not be modified on import\n-issue#2241: Spike removal not functional due to Debian packaging\n-security#1072: Prevent exploitation of Data Input Methods to escalate privileges (CVE-2009-4112)\n-security#1882: Bypass output validation in select cases\n-security#2212: Stored XSS in \"Website Hostname\" field\n-security#2213: Stored XSS in \"Website Hostname\" field - Devices\n-security#2214: Stored XSS in \"Vertical Label\" field - Graph\n-security#2215: Stored XSS in \"Name\" field - Color\n\n1.1.38\n-issue#1501: cmd.php poller not stripping alpha from snmp get values\n-issue#1515: Special characters not rendered properly in settings\n-issue#1530: Inconsistent behaviour handling blank Field Name/Value when editing data query suggested values\n-issue#1537: Numeric validation not ignoring blank elements\n\n1.1.37\n-issue#274: Allow Realtime Graph Popup Mode\n-issue#1405: When Data Query columns are wide, they cause rendering issues\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1419: Filtering log results in errors in the log\n-issue#1420: PHP NOTICE editing cdef and vdef items\n-issue#1421: CLI upgrade_database.php PHP Warning on execution\n-issue#1426: Remote poller erroring attempting to verify files\n-issue#1432: Delete confirmation does not disappear\n-issue#1443: Partial Save warnings under Settings -> Mail/Reporting/DNS\n-issue#1447: CLI audit_database.php not detecting database name, and failed to create audit tables when run fresh\n-issue#1453: CLI add_graph.php not allowing title to be set\n-issue#1456: Increase minimum php version maintaining support for RHEL6\n-issue#1457: Path-Based Cross-Site Scripting (XSS) issues\n-issue#1458: Error in logs when creating new graphs\n-issue#1459: Automation filter not applied correctly\n-issue#1461: Setting output_format on input type causes no values to be returned\n-issue#1464: Poller stuck in infinitely loop causing excess logging\n-issue#1466: No scrollbars in mobile browsers\n-issue#1468: Increase max length of host.snmp_sysObjectID column\n-issue#1471: Undefined function found in global_languages.php\n-issue#1472: Change Device Options - Style needs updating\n-issue#1474: Check possibility for creation of temporary tables on install\n-issue#1487: Undefined constant in ldap.php\n-issue#1483: Create New Graphs - Paw Styling Issue\n-issue#1493: Can't create tree branches with '#' sign\n-feature#1489: Add ability to use parts of OID as value via regex\n-feature: Updated Chinese Simplified translations\n-feature: Updated Dutch translations\n-feature: JavaScript library Chart.js updated 2.7.2\n-feature: Allow snmp formatting functions to detect UTF-8 output\n\n1.1.36\n-issue#934: Template names missing in graph management list\n-issue#1211: CDEF and VDEF Item Edit do not use correct procedures\n-issue#1250: Language support does not support localization properly\n-issue#1331: Log Rotation should occur at midnight on system\n-issue#1334: Console->Users->(Edit) Permissions checkmark descriptions missing\n-issue#1336: Debian test suite reports php error\n-issue#1338: Allow automation to be run in debug mode from GUI\n-issue#1339: First graph of second page does not render\n-issue#1340: Unable to open Time Graph View in new tab\n-issue#1348: Toggle context menu of Zoom\n-issue#1351: Errorimage does not render on systems without GD ttf support\n-issue#1353: New installation without config.php silently throws errors\n-issue#1355: Single tree can have the order of the tree changed\n-issue#1357: Data Profile disable fields shown temporarily as editable\n-issue#1359: Settings page generates error for removed plugin tab\n-issue#1362: DSStats Avg/Peak function broken due to change in RRDtool processing\n-issue#1365: Plugin Management enforce folder name\n-issue#1366: Improve error/info message display\n-issue#1380: Potential failure when updating script type\n-issue#1384: When installing/enabling plugins, current user and admin should get permissions\n-issue#1386: form_selectable_cell() ignores width if no style_or_class is passed\n-issue#1389: Poller is including plugins that are not installed\n-issue#1390: Plugin uninstall should prompt user before removal\n-issue#1396: Prevent installation/uninstallation of a plugin if dependency is present\n-issue#1397: Distinguish between plugin tabs and core tabs in settings\n-issue#1371: Allow dynamic setting of from name when emailing\n-issue: Data Query Cache filter layout more consistent\n-issue: Minor plugin permissions format change\n-issue: Implementation of error handling causes errors creating New Graphs\n-issue: Deprecated DDStats setting removed\n-issue: Graph context menu items are now context aware\n-issue: Validate spine path before allowing enabling of spine\n-issue: Errored settings fields now highlighted correctly on error\n-issue: Add the Default Device to the Default Tree at install time\n-issue: Secpass password verification error message unuseful\n-feature: Searching of SNMP Index in View Data Query Cache now works\n-feature: Presets now have default device Template\n-feature: JavaScript library c3.js updated (v0.4.21) / jstree.js (3.3.5)\n-feature: PHPSecLib updated 2.0.10\n-feature: Updated Dutch translations\n\n1.1.35\n-issue#114: *all_max_peak* percentile calculations incorrect\n-issue#430: Pressing Back often fails to work as expected\n-issue#564: Fail to move items in graph template as desired\n-issue#981: Hyperlinks for Data Profile stats\n-issue#993: Realtime not working on remote pollers for certain data query\n-issue#1244: Errors importing templates with deprecated hashes\n-issue#1251: Allow zoom out through mouse mmiddle button\n-issue#1281: Max OIDs setting is for bulkget and not bulkwalk operations\n-issue#1286: Correct CHUNKED_ENCODING error when retrieving graph with some browsers\n-issue#1306: Graphs are not always refreshed properly\n-issue#1309: Provide meaningful authentication errors in graph_json.php and graph_image.php\n-issue#1310: Return button fails on change password page\n-issue#1315: Realtime not working on local data collector\n-issue#1316: CDEF Item Value dialog does not update creating items\n-issue#1319: Front end + remote poller - connection timeout issue\n-issue#1321: Use RRDtool pipelining functions within DSSTATS\n-issue#1323: Enhance form layout for readability\n-issue#1329: Spelling errors in automation_networks.php\n-issue: Validate regular expressions if specified in add_graphs.php\n-issue: Ensure compression levels are consistent when importing package\n\n1.1.34\n-issue#1040: PHP version 7.2 - ERROR PHP WARNING: sizeof()\n-issue#1195: Improved Javascript error message handling\n-issue#1245: Unable to reorder graph name suggested values\n-issue#1256: Error reporting of custom errors not displayed correctly\n-issue#1257: Boost excessively logging updates\n-issue#1258: cacti.sql updated to match expected schema\n-issue#1260: Tab images fail to render due to TrueType support in PHP GD Module\n-issue#1261: Automatic logout timeout does not apply to web basic authenication\n-issue#1263: CLI utility to validate database schema\n-issue#1266: Inconsistent usage graphWrapper CSS causes odd graph zoom behavior\n-issue#1268: Regex filters not working properly\n-issue#1274: Host CPU script checks value existance to avoid error\n-issue#1275: SNMP v3 authPriv fails to work\n-issue#1287: JSON calls return validation error in HTML format\n-issue#1289: Script Server should output parameter array rather than parameters\n-issue#1292: Chrome to aggressively caches Javascript files\n-issue#1293: Correctly identify if command 'snmpbulkwalk' is available\n-issue#1296: CactiErrorHandler does not ignore PHP suppressed errors\n-issue#1300: Automation discovery : New devices added by automation discovery have empty SNMP community field\n-issue#1302: Automatic logout should not be enforced on login page\n-issue#1304: mib_cache.php file contains unsafe transactions for binary logging\n-feature: CLI utilily to generate and verify file hashes for installed Cacti files\n-feature: Logging links back to appropriate areas for troubleshooting\n-feature: Logging lists filenames in reverse order\n\n1.1.33\n-issue#1253: Automatically generated RRDtool DEF names in Cacti 1.1.32 break existing Graph Templates\n\n1.1.32\n-issue#969: Undefined index: color_id / task_item when viewing graphs\n-issue#1166: Fix typo of 'locale' in global_languages.php\n-issue#1222: Graphs with large number of items causes RRDTool to error\n-issue#1230: PHP Fatal error: Call to undefined function get_max_tree_sequence()\n-issue#1238: SNMP functions fail to handle \"Invalid object identifier\" error\n-issue#1239: Browser console error in layout.js\n-issue#1240: Page layout issues caused by library update\n-issue#1246: Make SNMP Error return more info\n-issue: Missing or corrupted theme files can corrupt user settings\n-issue: Theme may not change until next login\n-issue: Tree edit Tree/Device/Graph drag areas incorrect\n-issue: Make callback error handling compatible with jQuery 3.x\n-issue: Ensure the snmp_error is cleared before every call\n-issue: Indicate unknown error when RRDTool returns no error message\n-feature: Update Javascript library: js.storage.js, d3.js, jquery.js, jquery.tablednd.js, jquery.timepicker.js\n\n1.1.31\n-issue#629: Site reload after delete the last letter in the searchbar\n-issue#1022: Discovery network stuck in \"running\" state does not return results\n-issue#1164: Version compare function fails on major/minor only versions\n-issue#1166: Invalid New User default language selection\n-issue#1175: Automatic logout inconsistent redirect\n-issue#1179: Warn during installation if installing moving to older version\n-issue#1183: Automatically detect missing Theme and use alternate\n-issue#1185: Layout with Graphs having large number of data columns\n-issue#1189: Allow ability to sort tree list by name asc/desc\n-issue#1190: Enabling, Disabling, Uninstalling plugin, you should page refresh\n-issue#1191: Tree sequences were not set or checked\n-issue#1197: Add more collection intervals to Data Source Profiles\n-issue#1206: Display issue with internationalization number format\n-issue#1210: CDEF and VDEF Items can not be properly edited\n-issue#1212: Navigation breadcrumbs fail to handle External links correctly\n-issue#1213: PHPMailer trying TLS despite SMTPSecure setting\n-issue#1215: Show version when installation prompts for license\n-issue#1217: Add ability to view/edit Input/Query when editing Data Template\n-issue: Named colors fail to import on install or upgrade\n-issue: Drag and Drop issues on multiple pages could corrupt sequencing\n-feature: Enhance filter to permit more glyphs for table headers\n-feature: Add a page refresh dropdown to the Automation Networks\n-feature: Enhanced SNMP v3 input forms\n-feature: Allow Trees to be rearranged using Drag and Drop\n-feature: Trap GUI callback errors and present error message\n\n1.1.30\n-issue#1155: Non-secure mail setting not functional due to changes in phpmailer\n-issue#1157: Resolve issue with branch permission api\n-issue#1158: Change CLOG to use regex replacement so line details are not mangled\n-issue#1161: Graph View regex's are not preserved during automatic page refresh\n-issue#1162: Error messages are not display when editing a user\n-issue#1166: Default language was not correctly set when editing a user\n-issue: basename function undefined during upgrade to 1.0.x\n-issue: Storage API and translations required for Change password function\n-issue: ALTER IGNORE still throws an error when attempting to drop the primary key\n-issue: Data Source profile form API generates error when system is half upgraded\n-issue: Resolve issue with importing packages\n-feature: Update package versions for Cacti version 1.1.29\n\n1.1.29\n-issue#871: Allow Nth Percentile and Bandwidth Summation to respect 'Base Value' in template\n-issue#965: Duplicate error message and incorrect error code when using LDAP authentication\n-issue#1084: Graph Tree Branch not properly populating when editing report item\n-issue#1104: Datetime formatting in developer debug mode incorrect\n-issue#1106: Template Filters has empty row\n-issue#1109: URL used in redirection when referrer already has parameters in it\n-issue#1110: Add CPU Total to 'SNMP - Get Processor Information'\n-issue#1111: PHP NOTICE when using LDAP authenication\n-issue#1116: Filters not allowing \"None\" or \"All\" when editing report item\n-issue#1119: Reduced amount of data fetched for CPU usage to just the data used\n-issue#1121: Bandwidth summation not using correct locale\n-issue#1122: Fix issue with local login / potential password problems\n-issue#1128: Resolve php warning when raising messages\n-issue#1130: Fix logging level issue where logs of same level as setting where not logged\n-issue#1131: Make upgrade_database.php use same version compare as /install/ system\n-issue#1133: Fix issues with variable name and debug log\n-issue#1141: When viewing graphs from list view, pagination causes list view filter to be cleared\n-issue#1143: ss_host_cpu.php - Division by zero / Invalid Return Value\n-issue#1146: Installation now checks URI path matchs with configuration option URL_PATH\n-issue: Updated Graph pagenation and filter reset\n-issue: Resolve issues with cacti_version_compare() processing\n-issue: Zoom context menu stays open after zoom out actions\n-issue: Paginator object was not always translated\n\n1.1.28\n-issue#958: User Group Tree permissions not calculated fully\n-issue#959: Issue viewing email reports due to email client decoding problems\n-issue#992: RRDfile naming issues that result from random sorting during export\n-issue#1012: Issue where disabled devices will not appear in Tree editor\n-issue#1044: Handle invalid exclusion regex properly when viewing the log\n-issue#1045: Issue with multiple pages and confirmation dialogs\n-issue#1048: Problem importing vdefs from templates\n-issue#1053: Remote Data Collector now works with https and self signed certificates\n-issue#1055: Errors in data source statistics inserts when invalid output is encountered\n-issue#1057: CVE-2017-16641 - Potential vulnerability in RRDtool functions\n-issue#1058: ICMP Ping to and IPv6 address fails to gather data for ping latency\n-issue#1059: Aggregate item filter should use regular expressions to avoid SQL errors due to flawed filter logic\n-issue#1064: When a Device Template is removed, Automation Templates for that Device Template remain\n-issue#1066: CVE-2017-16660 in remote_agent.php logging function\n-issue#1066: CVE-2017-16661 in view log file\n-issue#1071: CVE-2017-16785 in global_session.php Reflection XSS\n-issue#1074: Boost records get stuck in archive\n-issue#1079: Undefined index in lib/snmpagent.php\n-issue#1085: Undefined function html_log_input_error\n-issue#1086: Rerun data queries in automation process has no effect\n-issue#1087: cli/add_device.php --proxy option does not work with non-snmp devices\n-issue#1088: Set timeout for remote data collector context\n-issue: Minor performance increase in boost processing\n-issue: Poller output not empty not processed correctly on Log tab\n-feature: Timeout to the remote agent for realtime graphs\n-feature: Updated Dutch translations\n-feature: Database update adding additional indexes for increased performance\n-feature: Updated PHPMailer to version 5.2.26\n-feature: Updated phpseclib to version 2.0.7\n\n1.1.27\n-issue#1033: Issues inserting into dsstats table due to legacy data\n-issue#1039: Using html_escape still double escapes.  Use strip_tags instead\n-issue#1040: Resolving compatibility issue with PHP7.2\n\n1.1.26\n-issue#841: --input-fields variable not working with add_graphs.php cli\n-issue#986: Resolve minor appearance problem on Modern theme\n-issue#989: Resolve issue with data input method commands loosing spaces on import\n-issue#1000: add_graphs.php not recognizing input fields\n-issue#1003: Reversing resolution to Issue#995 due to adverse impact to polling times\n-issue#1008: Remove developer debug warning about thumbnail validation\n-issue#1009: Resolving minor issue with cmd_realtime.php and a changing hostname\n-issue#1010: CVE-2017-15194 - Path-Based Cross-Site Scripting (XSS)\n-issue#1027: Confirm that the PHP date.timezone setting is properly set during install\n-issue: Fixed database session handling for PHP 7.1\n-issue: Fixed some missing i18n\n-issue: Fixed typo's\n-feature: Updated Dutch translations\n-feature: Schema changes; Examined queries without key usage and added/changed some keys\n-feature: Some small improvements\n\n1.1.25\n-issue#966: Email still using SMTP security even though set to none\n-issue#995: Redirecting exec_background() to dev null breaks some functions\n-issue#998: Allow removal of external data template and prevent their creation\n-issue: Remove spikes uses wrong variance value from WebGUI\n-issue: Changing filters on log page does not reset to first page\n-issue: Allow manual creation of external data sources once again\n-feature: Updated Dutch translations\n\n1.1.24\n-issue#932: Zoom positioning breaks when you scroll the graph page\n-issue#970: Remote Data Collector Cache Synchronization missing plugin sub-directories\n-issue#980: Resolve issue where a new tree branches refreshs before you have a chance to name it\n-issue#982: Data Source Profile size information not showing properly\n-issue: Long sysDescriptions on automation page cause columns to be hidden\n-issue: Resolve visual issues in Classic theme\n-feature: Allow Resynchronization of Poller Resource Cache\n-feature: Update Spanish Translation\n\n1.1.23\n-issue#963: SQL Errors with snmpagent and MariaDB 10.2\n-issue#964: SQL Mode optimization failing in 1.1.22\n\n1.1.22\n-issue#950: Automation - New graph rule looses name on change\n-issue#952: CSV Export not rendering chinese characters correctly (Second attempt)\n-issue#955: Validation error trying to view graph debug syntax\n-issue: MySQL/MariaDB database sql_mode NO_AUTO_VALUE_ON_ZERO corrupts Cacti database\n-issue: When creating a data source, the data source profile does not default to the system default\n-feature: Enhance table filters to support new Cycle plugin\n-feature: Updated Dutch Translations\n\n1.1.21\n-issue#938: Problems upgrading to 1.1.20 with one table alter statement\n-issue#952: CSV Export not rendering chinese characters correctly\n-issue: Minor alignment issue on tables\n\n1.1.20\n-issue#920: Issue with scrollbars after update to 1.1.19 related to #902\n-issue#921: Tree Mode no longer expands to accomodate full tree item names\n-issue#922: When using LDAP domains some setings are not passed correctly to the Cacti LDAP library\n-issue#923: Warninga in cacti.log are displayed incorrectly\n-issue#926: Update Utilities page to provide more information on rebuilding poller cache\n-issue#927: Minor schema change to support XtraDB Cluster\n-issue#929: Overlapping frames on certain themes\n-issue#931: Aggregate graphs missing from list view\n-issue#933: Aggregate graphs page counter off\n-issue#935: Support utf8 printable in data query inserts\n-issue#936: TimeZone query failure undefined function\n-issue: Taking actions on users does not use callbacks\n-issue: Undefined constant in lib/snmp.php on RHEL7\n-issue: Human readable socket errno's not defined\n-issue: Audit of ping methods tcp, udp, and icmp ping. IPv6 will still not work till php 5.5.4\n\n1.1.19\n-issue#810: Scripts in packages don't match distribution\n-issue#919: Unable to upgrade to 1.1.18\n-issue: Update documentation for minimum PHP 5.4\n\n1.1.18\n-issue#902: Correcting some issues with Console and External Links\n-issue#903: Upgrade pace.js to v0.7.8\n-issue#904: Allow user to hide Graphs from disabled Devices\n-issue#906: Create a separate Realm for Realtime Graphs\n-issue#907: XSS issue in spikekill.php\n-issue#910: Boost last run duration generates an error on new install\n-issue#914: Unable to purge Cacti logfile from System Utilities\n-issue#915: Non-numeric data in ss_host_disk.php\n-issue#916: Resolve display of errors when encountering ldap issues\n-issue#918: Minor XSS and create generalized escape function\n-issue: Resolve JavaScript errors on Login page\n-issue: Resolve JavaScript errors on Permission Denied pages\n-issue: Graphs tab would appear in non-classic even if you did not have permissions\n-feature: Updated dutch translations\n\n1.1.17\n-issue#450: List View to Preview shows no results\n-issue#486: Export Device table results to CSV\n-issue#544: Allow Log Rotation to be other than Daily\n-issue#673: Downtime/Recovery time/date is set incorrectly\n-issue#819: Customized timespans for graphs\n-issue#888: Rebuilding Poller Cache when External data sources are present results in false positive warnings in the log\n-issue#891: Database.php unable to connect to MySQL when using port different than 3306\n-issue#893: Warning messages when duplicating CDEF objects\n-issue#897: Due to browser use of special key, deprecate ctrl-shift-x for clearing filter\n-issue#898: Issue with tcp and udp ping due to file description allocation changes\n-issue: Unable use ipv6 ip addresses for snmp ping in the Cacti GUI\n-issue: Update language of the Rebuild Poller Cache menu pick\n-issue: Broken design for input controls with Sunrise theme\n-issue: Timespan switching not switching to Custom in Preview Mode\n-issue: Log rotation would not occur under certain conditions.  Provide more control over log functions\n-issue: Purge log file always purged the cacti.log, not the selected log\n-issue: Unable to view graphs for errored data sources from Cacti log\n\n1.1.16\n-issue#865: Escape Data Query arguments to prevent issues with special characters\n-issue#872: Can't add device items to graphs generated with no device and no template\n-issue#875: When modifying Realm permissions, realms that are listed multiple times don't stay in sync\n-issue#877: Improving resolution to issue#847 and one additional vulnerability\n-issue#878: Ambiguous language in purge log function\n-issue#879: SQL Error when adding a report item to a report\n-issue#880: Device drop down is limited to 20 devices and lacks a scroll bar\n-issue#885: Graph generated with no device and no graph template forgets device definitions\n-issue#886: Unable to export templates other than Device templates\n-issue: Address additional corner cases around get_order_string usage\n-issue: Data Queries sharing a Data Source can result in poller output table not empty errors\n-issue: Fix Sunrise theme to properly theme multiselect widgets\n-issue: Increase height of multiselects so that more options are visible\n-issue: When a graph is locked, anchor tags are still functional\n-issue: Autocomplete does not populate none-value when the selected value is not set\n\n1.1.15\n-issue: PHP Fatal Exception on upgrade from 1.1.11 or earlier\n-feature: Added test to detect install upgrade code problems\n\n1.1.14\n-issue#849: Unable to select host in Graph Item pick\n-issue#850: Reporting not allowing Non-templated Graphs\n-issue#858: Pagination on SNMP Options wrong\n-issue#860: Network Discovery Subnet Range character limit too small\n-issue#861: The search filter does not support Cyrillic\n-issue#862: Automation - When editing Graph Rules, unable to Change Data Query\n-issue#863: Typo error in auth_login.php for LDAP authentication\n-issue#867: Cross-site scripting (XSS) vulnerability in auth_profile.php\n-issue: Link's not showing in Automation Graph and Tree rules on Sunshine theme\n-issue: Make Templates Export responsive\n-issue: Don't wrap menu glyphs and menuitems\n-issue: The function get_order_string() can fail when encountering reserved word columns\n-issue: Data Query Delete is not using callback\n-feature: Resize Graphs on Graph page to be responsive\n-feature: Make import text a hidden field as it is likely seldom used\n\n1.1.13\n-issue#605: Remove Spikes feature not fully functional\n-issue#814: Allow 'Save' feature from New Graphs\n-issue#837: Using the add_device.php CLI script, you can not 'default' the device threads to other than 1\n-issue#838: CVE-2017-10970: XSS Issue in link.php\n-issue#839: The Database column name 'rows' is a reserved word in MariaDB 10.2+\n-issue#845: External links tabs should appear at the end of the tab view\n-issue#846: Web crawl of Cacti site shows errors in the log\n-issue#847: CVE-2017-10970: XSS Issue in lib/html_form.php.\n-issue#853: Go and Clear buttons do not work in all cases on Graph Rules pages\n-issue: Up/Down arrow titles labeled incorrectly on Tree Management page\n-issue: Make the default Export Type a Device Template\n-issue: Fix SNMPagent MIB cache issues\n-issue: Realtime cache cleanup now only removes rrd and png\n-issue: When redirected from reports, you can receive a validation error\n-feature: updated Dutch language\n\n1.1.12\n-issue#822: Aggregate Graph Items are incorrectly editable\n-issue#823: Allow Filters to be hidden\n-issue#834: Add spacing on graphs pages\n-issue: Uninstalled plugins can not install\n-issue: Location of filter functions in host.php prevent full responsive filter implementation\n-feature: Implement first phase of responsive search filters\n\n1.1.11\n-issue#642: RRA not written or WARNING: Poller Output Table not Empty\n-issue#779: PHP running out of memory due to date format issues\n-issue#791: SeLinux causing problems due to recent enhancement of the Cacti log\n-issue#818: Unable to unselect all SpikeKill templates under settings\n-issue#831: Unable to add devices from automation devices that don't have a snmpSysname\n-issue: incorrect version of pace: fix progess bar\n-issue: date_format(): fix date separator character\n-issue: host.php: fix itemCount en rowCount when result = null\n-issue: clog: fix scandir for systems with limited permissions to log directory\n-issue: clog: fix listing of logfiles\n-issue: Stop New Graphs filter interface from taking too much space\n-issue: Pagination of clog is not done via ajax\n-issue: Unable to dry run spikekill's from Graphs page\n-issue: Default sort order does not highlight on Aggregate Template page\n-issue: Correct display issue with Graph Templates when editing Device\n-issue: External Data Sources show as having poller interval on Data Source page\n-issue: Allow Selecting 'External' as the Data Source Profile when creating non-templated Data Source\n-issue: Remove Field Order on Data Input output data as it's not required\n-issue: Data Templates not using Ajax callbacks to switch Data Sources\n-issue: Visual issue when creating non-templated Aggregate Graphs\n-feature: new skin: Sunrise\n-feature: Provide Non Compatible explanation when a plugin is not compatible\n-feature: Updated Dutch translations\n-feature: Allow Graph Templates with multiple flag to be created repeatedly from Graphs New interface\n-feature: Allow plugins to exclude files and directories from their remote poller synchronization process\n-feature: Add Device Description to View Poller Cache UI\n\n1.1.10\n-issue#779: Resolve random Apache segfault due to recursion\n-issue#786: Unable to create second RRA for a Data Source Profile with collection rate less than 5 minutes\n-issue#789: Unable to Clear Filter due to JavaScript name space collision\n-issue#791: cacti 1.1.9 and clog_webapi.php permission issue\n-issue#794: SQL Error when creating graphs manually\n-issue#798: Cosmetic issue when checking checkboxes in Cacti\n-issue#800: Unchecked loop in lib/html_utility.php causing race condition\n-issue#802: Issue updating device hostname with SNMP data queries\n-issue#803: Issues with utf8mb4 introduced via optimization\n-issue: If the device is down and snmp_sysUpTimeInstance is 0, time in state can be wrong\n-feature: Updated Dutch translations\n\n1.1.9\n-issue#788: Fails on PHP Fatal error if LDAP auth enabled\n\n1.1.8\n-issue#529: Issue on Graph New page with checkbox unselected\n-issue#552: Minor selectable row checkbox issue\n-issue#577: Dragging multiple items causes the tree to refresh too early\n-issue#617: Correct poller timeouts when no devices are associated with active data collector\n-issue#706: Classic external link template images missing\n-issue#726: Undefined variable in upgrade script\n-issue#728: Resolve issues with jQueryUI empty dialogs\n-issue#731: Add class to radio button labels to correct display issue\n-issue#736: Sequence numbers not visible when editing templates using modern theme\n-issue#739: Graph Titles missing on aggregate graphs\n-issue#740: Spacer manipulation broken after update to responsive forms\n-issue#741: Errors in dsstats with very large RRDfiles with more than 60 data sources\n-issue#748: Search results are not cleared on Aggregates\n-issue#754: Default Language for user and system are not set on new installation\n-issue#755: RRDtool Graph Watermark is incorrect\n-issue#756: Resolving some translation issues\n-issue#763: Template Export not functional\n-issue#765: Validation error when viewing Utility View\n-issue#771: Editing a report renders no options after creation\n-issue#780: Preview always shows thumbnails in reports interface\n-issue: Hide Aggregate system cdefs when editing graphs and graph templates\n-issue: Updating Utility View zoom was not updating table data\n-feature#723: Convert Data Source dropdown to autocomplete when editing standalone graphs\n-feature#735: Allow color selection in graphs and templates to be autocomplete\n-feature#753: Preliminary support for RRDtool 1.7.\n-feature: Add function to obtain the current execution user\n-feature: Implement Site timezones as autocomplete for performance\n-feature: For themes other than classic, make color id selection autocomplete\n-feature: CLOG timestamp is now formatted as defined in settings\n-feature: CLOG can show loginformation from rotated logfiles\n\n1.1.7\n-issue#470: Enhance Cacti's SNMP function and Data Query XML, add <output_format>hex|string|guess</output_format>\n-issue#653: Devices with empty sysNames are not added to discovered devices\n-issue#655: Data source not displaying device name\n-issue#658: Scheduled Reports (type \"tree\") not working\n-issue#662: Sending test Email should optionally bypass ping\n-issue#667: In Classic theme initial view of Tree view broken\n-issue#669: Invalid SQL Messages when upgrading to Cacti 1.0.5\n-issue#670: Validation error when you do \"Change Graph Template\" in Cacti\n-issue#672: Cacti unable to enable snmp notification receiver mibs\n-issue#680: Sort order in Time Graph View\n-issue#687: Cacti DB access not compatible with PHP 7\n-issue#696: Multiple issues with snmpagent notification UI\n-issue#699: Add custom error handler for ping functions\n-issue#704: Fix GUI issues for Graphs not belonging to a device\n-issue#707: Back button not working\n-issue#708: Issues finding lib/snmp.php in host disk functions\n-issue#712: Change Graph Template dropdown invalid\n-issue#717: Allow ajax callbacks when adding non-templated graph items\n-issue: Reports were not using Cacti's permission system for checking access\n-issue: User Admin page reported wrong permissions at Tree level missing some i18n as well\n-issue: Short data_name can cause data collection issues\n-feature: Updated Dutch language\n-feature: Updating PHPMailer to 5.2.23\n-feature: Support input-output Data Query types\n-feature: Introduce new get_cacti_version() to reduce database calls on pages\n\n1.1.6\n-issue#620: The table poller_data_template_field_mappings can get out of sync when manipulating data templates\n-issue#622: Can not connect to MySQL over a socket\n-issue#628: Cacti upgrade process is complex and error pront for developers\n-issue#635: Error when saving change to data template\n-issue#637: When displaying tree graphs, use the same layout as preview mode\n-issue#646: When a plugin is disabled during page operations, warnings can appear\n-issue#651: Unable to view cacti log (because of allowed memory size exhausted)\n-issue#657: Error in log when host is down, using icmp and using cmd.php on FreeBSD\n-issue: List for creating a Graph type shows already added Graph Templates\n-issue: Fix and undefined variable on data source page when first creating a manual data source\n-issue: Remove tabindex and other non-required manual aria controls from pages\n-issue: Table type and column type in poller_output table wrong\n-issue: FILTER_VALIDATE_MAC not defined on PHP less than 5.5\n-issue: When changing your language Cacti would not do a full page refresh\n-feature#106: Paginated CLOG and log administration\n-feature: Dutch translations\n-feature: Responsive Graphs page\n-feature: Convert forms from table based to div based for responsive design\n-feature: Better support for phones and tablets\n-feature: Simplified installation code to facilitate easier release cycle\n-feature: Updating Tablesorter to v2.28.9, adding widgets and pager\n\n1.1.5\n-issue#580: Data collection warnings when using cmd.php\n-issue#592: Incorrectly formatted HTML\n-issue#606: Replace <path_php_binary> in data input methods\n-issue#607: Allow draw_menu to specify multiple actions for the same URL\n-issue#608: Spaces adjacent to double quotes are eliminated during data input method import\n-issue#609: Honor the column setting in graph tree view mode\n-issue#610: Change Graph Template action not available\n-issue#611: Cacti Installation Wizard - Spine page incorrect on Windows\n-issue#612: Uncaught Error: Call to a member function row() on a string\n-issue#613: Network Automation, now requires a site or your are unable to save rules\n-issue#615: Data Input field length too short for longer scripts\n-issue#619: Export logging option in settings no longer used\n\n1.1.4\n-issue#524: Reporting not working when Tree branch is device\n-issue#560: Add 'Duplicate' and 'Convert to Graph Template' back to Graph Management page for Advanced mode\n-issue#573: Missing Graph Template dropdown items\n-issue#575: Very large hex strings result in scientific notation that RRDtool rejects\n-issue#579: Problems logging in using nginx web server\n-issue#581: session_start() warnings when manually sending reports\n-issue#584: Issues reporting memory recommendation on utilities page\n-issue#586: Overrunning pollers can cause system load spikes\n-issue#587: Data Collector setting under Network Discovery is not being used\n-issue#588: Devices with blank sysDescr are added to the first Device Template in error\n-issue#589: Automation discovery does not allow site association\n-issue#590: Unable to create a plugin based menu\n-issue#591: Row selection in Device Automation Templates not sane with drag-n-drop enabled\n-issue#601: Resolving some translation issues\n-issue#604: Unexpected backtrace on regular expression filters\n-issue#605: Remove Spikes non-numeric data causes warnings\n-issue: Ping email does not use a from email address\n-issue: Automation does not recognize default size or poller\n-issue: Unable to drag-n-drop on automation templates pages when enabled\n-issue: Fixed number of hosts in poller stats for first poller\n-issue: Fixed screenwidth issue in tab PHP-Info of Utilities module\n-issue: Recovery poller could get stuck in some situations\n-issue: Fix JavaScript errors when managing Aggregate Graphs\n-feature: Reorganize defaults to place more on device defaults page\n-feature: Update jQuery tableDnD to version 0.9\n-feature: More tolerant of empty PHP_SELF found with some web servers\n\n1.1.3\n-issue#515: Unable to import color CSV file\n-issue#519: In non-classic themes its not possible to remove Cacti log or reporting tabs\n-issue#520: SQL error in graph automation\n-issue#521: Cacti allows removal of Data Query Graph Template associations when they are in use\n-issue#525: LAST GPRINT type not rendered correctly due to lack of escaping\n-issue#530: Undefined function get_vdef in lib/rrd.php\n-issue#531: Issues with TextAlign and Tick graph items\n-issue#532: Unreliable scroll height causes issues in Chrome\n-issue#533: User settings not cleared after saving profile\n-issue#534: Automation issue with AS clause\n-issue#538: Unable to rename tree folder\n-issue#541: Issues with mobile graph viewing\n-issue#555: DSStats SQL insert errors due to data collection issues\n-issue#563: Division by zero in removespikes.php\n-issue: Fixed rendering issues with HRULE's on graphs\n-issue: Update jsTree to 3.3.4 version\n-feature: Improved responsiveness UI tables, filters, and menus\n\n1.1.2\n-issue#492: Error while adding non data query (cg) graphs\n-issue#494: CLI error while importing template\n-issue#499: SQL error in graph automation resulting in no graphs on tree\n-issue#500: Generic SNMP device package damaged - Unix Ping Host\n-issue#505: Log rotation does not work in some cases\n-issue#506: Undefined index: cactiStatsDeviceFailedPolls\n-issue#507: Nextwork discovery 'export' produces no results\n-issue#509: Minor bug with device ownership selection\n-feature: Add new legend type that includes Current/Average/Minimum/Maximum\n-feature: Update d3.js to latest version 4.7.4\n\n1.1.1\n-issue#457: Continued LDAP issues with initial user creation\n-issue#461: The function escapeshell arg not appropriate on Windows\n-issue#462: LDAP authorization issues: group membership check broken for 'Group Member Type' = 'Username'\n-issue#464: Change default batch spike removal limits for standard deviation and variance\n-issue#465: Less than sign inside items and labels of graph break graph\n-issue#466: Call to member function row() on a non-object in lib/snmpagent.php\n-issue#467: Reduce the number of queries in log function\n-issue#472: Schema changes to improve performance\n-issue#485: When editing a device, the ping status was not always returned\n-issue: Back button issues due to syntax problems in JavaScript\n-issue: Zoom periodically would loose it's crosshairs after zooming\n-issue: Zoom would zoom out into the future even when disabled\n-issue: Fixing lite corruption in graph_templates_item table\n-feature: Make SpikeKill options more consistent\n-feature#459: Add variable date time option to report mail subject\n-feature#460: Add external_id to host variables\n-feature#469: Change re-index method of Data Query from Device edit\n-feature: Support generalized date format approach in the GUI\n-feature: Use localStorage over a Cookie for Zoom setting storage\n-feature: Fully implement 'Remove Orphans' from Package import process\n\n1.1.0\n-issue#337: Generic SNMP OID Graph Template damanged\n-issue#338: Extremely slow new graph/DS creation\n-issue#353: Broadcast & Multicast Packet counters missing\n-issue#376: Structured RRD path permission issues\n-issue#389: Manual template based graph creation not working\n-issue#407: The RRDfile does not exist message is misleading\n-issue#410: Select character data was interpreted as hex by cacti_snmp_walk()\n-issue#422: additional issues with LDAP authentication\n-issue#424: Automation does not discover devices w/o resolvable hostnames\n-issue#427: undefined index TotalVisibleMemorySize on FreeBSD\n-issue#432: SpikeKill menu wonky on Paw Theme\n-issue#434: password_verify not compatible in php5.4-\n-issue#435: urlPath missing from paw theme links\n-issue#436: Restricted user does not see graphs in tree view\n-issue#443: Allow remote_agent.php through a NAT\n-issue#446: No local admin when using multiple LDAP configuration\n-issue#447: Creating another non data query graph from same template reuses first data source\n-issue#449: exec_poll_php does not flush pipes when using script server\n-issue#450: Graph list view - No Graphs Found\n-issue: Improve email test exception errors and change default timeout to 10 seconds\n-issue: When on links page, breadcrumbs would become corrupted\n-issue: When upgrading from any version of Cacti to 1.0.5, SQL's relative to poller_reindex might appear\n-issue: Color page performance poor\n-issue: The Device dropdown on the Graph View page was unreliable\n-issue: Aggregate and non-Device Graphs in list view had not Device or Title description\n-issue: Re-engineer back button design to accomocate ajax and native navigation\n-issue: Make Graph Template filter wider\n-issue: Resolve some visual issues in Classic theme\n-feature: Add page refresh API to make page refreshing in Ajax easier to accomplish\n-feature: Update fontawesome to version 4.7\n-feature: Use fontawesome glyphs for menu items\n-feature: Support multiple column sort in table library\n-feature: Add glyphs to main Cacti console menu\n\n1.0.6\n-issue#386: Allow special characters in graph title\n-issue#414: Install Wizard check path for spine\n-issue#415: SNMP session handling broken\n-issue#418: LDAP create user from template not working\n\n1.0.5\n-issue#296: Poller warning for Non-SNMP device\n-issue#319: Add default 'High Collection Rate' data source profile to new installs to demonstrate concept of multiple rates\n-issue#330: Import templates to non-default Data Profile\n-issue#337: Error when try create new graph - SNMP - Generic OID\n-issue#342: Infinite loop in poller_automation.php with invalid schedule\n-issue#343: Device discovery cannot handle dots in device name\n-issue#344: Unable to upgrade to latest Cacti on FreeBSD\n-issue#353: Legacy broadcast & multicast packet counters missing in interface.xml\n-issue#354: Place on tree dashes / ordering is not correct\n-issue#355: Replace table rows with count when using InnoDB tables\n-issue#357: If recovery mode runs longer than a polling interval, a second is spawned\n-issue#358: Sending test e-mail results in warning\n-issue#360: Issue importing cacti.sql with some charsets\n-issue#364: Moving graph item causes page render issue\n-issue#365: ss_host_disk.php and ss_host_cpu.php should use return\n-issue#367: Upgrade chart.js to version 2.5\n-issue#368: Issue with device automation ip vs. ip_address\n-issue#369: Interface bits/second total Bandwidth wrong CDEF\n-issue#375: Drag and Drop of Devices and Graphs allows dropping onto self\n-issue#380: Ignores a non-standard SNMP port\n-issue#382: When using php5.5+ new users unable to change their password\n-issue#384: graph_view.php backtrace errors\n-issue#385: Unable to place an aggregate grapn on a subtree\n-issue#390: Display graphs from this aggregate icon next to graph not displaying\n-issue#392: cdef.php missing sql where for system cdef's\n-issue#398: checkbox is not honored when creating tree\n-issue#399: External link configuration: Order buttons don't work\n-issue#400: SNMP Engine ID (v3) field too short\n-issue#401: Graphs -> Apply Automation Rules fails\n-issue#404: Success even when test mail fails\n-issue#406: HRULE text format special characters not escaped\n-issue#408: Suppress SNMP units suffix from cacti_snmp_get() output\n-issue: Improve is_ipaddress functions\n-issue: Drag & drop showing when disabled on page automation_templates.php\n-issue: Output messages displayed incorrectly in automation_templates.php and automation_snmp.php\n-issue: Importing template from old Cacti would not show data templates\n-issue: Handle snmp error exceptions better\n-issue: Update Apache .htaccess files to support multiple version\n-issue: When executing a full sync, if the table structured has changed, recreate the remote table\n-issue: Multiple domains not working as expected\n-feature#197: Add external_id to Cacti for linking Cacti to other monitoring systems\n-feature#332: Support copy user groups\n-feature: Log proper IP address if logging in behind a NAT\n-feature: New qquery parsing rules: VALUE/TEST, VALUE/TABLE, VALUE/HEX2IP\n\n1.0.4\n-feature: Javascript: make menu movement smooth and use localStorage\n-feature: Added cacti_snmp_get_raw() for plugin developers\n-issue#288: Function cacti_snmp_get bad handling of wierd value into snmp_value\n-issue#298: Graph generation issue with SNMP - Bits/Sec + Total Bandwith\n-issue#301: Unresolvable DNS hostname causing backtraces\n-issue#302: spikekill memory leak\n-issue#303: Error when creating tree items with \"&\" in the name\n-issue#307: Aggregate graph gives CMDPHP errors\n-issue#308: UI resize issue\n-issue#309: Show \"Save Successful\" notification permanently\n-issue#311: Graph thumbnail settings in profile setting does not work\n-issue#320: Users can not change their own password\n-issue#324: Aggregate template graph template JavaScript error\n-issue#352: Add configurable auto-logout and page-reload options\n-issue#329: Customize the favicon\n-issue#334: primary key on poller output boost table not efficient/not being used correctly\n-issue: Fixed issues with Dark theme\n-issue: Fixed issues with Paw theme\n-issue: Fix timespan calculation\n-issue: Added misplaced join condition when generating RRDtool graphs\n-issue: Fix the selection of timestan based on local_graph_id and rra_id\n-issue: Correct error in discovery not adding devices\n-issue: Action message did not always display\n-issue: fix regex to use Domains like www.t-online.de\n-issue: Properly align Order columns.\n-issue: address renaming issues with tree items.\n-issue: Add device snmp --version is ambiguous\n-issue: SNMP Availability failed to report down devices - This only was occuring for cmd.php collector.\n-issue: i18n remove embedded HTML syntax\n-issue: Wrap menu items to avoid scrolling\n\n1.0.3\n-issue#297: Upgrade 0.8.8h to 1.0.0 fails to create poller_output_boost table\n-issue: Added missing template import hash for 1.0.2\n\n1.0.2\n-issue#279: Correct Boost Status display issue\n-issue#275: Permission View issue and Device Dropdown when in Classic Theme\n-issue#270: Major Mib Cache corruption.  Rebuild your MIB Cache after upgrading\n-issue: Resolve Cacti logo on Graphs page in Classic Theme\n\n1.0.1\n-feature: SpikeKill allows filling range to last known good value\n-issue#261: Add IPv4 and IPv6 Specific Counters to interfaces.xml\n-issue#257: Poller Output Table not Empty WARNING messages in cacti.log\n-issue#256: New Graph - Add Graph Items Fails (Data Sources shows None)\n-issue#255: Errors Creating new Graphs - Undefined Index Errors\n-issue#254: Unable to Properly add Data Source\n-issue#251: Remote Data Collector stuck on upgrade page\n-issue#247: Devices missing from tree device list\n-issue#245: Drag and Drop in Tree Edit Erratic\n-issue#243: SMTP Ping Failure with not SNMP Authentication\n-issue#241: Authentication Method: None not functional\n-issue#240: SQL error when install plugin\n-issue#238: Duplicate color id's cause error during Upgrade\n-issue#231: SNMPv3 - PHP ERROR WARNING: Fatal error: Unknown user name in file\n-issue: Resolving visual issues with row counts.\n-issue: When deleting Graphs prevent the removal of Data Sources that are still in use\n-issue: Improve SNMP agent performance through SQL optimizations\n\n1.0.0\n-feature: Support for remote data collectors\n-feature: Support Internationalization (i18n) for the main Cacti site, and supported plugins\n-feature: Data Source Profiles replace RRA settings allowing a single system to have multiple polling intervals\n-feature: Redesigned Tree page including Drag & Drop functionality\n-feature: New Graph Permissions system designed to make permissions simple to manage\n-feature: Add Themes 'Classic', 'Modern', 'Dark', and 'Paw'\n-feature: Debug Data Sources by comparing them to the Data Template\n-feature: New special Data Source type to detect the poller interval\n-feature: Bulk inserts in PHP poller to address latency issues\n-feature: Optimize data collection through in memory caching giving a 50% reduction in polling times when dealing with large sites\n-feature: Support RRDtool VDEFs\n-feature: Support new Graph Items: AREA:STACK, GPRINT:AVERAGE, GPRINT:LAST, GPRINT:MAX, GPRINT:MIN, LINE:STACK, TEXTALIGN, TICK\n-feature: Support RRDtool features: Right Axis Support, Dynamic Labels, Tab Width, Legend Position, Legend Direction\n-feature; Resizeable table columns\n-feature: Deprecated Single Pane Tree View\n-feature: Role Based Access Control (RBAC)\n-feature: Support User Group Permissions\n-feature: Show number of in use Graphs, Data Sources, and Devices for a given Template\n-feature: Support bulk re-sync of graphs to assigned Graph Template\n-feature: Bulk Device Settings changes\n-feature: CDEFs, Colors, GPrint Presets consolidated to Presets menu\n-feature: Authentication cookies for 'remember me' functionality\n-feature: Automatic logout after session inactivity\n-feature: Replace Boost server in favor of RRDtool Proxy\n-feature: Graph Details include CSV output, zoom, debug, and download links\n-feature: Graph Export moved to a plugin\n-feature: User change password functionality\n-feature: Automation added to core functionality through the merge of the Discovery and AutoM8 plugins\n-feature: Change interface graphs from 32 bit to 64 bit with ease\n-feature: Plugins now have hooks in device templates and automation\n-feature: Allow users to preview template imports to determine if there will be issues from importing\n-feature: Automatic removal of orphaned graph items when importing newer versions of graph templates\n-feature: Support for MySQL 5.7\n-feature: Support for PHP 7.0\n-feature: Merge Aggregate Plugin - Aggregate graph creation\n-feature: Merge AutoM8 Plugin - Automation of graph creation\n-feature: Merge Boost Plugin - Faster polling, result caching, on-demand RRDtool file updates\n-feature: Merge CLog Plugin - View Cacti logs\n-feature: Merge Discovery Plugin - Device discovery\n-feature: Merge Domains Plugin - Support for domain (ADS/LDAP) specific user templates\n-feature: Merge DSStats Plugin - Cache Data Source values for easy retrieval\n-feature: Merge Logrotate Plugin - Rotate Cacti logs\n-feature: Merge Realtime Plugin - Realtime graph viewing\n-feature: Merge Reporting (Nectar) Plugin - Reporting\n-feature: Merge RRDclean Plugin - RRD file cleanup and management\n-feature: Merge Secpass Plugin - User password policy enforcement\n-feature: Merge Settings Plugin - Shared settings for plugins\n-feature: Merge SNMP Agent Plugin - SNMP Agent for Cacti providing system statistics\n-feature: Merge SpikeKill Plugin - Remove unwanted spikes from graphs\n-feature: Merge SSL Plugin - Force https\n-feature: Merge SuperLinks Plugin - Add external links within Cacti\n-feature: Merge UGroup Plugin - User groups with permissions\n-feature: Merge Watermark Plugin - Watermark your Cacti graphs\n-bug: Fixed issue where old graph templates (0.8.6-), could import bogus data causing issues with Data Input Methods\n-bug#0000168: Duplicate data sources should be avoided when creating new graphs\n-bug#0000851: Review an imported template\n-bug#0001155: When viewing graph tree do not show empty nodes\n-bug#0001337: Form to filter for graphs in host view mode\n-bug#0001552: Date ranges not shown on graphs in the view with Daily, Weekly, Monthly & Yearly graphs\n-bug#0001573: RRA templates/grouping\n-bug#0001577: Override session handling and store session in Database\n-bug#0001790: Allow for XML delimiter in fields of a script query\n-bug#0001820: Unable to use a Data Input Method Output Field in more than one Data Source Item\n-bug#0001827: Changing the graph template messes up the graph item fields\n-bug#0001836: Add mysql error message to log\n-bug#0001877: Cookies path is not properly set\n-bug#0001966: Expand Devices in tree view not honored\n-bug#0001970: Data query index order cache should be populated on re-index\n-bug#0001981: Cacti is not full UTF-8\n-bug#0001986: CLI allow add_graphs.php to have multiples --snmp-field and --snmp-value options\n-bug#0001996: Allow using data input field in graph title\n-bug#0002096: Enumerated SNMP values not parsed correctly\n-bug#0002112: CLI add configurable parameters for device_add.php\n-bug#0002133: Restrict User to only manage specific device(s)\n-bug#0002135: Regular expression support for filter\n-bug#0002137: Data query oid_suffix parameter does not function\n-bug#0002159: Database creation file not fully compliant with strict SQL mode\n-bug#0002162: Unable to authenticate user with password containing UTF-8\n-bug#0002196: Incorrect script server instance number in log\n-bug#0002225: Make -Cc SNMP option configurable\n-bug#0002255: Script query_unix_partitions.pl should only query local mounts\n-bug#0002336: Implement php-snmp class library\n-bug#0002340: Data query script execution should be escaped\n-bug#0002350: SNMP Data Query index_order ignored\n-bug#0002351: Ping does not work with non-English locale\n-bug#0002361: Spine does not log unknowns the same way cmd.php\n-bug#0002362: Poller cmd.php makes wrong hex-string to decimal conversion\n-bug#0002370: Cacti prints wrong date formats, does not honor a systems locale\n-bug#0002403: Typo in DELETE statement leading to poor graphing performance\n-bug#0002412: Graph Template duplication causes \\t to be converted to TAB char\n-bug#0002418: Data Source Items named 'ds' break UI ability to add more items\n-bug#0002419: SNMP enum results not parsed correctly by cmd.php poller\n-bug#0002452: CVE-2014-4000 PHP Object Injection Vulnerabilities\n-bug#0002454: OS Command Injection\n-bug#0002468: Changing graph format to anything but PNG causes no output\n-bug#0002476: Add support for SNMP v3 EngineID\n-bug#0002483: Cisco ASA using Re-index method of verify all causes recache event every time\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002521: Unable to create two devices via CLI with the same IP-Address\n-bug#0002522: Zero padded hex strings are parsed incorrectly\n-bug#0002535: Graph Template Changes not updating RRDtool command\n-bug#0002636: Creating Data Template with \"U\" for min and max saves field data_input_field_id as 0 for first item\n-bug#0002697: CVE-2016-2313 allows remote authenticated users who use web authentication to bypass intended access\n-bug#0002698: When the host is down the wrong data type are used for some columns in the host table\n-bug#0002723: Renaming a disabled device still attempts to connect and get SNMP host information\n-bug#0002724: Multipage graphs the menu can disappear\n-bug#0002725: Changing graph template does not mark correct interfaces disabled on data query generated list\n\n0.8.8h\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access (regression)\n-bug:0002667: Cacti SQL Injection Vulnerability\n-bug:0002666: When click the [Clear] button after clicking the [Refresh] button in Preview Mode , fails to CSRFcheck\n-bug:0002673: CVE-2016-3659 - Cacti graph_view.php SQL Injection Vulnerability\n-bug:0002676: Outdated MIBs for non-unicast packets\n-bug:0002677: Index is a MySQL 5.6 reserved word\n-bug:0002681: generate_graph_def_name() generates reserved word \"cf\"\n\n0.8.8g\n-bug:0002161: Graph management \"graph()\" function conflicts with graphviz PECL extension graph()\n-bug:0002320: Unable to delete more than 500 graphs at once\n-bug:0002591: graph_view.php - unable to advance to Next Page in Tree View\n-bug:0002608: cacti 0.8.8f - Data Templates - Poller/script issue with backslash\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002616: cdef.php -- Extra php closing tag\n-bug:0002617: PHP Warning is thrown when trying to include auth_login.php\n-bug:0002623: log warning display wrong time_interval\n-bug:0002627: Graph tree doesn't work in Internet Explorer\n-bug:0002601: graphs_new.php query not sorted as per definition xml:index_order\n-bug:0002625: Plugins don't display the next page\n-bug:0002631: RRDtool export not XML compliant - results in empty CSV exports\n-bug:0002622: graph_view.php -- Navigation and Content Areas are not visible in Tree Mode\n-bug:0002626: Unable to add two users in a row - Notice: Undefined index: id\n-bug:0002620: Unable to copy user\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002646: SQL injection in graph.php\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access\n-bug:0002647: 0.8.8g rev 7767 Can add cacti devices to graph tree \"Save Failed\"\n-bug:0002652: CVE-2015-8604: SQL injection in graphs_new.php\n-bug:0002655: CVE-2015-8377: SQL injection vulnerability in the host_new_graphs_save function in graphs_new.php\n-bug:0002629: Cacti lacks tab icons in chrome from android\n-bug:0002619: Fix incorrect placement of htmlspecialchars() in tree.php\n-bug:0002642: ping.pl does not take into account host port numbers\n-bug:0002567: RRDtool 1.5.x Support\n-bug:0002269: |query_ifSpeed| in --upper-limit for graph template does not work with empty ifSpee\n\n0.8.8f\n-bug:0002599: 0.8.8e Poller Script Parser is Broken\n-bug:0002600: cli/upgrade_database.php is missing releases\n-bug:0002603: Graph managment graphs.php save button does not work\n-bug:0002599: Poller Script Parser is Broken\n\n0.8.8e\n-bug: Fixed issue with graph zooming failing to work\n-bug: Fixed various SQL Injection vectors\n-bug#0002569: Impossible to have a URL pointing directly to a graph\n-bug#0002574: SQL Injection Vulnerabilities in graph items and graph template items\n-bug#0002577: CVE-2015-4634 - SQL injection in graphs.php\n-bug#0002579: SQL Injection Vulnerabilities in data sources\n-bug#0002580: SQL Injection in cdef.php\n-bug#0002582: SQL Injection in data_templates.php\n-bug#0002583: SQL Injection in graph_templates.php\n-bug#0002584: SQL Injection in host_templates.php\n-bug#0002586: Cannot delete data sources from the GUI\n-bug#0002592: graph_view.php - viewing host in new tab - Undefined index: nodeid\n-bug#0002594: status_fail_date and status_rec_date are set incorrectly after host is marked down\n-bug#0002597: Incorrect value in Hosts column on Host Templates page\n-bug#0002598: Incorrect row number in Devices -> (Edit) page\n\n0.8.8d\n-feature: Remove un-needed fonts and javascript files\n-bug: Fixed XSS VN: JVN#78187936 / TN:JPCERT#98968540\n-bug#0002261: PHP 5.4.0 added new error_reporting variable, causing cacti to show errors\n-bug#0002391: Odd Behaviour on ReIndex of Data Query Data\n-bug#0002393: Broken thumbnail images for graph templates\n-bug#0002402: Subtree must not have the same header as the parent header\n-bug#0002474: CLI add_device.php dows not set availability_method correctly\n-bug#0002449: The Save button does not work: Invalid html on page Console -> Cacti Settings: empty form tag\n-bug#0002428: Fail to delete all data input items when removing more than 1000 data sources\n-bug#0002439: Password with special character don't work with LDAP authentication\n-bug#0002461: invalid bn with ldap and anonymous bind\n-bug#0002465: Graph Export return empty CSV file\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002485: Broken pagenation on graph viewing\n-bug#0002489: SNMP - Get Mounted Partitions using Re-index method of Index Count Changed causes recache event every time\n-bug#0002490: Can not select page for multiple datasources per device\n-bug#0002494: CSV export always shows last day\n-bug#0002504: Data template search not functional\n-bug#0002542: [FG-VD-15-017] Cacti Cross-Site Scripting Vulnerability Notification\n-bug#0002543: Unable to switch pages within graphs_new.php due to invalid URL generation\n-bug#0002544: Duplicate entry in $nav_url during list view\n-bug#0002571: SQL Injection and Location header injection from cdef id CVE-2015-4342\n-bug#0002572: SQL injection in graph templates CVE-2015-4454\n\n0.8.8c\n-bug#0002228: GPL incompatible files included in Cacti project in include/treeview\n-bug#0002383: Sanitize the step and id variables CVE-2013-5588, CVE-2013-5589\n-bug#0002385: Cannot export host templates while including dependencies\n-bug#0002386: cli/upgrade_database.php is missing the last two releases\n-bug#0002390: Poller/script issue with slash and backslash\n-bug#0002405: SQL injection in graph_xport.php\n-bug#0002431: CVE-2014-2326 Unspecified HTML Injection Vulnerability\n-bug#0002432: CVE-2014-2327 Cross Site Request Forgery Vulnerability - Special Thanks to Deutsche Telekom CERT\n-bug#0002433: CVE-2014-2328 Unspecified Remote Command Execution Vulnerability\n-bug#0002434: Suppress SNMP UNITS Suffix from cacti_snmp_get() output\n-bug#0002438: Down Host Detection issue when using SNMP Desc or SNMP getNext\n-bug#0002446: Subtract plugin processing time from Poller sleep time\n-bug#0002453: CVE-2014-4002 Cross-Site Scripting Vulnerability - Special Thanks to G. Geshev (munmap)\n-bug#0002455: Incomplete and incorrect input parsing leads to remote code execution and SQL injection attack scenarios\n-bug#0002456: CVE-2014-5025 / CVE-2014-5026 - Cross-Site Scripting Vulnerability - Special Thanks to Adan Alvarez and Paul Gevers\n-bug#0002495: Graph Filter Date Range\n-bug: Fix COMMENT handling, even in case COMMENT is empty, with or without HR and with variable substitution\n-bug: Fix issues when SNMP data holds a \"=\"; \"explode\" must be treated accordingly\n-bug: Fix filter highlighting on data sources for the data template field\n-bug: correct description of SNMP V3 parameters\n-feature: Added native jquery, jqueryui, and jstree\n-feature: Fixed issues with 'Clear' under preview not working\n-feature: Added new Tree navigation\n-feature: Added Columns and Thumbnails to Preview\n-feature: Added Columns to Tree (Preview only)\n-feature: Both Graphs and Columns default to 'Default'\n-feature: Resolved Left hand navigation taking entire page\n-feature: Added new graph zoom to tree view and preview offering a \"quick\" (default) and an \"advanced\" mode\n\n0.8.8b\n-bug: Fixed issue with custom data source information being lost when saved from edit\n-bug: Repopulate the poller cache on new installations\n-bug: Fix issue with poller not escaping the script query path correctly\n-bug: Allow snmpv3 priv proto none\n-bug: Fix issue where host activate may flush the entire poller item cache\n-security: SQL injection and shell escaping issues\n\n0.8.8a\n-bug#0002207: cannot export graph templates\n-bug#0002208: Graphs with CDEFs fail to generate\n-bug#0002209: External auth does not work behind a reverse proxy\n-bug#0002211: creating an index USING BTREE fails ony MySQL < 5.0.60\n-bug#0002213: CLI upgrade script is missing 0.8.7i as a target\n-bug#0002214: SQL error during non-PIA upgrade to 088 when giving a default for a text field in plugin_realms\n-bug#0002216: use of define_syslog_variables() gone in PHP 5.4\n-bug#0002217: url_path should default to /cacti/\n-bug#0002221: Missing plugin directory causes endless loop in plugins.php\n-bug#0002222: tail_logfile hangs when cacti.log not readable, filling apache log with fgets warnings\n\n0.8.8\n-bug#0002056: un-initialized datetime used for host status (was: Zero length string != NULL)\n-bug#0002081: In Graph Management, search display graph title breaks when using pattern symbol \"/\"\n-bug#0002132: need to include pa.sql with the 0.8.7i and future releases\n-bug#0002134: rebuild_poller_cache.php --host-id deletes table poller_item completely\n-bug#0002141: cacti.sql missing BTREE PRIMARY KEY for poller_output\n-bug#0002146: Utilities -> View Log File -> refresh does not work\n-bug#0002150: usort_data_query_index() is broken -> graph order for hosts with data query sort option fails\n-bug#0002151: When building HTML forms with sub_checkbox on_change parameter is not used\n-bug#0002152: Issue with filter on graphs_new.php\n-bug#0002153: Cant search for patterns containing a forward-slash\n-bug#0002156: CDEF strings are not escaped before passed to rrdtool command\n-bug#0002158: Minor changes to grammar of displayed messages\n-bug#0002165: Using data input field in data source name (related to 2079 in 0.8.7i)\n-bug#0002167: New poller hook poller_finishing\n-bug#0002172: structure_rra_paths.php does not handle disabled data sources\n-bug#0002174: poller_item.host_id has wrong type\n-bug#0002178: typo in include/global_form.php: Mimimum -> Minimum\n-bug#0002181: session_unregister (use in functions.php) doesn't exist anymore in PHP 5.4\n-bug#0002182: When there is no suitable (unique) index, graphs are not shown in data query ordering on host leafs\n-bug#0002189: Proper graph hooks\n-bug#0002191: Refresh issues\n-bug#0002194: changing data query XML <index_order> does not propagate to existing data sources\n-bug: Fix input validation on cli/api_device.php\n-bug: Fix issue with data source template associate command line script inserting incorrect rra information\n-bug: Fix minor display issue on data source pages\n-bug: Fix minor issue with counting items in the poller_output table\n-bug: Graph settings and settings check boxes do not allow unchecking to be saved\n-bug: Fix minor issue with plugin library caused by non-session\n-bug: Fix SQL error on data input save for non-templated graphs\n-bug: user_log index added to increase performance\n-feature: Merge Plugin Architecture into Cacti\n-feature: Added index to data_template_data to increase performance\n\n0.8.7i\n-bug#0001963: Bandwidth summation \"total in\" and \"total out\" are always 0\n-bug#0002040: ICMP ping errors for Windows 7 with PHP 5.3\n-bug#0002062: Multiple security vulnerabilities\n-bug#0002063: Multiple value poller output incorrectly interpreted as hexadecimal value\n-bug#0002064: Removing \"~\" (tilde) by sanitize_uri() conflicts with Apache UserDir translation\n-bug#0002066: Graph without host id \"Notice: Undefined variable: host_id\"\n-bug#0002067: Custom time range filter not working\n-bug#0002068: Missing header include in analyze_database.php\n-bug#0002071: MySQL table poller_item is dropped always when \"Data Input Method\" is changed or added.\n-bug#0002079: Using input field of a script in graph title does not work\n-bug#0002080: Database password containing \"@\" does not connect\n-bug#0002083: Adding a new users generates errors in apache logs\n-bug#0002084: Incorrect normalization of hrStorageTable values over 2^31\n-bug#0002086: Incorrect usage of mysql custom tcp port\n-bug#0002087: PHP recache problems due to missing slashes in reindex table\n-bug#0002093: Unit exponent value of 0 not imported with graph template\n-bug#0002094: CDEF: \"another cdef\" references not included in template export\n-bug#0002106: Command line add device does not accept \"None\" for host template\n-bug: Update host template cli script help to fix incorrect options\n-bug: Refresh of Cacti log viewer not working\n-bug: Problems saving User Graph Permissions in IE9\n-bug: Bandwidth summation fails if NAN values are present\n-bug: Special Type Code \"host_id\" available in Data Queries by Not Data Input Methods\n-bug: Do not generate error messages when creating non host based graphs\n-bug: Wrong index used for Data Queries using VALUE/REGEXP\n-bug: Fix issue with title variable replacement failing when no host is associated with graph\n-bug: Cacti generating MySQL 1100 Errors when modifying the tree\n-bug: Resolved \"Fatal error: Cannot use string offset as an array\" in lib/data_query.php\n-feature: Properly support ifHighSpeed replacement variable\n-feature: Increase granularity of availability options to correct spine bug\n-feature: Replace \"event count\" with last changed date for host availability\n\n0.8.7h\n-bug#0001403: Reapply Suggested Names does not work correctly for graphs and data sources not associated with Data Queries\n-bug#0001568: Remove PHP 5.3 deprecated functions\n-bug#0001584: Concurrent changes to graph tree ordering can corrupt sort values\n-bug#0001626: Symbol ($) does not appear in labels/gprint strings to rrdtool during graph generation\n-bug#0001632: Script server treats quoted arguments with spaces incorrectly as multiple separate arguments\n-bug#0001646: MySQL SSL connection support\n-bug#0001660: Modifying data template values does not propagate as expected\n-bug#0001678: Adding graphs to a device fails to add entries to poller_item if using the script server\n-bug#0001768: Perform consistency check on ds maximum vs. ds minimum\n-bug#0001783: Graph Export export date is incorrect\n-bug#0001812: Data template copying ignores some item templating\n-bug#0001814: Command line device add script fails when SNMP default is disabled\n-bug#0001815: One minute polling not working correctly\n-bug#0001816: Cannot export graph data to CSV with IE 8\n-bug#0001819: MySQL \"TYPE=\" command deprecated since MySQL 4.1 removed in MySQL 5.4.4\n-bug#0001826: Zoomed graph views should auto refresh\n-bug#0001828: Reapply Suggested Name prompt as spelling problems\n-bug#0001835: Graph edit page has more than one html form tag\n-bug#0001847: Graph export API function has required argument not defined\n-bug#0001851: Graph creation selector does not work with data query that has no associated graph templates\n-bug#0001855: Improper formatting of data queries can result in SQL errors\n-bug#0001862: Ping script does not process output of update ping utility\n-bug#0001867: RRDtool Cacti fetch function does not work for some locales\n-bug#0001876: PHP function strip_quotes causes HEX values to be truncated\n-bug#0001880: Form validation error message does not highlight text area control\n-bug#0001882: Cacti snmp_walk function fails if max_oids is an empty value\n-bug#0001890: Default tree view mode set to single pane mode not working\n-bug#0001893: Data input method description text does not make sense\n-bug#0001900: Equal sign not correctly parsed in snmp data results\n-bug#0001903: Undefined variable: mode in lib/ldap.php on line 375\n-bug#0001918: Script server does not accept more than one blank space before the function name\n-bug#0001926: Importing templates \"using defaults for this installation\" associates all rra's defined\n-bug#0001928: graph_image.php does not check local_graph_id\n-bug#0001929: Error when exporting templates are not properly reported\n-bug#0001930: No error reporting for wrong RRA\n-bug#0001934: Poller does not process SIGTERM signal correctly\n-bug#0001936: Removing multiple data sources is inefficient\n-bug#0001937: Technical support page uses check table which waits for table lock\n-bug#0001939: Do not query for number or items per host if concurrent polling processes is set to one\n-bug#0001954: Usage of PHP_SELF without basename in html.php (at least partly fixed)\n-bug#0001956: Attempts to update existing tree item fail\n-bug#0001967: Reflected XSS on Cacti 0.8.7g\n-bug#0001989: IE9 breaks Cacti when objects are hidden using 'display:none;' style tag\n-bug#0001993: Undefined index in lib/html.php\n-bug#0001995: REQUEST_URI not properly escaped in graph_view.php for preview mode\n-bug#0002005: Saving Script Server or Script Data Input Method Results in SQL Error\n-bug#0002060: NAN values in hdd utilisation graphs (Poller Output Table not Empty)\n-bug: Fix SQL injection issues in login page\n-bug: RRDtool fetch in Cacti fails to function properly on rrdtool files with NaN values in the output\n-bug: Accept \"Connection refused\" on TCP ping tests\n-bug: Add missing row selection javascript to graph preview\n-bug: Script server throws \"undefined variable\" error when in debug mode\n-bug: Removing graphs does not take advantage of bulk deletes\n-bug: Fixed issue with multiple \"U\" results for a data input method with multiple output parameters\n-bug: SNMP v3 use AuthNoPriv when privacy passphrase is empty\n-bug: Fixed sql errors when using template and search filter on graph management\n-bug: Delete Data Source multi fails to perform bulk deletes on Data Source items\n-bug: Allow Timespan Selector to work with $_REQUEST as well as $_POST\n-bug: While in the mrtg view of Cacti Graphs, or in viewing graph properties zoom fails\n-bug: The filepath api call should trim the filename before checking for the files existance\n-bug: Fix issues with IE9 while editing templates\n-bug: Form action in graph_items.php incorrect\n-bug: Initial drawing of tree causing Next/Previous with malformed URI\n-feature#0001519: Spine enhancement for parallel collection of data at device level\n-feature#0001667: Get values of |host_*| variables in graph elements from data source\n-feature#0001922: Reindex method \"Index Count Changed\" requires that OID_NUM_INDEXES is given for SNMP Data Queries\n-feature#0001923: Implement counting for script (server) data queries just like OID_NUM_INDEXES\n-feature#0001924: Allow for reindex method \"Index Count Changed\" to apply to script (server) queries as well\n-feature#0001952: Ability to use input field of a script in graph title\n-feature: Make reindexing and repopulating the poller cache a lossless process\n-feature: Change default font sizes\n-feature: Add analyze database and push out host cli scripts\n\n0.8.7g\n-bug: RRDtool 1.4.x not recognized during installation\n-bug: Implement windows-aware shell escaping\n-bug: Fixed multiple cross site scripting vulnerabilities reported by Tomas Hoger of the Red Hat Security Response Team\n-bug#0001292: Over 8TByte Partition in Windows cant get correct data from snmp\n-bug#0001486: Unable to login after redirection to access denied page\n-bug#0001516: \"Show the page that user pointed their browser\" does not seem to work\n-bug#0001561: Over zelous HTML excaping on filter strings\n-bug#0001575: LDAP-Authentifications does not work due to ldap_host being set incorrect\n-bug#0001587: Feature from bug#0001271 breaks on large values\n-bug#0001607: Web Basic authentication does not work with fastcgi\n-bug#0001620: Max OID's max value reported incorrectly in Web UI\n-bug#0001747: oid_suffix do not work correctly for input direction on data queries\n-bug#0001756: Alternate font styles do not work correctly\n-bug#0001757: LDAP realm authentication outputs warning for undefined index\n-bug#0001763: Unable to add graph permissions on a user\n-bug#0001765: Tech support does not work correctly with RRDtool 1.4.x\n-bug#0001766: Page refresh setting not being honored\n-bug#0001771: \"index count changed\" not implemented for query_unix_partitions.pl, query_host_partitions.pl, query_cpu_partitions.pl, ss_host_cpu.php and ss_host_disk.php\n-bug#0001773: Character encoding problem after upgrade to 0.8.7f\n-bug#0001775: Tech support page does account for no memory limit set for PHP\n-bug#0001776: Simultaneous databases connections are not supported\n\n0.8.7f\n-security: SQL injection and shell escaping issues reported by Bonsai Information Security (http://www.bonsai-sec.com)\n-security: Cross-site scripting issues reported by VUPEN Security (http://www.vupen.com)\n-security: MOPS-2010-023: Cacti Graph Viewer SQL Injection Vulnerability (http://php-security.org)\n-bug#0001125: XML parse error on template import with degree symbol\n-bug#0001311: Access denied for graph-only users when accessing index.php directly\n-bug#0001366: Exported data templates do not import special characters properly\n-bug#0001416: Graph Export fails with EXPORT FATAL ERROR: Export path /some/path/root/export is within a system path /root. Can not continue.\n-bug#0001452: Missing \"<\" and \">\" in \"Collection Methods=>Data Input Methods=>\"Input String\" after importing template\n-bug#0001461: Data query export/import fails\n-bug#0001492: RRDtool 1.3 series fonts (fontconfig) support\n-bug#0001506: Reindexing fails due to global include issue in lib/snmp.php\n-bug#0001522: Special characters break parsing of template data\n-bug#0001524: Export graphs and Classical Presentation does not honor per graph export rules\n-bug#0001528: ICMP Ping availabilty broken in UI for Windows Servers using IIS\n-bug#0001535: No display of parent ID in tree nodes for CLI tree add script\n-bug#0001543: All graphs are exported dispite graph export rules\n-bug#0001549: Function array_to_sql_or creates poor sql where clauses\n-bug#0001557: Quotes in Text Format graph template field break graph rendering\n-bug#0001587: 64bit HEX Strings do not convert to Decimal on 32bit Systems\n-bug#0001604: HEX Counter values enclosed in quotes not recognized as HEX\n-bug#0001609: Script server timeout too aggressive with 10 second poller interval\n-bug#0001628: Inconsistent message for Change SNMP Options related to available buttons\n-bug#0001695: Suppress deprecated warnings in Cacti code\n-bug#0001725: PHP Fatal Error while trying to add a tree node via cli\n-bug: When creating new graphs without a data source, print error to user instead of throwing php error\n-bug: Browser query string does not contain arguments\n-bug: Function inject_form_variables does not operate if more than 1 variable needs replacing\n-bug: Script imposed memory limits cause issues with some scripts\n-bug: Turn off process leveling if there are not enough poller items to substantiate it\n-bug: Add device should allow no-snmp type devices\n-bug: Firefox Autocomplete causes issues with password validation\n-bug: Access Denied messages do not allow re-direction to login page\n-bug: When clearing filter on new-graphs do not clear host or template\n-bug: When clearing filter, reset page to 1 for all queries\n-bug: Graph List selectors do not persist between pages\n-bug: allow empty [upper|lower]_limit even without autoscaling\n-bug: Availability method Ping or SNMP generates meaningless warnings\n-feature: Add logging to SQL Save error handling\n-feature: Add utility to convert database to InnoDB\n-feature: Return nav as the title for the page\n-feature: Detect and correct for RRDtool segfaults\n-feature: Add rra_id for hosts and graphs to be used during tree export\n-feature: Make the Graphs pages render like the rest of Cacti\n-feature: Convert base Cacti UI to use buttons and not images\n-feature: Make poller sane so that it can be used by other cacti processes\n-feature: Add snmp timeout warnings for lib/snmp.php\n\n0.8.7e\n-bug#0001044: Creating a DS, Output field can't be selected for DT with a DIM when \"Use Per-Data Source Value\" is on\n-bug#0001341: SNMP query: add oid_suffix for weird SNMP queries\n-bug#0001345: Overwriting $snmp_index in query_snmp_host() breaks SNMP Data query if using get method\n-bug#0001346: Strip out noisy 'No Such Instance currently exists at this OID'\n-bug#0001404: timeout in \"function ping_icmp\" (lib/ping.php)\n-bug#0001405: Spaces in DS when .rrd file is created, so it fails\n-bug#0001407: Place graph thumbnail into div to lower page length changes on load graphs\n-bug#0001410: Thumbnail Columns is not honored for host display with snmp index group style\n-bug#0001411: Graph searching issue\n-bug#0001413: strip_quotes fails\n-bug#0001426: multiple form opening due to bug in draw_edit_form()\n-bug#0001436: CSV Export Start Date and End Date are always 1970-01-01 01:00:00\n-bug#0001443: format_snmp_string can return a number with a leading space\n-bug#0001446: Wrong dates override in CSV export\n-bug#0001456: oid_uptime is not parsed correctly\n-bug#0001460: Skiping input parameters in data_query_field_list() may lead to SQL errors\n-bug#0001464: Typo in install/index.php\n-bug#0001467: Customisable oid index parse regexp for weird MIBs\n-bug#0001468: Tree is not expanded correctly\n-bug#0001469: Tree is not being expanded if user followed link outside of cacti\n-bug#0001476: Mark stacked columns in rrdtool_function_xport() output\n-bug#0001477: Spelling error in a variable in html_tree.php\n-bug#0001478: Combo boxes on Graph Management page produce URLs with leading spaces\n-bug: Top Graph Header Breaks When Plugins Used\n-bug: SNMP v3 Password issue caused by Firefox's Password AutoFill\n-bug: Strip Quotes does not properly handle the value 'U'\n-bug: Changes to the graph tree would not show up immediately for current user\n\n0.8.7d\n-bug#0001336: Allow to specify on_change handler for checkbox_group\n-bug#0001338: When Using Web Basic Authentication HTML Bookmarks Do Not Work\n-bug#0001388: Spine uses illegal flag for ping on Mac OS X\n-bug#0001351: Deleting 1000 graphs along with their Data Sources crashes the Server\n-bug#0001361: SNMP query: 'No more variables left in this MIB View' instead of value of input field\n-bug#0001374: ss_host_disk.php etc. error corrected when using SNMP V3 (index off by 1)\n-bug#0001376: graph_items.php variable $id defined in wrong place\n-bug#0001377: Several bugs in new cli script \"structured_rra_paths\"\n-bug#0001378: ping.pl script fails when using tcp:hostname\n-bug#0001382: cdef.php error due to wrong function name\n-bug#0001383: syntax error in lib/rrd.php with PHP 4.4.4\n-bug#0001384: utilities.php does not handle view_snmp_cache when host_id = -1 (Any)\n-bug#0001385: LDAP Error: Group DN could not be found\n-bug#0001391: parsing snmp string with \"=\" ?? --> WARNING: Result from SNMP not valid\n-bug#0001392: Problem on CDEF function ALL|SIMILAR_DATA_SOURCES_(NO)?DUPS\n-bug#0001394: Error of variable in lib/html_tree.php\n-bug#0001398: Cross site scripting checking is overly protective on search filters\n-bug#0001400: LDAP authentication results in PHP warning message\n-bug: Resolved issue with reapply suggested names not working for data sources under certain conditions\n-bug: Correct missing db_conn argument issue\n-bug: Deleting large number of hosts results in SQL errors due to MySQL buffer overrun\n-feature: SNMP cli version information added to tech support page\n\n0.8.7c\n-bug#0000157: Dual pane tree does not have the option of not rendering all trees in one page\n-bug#0000486: RRA template edit allows invalid XFF values\n-bug#0000626: Setting \"Default Graph Tree\" does not work with dual pane view\n-bug#0000828: Truncated IOS description in |query_ifAlias|\n-bug#0000909: ALL_DATA_SOURCES_NODUPS breaks graphing when using \"Consolidation Function\" MAX\n-bug#0000943: scripts/ping.pl has incorrect response when \"icmp hop redirect\" occurs\n-bug#0000948: Exporting graphs to a local path does not work correctly in some cases\n-bug#0000986: Graphs that are done by graph type are not exported when using the tree view\n-bug#0001022: strip_quotes incorrectly parses script output\n-bug#0001090: LDAP authentication fails when using quote character in password\n-bug#0001135: Graph export feature not exporting as per user level selected\n-bug#0001136: Regex ambiguous for mbstring\n-bug#0001138: Lack of error checking causes graphs to not update when rrdtool crashes\n-bug#0001141: Script server appears broken for \"index\" and \"query\" requests (Documentation Fix)\n-bug#0001145: Save Failed error when changing Graph Details\n-bug#0001153: Undefined variable: local_graph_id in graphs.php on line 201\n-bug#0001166: Installer does not properly handle disabled guest_user conversion\n-bug#0001174: Unidentified index warning\n-bug#0001175: Hide hosts in Graph Permissions that you already have access to\n-bug#0001176: Problem validating IPv6 addresses\n-bug#0001188: Graph export issues in tree mode\n-bug#0001191: Faulty IP address validation by ping.php script\n-bug#0001180: Graph Export to CSV failed by using IE 6 SP2\n-bug#0001194: RRDtool URL is incorrect on the about page\n-bug#0001204: Since upgrade to 0.87b the hosts with ip address with 255 are down and have no datas\n-bug#0001206: Graphs are not zoom-able with PHP warnings turned on\n-bug#0001211: Allow use of \"REMOTE_USER\" if \"PHP_AUTH_USER\" is not set for authentication\n-bug#0001213: Template Copy does not hash copied template_items\n-bug#0001215: Impossible to define a none availability with the client cli/add_device.php\n-bug#0001216: CSV Export for zoomed graph, results in Validation error\n-bug#0001217: Default Graph Tree is not reflected in Left Pane of the graph page\n-bug#0001223: Missing Hard return on last GPRINT causes bad formatting\n-bug#0001228: LDAP server port not honored\n-bug#0001230: Poller stops updating rrd files\n-bug#0001236: Set 'stats_recache' to zero when no re-index is present\n-bug#0001238: Guest user has access to change password\n-bug#0001239: Using the TOTAL_ALL_DATA_SOURCES in a graph where all item are using the MAX CF yields an invalid(empty) CDEF\n-bug#0001240: SNMP string cleanup removes too many '=' signs\n-bug#0001244: Missing closing </form> on host.php\n-bug#0001247: Snmp ping won't work for snmp v3\n-bug#0001256: Spine-poller.c : Bug in size string sysUptime\n-bug#0001258: \"Remove Verification\" is an ambiguous definition, leads to data loss\n-bug#0001259: LDAP Authentication using Solaris 10 standard ldap client fails\n-bug#0001262: Do not allow deletion of Graph Export User\n-bug#0001264: CDEFs can't recognize |query_*|\n-bug#0001268: resource/snmp_queries/net-snmp_disk.xml has incorrect name for \"Percent Available\"\n-bug#0001271: Hex string to decimal conversion for proper RRDtool storage\n-bug#0001273: Escape windows paths to accommodate spaces\n-bug#0001281: ICMP Ping fails if an octet == 255\n-bug#0001283: graph_image.php causes PHP Notice errors on view\n-bug#0001286: poller_item cache is not updated when \"Data Input Method\" is changed\n-bug#0001288: A host with ICMP ping selected as method does not properly perform ping\n-bug#0001291: Reapply Suggested Names fails on Script Queries\n-bug#0001293: When Creating Data Query Graphs, Performing Search will Cause List to Disappear\n-bug#0001294: Stack overflow if database is not correctly initialized\n-bug#0001295: Division by zero when rrd_step < poller_interval\n-bug#0001296: add_graphs.php does not add the graph template to the host\n-bug#0001299: When creating graphs the entire poller cache is recreated for a host\n-bug#0001314: Use Data Query variables as HRULE input for graph templates\n-bug#0001318: Graph Export with 1 minute poller re-exports graphs 5 times\n-bug#0001320: Invalid PHP_SELF Path\n-bug#0001326: If a user's password contains a single quote the login fails\n-bug#0001342: VRULE printed as HRULE on graph_templates.php graph template item list\n-bug#0001380: Expand description of ping retries\n-bug: Remove include/html files to mitigate XSS issues\n-bug: IE generates errors on both the host and graph settings pages\n-bug: Host save failed in FireFox 3 for non-SNMP V3 hosts, complaining about \"password mismatch\"\n-bug: Initialization of snmp_auth when using SNMP=NONE\n-bug: Speed up add_graphs.php in most cases (still slow only if --input-fields is used)\n-bug: If the poller_output table is not empty, do not flood the log\n-bug: Remove warnings appear in the httpd log relative to reset attempts on settings array\n-bug: Add API Automation tool quietMode to additional functions\n-bug: When Cacti is launched from within an iframe, cookies are dropped from IE6\n-bug: Database upgrade and cacti.sql differ\n-bug: drop color setting background on FF does not work\n-bug: cli/add_tree.php requires as least a host-id for --list-graphs\n-bug: add_tree.php did not allow nodes with propagating sort options\n-bug: When adding a tree node via the api numeric and natural were reversed\n-bug: When saving a data query based data templates, their data sources would become corrupt\n-bug: If your system contains INNODB tables, the Technical Support page would hang\n-bug: The default user tree link icon would not be properly highlighted when opening graphs\n-bug: Severe performance problems when adding data query based graphs.\n-bug: Default refresh on Cacti Log was too quick\n-bug: Some users do not like the idea of automatic page refreshes\n-bug: Allow more rows to be visible in Cacti pages\n-bug: Ping and SNMP should test both conditions\n-bug: When step is less than poller interval, item will stop polling for long period of time\n-bug: When using Web Basic authentication, user is directed to default page and not REQUEST URI\n-feature#0000284: Custom <path_rra> for each device\n-feature#0000431: Add php-xml to requirements, verify required PHP extensions\n-feature#0000852: Have \"Previous\" and \"Next\" disappear when not in use (only for graph display)\n-feature#0001082: Mirror Graph Rename based on template function to work with Data Sources\n-feature#0001140: CLI-Script to associate a graph template to a host\n-feature#0001162: WEB UI now accepts max_oids on SNMP bulkwalks\n-feature#0001177: CLI Reindexing - poller_reindex_hosts.php: allow filter on \"host description\"\n-feature#0001189: Introducing |data_source_title| variable\n-feature#0001195: Add graph title to graphs page\n-feature#0001201: Reapply Suggested Names for Data Sources and cli/poller_data_sources_reapply_names.php\n-feature#0001205: Add filtering and pagination to cdef management; add \"Duplicate CDEF\"\n-feature#0001220: Disable snmpbulkwalk if max OIDS is less than 2\n-feature#0001233: Move $export_types variable definition from templates_export.php to include/global_form.php\n-feature#0001235: CLI script needs to activate a query: add_data_query.php\n-feature#0001250: Dispatching job in poller can lead to unbalanced threads\n-feature#0001249: New pseudo CDEF variables for \"Count All|Similar Data Sources (NO)?DUPS\"\n-feature#0001289: Add \"Graph Properties\" wrench to tree+preview mode\n-feature#0001323: List all graph template associated with a host template\n-feature#0001306: Add Blank Line as possible graph item\n-feature: Paginate Treeview Dual Pane\n-feature: Allow user to specify maximum graphs per page from Treeview Dual Pane\n-feature: Allow Treeview Dual Pane to be filtered for graph titles\n-feature: Allow the user to add or remove graph text from page for searching with the browser\n-feature: Add links to Graph Management and Data Sources to Device Edit Screen\n-feature: Add links to Graph Template and Host Edit to Graph Edit Screen\n-feature: Add links to Data Template and Host Edit to Data Source Edit Screen\n-feature: Support using the cacti database api with more than one connection\n-feature: Add some more debug lines to Data Query debugging (Verbose Query)\n-feature: Fix compatibility issues for RRDtool 1.3\n-feature: Make the tabs section work a little better with existing plugins\n-feature: Add additional options to speed data query graph automation process\n-feature: Add additional indexes to speed data query graph creation\n-feature: Allow the cli reindexing of hosts to be limited to a single query\n-feature: New cli command host_update_template to allow re-templating of hosts using an updated template\n-feature: When reindexing hosts, allow a queryid to be specified\n-feature: Add command line Database upgrade script\n-feature: Add api call to associate graphs with their data sources\n-feature: Move the notes field to bottom of page\n-feature: New availability option \"Ping or SNMP\"\n-feature: Allow for specification of a default reindex method\n-feature: Show more colors on a single color's page\n-feature: Exit is either a database or table does not exist\n-feature: Add developer debug level to reduce SQL messages in DEBUG\n-feature: Add support for group membership for LDAP authenication\n\n0.8.7b\n-bug#0000855: Unnecessary (and faulty) DEF generation for CF:AVERAGE\n-bug#0001083: Small visual fix for Cacti in \"View Cacti Log File\"\n-bug#0001089: Graph xport modification to increase default rows output\n-bug#0001091: Poller incorrectly identifies unique hosts\n-bug#0001093: CLI Scripts bring MySQL down on large installations\n-bug#0001094: Filtering broken on Data Sources page\n-bug#0001103: Fix looping poller recache events\n-bug#0001107: ss_fping.php 100% \"Pkt Loss\" does not work properly\n-bug#0001114: Graphs with no template and/or no host cause filtering errors on Graph Management page\n-bug#0001115: View Poller Cache does not show Data Sources that have no host\n-bug#0001118: Graph Generation fails if e.g. ifDescr contains some blanks\n-bug#0001132: TCP/UDP ping port ignored\n-bug#0001133: Downed Device Detection: None leads to database errors\n-bug#0001134: update_host_status handles ping_availability incorrectly\n-bug#0001143: \"U\" not allowed as min/max RRD value\n-bug#0001158: Deleted user causes error on user log viewer\n-bug#0001161: Re-assign duplicate radio button IDs\n-bug#0001164: Add HTML title attributes for certain pages\n-bug#0001168: ALL_DATA_SOURCES_NODUPS includes DUPs? SIMILAR_DATA_SOURCES_DUPS is available again\n-bug: Cacti does not guarentee RRA consolidation functions exist in RRA's\n-bug: Alert on changing logarithmic scaling removed\n-bug: add_hosts.php did not accept privacy protocol\n-security: Fix several security vulnerabilities\n-feature: show basic RRDtool graph options on Graph Template edit\n-feature: Add additional logging to Graph Xport\n-feature: Add rows dropdown to devices, graphs and data sources\n-feature: Add device_id and event count to devices\n-feature: Add ids to devices, graphs and data sources pages\n-feature: Add database repair utility\n-feature: Default Script Server/Script Queries now accept host specific ping_retries, max_oids\n-feature: Support for new variables |host_ping_retries| and |host_max_oids|\n\n0.8.7a\n-bug#0000895: \"Use Per-Data Source Value (Ignore this Value)\" runs only when when checking \"Allow Empty Input\"\n-bug#0001029: Add --autoscale-min (rrdtool 1.2.x only) and --autoscale-max (using upper AND lower limit)\n-bug#0001035: Allow for --logarithmic scaling without autoscaling\n-bug#0001038: Data sources in RRAs have random order, messing up predefined CDEFs\n-bug#0001043: Graph Templates drop down populates with duplicates\n-bug#0001046: Upgrade from 0.8.6j to 0.8.7 defaults to Authentication Method NONE\n-bug#0001052: Graph template - GRINT creates CF function DEF\n-bug#0001055: Invalid date format - \"half hour\" not the GNU Date format\n-bug#0001057: SQL error when using 'Auth Method' None when no 'guest' user exists\n-bug#0001058: Graph Filter dropdowns do not respect user graph permissions\n-bug#0001059: Potential SQL injection vulnerability\n-bug#0001060: RRDtool 1.2.15 complain for garbage characters when rrdtool_function_xport is used\n-bug#0001061: cmd.php: potential call to invalid \"availability_method\" key on wrong hash\n-bug#0001064: Log file viewer inefficient filtering uses excess memory\n-bug#0001066: doc change for using COUNTERs as integers only\n-bug#0001067: Fixed extra spaces in GPRINT. Better Alignment for Autopadding\n-bug#0001068: doc change for patching cacti when running SELinux\n-bug#0001070: Cron interval detection causes multiple pollers to run\n-bug#0001073: Max OIDS is not saved in device view\n-bug#0001078: Undefined variable: rra in graph.php on line 241\n-bug#0001079: Dates are not stored in host table using correct format\n-bug#0001080: Graph Export Generates SQL Errors\n-bug#0001081: Usernames with spaces and dashes are not able to save\n-feature#0001035: Allow for --units=si on logarithmic scaled graphs (rrdtool-1.2.x only).\n-feature#0001069: add opacity/alpha channel to graph items (rrdtool-1.2.x only).\n-feature#0001065: Move to Top for List and Tree View. Omit boring scrolling\n-feature: add availability pings to host interface\n\n0.8.7\n-bug#0000480: Fix error after altering graphs displayed per page\n-bug#0000740: Add support for setting the PHP session name of Cacti\n-bug#0000829: Add support for an specifying an uptime OID for SNMP queries\n-bug#0000830: Add filtering graphs by Graph Template\n-bug#0000833: Add favicon.ico support\n-bug#0000850: Add Select All for graph list view\n-bug#0000854: Move \"Downed Host Detection\" into the device edit screen\n-bug#0000873: Fix issues with the poller hanging in certain situations\n-bug#0000876: Add ability to search for host with a not UP status\n-bug#0000898: Selecting a CUSTOM timespan and then CLEARing yields \"LAST HALF HOUR\" preset\n-bug#0000899: Add local checking to the Paths tab on the Settings page\n-bug#0000902: Fix issues with cmd.php and PHP 4.4.1 under windows\n-bug#0000903: snmpgetnext function does not exist in PHP less than 5.0\n-bug#0000904: Data Source creation fails without php-snmp\n-bug#0000906: Every tenth host does not show on tree during console edit\n-bug#0000907: Sorting of data sources when interface numbers are used without leading zeros are incorrectly sorted\n-bug#0000908: Graphs created by SNMP data queries are losing their specific names if the template is modified\n-bug#0000910: Cacti complains when trying to set the data source \"maximum value\" to any number with a decimal point\n-bug#0000912: Nth Percentile thumbnail graphs fail with RRDtool 1.2.15, 1.2.18\n-bug#0000913: Allow direct linking to specific graph pages\n-bug#0000919: Fix problem with ping_tcp function\n-bug#0000920: Improved handling of rrdtool --font parameter\n-bug#0000921: Improvement to ping.pl script\n-bug#0000925: Support for host_* variables in the legend\n-bug#0000926: Stop removing useful characters when searching\n-bug#0000927: Classic export does not recognize thumbnail columns properly\n-bug#0000931: New rrdtool fails on empty comment\n-bug#0000934: Column 'status_last_error' in table 'host' too short.\n-bug#0000937: System output in hosts.php poor for Alcatel\n-bug#0000946: Timetick of zero returns down for device\n-bug#0000947: Trailing blank on OID in form causes problems\n-bug#0000953: SNMP Passphrase is displayed in cleartext\n-bug#0000954: Y-grid lables are not informative when using --alt-autoscale\n-bug#0000955: Fixed possible denial of service attack by modifying graph image URL\n-bug#0000956: Additional editing help with tree management\n-bug#0000957: Script server output's beginning/trailing data during \"Include\" causing a synchronization issue\n-bug#0000958: Slope Mode is now selectable\n-bug#0000959: Alarming added when poller output table is not empty\n-bug#0000963: TCP/UDP capitalization\n-bug#0000965: When setting filters under utilities, pressing enter takes you back to the main page\n-bug#0000966: Log file viewing utility has no ability to filter\n-bug#0000969: In some versions of PHP, the graph tree will not view properly\n-bug#0000970: Incorrect debug messages in lib/ping.php for failed UDP ping\n-bug#0000974: No graphs on Fedora core6 using sunone/iplanet 6.1 SP5\n-bug#0000975: Add Nth Percentile aggregate_current - Summing Multiple Data Sources with like names for Nth Percentile\n-bug#0000982: Remove invalid references to the \"output_string\" column in the \"data_input\" table\n-bug#0000983: Bad SQL: snmp_query_graph_rrd.snmp_query_graph_id=\n-bug#0000984: Poller does not correctly flush poller_output table after a memory error\n-bug#0000989: hyphen - host description used with Data Source Path\n-bug#0001001: \"Purge User Log\" keeps invalid entries\n-bug#0001002: Cacti reports incomplete interface status\n-bug#0001007: SNMPv3 password field allows command injection\n-bug: ss_sql.php causes the script server to crash\n-bug: Timeshifter added to base code\n-bug: Allow query_ and host_ substitution in COMMENT and CDEF's.\n-bug: Command line interface scripts to add devices, graphs, tree's and permissions.\n-bug: Correct index error when creating graphs when you have no hosts on your system.\n-bug: More recent versions of net-snmp broke SNMP walk functions.\n-bug: Adjust for problematic responses from some SNMP agents (IBM AIX).\n-bug: Improve logging in cmd.php and poller.php when parameters are not specified correctly.\n-bug: Reduce the total number of SQL queries called\n-bug: Replace inefficient strip function in process_poller_output\n-bug: Some php_snmp implementations return strings as \"Hex-STRING:\".  In these cases properly resolve the string\n-bug: Correctly assign right and left click actions for Opera\n-bug: Fix SQL error when viewing an invalid Data Source via the Log Viewer\n-bug: Fix command line user copy utility\n-feature: Paginate the Graph Creation Page\n-feature: Add SNMPv3 Support to Cacti\n-feature: Add a Notes field to the Device that can contain arbitrary information\n-feature: Add Availability Methods to Cacti including per Host Ping Methods and Timeouts\n-feature: Add Max OID's to te Host Level\n-feature: Allow CSV Export from the various Graphs page\n-feature: Add rra_path as a global.php config variable\n-feature: Add drop down actions to data queries\n-feature: Add drop down actions to data input methods\n-feature: Add drop down actions to user administration\n-feature: Add filtering and pagination to data queries\n-feature: Add filtering and pagination to data input methods\n-feature: Add filtering and pagination to host templates\n-feature: Add filtering and pagination to user administration\n-feature: Add extended LDAP authentication support\n-feature: Add Web Basic authentication\n-feature: Add authentication realm to modifiable user parameters\n-feature: Add multiple polling intervals\n-feature: Moved command line scripts to cli sub directory\n-feature: include/config.php now only includes database configuration\n-feature: include/config_* have been renamed to include/global_*. Note: Script servers need to be updated.\n-feature: Allow VRULE's in Cacti to specify an absolute timestamp in addition to [+/-]HH:MM\n-feature: Add 1 minute RRA\n-feature: Add item select highlighting to main pages\n-feature: Let poller.php be more intelligent about poller intervals less than 60 seconds\n-feature: Add consistency to Filters by adding nowrap to td items\n-feature: Add Graph and Data Source counts to Device page\n-feature: Add Poller Interval to Data Sources page\n-feature: Keep filters aligned with main page content on window resize\n-feature: Add Enable/Disable user\n-feature: Add copy and batch copy of users\n-feature: Reduce ADODB memory consumption during polling\n-feature: Add new RRDtool Function to facilitate CSV export\n-feature: Add the ability to ignore custom RRA settings when importing templates and use this behavior by default\n-feature: Add technical support output to System Utilities\n-compat: Add additional checking due to php-snmp changes in Windows\n-compat: Remove GIF as a supported file type for RRDtool 1.2.x and added SVG file type\n\n0.8.6j\n-bug#0000842: SNMPv3 password field does not check if entered passwords match.\n-bug#0000848: Fix \"PHP Script Server communications lost\" error in the poller under high network load.\n-bug#0000859: User log \"purge\" now keeps the last successful login.\n-bug#0000861: Use downed host detection even when the SNMP community is blank.\n-bug#0000864: Apply natural sort to graph items in the tree.\n-bug#0000867: Apply various cleanups to poller.php and lib/poller.php.\n-bug#0000870: Add sorting to the graph templates list on the \"Change Graph Template\" page.\n-bug#0000877: Fix issue that caused PHP 5.2.0 to break the Windows cmd.php poller.\n-bug#0000882: Add \"collapsible\" branches to the graph tree editor.\n-bug#0000883: Fix exploit in cmd.php with register_argc_argv enabled in PHP.\n-bug#0000884: Add bottom navigation bar to graph viewing.\n-bug#0000885: Fix issue causing spaces to be removed when importing/exporting data input methods.\n-bug#0000886: Allow SNMP ping to utilize the snmpgetnext call instead of snmpget.\n-bug#0000890: Fix issue with dec-vulnerability-poller patch breaking graph_view.php.\n-bug#0000892: Fix hostname sorting on the devices page for IP addresses.\n-bug#0000894: poller.php does not give any output with MySQL disabled in CLI's php.ini.\n-bug: Template export produces invalid XML escaped character encoding.\n-bug: Data queries were not sorted properly during initial display.\n-bug: Apply various graph changes required for Boost plugin.\n-bug: If your system has no hosts or graphs, you would get a warning when creating new graphs.\n-bug: If using the CGI version of PHP, the script server risked not starting properly.\n\n0.8.6i\n-bug#0000188: Add ability to sort columns by selecting column headers.\n-bug#0000199: Exported thumbnail graphics shows limited time range only.\n-bug#0000207: Correct unit size displayed in the default 'Localhost - Memory Usage' graph.\n-bug#0000286: Fix issue with bandwidth summation on exported graphs.\n-bug#0000313/#0000561: Don't print menu/titlebar by using CSS class noprint.\n-bug#0000316: Take the unit value field into account when creating graphs.\n-bug#0000395: Fix graph export FTP functionality in Unix environments.\n-bug#0000430: Add natural sort order option for graph trees.\n-bug#0000433: Remove script server restriction on varying case path names.\n-bug#0000488: Remove reliance on HTTP_USER_AGENT to prevent possible notices.\n-bug#0000527: Fix issue updating the RRA for a graph tree item.\n-bug#0000584: Add barometer decimal fix to scripts/weatherbug.pl.\n-bug#0000624: Generate DEFs for graph items other than AREA, STACK, and LINE.\n-bug#0000643: Always display a human readable sysUpTime in the device edit page.\n-bug#0000665: Invalid index error on empty or 0 return set from rrdfetch with Nth Percentile.\n-bug#0000672: When creating a device, the Host Template was not properly validated.\n-bug#0000678: Allow graph export to a Cacti sub directory.\n-bug#0000681: Increase the size of the arg1, arg2, and arg3 fields in the poller_item table.\n-bug#0000692: Fix problems with FTP and the tree export method.\n-bug#0000693: Fix problems with the \"Expand Host\" option and the tree export method.\n-bug#0000698: Make arguments to 'df' more compatible with FreeBSD 6.0 in the \"Get Unix Partitions\" data query.\n-bug#0000705: Fix problem with the current selected data source item and SIMILAR_DATA_SOURCES_NODUPS (again).\n-bug#0000709: Fix problems with FTP and the tree export method (duplicate).\n-bug#0000720: Fix undefined variable message in script_server.php.\n-bug#0000721: SNMPv2 Query has issues with ifAlias & ifName when none present.\n-bug#0000727: Allow a user with specific graph permissions to be used when exporting graphs.\n-bug#0000730: Allow non-standard MySQL ports to be specified.\n-bug#0000731: Use proper defaults when adding a device to a tree from the Devices page.\n-bug#0000739: Stop ignoring the \"Unit value\" parameter in the graph template.\n-bug#0000741: Fix issue with links getting mismatched after using zoom on a graph.\n-bug#0000746: Make sure clearing Cacti log file from web interface preserves file permissions.\n-bug#0000752: Allow OID's greater than 255 characters except for the index OID because of MySQL index limitations.\n-bug#0000758: LDAP user with non-alphanumeric characters in the password failed to authenticate.\n-bug#0000761: Correct input validation to allow all possible numbers in the RRAs form.\n-bug#0000766: Increase the size of the id field in the graph tree items table.\n-bug#0000769: Use only selected RRA's when exporting graphs.\n-bug#0000775: Add pagination to the SNMP cache viewer to handle large numbers of items.\n-bug#0000779: Scale down the size of text when viewing thumbnail graphs.\n-bug#0000781: Add an \"enabled\" filter status item in the devices list.\n-bug#0000785: Fix issue with Graph Tree View and Data Query Index Sorting showing \"Non Indexed\" even if empty.\n-bug#0000786: Expose the SNMP port field to data sources that use SNMP.\n-bug#0000789: Remove use of \"action\" attribute on graph tree image which is incompatible with newer Opera browsers and HTML4.\n-bug#0000797: Fix issue with filtering on multiple fields on the Data Sources and Graph Management pages.\n-bug#0000809: Add an option to \"purge\" the user_log table.\n-bug#0000814: Prevent Apache from segfaulting if the database permissions are not correct.\n-bug#0000815: Paginated the Cacti log file viewer to handle large numbers of items.\n-bug#0000821: Add missing menuarrow.gif image.\n-bug#0000823: Prevent Cacti from overwriting data during the creation of a new data template.\n-bug: Do not allow the device filter on the graph items editor to clear the selected data source.\n-bug: SQL query incorrectly formatted causing SQL queries to fail in preview mode.\n-bug: Setting a host template filter in devices, followed by moving off and then back on the page generated an error.\n-bug: PHP 5.1 snmpwalks utilize the bulk method by default.  Therefore, prefer them over the bulkwalk binary.\n-bug: Allow read_config_option to force a database refresh when one is wanted.\n-bug: Fix to resolve script server script not returning data as expected.\n-bug: Make load average script compatible with Mac OS X systems.\n-bug: Correct an issue where under certain circumstances, |query_ifSize| was being implemented as the maximum value for an RRD.\n-bug: Correct issue where DHTML caching was not working with expand hosts enabled.\n-bug: Add SNMP retries option to Cacti's SNMP functions.\n-bug: Once Graph Export has been enabled, do not allow Cacti to run even after it has been disabled.\n-bug: Correct alphabetic tree sorting to be more natural.\n-bug: Fix meta refresh tags to use proper URL syntax.\n-bug: Do not allow the graphs setting page to use the refresh interval, which can cause it to refresh while the user is inputting data.\n-bug: Make sure that data query index ordering with the \"index_order\" XML field is always respected.\n-bug: Limit the number of rows retrieved from the poller_output table to minimize the impact low memory system configurations.\n\n0.8.6h\n-bug#0000383: Add more verbose RRDtool debug output from Graph Management.\n-bug#0000522: Take 'oid_index_parse' into consideration when handling 'OID/REGEXP:' data query fields.\n-bug#0000528: Allow template_import.php to return without error when XML file is invalid in PHP 4.4 and above.\n-bug#0000557: Changing filter value resulted in invalid page/row selection.\n-bug#0000572: Added $database_port to config.php.\n-bug#0000570: Grammar edit for text about already up-to-date.\n-bug#0000571: Misleading diagnostic error messages during install have been updated.\n-bug#0000582: Ampersand present in graph template graph name causes XML import to fail.\n-bug#0000585: Graphing fails using AREA/STACK/LINE/HRULE/VRULE without defined color.\n-bug#0000586: Remove static reference to RRA ID #1.\n-bug#0000596: Proper escape of ' in graph titles.\n-bug#0000599: Add filtering to graphs and data templates.\n-bug#0000601: Add ability to add multiple hosts to a tree.\n-bug#0000603: user_log.ip field not ipv6 compatible.\n-bug#0000608: Minor coding error in lib/poller.php with a erroneous pclose statement.\n-bug#0000615: Add sysContact and sysLocation output to device edit page.\n-bug#0000619: Host templates not alphabetized on device creation form.\n-bug#0000625: Cannot modify/create a user with a period in the username.\n-bug#0000631: Invalid information concerning delimiter for index_order in SNMP Query documentation.\n-bug#0000650: Clicking Cancel in Create Graphs for this Host does nothing.\n-bug#0000656: Perl scripts using back ticks is not portable.\n-bug: Stop MySQL connect messages from appearing in user interface.\n-bug: Allow primary keys other than \"ID\" to work in sql_save and in HTML code.\n-bug: Save statistics even when the poller times out.\n-bug: Only call poller_commands.php or poller_export.php if they require calling.\n-bug: Incorporate a timeout to ss_fping.php so that a host that takes to long to finish at least returns data.\n-bug: Correct the display of custom data under data input methods to follow the proper order.\n-bug: Change the default behavior of ping.php to mark a host as up if either SNMP or ping are successful.\n-bug: Don't allow graph_export to delete your web site.\n-bug: Correct issue where SNMP was not returning both hex and text data under certain circumstances.\n-bug: Prevent a never ending table lock in lib/tree.php.\n-bug: Correct issue where either AREA or LINEx without color were causing RRD_NL without any elements in rrdtool_graph.\n-bug: Allow hostname to include the TCP: prefix for TCP based snmp and keep tcp, icmp, udp ping functional\n-bug: Better error reporting for Clear Cacti Log File in Utilities\n-bug: Graphs with items having Legend text defined but no color will fail under RRDtool 1.2.x.\n-feature: Add MySQL 5.x support.\n-feature: Add IPv6 support to lib/ping.php.\n-feature: When utilizing cmd.php, do not run the script_server if it is not required for a process.\n-feature: Incorporate snmpbulkwalk binary path to user interface to speed snmpv2 and snmpv3 walk calls.\n-feature: Incorporate snmpgetnext binary path to user interface to make available for certain plugins.\n-feature; Add support for Nth percentile functions, not just 95th.\n-feature: Add support for new Nth percentile variables: aggregate, aggregate_max, aggregate_sum.\n-feature: Allow additional filtering for graph item adding while creating graphs.\n-feature: Add Command line script to copy users: copy_cacti_user.php.\n-feature: Add Command line script to reindex hosts: poller_reindex_hosts.php.\n-feature: Add Command line script to rebuild the poller cache: rebuild_poller_cache.php.\n\n0.8.6g\n-bug#0000351: Fix zooming capability in Safari.\n-bug#0000491: Allow underscore, dash, and forward slash characters through search string validation.\n-bug#0000498: Fix issue where editing data input methods damaged portions of the database.\n-bug#0000502: Fix Syslog support in unix.\n-bug#0000506/#0000517: Properly handle special XML characters when importing/exporting templates.\n-bug#0000508: Fix issues where filter functionality would not work in preview mode.\n-bug#0000512: Increase script server buffer size for large output.\n-bug#0000520: Fix issue where LDAP authentication causes crash/abort.\n-bug#0000521: Add graph/data source title mouseover support.\n-bug#0000525: Make sure that all files in the Cacti distribution contain an EOF character.\n-bug#0000530: Remove 132 character limitation for OID's during polling.\n-bug#0000531: Make sure that quote characters in suggested value fields are properly escaped.\n-bug#0000535: Fix template export support for PHP 4.4.\n-bug#0000536: Fix printing of zoomed graphs where in IE where a white box would appear over the graph.\n-bug#0000537: Re-implement functional SNMPv3 support (authNoPriv only)\n-bug#0000543: Always allow non-templated graph/data template fields to be blank.\n-bug#0000544: See graph tree export contrib below.\n-bug#0000547: Fix issue with escaping certain control characters, causing the graph tree to break.\n-bug#0000552: Fix typo on the Settings page.\n-bug: Fix multiple output support in the script server.\n-bug: Fix incompatible binary SNMP calling parameter issue with NET-SNMP versions earlier than 5.1.\n-bug: Fix issues encountered when polling invalid data sources.\n-bug: Fix issue where if a host was deleted, re-indexing would continue to attempt to be performed on it.\n-bug: Allow lib/ping.php to be included in user script server scripts.\n-bug: Eliminate the need to run php-win.exe in Windows environment.  Will now work with just php.exe.\n-feature: Add a great new graph export format \"Tree Presentation\", thanks to our friend from Toulouse France (forums user: jaybob).\n-feature: Allow data query |query_*| variables to be used within a CDEF string.\n-feature: Force export functions into a separate poller process.\n-feature: Force re-caching of data queries into a separate poller process.\n-feature: Added filter capability to graph list view mode.\n-feature: Enhanced ss_fping.php and ping.php to inclue ICMP, TCP and UDP ping functionality and to specify a port.\n\n0.8.6f\n-security: Hardened PHP Project Advisory #042005 - Cacti Authentification/Addslashes Bypass Vulnerability\n-security: Hardened PHP Project Advisory #022005 - Cacti Multiple SQL Injection Vulnerabilities\n-security: Hardened PHP Project Advisory #032005 - Cacti Remote Command Execution Vulnerability\n\n0.8.6e\n-bug#0000143: Allow the user to enter 'U' for unknown minimum and maximum data source input values.\n-bug#0000377: Fix logarithmic graph creation issues.\n-bug#0000392: Implement caching to reduce the number of SQL queries needed to render the graph tree.\n-bug#0000402/#0000457: Allow bounds to be set properly for logarithmic graph creation.\n-bug#0000428: Unable to try login again after Access Denied.\n-bug#0000450: Force strict checking for data query parsing to prevent numeric values from being incorrectly handled.\n-bug#0000453: SPAN tag between each character of GraphTitle in Graph Management.\n-bug#0000458: Generate and error message and exit poller.php if the cactid binary path is invalid.\n-bug#0000463: Fix Syslog logging of poller statistics.\n-bug#0000464: Remove dates from Syslog generated messages.\n-bug#0000465: Allow for the mass resize of graphs.\n-bug#0000471: Remove the graph 'Settings' tab if the user is not allowed to save graph settings.\n-bug#0000478: Validate field input values on the Data Templates page. Prevent duplicate data template items from appearing as a result of this bug.\n-bug#0000481: Add several checks to prevent PHP errors when parsing data query XML files.\n-bug: Graph zoom feature had incorrect bounding box when using RRD 1.2.x\n-bug: Speed the generation of the Tree View Dual Pane by caching the Tree to a local session variable.\n-bug: Handle STACK graph items properly in RRDtool 1.2.\n-bug: Prevent data query recaches if the device returns empty input.\n-bug: Fix potential issues with graph gaps when using a large number of poller processes.\n-bug: Fix issues when zooming with new RRDtool 1.2 title fonts with a point size other than 10\n-bug: Fix issues when zooming outside of the select areas causing a broken graph\n-bug: Fix issues experienced when users attempted to create custom graphs and thousands of data sources exist\n-feature: Add ability to filter by host status as well as add ability to filter accross both description and hostname\n-feature: Add additional options to control RRDtool 1.2 fonts.\n-feature: Allow the user to Enable/Disable Data Sources from the user interface and automatically disable hosts when deleting a device.\n-feature: Add Data Source information to the Cacti Log File to assist with troubleshooting.\n-feature: Add html links to both hosts and data sources in the Cacti Log File.\n-security: Fix several remote inclusion bugs that were exploitable when PHP's 'register_global' feature is turned on [IDEF0941], [IDEF1023], [IDEF1024].\n-security: Fix several SQL injection bugs due to improper input validation [IDEF1001].\n\n0.8.6d\n-bug#0000416: Speed up binary net-snmp calls by removing MIB lookup requirement.\n-bug#0000434/#0000403: Allow for periods in script return variable names.\n-bug#0000436: Made snmp.php more like version 0.9 code base.\n-bug#0000419: Fixed session initialization problems with some browsers.\n-bug#0000394: Fixed a web server crash when reordering items in a graph tree.\n-bug#0000390: Remove deep linking in Cacti.\n-bug#0000389: Implement directory security in Cacti.\n-bug#0000443: Add SNMP port/timeout to the Host MIB CPU/disk script queries.\n-bug: Corrected issues encountered when creating multiple graphs from a single graph template.\n-bug: Corrected a problem where no graphs are displayed in the graph tree when authentication is turned off.\n-bug: Allow RRDtool fetch command to retrieve negative numbers.\n-bug: Increased some field lengths for very long OID's.\n-bug: Removed references to non-existing code when attempting to make database connections.\n-bug: Give poller cache more time to process entries during a clear operation, give it more memory.\n-bug: Changed default value in Unix ping script to correct for template bug.\n-bug: Fixed page refresh issue.\n-bug: Fixed include ordering in config.php to accommodate MySQL bugs and logging.\n-bug: Changed SNMP ping OID to be sysUptime because it is more common.\n-bug: Increased PHP timeout to accommodate for long running recache events causing poller issues.\n-bug: LDAP Auth with no DN specified and blank username would allow login.\n-feature: Basic support for RRDtool 1.2 including specifying a default True Type Font.\n-feature: Added support for spike suppression within the cmd.php poller.\n-feature: Support php_snmp version 2 builtin functions.\n\n0.8.6c\n-bug#0000354: User Name field always displays \"admin\" in Mozilla web browser.\n-bug#0000293: JavaScript selection bug on the \"New Graphs\" page.\n-bug#0000352: Problem with the current data source item when using the \"Similar Data Sources\" special data source.\n-bug#0000348: Scale problems with the \"ucd/net - Memory Usage\" graph template.\n-bug#0000358: Problems adding the same graph to more than one graph tree.\n-bug#0000355: Allow scientific and negative numbers to be returned from a script.\n-bug#0000347: Change Order of Graph Templates and Data Queries in Host.\n-bug#0000339: LDAP description misspell 'allow'.\n-bug: Maximum runtime issues with the script server.\n-bug: User could select a data query graph type from \"Graph Templates\", causing duplicate data source items.\n-bug: Auto-recache failed and caused the poller to crash under specific circumstances.\n-bug: Problems saving a user's graph settings from the user admin page.\n-bug: Poller cache not being updated properly for some host types upon change.\n-bug: Hope it's final this time: 95th percentile and bandwidth summation fixes.\n-bug: Added more verbose error handling with template XML importing.\n-bug: Sort host templates when creating a host.\n-bug: Corrected user form edit array problem that didn't show the graph options for an edited user.\n-bug: Access Denied error when user doesn't have console access.\n-bug: Return type bug in cacti_snmp_walk() which could cause extra blank data query rows.\n-feature: Data queries now support indexes that span multiple OIDs (see the manual).\n-feature: Re-apply suggested naming to graphs from the user interface.\n-feature: TreeView-specific feature to speed up rendering the tree for large databases.\n-feature: Added retry logic to the MySQL connect statements.\n-feature: Changed default connect method to a 'pconnect' from a 'connect' to improve performance with large implementations.\n-feature: Add support for Safari on the graph zoom page.\n\n0.8.6b\n-bug#0000318: Only delete the Cacti system user when uninstalling the RPM package rather than during each upgrade.\n-bug: Problems with the 95th percentile and bandwidth summation graph variables.\n-bug: Problem with random gaps in some or all graphs caused by staggered RRDtool update times.\n\n0.8.6a\n-bug#0000287: Non-host based scripts failing to populate the poller cache (0.8.6).\n-bug#0000285: Data query variables on graphs should reflect the data source of each individual graph item (0.8.6).\n-bug#0000289: Check the value of PHP's \"magic_quotes_gpc\" setting to prevent potential security holes (0.8.6).\n-bug#0000295: Problem with the DHTML tree when Cacti is included inside of a parent frame.\n-bug#0000311: Set PHP's \"max_execution_time\" to \"0\" during all upgrades.\n-bug#0000303: Correct the logic that checks if the export path directory exists or not.\n-bug#0000310: Problems viewing data templates with the \"Data Input Method\" set to \"None\".\n-bug#0000304: Problems displaying duplicate data templates on the main \"Data Templates\" screen.\n-bug#0000302: Update the Windows install documentation to mention the \"PHPRC\" environment variable.\n-bug#0000293: Problem with the JavaScript that grays out already created graphs on the \"New Graphs\" page.\n-bug#0000312: Make sure that the \"host_graph\" table is populated in the installer for users coming from a version less than 0.8.4.\n-bug#0000296: Remove references to PHP's ob_flush() function it doesn't exist until verion 4.2.\n-bug#0000314: Respect graph export timing settings.\n-bug: Problem saving a templated graph or data source that contained a checkbox field that had a value different from the default.\n-bug: Typo in graphs.php when placing graph(s) on a tree.\n-bug: Make sure that there is a user logged in before trying to read a per-user graph configuration value.\n-bug: Fix support for multiple cmd.php/cactid polling sessions in a single poller.php session.\n-bug: Revert back to older RRDtool update method as to correct several poller related issues with 0.8.6.\n-bug: Fix PHP-SNMP support in cmd.php.\n-bug: Fix multiple graph/data template corruption issues when converting from graphs or data sources.\n\n0.8.6\n-bug#0000051: HTTP header caching problems (0.8.5).\n-bug#0000121: It is no longer possible to add the same graph twice to a single graph tree branch.\n-bug#0000123: Several UI fixes on the tree item edit page (0.8.5).\n-bug#0000124: Select all check boxes would actually invert the selection.\n-bug#0000128: Graph template item corruption issues (0.8.5a).\n-bug#0000139: Graph tree deletion corruption issue (0.8.5a).\n-bug#0000140: Replaced the 'None' option in several host drop downs with 'Any' and redefined 'None' to mean host = 0 (0.8.5a).\n-bug#0000144: Possible corruption issues when deleting tree items from the root of the tree.\n-bug#0000149: Error using the 'total' type for 95th percentile or bandwidth summation.\n-bug#0000151: Added the ability to duplicate a host template.\n-bug#0000160: A change in Mozilla 1.5+ caused extra vertical space to appear on many table rows throughout the console.\n-bug#0000164: HostMIB scripts do not respect SNMP port and timeout parameters.\n-bug#0000173: Increase the number of characters dedicated to each tier from 2 to 3 which increases the item per tier/branch limit to 999.\n-bug#0000174: Broken thumbnail graphs that contained a 95th percentile HRULE item.\n-bug#0000175: Strip quotes from SNMP output to prevent UI escaping issues.\n-bug#0000176: Added the '-P' argument to 'df' to prevent multi-line output for the query_unix_partitions.pl script.\n-bug#0000179: Updated ADODB to version 4.23 which enabled Cacti work with PHP 5.\n-bug#0000198: Strip greater and less than characters from SNMP output to prevent UI escaping issues.\n-bug#0000214: Rename 'Utilities' to 'System Utilities' and move it under the 'Utilities' menu heading.\n-bug#0000235: Limit the number of pages displayed for graph management, data sources, and devices.\n-bug#0000244: Prevent PHP errors from being displayed during summation/95th percentile calculation when the .rrd file does not exist.\n-bug#0000253: Fixed recursive CDEFs.\n-bug#0000254: CDEF dropdown list in adding another CDEF is not sorted.\n-bug#0000265: Removed \"CANNOT FIND GUEST USER\" error message.\n-bug#0000273: Fixed 'rrdtool fetch' parsing for RRDtool 1.0.9.\n-bug: A hash was not being generated for duplicated graph and data templates which would cause import/export for those templates to fail.\n-bug: A user's graph permissions may fail to delete properly after removing that user.\n-bug: The \"Export Every x Times\" feature did not work correctly.\n-bug: Work correctly with PHP's get_magic_quotes_gpc() turned off.\n-bug: Eliminated potential password injection attack in auth_login.php.\n-bug: Eliminated popen issues in cactid win32 with threads > 1.\n-feature/bug#0000118: Data source screen UI enhancements (0.8.5).\n-feature/bug#0000120: Deleting a tree header should delete all child items (0.8.4).\n-feature/bug#0000125: A forced sort type can be specified for data query indexes which will be used to sort data query results in the UI.\n-feature/bug#0000152: Added filter/search/pagination capabilities to the Devices page.\n-feature/bug#0000155: Allow hosts on the graph tree to be grouped by data query index (ie. switch port, partition, etc) instead of only graph template.\n-feature/bug#0000156: Added the ability to sort a graph tree branch alphabetically or numerically.\n-feature/bug#0000161: Removing a graph now gives the user the option to remove all associated data sources.\n-feature/bug#0000172: Added the ability to control which graph viewing areas should display thumbnail graphs and which ones should display full sized graphs.\n-feature/bug#0000185: Deleting a device gives the user the option of deleting all associated graphs and data sources.\n-feature/bug#0000187: Add host availability and device enabled/disable controls to the main devices page.\n-feature/bug#0000189: Add a system-wide defaults for SNMP community, version, port, timeout and retries configurable under 'Cacti Settings'.\n-feature/bug#0000192: Add the ability to log poller runtime statistics to the log.\n-feature/bug#0000194: Add host availability capability which allows Cacti to track of downed devices as well as a device's uptime history.\n-feature/bug#0000200: Implement three different auto re-index methods which allow Cacti to automatically 'refresh' a data query when an indexes changes.\n-feature/bug#0000213: Add a 'Clear' button to all filter forms which resets the form to its default state.\n-feature/bug#0000240: Add moonman's SIMILAR_DATA_SOURCES_NODUPS CDEF patch.\n-feature/bug#0000250: Allow host/graph tree items to change parents.\n-feature: Data query index types are now automatically selected which eliminates the need to prompt the user for this information at graph creation time.\n-feature: Better message handling on the \"New Graphs\" page.\n-feature: Get rid of the \"Data Input Method\" box from the data query edit screen as this data can be automatically derived.\n-feature: Customizable log levels.\n-feature: Ability to log to syslog (Unix) and event log (Windows) in addition to the log file.\n-feature: UDP/ICMP/SNMP ping support used to determine a host's availability status.\n-feature: A PHP script server which enables PHP script to be interpreted by the poller without spawning a separate PHP process for each item. See the manual for more details.\n-feature: Ability to choose the type of poller (cmd.php, cactid) and number of threads (cactid only) from the UI.\n-feature: Ability to spawn multiple simultaneous cmd.php/cactid processes to speed up the polling process.\n-feature: Allow data templates and data sources that use SNMP to override host fields (hostname, snmp port, etc) in the poller cache.\n-feature: Added Eric Steffen's Bonsai patch which enables users to zoom a graph by dragging a box around the area of interest.\n-feature: Added branix's graph export enhancements patch which adds many more graph export configuration options including remote FTP support.\n-feature: Ability to view/clear the log file from the console.\n-feature: Use a single RRDtool stdin pipe for all update, create, and graph export actions.\n-feature: Advanced timespan selector which provides a large number of presets and a calendar control for custom timespans.\n-feature: Better support for SNMP v2 from UI.  Speed up some UI queries.\n-feature: Enable/Disable Poller from UI.\n-feature: Added ifOperStatus to Graph Creation page to show either Up or Down.\n-feature: Rearchitected poller subsystem to prepare for multiple poller architecture in future releases.\n-feature: Added validation logic in the pollers to prevent system and log anomalies.\n-feature: Removed SNMP v3 options until SNMP v3 is supported.\n\n0.8.5a\n-bug#84: Updated internal CDEF caching to take CFs into account.\n-bug#86: Updated the LDAP code to correctly copy template users.\n-bug#136: Inaccurate total bandwidth readings for RRAs with a step > 1.\n-bug#138: Typo on install/index.php\n-bug#141: Incorrect pre-requisite file check when doing a graph export.\n-bug#142: Added the '-t' option when calling ucd-snmp or net-snmp to support numeric timeticks.\n-bug#145: phpMyAdmin was choking on the import of cacti.sql.\n-bug#146: Minor HTML fix in lib/form.php\n-bug: Fixed potential graph item input corruption when saving a graph template item.\n-bug: Fixed problem saving a data source using a template that had more than one item.\n-bug: Correctly display the console menu when authentication has been turned off.\n-bug: Correctly display the two pane tree when authentication has been turned off.\n-bug: Support regular expression characters in passwords: \\+*?[^]$(){}=!<>|:\n-bug: Fixed certain re-ordering problems when deleting branches from a graph tree.\n-bug: Add support for a 3 digit exponents in RRDtool fetch output on Windows.\n-bug: Correctly escape community strings with a quotation mark under Windows.\n-bug: 95th percentile and bandwidth summation code should result in less errors when things don't go as planned.\n-bug: Fix 'data_input_data_fcache' orphan when deleting a data source.\n-feature: Make the 'None' option on the graph management and data sources host filter dropdowns only display items with no host assigned. Add an 'Any' option to display items assigned to all hosts.\n-cactid: Fix segfault problems on all platforms when performing SNMP queries.\n-cactid: Fix deadlock issues on Windows and Solaris when making popen calls.\n\n0.8.5\n-bug#102: Fix problem with SNMP community strings that contain certain variable shell characters.\n-bug#103: Under \"New Graphs\", make sure to highlight the host template line when the right-hand checkbox is selected.\n-bug#104: Typo in the usage for the query_unix_partitions.pl script.\n-bug#105: On the data query edit page, only display compatible items in the \"Data Input Method\" dropdown.\n-bug#106: Render the main menu based on a user's permissions so graph-only users cannot see a list of menu options when attempting to view 'index.php'.\n-bug#109: Replaced all instances of 'ifDesc' with the correct 'ifDescr' when dealing with the IF MIB.\n-bug#110: Be smarter about redirecting the user to the correct page when the user's login option is set to \"Show the page that user pointed their browser to\".\n-bug#111: Take host permissions into account when rendering the left-hand pane in tree view.\n-bug#112: Every 10th tree item was not being displayed.\n-bug#115: Fixed a bunch of misspellings of the word 'substitute' throughout the code.\n-bug#116: Restructured the edit screens for CDEF items and tree items, making them less confusing to users.\n-bug#119: Added a \"Search:\" label to the filter textboxes on the \"Graph Management\" and \"Data Sources\" pages.\n-bug#127: Added an HTML \"title\" tag to the three graph mode images.\n-bug#129: Added support for correctly parsing timeticks in both cmd.php and cactid.\n-bug#130: Users are sometimes redirected to the incorrect host when selecting the \"Create Graphs for this Host\" link under \"Polling Hosts\".\n-bug#131: Load averages above '10' were not being returned correctly from the loadavg_multi.pl script.\n-bug#133: Non-SNMP data sources were not being removed from the poller cache when a host became 'disabled'.\n-bug#134: Make sure to delete associated 'host' tree items when deleting a host.\n-bug#135: Fix the navigation display so it doesn't display errors when directly linking to a graph.\n-bug#137: Remove the 'td.shadow' CSS class as it isn't being used and contains an incorrect image reference.\n-bug: Allow the user to enter a \"Unit Exponent Value\" of '0'.\n-bug: Remove all references to $_SERVER[\"HTTP_REFERER\"] for web servers that do not include this variable.\n-bug: Extend the \"Maximum JavaScript Rows\" feature to work for host templates as well.\n-bug: Fixed a few parsing problems that were causing problems for users including a '\\' or '/' in their script's input string.\n-bug: The correct representation of memory usage using net-snmp should be 'free memory + cache memory + buffered memory'.\n-bug: Fixed a problem importing CDEF items correctly from an XML file.\n-bug: Deleting a GPRINT preset now correctly displays the name of the item about to be removed.\n-bug: Problems importing XML that contained a host template with more than one associated graph template.\n-bug: Added a potential workaround for the PHP session/popen bug which occurs on Windows systems using PHP in ISAPI mode.\n-feature: Data query variables such as |query_ifAlias| can now be included on the actual graph in the \"Text Format\" or \"Value\" field.\n-feature: Added two new special data sources to CDEFs, which enable users to use the data source's maximum or minimum value in a CDEF.\n-feature: Added a new SNMP query source type, \"VALUE/REGEXP\", which enables users to parse the SNMP value with a regular expression before passing it onto Cacti.\n-feature: Hide the \"Console\" tab from users that only have rights to view graphs.\n-feature: Added a new 95th percentile type, \"max\", which calculates 95th percentile based on the maximum of either inbound or outbound for each sample. This is how most co-location facilities calculate 95th percentile for billing purposes.\n-feature: Update ADODB to version 4.05.\n-feature: Data source graph inputs are automatically added and maintained by Cacti for new graph templates as to reduce user confusion.\n-feature: The \"Graph Management\" and \"Data Sources\" edit pages are much improved when using a template.\n-feature: Renamed \"Polling Hosts\" to \"Devices\" since polling hosts technically implies that you are managing the hosts that poll data, which could be reserved for later use.\n-feature: If you enter a value for a \"host field\" in the data template, Cacti will use that value rather than always defaulting to the host. If you leave it blank, Cacti will use the value from the host.\n-feature: Data input method type codes 'snmp_timeout' and 'snmp_port' are now supported.\n-feature: Users will only see tabs for the graph viewing modes that they have access to.\n-doc: Completely re-written manual in SGML/Docbook so HTML, PDF, and ASCII versions of the manual are now possible. The new manual also includes a better introduction to Cacti for new users and makes use of screen shots to illustrate various portions of the user interface.\n-cactid: Fixed segfault problems using cactid on Solaris platforms.\n\n0.8.4\n-bug#87: Deleting top level branches without children on the tree caused ordering problems.\n-bug#88: Possibly popen/pclose concurrency problem with cactid.\n-bug#89: Missing \"check all\" checkbox on polling hosts page when an empty column was drawn.\n-bug#91: Fix undefined index errors on data source checkbox popups.\n-bug#92: Fix undefined index errors on graph management checkbox popups.\n-bug#96: Problems creating graphs from data queries where there was only row row total in the query result.\n-bug#97: Typo in cmd.php\n-bug#98: Creating a data source or graph with no host or template, would result in an extra empty item.\n-bug#99: Deleting a graph or data template that was still attached to one or more items would cause the graph/data source to appear to still have the deleted template still attached.\n-bug: Removed size limits on Linux memory data template.\n-bug: Undefined variable errors when creating new graphs/data sources without a template.\n-bug: multiple problems that caused the Windows disk space and CPU graphs to stop working.\n-bug: Broken images for bandwidth summation graphs that were less than a day old.\n-bug: Graph order changes on the tree would affect other graph trees.\n-bug: Problem with the \"Host MIB - Hard Drive Space\" data template that broke Windows disk spaces graphs.\n-bug: Fixed the LDAP authentication code, which was partially broken in 0.8.3.\n-bug: Fixed a cmd.php parsing problem when input and output fields are sharing the same name.\n-bug: Added basename() to all PHP_SELF references to make sure all hrefs stay absolute.\n-bug: The RRA field is now honored for the dual pane tree view.\n-bug: The |date_time| graph variable now displays the current day of the month.\n-feature: The \"Total All Items\" CDEF is now able to total NaN's without becoming 'U'.\n-feature: Data query results are now grayed out if they have already been created.\n-feature: The \"cacti Web Root\" and \"Web Server Document Root\" settings are completely auto-detected now.\n-feature: Add SNMP port and SNMP timeout fields to each host.\n-feature: Removed the \"Management IP\" field in polling hosts in favor of \"Hostname\".\n-feature: Re-organized the menus expand/contract for less used items to help save vertical space.\n-feature: Added complete template to XML import and export support.\n-feature: Moved the graph creation features of \"Polling Hosts\" to a new menu item,\"New Graphs\".\n-feature: Added verbose debugging support for data queries.\n-doc: Added a FAQ.\n-cactid: Removed lots of potential buffer overflows.\n-cactid: Several libz/openssl autoconf fixes that improve FreeBSD 5.x support.\n-cactid: Fixed some potential segfaults on FreeBSD when reading information from the targets table.\n-cactid: The snmp_get() function now respects the SNMP version chosen under \"Polling Hosts\", so 64-bit counters should work.\n\n0.8.3a\n-bug#81: Partial/complete poller cache rebuild failure after an upgrade.\n-bug#82: Undefined variable error messages under win32/IIS.\n-bug: Problems with overlapping graph permissions with multiple users.\n\n0.8.3\n-bug#50: When viewing a graph, only display it for the RRAs used on the graph.\n-bug#66: Users can see a list of all hosts in graph preview mode.\n-bug#71: Extra escape characters in the |date_time| variable output.\n-bug#72: Disk space graph for ucd/net was broken for original 0.8 users.\n-bug#75: Problems monitoring more than one CPU with query_host_cpu.php.\n-bug#76: Cactid segfault on Solaris caused by unchecked use of NULL with sprintf.\n-bug#77: Cactid segfault upon a MySQL connect error.\n-bug#79: Check for unique/valid data when the user selects a field to index their new data sources off of.\n-bug: Redirect user to the correct page after a forced password change.\n-bug: Problems entering negative numbers for upper/lower limit fields on graph pages.\n-bug: Never try to use internal SNMP support if SNMP version 2 or 3 is selected.\n-bug: Adding or removing data source items in a data template should update attached data sources as well.\n-bug: Problems updating certain fields when switching or turning off both graph and data templates.\n-bug: Got rid of the \"Use Per-Data Source Value\" checkbox where it isn't usable.\n-bug: Strange sequence/ordering behavior after updating an already created tree item.\n-bug: Error message displayed instead of 'Access Denied' message.\n-feature: Added host and graph template permissions for graph viewing users.\n-feature: Added a new 'dual pane' tree view type that draws the graph trees on a DHTML tree on the left side of the page.\n-feature: Added the ability to add hosts to a tree.\n-feature: Added a 'timespan' field to \"Round Robin Archives\" to determine the timespan (in seconds) of graphs using each RRA.\n-feature: Completely replaced the header images/layout for both the console and graph viewing pages\n-feature: Added a navigation bar in the header so you can keep track of you location in the UI.\n-feature: Added bandwidth summation support. See the manual for more information.\n-feature: Made the installer more verbose about SQL it runs during an upgrade.\n-cactid: Changed threading strategy to spawn threads based on hosts.\n-cactid: Created header files for each source file and moved precasts out of cactid.h.\n-cactid: A bunch of autoconf updates.\n\n0.8.2a\n-bug: Fixed various problems updating the poller cache.\n-bug: Fixed the Weatherbug script to work under Redhat 9.\n-cactid: Updated poller to use detached threads based on each host.\n\n0.8.2\n-bug#47: The 'cacti_server_os' variable is now auto-detected.\n-bug#56: Possible endless loop for non 0.8 users in version upgrade loop.\n-bug#57: Cacti does not take the 'graph_tree_id' column into account when re-ordering trees which can cause unexpected results.\n-bug#59: Regular expression bug that caused 'query_unix_partitions.pl' not to function on FreeBSD.\n-bug#60: Incorrect index OID in the (currently unused) 'host_disk.xml' SNMP query.\n-bug#61: Problems adding additional graph items to an input after the template is in use by graphs.\n-bug#64: Cactid now checks for the RRDtool path in the 'settings' table.\\\n-bug#67: Problems with wrapping and 'diskfree.pl'.\n-bug: Problems deleting GPRINT presets.\n-bug: Undefined variable errors on the graph settings page if built in user authentication was turned off.\n-bug: Kill cached field value when messages are displayed.\n-bug: Graph trees now honor the RRA selected when creating the tree (andyfud.org.nz)\n-bug: Graph and data source titles are now properly updated when making changes to graph or data templates.\n-bug: Unexpected results when trying to delete top level branches from a graph tree.\n-bug: Problems expanding/contracting trees when two or more nested branches had the hidden flag set.\n-feature: Added ability to turn off checks for an entire host.\n-feature: Added SNMP and operating system variable printout to the about page.\n-feature: Added 95th percentile support. See the manual for more information.\n-feature: Added setting for data query maximum field length.\n-cactid: Added downed host detection.\n-cactid: Code cleanup: formatting, compiler warnings, and removal of unused functions.\n-cactid: Daemon support has been removed from cactid for the time being, it must be run out of CRON.\n-cactid: Have autoconf detect net-snmp before trying ucd-snmp to prevent failure on default Redhat installs.\n\n0.8.1\n-bug#40: Fixed OIDs in serveral Netware data templates.\n-bug#41: Data source and graph names are lost when created from a  template.\n-bug#44: Fixed Host MIB logged in users OID in data template.\n-bug#46: Fixed an RRDtool/PHP binary variable mixup on the install page for win32 users.\n-bug#48: Changed the \"Create\" button on the settings page to \"Save\".\n-bug#52: Make sure the data source/graph names are pulled down after clicking \"Create\", so the user can press cancel.\n-bug: Changed references from $_SERVER[\"SCRIPT_NAME\"] to $_SERVER[\"PHP_SELF\"] because of strange behavior on PHP 4.3.2 under Windows.\n-bug: Make sure to filter on the \"cached title\" for on both the data sources and graph management pages.\n-bug: Fixed error when debug mode was on and the user tried to add a new graph or data source.\n-bug: Take tree permissions into account when displaying the \"Default Tree\" dropdown on the graph settings page.\n-bug: Incorrect graph title was displayed on graph tree delete confirmation.\n-bug: Win32: Graphs were being exported even when the graph export path was left blank.\n-bug: Exported graphs were displayed in the incorrect order.\n-bug: Legends were not displayed on exported graphs.\n-bug: HRULE items caused graphs to break.\n-feature: You can now use negative VRULE items, such as '-12:00' to display a line 12 hours ago.\n-bug: Data queries that had a non-integer index would not render graph/data source titles properly.\n-auth: LDAP authentication updates\n\n0.8\n-feature: Added support for graph, data source, and host templates.\n-feature: Added a stricter concept of hosts which enables better organization and easier graph creation.\n-feature: Created data queries which enable the retrieval of indexable data in the form of a query.\n-feature: Revised the entire UI creating more functional and attractive forms.\n-feature: New generic poller interface enables other pollers to handle the data gathering for Cacti.\n-feature: Added support for net-snmp 5.x.\n-docs: Revised the install documentation and re-wrote the manual for this version.\n-feature: The beginnings of a threaded c-based poller (cactid), which is not completely function at this point.\n-feature: And much much more...\n\n0.6.8a\n-bug: Unchecked string being passed to rrdtool caused a potential security problem.\n-bug: The logout funtionality was broken for some users because of a missing fourth argument.\n-bug: Fixed some SNMP parsing problems.\n-bug: Fixed a problem with using quotes for data source input.\n\n0.6.8\n-feature: Added the following new rrdtool graph options: --units-exponent value, --unit, and --logarithmic.\n-feature: Added the ability to show exact numbers in GPRINT, users can now specify a custom GPRINT string on a per-graph item basis.\n-bug: Any data input source with more than one output would be added as a multi-data source .rrd file.\n-bug: Some data source file name issues.\n-bug: Cacti now checks to see if a host exists when adding it to be graphed.\n-feature: There is now an optional \"remove verification\" for most of cacti's dialogs.\n-feature: There is a \"logout\" button when viewing graphs (not for the guest user).\n-docs: Updated the Win32 docs (thanks Larry).\n-bug: Fixed some rare HTML \"multipart/form\" bugs with PHP.\n-feature: Added a \"Default View Mode\" for each user when viewing graphs.\n-bug: Fixed some bugs where you would change a parent graph item to a child or a child graph item to a parent when graph grouping was turned on.\n-bug: Fixed some potential security bugs by eliminating cacti's use of cookies.\n\n0.6.7\n-feature: Added a \"none\" option for a data source when creating a CDEF. This can be used if you check the \"Use the current data source being used on the graph instead of a preset one\" box.\n-feature: Each user has a default graph policy: ALLOW or DENY for their graph permissions.\n-bug: Unique .rrd filename/data source name issues for SNMP \"Make Graph\" have been fixed.\n-feature: Changing the data source for a graph group parent will change the data sources for each of the child items.\n-bug: Logging has been fixed so errors do not show up in the Apache error_log any more.\n-bug: VRULE's work correctly now. Enter a time in the \"value\" field to use them, such as \"00:00\" or \"14:00\".\n-feature: If you select a graph to be added to the graph hierarchy, the \"This Item is a Graph\" checkbox is automatically selected.\n-docs: Install docs have been updated for Unix/Win32, documentation on upgrading cacti has been added. See the 'docs/' directory for more information.\n-bug: SNMP can function on win32/unix without snmpwalk/snmpget binaries. This will only work if you have php-snmp support compiled into both your php binary and web server modules. This is already the case for win32.\n-bug: A bug when more than one data source was created using the same data input source with multiple outputs has been fixed.\n-feature: The default install/upgrade screen has been revised.\n\n0.6.6\n-feature: Multiple data sources per .rrd is supported. To use this feature, simply create a data input source with multiple outputs that 'Update RRA'.\n-feature: Graph item grouping, which enables you to delete/reorder groups of similair graph items.\n-feature: Graph preview and output preview in the console, which allows you to preview what a graph will look like/what rrdtool's output is.\n-feature: Graph-based permissions have added, you can also show/hide certain hierarchies per user.\n-feature: Multiple data source per .rrd file support, read the docs for more information.\n-feature: You can now export graphs to static png's/html's every n times.\n-feature: By default, SNMP data source names come from <IP>_<IFNUM>, instead of just <IFDESC> which is more unique.\n-feature: More options for users such as where to go when the user logs in and whether the user can have their own settings or not.\n\n0.6.5\n-bug: Fixed some of the data source naming issues. You can now use any data source name you want; cacti will take care of making the name \"rrdtool friendly\".\n-feature: Cacti will use PHP's builtin SNMP support if detected, SNMP is overall faster now too. NOTE: PHP's SNMP support may not work with all of your MIB names, you may have to use the OID instead!\n-feature: Basic high speed counter support has been added, use 'hcin'/'hcout' to use it. Also may not work with PHP's builtin SNMP support yet.\n-bug: Using the MAX consolidation function with graph data works better now. You can make graphs that look like the MRTG ones (5 minute maximum). This code still needs a little work though.\n\n0.6.4\n-bug: You can now add the same CDEF to multiple data sources in the same graph.\n-feature: Ability to \"sync\" changes with the .rrd file with rrdtool's TUNE function. Cacti also tries to fill in internal data source path and name information to keep graphs from \"breaking\" when possible.\n-settings: You can now change the PHP Binary path from within cacti.\n-feature: Cacti can now export static images/html files when it gathers data like MRTG did.\n-feature: Multiple graph hierarchies are supported.\n-feature: You can now \"zoom in\" on any portion of the graph hierarchy by clicking on a header item.\n-bug: Some changes were made to make cacti more win32 complaint; a tutorial on how to setup cacti on win32 can be found on the raXnet page.\n-feature: You can now create all graphs for an SNMP host with one click.\n-feature: You can customize the graph title when creating graphs using the 'Make Graph' or 'Make All Graphs' link.\n-feature: Data sources in cacti are no longer limited to 19 characters. If you create a data source name that rrdtool will not like, cacti will automatically modify the name and save it internally for rrdtool-only use.\n\n0.6.3\n-feature: Put limits (HTML 'maxlength') on fields that have a maximum length.\n-feature: Added 'cacti Settings' and 'User Administration' to the cacti menu.\n-feature: Added a 'Step' field for Data Sources to graph data at non-300 second intervals.\n-feature: Added a '--rigid' on/off option, plus the ability to choose between '--alt-autoscale' and '--alt-autoscale-max' when using auto scale.\n-feature: Added a 'Base Value' field to the graphs to adjust how the vertical axis is displayed.\n-feature: Updated the menu/header graphics for a smoother look and easier navigation.\n-feature: cacti now stores its settings in the database instead of config.php, so they can be manipulated under 'cacti Settings'. Database credentials are still located in config.php however.\n-feature: Added a preview of the rrdtool source when creating data sources.\n-feature: Added a \"data source duplicate\" function and moved \"graph duplicate\" to \"Graphs\" on the cacti menu.\n-settings: You can now turn on/off cacti's builtin authentication.\n-settings: You can control what is logged (create, graph, snmp, update).\n-feature: Added a \"Total All Data Sources\" CDEF, which can be used to represent the total of all of the data on a graph.\n-bug: Fixed a few add/edit/delete form-related bugs.\n-docs: Added some more content to the documentation and made it more visible from within cacti.\n\n0.6.2\n-bug: Fixed some bugs when creating CDEF's using multiple data sources.\n-bug: Fixed more SNMP parsing bugs with some versions of net-snmp.\n-feature: added an \"auto-refresh\" feature to the graphs (thanks Nossie).\n-bug: HRULE's and VRULE's acually work now.\n-docs: the beginnings of some real documentation.\n-bug: you can select the color black now.\n\n0.6.1\n-bug: Fixed a parsing bug with snmp, more parsing is done in cacti's code and not via arguments passed to snmpget.\n-auth: Updated the function used to hash passwords (more compatible with older MySQL versions), more strict on document caching.\n-feature: Easier installation: cacti now checks for common problems and gives suggestions. Database updates are also done at this time.\n-bug: Fixed a problem with adding new data input sources.\n-bug: Problem saving the wrong numbers for 'Round Robin Archives'.\n-feature: Ability to preview the output of the cron script from a web browser under 'Cron Printout'.\n-feature: Added 'Logout User' to the menu.\n-bug: Removed some occurances of /var/www/html and replaced them with more dynamic variables.\n\n0.6\n-new tree code\n-some html table issues in graph view mode\n-fixed the settings code for saved graph-view data\n\n0.5\n-initial release\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* include ldap support */\ninclude_once(__DIR__ . '/lib/ldap.php');\n\n/* set default action */\nset_default_action();\n\n/**\n * get the username from the post variable\n * For all but basic, this means that two post variables must be\n * set.  Additionally, for basic authentication verify the user,\n * and if not valid generate a fatal error.\n */\n$username = auth_get_username(); // Get the username from either basic auth or the login form\n$version  = get_cacti_version(); // Get the current Cacti version\n\n/* initialize some variables */\n$user          = array();                             // An array that will include all user details\n$user_enabled  = true;                                // A variable to let plugins know that the user is enabled\n$guest_user    = false;                               // Indicates the Guest account is being used\n$realm         = 0;                                   // The compensated realm used for template and user validation\n$frv_realm     = get_nfilter_request_var('realm', 0); // The dropdown value for realm\n$auth_method   = read_config_option('auth_method');   // The authentication method for Cacti\n$error         = false;                               // Global variable, will be true if any errors occur\n$error_msg     = '';                                  // The errors message in case there was a login error\n\n/* global variables for exception handling */\nglobal $error, $error_msg;\n\nif (get_nfilter_request_var('action') == 'login' || $auth_method == 2) {\n\tif ($auth_method > 2 && $frv_realm <= 1) {\n\t\t// User picked 'local' from dropdown;\n\t\t$auth_method = 1;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\t// Compensate as the dropdown for LDAP is off by one\n\tif ($frv_realm == 2) {\n\t\t$realm = 3;\n\t} elseif ($auth_method == 2) {\n\t\t$realm = $auth_method;\n\t} else {\n\t\t$realm = $frv_realm;\n\t}\n\n\tcacti_log(\"DEBUG: User '\" . $username . \"' attempting to login with realm \". $frv_realm . \", using method \" . $auth_method, false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\tswitch ($auth_method) {\n\t\tcase '0': // No authentication, should not be reachable\n\t\t\t$error     = true;\n\t\t\t$error_msg = __esc('Cacti no longer supports No Authentication mode. Please contact your System Administrator.');\n\n\t\t\tcacti_log(\"FATAL: No authentication attempted and not supported.\", false, 'AUTH');\n\n\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\texit;\n\n\t\t\tbreak;\n\t\tcase '1': // Local authentication\n\t\t\tcacti_log(\"DEBUG: Local User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = local_auth_login_process($username);\n\n\t\t\tbreak;\n\t\tcase '2': // Basic authentication\n\t\t\tcacti_log(\"DEBUG: Basic Auth User '\" . $username . \"' attempting to login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = basic_auth_login_process($username);\n\n\t\t\tbreak;\n\t\tcase '3': // LDAP Authentication\n\t\t\tcacti_log(\"DEBUG: LDAP User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = ldap_login_process($username);\n\n\t\t\tbreak;\n\t\tcase '4': // LDAP Domains login\n\t\t\tcacti_log(\"DEBUG: Domains User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = domains_login_process($username);\n\n\t\t\tbreak;\n\t\tdefault: // Login Realm not determined\n\t\t\t$error     = true;\n\t\t\t$error_msg = __esc('Unable to determine user Login Realm or Domain. Please contact your System Administrator.');\n\n\t\t\tcacti_log(\"LOGIN FAILED: User '\" . $username . \"' Unable to determine Login Realm.  Exiting.\", false, 'AUTH');\n\n\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\texit;\n\n\t\t\tbreak;\n\t}\n\n\t/* Create user from template if available */\n\tif (!$error && !cacti_sizeof($user) && get_template_account($username) > 0 && $username != '') {\n\t\t$user = auth_login_create_user_from_template($username, $realm);\n\t}\n\n\t/* Guest account checking - Not for builtin */\n\tif (!$error && !cacti_sizeof($user) && get_guest_account() > 0) {\n\t\t/* Locate guest user record */\n\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_guest_account()));\n\n\t\tif ($user) {\n\t\t\tcacti_log(\"LOGIN: Authenticated user '\" . $username . \"' using guest account '\" . $user['username'] . \"'\", false, 'AUTH');\n\n\t\t\tif ($username != '' && get_template_account($username) == 0) {\n\t\t\t\traise_message('template_disabled', __('User was Authenticated, but the Template Account is disabled.  Using Guest Account'), MESSAGE_LEVEL_WARN);\n\t\t\t}\n\n\t\t\t$guest_user = true;\n\t\t} else {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  Guest user id %s does not exist.  Please contact your Administrator.', read_config_option('guest_user'));\n\n\t\t\tcacti_log(\"LOGIN FAILED: Unable to locate guest user '\" . read_config_option('guest_user') . \"'\", false, 'AUTH');\n\n\t\t\tif ($auth_method == 2) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* We have a valid user, do final checks, log their login attempt, and redirect as required */\n\tif (!$error && cacti_sizeof($user)) {\n\t\tif (!$guest_user) {\n\t\t\tcacti_log(\"LOGIN: User '\" . $user['username'] . \"' authenticated\", false, 'AUTH');\n\t\t} else {\n\t\t\tcacti_log(\"LOGIN: Guest User '\" . $user['username'] . \"' in use\", false, 'AUTH');\n\t\t}\n\n\t\t$client_addr = get_client_addr();\n\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t(username, user_id, result, ip, time)\n\t\t\tVALUES (?, ?, 1, ?, NOW())',\n\t\t\tarray($username, $user['id'], $client_addr));\n\n\t\t/* check if the user account is enabled with the exception of guest users */\n\t\t$user_enabled = true;\n\t\tif (!$guest_user && isset($user['enabled'])) {\n\t\t\t$user_enabled = ($user['enabled'] == 'on' ? true:false);\n\t\t}\n\n\t\t/* check if the user is enabled */\n\t\tif (!$user_enabled) {\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  User account disabled.');\n\n\t\t\tif ($auth_method == 2) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\tif (!$error && !auth_user_has_access($user)) {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('You do not have access to any area of Cacti.  Contact your administrator.');\n\n\t\t\tcacti_log(sprintf(\"LOGIN FAILED: User %s with id %s does not have access to any area of Cacti.\", $user['username'], $user['id']), false, 'AUTH');\n\n\t\t\tif ($auth_method == 2) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t/* remember me support.  Not for guest of basic auth */\n\t\tif ($auth_method != 2 && $user['id'] !== get_guest_account()) {\n\t\t\tif (!$error && isset_request_var('remember_me') && read_config_option('auth_cache_enabled') == 'on') {\n\t\t\t\tset_auth_cookie($user);\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t/* set the php session */\n\t\t\t$_SESSION['sess_user_id'] = $user['id'];\n\n\t\t\t/* handle 'force change password' */\n\t\t\tif ($user['must_change_password'] == 'on' && $auth_method == 1 && $user['password_change'] == 'on') {\n\t\t\t\t$_SESSION['sess_change_password'] = true;\n\t\t\t}\n\n\t\t\tif (db_table_exists('user_auth_group')) {\n\t\t\t\t$group_options = db_fetch_cell_prepared('SELECT MAX(login_opts)\n\t\t\t\t\tFROM user_auth_group AS uag\n\t\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\t\tON uag.id=uagm.group_id\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND login_opts != 4',\n\t\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\t\tif (!empty($group_options)) {\n\t\t\t\t\t$user['login_opts'] = $group_options;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (user_setting_exists('user_language', $_SESSION['sess_user_id'])) {\n\t\t\t\t$_SESSION['sess_user_language'] = read_user_setting('user_language');\n\t\t\t}\n\n\t\t\tcacti_log(\"DEBUG: User '\" . $username . \"' about to re-direct to preferred login page\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tauth_login_redirect($user['login_opts']);\n\t\t}\n\t} else {\n\t\t$id = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = ?',\n\t\t\tarray($username, $frv_realm));\n\n\t\tswitch($frv_realm) {\n\t\t\tcase '0':\n\t\t\tcase '1':\n\t\t\t\t$realm_name = 'Local';\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\t\t$realm_name = 'LDAP';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$realm_name = 'Domains LDAP';\n\t\t\t\tbreak;\n\t\t}\n\n\t\t/* BAD username/password builtin and LDAP */\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t(username, user_id, result, ip, time)\n\t\t\tVALUES (?, ?, 0, ?, NOW())',\n\t\t\tarray($username, !empty($id) ? $id:0, get_client_addr()));\n\n\t\tcacti_log('LOGIN FAILED: ' . $realm_name . \" Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr() . \"'.\", false, 'AUTH');\n\t}\n}\n\nif (api_plugin_hook_function('custom_login', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\treturn;\n}\n\n$selectedTheme = get_selected_theme();\n\n?>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n\t<?php html_common_header(api_plugin_hook_function('login_title', __('Login to Cacti')));?>\n</head>\n<body class='loginBody'>\n\t<div class='loginLeft'></div>\n\t<div class='loginCenter'>\n\t<div class='loginArea'>\n\t\t<div class='cactiLoginLogo'></div>\n\t\t\t<legend><?php print __('User Login');?></legend>\n\t\t\t<form id='login' name='login' method='post' action='<?php print get_current_page();?>'>\n\t\t\t\t<input type='hidden' name='action' value='login'>\n\t\t\t\t<?php api_plugin_hook_function('login_before',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'error'        => $error,\n\t\t\t\t\t\t'error_msg'    => $error_msg,\n\t\t\t\t\t\t'username'     => $username,\n\t\t\t\t\t\t'user_enabled' => $user_enabled,\n\t\t\t\t\t\t'action'       => get_nfilter_request_var('action')\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t?>\n\t\t\t\t<div class='loginTitle'>\n\t\t\t\t\t<p><?php print __('Enter your Username and Password below');?></p>\n\t\t\t\t</div>\n\t\t\t\t<div class='cactiLogin'>\n\t\t\t\t\t<table class='cactiLoginTable'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_username'><?php print __('Username');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='login_username' name='login_username' value='<?php print html_escape($username); ?>' placeholder='<?php print __esc('Username');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='login_password'><?php print __('Password');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='password' autocomplete='new-password' class='ui-state-default ui-corner-all' id='login_password' name='login_password' placeholder='********'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif (read_config_option('auth_method') == '3' || read_config_option('auth_method') == '4') {\n\t\t\t\t\t\t\tif (read_config_option('auth_method') == '3') {\n\t\t\t\t\t\t\t\t$realms = api_plugin_hook_function('login_realms',\n\t\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\t\t'1' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => __('Local'),\n\t\t\t\t\t\t\t\t\t\t\t'selected' => false\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t'2' => array(\n\t\t\t\t\t\t\t\t\t\t\t'name' => __('LDAP'),\n\t\t\t\t\t\t\t\t\t\t\t'selected' => true\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$realms = get_auth_realms(true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// try and remember previously selected realm\n\t\t\t\t\t\t\tif ($frv_realm && array_key_exists($frv_realm, $realms)) {\n\t\t\t\t\t\t\t\tforeach ($realms as $key => $realm) {\n\t\t\t\t\t\t\t\t\t$realms[$key]['selected'] = ($frv_realm == $key);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<label for='realm'><?php print __('Realm');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<select id='realm' name='realm' class='ui-state-default ui-corner-all'><?php\n\t\t\t\t\t\t\t\t\tif (cacti_sizeof($realms)) {\n\t\t\t\t\t\t\t\t\t\tforeach($realms as $index => $realm) {\n\t\t\t\t\t\t\t\t\t\t\tprint \"\\t\\t\\t\\t\\t<option value='\" . $index . \"'\" . ($realm['selected'] ? ' selected=\"selected\"':'') . '>' . html_escape($realm['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } if (read_config_option('auth_cache_enabled') == 'on') { ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t<input style='vertical-align:-3px;' type='checkbox' id='remember_me' name='remember_me' <?php print (isset($_COOKIE['cacti_remembers']) || !isempty_request_var('remember_me') ? 'checked':'');?>>\n\t\t\t\t\t\t\t\t<label for='remember_me'><?php print __('Keep me signed in');?></label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='2'>\n\t\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Login');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t<?php api_plugin_hook('login_after'); ?>\n\t\t\t</form>\n\t\t\t<div class='loginErrors'>\n\t\t\t\t<?php\n\t\t\t\tif ($error) {\n\t\t\t\t\tprint $error_msg;\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class='versionInfo'><?php print __('Version %1$s | %2$s', $version, COPYRIGHT_YEARS_SHORT);?></div>\n\t</div>\n\t<div class='loginRight'></div>\n\t<script type='text/javascript'>\n\tvar storage = Storages.localStorage;\n\n\t$(function() {\n\t\tif (storage.isSet('user_realm')) {\n\t\t\tvar preferredRealm = storage.get('user_realm');\n\t\t} else {\n\t\t\tvar preferredRealm = null;\n\t\t}\n\n\t\tif (preferredRealm == null) {\n\t\t\tpreferredRealm = $('#realm option:selected').val();\n\t\t}\n\n\t\t// Restore the preferred realm\n\t\tif ($('#realm').length) {\n\t\t\tif (preferredRealm !== null) {\n\t\t\t\t$('#realm').val(preferredRealm);\n\t\t\t\tif ($('#realm').selectmenu('instance') !== undefined) {\n\t\t\t\t\t$('#realm').selectmenu('refresh');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Control submit in order to store preferred realm\n\t\t$('#login').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tif ($('#realm').length) {\n\t\t\t\tstorage.set('user_realm', $('#realm').val());\n\t\t\t}\n\t\t\t$('#login').off('submit').trigger('submit');\n\t\t});\n\n\t\t$('body').css('height', $(window).height());\n\t\t$('.loginLeft').css('width',parseInt($(window).width()*0.33)+'px');\n\t\t$('.loginRight').css('width',parseInt($(window).width()*0.33)+'px');\n<?php if (empty($username)) { ?>\n\t\t$('#login_username').focus();\n<?php } else { ?>\n\t\t$('#login_password').focus();\n<?php } ?>\n\t});\n\t</script>\n\t<?php include_once(__DIR__ . '/include/global_session.php');?>\n</body>\n</html>\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2020 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/*\n * Make sure these values reflect your actual database/host/user/password\n */\n\n$database_type     = 'mysql';\n$database_default  = 'cacti';\n$database_hostname = 'localhost';\n$database_username = 'cactiuser';\n$database_password = 'cactiuser';\n$database_port     = '3306';\n$database_retries  = 5;\n$database_ssl      = false;\n$database_ssl_key  = '';\n$database_ssl_cert = '';\n$database_ssl_ca   = '';\n$database_persist  = false;\n\n/*\n * When the cacti server is a remote poller, then these entries point to\n * the main cacti server. Otherwise, these variables have no use and\n * must remain commented out.\n */\n\n#$rdatabase_type     = 'mysql';\n#$rdatabase_default  = 'cacti';\n#$rdatabase_hostname = 'localhost';\n#$rdatabase_username = 'cactiuser';\n#$rdatabase_password = 'cactiuser';\n#$rdatabase_port     = '3306';\n#$rdatabase_retries  = 5;\n#$rdatabase_ssl      = false;\n#$rdatabase_ssl_key  = '';\n#$rdatabase_ssl_cert = '';\n#$rdatabase_ssl_ca   = '';\n\n/*\n * The poller_id of this system.  set to `1` for the main cacti web server.\n * Otherwise, you this value should be the poller_id for the remote poller.\n */\n\n$poller_id = 1;\n\n/*\n * Set the $url_path to point to the default URL of your cacti install.\n * For example if your cacti install as at `https://serverip/cacti/` this\n * would be set to `/cacti/`.\n */\n\n$url_path = '/cacti/';\n\n/*\n * Default session name - session name must contain alpha characters\n */\n\n$cacti_session_name = 'Cacti';\n\n/*\n * Default Cookie domain - The cookie domain to be used for Cacti\n */\n\n//$cacti_cookie_domain = 'cacti.net';\n\n/*\n * Save sessions to a database for load balancing\n */\n\n$cacti_db_session = false;\n\n/*\n * Disable log rotation settings for packagers\n */\n\n$disable_log_rotation = false;\n\n/*\n * Optional parameters to define scripts and resource paths. These\n * variables become important when using remote poller installs when the\n * scripts and resource files are not in the main Cacti web server path.\n */\n\n//$scripts_path = '/var/www/html/cacti/scripts';\n//$resource_path = '/var/www/html/cacti/resource/';\n\n/*\n * Optional parameter to define a data input whitelist command string. This\n * whitelist file will help protect cacti from unauthorized changes to Cacti\n * data input command string.\n */\n\n//$input_whitelist = '/usr/local/etc/cacti/input_whitelist.json';\n\n/*\n * Optional parameter to give explicit path to PHP\n */\n//$php_path = '/bin/php';\n\n/*\n * Optional parameter to disable the PHP SNMP extension. If not set, defaults\n * to class_exists('SNMP').\n */\n\n//$php_snmp_support = false;\n\n/*\n * Optional parameter to define the path of the csrf_secret.php path.  This\n * variable is for packagers who wish to specify an alternate location of\n * the CRSF secret file.\n */\n\n//$path_csrf_secret = '/usr/share/cacti/resource/csrf-secret.php';\n\n/*\n * The following are optional variables for debugging low level system\n * functions that are generally only used by Cacti Developers to help\n * identify potential issues in commonly used functions\n *\n * To use them, uncomment and the equivalent field will be set in the\n * $config variable allowing for instant on but still allowing the\n * ability to fine turn and turn them off.\n */\n\n/*\n * Debug the read_config_option program flow\n */\n# define('DEBUG_READ_CONFIG_OPTION', true);\n\n/*\n * Automatically suppress the DEBUG_READ_CONFIG_OPTION\n */\n# define('DEBUG_READ_CONFIG_OPTION_DB_OPEN', true);\n\n/*\n * Always write the SQL command to the cacti log file\n */\n# define('DEBUG_SQL_CMD', true);\n\n/*\n * Debug the flow of calls to the db_xxx functions that\n * are defined in lib/database.php\n */\n# define('DEBUG_SQL_FLOW', true);\n\n/*\n * Allow the use of Proxy IPs when searching for client\n * IP to be used\n *\n * This can be set to one of the following:\n *   - false: to use only REMOTE_ADDR\n *   - true: to use all allowed headers (not advised)\n *   - array of one or more the following:\n *\t\t'X-Forwarded-For',\n *\t\t'X-Client-IP',\n *\t\t'X-Real-IP',\n *\t\t'X-ProxyUser-Ip',\n *\t\t'CF-Connecting-IP',\n *\t\t'True-Client-IP',\n *\t\t'HTTP_X_FORWARDED',\n *\t\t'HTTP_X_FORWARDED_FOR',\n *\t\t'HTTP_X_CLUSTER_CLIENT_IP',\n *\t\t'HTTP_FORWARDED_FOR',\n *\t\t'HTTP_FORWARDED',\n *\t\t'HTTP_CLIENT_IP',\n *\n * NOTE: The following will always be checked:\n *\t\t'REMOTE_ADDR',\n */\n$proxy_headers = null;\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/*\n   !!! IMPORTANT !!!\n\n   The following defaults are not to be altered.  Please refer to\n   include/config.php for user configurable settings.\n\n*/\n\n/* load cacti version from file */\n$cacti_version_file = dirname(__FILE__) . '/cacti_version';\n\nif (! file_exists($cacti_version_file)) {\n\tdie ('ERROR: failed to find cacti version file');\n}\n\n$cacti_version = file_get_contents($cacti_version_file, false);\nif ($cacti_version === false) {\n\tdie ('ERROR: failed to load cacti version file');\n}\n$cacti_version = trim($cacti_version);\n\n/* define cacti version */\ndefine('CACTI_VERSION', $cacti_version);\n#define('CACTI_VERSION_BETA', 1);\n\n/* define if cacti is in CLI mode */\ndefine('CACTI_CLI', (php_sapi_name() == 'cli'));\nif (defined('CACTI_CLI_ONLY') && !CACTI_CLI) {\n\tdie('<br><strong>This script is only meant to run at the command line.</strong>');\n}\n\n// define documentation table of contents\ndefine('CACTI_DOCUMENTATION_TOC', 'docs/Table-of-Contents.html');\n\n/* Default database settings*/\n$database_type     = 'mysql';\n$database_default  = 'cacti';\n$database_hostname = 'localhost';\n$database_username = 'cactiuser';\n$database_password = 'cactiuser';\n$database_port     = '3306';\n$database_retries  = 2;\n\n$database_ssl      = false;\n$database_ssl_key  = '';\n$database_ssl_cert = '';\n$database_ssl_ca   = '';\n$database_persist  = true;\n\n/* Default session name - Session name must contain alpha characters */\n$cacti_session_name = 'Cacti';\n\n/* define default url path */\n$url_path = '/cacti/';\n\n/* disable log rotation setting */\n$disable_log_rotation = false;\n\n$config = array();\n\n/* Include configuration, or use the defaults */\nif (file_exists(dirname(__FILE__) . '/config.php')) {\n\tif (!is_readable(dirname(__FILE__) . '/config.php')) {\n\t\tdie('Configuration file include/config.php is present, but unreadable.' . PHP_EOL);\n\t}\n\tinclude(dirname(__FILE__) . '/config.php');\n}\n\nif (isset($config['cacti_version'])) {\n\tdie('Invalid include/config.php file detected.' . PHP_EOL);\n\texit;\n}\n\n/* Should we allow proxy ip headers? */\n$config['proxy_headers'] = $proxy_headers ?? null;\n\n/* Set the poller_id */\nif (isset($poller_id)) {\n\t$config['poller_id'] = $poller_id;\n} else {\n\t$config['poller_id'] = 1;\n}\n\n$db_var_defaults = array(\n\t'database_type'     => 'mysql',\n\t'database_default'  => NULL,\n\t'database_hostname' => NULL,\n\t'database_username' => NULL,\n\t'database_password' => NULL,\n\t'database_port'     => '3306',\n\t'database_retries'  => 2,\n\t'database_ssl'      => false,\n\t'database_ssl_key'  => '',\n\t'database_ssl_cert' => '',\n\t'database_ssl_ca'   => '',\n);\n\n$db_var_prefixes = array('');\nif ($config['poller_id'] > 1 || isset($rdatabase_hostname)) {\n\t$db_var_prefixes[] = 'r';\n}\n\n$db_missing_vars = '';\nforeach ($db_var_prefixes as $db_var_prefix) {\n\tforeach ($db_var_defaults as $db_var_name => $db_var_default) {\n\t\t$db_var_full = $db_var_prefix . $db_var_name;\n\t\tif (!isset($$db_var_full)) {\n\t\t\tif ($db_var_default !== NULL) {\n\t\t\t\t$$db_var_full = $db_var_default;\n\t\t\t} else {\n\t\t\t\t$db_missing_vars .= (($db_missing_vars == '') ? 'missing ' : ', ') . $db_var_full;\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (!empty($db_missing_vars)) {\n\tdie(\"config.php is $db_missing_vars\" . PHP_EOL);\n}\n\nif (empty($url_path)) {\n\t/* define default url path */\n\t$url_path = '/';\n}\n\n/* set the local for international users */\nsetlocale(LC_CTYPE, 'en_US.UTF-8');\n\n/* Files that do not need http header information - Command line scripts */\n$no_http_header_files = array(\n\t'add_device.php',\n\t'add_graphs.php',\n\t'add_perms.php',\n\t'add_tree.php',\n\t'boost_rrdupdate.php',\n\t'cmd.php',\n\t'cmd_realtime.php',\n\t'copy_user.php',\n\t'host_update_template.php',\n\t'poller_automation.php',\n\t'poller_boost.php',\n\t'poller_commands.php',\n\t'poller_dsstats.php',\n\t'poller_export.php',\n\t'poller_graphs_reapply_names.php',\n\t'poller_maintenance.php',\n\t'poller_output_empty.php',\n\t'poller.php',\n\t'poller_realtime.php',\n\t'poller_recovery.php',\n\t'poller_reindex_hosts.php',\n\t'poller_reports.php',\n\t'poller_spikekill.php',\n\t'query_host_cpu.php',\n\t'query_host_partitions.php',\n\t'rebuild_poller_cache.php',\n\t'repair_database.php',\n\t'script_server.php',\n\t'snmpagent_mibcachechild.php',\n\t'snmpagent_mibcache.php',\n\t'snmpagent_persist.php',\n\t'sql.php',\n\t'ss_host_cpu.php',\n\t'ss_host_disk.php',\n\t'ss_sql.php',\n\t'structure_rra_paths.php',\n);\n\n$colors = array();\n\n/* this should be auto-detected, set it manually if needed */\n$config['cacti_server_os'] = (strstr(PHP_OS, 'WIN')) ? 'win32' : 'unix';\n\nif (!empty($path_csrf_secret)) {\n\t$config['path_csrf_secret'] = $path_csrf_secret;\n}\n\n/* built-in snmp support */\nif ((isset($php_snmp_support) && $php_snmp_support == false) || !function_exists('snmpget')) {\n\t$config['php_snmp_support'] = false;\n} else {\n\t$config['php_snmp_support'] = class_exists('SNMP');\n}\n\n/* PHP binary location */\nif (isset($php_path)) {\n\t$config['php_path'] = $php_path;\n}\n\n/* Set various debug fields */\n$config['DEBUG_READ_CONFIG_OPTION']         = defined('DEBUG_READ_CONFIG_OPTION');\n$config['DEBUG_READ_CONFIG_OPTION_DB_OPEN'] = defined('DEBUG_READ_CONFIG_OPTION_DB_OPEN');\n$config['DEBUG_SQL_CMD']                    = defined('DEBUG_SQL_CMD');\n$config['DEBUG_SQL_FLOW']                   = defined('DEBUG_SQL_FLOW');\n\n/* check for an empty database port */\nif (empty($database_port)) {\n\t$database_port = '3306';\n}\n\n/* set URL path */\nif (!isset($url_path)) {\n\t$url_path = '';\n}\n$config['url_path'] = $url_path;\ndefine('URL_PATH', $url_path);\n\n/* used for includes */\nif ($config['cacti_server_os'] == 'win32') {\n\t$config['base_path']    = str_replace(\"\\\\\", \"/\", substr(dirname(__FILE__),0,-8));\n\t$config['library_path'] = $config['base_path'] . '/lib';\n} else {\n\t$config['base_path']    = preg_replace(\"/(.*)[\\/]include/\", \"\\\\1\", dirname(__FILE__));\n\t$config['library_path'] = preg_replace(\"/(.*[\\/])include/\", \"\\\\1lib\", dirname(__FILE__));\n}\n$config['include_path'] = dirname(__FILE__);\n$config['rra_path'] = $config['base_path'] . '/rra';\n\n/* for multiple pollers, we need to know this location */\nif (!isset($scripts_path)) {\n\t$config['scripts_path'] = $config['base_path'] . '/scripts';\n} else {\n\t$config['scripts_path'] = $scripts_path;\n}\n\nif (!isset($resource_path)) {\n\t$config['resource_path'] = $config['base_path'] . '/resource';\n} else {\n\t$config['resource_path'] = $resource_path;\n}\n\nif (isset($input_whitelist)) {\n\t$config['input_whitelist'] = $input_whitelist;\n}\n\n/* include base modules */\ninclude_once($config['library_path'] . '/database.php');\ninclude_once($config['library_path'] . '/functions.php');\ninclude_once($config['include_path'] . '/global_constants.php');\ninclude_once($config['library_path'] . '/html.php');\ninclude_once($config['library_path'] . '/html_utility.php');\ninclude_once($config['library_path'] . '/html_validate.php');\n\n$filename = get_current_page();\n\n$config['is_web'] = !defined('CACTI_CLI_ONLY');\nif ((isset($no_http_headers) && $no_http_headers == true) || in_array($filename, $no_http_header_files, true)) {\n\t$config['is_web'] = false;\n}\n\n/* set poller mode */\nglobal $local_db_cnn_id, $remote_db_cnn_id, $conn_mode;\n\n$config['connection'] = 'online';\n\nif ($config['poller_id'] > 1 || isset($rdatabase_hostname)) {\n\t$local_db_cnn_id = db_connect_real($database_hostname, $database_username, $database_password, $database_default, $database_type, $database_port, $database_retries, $database_ssl, $database_ssl_key, $database_ssl_cert, $database_ssl_ca);\n\n\tif (!isset($rdatabase_retries))  $rdatabase_retries  = 2;\n\tif (!isset($rdatabase_ssl))      $rdatabase_ssl      = false;\n\tif (!isset($rdatabase_ssl_key))  $rdatabase_ssl_key  = false;\n\tif (!isset($rdatabase_ssl_cert)) $rdatabase_ssl_cert = false;\n\tif (!isset($rdatabase_ssl_ca))   $rdatabase_ssl_ca   = false;\n\n\t// Check for recovery\n\tif (is_object($local_db_cnn_id)) {\n\t\t$boost_records = db_fetch_cell('SELECT COUNT(*)\n\t\t\tFROM poller_output_boost', '', true, $local_db_cnn_id);\n\n\t\tif ($boost_records > 0) {\n\t\t\t$config['connection'] = 'recovery';\n\t\t}\n\t}\n\n\t/* gather the existing cactidb version */\n\t$config['cacti_db_version'] = db_fetch_cell('SELECT cacti FROM version LIMIT 1', false, $local_db_cnn_id);\n\n\t/**\n\t * If we have not been forced offline by the $conn_mode global and since we are\n\t * a remote poller, let's attempt to get back online.\n\t */\n\tif ($conn_mode != 'offline') {\n\t\t$remote_db_cnn_id = db_connect_real($rdatabase_hostname, $rdatabase_username, $rdatabase_password, $rdatabase_default, $rdatabase_type, $rdatabase_port, $database_retries, $rdatabase_ssl, $rdatabase_ssl_key, $rdatabase_ssl_cert, $rdatabase_ssl_ca);\n\t}\n\n\tif ($config['is_web'] && is_object($remote_db_cnn_id) &&\n\t\t$config['connection'] != 'recovery' &&\n\t\t$config['cacti_db_version'] != 'new_install') {\n\n\t\t// Connection worked, so now override the default settings so that it will always utilize the remote connection\n\t\t$database_default   = $rdatabase_default;\n\t\t$database_hostname  = $rdatabase_hostname;\n\t\t$database_username  = $rdatabase_username;\n\t\t$database_password  = $rdatabase_password;\n\t\t$database_port      = $rdatabase_port;\n\t\t$database_ssl       = $rdatabase_ssl;\n\t\t$database_ssl_key   = $rdatabase_ssl_key;\n\t\t$database_ssl_cert  = $rdatabase_ssl_cert;\n\t\t$database_ssl_ca    = $rdatabase_ssl_ca;\n\t} elseif (is_object($remote_db_cnn_id)) {\n\t\tif ($config['connection'] != 'recovery') {\n\t\t\t$config['connection'] = 'online';\n\t\t}\n\t} else {\n\t\t$config['connection'] = 'offline';\n\t}\n} else {\n\tif (!isset($database_ssl))      $database_ssl      = false;\n\tif (!isset($database_ssl_key))  $database_ssl_key  = false;\n\tif (!isset($database_ssl_cert)) $database_ssl_cert = false;\n\tif (!isset($database_ssl_ca))   $database_ssl_ca   = false;\n\n\tif (!db_connect_real($database_hostname, $database_username, $database_password, $database_default, $database_type, $database_port, $database_retries, $database_ssl, $database_ssl_key, $database_ssl_cert, $database_ssl_ca)) {\n\t\t$ps = $config['is_web'] ? '<p>' : '';\n\t\t$sp = $config['is_web'] ? '</p>' : PHP_EOL;\n\t\t$ul = $config['is_web'] ? '<ul>' : PHP_EOL;\n\t\t$li = $config['is_web'] ? '<li>' : PHP_EOL . '  - ';\n\t\t$lu = $config['is_web'] ? '</ul>' : '';\n\t\t$il = $config['is_web'] ? '</li>' : '';\n\t\tprint $ps . 'FATAL: Connection to Cacti database failed. Please ensure: ' . $ul;\n\t\tprint $li . 'the PHP MySQL module is installed and enabled.' . $il;\n\t\tprint $li . 'the database is running.' . $il;\n\t\tprint $li . 'the credentials in config.php are valid.' . $il;\n\t\tprint $lu . $sp;\n\t\tif (isset($_REQUEST['display_db_errors']) && !empty($config['DATABASE_ERROR'])) {\n\t\t\tprint $ps . 'The following database errors occurred: ' . $ul;\n\t\t\tforeach ($config['DATABASE_ERROR'] as $e) {\n\t\t\t\tprint $li . $e['Code'] . ': ' . $e['Error'] . $il;\n\t\t\t}\n\t\t\tprint $lu . $sp;\n\t\t}\n\t\texit;\n\t} else {\n\t\t/* gather the existing cactidb version */\n\t\t$config['cacti_db_version'] = db_fetch_cell('SELECT cacti FROM version LIMIT 1');\n\t}\n}\n\n/* check cacti log is available */\n$log_filename = cacti_log_file();\nif (!is_resource_writable($log_filename)) {\n\tdie('System log file is not available for writing, please enable write access' . PHP_EOL . 'Log: ' . $log_filename . PHP_EOL);\n}\n\n/* prime the most popular config settings */\nprime_common_config_settings();\n\nif ($config['poller_id'] > 1) {\n\t$timezone = db_fetch_cell_prepared('SELECT timezone\n\t\tFROM poller\n\t\tWHERE id = ?',\n\t\tarray($config['poller_id']));\n\n\tif ($timezone != '') {\n\t\tdb_execute_prepared('SET time_zone = ?', array($timezone));\n\t}\n}\n\nif (isset($cacti_db_session) && $cacti_db_session && db_table_exists('sessions')) {\n\tinclude(dirname(__FILE__) . '/session.php');\n} else {\n\t$cacti_db_session = false;\n}\n\nif (!defined('IN_CACTI_INSTALL')) {\n\tset_error_handler('CactiErrorHandler');\n\tregister_shutdown_function('CactiShutdownHandler');\n}\n\n/* verify the cacti database is initialized before moving past here */\ndb_cacti_initialized($config['is_web']);\n\nif ($config['is_web']) {\n\tif (read_config_option('force_https') == 'on') {\n\t\tif (!isset($_SERVER['HTTPS']) && isset($_SERVER['HTTP_HOST']) && isset($_SERVER['REQUEST_URI'])) {\n\t\t\theader('Location: https://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] . PHP_EOL . PHP_EOL);\n\t\t\texit;\n\t\t}\n\t}\n\n\t/* set the maximum post size */\n\tini_set('post_max_size', '8M');\n\n\t/* add additional cookie directives */\n\tini_set('session.cookie_httponly', true);\n\tini_set('session.cookie_path', $config['url_path']);\n\tini_set('session.use_strict_mode', true);\n\n\t$options = array(\n\t\t'cookie_httponly' => true,\n\t\t'cookie_path'     => $config['url_path'],\n\t\t'use_strict_mode' => true\n\t);\n\n\tif (isset($cacti_cookie_domain) && $cacti_cookie_domain != '') {\n\t\tini_set('session.cookie_domain', $cacti_cookie_domain);\n\t\t$options['cookie_domain'] = $cacti_cookie_domain;\n\t}\n\n\t// SameSite php7.3+ behavior\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\tini_set('session.cookie_samesite', 'Strict');\n\t\t$options['cookie_samesite'] = 'Strict';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\tini_set('session.cookie_secure', true);\n\t\t$options['cookie_secure'] = true;\n\t}\n\n\t$config['cookie_options']     = $options;\n\t$config['cacti_session_name'] = $cacti_session_name;\n\n\t/* we don't want these pages cached */\n\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');\n\theader('X-Frame-Options: SAMEORIGIN');\n\n\t/* increased web hardening */\n\t$script_policy = read_config_option('content_security_policy_script');\n\tif ($script_policy == 'unsafe-eval') {\n\t\t$script_policy = \"'$script_policy'\";\n\t} else {\n\t\t$script_policy = '';\n\t}\n\t$alternates = html_escape(read_config_option('content_security_alternate_sources'));\n\n\theader(\"Content-Security-Policy: default-src *; img-src 'self' $alternates data: blob:; style-src 'self' 'unsafe-inline' $alternates; script-src 'self' $script_policy 'unsafe-inline' $alternates; frame-ancestors 'self'; worker-src 'self' $alternates;\");\n\n\t/* prevent IE from silently rejects cookies sent from third party sites. */\n\theader('P3P: CP=\"CAO PSA OUR\"');\n\theader('Cache-Control: no-store, no-cache, must-revalidate');\n\theader('Cache-Control: max-age=31536000');\n\n\tcacti_session_start();\n\n\t/* we never run with magic quotes on */\n\tif (version_compare(PHP_VERSION, '5.4', '<=')) {\n\t\tif (get_magic_quotes_gpc()) {\n\t\t\t$process = array(&$_GET, &$_POST, &$_COOKIE, &$_REQUEST);\n\t\t\tforeach ($process as $key => $val) {\n\t\t\t\tforeach ($val as $k => $v) {\n\t\t\t\t\tunset($process[$key][$k]);\n\t\t\t\t\tif (is_array($v)) {\n\t\t\t\t\t\t$process[$key][stripslashes($k)] = $v;\n\t\t\t\t\t\t$process[] = &$process[$key][stripslashes($k)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$process[$key][stripslashes($k)] = stripslashes($v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tunset($process);\n\t\t}\n\t}\n\n\t/* make sure to start only Cacti session at a time */\n\tif (!isset($_SESSION['cacti_cwd'])) {\n\t\t$_SESSION['cacti_cwd'] = $config['base_path'];\n\t} else {\n\t\tif ($_SESSION['cacti_cwd'] != $config['base_path']) {\n\t\t\tcacti_session_destroy();\n\t\t}\n\t}\n\n\t/* Sanitize the http referer */\n\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t$_SERVER['HTTP_REFERER'] = sanitize_uri($_SERVER['HTTP_REFERER']);\n\t}\n}\n\n/* emulate 'register_globals' = 'off' if turned on */\nif ((bool)ini_get('register_globals')) {\n\t$not_unset = array('_GET', '_POST', '_COOKIE', '_SERVER', '_SESSION', '_ENV', '_FILES', 'database_type', 'database_default', 'database_hostname', 'database_username', 'database_password', 'config', 'colors');\n\n\t/* Not only will array_merge give a warning if a parameter is not an array, it will\n\t* actually fail. So we check if HTTP_SESSION_VARS has been initialised. */\n\tif (!isset($_SESSION)) {\n\t\t$_SESSION = array();\n\t}\n\n\t/* Merge all into one extremely huge array; unset this later */\n\t$input = array_merge($_GET, $_POST, $_COOKIE, $_SERVER, $_SESSION, $_ENV, $_FILES);\n\n\tunset($input['input']);\n\tunset($input['not_unset']);\n\n\tforeach ($input as $var => $val) {\n\t\tif (!in_array($var, $not_unset)) {\n\t\t\tunset($$var);\n\t\t}\n\t}\n\n\tunset($input);\n}\n\ndefine('CACTI_DATE_TIME_FORMAT', date_time_format());\n\ninclude_once($config['include_path'] . '/global_languages.php');\ninclude_once($config['library_path'] . '/auth.php');\ninclude_once($config['library_path'] . '/plugins.php');\ninclude_once($config['include_path'] . '/plugins.php');\ninclude_once($config['include_path'] . '/global_arrays.php');\ninclude_once($config['include_path'] . '/global_settings.php');\ninclude_once($config['include_path'] . '/global_form.php');\ninclude_once($config['library_path'] . '/html_form.php');\ninclude_once($config['library_path'] . '/html_filter.php');\ninclude_once($config['library_path'] . '/variables.php');\ninclude_once($config['library_path'] . '/mib_cache.php');\ninclude_once($config['library_path'] . '/poller.php');\ninclude_once($config['library_path'] . '/snmpagent.php');\ninclude_once($config['library_path'] . '/aggregate.php');\ninclude_once($config['library_path'] . '/api_automation.php');\ninclude_once($config['include_path'] . '/csrf.php');\n\nif ($config['is_web']) {\n\tif (isset_request_var('newtheme')) {\n\t\tunset($_SESSION['selected_theme']);\n\t}\n\n\tif (isset_request_var('csrf_timeout')) {\n\t\traise_message('csrf_ptimeout');\n\t}\n\n\t/* check for save actions using GET */\n\tif (isset_request_var('action')) {\n\t\t$action = get_nfilter_request_var('action');\n\n\t\t$bad_actions = array('save', 'update_data', 'changepassword');\n\n\t\tforeach($bad_actions as $bad) {\n\t\t\tif ($action == $bad && !isset($_POST['__csrf_magic'])) {\n\t\t\t\tcacti_log('WARNING: Attempt to use GET method for POST operations from IP ' . get_client_addr(), false, 'WEBUI');\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset($_COOKIE['CactiTimeZone'])) {\n\t\t$gmt_offset = $_COOKIE['CactiTimeZone'];\n\n\t\tcacti_time_zone_set($gmt_offset);\n\t}\n}\n\napi_plugin_hook('config_insert');\n\n/* set config cacti_version for plugins */\n$config['cacti_version'] = CACTI_VERSION;\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nglobal $menu, $menu_glyphs, $graph_sources;\n\n/* Array of Cacti versions and template hash codes\n   Remember to add every version here. */\n$cacti_version_codes = array(\n\t'0.8'    => 'NaN',\n\t'0.8.1'  => 'NaN',\n\t'0.8.2'  => 'NaN',\n\t'0.8.2a' => 'NaN',\n\t'0.8.3'  => 'NaN',\n\t'0.8.3a' => 'NaN',\n\t'0.8.4'  => '0000',\n\t'0.8.5'  => '0001',\n\t'0.8.5a' => '0002',\n\t'0.8.6'  => '0003',\n\t'0.8.6a' => '0004',\n\t'0.8.6b' => '0005',\n\t'0.8.6c' => '0006',\n\t'0.8.6d' => '0007',\n\t'0.8.6e' => '0008',\n\t'0.8.6f' => '0009',\n\t'0.8.6g' => '0010',\n\t'0.8.6h' => '0011',\n\t'0.8.6i' => '0012',\n\t'0.8.6j' => '0013',\n\t'0.8.7'  => '0014',\n\t'0.8.7a' => '0015',\n\t'0.8.7b' => '0016',\n\t'0.8.7c' => '0017',\n\t'0.8.7d' => '0018',\n\t'0.8.7e' => '0019',\n\t'0.8.7f' => '0020',\n\t'0.8.7g' => '0021',\n\t'0.8.7h' => '0022',\n\t'0.8.7i' => '0023',\n\t'0.8.8'  => '0024',\n\t'0.8.8a' => '0024',\n\t'0.8.8b' => '0024',\n\t'0.8.8c' => '0025',\n\t'0.8.8d' => '0025',\n\t'0.8.8e' => '0025',\n\t'0.8.8f' => '0025',\n\t'0.8.8g' => '0025',\n\t'0.8.8h' => '0025',\n\t'1.0.0'  => '0100',\n\t'1.0.1'  => '0100',\n\t'1.0.2'  => '0100',\n\t'1.0.3'  => '0100',\n\t'1.0.4'  => '0100',\n\t'1.0.5'  => '0100',\n\t'1.0.6'  => '0100',\n\t'1.1.0'  => '0100',\n\t'1.1.1'  => '0100',\n\t'1.1.2'  => '0100',\n\t'1.1.3'  => '0100',\n\t'1.1.4'  => '0100',\n\t'1.1.5'  => '0100',\n\t'1.1.6'  => '0101',\n\t'1.1.7'  => '0101',\n\t'1.1.8'  => '0101',\n\t'1.1.9'  => '0101',\n\t'1.1.10' => '0101',\n\t'1.1.11' => '0101',\n\t'1.1.12' => '0101',\n\t'1.1.13' => '0101',\n\t'1.1.14' => '0101',\n\t'1.1.15' => '0101',\n\t'1.1.16' => '0101',\n\t'1.1.17' => '0101',\n\t'1.1.18' => '0101',\n\t'1.1.19' => '0101',\n\t'1.1.20' => '0101',\n\t'1.1.21' => '0101',\n\t'1.1.22' => '0101',\n\t'1.1.23' => '0101',\n\t'1.1.24' => '0101',\n\t'1.1.25' => '0101',\n\t'1.1.26' => '0101',\n\t'1.1.27' => '0101',\n\t'1.1.28' => '0101',\n\t'1.1.29' => '0101',\n\t'1.1.30' => '0101',\n\t'1.1.31' => '0101',\n\t'1.1.32' => '0101',\n\t'1.1.33' => '0101',\n\t'1.1.34' => '0101',\n\t'1.1.35' => '0101',\n\t'1.1.36' => '0101',\n\t'1.1.37' => '0101',\n\t'1.1.38' => '0101',\n\t'1.2.0'  => '0101',\n\t'1.2.1'  => '0101',\n\t'1.2.2'  => '0101',\n\t'1.2.3'  => '0102',\n\t'1.2.4'  => '0102',\n\t'1.2.5'  => '0102',\n\t'1.2.6'  => '0102',\n\t'1.2.7'  => '0102',\n\t'1.2.8'  => '0102',\n\t'1.2.9'  => '0102',\n\t'1.2.10'  => '0102',\n\t'1.2.11'  => '0102',\n\t'1.2.12'  => '0102',\n\t'1.2.13'  => '0102',\n\t'1.2.14'  => '0102',\n\t'1.2.15'  => '0102',\n\t'1.2.16'  => '0102',\n\t'1.2.17'  => '0102',\n\t'1.2.18'  => '0102',\n\t'1.2.19'  => '0103',\n\t'1.2.20'  => '0103',\n\t'1.2.21'  => '0103',\n\t'1.2.22'  => '0103',\n\t'1.2.23'  => '0103',\n);\n\n$messages = array(\n\t1  => array(\n\t\t'message' => __('Save Successful.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t2  => array(\n\t\t'message' => __('Save Failed.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t3  => array(\n\t\t'message' => __('Save Failed due to field input errors (Check red fields).'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t4  => array(\n\t\t'message' => __('Passwords do not match, please retype.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t5  => array(\n\t\t'message' => __('You must select at least one field.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t6  => array(\n\t\t'message' => __('You must have built in user authentication turned on to use this feature.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t7  => array(\n\t\t'message' => __('XML parse error.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t8  => array(\n\t\t'message' => __('The directory highlighted does not exist.  Please enter a valid directory.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t9  => array(\n\t\t'message' => __('The Cacti log file must have the extension \\'.log\\''),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t10  => array(\n\t\t'message' => __('Data Input for method does not appear to be whitelisted.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t11  => array(\n\t\t'message' => __('Data Source does not exist.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t12 => array(\n\t\t'message' => __('Username already in use.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t13  => array(\n\t\t'message' => __('The SNMP v3 Privacy Passphrases do not match'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t14  => array(\n\t\t'message' => __('The SNMP v3 Authentication Passphrases do not match'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t15 => array(\n\t\t'message' => __('XML: Cacti version does not exist.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t16 => array(\n\t\t'message' => __('XML: Hash version does not exist.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t17 => array(\n\t\t'message' => __('XML: Generated with a newer version of Cacti.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t18 => array(\n\t\t'message' => __('XML: Cannot locate type code.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t19 => array(\n\t\t'message' => __('Username already exists.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t20 => array(\n\t\t'message' => __('Username change not permitted for designated template or guest user.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t21 => array(\n\t\t'message' => __('User delete not permitted for designated template or guest user.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t22 => array(\n\t\t'message' => __('User delete not permitted for designated graph export user.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t23 => array(\n\t\t'message' => __('Data Template includes deleted Data Source Profile.  Please resave the Data Template with an existing Data Source Profile.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t24 => array(\n\t\t'message' => __('Graph Template includes deleted GPrint Prefix.  Please run database repair script to identify and/or correct.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t25 => array(\n\t\t'message' => __('Graph Template includes deleted CDEFs.  Please run database repair script to identify and/or correct.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t26 => array(\n\t\t'message' => __('Graph Template includes deleted Data Input Method.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t27 => array(\n\t\t'message' => __('Data Template not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t28 => array(\n\t\t'message' => __('Device Template not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t29 => array(\n\t\t'message' => __('Data Query not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t30 => array(\n\t\t'message' => __('Graph Template not found during Export.  Please run database repair script to identify.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t31 => array(\n\t\t'message' => __('Graph not found.  Either it has been deleted or your database needs repair.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t32 => array(\n\t\t'message' => __('SNMPv3 Auth Passphrases must be 8 characters or greater.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t33 => array(\n\t\t'message' => __('Some Graphs not updated. Unable to change device for Data Query based Graphs.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t34 => array(\n\t\t'message' => __('Unable to change device for Data Query based Graphs.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t35 => array(\n\t\t'message' => __('Some settings not saved. Check messages below.  Check red fields for errors.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t36 => array(\n\t\t'message' => __('The file highlighted does not exist.  Please enter a valid file name.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t37 => array(\n\t\t'message' => __('All User Settings have been returned to their default values.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t38 => array(\n\t\t'message' => __('Suggested Field Name was not entered.  Please enter a field name and try again.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t39 => array(\n\t\t'message' => __('Suggested Value was not entered.  Please enter a suggested value and try again.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t40 => array(\n\t\t'message' => __('You must select at least one object from the list.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t41 => array(\n\t\t'message' => __('Device Template updated.  Remember to Sync Devices to push all changes to Devices that use this Device Template.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t42 => array(\n\t\t'message' => __('Save Successful. Settings replicated to Remote Data Collectors.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t43 => array(\n\t\t'message' => __('Save Failed.  Minimum Values must be less than Maximum Value.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t44 => array(\n\t\t'message' => __('Unable to change password.  User account not found.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'input_save_wo_ds' => array(\n\t\t'message' => __('Data Input Saved.  You must update the Data Templates referencing this Data Input Method before creating Graphs or Data Sources.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'input_save_w_ds' => array(\n\t\t'message' => __('Data Input Saved.  You must update the Data Templates referencing this Data Input Method before the Data Collectors will start using any new or modified Data Input - Input Fields.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'input_field_save_wo_ds' => array(\n\t\t'message' => __('Data Input Field Saved.  You must update the Data Templates referencing this Data Input Method before creating Graphs or Data Sources.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'input_field_save_w_ds' => array(\n\t\t'message' => __('Data Input Field Saved.  You must update the Data Templates referencing this Data Input Method before the Data Collectors will start using any new or modified Data Input - Input Fields.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_invalid' => array(\n\t\t'message' => __('Log file specified is not a Cacti log or archive file.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_remove' => array(\n\t\t'message' => __('Log file specified was Cacti archive file and was removed.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_purged' => array(\n\t\t'message' => __('Cacti log purged successfully'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'password_change' => array(\n\t\t'message' => __('If you force a password change, you must also allow the user to change their password.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nopassword' => array(\n\t\t'message' => __('You are not allowed to change your password.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nopasswordlen' => array(\n\t\t'message' => __('Unable to determine size of password field, please check permissions of db user'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nopasswordinc' => array(\n\t\t'message' => __('Unable to increase size of password field, pleas check permission of db user'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'nodomainpassword' => array(\n\t\t'message' => __('LDAP/AD based password change not supported.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'password_success' => array(\n\t\t'message' => __('Password successfully changed.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'clog_permissions' => array(\n\t\t'message' => __('Unable to clear log, no write permissions'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'clog_missing' => array(\n\t\t'message' => __('Unable to clear log, file does not exist'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'csrf_timeout' => array(\n\t\t'message' => __('CSRF Timeout, refreshing page.'),\n\t\t'level' => MESSAGE_LEVEL_CSRF),\n\t'csrf_ptimeout' => array(\n\t\t'message' => __('CSRF Timeout occurred due to inactivity, page refreshed.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'mg_mailtime_invalid' => array(\n\t\t'message' => __('Invalid timestamp. Select timestamp in the future.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_sync' => array(\n\t\t'message' => __('Data Collector(s) synchronized for offline operation'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'poller_notfound' => array(\n\t\t'message' => __('Data Collector(s) not found when attempting synchronization'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_noconnect' => array(\n\t\t'message' => __('Unable to establish MySQL connection with Remote Data Collector.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_nosync' => array(\n\t\t'message' => __('Data Collector synchronization must be initiated from the main Cacti server.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_nomain' => array(\n\t\t'message' => __('Synchronization does not include the Central Cacti Database server.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_nodupe' => array(\n\t\t'message' => __('When saving a Remote Data Collector, the Database Hostname must be unique from all others.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_dbhost' => array(\n\t\t'message' => __('Your Remote Database Hostname must be something other than \\'localhost\\' for each Remote Data Collector.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'poller_paths' => array(\n\t\t'message' => __('Path variables on this page were only saved locally.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'reports_save' => array(\n\t\t'message' => __('Report Saved'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'reports_save_failed' => array(\n\t\t'message' => __('Report Save Failed'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_item_save' => array(\n\t\t'message' => __('Report Item Saved'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'reports_item_save_failed' => array(\n\t\t'message' => __('Report Item Save Failed'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_graph_not_found' => array(\n\t\t'message' => __('Graph was not found attempting to Add to Report'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_not_owner' => array(\n\t\t'message' => __('Unable to Add Graphs.  Current user is not owner'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_add_error' => array(\n\t\t'message' => __('Unable to Add all Graphs.  See error message for details.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_no_graph' => array(\n\t\t'message' => __('You must select at least one Graph to add to a Report.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'reports_graphs_added' => array(\n\t\t'message' => __('All Graphs have been added to the Report.  Duplicate Graphs with the same Timespan were skipped.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'resource_cache_rebuild' => array(\n\t\t'message' => __('Poller Resource Cache cleared.  Main Data Collector will rebuild at the next poller start, and Remote Data Collectors will sync afterwards.'),\n\t\t'level' => MESSAGE_LEVEL_INFO),\n\t'permission_denied' => array(\n\t\t'message' => __('Permission Denied.  You do not have permission to the requested action.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'page_not_defined' => array(\n\t\t'message' => __('Page is not defined.  Therefore, it can not be displayed.'),\n\t\t'level' => MESSAGE_LEVEL_ERROR),\n\t'custom_error' => array(\n\t\t'message' => __('Unexpected error occurred'),\n\t\t'level' => MESSAGE_LEVEL_ERROR)\n);\n\n$cdef_operators = array(1 =>\n\t'+',\n\t'-',\n\t'*',\n\t'/',\n\t'%'\n);\n\n$cdef_functions = array(1 =>\n\t'SIN',\n\t'COS',\n\t'LOG',\n\t'EXP',\n\t'FLOOR',\n\t'CEIL',\n\t'LT',\n\t'LE',\n\t'GT',\n\t'GE',\n\t'EQ',\n\t'IF',\n\t'MIN',\n\t'MAX',\n\t'LIMIT',\n\t'DUP',\n\t'EXC',\n\t'POP',\n\t'UN',\n\t'UNKN',\n\t'PREV',\n\t'INF',\n\t'NEGINF',\n\t'NOW',\n\t'TIME',\n\t'LTIME',\n\t'ADDNAN',\n\t'TREND',\n\t'TRENDNAN',\n\t'PREDICT',\n\t'PREDICTSIGMA',\n\t'PREDICTPERC',\n\t'SQRT',\n\t'ATAN',\n\t'ATAN2',\n\t'POW',\n\t'ISINF',\n\t'MINNAN',\n\t'MAXNAN',\n\t'DEG2RAD',\n\t'RAD2DEG',\n\t'ABS',\n\t'REV',\n\t'SMIN',\n\t'SMAX',\n\t'MEDIAN',\n\t'STDEV',\n\t'PERCENT',\n\t'COUNT',\n\t'STEPWIDTH',\n\t'NEWDAY',\n\t'NEWWEEK',\n\t'NEWMONTH',\n\t'NEWYEAR',\n\t'DEPTH',\n\t'COPY',\n\t'INDEX',\n\t'ROLL'\n);\n\n$phperrors = array (\n\tE_ERROR => 'ERROR',\n\tE_WARNING => 'WARNING',\n\tE_PARSE => 'PARSE',\n\tE_NOTICE => 'NOTICE',\n\tE_CORE_ERROR => 'CORE_ERROR',\n\tE_CORE_WARNING => 'CORE_WARNING',\n\tE_COMPILE_ERROR  => 'COMPILE_ERROR',\n\tE_COMPILE_WARNING => 'COMPILE_WARNING',\n\tE_USER_ERROR => 'USER_ERROR',\n\tE_USER_WARNING => 'USER_WARNING',\n\tE_USER_NOTICE  => 'USER_NOTICE',\n\tE_STRICT => 'STRICT',\n\tE_RECOVERABLE_ERROR  => 'RECOVERABLE_ERROR',\n\tE_DEPRECATED => 'DEPRECATED',\n\tE_USER_DEPRECATED  => 'USER_DEPRECATED',\n\tE_ALL => 'ALL'\n);\n\nif (cacti_version_compare(get_rrdtool_version(), '1.8.0', '>=')) {\n\t$cdef_functions[] = 'ROUND';\n}\n\n$vdef_functions = array(1 =>\n\t'MAXIMUM',\n\t'MINIMUM',\n\t'AVERAGE',\n\t'STDEV',\n\t'LAST',\n\t'FIRST',\n\t'TOTAL',\n\t'PERCENT',\n\t'PERCENTNAN',\n\t'LSLSLOPE',\n\t'LSLINT',\n\t'LSLCORREL'\n);\n\n$vdef_item_types = array(\n\tCVDEF_ITEM_TYPE_FUNCTION => __('Function'),\n\tCVDEF_ITEM_TYPE_SPEC_DS  => __('Special Data Source'),\n\tCVDEF_ITEM_TYPE_STRING   => __('Custom String'),\n);\n\n$custom_vdef_data_source_types = array( // this may change as soon as RRDtool supports math in VDEF, until then only reference to CDEF may help\n\t'CURRENT_DATA_SOURCE' => __('Current Graph Item Data Source'),\n);\n\n$input_types = array(\n\tDATA_INPUT_TYPE_SNMP                => __('SNMP Get'), // Action 0:\n\tDATA_INPUT_TYPE_SNMP_QUERY          => __('SNMP Query'),\n\tDATA_INPUT_TYPE_SCRIPT              => __('Script/Command'),  // Action 1:\n\tDATA_INPUT_TYPE_SCRIPT_QUERY        => __('Script Query'), // Action 1:\n\tDATA_INPUT_TYPE_PHP_SCRIPT_SERVER   => __('Script Server'),\n\tDATA_INPUT_TYPE_QUERY_SCRIPT_SERVER => __('Script Server Query')\n);\n\n$input_types_script = array(\n\tDATA_INPUT_TYPE_SCRIPT              => __('Script/Command'),  // Action 1:\n\tDATA_INPUT_TYPE_PHP_SCRIPT_SERVER   => __('Script Server'),\n);\n\n$reindex_types = array(\n\tDATA_QUERY_AUTOINDEX_NONE               => __('None'),\n\tDATA_QUERY_AUTOINDEX_BACKWARDS_UPTIME   => __('Uptime'),\n\tDATA_QUERY_AUTOINDEX_INDEX_NUM_CHANGE   => __('Index Count'),\n\tDATA_QUERY_AUTOINDEX_FIELD_VERIFICATION => __('Verify All')\n);\n\n$reindex_types_tips = array(\n\tDATA_QUERY_AUTOINDEX_NONE               => __('All Re-Indexing will be manual or managed through scripts or Device Automation.'),\n\tDATA_QUERY_AUTOINDEX_BACKWARDS_UPTIME   => __('When the Devices SNMP uptime goes backward, a Re-Index will be performed.'),\n\tDATA_QUERY_AUTOINDEX_INDEX_NUM_CHANGE   => __('When the Data Query index count changes, a Re-Index will be performed.'),\n\tDATA_QUERY_AUTOINDEX_FIELD_VERIFICATION => __('Every polling cycle, a Re-Index will be performed.  Very expensive.')\n);\n\n$snmp_query_field_actions = array(1 =>\n\t__('SNMP Field Name (Dropdown)'),\n\t__('SNMP Field Value (From User)'),\n\t__('SNMP Output Type (Dropdown)')\n);\n\n$consolidation_functions = array(1 =>\n\t'AVERAGE',\n\t'MIN',\n\t'MAX',\n\t'LAST'\n);\n\n$data_source_types = array(\n\t1 => 'GAUGE',\n\t2 => 'COUNTER',\n\t3 => 'DERIVE',\n\t4 => 'ABSOLUTE',\n\t5 => 'COMPUTE'\n);\n\nif (cacti_version_compare(get_rrdtool_version(), '1.5', '>=')) {\n\t$data_source_types[6] = 'DCOUNTER';\n\t$data_source_types[7] = 'DDERIVE';\n}\n\n$rrd_font_render_modes = array(\n\tRRD_FONT_RENDER_NORMAL  => __('Normal'),\n\tRRD_FONT_RENDER_LIGHT   => __('Light'),\n\tRRD_FONT_RENDER_MONO    => __('Mono'),\n);\n\n$rrd_graph_render_modes = array(\n\tRRD_GRAPH_RENDER_NORMAL => __('Normal'),\n\tRRD_GRAPH_RENDER_MONO   => __('Mono'),\n);\n\n$rrd_legend_position = array(\n\tRRD_LEGEND_POS_NORTH    => __('North'),\n\tRRD_LEGEND_POS_SOUTH    => __('South'),\n\tRRD_LEGEND_POS_WEST     => __('West'),\n\tRRD_LEGEND_POS_EAST     => __('East'),\n);\n\n$rrd_textalign = array(\n\tRRD_ALIGN_NONE          => __('None'),\n\tRRD_ALIGN_LEFT          => __('Left'),\n\tRRD_ALIGN_RIGHT         => __('Right'),\n\tRRD_ALIGN_JUSTIFIED     => __('Justified'),\n\tRRD_ALIGN_CENTER        => __('Center'),\n);\n\n$rrd_legend_direction = array(\n\tRRD_LEGEND_DIR_TOPDOWN  => __('Top -> Down'),\n\tRRD_LEGEND_DIR_BOTTOMUP => __('Bottom -> Up'),\n);\n\n$rrd_axis_formatters = array(\n\t'numeric'   => __('Numeric'),\n\t'timestamp' => __('Timestamp'),\n\t'duration'  => __('Duration')\n);\n\n$graph_item_types = array(\n\tGRAPH_ITEM_TYPE_COMMENT         => 'COMMENT',\n\tGRAPH_ITEM_TYPE_HRULE           => 'HRULE',\n\tGRAPH_ITEM_TYPE_VRULE           => 'VRULE',\n\tGRAPH_ITEM_TYPE_LINE1           => 'LINE1',\n\tGRAPH_ITEM_TYPE_LINE2           => 'LINE2',\n\tGRAPH_ITEM_TYPE_LINE3           => 'LINE3',\n\tGRAPH_ITEM_TYPE_AREA            => 'AREA',\n\tGRAPH_ITEM_TYPE_STACK           => 'AREA:STACK',\n\tGRAPH_ITEM_TYPE_GPRINT          => 'GPRINT',\n\tGRAPH_ITEM_TYPE_GPRINT_AVERAGE  => 'GPRINT:AVERAGE',\n\tGRAPH_ITEM_TYPE_GPRINT_LAST     => 'GPRINT:LAST',\n\tGRAPH_ITEM_TYPE_GPRINT_MAX      => 'GPRINT:MAX',\n\tGRAPH_ITEM_TYPE_GPRINT_MIN      => 'GPRINT:MIN',\n\tGRAPH_ITEM_TYPE_LEGEND          => 'LEGEND',\n\tGRAPH_ITEM_TYPE_LEGEND_CAMM     => 'LEGEND_CAMM',\n\tGRAPH_ITEM_TYPE_LINESTACK       => 'LINE:STACK',\n\tGRAPH_ITEM_TYPE_TIC             => 'TICK',\n\tGRAPH_ITEM_TYPE_TEXTALIGN       => 'TEXTALIGN',\n);\n\nasort($graph_item_types);\n\n$image_types = array(\n\t1 => 'PNG',\n\t3 => 'SVG'\n);\n\n$snmp_security_levels = array(\n\t'noAuthNoPriv' => 'noAuthNoPriv',\n\t'authNoPriv' => 'authNoPriv',\n\t'authPriv' => 'authPriv'\n);\n\n$snmp_versions = array(0 =>\n\t__('Not In Use'),\n\t__('Version %d', 1),\n\t__('Version %d', 2),\n\t__('Version %d', 3)\n);\n\n$snmp_auth_protocols = array(\n\t'[None]' => __('[None]'),\n\t'MD5'    => __('MD5'),\n\t'SHA'    => __('SHA'),\n\t'SHA224' => __('SHA-224'),\n\t'SHA256' => __('SHA-256'),\n\t'SHA392' => __('SHA-392'),\n\t'SHA512' => __('SHA-512'),\n);\n\n$snmp_priv_protocols = array(\n\t'[None]' => __('[None]'),\n\t'DES'    => __('DES'),\n\t'AES128' => __('AES-128'),\n\t'AES192' => __('AES-192'),\n\t'AES256' => __('AES-256')\n);\n\n$banned_snmp_strings = array(\n\t'End of MIB',\n\t'No Such'\n);\n\n$logfile_options = array(1 =>\n\t__('Logfile Only'),\n\t__('Logfile and Syslog/Eventlog'),\n\t__('Syslog/Eventlog Only')\n);\n\n$availability_options = array(\n\tAVAIL_NONE             => __('None'),\n\tAVAIL_SNMP_AND_PING    => __('Ping and SNMP Uptime'),\n\tAVAIL_SNMP_OR_PING     => __('Ping or SNMP Uptime'),\n\tAVAIL_SNMP             => __('SNMP Uptime'),\n\tAVAIL_SNMP_GET_SYSDESC => __('SNMP Desc'),\n\tAVAIL_SNMP_GET_NEXT    => __('SNMP getNext'),\n\tAVAIL_PING             => __('Ping')\n);\n\n$ping_methods = array(\n\tPING_ICMP => __('ICMP Ping'),\n\tPING_TCP  => __('TCP Ping'),\n\tPING_UDP  => __('UDP Ping')\n);\n\n$logfile_verbosity = array(\n\tPOLLER_VERBOSITY_NONE   => __('NONE - Syslog Only if Selected'),\n\tPOLLER_VERBOSITY_LOW    => __('LOW - Statistics and Errors'),\n\tPOLLER_VERBOSITY_MEDIUM => __('MEDIUM - Statistics, Errors and Results'),\n\tPOLLER_VERBOSITY_HIGH   => __('HIGH - Statistics, Errors, Results and Major I/O Events'),\n\tPOLLER_VERBOSITY_DEBUG  => __('DEBUG - Statistics, Errors, Results, I/O and Program Flow'),\n\tPOLLER_VERBOSITY_DEVDBG => __('DEVEL - Developer DEBUG Level')\n);\n\n$poller_options = array(\n\t1 => 'cmd.php',\n\t2 => 'spine'\n);\n\nif (read_config_option('path_spine') != '' && (!file_exists(read_config_option('path_spine')) || !is_executable(read_config_option('path_spine')))) {\n\tunset($poller_options[2]);\n}\n\n$aggregation_levels = array(\n\t1       => __('Selected Poller Interval'),\n\t30      => __('%d Seconds', 30),\n\t60      => __('1 Minute'),\n\t300     => __('%d Minutes', 5),\n\t600     => __('%d Minutes', 10),\n\t900     => __('%d Minutes', 15),\n\t1800    => __('%d Minutes', 30),\n\t3600    => __('1 Hour'),\n\t7200    => __('%d Hours', 2),\n\t10800   => __('%d Hours', 3),\n\t14400   => __('%d Hours', 4),\n\t21600   => __('%d Hours', 6),\n\t43200   => __('%d Hours', 12),\n\t86400   => __('%d Day', 1),\n\t604800  => __('%d Week', 1)\n);\n\n$sampling_intervals = array(\n\t10    => __('Every %d Seconds', 10),\n\t15    => __('Every %d Seconds', 15),\n\t20    => __('Every %d Seconds', 20),\n\t30    => __('Every %d Seconds', 30),\n\t60    => __('Every Minute'),\n\t300   => __('Every %d Minutes', 5),\n\t600   => __('Every %d Minutes', 10),\n\t900   => __('Every %d Minutes', 15),\n\t1200  => __('Every %d Minutes', 20),\n\t1800  => __('Every %d Minutes', 30),\n\t3600  => __('Every Hour'),\n\t7200  => __('Every %d Hours', 2),\n\t14400 => __('Every %d Hours', 4),\n\t28800 => __('Every %d Hours', 8),\n\t43200 => __('Every %d Hours', 12),\n\t86400 => __('Every %d Day', 1)\n);\n\n$heartbeats = array(\n\t20     => __('%d Seconds', 20),\n\t30     => __('%d Seconds', 30),\n\t40     => __('%d Seconds', 40),\n\t45     => __('%d Seconds', 45),\n\t60     => __('%d Seconds', 60),\n\t90     => __('%d Seconds', 90),\n\t120    => __('%d Minutes', 2),\n\t300    => __('%d Minutes', 5),\n\t330    => __('%0.1f Minutes', 5.5),\n\t600    => __('%d Minutes', 10),\n\t660    => __('%d Minutes', 11),\n\t900    => __('%d Minutes', 15),\n\t1200   => __('%d Minutes', 20),\n\t1800   => __('%d Minutes', 30),\n\t2400   => __('%d Minutes', 40),\n\t3600   => __('%d Hour', 1),\n\t7200   => __('%d Hours', 2),\n\t14400  => __('%d Hours', 4),\n\t28800  => __('%d Hours', 8),\n\t57600  => __('%d Hours', 16),\n\t86400  => __('%d Day', 1),\n\t172800 => __('%d Days', 2)\n);\n\n$timespans = array(\n\t3600      => __('%d Hour', 1),\n\t7200      => __('%d Hours', 2),\n\t14400     => __('%d Hours', 4),\n\t21600     => __('%d Hours', 6),\n\t43200     => __('%d Hours', 12),\n\t86400     => __('%d Day', 1),\n\t172800    => __('%d Days', 2),\n\t345600    => __('%d Days', 4),\n\t604800    => __('%d Week', 1),\n\t1209600   => __('%d Weeks', 2),\n\t1814400   => __('%d Weeks', 3),\n\t2618784   => __('%d Month', 1),\n\t5237568   => __('%d Months', 2),\n\t7856352   => __('%d Months', 3),\n\t10475136  => __('%d Months', 4),\n\t15712704  => __('%d Months', 6),\n\t31536000  => __('%d Year', 1),\n\t63072000  => __('%d Years', 2),\n\t94608000  => __('%d Years', 3),\n\t126144000 => __('%d Years', 4),\n\t157680000 => __('%d Years', 5),\n\t189216000 => __('%d Years', 6),\n\t220752000 => __('%d Years', 7),\n\t252288000 => __('%d Years', 8),\n\t283824000 => __('%d Years', 9),\n\t315360000 => __('%d Years', 10)\n);\n\n$poller_intervals = array(\n\t10  => __('Every %d Seconds', 10),\n\t15  => __('Every %d Seconds', 15),\n\t20  => __('Every %d Seconds', 20),\n\t30  => __('Every %d Seconds', 30),\n\t60  => __('Every Minute'),\n\t300 => __('Every %d Minutes', 5)\n);\n\n$poller_sync_intervals = array(\n\t0     => __('Disabled/Manual'),\n\t1800  => __('Every %d Minutes', 30),\n\t3600  => __('Every Hour'),\n\t7200  => __('Every %d Hours', 2),\n\t14400 => __('Every %d Hours', 4),\n\t28800 => __('Every %d Hours', 8),\n\t57600 => __('Every %d Hours', 16),\n\t86400 => __('Every day'),\n);\n\n$device_threads = array(\n\t1 => __('1 Thread'),\n\t2 => __('%d Threads', 2),\n\t3 => __('%d Threads', 3),\n\t4 => __('%d Threads', 4),\n\t5 => __('%d Threads', 5),\n\t6 => __('%d Threads', 6),\n\t7 => __('%d Threads', 7),\n\t8 => __('%d Threads', 8),\n\t9 => __('%d Threads', 9),\n\t10 => __('%d Threads', 10)\n);\n\n$cron_intervals = array(\n\t60  => __('Every Minute'),\n\t300 => __('Every %d Minutes', 5)\n);\n\n$registered_cacti_names = array(\n\t'path_cacti'\n);\n\n$graph_views = array(1 =>\n\t__('Tree View'),\n\t__('List View'),\n\t__('Preview View')\n);\n\n$auth_methods = array(\n\t1 => __('Builtin Authentication'),\n\t2 => __('Web Basic Authentication')\n);\n\nif (function_exists('ldap_connect')) {\n\t$auth_methods[3] = __('LDAP Authentication');\n\t$auth_methods[4] = __('Multiple LDAP/AD Domains');\n}\n\n$domain_types = array(\n\t'1' => __('LDAP'),\n\t'2' => __('Active Directory')\n);\n\n$auth_realms = get_auth_realms();\n\n$ldap_versions = array(\n\t2 => __('Version %d', 2),\n\t3 => __('Version %d', 3)\n);\n\n$ldap_encryption = array(\n\t0 => __('None'),\n\t1 => __('LDAPS'),\n\t2 => __('LDAP + TLS')\n);\n\n$ldap_tls_cert_req = array(\n\tLDAP_OPT_X_TLS_NEVER  => __('Never'),\n\tLDAP_OPT_X_TLS_HARD   => __('Hard'),\n\tLDAP_OPT_X_TLS_DEMAND => __('Demand'),\n\tLDAP_OPT_X_TLS_ALLOW  => __('Allow'),\n\tLDAP_OPT_X_TLS_TRY    => __('Try')\n);\n\n$ldap_modes = array(\n\t0 => __('No Searching'),\n\t1 => __('Anonymous Searching'),\n\t2 => __('Specific Searching')\n);\n\n$rrdtool_versions = array(\n\t'1.3.0' => 'RRDtool 1.3+',\n\t'1.4.0' => 'RRDtool 1.4+',\n\t'1.5.0' => 'RRDtool 1.5+',\n\t'1.6.0' => 'RRDtool 1.6+',\n\t'1.7.0' => 'RRDtool 1.7+',\n\t'1.7.1' => 'RRDtool 1.7.1+',\n\t'1.7.2' => 'RRDtool 1.7.2+',\n\t'1.8.0' => 'RRDtool 1.8+'\n);\n\n$i18n_modes = array(\n    0 => __('Disabled'),\n    1 => __('Enabled'),\n    2 => __('Enabled (strict mode)'),\n);\n\n$cdef_item_types = array(\n\tCVDEF_ITEM_TYPE_FUNCTION => __('Function'),\n\tCVDEF_ITEM_TYPE_OPERATOR => __('Operator'),\n\tCVDEF_ITEM_TYPE_SPEC_DS  => __('Special Data Source'),\n\tCVDEF_ITEM_TYPE_CDEF     => __('Another CDEF'),\n\tCVDEF_ITEM_TYPE_STRING   => __('Custom String')\n);\n\n$graph_color_alpha = array(\n\t'00' => '  0%',\n\t'19' => ' 10%',\n\t'33' => ' 20%',\n\t'4C' => ' 30%',\n\t'66' => ' 40%',\n\t'7F' => ' 50%',\n\t'99' => ' 60%',\n\t'B2' => ' 70%',\n\t'CC' => ' 80%',\n\t'E5' => ' 90%',\n\t'FF' => '100%'\n);\n\n$tree_sort_types = array(\n\tTREE_ORDERING_INHERIT    => __('Inherit Parent Sorting'),\n\tTREE_ORDERING_NONE       => __('Manual Ordering (No Sorting)'),\n\tTREE_ORDERING_ALPHABETIC => __('Alphabetic Ordering'),\n\tTREE_ORDERING_NATURAL    => __('Natural Ordering'),\n\tTREE_ORDERING_NUMERIC    => __('Numeric Ordering')\n);\n\n$tree_item_types = array(\n\tTREE_ITEM_TYPE_HEADER => __('Header'),\n\tTREE_ITEM_TYPE_GRAPH  => __('Graph'),\n\tTREE_ITEM_TYPE_HOST   => __('Device')\n);\n\n$host_group_types = array(\n\tHOST_GROUPING_GRAPH_TEMPLATE   => __('Graph Template'),\n\tHOST_GROUPING_DATA_QUERY_INDEX => __('Data Query Index')\n);\n\n$custom_data_source_types = array(\n\t'CURRENT_DATA_SOURCE'            => __('Current Graph Item Data Source'),\n\t'CURRENT_DATA_SOURCE_PI'         => __('Current Graph Item Polling Interval'),\n\t'ALL_DATA_SOURCES_NODUPS'        => __('All Data Sources (Do not Include Duplicates)'),\n\t'ALL_DATA_SOURCES_DUPS'          => __('All Data Sources (Include Duplicates)'),\n\t'SIMILAR_DATA_SOURCES_NODUPS'    => __('All Similar Data Sources (Do not Include Duplicates)'),\n\t'SIMILAR_DATA_SOURCES_NODUPS_PI' => __('All Similar Data Sources (Do not Include Duplicates) Polling Interval'),\n\t'SIMILAR_DATA_SOURCES_DUPS'      => __('All Similar Data Sources (Include Duplicates)'),\n\t'CURRENT_DS_MINIMUM_VALUE'       => __('Current Data Source Item: Minimum Value'),\n\t'CURRENT_DS_MAXIMUM_VALUE'       => __('Current Data Source Item: Maximum Value'),\n\t'CURRENT_GRAPH_MINIMUM_VALUE'    => __('Graph: Lower Limit'),\n\t'CURRENT_GRAPH_MAXIMUM_VALUE'    => __('Graph: Upper Limit'),\n\t'COUNT_ALL_DS_NODUPS'            => __('Count of All Data Sources (Do not Include Duplicates)'),\n\t'COUNT_ALL_DS_DUPS'              => __('Count of All Data Sources (Include Duplicates)'),\n\t'COUNT_SIMILAR_DS_NODUPS'        => __('Count of All Similar Data Sources (Do not Include Duplicates)'),\n\t'COUNT_SIMILAR_DS_DUPS'\t         => __('Count of All Similar Data Sources (Include Duplicates)')\n);\n\nif ($config['poller_id'] == 1 || $config['connection'] == 'online') {\n\t$menu = array(\n\t\t__('Main Console') => array(\n\t\t\t'index.php' => __('Console Page')\n\t\t\t),\n\t\t__('Create') => array(\n\t\t\t'graphs_new.php' => __('New Graphs'),\n\t\t\t'host.php?action=edit&create=true' => __('New Device')\n\t\t\t),\n\t\t__('Management') => array(\n\t\t\t'host.php'             => __('Devices'),\n\t\t\t'sites.php'            => __('Sites'),\n\t\t\t'tree.php'             => __('Trees'),\n\t\t\t'graphs.php'           => __('Graphs'),\n\t\t\t'data_sources.php'     => __('Data Sources'),\n\t\t\t'aggregate_graphs.php' => __('Aggregates'),\n\t\t\t),\n\t\t__('Data Collection') => array(\n\t\t\t'pollers.php' => __('Data Collectors'),\n\t\t\t'data_queries.php' => __('Data Queries'),\n\t\t\t'data_input.php'   => __('Data Input Methods')\n\t\t\t),\n\t\t__('Templates') => array(\n\t\t\t'host_templates.php'      => __('Device'),\n\t\t\t'graph_templates.php'     => __('Graph'),\n\t\t\t'data_templates.php'      => __('Data Source'),\n\t\t\t'aggregate_templates.php' => __('Aggregate'),\n\t\t\t'color_templates.php'     => __('Color')\n\t\t\t),\n\t\t__('Automation') => array(\n\t\t\t'automation_networks.php'    => __('Networks'),\n\t\t\t'automation_devices.php'     => __('Discovered Devices'),\n\t\t\t'automation_templates.php'   => __('Device Rules'),\n\t\t\t'automation_graph_rules.php' => __('Graph Rules'),\n\t\t\t'automation_tree_rules.php'  => __('Tree Rules'),\n\t\t\t'automation_snmp.php'        => __('SNMP Options'),\n\t\t\t),\n\t\t__('Presets') => array(\n\t\t\t'data_source_profiles.php' => __('Data Profiles'),\n\t\t\t'cdef.php'                 => __('CDEFs'),\n\t\t\t'vdef.php'                 => __('VDEFs'),\n\t\t\t'color.php'                => __('Colors'),\n\t\t\t'gprint_presets.php'       => __('GPRINTs')\n\t\t\t),\n\t\t__('Import/Export') => array(\n\t\t\t'templates_import.php' => __('Import Templates'),\n\t\t\t'package_import.php'   => __('Import Packages'),\n\t\t\t'templates_export.php' => __('Export Templates')\n\t\t\t),\n\t\t__('Configuration')  => array(\n\t\t\t'settings.php'         => __('Settings'),\n\t\t\t'user_admin.php'       => __('Users'),\n\t\t\t'user_group_admin.php' => __('User Groups'),\n\t\t\t'user_domains.php'     => __('User Domains')\n\t\t\t),\n\t\t__('Utilities') => array(\n\t\t\t'utilities.php'  => __('System Utilities'),\n\t\t\t'links.php'      => __('External Links'),\n\t\t\t),\n\t\t__('Troubleshooting') => array(\n\t\t\t'data_debug.php' => __('Data Sources'),\n\t\t)\n\t);\n} else {\n\t$menu = array(\n\t\t__('Management') => array(\n\t\t\t'host.php' => __('Devices')\n\t\t\t),\n\t\t__('Data Collection') => array(\n\t\t\t'pollers.php' => __('Data Collectors')\n\t\t\t),\n\t\t__('Configuration')  => array(\n\t\t\t'settings.php' => __('Settings')\n\t\t\t),\n\t\t__('Utilities') => array(\n\t\t\t'utilities.php' => __('System Utilities')\n\t\t\t)\n\t);\n}\n\n$menu_glyphs = array(\n\t__('Main Console') => 'fa fa-map',\n\t__('Create') => 'fa fa-chart-area',\n\t__('Management') => 'fa fa-home',\n\t__('Data Collection') => 'fa fa-database',\n\t__('Templates') => 'fa fa-clone',\n\t__('Automation') => 'fab fa-superpowers',\n\t__('Presets') => 'fa fa-archive',\n\t__('Import/Export') => 'fa fa-exchange-alt',\n\t__('Configuration')  => 'fa fa-sliders-h',\n\t__('Utilities') => 'fa fa-cogs',\n\t__('External Links') => 'fa fa-external-link-alt',\n\t__('Support') => 'fa fa-question-circle',\n\t__('Troubleshooting') => 'fa fa-bug'\n);\n\n$device_classes = array(\n\t'wireless'     => __('Access Points, Controllers'),\n\t'application'  => __('Application Related'),\n\t'cacti'        => __('Cacti Related'),\n\t'database'     => __('Database Related'),\n\t'facilities'   => __('Facilities Related'),\n\t'general'      => __('Generic Device'),\n\t'hpc'          => __('HPC/Grid Computing'),\n\t'hypervisor'   => __('Hypervisor Related'),\n\t'remotemgmt'   => __('ILO, IPMI, iDrac, etc.'),\n\t'license'      => __('Licensing Related'),\n\t'linux'        => __('Linux Related'),\n\t'loadbalancer' => __('Load Balancer'),\n\t'switch'       => __('Network Switch'),\n\t'router'       => __('Network Router'),\n\t'firewall'     => __('Network Firewall'),\n\t'storage'      => __('Storage Related'),\n\t'telephony'    => __('Telco Related'),\n\t'webserver'    => __('Web Server Related'),\n\t'windows'      => __('Windows Related'),\n\t'ups'          => __('UPS Related'),\n\t'unassigned'   => __('Unassigned')\n);\n\nif ((isset($_SESSION['sess_user_id']))) {\n\tif (db_table_exists('external_links')) {\n\t\t$consoles = db_fetch_assoc('SELECT id, title, extendedstyle\n\t\t\tFROM external_links\n\t\t\tWHERE style=\"CONSOLE\"\n\t\t\tAND enabled=\"on\"\n\t\t\tORDER BY extendedstyle, sortorder, id');\n\n\t\tif (cacti_sizeof($consoles)) {\n\t\t\tforeach ($consoles as $page) {\n\t\t\t\tif (!$config['is_web'] || is_realm_allowed($page['id']+10000)) {\n\t\t\t\t\t$menuname = (isset($page['extendedstyle']) && $page['extendedstyle'] != '' ? $page['extendedstyle'] : __('External Links'));\n\t\t\t\t\t$menu[$menuname]['link.php?id=' . $page['id']] = $page['title'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n$log_tail_lines = array(\n\t-1    => __('All Lines'),\n\t10    => __('%d Lines', 10),\n\t15    => __('%d Lines', 15),\n\t20    => __('%d Lines', 20),\n\t50    => __('%d Lines', 50),\n\t100   => __('%d Lines', 100),\n\t200   => __('%d Lines', 200),\n\t500   => __('%d Lines', 500),\n\t1000  => __('%d Lines', 1000),\n\t2000  => __('%d Lines', 2000),\n\t3000  => __('%d Lines', 3000),\n\t5000  => __('%d Lines', 5000),\n\t10000 => __('%d Lines', 10000)\n);\n\n$item_rows = array(\n\t10    => '10',\n\t15    => '15',\n\t16    => '16',\n\t17    => '17',\n\t18    => '18',\n\t19    => '19',\n\t20    => '20',\n\t21    => '21',\n\t22    => '22',\n\t23    => '23',\n\t24    => '24',\n\t25    => '25',\n\t26    => '26',\n\t27    => '27',\n\t30    => '30',\n\t40    => '40',\n\t44    => '44',\n\t45    => '45',\n\t50    => '50',\n\t100   => '100',\n\t250   => '250',\n\t500   => '500',\n\t750   => '750',\n\t1000  => '1000',\n\t2000  => '2000',\n\t3000  => '3000',\n\t4000  => '4000',\n\t5000  => '5000',\n);\n\n// Adjust the number of items rows based upon max_input_vars\n$max_size = ini_get('max_input_vars') - 20;\nforeach($item_rows as $index => $row) {\n\tif ($index > $max_size) {\n\t\tunset($item_rows[$index]);\n\t}\n}\n\n$graphs_per_page = array(\n\t4   => '4',\n\t6   => '6',\n\t8   => '8',\n\t9   => '9',\n\t10  => '10',\n\t12  => '12',\n\t14  => '14',\n\t15  => '15',\n\t16  => '16',\n\t18  => '18',\n\t20  => '20',\n\t24  => '24',\n\t25  => '25',\n\t27  => '27',\n\t28  => '28',\n\t30  => '30',\n\t32  => '32',\n\t35  => '35',\n\t40  => '40',\n\t50  => '50',\n\t100 => '100'\n);\n\n$page_refresh_interval = array(\n\t5       => __('%d Seconds', 5),\n\t10      => __('%d Seconds', 10),\n\t20      => __('%d Seconds', 20),\n\t30      => __('%d Seconds', 30),\n\t60      => __('1 Minute'),\n\t300     => __('%d Minutes', 5),\n\t600     => __('%d Minutes', 10),\n\t9999999 => __('Never')\n);\n\n$user_auth_realms = array(\n\t8    => __('Console Access'),\n\t7    => __('View Graphs'),\n\t25   => __('Realtime Graphs'),\n\t20   => __('Update Profile'),\n\t24   => __('External Links'),\n\n\t1    => __('Users/Groups'),\n\t15   => __('Settings/Utilities'),\n\t23   => __('Automation'),\n\t26   => __('Installation/Upgrades'),\n\n\t2    => __('Data Input Methods'),\n\t13   => __('Data Queries'),\n\n\t3    => __('Sites/Devices/Data'),\n\t5    => __('Graphs'),\n\t4    => __('Trees'),\n\t1043 => __('Spike Handling'),\n\n\t9    => __('Data Source Profiles'),\n\t14   => __('Presets'),\n\n\t10   => __('Graph Templates'),\n\t11   => __('Data Templates'),\n\t12   => __('Device Templates'),\n\n\t16   => __('Export Templates'),\n\t17   => __('Import Templates'),\n\n\t18   => __('Log Administration'),\n\t19   => __('Log Viewing'),\n\n\t21   => __('Reports Administration'),\n\t22   => __('Reports Creation'),\n\t27   => __('Show Graph Action Icons'),\n\t28   => __('Show User Help Links'),\n\t101  => __('Plugin Administration')\n);\n\n$user_auth_roles = array(\n\t__('Normal User')            => array(7, 19, 20, 22, 24, 25, 27, 28),\n\t__('Template Editor')        => array(8, 2, 9, 10, 11, 12, 13, 14, 16, 17),\n\t__('General Administration') => array(8, 3, 4, 5, 23, 1043),\n\t__('System Administration')  => array(8, 15, 26, 1, 18, 21, 101)\n);\n\n$user_auth_realm_filenames = array(\n\t'about.php' => -1,\n\t'cdef.php' => 14,\n\t'clog.php' => 18,\n\t'clog_user.php' => 19,\n\t'color.php' => 5,\n\t'data_debug.php' => 15,\n\t'data_input.php' => 2,\n\t'data_sources.php' => 3,\n\t'data_source_profiles.php' => 9,\n\t'data_templates.php' => 11,\n\t'gprint_presets.php' => 5,\n\t'graph.php' => 7,\n\t'graph_image.php' => 7,\n\t'graph_json.php' => 7,\n\t'graph_xport.php' => 7,\n\t'graph_templates.php' => 10,\n\t'graph_templates_inputs.php' => 10,\n\t'graph_templates_items.php' => 10,\n\t'graph_view.php' => 7,\n\t'graph_realtime.php' => 25,\n\t'graphs.php' => 5,\n\t'graphs_items.php' => 5,\n\t'graphs_new.php' => 5,\n\t'sites.php' => 3,\n\t'pollers.php' => 3,\n\t'host.php' => 3,\n\t'host_templates.php' => 12,\n\t'index.php' => 8,\n\t'install.php' => 26,\n\t'step_json.php' => 26,\n\t'managers.php' => 15,\n\t'rrdcleaner.php' => 15,\n\t'rrdcheck.php' => 15,\n\t'settings.php' => 15,\n\t'links.php' => 15,\n\t'data_queries.php' => 13,\n\t'templates_export.php' => 16,\n\t'templates_import.php' => 17,\n\t'package_import.php' => 17,\n\t'tree.php' => 4,\n\t'user_admin.php' => 1,\n\t'user_domains.php' => 1,\n\t'user_group_admin.php' => 1,\n\t'utilities.php' => 15,\n\t'vdef.php' => 14,\n\t'smtp_servers.php' => 8,\n\t'email_templates.php' => 8,\n\t'event_queue.php' => 8,\n\t'smtp_queue.php' => 8,\n\t'logout.php' => -1,\n\t'auth_profile.php' => 20,\n\t'auth_changepassword.php' => -1,\n\t'reports_user.php' => 22,\n\t'reports_admin.php' => 21,\n\t'automation_graph_rules.php' => 23,\n\t'automation_tree_rules.php' => 23,\n\t'automation_templates.php' => 23,\n\t'automation_networks.php' => 23,\n\t'automation_devices.php' => 23,\n\t'automation_snmp.php' => 23,\n\t'color_templates.php' => 5,\n\t'color_templates_items.php' => 5,\n\t'aggregate_templates.php' => 5,\n\t'aggregate_graphs.php' => 5,\n\t'aggregate_items.php' => 5,\n\t'spikekill.php' => 1043,\n\t'permission_denied.php' => -1,\n\t'help.php' => -1\n);\n\n$hash_type_codes = array(\n\t'round_robin_archive' => '15',\n\t'cdef' => '05',\n\t'cdef_item' => '14',\n\t'gprint_preset' => '06',\n\t'data_input_method' => '03',\n\t'data_input_field' => '07',\n\t'data_template' => '01',\n\t'data_template_item' => '08',\n\t'graph_template' => '00',\n\t'graph_template_item' => '10',\n\t'graph_template_input' => '09',\n\t'data_query' => '04',\n\t'data_query_graph' => '11',\n\t'data_query_sv_graph' => '12',\n\t'data_query_sv_data_source' => '13',\n\t'host_template' => '02',\n\t'vdef' => '18',\n\t'vdef_item' => '19',\n\t'data_source_profile' => '20'\n);\n\n$hash_type_names = array(\n\t'cdef'                 => __('CDEF'),\n\t'cdef_item'            => __('CDEF Item'),\n\t'gprint_preset'        => __('GPRINT Preset'),\n\t'data_template'        => __('Data Template'),\n\t'data_input_method'    => __('Data Input Method'),\n\t'data_input_field'     => __('Data Input Field'),\n\t'data_source_profile'  => __('Data Source Profile'),\n\t'data_template_item'   => __('Data Template Item'),\n\t'graph_template'       => __('Graph Template'),\n\t'graph_template_item'  => __('Graph Template Item'),\n\t'graph_template_input' => __('Graph Template Input'),\n\t'data_query'           => __('Data Query'),\n\t'host_template'        => __('Device Template'),\n\t'vdef'                 => __('VDEF'),\n\t'vdef_item'            => __('VDEF Item')\n);\n\n$hash_system_data_inputs = array(\n\t'3eb92bb845b9660a7445cf9740726522', // Get SNMP Data\n\t'bf566c869ac6443b0c75d1c32b5a350e', // Get SNMP Data (Indexed)\n\t'80e9e4c4191a5da189ae26d0e237f015', // Get Script Data (Indexed)\n\t'332111d8b54ac8ce939af87a7eac0c06'  // Get Script Server Data (Indexed)\n);\n\n$host_struc = array(\n\t'host_template_id',\n\t'description',\n\t'hostname',\n\t'site_id',\n\t'poller_id',\n\t'notes',\n\t'snmp_community',\n\t'snmp_version',\n\t'snmp_username',\n\t'snmp_password',\n\t'snmp_auth_protocol',\n\t'snmp_priv_passphrase',\n\t'snmp_priv_protocol',\n\t'snmp_context',\n\t'snmp_engine_id',\n\t'snmp_port',\n\t'snmp_timeout',\n\t'max_oids',\n\t'bulk_walk_size',\n\t'device_threads',\n\t'availability_method',\n\t'location',\n\t'external_id',\n\t'ping_method',\n\t'ping_port',\n\t'ping_timeout',\n\t'ping_retries',\n\t'disabled',\n\t'status',\n\t'status_event_count',\n\t'status_fail_date',\n\t'status_rec_date',\n\t'status_last_error',\n\t'min_time',\n\t'max_time',\n\t'cur_time',\n\t'avg_time',\n\t'total_polls',\n\t'failed_polls',\n\t'availability'\n);\n\n$graph_timespans = array(\n\tGT_LAST_HALF_HOUR => __('Last Half Hour'),\n\tGT_LAST_HOUR      => __('Last Hour'),\n\tGT_LAST_2_HOURS   => __('Last %d Hours', 2),\n\tGT_LAST_4_HOURS   => __('Last %d Hours', 4),\n\tGT_LAST_6_HOURS   => __('Last %d Hours', 6),\n\tGT_LAST_12_HOURS  => __('Last %d Hours', 12),\n\tGT_LAST_DAY       => __('Last Day'),\n\tGT_LAST_2_DAYS    => __('Last %d Days', 2),\n\tGT_LAST_3_DAYS    => __('Last %d Days', 3),\n\tGT_LAST_4_DAYS    => __('Last %d Days', 4),\n\tGT_LAST_WEEK      => __('Last Week'),\n\tGT_LAST_2_WEEKS   => __('Last %d Weeks', 2),\n\tGT_LAST_MONTH     => __('Last Month'),\n\tGT_LAST_2_MONTHS  => __('Last %d Months', 2),\n\tGT_LAST_3_MONTHS  => __('Last %d Months', 3),\n\tGT_LAST_4_MONTHS  => __('Last %d Months', 4),\n\tGT_LAST_6_MONTHS  => __('Last %d Months', 6),\n\tGT_LAST_YEAR      => __('Last Year'),\n\tGT_LAST_2_YEARS   => __('Last %d Years', 2),\n\tGT_DAY_SHIFT      => __('Day Shift'),\n\tGT_THIS_DAY       => __('This Day'),\n\tGT_THIS_WEEK      => __('This Week'),\n\tGT_THIS_MONTH     => __('This Month'),\n\tGT_THIS_YEAR      => __('This Year'),\n\tGT_PREV_DAY       => __('Previous Day'),\n\tGT_PREV_WEEK      => __('Previous Week'),\n\tGT_PREV_MONTH     => __('Previous Month'),\n\tGT_PREV_YEAR      => __('Previous Year')\n);\n\n// ***** MUST BE KEPT IN SYNC WITH graph_timeshifts_vals *********\n$graph_timeshifts = array(\n\tGTS_HALF_HOUR => __('%d Min', 30),\n\tGTS_1_HOUR    => __('%d Hour', 1),\n\tGTS_2_HOURS   => __('%d Hours', 2),\n\tGTS_4_HOURS   => __('%d Hours', 4),\n\tGTS_6_HOURS   => __('%d Hours', 6),\n\tGTS_12_HOURS  => __('%d Hours', 12),\n\tGTS_1_DAY     => __('%d Day', 1),\n\tGTS_2_DAYS    => __('%d Days', 2),\n\tGTS_3_DAYS    => __('%d Days', 3),\n\tGTS_4_DAYS    => __('%d Days', 4),\n\tGTS_1_WEEK    => __('%d Week', 1),\n\tGTS_2_WEEKS   => __('%d Weeks', 2),\n\tGTS_1_MONTH   => __('%d Month', 1),\n\tGTS_2_MONTHS  => __('%d Months', 2),\n\tGTS_3_MONTHS  => __('%d Months', 3),\n\tGTS_4_MONTHS  => __('%d Months', 4),\n\tGTS_6_MONTHS  => __('%d Months', 6),\n\tGTS_1_YEAR    => __('%d Year', 1),\n\tGTS_2_YEARS   => __('%d Years', 2)\n);\n\n// ***** MUST BE KEPT IN SYNC WITH graph_timeshifts *********\n$graph_timeshifts_vals = array(\n\tGTS_HALF_HOUR => sprintf('%d Min', 30),\n\tGTS_1_HOUR    => sprintf('%d Hour', 1),\n\tGTS_2_HOURS   => sprintf('%d Hours', 2),\n\tGTS_4_HOURS   => sprintf('%d Hours', 4),\n\tGTS_6_HOURS   => sprintf('%d Hours', 6),\n\tGTS_12_HOURS  => sprintf('%d Hours', 12),\n\tGTS_1_DAY     => sprintf('%d Day', 1),\n\tGTS_2_DAYS    => sprintf('%d Days', 2),\n\tGTS_3_DAYS    => sprintf('%d Days', 3),\n\tGTS_4_DAYS    => sprintf('%d Days', 4),\n\tGTS_1_WEEK    => sprintf('%d Week', 1),\n\tGTS_2_WEEKS   => sprintf('%d Weeks', 2),\n\tGTS_1_MONTH   => sprintf('%d Month', 1),\n\tGTS_2_MONTHS  => sprintf('%d Months', 2),\n\tGTS_3_MONTHS  => sprintf('%d Months', 3),\n\tGTS_4_MONTHS  => sprintf('%d Months', 4),\n\tGTS_6_MONTHS  => sprintf('%d Months', 6),\n\tGTS_1_YEAR    => sprintf('%d Year', 1),\n\tGTS_2_YEARS   => sprintf('%d Years', 2)\n);\n\n$graph_weekdays = array(\n\tWD_SUNDAY    => date('l', strtotime('Sunday')),\n\tWD_MONDAY    => date('l', strtotime('Monday')),\n\tWD_TUESDAY   => date('l', strtotime('Tuesday')),\n\tWD_WEDNESDAY => date('l', strtotime('Wednesday')),\n\tWD_THURSDAY  => date('l', strtotime('Thursday')),\n\tWD_FRIDAY    => date('l', strtotime('Friday')),\n\tWD_SATURDAY  => date('l', strtotime('Saturday'))\n);\n\n$dateformats = array(\n\tGD_MO_D_Y => __('Month Number, Day, Year'),\n\tGD_MN_D_Y => __('Month Name, Day, Year'),\n\tGD_D_MO_Y => __('Day, Month Number, Year'),\n\tGD_D_MN_Y => __('Day, Month Name, Year'),\n\tGD_Y_MO_D => __('Year, Month Number, Day'),\n\tGD_Y_MN_D => __('Year, Month Name, Day')\n);\n\n$datechar = array(\n\tGDC_HYPHEN => '-',\n\tGDC_SLASH  => '/',\n\tGDC_DOT    => '.'\n);\n\n$dsstats_refresh_interval = array(\n\t'boost' => __('After Boost'),\n\t'60'    => __('1 Hour'),\n\t'120'   => __('%d Hours', 2),\n\t'180'   => __('%d Hours', 3),\n\t'240'   => __('%d Hours', 4),\n\t'300'   => __('%d Hours', 5),\n\t'360'   => __('%d Hours', 6)\n);\n\n$dsstats_max_memory = array(\n\t'32'   => __('%d MBytes', 32),\n\t'64'   => __('%d MBytes', 64),\n\t'128'  => __('%d MBytes', 128),\n\t'256'  => __('%d MBytes', 256),\n\t'512'  => __('%d MBytes', 512),\n\t'1024' => __('1 GByte'),\n\t'1536' => __('%s GBytes', '1.5'),\n\t'2048' => __('%d GBytes', 2),\n\t'3072' => __('%d GBytes', 3)\n);\n\n$dsstats_hourly_avg = array(\n\t'60'  => __('1 Hour'),\n\t'120' => __('%d Hours', 2),\n\t'180' => __('%d Hours', 3),\n\t'240' => __('%d Hours', 4),\n\t'300' => __('%d Hours', 5),\n\t'360' => __('%d Hours', 6)\n);\n\n$rrdcheck_intervals = array(\n\t'boost' => __('After Boost'),\n\t'60'  => __('1 Hour'),\n\t'240' => __('%d Hours', 4),\n\t'1440' => __('%d Hours', 24)\n);\n\n$boost_max_rows_per_select = array(\n\t'2000'   => __('2,000 Data Source Items'),\n\t'5000'   => __('5,000 Data Source Items'),\n\t'10000'  => __('10,000 Data Source Items'),\n\t'15000'  => __('15,000 Data Source Items'),\n\t'25000'  => __('25,000 Data Source Items'),\n\t'50000'  => __('50,000 Data Source Items (Default)'),\n\t'100000' => __('100,000 Data Source Items'),\n\t'200000' => __('200,000 Data Source Items'),\n\t'400000' => __('400,000 Data Source Items')\n);\n\n$boost_utilities_interval = array(\n\t'999999' => __('Disabled'),\n\t'5'      => __('%d Seconds', 5),\n\t'10'     => __('%d Seconds', 10),\n\t'15'     => __('%d Seconds', 15),\n\t'20'     => __('%d Seconds', 20),\n\t'30'     => __('%d Seconds', 30),\n\t'60'     => __('1 Minute'),\n\t'300'    => __('%d Minutes', 5)\n);\n\n$boost_refresh_interval = array(\n\t'30'  => __('%d Minutes', 30),\n\t'60'  => __('1 Hour'),\n\t'120' => __('2 Hours', 2),\n\t'240' => __('4 Hours', 4),\n\t'360' => __('6 Hours', 6)\n);\n\n$boost_max_runtime = array(\n\t'1200' => __('%d Minutes', 20),\n\t'2400' => __('%d Minutes', 40),\n\t'3600' => __('1 Hour'),\n\t'4800' => __('%s Hours', '1.5')\n);\n\n$boost_max_memory = array(\n\t'256'  => __('%d MBytes', 256),\n\t'512'  => __('%d MBytes', 512),\n\t'1024' => __('%d GByte', 1),\n\t'1536' => __('%s GBytes', '1.5'),\n\t'2048' => __('%d GBytes', 2),\n\t'3072' => __('%d GBytes', 3),\n\t'4096' => __('%d GBytes', 4),\n\t'5120' => __('%d GBytes', 5),\n\t'6144' => __('%d GBytes', 6),\n\t'8192' => __('%d GBytes', 8),\n\t'-1' => __('Infinity')\n);\n\n$realtime_window = array(\n\t30   => __('%d Seconds', 30),\n\t45   => __('%d Seconds', 45),\n\t60   => __('1 Minute'),\n\t90   => __('%s Minutes', '1.5'),\n\t120  => __('%d Minutes', 2),\n\t300  => __('%d Minutes', 5),\n\t600  => __('%d Minutes', 10),\n\t1200 => __('%d Minutes', 20),\n\t1800 => __('%d Minutes', 30),\n\t3600 => __('1 Hour')\n);\n\n$realtime_refresh = array(\n\t1   => __('%d Seconds', 1),\n\t2   => __('%d Seconds', 2),\n\t5   => __('%d Seconds', 5),\n\t10  => __('%d Seconds', 10),\n\t15  => __('%d Seconds', 15),\n\t20  => __('%d Seconds', 20),\n\t30  => __('%d Seconds', 30),\n\t60  => __('1 Minute'),\n\t120 => __('%d Minutes', 2)\n);\n\n$attachment_sizes = array(\n\t1048576   => __('1 Megabyte'),\n\t2097152   => __('%d Megabytes', 2),\n\t4194304   => __('%d Megabytes', 4),\n\t10485760  => __('%d Megabytes', 10),\n\t20971520  => __('%d Megabytes', 20),\n\t52428800  => __('%d Megabytes', 50),\n\t104857600 => __('%d Megabytes', 100),\n);\n\n$reports_actions = array(\n\tREPORTS_SEND_NOW  => __('Send Now'),\n\tREPORTS_DUPLICATE => __('Duplicate'),\n\tREPORTS_ENABLE    => __('Enable'),\n\tREPORTS_DISABLE   => __('Disable'),\n\tREPORTS_DELETE    => __('Delete'),\n);\n\nif (!$config['is_web'] || is_realm_allowed(21)) {\n\t$reports_actions[REPORTS_OWN] = __('Take Ownership');\n}\n\n$attach_types = array(\n\tREPORTS_TYPE_INLINE_PNG => __('Inline PNG Image'),\n\t#REPORTS_TYPE_INLINE_JPG => 'Inline JPEG Image'\n);\n\nif (extension_loaded(REPORTS_EXTENSION_GD)) {\n\t$attach_types[REPORTS_TYPE_INLINE_JPG] = __('Inline JPEG Image');\n\t$attach_types[REPORTS_TYPE_INLINE_GIF] = __('Inline GIF Image');\n}\n\n$attach_types[REPORTS_TYPE_ATTACH_PNG] = __('Attached PNG Image');\n\nif (extension_loaded(REPORTS_EXTENSION_GD)) {\n\t$attach_types[REPORTS_TYPE_ATTACH_JPG] = __('Attached JPEG Image');\n\t$attach_types[REPORTS_TYPE_ATTACH_GIF] = __('Attached GIF Image');\n}\n\nif (read_config_option('reports_allow_ln') != '') {\n\t$attach_types[REPORTS_TYPE_INLINE_PNG_LN] = __('Inline PNG Image, LN Style');\n\tif (extension_loaded(REPORTS_EXTENSION_GD)) {\n\t\t$attach_types[REPORTS_TYPE_INLINE_JPG_LN] = __('Inline JPEG Image, LN Style');\n\t\t$attach_types[REPORTS_TYPE_INLINE_GIF_LN] = __('Inline GIF Image, LN Style');\n\t}\n}\n\n$item_types = array(\n\tREPORTS_ITEM_TEXT  => __('Text'),\n\tREPORTS_ITEM_TREE  => __('Tree'),\n\tREPORTS_ITEM_GRAPH => __('Graph'),\n\tREPORTS_ITEM_HOST  => __('Device'),\n\tREPORTS_ITEM_HR    => __('Horizontal Rule')\n);\n\n$alignment = array(\n\tREPORTS_ALIGN_LEFT   => __('left'),\n\tREPORTS_ALIGN_CENTER => __('center'),\n\tREPORTS_ALIGN_RIGHT  => __('right')\n);\n\n$reports_interval = array(\n\tREPORTS_SCHED_INTVL_MINUTE        => __('Minute(s)'),\n\tREPORTS_SCHED_INTVL_HOUR          => __('Hour(s)'),\n\tREPORTS_SCHED_INTVL_DAY           => __('Day(s)'),\n\tREPORTS_SCHED_INTVL_WEEK          => __('Week(s)'),\n\tREPORTS_SCHED_INTVL_MONTH_DAY     => __('Month(s), Day of Month'),\n\tREPORTS_SCHED_INTVL_MONTH_WEEKDAY => __('Month(s), Day of Week'),\n\tREPORTS_SCHED_INTVL_YEAR          => __('Year(s)'),\n);\n\n$agg_graph_types = array(\n\tAGGREGATE_GRAPH_TYPE_KEEP         => __('Keep Graph Types'),\n\tAGGREGATE_GRAPH_TYPE_KEEP_STACKED => __('Keep Type and STACK'),\n\tGRAPH_ITEM_TYPE_STACK             => __('Convert to AREA/STACK Graph'),\n\tGRAPH_ITEM_TYPE_LINE1             => __('Convert to LINE1 Graph'),\n\tGRAPH_ITEM_TYPE_LINE2             => __('Convert to LINE2 Graph'),\n\tGRAPH_ITEM_TYPE_LINE3             => __('Convert to LINE3 Graph'),\n\tAGGREGATE_GRAPH_TYPE_LINE1_STACK  => __('Convert to LINE1/STACK Graph'),\n\tAGGREGATE_GRAPH_TYPE_LINE2_STACK  => __('Convert to LINE2/STACK Graph'),\n\tAGGREGATE_GRAPH_TYPE_LINE3_STACK  => __('Convert to LINE3/STACK Graph'),\n);\n\n$agg_totals = array(\n\tAGGREGATE_TOTAL_NONE => __('No Totals'),\n\tAGGREGATE_TOTAL_ALL  => __('Print All Legend Items'),\n\tAGGREGATE_TOTAL_ONLY => __('Print Totaling Legend Items Only'),\n);\n\n$agg_totals_type = array(\n\tAGGREGATE_TOTAL_TYPE_SIMILAR => __('Total Similar Data Sources'),\n\tAGGREGATE_TOTAL_TYPE_ALL     => __('Total All Data Sources'),\n);\n\n$agg_order_types = array(\n\tAGGREGATE_ORDER_NONE       => __('No Reordering'),\n\tAGGREGATE_ORDER_DS_GRAPH   => __('Data Source, Graph'),\n\tAGGREGATE_ORDER_GRAPH_DS   => __('Graph, Data Source'),\n\tAGGREGATE_ORDER_BASE_GRAPH => __('Base Graph Order')\n);\n\n# operators for use with SQL/pattern matching\n$automation_op_array = array(\n\t'display' => array(\n\t\tAUTOMATION_OP_NONE         => __('None'),\n\t\tAUTOMATION_OP_CONTAINS     => __('contains'),\n\t\tAUTOMATION_OP_CONTAINS_NOT => __('does not contain'),\n\t\tAUTOMATION_OP_BEGINS       => __('begins with'),\n\t\tAUTOMATION_OP_BEGINS_NOT   => __('does not begin with'),\n\t\tAUTOMATION_OP_ENDS         => __('ends with'),\n\t\tAUTOMATION_OP_ENDS_NOT     => __('does not end with'),\n\t\tAUTOMATION_OP_MATCHES      => __('matches'),\n\t\tAUTOMATION_OP_MATCHES_NOT  => __('is not equal to'),\n\t\tAUTOMATION_OP_LT           => __('is less than'),\n\t\tAUTOMATION_OP_LE           => __('is less than or equal'),\n\t\tAUTOMATION_OP_GT           => __('is greater than'),\n\t\tAUTOMATION_OP_GE           => __('is greater than or equal'),\n\t\tAUTOMATION_OP_UNKNOWN      => __('is unknown'),\n\t\tAUTOMATION_OP_NOT_UNKNOWN  => __('is not unknown'),\n\t\tAUTOMATION_OP_EMPTY        => __('is empty'),\n\t\tAUTOMATION_OP_NOT_EMPTY    => __('is not empty'),\n\t\tAUTOMATION_OP_REGEXP       => __('matches regular expression'),\n\t\tAUTOMATION_OP_NOT_REGEXP   => __('does not match regular expression'),\n\t),\n\t'op' => array(\n\t\tAUTOMATION_OP_NONE          => '',\n\t\tAUTOMATION_OP_CONTAINS      => 'LIKE',\n\t\tAUTOMATION_OP_CONTAINS_NOT  => 'NOT LIKE',\n\t\tAUTOMATION_OP_BEGINS        => 'LIKE',\n\t\tAUTOMATION_OP_BEGINS_NOT    => 'NOT LIKE',\n\t\tAUTOMATION_OP_ENDS          => 'LIKE',\n\t\tAUTOMATION_OP_ENDS_NOT      => 'NOT LIKE',\n\t\tAUTOMATION_OP_MATCHES       => '<=>',\n\t\tAUTOMATION_OP_MATCHES_NOT   => '<>',\n\t\tAUTOMATION_OP_LT            => '<',\n\t\tAUTOMATION_OP_LE            => '<=',\n\t\tAUTOMATION_OP_GT            => '>',\n\t\tAUTOMATION_OP_GE            => '>=',\n\t\tAUTOMATION_OP_UNKNOWN       => 'IS NULL',\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => 'IS NOT NULL',\n\t\tAUTOMATION_OP_EMPTY         => \"LIKE ''\",\n\t\tAUTOMATION_OP_NOT_EMPTY     => \"NOT LIKE ''\",\n\t\tAUTOMATION_OP_REGEXP        => 'REGEXP',\n\t\tAUTOMATION_OP_NOT_REGEXP    => 'NOT REGEXP',\n\t),\n\t'binary' => array(\n\t\tAUTOMATION_OP_NONE          => false,\n\t\tAUTOMATION_OP_CONTAINS      => true,\n\t\tAUTOMATION_OP_CONTAINS_NOT  => true,\n\t\tAUTOMATION_OP_BEGINS        => true,\n\t\tAUTOMATION_OP_BEGINS_NOT    => true,\n\t\tAUTOMATION_OP_ENDS          => true,\n\t\tAUTOMATION_OP_ENDS_NOT      => true,\n\t\tAUTOMATION_OP_MATCHES       => true,\n\t\tAUTOMATION_OP_MATCHES_NOT   => true,\n\t\tAUTOMATION_OP_LT            => true,\n\t\tAUTOMATION_OP_LE            => true,\n\t\tAUTOMATION_OP_GT            => true,\n\t\tAUTOMATION_OP_GE            => true,\n\t\tAUTOMATION_OP_UNKNOWN       => false,\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => false,\n\t\tAUTOMATION_OP_EMPTY         => false,\n\t\tAUTOMATION_OP_NOT_EMPTY     => false,\n\t\tAUTOMATION_OP_REGEXP        => true,\n\t\tAUTOMATION_OP_NOT_REGEXP    => true,\n\t),\n\t'pre' => array(\n\t\tAUTOMATION_OP_NONE          => '',\n\t\tAUTOMATION_OP_CONTAINS      => '%',\n\t\tAUTOMATION_OP_CONTAINS_NOT  => '%',\n\t\tAUTOMATION_OP_BEGINS        => '',\n\t\tAUTOMATION_OP_BEGINS_NOT    => '',\n\t\tAUTOMATION_OP_ENDS          => '%',\n\t\tAUTOMATION_OP_ENDS_NOT      => '%',\n\t\tAUTOMATION_OP_MATCHES       => '',\n\t\tAUTOMATION_OP_MATCHES_NOT   => '',\n\t\tAUTOMATION_OP_LT            => '',\n\t\tAUTOMATION_OP_LE            => '',\n\t\tAUTOMATION_OP_GT            => '',\n\t\tAUTOMATION_OP_GE            => '',\n\t\tAUTOMATION_OP_UNKNOWN       => '',\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => '',\n\t\tAUTOMATION_OP_EMPTY         => '',\n\t\tAUTOMATION_OP_NOT_EMPTY     => '',\n\t\tAUTOMATION_OP_REGEXP        => '',\n\t\tAUTOMATION_OP_NOT_REGEXP    => '',\n\t),\n\t'post' => array(\n\t\tAUTOMATION_OP_NONE          => '',\n\t\tAUTOMATION_OP_CONTAINS      => '%',\n\t\tAUTOMATION_OP_CONTAINS_NOT  => '%',\n\t\tAUTOMATION_OP_BEGINS        => '%',\n\t\tAUTOMATION_OP_BEGINS_NOT    => '%',\n\t\tAUTOMATION_OP_ENDS          => '',\n\t\tAUTOMATION_OP_ENDS_NOT      => '',\n\t\tAUTOMATION_OP_MATCHES       => '',\n\t\tAUTOMATION_OP_MATCHES_NOT   => '',\n\t\tAUTOMATION_OP_LT            => '',\n\t\tAUTOMATION_OP_LE            => '',\n\t\tAUTOMATION_OP_GT            => '',\n\t\tAUTOMATION_OP_GE            => '',\n\t\tAUTOMATION_OP_UNKNOWN       => '',\n\t\tAUTOMATION_OP_NOT_UNKNOWN   => '',\n\t\tAUTOMATION_OP_EMPTY         => '',\n\t\tAUTOMATION_OP_NOT_EMPTY     => '',\n\t\tAUTOMATION_OP_REGEXP        => '',\n\t\tAUTOMATION_OP_NOT_REGEXP    => '',\n\t)\n);\n\n$automation_oper = array(\n\tAUTOMATION_OPER_NULL            => '',\n\tAUTOMATION_OPER_AND             => 'AND',\n\tAUTOMATION_OPER_OR              => 'OR',\n\tAUTOMATION_OPER_LEFT_BRACKET    => '(',\n\tAUTOMATION_OPER_RIGHT_BRACKET   => ')',\n);\n\n$automation_tree_item_types  = array(\n\tTREE_ITEM_TYPE_GRAPH => __('Graph'),\n\tTREE_ITEM_TYPE_HOST  => __('Device')\n);\n\n$automation_tree_header_types  = array(\n\tAUTOMATION_TREE_ITEM_TYPE_STRING => __('Fixed String'),\n);\n\n$automation_frequencies = array(\n\t'disabled' => __('Disabled'),\n\t'60'       => __('Every 1 Hour'),\n\t'120'      => __('Every %d Hours', 2),\n\t'240'      => __('Every %d Hours', 4),\n\t'360'      => __('Every %d Hours', 6),\n\t'480'      => __('Every %d Hours', 8),\n\t'720'      => __('Every %d Hours', 12),\n\t'1440'     => __('Every Day'),\n\t'10080'    => __('Every Week'),\n\t'20160'    => __('Every %d Weeks', 2),\n\t'40320'    => __('Every %d Weeks', 4)\n);\n\n$logrotate_frequency = array(\n\t'1'  => __('Daily'),\n\t'7'  => __('Weekly'),\n\t'30' => __('Monthly')\n);\n\n$no_session_write = array(\n\t'graph_xport.php',\n\t'graph_image.php',\n\t'graph_json.php'\n);\n\n$i18n_months = array(\n\t'January'\t=> __('January'),\n\t'February'\t=> __('February'),\n\t'March'\t\t=> __('March'),\n\t'April'\t\t=> __('April'),\n\t'May'\t\t=> __('May'),\n\t'June'\t\t=> __('June'),\n\t'July'\t\t=> __('July'),\n\t'August'\t=> __('August'),\n\t'September'\t=> __('September'),\n\t'October'\t=> __('October'),\n\t'November'\t=> __('November'),\n\t'December'\t=> __('December'),\n);\n\n$i18n_months_short = array(\n\t'Jan'\t=> __x('A short textual representation of a month, three letters', 'Jan'),\n\t'Feb'\t=> __x('A short textual representation of a month, three letters', 'Feb'),\n\t'Mar'\t=> __x('A short textual representation of a month, three letters', 'Mar'),\n\t'Arp'\t=> __x('A short textual representation of a month, three letters', 'Apr'),\n\t'May'\t=> __x('A short textual representation of a month, three letters', 'May'),\n\t'Jun'\t=> __x('A short textual representation of a month, three letters', 'Jun'),\n\t'Jul'\t=> __x('A short textual representation of a month, three letters', 'Jul'),\n\t'Aug'\t=> __x('A short textual representation of a month, three letters', 'Aug'),\n\t'Sep'\t=> __x('A short textual representation of a month, three letters', 'Sep'),\n\t'Oct'\t=> __x('A short textual representation of a month, three letters', 'Oct'),\n\t'Nov'\t=> __x('A short textual representation of a month, three letters', 'Nov'),\n\t'Dec'\t=> __x('A short textual representation of a month, three letters', 'Dec'),\n);\n\n$i18n_supported_languages = array(\n\tCACTI_LANGUAGE_HANDLER_DEFAULT => __('Use the First Handler Found'),\n);\n\nif (is_dir($config['base_path'] . '/include/vendor/phpgettext')) {\n\t$i18n_supported_languages[CACTI_LANGUAGE_HANDLER_PHPGETTEXT]  = __('Use the PHP GetText Handler');\n}\n\nif (is_dir($config['base_path'] . '/include/vendor/gettext') && version_compare(PHP_VERSION, '8.0', '<=')) {\n\t$i18n_supported_languages[CACTI_LANGUAGE_HANDLER_OSCAROTERO]  = __('Use the Oscarotero GetText Handler');\n}\n\nif (is_dir($config['base_path'] . '/include/vendor/monotranslator')) {\n\t$i18n_supported_languages[CACTI_LANGUAGE_HANDLER_MOTRANSLATOR]  = __('Use the MonoTranslator GetText Handler');\n}\n\n$i18n_weekdays = array(\n\t'Sunday'\t=> __('Sunday'),\n\t'Monday'\t=> __('Monday'),\n\t'Tuesday'\t=> __('Tuesday'),\n\t'Wednesday'\t=> __('Wednesday'),\n\t'Thursday'\t=> __('Thursday'),\n\t'Friday'\t=> __('Friday'),\n\t'Saturday'\t=> __('Saturday')\n);\n\n$i18n_weekdays_short = array(\n\t'Sun'\t=> __x('A textual representation of a day, three letters', 'Sun'),\n\t'Mon'\t=> __x('A textual representation of a day, three letters', 'Mon'),\n\t'Tue'\t=> __x('A textual representation of a day, three letters', 'Tue'),\n\t'Wed'\t=> __x('A textual representation of a day, three letters', 'Wed'),\n\t'Thu'\t=> __x('A textual representation of a day, three letters', 'Thu'),\n\t'Fri'\t=> __x('A textual representation of a day, three letters', 'Fri'),\n\t'Sat'\t=> __x('A textual representation of a day, three letters', 'Sat')\n);\n\n$i18n_languages = array(\n\t__('Arabic'),\n\t__('Bulgarian'),\n\t__('Chinese (China)'),\n\t__('Chinese (Taiwan)'),\n\t__('Dutch'),\n\t__('English'),\n\t__('French'),\n\t__('German'),\n\t__('Greek'),\n\t__('Hebrew'),\n\t__('Hindi'),\n\t__('Italian'),\n\t__('Japanese'),\n\t__('Korean'),\n\t__('Polish'),\n\t__('Portuguese'),\n\t__('Portuguese (Brazil)'),\n\t__('Russian'),\n\t__('Spanish'),\n\t__('Swedish'),\n\t__('Turkish'),\n\t__('Vietnamese')\n);\n\n$i18n_themes = array(\n\t__('Classic'),\n\t__('Modern'),\n\t__('Dark'),\n\t__('Paper-plane'),\n\t__('Paw'),\n\t__('Sunrise'),\n);\n\n$database_statuses = array(\n\t0 => __('[Fail]'),\n\t1 => __('[Warning]'),\n\t2 => __('[Restart]'),\n\t3 => __('[Success]'),\n\t4 => __('[Skipped]'),\n);\n\n$navigation = array(\n\t'auth_profile.php:' => array(\n\t\t'title' => __('User Profile (Edit)'),\n\t\t'mapping' => '',\n\t\t'url' => '',\n\t\t'level' => '0'\n\t),\n\t'auth_profile.php:edit' => array(\n\t\t'title' => __('User Profile (Edit)'),\n\t\t'mapping' => '',\n\t\t'url' => '',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:' => array(\n\t\t'title' => __('Graphs'),\n\t\t'mapping' => '',\n\t\t'url' => 'graph_view.php',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:tree' => array(\n\t\t'title' => __('Tree Mode'),\n\t\t'mapping' => 'graph_view.php:',\n\t\t'url' => 'graph_view.php?action=tree',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:tree_content' => array(\n\t\t'title' => __('Tree Mode'),\n\t\t'mapping' => 'graph_view.php:',\n\t\t'url' => 'graph_view.php?action=tree',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:list' => array(\n\t\t'title' => __('List Mode'),\n\t\t'mapping' => '',\n\t\t'url' => 'graph_view.php?action=list',\n\t\t'level' => '0'\n\t),\n\t'graph_view.php:preview' => array(\n\t\t'title' => __('Preview Mode'),\n\t\t'mapping' => '',\n\t\t'url' => 'graph_view.php?action=preview',\n\t\t'level' => '0'\n\t),\n\t'graph.php:' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'graph.php:view' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'graph.php:zoom' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'graph.php:update_timespan' => array(\n\t\t'title' => '|current_graph_title|',\n\t\t'mapping' => 'graph_view.php:',\n\t\t'level' => '1'\n\t),\n\t'index.php:' => array(\n\t\t'title' => __('Console'),\n\t\t'mapping' => '',\n\t\t'url' => $config['url_path'] . 'index.php',\n\t\t'level' => '0'\n\t),\n\t'index.php:login' => array(\n\t\t'title' => __('Console'),\n\t\t'mapping' => '',\n\t\t'url' => $config['url_path'] . 'index.php',\n\t\t'level' => '0'\n\t),\n\t'graphs.php:' => array(\n\t\t'title' => __('Graph Management'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'graphs.php',\n\t\t'level' => '1'\n\t),\n\t'graphs.php:graph_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graphs.php:graph_diff' => array(\n\t\t'title' => __('Change Graph Template'),\n\t\t'mapping' => 'index.php:,graphs.php:,graphs.php:graph_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graphs.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graphs_items.php:item_edit' => array(\n\t\t'title' => __('Graph Items'),\n\t\t'mapping' => 'index.php:,graphs.php:,graphs.php:graph_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graphs_new.php:' => array(\n\t\t'title' => __('Create New Graphs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'graphs_new.php',\n\t\t'level' => '1'\n\t),\n\t'graphs_new.php:save' => array(\n\t\t'title' => __('Create Graphs from Data Query'),\n\t\t'mapping' => 'index.php:,graphs_new.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'gprint_presets.php:' => array(\n\t\t'title' => __('GPRINT Presets'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'gprint_presets.php',\n\t\t'level' => '1'\n\t),\n\t'gprint_presets.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,gprint_presets.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'gprint_presets.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,gprint_presets.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'cdef.php:' => array(\n\t\t'title' => __('CDEFs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'cdef.php',\n\t\t'level' => '1'\n\t),\n\t'cdef.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,cdef.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'cdef.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,cdef.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'cdef.php:item_edit' => array(\n\t\t'title' => __('CDEF Items'),\n\t\t'mapping' => 'index.php:,cdef.php:,cdef.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'cdef.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,cdef.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'clog.php:' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog.php',\n\t\t'level' => '0'\n\t),\n\t'clog.php:preview' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog.php',\n\t\t'level' => '0'\n\t),\n\t'clog_user.php:' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog_user.php',\n\t\t'level' => '0'\n\t),\n\t'clog_user.php:preview' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => '',\n\t\t'url' => 'clog_user.php',\n\t\t'level' => '0'\n\t),\n\t'tree.php:' => array(\n\t\t'title' => __('Graph Trees'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'tree.php',\n\t\t'level' => '1'\n\t),\n\t'tree.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,tree.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'pollers.php:' => array(\n\t\t'title' => __('Data Collectors'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'pollers.php',\n\t\t'level' => '1'\n\t),\n\t'pollers.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,pollers.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'links.php:' => array(\n\t\t'title' => __('External Links'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'links.php',\n\t\t'level' => '1'\n\t),\n\t'links.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,links.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color.php:' => array(\n\t\t'title' => __('Colors'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'color.php',\n\t\t'level' => '1'\n\t),\n\t'color.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,color.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graph_templates.php:' => array(\n\t\t'title' => __('Graph Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'graph_templates.php',\n\t\t'level' => '1'\n\t),\n\t'graph_templates.php:template_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,graph_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graph_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,graph_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'graph_templates_items.php:item_edit' => array(\n\t\t'title' => __('Graph Template Items'),\n\t\t'mapping' => 'index.php:,graph_templates.php:,graph_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graph_templates_inputs.php:input_edit' => array(\n\t\t'title' => __('Graph Item Inputs'),\n\t\t'mapping' => 'index.php:,graph_templates.php:,graph_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'graph_templates_inputs.php:input_remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,graph_templates.php:,graph_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'host_templates.php:' => array(\n\t\t'title' => __('Device Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'host_templates.php',\n\t\t'level' => '1'\n\t),\n\t'host_templates.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,host_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'host_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,host_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_templates.php:' => array(\n\t\t'title' => __('Data Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_templates.php',\n\t\t'level' => '1'\n\t),\n\t'data_templates.php:template_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_sources.php:' => array(\n\t\t'title' => __('Data Sources'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_sources.php',\n\t\t'level' => '1'\n\t),\n\t'data_sources.php:ds_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_sources.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_sources.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_sources.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'host.php:' => array(\n\t\t'title' => __('Devices'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'host.php',\n\t\t'level' => '1'\n\t),\n\t'host.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,host.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'host.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,host.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'rra.php:' => array(\n\t\t'title' => __('Round Robin Archives'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'rra.php',\n\t\t'level' => '1'\n\t),\n\t'rra.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,rra.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'rra.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,rra.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:' => array(\n\t\t'title' => __('Data Input Methods'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_input.php',\n\t\t'level' => '1'\n\t),\n\t'data_input.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_input.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_input.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,data_input.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_input.php:field_edit' => array(\n\t\t'title' => __('Data Input Fields'),\n\t\t'mapping' => 'index.php:,data_input.php:,data_input.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'data_input.php:field_remove' => array(\n\t\t'title' => __('(Remove Item)'),\n\t\t'mapping' => 'index.php:,data_input.php:,data_input.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'data_queries.php:' => array(\n\t\t'title' => __('Data Queries'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'data_queries.php',\n\t\t'level' => '1'\n\t),\n\t'data_queries.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,data_queries.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_queries.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,data_queries.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'data_queries.php:item_edit' => array(\n\t\t'title' => __('Associated Graph Templates'),\n\t\t'mapping' => 'index.php:,data_queries.php:,data_queries.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'data_queries.php:item_remove' => array(\n\t\t'title' => __('(Remove Item)'),\n\t\t'mapping' => 'index.php:,data_queries.php:,data_queries.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'rrdcleaner.php:' => array(\n\t\t'title' => __('RRD Cleaner'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'rrdcleaner.php',\n\t\t'level' => '2'\n\t),\n\t'rrdcleaner.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,rrdcleaner.php:',\n\t\t'url' => 'rrdcleaner.php?action=actions',\n\t\t'level' => '2'\n\t),\n\t'rrdcleaner.php:restart' => array(\n\t\t'title' => __('List unused Files'),\n\t\t'mapping' => 'rrdcleaner.php:',\n\t\t'url' => 'rrdcleaner.php?action=restart',\n\t\t'level' => '2'\n\t),\n\t'rrdcheck.php:' => array(\n\t\t'title' => __('RRD Check'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'rrdcheck.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:' => array(\n\t\t'title' => __('Utilities'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '1'\n\t),\n\t'utilities.php:view_poller_cache' => array(\n\t\t'title' => __('View Poller Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_snmp_cache' => array(\n\t\t'title' => __('View Data Query Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:clear_poller_cache' => array(\n\t\t'title' => __('View Poller Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_logfile' => array(\n\t\t'title' => __('View Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:clear_logfile' => array(\n\t\t'title' => __('Clear Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_user_log' => array(\n\t\t'title' => __('View User Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:clear_user_log' => array(\n\t\t'title' => __('Clear User Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_tech' => array(\n\t\t'title' => __('Technical Support'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_boost_status' => array(\n\t\t'title' => __('Boost Status'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_snmpagent_cache' => array(\n\t\t'title' => __('View SNMP Agent Cache'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'utilities.php:view_snmpagent_events' => array(\n\t\t'title' => __('View SNMP Agent Notification Log'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'utilities.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:' => array(\n\t\t'title' => __('VDEFs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '1'\n\t),\n\t'vdef.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,vdef.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,vdef.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:remove' => array(\n\t\t'title' => __('(Remove)'),\n\t\t'mapping' => 'index.php:,vdef.php:',\n\t\t'url' => 'vdef.php',\n\t\t'level' => '2'\n\t),\n\t'vdef.php:item_edit' => array(\n\t\t'title' => __('VDEF Items'),\n\t\t'mapping' => 'index.php:,vdef.php:,vdef.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'managers.php:' => array(\n\t\t'title' => __('View SNMP Notification Receivers'),\n\t\t'mapping' => 'index.php:,utilities.php:',\n\t\t'url' => 'managers.php',\n\t\t'level' => '2'\n\t),\n\t'managers.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,utilities.php:,managers.php:',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'settings.php:' => array(\n\t\t'title' => __('Cacti Settings'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'settings.php',\n\t\t'level' => '1'\n\t),\n\t'link.php:' => array(\n\t\t'title' => __('External Link'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'link.php',\n\t\t'level' => '1'\n\t),\n\t'user_admin.php:' => array(\n\t\t'title' => __('Users'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'user_admin.php',\n\t\t'level' => '1'\n\t),\n\t'user_admin.php:user_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,user_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'user_admin.php:actions' => array(\n\t\t'title' => __('(Action)'),\n\t\t'mapping' => 'index.php:,user_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'user_domains.php:' => array(\n\t\t'title' => __('User Domains'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'user_domains.php',\n\t\t'level' => '1'\n\t),\n\t'user_domains.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'user_domains.php:,index.php:',\n\t\t'url' => 'user_domains.php',\n\t\t'level' => '2'\n\t),\n\t'user_group_admin.php:' => array(\n\t\t'title' => __('User Groups'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'user_group_admin.php',\n\t\t'level' => '1'\n\t),\n\t'user_group_admin.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,user_group_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'user_group_admin.php:actions' => array(\n\t\t'title' => __('(Action)'),\n\t\t'mapping' => 'index.php:,user_group_admin.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'about.php:' => array(\n\t\t'title' => __('About Cacti'),\n\t\t'mapping' => '',\n\t\t'url' => 'about.php',\n\t\t'level' => '1'\n\t),\n\t'help.php:' => array(\n\t\t'title' => __('Cacti Help'),\n\t\t'mapping' => '',\n\t\t'url' => 'help.php',\n\t\t'level' => '1'\n\t),\n\t'templates_export.php:' => array(\n\t\t'title' => __('Export Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'templates_export.php',\n\t\t'level' => '1'\n\t),\n\t'templates_export.php:save' => array(\n\t\t'title' => __('Export Results'),\n\t\t'mapping' => 'index.php:,templates_export.php:',\n\t\t'url' => 'templates_export.php',\n\t\t'level' => '2'\n\t),\n\t'templates_import.php:' => array(\n\t\t'title' => __('Import Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'templates_import.php',\n\t\t'level' => '1'\n\t),\n\t'package_import.php:' => array(\n\t\t'title' => __('Import Packages'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'package_import.php',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:' => array(\n\t\t'title' => __('Reporting'),\n\t\t'mapping' => '',\n\t\t'url' => 'reports_admin.php',\n\t\t'level' => '0'\n\t),\n\t'reports_admin.php:actions' => array(\n\t\t'title' => __('Report Add'),\n\t\t'mapping' => 'reports_admin.php:',\n\t\t'url' => 'reports_admin.php',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:delete' => array(\n\t\t'title' => __('Report Delete'),\n\t\t'mapping' => 'reports_admin.php:',\n\t\t'url' => 'reports_admin.php',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:edit' => array(\n\t\t'title' => __('Report Edit'),\n\t\t'mapping' => 'reports_admin.php:',\n\t\t'url' => 'reports_admin.php?action=edit',\n\t\t'level' => '1'\n\t),\n\t'reports_admin.php:item_edit' => array(\n\t\t'title' => __('Report Edit Item'),\n\t\t'mapping' => 'reports_admin.php:,reports_admin.php:edit',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'reports_user.php:' => array(\n\t\t'title' => __('Reporting'),\n\t\t'mapping' => '',\n\t\t'url' => 'reports_user.php',\n\t\t'level' => '0'\n\t),\n\t'reports_user.php:actions' => array(\n\t\t'title' => __('Report Add'),\n\t\t'mapping' => 'reports_user.php:',\n\t\t'url' => 'reports_user.php',\n\t\t'level' => '1'\n\t),\n\t'reports_user.php:delete' => array(\n\t\t'title' => __('Report Delete'),\n\t\t'mapping' => 'reports_user.php:',\n\t\t'url' => 'reports_user.php',\n\t\t'level' => '1'\n\t),\n\t'reports_user.php:edit' => array(\n\t\t'title' => __('Report Edit'),\n\t\t'mapping' => 'reports_user.php:',\n\t\t'url' => 'reports_user.php?action=edit',\n\t\t'level' => '1'\n\t),\n\t'reports_user.php:item_edit' => array(\n\t\t'title' => __('Report Edit Item'),\n\t\t'mapping' => 'reports_user.php:,reports_user.php:edit',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color_templates.php:' => array(\n\t\t'title' => __('Color Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'color_templates.php',\n\t\t'level' => '1'\n\t),\n\t'color_templates.php:template_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,color_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color_templates.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,color_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'color_templates_items.php:item_edit' => array(\n\t\t'title' => __('Color Template Items'),\n\t\t'mapping' => 'index.php:,color_templates.php:,color_templates.php:template_edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'aggregate_templates.php:' => array(\n\t\t'title' => __('Aggregate Templates'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'aggregate_templates.php',\n\t\t'level' => '1'\n\t),\n\t'aggregate_templates.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,aggregate_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_templates.php:actions'=> array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,aggregate_templates.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_graphs.php:' => array(\n\t\t'title' => __('Aggregate Graphs'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'aggregate_graphs.php',\n\t\t'level' => '1'\n\t),\n\t'aggregate_graphs.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,aggregate_graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_graphs.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,aggregate_graphs.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_items.php:' => array(\n\t\t'title' => __('Aggregate Items'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'aggregate_items.php',\n\t\t'level' => '1'\n\t),\n\t'aggregate_items.php:item_edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,aggregate_graphs.php:,aggregate_items.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'aggregate_items.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,aggregate_items.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_graph_rules.php:' => array(\n\t\t'title' => __('Graph Rules'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'automation_graph_rules.php',\n\t\t'level' => '1'\n\t),\n\t'automation_graph_rules.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,automation_graph_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_graph_rules.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,automation_graph_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_graph_rules.php:item_edit' => array(\n\t\t'title' => __('Graph Rule Items'),\n\t\t'mapping' => 'index.php:,automation_graph_rules.php:,automation_graph_rules.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t),\n\t'automation_tree_rules.php:' => array(\n\t\t'title' => __('Tree Rules'),\n\t\t'mapping' => 'index.php:',\n\t\t'url' => 'automation_tree_rules.php',\n\t\t'level' => '1'\n\t),\n\t'automation_tree_rules.php:edit' => array(\n\t\t'title' => __('(Edit)'),\n\t\t'mapping' => 'index.php:,automation_tree_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_tree_rules.php:actions' => array(\n\t\t'title' => __('Actions'),\n\t\t'mapping' => 'index.php:,automation_tree_rules.php:',\n\t\t'url' => '',\n\t\t'level' => '2'\n\t),\n\t'automation_tree_rules.php:item_edit' => array(\n\t\t'title' => __('Tree Rule Items'),\n\t\t'mapping' => 'index.php:,automation_tree_rules.php:,automation_tree_rules.php:edit',\n\t\t'url' => '',\n\t\t'level' => '3'\n\t)\n);\n\n$snmpagent_event_severity = array(\n\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'low',\n\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'medium',\n\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'high',\n\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'critical'\n);\n\n$days_from_time_settings = array(\n\t'mods' => array(\n\t\t'd' => 86400,\n\t\t'h' => 3600,\n\t\t'm' => '60',\n\t\t's' => 0,\n\t),\n\t'text' => array(\n\t\tDAYS_FORMAT_SHORT => array(\n\t\t\t'd' => 'd',\n\t\t        'h' => 'h',\n\t\t        'm' => 'm',\n\t\t\t's' => 's',\n\t\t\t'suffix' => ':',\n\t\t\t'prefix' => '',\n\t\t),\n\t\tDAYS_FORMAT_MEDIUM => array(\n\t\t\t'd' => __('days'),\n\t\t\t'h' => __('hrs'),\n\t\t\t'm' => __('mins'),\n\t\t\t's' => __('secs'),\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t\tDAYS_FORMAT_MEDIUM_LOG => array(\n\t\t\t'd' => 'days',\n\t\t\t'h' => 'hrs',\n\t\t\t'm' => 'mins',\n\t\t\t's' => 'secs',\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t\tDAYS_FORMAT_LONG => array(\n\t\t\t'd' => __('days'),\n\t\t\t'h' => __('hours'),\n\t\t\t'm' => __('minutes'),\n\t\t\t's' => __('seconds'),\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t\tDAYS_FORMAT_LONG_LOG => array(\n\t\t\t'd' => 'days',\n\t\t\t'h' => 'hours',\n\t\t\t'm' => 'minutes',\n\t\t\t's' => 'seconds',\n\t\t\t'suffix' => ', ',\n\t\t\t'prefix' => ' ',\n\t\t),\n\t),\n);\n\n$graph_sources = array(\n\t0 => __('Not Templated'),\n\t1 => __('Data Query'),\n\t2 => __('Template'),\n\t3 => __('Aggregate'),\n);\n\nif ($config['cacti_server_os'] == 'unix') {\n\t$dejavu_paths = array(\n\t\t'/usr/share/fonts/dejavu/', //RHEL/CentOS\n\t\t'/usr/share/fonts/truetype/', //SLES\n\t\t'/usr/share/fonts/truetype/dejavu/', //Ubuntu\n\t\t'/usr/local/share/fonts/dejavu/', //FreeBSD\n\t\t__DIR__ . '/fonts'  //Build-in\n\t);\n} else {\n\t$dejavu_paths = array(\n\t\t'C:/Windows/Fonts/' //Windows\n\t);\n}\n\n$allowed_proxy_headers =\tarray(\n\t'X-Forwarded-For',\n\t'X-Client-IP',\n\t'X-Real-IP',\n\t'X-ProxyUser-Ip',\n\t'CF-Connecting-IP',\n\t'True-Client-IP',\n\t'HTTP_X_FORWARDED',\n\t'HTTP_X_FORWARDED_FOR',\n\t'HTTP_X_CLUSTER_CLIENT_IP',\n\t'HTTP_FORWARDED_FOR',\n\t'HTTP_FORWARDED',\n\t'HTTP_CLIENT_IP',\n\t'REMOTE_ADDR',\n);\n\napi_plugin_hook('config_arrays');\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n\n/**\n * clear_auth_cookie - clears a users security token\n *\n * @return (void)\n */\nfunction clear_auth_cookie() {\n\tglobal $config;\n\n\tif (isset($_COOKIE['cacti_remembers']) && read_config_option('auth_cache_enabled') == 'on') {\n\t\t$parts = explode(',', $_COOKIE['cacti_remembers']);\n\n\t\tif (cacti_sizeof($parts) == 2) {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = -1;\n\t\t\t$token    = $parts[1];\n\t\t} else {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = $parts[1];\n\t\t\t$token    = $parts[2];\n\t\t}\n\n\t\t// Legacy support which leaked usernames\n\t\tif (!is_numeric($user_id)) {\n\t\t\t$user_id = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?',\n\t\t\t\tarray($user_id));\n\t\t}\n\n\t\tif ($user_id > 0) {\n\t\t\t$secret = hash('sha512', $token, false);\n\n\t\t\tcacti_cookie_session_logout();\n\n\t\t\tdb_execute_prepared('DELETE FROM user_auth_cache\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tAND token = ?',\n\t\t\t\tarray($user_id, $secret));\n\t\t}\n\t}\n}\n\n/**\n * set_auth_cookie - sets a users security token\n *\n * @param  (array) user is the user_auth row for the user\n *\n * @return (bool) True if token set worked, otherwise false\n */\nfunction set_auth_cookie($user) {\n\tglobal $config;\n\n\tif (db_table_exists('user_auth_cache')) {\n\t\tclear_auth_cookie();\n\n\t\t$nssecret = md5($_SERVER['REQUEST_TIME'] .  mt_rand(10000,10000000)) . md5(get_client_addr());\n\n\t\t$secret = hash('sha512', $nssecret, false);\n\n\t\tdb_execute_prepared('REPLACE INTO user_auth_cache\n\t\t\t(user_id, hostname, last_update, token)\n\t\t\tVALUES\n\t\t\t(?, ?, NOW(), ?);',\n\t\t\tarray($user['id'], get_client_addr(), $secret));\n\n\t\tcacti_cookie_session_set($user['id'], $user['realm'], $nssecret);\n\t}\n}\n\n/**\n * check_auth_cookie - clears a users security token\n *\n * @return (int) The user of the session cookie, otherwise false\n */\nfunction check_auth_cookie() {\n\tif (isset($_COOKIE['cacti_remembers']) &&\n\t\tread_config_option('auth_cache_enabled') == 'on' &&\n\t\tdb_table_exists('user_auth_cache')) {\n\n\t\t$parts = explode(',', $_COOKIE['cacti_remembers']);\n\n\t\tif (cacti_sizeof($parts) == 2) {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = -1;\n\t\t\t$token    = $parts[1];\n\t\t} else {\n\t\t\t$user_id  = $parts[0];\n\t\t\t$realm_id = $parts[1];\n\t\t\t$token    = $parts[2];\n\t\t}\n\n\t\t// Legacy support which leaked usernames\n\t\tif (!is_numeric($user_id)) {\n\t\t\t$user_id = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?',\n\t\t\t\tarray($user_id));\n\t\t}\n\n\t\tif ($user_id > 0 && $user_id != get_guest_account()) {\n\t\t\tif ($realm_id == -1) {\n\t\t\t\t$user_info = db_fetch_row_prepared('SELECT id, realm, username\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($user_id));\n\t\t\t} else {\n\t\t\t\t$user_info = db_fetch_row_prepared('SELECT id, realm, username\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND realm = ?',\n\t\t\t\t\tarray($user_id, $realm_id));\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($user_info)) {\n\t\t\t\t$secret = hash('sha512', $token, false);\n\n\t\t\t\t$found  = db_fetch_cell_prepared('SELECT user_id\n\t\t\t\t\tFROM user_auth_cache\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND token = ?',\n\t\t\t\t\tarray($user_info['id'], $secret)\n\t\t\t\t);\n\n\t\t\t\tif (empty($found)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tset_auth_cookie($user_info);\n\n\t\t\t\t\tcacti_log(\"LOGIN: User '\" . $user_info['username'] . \"' Authenticated via Authentication Cookie\", false, 'AUTH');\n\n\t\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t\t\t\t(username, user_id, result, ip, time)\n\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t(?, ?, 2, ?, NOW())',\n\t\t\t\t\t\tarray($user_info['username'], $user_info['id'], get_client_addr())\n\t\t\t\t\t);\n\n\t\t\t\t\treturn $user_info['id'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * is_template_account - given a username or user_id test if this is a template account\n *   Template accounts could be accounts used for the administrative email, for both\n *   the guest and template accounts, or a user that is specified by a plugin as a\n *   template account.\n *\n * @param  (int|string) user_id is either the user_id or a username\n *\n * @return (bool) true if template account, false otherwise\n */\nfunction is_template_account($user_id) {\n\tif (!is_numeric($user_id)) {\n\t\t$user_id = db_fetch_cell_prepared('SELECT id FROM user_auth WHERE username = ?', array($user_id));\n\t}\n\n\tif (empty($user_id)) {\n\t\treturn false;\n\t}\n\n\tif (read_config_option('admin_user') == $user_id) {\n\t\treturn true;\n\t} elseif (read_config_option('guest_user') == $user_id) {\n\t\treturn true;\n\t} elseif (read_config_option('user_template') == $user_id) {\n\t\treturn true;\n\t} else {\n\t\t$domain_template = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM user_domains\n\t\t\tWHERE user_id = ?',\n\t\t\tarray($user_id));\n\n\t\tif ($domain_template > 0) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\t$plugin_template = get_template_account($user_id);\n\n\t\t\tif ($plugin_template == $user_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * get_basic_auth_username - If basic auth is used, return the valid username\n *\n * @return (string) the new username, or false if one was not passed\n */\nfunction get_basic_auth_username() {\n\tif (isset($_SERVER['PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['PHP_AUTH_USER']);\n\t} elseif (isset($_SERVER['REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REMOTE_USER']);\n\t} elseif (isset($_SERVER['REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['REDIRECT_REMOTE_USER']);\n\t} elseif (isset($_SERVER['HTTP_PHP_AUTH_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_PHP_AUTH_USER']);\n\t} elseif (isset($_SERVER['HTTP_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REMOTE_USER']);\n\t} elseif (isset($_SERVER['HTTP_REDIRECT_REMOTE_USER'])) {\n\t\t$username = str_replace(\"\\\\\", \"\\\\\\\\\", $_SERVER['HTTP_REDIRECT_REMOTE_USER']);\n\t} else {\n\t\t$username = false;\n\t}\n\n\tif ($username !== false) {\n\t\tif (strpos($username, '@') !== false) {\n\t\t\t$upart = explode('@', $username);\n\t\t\t$username = $upart[0];\n\t\t}\n\n\t\t/* Handle mapping basic accounts to shortform accounts.\n\t\t * Format of map file is CSV: basic,shortform */\n\t\t$mapfile = read_config_option('path_basic_mapfile');\n\t\tif ($mapfile != '' && file_exists($mapfile) && is_readable($mapfile)) {\n\t\t\t$records = file($mapfile);\n\t\t\t$found   = false;\n\n\t\t\tif (cacti_sizeof($records)) {\n\t\t\t\tforeach($records as $r) {\n\t\t\t\t\tlist($basic, $shortform) = str_getcsv($r);\n\n\t\t\t\t\tif (trim($basic) == $username) {\n\t\t\t\t\t\t$username = trim($shortform);\n\t\t\t\t\t\t$found    = true;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$found) {\n\t\t\t\tcacti_log(\"WARNING: Username $username not found in basic mapfile.\", false, 'AUTH');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $username;\n}\n\n/**\n * user_copy - copies user account\n *\n * @param  (string)  $template_user - username of the user account that should be used as the template\n * @param  (string)  $new_user - new username of the account to be created/overwritten\n * @param  (int)     $template_realm - new realm of the account\n * @param  (int)     $new_realm - new realm of the account to be created, overwrite not affected, but is used for lookup\n * @param  (bool)    $overwrite - Allow overwrite of existing user, preserves username, fullname, password and realm\n * @param  (array)   $data_override - Array of user_auth field and values to override on the new user\n *\n * @return (int|bool) the new users id, or false on no copy\n */\nfunction user_copy($template_user, $new_user, $template_realm = 0, $new_realm = 0, $overwrite = false, $data_override = array()) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($template_realm);\n\tinput_validate_input_number($new_realm);\n\t/* ==================================================== */\n\n\t/* Check get template users array */\n\t$user_auth = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE username = ?\n\t\tAND realm = ?',\n\t\tarray($template_user, $template_realm));\n\n\tif (!cacti_sizeof($user_auth)) {\n\t\treturn false;\n\t}\n\n\t$template_id = $user_auth['id'];\n\n\t/* Create update/insert for new/existing user */\n\t$user_exist = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE username = ?\n\t\tAND realm = ?',\n\t\tarray($new_user, $new_realm));\n\n\tif (cacti_sizeof($user_exist)) {\n\t\tif ($overwrite) {\n\t\t\t/* Overwrite existing user */\n\t\t\t$user_auth['id']            = $user_exist['id'];\n\t\t\t$user_auth['username']      = $user_exist['username'];\n\t\t\t$user_auth['password']      = $user_exist['password'];\n\t\t\t$user_auth['realm']         = $user_exist['realm'];\n\t\t\t$user_auth['full_name']     = $user_exist['full_name'];\n\t\t\t$user_auth['email_address'] = $user_exist['email_address'];\n \t\t\t$user_auth['must_change_password'] = $user_exist['must_change_password'];\n\t\t\t$user_auth['enabled']       = $user_exist['enabled'];\n\t\t} else {\n\t\t\t/* User already exists, duplicate users are bad */\n\t\t\traise_message(19);\n\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t/* new user */\n\t\t$user_auth['id']            = 0;\n\t\t$user_auth['username']      = $new_user;\n\t\t$user_auth['enabled']       = 'on';\n\t\t$user_auth['password']      = mt_rand(100000, 10000000);\n\t\t$user_auth['email_address'] = '';\n \t\t$user_auth['realm']         = $new_realm;\n\t}\n\n\t/* Update data_override fields */\n\tif (is_array($data_override)) {\n\t\tforeach ($data_override as $field => $value) {\n\t\t\tif (isset($user_auth[$field]) && $field != 'id' && $field != 'username') {\n\t\t\t\t$user_auth[$field] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* Save the user */\n\t$new_id = sql_save($user_auth, 'user_auth');\n\n\t/* Create/Update permissions and settings */\n\tif (cacti_sizeof($user_exist) && $overwrite) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms WHERE user_id = ?', array($user_exist['id']));\n\t\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE user_id = ?', array($user_exist['id']));\n\t\tdb_execute_prepared('DELETE FROM settings_user WHERE user_id = ?', array($user_exist['id']));\n\t\tdb_execute_prepared('DELETE FROM settings_tree WHERE user_id = ?', array($user_exist['id']));\n\t}\n\n\t$user_auth_perms = db_fetch_assoc_prepared('SELECT *\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($user_auth_perms)) {\n\t\tforeach ($user_auth_perms as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'user_auth_perms', array('user_id', 'item_id', 'type'), false);\n\t\t}\n\t}\n\n\t$user_auth_realm = db_fetch_assoc_prepared('SELECT *\n\t\tFROM user_auth_realm\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($user_auth_realm)) {\n\t\tforeach ($user_auth_realm as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'user_auth_realm', array('realm_id', 'user_id'), false);\n\t\t}\n\t}\n\n\t$settings_user = db_fetch_assoc_prepared('SELECT *\n\t\tFROM settings_user\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($settings_user)) {\n\t\tforeach ($settings_user as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'settings_user', array('user_id', 'name'), false);\n\t\t}\n\t}\n\n\t$settings_tree = db_fetch_assoc_prepared('SELECT *\n\t\tFROM settings_tree\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($settings_tree)) {\n\t\tforeach ($settings_tree as $row) {\n\t\t\t$row['user_id'] = $new_id;\n\t\t\tsql_save($row, 'settings_tree', array('user_id', 'graph_tree_item_id'), false);\n\t\t}\n\t}\n\n\t/* apply group permissions for the user */\n\t$groups = db_fetch_assoc_prepared('SELECT group_id\n\t\tFROM user_auth_group_members\n\t\tWHERE user_id = ?',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($groups)) {\n\t\tforeach($groups as $g) {\n\t\t\t$sql[] = '(' . $new_id . ', ' . $g['group_id'] . ')';\n\t\t}\n\n\t\tdb_execute('INSERT IGNORE INTO user_auth_group_members\n\t\t\t(user_id, group_id) VALUES ' . implode(',', $sql));\n\t}\n\n\tapi_plugin_hook_function('copy_user', array('template_id' => $template_id, 'new_id' => $new_id));\n\n\treturn $new_id;\n}\n\n\n/**\n * user_remove - remove a user account\n *\n * @param  (int) $user_id - Id os the user account to remove\n *\n * @return (void)\n */\nfunction user_remove($user_id) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($user_id);\n\t/* ==================================================== */\n\n\t/* check for guest or template user */\n\t$username = db_fetch_cell_prepared('SELECT username\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\tif ($username != get_nfilter_request_var('username')) {\n\t\tif (is_template_account($user_id)) {\n\t\t\traise_message(21);\n\t\t\treturn;\n\t\t}\n\n\t\tif ($user_id === get_guest_account()) {\n\t\t\traise_message(21);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE FROM user_auth WHERE id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_cache WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_perms WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_row_cache WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_members WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM settings_user WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM settings_tree WHERE user_id = ?', array($user_id));\n\tdb_execute_prepared('DELETE FROM sessions WHERE user_id = ?', array($user_id));\n\n\tapi_plugin_hook_function('user_remove', $user_id);\n}\n\n/**\n * user_disable - disable a user account\n *\n * @param  (int) $user_id - Id of the user account to disable\n *\n * @return (void)\n */\nfunction user_disable($user_id) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($user_id);\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\"UPDATE user_auth SET enabled = '' WHERE id = ?\", array($user_id));\n\n\treset_user_perms($user_id);\n}\n\n/**\n * user_enable - enable a user account\n *\n * @param  (int) $user_id - Id of the user account to enable\n *\n * @return (void)\n */\nfunction user_enable($user_id) {\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($user_id);\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\"UPDATE user_auth SET enabled = 'on' WHERE id = ?\", array($user_id));\n\n\treset_user_perms($user_id);\n}\n\n/**\n * get_auth_realms - return a list of system user authentication realms\n *\n * @param  (bool) $login - If true, we also set the local login realm\n *\n * @return (array) Array of login realms\n */\nfunction get_auth_realms($login = false) {\n\tif (read_config_option('auth_method') == 4) {\n\t\t$drealms = db_fetch_assoc('SELECT domain_id, domain_name\n\t\t\tFROM user_domains\n\t\t\tWHERE enabled=\"on\"\n\t\t\tORDER BY domain_name');\n\n\t\tif (cacti_sizeof($drealms)) {\n\t\t\tif ($login) {\n\t\t\t\t$new_realms['0'] = array(\n\t\t\t\t\t'name' => __('Local'),\n\t\t\t\t\t'selected' => false\n\t\t\t\t);\n\n\t\t\t\tforeach($drealms as $realm) {\n\t\t\t\t\t$new_realms[1000+$realm['domain_id']] = array(\n\t\t\t\t\t\t'name' => $realm['domain_name'],\n\t\t\t\t\t\t'selected' => false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t$default_realm = db_fetch_cell('SELECT domain_id\n\t\t\t\t\tFROM user_domains\n\t\t\t\t\tWHERE defdomain=1\n\t\t\t\t\tAND enabled=\"on\"');\n\n\t\t\t\tif (!empty($default_realm)) {\n\t\t\t\t\t$new_realms[1000+$default_realm]['selected'] = true;\n\t\t\t\t} else {\n\t\t\t\t\t$new_realms['0']['selected'] = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$new_realms['0'] = __('Local');\n\t\t\t\tforeach($drealms as $realm) {\n\t\t\t\t\t$new_realms[1000+$realm['domain_id']] = $realm['domain_name'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $new_realms;\n\t\t}\n\t}\n\n\treturn array(\n\t\t'0' => __('Local'),\n\t\t'3' => __('LDAP'),\n\t\t'2' => __('Web Basic')\n\t);\n}\n\n/**\n * is_graph_allowed - determines whether the current user is allowed to view a certain graph\n *\n * @param  (int) $local_graph_id - the ID of the graph to check permissions for\n *\n * @return (bool) whether the current user is allowed the view the specified graph or not\n */\nfunction is_graph_allowed($local_graph_id, $user_id = 0) {\n\t$rows  = 0;\n\n\tget_allowed_graphs('', '', '', $rows, $user_id, $local_graph_id);\n\n\treturn ($rows > 0);\n}\n\n/**\n * auth_check_perms - A helper function to checking Tree permissions\n *\n * @param  (array) A set of tree objects\n * @param  (int)   $policy - The policy to check\n *\n * @return (bool) true if there is access else false\n */\nfunction auth_check_perms($objects, $policy) {\n\t$objectSize = cacti_sizeof($objects);\n\n\t/* policy == allow AND matches = DENY */\n\tif ($objectSize && $policy == 1) {\n\t\treturn false;\n\t/* policy == deny AND matches = ALLOW */\n\t} elseif ($objectSize && $policy == 2) {\n\t\treturn true;\n\t/* policy == allow AND no matches = ALLOW */\n\t} elseif (!$objectSize && $policy == 1) {\n\t\treturn true;\n\t/* policy == deny AND no matches = DENY */\n\t} elseif (!$objectSize && $policy == 2) {\n\t\treturn false;\n\t}\n}\n\n/**\n * auth_augment_roles - A helper function to extend Cacti roles with additional realms\n *   or to add a new role.\n *\n * @param  (string) $role_name - The role to extend or add\n * @param  (array)  $files - The filenames to add to the role\n *\n * @return (void)\n */\nfunction auth_augment_roles($role_name, $files) {\n\tglobal $user_auth_roles, $user_auth_realm_filenames;\n\n\tforeach($files as $file) {\n\t\tif (array_search($file, $user_auth_realm_filenames, true) !== false) {\n\t\t\tif (array_search($user_auth_realm_filenames[$file], $user_auth_roles[$role_name], true) === false) {\n\t\t\t\t$user_auth_roles[$role_name][] = $user_auth_realm_filenames[$file];\n\t\t\t}\n\t\t} else {\n\t\t\tif (isset($_SESSION['sess_auth_names'][$role_name])) {\n\t\t\t\t$realm_id = $_SESSION['sess_auth_names'][$role_name];\n\t\t\t} else {\n\t\t\t\t$realm_id = db_fetch_cell_prepared('SELECT id+100 AS realm\n\t\t\t\t\tFROM plugin_realms\n\t\t\t\t\tWHERE file = ?\n\t\t\t\t\tOR file LIKE ?\n\t\t\t\t\tOR file LIKE ?\n\t\t\t\t\tOR file LIKE ?',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t$file,\n\t\t\t\t\t\t$file . ',%',\n\t\t\t\t\t\t'%,' . $file . ',%',\n\t\t\t\t\t\t'%,' . $file\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif ($realm_id > 0) {\n\t\t\t\t\t$_SESSION['sess_auth_names'][$role_name] = $realm_id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!empty($realm_id)) {\n\t\t\t\tif (!isset($user_auth_roles[$role_name])) {\n\t\t\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t\t\t} elseif (array_search($realm_id, $user_auth_roles[$role_name]) === false) {\n\t\t\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * auth_augment_roles_byname - A helper function to extend Cacti roles with additional realms\n *   or to add a new role.\n *\n * @param  (string)  $role_name - The role to extend or add\n * @param  (string)  $auth_name - The name that must be mapped\n *\n * @return (void)\n */\nfunction auth_augment_roles_byname($role_name, $auth_name) {\n\tglobal $user_auth_roles, $user_auth_realm_filenames;\n\n\tif (isset($_SESSION['sess_auth_names'][$auth_name])) {\n\t\t$realm_id = $_SESSION['sess_auth_names'][$auth_name];\n\t} else {\n\t\t$realm_id = db_fetch_cell_prepared('SELECT id+100 AS realm\n\t\t\tFROM plugin_realms\n\t\t\tWHERE display = ?',\n\t\t\tarray($auth_name));\n\n\t\tif ($realm_id > 0) {\n\t\t\t$_SESSION['sess_auth_names'][$auth_name] = $realm_id;\n\t\t}\n\t}\n\n\tif (!empty($realm_id)) {\n\t\tif (!isset($user_auth_roles[$role_name])) {\n\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t} elseif (array_search($realm_id, $user_auth_roles[$role_name]) === false) {\n\t\t\t$user_auth_roles[$role_name][] = $realm_id;\n\t\t}\n\t}\n}\n\n/**\n * is_tree_allowed - determines whether the current user is allowed to view a certain graph tree\n *\n * @param  (int)  $tree_id the ID of the graph tree to check permissions for\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (bool) whether the current user is allowed the view the specified graph tree or not\n */\nfunction is_tree_allowed($tree_id, $user_id = 0) {\n\tif ($user_id == -1) {\n\t\treturn true;\n\t}\n\n\tif (isset($_SESSION['sess_tree_perms'][$tree_id])) {\n\t\treturn $_SESSION['sess_tree_perms'][$tree_id];\n\t}\n\n\tif (read_config_option('auth_method') != 0) {\n\t\tif ($user_id == 0) {\n\t\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t\t} else {\n\t\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = false;\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t$policy = db_fetch_cell_prepared('SELECT policy_trees\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($user_id));\n\n\t\t$trees  = db_fetch_assoc_prepared('SELECT user_id\n\t\t\tFROM user_auth_perms\n\t\t\tWHERE user_id = ?\n\t\t\tAND type = 2\n\t\t\tAND item_id = ?',\n\t\t\tarray($user_id, $tree_id));\n\n\t\tif (auth_check_perms($trees, $policy)) {\n\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/* check for group perms */\n\t\t$groups = db_fetch_assoc_prepared(\"SELECT uag.policy_trees\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tWHERE uag.enabled = 'on'\n\t\t\tAND uagm.user_id = ?\",\n\t\t\tarray($user_id));\n\n\t\tif (!cacti_sizeof($groups)) {\n\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = false;\n\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ($groups as $g) {\n\t\t\tif (auth_check_perms($trees, $g['policy_trees'])) {\n\t\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t/* check for group trees */\n\t\t$gtrees = db_fetch_assoc_prepared(\"SELECT uagm.user_id\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tINNER JOIN user_auth_group_perms as uagp\n\t\t\tON uagp.group_id = uag.id\n\t\t\tWHERE uag.enabled = 'on'\n\t\t\tAND uagm.user_id = ?\n\t\t\tAND uagp.item_id = ?\",\n\t\t\tarray($user_id, $tree_id));\n\n\t\tforeach ($groups as $g) {\n\t\t\tif (auth_check_perms($gtrees, $g['policy_trees'])) {\n\t\t\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t$_SESSION['sess_tree_perms'][$tree_id] = false;\n\n\t\treturn false;\n\t} else {\n\t\t$_SESSION['sess_tree_perms'][$tree_id] = true;\n\n\t\treturn true;\n\t}\n}\n\n/**\n * is_device_allowed - determines whether the current user is allowed to view a certain device\n *\n * @param  (int)  $device_id - the ID of the device to check permissions for\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (bool) whether the current user is allowed the view the specified device or not\n */\nfunction is_device_allowed($device_id, $user_id = 0) {\n\t$total_rows = -2;\n\tget_allowed_devices('', '', '', $total_rows, $user_id, $device_id);\n\treturn ($total_rows > 0);\n}\n\n/**\n * is_graph_template_allowed - determines whether the current user is allowed to view a certain graph template\n *\n * @param  (int)  $graph_template_id - The ID of the graph template to check permissions for\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (bool) whether the current user is allowed the view the specified graph template or not\n */\nfunction is_graph_template_allowed($graph_template_id, $user = 0) {\n\t$total_rows = -2;\n\tget_allowed_graph_templates('', '', '', $total_rows, $user, $graph_template_id);\n\n\treturn ($total_rows > 0);\n}\n\n/**\n * is_view_allowed - Returns a true or false as to whether or not a specific view type is allowed\n *   View options include 'show_tree', 'show_list', 'show_preview', 'graph_settings'\n *\n * @param  (string) $view - the view to check for permissions on\n *\n * @return (bool) True if allowed, else false\n */\nfunction is_view_allowed($view = 'show_tree') {\n\tif (read_config_option('auth_method') != 0) {\n\t\tif (!isset($_SESSION['sess_user_id'])) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (db_table_exists('user_auth_group')) {\n\t\t\t$values = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT $view\n\t\t\t\t\tFROM user_auth_group AS uag\n\t\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\t\tON uag.id = uagm.user_id\n\t\t\t\t\tWHERE uag.enabled = 'on'\n\t\t\t\t\tAND uagm.user_id = ?\",\n\t\t\t\t\tarray($_SESSION['sess_user_id'])\n\t\t\t\t), $view, $view\n\t\t\t);\n\n\t\t\tif (isset($values[3])) {\n\t\t\t\treturn false;\n\t\t\t} elseif (isset($values['on'])) {\n\t\t\t\treturn true;\n\t\t\t} elseif (isset($values[2])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t$value = db_fetch_cell_prepared(\"SELECT $view\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?\",\n\t\t\tarray($_SESSION['sess_user_id'])\n\t\t);\n\n\t\treturn ($value == 'on');\n\t} else {\n\t\treturn true;\n\t}\n}\n\n/**\n * is_tree_branch_empty - Given a tree id and a branch id, check if it's empty\n *\n * @param  (int)  $tree_id - The Cacti Tree id\n * @param  (int)  $parent  - The Cacti Tree branch id\n *\n * @return (bool) True if empty, else false\n */\nfunction is_tree_branch_empty($tree_id, $parent = 0) {\n\t$graphs = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT local_graph_id\n\t\t\tFROM graph_tree_items\n\t\t\tWHERE graph_tree_id = ?\n\t\t\tAND local_graph_id > 0\n\t\t\tAND parent = ?',\n\t\t\tarray($tree_id, $parent)\n\t\t), 'local_graph_id', 'local_graph_id'\n\t);\n\n\t$simple_perms = get_simple_graph_perms($_SESSION['sess_user_id']);\n\n\tif (cacti_sizeof($graphs) && ($simple_perms || cacti_sizeof(get_allowed_graphs('gl.id IN(' . implode(',', $graphs) . ')'))) > 0) {\n\t\treturn false;\n\t}\n\n\t$hosts = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT host_id\n\t\t\tFROM graph_tree_items\n\t\t\tWHERE graph_tree_id = ?\n\t\t\tAND host_id > 0\n\t\t\tAND parent = ?',\n\t\t\tarray($tree_id, $parent)\n\t\t), 'host_id', 'host_id'\n\t);\n\n\t$sites = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT site_id\n\t\t\tFROM graph_tree_items\n\t\t\tWHERE graph_tree_id = ?\n\t\t\tAND site_id > 0\n\t\t\tAND parent = ?',\n\t\t\tarray($tree_id, $parent)\n\t\t), 'site_id', 'site_id'\n\t);\n\n\tif (!cacti_sizeof($sites)) {\n\t\tif (cacti_sizeof($hosts) && cacti_sizeof(get_allowed_devices('h.id IN(' . implode(',', $hosts) . ')'), 'description', '', -1) > 0) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t$site_hosts = array();\n\t\tforeach($sites as $site) {\n\t\t\t$site_hosts += array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT id\n\t\t\t\t\tFROM host\n\t\t\t\t\tWHERE site_id = ?',\n\t\t\t\t\tarray($site)\n\t\t\t\t), 'id', 'id'\n\t\t\t);\n\t\t}\n\n\t\tif (cacti_sizeof($site_hosts) && cacti_sizeof(get_allowed_devices('h.id IN(' . implode(',', $site_hosts) . ')'), 'description', '', -1) > 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$branches = db_fetch_assoc_prepared('SELECT id, graph_tree_id\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $parent));\n\n\tif (cacti_sizeof($branches)) {\n\t\tforeach($branches as $b) {\n\t\t\tif (!is_tree_branch_empty($b['graph_tree_id'], $b['id'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * is_realm_allowed - Given a realm and a user, check their permissions if the\n *   admin changed a users settings, setup the case to redirect by clearing\n *   session variables so that when an admin makes a change, the user does not\n *   have to login again to receive them.\n *\n * @param  (int)      $realm      The realm to check\n * @param  (int|bool) $check_user The either false or the user id to check\n *\n * @return (bool) True if allowed, otherwise false\n */\nfunction is_realm_allowed($realm, $check_user = false) {\n\tglobal $config;\n\n\t/* list all realms that this user has access to */\n\tif (read_config_option('auth_method') != 0) {\n\t\t/* if we are only checking another users permission, don't check cache */\n\t\tif ($check_user == false) {\n\t\t\t/* user is not set, no permissions */\n\t\t\tif (!isset($_SESSION['sess_user_id'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/* check to see if the admin invalidated a permission */\n\t\t\tif (!is_user_perms_valid($_SESSION['sess_user_id'])) {\n\t\t\t\tif (db_table_exists('user_auth_cache')) {\n\t\t\t\t\t$enabled = db_fetch_cell_prepared('SELECT enabled\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\t\t\tif ($enabled == '' && get_guest_account() !== $_SESSION['sess_user_id']) {\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_cache\n\t\t\t\t\t\t\tWHERE user_id = ?',\n\t\t\t\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\t\t\t\tkill_session_var('sess_user_id');\n\t\t\t\t\t\tkill_session_var('sess_user_realms');\n\t\t\t\t\t\tkill_session_var('sess_user_config_array');\n\t\t\t\t\t\tkill_session_var('sess_config_array');\n\t\t\t\t\t\tkill_session_var('sess_auth_names');\n\t\t\t\t\t\tkill_session_var('sess_tree_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_template_perms');\n\n\t\t\t\t\t\tprint '<span style=\"display:none;\">cactiLoginSuspend</span>';\n\t\t\t\t\t\texit;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkill_session_var('sess_user_realms');\n\t\t\t\t\t\tkill_session_var('sess_user_config_array');\n\t\t\t\t\t\tkill_session_var('sess_config_array');\n\t\t\t\t\t\tkill_session_var('sess_auth_names');\n\t\t\t\t\t\tkill_session_var('sess_tree_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_perms');\n\t\t\t\t\t\tkill_session_var('sess_simple_template_perms');\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '<span style=\"display:none;\">cactiRedirect</span>';\n\t\t\t\t\texit;\n\t\t\t\t} else {\n\t\t\t\t\tkill_session_var('sess_user_realms');\n\t\t\t\t\tkill_session_var('sess_user_config_array');\n\t\t\t\t\tkill_session_var('sess_config_array');\n\t\t\t\t\tkill_session_var('sess_auth_names');\n\t\t\t\t\tkill_session_var('sess_tree_perms');\n\t\t\t\t\tkill_session_var('sess_simple_perms');\n\t\t\t\t\tkill_session_var('sess_simple_template_perms');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* if the permission is already valid, the session variable will be set */\n\t\t\tif (isset($_SESSION['sess_user_realms'][$realm])) {\n\t\t\t\treturn $_SESSION['sess_user_realms'][$realm];\n\t\t\t}\n\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\t$user_id = $check_user;\n\t\t}\n\n\t\t/**\n\t\t * check the permissions from the table, should only happen once per login\n\t\t * of after a permission change by the administrator.\n\t\t */\n\t\tif (read_config_option('auth_method') != 0) {\n\t\t\tif (cacti_version_compare($config['cacti_db_version'], '1.0.0', '>=')) {\n\t\t\t\t$user_realm = db_fetch_cell_prepared(\"SELECT realm_id\n\t\t\t\t\tFROM user_auth_realm\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND realm_id = ?\n\t\t\t\t\tUNION\n\t\t\t\t\tSELECT realm_id\n\t\t\t\t\tFROM user_auth_group_realm AS uagr\n\t\t\t\t\tINNER JOIN user_auth_group AS uag\n\t\t\t\t\tON uag.id = uagr.group_id\n\t\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\t\tON uag.id = uagm.group_id\n\t\t\t\t\tWHERE uag.enabled = 'on'\n\t\t\t\t\tAND uagr.realm_id = ?\n\t\t\t\t\tAND uagm.user_id = ?\",\n\t\t\t\t\tarray($user_id, $realm, $realm, $user_id));\n\t\t\t} else {\n\t\t\t\t$user_realm = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\t\tFROM user_auth_realm\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND realm_id = ?',\n\t\t\t\t\tarray($user_id, $realm));\n\t\t\t}\n\n\t\t\tif (!empty($user_realm)) {\n\t\t\t\tif ($check_user == false) {\n\t\t\t\t\t$_SESSION['sess_user_realms'][$realm] = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($check_user == false) {\n\t\t\t\t\t$_SESSION['sess_user_realms'][$realm] = false;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif ($check_user == false) {\n\t\t\t\t$_SESSION['sess_user_realms'][$realm] = true;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($check_user == false) {\n\t\t\t$_SESSION['sess_user_realms'][$realm] = true;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn $_SESSION['sess_user_realms'][$realm];\n}\n\n/**\n * get_allowed_tree_level - Get the permitted tree branch data available to the user\n *\n * @param  (int)  The tree id to check\n * @param  (int)  The branch id, 0 is the root of the tree\n * @param  (bool) Tells the function that the user is editing\n * @param  (int)  The user id to check for permissions. if 0 then check the current user\n *\n * @return (array) An array of Tree branch items that a re allowed (graphs, devices)\n */\nfunction get_allowed_tree_level($tree_id, $parent_id, $editing = false, $user_id = 0) {\n\t$items = db_fetch_assoc_prepared('SELECT gti.id, gti.title, gti.host_id,\n\t\tgti.site_id, gti.local_graph_id, gti.host_grouping_type,\n\t\th.description AS hostname, s.name AS sitename\n\t\tFROM graph_tree_items AS gti\n\t\tINNER JOIN graph_tree AS gt\n\t\tON gt.id = gti.graph_tree_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id = gti.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON s.id = gti.site_id\n\t\tWHERE gti.graph_tree_id = ?\n\t\tAND gti.parent = ?\n\t\tORDER BY gti.position ASC',\n\t\tarray($tree_id, $parent_id));\n\n\tif (!$editing) {\n\t\t$i = 0;\n\t\tif (cacti_sizeof($items)) {\n\t\t\tforeach($items as $item) {\n\t\t\t\tif ($item['host_id'] > 0) {\n\t\t\t\t\tif (!is_device_allowed($item['host_id'], $user_id)) {\n\t\t\t\t\t\tunset($items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif($item['local_graph_id'] > 0) {\n\t\t\t\t\tif (!is_graph_allowed($item['local_graph_id'], $user_id)) {\n\t\t\t\t\t\tunset($items[$i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $items;\n}\n\n/**\n * get_allowed_tree_content - A function that gathers items and statistics of those items\n *   that are permitted on the tree specified\n *\n * @param  (int)    The tree id to check\n * @param  (int)    The branch id, 0 is the root of the tree\n * @param  (string) The Tree SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of items\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) An array of Tree branch items that a re allowed (graphs, devices)\n */\nfunction get_allowed_tree_content($tree_id, $parent = 0, $sql_where = '', $sql_order = '', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif (!is_numeric($tree_id)) {\n\t\treturn array();\n\t}\n\n\tif (!is_numeric($parent)) {\n\t\treturn array();\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE gti.local_graph_id=0\n\t\t\tAND gti.parent=$parent\n\t\t\tAND gti.graph_tree_id=$tree_id\n\t\t\tAND (\" . $sql_where . ')';\n\t} else {\n\t\t$sql_where = \"WHERE gti.local_graph_id=0\n\t\t\tAND gti.parent=$parent\n\t\t\tAND gti.graph_tree_id=$tree_id\";\n\t}\n\n\t$trees = array_rekey(\n\t\tget_allowed_trees(false, false, '', '', '', $total_rows, $user_id),\n\t\t'id', 'name'\n\t);\n\n\tif ($tree_id > 0) {\n\t\tif (cacti_sizeof($trees)) {\n\t\t\t$sql_where .= ' AND gt.id IN (' . implode(', ', array_keys($trees)) . ')';\n\t\t}\n\n\t\t$hierarchy = db_fetch_assoc(\"SELECT gti.graph_tree_id AS tree_id, gti.id, gti.title, gti.host_id, gti.site_id,\n\t\t\tgti.local_graph_id, gti.host_grouping_type, h.description AS hostname, s.name AS sitename\n\t\t\tFROM graph_tree_items AS gti\n\t\t\tINNER JOIN graph_tree AS gt\n\t\t\tON gt.id = gti.graph_tree_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gti.host_id\n\t\t\tLEFT JOIN sites AS s\n\t\t\tON gti.site_id=s.id\n\t\t\t$sql_where\n\t\t\tORDER BY gti.position\");\n\t} elseif (cacti_sizeof($trees)) {\n\t\t$hierarchy = db_fetch_assoc(\"SELECT gt.id AS tree_id, '0' AS id, gt.name AS title, '0' AS host_id, '0' AS site_id,\n\t\t\t'0' AS local_graph_id, '1' AS host_grouping_type, '' AS hostname, '' AS sitename\n\t\t\tFROM graph_tree AS gt\n\t\t\tWHERE enabled='on'\n\t\t\tAND gt.id IN (\" . implode(', ', array_keys($trees)) . \")\n\t\t\tORDER BY gt.sequence\");\n\t}\n\n\tif (read_config_option('auth_method') != 0) {\n\t\t$new_hierarchy = array();\n\t\tif (cacti_sizeof($hierarchy)) {\n\t\t\tforeach($hierarchy as $h) {\n\t\t\t\tif ($h['host_id'] > 0) {\n\t\t\t\t\tif (is_device_allowed($h['host_id'])) {\n\t\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($h['id'] == 0) {\n\t\t\t\t\tif (!is_tree_branch_empty($h['tree_id'], $h['id'])) {\n\t\t\t\t\t\tif (is_tree_allowed($h['tree_id'])) {\n\t\t\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif ($h['site_id'] > 0) {\n\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t} elseif (!is_tree_branch_empty($h['tree_id'], $h['id'])) {\n\t\t\t\t\t$new_hierarchy[] = $h;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $new_hierarchy;\n\t} else {\n\t\treturn $hierarchy;\n\t}\n}\n\n/**\n * get_policies - Searches both the users and the users groups and returns a policy\n *   array to be used for determining object permissions.\n *\n * @param  (int)  If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) An array of policy objects comprising the users permissions\n */\nfunction get_policies($user_id) {\n\t/* get policies for all user groups */\n\t$policies = db_fetch_assoc_prepared(\"SELECT uag.id, 'group' AS type, uag.name,\n\t\tuag.policy_graphs, uag.policy_hosts, uag.policy_graph_templates, uag.policy_trees\n\t\tFROM user_auth_group AS uag\n\t\tINNER JOIN user_auth_group_members AS uagm\n\t\tON uag.id = uagm.group_id\n\t\tWHERE uag.enabled = 'on'\n\t\tAND uagm.user_id = ?\",\n\t\tarray($user_id));\n\n\t/* get policies for the user */\n\t$policies[] = db_fetch_row_prepared(\"SELECT id, 'user' AS type, 'user' AS name,\n\t\tpolicy_graphs, policy_hosts, policy_graph_templates, policy_trees\n\t\tFROM user_auth\n\t\tWHERE id = ?\",\n\t\tarray($user_id));\n\n\treturn $policies;\n}\n\n/**\n * get_allowed_tree_header_graphs - Returns the graphs that are permitted at the branch/leaf id specified\n *\n * @param  (int)    The tree id to check\n * @param  (int)    The branch id, 0 is the root of the tree\n * @param  (string) The Tree SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of items\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) Array of tree header graphs to display\n */\nfunction get_allowed_tree_header_graphs($tree_id, $leaf_id = 0, $sql_where = '', $sql_order = 'gti.position', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif (!is_numeric($tree_id)) {\n\t\treturn array();\n\t}\n\n\tif (!is_numeric($leaf_id)) {\n\t\treturn array();\n\t}\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \" AND ($sql_where)\";\n\t}\n\n\t$sql_where = \"WHERE (gti.graph_tree_id=$tree_id AND gti.parent=$leaf_id)\" . $sql_where;\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif ($auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT gti.id, gti.title, gtg.local_graph_id, h.description,\n\t\tgt.name AS template_name, gtg.title_cache, gtg.width, gtg.height,\n\t\tgl.snmp_index, gl.snmp_query_id\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id = gtg.local_graph_id\n\t\tINNER JOIN graph_tree_items AS gti\n\t\tON gti.local_graph_id = gl.id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id = gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id = gl.host_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(*)\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tINNER JOIN graph_tree_items AS gti\n\t\tON gti.local_graph_id=gl.id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'graph');\n\n\treturn $graphs;\n}\n\n/**\n * get_allowed_graphs - Returns the graphs that are permitted by the user.  Used for table displays\n *   where users will view the graphs that they are permitted to access\n *\n * @param  (string) The SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph is permitted, the id of that graph\n *\n * @return (array) Array of allowed graphs\n */\nfunction get_allowed_graphs($sql_where = '', $sql_order = 'gtg.title_cache', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_id = 0) {\n\tif ($sql_limit != '') {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($graph_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : ' ') . \" gl.id = $graph_id\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL)\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/* see if permissions are simple */\n\t$simple_perms = get_simple_graph_perms($user_id);\n\n\t/* in case we need to review get the graph_auth_method */\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, h.description, gt.name AS template_name,\n\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id,\n\t\tIF(gl.graph_template_id=0, 0, IF(gl.snmp_query_id=0, 2, 1)) AS graph_source\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(*)\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\";\n\n\tif ($graph_id == 0) {\n\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'graph');\n\t} else {\n\t\t$total_rows = db_fetch_cell($sql);\n\t}\n\n\treturn $graphs;\n}\n\n/**\n * get_allowed_aggregate_graphs - Returns the aggregate graphs that are permitted by the user.\n *   Used for table displays where users will view the graphs that they are permitted to access\n *\n * @param  (string) The SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph is permitted, the id of that graph\n *\n * @return (array) Array of allowed graphs\n */\nfunction get_allowed_aggregate_graphs($sql_where = '', $sql_order = 'gtg.title_cache', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($graph_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : ' ') . \" gl.id = $graph_id\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL)\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/* see if permissions are simple */\n\t$simple_perms = get_simple_graph_perms($user_id);\n\n\t/* in case we need to review get the graph_auth_method */\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, '' AS description, gt.name AS template_name,\n\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN (\n\t\t\tSELECT ag.local_graph_id AS id, gl.host_id, gl.graph_template_id,\n\t\t\tgl.snmp_query_id, gl.snmp_query_graph_id, gl.snmp_index\n\t\t\tFROM aggregate_graphs AS ag\n\t\t\tINNER JOIN aggregate_graphs_items AS agi\n\t\t\tON ag.id=agi.aggregate_graph_id\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id=agi.local_graph_id\n\t\t) AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\n\t\tGROUP BY gtg.local_graph_id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(DISTINCT gl.id)\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN (\n\t\t\tSELECT ag.local_graph_id AS id, gl.host_id, gl.graph_template_id,\n\t\t\tgl.snmp_query_id, gl.snmp_query_graph_id, gl.snmp_index\n\t\t\tFROM aggregate_graphs AS ag\n\t\t\tINNER JOIN aggregate_graphs_items AS agi\n\t\t\tON ag.id=agi.aggregate_graph_id\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id=agi.local_graph_id\n\t\t) AS gl\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'aggregate_graph');\n\n\treturn $graphs;\n}\n\n/**\n * get_simple_device_perms - Returns a boolean true or false if the user has full access to\n *   all devices in the system.  This function is used to shortcut complex queries that may\n *   take multiple seconds to return an answer.\n *\n * @param  (int)    The user id to check for permissions for\n *\n * @return (bool)   True if simple permissions are in place, otherwise false\n */\nfunction get_simple_device_perms($user) {\n\t$policy_hosts = db_fetch_cell_prepared('SELECT policy_hosts\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user));\n\n\t$perm_count = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?\n\t\tAND type = 2',\n\t\tarray($user));\n\n\tif ($policy_hosts == 1 && $perm_count == 0) {\n\t\treturn true;\n\t} else {\n\t\t$policies = db_fetch_assoc_prepared('SELECT policy_hosts, COUNT(*) AS exceptions\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_perms AS uagp\n\t\t\tON uag.id = uagp.group_id\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uagm.group_id = uag.id\n\t\t\tWHERE uagp.type = 2\n\t\t\tAND uagm.user_id = ?\n\t\t\tGROUP BY uag.id',\n\t\t\tarray($user));\n\n\t\tif (cacti_sizeof($policies)) {\n\t\t\tforeach($policies as $p) {\n\t\t\t\tif ($p['policy_hosts'] == 1 && $p['exceptions'] == 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n/**\n * get_simple_graph_perms - Returns a boolean true or false if the user has full access to\n *   all graphs in the system.  This function is used to shortcut complex queries that may\n *   take multiple seconds to return an answer.\n *\n * @param  (int)    The user id to check for permissions for\n *\n * @return (bool)   True if simple permissions are in place, otherwise false\n */\nfunction get_simple_graph_perms($user_id) {\n\tif (isset($_SESSION['sess_simple_perms'])) {\n\t\treturn $_SESSION['sess_simple_perms'];\n\t}\n\n\t$policy_graphs = db_fetch_cell_prepared('SELECT policy_graphs\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\t$perm_count = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?\n\t\tAND type = 1',\n\t\tarray($user_id));\n\n\tif ($policy_graphs == 1 && $perm_count == 0) {\n\t\t$_SESSION['sess_simple_perms'] = true;\n\n\t\treturn true;\n\t} else {\n\t\t$policies = db_fetch_assoc_prepared('SELECT policy_graphs, COUNT(*) AS exceptions\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_perms AS uagp\n\t\t\tON uag.id = uagp.group_id\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uagm.group_id = uag.id\n\t\t\tWHERE uagp.type = 1\n\t\t\tAND uagm.user_id = ?\n\t\t\tGROUP BY uag.id',\n\t\t\tarray($user_id));\n\n\t\tif (cacti_sizeof($policies)) {\n\t\t\tforeach($policies as $p) {\n\t\t\t\tif ($p['policy_graphs'] == 1 && $p['exceptions'] == 0) {\n\t\t\t\t\t$_SESSION['sess_simple_perms'] = true;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$_SESSION['sess_simple_perms'] = false;\n\n\t\treturn false;\n\t}\n}\n\n/**\n * get_simple_graph_template_perms - Returns a boolean true or false if the user has full access to\n *   all graphs templates in the system.  This function is used to shortcut complex queries that may\n *   take multiple seconds to return an answer.\n *\n * @param  (int)    The user id to check for permissions for\n *\n * @return (bool)   True if simple permissions are in place, otherwise false\n */\nfunction get_simple_graph_template_perms($user_id) {\n\tif (isset($_SESSION['sess_simple_template_perms'])) {\n\t\treturn $_SESSION['sess_simple_template_perms'];\n\t}\n\n\t$policy_graph_templates = db_fetch_cell_prepared('SELECT policy_graph_templates\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\t$perm_count = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_perms\n\t\tWHERE user_id = ?\n\t\tAND type = 4',\n\t\tarray($user_id));\n\n\tif ($policy_graph_templates == 1 && $perm_count == 0) {\n\t\t$_SESSION['sess_simple_template_perms'] = true;\n\n\t\treturn true;\n\t} else {\n\t\t$policies = db_fetch_assoc_prepared('SELECT policy_graph_templates, COUNT(*) AS exceptions\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_perms AS uagp\n\t\t\tON uag.id = uagp.group_id\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uagm.group_id = uag.id\n\t\t\tWHERE uagp.type = 4\n\t\t\tAND uagm.user_id = ?\n\t\t\tGROUP BY uag.id',\n\t\t\tarray($user_id));\n\n\t\tif (cacti_sizeof($policies)) {\n\t\t\tforeach($policies as $p) {\n\t\t\t\tif ($p['policy_graph_templates'] == 1 && $p['exceptions'] == 0) {\n\t\t\t\t\t$_SESSION['sess_simple_template_perms'] = true;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$_SESSION['sess_simple_template_perms'] = false;\n\n\t\treturn false;\n\t}\n}\n\n/**\n * get_allowed_graph_templates - returns the list of Graph Templates that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays.\n *\n * @param  (string) The SQL where when searching for specific content\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph template is permitted, the id of that graph template\n *\n * @return (array)  An array of permitted Graph Templates\n */\nfunction get_allowed_graph_templates($sql_where = '', $sql_order = 'gt.name', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_template_id = 0) {\n\tif ($user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t// For timing\n\t$start = microtime(true);\n\n\t$init_rows = $total_rows;\n\n\t$templates = array();\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($graph_template_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : ' ') . \"(gl.graph_template_id = $graph_template_id)\";\n\t}\n\n\t$sql_where = 'WHERE ' . ($sql_where != '' ? $sql_where . ' AND ':' ') . '(gt.id IS NOT NULL) ';\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t/* see if permissions are simple */\n\t$simple_perms = get_simple_graph_perms($user_id);\n\n\t/* in case we need to review get the graph_auth_method */\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\t/* short circuit if we don't have a user */\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\treturn array();\n\t}\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\tif ($total_rows != -2) {\n\t\t$templates = db_fetch_assoc(\"SELECT gt.id, gt.name, COUNT(*) AS graphs\n\t\t\tFROM graph_local AS gl\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\n\t\t\t$sql_order\n\t\t\t$sql_limit\");\n\t}\n\n\tif ($total_rows >= 0 || $total_rows == -2) {\n\t\t$sql = \"SELECT COUNT(DISTINCT gl.graph_template_id) AS id\n\t\t\tFROM graph_local AS gl\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_where\";\n\n\t\tif ($graph_template_id == 0) {\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'graph');\n\t\t} else {\n\t\t\t$total_rows = db_fetch_cell($sql);\n\t\t}\n\t}\n\n\t// For timing\n\t$end = microtime(true);\n\n\tcacti_log(sprintf('The Get Templates total time was %4.2f', $end - $start), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\tif ($templates === false) {\n\t\t$templates = array();\n\t}\n\n\treturn $templates;\n}\n\n/**\n * get_policy_join_select - Parse the policies in order to visually display user permissions\n *\n * @param  (array) $policies  The list of user and group policies.  Will be reversed to\n *   show user permissions first.\n *\n * @return (array)  Array containing both $sql_select and $sql_join\n */\nfunction get_policy_join_select($policies) {\n\t$sql_join   = '';\n\t$sql_select = '';\n\n\t$i = 1;\n\t$j = 1;\n\tforeach($policies as $p) {\n\t\t$sql_join   .= \"LEFT JOIN (SELECT * FROM user_auth_\" . ($p['type'] == 'user' ? '' : 'group_') . \"perms WHERE \" . $p['type'] . '_id = ' . $p['id'] . \") AS uap$j ON (gl.id = uap$j.item_id AND uap$j.type = 1) \";\n\t\t$sql_select .= ($sql_select != '' ? ', ' : '') . \"uap$j.\" . $p['type'] . \"_id AS graph$i\";\n\t\t$j++;\n\n\t\t$sql_join   .= 'LEFT JOIN (SELECT * FROM user_auth_' . ($p['type'] == 'user' ? '' : 'group_') . \"perms WHERE \" . $p['type'] . '_id = ' . $p['id'] . \") AS uap$j ON (gl.host_id = uap$j.item_id AND uap$j.type = 3) \";\n\t\t$sql_select .= ($sql_select != '' ? ', ' : '') . \"uap$j.\" . $p['type'] . \"_id AS device$i\";\n\t\t$j++;\n\n\t\t$sql_join   .= 'LEFT JOIN (SELECT * FROM user_auth_' . ($p['type'] == 'user' ? '' : 'group_') . \"perms WHERE \" . $p['type'] . '_id = ' . $p['id'] . \") AS uap$j ON (gl.graph_template_id = uap$j.item_id AND uap$j.type = 4) \";\n\t\t$sql_select .= ($sql_select != '' ? ', ' : '') . \"uap$j.\" . $p['type'] . \"_id AS template$i\";\n\t\t$j++;\n\n\t\t$i++;\n\t}\n\n\treturn array('sql_select' => $sql_select, 'sql_join' => $sql_join);\n}\n\n/**\n * get_policy_where - Parse the policies in order to downselect matching graphs\n *   without the use of the SQL Having clause which is very inefficient\n *\n * @param  (int)    $graph_auth_method - The graph auth method: permissive, restrictive, device, graph_template\n * @param  (array)  $policies - The list of user and group policies.  Will be reversed to\n * @param  (string) $sql_where - The SQL where filter provided by the calling function.\n *\n * @return (string) - Updated sql_where value\n */\nfunction get_policy_where($graph_auth_method, $policies, $sql_where) {\n\tif ($graph_auth_method == 1) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t// Permissive means access to the graph, or access to either the host or template\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index > 0 ? ' OR (':'(');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' OR ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= ')';\n\t} elseif ($graph_auth_method == 2) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t// Restrictive means access to the graph, or access to both the host and template\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index == 0 ? '((':' OR ((');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' AND ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= ' gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= ' gl.graph_template_id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ')';\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ' AND ';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ')';\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= ')';\n\t} elseif ($graph_auth_method == 3) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index == 0 ? '((' : ') OR ((');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_where .= 'h.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'h.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 3)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= '))';\n\t} elseif ($graph_auth_method == 4) {\n\t\t// Policy Rows include\n\t\t// id, type (group|user), policy_graphs, policy_hosts, policy_graph_templates\n\n\t\t// Table user_auth_perms has user_id, item_id, type\n\t\t// Types can be:\n\t\t// 1 - Graph\n\t\t// 2 - Trees\n\t\t// 3 - Device\n\t\t// 4 - Graph Template\n\n\t\t// Policies are\n\t\t// 1 - Default Allow, all exceptions are denied\n\t\t// 2 - Default Deny, all exceptions are allowed\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND (':'WHERE (');\n\n\t\tforeach($policies as $index => $p) {\n\t\t\t$sql_where .= ($index == 0 ? '((' : ') OR ((');\n\n\t\t\tif ($p['type'] == 'user') {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_perms WHERE user_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 1)';\n\t\t\t\t}\n\n\t\t\t\t$sql_where .= ') OR (';\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id NOT IN (SELECT item_id FROM user_auth_group_perms WHERE group_id = ' . $p['id'] . ' AND type = 4)';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= 'gl.graph_template_id IN (SELECT item_id FROM user_auth_group_perms WHERE group_id =' . $p['id'] . ' AND type = 4)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_where .= ')';\n\t\t}\n\n\t\t$sql_where .= '))';\n\t}\n\n\treturn $sql_where;\n}\n\n/**\n * get_permission_string - get the effective permission string for the graph in question.  The\n *   logic for this is somewhat complex, but understandable.  First, the $graph object will include\n *   three columns generally graphX, deviceX, and templateX for each of the user or groups in the collection.\n *   The way we assign a restrictive or permissive value is based upon the graph permission setting\n *   in Cacti, but also whether or not the default access for the object type is either 'Allow' or 'Deny'.\n *\n *   - If the 'default access' for the object type is 'Deny', then a numeric value in userX means\n *     the user has permission to an object.\n *   - If the default access for the object is 'Allow', then a numeric\n *     value in userX means that the object is blocked.\n *\n *   Again, each of the graphX, deviceX, and templateX will always come in three's.  They equate to:\n *\n *   - graphX    - The user does or does not have permission to the Graph at the Graph Level\n *   - deviceX   - The user does or does not have permission to the Graph at the Device Level\n *   - templateX - The user does or does not have permission to the Graph at the Graph Template Level\n *\n *   Then, the effective permission are calculated by the Graph Permission Model in Cacti.  They are\n *\n *   - Permissive - If the user has access to the Graph, the Device, or Graph Template, then the\n *     user will have access to the Graph.\n *\n *   - Restrictive - If the user has access to the Graph, or both the Device and Graph Template,\n *     then the user will have access to the Graph\n *\n *   - Device - If the user has access to the Graph, or the Device, then the user will have\n *     access to the Graph\n *\n *   - Graph Template - If the user has access to the Graph, or the Graph Template, then the user\n *     will have access to the Graph.\n *\n *   This function will apply this logic, and then respond to the user a 'Granted' or 'Restricted'\n *   column value, and a Tooltip, that shows how the permissions were evaluated.  In other words\n *   why was the user either permitted to or denied access to the Graph.\n */\nfunction get_permission_string(&$graph, &$policies) {\n\t$grantStr   = '';\n\t$rejectStr  = '';\n\t$reasonStr  = '';\n\t$drejectStr = '';\n\n\t// Methods:\n\t// 1 - Permissive\n\t// 2 - Restrictive\n\t// 3 - Device\n\t// 4 - Graph Template\n\t$method = read_config_option('graph_auth_method');\n\n\tif ($graph['disabled'] == 'on' && read_user_setting('hide_disabled', false, false, get_request_var('user_id'))) {\n\t\t$drejectStr .= __esc('Device:(Hide Disabled)');\n\t}\n\n\t// Policies:\n\t// 1 - Default Allow All - Numeric means blocked\n\t// 2 - Default Deny All  - Numeric means allowed\n\n\t$i = 1;\n\tforeach($policies as $p) {\n\t\t$allowed  = 0;\n\t\t$rejected = 0;\n\n\t\t// Perform the Graph Check first\n\t\t// If a user has access at the Graph Access, they always get Access\n\t\tif ($p['policy_graphs'] == 1) {\n\t\t\t// Default is to allow\n\t\t\tif (empty($graph[\"graph$i\"])) {\n\t\t\t\t// Allow the access at the level\n\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t} else {\n\t\t\t\t$rejectStr .= ($rejectStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t$rejected++;\n\t\t\t}\n\t\t} else {\n\t\t\t// Default is to Deny\n\t\t\tif (!empty($graph[\"graph$i\"])) {\n\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t} else {\n\t\t\t\t$rejectStr .= ($rejectStr != '' ? ', ':'') . __esc('Graph:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t$rejected++;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Now we check at the Device and Graph Template Level.  Here the permission get a bit more dicey, so we will\n\t\t * Use case logic to make it read more simply.\n\t\t */\n\t\tswitch($method) {\n\t\t\tcase 1: // Permissive\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\tif (empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\tif (empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr .= ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($rejected == 3) {\n\t\t\t\t\t$rejectStr .= ($rejectStr != '' ? ', ':'') . __esc('Graph+Device+Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 2: // Restrictive\n\t\t\t\t$allowed  = 0;\n\t\t\t\t$rejected = 0;\n\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\tif (empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\tif (empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$rejected++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$allowed++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($allowed == 2) {\n\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device+Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t} else {\n\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Device+Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 3: // Device\n\t\t\t\tif ($p['policy_hosts'] == 1) {\n\t\t\t\t\tif (empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"device$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Device:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 4: // Graph Template\n\t\t\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\t\t\tif (empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($graph[\"template$i\"])) {\n\t\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . __esc('Template:(%s%s)', ucfirst($p['type']), ($p['type'] != 'user' ? '/' . $p['name']:''));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$i++;\n\t}\n\n\t$permStr = '';\n\n\tif ($drejectStr != '') {\n\t\t$reasonStr .= ($reasonStr != '' ? ', ':'') . __esc('Restricted By: ') . $drejectStr;\n\t}\n\n\tif ($grantStr != '') {\n\t\t$reasonStr .= ($reasonStr != '' ? ', ':'') . __esc('Granted By: ') . trim($grantStr, ',');\n\n\t\tif ($rejectStr != '') {\n\t\t\t$reasonStr .= ', ' . __esc('Restricted By: ') . trim($rejectStr, ',');\n\t\t}\n\n\t\tif ($drejectStr == '') {\n\t\t\t$permStr = \"<span data-tooltip='\" . trim($reasonStr) . \"' class='accessGranted'>\" . __('Granted') . '</span>';\n\t\t} else {\n\t\t\t$permStr = \"<span data-tooltip='\" . trim($reasonStr) . \"' class='accessRestricted'>\" . __('Restricted') . '</span>';\n\t\t}\n\t} elseif ($rejectStr != '') {\n\t\t$reasonStr .= ($reasonStr != '' ? ', ':'') . __esc('Restricted By: ') . trim($rejectStr, ',');\n\n\t\t$permStr   = \"<span data-tooltip='\" . $reasonStr . \"' class='accessRestricted'>\" . __('Restricted') . '</span>';\n\t} else {\n\t\t$permStr = __('Unknown');\n\t}\n\n\treturn $permStr;\n}\n\n/**\n * get_allowed_trees - returns the list of Trees that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as to build out the tree for a user.\n *\n * @param  (bool)   Is the Tree in Edit mode or not\n * @param  (bool)   Return either the SQL used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of graphs\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If just searching for if a single graph template is permitted, the id of that graph template\n *\n * @return (string|array)  An array of permitted Trees or the SQL to gather them\n */\nfunction get_allowed_trees($edit = false, $return_sql = false, $sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method != 0) {\n\t\tif ($user_id == 0) {\n\t\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t\t} else {\n\t\t\t\treturn array();\n\t\t\t}\n\t\t}\n\n\t\t/* get policies for all groups and user */\n\t\t$policies = db_fetch_assoc_prepared(\"SELECT uag.id, 'group' AS type, policy_trees FROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tWHERE uag.enabled = 'on'\n\t\t\tAND uagm.user_id = ?\",\n\t\t\tarray($user_id));\n\n\t\t$policies[] = db_fetch_row_prepared(\"SELECT id, 'user' as type, policy_trees FROM user_auth WHERE id = ?\", array($user_id));\n\n\t\t$i          = 0;\n\t\t$sql_join   = '';\n\t\t$sql_where1 = '';\n\n\t\tforeach($policies as $policy) {\n\t\t\tif ($policy['policy_trees'] == '1') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NULL\";\n\t\t\t} elseif ($policy['policy_trees'] == '2') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NOT NULL\";\n\t\t\t}\n\n\t\t\t$sql_join .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'group' ? 'group_':'') . \"perms AS uap$i\n\t\t\t\tON (gt.id=uap$i.item_id AND uap$i.type=2 AND uap$i.\" . $policy['type'] . '_id=' . $policy['id'] . ') ';\n\n\t\t\t$i++;\n\t\t}\n\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = 'WHERE ' . ($edit == false ? '(gt.enabled=\"on\") AND ':'') . '(' . $sql_where . ') AND (' . $sql_where1 . ')';\n\t\t} else {\n\t\t\t$sql_where = 'WHERE ' . ($edit == false ? '(gt.enabled=\"on\") AND ':'') . '(gt.enabled=\"on\") AND (' . $sql_where1 . ')';\n\t\t}\n\n\t\t$sql = \"SELECT id, name\n\t\t\tFROM graph_tree AS gt\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t$sql_order\n\t\t\t$sql_limit\";\n\n\t\tif ($return_sql) {\n\t\t\treturn $sql;\n\t\t} else {\n\t\t\t$trees = db_fetch_assoc($sql);\n\n\t\t\t$sql = \"SELECT COUNT(gt.id)\n\t\t\t\tFROM graph_tree AS gt\n\t\t\t\t$sql_join\n\t\t\t\t$sql_where\";\n\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'tree');\n\t\t}\n\t} else {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = \"WHERE enabled='on' AND $sql_where\";\n\t\t} else {\n\t\t\t$sql_where = \"WHERE enabled='on'\";\n\t\t}\n\n\t\tif ($return_sql) {\n\t\t\treturn \"SELECT id, name FROM graph_tree $sql_where $sql_order\";\n\t\t} else {\n\t\t\t$trees = db_fetch_assoc(\"SELECT id, name FROM graph_tree AS gt $sql_where $sql_order\");\n\n\t\t\t$sql = \"SELECT COUNT(*) FROM graph_tree AS gt $sql_where\";\n\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'tree');\n\t\t}\n\t}\n\n\treturn $trees;\n}\n\n/**\n * get_allowed_branches - returns the list of Tree branches that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as to build out the tree for a user.\n *\n * @param  (bool)   Is the Tree in Edit mode or not\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of branches\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array)  An array of permitted Tree branches\n */\nfunction get_allowed_branches($sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\t// suppress total rows\n\t$total_rows = -1;\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$simple_perms = get_simple_device_perms($user_id);\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\t$sql_hosts_where = '';\n\n\tif (!$simple_perms) {\n\t\t$hosts = get_allowed_devices('', 'description', '', $total_rows);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\t$hosts = array_rekey($hosts, 'id', 'description');\n\t\t}\n\n\t\t$tree_hosts = db_fetch_assoc(\"SELECT DISTINCT h.id, h.description\n\t\t\tFROM graph_tree_items AS gti\n\t\t\tINNER JOIN graph_tree AS gt\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tINNER JOIN host AS h\n\t\t\tON gti.host_id = h.id\n\t\t\tWHERE gti.host_id > 0\n\t\t\tAND $sql_where\", false);\n\n\t\tif (cacti_sizeof($tree_hosts)) {\n\t\t\t$tree_hosts = array_rekey($tree_hosts, 'id', 'description');\n\t\t}\n\n\t\t$hosts = array_intersect_key($hosts, $tree_hosts);\n\n\t\tif (cacti_sizeof($hosts) > 0) {\n\t\t\t$sql_hosts_where =  'AND h.id IN (' . implode(',', array_keys($hosts)) . ')';\n\t\t}\n\t}\n\n\tif ($auth_method != 0) {\n\t\t$i          = 0;\n\t\t$sql_join   = '';\n\t\t$sql_where1 = '';\n\n\t\tforeach($policies as $policy) {\n\t\t\tif ($policy['policy_trees'] == '1') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NULL\";\n\t\t\t} elseif ($policy['policy_trees'] == '2') {\n\t\t\t\t$sql_where1 .= ($sql_where1 != '' ? ' OR':'') . \" uap$i.\" . $policy['type'] . \"_id IS NOT NULL\";\n\t\t\t}\n\n\t\t\t$sql_join .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'group' ? 'group_':'') . \"perms AS uap$i\n\t\t\t\tON (gt.id=uap$i.item_id AND uap$i.type=2 AND uap$i.\" . $policy['type'] . '_id=' . $policy['id'] . ') ';\n\n\t\t\t$i++;\n\t\t}\n\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = 'WHERE gt.enabled=\"on\" AND (' . $sql_where . ')' . ($sql_where1 != '' ? ' AND (' . $sql_where1 . ')':'');\n\t\t} elseif ($sql_where1 != '') {\n\t\t\t$sql_where = 'WHERE gt.enabled=\"on\" AND (' . $sql_where1 . ')';\n\t\t}\n\n\t\t$sql = \"(SELECT gti.id, CONCAT('\". __('Branch:') . \" ', gti.title) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tAND gti.host_id = 0\n\t\t\tAND gti.local_graph_id=0\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t) UNION (\n\t\t\tSELECT gti.id, CONCAT('\" . __('Device:') . \" ', h.description) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tINNER JOIN host AS h\n\t\t\tON h.id=gti.host_id\n\t\t\t$sql_hosts_where\n\t\t\t$sql_join\n\t\t\t$sql_where\n \t\t\t)\n\t\t\t$sql_order\n\t\t\t$sql_limit\";\n\n\t\t$branches = db_fetch_assoc($sql);\n\n\t\t$sql = 'SELECT COUNT(*) FROM (' . $sql . ') AS rower';\n\n\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'branch');\n\t} else {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where = \"WHERE gt.enabled='on' AND h.disabled='' AND ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t\t} else {\n\t\t\t$sql_where = \"WHERE gt.enabled='on' AND h.disabled='on' AND ((h.id > 0 AND h.deleted = '') OR h.id IS NULL)\";\n\t\t}\n\n\t\t$sql = \"(\n\t\t\tSELECT gti.id, CONCAT('\". __('Branch:') . \" ', gti.title) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tAND gti.host_id=0\n\t\t\tAND gti.local_graph_id=0\n\t\t\t$sql_where\n\t\t\t) UNION (\n\t\t\tSELECT gti.id, CONCAT('\" . __('Device:') . \" ', h.description) AS name\n\t\t\tFROM graph_tree AS gt\n\t\t\tINNER JOIN graph_tree_items AS gti\n\t\t\tON gti.graph_tree_id = gt.id\n\t\t\tINNER JOIN host AS h\n\t\t\tON h.id=gti.host_id\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t)\n\t\t\t$sql_order\n\t\t\t$sql_limit\";\n\n\t\t$branches = db_fetch_assoc($sql);\n\n\t\t$sql = 'SELECT COUNT(*) FROM (' . $sql . ') AS rower';\n\n\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'branch');\n\t}\n\n\treturn $branches;\n}\n\n/**\n * get_allowed_devices - returns the list of devices that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as other tasks.\n *\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array)  An array of permitted devices\n */\nfunction get_allowed_devices($sql_where = '', $sql_order = 'description', $sql_limit = '', &$total_rows = 0, $user_id = 0, $device_id = 0) {\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$simple_perms = get_simple_device_perms($user_id);\n\n\t$init_rows = $total_rows;\n\n\t$host_list = array();\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) \";\n\t}\n\n\tif ($device_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . \" h.id = $device_id\";\n\t}\n\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t/* get policies for all groups and user */\n\t$policies = get_policies($user_id);\n\n\tif (!$simple_perms && $auth_method != 0) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\tif ($total_rows != -2) {\n\t\t$host_list = db_fetch_assoc(\"SELECT h1.*\n\t\t\tFROM host AS h1\n\t\t\tINNER JOIN (\n\t\t\t\tSELECT DISTINCT id\n\t\t\t\tFROM (\n\t\t\t\t\tSELECT h.id\n\t\t\t\t\tFROM host AS h\n\t\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\t\tON h.id=gl.host_id\n\t\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\t\tON gt.id=gl.graph_template_id\n\t\t\t\t\tLEFT JOIN host_template AS ht\n\t\t\t\t\tON h.host_template_id=ht.id\n\t\t\t\t\t$sql_where\n\t\t\t\t) AS rs1\n\t\t\t) AS rs2\n\t\t\tON rs2.id=h1.id\n\t\t\t$sql_order\n\t\t\t$sql_limit\");\n\t}\n\n\tif ($total_rows >= 0 || $total_rows == -2) {\n\t\t$sql = \"SELECT COUNT(DISTINCT id)\n\t\t\tFROM (\n\t\t\t\tSELECT h.id\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\tON h.id=gl.host_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id=gl.graph_template_id\n\t\t\t\tLEFT JOIN host_template AS ht\n\t\t\t\tON h.host_template_id=ht.id\n\t\t\t\t$sql_where\n\t\t\t) AS rower\";\n\n\t\tif ($device_id == 0) {\n\t\t\t$total_rows = get_total_row_data($user_id, $sql, array(), 'device');\n\t\t} else {\n\t\t\t$total_rows = db_fetch_cell($sql);\n\t\t}\n\t}\n\n\treturn $host_list;\n}\n\n/**\n * get_allowed_sites - returns the list of sites that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as other tasks.\n *\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If checking a single site, specify the site_id\n *\n * @return (array)  An array of permitted sites\n */\nfunction get_allowed_sites($sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0, $site_id = 0) {\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE $sql_where\";\n\t}\n\n\tif ($site_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . \" s.id=$site_id\";\n\t}\n\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif (isset($_SESSION['sess_user_id']) && $user_id == 0) {\n\t\t$user_id = $_SESSION['sess_user_id'];\n\t} elseif ($auth_method > 0) {\n\t\treturn array();\n\t}\n\n\t$sites = db_fetch_assoc(\"SELECT s.id, s.name\n\t\tFROM sites AS s\n\t\tINNER JOIN host AS h\n\t\tON s.id=h.site_id\n\t\t$sql_where\n\t\tGROUP BY s.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(DISTINCT s.id)\n\t\tFROM sites AS s\n\t\tINNER JOIN host AS h\n\t\tON s.id=h.site_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'site_device');\n\n\treturn $sites;\n}\n\n/**\n * get_allowed_site_devices - returns the list of devices in a site that the user is allowed\n *   To access.  This function is generally intended for both listbox and table displays as\n *   well as other tasks.\n *\n * @param  (int)    The site id for the site\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array)  An array of permitted site devices\n */\nfunction get_allowed_site_devices($site_id, $sql_where = '', $sql_order = 'description', $sql_limit = '', &$total_rows = 0, $user_id = 0) {\n\tif ($user_id == -1) {\n\t\t$auth_method = 0;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\tif ($auth_method > 0 && $user_id == 0) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$user_id = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t$simple_perms = get_simple_device_perms($user_id);\n\n\t$policies = get_policies($user_id);\n\n\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\tif (read_user_setting('hide_disabled') == 'on') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . '(h.disabled = \"\" OR h.disabled IS NULL)';\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) AND $sql_where\";\n\t} else {\n\t\t$sql_where = \"WHERE ((h.id > 0 AND h.deleted = '') OR h.id IS NULL) \";\n\t}\n\n\tif ($site_id > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . \" h.site_id=$site_id\";\n\t}\n\n\tif ($auth_method != 0 && !$simple_perms) {\n\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t}\n\n\t$host_list = db_fetch_assoc(\"SELECT h1.*, ht.name AS host_template_name\n\t\tFROM host AS h1\n\t\tLEFT JOIN host_template AS ht\n\t\tON h1.host_template_id=ht.id\n\t\tINNER JOIN (\n\t\t\tSELECT DISTINCT id\n\t\t\tFROM (\n\t\t\t\tSELECT h.id\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\tON h.id=gl.host_id\n\t\t\t\tLEFT JOIN graph_templates_graph AS gtg\n\t\t\t\tON gl.id=gtg.local_graph_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id=gl.graph_template_id\n\t\t\t\tLEFT JOIN host_template AS ht\n\t\t\t\tON h.host_template_id=ht.id\n\t\t\t\t$sql_where\n\t\t\t) AS rs1\n\t\t) AS rs2\n\t\tON rs2.id=h1.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$sql = \"SELECT COUNT(DISTINCT id)\n\t\tFROM (\n\t\t\tSELECT h.id\n\t\t\tFROM host AS h\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON h.id=gl.host_id\n\t\t\tLEFT JOIN graph_templates_graph AS gtg\n\t\t\tON gl.id=gtg.local_graph_id\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id=gl.graph_template_id\n\t\t\tLEFT JOIN host_template AS ht\n\t\t\tON h.host_template_id=ht.id\n\t\t\t$sql_where\n\t\t) AS rower\";\n\n\t$total_rows = get_total_row_data($user_id, $sql, array(), 'site_device');\n\n\treturn $host_list;\n}\n\n/**\n * get_allowed_graph_templates_normalized - returns the list of graph templates aligned with the\n *   To be able to differentiate between Graph Templates based on a non-data query data input mode\n *   and those related to data queries.\n *\n * @param  (string) The SQL Where used to get the values or the values\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n * @param  (int)    If checking a single graph template, specify the graph_template_id\n *\n * @return (array)  An array of permitted and normalized graph templates\n */\nfunction get_allowed_graph_templates_normalized($sql_where = '', $sql_order = 'name', $sql_limit = '', &$total_rows = 0, $user_id = 0, $graph_template_id = 0) {\n\t$templates = array_rekey(get_allowed_graph_templates($sql_where, $sql_order, $sql_limit, $total_rows, $user_id, $graph_template_id), 'id', 'name');\n\n\tif (!cacti_sizeof($templates)) {\n\t\treturn array();\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = ' WHERE (' . $sql_where . ') AND gl.graph_template_id IN(' . implode(', ', array_keys($templates)) . ') AND (gl.snmp_query_graph_id=0 OR sqg.name IS NOT NULL) AND (gt.name IS NOT NULL)';\n\t} else {\n\t\t$sql_where = ' WHERE gl.graph_template_id IN(' . implode(', ', array_keys($templates)) . ') AND (gl.snmp_query_graph_id=0 OR sqg.name IS NOT NULL) AND (gt.name IS NOT NULL)';\n\t}\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = \"LIMIT $sql_limit\";\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\t$templates = db_fetch_assoc(\"SELECT\n\t\tIF(snmp_query_graph_id=0, CONCAT('cg_',gl.graph_template_id), CONCAT('dq_', gl.snmp_query_graph_id)) AS id,\n\t\tIF(snmp_query_graph_id=0, gt.name, CONCAT(gt.name, ' [', sqg.name, ']')) AS name\n\t\tFROM graph_local AS gl\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gl.graph_template_id\n\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\tON gl.snmp_query_graph_id=sqg.id\n\t\tAND gl.graph_template_id=sqg.graph_template_id\n\t\t$sql_where\n\t\tGROUP BY id, name\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\treturn $templates;\n}\n\n/**\n * get_total_row_data - returns the total rows based upon a set of criteria\n *\n * This function will hash the $sql, and then search for the total\n * row counter based upon that criteria and if it finds a unexpired\n * match for that data, it will return the row count in the table\n * otherwise, it will execute the SQL and return the data.\n *\n * @param  (int)    The user id making the request\n * @param  (string) The sql to be executed, either prepared or otherwise\n * @param  (array)  In the case of a prepared statement the\n * @param  (string) The user defined class of data\n * @param  (int)    The timeout for the Class if not controlled by Cacti\n *\n * @return (array) an array containing a list of hosts\n */\nfunction get_total_row_data($user_id, $sql, $sql_params = array(), $class = '', $timeout = 86400) {\n\t$execute  = true;\n\t$now_time = time();\n\n\tif (cacti_sizeof($sql_params)) {\n\t\t$nsql = str_replace('?', \"'%s'\", $sql);\n\t\t$nsql = vsprintf($nsql, $sql_params);\n\n\t\t$hash = md5($nsql);\n\t} else {\n\t\t$hash = md5($sql);\n\t}\n\n\t$row_data = db_fetch_row_prepared('SELECT total_rows, UNIX_TIMESTAMP(time) AS time\n\t\tFROM user_auth_row_cache\n\t\tWHERE user_id = ?\n\t\tAND class = ?\n\t\tAND hash = ?',\n\t\tarray($user_id, $class, $hash));\n\n\t$cached = false;\n\n\tif (cacti_sizeof($row_data)) {\n\t\t$cached    = true;\n\t\t$last_time = read_config_option('time_last_change_' . $class);\n\n\t\tif (!empty($last_time)) {\n\t\t\tif ($row_data['time'] >= $last_time) {\n\t\t\t\treturn $row_data['total_rows'];\n\t\t\t}\n\t\t} elseif ($now_time - $row_data['time'] < $timeout) {\n\t\t\treturn $row_data['total_rows'];\n\t\t}\n\t}\n\n\tif (cacti_sizeof($sql_params)) {\n\t\t$rows = db_fetch_cell($sql, $sql_params);\n\t} else {\n\t\t$rows = db_fetch_cell($sql);\n\t}\n\n\tif ($user_id > 0) {\n\t\tdb_execute_prepared('REPLACE INTO user_auth_row_cache\n\t\t\t(user_id, class, hash, total_rows, time)\n\t\t\tVALUES (?, ?, ?, ?, FROM_UNIXTIME(?))',\n\t\t\tarray($user_id, $class, $hash, $rows, $now_time));\n\t}\n\n\treturn $rows;\n}\n\n/**\n * get_host_array - returns a list of hosts taking permissions into account if necessary\n *\n * @return (array) an array containing a list of hosts\n */\nfunction get_host_array() {\n\t$total_rows = -1;\n\n\t$hosts = get_allowed_devices('', 'description', '', $total_rows);\n\n\tforeach($hosts as $host) {\n\t\t$return_devices[] = strip_domain($host['description']) . ' (' . strip_domain($host['hostname']) . ')';\n\t}\n\n\treturn $return_devices;\n}\n\n/**\n * get_allowed_ajax_hosts - returns a list of hosts in a way that can be easily read through\n *   a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n * @param  (bool)   Include the 'Any' item as the first in the list\n @ @param  (bool)   Include the 'None' item as the first or second in the list\n * @param  (string) SQL Where expression to use to gather the hosts in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching devices upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_hosts($include_any = true, $include_none = true, $sql_where = '') {\n\t$return = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') .\n\t\t\t'(hostname LIKE ' . db_qstr(\"%$term%\") .\n\t\t\t' OR description LIKE ' . db_qstr(\"%$term%\") .\n\t\t\t' OR notes LIKE ' . db_qstr(\"%$term%\") . ')';\n\t}\n\n\tif (get_request_var('term') == '') {\n\t\tif ($include_any) {\n\t\t\t$return[] = array('label' => __('Any'), 'value' => 'Any', 'id' => '-1');\n\t\t}\n\t\tif ($include_none) {\n\t\t\t$return[] = array('label' => __('None'), 'value' => 'None', 'id' => '0');\n\t\t}\n\t}\n\n\t$total_rows = -1;\n\n\t$hosts = get_allowed_devices($sql_where, 'description', read_config_option('autocomplete_rows'), $total_rows);\n\n\tif (cacti_sizeof($hosts)) {\n\t\tforeach($hosts as $host) {\n\t\t\t$return[] = array('label' => html_escape(strip_domain($host['description'])), 'value' => html_escape($host['description']), 'id' => $host['id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_ajax_graph_templates - returns a list of graph_template in a way that can be easily\n *   read through a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n * @param  (bool)   Include the 'Any' item as the first in the list\n @ @param  (bool)   Include the 'None' item as the first or second in the list\n * @param  (string) SQL Where expression to use to gather the graph templates in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching graph templates upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_graph_templates($include_any = true, $include_none = true, $sql_where = '') {\n\t$return = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'name LIKE ' . db_qstr(\"%$term%\");\n\t}\n\n\tif (get_request_var('term') == '') {\n\t\tif ($include_any) {\n\t\t\t$return[] = array('label' => __('Any'), 'value' => 'Any', 'id' => '-1');\n\t\t}\n\t\tif ($include_none) {\n\t\t\t$return[] = array('label' => __('None'), 'value' => 'None', 'id' => '0');\n\t\t}\n\t}\n\n\t$total_rows = -1;\n\n\t$templates = get_allowed_graph_templates($sql_where, 'gt.name', read_config_option('autocomplete_rows'), $total_rows);\n\tif (cacti_sizeof($templates)) {\n\t\tforeach($templates as $template) {\n\t\t\t$return[] = array('label' => html_escape($template['name']), 'value' => html_escape($template['name']), 'id' => $template['id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_ajax_graph_items - returns a list of graph items in a way that can be easily\n *   read through a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n @ @param  (bool)   Include the 'None' item as the first item in the list\n * @param  (string) SQL Where expression to use to gather the hosts in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching graph items upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_graph_items($include_none = true, $sql_where = '') {\n\t$return    = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') .\n\t\t\t'name_cache LIKE ' . db_qstr(\"%$term%\") .\n\t\t\t' OR data_source_name LIKE ' . db_qstr(\"%$term%\");\n\t}\n\n\tif (get_request_var('term') == '') {\n\t\tif ($include_none) {\n\t\t\t$return[] = array('label' => __('None'), 'value' => 'None', 'id' => '0');\n\t\t}\n\t}\n\n\t$graph_items = get_allowed_graph_items($sql_where, 'name_cache', read_config_option('autocomplete_rows'));\n\tif (cacti_sizeof($graph_items)) {\n\t\tforeach($graph_items as $gi) {\n\t\t\t$return[] = array('label' => html_escape($gi['name']), 'value' => html_escape($gi['name']), 'id' => $gi['id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_ajax_graph - returns a list of allowed graphs in a way that can be easily\n *   read through a callback, in JSON.  The 'term' request variable will include an optional search term.\n *\n * @param  (string) SQL Where expression to use to gather the graphs in addition to the 'term'\n *   request variable.\n *\n * @return (string) A json array of matching graphs upto a limit specified in the system\n *   settings\n */\nfunction get_allowed_ajax_graphs($sql_where = '') {\n\t$return = array();\n\n\t$term = get_filter_request_var('term', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tif ($term != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'title_cache LIKE ' . db_qstr(\"%$term%\");\n\t}\n\n\t$total_rows = -1;\n\n\t$graphs = get_allowed_graphs($sql_where, 'gtg.title_cache', read_config_option('autocomplete_rows'), $total_rows);\n\tif (cacti_sizeof($graphs)) {\n\t\tforeach($graphs as $graph) {\n\t\t\t$return[] = array('label' => html_escape($graph['title_cache']), 'value' => html_escape($graph['title_cache']), 'id' => $graph['local_graph_id']);\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\n/**\n * get_allowed_graph_items - returns a array of allowed graph items in a way that can be easily\n *   use in a table or list.\n *\n * @param  (string) The SQL Where expression to use to gather the graph items\n * @param  (string) The SQL Order clause to use for the sorting of devices\n * @param  (int)    The limit on items to return.  If empty or -1, return all items\n * @param  (int)    The number of rows found, to be returned to the caller\n * @param  (int)    If checking a user, specify the user_id otherwise for the current user leave blank\n *\n * @return (array) An array of permitted graph items\n */\nfunction get_allowed_graph_items($sql_where, $sql_order = 'name', $sql_limit = 20, $user_id = 0) {\n\t$return = array();\n\n\tif ($user_id == 0 && isset($_SESSION['sess_user_id'])) {\n\t\t$user_id = $_SESSION['sess_user_id'];\n\t}\n\n\tif ($sql_where != '') {\n\t\t$sql_where = 'WHERE ' . $sql_where;\n\t}\n\n\tif ($sql_limit != '' && $sql_limit != -1) {\n\t\t$sql_limit = 'LIMIT ' . $sql_limit;\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\tif ($sql_order != '') {\n\t\t$sql_order = \"ORDER BY $sql_order\";\n\t}\n\n\t$items = db_fetch_assoc(\"SELECT\n\t\tCONCAT_WS('', dtd.name_cache,' (', dtr.data_source_name, ')') as name, dtr.id, dl.host_id\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id=dl.id\n\t\tINNER JOIN data_template_rrd AS dtr\n\t\tON dtr.local_data_id=dl.id\n\t\tLEFT JOIN host AS h\n\t\tON dl.host_id=h.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\tif (cacti_sizeof($items)) {\n\t\tforeach($items as $i) {\n\t\t\tif (is_device_allowed($i['host_id'], $user_id)) {\n\t\t\t\t$return[] = array('id' => $i['id'], 'name' => $i['name']);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n * auth_get_username - returns the login username for the user attempting to login\n *\n * @return (string) the username attempting to login\n */\nfunction auth_get_username() {\n\t$auth_method = read_config_option('auth_method');\n\n\tif ($auth_method == 2) {\n\t\t$username = get_basic_auth_username();\n\n\t\t/* Get the Web Basic Auth username and set action so we login right away */\n\t\tset_request_var('action', 'login');\n\n\t} elseif (get_nfilter_request_var('action') == 'login') {\n\t\t$username = get_nfilter_request_var('login_username');\n\t} else {\n\t\t$username = '';\n\t}\n\n\t$username = sanitize_search_string($username);\n\n\treturn $username;\n}\n\n/**\n * auth_checkclear_lockout - checks the lockout status of a user and unlocks if necessary\n *\n * @param  (string) $username The username of the user to check\n * @param  (int)    $realm The realm of the user to check\n *\n * @return (void)\n */\nfunction auth_checkclear_lockout($username, $realm) {\n\t// Unlock the user account if timing permits\n\t$secPassLockFailed = read_config_option('secpass_lockfailed');\n\tif ($secPassLockFailed > 0) {\n\t\t$max = intval($secPassLockFailed);\n\t\tif ($max > 0) {\n\t\t\t$user = db_fetch_row_prepared(\"SELECT id, username, lastfail, failed_attempts, `locked`, password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = ?\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\tarray($username, $realm));\n\n\t\t\tif (cacti_sizeof($user)) {\n\t\t\t\t$unlock = intval(read_config_option('secpass_unlocktime'));\n\t\t\t\tif ($unlock > 1440) {\n\t\t\t\t\t$unlock = 1440;\n\t\t\t\t}\n\n\t\t\t\t$secs_unlock = $unlock * 60;\n\t\t\t\t$secs_fail = time() - $user['lastfail'];\n\n\t\t\t\tcacti_log('DEBUG: User \\'' . $username . '\\' secs_fail = ' . $secs_fail . ', secs_unlock = ' . $secs_unlock, false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t\tif ($unlock > 0 && ($secs_fail > $secs_unlock)) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\t\tSET lastfail = 0, failed_attempts = 0, `locked` = ''\n\t\t\t\t\t\tWHERE username = ?\n\t\t\t\t\t\tAND realm = ?\n\t\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\t\tarray($username, $realm));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * auth_process_lockout_check - checks to see if the user is locked out of their account\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that a lockout is present and not to proceed with login.\n *\n * @param  (string) $username - The name of the user account\n * @param  (int)    $realm - The logging realm for the user\n *\n * @return (bool)   True if locked out, otherwise false\n */\nfunction auth_process_lockout_check($username, $realm) {\n\tglobal $error, $error_msg;\n\n\t// Mark failed login attempts\n\t$secPassLockFailed = read_config_option('secpass_lockfailed');\n\tif ($secPassLockFailed > 0) {\n\t\t$max = intval($secPassLockFailed);\n\t\tif ($max > 0) {\n\t\t\t$user = db_fetch_row_prepared(\"SELECT id, username, lastfail, failed_attempts, `locked`, password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = ?\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\tarray($username, $realm));\n\n\t\t\tif (cacti_sizeof($user)) {\n\t\t\t\tif ($user['locked'] == 'on') {\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Your account has been locked.  Please contact your Administrator.');\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * auth_process_lockout - called when a user login attempt fails to increment or lockout the user\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that a lockout is present and not to proceed with login.\n *\n * @param  (string) $username - The name of the user account\n * @param  (int)    $realm - The logging realm for the user\n *\n * @return (void)\n */\nfunction auth_process_lockout($username, $realm) {\n\tglobal $error, $error_msg;\n\n\t// Mark failed login attempts\n\t$secPassLockFailed = read_config_option('secpass_lockfailed');\n\tif ($secPassLockFailed > 0) {\n\t\t$max = intval($secPassLockFailed);\n\t\tif ($max > 0) {\n\t\t\t$user = db_fetch_row_prepared(\"SELECT id, username, enabled, lastfail, failed_attempts, `locked`, password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = ?\",\n\t\t\t\tarray($username, $realm));\n\n\t\t\tif (cacti_sizeof($user)) {\n\t\t\t\tif ($user['enabled'] == '') {\n\t\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr() . \"'.  User account Disabled.\", false, 'AUTH');\n\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Access Denied!  Login Disabled.');\n\t\t\t\t}\n\n\t\t\t\t$failed = intval($user['failed_attempts']) + 1;\n\n\t\t\t\tcacti_log('LOGIN FAILED: User \\'' . $username . '\\' failed authentication, incrementing lockout (' . $failed . ' of ' . $max . ')', false, 'AUTH', POLLER_VERBOSITY_LOW);\n\n\t\t\t\tif ($failed >= $max) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\t\tSET `locked` = 'on'\n\t\t\t\t\t\tWHERE username = ?\n\t\t\t\t\t\tAND realm = ?\n\t\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\t\tarray($username, $realm));\n\n\t\t\t\t\t$user['locked'] = 'on';\n\t\t\t\t}\n\n\t\t\t\t$user['lastfail'] = time();\n\n\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\tSET lastfail = ?, failed_attempts = ?\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = ?\n\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray($user['lastfail'], $failed, $username, $realm));\n\n\t\t\t\t// Log the invalid password attempt\n\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t\t\t(username, user_id, result, ip, time)\n\t\t\t\t\tVALUES (?, ?, 0, ?, NOW())',\n\t\t\t\t\tarray($username, isset($user['id']) ? $user['id']:0, get_client_addr()));\n\n\t\t\t\tif ($user['locked'] == 'on') {\n\t\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr() . \"'.  Account is locked out.\", false, 'AUTH');\n\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Your account has been locked.  Please contact your Administrator.');\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr() . \"'.\", false, 'AUTH');\n\n\t\t\t\t\t/* error */\n\t\t\t\t\t$error     = true;\n\t\t\t\t\t$error_msg = __('Access Denied!  Login Failed.');\n\t\t\t\t}\n\t\t\t} elseif ($user['locked'] == 'on') {\n\t\t\t\tcacti_log(\"LOGIN FAILED: Local Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr() . \"'.\", false, 'AUTH');\n\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied!  Login Failed.');\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * basic_auth_login_process - login a basic auth account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that a lockout is present and not to proceed with login.  This function will also\n *   exit and return html to the display to notify the user of critical errors.\n *\n * @param  (string) $username The user to process\n *\n * @return (array|void) $user The valid user, an empty array if the user must be created\n *   or void in the case of an exit condition\n */\nfunction basic_auth_login_process($username) {\n\tglobal $error, $error_msg;\n\n\tif (empty($username)) {\n\t\tcacti_log('ERROR: No username passed with Web Basic Authentication enabled.', false, 'AUTH');\n\t\tauth_display_custom_error_message(__('Web Basic Authentication configured, but no username was passed from the web server. Please make sure you have authentication enabled on the web server.'));\n\n\t\texit;\n\t}\n\n\t/* Locate user in database */\n\t$user = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE username = ?\n\t\tAND realm = 2',\n\t\tarray($username));\n\n\tif (!$user && get_template_account($username) == 0 && get_guest_account() === 0) {\n\t\t$error     = true;\n\t\t$error_msg = __esc('%s authenticated by Web Server, but both Template and Guest Users are not defined in Cacti.', $username);\n\n\t\tcacti_log(\"LOGIN FAILED: User '\" . $username . \"' authenticated by Web Server, but both Template and Guest Users are not defined in Cacti.  Exiting.\", false, 'AUTH');\n\n\t\tauth_display_custom_error_message($error_msg);\n\t\texit;\n\t}\n\n\treturn $user;\n}\n\n/**\n * local_auth_login_process - login a local account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username - The user to process\n *\n * @return (array)  $user - The valid user information, or empty array if user must be created\n */\nfunction local_auth_login_process($username) {\n\t$user = array();\n\n\tif (!api_plugin_hook_function('login_process', false)) {\n\t\t$user = secpass_login_process($username);\n\n\t\t/**\n\t\t * If the password needs to be rehashed for security purposes,\n\t\t * do that now.\n\t\t */\n\t\t$stored_pass = db_fetch_cell_prepared('SELECT password\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0',\n\t\t\tarray($username));\n\n\t\tif ($stored_pass != '') {\n\t\t\t$password = get_nfilter_request_var('login_password');\n\n\t\t\t$valid = compat_password_verify($password, $stored_pass);\n\n\t\t\tcacti_log(\"DEBUG: User '\" . $username . \"' password for rehash is \" . ($valid ? '':'in') . 'valid', false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tif ($valid) {\n\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = 0',\n\t\t\t\t\tarray($username));\n\n\t\t\t\tif (compat_password_needs_rehash($stored_pass, PASSWORD_DEFAULT)) {\n\t\t\t\t\t$password = compat_password_hash($password, PASSWORD_DEFAULT);\n\t\t\t\t\tdb_check_password_length();\n\t\t\t\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\t\t\t\tSET password = ?\n\t\t\t\t\t\tWHERE username = ?',\n\t\t\t\t\t\tarray($password, $username));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $user;\n}\n\n/**\n * ldap_login_process - login to an LDAP account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username - The user to process\n *\n * @return (array)  $user - The valid user information, or empty array if user must be created\n */\nfunction ldap_login_process($username) {\n\tglobal $error, $error_msg;\n\n\t$password = get_nfilter_request_var('login_password');\n\n\tif ($username == '') {\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log('LOGIN FAILED: Empty LDAP Username provided', false, 'AUTH');\n\n\t\treturn array();\n\t}\n\n\tauth_checkclear_lockout($username, 3);\n\n\tif (auth_process_lockout_check($username, 3)) {\n\t\treturn array();\n\t}\n\n\t$user  = array();\n\t$realm = 3;\n\n\tif ($password != '') {\n\t\t/* get user DN */\n\t\t$ldap_dn_search_response = cacti_ldap_search_dn($username);\n\n\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t} else {\n\t\t\t/* error searching */\n\t\t\t$error     = true;\n\t\t\t$error_msg =  __('Access Denied!  LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\n\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t/* auth user with LDAP */\n\t\t\t$ldap_auth_response = cacti_ldap_auth($username, $password, $ldap_dn);\n\n\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t/* Locate user in database */\n\t\t\t\tcacti_log(\"LOGIN: LDAP User '\" . $username . \"' Authenticated\", false, 'AUTH');\n\n\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = ?',\n\t\t\t\t\tarray($username, $realm));\n\t\t\t} else {\n\t\t\t\t/* error */\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied!  LDAP Error: %s', $ldap_auth_response['error_text']);\n\n\t\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\n\t\t\t\tif ($ldap_auth_response['error_num'] == 1) {\n\t\t\t\t\tauth_process_lockout($username, $realm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  No password provided by user.');\n\n\t\tcacti_log(sprintf('LOGIN FAILED: LDAP No password provided for user %s', $username), false, 'AUTH');\n\n\t\tauth_process_lockout($username, $realm);\n\t}\n\n\treturn $user;\n}\n\n/**\n * domains_login_process - login to an LDAP domain account or generate an error\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username - The user to process\n *\n * @return (array)  $user - The valid user information, or empty array if user must be created\n */\nfunction domains_login_process($username) {\n\tglobal $realm, $error, $error_msg;\n\n\t$realm    = get_nfilter_request_var('realm');\n\t$password = get_nfilter_request_var('login_password');\n\n\tif ($username == '') {\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log('LOGIN FAILED: Empty Domains Username provided', false, 'AUTH');\n\n\t\treturn array();\n\t}\n\n\tauth_checkclear_lockout($username, $realm);\n\n\tif (auth_process_lockout_check($username, $realm)) {\n\t\treturn array();\n\t}\n\n\t$user = array();\n\n\tif ($realm > 3 && $password != '') {\n\t\t/* get user DN */\n\t\t$ldap_dn_search_response = domains_ldap_search_dn($username, $realm);\n\t\tif ($ldap_dn_search_response['error_num'] == '0') {\n\t\t\t$ldap_dn = $ldap_dn_search_response['dn'];\n\t\t} else {\n\t\t\t/* error searching */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('LDAP Search Error: %s', $ldap_dn_search_response['error_text']);\n\n\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_dn_search_response['error_text'], false, 'AUTH');\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t/* auth user with LDAP */\n\t\t\t$ldap_auth_response = domains_ldap_auth($username, $password, $ldap_dn, $realm);\n\n\t\t\tif ($ldap_auth_response['error_num'] == '0') {\n\t\t\t\t/* User ok */\n\t\t\t\t$domain_name = db_fetch_cell_prepared('SELECT domain_name\n\t\t\t\t\tFROM user_domains\n\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t/* Locate user in database */\n\t\t\t\tcacti_log(\"LOGIN: LDAP User '$username' Authenticated from Domain '$domain_name'\", false, 'AUTH');\n\n\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND realm = ?',\n\t\t\t\t\tarray($username, $realm));\n\n\t\t\t\t/* Create user from template if requested */\n\t\t\t\t$template_user = db_fetch_cell_prepared('SELECT user_id\n\t\t\t\t\tFROM user_domains\n\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t$template_username = db_fetch_cell_prepared('SELECT username\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($template_user));\n\n\t\t\t\tif (!cacti_sizeof($user) && $template_user > 0 && $username != '') {\n\t\t\t\t\tcacti_log(\"NOTE: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\n\t\t\t\t\t/* check that template user exists */\n\t\t\t\t\t$user_template = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($template_user));\n\n\t\t\t\t\tif (cacti_sizeof($user_template)) {\n\t\t\t\t\t\t/* template user found */\n\t\t\t\t\t\t$cn_full_name = db_fetch_cell_prepared('SELECT cn_full_name\n\t\t\t\t\t\t\tFROM user_domains_ldap\n\t\t\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t\t\t$cn_email = db_fetch_cell_prepared('SELECT cn_email\n\t\t\t\t\t\t\tFROM user_domains_ldap\n\t\t\t\t\t\t\tWHERE domain_id = ?',\n\t\t\t\t\t\t\tarray($realm-1000));\n\n\t\t\t\t\t\tif ($cn_full_name != '' || $cn_email != '') {\n\t\t\t\t\t\t\t$ldap_cn_search_response = cacti_ldap_search_cn($username, array($cn_full_name, $cn_email));\n\n\t\t\t\t\t\t\tif (isset($ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t\t\t$data_override = array();\n\n\t\t\t\t\t\t\t\tif (array_key_exists($cn_full_name, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t\t\t\t$data_override['full_name'] = $ldap_cn_search_response['cn'][$cn_full_name];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$data_override['full_name'] = '';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (array_key_exists($cn_email, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t\t\t\t$data_override['email_address'] = $ldap_cn_search_response['cn'][$cn_email];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$data_override['email_address'] = '';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tuser_copy($user_template['username'], $username, 0, $realm, false, $data_override);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcacti_log('LOGIN: fields not found ' . $ldap_cn_search_response[0] . 'code: ' . $ldap_cn_search_response['error_num'], false, 'AUTH');\n\t\t\t\t\t\t\t\tuser_copy($user_template['username'], $username, 0, $realm);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuser_copy($user_template['username'], $username, 0, $realm);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* requery newly created user */\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\t\tWHERE username = ?\n\t\t\t\t\t\t\tAND realm = ?',\n\t\t\t\t\t\t\tarray($username, $realm));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* error */\n\t\t\t\t\t\t$error     = true;\n\t\t\t\t\t\t$error_msg = __('Access Denied!  Template user id %s does not exist.  Please contact your Administrator.', $template_user);\n\n\t\t\t\t\t\tcacti_log(\"LOGIN FAILED: Template user id '\" . $template_user . \"' does not exist.\", false, 'AUTH');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* error */\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied!  LDAP Error: %s', $ldap_auth_response['error_text']);\n\n\t\t\t\tcacti_log('LOGIN FAILED: LDAP Error: ' . $ldap_auth_response['error_text'], false, 'AUTH');\n\n\t\t\t\tif ($ldap_auth_response['error_text'] == 1) {\n\t\t\t\t\tauth_lockout_process($username, $realm);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif ($password == '') {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  No password provided by user.');\n\n\t\tcacti_log(sprintf('LOGIN FAILED: LDAP No password provided for user %s', $username), false, 'AUTH');\n\n\t\tauth_process_lockout($username, $realm);\n\t}\n\n\treturn $user;\n}\n\n/**\n * domains_ldap_auth - authentications a LDAP domain login\n *\n * @param  (string) $username  - The user to process\n * @param  (string) $password  - The users password\n * @param  (string) $dn        - The domain name\n * @param  (int)    $realm     - The LDAP Realm number\n *\n * @return (array)  $response - The ldap response of false on a general error\n */\nfunction domains_ldap_auth($username, $password = '', $dn = '', $realm = 0) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\tif (!empty($password)) $ldap->password = $password;\n\n\t$ldap->dn = $dn;\n\n\t$ld = db_fetch_row_prepared('SELECT *\n\t\tFROM user_domains_ldap\n\t\tWHERE domain_id = ?',\n\t\tarray($realm-1000));\n\n\tif (cacti_sizeof($ld)) {\n\t\tif (empty($dn) && !empty($ld['dn'])) {\n\t\t\t$ldap->dn = $ld['dn'];\n\t\t}\n\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\n\t\tif (!empty($ld['mode']))              $ldap->mode              = $ld['mode'];\n\t\tif (!empty($ld['search_base']))       $ldap->search_base       = $ld['search_base'];\n\t\tif (!empty($ld['search_filter']))     $ldap->search_filter     = $ld['search_filter'];\n\t\tif (!empty($ld['specific_dn']))       $ldap->specific_dn       = $ld['specific_dn'];\n\t\tif (!empty($ld['specific_password'])) $ldap->specific_password = $ld['specific_password'];\n\n\t\tif ($ld['group_require'] == 'on') {\n\t\t\t$ldap->group_require = true;\n\t\t} else {\n\t\t\t$ldap->group_require = false;\n\t\t}\n\n\t\tif (!empty($ld['group_dn']))          $ldap->group_dn          = $ld['group_dn'];\n\t\tif (!empty($ld['group_attrib']))      $ldap->group_attrib      = $ld['group_attrib'];\n\t\tif (!empty($ld['group_member_type'])) $ldap->group_member_type = $ld['group_member_type'];\n\n\t\t/* If the server list is a space delimited set of servers\n\t\t * process each server until you get a bind, or fail\n\t\t */\n\t\t$ldap_servers = preg_split('/\\s+/', $ldap->host);\n\n\t\tforeach($ldap_servers as $ldap_server) {\n\t\t\t$ldap->host = $ldap_server;\n\n\t\t\t$response = $ldap->Authenticate();\n\n\t\t\tif ($response['error_num'] == 0) {\n\t\t\t\treturn $response;\n\t\t\t}\n\t\t}\n\n\t\treturn $response;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * domains_ldap_search_dn - searches the user dn for existence\n *\n * @param  (string) $username  - The user to process\n * @param  (int)    $realm     - The LDAP Realm number\n *\n * @return (array)  $response - The ldap response, or false on general error\n */\nfunction domains_ldap_search_dn($username, $realm) {\n\t$ldap = new Ldap;\n\n\tif (!empty($username)) $ldap->username = $username;\n\n\t$ld = db_fetch_row_prepared('SELECT *\n\t\tFROM user_domains_ldap\n\t\tWHERE domain_id = ?',\n\t\tarray($realm-1000));\n\n\tif (cacti_sizeof($ld)) {\n\t\tif (!empty($ld['dn']))                $ldap->dn                = $ld['dn'];\n\t\tif (!empty($ld['server']))            $ldap->host              = $ld['server'];\n\t\tif (!empty($ld['port']))              $ldap->port              = $ld['port'];\n\t\tif (!empty($ld['port_ssl']))          $ldap->port_ssl          = $ld['port_ssl'];\n\t\tif (!empty($ld['proto_version']))     $ldap->version           = $ld['proto_version'];\n\t\tif (!empty($ld['encryption']))        $ldap->encryption        = $ld['encryption'];\n\t\tif (!empty($ld['referrals']))         $ldap->referrals         = $ld['referrals'];\n\n\t\tif (!empty($ld['mode']))              $ldap->mode              = $ld['mode'];\n\t\tif (!empty($ld['search_base']))       $ldap->search_base       = $ld['search_base'];\n\t\tif (!empty($ld['search_filter']))     $ldap->search_filter     = $ld['search_filter'];\n\t\tif (!empty($ld['specific_dn']))       $ldap->specific_dn       = $ld['specific_dn'];\n\t\tif (!empty($ld['specific_password'])) $ldap->specific_password = $ld['specific_password'];\n\n\t\tif ($ld['group_require'] == 'on') {\n\t\t\t$ldap->group_require = true;\n\t\t} else {\n\t\t\t$ldap->group_require = false;\n\t\t}\n\n\t\tif (!empty($ld['group_dn']))          $ldap->group_dn          = $ld['group_dn'];\n\t\tif (!empty($ld['group_attrib']))      $ldap->group_attrib      = $ld['group_attrib'];\n\t\tif (!empty($ld['group_member_type'])) $ldap->group_member_type = $ld['group_member_type'];\n\n\t\t/* If the server list is a space delimited set of servers\n\t\t * process each server until you get a bind, or fail\n\t\t */\n\t\t$ldap_servers = preg_split('/\\s+/', $ldap->host);\n\n\t\tforeach($ldap_servers as $ldap_server) {\n\t\t\t$ldap->host = $ldap_server;\n\n\t\t\t$response = $ldap->Search();\n\n\t\t\tif ($response['error_num'] == 0) {\n\t\t\t\treturn $response;\n\t\t\t}\n\t\t}\n\n\t\treturn $response;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * secpass_login_process - process a local login checking for triggers\n *   such as those that would force a password check and take the appropriate action.\n *   if there is an error, the globals error and error_msg will be set to notify the caller\n *   that error and not to proceed with login.\n *\n * @param  (string) $username  - The user to process\n *\n * @return (array)  $user - The login user or an empty array if the user does not exist\n */\nfunction secpass_login_process($username) {\n\tglobal $error, $error_msg;\n\n\t$password = get_nfilter_request_var('login_password');\n\n\tif ($username == '') {\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log('LOGIN FAILED: Empty Local Username provided', false, 'AUTH');\n\n\t\treturn array();\n\t}\n\n\tauth_checkclear_lockout($username, 0);\n\n\tif (auth_process_lockout_check($username, 0)) {\n\t\treturn array();\n\t}\n\n\tif (db_column_exists('user_auth', 'lastfail')) {\n\t\t$user = db_fetch_row_prepared(\"SELECT id, username, lastfail, failed_attempts, `locked`, password\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($username));\n\t} else {\n\t\t$user = db_fetch_row_prepared(\"SELECT id, username, password\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($username));\n\t}\n\n\tif (cacti_sizeof($user)) {\n\t\tif (trim($password) == '') {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  No password provided by user.');\n\n\t\t\tcacti_log(sprintf('LOGIN FAILED: No password provided for user %s', $username), false, 'AUTH');\n\n\t\t\t$valid_pass = false;\n\t\t} else {\n\t\t\t$valid_pass = compat_password_verify($password, $user['password']);\n\t\t}\n\n\t\tcacti_log('DEBUG: User \\'' . $username . '\\' valid password = ' . $valid_pass, false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\tif (!$valid_pass) {\n\t\t\tauth_process_lockout($username, 0);\n\n\t\t\tif (!$error) {\n\t\t\t\t$error     = true;\n\t\t\t\t$error_msg = __('Access Denied! Login failed.');\n\t\t\t}\n\n\t\t\treturn array();\n\t\t}\n\t} else {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Login Failed.');\n\n\t\tcacti_log(sprintf('LOGIN FAILED: Invalid user %s specified.', $username), false, 'AUTH');\n\t}\n\n\t/**\n\t * Check if old password doesn't meet specifications and must be changed\n\t * This only applies to local logins where we store the actual hashed\n\t * password.\n\t */\n\tif (read_config_option('secpass_forceold') == 'on') {\n\t\t$message = secpass_check_pass($password);\n\n\t\tif ($message != 'ok') {\n\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\tSET must_change_password = 'on'\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND realm = 0\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\tarray($username));\n\n\t\t\t$error_msg = __('Your Cacti administrator has forced complex passwords for logins and your current Cacti password does not match the new requirements.  Therefore, you must change your password now.');\n\n\t\t\traise_message('forced_password', $error_msg, MESSAGE_LEVEL_INFO);\n\t\t\theader('Location: auth_changepassword.php?header=false');\n\t\t\texit;\n\t\t}\n\t}\n\n\t// Set the last Login time\n\tif (read_config_option('secpass_expireaccount') > 0) {\n\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\tSET lastlogin = ?\n\t\t\tWHERE username = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray(time(), $username));\n\t}\n\n\treturn $user;\n}\n\n/**\n * secpass_check_pass - Validate a given password for various password rules\n *\n * @param  (string) $password - The user password\n *\n * @return (string) Either 'ok', or an error message to present to the user\n */\nfunction secpass_check_pass($password) {\n\t$minlen = read_config_option('secpass_minlen');\n\tif (strlen($password) < $minlen) {\n\t\treturn __('Password must be at least %d characters!', $minlen);\n\t}\n\n\tif (read_config_option('secpass_reqnum') == 'on' &&\n\t\tstr_replace(array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'), '', $password) == $password\n\t) {\n\t\treturn __('Your password must contain at least 1 numerical character!');\n\t}\n\n\tif (read_config_option('secpass_reqmixcase') == 'on' && strtolower($password) == $password) {\n\t\treturn __('Your password must contain a mix of lower case and upper case characters!');\n\t}\n\n\tif (read_config_option('secpass_reqspec') == 'on' &&\n\t\tstr_replace(array('~', '`', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '_', '+', '=', '[', '{', ']', '}', ';', ':', '<', ',', '.', '>', '?', '|', '/', '\\\\'), '', $password) == $password\n\t) {\n\t\treturn __('Your password must contain at least 1 special character!');\n\t}\n\n\treturn 'ok';\n}\n\n/**\n * secpass_check_history - Checks for password reuse for local accounts\n *\n * @param  (int)    $id - The user id to check\n * @param  (string) $password  - The user password\n *\n * @return (bool)   True if the user password provided meets history rules\n */\nfunction secpass_check_history($id, $password) {\n\t$history = intval(read_config_option('secpass_history'));\n\n\tif ($history > 0) {\n\t\t$user = db_fetch_row_prepared(\"SELECT password, password_history\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($id));\n\n\t\tif (compat_password_verify($password, $user['password'])) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$passes = explode('|', $user['password_history']);\n\t\t// Double check this incase the password history setting was changed\n\t\twhile (cacti_count($passes) > $history) {\n\t\t\tarray_shift($passes);\n\t\t}\n\n\t\tif (!empty($passes)) {\n\t\t\tforeach ($passes as $hash) {\n\t\t\t\tif (compat_password_verify($password, $hash)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * rsa_check_keypair - Checks that Cacti ras_public_key is present.  If not\n *   it will insert the information into the Cacti database.\n *\n * @return (void)\n */\nfunction rsa_check_keypair() {\n\tglobal $config;\n\n\tset_include_path($config['include_path'] . '/vendor/phpseclib/');\n\tinclude('Crypt/Base.php');\n\tinclude('Math/BigInteger.php');\n\tinclude('Crypt/Hash.php');\n\tinclude('Crypt/RSA.php');\n\tinclude('Crypt/Rijndael.php');\n\tinclude('Crypt/AES.php');\n\n\t$public_key = read_config_option('rsa_public_key');\n\n\tif(!$public_key) {\n\t\t$rsa = new phpseclib\\Crypt\\RSA();\n\t\t$keys = $rsa->createKey(2048);\n\t\t$rsa->loadKey($keys['publickey']);\n\t\t$fingerprint = $rsa->getPublicKeyFingerprint();\n\n\t\tdb_execute_prepared(\"INSERT INTO settings\n\t\t\t(`name`, `value`)\n\t\t\tVALUES\n\t\t\t('rsa_public_key', '\" . $keys['publickey'] . \"'),\n\t\t\t('rsa_private_key', '\" . $keys['privatekey'] . \"'),\n\t\t\t('rsa_fingerprint', '\" . $fingerprint . \"')\"\n\t\t);\n\t}\n}\n\n/**\n * reset_group_perms - sets a flag for all users of a group logged in that their perms\n *   need to be reloaded from the database\n *\n * @param  (int) $group_id - the id of the group to check\n *\n * @return (void)\n */\nfunction reset_group_perms($group_id) {\n\t$users = array_rekey(db_fetch_assoc_prepared('SELECT user_id\n\t\tFROM user_auth_group_members\n\t\tWHERE group_id = ?',\n\t\tarray($group_id)), 'user_id', 'user_id');\n\n\tif (cacti_sizeof($users)) {\n\t\tdb_execute('UPDATE user_auth\n\t\t\tSET reset_perms=FLOOR(RAND() * 4294967295) + 1\n\t\t\tWHERE id IN (' . implode(',', $users) . ')');\n\t}\n}\n\n/**\n * reset_user_perms - sets a flag for all users logged in as this user that their perms\n *   need to be reloaded from the database\n *\n * @param  (int) $user_id - the id of the current user\n *\n * @return (void)\n */\nfunction reset_user_perms($user_id) {\n\tdb_execute_prepared('UPDATE user_auth\n\t\tSET reset_perms=FLOOR(RAND() * 4294967295) + 1\n\t\tWHERE id = ?',\n\t\tarray($user_id));\n\n\tif ($user_id == $_SESSION['sess_user_id']) {\n\t\tkill_session_var('sess_user_realms');\n\t\tkill_session_var('sess_user_config_array');\n\t\tkill_session_var('sess_config_array');\n\t\tkill_session_var('sess_auth_names');\n\t}\n}\n\n/**\n * is_user_perms_valid - checks to see if the admin has changed users permissions\n *\n *  @param  (int)  $user_id - the id of the current user\n *\n *  @return (bool) true if still valid, false otherwise\n */\nfunction is_user_perms_valid($user_id) {\n\tglobal $config;\n\n\tstatic $valid = null;\n\tstatic $key   = null;\n\n\tif ($valid === null && cacti_version_compare($config['cacti_db_version'], '1.0.0', '>=')) {\n\t\t$key = db_fetch_cell_prepared('SELECT reset_perms\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($user_id));\n\t}\n\n\tif (isset($_SESSION['sess_user_perms_key'])) {\n\t\tif ($key != $_SESSION['sess_user_perms_key']) {\n\t\t\t$valid = false;\n\t\t} else {\n\t\t\t$valid = true;\n\t\t}\n\t} else {\n\t\t$valid = true;\n\t}\n\n\t$_SESSION['sess_user_perms_key'] = $key;\n\n\treturn $valid;\n}\n\n/**\n * compat_password_verify - if the secure function exists, verify against that\n *   first.  If that checks fails or does not exist, check against older md5\n *   version\n *\n * @param  (string) $password - password to verify\n * @param  (string) $hash     - current password hash\n *\n * @return (bool)   true if password hash matches, false otherwise\n */\nfunction compat_password_verify($password, $hash) {\n\tif (function_exists('password_verify')) {\n\t\tif (password_verify($password, $hash)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t$md5 = md5($password);\n\n\treturn ($md5 == $hash);\n}\n\n/**\n * compat_password_hash - if the secure function exists, hash using that.\n *   If that does not exist, hash older md5 function instead\n *\n * @param  (string) $password - password to hash\n * @param  (string) $algo     - algorithm to use (PASSWORD_DEFAULT)\n *\n * @return (bool)   true if password hash matches, false otherwise\n */\nfunction compat_password_hash($password, $algo, $options = array()) {\n\tif (function_exists('password_hash')) {\n\t\t// Check if options array has anything, only pass when required\n\t\treturn (cacti_sizeof($options) > 0) ?\n\t\t\tpassword_hash($password, $algo, $options) :\n\t\t\tpassword_hash($password, $algo);\n\t}\n\n\treturn md5($password);\n}\n\n/**\n * compat_password_needs_rehash - if the secure function exists, check hash\n *   using that. If that does not exist, return false as md5 doesn't need a\n *   rehash\n *\n * @param  (string) $password - password to hash\n * @param  (string) $algo     - algorithm to use (PASSWORD_DEFAULT)\n *\n * @return (bool)   true if password hash needs changing, false otherwise\n */\nfunction compat_password_needs_rehash($password, $algo, $options = array()) {\n\tif (function_exists('password_needs_rehash')) {\n\t\t// Check if options array has anything, only pass when required\n\t\treturn (cacti_sizeof($options) > 0) ?\n\t\t\tpassword_needs_rehash($password, $algo, $options) :\n\t\t\tpassword_needs_rehash($password, $algo);\n\t}\n\n\treturn true;\n}\n\n/**\n * auth_user_has_access - Verify that the user account has some access to cacti\n *\n * @param  (int)  $user - The user id of the account to check\n *\n * @return (bool) True if the user has access false otherwise\n */\nfunction auth_user_has_access($user) {\n\t$access = false;\n\n\t// See if they have access to any realms\n\t$realms = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_realm\n\t\tWHERE user_id = ?',\n\t\tarray($user['id']));\n\n\tif ($realms > 0) {\n\t\treturn true;\n\t}\n\n\t// See if they have general graph access as a guest account\n\tif (read_config_option('guest_user') > 0) {\n\t\tif ($user['show_tree'] == 'on' || $user['show_list'] == 'on' || $user['show_preview'] == 'on') {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// See if they have access to any group realms\n\t$user_groups = db_fetch_assoc_prepared('SELECT *\n\t\tFROM user_auth_group_members\n\t\tWHERE user_id = ?',\n\t\tarray($user['id']));\n\n\tif (cacti_sizeof($user_groups)) {\n\t\tforeach($user_groups as $g) {\n\t\t\t$realms = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM user_auth_group_realm\n\t\t\t\tWHERE group_id = ?',\n\t\t\t\tarray($g['group_id']));\n\n\t\t\tif ($realms > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// See if they have general graph access as a guest account\n\t\t\tif (read_config_option('guest_user') > 0) {\n\t\t\t\tif ($g['show_tree'] == 'on' || $g['show_list'] == 'on' || $g['show_preview'] == 'on') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * auth_display_custom_error_message - displays a custom error message to the browser that looks like\n *   the pre-defined error messages\n *\n * @param  (string) $message - the actual text of the error message to display\n *\n * @return (void)\n */\nfunction auth_display_custom_error_message($message) {\n\tglobal $config;\n\n\t$auth_method = read_config_option('auth_method');\n\n\tif ($auth_method == 2) {\n\t\t$custom_message = read_config_option('basic_auth_fail_message');\n\t} else {\n\t\t$custom_message = '';\n\t}\n\n\t/* kill the session */\n\tcacti_cookie_logout();\n\n\t/* print error */\n\tprint '<!DOCTYPE html>';\n\tprint '<html>';\n\tprint '<head>';\n\n\thtml_common_header(__('Cacti Login Failure'));\n\n\tprint '</head>';\n\tprint '<body><center>';\n\tprint '<div class=\"ui-state-error ui-corner-all\" style=\"width:50%;margin-left:auto;margin-right:auto;margin-top:200px;padding:20px\"><p>' . $message . '</p><p>' . $custom_message . '</p></div>';\n\n\tif ($auth_method != 2) {\n\t\tprint '<div class=\"ui-corner-all\" style=\"width:50%;margin:auto;padding:20px\"><a href=\"index.php\">' . __('Login Again') . '</a></div><script type=\"text/javascript\">$(function() { $(\"a\").button(); });</script>';\n\t}\n\n\tprint '</center></body></html>';\n}\n\n/**\n * auth_login_redirect - provide default page re-direction when a user first logs in.\n *\n * @param  (string|array) $login_opts - optional array of user details\n *\n * @return (void)\n */\nfunction auth_login_redirect($login_opts = '') {\n\tglobal $config;\n\n\tif ($login_opts == '') {\n\t\t$login_opts = db_fetch_cell_prepared('SELECT login_opts\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($_SESSION['sess_user_id']));\n\t}\n\n\t$newtheme = false;\n\tif (user_setting_exists('selected_theme', $_SESSION['sess_user_id']) && read_config_option('selected_theme') != read_user_setting('selected_theme')) {\n\t\tunset($_SESSION['selected_theme']);\n\t\t$newtheme = true;\n\t}\n\n\t// Decide what to do with an authenticated user\n\tswitch ($login_opts) {\n\t\tcase '1': /* referer */\n\t\t\t/**\n\t\t\t * because we use plugins, we can't redirect back to graph_view.php if they don't\n\t\t\t * have console access\n\t\t\t */\n\t\t\tif (isset($_SERVER['REDIRECT_URL'])) {\n\t\t\t\t$referer = sanitize_uri($_SERVER['REDIRECT_URL']);\n\n\t\t\t\tif (isset($_SERVER['REDIRECT_QUERY_STRING'])) {\n\t\t\t\t\t$referer .= '?' . $_SERVER['REDIRECT_QUERY_STRING'];\n\t\t\t\t}\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer from REDIRECT_URL with Value: '%s', Effective: '%s'\", $_SERVER['REDIRECT_URL'], $referer), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t} elseif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t\t\t$referer = $_SERVER['HTTP_REFERER'];\n\n\t\t\t\tif (auth_basename($referer) == 'logout.php') {\n\t\t\t\t\t$referer = $config['url_path'] . 'index.php';\n\t\t\t\t} elseif (strpos($referer, $config['url_path']) === false) {\n\t\t\t\t\tif (!is_realm_allowed(8)) {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$referer = $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':'');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer from HTTP_REFERER with Value: '%s', Effective: '%s'\", $_SERVER['HTTP_REFERER'], $referer), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t} elseif (isset($_SERVER['REQUEST_URI'])) {\n\t\t\t\t$referer = sanitize_uri($_SERVER['REQUEST_URI']);\n\n\t\t\t\tif (auth_basename($referer) == 'logout.php') {\n\t\t\t\t\t$referer = $config['url_path'] . 'index.php';\n\t\t\t\t}\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer from REQUEST_URI with Value: '%s', Effective: '%s'\", $_SERVER['REQUEST_URI'], $referer), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t} else {\n\t\t\t\t$referer = $config['url_path'] . 'index.php';\n\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer Short Circuit to '%s'\", 'index.php'), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t}\n\n\t\t\t$referer .= ($newtheme ? (strpos($referer, '?') === false ? '?':'&') . 'newtheme=1':'');\n\n\t\t\t/* Strip out the login from the referer if present */\n\t\t\t$referer  = str_replace('?action=login', '', $referer);\n\n\t\t\tif (api_user_realm_auth(auth_basename($referer))) {\n\t\t\t\theader('Location: ' . $referer);\n\t\t\t} elseif (!is_realm_allowed(8)) {\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer Overridden Due to Permissions to '%s'\", 'graph_view.php'), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t\theader('Location: graph_view.php');\n\t\t\t} else {\n\t\t\t\tcacti_log(sprintf(\"DEBUG: Referer Overridden Due to Permissions to '%s'\", 'index.php'), false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t\theader('Location: index.php');\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase '2': /* default console page */\n\t\t\tif (!is_realm_allowed(8)) {\n\t\t\t\theader('Location: ' . $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\t\t\t} else {\n\t\t\t\theader('Location: ' . $config['url_path'] . 'index.php' . ($newtheme ? '?newtheme=1':''));\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase '3': /* default graph page */\n\t\t\theader('Location: ' . $config['url_path'] . 'graph_view.php' . ($newtheme ? '?newtheme=1':''));\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tapi_plugin_hook_function('login_options_navigate', $login_opts);\n\t}\n\n\texit;\n}\n\n/**\n * auth_basename - provides a URL knowledgable basename function\n *\n * @param  (string) $referer - a URL that will included a basename\n *\n * @return (string) the file name without the arguments\n */\nfunction auth_basename($referer) {\n\t$parts = explode('?', $referer);\n\n\treturn basename($parts[0]);\n}\n\n/**\n * auth_login_create_user_from_template - creates a new user account from a template account\n *   if there is an error that would block login, the function set's the globals\n *   error and error_msg to inform the caller not to proceed with the login.\n *   in special cases, such as basic auth, the function will print out a custom\n *   error message and exit.\n *\n * @param  (string) $username - The username to use for the copy\n * @param  (int)    $realm - The login realm to use for the copy\n *\n * @return (array|void)  The copied new user account details or void on exit\n */\nfunction auth_login_create_user_from_template($username, $realm) {\n\tglobal $error, $error_msg;\n\n\tcacti_log(\"NOTE: User '\" . $username . \"' does not exist, copying template user\", false, 'AUTH');\n\n\t$user = array();\n\n\t$user_template = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray(get_template_account($username)));\n\n\t/* check that template user exists */\n\tif (!empty($user_template)) {\n\t\tif ($realm == 3) { // This is an ldap login\n\t\t\t/* get user CN*/\n\t\t\t$cn_full_name = read_config_option('cn_full_name');\n\t\t\t$cn_email     = read_config_option('cn_email');\n\n\t\t\tif ($cn_full_name != '' || $cn_email != '') {\n\t\t\t\t$ldap_cn_search_response = cacti_ldap_search_cn($username, array($cn_full_name, $cn_email));\n\n  \t\t\t\t\tif (isset($ldap_cn_search_response['cn'])) {\n\t\t\t\t\t$data_override = array();\n\n\t\t\t\t\tif (array_key_exists($cn_full_name, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t$data_override['full_name'] = $ldap_cn_search_response['cn'][$cn_full_name];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$data_override['full_name'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (array_key_exists($cn_email, $ldap_cn_search_response['cn'])) {\n\t\t\t\t\t\t$data_override['email_address'] = $ldap_cn_search_response['cn'][$cn_email];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$data_override['email_address'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm, false, $data_override);\n\t\t\t\t} else {\n\t\t\t\t\t$ldap_response = (isset($ldap_cn_search_response[0]) ? $ldap_cn_search_response[0] : '(no response given)');\n\t\t\t\t\t$ldap_code = (isset($ldap_cn_search_response['error_num']) ? $ldap_cn_search_response['error_num'] : '(no code given)');\n\t\t\t\t\tcacti_log('LOGIN: Email Address and Full Name fields not found, reason: ' . $ldap_response . 'code: ' . $ldap_code, false, 'AUTH');\n\t\t\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm);\n\t\t\t}\n\t\t} else {\n\t\t\tuser_copy($user_template['username'], $username, $user_template['realm'], $realm);\n\t\t}\n\n\t\t/* requery newly created user */\n\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = ?',\n\t\t\tarray($username, $realm));\n\t} else {\n\t\t/* error */\n\t\t$error     = true;\n\t\t$error_msg = __('Access Denied!  Template user id %s does not exist.  Please contact your Administrator.', read_config_option('user_template'));\n\n\t\tcacti_log(\"LOGIN FAILED: Template user id '\" . read_config_option('user_template') . \"' does not exist.\", false, 'AUTH');\n\n\t\tif ($auth_method == 2) {\n\t\t\tauth_display_custom_error_message($error_msg);\n\t\t\texit;\n\t\t}\n\t}\n\n\treturn $user;\n}\n\n/**\n * check_reset_no_authentication - Attempts to switch Cacti from No Authentication to Local\n *   authentication, or generate an error on failure through the globals error, and error_msg.\n *\n * @param  (int)  $auth_method - The current auth method\n *\n * @return (bool) Returns false on failure to set user account, otherwise redirects\n */\nfunction check_reset_no_authentication($auth_method) {\n\tglobal $error, $error_msg;\n\n\tif ($auth_method == 0) {\n\t\t$admin_id = db_execute_prepared('SELECT id\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray(read_config_option('admin_user')));\n\n\t\tcacti_log('Admin User (' . read_config_option('admin_user') . ' vs ' . $admin_id . ')', true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\n\t\tif (!$admin_id) {\n\t\t\t$admin_sql_query = 'SELECT TOP 1 id FROM (\n\t\t\t\tSELECT ua.id\n\t\t\t\tFROM user_auth AS ua\n\t\t\t\tINNER JOIN user_auth_realm AS uar\n\t\t\t\tON uar.user_id = ua.id\n\t\t\t\tWHERE uar.realm_id = ?';\n\n\t\t\t$admin_sql_params = array(15);\n\n\t\t\tif (db_table_exists('user_auth_group_realm')) {\n\t\t\t\t$admin_sql_query .= '\n\t\t\t\tUNION\n\t\t\t\tSELECT ua.id\n\t\t\t\tFROM user_auth AS ua\n\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\tON uagm.user_id = ua.id\n\t\t\t\tINNER JOIN user_auth_group AS uag\n\t\t\t\tON uag.id = uagm.group_id\n\t\t\t\tINNER JOIN user_auth_group_realm AS uagr\n\t\t\t\tON uagr.group_id=uag.group_id\n\t\t\t\tWHERE uag.enabled=\"on\" AND ua.enabled=\"on\"\n\t\t\t\tAND uagr.realm_id = ?';\n\n\t\t\t\t$admin_sql_params[] = 15;\n\t\t\t}\n\n\t\t\t$admin_sql_query .= '\n\t\t\t\t) AS id';\n\n\t\t\tcacti_log('SQL query ' . $admin_sql_query, true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t\tcacti_log('SQL param ' . implode(',', $admin_sql_params), true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t\t$admin_id = db_fetch_cell_prepared($admin_sql_query, $admin_sql_params);\n\t\t\tcacti_log('SQL result ' . $admin_id, true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t}\n\n\t\tif (!$admin_id) {\n\t\t\t$admin_id = db_fetch_cell('SELECT id FROM user_auth WHERE username = \\'admin\\'');\n\t\t\tcacti_log('Final attempt ' . $admin_id, true, 'AUTH_NONE', POLLER_VERBOSITY_DEVDBG);\n\t\t}\n\n\t\tif (!$admin_id) {\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Authentication was previously not set.  Attempted to set to Local Authentication, but no Administrative account was found.');\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Authentication method is currently set to none\n\t\t// lets switch this to basic and allow setting of\n\t\t// a password.\n\t\tdb_execute_prepared(\"UPDATE user_auth SET\n\t\t\tpassword = '',\n\t\t\tmust_change_password = 'on',\n\t\t\tpassword_change = 'on'\n\t\t\tWHERE id = ?\",\n\t\t\tarray($admin_id));\n\n\t\t$auth_method = 1;\n\t\tset_config_option('auth_method', $auth_method, true);\n\n\t\t$_SESSION['sess_user_id'] = $admin_id;\n\t\t$_SESSION['sess_change_password'] = true;\n\t\theader ('Location: ' . $config['url_path'] . 'auth_changepassword.php?action=force&ref=' . (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : 'index.php'));\n\t\texit;\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/**\n * title_trim - takes a string of text, truncates it to $max_length and appends\n * three periods onto the end\n *\n * @param $text - the string to evaluate\n * @param $max_length - the maximum number of characters the string can contain\n *   before it is truncated\n *\n * @return - the truncated string if len($text) is greater than $max_length, else\n *   the original string\n */\nfunction title_trim($text, $max_length) {\n\tif (strlen($text) > $max_length) {\n\t\treturn mb_substr($text, 0, $max_length) . '...';\n\t} else {\n\t\treturn $text;\n\t}\n}\n\n/**\n * filter_value - a quick way to highlight text in a table from general filtering\n *\n * @param $text - the string to filter\n * @param $filter - the search term to filter for\n * @param $href - the href if you wish to have an anchor returned\n *\n * @return - the filtered string\n */\nfunction filter_value($value, $filter, $href = '') {\n\tstatic $charset;\n\n\tif ($charset == '') {\n\t\t$charset = ini_get('default_charset');\n\t}\n\n\tif ($charset == '') {\n\t\t$charset = 'UTF-8';\n\t}\n\n\tif (empty($value)) {\n\t\treturn $value;\n\t}\n\n\t$value =  htmlspecialchars($value, ENT_QUOTES, $charset, false);\n\t// Grave Accent character can lead to xss\n\t$value = str_replace('`', '&#96;', $value);\n\n\tif ($filter != '') {\n\t\t$value = preg_replace('#(' . preg_quote($filter) . ')#i', \"<span class='filteredValue'>\\\\1</span>\", $value);\n\t}\n\n\tif ($href != '') {\n\t\t$value = '<a class=\"linkEditMain\" href=\"' . htmlspecialchars($href, ENT_QUOTES, $charset, false) . '\">' . $value  . '</a>';\n\t}\n\n\treturn $value;\n}\n\n/**\n * set_graph_config_option - deprecated - wrapper to set_user_setting().\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $user        - the user id, otherwise the session user\n *\n * @return            - void\n */\nfunction set_graph_config_option($config_name, $value, $user = -1) {\n\tset_user_setting($config_name, $value, $user);\n}\n\n/**\n * graph_config_value_exists - deprecated - wrapper to user_setting_exists\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $user_id - the id of the user to check the configuration value for\n *\n * @return (bool) - true if a value exists, false if a value does not exist\n */\nfunction graph_config_value_exists($config_name, $user_id) {\n\treturn user_setting_exists($config_name, $user_id);\n}\n\n/**\n * read_default_graph_config_option - deprecated - wrapper to read_default_user_setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the default value of the configuration option\n */\nfunction read_default_graph_config_option($config_name) {\n\treturn read_default_user_setting($config_name);\n}\n\n/**\n * read_graph_config_option - deprecated - finds the current value of a graph configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n *\n * @return - the current value of the graph configuration option\n */\nfunction read_graph_config_option($config_name, $force = false) {\n\treturn read_user_setting($config_name, false, $force);\n}\n\n/**\n * save_user_setting - sets/updates aLL user settings\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $user        - the user id, otherwise the session user\n *\n * @return            - void\n */\nfunction save_user_settings($user = -1) {\n\tglobal $settings_user;\n\n\tif ($user == -1 || empty($user)) {\n\t\t$user = $_SESSION['sess_user_id'];\n\t}\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t/* Check every field with a numeric default value and reset it to default if the inputted value is not numeric  */\n\t\t\tif (isset($field_array['default']) && is_numeric($field_array['default']) && !is_numeric(get_nfilter_request_var($field_name))) {\n\t\t\t\tset_request_var($field_name, $field_array['default']);\n\t\t\t}\n\n\t\t\tif (isset($field_array['method'])) {\n\t\t\t\tif ($field_array['method'] == 'checkbox') {\n\t\t\t\t\tset_user_setting($field_name, (isset_request_var($field_name) ? 'on' : ''), $user);\n\t\t\t\t} elseif ($field_array['method'] == 'checkbox_group') {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tset_user_setting($sub_field_name, (isset_request_var($sub_field_name) ? 'on' : ''), $user);\n\t\t\t\t\t}\n\t\t\t\t} elseif ($field_array['method'] == 'textbox_password') {\n\t\t\t\t\tif (get_nfilter_request_var($field_name) != get_nfilter_request_var($field_name.'_confirm')) {\n\t\t\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t\t\t$errors[4] = 4;\n\t\t\t\t\t} elseif (isset_request_var($field_name)) {\n\t\t\t\t\t\tset_user_setting($field_name, get_nfilter_request_var($field_name), $user);\n\t\t\t\t\t}\n\t\t\t\t} elseif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tif (isset_request_var($sub_field_name)) {\n\t\t\t\t\t\t\tset_user_setting($sub_field_name, get_nfilter_request_var($sub_field_name), $user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (isset_request_var($field_name)) {\n\t\t\t\t\tset_user_setting($field_name, get_nfilter_request_var($field_name), $user);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * set_user_setting - sets/updates a user setting with the given value.\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $user        - the user id, otherwise the session user\n *\n * @return          - void\n */\nfunction set_user_setting($config_name, $value, $user = -1) {\n\tglobal $settings_user;\n\n\tif ($user == -1 && isset($_SESSION['sess_user_id'])) {\n\t\t$user = $_SESSION['sess_user_id'];\n\t}\n\n\tif ($user == -1) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\t$mode = 'WEBUI';\n\t\t} else {\n\t\t\t$mode = 'POLLER';\n\t\t}\n\n\t\tcacti_log('NOTE: Attempt to set user setting \\'' . $config_name . '\\', with no user id: ' . cacti_debug_backtrace('', false, false, 0, 1), false, $mode, POLLER_VERBOSITY_MEDIUM);\n\t} elseif (db_table_exists('settings_user')) {\n\t\tdb_execute_prepared('REPLACE INTO settings_user\n\t\t\tSET user_id = ?,\n\t\t\tname = ?,\n\t\t\tvalue = ?',\n\t\t\tarray($user, $config_name, $value));\n\n\t\tunset($_SESSION['sess_user_config_array']);\n\t\t$settings_user[$config_name]['value'] = $value;\n\t}\n}\n\n/**\n * user_setting_exists - determines if a value exists for the current user/setting specified\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $user_id - the id of the user to check the configuration value for\n *\n * @return (bool) - true if a value exists, false if a value does not exist\n */\nfunction user_setting_exists($config_name, $user_id) {\n\tstatic $user_setting_values = array();\n\n\tif (!isset($user_setting_values[$config_name])) {\n\t\t$value = 0;\n\t\tif (db_table_exists('settings_user')) {\n\t\t\t$value = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM settings_user\n\t\t\t\tWHERE name = ?\n\t\t\t\tAND user_id = ?',\n\t\t\t\tarray($config_name, $user_id));\n\t\t}\n\n\t\tif ($value !== false && $value > 0) {\n\t\t\t$user_setting_values[$config_name] = true;\n\t\t} else {\n\t\t\t$user_setting_values[$config_name] = false;\n\t\t}\n\t}\n\n\treturn $user_setting_values[$config_name];\n}\n\n/**\n * clear_user_setting - if a value exists for the current user/setting specified, removes it\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $user_id - the id of the user to remove the configuration value for\n */\nfunction clear_user_setting($config_name, $user = -1) {\n\tglobal $settings_user;\n\n\tif ($user == -1) {\n\t\t$user = $_SESSION['sess_user_id'];\n\t}\n\n\tif (db_table_exists('settings_user')) {\n\t\tdb_execute_prepared('DELETE FROM settings_user\n\t\t\tWHERE name = ?\n\t\t\tAND user_id = ?',\n\t\t\tarray($config_name, $user));\n\t}\n\n\tunset($_SESSION['sess_user_config_array']);\n}\n\n/**\n * read_default_user_setting - finds the default value of a user configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the default value of the configuration option\n */\nfunction read_default_user_setting($config_name) {\n\tglobal $config, $settings_user;\n\n\tforeach ($settings_user as $tab_array) {\n\t\tif (isset($tab_array[$config_name]) && isset($tab_array[$config_name]['default'])) {\n\t\t\treturn $tab_array[$config_name]['default'];\n\t\t} else {\n\t\t\tforeach ($tab_array as $field_array) {\n\t\t\t\tif (isset($field_array['items']) && isset($field_array['items'][$config_name]) && isset($field_array['items'][$config_name]['default'])) {\n\t\t\t\t\treturn $field_array['items'][$config_name]['default'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * read_user_setting - finds the current value of a graph configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings_user array\n *   in 'include/global_settings.php'\n * @param $default - the default value is none is set\n * @param $force - pull the data from the database if true ignoring session\n * @param $user - assume this user's identity\n *\n * @return - the current value of the user setting\n */\nfunction read_user_setting($config_name, $default = false, $force = false, $user = 0) {\n\tglobal $config;\n\n\t/* users must have cacti user auth turned on to use this, or the guest account must be active */\n\tif ($user == 0 && isset($_SESSION['sess_user_id'])) {\n\t\t$effective_uid = $_SESSION['sess_user_id'];\n\t} elseif (read_config_option('auth_method') == 0 || $user > 0) {\n\t\t/* first attempt to get the db setting for guest */\n\t\tif ($user == 0) {\n\t\t\t$effective_uid = db_fetch_cell(\"SELECT user_auth.id\n\t\t\t\tFROM settings\n\t\t\t\tINNER JOIN user_auth\n\t\t\t\tON user_auth.username = settings.value\n\t\t\t\tWHERE settings.name = 'guest_user'\");\n\n\t\t\tif ($effective_uid == '') {\n\t\t\t\t$effective_uid = 0;\n\t\t\t}\n\t\t} else {\n\t\t\t$effective_uid = $user;\n\t\t}\n\n\t\t$db_setting = false;\n\t\tif (db_table_exists('settings_user')) {\n\t\t\t$db_setting = db_fetch_row_prepared('SELECT value\n\t\t\t\tFROM settings_user\n\t\t\t\tWHERE name = ?\n\t\t\t\tAND user_id = ?',\n\t\t\t\tarray($config_name, $effective_uid));\n\t\t}\n\n\t\tif (cacti_sizeof($db_setting)) {\n\t\t\treturn $db_setting['value'];\n\t\t} elseif ($default !== false) {\n\t\t\treturn $default;\n\t\t} else {\n\t\t\treturn read_default_user_setting($config_name);\n\t\t}\n\t} else {\n\t\t$effective_uid = 0;\n\t}\n\n\tif (!$force) {\n\t\tif (isset($_SESSION['sess_user_config_array'])) {\n\t\t\t$user_config_array = $_SESSION['sess_user_config_array'];\n\t\t}\n\t}\n\n\tif (!isset($user_config_array[$config_name])) {\n\t\t$db_setting = false;\n\t\tif (db_table_exists('settings_user')) {\n\t\t\t$db_setting = db_fetch_row_prepared('SELECT value\n\t\t\t\tFROM settings_user\n\t\t\t\tWHERE name = ?\n\t\t\t\tAND user_id = ?',\n\t\t\t\tarray($config_name, $effective_uid));\n\t\t}\n\n\t\tif (cacti_sizeof($db_setting)) {\n\t\t\t$user_config_array[$config_name] = $db_setting['value'];\n\t\t} elseif ($default !== false) {\n\t\t\t$user_config_array[$config_name] = $default;\n\t\t} else {\n\t\t\t$user_config_array[$config_name] = read_default_user_setting($config_name);\n\t\t}\n\n\t\tif (isset($_SESSION)) {\n\t\t\t$_SESSION['sess_user_config_array'] = $user_config_array;\n\t\t} else {\n\t\t\t$config['config_user_settings_array'] = $user_config_array;\n\t\t}\n\t}\n\n\treturn $user_config_array[$config_name];\n}\n\n/**\n * is_remote_path_setting - determines of a Cacti setting should be maintained\n *   on the Remote Data Collector separate from the Main cacti server\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *\n * @return (bool) - true if the setting should be saved locally\n */\nfunction is_remote_path_setting($config_name) {\n\tglobal $config;\n\n\tif ($config['poller_id'] > 1 && (strpos($config_name, 'path_') !== false || strpos($config_name, '_path') !== false)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * set_config_option - sets/updates a cacti config option with the given value.\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n * @param $value       - the values to be saved\n * @param $remote      - push the setting to the remote with the exception of path variables\n *\n * @return (void)\n */\nfunction set_config_option($config_name, $value, $remote = false) {\n\tglobal $config;\n\n\tinclude_once($config['base_path'] . '/lib/poller.php');\n\n\tdb_execute_prepared('REPLACE INTO settings\n\t\tSET name = ?, value = ?',\n\t\tarray($config_name, $value));\n\n\tif ($remote && !is_remote_path_setting($config_name)) {\n\t\t$gone_time = read_config_option('poller_interval') * 2;\n\n\t\t$pollers = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT\n\t\t\t\tid,\n\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(last_status) AS last_polled\n\t\t\t\tFROM poller\n\t\t\t\tWHERE id > 1\n\t\t\t\tAND disabled=\"\"'),\n\t\t\t'id', 'last_polled'\n\t\t);\n\n\t\t$sql = 'INSERT INTO settings (name, value) VALUES (?, ?) ON DUPLICATE KEY UPDATE value=VALUES(value)';\n\n\t\tforeach($pollers as $p => $t) {\n\t\t\tif ($t > $gone_time) {\n\t\t\t\traise_message('poller_' . $p, __('Settings save to Data Collector %d skipped due to heartbeat.', $p), MESSAGE_LEVEL_WARN);\n\t\t\t} else {\n\t\t\t\t$rcnn_id = poller_connect_to_remote($p);\n\n\t\t\t\tif ($rcnn_id) {\n\t\t\t\t\tif (db_execute_prepared($sql, array($config_name, $value), false, $rcnn_id) === false) {\n\t\t\t\t\t\t$rcnn_id = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// check if we still have rcnn_id, if it's now become false, we had a problem\n\t\t\t\tif (!$rcnn_id) {\n\t\t\t\t\traise_message('poller_' . $p, __('Settings save to Data Collector %d Failed.', $p), MESSAGE_LEVEL_ERROR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$config_array = array();\n\tif ($config['is_web']) {\n\t\t$sess = true;\n\t} else {\n\t\t$sess = false;\n\t}\n\n\t// Store the array back for later retrieval\n\tif ($sess) {\n\t\t$_SESSION['sess_config_array']  = $value;\n\t} else {\n\t\t$config['config_options_array'] = $value;\n\t}\n\n\tif (!empty($config['DEBUG_SET_CONFIG_OPTION'])) {\n\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() . cacti_debug_backtrace($config_name, false, false, 0, 1) . \"\\n\", FILE_APPEND);\n\t}\n}\n\n/**\n * config_value_exists - determines if a value exists for the current user/setting specified\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - true if a value exists, false if a value does not exist\n */\nfunction config_value_exists($config_name) {\n\tstatic $config_values = array();\n\n\tif (!isset($config_values[$config_name])) {\n\t\t$value = db_fetch_cell_prepared('SELECT COUNT(*) FROM settings WHERE name = ?', array($config_name));\n\n\t\tif ($value > 0) {\n\t\t\t$config_values[$config_name] = true;\n\t\t} else {\n\t\t\t$config_values[$config_name] = false;\n\t\t}\n\t}\n\n\treturn $config_values[$config_name];\n}\n\n/**\n * read_default_config_option - finds the default value of a Cacti configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the default value of the configuration option\n */\nfunction read_default_config_option($config_name) {\n\tglobal $config, $settings;\n\n\tif (isset($settings) && is_array($settings)) {\n\t\tforeach ($settings as $tab_array) {\n\t\t\tif (isset($tab_array[$config_name]) && isset($tab_array[$config_name]['default'])) {\n\t\t\t\treturn $tab_array[$config_name]['default'];\n\t\t\t} else {\n\t\t\t\tforeach ($tab_array as $field_array) {\n\t\t\t\t\tif (isset($field_array['items']) && isset($field_array['items'][$config_name]) && isset($field_array['items'][$config_name]['default'])) {\n\t\t\t\t\t\treturn $field_array['items'][$config_name]['default'];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction prime_common_config_settings() {\n\tglobal $config;\n\n\t//$start = microtime(true);\n\n\t$common_settings = array(\n\t\t'auth_method',\n\t\t'auth_cache_enabled',\n\t\t'path_cactilog',\n\t\t'rrdtool_version',\n\t\t'log_verbosity',\n\t\t'log_destination',\n\t\t'default_image_format',\n\t\t'default_graph_width',\n\t\t'default_graph_height',\n\t\t'default_datechar',\n\t\t'default_date_format',\n\t\t'default_poller',\n\t\t'default_site',\n\t\t'i18n_language_support',\n\t\t'i18n_default_language',\n\t\t'reports_allow_ln',\n\n\t\t// Common page rendering\n\t\t'selective_debug',\n\t\t'selected_theme',\n\t\t'min_tree_width',\n\t\t'max_tree_width',\n\t);\n\n\tif ($config['is_web']) {\n\t\t$extra_settings = array(\n\t\t\t// Common all pages\n\t\t\t'force_https',\n\t\t\t'content_security_policy_script',\n\t\t\t'content_security_alternate_sources',\n\t\t\t'deletion_verification',\n\n\t\t\t// Common graphing\n\t\t\t'rrdtool_watermark',\n\t\t\t'realtime_cache_path',\n\t\t\t'path_rrdtool',\n\t\t\t'hide_disabled',\n\t\t\t'graph_watermark',\n\t\t\t'graph_dateformat',\n\t\t\t'font_method',\n\t\t\t'date',\n\t\t\t'boost_rrd_update_system_enable',\n\t\t\t'boost_rrd_update_max_records_per_select',\n\t\t\t'boost_rrd_update_enable',\n\t\t\t'boost_png_cache_enable',\n\t\t\t'remote_storage_method',\n\t\t);\n\t} else {\n\t\t$extra_settings = array(\n\t\t\t// Common polling\n\t\t\t'poller_interval',\n\t\t\t'snmp_version',\n\t\t\t'snmp_username',\n\t\t\t'snmp_timeout',\n\t\t\t'snmp_community',\n\t\t\t'snmp_auth_protocol',\n\t\t\t'snmp_security_level',\n\t\t\t'snmp_priv_protocol',\n\t\t\t'snmp_priv_passphrase',\n\t\t\t'snmp_port',\n\t\t\t'snmp_password',\n\t\t\t'snmp_retries',\n\t\t\t'device_threads',\n\t\t\t'max_get_size',\n\t\t\t'availability_method',\n\t\t\t'ping_method',\n\t\t\t'ping_port',\n\t\t\t'ping_retries',\n\t\t\t'ping_timeout',\n\t\t\t'path_snmpbulkwalk',\n\t\t\t'path_snmpwalk',\n\t\t\t'path_snmpget',\n\t\t\t'path_spine',\n\n\t\t\t// Common API\n\t\t\t'default_template',\n\t\t\t'delete_verification',\n\n\t\t\t// Thold\n\t\t\t'alert_bl_trigger',\n\t\t\t'alert_deadnotify',\n\t\t\t'alert_email',\n\t\t\t'alert_exempt',\n\t\t\t'alert_repeat',\n\t\t\t'alert_trigger',\n\t\t\t'base_url',\n\t\t\t'thold_alert_snmp_warning',\n\t\t\t'thold_alert_snmp_normal',\n\t\t\t'thold_alert_snmp',\n\t\t\t'thold_daemon_debug',\n\t\t\t'thold_disable_all',\n\t\t\t'thold_log_debug',\n\t\t\t'thold_send_text_only',\n\t\t\t'thold_show_datasource',\n\t\t);\n\t}\n\n\t$common_settings = array_merge($common_settings, $extra_settings);\n\n\t$settings = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT name, value\n\t\t\tFROM settings\n\t\t\tWHERE name IN (' . trim(str_repeat('?, ', cacti_sizeof($common_settings)),', ') . ')',\n\t\t\t$common_settings),\n\t\t'name', 'value'\n\t);\n\n\tif (isset($_SESSION['sess_config_array'])) {\n\t\t$sess = true;\n\t} else {\n\t\t$sess = false;\n\t}\n\n\tif (cacti_sizeof($settings)) {\n\t\tforeach($settings as $name => $value) {\n\t\t\tif ($sess) {\n\t\t\t\t$_SESSION['sess_config_array'][$name] = $value;\n\t\t\t} else {\n\t\t\t\t$config['config_options_array'][$name] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\t//$end = microtime(true);\n\n\t//cacti_log('The Total common load time:' . round($end - $start, 4));\n}\n\n/**\n * read_config_option - finds the current value of a Cacti configuration setting\n *\n * @param $config_name - the name of the configuration setting as specified $settings array\n *   in 'include/global_settings.php'\n *\n * @return - the current value of the configuration option\n */\nfunction read_config_option($config_name, $force = false) {\n\tglobal $config, $database_hostname, $database_default, $database_port, $database_sessions;\n\n\t$loaded = false;\n\n\tif ($config['is_web']) {\n\t\t$sess = true;\n\t\tif (isset($_SESSION['sess_config_array'][$config_name])) {\n\t\t\t$loaded = true;\n\t\t}\n\t} else {\n\t\t$sess = false;\n\t\tif (isset($config['config_options_array'][$config_name])) {\n\t\t\t$loaded = true;\n\t\t}\n\t}\n\n\tif (!empty($config['DEBUG_READ_CONFIG_OPTION'])) {\n\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() . cacti_debug_backtrace($config_name, false, false, 0, 1) . \"\\n\", FILE_APPEND);\n\t}\n\n\t// Do we have a value already stored in the array, or\n\t// do we want to make sure we have the latest value\n\t// from the database?\n\tif (!$loaded || $force) {\n\t\t// We need to check against the DB, but lets assume default value\n\t\t// unless we can actually read the DB\n\t\t$value = read_default_config_option($config_name);\n\n\t\tif (!empty($config['DEBUG_READ_CONFIG_OPTION'])) {\n\t\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() .\n\t\t\t\t\" $config_name: \" .\n\t\t\t\t' dh: ' . isset($database_hostname) .\n\t\t\t\t' dp: ' . isset($database_port) .\n\t\t\t\t' dd: ' . isset($database_default) .\n\t\t\t\t' ds: ' . isset($database_sessions[\"$database_hostname:$database_port:$database_default\"]) .\n\t\t\t\t\"\\n\", FILE_APPEND);\n\n\t\t\tif (isset($database_hostname) && isset($database_port) && isset($database_default)) {\n\t\t\t\tfile_put_contents(sys_get_temp_dir() . '/cacti-option.log', get_debug_prefix() .\n\t\t\t\t\t\" $config_name: [$database_hostname:$database_port:$database_default]\\n\", FILE_APPEND);\n\t\t\t}\n\t\t}\n\n\t\t// Are the database variables set, and do we have a connection??\n\t\t// If we don't, we'll only use the default value without storing\n\t\t// so that we can read the database version later.\n\t\tif (isset($database_hostname) && isset($database_port) && isset($database_default) &&\n\t\t    isset($database_sessions[\"$database_hostname:$database_port:$database_default\"])) {\n\n\t\t\t// Get the database setting\n\t\t\t$db_result = db_fetch_row_prepared('SELECT value FROM settings WHERE name = ?', array($config_name));\n\n\t\t\tif (cacti_sizeof($db_result)) {\n\t\t\t\t$value = $db_result['value'];\n\t\t\t}\n\n\t\t\t// Store whatever value we have in the array\n\t\t\tif ($sess) {\n\t\t\t\tif (!isset($_SESSION['sess_config_array']) || !is_array($_SESSION['sess_config_array'])) {\n\t\t\t\t\t$_SESSION['sess_config_array'] = array();\n\t\t\t\t}\n\n\t\t\t\t$_SESSION['sess_config_array'][$config_name] = $value;\n\t\t\t} else {\n\t\t\t\tif (!isset($config['config_options_array']) || !is_array($config['config_options_array'])) {\n\t\t\t\t\t$config['config_options_array'] = array();\n\t\t\t\t}\n\n\t\t\t\t$config['config_options_array'][$config_name] = $value;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// We already have the value stored in the array and\n\t\t// we don't want to force a db read, so use the cached\n\t\t// version\n\t\tif ($sess) {\n\t\t\t$value = $_SESSION['sess_config_array'][$config_name];\n\t\t} else {\n\t\t\t$value = $config['config_options_array'][$config_name];\n\t\t}\n\t}\n\n\treturn $value;\n}\n\n/**\n * get_selected_theme - checks the user settings and if the user selected\n * theme is set, returns it otherwise returns the system default.\n *\n * @return - the theme name\n */\nfunction get_selected_theme() {\n\tglobal $config, $themes;\n\n\t// shortcut if theme is set in session\n\tif (isset($_SESSION['selected_theme'])) {\n\t\tif (file_exists($config['base_path'] . '/include/themes/' . $_SESSION['selected_theme'] . '/main.css')) {\n\t\t\treturn $_SESSION['selected_theme'];\n\t\t}\n\t}\n\n\t// default to system selected theme\n\t$theme = read_config_option('selected_theme');\n\n\t// check for a pre-1.x cacti being upgraded\n\tif ($theme == '' && !db_table_exists('settings_user')) {\n\t\treturn 'modern';\n\t}\n\n\t// figure out user defined theme\n\tif (isset($_SESSION['sess_user_id'])) {\n\t\t// fetch user defined theme\n\t\t$user_theme = db_fetch_cell_prepared(\"SELECT value\n\t\t\tFROM settings_user\n\t\t\tWHERE name='selected_theme'\n\t\t\tAND user_id = ?\",\n\t\t\tarray($_SESSION['sess_user_id']), '', false);\n\n\t\t// user has a theme\n\t\tif (! empty($user_theme)) {\n\t\t\t$theme = $user_theme;;\n\t\t}\n\t}\n\n\tif (!file_exists($config['base_path'] . '/include/themes/' . $theme . '/main.css')) {\n\t\tforeach($themes as $t => $name) {\n\t\t\tif (file_exists($config['base_path'] . '/include/themes/' . $t . '/main.css')) {\n\t\t\t\t$theme = $t;\n\n\t\t\t\tdb_execute_prepared('UPDATE settings_user\n\t\t\t\t\tSET value = ?\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND name=\"selected_theme\"',\n\t\t\t\t\tarray($theme, $_SESSION['sess_user_id']));\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// update session\n\t$_SESSION['selected_theme'] = $theme;\n\n\treturn $theme;\n}\n\n/**\n * form_input_validate - validates the value of a form field and Takes the appropriate action if the input\n * is not valid\n *\n * @param $field_value - the value of the form field\n * @param $field_name - the name of the $_POST field as specified in the HTML\n * @param $regexp_match - (optionally) enter a regular expression to match the value against\n * @param $allow_nulls - (bool) whether to allow an empty string as a value or not\n * @param $custom_message - (int) the ID of the message to raise upon an error which is defined in the\n *   $messages array in 'include/global_arrays.php'\n *\n * @return - the original $field_value\n */\nfunction form_input_validate($field_value, $field_name, $regexp_match, $allow_nulls, $custom_message = 3) {\n\tglobal $messages;\n\n\t/* write current values to the \"field_values\" array so we can retain them */\n\t$_SESSION['sess_field_values'][$field_name] = $field_value;\n\n\tif (($allow_nulls == true) && ($field_value == '')) {\n\t\treturn $field_value;\n\t}\n\n\tif ($allow_nulls == false && $field_value == '') {\n\t\tif (read_config_option('log_validation') == 'on') {\n\t\t\tcacti_log(\"Form Validation Failed: Variable '$field_name' does not allow nulls and variable is null\", false);\n\t\t}\n\n\t\traise_message($custom_message);\n\n\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t} elseif ($regexp_match != '' && !preg_match('/' . $regexp_match . '/', $field_value)) {\n\t\tif (read_config_option('log_validation') == 'on') {\n\t\t\tcacti_log(\"Form Validation Failed: Variable '$field_name' with Value '$field_value' Failed REGEX '$regexp_match'\", false);\n\t\t}\n\n\t\traise_message($custom_message);\n\n\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t}\n\n\treturn $field_value;\n}\n\n/**\n * check_changed - determines if a request variable has changed between page loads\n *\n * @return - true if the value changed between loads\n */\nfunction check_changed($request, $session) {\n\tif ((isset_request_var($request)) && (isset($_SESSION[$session]))) {\n\t\tif (get_nfilter_request_var($request) != $_SESSION[$session]) {\n\t\t\treturn 1;\n\t\t}\n\t}\n}\n\n/**\n * is_error_message - finds whether an error message has been raised and has not been outputted to the\n * user\n *\n * @return - whether the messages array contains an error or not\n */\nfunction is_error_message() {\n\tglobal $config, $messages;\n\n\tif (isset($_SESSION['sess_error_fields']) && cacti_sizeof($_SESSION['sess_error_fields'])) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction get_message_level($current_message) {\n\t$current_level = MESSAGE_LEVEL_NONE;\n\n\tif (isset($current_message['level'])) {\n\t\t$current_level = $current_message['level'];\n\t} elseif (isset($current_message['type'])) {\n\t\tswitch ($current_message['type']) {\n\t\t\tcase 'error':\n\t\t\t\t$current_level = MESSAGE_LEVEL_ERROR;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\t$current_level = MESSAGE_LEVEL_INFO;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn $current_level;\n}\n\n/**\n * get_format_message_instance - finds the level of the current message instance\n *\n * @param message array the message instance\n *\n * @return - a formatted message\n */\nfunction get_format_message_instance($current_message) {\n\tif (is_array($current_message)) {\n\t\t$fmessage = isset($current_message['message']) ? $current_message['message'] : __esc('Message Not Found.');\n\t} else {\n\t\t$fmessage = $current_message;\n\t}\n\n\t$level = get_message_level($current_message);\n\n\tswitch ($level) {\n\t\tcase MESSAGE_LEVEL_NONE:\n\t\t\t$message = '<span>' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_INFO:\n\t\t\t$message = '<span class=\"deviceUp\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_WARN:\n\t\t\t$message = '<span class=\"deviceWarning\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_ERROR:\n\t\t\t$message = '<span class=\"deviceDown\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tcase MESSAGE_LEVEL_CSRF:\n\t\t\t$message = '<span class=\"deviceDown\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t\tdefault;\n\t\t\t$message = '<span class=\"deviceUnknown\">' . $fmessage . '</span>';\n\t\t\tbreak;\n\t}\n\n\treturn $message;\n}\n\n/**\n * get_message_max_type - finds the message and returns its type\n *\n * @return - the message type 'info', 'warn', 'error' or 'csrf'\n */\nfunction get_message_max_type() {\n\tglobal $messages;\n\n\t$level = MESSAGE_LEVEL_NONE;\n\tif (isset($_SESSION['sess_messages'])) {\n\t\tif (is_array($_SESSION['sess_messages'])) {\n\t\t\tforeach ($_SESSION['sess_messages'] as $current_message_id => $current_message) {\n\t\t\t\t$current_level = get_message_level($current_message);\n\t\t\t\tif ($current_level == MESSAGE_LEVEL_NONE && isset($messages[$current_message_id])) {\n\t\t\t\t\t$current_level = get_message_level($messages[$current_message_id]);\n\t\t\t\t}\n\n\t\t\t\tif ($current_level != $level && $level != MESSAGE_LEVEL_NONE) {\n\t\t\t\t\t$level = MESSAGE_LEVEL_MIXED;\n\t\t\t\t} else {\n\t\t\t\t\t$level = $current_level;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $level;\n}\n\n/**\n * raise_message - mark a message to be displayed to the user once display_output_messages() is called\n *\n * @param $message_id - the ID of the message to raise as defined in $messages in 'include/global_arrays.php'\n */\nfunction raise_message($message_id, $message = '', $message_level = MESSAGE_LEVEL_NONE) {\n\tglobal $config, $messages, $no_http_headers;\n\n\t// This function should always exist, if not its an invalid install\n\tif (function_exists('session_status')) {\n\t\t$need_session = (session_status() == PHP_SESSION_NONE) && (!isset($no_http_headers));\n\t} else {\n\t\treturn false;\n\t}\n\n\tif (empty($message)) {\n\t\tif (array_key_exists($message_id, $messages)) {\n\t\t\t$predefined = $messages[$message_id];\n\t\t\tif (isset($predefined['message'])) {\n\t\t\t\t$message = $predefined['message'];\n\t\t\t} else {\n\t\t\t\t$message = $predefined;\n\t\t\t}\n\n\t\t\tif ($message_level == MESSAGE_LEVEL_NONE) {\n\t\t\t\t$message_level = get_message_level($predefined);\n\t\t\t}\n\t\t} elseif (isset($_SESSION[$message_id])) {\n\t\t\t$message = $_SESSION[$message_id];\n\t\t\t$message_level = MESSAGE_LEVEL_ERROR;\n\t\t} else {\n\t\t\t$message = __('Message Not Found.');\n\t\t\t$message_level = MESSAGE_LEVEL_ERROR;\n\t\t}\n\t}\n\n\tif ($need_session) {\n\t\tcacti_session_start();\n\t}\n\n\tif (!isset($_SESSION['sess_messages'])) {\n\t\t$_SESSION['sess_messages'] = array();\n\t}\n\n\t$_SESSION['sess_messages'][$message_id] = array('message' => $message, 'level' => $message_level);\n\n\tif ($need_session) {\n\t\tcacti_session_close();\n\t}\n}\n\n/**\n * raise_message_javascript - raises a message that will appear in the UI\n * as the result of an server side error that can not be captured\n * normally.\n *\n * @param  (string) The title for the dialog title bar\n * @param  (string) Header section for the message\n * @param  (string) The actual error message to display\n *\n * @return (void)\n */\nfunction raise_message_javascript($title, $header, $message) {\n\t?>\n\t<script type='text/javascript'>\n\tvar mixedReasonTitle = '<?php print $title;?>';\n\tvar mixedOnPage      = '<?php print $header;?>';\n\tsessionMessage   = {\n\t\tmessage: '<?php print $message;?>',\n\t\tlevel: MESSAGE_LEVEL_MIXED\n\t};\n\n\t$(function() {\n\t\tdisplayMessages();\n\t});\n\t</script>\n\t<?php\n\n\texit;\n}\n\n/**\n * display_output_messages - displays all of the cached messages from the raise_message() function and clears\n * the message cache\n */\nfunction display_output_messages() {\n\tglobal $messages;\n\n\t$omessage      = array();\n\t$debug_message = debug_log_return('new_graphs');\n\n\tif ($debug_message != '') {\n\t\t$omessage['level']    = MESSAGE_LEVEL_NONE;\n\t\t$omessage['message'] = $debug_message;\n\n\t\tdebug_log_clear('new_graphs');\n\t} elseif (isset($_SESSION['sess_messages'])) {\n\t\tif (!is_array($_SESSION['sess_messages'])) {\n\t\t\t$_SESSION['sess_messages'] = array('custom_error' => array('level' => 3, 'message' => $_SESSION['sess_messages']));\n\t\t}\n\n\t\t$omessage['level'] = get_message_max_type();\n\n\t\tforeach ($_SESSION['sess_messages'] as $current_message_id => $current_message) {\n\t\t\t$message = get_format_message_instance($current_message);\n\n\t\t\tif (!empty($message)) {\n\t\t\t\t$omessage['message'] = (isset($omessage['message']) && $omessage['message'] != '' ? $omessage['message'] . '<br>':'') . $message;\n\t\t\t} else {\n\t\t\t\tcacti_log(\"ERROR: Cacti Error Message Id '$current_message_id' Not Defined\", false, 'WEBUI');\n\t\t\t}\n\t\t}\n\t}\n\n\tclear_messages();\n\n\treturn json_encode($omessage);\n}\n\nfunction display_custom_error_message($message) {\n\traise_message('custom_error', $message);\n}\n\n/**\n * clear_messages - clears the message cache\n */\nfunction clear_messages() {\n\t// This function should always exist, if not its an invalid install\n\tif (function_exists('session_status')) {\n\t\t$need_session = (session_status() == PHP_SESSION_NONE) && (!isset($no_http_headers));\n\t} else {\n\t\treturn false;\n\t}\n\n\tif ($need_session) {\n\t\tcacti_session_start();\n\t}\n\n\tkill_session_var('sess_error_fields');\n\tkill_session_var('sess_messages');\n\n\tif ($need_session) {\n\t\tcacti_session_close();\n\t}\n}\n\n/**\n * kill_session_var - kills a session variable using unset()\n */\nfunction kill_session_var($var_name) {\n\t/* register_global = on: reset local settings cache so the user sees the new settings */\n\tunset($_SESSION[$var_name]);\n\n\t/* register_global = off: reset local settings cache so the user sees the new settings */\n\t/* session_unregister is deprecated in PHP 5.3.0, unset is sufficient */\n\tif (version_compare(PHP_VERSION, '5.3.0', '<')) {\n\t\tsession_unregister($var_name);\n\t} else {\n\t\tunset($var_name);\n\t}\n}\n\n/**\n * force_session_data - forces session data into the session if the session was closed for some reason\n */\nfunction force_session_data() {\n\t// This function should always exist, if not its an invalid install\n\tif (!function_exists('session_status')) {\n\t\treturn false;\n\t} elseif (session_status() == PHP_SESSION_NONE) {\n\t\t$data = $_SESSION;\n\n\t\tcacti_session_start();\n\n\t\t$_SESSION = $data;\n\n\t\tcacti_session_close();\n\t}\n}\n\n/**\n * array_rekey - changes an array in the form:\n *\n * '$arr[0] = array('id' => 23, 'name' => 'blah')'\n * to the form\n * '$arr = array(23 => 'blah')'\n *\n * @param $array - (array) the original array to manipulate\n * @param $key - the name of the key\n * @param $key_value - the name of the key value\n *\n * @return - the modified array\n */\nfunction array_rekey($array, $key, $key_value) {\n\t$ret_array = array();\n\n\tif (is_array($array)) {\n\t\tforeach ($array as $item) {\n\t\t\t$item_key = $item[$key];\n\n\t\t\tif (is_array($key_value)) {\n\t\t\t\tforeach ($key_value as $value) {\n\t\t\t\t\t$ret_array[$item_key][$value] = $item[$value];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$ret_array[$item_key] = $item[$key_value];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $ret_array;\n}\n\n/**\n * cacti_log_file - returns the log filename\n */\nfunction cacti_log_file() {\n\tglobal $config;\n\t$logfile        = read_config_option('path_cactilog');\n\tif ($logfile == '') {\n\t\t$logfile = $config['base_path'] . '/log/cacti.log';\n\t}\n\t$config['log_path'] = $logfile;\n\treturn $logfile;\n}\n\nfunction get_selective_log_level() {\n\tstatic $force_level = null;\n\n\tif ($force_level !== null) {\n\t\treturn $force_level;\n\t}\n\n\tif (isset($_SERVER['PHP_SELF'])) {\n\t\t$current_file = basename($_SERVER['PHP_SELF']);\n\t\t$dir_name     = dirname($_SERVER['PHP_SELF']);\n\t} elseif (isset($_SERVER['SCRIPT_NAME'])) {\n\t\t$current_file = basename($_SERVER['SCRIPT_NAME']);\n\t\t$dir_name     = dirname($_SERVER['SCRIPT_NAME']);\n\t} elseif (isset($_SERVER['SCRIPT_FILENAME'])) {\n\t\t$current_file = basename($_SERVER['SCRIPT_FILENAME']);\n\t\t$dir_name     = dirname($_SERVER['SCRIPT_FILENAME']);\n\t} else {\n\t\t$current_file = basename(__FILE__);\n\t\t$dir_name     = dirname(__FILE__);\n\t}\n\n\t$force_level = '';\n\t$debug_files = read_config_option('selective_debug');\n\tif ($debug_files != '') {\n\t\t$files = explode(',', $debug_files);\n\n\t\tif (array_search($current_file, $files) !== false) {\n\t\t\t$force_level = POLLER_VERBOSITY_DEBUG;\n\t\t}\n\t}\n\n\tif (strpos($dir_name, 'plugins') !== false) {\n\t\t$debug_plugins = read_config_option('selective_plugin_debug');\n\t\tif ($debug_plugins != '') {\n\t\t\t$debug_plugins = explode(',', $debug_plugins);\n\n\t\t\tforeach($debug_plugins as $myplugin) {\n\t\t\t\tif (strpos($dir_name, DIRECTORY_SEPARATOR . $myplugin) !== false) {\n\t\t\t\t\t$force_level = POLLER_VERBOSITY_DEBUG;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $force_level;\n}\n\n/**\n * cacti_log - logs a string to Cacti's log file or optionally to the browser\n *\n * @param $string - the string to append to the log file\n * @param $output - (bool) whether to output the log line to the browser using print() or not\n * @param $environ - (string) tells from where the script was called from\n * @param $level - (int) only log if above the specified log level\n */\nfunction cacti_log($string, $output = false, $environ = 'CMDPHP', $level = '') {\n\tglobal $config, $database_log;\n\n\tstatic $start = null;\n\n\tif ($start == null) {\n\t\t$start = microtime(true);\n\t}\n\n\tif (!isset($database_log)) {\n\t\t$database_log = false;\n\t}\n\n\t$last_log     = $database_log;\n\t$database_log = false;\n\t$force_level  = get_selective_log_level();\n\t$oprefix      = '';\n\t$omessage     = '';\n\n\t/* only log if the specific level is reached, developer debug is special low + specific devdbg calls */\n\tif ($force_level == '') {\n\t\tif ($level != '') {\n\t\t\t$logVerbosity = read_config_option('log_verbosity');\n\t\t\tif ($logVerbosity == POLLER_VERBOSITY_DEVDBG) {\n\t\t\t\tif ($level != POLLER_VERBOSITY_DEVDBG) {\n\t\t\t\t\tif ($level > POLLER_VERBOSITY_LOW) {\n\t\t\t\t\t\t$database_log = $last_log;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif ($level > $logVerbosity) {\n\t\t\t\t$database_log = $last_log;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tcacti_system_zone_set();\n\n\t/* fill in the current date for printing in the log */\n\tif (defined('CACTI_DATE_TIME_FORMAT')) {\n\t\t$date = date(CACTI_DATE_TIME_FORMAT);\n\t} else {\n\t\t$date = date('Y-m-d H:i:s');\n\t}\n\n\tcacti_browser_zone_set();\n\n\t/* determine how to log data */\n\t$logdestination = read_config_option('log_destination');\n\t$logfile        = cacti_log_file();\n\n\t/* format the message */\n\tif ($environ == 'POLLER') {\n\t\t$prefix = \"$date - \" . $environ . ': Poller[' . $config['poller_id'] . '] PID[' . getmypid() . '] ';\n\n\t\tif ($output) {\n\t\t\t$oprefix = sprintf('Total[%3.4f] ', microtime(true) - $start);\n\t\t}\n\t} else {\n\t\t$prefix  = \"$date - \" . $environ . ' ';\n\n\t\tif ($output) {\n\t\t\t$oprefix = $prefix;\n\t\t}\n\t}\n\n\t/* Log to Logfile */\n\t$message = clean_up_lines($string) . PHP_EOL;\n\n\tif ($output) {\n\t\t$omessage = $oprefix . $message;\n\t}\n\n\tif (($logdestination == 1 || $logdestination == 2) && read_config_option('log_verbosity') != POLLER_VERBOSITY_NONE) {\n\t\t/* print the data to the log (append) */\n\t\t$fp = @fopen($logfile, 'a');\n\n\t\tif ($fp) {\n\t\t\t$message = $prefix . $message;\n\t\t\t@fwrite($fp, $message);\n\t\t\tfclose($fp);\n\t\t}\n\t}\n\n\t/* Log to Syslog/Eventlog */\n\t/* Syslog is currently Unstable in Win32 */\n\tif ($logdestination == 2 || $logdestination == 3) {\n\t\t$log_type = '';\n\t\tif (strpos($string, 'ERROR:') !== false) {\n\t\t\t$log_type = 'err';\n\t\t} elseif (strpos($string, 'WARNING:') !== false) {\n\t\t\t$log_type = 'warn';\n\t\t} elseif (strpos($string, 'STATS:') !== false) {\n\t\t\t$log_type = 'stat';\n\t\t} elseif (strpos($string, 'NOTICE:') !== false) {\n\t\t\t$log_type = 'note';\n\t\t}\n\n\t\tif ($log_type != '') {\n\t\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t\topenlog('Cacti', LOG_NDELAY | LOG_PID, LOG_USER);\n\t\t\t} else {\n\t\t\t\topenlog('Cacti', LOG_NDELAY | LOG_PID, LOG_SYSLOG);\n\t\t\t}\n\n\t\t\tif ($log_type == 'err' && read_config_option('log_perror')) {\n\t\t\t\tsyslog(LOG_CRIT, $environ . ': ' . $string);\n\t\t\t} elseif ($log_type == 'warn' && read_config_option('log_pwarn')) {\n\t\t\t\tsyslog(LOG_WARNING, $environ . ': ' . $string);\n\t\t\t} elseif (($log_type == 'stat' || $log_type == 'note') && read_config_option('log_pstats')) {\n\t\t\t\tsyslog(LOG_INFO, $environ . ': ' . $string);\n\t\t\t}\n\n\t\t\tcloselog();\n\t\t}\n\t}\n\n\t/* print output to standard out if required */\n\tif ($output == true && isset($_SERVER['argv'][0])) {\n\t\tprint $omessage;\n\t}\n\n\t$database_log = $last_log;\n}\n\n/**\n * tail_file - Emulates the tail function with PHP native functions.\n * It is used in 0.8.6 to speed the viewing of the Cacti log file, which\n * can be problematic in the 0.8.6 branch.\n *\n * @param $file_name    - (char constant) the name of the file to tail\n * @param $line_cnt     - (int constant)  the number of lines to count\n * @param $message_type - (int constant) the type of message to return\n * @param $filter       - (char) the filtering expression to search for\n * @param $page_nr      - (int) the page we want to show rows for\n * @param $total_rows   - (int) the total number of rows in the logfile\n */\nfunction tail_file($file_name, $number_of_lines, $message_type = -1, $filter = '', &$page_nr = 1, &$total_rows = 0) {\n\tif (!file_exists($file_name)) {\n\t\ttouch($file_name);\n\t\treturn array();\n\t}\n\n\tif (!is_readable($file_name)) {\n\t\treturn array(__('Error %s is not readable', $file_name));\n\t}\n\n\t$filter = strtolower($filter);\n\n\t$fp = fopen($file_name, 'r');\n\n\t/* Count all lines in the logfile */\n\t$total_rows = 0;\n\twhile (($line = fgets($fp)) !== false) {\n\t\tif (determine_display_log_entry($message_type, $line, $filter)) {\n\t\t\t++$total_rows;\n\t\t}\n\t}\n\n\t// Reset the page count to 1 if the number of lines is exceeded\n\tif (($page_nr - 1) * $number_of_lines > $total_rows) {\n\t\tset_request_var('page', 1);\n\t\t$page_nr = 1;\n\t}\n\n\t/* rewind file pointer, to start all over */\n\trewind($fp);\n\n\t$start = $total_rows - ($page_nr * $number_of_lines);\n\t$end   = $start + $number_of_lines;\n\n\tif ($start < 0) {\n\t\t$start = 0;\n\t}\n\n\tforce_session_data();\n\n\t/* load up the lines into an array */\n\t$file_array = array();\n\t$i = 0;\n\twhile (($line = fgets($fp)) !== false) {\n\t\t$display = determine_display_log_entry($message_type, $line, $filter);\n\n\t\tif ($display === false) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($i < $start) {\n\t\t\t++$i;\n\t\t\tcontinue;\n\t\t}\n\t\tif ($i >= $end) {\n\t\t\tbreak;\n\t\t}\n\n\t\t++$i;\n\t\t$file_array[$i] = $line;\n\t}\n\n\tfclose($fp);\n\n\treturn $file_array;\n}\n\n/**\n * determine_display_log_entry - function to determine if we display the line\n *\n * @param $message_type\n * @param $line\n * @param $filter\n *\n * @return - should the entry be displayed\n */\nfunction determine_display_log_entry($message_type, $line, $filter) {\n\tstatic $thold_enabled = null;\n\n\tif ($thold_enabled == null) {\n\t\t$thold_enabled = api_plugin_is_enabled('thold');\n\t}\n\n\t/* determine if we are to display the line */\n\tswitch ($message_type) {\n\t\tcase 1: /* stats only */\n\t\t\t$display = (strpos($line, 'STATS') !== false);\n\n\t\t\tbreak;\n\t\tcase 2: /* warnings only */\n\t\t\t$display = (strpos($line, 'WARN') !== false);\n\n\t\t\tbreak;\n\t\tcase 3: /* warnings + */\n\t\t\t$display = (strpos($line, 'WARN') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'ERROR') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'DEBUG') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, ' SQL') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 4: /* errors only */\n\t\t\t$display = (strpos($line, 'ERROR') !== false);\n\n\t\t\tbreak;\n\t\tcase 5: /* errors + */\n\t\t\t$display = (strpos($line, 'ERROR') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'DEBUG') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, ' SQL') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 6: /* debug only */\n\t\t\t$display = (strpos($line, 'DEBUG') !== false && strpos($line, ' SQL ') === false);\n\n\t\t\tbreak;\n\t\tcase 7: /* sql calls only */\n\t\t\t$display = (strpos($line, ' SQL ') !== false);\n\n\t\t\tbreak;\n\t\tcase 8: /* AutoM8 Only */\n\t\t\t$display = (strpos($line, 'AUTOM8') !== false);\n\n\t\t\tbreak;\n\t\tcase 9: /* Non Stats */\n\t\t\t$display = (strpos($line, 'STATS') === false);\n\n\t\t\tbreak;\n \t\tcase 10: /* Boost Only*/\n\t\t\t$display = (strpos($line, 'BOOST') !== false);\n\n\t\t\tbreak;\n\t\tcase 11: /* device events + */\n\t\t\t$display = (strpos($line, 'HOST EVENT') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, '] is recovering!') !== false);\n\t\t\t}\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, '] is down!') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n \t\tcase 12: /* Assertions */\n\t\t\t$display = (strpos($line, 'ASSERT FAILED') !== false);\n\n\t\t\tif (!$display) {\n\t\t\t\t$display = (strpos($line, 'Recache Event') !== false);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase -1: /* all */\n\t\t\t$display = true;\n\n\t\t\tbreak;\n\t\tdefault: /* all other lines */\n\t\t\tif ($thold_enabled) {\n\t\t\t\tif ($message_type == 99) {\n\t\t\t\t\t$display = (strpos($line, 'THOLD: Threshold') !== false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$display = true;\n\t\t\t}\n\t}\n\n\t/* match any lines that match the search string */\n\tif ($display === true && $filter != '') {\n\t\tif (stripos($line, $filter) !== false) {\n\t\t\treturn $line;\n\t\t} elseif (validate_is_regex($filter) && preg_match('/' . $filter . '/i', $line)) {\n\t\t\treturn $line;\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn $display;\n}\n\n/**\n * update_host_status - updates the host table with information about its status.\n * It will also output to the appropriate log file when an event occurs.\n *\n * @param $status - (int constant) the status of the host (Up/Down)\n * @param $host_id - (int) the host ID for the results\n * @param $ping - (class array) results of the ping command.\n */\nfunction update_host_status($status, $host_id, &$ping, $ping_availability, $print_data_to_stdout) {\n\t$issue_log_message   = false;\n\t$ping_failure_count  = read_config_option('ping_failure_count');\n\t$ping_recovery_count = read_config_option('ping_recovery_count');\n\n\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\n\t/* initialize fail and recovery dates correctly */\n\tif ($host['status_fail_date'] == '') {\n\t\t$host['status_fail_date'] = strtotime('0000-00-00 00:00:00');\n\t}\n\n\tif ($host['status_rec_date'] == '') {\n\t\t$host['status_rec_date'] = strtotime('0000-00-00 00:00:00');\n\t}\n\n\tif ($status == HOST_DOWN) {\n\t\t/* Set initial date down. BUGFIX */\n\t\tif (empty($host['status_fail_date'])) {\n\t\t\t$host['status_fail_date'] = time();\n\t\t}\n\n\t\t/* update total polls, failed polls and availability */\n\t\t$host['failed_polls']++;\n\t\t$host['total_polls']++;\n\t\t$host['availability'] = 100 * ($host['total_polls'] - $host['failed_polls']) / $host['total_polls'];\n\n\t\t/* determine the error message to display */\n\t\tif (($ping_availability == AVAIL_SNMP_AND_PING) || ($ping_availability == AVAIL_SNMP_OR_PING)) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t/* snmp version 1/2 without community string assume SNMP test to be successful\n\t\t\t\t   due to backward compatibility issues */\n\t\t\t\t$host['status_last_error'] = $ping->ping_response;\n\t\t\t} else {\n\t\t\t\t$host['status_last_error'] = $ping->snmp_response . ', ' . $ping->ping_response;\n\t\t\t}\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t$host['status_last_error'] = 'Device does not require SNMP';\n\t\t\t} else {\n\t\t\t\t$host['status_last_error'] = $ping->snmp_response;\n\t\t\t}\n\t\t} else {\n\t\t\t$host['status_last_error'] = $ping->ping_response;\n\t\t}\n\n\t\t/* determine if to send an alert and update remainder of statistics */\n\t\tif ($host['status'] == HOST_UP) {\n\t\t\t/* increment the event failure count */\n\t\t\t$host['status_event_count']++;\n\n\t\t\t/* if it's time to issue an error message, indicate so */\n\t\t\tif ($host['status_event_count'] >= $ping_failure_count) {\n\t\t\t\t/* host is now down, flag it that way */\n\t\t\t\t$host['status'] = HOST_DOWN;\n\n\t\t\t\t$issue_log_message = true;\n\n\t\t\t\t/* update the failure date only if the failure count is 1 */\n\t\t\t\tif ($host['status_event_count'] == $ping_failure_count) {\n\t\t\t\t\t$host['status_fail_date'] = time();\n\t\t\t\t}\n\t\t\t/* host is down, but not ready to issue log message */\n\t\t\t} else {\n\t\t\t\t/* host down for the first time, set event date */\n\t\t\t\tif ($host['status_event_count'] == $ping_failure_count) {\n\t\t\t\t\t$host['status_fail_date'] = time();\n\t\t\t\t}\n\t\t\t}\n\t\t/* host is recovering, put back in failed state */\n\t\t} elseif ($host['status'] == HOST_RECOVERING) {\n\t\t\t$host['status_event_count'] = 1;\n\t\t\t$host['status'] = HOST_DOWN;\n\t\t/* host was unknown and now is down */\n\t\t} elseif ($host['status'] == HOST_UNKNOWN) {\n\t\t\t$host['status'] = HOST_DOWN;\n\t\t\t$host['status_event_count'] = 0;\n\t\t} else {\n\t\t\t$host['status_event_count']++;\n\t\t}\n\t/* host is up!! */\n\t} else {\n\t\t/* update total polls and availability */\n\t\t$host['total_polls']++;\n\t\t$host['availability'] = 100 * ($host['total_polls'] - $host['failed_polls']) / $host['total_polls'];\n\n\t\tif ((($ping_availability == AVAIL_SNMP_AND_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP_OR_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP)) &&\n\t\t\t(!is_numeric($ping->snmp_status))) {\n\t\t\t$ping->snmp_status = 0.000;\n\t\t}\n\n\t\tif ((($ping_availability == AVAIL_SNMP_AND_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP_OR_PING) ||\n\t\t\t($ping_availability == AVAIL_PING)) &&\n\t\t\t(!is_numeric($ping->ping_status))) {\n\t\t\t$ping->ping_status = 0.000;\n\t\t}\n\n\t\t/* determine the ping statistic to set and do so */\n\t\tif (($ping_availability == AVAIL_SNMP_AND_PING) ||\n\t\t\t($ping_availability == AVAIL_SNMP_OR_PING)) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t$ping_time = 0.000;\n\t\t\t} else {\n\t\t\t\t/* calculate the average of the two times */\n\t\t\t\t$ping_time = ($ping->snmp_status + $ping->ping_status) / 2;\n\t\t\t}\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\t$ping_time = 0.000;\n\t\t\t} else {\n\t\t\t\t$ping_time = $ping->snmp_status;\n\t\t\t}\n\t\t} elseif ($ping_availability == AVAIL_NONE) {\n\t\t\t$ping_time = 0.000;\n\t\t} else {\n\t\t\t$ping_time = $ping->ping_status;\n\t\t}\n\n\t\t/* update times as required */\n\t\tif (is_numeric($ping_time)) {\n\t\t\t$host['cur_time'] = $ping_time;\n\n\t\t\t/* maximum time */\n\t\t\tif ($ping_time > $host['max_time']) {\n\t\t\t\t$host['max_time'] = $ping_time;\n\t\t\t}\n\n\t\t\t/* minimum time */\n\t\t\tif ($ping_time < $host['min_time']) {\n\t\t\t\t$host['min_time'] = $ping_time;\n\t\t\t}\n\n\t\t\t/* average time */\n\t\t\t$host['avg_time'] = (($host['total_polls'] - 1 - $host['failed_polls'])\n\t\t\t\t* $host['avg_time'] + $ping_time) / ($host['total_polls'] - $host['failed_polls']);\n\t\t}\n\n\t\t/* the host was down, now it's recovering */\n\t\tif (($host['status'] == HOST_DOWN) || ($host['status'] == HOST_RECOVERING )) {\n\t\t\t/* just up, change to recovering */\n\t\t\tif ($host['status'] == HOST_DOWN) {\n\t\t\t\t$host['status'] = HOST_RECOVERING;\n\t\t\t\t$host['status_event_count'] = 1;\n\t\t\t} else {\n\t\t\t\t$host['status_event_count']++;\n\t\t\t}\n\n\t\t\t/* if it's time to issue a recovery message, indicate so */\n\t\t\tif ($host['status_event_count'] >= $ping_recovery_count) {\n\t\t\t\t/* host is up, flag it that way */\n\t\t\t\t$host['status'] = HOST_UP;\n\n\t\t\t\t$issue_log_message = true;\n\n\t\t\t\t/* update the recovery date only if the recovery count is 1 */\n\t\t\t\tif ($host['status_event_count'] == $ping_recovery_count) {\n\t\t\t\t\t$host['status_rec_date'] = time();\n\t\t\t\t}\n\n\t\t\t\t/* reset the event counter */\n\t\t\t\t$host['status_event_count'] = 0;\n\t\t\t\t/* host is recovering, but not ready to issue log message */\n\t\t\t} else {\n\t\t\t\t/* host recovering for the first time, set event date */\n\t\t\t\tif ($host['status_event_count'] == $ping_recovery_count) {\n\t\t\t\t\t$host['status_rec_date'] = time();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/* host was unknown and now is up */\n\t\t\t$host['status'] = HOST_UP;\n\t\t\t$host['status_event_count'] = 0;\n\t\t}\n\t}\n\t/* if the user wants a flood of information then flood them */\n\tif (($host['status'] == HOST_UP) || ($host['status'] == HOST_RECOVERING)) {\n\t\t/* log ping result if we are to use a ping for reachability testing */\n\t\tif ($ping_availability == AVAIL_SNMP_AND_PING) {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tif (($host['snmp_community'] == '') && ($host['snmp_version'] != 3)) {\n\t\t\t\tcacti_log(\"Device[$host_id] SNMP: Device does not require SNMP\", $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\t} else {\n\t\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t}\n\t} else {\n\t\tif ($ping_availability == AVAIL_SNMP_AND_PING) {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t} elseif ($ping_availability == AVAIL_SNMP) {\n\t\t\tcacti_log(\"Device[$host_id] SNMP: \" . $ping->snmp_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t} else {\n\t\t\tcacti_log(\"Device[$host_id] PING: \" . $ping->ping_response, $print_data_to_stdout, 'PING', POLLER_VERBOSITY_HIGH);\n\t\t}\n\t}\n\n\t/* if there is supposed to be an event generated, do it */\n\tif ($issue_log_message) {\n\t\tif ($host['status'] == HOST_DOWN) {\n\t\t\tcacti_log(\"Device[$host_id] ERROR: HOST EVENT: Device is DOWN Message: \" . $host['status_last_error'], $print_data_to_stdout);\n\t\t} else {\n\t\t\tcacti_log(\"Device[$host_id] NOTICE: HOST EVENT: Device Returned FROM DOWN State: \", $print_data_to_stdout);\n\t\t}\n\t}\n\n\tdb_execute_prepared('UPDATE host SET\n\t\tstatus = ?,\n\t\tstatus_event_count = ?,\n\t\tstatus_fail_date = FROM_UNIXTIME(?),\n\t\tstatus_rec_date = FROM_UNIXTIME(?),\n\t\tstatus_last_error = ?,\n\t\tmin_time = ?,\n\t\tmax_time = ?,\n\t\tcur_time = ?,\n\t\tavg_time = ?,\n\t\ttotal_polls = ?,\n\t\tfailed_polls = ?,\n\t\tavailability = ?\n\t\tWHERE hostname = ?\n\t\tAND deleted = \"\"',\n\t\tarray(\n\t\t\t$host['status'],\n\t\t\t$host['status_event_count'],\n\t\t\t$host['status_fail_date'],\n\t\t\t$host['status_rec_date'],\n\t\t\t$host['status_last_error'],\n\t\t\t$host['min_time'],\n\t\t\t$host['max_time'],\n\t\t\t$host['cur_time'],\n\t\t\t$host['avg_time'],\n\t\t\t$host['total_polls'],\n\t\t\t$host['failed_polls'],\n\t\t\t$host['availability'],\n\t\t\t$host['hostname']\n\t\t)\n\n\t);\n}\n\n/**\n * is_hexadecimal - test whether a string represents a hexadecimal number,\n * ignoring space and tab, and case insensitive.\n *\n * @param $result - the string to test\n * @param 1 if the argument is hex, 0 otherwise, and false on error\n */\nfunction is_hexadecimal($result) {\n\t$hexstr = str_replace(array(' ', '-'), ':', trim($result));\n\n\t$parts = explode(':', $hexstr);\n\tforeach($parts as $part) {\n\t\tif (strlen($part) != 2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (ctype_xdigit($part) == false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * strip_domain - removes the domain from a hostname\n *\n * @param $hostname - the hostname for a device\n *\n * @return - the stripped hostname\n */\nfunction strip_domain($hostname) {\n\tif (is_ipaddress($hostname)) {\n\t\treturn $hostname;\n\t} elseif (read_config_option('strip_domain') == 'on') {\n\t\t$parts = explode('.', $hostname);\n\n\t\treturn $parts[0];\n\t} else {\n\t\treturn $hostname;\n\t}\n}\n\n\n/**\n * is_mac_address - determines if the result value is a mac address\n *\n * @param $result - some string to be evaluated\n *\n * @return - either to result is a mac address of not\n */\nfunction is_mac_address($result) {\n\tif (!defined('FILTER_VALIDATE_MAC')) {\n\t\tif (preg_match('/^([0-9a-f]{1,2}[\\.:-]) {5}([0-9a-f]{1,2})$/i', $result)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn filter_var($result, FILTER_VALIDATE_MAC);\n\t}\n}\n\nfunction is_hex_string(&$result) {\n\tif ($result == '') {\n\t\treturn false;\n\t}\n\n\t$compare = strtolower($result);\n\n\t/* strip off the 'Hex:, Hex-, and Hex-STRING:'\n\t * Hex- is considered due to the stripping of 'String:' in\n\t * lib/snmp.php\n\t */\n\tif (substr($compare, 0, 4) == 'hex-') {\n\t\t$check = trim(str_ireplace('hex-', '', $result));\n\t} elseif (substr($compare, 0, 11) == 'hex-string:') {\n\t\t$check = trim(str_ireplace('hex-string:', '', $result));\n\t} else {\n\t\treturn false;\n\t}\n\n\t$parts = explode(' ', $check);\n\n\t/* assume if something is a hex string\n\t   it will have a length > 1 */\n\tif (cacti_sizeof($parts) == 1) {\n\t\treturn false;\n\t}\n\n\tforeach($parts as $part) {\n\t\tif (strlen($part) != 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (ctype_xdigit($part) == false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$result = $check;\n\n\treturn true;\n}\n\n/**\n * prepare_validate_result - determines if the result value is valid or not.  If not valid returns a \"U\"\n *\n * @param $result - the result from the poll, the result can be modified in the call\n *\n * @return - either to result is valid or not\n */\nfunction prepare_validate_result(&$result) {\n\t/* first trim the string */\n\t$result = trim($result, \"'\\\"\\n\\r\");\n\n\t/* clean off ugly non-numeric data */\n\tif (is_numeric($result)) {\n\t\tdsv_log('prepare_validate_result','data is numeric');\n\t\treturn true;\n\t} elseif ($result == 'U') {\n\t\tdsv_log('prepare_validate_result', 'data is U');\n\t\treturn true;\n\t} elseif (is_hexadecimal($result)) {\n\t\tdsv_log('prepare_validate_result', 'data is hex');\n\t\treturn hexdec($result);\n\t} elseif (substr_count($result, ':') || substr_count($result, '!')) {\n\t\t/* looking for name value pairs */\n\t\tif (substr_count($result, ' ') == 0) {\n\t\t\tdsv_log('prepare_validate_result', 'data has no spaces');\n\t\t\treturn true;\n\t\t} else {\n\t\t\t$delim_cnt = 0;\n\t\t\tif (substr_count($result, ':')) {\n\t\t\t\t$delim_cnt = substr_count($result, ':');\n\t\t\t} elseif (strstr($result, '!')) {\n\t\t\t\t$delim_cnt = substr_count($result, '!');\n\t\t\t}\n\n\t\t\t$space_cnt = substr_count(trim($result), ' ');\n\t\t\tdsv_log('prepare_validate_result', \"data has $space_cnt spaces and $delim_cnt fields which is \" . (($space_cnt+1 == $delim_cnt) ? 'NOT ' : '') . ' okay');\n\n\t\t\treturn ($space_cnt+1 == $delim_cnt);\n\t\t}\n\t} else {\n\t\t$result = strip_alpha($result);\n\n\t\tif ($result === false) {\n\t\t\t$result = 'U';\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\n/**\n * strip_alpha - remove non-numeric data from a string and return the numeric part\n *\n * @param $string - the string to be evaluated\n *\n * @return - either the numeric value or false if not numeric\n */\nfunction strip_alpha($string) {\n\t/* strip all non numeric data */\n\t$string = trim(preg_replace('/[^0-9,.+-]/', '', $string));\n\n\t/* check the easy cases first */\n\t/* it has no delimiters, and no space, therefore, must be numeric */\n\tif (is_numeric($string) || is_float($string)) {\n\t\treturn $string;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * is_valid_pathname - takes a pathname are verifies it matches file name rules\n *\n * @param $path - the pathname to be tested\n *\n * @return - either true or false\n*/\nfunction is_valid_pathname($path) {\n\tif (preg_match('/^([a-zA-Z0-9\\_\\.\\-\\\\\\:\\/]+)$/', trim($path))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * dsv_log - provides debug logging when tracing Graph/Data Source creation\n *\n * @param $message - the message to output to the log\n * @param $data  - the data to be carried with the message\n*/\nfunction dsv_log($message,$data) {\n\tif (read_config_option('data_source_trace') == 'on') {\n\t\tcacti_log(($message . ' = ') . (is_array($data) ? json_encode($data) : $data), false, 'DSTRACE');\n\t}\n}\n\n/**\n * test_data_sources\n *\n * Tests all data sources to confirm that it returns valid data.  This\n * function is used by automation to prevent the creation of graphs\n * that will never generate data.\n *\n * @param $graph_template_id - The Graph Template to test\n * @param $host_id - The Host to test\n *\n * @return boolean true or false\n */\nfunction test_data_sources($graph_template_id, $host_id, $snmp_query_id = 0, $snmp_index = '', $values = array()) {\n\t$data_template_ids = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT DISTINCT data_template_id\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\tON gti.task_item_id = dtr.id\n\t\t\tWHERE gti.hash != \"\"\n\t\t\tAND gti.local_graph_id = 0\n\t\t\tAND dtr.local_data_id = 0\n\t\t\tAND gti.graph_template_id = ?',\n\t\t\tarray($graph_template_id)),\n\t\t'data_template_id', 'data_template_id'\n\t);\n\n\t$test_source = db_fetch_cell_prepared('SELECT test_source\n\t\tFROM graph_templates\n\t\tWHERE id = ?',\n\t\tarray($graph_template_id));\n\n\tif (cacti_sizeof($data_template_ids) && $test_source == 'on') {\n\t\tforeach($data_template_ids as $dt) {\n\t\t\tdsv_log(\"test_data_source\", [ 'dt' => $dt, 'host_id' => $host_id, 'snmp_query_id' => $snmp_query_id, 'snmp_index' => $snmp_index, 'values' => $values]);\n\t\t\tif (!test_data_source($dt, $host_id, $snmp_query_id, $snmp_index, $values)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * test_data_source\n *\n * Tests a single data source to confirm that it returns valid data.  This\n * function is used by automation to prevent the creation of graphs\n * that will never generate data.\n *\n * @param $graph_template_id - The Graph Template to test\n * @param $host_id - The Host to test\n *\n * @return boolean true or false\n */\nfunction test_data_source($data_template_id, $host_id, $snmp_query_id = 0, $snmp_index = '', $suggested_vals = array()) {\n\tglobal $called_by_script_server;\n\n\t$called_by_script_server = true;\n\n\tdsv_log('test_data_source', [ 'data_template_id' => $data_template_id, 'host_id' => $host_id, 'snmp_query_id' => $snmp_query_id, 'snmp_index' => $snmp_index, 'suggested_vals' => $suggested_vals]);\n\t$data_input = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\tdi.id, di.type_id, dtd.id AS data_template_data_id,\n\t\tdtd.data_template_id, dtd.active, dtd.rrd_step, di.name\n\t\tFROM data_template_data AS dtd\n\t\tINNER JOIN data_input AS di\n\t\tON dtd.data_input_id=di.id\n\t\tWHERE dtd.local_data_id = 0\n\t\tAND dtd.data_template_id = ?',\n\t\tarray($data_template_id));\n\n\tdsv_log('data_input', $data_input);\n\n\t$host = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . ' *\n\t\tFROM host\n\t\tWHERE id = ?',\n\t\tarray($host_id));\n\n\tdsv_log('host', $host);\n\n\t$data_template_data_id = 0;\n\n\tif (cacti_sizeof($data_input) && $data_input['active'] == 'on') {\n\t\t$data_template_data_id = $data_input['data_template_data_id'];\n\t\t/* we have to perform some additional sql queries if this is a 'query' */\n\t\tif (($data_input['type_id'] == DATA_INPUT_TYPE_SNMP_QUERY) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_SCRIPT_QUERY) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER)) {\n\n\t\t\t$field = data_query_field_list($data_template_data_id);\n\t\t\tdsv_log('query field', $field);\n\n\t\t\t$params   = array();\n\t\t\t$params[] = $data_input['data_template_id'];\n\n\t\t\tif ($field['output_type'] != '') {\n\t\t\t\t$output_type_sql = ' AND sqgr.snmp_query_graph_id = ?';\n\t\t\t\t$params[] = $field['output_type'];\n\t\t\t} else {\n\t\t\t\t$output_type_sql = '';\n\t\t\t}\n\n\t\t\t$outputs_sql = 'SELECT DISTINCT ' . SQL_NO_CACHE . \"\n\t\t\t\tsqgr.snmp_field_name, dtr.id as data_template_rrd_id\n\t\t\t\tFROM snmp_query_graph_rrd AS sqgr\n\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\tON sqgr.data_template_rrd_id = dtr.id\n\t\t\t\tWHERE sqgr.data_template_id = ?\n\t\t\t\tAND dtr.local_data_id = 0\n\t\t\t\t$output_type_sql\n\t\t\t\tORDER BY dtr.id\";\n\n\t\t\tdsv_log('outputs_sql', $outputs_sql);\n\t\t\tdsv_log('outputs_params', $params);\n\n\t\t\t$outputs = db_fetch_assoc_prepared($outputs_sql, $params);\n\n\t\t\tdsv_log('outputs', $outputs);\n\t\t}\n\n\t\tif (($data_input['type_id'] == DATA_INPUT_TYPE_SCRIPT) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_PHP_SCRIPT_SERVER)) {\n\t\t\tif ($data_input['type_id'] == DATA_INPUT_TYPE_PHP_SCRIPT_SERVER) {\n\t\t\t\t$action = POLLER_ACTION_SCRIPT_PHP;\n\t\t\t} else {\n\t\t\t\t$action = POLLER_ACTION_SCRIPT;\n\t\t\t}\n\n\t\t\t$script_path = get_full_test_script_path($data_template_id, $host_id);\n\t\t\tdsv_log('script_path', $script_path);\n\n\t\t\t$num_output_fields_sql = 'SELECT ' . SQL_NO_CACHE . ' id\n\t\t\t\tFROM data_input_fields\n\t\t\t\tWHERE data_input_id = ?\n\t\t\t\tAND input_output = \"out\"\n\t\t\t\tAND update_rra=\"on\"';\n\t\t\tdsv_log('num_output_fields_sql',$num_output_fields_sql);\n\n\t\t\t$num_output_fields = cacti_sizeof(db_fetch_assoc_prepared($num_output_fields_sql, array($data_input['id'])));\n\t\t\tdsv_log('num_output_fields', $num_output_fields);\n\n\t\t\tif ($num_output_fields == 1) {\n\t\t\t\t$data_template_rrd_id = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . ' id\n\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\tWHERE local_data_id = 0\n\t\t\t\t\tAND hash != \"\"\n\t\t\t\t\tAND data_template_id = ?',\n\t\t\t\t\tarray($data_template_id));\n\n\t\t\t\t$data_source_item_name = get_data_source_item_name($data_template_rrd_id);\n\t\t\t} else {\n\t\t\t\t$data_source_item_name = '';\n\t\t\t}\n\n\t\t\tdsv_log('data_source_item_name', $data_source_item_name);\n\t\t\tif ($action == POLLER_ACTION_SCRIPT) {\n\t\t\t\tdsv_log('script_path', $script_path);\n\t\t\t\t$output = shell_exec($script_path);\n\t\t\t} else {\n\t\t\t\t// Script server is a bit more complicated\n\t\t\t\t$php   = read_config_option('path_php_binary');\n\t\t\t\t$parts = explode(' ', $script_path);\n\n\t\t\t\tdsv_log('parts', $parts);\n\t\t\t\tif (file_exists($parts[0])) {\n\t\t\t\t\tunset($parts[1]);\n\n\t\t\t\t\t$script = implode(' ', $parts);\n\n\t\t\t\t\tdsv_log('script', $script);\n\t\t\t\t\t$output = shell_exec(\"$php -q $script\");\n\t\t\t\t\tif ($output == '' || $output == false) {\n\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$output = 'U';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('output', $output);\n\t\t\tif (!is_numeric($output)) {\n\t\t\t\tif ($output == 'U') {\n\t\t\t\t\treturn false;\n\t\t\t\t} elseif (prepare_validate_result($output) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} elseif ($data_input['type_id'] == DATA_INPUT_TYPE_SNMP) {\n\t\t\t/* get host fields first */\n\t\t\t$host_fields_sql = 'SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code IN(\"hostname\",\"host_id\"))\n\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\tAND did.value != \"\"';\n\t\t\tdsv_log('host_fields_sql',$host_fields_sql);\n\t\t\tdsv_log('host_fields_sql_params', ['data_template_data_id' => $data_template_data_id]);\n\n\t\t\t$host_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared($host_fields_sql,\n\t\t\t\t\tarray($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\tdsv_log('SNMP host_fields', $host_fields);\n\n\t\t\t$data_template_data = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id = did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\tAND did.data_template_data_id = ?',\n\t\t\t\tarray($data_template_data_id));\n\n\t\t\tdsv_log('SNMP data_template_data', $data_template_data);\n\t\t\tif (cacti_sizeof($data_template_data)) {\n\t\t\t\tforeach ($data_template_data as $field) {\n\t\t\t\t\t$key   = $field['type_code'];\n\t\t\t\t\t$value = $field['value'];\n\t\t\t\t\tdsv_log('SNMP field', $field);\n\t\t\t\t\t//dsv_log('SNMP suggested_val', $suggested_vals['custom_data'][$data_template_id]);\n\t\t\t\t\tif (!empty($suggested_vals['custom_data'][$data_template_id][$field['id']])) {\n\t\t\t\t\t\t$value = $suggested_vals['custom_data'][$data_template_id][$field['id']];\n\t\t\t\t\t\tdsv_log(\"SNMP value replace suggested $key\", $value);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($value) && !isset($host_fields[$key])) {\n\t\t\t\t\t\t$host_fields[$key] = $value;\n\t\t\t\t\t\tdsv_log(\"SNMP value replace template $key\", $value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('SNMP [updated] host_fields', $host_fields);\n\t\t\t$host = array_merge($host, $host_fields);\n\n\t\t\tdsv_log('SNMP [updated] host', $host);\n\n\t\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t$output = cacti_snmp_session_get($session, $host['snmp_oid']);\n\n\t\t\tdsv_log('SNMP output', $output);\n\n\t\t\tif (!is_numeric($output)) {\n\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} elseif ($data_input['type_id'] == DATA_INPUT_TYPE_SNMP_QUERY) {\n\t\t\t$snmp_queries = get_data_query_array($snmp_query_id);\n\n\t\t\t/* get host fields first */\n\t\t\t$host_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\t\tAND did.value != \"\"', array($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\tdsv_log('SNMP_QUERY host_fields', $host_fields);\n\n\t\t\t$data_template_data = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\tAND did.data_template_data_id = ?',\n\t\t\t\tarray($data_template_data_id));\n\n\t\t\tdsv_log('SNMP_QUERY data_template_data', $data_template_data);\n\n\t\t\tif (cacti_sizeof($data_template_data)) {\n\t\t\t\tforeach ($data_template_data as $field) {\n\t\t\t\t\t$key   = $field['type_code'];\n\t\t\t\t\t$value = $field['value'];\n\t\t\t\t\tdsv_log('SNMP_QUERY field', $field);\n\t\t\t\t\t//dsv_log('SNMP_QUERY suggested_val', $suggested_vals['custom_data'][$data_template_id]);\n\t\t\t\t\tif (!empty($suggested_vals['custom_data'][$data_template_id][$field['id']])) {\n\t\t\t\t\t\t$value = $suggested_vals['custom_data'][$data_template_id][$field['id']];\n\t\t\t\t\t\tdsv_log(\"SNMP_QUERY value replace suggested $key\", $value);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($value) && !isset($host_fields[$key])) {\n\t\t\t\t\t\t$host_fields[$key] = $value;\n\t\t\t\t\t\tdsv_log(\"SNMP_QUERY value replace template $key\", $value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('SNMP_QUERY [updated] host_fields', $host_fields);\n\n\t\t\t$host = array_merge($host, $host_fields);\n\n\t\t\tdsv_log('SNMP_QUERY [updated] host', $host);\n\n\t\t\tif (cacti_sizeof($outputs) && cacti_sizeof($snmp_queries)) {\n\t\t\t\tforeach ($outputs as $output) {\n\t\t\t\t\tif (isset($snmp_queries['fields'][$output['snmp_field_name']]['oid'])) {\n\t\t\t\t\t\t$oid = $snmp_queries['fields'][$output['snmp_field_name']]['oid'] . '.' . $snmp_index;\n\n\t\t\t\t\t\tif (isset($snmp_queries['fields'][$output['snmp_field_name']]['oid_suffix'])) {\n\t\t\t\t\t\t\t$oid .= '.' . $snmp_queries['fields'][$output['snmp_field_name']]['oid_suffix'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($oid)) {\n\t\t\t\t\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t\t\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t\t\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t\t\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $oid);\n\n\t\t\t\t\t\tif (!is_numeric($output)) {\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif (($data_input['type_id'] == DATA_INPUT_TYPE_SCRIPT_QUERY) ||\n\t\t\t($data_input['type_id'] == DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER)) {\n\t\t\t$script_queries = get_data_query_array($snmp_query_id);\n\n\t\t\t/* get host fields first */\n\t\t\t$host_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\t\tAND did.value != \"\"', array($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\tdsv_log('SCRIPT host_fields', $host_fields);\n\n\t\t\t$data_template_fields = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\t\tAND did.data_template_data_id = ?\n\t\t\t\t\tAND did.value != \"\"', array($data_template_data_id)),\n\t\t\t\t'type_code', 'value'\n\t\t\t);\n\n\t\t\t$data_template_data = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' dif.id, dif.type_code, did.value\n\t\t\t\tFROM data_input_fields AS dif\n\t\t\t\tLEFT JOIN data_input_data AS did\n\t\t\t\tON dif.id=did.data_input_field_id\n\t\t\t\tWHERE (type_code LIKE \"snmp_%\" OR type_code=\"hostname\")\n\t\t\t\tAND did.data_template_data_id = ?',\n\t\t\t\tarray($data_template_data_id));\n\n\t\t\tdsv_log('SCRIPT data_template_data', $data_template_data);\n\n\t\t\tif (cacti_sizeof($data_template_data)) {\n\t\t\t\tforeach ($data_template_data as $field) {\n\t\t\t\t\t$key = $field['type_code'];\n\t\t\t\t\t$value = $field['value'];\n\t\t\t\t\tdsv_log('SCRIPT field', $field);\n\t\t\t\t\t//dsv_log('SCRIPT suggested_val', $suggested_vals['custom_data'][$data_template_id]);\n\t\t\t\t\tif (!empty($suggested_vals['custom_data'][$data_template_id][$field['id']])) {\n\t\t\t\t\t\t$value = $suggested_vals['custom_data'][$data_template_id][$field['id']];\n\t\t\t\t\t\tdsv_log(\"SCRIPT value replace suggested $key\", $value);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($value) && !isset($host_fields[$key])) {\n\t\t\t\t\t\t$host_fields[$key] = $value;\n\t\t\t\t\t\tdsv_log(\"SCRIPT value replace template $key\", $value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdsv_log('SCRIPT [updated] host_fields', $host_fields);\n\n\t\t\t$host = array_merge($host, $host_fields);\n\n\t\t\tdsv_log('SCRIPT [updated] host', $host);\n\n\t\t\tif (cacti_sizeof($outputs) && cacti_sizeof($script_queries)) {\n\t\t\t\tforeach ($outputs as $output) {\n\t\t\t\t\tif (isset($script_queries['fields'][$output['snmp_field_name']]['query_name'])) {\n\t\t\t\t\t\t$identifier = $script_queries['fields'][$output['snmp_field_name']]['query_name'];\n\n\t\t\t\t\t\tif ($data_input['type_id'] == DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER) {\n\t\t\t\t\t\t\t$action = POLLER_ACTION_SCRIPT;\n\n\t\t\t\t\t\t\t$prepend = '';\n\t\t\t\t\t\t\tif (isset($script_queries['arg_prepend']) && $script_queries['arg_prepend'] != '') {\n\t\t\t\t\t\t\t\t$prepend = $script_queries['arg_prepend'];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$script_path = read_config_option('path_php_binary') . ' -q ' . get_script_query_path(trim($prepend . ' ' . $script_queries['arg_get'] . ' ' . $identifier . ' ' . $snmp_index), $script_queries['script_path'], $host_id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$action = POLLER_ACTION_SCRIPT;\n\t\t\t\t\t\t\t$script_path = get_script_query_path(trim((isset($script_queries['arg_prepend']) ? $script_queries['arg_prepend'] : '') . ' ' . $script_queries['arg_get'] . ' ' . $identifier . ' ' . $snmp_index), $script_queries['script_path'], $host_id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($script_path)) {\n\t\t\t\t\t\t$output = shell_exec($script_path);\n\n\t\t\t\t\t\tif (!is_numeric($output)) {\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * get_full_test_script_path - gets the full path to the script to execute to obtain data for a\n * given data template for testing. this function does not work on SNMP actions, only\n * script-based actions\n *\n * @param $data_template_id - (int) the ID of the data template\n *\n * @return - the full script path or (bool) false for an error\n */\nfunction get_full_test_script_path($data_template_id, $host_id) {\n\tglobal $config;\n\n\t$data_source = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\tdtd.id,\n\t\tdtd.data_input_id,\n\t\tdi.type_id,\n\t\tdi.input_string\n\t\tFROM data_template_data AS dtd\n\t\tINNER JOIN data_input AS di\n\t\tON dtd.data_input_id = di.id\n\t\tWHERE dtd.local_data_id = 0\n\t\tAND dtd.data_template_id = ?',\n\t\tarray($data_template_id));\n\n\t$data = db_fetch_assoc_prepared(\"SELECT \" . SQL_NO_CACHE . \" dif.data_name, did.value\n\t\tFROM data_input_fields AS dif\n\t\tLEFT JOIN data_input_data AS did\n\t\tON dif.id = did.data_input_field_id\n\t\tWHERE dif.data_input_id  = ?\n\t\tAND did.data_template_data_id = ?\n\t\tAND dif.input_output = 'in'\",\n\t\tarray($data_source['data_input_id'], $data_source['id']));\n\n\t$full_path = $data_source['input_string'];\n\n\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\n\tif (cacti_sizeof($data)) {\n\t\tforeach ($data as $item) {\n\t\t\tif (isset($host[$item['data_name']])) {\n\t\t\t\t$value = cacti_escapeshellarg($host[$item['data_name']]);\n\t\t\t} elseif ($item['data_name'] == 'host_id' || $item['data_name'] == 'hostid') {\n\t\t\t\t$value = cacti_escapeshellarg($host['id']);\n\t\t\t} else {\n\t\t\t\t$value = \"'\" . $item['value'] . \"'\";\n\t\t\t}\n\n\t\t\t$full_path = str_replace('<' . $item['data_name'] . '>', $value, $full_path);\n\t\t}\n\t}\n\n\t$search    = array('<path_cacti>', '<path_snmpget>', '<path_php_binary>');\n\t$replace   = array($config['base_path'], read_config_option('path_snmpget'), read_config_option('path_php_binary'));\n\t$full_path = str_replace($search, $replace, $full_path);\n\n\t/**\n\t * sometimes a certain input value will not have anything entered... null out these fields\n\t * in the input string so we don't mess up the script\n\t */\n\treturn preg_replace('/(<[A-Za-z0-9_]+>)+/', '', $full_path);\n}\n\n/**\n * get_full_script_path - gets the full path to the script to execute to obtain data for a\n * given data source. this function does not work on SNMP actions, only script-based actions\n *\n * @param $local_data_id - (int) the ID of the data source\n *\n * @return - the full script path or (bool) false for an error\n */\nfunction get_full_script_path($local_data_id) {\n\tglobal $config;\n\n\t$data_source = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . ' dtd.id, dtd.data_input_id,\n\t\tdi.type_id, di.input_string\n\t\tFROM data_template_data AS dtd\n\t\tINNER JOIN data_input AS di\n\t\tON dtd.data_input_id = di.id\n\t\tWHERE dtd.local_data_id = ?',\n\t\tarray($local_data_id));\n\n\t/* snmp-actions don't have paths */\n\tif (($data_source['type_id'] == DATA_INPUT_TYPE_SNMP) || ($data_source['type_id'] == DATA_INPUT_TYPE_SNMP_QUERY)) {\n\t\treturn false;\n\t}\n\n\t$data = db_fetch_assoc_prepared(\"SELECT \" . SQL_NO_CACHE . \" dif.data_name, did.value\n\t\tFROM data_input_fields AS dif\n\t\tLEFT JOIN data_input_data AS did\n\t\tON dif.id = did.data_input_field_id\n\t\tWHERE dif.data_input_id = ?\n\t\tAND did.data_template_data_id = ?\n\t\tAND dif.input_output = 'in'\",\n\t\tarray($data_source['data_input_id'], $data_source['id']));\n\n\t$full_path = $data_source['input_string'];\n\n\tif (cacti_sizeof($data)) {\n\t\tforeach ($data as $item) {\n\t\t\t$value = cacti_escapeshellarg($item['value']);\n\n\t\t\tif ($value == '') {\n\t\t\t\t$value = \"''\";\n\t\t\t}\n\n\t\t\t$full_path = str_replace('<' . $item['data_name'] . '>', $value, $full_path);\n\t\t}\n\t}\n\n\t$search    = array('<path_cacti>', '<path_snmpget>', '<path_php_binary>');\n\t$replace   = array($config['base_path'], read_config_option('path_snmpget'), read_config_option('path_php_binary'));\n\t$full_path = str_replace($search, $replace, $full_path);\n\n\t/* sometimes a certain input value will not have anything entered... null out these fields\n\tin the input string so we don't mess up the script */\n\treturn preg_replace('/(<[A-Za-z0-9_]+>)+/', '', $full_path);\n}\n\n/**\n * get_data_source_item_name - gets the name of a data source item or generates a new one if one does not\n * already exist\n *\n * @param $data_template_rrd_id - (int) the ID of the data source item\n *\n * @return - the name of the data source item or an empty string for an error\n */\nfunction get_data_source_item_name($data_template_rrd_id) {\n\tif (empty($data_template_rrd_id)) {\n\t\treturn '';\n\t}\n\n\t$data_source = db_fetch_row_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\tdtr.data_source_name, dtd.name\n\t\tFROM data_template_rrd AS dtr\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtr.local_data_id = dtd.local_data_id\n\t\tWHERE dtr.id = ?',\n\t\tarray($data_template_rrd_id)\n\t);\n\n\t/* use the cacti ds name by default or the user defined one, if entered */\n\tif (empty($data_source['data_source_name'])) {\n\t\t/* limit input to 19 characters */\n\t\t$data_source_name = clean_up_name($data_source['name']);\n\t\t$data_source_name = substr(strtolower($data_source_name), 0, (19-strlen($data_template_rrd_id))) . $data_template_rrd_id;\n\n\t\treturn $data_source_name;\n\t} else {\n\t\treturn $data_source['data_source_name'];\n\t}\n}\n\n/**\n * get_data_source_path - gets the full path to the .rrd file associated with a given data source\n *\n * @param $local_data_id - (int) the ID of the data source\n * @param $expand_paths - (bool) whether to expand the <path_rra> variable into its full path or not\n *\n * @return - the full path to the data source or an empty string for an error\n */\nfunction get_data_source_path($local_data_id, $expand_paths) {\n\tglobal $config;\n\tstatic $data_source_path_cache = array();\n\n\tif (empty($local_data_id)) {\n\t\treturn '';\n\t}\n\n\tif (isset($data_source_path_cache[$local_data_id])) {\n\t\treturn $data_source_path_cache[$local_data_id];\n\t}\n\n\t$data_source = db_fetch_row_prepared('SELECT name, data_source_path\n\t\tFROM data_template_data AS dtd\n\t\tWHERE local_data_id = ?',\n\t\tarray($local_data_id));\n\n\tif (cacti_sizeof($data_source)) {\n\t\tif (empty($data_source['data_source_path'])) {\n\t\t\t/* no custom path was specified */\n\t\t\t$data_source_path = generate_data_source_path($local_data_id);\n\t\t} elseif (!strstr($data_source['data_source_path'], '/')) {\n\t\t\t$data_source_path = '<path_rra>/' . $data_source['data_source_path'];\n\t\t} else {\n\t\t\t$data_source_path = $data_source['data_source_path'];\n\t\t}\n\n\t\t/* whether to show the \"actual\" path or the <path_rra> variable name (for edit boxes) */\n\t\tif ($expand_paths == true) {\n\t\t\t$data_source_path = str_replace('<path_rra>/', $config['rra_path'] . '/', $data_source_path);\n\t\t}\n\n\t\t$data_source_path_cache[$local_data_id] = $data_source_path;\n\n\t\treturn $data_source_path;\n\t}\n}\n\n/**\n * stri_replace - a case insensitive string replace\n *\n * @param $find - needle\n * @param $replace - replace needle with this\n * @param $string - haystack\n *\n * @return - the original string with '$find' replaced by '$replace'\n */\nfunction stri_replace($find, $replace, $string) {\n\t$parts = explode(strtolower($find), strtolower($string));\n\n\t$pos = 0;\n\n\t$findLength = strlen($find);\n\tforeach ($parts as $key => $part) {\n\t\t$partLength = strlen($part);\n\n\t\t$parts[$key] = substr($string, $pos, $partLength);\n\t\t$pos += $partLength + $findLength;\n\t}\n\n\treturn (join($replace, $parts));\n}\n\n/**\n * clean_up_lines - runs a string through a regular expression designed to remove\n * new lines and the spaces around them\n *\n * @param $string - the string to modify/clean\n *\n * @return - the modified string\n */\nfunction clean_up_lines($string) {\n\tif ($string != '') {\n\t\treturn preg_replace('/\\s*[\\r\\n]+\\s*/',' ', $string);\n\t} else {\n\t\treturn $string;\n\t}\n}\n\n/**\n * clean_up_name - runs a string through a series of regular expressions designed to\n * eliminate \"bad\" characters\n *\n * @param $string - the string to modify/clean\n *\n * @return - the modified string\n */\nfunction clean_up_name($string) {\n\tif ($string != '') {\n\t\t$string = preg_replace('/[\\s\\.]+/', '_', $string);\n\t\t$string = preg_replace('/[^a-zA-Z0-9_]+/', '', $string);\n\t\t$string = preg_replace('/_{2,}/', '_', $string);\n\t}\n\n\treturn $string;\n}\n\n/**\n * clean_up_file name - runs a string through a series of regular expressions designed to\n * eliminate \"bad\" characters\n *\n * @param $string - the string to modify/clean\n *\n * @return - the modified string\n */\nfunction clean_up_file_name($string) {\n\tif ($string != '') {\n\t\t$string = preg_replace('/[\\s\\.]+/', '_', $string);\n\t\t$string = preg_replace('/[^a-zA-Z0-9_-]+/', '', $string);\n\t\t$string = preg_replace('/_{2,}/', '_', $string);\n\t}\n\n\treturn $string;\n}\n\n/**\n * clean_up_path - takes any path and makes sure it contains the correct directory\n * separators based on the current operating system\n *\n * @param $path - the path to modify\n *\n * @return - the modified path\n */\nfunction clean_up_path($path) {\n\tglobal $config;\n\n\tif ($config['cacti_server_os'] == 'win32') {\n\t\treturn str_replace('/', \"\\\\\", $path);\n\t} elseif ($config['cacti_server_os'] == 'unix' || read_config_option('using_cygwin') == 'on' || read_config_option('storage_location')) {\n\t\treturn str_replace(\"\\\\\", '/', $path);\n\t} else {\n\t\treturn $path;\n\t}\n}\n\n/**\n * get_data_source_title - returns the title of a data source without using the title cache\n *\n * @param $local_data_id - (int) the ID of the data source to get a title for\n *\n * @return - the data source title\n */\nfunction get_data_source_title($local_data_id) {\n\t$data = db_fetch_row_prepared('SELECT\n\t\tdl.host_id, dl.snmp_query_id, dl.snmp_index, dl.data_template_id,\n\t\tdtd.name, dtd.id as template_id\n\t\tFROM data_local AS dl\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = dl.id\n\t\tWHERE dl.id = ?',\n\t\tarray($local_data_id));\n\n\t$title = 'Missing Datasource ' . $local_data_id;\n\tif (cacti_sizeof($data)) {\n\t\tif (strstr($data['name'], '|') !== false && $data['host_id'] > 0) {\n\t\t\t$data['name'] = substitute_data_input_data($data['name'], '', $local_data_id);\n\t\t\t$title = expand_title($data['host_id'], $data['snmp_query_id'], $data['snmp_index'], $data['name']);\n\t\t} else {\n\t\t\t$title = $data['name'];\n\t\t}\n\n\t\t// Is the data source linked to a template?  If so, make sure we have a template on the\n\t\t// LEFT JOIN since it may not find one.  Also, we can't check that they are the same ID\n\t\t// ID yet because there are two, one with a 0 local_data_id (base template) and one with\n\t\t// this source's id (instance of template).\n\t\tif ($data['data_template_id'] && !$data['template_id']) {\n\t\t\t$title .= ' (Bad template \"' . $data['data_template_id'] . '\")';\n\t\t}\n\t}\n\treturn $title;\n}\n\n/**\n * get_device_name - returns the description of the device in cacti host table\n *\n * @param $host_id - (int) the ID of the device to get a description for\n *\n * @return - the device name\n */\nfunction get_device_name($host_id) {\n\treturn db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($host_id));\n}\n\n/**\n * get_color - returns the hex color value from the cacti colors table\n *\n * @param $color_id - (int) the ID of the cacti color\n * @return - the hex color value\n *\n */\nfunction get_color($color_id) {\n\treturn db_fetch_cell_prepared('SELECT hex FROM colors WHERE id = ?', array($color_id));\n}\n\n/**\n * get_graph_title_cache - returns the title of the graph using the title cache\n *\n * @param $local_graph_id - (int) the ID of the graph to get the title for\n *\n * @return - the graph title\n */\nfunction get_graph_title_cache($local_graph_id) {\n\treturn db_fetch_cell_prepared('SELECT title_cache\n\t\tFROM graph_templates_graph\n\t\tWHERE local_graph_id = ?',\n\t\tarray($local_graph_id));\n}\n\n/**\n * get_graph_title - returns the title of a graph without using the title cache\n *\n * @param $local_graph_id - (int) the ID of the graph to get a title for\n *\n * @return - the graph title\n */\nfunction get_graph_title($local_graph_id) {\n\t$graph = db_fetch_row_prepared('SELECT gl.host_id, gl.snmp_query_id,\n\t\tgl.snmp_index, gtg.local_graph_id, gtg.t_title, gtg.title\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id = gl.id\n\t\tWHERE gl.id = ?',\n\t\tarray($local_graph_id));\n\n\tif (cacti_sizeof($graph)) {\n\t\tif (strstr($graph['title'], '|') !== false && $graph['host_id'] > 0 && empty($graph['t_title'])) {\n\t\t\t$graph['title'] = substitute_data_input_data($graph['title'], $graph, 0);\n\t\t\treturn expand_title($graph['host_id'], $graph['snmp_query_id'], $graph['snmp_index'], $graph['title']);\n\t\t} else {\n\t\t\treturn $graph['title'];\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n}\n\n/**\n * get_guest_account - return the guest account as defined in the system\n *   if there is one, else return 0.\n *\n * @return (int) the guest account if greater than 0\n */\nfunction get_guest_account() {\n\t$user = db_fetch_cell_prepared('SELECT id\n\t\tFROM user_auth\n\t\tWHERE username = ? OR id = ?',\n\t\tarray(read_config_option('guest_user'), read_config_option('guest_user')));\n\n\tif (empty($user)) {\n\t\treturn 0;\n\t} else {\n\t\treturn $user;\n\t}\n}\n\n/**\n * get_template_account - return the template account given a user.\n *   if a user is not given, provide the 'default' template account.\n *   This function is hookable by third party plugins.\n *\n * @param  (int|string) either the username or user_id of the user\n *\n * @return (int) the template account if one exist for the user\n */\nfunction get_template_account($user = '') {\n\tif ($user == '') {\n\t\t// no username or user_id passed, use default functionality\n\t\t$user = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ? OR id = ?',\n\t\t\tarray(read_config_option('user_template'), read_config_option('user_template')));\n\n\t\tif (empty($user)) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn $user;\n\t\t}\n\t} else {\n\t\t$template = api_plugin_hook_function('get_template_account', $user);\n\n\t\tif ($template == $user) {\n\t\t\t// no plugin present, use default functionality\n\t\t\t$user = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE username = ? OR id = ?',\n\t\t\t\tarray(read_config_option('user_template'), read_config_option('user_template')));\n\n\t\t\tif (empty($user)) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn $user;\n\t\t\t}\n\t\t} elseif ($template > 0) {\n\t\t\t// plugin present and returned account\n\t\t\treturn $template;\n\t\t} else {\n\t\t\t// plugin present and returned no account\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\n/**\n * get_username - returns the username for the selected user\n *\n * @param $user_id - (int) the ID of the user\n *\n * @return - the username */\nfunction get_username($user_id) {\n\treturn db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($user_id));\n}\n\n/**\n * get_execution_user - returns the username of the running process\n *\n * @return - the username\n */\nfunction get_execution_user() {\n\tif (function_exists('posix_getpwuid')) {\n\t\t$user_info = posix_getpwuid(posix_geteuid());\n\n\t\treturn $user_info['name'];\n\t} else {\n\t\treturn exec('whoami');\n\t}\n}\n\n/**\n * generate_data_source_path - creates a new data source path from scratch using the first data source\n * item name and updates the database with the new value\n *\n * @param $local_data_id - (int) the ID of the data source to generate a new path for\n *\n * @return - the new generated path\n */\nfunction generate_data_source_path($local_data_id) {\n\tglobal $config;\n\n\tstatic $extended_paths = false;\n\tstatic $pattern = false;\n\n\tif ($extended_paths === false) {\n\t\t$extended_paths = read_config_option('extended_paths');\n\t}\n\n\tif ($pattern === false) {\n\t\t$pattern = read_config_option('extended_paths_type');\n\t}\n\n\t/* try any prepend the name with the host description */\n\t$data = db_fetch_row_prepared('SELECT dl.host_id, h.description, dl.snmp_query_id\n\t\tFROM host AS h\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.host_id = h.id\n\t\tAND dl.id = ?',\n\t\tarray($local_data_id));\n\n\tif (cacti_sizeof($data)) {\n\t\t$host_name     = $data['description'];\n\t\t$host_id       = $data['host_id'];\n\t\t$data_query_id = $data['snmp_query_id'];\n\t} else {\n\t\t$host_name     = 'undefinedhost';\n\t\t$host_id       = 0;\n\t\t$data_query_id = 0;\n\t}\n\n\t/* put it all together using the local_data_id at the end */\n\tif ($extended_paths == 'on') {\n\t\t$maxdirs = read_config_option('extended_paths_hashes');\n\t\tif (empty($maxdirs) || $maxdirs < 0 || !is_numeric($maxdirs)) {\n\t\t\t$maxdirs = 100;\n\t\t}\n\n\t\t$hash_id = $host_id % $maxdirs;\n\n\t\tif ($pattern == 'device' || $pattern == '') {\n\t\t\t$new_path = \"<path_rra>/$host_id/$local_data_id.rrd\";\n\t\t} elseif ($pattern == 'device_dq') {\n\t\t\t$new_path = \"<path_rra>/$host_id/$data_query_id/$local_data_id.rrd\";\n\t\t} elseif ($pattern == 'hash_device') {\n\t\t\t$new_path = \"<path_rra>/$hash_id/$host_id/$local_data_id.rrd\";\n\t\t} elseif ($pattern == 'hash_device_dq') {\n\t\t\t$new_path = \"<path_rra>/$hash_id/$host_id/$data_query_id/$local_data_id.rrd\";\n\t\t}\n\t} else {\n\t\t$host_part = strtolower(clean_up_file_name($host_name)) . '_';\n\n\t\t/* then try and use the internal DS name to identify it */\n\t\t$data_source_rrd_name = db_fetch_cell_prepared('SELECT data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id = ?\n\t\t\tORDER BY id\n\t\t\tLIMIT 1',\n\t\t\tarray($local_data_id)\n\t\t);\n\n\t\tif (!empty($data_source_rrd_name)) {\n\t\t\t$ds_part = strtolower(clean_up_file_name($data_source_rrd_name));\n\t\t} else {\n\t\t\t$ds_part = 'ds';\n\t\t}\n\n\t\t$new_path = \"<path_rra>/$host_part$ds_part\" . '_' . \"$local_data_id.rrd\";\n\t}\n\n\t/* update our changes to the db */\n\tdb_execute_prepared('UPDATE data_template_data SET data_source_path = ? WHERE local_data_id = ?', array($new_path, $local_data_id));\n\n\treturn $new_path;\n}\n\n/**\n * generate graph_best_cf - takes the requested consolidation function and maps against\n * the list of available consolidation functions for the consolidation functions and returns\n * the most appropriate.  Typically, this will be the requested value\n *\n *  @param $data_template_id\n *  @param $requested_cf\n *  @param $ds_step\n *\n *  @return - the best cf to use\n */\nfunction generate_graph_best_cf($local_data_id, $requested_cf, $ds_step = 60) {\n\tstatic $best_cf;\n\n\tif ($local_data_id > 0) {\n\t\t$avail_cf_functions = get_rrd_cfs($local_data_id);\n\n\t\tif (cacti_sizeof($avail_cf_functions)) {\n\t\t\t/* workaround until we have RRA presets in 0.8.8 */\n\t\t\t/* check through the cf's and get the best */\n\t\t\t/* if none was found, take the first */\n\t\t\t$best_cf = reset($avail_cf_functions);\n\n\t\t\tforeach($avail_cf_functions as $cf) {\n\t\t\t\tif ($cf == $requested_cf) {\n\t\t\t\t\t$best_cf = $requested_cf;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$best_cf = '1';\n\t\t}\n\t}\n\n\t/* if you can not figure it out return average */\n\treturn $best_cf;\n}\n\n/**\n * get_rrd_cfs - reads the RRDfile and gets the RRAs stored in it.\n *\n * @param $local_data_id\n *\n * @return - array of the CF functions\n */\nfunction get_rrd_cfs($local_data_id) {\n\tglobal $consolidation_functions;\n\tstatic $rrd_cfs = array();\n\n\tif (array_key_exists($local_data_id, $rrd_cfs)) {\n\t\treturn $rrd_cfs[$local_data_id];\n\t}\n\n\t$cfs = array();\n\n\t$rrdfile = get_data_source_path($local_data_id, true);\n\n\t$output = @rrdtool_execute(\"info $rrdfile\", false, RRDTOOL_OUTPUT_STDOUT);\n\n\t/* search for\n\t * \t\trra[0].cf = 'LAST'\n\t * or similar\n\t */\n\tif ($output != '') {\n\t\t$output = explode(\"\\n\", $output);\n\n\t\tif (cacti_sizeof($output)) {\n\t\t\tforeach($output as $line) {\n\t\t\t\tif (substr_count($line, '.cf')) {\n\t\t\t\t\t$values = explode('=',$line);\n\n\t\t\t\t\tif (!in_array(trim($values[1], '\" '), $cfs)) {\n\t\t\t\t\t\t$cfs[] = trim($values[1], '\" ');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$new_cfs = array();\n\n\tif (cacti_sizeof($cfs)) {\n\t\tforeach($cfs as $cf) {\n\t\t\tswitch($cf) {\n\t\t\tcase 'AVG':\n\t\t\tcase 'AVERAGE':\n\t\t\t\t$new_cfs[1] = array_search('AVERAGE', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\tcase 'MIN':\n\t\t\t\t$new_cfs[2] = array_search('MIN', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\tcase 'MAX':\n\t\t\t\t$new_cfs[3] = array_search('MAX', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\tcase 'LAST':\n\t\t\t\t$new_cfs[4] = array_search('LAST', $consolidation_functions);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t$rrd_cfs[$local_data_id] = $new_cfs;\n\n\treturn $new_cfs;\n}\n\n/**\n * generate_graph_def_name - takes a number and turns each digit into its letter-based\n * counterpart for RRDtool DEF names (ex 1 -> a, 2 -> b, etc)\n *\n * @param $graph_item_id - (int) the ID to generate a letter-based representation of\n *\n * @return - a letter-based representation of the input argument\n */\nfunction generate_graph_def_name($graph_item_id) {\n\t$lookup_table = array('a','b','c','d','e','f','g','h','i','j');\n\n\t$result = '';\n\t$strValGII = strval($graph_item_id);\n\tfor ($i=0; $i<strlen($strValGII); $i++) {\n\t\t$result .= $lookup_table[substr($strValGII, $i, 1)];\n\t}\n\n\tif (preg_match('/^(cf|cdef|def)$/', $result)) {\n\t\treturn 'zz' . $result;\n\t} else {\n\t\treturn $result;\n\t}\n}\n\n/**\n * generate_data_input_field_sequences - re-numbers the sequences of each field associated\n * with a particular data input method based on its position within the input string\n *\n * @param $string - the input string that contains the field variables in a certain order\n * @param $data_input_id - (int) the ID of the data input method\n */\nfunction generate_data_input_field_sequences($string, $data_input_id) {\n\tglobal $config, $registered_cacti_names;\n\n\tif (preg_match_all('/<([_a-zA-Z0-9]+)>/', $string, $matches)) {\n\t\t$j = 0;\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names) == false) {\n\t\t\t\t$j++;\n\n\t\t\t\tdb_execute_prepared(\"UPDATE data_input_fields\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE data_input_id = ?\n\t\t\t\t\tAND input_output IN ('in')\n\t\t\t\t\tAND data_name = ?\",\n\t\t\t\t\tarray($j, $data_input_id, $matches[1][$i]));\n\t\t\t}\n\t\t}\n\n\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t}\n}\n\n/**\n * move_graph_group - takes a graph group (parent+children) and swaps it with another graph\n * group\n *\n * @param $graph_template_item_id - (int) the ID of the (parent) graph item that was clicked\n * @param $graph_group_array - (array) an array containing the graph group to be moved\n * @param $target_id - (int) the ID of the (parent) graph item of the target group\n * @param $direction - ('next' or 'previous') whether the graph group is to be swapped with\n *   group above or below the current group\n */\nfunction move_graph_group($graph_template_item_id, $graph_group_array, $target_id, $direction) {\n\t$graph_item = db_fetch_row_prepared('SELECT local_graph_id, graph_template_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray($graph_template_item_id));\n\n\tif (empty($graph_item['local_graph_id'])) {\n\t\t$sql_where = 'graph_template_id = ' . $graph_item['graph_template_id'] . ' AND local_graph_id = 0';\n\t} else {\n\t\t$sql_where = 'local_graph_id = ' . $graph_item['local_graph_id'];\n\t}\n\n\t/* get a list of parent+children of our target group */\n\t$target_graph_group_array = get_graph_group($target_id);\n\n\t/* if this \"parent\" item has no children, then treat it like a regular gprint */\n\tif (cacti_sizeof($target_graph_group_array) == 0) {\n\t\tif ($direction == 'next') {\n\t\t\tmove_item_down('graph_templates_item', $graph_template_item_id, $sql_where);\n\t\t} elseif ($direction == 'previous') {\n\t\t\tmove_item_up('graph_templates_item', $graph_template_item_id, $sql_where);\n\t\t}\n\n\t\treturn;\n\t}\n\n\t/* start the sequence at '1' */\n\t$sequence_counter = 1;\n\n\t$graph_items = db_fetch_assoc_prepared(\"SELECT id, sequence\n\t\tFROM graph_templates_item\n\t\tWHERE $sql_where\n\t\tORDER BY sequence\");\n\n\tif (cacti_sizeof($graph_items)) {\n\t\tforeach ($graph_items as $item) {\n\t\t\t/* check to see if we are at the \"target\" spot in the loop; if we are, update the sequences and move on */\n\t\t\tif ($target_id == $item['id']) {\n\t\t\t\tif ($direction == 'next') {\n\t\t\t\t\t$group_array1 = $target_graph_group_array;\n\t\t\t\t\t$group_array2 = $graph_group_array;\n\t\t\t\t} elseif ($direction == 'previous') {\n\t\t\t\t\t$group_array1 = $graph_group_array;\n\t\t\t\t\t$group_array2 = $target_graph_group_array;\n\t\t\t\t}\n\n\t\t\t\tforeach ($group_array1 as $graph_template_item_id) {\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\n\t\t\t\t\t/* propagate to ALL graphs using this template */\n\t\t\t\t\tif (empty($graph_item['local_graph_id'])) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\t\tWHERE local_graph_template_item_id = ?',\n\t\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\t\t\t\t\t}\n\n\t\t\t\t\t$sequence_counter++;\n\t\t\t\t}\n\n\t\t\t\tforeach ($group_array2 as $graph_template_item_id) {\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\n\t\t\t\t\t/* propagate to ALL graphs using this template */\n\t\t\t\t\tif (empty($graph_item['local_graph_id'])) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\t\tSET sequence = ?\n\t\t\t\t\t\t\tWHERE local_graph_template_item_id = ?',\n\t\t\t\t\t\t\tarray($sequence_counter, $graph_template_item_id));\n\t\t\t\t\t}\n\n\t\t\t\t\t$sequence_counter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* make sure to \"ignore\" the items that we handled above */\n\t\t\tif ((!isset($graph_group_array[$item['id']])) && (!isset($target_graph_group_array[$item['id']]))) {\n\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence_counter, $item['id']));\n\n\t\t\t\t$sequence_counter++;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * get_graph_group - returns an array containing each item in the graph group given a single\n * graph item in that group\n *\n * @param $graph_template_item_id - (int) the ID of the graph item to return the group of\n *\n * @return - (array) an array containing each item in the graph group\n */\nfunction get_graph_group($graph_template_item_id) {\n\tglobal $graph_item_types;\n\n\t$graph_item = db_fetch_row_prepared('SELECT graph_type_id, sequence, local_graph_id, graph_template_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray($graph_template_item_id));\n\n\t$params[] = $graph_item['sequence'];\n\n\tif (empty($graph_item['local_graph_id'])) {\n\t\t$params[] = $graph_item['graph_template_id'];\n\t\t$sql_where = 'graph_template_id = ? AND local_graph_id = 0';\n\t} else {\n\t\t$params[] = $graph_item['sequence'];\n\t\t$sql_where = 'local_graph_id = ?';\n\t}\n\n\t/* parents are LINE%, AREA%, and STACK%. If not return */\n\tif (!preg_match('/(LINE|AREA|STACK)/', $graph_item_types[$graph_item['graph_type_id']])) {\n\t\treturn array();\n\t}\n\n\t$graph_item_children_array = array();\n\n\t/* put the parent item in the array as well */\n\t$graph_item_children_array[$graph_template_item_id] = $graph_template_item_id;\n\n\t$graph_items = db_fetch_assoc_prepared(\"SELECT id, graph_type_id, text_format, hard_return\n\t\tFROM graph_templates_item\n\t\tWHERE sequence > ?\n\t\tAND $sql_where\n\t\tORDER BY sequence\",\n\t\t$params);\n\n\t$is_hard = false;\n\n\tif (cacti_sizeof($graph_items)) {\n\t\tforeach ($graph_items as $item) {\n\t\t\tif ($is_hard) {\n\t\t\t\treturn $graph_item_children_array;\n\t\t\t} elseif (strstr($graph_item_types[$item['graph_type_id']], 'GPRINT') !== false) {\n\t\t\t\t/* a child must be a GPRINT */\n\t\t\t\t$graph_item_children_array[$item['id']] = $item['id'];\n\n\t\t\t\tif ($item['hard_return'] == 'on') {\n\t\t\t\t\t$is_hard = true;\n\t\t\t\t}\n\t\t\t} elseif (strstr($graph_item_types[$item['graph_type_id']], 'COMMENT') !== false) {\n\t\t\t\tif (preg_match_all('/\\|([0-9]{1,2}):(bits|bytes):(\\d):(current|total|max|total_peak|all_max_current|all_max_peak|aggregate_max|aggregate_sum|aggregate_current|aggregate):(\\d)?\\|/', $item['text_format'], $matches, PREG_SET_ORDER)) {\n\t\t\t\t\t$graph_item_children_array[$item['id']] = $item['id'];\n\t\t\t\t} elseif (preg_match_all('/\\|sum:(\\d|auto):(current|total|atomic):(\\d):(\\d+|auto)\\|/', $item['text_format'], $matches, PREG_SET_ORDER)) {\n\t\t\t\t\t$graph_item_children_array[$item['id']] = $item['id'];\n\t\t\t\t} else {\n\t\t\t\t\t/* if not a GPRINT or special COMMENT then get out */\n\t\t\t\t\treturn $graph_item_children_array;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* if not a GPRINT or special COMMENT then get out */\n\t\t\t\treturn $graph_item_children_array;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $graph_item_children_array;\n}\n\n/**\n * get_graph_parent - returns the ID of the next or previous parent graph item id\n *\n * @param $graph_template_item_id - the ID of the current graph item\n * @param $direction - ('next' or 'previous') whether to find the next or previous parent\n *\n * @return - the ID of the next or previous parent graph item id\n */\nfunction get_graph_parent($graph_template_item_id, $direction) {\n\t$graph_item = db_fetch_row_prepared('SELECT sequence, local_graph_id, graph_template_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray($graph_template_item_id));\n\n\tif (empty($graph_item['local_graph_id'])) {\n\t\t$sql_where = 'graph_template_id = ' . $graph_item['graph_template_id'] . ' AND local_graph_id = 0';\n\t} else {\n\t\t$sql_where = 'local_graph_id = ' . $graph_item['local_graph_id'];\n\t}\n\n\tif ($direction == 'next') {\n\t\t$sql_operator = '>';\n\t\t$sql_order = 'ASC';\n\t} elseif ($direction == 'previous') {\n\t\t$sql_operator = '<';\n\t\t$sql_order = 'DESC';\n\t}\n\n\t$next_parent_id = db_fetch_cell(\"SELECT id\n\t\tFROM graph_templates_item\n\t\tWHERE sequence $sql_operator \" . $graph_item['sequence'] . \"\n\t\tAND graph_type_id IN (4, 5, 6, 7, 8, 20)\n\t\tAND $sql_where\n\t\tORDER BY sequence $sql_order\n\t\tLIMIT 1\");\n\n\tif (empty($next_parent_id)) {\n\t\treturn 0;\n\t} else {\n\t\treturn $next_parent_id;\n\t}\n}\n\n/**\n * get_item - returns the ID of the next or previous item id\n *\n * @param $tblname - the table name that contains the target id\n * @param $field - the field name that contains the target id\n * @param $startid - (int) the current id\n * @param $lmt_query - an SQL \"where\" clause to limit the query\n * @param $direction - ('next' or 'previous') whether to find the next or previous item id\n *\n * @return - (int) the ID of the next or previous item id\n */\nfunction get_item($tblname, $field, $startid, $lmt_query, $direction) {\n\tif ($direction == 'next') {\n\t\t$sql_operator = '>';\n\t\t$sql_order = 'ASC';\n\t} elseif ($direction == 'previous') {\n\t\t$sql_operator = '<';\n\t\t$sql_order = 'DESC';\n\t}\n\n\t$current_sequence = db_fetch_cell_prepared(\"SELECT $field\n\t\tFROM $tblname\n\t\tWHERE id = ?\",\n\t\tarray($startid));\n\n\t$new_item_id = db_fetch_cell(\"SELECT id\n\t\tFROM $tblname\n\t\tWHERE $field $sql_operator $current_sequence \" . ($lmt_query != '' ? \" AND $lmt_query\":\"\") . \"\n\t\tORDER BY $field $sql_order\n\t\tLIMIT 1\");\n\n\tif (empty($new_item_id)) {\n\t\treturn $startid;\n\t} else {\n\t\treturn $new_item_id;\n\t}\n}\n\n/**\n * get_sequence - returns the next available sequence id\n *\n * @param $id - (int) the current id\n * @param $field - the field name that contains the target id\n * @param $table_name - the table name that contains the target id\n * @param $group_query - an SQL \"where\" clause to limit the query\n *\n * @return - (int) the next available sequence id\n */\nfunction get_sequence($id, $field, $table_name, $group_query) {\n\tif (empty($id)) {\n\t\t$data = db_fetch_row(\"SELECT max($field)+1 AS seq\n\t\t\tFROM $table_name\n\t\t\tWHERE $group_query\");\n\n\t\tif ($data['seq'] == '') {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn $data['seq'];\n\t\t}\n\t} else {\n\t\t$data = db_fetch_row_prepared(\"SELECT $field\n\t\t\tFROM $table_name\n\t\t\tWHERE id = ?\",\n\t\t\tarray($id));\n\n\t\treturn $data[$field];\n\t}\n}\n\n/**\n * move_item_down - moves an item down by swapping it with the item below it\n *\n * @param $table_name - the table name that contains the target id\n * @param $current_id - (int) the current id\n * @param $group_query - an SQL \"where\" clause to limit the query\n */\nfunction move_item_down($table_name, $current_id, $group_query = '') {\n\t$next_item = get_item($table_name, 'sequence', $current_id, $group_query, 'next');\n\n\t$sequence = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($current_id));\n\n\t$sequence_next = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($next_item));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence_next, $current_id));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence, $next_item));\n}\n\n/**\n * move_item_up - moves an item down by swapping it with the item above it\n *\n * @param $table_name - the table name that contains the target id\n * @param $current_id - (int) the current id\n * @param $group_query - an SQL \"where\" clause to limit the query\n */\nfunction move_item_up($table_name, $current_id, $group_query = '') {\n\t$last_item = get_item($table_name, 'sequence', $current_id, $group_query, 'previous');\n\n\t$sequence = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($current_id));\n\n\t$sequence_last = db_fetch_cell_prepared(\"SELECT sequence\n\t\tFROM $table_name\n\t\tWHERE id = ?\",\n\t\tarray($last_item));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence_last, $current_id));\n\n\tdb_execute_prepared(\"UPDATE $table_name\n\t\tSET sequence = ?\n\t\tWHERE id = ?\",\n\t\tarray($sequence, $last_item));\n}\n\n/**\n * exec_into_array - executes a command and puts each line of its output into\n * an array\n *\n * @param $command_line - the command to execute\n *\n * @return - (array) an array containing the command output\n */\nfunction exec_into_array($command_line) {\n\t$out = array();\n\t$err = 0;\n\texec($command_line,$out,$err);\n\n\treturn array_values($out);\n}\n\n/**\n * get_web_browser - determines the current web browser in use by the client\n *\n * @return - ('ie' or 'moz' or 'other')\n */\nfunction get_web_browser() {\n\tif (!empty($_SERVER['HTTP_USER_AGENT'])) {\n\t\tif (stristr($_SERVER['HTTP_USER_AGENT'], 'Mozilla') && (!(stristr($_SERVER['HTTP_USER_AGENT'], 'compatible')))) {\n\t\t\treturn 'moz';\n\t\t} elseif (stristr($_SERVER['HTTP_USER_AGENT'], 'MSIE')) {\n\t\t\treturn 'ie';\n\t\t} else {\n\t\t\treturn 'other';\n\t\t}\n\t} else {\n\t\treturn 'other';\n\t}\n}\n\n/**\n * draw_login_status - provides a consistent login status page for all pages that use it\n */\nfunction draw_login_status($using_guest_account = false) {\n\tglobal $config;\n\n\t$guest_account = get_guest_account();\n\t$auth_method   = read_config_option('auth_method');\n\n\tif (isset($_SESSION['sess_user_id']) && $_SESSION['sess_user_id'] === $guest_account) {\n\t\tapi_plugin_hook('nav_login_before');\n\n\t\tprint __('Logged in as') . \" <span id='user' class='user usermenuup'>\". __('guest') . \"</span></div><div><ul class='menuoptions' style='display:none;'>\" . ($auth_method != 2 ? \"<li><a href='\" . $config['url_path'] . \"index.php?login=true'>\" . __('Login as Regular User') . \"</a></li>\":\"<li><a href='#'>\" . __('Logged in a Guest') . '</a></li>');\n\n\t\tprint \"<li class='menuHr'><hr class='menu'></li>\";\n\t\tprint \"<li id='userCommunity'><a href='https://forums.cacti.net' target='_blank' rel='noopener'>\" . __('User Community') . \"</a></li>\";\n\t\tprint \"<li id='userDocumentation'><a href='https://github.com/Cacti/documentation/blob/develop/README.md' target='_blank' rel='noopener'>\" . __('Documentation') . \"</a></li>\";\n\t\tprint \"</ul>\";\n\n\t\tapi_plugin_hook('nav_login_after');\n\t} elseif (isset($_SESSION['sess_user_id']) && $using_guest_account == false) {\n\t\t$user = db_fetch_row_prepared('SELECT username, password_change, realm\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\tapi_plugin_hook('nav_login_before');\n\n\t\tprint __('Logged in as') . \" <span id='user' class='user usermenuup'>\" . html_escape($user['username']) .\n\t\t\t\"</span></div><div><ul class='menuoptions' style='display:none;'>\";\n\n\t\tprint \"<li><a href='#' class='loggedInAs' style='display:none;'>\" . __esc('Logged in as %s', $user['username']) . \"</a></li><hr class='menu'>\";\n\n\t\tprint (is_realm_allowed(20) ? \"<li><a href='\" . html_escape($config['url_path'] . 'auth_profile.php?action=edit') . \"'>\" . __('Edit Profile') . '</a></li>':'');\n\t\tprint ($user['password_change'] == 'on' && $user['realm'] == 0 ? \"<li><a href='\" . html_escape($config['url_path'] . 'auth_changepassword.php') . \"'>\" . __('Change Password') . '</a></li>':'');\n\t\tprint ((is_realm_allowed(20) || ($user['password_change'] == 'on' && $user['realm'] == 0)) ? \"<li class='menuHr'><hr class='menu'></li>\":'');\n\n\t\tif (is_realm_allowed(28)) {\n\t\t\tprint \"<li id='userCommunity'><a href='https://forums.cacti.net' target='_blank' rel='noopener'>\" . __('User Community') . '</a></li>';\n\t\t\tprint \"<li id='userDocumentation'><a href='https://github.com/Cacti/documentation/blob/develop/README.md' target='_blank' rel='noopener'>\" . __('Documentation') . '</a></li>';\n\t\t\tprint \"<li class='menuHr'><hr class='menu'></li>\";\n\t\t}\n\n\t\tprint ($auth_method > 0 && $auth_method != 2 ? \"<li><a href='\" . html_escape($config['url_path'] . 'logout.php') . \"'>\" . __('Logout') . '</a></li>':'');\n\t\tprint '</ul>';\n\n\t\tapi_plugin_hook('nav_login_after');\n\t}\n}\n\n/**\n * draw_navigation_text - determines the top header navigation text for the current page and displays it to\n *\n * @param $type - Either 'url' or 'title'\n *\n * @return - Either the navigation text or title\n */\nfunction draw_navigation_text($type = 'url') {\n\tglobal $config, $navigation;\n\n\t$navigation      = api_plugin_hook_function('draw_navigation_text', $navigation);\n\t$current_page    = get_current_page();\n\n\tif (!isempty_request_var('action')) {\n\t\tget_filter_request_var('action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([-a-zA-Z0-9_\\s]+)$/')));\n\t}\n\n\t$current_action = (isset_request_var('action') ? get_request_var('action') : '');\n\n\t// find the current page in the big array\n\tif (isset($navigation[$current_page . ':' . $current_action])) {\n\t\t$current_array = $navigation[$current_page . ':' . $current_action];\n\t} else {\n\t\t// If it's not set in the array, then default to a generic title\n\t\t$current_array = array(\n\t\t\t'mapping' => 'index.php:',\n\t\t\t'title'   => ucwords(str_replace('_', ' ', basename(get_current_page(), '.php'))),\n\t\t\t'level'   => 0\n\t\t);\n\t}\n\n\t// Extract the full breadcrumb path from the current_array\n\tif (isset($current_array['mapping'])) {\n\t\t$current_mappings = explode(',', $current_array['mapping']);\n\t} else {\n\t\t$current_mappings = array();\n\t}\n\n\t$current_nav = \"<ul id='breadcrumbs'>\";\n\t$title       = '';\n\t$nav_count   = 0;\n\n\t// resolve all mappings to build the navigation string\n\t// this process is more simple than you might think\n\t// we don't care about history as the breadcrumb is\n\t// always based upon it's parent.\n\tforeach($current_mappings as $i => $breadcrumb) {\n\t\t$url = '';\n\n\t\tif (empty($breadcrumb)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ($i == 0) {\n\t\t\t// Always use the default for level == 0\n\t\t\t$url = $navigation[basename($breadcrumb)]['url'];\n\n\t\t\tif (basename($url) == 'graph_view.php') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} elseif (isset($current_array['url']) && $current_array['url'] != '') {\n\t\t\t// Where the user specified a non-blank URL\n\t\t\t$url = $current_array['url'];\n\t\t} else {\n\t\t\t// No 'url' was specified, so parse the breadcrumb path and use it\n\t\t\t$parts = explode(':', $breadcrumb);\n\t\t\t$url = $parts[0] . (isset($parts[1]) && $parts[1] != '' ? '?action=' . $parts[1]:'');\n\t\t}\n\n\t\t// Construct the list item and anchor from the 'url' if there was one.  There should always\n\t\t// be one.\n\t\t$current_nav .= \"<li><a id='nav_$i' href='\" . (empty($url) ? '#':html_escape($url)) . \"'>\";\n\t\t$current_nav .= html_escape(resolve_navigation_variables($navigation[basename($breadcrumb)]['title']));\n\t\t$current_nav .= '</a>' . (get_selected_theme() == 'classic' ? ' > ':'') . '</li>';\n\t\t$title .= html_escape(resolve_navigation_variables($navigation[basename($breadcrumb)]['title'])) . ' > ';\n\n\t\t$nav_count++;\n\t}\n\n\t// Add a title for the current level\n\tif ($nav_count) {\n\t\t// We've already appended the full path, not the end bit\n\t\tif (isset($current_array['title'])) {\n\t\t\t$current_nav .= \"<li><a id='nav_$i' href='#'>\" . html_escape(resolve_navigation_variables($current_array['title'])) . '</a></li>';\n\t\t}\n\t} else {\n\t\t// No breadcrumb was found for the current path, make one up\n\t\t$current_array = $navigation[$current_page . ':' . $current_action];\n\t\t$url = (isset($current_array['url']) ? $current_array['url']:'');\n\n\t\tif (isset($current_array['title'])) {\n\t\t\t$current_nav  .= \"<li><a id='nav_$i' href='$url'>\" . html_escape(resolve_navigation_variables($current_array['title'])) . '</a></li>';\n\t\t}\n\t}\n\n\t// Handle Special Navigation Cases of Tree's and External Links\n\tif (isset_request_var('action') || get_nfilter_request_var('action') == 'tree_content') {\n\t\t$tree_id = 0;\n\t\t$leaf_id = 0;\n\n\t\tif (isset_request_var('node')) {\n\t\t\t$parts = explode('-', get_request_var('node'));\n\n\t\t\t// Check for tree anchor\n\t\t\tif (strpos(get_request_var('node'), 'tree_anchor') !== false) {\n\t\t\t\t$tree_id = $parts[1];\n\t\t\t\t$leaf_id = 0;\n\t\t\t} elseif (strpos(get_request_var('node'), 'tbranch') !== false) {\n\t\t\t\t// Check for branch\n\t\t\t\t$leaf_id = $parts[1];\n\t\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($leaf_id));\n\t\t\t}\n\t\t}\n\n\t\tif ($leaf_id > 0) {\n\t\t\t$leaf = db_fetch_row_prepared('SELECT host_id, title, graph_tree_id\n\t\t\t\tFROM graph_tree_items\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($leaf_id));\n\n\t\t\tif (cacti_sizeof($leaf)) {\n\t\t\t\tif ($leaf['host_id'] > 0) {\n\t\t\t\t\t$leaf_name = db_fetch_cell_prepared('SELECT description\n\t\t\t\t\t\tFROM host\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($leaf['host_id']));\n\t\t\t\t} else {\n\t\t\t\t\t$leaf_name = $leaf['title'];\n\t\t\t\t}\n\n\t\t\t\t$tree_name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\tFROM graph_tree\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($leaf['graph_tree_id']));\n\t\t\t} else {\n\t\t\t\t$leaf_name = __('Leaf');\n\t\t\t\t$tree_name = '';\n\t\t\t}\n\n\t\t\tif (isset_request_var('hgd') && get_nfilter_request_var('hgd') != '') {\n\t\t\t\t$parts = explode(':', get_nfilter_request_var('hgd'));\n\t\t\t\tinput_validate_input_number($parts[1]);\n\n\t\t\t\tif ($parts[0] == 'gt') {\n\t\t\t\t\t$leaf_sub = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\tFROM graph_templates\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($parts[1]));\n\t\t\t\t} else {\n\t\t\t\t\tif ($parts[1] > 0) {\n\t\t\t\t\t\t$leaf_sub = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\t\tFROM snmp_query\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($parts[1]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$leaf_sub = __('Non Query Based');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$leaf_sub = '';\n\t\t\t}\n\t\t} else {\n\t\t\t$leaf_name = '';\n\t\t\t$leaf_sub  = '';\n\n\t\t\tif ($tree_id > 0) {\n\t\t\t\t$tree_name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\tFROM graph_tree\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($tree_id));\n\t\t\t} else {\n\t\t\t\t$tree_name = '';\n\t\t\t}\n\t\t}\n\n\t\t$tree_title = $tree_name . ($leaf_name != '' ? ' (' . trim($leaf_name):'') . ($leaf_sub != '' ? ':' . trim($leaf_sub) . ')':($leaf_name != '' ? ')':''));\n\n\t\tif ($tree_title != '') {\n\t\t\t$current_nav .= \"<li><a id='nav_title' href='#'>\" . html_escape($tree_title) . '</a></li>';\n\t\t}\n\t} elseif (preg_match('#link.php\\?id=(\\d+)#', $_SERVER['REQUEST_URI'], $matches)) {\n\t\t$externalLinks = db_fetch_row_prepared('SELECT title, style FROM external_links WHERE id = ?', array($matches[1]));\n\t\t$title = $externalLinks['title'];\n\t\t$style = $externalLinks['style'];\n\n\t\tif ($style == 'CONSOLE') {\n\t\t\t$current_nav = \"<ul id='breadcrumbs'>\n\t\t\t\t<li>\n\t\t\t\t\t<a id='nav_0' href='\" . $config['url_path'] . \"index.php'>\" . __('Console') . '</a>' . (get_selected_theme() == 'classic' ? ' > ':'') .\n\t\t\t\t'</li>';\n\n\t\t\t$current_nav .= \"<li><a id='nav_1' href='#'>\" . __('Link %s', html_escape($title)) . '</a></li>';\n\t\t} else {\n\t\t\t$current_nav = \"<ul id='breadcrumbs'><li><a id='nav_0'>\" . html_escape($title) . '</a></li>';\n\t\t}\n\n\t\t$tree_title = '';\n\t} else {\n\t\t$tree_title = '';\n\t}\n\n\t// Finally create a navigation title\n\tif (isset($current_array['title'])) {\n\t\t$title .= html_escape(resolve_navigation_variables($current_array['title']) . ' ' . $tree_title);\n\t}\n\n\t$current_nav .= '</ul>';\n\n\tif ($type == 'url') {\n\t\treturn $current_nav;\n\t} else {\n\t\treturn $title;\n\t}\n}\n\n/**\n * resolve_navigation_variables - substitute any variables contained in the navigation text\n *\n * @param $text - the text to substitute in\n *\n * @return - the original navigation text with all substitutions made\n */\nfunction resolve_navigation_variables($text) {\n\t$graphTitle = get_graph_title(get_filter_request_var('local_graph_id'));\n\n\tif (preg_match_all(\"/\\|([a-zA-Z0-9_]+)\\|/\", $text, $matches)) {\n\t\tforeach($matches[1] as $i => $match) {\n\t\t\tswitch ($match) {\n\t\t\t\tcase 'current_graph_title':\n\t\t\t\t\t$text = str_replace('|' . $match . '|', $graphTitle, $text);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $text;\n}\n\n/**\n * get_associated_rras - returns a list of all RRAs referenced by a particular graph\n *\n * @param $local_graph_id - (int) the ID of the graph to retrieve a list of RRAs for\n *\n * @return - (array) an array containing the name and id of each RRA found\n */\nfunction get_associated_rras($local_graph_id, $sql_where = '') {\n\treturn db_fetch_assoc_prepared('SELECT DISTINCT ' . SQL_NO_CACHE . \"\n\t\tdspr.id, dsp.step, dspr.steps, dspr.rows, dspr.name, dtd.rrd_step, dspr.timespan\n\t\tFROM graph_templates_item AS gti\n\t\tLEFT JOIN data_template_rrd AS dtr\n\t\tON gti.task_item_id=dtr.id\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON dtr.local_data_id = dtd.local_data_id\n\t\tLEFT JOIN data_source_profiles AS dsp\n\t\tON dtd.data_source_profile_id=dsp.id\n\t\tLEFT JOIN data_source_profiles_rra AS dspr\n\t\tON dsp.id=dspr.data_source_profile_id\n\t\tAND dtd.local_data_id != 0\n\t\tWHERE gti.local_graph_id = ?\n\t\t$sql_where\n\t\tORDER BY dspr.steps\",\n\t\tarray($local_graph_id)\n\t);\n}\n\n/**\n * get_nearest_timespan - returns the nearest defined timespan.  Used for adding a default\n * graph timespan for data source profile rras.\n *\n * @param $timespan - (int) the timespan to fine a default for\n *\n * @return - (int) the timespan to apply for the data source profile rra value\n */\nfunction get_nearest_timespan($timespan) {\n\tglobal $timespans;\n\n\t$last = end($timespans);\n\n\tforeach($timespans as $index => $name) {\n\t\tif ($timespan > $index) {\n\t\t\t$last = $index;\n\t\t\tcontinue;\n\t\t} elseif ($timespan == $index) {\n\t\t\treturn $index;\n\t\t} else {\n\t\t\treturn $last;\n\t\t}\n\t}\n\n\treturn $last;\n}\n\n/**\n * get_browser_query_string - returns the full url, including args requested by the browser\n *\n * @return - the url requested by the browser\n */\nfunction get_browser_query_string() {\n\tif (!empty($_SERVER['REQUEST_URI'])) {\n\t\treturn sanitize_uri($_SERVER['REQUEST_URI']);\n\t} else {\n\t\treturn sanitize_uri(get_current_page() . (empty($_SERVER['QUERY_STRING']) ? '' : '?' . $_SERVER['QUERY_STRING']));\n\t}\n}\n\n/**\n * get_current_page - returns the basename of the current page in a web server friendly way\n *\n * @return - the basename of the current script file\n */\nfunction get_current_page($basename = true) {\n\tif (isset($_SERVER['SCRIPT_NAME']) && $_SERVER['SCRIPT_NAME'] != '') {\n\t\tif ($basename) {\n\t\t\treturn basename($_SERVER['SCRIPT_NAME']);\n\t\t} else {\n\t\t\treturn $_SERVER['SCRIPT_NAME'];\n\t\t}\n\t} elseif (isset($_SERVER['SCRIPT_FILENAME']) && $_SERVER['SCRIPT_FILENAME'] != '') {\n\t\tif ($basename) {\n\t\t\treturn basename($_SERVER['SCRIPT_FILENAME']);\n\t\t} else {\n\t\t\treturn $_SERVER['SCRIPT_FILENAME'];\n\t\t}\n\t} else {\n\t\tcacti_log('ERROR: unable to determine current_page');\n\t}\n\n\treturn false;\n}\n\n/**\n * get_hash_graph_template - returns the current unique hash for a graph template\n *\n * @param $graph_template_id - (int) the ID of the graph template to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_graph_template($graph_template_id, $sub_type = 'graph_template') {\n\tswitch ($sub_type) {\n\t\tcase 'graph_template':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_templates WHERE id = ?', array($graph_template_id));\n\t\t\tbreak;\n\t\tcase 'graph_template_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_templates_item WHERE id = ?', array($graph_template_id));\n\t\t\tbreak;\n\t\tcase 'graph_template_input':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_template_input WHERE id = ?', array($graph_template_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (preg_match('/[a-fA-F0-9]{32}/', $hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_template - returns the current unique hash for a data template\n *\n * @param $graph_template_id - (int) the ID of the data template to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_template($data_template_id, $sub_type = 'data_template') {\n\tswitch ($sub_type) {\n\t\tcase 'data_template':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_template WHERE id = ?', array($data_template_id));\n\t\t\tbreak;\n\t\tcase 'data_template_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_template_rrd WHERE id = ?', array($data_template_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (preg_match('/[a-fA-F0-9]{32}/', $hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_input - returns the current unique hash for a data input method\n *\n * @param $graph_template_id - (int) the ID of the data input method to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_input($data_input_id, $sub_type = 'data_input_method') {\n\tswitch ($sub_type) {\n\t\tcase 'data_input_method':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_input WHERE id = ?', array($data_input_id));\n\t\t\tbreak;\n\t\tcase 'data_input_field':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_input_fields WHERE id = ?', array($data_input_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (preg_match('/[a-fA-F0-9]{32}/', $hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_cdef - returns the current unique hash for a cdef\n *\n * @param $graph_template_id - (int) the ID of the cdef to return a hash for\n * @param $sub_type (optional) return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_cdef($cdef_id, $sub_type = 'cdef') {\n\tif (!is_numeric($cdef_id)) {\n\t\treturn generate_hash();\n\t}\n\n\tswitch ($sub_type) {\n\t\tcase 'cdef':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM cdef WHERE id = ?', array($cdef_id));\n\t\t\tbreak;\n\t\tcase 'cdef_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM cdef_items WHERE id = ?', array($cdef_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_gprint - returns the current unique hash for a gprint preset\n *\n * @param $graph_template_id - (int) the ID of the gprint preset to return a hash for\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_gprint($gprint_id) {\n\t$hash = db_fetch_cell_prepared('SELECT hash FROM graph_templates_gprint WHERE id = ?', array($gprint_id));\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * returns the current unique hash for a vdef\n *\n * @param $graph_template_id - the ID of the vdef to return a hash for\n * @param $sub_type          - return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_vdef($vdef_id, $sub_type = \"vdef\") {\n\tswitch ($sub_type) {\n\t\tcase 'vdef':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM vdef WHERE id = ?', array($vdef_id));\n\t\t\tbreak;\n\t\tcase 'vdef_item':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM vdef_items WHERE id = ?', array($vdef_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_source_profile - returns the current unique hash for a vdef\n *\n * @param $data_source_profile_id - the ID of the data_source_profile to return a hash for\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_source_profile($data_source_profile_id) {\n\t$hash = db_fetch_cell_prepared('SELECT hash FROM data_source_profiles WHERE id = ?', array($data_source_profile_id));\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_host_template - returns the current unique hash for a gprint preset\n *\n * @param $host_template_id - the ID of the host template to return a hash for\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_host_template($host_template_id) {\n\t$hash = db_fetch_cell_prepared('SELECT hash FROM host_template WHERE id = ?', array($host_template_id));\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_data_query - returns the current unique hash for a data query\n *\n * @param $graph_template_id - the ID of the data query to return a hash for\n * @param $sub_type return the hash for a particular subtype of this type\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction get_hash_data_query($data_query_id, $sub_type = 'data_query') {\n\tswitch ($sub_type) {\n\t\tcase 'data_query':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tcase 'data_query_graph':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query_graph WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tcase 'data_query_sv_data_source':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query_graph_rrd_sv WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tcase 'data_query_sv_graph':\n\t\t\t$hash = db_fetch_cell_prepared('SELECT hash FROM snmp_query_graph_sv WHERE id = ?', array($data_query_id));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn generate_hash();\n\t\t\tbreak;\n\t}\n\n\tif (strlen($hash) == 32 && ctype_xdigit($hash)) {\n\t\treturn $hash;\n\t} else {\n\t\treturn generate_hash();\n\t}\n}\n\n/**\n * get_hash_version - returns the item type and cacti version in a hash format\n *\n * @param $type - the type of item to represent ('graph_template','data_template',\n *   'data_input_method','cdef','vdef','gprint_preset','data_query','host_template')\n *\n * @return - a 24-bit hexadecimal hash (8-bits for type, 16-bits for version)\n */\nfunction get_hash_version($type) {\n\tglobal $hash_type_codes, $cacti_version_codes, $config;\n\n\treturn $hash_type_codes[$type] . $cacti_version_codes[CACTI_VERSION];\n}\n\n/**\n * generate_hash - generates a new unique hash\n *\n * @return - a 128-bit, hexadecimal hash\n */\nfunction generate_hash() {\n\treturn md5(session_id() . microtime() . rand(0,1000));\n}\n\n/**\n * debug_log_insert_section_start - creates a header item for breaking down the debug log\n *\n * @param $type - the 'category' or type of debug message\n * @param $text - section header\n */\nfunction debug_log_insert_section_start($type, $text, $allowcopy = false) {\n\t$copy_prefix = '';\n\t$copy_dataid = '';\n\tif ($allowcopy) {\n\t\t$uid = generate_hash();\n\t\t$copy_prefix   = '<div class=\\'cactiTableButton debug\\'><span><a class=\\'linkCopyDark cactiTableCopy\\' id=\\'copyToClipboard' . $uid . '\\'>' . __esc('Copy') . '</a></span></div>';\n\t\t$copy_dataid = ' id=\\'clipboardData'.$uid.'\\'';\n\t\t$copy_headerid = ' id=\\'clipboardHeader'.$uid.'\\'';\n\t}\n\n\tdebug_log_insert($type, '<table class=\\'cactiTable debug\\'' . $copy_headerid . '><tr class=\\'tableHeader\\'><td>' . html_escape($text) . $copy_prefix . '</td></tr><tr><td style=\\'padding:0px;\\'><table style=\\'display:none;\\'' . $copy_dataid . '><tr><td><div style=\\'font-family: monospace;\\'>');\n}\n\n/**\n * debug_log_insert_section_end - finalizes the header started with the start function\n *\n * @param $type - the 'category' or type of debug message\n */\nfunction debug_log_insert_section_end($type) {\n\tdebug_log_insert($type, \"</div></td></tr></table></td></tr></td></table>\");\n}\n\n/**\n * debug_log_insert - inserts a line of text into the debug log\n *\n * @param $type - the 'category' or type of debug message\n * @param $text - the actual debug message\n */\nfunction debug_log_insert($type, $text) {\n\tglobal $config;\n\n\tif ($config['poller_id'] == 1 || isset($_SESSION)) {\n\t\tif (!isset($_SESSION['debug_log'][$type])) {\n\t\t\t$_SESSION['debug_log'][$type] = array();\n\t\t}\n\n\t\tarray_push($_SESSION['debug_log'][$type], $text);\n\t} else {\n\t\tif (!isset($config['debug_log'][$type])) {\n\t\t\t$config['debug_log'][$type] = array();\n\t\t}\n\n\t\tarray_push($config['debug_log'][$type], $text);\n\t}\n}\n\n/**\n * debug_log_clear - clears the debug log for a particular category\n *\n * @param $type - the 'category' to clear the debug log for. omitting this argument\n *   implies all categories\n */\nfunction debug_log_clear($type = '') {\n\tif ($type == '') {\n\t\tkill_session_var('debug_log');\n\t} else {\n\t\tif (isset($_SESSION['debug_log'])) {\n\t\t\tunset($_SESSION['debug_log'][$type]);\n\t\t}\n\t}\n}\n\n/**\n * debug_log_return - returns the debug log for a particular category\n *\n * @param $type - the 'category' to return the debug log for.\n *\n * @return - the full debug log for a particular category\n */\nfunction debug_log_return($type) {\n\t$log_text = '';\n\n\tif ($type == 'new_graphs') {\n\t\tif (isset($_SESSION['debug_log'][$type])) {\n\t\t\t$log_text .= \"<table style='width:100%;'>\";\n\t\t\tfor ($i=0; $i<cacti_count($_SESSION['debug_log'][$type]); $i++) {\n\t\t\t\t$log_text .= '<tr><td>' . $_SESSION['debug_log'][$type][$i] . '</td></tr>';\n\t\t\t}\n\t\t\t$log_text .= '</table>';\n\t\t}\n\t} else {\n\t\tif (isset($_SESSION['debug_log'][$type])) {\n\t\t\t$log_text .= \"<table style='width:100%;'>\";\n\t\t\tforeach($_SESSION['debug_log'][$type] as $key => $val) {\n\t\t\t\t$log_text .= \"<tr><td>$val</td></tr>\\n\";\n\t\t\t\tunset($_SESSION['debug_log'][$type][$key]);\n\t\t\t}\n\t\t\t$log_text .= '</table>';\n\t\t}\n\t}\n\n\treturn $log_text;\n}\n\n/**\n * sanitize_search_string - cleans up a search string submitted by the user to be passed\n * to the database. NOTE: some of the code for this function came from the phpBB project.\n *\n * @param $string - the original raw search string\n *\n * @return - the sanitized search string\n */\nfunction sanitize_search_string($string) {\n\tstatic $drop_char_match = array('(',')','^', '$', '<', '>', '`', '\\'', '\"', '|', ',', '?', '+', '[', ']', '{', '}', '#', ';', '!', '=', '*');\n\tstatic $drop_char_replace = array('','',' ', ' ', ' ', ' ', '', '', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ');\n\n\t/* Replace line endings by a space */\n\t$string = preg_replace('/[\\n\\r]/is', ' ', $string);\n\n\t/* HTML entities like &nbsp; */\n\t$string = preg_replace('/\\b&[a-z]+;\\b/', ' ', $string);\n\n\t/* Remove URL's */\n\t$string = preg_replace('/\\b[a-z0-9]+:\\/\\/[a-z0-9\\.\\-]+(\\/[a-z0-9\\?\\.%_\\-\\+=&\\/]+)?/', ' ', $string);\n\n\t/* Filter out strange characters like ^, $, &, change \"it's\" to \"its\" */\n\tfor($i = 0; $i < cacti_count($drop_char_match); $i++) {\n\t\t$string =  str_replace($drop_char_match[$i], $drop_char_replace[$i], $string);\n\t}\n\n\treturn $string;\n}\n\n/**\n * cleans up a URI, e.g. from REQUEST_URI and/or QUERY_STRING\n * in case of XSS attack, expect the result to be broken\n * we do NOT sanitize in a way, that attacks are converted to valid HTML\n * it is ok, when the result is broken but the application stays alive\n *\n * @param string $uri   - the uri to be sanitized\n *\n * @return string    - the sanitized uri\n */\nfunction sanitize_uri($uri) {\n\tstatic $drop_char_match =   array('^', '$', '<', '>', '`', \"'\", '\"', '|', '+', '[', ']', '{', '}', ';', '!', '(', ')');\n\tstatic $drop_char_replace = array( '', '',  '',  '',  '',  '',   '',  '',  '',  '',  '',  '',  '',  '',  '');\n\n\tif (strpos($uri, 'graph_view.php')) {\n\t\tif (!strpos($uri, 'action=')) {\n\t\t\t$uri = $uri . (strpos($uri, '?') ? '&':'?') . 'action=' . get_nfilter_request_var('action');\n\t\t}\n\t}\n\n\treturn str_replace($drop_char_match, $drop_char_replace, strip_tags(urldecode($uri)));\n}\n\n/**\n * Checks to see if a string is base64 encoded\n *\n * @param string $data   - the string to be validated\n *\n * @return boolean    - true is the string is base64 otherwise false\n */\nfunction is_base64_encoded($data) {\n\t// Perform a simple check first\n\tif (!preg_match('/^[a-zA-Z0-9\\/\\r\\n+]*={0,2}$/', $data)) {\n\t\treturn false;\n\t}\n\n\t// Now test with the built-in function\n\t$ndata = base64_decode($data, true);\n\tif ($ndata === false) {\n\t\treturn false;\n\t}\n\n\t// Do a re-encode test and compare\n\tif (base64_encode($ndata) != $data) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * cleans up a CDEF/VDEF string\n * the CDEF/VDEF must have passed all magic string replacements beforehand\n *\n * @param string $cdef   - the CDEF/VDEF to be sanitized\n *\n * @return string    - the sanitized CDEF/VDEF\n */\nfunction sanitize_cdef($cdef) {\n\tstatic $drop_char_match =   array('^', '$', '<', '>', '`', '\\'', '\"', '|', '[', ']', '{', '}', ';', '!');\n\tstatic $drop_char_replace = array( '', '',  '',  '',  '',  '',   '',  '',  '',  '',  '',  '',  '',  '');\n\n\treturn str_replace($drop_char_match, $drop_char_replace, $cdef);\n}\n\n/**\n * verifies all selected items are numeric to guard against injection\n *\n * @param array $items   - an array of serialized items from a post\n *\n * @return array      - the sanitized selected items array\n */\nfunction sanitize_unserialize_selected_items($items) {\n\tif ($items != '') {\n\t\t$unstripped = stripslashes($items);\n\n\t\t// validate that sanitized string is correctly formatted\n\t\tif (preg_match('/^a:[0-9]+:{/', $unstripped) && !preg_match('/(^|;|{|})O:\\+?[0-9]+:\"/', $unstripped)) {\n\t\t\t$items = unserialize($unstripped);\n\n\t\t\tif (is_array($items)) {\n\t\t\t\tforeach ($items as $item) {\n\t\t\t\t\tif (is_array($item)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} elseif (!is_numeric($item) && ($item != '')) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\treturn $items;\n}\n\nfunction cacti_escapeshellcmd($string) {\n\tglobal $config;\n\n\tif ($string == '') {\n\t\treturn $string;\n\t}\n\n\tif ($config['cacti_server_os'] == 'unix') {\n\t\treturn escapeshellcmd($string);\n\t} else {\n\t\t$replacements = \"#&;`|*?<>^()[]{}$\\\\\";\n\n\t\tfor ($i=0; $i < strlen($replacements); $i++) {\n\t\t\t$string = str_replace($replacements[$i], ' ', $string);\n\t\t}\n\n\t\treturn $string;\n\t}\n}\n\n/**\n * mimics escapeshellarg, even for windows\n *\n * @param $string \t- the string to be escaped\n * @param $quote \t- true: do NOT remove quotes from result; false: do remove quotes\n *\n * @return\t\t\t- the escaped [quoted|unquoted] string\n */\nfunction cacti_escapeshellarg($string, $quote = true) {\n\tglobal $config;\n\n\tif ($string == '') {\n\t\treturn $string;\n\t}\n\n\t/* we must use an apostrophe to escape community names under Unix in case the user uses\n\tcharacters that the shell might interpret. the ucd-snmp binaries on Windows flip out when\n\tyou do this, but are perfectly happy with a quotation mark. */\n\tif ($config['cacti_server_os'] == 'unix') {\n\t\t$string = escapeshellarg($string);\n\t\tif ($quote) {\n\t\t\treturn $string;\n\t\t} else {\n\t\t\t# remove first and last char\n\t\t\treturn substr($string, 1, (strlen($string)-2));\n\t\t}\n\t} else {\n\t\t/* escapeshellarg takes care of different quotation for both linux and windows,\n\t\t * but unfortunately, it blanks out percent signs\n\t\t * we want to keep them, e.g. for GPRINT format strings\n\t\t * so we need to create our own escapeshellarg\n\t\t * on windows, command injection requires to close any open quotation first\n\t\t * so we have to escape any quotation here */\n\t\tif (substr_count($string, CACTI_ESCAPE_CHARACTER)) {\n\t\t\t$string = str_replace(CACTI_ESCAPE_CHARACTER, \"\\\\\" . CACTI_ESCAPE_CHARACTER, $string);\n\t\t}\n\n\t\t/* ... before we add our own quotation */\n\t\tif ($quote) {\n\t\t\treturn CACTI_ESCAPE_CHARACTER . $string . CACTI_ESCAPE_CHARACTER;\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t}\n}\n\n/**\n * set a page refresh in Cacti through a callback\n *\n * @param $refresh - an array containing the page, seconds, and logout\n *\n * @return         - nill\n */\nfunction set_page_refresh($refresh) {\n\tif (isset($refresh['seconds'])) {\n\t\t$_SESSION['refresh']['seconds'] = $refresh['seconds'];\n\t}\n\n\tif (read_config_option('auth_cache_enabled') == 'on' && isset($_SESSION['cacti_remembers']) && $_SESSION['cacti_remembers'] == true) {\n\t\t$_SESSION['refresh']['logout'] = 'false';\n\t} elseif (isset($refresh['logout'])) {\n\t\tif ($refresh['logout'] == 'true' || $refresh['logout'] === true) {\n\t\t\t$_SESSION['refresh']['logout'] = 'true';\n\t\t} else {\n\t\t\t$_SESSION['refresh']['logout'] = 'false';\n\t\t}\n\t} else {\n\t\t$_SESSION['refresh']['logout'] = 'true';\n\t}\n\n\tif (isset($refresh['page'])) {\n\t\t$_SESSION['refresh']['page'] = $refresh['page'];\n\t}\n}\n\nfunction bottom_footer() {\n\tglobal $config, $no_session_write;\n\n\tinclude_once($config['base_path'] . '/include/global_session.php');\n\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/bottom_footer.php');\n\t}\n\n\t/* we use this session var to store field values for when a save fails,\n \t   this way we can restore the field's previous values. we reset it here, because\n\t   they only need to be stored for a single page\n\t*/\n\tkill_session_var('sess_field_values');\n\n\t/* make sure the debug log doesn't get too big */\n\tdebug_log_clear();\n\n\t/* close the session */\n\tif (array_search(get_current_page(), $no_session_write) === false) {\n\t\tcacti_session_close();\n\t}\n\n\t/* close the database connection */\n\tdb_close();\n}\n\nfunction top_header() {\n\tglobal $config;\n\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/top_header.php');\n\t}\n}\n\nfunction top_graph_header() {\n\tglobal $config;\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/top_graph_header.php');\n\t}\n}\n\nfunction general_header() {\n\tglobal $config;\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'true') {\n\t\tinclude_once($config['base_path'] . '/include/top_general_header.php');\n\t}\n}\n\nfunction appendHeaderSuppression($url) {\n\tif (strpos($url, 'header=false') < 0) {\n\t\treturn $url . (strpos($url, '?') ? '&':'?') . 'header=false';\n\t}\n\n\treturn $url;\n}\n\nfunction admin_email($subject, $message) {\n\tif (read_config_option('admin_user') > 0) {\n\t\tif (read_config_option('notify_admin') == 'on') {\n\t\t\t$admin_details = db_fetch_row_prepared('SELECT full_name, email_address\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(read_config_option('admin_user')));\n\n\t\t\tif (cacti_sizeof($admin_details)) {\n\t\t\t\t$email = read_config_option('settings_from_email');\n\t\t\t\t$name  = read_config_option('settings_from_name');\n\n\t\t\t\tif ($name != '') {\n\t\t\t\t\t$from = '\"' . $name . '\" <' . $email . '>';\n\t\t\t\t} else {\n\t\t\t\t\t$from = $email;\n\t\t\t\t}\n\n\t\t\t\tif ($admin_details['email_address'] != '') {\n\t\t\t\t\tif ($admin_details['full_name'] != '') {\n\t\t\t\t\t\t$to = '\"' . $admin_details['full_name'] . '\" <' . $admin_details['email_address'] . '>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$to = $admin_details['email_address'];\n\t\t\t\t\t}\n\n\t\t\t\t\tsend_mail($to, $from, $subject, $message, '', '', true);\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log('WARNING: Primary Admin account does not have an email address!  Unable to send administrative Email.', false, 'SYSTEM');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcacti_log('WARNING: Primary Admin account set to an invalid user!  Unable to send administrative Email.', false, 'SYSTEM');\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log('WARNING: Primary Admin account notifications disabled!  Unable to send administrative Email.', false, 'SYSTEM');\n\t\t}\n\t} else {\n\t\tcacti_log('WARNING: Primary Admin account not set!  Unable to send administrative Email.', false, 'SYSTEM');\n\t}\n}\n\nfunction send_mail($to, $from, $subject, $body, $attachments = '', $headers = '', $html = false) {\n\t$fromname = '';\n\tif (is_array($from)) {\n\t\t$fromname = $from[1];\n\t\t$from     = $from[0];\n\t}\n\n\tif ($from == '') {\n\t\t$from     = read_config_option('settings_from_email');\n\t\t$fromname = read_config_option('settings_from_name');\n\t} elseif ($fromname == '') {\n\t\t$full_name = db_fetch_cell_prepared('SELECT full_name\n\t\t\tFROM user_auth\n\t\t\tWHERE email_address = ?',\n\t\t\tarray($from));\n\n\t\tif (empty($full_name)) {\n\t\t\t$fromname = $from;\n\t\t} else {\n\t\t\t$fromname = $full_name;\n\t\t}\n\t}\n\n\t$from = array(0 => $from, 1 => $fromname);\n\treturn mailer($from, $to, '', '', '', $subject, $body, '', $attachments, $headers, $html);\n}\n\n/**\n * mailer - function to send mails to users\n *\n * @param $from        - single contact (see below)\n * @param $to          - single or multiple contacts (see below)\n * @param $cc          - none, single or multiple contacts (see below)\n * @param $bcc         - none, single or multiple contacts (see below)\n * @param $replyto     - none, single or multiple contacts (see below)\n *                       note that this value is used when hitting reply (overriding the default of using from)\n * @param $subject     - the email subject\n * @param $body        - the email body, in HTML format.  If content_text is not set, the function will attempt to extract\n *                       from the HTML format.\n * @param $body_text   - the email body in TEXT format.  If set, it will override the stripping tags method\n * @param $attachments - the emails attachments as an array\n * @param $headers     - an array of name value pairs representing custom headers.\n * @param $html        - if set to true, html is the default, otherwise text format will be used\n *\n * For contact parameters, they can accept arrays containing zero or more values in the forms of:\n *     'email@email.com,email2@email.com,email3@email.com'\n *     array('email1@email.com' => 'My email', 'email2@email.com' => 'Your email', 'email3@email.com' => 'Whose email')\n *     array(array('email' => 'email1@email.com', 'name' => 'My email'), array('email' => 'email2@email.com',\n *         'name' => 'Your email'), array('email' => 'email3@email.com', 'name' => 'Whose email'))\n *\n * The $from field will only use the first contact specified.  If no contact is provided for $replyto\n * then $from is used for that too. If $from is empty, it will default to cacti@<server> or if no server name can\n * be found, it will use cacti@cacti.net\n *\n * The $attachments parameter may either be a single string, or a list of attachments\n * either as strings or an array.  The array can have the following keys:\n *\n * filename    : name of the file to attach (display name for graphs)\n * display     : displayed name of the attachment\n * mime_type   : MIME type to be set against the attachment.  If blank or missing mailer will attempt to auto detect\n * attachment  : String containing attachment for image-based attachments (<GRAPH> or <GRAPH:#> activates graph mode\n *               and requires $body parameter is HTML containing one of those values)\n * inline      : Whether to attach 'inline' (default for graph mode) or as 'attachment' (default for all others)\n * encoding    : Encoding type, normally base64\n */\nfunction mailer($from, $to, $cc, $bcc, $replyto, $subject, $body, $body_text = '', $attachments = '', $headers = '', $html = true) {\n\tglobal $config, $cacti_locale, $mail_methods;\n\n\trequire_once($config['include_path'] . '/vendor/phpmailer/src/Exception.php');\n\trequire_once($config['include_path'] . '/vendor/phpmailer/src/PHPMailer.php');\n\trequire_once($config['include_path'] . '/vendor/phpmailer/src/SMTP.php');\n\n\t$start_time = microtime(true);\n\n\t// Create the PHPMailer instance\n\t$mail = new PHPMailer\\PHPMailer\\PHPMailer;\n\n\t// Set a reasonable timeout of 5 seconds\n\t$timeout = read_config_option('settings_smtp_timeout');\n\tif (empty($timeout) || $timeout < 0 || $timeout > 300) {\n\t\t$mail->Timeout = 5;\n\t} else {\n\t\t$mail->Timeout = $timeout;\n\t}\n\n\t$langparts = explode('-', $cacti_locale);\n\tif (file_exists($config['include_path'] . '/vendor/phpmailer/language/phpmailer.lang-' . $langparts[0] . '.php')) {\n\t\t$mail->setLanguage($langparts[0], $config['include_path'] . '/vendor/phpmailer/language/');\n\t}\n\n\t$how = read_config_option('settings_how');\n\tif ($how < 0 || $how > 2) {\n\t\t$how = 0;\n\t}\n\n\tif ($how == 0) {\n\t\t$mail->isMail();\n\t} elseif ($how == 1) {\n\t\t$mail->Sendmail = read_config_option('settings_sendmail_path');\n\t\t$mail->isSendmail();\n\t} elseif ($how == 2) {\n\t\t$mail->isSMTP();\n\t\t$mail->Host     = read_config_option('settings_smtp_host');\n\t\t$mail->Port     = read_config_option('settings_smtp_port');\n\n\t\tif (read_config_option('settings_smtp_username') != '') {\n\t\t\t$mail->SMTPAuth = true;\n\t\t\t$mail->Username = read_config_option('settings_smtp_username');\n\n\t\t\tif (read_config_option('settings_smtp_password') != '') {\n\t\t\t\t$mail->Password = read_config_option('settings_smtp_password');\n\t\t\t}\n\t\t} else {\n\t\t\t$mail->SMTPAuth = false;\n\t\t}\n\n\t\t$secure  = read_config_option('settings_smtp_secure');\n\t\tif (!empty($secure) && $secure != 'none') {\n\t\t\t$mail->SMTPSecure = true;\n\t\t\tif (substr_count($mail->Host, ':') == 0) {\n\t\t\t\t$mail->Host = $secure . '://' . $mail->Host;\n\t\t\t}\n\t\t} else {\n\t\t\t$mail->SMTPAutoTLS = false;\n\t\t\t$mail->SMTPSecure = false;\n\t\t}\n\t}\n\n\t/* perform data substitution */\n\tif (strpos($subject, '|date_time|') !== false) {\n\t\t$date = read_config_option('date');\n\t\tif (!empty($date)) {\n\t\t\t$time = strtotime($date);\n\t\t} else {\n\t\t\t$time = time();\n\t\t}\n\n\t\t$subject = str_replace('|date_time|', date(CACTI_DATE_TIME_FORMAT, $time), $subject);\n\t}\n\n\t/*\n\t * Set the from details using the variable passed in\n\t * - if name is blank, use setting's name\n\t * - if email is blank, use setting's email, otherwise default to\n\t *   cacti@<server> or cacti@cacti.net if no known server name\n\t */\n\t$from = parse_email_details($from, 1);\n\n\t// from name was empty, use value in settings\n\tif (empty($from['name'])) {\n\t\t$from['name'] = read_config_option('settings_from_name');\n\t}\n\n\t// from email was empty, use email in settings\n\tif (empty($from['email'])) {\n\t\t$from['email'] = read_config_option('settings_from_email');\n\t}\n\n\tif (empty($from['email'])) {\n\t\tif (isset($_SERVER['HOSTNAME'])) {\n\t\t\t$from['email'] = 'Cacti@' . $_SERVER['HOSTNAME'];\n\t\t} else {\n\t\t\t$from['email'] = 'Cacti@cacti.net';\n\t\t}\n\n\t\tif (empty($from['name'])) {\n\t\t\t$from['name'] = 'Cacti';\n\t\t}\n\t}\n\n\t// Sanity test the from email\n\tif (!filter_var($from['email'], FILTER_VALIDATE_EMAIL)) {\n\t\treturn 'Bad email address format. Invalid from email address ' . $from['email'];\n\t}\n\n\t$fromText  = add_email_details(array($from), $result, array($mail, 'setFrom'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($fromText, $mail->ErrorInfo);\n\t}\n\n\t// Convert $to variable to proper array structure\n\t$to        = parse_email_details($to);\n\t$toText    = add_email_details($to, $result, array($mail, 'addAddress'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($toText, $mail->ErrorInfo);\n\t}\n\n\t$cc        = parse_email_details($cc);\n\t$ccText    = add_email_details($cc, $result, array($mail, 'addCC'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($ccText, $mail->ErrorInfo);\n\t}\n\n\t$bcc       = parse_email_details($bcc);\n\t$bccText   = add_email_details($bcc, $result, array($mail, 'addBCC'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($bccText, $mail->ErrorInfo);\n\t}\n\n\t// This is a failsafe, should never happen now\n\tif (!(cacti_sizeof($to) || cacti_sizeof($cc) || cacti_sizeof($bcc))) {\n\t\tcacti_log('ERROR: No recipient address set!!', false, 'MAILER');\n\t\tcacti_debug_backtrace('MAILER ERROR');\n\n\t\treturn __('Mailer Error: No recipient address set!!<br>If using the <i>Test Mail</i> link, please set the <b>Alert e-mail</b> setting.');\n\t}\n\n\t$replyto   = parse_email_details($replyto);\n\t$replyText = add_email_details($replyto, $result, array($mail, 'addReplyTo'));\n\n\tif ($result == false) {\n\t\treturn record_mailer_error($replyText, $mail->ErrorInfo);\n\t}\n\n\t$body = str_replace('<SUBJECT>', $subject,   $body);\n\t$body = str_replace('<TO>',      $toText,    $body);\n\t$body = str_replace('<CC>',      $ccText,    $body);\n\t$body = str_replace('<FROM>',    $fromText,  $body);\n\t$body = str_replace('<REPLYTO>', $replyText, $body);\n\n\t$body_text = str_replace('<SUBJECT>', $subject,   $body_text);\n\t$body_text = str_replace('<TO>',      $toText,    $body_text);\n\t$body_text = str_replace('<CC>',      $ccText,    $body_text);\n\t$body_text = str_replace('<FROM>',    $fromText,  $body_text);\n\t$body_text = str_replace('<REPLYTO>', $replyText, $body_text);\n\n\t// Set the subject\n\t$mail->Subject = $subject;\n\n\t// Support i18n\n\t$mail->CharSet = 'UTF-8';\n\t$mail->Encoding = 'base64';\n\n\t// Set the wordwrap limits\n\t$wordwrap = read_config_option('settings_wordwrap');\n\tif ($wordwrap == '') {\n\t\t$wordwrap = 76;\n\t} elseif ($wordwrap > 9999) {\n\t\t$wordwrap = 9999;\n\t} elseif ($wordwrap < 0) {\n\t\t$wordwrap = 76;\n\t}\n\n\t$mail->WordWrap = $wordwrap;\n\t$mail->setWordWrap();\n\n\tif (!$html) {\n\t\t$mail->ContentType = 'text/plain';\n\t} else {\n\t\t$mail->ContentType = 'text/html';\n\t}\n\n\t$i = 0;\n\n\t// Handle Graph Attachments\n\tif (!empty($attachments) && !is_array($attachments)) {\n\t\t$attachments = array('attachment' => $attachments);\n\t}\n\n\tif (is_array($attachments) && cacti_sizeof($attachments)) {\n\t\t$graph_mode = (substr_count($body, '<GRAPH>') > 0);\n\t\t$graph_ids = (substr_count($body, '<GRAPH:') > 0);\n\n\t\t$default_opts = array(\n\t\t\t// MIME type to be set against the attachment\n\t\t\t'mime_type'  => '',\n\t\t\t// Display name of the attachment\n\t\t\t'filename'    => '',\n\t\t\t// String containing attachment for image-based attachments\n\t\t\t'attachment' => '',\n\t\t\t// Whether to attach inline or as attachment\n\t\t\t'inline'     => ($graph_mode || $graph_ids) ? 'inline' : 'attachment',\n\t\t\t// Encoding type, normally base64\n\t\t\t'encoding'   => 'base64',\n\t\t);\n\n\t\tforeach($attachments as $attachment) {\n\t\t\tif (!is_array($attachment)) {\n\t\t\t\t$attachment = array('attachment' => $attachment);\n\t\t\t}\n\n\t\t\tforeach ($default_opts as $opt_name => $opt_default) {\n\t\t\t\tif (!array_key_exists($opt_name, $attachment)) {\n\t\t\t\t\t$attachment[$opt_name] = $opt_default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!empty($attachment['attachment'])) {\n\t\t\t\t/* get content id and create attachment */\n\t\t\t\t$cid = getmypid() . '_' . $i . '@' . 'localhost';\n\n\t\t\t\tif (empty($attachment['filename']) && file_exists($attachment['attachment'])) {\n\t\t\t\t\t$attachment['filename'] = $attachment['attachment'];\n\t\t\t\t}\n\n\t\t\t\t/* attempt to attach */\n\t\t\t\tif (!($graph_mode || $graph_ids)) {\n\t\t\t\t\tif (!empty($attachment['attachment']) && @file_exists($attachment['attachment'])) {\n\t\t\t\t\t\t$result = $mail->addAttachment($attachment['attachment'], $attachment['filename'], $attachment['encoding'], $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$result = $mail->addStringAttachment($attachment['attachment'], $attachment['filename'], 'base64', $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!empty($attachment['attachment']) && @file_exists($attachment['attachment'])) {\n\t\t\t\t\t\t$result = $mail->addEmbeddedImage($attachment['attachment'], $cid, $attachment['filename'], $attachment['encoding'], $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$result = $mail->addStringEmbeddedImage($attachment['attachment'], $cid, $attachment['filename'], 'base64', $attachment['mime_type'], $attachment['inline']);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($result == false) {\n\t\t\t\t\tcacti_log('ERROR: ' . $mail->ErrorInfo, false, 'MAILER');\n\t\t\t\t\treturn $mail->ErrorInfo;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t\tif ($graph_mode) {\n\t\t\t\t\t$body = str_replace('<GRAPH>', \"<br><br><img src='cid:$cid'>\", $body);\n\t\t\t\t} elseif ($graph_ids) {\n\t\t\t\t\t/* handle the body text */\n\t\t\t\t\tswitch ($attachment['inline']) {\n\t\t\t\t\t\tcase 'inline':\n\t\t\t\t\t\t\t$body = str_replace('<GRAPH:' . $attachment['local_graph_id'] . ':' . $attachment['timespan'] . '>', \"<img src='cid:$cid' >\", $body);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\t$body = str_replace('<GRAPH:' . $attachment['local_graph_id'] . ':' . $attachment['timespan'] . '>', '', $body);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* process custom headers */\n\tif (is_array($headers) && cacti_sizeof($headers)) {\n\t\tforeach($headers as $name => $value) {\n\t\t\t$mail->addCustomHeader($name, $value);\n\t\t}\n\t}\n\n\t// Set both html and non-html bodies\n\t$brs = array('<br>', '<br />', '</br>');\n\tif ($html) {\n\t\t$body  = $body . '<br>';\n\t}\n\n\tif ($body_text == '') {\n\t\t$body_text = strip_tags(str_ireplace($brs, \"\\n\", $body));\n\t}\n\n\t$mail->isHTML($html);\n\t$mail->Body = ($html ? $body : $body_text);\n\tif ($html && $body_text != '') {\n\t\t$mail->AltBody = $body_text;\n\t}\n\n\t$result   = $mail->send();\n\t$error    = $mail->ErrorInfo; //$result ? '' : $mail->ErrorInfo;\n\t$method   = $mail_methods[intval(read_config_option('settings_how'))];\n\t$rtype    = $result ? 'INFO' : 'WARNING';\n\t$rmsg     = $result ? 'successfully sent' : 'failed';\n\t$end_time = microtime(true);\n\n\tif ($error != '') {\n\t\t$message = sprintf(\"%s: Mail %s via %s from '%s', to '%s', cc '%s', and took %2.2f seconds, Subject '%s'%s\",\n\t\t\t$rtype, $rmsg, $method, $fromText, $toText, $ccText, ($end_time - $start_time), $subject,\n\t\t\t\", Error: $error\");\n\t} else {\n\t\t$message = sprintf(\"%s: Mail %s via %s from '%s', to '%s', cc '%s', and took %2.2f seconds, Subject '%s'\",\n\t\t\t$rtype, $rmsg, $method, $fromText, $toText, $ccText, ($end_time - $start_time), $subject);\n\t}\n\n\tcacti_log($message, false, 'MAILER');\n\tif ($result == false) {\n\t\tcacti_log(cacti_debug_backtrace($rtype), false, 'MAILER');\n\t}\n\n\treturn $error;\n}\n\nfunction record_mailer_error($retError, $mailError) {\n\t$errorInfo = empty($retError) ? $mailError : $retError;\n\tcacti_log('ERROR: ' . $errorInfo, false, 'CMDPHP MAILER');\n\tcacti_debug_backtrace('MAILER ERROR');\n\treturn $errorInfo;\n}\n\nfunction add_email_details($emails, &$result, callable $addFunc) {\n\t$arrText = array();\n\n\tforeach ($emails as $e) {\n\t\tif (!empty($e['email'])) {\n\t\t\t//if (is_callable($addFunc)) {\n\t\t\tif (!empty($addFunc)) {\n\t\t\t\t$result = $addFunc($e['email'], $e['name']);\n\t\t\t\tif (!$result) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$arrText[] = create_emailtext($e);\n\t\t} elseif (!empty($e['name'])) {\n\t\t\t$result = false;\n\t\t\treturn 'Bad email format, name but no address: ' . $e['name'];\n\t\t}\n\t}\n\n\t$text = implode(',', $arrText);\n\t//print \"add_email_sw_details(): $text\\n\";\n\treturn $text;\n}\n\nfunction parse_email_details($emails, $max_records = 0, $details = array()) {\n\tif (!is_array($emails)) {\n\t\t$emails = array($emails);\n\t}\n\n\t$update = array();\n\tforeach ($emails as $check_email) {\n\t\tif (!empty($check_email)) {\n\t\t\tif (!is_array($check_email)) {\n\t\t\t\t$emails = explode(',', $check_email);\n\n\t\t\t\tforeach($emails as $email) {\n\t\t\t\t\t$email_array = split_emaildetail($email);\n\t\t\t\t\t$details[$email_array['email']] = $email_array;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$has_name  = array_key_exists('name', $check_email);\n\t\t\t\t$has_email = array_key_exists('email', $check_email);\n\n\t\t\t\tif ($has_name || $has_email) {\n\t\t\t\t\t$name  = $has_name  ? $check_email['name']  : '';\n\t\t\t\t\t$email = $has_email ? $check_email['email'] : '';\n\t\t\t\t} else {\n\t\t\t\t\t$name  = array_key_exists(1, $check_email) ? $check_email[1] : '';\n\t\t\t\t\t$email = array_key_exists(0, $check_email) ? $check_email[0] : '';\n\t\t\t\t}\n\n\t\t\t\t$details[trim(strtolower($email))] = array('name' => trim($name), 'email' => trim(strtolower($email)));\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($max_records == 1) {\n\t\t$detail  = reset($details);\n\t\t$results = is_array($detail) ? $detail : array();\n\t} elseif ($max_records != 0 && $max_records < count($details)) {\n\t\t$results = array();\n\t\tforeach ($details as $d) {\n\t\t\t$results[] = $d;\n\t\t\t$max_records--;\n\t\t\tif ($max_records == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$results = $details;\n\t}\n\n\treturn $results;\n}\n\nfunction split_emaildetail($email) {\n\t$rname  = '';\n\t$rmail = '';\n\n\tif (!is_array($email)) {\n\t\t$email = trim($email);\n\n\t\t$sPattern = '/(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/i';\n\t\tpreg_match($sPattern, $email, $aMatch);\n\n\t\tif (isset($aMatch[1])) {\n\t\t\t$rname = trim($aMatch[1]);\n\t\t}\n\n\t\tif (isset($aMatch[2])) {\n\t\t\t$rmail = trim($aMatch[2]);\n\t\t}\n\t} else {\n\t\t$rmail = $email[0];\n\t\t$rname = $email[1];\n\t}\n\n\treturn array('name' => $rname, 'email' => strtolower($rmail));\n}\n\nfunction create_emailtext($e) {\n\tif (empty($e['email'])) {\n\t\t$text = '';\n\t} else {\n\t\tif (empty($e['name'])) {\n\t\t\t$text = $e['email'];\n\t\t} else {\n\t\t\t$text = $e['name'] . ' <' . $e['email'] . '>';\n\t\t}\n\t}\n\n\treturn $text;\n}\n\nfunction ping_mail_server($host, $port, $user, $password, $timeout = 10, $secure = 'none') {\n\tglobal $config;\n\n    require_once($config['include_path'] . '/vendor/phpmailer/src/Exception.php');\n    require_once($config['include_path'] . '/vendor/phpmailer/src/PHPMailer.php');\n    require_once($config['include_path'] . '/vendor/phpmailer/src/SMTP.php');\n\n\t//Create a new SMTP instance\n\t$smtp = new PHPMailer\\PHPMailer\\SMTP;\n\n\tif (!empty($secure) && $secure != 'none') {\n\t\t$smtp->SMTPSecure = $secure;\n\t\tif (substr_count($host, ':') == 0) {\n\t\t\t$host = $secure . '://' . $host;\n\t\t}\n\t} else {\n\t\t$smtp->SMTPAutoTLS = false;\n\t\t$smtp->SMTPSecure = false;\n\t}\n\n\t//Enable connection-level debug output\n\t$smtp->do_debug = 0;\n\t//$smtp->do_debug = SMTP::DEBUG_LOWLEVEL;\n\n\t$results = true;\n\ttry {\n\t\t//Connect to an SMTP server\n\t\tif ($smtp->connect($host, $port, $timeout)) {\n\t\t\t//Say hello\n\t\t\tif ($smtp->hello(gethostbyname(gethostname()))) { //Put your host name in here\n\t\t\t\t//Authenticate\n\t\t\t\tif ($user != '') {\n\t\t\t\t\tif ($smtp->authenticate($user, $password)) {\n\t\t\t\t\t\t$results = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Exception(__('Authentication failed: %s', $smtp->getLastReply()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Exception(__('HELO failed: %s', $smtp->getLastReply()));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Exception(__('Connect failed: %s', $smtp->getLastReply()));\n\t\t}\n\t} catch (Exception $e) {\n\t\t$results = __('SMTP error: ') . $e->getMessage();\n\t\tcacti_log($results);\n\t}\n\n\t//Whatever happened, close the connection.\n\t$smtp->quit(true);\n\n\treturn $results;\n}\n\nfunction email_test() {\n\tglobal $config;\n\n\t$message =  __('This is a test message generated from Cacti.  This message was sent to test the configuration of your Mail Settings.') . '<br><br>';\n\t$message .= __('Your email settings are currently set as follows') . '<br><br>';\n\t$message .= '<b>' . __('Method') . '</b>: ';\n\n\tprint __('Checking Configuration...<br>');\n\n\t$ping_results = true;\n\t$how = read_config_option('settings_how');\n\tif ($how < 0 || $how > 2)\n\t\t$how = 0;\n\tif ($how == 0) {\n\t\t$mail = __('PHP\\'s Mailer Class');\n\t} elseif ($how == 1) {\n\t\t$mail = __('Sendmail') . '<br><b>' . __('Sendmail Path'). '</b>: ';\n\t\t$sendmail = read_config_option('settings_sendmail_path');\n\t\t$mail .= $sendmail;\n\t} elseif ($how == 2) {\n\t\tprint __('Method: SMTP') . '<br>';\n\t\t$mail = __('SMTP') . '<br>';\n\t\t$smtp_host = read_config_option('settings_smtp_host');\n\t\t$smtp_port = read_config_option('settings_smtp_port');\n\t\t$smtp_username = read_config_option('settings_smtp_username');\n\t\t$smtp_password = read_config_option('settings_smtp_password');\n\t\t$smtp_secure   = read_config_option('settings_smtp_secure');\n\t\t$smtp_timeout  = read_config_option('settings_smtp_timeout');\n\n\t\t$mail .= \"<b>\" . __('Device') . \"</b>: $smtp_host<br>\";\n\t\t$mail .= \"<b>\" . __('Port') . \"</b>: $smtp_port<br>\";\n\n\t\tif ($smtp_username != '' && $smtp_password != '') {\n\t\t\t$mail .= '<b>' . __('Authentication') . '</b>: true<br>';\n\t\t\t$mail .= '<b>' . __('Username') . \"</b>: $smtp_username<br>\";\n\t\t\t$mail .= '<b>' . __('Password') . '</b>: (' . __('Not Shown for Security Reasons') . ')<br>';\n\t\t\t$mail .= '<b>' . __('Security') . \"</b>: $smtp_secure<br>\";\n\t\t} else {\n\t\t\t$mail .= '<b>' . __('Authentication') . '</b>: false<br>';\n\t\t}\n\n\t\tif (read_config_option('settings_ping_mail') == 0) {\n\t\t\t$ping_results = ping_mail_server($smtp_host, $smtp_port, $smtp_username, $smtp_password, $smtp_timeout, $smtp_secure);\n\n\t\t\tprint __('Ping Results:') . ' ' . ($ping_results == 1 ? __('Success'):$ping_results) . '<br>';\n\n\t\t\tif ($ping_results != 1) {\n\t\t\t\t$mail .= '<b>' . __('Ping Results') . '</b>: ' . $ping_results . '<br>';\n\t\t\t} else {\n\t\t\t\t$mail .= '<b>' . __('Ping Results') . '</b>: ' . __('Success') . '<br>';\n\t\t\t}\n\t\t} else {\n\t\t\t$ping_results = 1;\n\t\t\t$mail .= '<b>' . __('Ping Results') . '</b>: ' . __('Bypassed') . '<br>';\n\t\t}\n\t}\n\t$message .= $mail;\n\t$message .= '<br>';\n\n\t$errors = '';\n\tif ($ping_results == 1) {\n\t\tprint __('Creating Message Text...') . '<br><br>';\n\t\tprint \"<center><table><tr><td>\";\n\t\tprint \"<table style='width:100%;'><tr><td>$message</td><tr></table></table></center><br>\";\n\t\tprint __('Sending Message...') . '<br><br>';\n\n\t\t$global_alert_address = read_config_option('settings_test_email');\n\n\t\t$errors = send_mail($global_alert_address, '', __('Cacti Test Message'), $message, '', '', true);\n\t\tif ($errors == '') {\n\t\t\t$errors = __('Success!');\n\t\t}\n\t} else {\n\t\tprint __('Message Not Sent due to ping failure.'). '<br><br>';\n\t}\n\n\tprint \"<center><table><tr><td>\";\n\tprint \"<table><tr><td>$errors</td><tr></table></table></center>\";\n}\n\n/**\n * gethostbyaddr_wtimeout - This function provides a good method of performing\n * a rapid lookup of a DNS entry for a host so long as you don't have to look far.\n */\nfunction get_dns_from_ip ($ip, $dns, $timeout = 1000) {\n\t/* random transaction number (for routers etc to get the reply back) */\n\t$data = rand(10, 99);\n\n\t/* trim it to 2 bytes */\n\t$data = substr($data, 0, 2);\n\n\t/* create request header */\n\t$data .= \"\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\";\n\n\t/* split IP into octets */\n\t$octets = explode('.', $ip);\n\n\t/* perform a quick error check */\n\tif (cacti_count($octets) != 4) return 'ERROR';\n\n\t/* needs a byte to indicate the length of each segment of the request */\n\tfor ($x=3; $x>=0; $x--) {\n\t\tswitch (strlen($octets[$x])) {\n\t\tcase 1: // 1 byte long segment\n\t\t\t$data .= \"\\1\"; break;\n\t\tcase 2: // 2 byte long segment\n\t\t\t$data .= \"\\2\"; break;\n\t\tcase 3: // 3 byte long segment\n\t\t\t$data .= \"\\3\"; break;\n\t\tdefault: // segment is too big, invalid IP\n\t\t\treturn 'ERROR';\n\t\t}\n\n\t\t/* and the segment itself */\n\t\t$data .= $octets[$x];\n\t}\n\n\t/* and the final bit of the request */\n\t$data .= \"\\7in-addr\\4arpa\\0\\0\\x0C\\0\\1\";\n\n\t/* create UDP socket */\n\t$handle = @fsockopen(\"udp://$dns\", 53);\n\n\t@stream_set_timeout($handle, floor($timeout/1000), ($timeout*1000)%1000000);\n\t@stream_set_blocking($handle, 1);\n\n\t/* send our request (and store request size so we can cheat later) */\n\t$requestsize = @fwrite($handle, $data);\n\n\t/* get the response */\n\t$response = @fread($handle, 1000);\n\n\t/* check to see if it timed out */\n\t$info = @stream_get_meta_data($handle);\n\n\t/* close the socket */\n\t@fclose($handle);\n\n\tif ($info['timed_out']) {\n\t\treturn 'timed_out';\n\t}\n\n\t/* more error handling */\n\tif ($response == '') { return $ip; }\n\n\t/* parse the response and find the response type */\n\t$type = @unpack('s', substr($response, $requestsize+2));\n\n\tif (isset($type[1]) && $type[1] == 0x0C00) {\n\t\t/* set up our variables */\n\t\t$host = '';\n\t\t$len = 0;\n\n\t\t/* set our pointer at the beginning of the hostname uses the request\n\t\t   size from earlier rather than work it out.\n\t\t*/\n\t\t$position = $requestsize + 12;\n\n\t\t/* reconstruct the hostname */\n\t\tdo {\n\t\t\t/* get segment size */\n\t\t\t$len = unpack('c', substr($response, $position));\n\n\t\t\t/* null terminated string, so length 0 = finished */\n\t\t\tif ($len[1] == 0) {\n\t\t\t\t/* return the hostname, without the trailing '.' */\n\t\t\t\treturn strtoupper(substr($host, 0, strlen($host) -1));\n\t\t\t}\n\n\t\t\t/* add the next segment to our host */\n\t\t\t$host .= substr($response, $position+1, $len[1]) . '.';\n\n\t\t\t/* move pointer on to the next segment */\n\t\t\t$position += $len[1] + 1;\n\t\t} while ($len != 0);\n\n\t\t/* error - return the hostname we constructed (without the . on the end) */\n\t\treturn strtoupper($ip);\n\t}\n\n\t/* error - return the hostname */\n\treturn strtoupper($ip);\n}\n\nfunction poller_maintenance () {\n\tglobal $config;\n\n\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\n\t// If its not set, just assume its in the path\n\tif (trim($command_string) == '') {\n\t\t$command_string = 'php';\n\t}\n\n\t$extra_args = ' -q ' . cacti_escapeshellarg($config['base_path'] . '/poller_maintenance.php');\n\n\texec_background($command_string, $extra_args);\n}\n\nfunction clog_admin() {\n\tif (!isset($_SESSION['sess_clog_level'])) {\n\t\tclog_authorized();\n\t}\n\n\tif ($_SESSION[\"sess_clog_level\"] == CLOG_PERM_ADMIN) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction clog_authorized() {\n\tif (!isset($_SESSION['sess_clog_level'])) {\n\t\tif (isset($_SESSION['sess_user_id'])) {\n\t\t\tif (is_realm_allowed(18)) {\n\t\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_ADMIN;\n\t\t\t} else {\n\t\t\t\tif (is_realm_allowed(19)) {\n\t\t\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_USER;\n\t\t\t\t} else {\n\t\t\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_NONE;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$_SESSION['sess_clog_level'] = CLOG_PERM_NONE;\n\t\t}\n\t}\n\n\tif ($_SESSION['sess_clog_level'] == CLOG_PERM_USER) {\n\t\treturn true;\n\t} elseif ($_SESSION['sess_clog_level'] == CLOG_PERM_ADMIN) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction cacti_debug_backtrace($entry = '', $html = false, $record = true, $limit = 0, $skip = 0) {\n\tglobal $config;\n\n\t$skip = $skip >= 0 ? $skip : 1;\n\t$limit = $limit > 0 ? ($limit + $skip) : 0;\n\n\t$callers = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS, $limit);\n\twhile ($skip > 0) {\n\t\tarray_shift($callers);\n\t\t$skip--;\n\t}\n\n\t$s='';\n\tforeach ($callers as $c) {\n\t\tif (isset($c['line'])) {\n\t\t\t$line = '[' . $c['line'] . ']';\n\t\t} else {\n\t\t\t$line = '';\n\t\t}\n\n\t\tif (isset($c['file'])) {\n\t\t\t$file = str_replace($config['base_path'], '', $c['file']) . $line;\n\t\t} else {\n\t\t\t$file = $line;\n\t\t}\n\n\t\t$func = $c['function'].'()';\n\t\tif (isset($c['class'])) {\n\t\t\t$func = $c['class'] . $c['type'] . $func;\n\t\t}\n\n\t\t$s = ($file != '' ? $file . ':':'') . \"$func\" . (empty($s) ? '' : ', ') . $s;\n\t}\n\n\tif (!empty($s)) {\n\t\t$s = ' (' . $s . ')';\n\t}\n\n\tif ($record) {\n\t\tif ($html) {\n\t\t\tprint \"<table style='width:100%;text-align:center;'><tr><td>$s</td></tr></table>\\n\";\n\t\t}\n\n\t\tcacti_log(trim(\"$entry Backtrace: \" . clean_up_lines($s)), false);\n\t} else {\n\t\tif (!empty($entry)) {\n\t\t\treturn trim(\"$entry Backtrace: \" . clean_up_lines($s));\n\t\t} else {\n\t\t\treturn trim(clean_up_lines($s));\n\t\t}\n\t}\n}\n\n/**\n * calculate_percentiles - Given and array of numbers, calculate the Nth percentile,\n * optionally, return an array of numbers containing elements required for\n * a whisker chart.\n *\n * @param $data       - an array of data\n * @param $percentile - the Nth percentile to calculate.  By default 95th.\n * @param $whisker    - if whisker is true, an array of values will be returned\n *                      including 25th, median, 75th, and 90th percentiles.\n *\n * @return - either the Nth percentile, the elements for a whisker chart,\n *            or false if there is insufficient data to determine.\n */\nfunction calculate_percentiles($data, $percentile = 95, $whisker = false) {\n\tif ($percentile > 0 && $percentile < 1) {\n\t\t$p = $percentile;\n\t} elseif ($percentile > 1 && $percentile <= 100) {\n\t\t$p = $percentile * .01;\n\t} else {\n\t\treturn false;\n\t}\n\n\tif ($whisker) {\n\t\t$tiles = array(\n\t\t\t'25th' => 0.25,\n\t\t\t'50th' => 0.50,\n\t\t\t'75th' => 0.75,\n\t\t\t'90th' => 0.90,\n\t\t\t'95th' => 0.95,\n\t\t);\n\t} else {\n\t\t$tiles = array(\n\t\t\t'custom' => $p\n\t\t);\n\t}\n\n\t$results  = array();\n\t$elements = cacti_sizeof($data);\n\n\t/* sort the array to return */\n\tsort($data);\n\n\tforeach($tiles as $index => $p) {\n\t\t/* calculate offsets into the array */\n\t\t$allindex    = ($elements - 1) * $p;\n\t\t$intvalindex = floor($allindex);\n\t\t$floatval    = $allindex - $intvalindex;\n\n\t\tif (!is_float($floatval)) {\n\t\t\t$ptile = $data[$intvalindex];\n\t\t} else {\n\t\t\tif ($elements > $intvalindex + 1) {\n\t\t\t\t$ptile = $floatval * ($data[$intvalindex + 1] - $data[$intvalindex]) + $data[$intvalindex];\n\t\t\t} else {\n\t\t\t\t$ptile = $data[$intvalindex];\n\t\t\t}\n\t\t}\n\n\t\tif ($index == 'custom') {\n\t\t\treturn $ptile;\n\t\t} else {\n\t\t\t$results[$index] = $ptile;\n\t\t}\n\t}\n\n\treturn $results;\n}\n\nfunction get_timeinstate($host) {\n\t$interval = read_config_option('poller_interval');\n\tif ($host['availability_method'] == 0) {\n\t\t$time = 0;\n\t} elseif (isset($host['instate'])) {\n\t\t$time = $host['instate'];\n\t} elseif ($host['status_event_count'] > 0 && ($host['status'] == 1 || $host['status'] == 2 || $host['status'] == 5)) {\n\t\t$time = $host['status_event_count'] * $interval;\n\t} elseif (strtotime($host['status_rec_date']) < 943916400 && ($host['status'] == 0 || $host['status'] == 3)) {\n\t\t$time = $host['total_polls'] * $interval;\n\t} elseif (strtotime($host['status_rec_date']) > 943916400) {\n\t\t$time = time() - strtotime($host['status_rec_date']);\n\t} elseif ($host['snmp_sysUpTimeInstance'] > 0) {\n\t\t$time = $host['snmp_sysUpTimeInstance']/100;\n\t} else {\n\t\t$time = 0;\n\t}\n\n\tif ($time > 2E13) {\n\t\t$time = 0;\n\t}\n\n\treturn ($time > 0) ? get_daysfromtime($time) : __('N/A');\n}\n\nfunction get_uptime($host) {\n\treturn ($host['snmp_sysUpTimeInstance'] > 0) ? get_daysfromtime(intval($host['snmp_sysUpTimeInstance']/100)) : __('N/A');\n}\n\nfunction get_daysfromtime($time, $secs = false, $pad = '', $format = DAYS_FORMAT_SHORT, $all = false) {\n\tglobal $days_from_time_settings;\n\n\t// Work around stricter typing in PHP 8.1.2+\n\tif (is_float($time)) {\n\t\t$time = intval(ceil($time));\n\t}\n\n\t// Ensure we use an existing format or we'll end up with no text at all\n\tif (!isset($days_from_time_settings['text'][$format])) {\n\t\t$format = DAYS_FORMAT_SHORT;\n\t}\n\n\t$mods = $days_from_time_settings['mods'];\n\t$text = $days_from_time_settings['text'][$format];\n\n\t$result = '';\n\tforeach ($mods as $index => $mod) {\n\t\tif ($mod > 0 || $secs) {\n\t\t\tif ($time >= $mod) {\n\t\t\t\tif ($mod < 1 || !is_numeric($mod)) {\n\t\t\t\t\t$mod = 1;\n\t\t\t\t}\n\t\t\t\t$val   = floor($time/$mod);\n\t\t\t\t$time %= $mod;\n\t\t\t} else {\n\t\t\t\t$val   = 0;\n\t\t\t}\n\n\t\t\tif ($all || $val > 0) {\n\t\t\t\t$result .= padleft($pad, $val, 2) . $text['prefix'] . $text[$index] . $text['suffix'];\n\t\t\t\t$all = true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn trim($result,$text['suffix']);\n}\n\nfunction padleft($pad = '', $value = '', $min = 2) {\n\t$result = \"$value\";\n\tif (strlen($result) < $min && $pad != '') {\n\t\t$padded = $pad . $result;\n\t\twhile ($padded != $result && strlen($result) < $min) {\n\t\t\t$padded = $pad . $result;\n\t\t}\n\t\t$result = $padded;\n\t}\n\treturn $result;\n}\n\nfunction get_classic_tabimage($text, $down = false) {\n\tglobal $config, $dejavu_paths;\n\n\t$images = array(\n\t\tfalse => 'tab_template_blue.gif',\n\t\ttrue  => 'tab_template_red.gif'\n\t);\n\n\tif ($text == '') return false;\n\n\t$text = strtolower($text);\n\n\t$possibles = array(\n\t\tarray('DejaVuSans-Bold.ttf', 9, true),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 9, false),\n\t\tarray('DejaVuSans-Bold.ttf', 9, false),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 9, false),\n\t\tarray('DejaVuSans-Bold.ttf', 8, false),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 8, false),\n\t\tarray('DejaVuSans-Bold.ttf', 7, false),\n\t\tarray('DejaVuSansCondensed-Bold.ttf', 7, true),\n\t);\n\n\t$y        = 30;\n\t$x        = 44;\n\t$wlimit   = 72;\n\t$wrapsize = 12;\n\n\tif (file_exists($config['base_path'] . '/images/' . $images[$down])) {\n\t\tforeach ($dejavu_paths as $dejavupath) {\n\t\t\tif (file_exists($dejavupath)) {\n\t\t\t\t$font_path = $dejavupath;\n\t\t\t}\n\t\t}\n\n\t\t$originalpath = getenv('GDFONTPATH');\n\t\tputenv('GDFONTPATH=' . $font_path);\n\n\t\t$template = imagecreatefromgif ($config['base_path'] . '/images/' . $images[$down]);\n\n\t\t$w = imagesx($template);\n\t\t$h = imagesy($template);\n\n\t\t$tab = imagecreatetruecolor($w, $h);\n\t\timagecopy($tab, $template, 0, 0, 0, 0, $w, $h);\n\n\t\t$txcol = imagecolorat($tab, 0, 0);\n\t\timagecolortransparent($tab,$txcol);\n\n\t\t$white = imagecolorallocate($tab, 255, 255, 255);\n\t\t$ttf_functions = function_exists('imagettftext') && function_exists('imagettfbbox');\n\n\t\tif ($ttf_functions) {\n\t\t\tforeach ($possibles as $variation) {\n\t\t\t\t$font     = $variation[0];\n\t\t\t\t$fontsize = $variation[1];\n\n\t\t\t\t$lines = array();\n\n\t\t\t\t// if no wrapping is requested, or no wrapping is possible...\n\t\t\t\tif ((!$variation[2]) || ($variation[2] && strpos($text,' ') === false)) {\n\t\t\t\t\t$bounds  = imagettfbbox($fontsize, 0, $font, $text);\n\t\t\t\t\t$w       = $bounds[4] - $bounds[0];\n\t\t\t\t\t$h       = $bounds[1] - $bounds[5];\n\t\t\t\t\t$realx   = $x - $w/2 -1;\n\t\t\t\t\t$lines[] = array($text, $font, $fontsize, $realx, $y);\n\t\t\t\t\t$maxw    = $w;\n\t\t\t\t} else {\n\t\t\t\t\t$texts = explode(\"\\n\", wordwrap($text, $wrapsize), 2);\n\t\t\t\t\t$line  = 1;\n\t\t\t\t\t$maxw  = 0;\n\t\t\t\t\tforeach ($texts as $txt) {\n\t\t\t\t\t\t$bounds  = imagettfbbox($fontsize, 0, $font, $txt);\n\t\t\t\t\t\t$w       = $bounds[4] - $bounds[0];\n\t\t\t\t\t\t$h       = $bounds[1] - $bounds[5];\n\t\t\t\t\t\t$realx   = $x - $w/2 -1;\n\t\t\t\t\t\t$realy   = $y - $h * $line + 3;\n\t\t\t\t\t\t$lines[] = array($txt, $font, $fontsize, $realx, $realy);\n\t\t\t\t\t\tif ($maxw < $w) {\n\t\t\t\t\t\t\t$maxw = $w;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$line--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($maxw<$wlimit) break;\n\t\t\t}\n\t\t} else {\n\t\t\twhile ($text > '') {\n\t\t\t\tfor ($fontid = 5; $fontid>0; $fontid--) {\n\t\t\t\t\t$fontw = imagefontwidth($fontid);\n\t\t\t\t\t$fonth = imagefontheight($fontid);\n\t\t\t\t\t$realx = ($w - ($fontw * strlen($text)))/2;\n\t\t\t\t\t$realy = ($h - $fonth - 5);\n\n\t\t\t\t\t// Since we can't use FreeType, lets use a fixed location\n\t\t\t\t\t$lines = array();\n\t\t\t\t\t$lines[] = array($text, $fontid, 0, $realx, $realy);\n\n\t\t\t\t\tif ($realx > 10 && $realy > 0) break;\n\t\t\t\t}\n\n\t\t\t\tif ($fontid == 0) {\n\t\t\t\t\t$spacer = strrpos($text,' ');\n\t\t\t\t\tif ($spacer === false) {\n\t\t\t\t\t\t$spacer = strlen($text) - 1;\n\t\t\t\t\t}\n\t\t\t\t\t$text = substr($text,0,$spacer);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tforeach ($lines as $line) {\n\t\t\tif ($ttf_functions) {\n\t\t\t\timagettftext($tab, $line[2], 0, $line[3], $line[4], $white, $line[1], $line[0]);\n\t\t\t} else {\n\t\t\t\timagestring($tab, $line[1], $line[3], $line[4], $line[0], $white);\n\t\t\t}\n\t\t}\n\n\t\tputenv('GDFONTPATH=' . $originalpath);\n\n\t\timagetruecolortopalette($tab, true, 256);\n\n\t\t// generate the image an return the data directly\n\t\tob_start();\n\t\timagegif ($tab);\n\t\t$image = ob_get_contents();\n\t\tob_end_clean();\n\n\t\treturn(\"data:image/gif;base64,\" . base64_encode($image));\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction cacti_oid_numeric_format() {\n\tif (function_exists('snmp_set_oid_output_format')) {\n\t\tsnmp_set_oid_output_format(SNMP_OID_OUTPUT_NUMERIC);\n\t} elseif (function_exists(\"snmp_set_oid_numeric_print\")) {\n\t\tsnmp_set_oid_numeric_print(true);\n\t}\n}\n\nfunction IgnoreErrorHandler($message) {\n\tglobal $snmp_error;\n\n\t$snmp_ignore = array(\n\t\t'No response from',\n\t\t'noSuchName',\n\t\t'No Such Object',\n\t\t'Error in packet',\n\t\t'This name does not exist',\n\t\t'End of MIB',\n\t\t'Timeout',\n\t\t'Unknown host',\n\t\t'Connection timed out',\n\t\t'Invalid object identifier',\n\t\t'Name or service not known',\n\t\t'USM generic error in file',\n\t);\n\n\tforeach ($snmp_ignore as $i) {\n\t\tif (stripos($message, $i) !== false) {\n\t\t\t$snmp_error = trim($message, \"\\\\\\n\\t \");\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t$general_ignore = array(\n\t\t'unable to read from socket',  # ping.php line 387 socket refusal\n\t\t'Maximum execution time of',\n\t);\n\n\tforeach ($general_ignore as $i) {\n\t\tif (stripos($message, $i) !== false) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction CactiErrorHandler($level, $message, $file, $line, $context = array()) {\n\tglobal $phperrors;\n\n\tif (defined('IN_CACTI_INSTALL')) {\n\t\treturn true;\n\t}\n\n\tif (IgnoreErrorHandler($message)) {\n\t\treturn true;\n\t}\n\n\tif (error_reporting() == 0) {\n\t\treturn true;\n\t}\n\n\tpreg_match(\"/.*\\/plugins\\/([\\w-]*)\\/.*/\", $file, $output_array);\n\n\t$plugin = (is_array($output_array) && isset($output_array[1]) ? $output_array[1] : '');\n\t$error  = 'PHP ' . $phperrors[$level] . ($plugin != '' ? \" in  Plugin '$plugin'\" : '') . \": $message in file: $file  on line: $line\";\n\n\tswitch ($level) {\n\t\tcase E_COMPILE_ERROR:\n\t\tcase E_CORE_ERROR:\n\t\tcase E_ERROR:\n\t\tcase E_PARSE:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR PARSE', false, true, 0, 1);\n\t\t\tif ($plugin != '') {\n\t\t\t\tapi_plugin_disable_all($plugin);\n\t\t\t\tcacti_log(\"ERRORS DETECTED - DISABLING PLUGIN '$plugin'\");\n\t\t\t\tadmin_email(__('Cacti System Warning'), __('Cacti disabled plugin %s due to the following error: %s!  See the Cacti logfile for more details.', $plugin, $error));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase E_RECOVERABLE_ERROR:\n\t\tcase E_USER_ERROR:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR', false, true, 0, 1);\n\t\t\tbreak;\n\t\tcase E_COMPILE_WARNING:\n\t\tcase E_CORE_WARNING:\n\t\tcase E_USER_WARNING:\n\t\tcase E_WARNING:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR WARNING', false, true, 0, 1);\n\t\t\tbreak;\n\t\tcase E_NOTICE:\n\t\tcase E_USER_NOTICE:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR NOTICE', false, true, 0, 1);\n\t\t\tbreak;\n\t\tcase E_STRICT:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR STRICT', false, true, 0, 1);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcacti_log($error, false, 'ERROR');\n\t\t\tcacti_debug_backtrace('PHP ERROR', false, true, 0, 1);\n\t}\n\n\treturn false;\n}\n\nfunction CactiShutdownHandler() {\n\tglobal $phperrors;\n\t$error = error_get_last();\n\n\tif (is_array($error)) {\n\t\tif (isset($error['message']) && IgnoreErrorHandler($error['message'])) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (isset($error['type'])) {\n\t\t\tswitch ($error['type']) {\n\t\t\t\tcase E_ERROR:\n\t\t\t\tcase E_CORE_ERROR:\n\t\t\t\tcase E_COMPILE_ERROR:\n\t\t\t\tcase E_CORE_WARNING:\n\t\t\t\tcase E_COMPILE_WARNING:\n\t\t\t\tcase E_PARSE:\n\t\t\t\t\tpreg_match('/.*\\/plugins\\/([\\w-]*)\\/.*/', $error['file'], $output_array);\n\n\t\t\t\t\t$plugin = (isset($output_array[1]) ? $output_array[1] : '' );\n\n\t\t\t\t\t$message = 'PHP ' . $phperrors[$error['type']] .\n\t\t\t\t\t\t($plugin != '' ? \" in  Plugin '$plugin'\" : '') . ': ' . $error['message'] .\n\t\t\t\t\t\t' in file: ' .  $error['file'] . ' on line: ' . $error['line'];\n\n\t\t\t\t\tcacti_log($message, false, 'ERROR');\n\t\t\t\t\tcacti_debug_backtrace('PHP ERROR', false, true, 0, 1);\n\n\t\t\t\t\tif ($plugin != '') {\n\t\t\t\t\t\tapi_plugin_disable_all($plugin);\n\t\t\t\t\t\tcacti_log(\"ERRORS DETECTED - DISABLING PLUGIN '$plugin'\");\n\t\t\t\t\t\tadmin_email(__('Cacti System Warning'), __('Cacti disabled plugin %s due to the following error: %s!  See the Cacti logfile for more details.', $plugin, $message));\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * enable_device_debug - Enables device debug for a device\n * if it is disabled.\n *\n * @param $host_id - the device id to search for\n *\n * @return - void\n */\nfunction enable_device_debug($host_id) {\n\t$device_debug = read_config_option('selective_device_debug', true);\n\tif ($device_debug != '') {\n\t\t$devices = explode(',', $device_debug);\n\t\tif (array_search($host_id, $devices) === false) {\n\t\t\tset_config_option('selective_device_debug', $device_debug . ',' . $host_id, true);\n\t\t}\n\t} else {\n\t\tset_config_option('selective_device_debug', $host_id, true);\n\t}\n}\n\n/**\n * disable_device_debug - Disables device debug for a device\n * if it is enabled.\n *\n * @param $host_id - the device id to search for\n *\n * @return - void\n */\nfunction disable_device_debug($host_id) {\n\t$device_debug = read_config_option('selective_device_debug', true);\n\tif ($device_debug != '') {\n\t\t$devices = explode(',', $device_debug);\n\t\tforeach($devices as $key => $device) {\n\t\t\tif ($device == $host_id) {\n\t\t\t\tunset($devices[$key]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tset_config_option('selective_device_debug', implode(',', $devices), true);\n\t}\n}\n\n/**\n * is_device_debug_enabled - Determines if device debug is enabled\n * for a device.\n *\n * @param $host_id - the device id to search for\n *\n * @return - boolean true or false\n */\nfunction is_device_debug_enabled($host_id) {\n\t$device_debug = read_config_option('selective_device_debug', true);\n\tif ($device_debug != '') {\n\t\t$devices = explode(',', $device_debug);\n\t\tif (array_search($host_id, $devices) !== false) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * get_url_type - Determines if remote communications are over\n * http or https for remote services.\n *\n * @return - http or https\n */\nfunction get_url_type() {\n\tif (read_config_option('force_https') == 'on') {\n\t\treturn 'https';\n\t} else {\n\t\treturn 'http';\n\t}\n}\n\n/**\n * get_default_contextoption - Sets default context options for self-signed SSL\n * related protocols if necessary. Allows plugins to add additional header information\n * to fulfill system setup related requirements like the usage of Web Single Login\n * cookies for example.\n *\n * @param  (int|bool) A numeric timeout value, or null if not set\n *\n * @return (array)    An array to a context\n */\nfunction get_default_contextoption($timeout = false) {\n\t$fgc_contextoption = array();\n\n\tif ($timeout === false) {\n\t\t$timeout = read_config_option('remote_agent_timeout');\n\t}\n\n\tif (!is_numeric($timeout) || empty($timeout) || $timeout <= 0) {\n\t\t$timeout = 5;\n\t}\n\n\t$protocol = get_url_type();\n\n\tif (in_array($protocol, array('ssl', 'https', 'ftps'))) {\n\t\t$fgc_contextoption = array(\n\t\t\t'ssl' => array(\n\t\t\t\t'verify_peer' => false,\n\t\t\t\t'verify_peer_name' => false,\n\t\t\t\t'allow_self_signed' => true,\n\t\t\t)\n\t\t);\n\t}\n\n\tif ($protocol == 'https') {\n\t\t$fgc_contextoption['https'] = array(\n\t\t\t'timeout' => $timeout,\n\t\t\t'ignore_errors' => true\n\t\t);\n\t} elseif ($protocol == 'http') {\n\t\t$fgc_contextoption['http'] = array(\n\t\t\t'timeout' => $timeout,\n\t\t\t'ignore_errors' => true\n\t\t);\n\t}\n\n\t$fgc_contextoption = api_plugin_hook_function('fgc_contextoption', $fgc_contextoption);\n\n\treturn $fgc_contextoption;\n}\n\n/**\n * repair_system_data_input_methods - This utility will repair\n * system data input methods when they are detected on the system\n *\n * @return - null\n */\nfunction repair_system_data_input_methods($step = 'import') {\n\t$system_hashes = array(\n\t\t'3eb92bb845b9660a7445cf9740726522', // Get SNMP Data\n\t\t'bf566c869ac6443b0c75d1c32b5a350e', // Get SNMP Data (Indexed)\n\t\t'80e9e4c4191a5da189ae26d0e237f015', // Get Script Data (Indexed)\n\t\t'332111d8b54ac8ce939af87a7eac0c06', // Get Script Server Data (Indexed)\n\t);\n\n\t$good_field_hashes = array(\n\t\t'3eb92bb845b9660a7445cf9740726522' => array( // Get SNMP Data (1)\n\t\t\t'92f5906c8dc0f964b41f4253df582c38', // IP Address\n\t\t\t'012ccb1d3687d3edb29c002ea66e72da', // SNMP Version\n\t\t\t'32285d5bf16e56c478f5e83f32cda9ef', // SNMP Community\n\t\t\t'fc64b99742ec417cc424dbf8c7692d36', // SNMP Port\n\t\t\t'ad14ac90641aed388139f6ba86a2e48b', // SNMP Username\n\t\t\t'9c55a74bd571b4f00a96fd4b793278c6', // SNMP Password\n\t\t\t'20832ce12f099c8e54140793a091af90', // SNMP Authentication Protocol\n\t\t\t'c60c9aac1e1b3555ea0620b8bbfd82cb', // SNMP Privacy Passphrase\n\t\t\t'feda162701240101bc74148415ef415a', // SNMP Privacy Protocol\n\t\t\t'4276a5ec6e3fe33995129041b1909762'  // SNMP OID\n\t\t),\n\t\t'bf566c869ac6443b0c75d1c32b5a350e' => array( // Get SNMP Data (Indexed) (2)\n\t\t\t'617cdc8a230615e59f06f361ef6e7728', // IP Address\n\t\t\t'b5c23f246559df38662c255f4aa21d6b', // SNMP Version\n\t\t\t'acb449d1451e8a2a655c2c99d31142c7', // SNMP Community\n\t\t\t'c1f36ee60c3dc98945556d57f26e475b', // SNMP Port\n\t\t\t'f4facc5e2ca7ebee621f09bc6d9fc792', // SNMP Username\n\t\t\t'1cc1493a6781af2c478fa4de971531cf', // SNMP Password\n\t\t\t'2cf7129ad3ff819a7a7ac189bee48ce8', // SNMP Authentication Protocol\n\t\t\t'6b13ac0a0194e171d241d4b06f913158', // SNMP Privacy Passphrase\n\t\t\t'3a33d4fc65b8329ab2ac46a36da26b72', // SNMP Privacy Protocol\n\t\t\t'6027a919c7c7731fbe095b6f53ab127b', // Index Type\n\t\t\t'cbbe5c1ddfb264a6e5d509ce1c78c95f', // Index Value\n\t\t\t'e6deda7be0f391399c5130e7c4a48b28'  // Output Type ID\n\t\t),\n\t\t'80e9e4c4191a5da189ae26d0e237f015' => array( // Get Script Data (Indexed) 11\n\t\t\t'd39556ecad6166701bfb0e28c5a11108', // Index Type\n\t\t\t'3b7caa46eb809fc238de6ef18b6e10d5', // Index Value\n\t\t\t'74af2e42dc12956c4817c2ef5d9983f9', // Output Type ID\n\t\t\t'8ae57f09f787656bf4ac541e8bd12537'  // Output Value\n\t\t),\n\t\t'332111d8b54ac8ce939af87a7eac0c06' => array( // Get Script Server Data (Indexed) 12\n\t\t\t'172b4b0eacee4948c6479f587b62e512', // Index Type\n\t\t\t'30fb5d5bcf3d66bb5abe88596f357c26', // Index Value\n\t\t\t'31112c85ae4ff821d3b288336288818c', // Output Type ID\n\t\t\t'5be8fa85472d89c621790b43510b5043'  // Output Value\n\t\t)\n\t);\n\n\tforeach($good_field_hashes as $hash => $field_hashes) {\n\t\t$data_input_id = db_fetch_cell_prepared('SELECT id FROM data_input WHERE hash = ?', array($hash));\n\n\t\tif (!empty($data_input_id)) {\n\t\t\t$bad_hashes = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM data_input_fields\n\t\t\t\tWHERE hash NOT IN (\"' . implode('\",\"', $field_hashes) . '\")\n\t\t\t\tAND hash != \"\"\n\t\t\t\tAND data_input_id = ?',\n\t\t\t\tarray($data_input_id));\n\n\t\t\tif (cacti_sizeof($bad_hashes)) {\n\t\t\t\tcacti_log(strtoupper($step) . ' NOTE: Repairing ' . cacti_sizeof($bad_hashes) . ' Damaged data_input_fields', false);\n\n\t\t\t\tforeach($bad_hashes as $bhash) {\n\t\t\t\t\t$good_field_id = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\t\tFROM data_input_fields\n\t\t\t\t\t\tWHERE hash != ?\n\t\t\t\t\t\tAND data_input_id = ?\n\t\t\t\t\t\tAND data_name = ?',\n\t\t\t\t\t\tarray($bhash['hash'], $data_input_id, $bhash['data_name']));\n\n\t\t\t\t\tif (!empty($good_field_id)) {\n\t\t\t\t\t\tcacti_log(\"Data Input ID $data_input_id Bad Field ID is \" . $bhash['id'] . \", Good Field ID: \" . $good_field_id, false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\tcacti_log('Executing Data Input Data Check', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t// Data Input Data\n\t\t\t\t\t\t$bad_mappings = db_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\t\tWHERE data_input_field_id = ?',\n\t\t\t\t\t\t\tarray($bhash['id']));\n\n\t\t\t\t\t\tif (cacti_sizeof($bad_mappings)) {\n\t\t\t\t\t\t\tcacti_log(strtoupper($step) . ' NOTE: Found ' . cacti_sizeof($bad_mappings) . ' Damaged data_input_fields', false);\n\t\t\t\t\t\t\tforeach($bad_mappings as $mfid) {\n\t\t\t\t\t\t\t\t$good_found = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['data_template_data_id']));\n\n\t\t\t\t\t\t\t\tif ($good_found > 0) {\n\t\t\t\t\t\t\t\t\tcacti_log('Good Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_input_data\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($mfid['data_input_field_id'], $mfid['data_template_data_id']));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcacti_log('Good NOT Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE data_input_data\n\t\t\t\t\t\t\t\t\t\tSET data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['data_input_field_id'], $mfid['data_template_data_id']));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcacti_log('No Bad Data Input Data Records', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Data Template RRD\n\t\t\t\t\t\tcacti_log('Executing Data Template RRD Check', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);;\n\n\t\t\t\t\t\t$bad_mappings = db_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE data_input_field_id = ?',\n\t\t\t\t\t\t\tarray($bhash['id']));\n\n\t\t\t\t\t\tif (cacti_sizeof($bad_mappings)) {\n\t\t\t\t\t\t\tcacti_log(strtoupper($step) . ' NOTE: Found ' . cacti_sizeof($bad_mappings) . ' Damaged data_template_rrd', false);\n\n\t\t\t\t\t\t\tforeach($bad_mappings as $mfid) {\n\t\t\t\t\t\t\t\t$good_found = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\tAND id = ?',\n\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['id']));\n\n\t\t\t\t\t\t\t\tif ($good_found > 0) {\n\t\t\t\t\t\t\t\t\tcacti_log('Good Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_template_rrd\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($mfid['data_input_field_id'], $mfid['id']));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcacti_log('Good NOT Found for ' . $mfid['data_input_field_id'] . ', Fixing', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE data_template_rrd\n\t\t\t\t\t\t\t\t\t\tSET data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\t\t\t\t\tAND id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($good_field_id, $mfid['data_input_field_id'], $mfid['id']));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcacti_log('No Bad Data Template RRD Records', false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_input_fields WHERE hash = ?', array($bhash['hash']));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcacti_log('WARNING: Could not find Cacti default matching hash for unknown system hash \"' . $bhash['hash'] . '\" for ' . $data_input_id . '.  No repair performed.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log(\"Could not find hash '\" . $hash . \"' for Data Input\", false, 'WEBUI', POLLER_VERBOSITY_DEVDBG);\n\t\t}\n\t}\n}\n\nif (isset($config['cacti_server_os']) && $config['cacti_server_os'] == 'win32' && !function_exists('posix_kill')) {\n\tfunction posix_kill($pid, $signal = SIGTERM) {\n\t\t$wmi   = new COM(\"winmgmts:{impersonationLevel=impersonate}!\\\\\\\\.\\\\root\\\\cimv2\");\n\t\t$procs = $wmi->ExecQuery(\"SELECT ProcessId FROM Win32_Process WHERE ProcessId='\" . $pid . \"'\");\n\n\t\tif (cacti_sizeof($procs)) {\n\t\t\tif ($signal == SIGTERM) {\n\t\t\t\tforeach($procs as $proc) {\n\t\t\t\t\t$proc->Terminate();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nfunction is_ipaddress($ip_address = '') {\n\t/* check for ipv4/v6 */\n\tif (function_exists('filter_var')) {\n\t\tif (filter_var($ip_address, FILTER_VALIDATE_IP) !== false) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} elseif (inet_pton($ip_address) !== false) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * date_time_format\t\tcreate a format string for date/time\n *\n * @return string returns\tdate time format\n */\nfunction date_time_format() {\n\t$datechar = array(\n\t\tGDC_HYPHEN => '-',\n\t\tGDC_SLASH  => '/',\n\t\tGDC_DOT    => '.'\n\t);\n\n\t/* setup date format */\n\t$date_fmt        = read_config_option('default_date_format');\n\t$dateCharSetting = read_config_option('default_datechar');\n\n\tif (!isset($datechar[$dateCharSetting])) {\n\t\t$dateCharSetting = GDC_SLASH;\n\t}\n\n\t$datecharacter = $datechar[$dateCharSetting];\n\n\tswitch ($date_fmt) {\n\t\tcase GD_MO_D_Y:\n\t\t\treturn 'm' . $datecharacter . 'd' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_MN_D_Y:\n\t\t\treturn 'M' . $datecharacter . 'd' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_D_MO_Y:\n\t\t\treturn 'd' . $datecharacter . 'm' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_D_MN_Y:\n\t\t\treturn 'd' . $datecharacter . 'M' . $datecharacter . 'Y H:i:s';\n\t\tcase GD_Y_MO_D:\n\t\t\treturn 'Y' . $datecharacter . 'm' . $datecharacter . 'd H:i:s';\n\t\tcase GD_Y_MN_D:\n\t\t\treturn 'Y' . $datecharacter . 'M' . $datecharacter . 'd H:i:s';\n\t\tdefault:\n\t\t\treturn 'Y' . $datecharacter . 'm' . $datecharacter . 'd H:i:s';\n\t}\n}\n\n/**\n * get_cacti_version    Generic function to get the cacti version\n */\nfunction get_cacti_version() {\n\tstatic $version = '';\n\n\tif ($version == '') {\n\t\t$version = trim(db_fetch_cell('SELECT cacti FROM version LIMIT 1'));\n\t}\n\n\treturn $version;\n}\n\n/**\n * get_cacti_version_text    Return the cacti version text including beta moniker\n */\nfunction get_cacti_version_text($include_version = true) {\n\tif ($include_version) {\n\t\treturn trim(__('Version %s %s', CACTI_VERSION, (defined('CACTI_VERSION_BETA') ? __('- Beta %s', CACTI_VERSION_BETA):'')));\n\t} else {\n\t\treturn trim(__('%s %s', CACTI_VERSION, (defined('CACTI_VERSION_BETA') ? __('- Beta %s', CACTI_VERSION_BETA):'')));\n\t}\n}\n\n/**\n * get_cacti_cli_version() {\n */\nfunction get_cacti_cli_version() {\n\t$dbversion = get_cacti_version();\n\t$version = get_cacti_version_text(false);\n\treturn $version . ' (DB: ' . $dbversion . ')';\n}\n\n/**\n * cacti_version_compare - Compare Cacti version numbers\n */\nfunction cacti_version_compare($version1, $version2, $operator = '>') {\n\tif ($version1 == 'new_install') {\n\t\t$version1 = CACTI_VERSION;\n\t}\n\n\t$length   = max(cacti_sizeof(explode('.', $version1)), cacti_sizeof(explode('.', $version2)));\n\t$version1 = version_to_decimal($version1, $length);\n\t$version2 = version_to_decimal($version2, $length);\n\n\tswitch ($operator) {\n\t\tcase '<':\n\t\t\tif ($version1 < $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '<=':\n\t\t\tif ($version1 <= $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '>=':\n\t\t\tif ($version1 >= $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '>':\n\t\t\tif ($version1 > $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '==':\n\t\t\tif ($version1 == $version2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn version_compare($version1, $version2, $operator);\n\t}\n\treturn false;\n}\n\n/**\n * version_to_decimal - convert version string to decimal\n */\nfunction version_to_decimal($version, $length = 1) {\n\t$newver = '';\n\t$minor  = '';\n\n\t$parts = explode('.', $version);\n\tforeach($parts as $part) {\n\t\tif (is_numeric($part)) {\n\t\t\t$part = substr('00' . $part, -2);\n\t\t\t$newver .= $part;\n\t\t} else {\n\t\t\t$minor = substr($part, -1);\n\t\t\t$major = substr($part, 0, strlen($part)-1);\n\t\t\t$major = substr('00' . $major, -2);\n\t\t\t$newver .= $major;\n\t\t}\n\t}\n\n\tif (cacti_sizeof($parts) < $length) {\n\t\t$i = cacti_sizeof($parts);\n\t\twhile($i < $length) {\n\t\t\t$newver .= '00';\n\t\t\t$i++;\n\t\t}\n\t}\n\n\tif ($minor != '') {\n\t\t$int = ord($minor);\n\t} else {\n\t\t$int = 0;\n\t}\n\n\treturn @hexdec($newver) * 1000 + $int;\n}\n\n/**\n * cacti_gethostinfo - obtains the dns information for a host\n */\nfunction cacti_gethostinfo($hostname, $type = DNS_ALL) {\n\treturn dns_get_record($hostname, $type);\n}\n\n/**\n * cacti_gethostbyname - a ip/ipv6 replacement for php's gethostbyname function\n */\nfunction cacti_gethostbyname($hostname, $type = '') {\n\tif ($type == '') {\n\t\t$type = DNS_A + DNS_AAAA;\n\t}\n\n\tif ($type != DNS_AAAA) {\n\t\t$host = gethostbyname($hostname);\n\t\tif ($host !== $hostname) {\n\t\t\treturn $host;\n\t\t}\n\t}\n\n\t$return = cacti_gethostinfo($hostname, $type);\n\n\tif (cacti_sizeof($return)) {\n\t\tforeach($return as $record) {\n\t\t\tswitch($record['type']) {\n\t\t\tcase 'A':\n\t\t\t\treturn $record['ip'];\n\t\t\t\tbreak;\n\t\t\tcase 'AAAA':\n\t\t\t\treturn $record['ipv6'];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $hostname;\n}\n\nfunction get_nonsystem_data_input($data_input_id) {\n\tglobal $hash_system_data_inputs;\n\n\t$diid = db_fetch_cell_prepared('SELECT id FROM data_input\n\t\tWHERE hash NOT IN (\"' . implode('\",\"', $hash_system_data_inputs) . '\")\n\t\tAND id = ?',\n\t\tarray($data_input_id));\n\n\treturn $diid;\n}\n\nfunction get_rrdtool_version() {\n\tstatic $version = '';\n\n\tif ($version == '') {\n\t\t$version = str_replace('rrd-', '', str_replace('.x', '.0', read_config_option('rrdtool_version') ?: read_default_config_option('rrdtool_version') ?: '1.4.0' ));\n\t}\n\n\treturn $version;\n}\n\nfunction get_installed_rrdtool_version() {\n\tglobal $config, $rrdtool_versions;\n\tstatic $version = '';\n\n\tif ($version == '') {\n\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t$shell = shell_exec(cacti_escapeshellcmd(read_config_option('path_rrdtool')) . ' -v');\n\t\t} else {\n\t\t\t$shell = shell_exec(cacti_escapeshellcmd(read_config_option('path_rrdtool')) . ' -v 2>&1');\n\t\t}\n\n\t\t$version = false;\n\t\tif (preg_match('/^RRDtool ([0-9.]+) /', $shell, $matches)) {\n\t\t\tforeach ($rrdtool_versions as $rrdtool_version => $rrdtool_version_text) {\n\t\t\t\tif (cacti_version_compare($rrdtool_version, $matches[1], '<=')) {\n\t\t\t\t\t$version = $rrdtool_version;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $version;\n}\n\nfunction get_md5_hash($path) {\n\t$md5 = 0;\n\n\tif (db_table_exists('poller_resource_cache')) {\n\t\t$md5 = db_fetch_cell_prepared('SELECT md5sum\n\t\t\tFROM poller_resource_cache\n\t\t\tWHERE `path` = ?',\n\t\t\tarray($path));\n\t}\n\n\tif (empty($md5)) {\n\t\tif (file_exists($path)) {\n\t\t\t$md5 = md5_file($path);\n\t\t} else {\n\t\t\t$md5 = md5_file(dirname(__FILE__) . '/../' . $path);\n\t\t}\n\t}\n\n\treturn $md5;\n}\n\nfunction get_md5_include_js($path, $async = false) {\n\tglobal $config;\n\n\tif (file_exists($path)) {\n\t\t$npath = str_replace($config['base_path'] . '/', '', $path);\n\t} else {\n\t\t$npath = $path;\n\t}\n\n\tif ($async) {\n\t\treturn '<script type=\\'text/javascript\\' src=\\'' . $config['url_path'] . $npath . '?' . get_md5_hash($path) . '\\' async></script>' . PHP_EOL;\n\t} else {\n\t\treturn '<script type=\\'text/javascript\\' src=\\'' . $config['url_path'] . $npath . '?' . get_md5_hash($path) . '\\'></script>' . PHP_EOL;\n\t}\n}\n\nfunction get_md5_include_css($path) {\n\tglobal $config;\n\n\treturn '<link href=\\''. $config['url_path'] . $path . '?' . get_md5_hash($path) . '\\' type=\\'text/css\\' rel=\\'stylesheet\\'>' . PHP_EOL;\n}\n\nfunction is_resource_writable($path) {\n\tif (empty($path)) {\n\t\treturn false;\n\t}\n\n\tif ($path[strlen($path)-1] == '/') {\n\t\treturn is_resource_writable($path . uniqid(mt_rand()) . '.tmp');\n\t}\n\n\tif (file_exists($path)) {\n\t\tif (($f = @fopen($path, 'a'))) {\n\t\t\tfclose($f);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tif (($f = @fopen($path, 'w'))) {\n\t\tfclose($f);\n\t\tunlink($path);\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction recursive_chown($path, $uid, $gid) {\n    $d = opendir($path);\n\n\twhile(($file = readdir($d)) !== false) {\n\t\tif ($file != '.' && $file != '..') {\n\t\t\t$fullpath = $path . '/' . $file ;\n\n\t\t\tif (filetype($fullpath) == 'dir') {\n\t\t\t\treturn recursive_chown($fullpath, $uid, $gid);\n\t\t\t}\n\n\t\t\t$success = chown($fullpath, $uid);\n\t\t\tif ($success) {\n\t\t\t\t$success = chgrp($fullpath, $gid);\n\t\t\t}\n        }\n\n\t\tif (!$success) {\n\t\t\treturn false;\n\t\t}\n    }\n\n\treturn true;\n}\n\nfunction get_validated_theme($theme, $defaultTheme) {\n\tglobal $config;\n\tif (isset($theme) && strlen($theme)) {\n\t\t$themePath = $config['base_path'] . '/include/themes/' . $theme . '/main.css';\n\t\tif (file_exists($themePath)) {\n\t\t\treturn $theme;\n\t\t}\n\t}\n\n\treturn $defaultTheme;\n}\n\nfunction get_validated_language($language, $defaultLanguage) {\n\tif (isset($language) && strlen($language)) {\n\t\treturn $language;\n\t}\n\n\treturn $defaultLanguage;\n}\n\nfunction get_running_user() {\n\tglobal $config;\n\n\tstatic $tmp_user = '';\n\n\tif (empty($tmp_user)) {\n\t\tif (function_exists('posix_geteuid')) {\n\t\t\t$tmp_user = posix_getpwuid(posix_geteuid())['name'];\n\t\t}\n\t}\n\n\tif (empty($tmp_user)) {\n\t\t$tmp_file = tempnam(sys_get_temp_dir(), 'uid'); $f_owner = '';\n\n\t\tif (is_resource_writable($tmp_file)) {\n\t\t\tif (file_exists($tmp_file)) {\n\t\t\t\tunlink($tmp_file);\n\t\t\t}\n\n\t\t\tfile_put_contents($tmp_file, 'cacti');\n\n\t\t\t$f_owner = fileowner($tmp_file);\n\t\t\t$f_source = 'file';\n\n\t\t\tif (file_exists($tmp_file)) {\n\t\t\t\tunlink($tmp_file);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($f_owner) && function_exists('posix_getuid')) {\n\t\t\t$f_owner = posix_getuid();\n\t\t\t$f_source = 'posix';\n\t\t}\n\n\t\tif (!empty($f_owner) && function_exists('posix_getpwuid1')) {\n\t\t\t$f_array = posix_getpwuid($f_owner);\n\t\t\tif (isset($f_array['name'])) {\n\t\t\t\t$tmp_user = $f_array['name'];\n\t\t\t}\n\t\t}\n\n\t\tif (empty($tmp_user)) {\n\t\t\texec('id -nu', $o, $r);\n\t\t\tif ($r == 0) {\n\t\t\t\t$tmp_user = trim($o['0']);\n\t\t\t}\n\t\t}\n\n\t\t/*** Code left here for future development, don't think it is right ***\n\t\t *\n\t\tif (empty($tmp_user) && !empty($f_owner) && is_readable('/etc/passwd'))\n\t\t{\n\t\t\texec(sprintf('grep :%s: /etc/passwd | cut -d: -f1', (int) $uid), $o, $r);\n\t\t\tif ($r == 0) {\n\t\t\t\t$tmp_user = 'passwd-' . trim($o['0']);\n\t\t\t}\n\t\t}\n\t\t */\n\n\t\t// Easy way first\n\t\tif (empty($tmp_user)) {\n\t\t\t$user = get_current_user();\n\t\t\tif ($user != '') {\n\t\t\t\t$tmp_user = $user;\n\t\t\t}\n\t\t}\n\n\t\t// Fallback method\n\t\tif (empty($tmp_user)) {\n\t\t\t$user = getenv('USERNAME');\n\t\t\tif ($user != '') {\n\t\t\t\t$tmp_user = $user;\n\t\t\t}\n\n\t\t\tif (empty($tmp_user)) {\n\t\t\t\t$user = getenv('USER');\n\t\t\t\tif ($user != '') {\n\t\t\t\t\t$tmp_user = $user;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (empty($tmp_user) ? 'apache' : $tmp_user);\n}\n\nfunction get_debug_prefix() {\n\t$dateTime = new DateTime('NOW');\n\t$dateTime = $dateTime->format('Y-m-d H:i:s.u');\n\n\treturn sprintf('<[ %s | %7d ]> -- ', $dateTime, getmypid());\n}\n\nfunction get_client_addr() {\n\tglobal $config, $allowed_proxy_headers;\n\n\t$proxy_headers = $config['proxy_headers'] ?? null;\n\tif ($proxy_headers === null) {\n\t\t$last_time = read_config_option('proxy_alert');\n\t\tif (empty($last_time)) {\n\t\t\t$last_time = date('Y-m-d');\n\t\t}\n\n\t\t$last_date = new DateTime($last_time);\n\t\t$this_date = new Datetime();\n\n\t\t$this_diff = $this_date->diff($last_date);\n\t\t$this_days = $this_diff->format('%a');\n\n\t\tif ($this_days) {\n\t\t\tcacti_log('WARNING: Configuration option \"proxy_headers\" will be automatically false in future releases.  Please set if you require proxy IPs to be used', false, 'AUTH');\n\t\t\tset_config_option('proxy_alert', date('Y-m-d'));\n\t\t}\n\n\t\t$proxy_headers = true;\n\t}\n\n\t/* IMPORTANT: The null default for 1.2.x is true, but this will change in future version */\n\tif ($proxy_headers === null || $proxy_headers === true) {\n\t\t$proxy_headers = $allowed_proxy_headers;\n\t} elseif (is_array($proxy_headers)) {\n\t\t$proxy_headers = array_intersect($proxy_headers, $allowed_proxy_headers);\n\t}\n\n\tif (!is_array($proxy_headers)) {\n\t\t$proxy_headers = [];\n\t}\n\n\tif (!in_array('REMOTE_ADDR', $proxy_headers)) {\n\t\t$proxy_headers[] = 'REMOTE_ADDR';\n\t}\n\n\t$client_addr = false;\n\tforeach ($proxy_headers as $header) {\n\t\tif (!empty($_SERVER[$header])) {\n\t\t\t$header_ips = explode(',', $_SERVER[$header]);\n\t\t\tforeach ($header_ips as $header_ip) {\n\t\t\t\tif (!empty($header_ip)) {\n\t\t\t\t\tif (!filter_var($header_ip, FILTER_VALIDATE_IP)) {\n\t\t\t\t\t\tcacti_log('ERROR: Invalid remote client IP Address found in header (' . $header . ').', false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$client_addr = $header_ip;\n\t\t\t\t\t\tcacti_log('DEBUG: Using remote client IP Address found in header (' . $header . '): ' . $client_addr . ' (' . $_SERVER[$header] . ')', false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $client_addr;\n}\n\nfunction cacti_pton($ipaddr) {\n\t// Strip out the netmask, if there is one.\n\t$subnet_pos = strpos($ipaddr, '/');\n\tif ($subnet_pos) {\n\t\t$subnet = substr($ipaddr, $subnet_pos+1);\n\t\t$ipaddr = substr($ipaddr, 0, $subnet_pos);\n\t} else {\n\t\t$subnet = null; // No netmask present\n\t}\n\n\t// Convert address to packed format\n\t$addr = @inet_pton($ipaddr);\n\tif ($addr === false) {\n\t\treturn false;\n\t}\n\n\t// Maximum netmask length = same as packed address\n\t$len = 8*strlen($addr);\n\n\tif (!empty($subnet)) {\n\t\tif (!is_numeric($subnet)) {\n\t\t\treturn false;\n\t\t} elseif ($subnet > $len) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!is_numeric($subnet)) {\n\t\t$subnet=$len;\n\t} else {\n\t\t$subnet=(int)$subnet;\n\t}\n\n\t// Create a hex expression of the subnet mask\n\t$mask=str_repeat('f',$subnet>>2);\n\tswitch($subnet&3) {\n\t\tcase 3:\n\t\t\t$mask.='e';\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t$mask.='c'; break;\n\t\tcase 1:\n\t\t\t$mask.='8'; break;\n\t}\n\t$mask=str_pad($mask,$len>>2,'0');\n\n\t// Packed representation of netmask\n\t$mask=pack('H*',$mask);\n\n\t$result = array('ip' => $addr, 'subnet' => $mask);\n\treturn $result;\n}\n\nfunction cacti_ntop($addr) {\n\tif (empty($addr)) {\n\t\treturn false;\n\t}\n\n\tif (is_array($addr)) {\n\t\tforeach ($addr as $ip) {\n\t\t\t$addr = $ip;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn @inet_ntop($addr);\n}\n\nfunction cacti_ntoc($subnet, $ipv6 = false) {\n\t$result = false;\n\t$count = 0;\n\tforeach(str_split($subnet) as $char) {\n\t\t$i = ord($char);\n\t\twhile (($i & 128) == 128) {\n\t\t\t$count++;\n\t\t\t$i = ($i << 1) % 256;\n\t\t}\n\t}\n\n\treturn $count;\n}\n\nfunction cacti_ptoa($title, $addr) {\n\t// Let's display it as hexadecimal format\n\tforeach(str_split($addr) as $char) {\n\t\tprint str_pad(dechex(ord($char)),2,'0',STR_PAD_LEFT);\n\t}\n}\n\nfunction cacti_sizeof($array) {\n\treturn ($array === false || !is_array($array)) ? 0 : sizeof($array);\n}\n\nfunction cacti_count($array) {\n\treturn ($array === false || !is_array($array)) ? 0 : count($array);\n}\n\nfunction is_function_enabled($name) {\n\treturn function_exists($name) &&\n\t\t!in_array($name, array_map('trim', explode(', ', ini_get('disable_functions')))) &&\n\t\tstrtolower(ini_get('safe_mode')) != 1;\n}\n\nfunction is_page_ajax() {\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest' ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction raise_ajax_permission_denied() {\n\tif (is_page_ajax()) {\n\t\theader('HTTP/1.1 401 ' . __('Permission Denied'));\n\t\tprint __('You are not permitted to access this section of Cacti.') . '  ' . __('If you feel that this is an error. Please contact your Cacti Administrator.');\n\t\texit;\n\t}\n}\n\n/**\n * cacti_session_start - Create a Cacti session from the settings set by the administrator\n *\n * @return - null\n */\nfunction cacti_session_start() {\n\tglobal $config;\n\n\t/* initialize php session */\n\tif (!function_exists('session_name')) {\n\t\tdie('PHP Session Management is missing, please install PHP Session module');\n\t}\n\n\tsession_name($config['cacti_session_name']);\n\n\tif (session_status() === PHP_SESSION_NONE) {\n\t\t$session_restart = '';\n\t} else {\n\t\t$session_restart = 're';\n\t}\n\n\t$session_result = session_start($config['cookie_options']);\n\n\tif (!$session_result) {\n\t\tcacti_log('Session \"' . session_id() . '\" ' . $session_restart . 'start failed! ' . cacti_debug_backtrace('', false, false, 0, 1), false, 'WARNING:');\n\t}\n}\n\n/**\n * cacti_session_close - Closes the open Cacti session if it is open\n * it can be re-opened afterwards in the case after a long running query\n *\n * @return - null\n */\nfunction cacti_session_close() {\n\tsession_write_close();\n}\n\n/**\n * cacti_session_destroy - Destroys the login current session\n *\n * @return - null\n */\nfunction cacti_session_destroy() {\n\tsession_unset();\n\tsession_destroy();\n}\n\n/**\n * cacti_cookie_set - Allows for settings an arbitry cookie name and value\n * used for CSRF protection.\n *\n * @return - null\n */\nfunction cacti_cookie_set($session, $val) {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() + 3600,\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie($session, $val, $options);\n\t} else {\n\t\tsetcookie($session, $val, time() + 3600, $config['url_path'], $domain, $secure, true);\n\t}\n}\n\n/**\n * cacti_cookie_logout - Clears the Cacti and the 'keep me logged in' cookies\n *\n * @return - null\n */\nfunction cacti_cookie_logout() {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() - 3600,\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie(session_name(), '', $options);\n\t\tsetcookie('cacti_remembers', '', $options);\n\t} else {\n\t\tsetcookie(session_name(), '', time() - 3600, $config['url_path'], $domain, $secure, true);\n\t\tsetcookie('cacti_remembers', '', time() - 3600, $config['url_path'], $domain, $secure, true);\n\t}\n\n\tunset($_COOKIE[$config['cacti_session_name']]);\n}\n\n/**\n * cacti_cookie_session_set - Sets the cacti 'keep me logged in' cookie\n *\n * @return - null\n */\nfunction cacti_cookie_session_set($user, $realm, $nssecret) {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\t$_SESSION['cacti_remembers'] = true;\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() + (86400*30),\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie('cacti_remembers', $user . ',' . $realm . ',' . $nssecret, $options);\n\t} else {\n\t\tsetcookie('cacti_remembers', $user . ',' . $realm . ',' . $nssecret, time() + (86400*30), $config['url_path'], $domain, $secure, true);\n\t}\n}\n\n/**\n * cacti_cookie_session_logout - Logs out of Cacti and the remember me session\n *\n * @return - null\n */\nfunction cacti_cookie_session_logout() {\n\tglobal $config;\n\n\tif (isset($config['cookie_options']['cookie_domain'])) {\n\t\t$domain = $config['cookie_options']['cookie_domain'];\n\t} else {\n\t\t$domain = '';\n\t}\n\n\tif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\t\t$secure = true;\n\t} else {\n\t\t$secure = false;\n\t}\n\n\tif (version_compare(PHP_VERSION, '7.3', '>=')) {\n\t\t$options = array(\n\t\t\t'path'     => $config['url_path'],\n\t\t\t'expires'  => time() - 3600,\n\t\t\t'domain'   => $domain,\n\t\t\t'secure'   => $secure,\n\t\t\t'httponly' => true,\n\t\t\t'samesite' => 'Strict'\n\t\t);\n\n\t\tsetcookie('cacti_remembers', '', $options);\n\t} else {\n\t\tsetcookie('cacti_remembers', '', time() - 3600, $config['url_path'], $domain, $secure, true);\n\t}\n}\n\n/**\n * cacti_browser_zone_set - Set the PHP timezone to the\n * browsers timezone if enabled.\n *\n * @return - null\n */\nfunction cacti_browser_zone_set() {\n\tif (cacti_browser_zone_enabled()) {\n\t\tif (isset($_SESSION['sess_browser_php_tz'])) {\n\t\t\tini_set('date.timezone', $_SESSION['sess_browser_php_tz']);\n\t\t\tputenv('TZ=' . $_SESSION['sess_browser_system_tz']);\n\t\t}\n\t}\n}\n\n/**\n * cacti_system_zone_set - Set the PHP timezone to the\n * systems timezone.\n *\n * @return - null\n */\nfunction cacti_system_zone_set() {\n\tif (cacti_browser_zone_enabled()) {\n\t\tif (isset($_SESSION['sess_php_tz'])) {\n\t\t\tini_set('date.timezone', $_SESSION['sess_php_tz']);\n\t\t\tputenv('TZ=' . $_SESSION['sess_system_tz']);\n\t\t}\n\t}\n}\n\nfunction cacti_browser_zone_enabled() {\n\t$system_setting = read_config_option('client_timezone_support');\n\n\tif (empty($system_setting)) {\n\t\treturn false;\n\t} else {\n\t\t$user_setting = read_user_setting('client_timezone_support', '0');\n\n\t\tif (empty($user_setting)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\n/**\n * cacti_time_zone_set - Givin an offset in minutes, attempt\n * to set a PHP date.timezone.  There are some oddballs that\n * we have to accomodate.\n *\n * @return - null\n */\nfunction cacti_time_zone_set($gmt_offset) {\n\tif (!cacti_browser_zone_enabled()) {\n\t\treturn;\n\t}\n\n\t$hours     = floor($gmt_offset / 60);\n\t$remaining = $gmt_offset % 60;\n\n\tif (!isset($_SESSION['sess_php_tz'])) {\n\t\t$_SESSION['sess_php_tz']    = ini_get('date.timezone');\n\t\t$_SESSION['sess_system_tz'] = getenv('TZ');\n\t}\n\n\t$zone = timezone_name_from_abbr('', $gmt_offset);\n\n\tif ($remaining == 0) {\n\t\tputenv('TZ=GMT' . ($hours > 0 ? '-':'+') . abs($hours));\n\n\t\t$sys_offset = 'GMT' . ($hours > 0 ? '-':'+') . abs($hours);\n\n\t\tif ($zone !== false) {\n\t\t\t$php_offset = $zone;\n\t\t\tini_set('date.timezone', $zone);\n\t\t} else {\n\t\t\t$php_offset = 'Etc/GMT' . ($hours > 0 ? '-':'+') . abs($hours);\n\t\t\tini_set('date.timezone', 'Etc/GMT' . ($hours > 0 ? '-':'+') . abs($hours));\n\t\t}\n\n\t\t$_SESSION['sess_browser_system_tz'] = $sys_offset;\n\t\t$_SESSION['sess_browser_php_tz']    = $php_offset;\n\t} else {\n\t\t$time = ($hours > 0 ? '-':'+') . abs($hours) . ':' . substr('00' . $remaining, -2);\n\n\t\tif ($zone === false) {\n\t\t\tswitch($time) {\n\t\t\t\tcase '+3:30':\n\t\t\t\t\t$zone = 'IRST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+4:30':\n\t\t\t\t\t$zone = 'IRDT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+5:30':\n\t\t\t\t\t$zone = 'IST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+5:45':\n\t\t\t\t\t$zone = 'NPT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+6:30':\n\t\t\t\t\t$zone = 'CCT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+9:30':\n\t\t\t\t\t$zone = 'ACST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+10:30':\n\t\t\t\t\t$zone = 'ACDT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+8:45':\n\t\t\t\t\t$zone = 'ACWST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+12:45':\n\t\t\t\t\t$zone = 'CHAST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+13:45':\n\t\t\t\t\t$zone = 'CHADT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-3:30':\n\t\t\t\t\t$zone = 'NST';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-2:30':\n\t\t\t\t\t$zone = 'NDT';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-9:30':\n\t\t\t\t\t$zone = 'MART';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ($zone !== false) {\n\t\t\t\t$zone = timezone_name_from_abbr($zone);\n\t\t\t}\n\t\t}\n\n\t\t$php_offset = $zone;\n\t\t$sys_offset = 'GMT' . $time;\n\n\t\tputenv('TZ=GMT' . $time);\n\n\t\tif ($zone != '') {\n\t\t\tini_set('date.timezone', $zone);\n\t\t}\n\n\t\t$_SESSION['sess_browser_system_tz'] = $sys_offset;\n\t\t$_SESSION['sess_browser_php_tz']    = $php_offset;\n\t}\n}\n\nfunction debounce_run_notification($id, $freqnency = 1200) {\n\t/* debounce admin emails */\n\t$last = read_config_option('debounce_' . $id);\n\t$now  = time();\n\n\tif (empty($last) || $now - $last > 7200) {\n\t\tset_config_option('debounce_' . $id, $now);\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2022 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire(__DIR__ . '/include/global.php');\nrequire_once($config['base_path'] . '/lib/api_device.php');\nrequire_once($config['base_path'] . '/lib/api_data_source.php');\ninclude_once($config['base_path'] . '/lib/data_query.php');\nrequire_once($config['base_path'] . '/lib/api_graph.php');\nrequire_once($config['base_path'] . '/lib/api_tree.php');\nrequire_once($config['base_path'] . '/lib/data_query.php');\nrequire_once($config['base_path'] . '/lib/html_form_template.php');\nrequire_once($config['base_path'] . '/lib/ping.php');\nrequire_once($config['base_path'] . '/lib/poller.php');\nrequire_once($config['base_path'] . '/lib/rrd.php');\nrequire_once($config['base_path'] . '/lib/snmp.php');\nrequire_once($config['base_path'] . '/lib/sort.php');\nrequire_once($config['base_path'] . '/lib/template.php');\nrequire_once($config['base_path'] . '/lib/utility.php');\n\n$debug = false;\n\nif ($config['poller_id'] > 1 && $config['connection'] == 'online') {\n\tif (get_nfilter_request_var('action') == 'runquery') {\n\t\tdb_force_remote_cnn();\n\t}\n\n\t$poller_db_cnn_id = $remote_db_cnn_id;\n} else {\n\t$poller_db_cnn_id = false;\n}\n\nif (!remote_client_authorized()) {\n\tprint 'FATAL: You are not authorized to use this service';\n\texit;\n}\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'polldata':\n\t\t// Only let realtime polling run for a short time\n\t\tini_set('max_execution_time', read_config_option('script_timeout'));\n\n\t\tdebug('Start: Poling Data for Realtime');\n\t\tpoll_for_data();\n\t\tdebug('End: Poling Data for Realtime');\n\n\t\tbreak;\n\tcase 'runquery':\n\t\tdebug('Start: Running Data Query');\n\t\trun_remote_data_query();\n\t\tdebug('End: Running Data Query');\n\n\t\tbreak;\n\tcase 'ping':\n\t\tdebug('Start: Pinging Device');\n\t\tping_device();\n\t\tdebug('End: Pinging Device');\n\n\t\tbreak;\n\tcase 'snmpget':\n\t\tdebug('Start: Performing SNMP Get Request');\n\t\tget_snmp_data();\n\t\tdebug('End: Performing SNMP Get Request');\n\n\t\tbreak;\n\tcase 'snmpwalk':\n\t\tdebug('Start: Performing SNMP Walk Request');\n\t\tget_snmp_data_walk();\n\t\tdebug('End: Performing SNMP Walk Request');\n\n\t\tbreak;\n\tcase 'graph_json':\n\t\tdebug('Start: Performing Graph Request');\n\t\tget_graph_data();\n\t\tdebug('End: Performing Graph Request');\n\n\t\tbreak;\n\tcase 'discover':\n\t\tdebug('Start:Performing Network Discovery Request');\n\t\trun_remote_discovery();\n\t\tdebug('End:Performing Network Discovery Request');\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('remote_agent', get_request_var('action'))) {\n\t\t\tdebug('WARNING: Unknown Agent Request');\n\t\t\tprint 'Unknown Agent Request';\n\t\t}\n}\n\nexit;\n\nfunction debug($message) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\tcacti_log(\"REMOTE DEBUG: \" . trim($message), false, 'WEBSVCS');\n\t}\n}\n\nfunction remote_agent_strip_domain($host) {\n\tif (strpos($host, '.') !== false) {\n\t\t$parts = explode('.', $host);\n\t\treturn $parts[0];\n\t} else {\n\t\treturn $host;\n\t}\n}\n\nfunction remote_client_authorized() {\n\tglobal $poller_db_cnn_id;\n\n\t/* don't allow to run from the command line */\n\t$client_addr = get_client_addr();\n\tif ($client_addr === false) {\n\t\treturn false;\n\t}\n\n\tif (!filter_var($client_addr, FILTER_VALIDATE_IP)) {\n\t\tcacti_log('ERROR: Invalid remote agent client IP Address.  Exiting');\n\t\treturn false;\n\t}\n\n\t$client_name = gethostbyaddr($client_addr);\n\n\tif ($client_name == $client_addr) {\n\t\tcacti_log('NOTE: Unable to resolve hostname from address ' . $client_addr, false, 'WEBUI', POLLER_VERBOSITY_MEDIUM);\n\t} else {\n\t\t$client_name = remote_agent_strip_domain($client_name);\n\t}\n\n\t$pollers = db_fetch_assoc('SELECT * FROM poller', true, $poller_db_cnn_id);\n\n\tif (cacti_sizeof($pollers)) {\n\t\tforeach($pollers as $poller) {\n\t\t\tif (remote_agent_strip_domain($poller['hostname']) == $client_name) {\n\t\t\t\treturn true;\n\t\t\t} elseif ($poller['hostname'] == $client_addr) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tcacti_log(\"Unauthorized remote agent access attempt from $client_name ($client_addr)\");\n\n\treturn false;\n}\n\nfunction get_graph_data() {\n\tget_filter_request_var('graph_start');\n\tget_filter_request_var('graph_end');\n\tget_filter_request_var('graph_height');\n\tget_filter_request_var('graph_width');\n\tget_filter_request_var('local_graph_id');\n\tget_filter_request_var('rra_id');\n\tget_filter_request_var('graph_theme', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tget_filter_request_var('graph_nolegend', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tget_filter_request_var('effective_user');\n\n\t$local_graph_id   = get_filter_request_var('local_graph_id');\n\t$rra_id           = get_filter_request_var('rra_id');\n\n\t$graph_data_array = array();\n\n\t/* override: graph start time (unix time) */\n\tif (!isempty_request_var('graph_start') && get_request_var('graph_start') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t\t$graph_data_array['graph_start'] = get_request_var('graph_start');\n\t}\n\n\t/* override: graph end time (unix time) */\n\tif (!isempty_request_var('graph_end') && get_request_var('graph_end') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t\t$graph_data_array['graph_end'] = get_request_var('graph_end');\n\t}\n\n\t/* override: graph height (in pixels) */\n\tif (!isempty_request_var('graph_height') && get_request_var('graph_height') < 3000) {\n\t\t$graph_data_array['graph_height'] = get_request_var('graph_height');\n\t}\n\n\t/* override: graph width (in pixels) */\n\tif (!isempty_request_var('graph_width') && get_request_var('graph_width') < 3000) {\n\t\t$graph_data_array['graph_width'] = get_request_var('graph_width');\n\t}\n\n\t/* override: skip drawing the legend? */\n\tif (!isempty_request_var('graph_nolegend')) {\n\t\t$graph_data_array['graph_nolegend'] = get_request_var('graph_nolegend');\n\t}\n\n\t/* print RRDtool graph source? */\n\tif (!isempty_request_var('show_source')) {\n\t\t$graph_data_array['print_source'] = get_request_var('show_source');\n\t}\n\n\t/* disable cache check */\n\tif (isset_request_var('disable_cache')) {\n\t\t$graph_data_array['disable_cache'] = true;\n\t}\n\n\t/* set the theme */\n\tif (isset_request_var('graph_theme')) {\n\t\t$graph_data_array['graph_theme'] = get_request_var('graph_theme');\n\t}\n\n\t/* set the theme */\n\tif (isset_request_var('effective_user')) {\n\t\t$user = get_request_var('effective_user');\n\t} else {\n\t\t$user = 0;\n\t}\n\n\t$graph_data_array['graphv'] = true;\n\n\t$xport_options = array();\n\n\tprint @rrdtool_function_graph($local_graph_id, $rra_id, $graph_data_array, null, $xport_options, $user);\n\n\treturn true;\n}\n\nfunction get_snmp_data() {\n\t$host_id = get_filter_request_var('host_id');\n\t$oid     = get_nfilter_request_var('oid');\n\n\tif (!empty($host_id)) {\n\t\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\tif ($session === false) {\n\t\t\t$output = 'U';\n\t\t} else {\n\t\t\t$output = cacti_snmp_session_get($session, $oid);\n\t\t\t$session->close();\n\t\t}\n\t}\n\n\tprint $output;\n}\n\nfunction get_snmp_data_walk() {\n\t$host_id = get_filter_request_var('host_id');\n\t$oid     = get_nfilter_request_var('oid');\n\n\tif (!empty($host_id)) {\n\t\t$host = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\tif ($session === false) {\n\t\t\t$output = 'U';\n\t\t} else {\n\t\t\t$output = cacti_snmp_session_walk($session, $oid);\n\t\t\t$session->close();\n\t\t}\n\t}\n\n\tif (cacti_sizeof($output)) {\n\t\tprint json_encode($output);\n\t} else {\n\t\tprint 'U';\n\t}\n}\n\nfunction ping_device() {\n\t$host_id = get_filter_request_var('host_id');\n\tapi_device_ping_device($host_id, true);\n}\n\nfunction poll_for_data() {\n\tglobal $config;\n\n\t$local_data_ids = get_nfilter_request_var('local_data_ids');\n\t$host_id        = get_filter_request_var('host_id');\n\t$poller_id      = get_filter_request_var('poller_id');\n\t$return         = array();\n\n\t$i = 0;\n\n\tif (cacti_sizeof($local_data_ids)) {\n\t\tforeach($local_data_ids as $local_data_id) {\n\t\t\tinput_validate_input_number($local_data_id);\n\n\t\t\t$items = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM poller_item\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tAND local_data_id = ?',\n\t\t\t\tarray($host_id, $local_data_id));\n\n\t\t\t$script_server_calls = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM poller_item\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tAND local_data_id = ?\n\t\t\t\tAND action = 2',\n\t\t\t\tarray($host_id, $local_data_id));\n\n\t\t\tif (cacti_sizeof($items)) {\n\t\t\t\tforeach($items as $item) {\n\t\t\t\t\tswitch ($item['action']) {\n\t\t\t\t\tcase POLLER_ACTION_SNMP: /* snmp */\n\t\t\t\t\t\tif (($item['snmp_version'] == 0) || (($item['snmp_community'] == '') && ($item['snmp_version'] != 3))) {\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$host = db_fetch_row_prepared('SELECT ping_retries, max_oids FROM host WHERE hostname = ?', array($item['hostname']));\n\t\t\t\t\t\t\t$session = cacti_snmp_session($item['hostname'], $item['snmp_community'], $item['snmp_version'],\n\t\t\t\t\t\t\t\t$item['snmp_username'], $item['snmp_password'], $item['snmp_auth_protocol'], $item['snmp_priv_passphrase'],\n\t\t\t\t\t\t\t\t$item['snmp_priv_protocol'], $item['snmp_context'], $item['snmp_engine_id'], $item['snmp_port'],\n\t\t\t\t\t\t\t\t$item['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t\t\t\t\tif ($session === false) {\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $item['arg1']);\n\t\t\t\t\t\t\t\t$session->close();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT: /* script (popen) */\n\t\t\t\t\t\t$output = trim(exec_poll($item['arg1']));\n\n\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT_PHP: /* script (php script server) */\n\t\t\t\t\t\t$cactides = array(\n\t\t\t\t\t\t\t0 => array('pipe', 'r'), // stdin is a pipe that the child will read from\n\t\t\t\t\t\t\t1 => array('pipe', 'w'), // stdout is a pipe that the child will write to\n\t\t\t\t\t\t\t2 => array('pipe', 'w')  // stderr is a pipe to write to\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (function_exists('proc_open')) {\n\t\t\t\t\t\t\t$cactiphp = proc_open(read_config_option('path_php_binary') . ' -q ' . $config['base_path'] . '/script_server.php realtime ' . cacti_escapeshellarg($poller_id), $cactides, $pipes);\n\t\t\t\t\t\t\t$output = fgets($pipes[1], 1024);\n\t\t\t\t\t\t\t$using_proc_function = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$using_proc_function = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($using_proc_function == true) {\n\t\t\t\t\t\t\t$output = trim(str_replace(\"\\n\", '', exec_poll_php($item['arg1'], $using_proc_function, $pipes, $cactiphp)));\n\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\tif (($using_proc_function == true) && ($script_server_calls > 0)) {\n\t\t\t\t\t\t\t/* close php server process */\n\t\t\t\t\t\t\tfwrite($pipes[0], \"quit\\r\\n\");\n\t\t\t\t\t\t\tfclose($pipes[0]);\n\t\t\t\t\t\t\tfclose($pipes[1]);\n\t\t\t\t\t\t\tfclose($pipes[2]);\n\n\t\t\t\t\t\t\t$return_value = proc_close($cactiphp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\nfunction run_remote_data_query() {\n\t$host_id = get_filter_request_var('host_id');\n\t$data_query_id = get_filter_request_var('data_query_id');\n\n\tif ($host_id > 0 && $data_query_id > 0) {\n\t\trun_data_query($host_id, $data_query_id);\n\t}\n}\n\nfunction run_remote_discovery() {\n\tglobal $config;\n\n\t$poller_id = cacti_escapeshellarg($config['poller_id']);\n\t$network   = cacti_escapeshellarg(get_filter_request_var('network'));\n\t$php       = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t$path      = cacti_escapeshellarg(read_config_option('path_webroot') . '/poller_automation.php');\n\n\t$options   = ' --poller=' . $poller_id . ' --network=' . $network . ' --force';\n\tif (isset_request_var('debug')) {\n\t\t$options .= ' --debug';\n\t}\n\n\texec_background($php, '-q ' . $path . $options);\n\n\tsleep(2);\n\n\treturn;\n}\n\n"], "filenames": ["CHANGELOG", "auth_login.php", "include/config.php.dist", "include/global.php", "include/global_arrays.php", "lib/auth.php", "lib/functions.php", "remote_agent.php"], "buggy_code_start_loc": [4, 164, 165, 96, 2906, 81, 6725, 301], "buggy_code_end_loc": [4, 266, 165, 96, 2906, 3478, 6756, 448], "fixing_code_start_loc": [5, 164, 166, 97, 2907, 81, 6725, 301], "fixing_code_end_loc": [6, 266, 192, 100, 2923, 3478, 6766, 448], "type": "CWE-77", "message": "Cacti is an open source platform which provides a robust and extensible operational monitoring and fault management framework for users. In affected versions a command injection vulnerability allows an unauthenticated user to execute arbitrary code on a server running Cacti, if a specific data source was selected for any monitored device. The vulnerability resides in the `remote_agent.php` file. This file can be accessed without authentication. This function retrieves the IP address of the client via `get_client_addr` and resolves this IP address to the corresponding hostname via `gethostbyaddr`. After this, it is verified that an entry within the `poller` table exists, where the hostname corresponds to the resolved hostname. If such an entry was found, the function returns `true` and the client is authorized. This authorization can be bypassed due to the implementation of the `get_client_addr` function. The function is defined in the file `lib/functions.php` and checks serval `$_SERVER` variables to determine the IP address of the client. The variables beginning with `HTTP_` can be arbitrarily set by an attacker. Since there is a default entry in the `poller` table with the hostname of the server running Cacti, an attacker can bypass the authentication e.g. by providing the header `Forwarded-For: <TARGETIP>`. This way the function `get_client_addr` returns the IP address of the server running Cacti. The following call to `gethostbyaddr` will resolve this IP address to the hostname of the server, which will pass the `poller` hostname check because of the default entry. After the authorization of the `remote_agent.php` file is bypassed, an attacker can trigger different actions. One of these actions is called `polldata`. The called function `poll_for_data` retrieves a few request parameters and loads the corresponding `poller_item` entries from the database. If the `action` of a `poller_item` equals `POLLER_ACTION_SCRIPT_PHP`, the function `proc_open` is used to execute a PHP script. The attacker-controlled parameter `$poller_id` is retrieved via the function `get_nfilter_request_var`, which allows arbitrary strings. This variable is later inserted into the string passed to `proc_open`, which leads to a command injection vulnerability. By e.g. providing the `poller_id=;id` the `id` command is executed. In order to reach the vulnerable call, the attacker must provide a `host_id` and `local_data_id`, where the `action` of the corresponding `poller_item` is set to `POLLER_ACTION_SCRIPT_PHP`. Both of these ids (`host_id` and `local_data_id`) can easily be bruteforced. The only requirement is that a `poller_item` with an `POLLER_ACTION_SCRIPT_PHP` action exists. This is very likely on a productive instance because this action is added by some predefined templates like `Device - Uptime` or `Device - Polling Time`. This command injection vulnerability allows an unauthenticated user to execute arbitrary commands if a `poller_item` with the `action` type `POLLER_ACTION_SCRIPT_PHP` (`2`) is configured. The authorization bypass should be prevented by not allowing an attacker to make `get_client_addr` (file `lib/functions.php`) return an arbitrary IP address. This could be done by not honoring the `HTTP_...` `$_SERVER` variables. If these should be kept for compatibility reasons it should at least be prevented to fake the IP address of the server running Cacti. This vulnerability has been addressed in both the 1.2.x and 1.3.x release branches with `1.2.23` being the first release containing the patch.", "other": {"cve": {"id": "CVE-2022-46169", "sourceIdentifier": "security-advisories@github.com", "published": "2022-12-05T21:15:10.527", "lastModified": "2022-12-06T20:05:03.760", "vulnStatus": "Analyzed", "cisaExploitAdd": "2023-02-16", "cisaActionDue": "2023-03-09", "cisaRequiredAction": "Apply updates per vendor instructions.", "cisaVulnerabilityName": "Cacti Command Injection Vulnerability", "descriptions": [{"lang": "en", "value": "Cacti is an open source platform which provides a robust and extensible operational monitoring and fault management framework for users. In affected versions a command injection vulnerability allows an unauthenticated user to execute arbitrary code on a server running Cacti, if a specific data source was selected for any monitored device. The vulnerability resides in the `remote_agent.php` file. This file can be accessed without authentication. This function retrieves the IP address of the client via `get_client_addr` and resolves this IP address to the corresponding hostname via `gethostbyaddr`. After this, it is verified that an entry within the `poller` table exists, where the hostname corresponds to the resolved hostname. If such an entry was found, the function returns `true` and the client is authorized. This authorization can be bypassed due to the implementation of the `get_client_addr` function. The function is defined in the file `lib/functions.php` and checks serval `$_SERVER` variables to determine the IP address of the client. The variables beginning with `HTTP_` can be arbitrarily set by an attacker. Since there is a default entry in the `poller` table with the hostname of the server running Cacti, an attacker can bypass the authentication e.g. by providing the header `Forwarded-For: <TARGETIP>`. This way the function `get_client_addr` returns the IP address of the server running Cacti. The following call to `gethostbyaddr` will resolve this IP address to the hostname of the server, which will pass the `poller` hostname check because of the default entry. After the authorization of the `remote_agent.php` file is bypassed, an attacker can trigger different actions. One of these actions is called `polldata`. The called function `poll_for_data` retrieves a few request parameters and loads the corresponding `poller_item` entries from the database. If the `action` of a `poller_item` equals `POLLER_ACTION_SCRIPT_PHP`, the function `proc_open` is used to execute a PHP script. The attacker-controlled parameter `$poller_id` is retrieved via the function `get_nfilter_request_var`, which allows arbitrary strings. This variable is later inserted into the string passed to `proc_open`, which leads to a command injection vulnerability. By e.g. providing the `poller_id=;id` the `id` command is executed. In order to reach the vulnerable call, the attacker must provide a `host_id` and `local_data_id`, where the `action` of the corresponding `poller_item` is set to `POLLER_ACTION_SCRIPT_PHP`. Both of these ids (`host_id` and `local_data_id`) can easily be bruteforced. The only requirement is that a `poller_item` with an `POLLER_ACTION_SCRIPT_PHP` action exists. This is very likely on a productive instance because this action is added by some predefined templates like `Device - Uptime` or `Device - Polling Time`. This command injection vulnerability allows an unauthenticated user to execute arbitrary commands if a `poller_item` with the `action` type `POLLER_ACTION_SCRIPT_PHP` (`2`) is configured. The authorization bypass should be prevented by not allowing an attacker to make `get_client_addr` (file `lib/functions.php`) return an arbitrary IP address. This could be done by not honoring the `HTTP_...` `$_SERVER` variables. If these should be kept for compatibility reasons it should at least be prevented to fake the IP address of the server running Cacti. This vulnerability has been addressed in both the 1.2.x and 1.3.x release branches with `1.2.23` being the first release containing the patch."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-77"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-74"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:cacti:cacti:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.2.22", "matchCriteriaId": "5EE8829F-0F7E-4FAA-8CBB-D29B1CB65EF6"}]}]}], "references": [{"url": "https://github.com/Cacti/cacti/commit/7f0e16312dd5ce20f93744ef8b9c3b0f1ece2216", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Cacti/cacti/commit/a8d59e8fa5f0054aa9c6981b1cbe30ef0e2a0ec9", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Cacti/cacti/commit/b43f13ae7f1e6bfe4e8e56a80a7cd867cf2db52b", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Cacti/cacti/security/advisories/GHSA-6p93-p743-35gf", "source": "security-advisories@github.com", "tags": ["Exploit", "Mitigation", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Cacti/cacti/commit/7f0e16312dd5ce20f93744ef8b9c3b0f1ece2216"}}