{"buggy_code": ["<div class=\"panel panel-default panel-condensed\">\n    <div class=\"panel-heading\">\n        <strong>FDB Entries</strong>\n    </div>\n    <table id=\"fdb-search\" class=\"table table-hover table-condensed table-striped\">\n        <thead>\n            <tr>\n                <th data-column-id=\"device\">Device</th>\n                <th data-column-id=\"mac_address\" data-width=\"150px\" data-formatter=\"tooltip\">MAC Address</th>\n                <th data-column-id=\"mac_oui\" data-sortable=\"false\" data-width=\"150px\" data-visible=\"<?php echo \\LibreNMS\\Config::get('mac_oui.enabled') ? 'true' : 'false' ?>\" data-formatter=\"tooltip\">Vendor</th>\n                <th data-column-id=\"ipv4_address\" data-sortable=\"false\" data-formatter=\"tooltip\">IPv4 Address</th>\n                <th data-column-id=\"interface\">Port</th>\n                <th data-column-id=\"vlan\" data-width=\"60px\">Vlan</th>\n                <th data-column-id=\"description\" data-formatter=\"tooltip\">Description</th>\n                <th data-column-id=\"dnsname\" data-sortable=\"false\" data-visible=\"false\" data-formatter=\"tooltip\">DNS Name</th>\n                <th data-column-id=\"first_seen\" data-width=\"165px\">First seen</th>\n                <th data-column-id=\"last_seen\" data-width=\"165px\">Last seen</th>\n            </tr>\n        </thead>\n    </table>\n</div>\n\n<script>\n\nvar grid = $(\"#fdb-search\").bootgrid({\n    ajax: true,\n    rowCount: [50, 100, 250, -1],\n    templates: {\n        header: \"<div id=\\\"{{ctx.id}}\\\" class=\\\"{{css.header}}\\\"><div class=\\\"row\\\">\"+\n                \"<div class=\\\"col-sm-9 actionBar\\\"><span class=\\\"pull-left\\\">\"+\n                \"<form method=\\\"post\\\" action=\\\"\\\" class=\\\"form-inline\\\" role=\\\"form\\\">\"+\n                \"<?php echo addslashes(csrf_field()) ?>\"+\n                \"<div class=\\\"form-group\\\">\"+\n                \"<select name=\\\"device_id\\\" id=\\\"device_id\\\" class=\\\"form-control input-sm\\\">\"+\n                \"<option value=\\\"\\\">All Devices</option>\"+\n<?php\n\n// Select the devices only with FDB tables\n$sql = 'SELECT D.device_id AS device_id, `hostname`, `sysName`, `display` FROM `ports_fdb` AS F, `ports` AS P, `devices` AS D';\n$param = [];\n\nif (! Auth::user()->hasGlobalRead()) {\n    $device_ids = Permissions::devicesForUser()->toArray() ?: [0];\n    $where .= ' AND `D`.`device_id` IN ' . dbGenPlaceholders(count($device_ids));\n    $param = array_merge($param, $device_ids);\n}\n\n$sql .= \" WHERE F.port_id = P.port_id AND P.device_id = D.device_id $where GROUP BY `D`.`device_id`, `D`.`hostname` ORDER BY `hostname`\";\nforeach (dbFetchRows($sql, $param) as $data) {\n    echo '\"<option value=\\\"' . $data['device_id'] . '\\\"\"+';\n    if ($data['device_id'] == $vars['device_id']) {\n        echo '\" selected \"+';\n    }\n\n    echo '\">' . format_hostname($data) . '</option>\"+';\n}\n?>\n                \"</select>\"+\n                \"</div>\"+\n                \"<div class=\\\"form-group\\\">\"+\n                \"<select name=\\\"searchby\\\" id=\\\"searchby\\\" class=\\\"form-control input-sm\\\">\"+\n                \"<option value=\\\"mac\\\" \"+\n<?php\nif ($vars['searchby'] == 'mac') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">MAC Address</option>\"+\n                \"<option value=\\\"ip\\\" \"+\n<?php\nif ($vars['searchby'] == 'ip') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">IP Address</option>\"+\n                \"<option value=\\\"dnsname\\\" \"+\n<?php\nif ($vars['searchby'] == 'dnsname') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">DNS Name</option>\"+\n                \"<option value=\\\"description\\\" \"+\n<?php\nif ($vars['searchby'] == 'description') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">Description</option>\"+\n                \"<option value=\\\"vendor\\\" \"+\n<?php\nif ($vars['searchby'] == 'vendor') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">Vendor</option>\"+\n                \"<option value=\\\"vlan\\\" \"+\n<?php\nif ($vars['searchby'] == 'vlan') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">Vlan</option>\"+\n                \"</select>\"+\n                \"</div>\"+\n                \"<div class=\\\"form-group\\\">\"+\n                \"<input type=\\\"text\\\" name=\\\"searchPhrase\\\" id=\\\"address\\\" value=\\\"\"+\n<?php\necho '\"' . $vars['searchPhrase'] . '\"+';\n?>\n\n                \"\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Value\\\" />\"+\n                \"</div>\"+\n                \"<button type=\\\"submit\\\" class=\\\"btn btn-default input-sm\\\">Search</button>\"+\n                \"</form></span></div>\"+\n               \"<div class=\\\"col-sm-3 actionBar\\\"><p class=\\\"{{css.actions}}\\\"></p></div></div></div>\"\n    },\n    post: function ()\n    {\n        return {\n            device_id: '<?php echo htmlspecialchars($vars['device_id']); ?>',\n            searchby: '<?php echo htmlspecialchars($vars['searchby']); ?>',\n            searchPhrase: '<?php echo htmlspecialchars($vars['searchPhrase']); ?>',\n            dns: $(\"#fdb-search\").bootgrid(\"getColumnSettings\").find(col => col.id === \"dnsname\").visible,\n        };\n    },\n    url: \"<?php echo url('/ajax/table/fdb-tables'); ?>\",\n    formatters: {\n        \"tooltip\": function (column, row) {\n                var value = row[column.id];\n                var vendor = '';\n                if (column.id == 'mac_address' && ((vendor = row['mac_oui']) != '' )) {\n                    return \"<span title=\\'\" + value + \" (\" + vendor + \")\\' data-toggle=\\'tooltip\\'>\" + value + \"</span>\";\n                }\n                return \"<span title=\\'\" + value + \"\\' data-toggle=\\'tooltip\\'>\" + value + \"</span>\";\n            },\n    },\n});\n\n</script>\n"], "fixing_code": ["<div class=\"panel panel-default panel-condensed\">\n    <div class=\"panel-heading\">\n        <strong>FDB Entries</strong>\n    </div>\n    <table id=\"fdb-search\" class=\"table table-hover table-condensed table-striped\">\n        <thead>\n            <tr>\n                <th data-column-id=\"device\">Device</th>\n                <th data-column-id=\"mac_address\" data-width=\"150px\" data-formatter=\"tooltip\">MAC Address</th>\n                <th data-column-id=\"mac_oui\" data-sortable=\"false\" data-width=\"150px\" data-visible=\"<?php echo \\LibreNMS\\Config::get('mac_oui.enabled') ? 'true' : 'false' ?>\" data-formatter=\"tooltip\">Vendor</th>\n                <th data-column-id=\"ipv4_address\" data-sortable=\"false\" data-formatter=\"tooltip\">IPv4 Address</th>\n                <th data-column-id=\"interface\">Port</th>\n                <th data-column-id=\"vlan\" data-width=\"60px\">Vlan</th>\n                <th data-column-id=\"description\" data-formatter=\"tooltip\">Description</th>\n                <th data-column-id=\"dnsname\" data-sortable=\"false\" data-visible=\"false\" data-formatter=\"tooltip\">DNS Name</th>\n                <th data-column-id=\"first_seen\" data-width=\"165px\">First seen</th>\n                <th data-column-id=\"last_seen\" data-width=\"165px\">Last seen</th>\n            </tr>\n        </thead>\n    </table>\n</div>\n\n<script>\n\nvar grid = $(\"#fdb-search\").bootgrid({\n    ajax: true,\n    rowCount: [50, 100, 250, -1],\n    templates: {\n        header: \"<div id=\\\"{{ctx.id}}\\\" class=\\\"{{css.header}}\\\"><div class=\\\"row\\\">\"+\n                \"<div class=\\\"col-sm-9 actionBar\\\"><span class=\\\"pull-left\\\">\"+\n                \"<form method=\\\"post\\\" action=\\\"\\\" class=\\\"form-inline\\\" role=\\\"form\\\">\"+\n                \"<?php echo addslashes(csrf_field()) ?>\"+\n                \"<div class=\\\"form-group\\\">\"+\n                \"<select name=\\\"device_id\\\" id=\\\"device_id\\\" class=\\\"form-control input-sm\\\">\"+\n                \"<option value=\\\"\\\">All Devices</option>\"+\n<?php\n\n// Select the devices only with FDB tables\n$sql = 'SELECT D.device_id AS device_id, `hostname`, `sysName`, `display` FROM `ports_fdb` AS F, `ports` AS P, `devices` AS D';\n$param = [];\n\nif (! Auth::user()->hasGlobalRead()) {\n    $device_ids = Permissions::devicesForUser()->toArray() ?: [0];\n    $where .= ' AND `D`.`device_id` IN ' . dbGenPlaceholders(count($device_ids));\n    $param = array_merge($param, $device_ids);\n}\n\n$sql .= \" WHERE F.port_id = P.port_id AND P.device_id = D.device_id $where GROUP BY `D`.`device_id`, `D`.`hostname` ORDER BY `hostname`\";\nforeach (dbFetchRows($sql, $param) as $data) {\n    echo '\"<option value=\\\"' . $data['device_id'] . '\\\"\"+';\n    if ($data['device_id'] == $vars['device_id']) {\n        echo '\" selected \"+';\n    }\n\n    echo '\">' . format_hostname($data) . '</option>\"+';\n}\n?>\n                \"</select>\"+\n                \"</div>\"+\n                \"<div class=\\\"form-group\\\">\"+\n                \"<select name=\\\"searchby\\\" id=\\\"searchby\\\" class=\\\"form-control input-sm\\\">\"+\n                \"<option value=\\\"mac\\\" \"+\n<?php\nif ($vars['searchby'] == 'mac') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">MAC Address</option>\"+\n                \"<option value=\\\"ip\\\" \"+\n<?php\nif ($vars['searchby'] == 'ip') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">IP Address</option>\"+\n                \"<option value=\\\"dnsname\\\" \"+\n<?php\nif ($vars['searchby'] == 'dnsname') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">DNS Name</option>\"+\n                \"<option value=\\\"description\\\" \"+\n<?php\nif ($vars['searchby'] == 'description') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">Description</option>\"+\n                \"<option value=\\\"vendor\\\" \"+\n<?php\nif ($vars['searchby'] == 'vendor') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">Vendor</option>\"+\n                \"<option value=\\\"vlan\\\" \"+\n<?php\nif ($vars['searchby'] == 'vlan') {\n    echo '\" selected \"+';\n}\n?>\n\n                \">Vlan</option>\"+\n                \"</select>\"+\n                \"</div>\"+\n                \"<div class=\\\"form-group\\\">\"+\n                \"<input type=\\\"text\\\" name=\\\"searchPhrase\\\" id=\\\"address\\\" value=\\\"\"+\n<?php\necho '\"' . htmlspecialchars($vars['searchPhrase']) . '\"+';\n?>\n\n                \"\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Value\\\" />\"+\n                \"</div>\"+\n                \"<button type=\\\"submit\\\" class=\\\"btn btn-default input-sm\\\">Search</button>\"+\n                \"</form></span></div>\"+\n               \"<div class=\\\"col-sm-3 actionBar\\\"><p class=\\\"{{css.actions}}\\\"></p></div></div></div>\"\n    },\n    post: function ()\n    {\n        return {\n            device_id: '<?php echo htmlspecialchars($vars['device_id']); ?>',\n            searchby: '<?php echo htmlspecialchars($vars['searchby']); ?>',\n            searchPhrase: '<?php echo htmlspecialchars($vars['searchPhrase']); ?>',\n            dns: $(\"#fdb-search\").bootgrid(\"getColumnSettings\").find(col => col.id === \"dnsname\").visible,\n        };\n    },\n    url: \"<?php echo url('/ajax/table/fdb-tables'); ?>\",\n    formatters: {\n        \"tooltip\": function (column, row) {\n                var value = row[column.id];\n                var vendor = '';\n                if (column.id == 'mac_address' && ((vendor = row['mac_oui']) != '' )) {\n                    return \"<span title=\\'\" + value + \" (\" + vendor + \")\\' data-toggle=\\'tooltip\\'>\" + value + \"</span>\";\n                }\n                return \"<span title=\\'\" + value + \"\\' data-toggle=\\'tooltip\\'>\" + value + \"</span>\";\n            },\n    },\n});\n\n</script>\n"], "filenames": ["includes/html/pages/search/fdb.inc.php"], "buggy_code_start_loc": [115], "buggy_code_end_loc": [116], "fixing_code_start_loc": [115], "fixing_code_end_loc": [116], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository librenms/librenms prior to 23.9.0.", "other": {"cve": {"id": "CVE-2023-4982", "sourceIdentifier": "security@huntr.dev", "published": "2023-09-15T01:15:08.987", "lastModified": "2023-09-20T13:13:16.680", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository librenms/librenms prior to 23.9.0."}, {"lang": "es", "value": "Cross-site Scripting (XSS): almacenado en el repositorio de GitHub librenms/librenms anterior a 23.9.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:librenms:librenms:*:*:*:*:*:*:*:*", "versionEndExcluding": "23.9.0", "matchCriteriaId": "D11631AD-0BBB-4877-B426-D0D036598849"}]}]}], "references": [{"url": "https://github.com/librenms/librenms/commit/2c5960631c49f7414f61b6d4dcd305b07da05769", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/d3c2dd8a-883c-400e-a1a7-326c3fd37b9e", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/librenms/librenms/commit/2c5960631c49f7414f61b6d4dcd305b07da05769"}}