{"buggy_code": ["/**\n * @author ZhangHuihua@msn.com\n */\nvar DWZ = {\n    version: \"1.5.0\" ,\n    regPlugins: [ ], // [function($parent){} ...]\n    // sbar: show sidebar\n    keyCode: {\n        ENTER: 13, ESC: 27, END: 35, HOME: 36, SHIFT: 16, TAB: 9, LEFT: 37, RIGHT: 39, UP: 38, DOWN: 40, DELETE: 46, BACKSPACE: 8, CHAR_S: 83\n    } ,\n    eventType: {\n        pageClear: \"pageClear\", // \u7528\u4e8e\u91cd\u65b0ajaxLoad\u3001\u5173\u95ednabTab, \u5173\u95eddialog\u65f6\uff0c\u53bb\u9664xheditor\u7b49\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u8d44\u6e90\n        resizeGrid: \"resizeGrid\", // \u7528\u4e8e\u7a97\u53e3\u6216dialog\u5927\u5c0f\u8c03\u6574\n        initEnvAfter: \"initEnvAfter\" // initEnv\u5b8c\u6210\u89e6\u53d1\n    } ,\n    isOverAxis: function(x, reference, size) {\n        // Determines when x coordinate is over \"b\" element axis\n        return ( x > reference ) && ( x < ( reference + size ) );\n    } ,\n    isOver: function(y, x, top, left, height, width) {\n        // Determines when x, y coordinates is over \"b\" element\n        return this.isOverAxis(y, top, height) && this.isOverAxis(x, left, width);\n    } ,\n\n    pageInfo: {\n        pageNum: \"pageNum\", numPerPage: \"numPerPage\", orderField: \"orderField\", orderDirection: \"orderDirection\"\n    } ,\n    statusCode: {\n        ok: 200, okAndRefresh: 201, error: 300, timeout: 301\n    } ,\n    keys: {\n        statusCode: \"statusCode\", message: \"message\"\n    } ,\n    ui: {\n        sbar: true\n    } ,\n    frag: {}, // page fragment\n    _msg: {}, // alert message\n    _set: {\n        loginUrl: \"\", // session timeout\n        loginTitle: \"\", // if loginTitle open a login dialog\n        debug: false\n    } ,\n    msg: function(key, args) {\n        var _format = function(str, args) {\n            args = args || [ ];\n            var result = str || \"\";\n            for (var i = 0; i < args.length; i++) {\n                result = result.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), args[i]);\n            }\n            return result;\n        }\n        return _format(this._msg[key], args);\n    } ,\n    debug: function(msg) {\n        if (this._set.debug ) {\n            if (typeof ( console ) != \"undefined\" ) {\n                console.log(msg);\n            } else {\n                alert(msg);\n            }\n        }\n    } ,\n    loadLogin: function() {\n        if ($.pdialog && DWZ._set.loginTitle ) {\n            $.pdialog.open(DWZ._set.loginUrl, \"login\", DWZ._set.loginTitle, {\n                mask: true, width: 520, height: 260\n            });\n        } else {\n            window.location = DWZ._set.loginUrl;\n        }\n    } ,\n    instances : {},\n    /*\n     * json to string\n     */\n    obj2str: function(o) {\n        var r = [ ];\n        if (typeof o == \"string\" ) {\n            return \"\\\"\" + o.replace(/([\\'\\\"\\\\])/g, \"\\\\$1\").replace(/(\\n)/g, \"\\\\n\").replace(/(\\r)/g, \"\\\\r\").replace(/(\\t)/g, \"\\\\t\") + \"\\\"\";\n        }\n        if (typeof o == \"object\" ) {\n            if (!o.sort ) {\n                for ( var i in o)\n                    r.push(i + \":\" + DWZ.obj2str(o[i]));\n                if (!!document.all && !/^\\n?function\\s*toString\\(\\)\\s*\\{\\n?\\s*\\[native code\\]\\n?\\s*\\}\\n?\\s*$/.test(o.toString) ) {\n                    r.push(\"toString:\" + o.toString.toString());\n                }\n                r = \"{\" + r.join() + \"}\"\n            } else {\n                for (var i = 0; i < o.length; i++) {\n                    r.push(DWZ.obj2str(o[i]));\n                }\n                r = \"[\" + r.join() + \"]\"\n            }\n            return r;\n        }\n        return o.toString();\n    } ,\n    jsonEval: function(data) {\n        try {\n            if ($.type(data) == 'string' ) {\n                return eval('(' + data + ')');\n            } else {\n                return data;\n            }\n        } catch (e) {\n            return {};\n        }\n    } ,\n    ajaxError: function(xhr, ajaxOptions, thrownError) {\n        if (alertMsg ) {\n            if('undefined' == typeof thrownError||\"\" ==thrownError){\n                var exception = $($.parseHTML(xhr.responseText, document, true)).find('#divexception textarea');\n                if(exception.length){\n                    thrownError=exception.val();\n                }\n            }\n            alertMsg.error(\"<div>Http status: \" + xhr.status + \" \" + xhr.statusText + \"</div>\" + \"<div>ajaxOptions: \" + ajaxOptions + \"</div>\" + \"<div>thrownError: \" + thrownError\n                    + \"</div>\");\n        } else {\n            alert(\"Http status: \" + xhr.status + \" \" + xhr.statusText + \"\\najaxOptions: \" + ajaxOptions + \"\\nthrownError:\" + thrownError + \"\\n\" + xhr.responseText);\n        }\n    },\n    ajaxDone: function(json) {\n        if (json[DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n            if (json[DWZ.keys.message] && alertMsg ) {\n                alertMsg.error(json[DWZ.keys.message]);\n            }\n        } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n            if (alertMsg ){\n                alertMsg.error(json[DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                    okCall: DWZ.loadLogin\n                });\n            } else {\n                DWZ.loadLogin();\n            }\n        } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.okAndRefresh ){\n            if (json[DWZ.keys.message] && alertMsg ){\n                alertMsg.correct(json[DWZ.keys.message],{\n                    callback:function(){\n                        window.location.reload();\n                    }\n                });\n            }\n        } else {\n            if (json[DWZ.keys.message] && alertMsg ){\n                alertMsg.correct(json[DWZ.keys.message]);\n            }\n        }\n    },\n    init: function(pageFrag, options) {\n        var op = $.extend({\n            loginUrl: \"login.html\", loginTitle: null, callback: null, debug: false, statusCode: {}\n        }, options);\n        this._set.loginUrl = op.loginUrl;\n        this._set.loginTitle = op.loginTitle;\n        this._set.debug = op.debug;\n        $.extend(DWZ.statusCode, op.statusCode);\n        $.extend(DWZ.keys, op.keys);\n        $.extend(DWZ.pageInfo, op.pageInfo);\n        $.ajax({\n            type: 'GET', url: pageFrag, dataType: 'html', cache: false, error: function(xhr) {\n                alert(xhr.statusText);\n            }, success: function(html) {\n                $($.parseHTML(html, document, true)).each(function() {\n                    var pageId = $(this).attr(\"id\");\n                    if (pageId ) {\n                        DWZ.frag[pageId] = $(this).text();\n                    }\n                });\n                if ($.isFunction(op.callback) ) {\n                    op.callback();\n                }\n            }\n        });\n        var _doc = $(document);\n        if (!_doc.isBind(DWZ.eventType.pageClear) ) {\n            _doc.bind(DWZ.eventType.pageClear, function(event) {\n                var box = event.target;\n                $(\"textarea.editor\", $(box)).each(function() {\n                    if('ckeditor'==$(this).attr('editorType')) {\n                        CKEDITOR.instances[$(this).data(\"id\")].destroy();\n                    } else if(\"kindeditor\"==$(this).attr(\"editorType\")) {\n                        KindEditor.remove('#'+$(this).data(\"id\"));\n                    } else {\n                        UE.instants[$(this).data(\"id\")].destroy();\n                    }\n                });\n                $(\"textarea.code\", $(box)).each(function() {\n                    delete DWZ.instances[$(this).data(\"id\")];\n                });\n                $(\".image-editor\", $(box)).each(function() {\n                    DWZ.instances[$(this).data(\"id\")].destroy();\n                    delete DWZ.instances[$(this).data(\"id\")];\n                });\n                $('[close-url]',$(box)).each(function (){\n                    $.getJSON($(this).attr(\"close-url\"), function(data) {});\n                });\n            });\n        }\n    }\n};\n\n( function($) {\n    // DWZ set regional\n    $.setRegional = function(key, value) {\n        if (!$.regional ) {\n            $.regional = {};\n        }\n        $.regional[key] = value;\n    };\n\n    // DWZ set msg\n    $.setMessage = function(key, value) {\n        DWZ._msg[key] = value;\n    };\n\n    $.fn.extend({\n        /**\n         * @param {Object}\n         *            op: {type:GET/POST, url:ajax\u8bf7\u6c42\u5730\u5740, data:ajax\u8bf7\u6c42\u53c2\u6570\u5217\u8868,\n         *            callback:\u56de\u8c03\u51fd\u6570 }\n         */\n        ajaxUrl: function(op) {\n            var $this = $(this);\n            $this.trigger(DWZ.eventType.pageClear);\n            $.ajax({\n                type: op.type || 'GET', url: op.url, data: op.data, cache: false, success: function(response) {\n                    var json = DWZ.jsonEval(response);\n                    if (json[DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n                        if (json[DWZ.keys.message] ) {\n                            alertMsg.error(json[DWZ.keys.message]);\n                        }\n                    } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                        $this.html(response);\n                        if ($.pdialog ) {\n                            $.pdialog.checkTimeout();\n                        }\n                        if (navTab ) {\n                            navTab.checkTimeout();\n                        }\n                        alertMsg.error(json[DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                            okCall: function() {\n                                DWZ.loadLogin();\n                            }\n                        });\n                    } else {\n                        $this.html(response).initUI();\n                        if ($.isFunction(op.callback) ) {\n                            op.callback(response);\n                        }\n                    }\n                },\n                error: DWZ.ajaxError, statusCode: {\n                    503: function(xhr, ajaxOptions, thrownError) {\n                        alert(DWZ.msg(\"statusCode_503\") || thrownError);\n                    }\n                }\n            });\n        },\n        loadUrl: function(url, data, callback) {\n            $(this).ajaxUrl({\n                url: url, data: data, callback: callback\n            });\n        },\n        initUI: function() {\n            return this.each(function() {\n                if ($.isFunction(initUI) ) {\n                    initUI(this);\n                }\n            });\n        },\n        /**\n         * adjust component inner reference box height\n         *\n         * @param {Object}\n         *            refBox: reference box jQuery Obj\n         */\n        layoutH: function($refBox) {\n            return this.each(function() {\n                var $this = $(this);\n                if (!$refBox ) {\n                    $refBox = $this.parents(\"div.layoutBox:first\");\n                }\n                var iRefH = $refBox.height();\n\n                var iLayoutH = 0;\n                if ($this.parents('.rightPageContent').length != 0){\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.rightPageContent'));\n                }else if ($this.parents('.pageFormContent').length != 0){\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.pageFormContent')) + 30;\n                }else if ($this.parents('.page').length != 0 ) {\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.page'));\n                }else if ($this.parents('.dialogContent').length != 0){\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.dialogContent'));\n                }\n\n                var iH = iRefH - iLayoutH > 50 ? iRefH - iLayoutH: 50;\n                if ($this.isTag(\"table\") ) {\n                    $this.removeAttr(\"layoutH\").wrap('<div layoutH=\"' + iLayoutH + '\" style=\"overflow:auto;height:' + iH + 'px\"></div>');\n                } else {\n                    $this.outerHeight(iH).css(\"overflow\", \"auto\");\n                }\n            });\n        },\n        /**\n         * \u83b7\u53d6page\u4e2d\u7684\u5176\u4ed6\u5143\u7d20\u7684\u603b\u9ad8\u5ea6\n         */\n        getSiblingsElemsH: function($container) {\n            var height = 0;\n            var $page = $container;\n            var headerH = this.getElemsH($page, '.pageHeader');\n            var formBarH = this.getElemsH($page, '.formBar');\n            var contentTitleH = this.getElemsH($page, '.contentTitle');\n            var gridHeaderH = this.getElemsH($page, '.gridHeader');\n            var tabsHeaderH = this.getElemsH($page, '.tabsHeader');\n            var pageBarH = this.getElemsH($page, '.pageBar.panelBar');\n            var panelBarH = this.getElemsH($page, '.panelBar:not(.pageBar)');\n            height = headerH + pageBarH + gridHeaderH + panelBarH + formBarH + tabsHeaderH + contentTitleH;\n            return height;\n        },\n        /**\n         * \u83b7\u53d6\u5143\u7d20\u9ad8\u5ea6\n         * @param $container \u603b\u5bb9\u5668\n         * @param elem    \u5f53\u524d\u5143\u7d20\u7684jquery\u9009\u62e9\u7684\u5b57\u7b26\u4e32\n         */\n        getElemsH: function($container, elem){\n            var h = 0;\n            var $elem = $container.find(elem);\n            var isSilbinsElem = true;\n            if($elem.length != 0){\n                if(this.find(elem).length == 0){\n                    var $silbingsElems = this.siblings();\n                    for(var i=0;i<$silbingsElems.length;i++){\n                        if($silbingsElems.eq(i).find(elem).length != 0){\n                            isSilbinsElem = false;\n                            break;\n                        }\n                    }\n                    if(isSilbinsElem){\n                        h = $elem.outerHeight(true);\n                    }\n                }\n            }\n            return h;\n        },\n        inputAlert: function() {\n            return this.each(function() {\n                var $this = $(this);\n                function getAltBox() {\n                    return $this.parent().find(\"label.alt\");\n                }\n                function altBoxCss(opacity) {\n                    var position = $this.position();\n                    return {\n                        width: $this.width(), top: position.top + 'px', left: position.left + 'px', opacity: opacity || 1\n                    };\n                }\n                if (getAltBox().size() < 1 ) {\n                    if (!$this.attr(\"id\") ) {\n                        $this.attr(\"id\", $this.attr(\"name\") + \"_\" + Math.round(Math.random() * 10000));\n                    }\n                    var $label = $('<label class=\"alt\" for=\"' + $this.attr(\"id\") + '\">' + $this.attr(\"alt\") + '</label>').appendTo($this.parent());\n                    $label.css(altBoxCss(0.6));\n                    if ($this.val() ) {\n                        $label.hide();\n                    }\n                }\n                $this.focus(function() {\n                    getAltBox().css(altBoxCss(0.3));\n                }).blur(function() {\n                    if (!$(this).val() ) {\n                        getAltBox().show().css(\"opacity\", 1);\n                    }\n                }).keydown(function() {\n                    getAltBox().hide();\n                });\n            });\n        },\n        isTag: function(tn) {\n            if (!tn || undefined == $(this)[0] ) {\n                return false;\n            }\n            return $(this)[0].tagName.toLowerCase() == tn ? true: false;\n        },\n        /**\n         * \u5224\u65ad\u5f53\u524d\u5143\u7d20\u662f\u5426\u5df2\u7ecf\u7ed1\u5b9a\u67d0\u4e2a\u4e8b\u4ef6\n         *\n         * @param {Object}\n         *            type\n         */\n        isBind: function(type) {\n            var _events = $(this).data(\"events\");\n            return _events && type && _events[type];\n        },\n        /**\n         * \u8f93\u51fafirebug\u65e5\u5fd7\n         *\n         * @param {Object}\n         *            msg\n         */\n        log: function(msg) {\n            return this.each(function() {\n                if (console ) {\n                    console.log(\"%s: %o\", msg, this);\n                }\n            });\n        }\n    });\n\n    /**\n     * \u6269\u5c55String\u65b9\u6cd5\n     */\n    $.extend(String.prototype, {\n        isPositiveInteger: function() {\n            return ( new RegExp(/^[1-9]\\d*$/).test(this) );\n        },\n        isInteger: function() {\n            return (new RegExp(/^\\d+$/).test(this));\n        },\n        isNumber: function(value, element) {\n            return (new RegExp(/^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/).test(this));\n        },\n        trim: function() {\n            return this.replace(/(^\\s*)|(\\s*$)|\\r|\\n/g, \"\");\n        },\n        startsWith: function(pattern) {\n            return this.indexOf(pattern) === 0;\n        },\n        endsWith: function(pattern) {\n            var d = this.length - pattern.length;\n            return d >= 0 && this.lastIndexOf(pattern) === d;\n        },\n        replaceSuffix: function(index) {\n            return this.replace(/\\[[0-9]+\\]/, \"[\" + index + \"]\").replace(\"#index#\", index);\n        },\n        trans: function() {\n            return this.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&quot;/g, '\"');\n        },\n        encodeTXT: function() {\n            return (this).replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\").replaceAll(\" \", \"&nbsp;\");\n        },\n        replaceAll: function(os, ns) {\n            return this.replace(new RegExp(os, \"gm\"), ns);\n        },\n        replaceTm: function(data) {\n            if (!data) {\n                return this;\n            }\n            return this.replace(RegExp(\"({[A-Za-z_]+[A-Za-z0-9_]*})\", \"g\"), function($1) {\n                return data[$1.replace(/[{}]+/g, \"\")];\n            })\n        },\n        replaceTmById: function(_box) {\n            var $parent = _box || $(document);\n            return this.replace(RegExp(\"({[A-Za-z_]+[A-Za-z0-9_]*})\", \"g\"), function($1) {\n                var $input = $parent.find(\"#\" + $1.replace(/[{}]+/g, \"\"));\n                return $input.val() ? $input.val(): $1;\n            });\n        },\n        isFinishedTm: function() {\n            return ! ( new RegExp(\"{[A-Za-z_]+[A-Za-z0-9_]*}\").test(this) );\n        },\n        skipChar: function(ch) {\n            if (!this || this.length === 0) {\n                return \"\";\n            }\n            if (this.charAt(0) === ch) {\n                return this.substring(1).skipChar(ch);\n            }\n            return this;\n        },\n        isValidPwd: function() {\n            return (new RegExp(/^([_]|[a-zA-Z0-9]){6,32}$/).test(this));\n        },\n        isValidMail: function() {\n            return (new RegExp(/^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/).test(this.trim()));\n        },\n        isSpaces: function() {\n            for (var i = 0; i < this.length; i += 1) {\n                var ch = this.charAt(i);\n                if (ch != \" \" && ch != \"\\n\" && ch != \"\\t\" && ch != \"\\r\") {\n                    return fals;\n                }\n            }\n            return true;\n        },\n        isPhone: function() {\n            return (new RegExp(/(^([0-9]{3,4}[-])?\\d{3,8}(-\\d{1,6})?$)|(^\\([0-9]{3,4}\\)\\d{3,8}(\\(\\d{1,6}\\))?$)|(^\\d{3,8}$)/).test(this));\n        },\n        isUrl: function() {\n            return ( new RegExp(/^([a-zA-z]+:)?\\/\\/([a-zA-Z0-9\\-\\.]+)([-\\w .\\/?%&=:]*)$/).test(this) );\n        },\n        isExternalUrl: function() {\n            var domain = document.domain;\n            if(\"\" == domain){\n                domain = \"localhost\";\n            }\n            return this.isUrl() && this.indexOf(\"//\" + domain) == -1;\n        }\n    });\n} )(jQuery);\n\n/**\n * You can use this map like this: var myMap = new Map();\n * myMap.put(\"key\",\"value\"); var key = myMap.get(\"key\"); myMap.remove(\"key\");\n */\nfunction Map() {\n    this.elements = new Array();\n    this.size = function() {\n        return this.elements.length;\n    }\n    this.isEmpty = function() {\n        return ( this.elements.length < 1 );\n    }\n    this.clear = function() {\n        this.elements = new Array();\n    }\n    this.put = function(_key, _value) {\n        this.remove(_key);\n        this.elements.push({\n            key: _key, value: _value\n        });\n    }\n    this.remove = function(_key) {\n        try {\n            for (i = 0; i < this.elements.length; i++) {\n                if (this.elements[i].key == _key ) {\n                    this.elements.splice(i, 1);\n                    return true;\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n        return false;\n    }\n    this.get = function(_key) {\n        try {\n            for (i = 0; i < this.elements.length; i++) {\n                if (this.elements[i].key == _key ) {\n                    return this.elements[i].value;\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    }\n    this.element = function(_index) {\n        if (_index < 0 || _index >= this.elements.length ) {\n            return null;\n        }\n        return this.elements[_index];\n    }\n    this.containsKey = function(_key) {\n        try {\n            for (i = 0; i < this.elements.length; i++) {\n                if (this.elements[i].key == _key ) {\n                    return true;\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n        return false;\n    }\n    this.values = function() {\n        var arr = new Array();\n        for (i = 0; i < this.elements.length; i++) {\n            arr.push(this.elements[i].value);\n        }\n        return arr;\n    }\n    this.keys = function() {\n        var arr = new Array();\n        for (i = 0; i < this.elements.length; i++) {\n            arr.push(this.elements[i].key);\n        }\n        return arr;\n    }\n}\n/**\n * @author ZhangHuihua@msn.com\n *         ---------------------------------------------------------- These\n *         functions use the same 'format' strings as the\n *         java.text.SimpleDateFormat class, with minor exceptions. The format\n *         string consists of the following abbreviations: Field | Full Form |\n *         Short Form -------------+--------------------+-----------------------\n *         Year | yyyy (4 digits) | yy (2 digits), y (2 or 4 digits) Month | MMM\n *         (name or abbr.)| MM (2 digits), M (1 or 2 digits) | NNN (abbr.) | Day\n *         of Month | dd (2 digits) | d (1 or 2 digits) Day of Week | EE (name) |\n *         E (abbr) Hour (1-12) | hh (2 digits) | h (1 or 2 digits) Hour (0-23) |\n *         HH (2 digits) | H (1 or 2 digits) Hour (0-11) | KK (2 digits) | K (1\n *         or 2 digits) Hour (1-24) | kk (2 digits) | k (1 or 2 digits) Minute |\n *         mm (2 digits) | m (1 or 2 digits) Second | ss (2 digits) | s (1 or 2\n *         digits) AM/PM | a | NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM,\n *         not mm! Examples: \"MMM d, y\" matches: January 01, 2000 Dec 1, 1970\n *         Nov 20, 00 \"M/d/yy\" matches: 01/20/00 9/2/00 \"MMM dd, yyyy hh:mm:ssa\"\n *         matches: \"January 01, 2000 12:30:45AM\"\n *         ----------------------------------------------------------\n */\n( function() {\n    var MONTH_NAMES = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'Jan', 'Feb', 'Mar',\n        'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');\n    var DAY_NAMES = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat');\n    function LZ(x) {\n        return ( x < 0 || x > 9 ? \"\": \"0\" ) + x\n    }\n\n    /**\n     * formatDate (date_object, format) Returns a date in the output format\n     * specified. The format string uses the same abbreviations as in\n     * parseDate()\n     *\n     * @param {Object}\n     *            date\n     * @param {Object}\n     *            format\n     */\n    function formatDate(date, format) {\n        format = format + \"\";\n        var result = \"\";\n        var i_format = 0;\n        var c = \"\";\n        var token = \"\";\n        var y = date.getYear() + \"\";\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var E = date.getDay();\n        var H = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n        var yyyy, yy, MMM, MM, dd, hh, h, mm, ss, ampm, HH, H, KK, K, kk, k;\n        // Convert real date parts into formatted versions\n        var value = {};\n        if (y.length < 4 ) {\n            y = \"\" + ( y - 0 + 1900 );\n        }\n        value.y = \"\" + y;\n        value.yyyy = y;\n        value.yy = y.substring(2, 4);\n        value.M = M;\n        value.MM = LZ(M);\n        value.MMM = MONTH_NAMES[M - 1];\n        value.NNN = MONTH_NAMES[M + 11];\n        value.d = d;\n        value.dd = LZ(d);\n        value.E = DAY_NAMES[E + 7];\n        value.EE = DAY_NAMES[E];\n        value.H = H;\n        value.HH = LZ(H);\n        if (H == 0 ) {\n            value.h = 12;\n        } else {\n            if (H > 12) {\n                value.h = H - 12;\n            } else {\n                value.h = H;\n            }\n\n        }\n        value.hh = LZ(value.h);\n        if (H > 11 ) {\n            value.K = H - 12;\n        } else {\n            value.K = H;\n        }\n        value.k = H + 1;\n        value.KK = LZ(value.K);\n        value.kk = LZ(value.k);\n        if (H > 11 ) {\n            value.a = \"PM\";\n        } else {\n            value.a = \"AM\";\n        }\n        value.m = m;\n        value.mm = LZ(m);\n        value.s = s;\n        value.ss = LZ(s);\n        while (i_format < format.length) {\n            c = format.charAt(i_format);\n            token = \"\";\n            while ( ( format.charAt(i_format) == c ) && ( i_format < format.length )) {\n                token += format.charAt(i_format++);\n            }\n            if (value[token] != null ) {\n                result += value[token];\n            } else {\n                result += token;\n            }\n        }\n        return result;\n    }\n    function _isInteger(val) {\n        return ( new RegExp(/^\\d+$/).test(val) );\n    }\n    function _getInt(str, i, minlength, maxlength) {\n        for (var x = maxlength; x >= minlength; x--) {\n            var token = str.substring(i, i + x);\n            if (token.length < minlength ) {\n                return null;\n            }\n            if (_isInteger(token) ) {\n                return token;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * parseDate( date_string, format_string ) This function takes a date string\n     * and a format string. It matches If the date string matches the format\n     * string, it returns the date. If it does not match, it returns 0.\n     *\n     * @param {Object}\n     *            val\n     * @param {Object}\n     *            format\n     */\n    function parseDate(val, format) {\n        val = val + \"\";\n        format = format + \"\";\n        var i_val = 0;\n        var i_format = 0;\n        var c = \"\";\n        var token = \"\";\n        var token2 = \"\";\n        var x, y;\n        var now = new Date(1970, 0, 1);\n        var year = now.getYear();\n        var month = now.getMonth() + 1;\n        var date = 1;\n        var hh = now.getHours();\n        var mm = now.getMinutes();\n        var ss = now.getSeconds();\n        var ampm = \"\";\n        while (i_format < format.length) {\n            // Get next token from format string\n            c = format.charAt(i_format);\n            token = \"\";\n            while ( ( format.charAt(i_format) == c ) && ( i_format < format.length )) {\n                token += format.charAt(i_format++);\n            }\n            // Extract contents of value based on format token\n            if (token == \"yyyy\" || token == \"yy\" || token == \"y\" ) {\n                if (token == \"yyyy\" ) {\n                    x = 4;\n                    y = 4;\n                }\n                if (token == \"yy\" ) {\n                    x = 2;\n                    y = 2;\n                }\n                if (token == \"y\" ) {\n                    x = 2;\n                    y = 4;\n                }\n                year = _getInt(val, i_val, x, y);\n                if (year == null ) {\n                    return 0;\n                }\n                i_val += year.length;\n                if (year.length == 2 ) {\n                    if (year > 70 ) {\n                        year = 1900 + ( year - 0 );\n                    } else {\n                        year = 2000 + ( year - 0 );\n                    }\n                }\n            } else if (token == \"MMM\" || token == \"NNN\" ) {\n                month = 0;\n                for (var i = 0; i < MONTH_NAMES.length; i++) {\n                    var month_name = MONTH_NAMES[i];\n                    if (val.substring(i_val, i_val + month_name.length).toLowerCase() == month_name.toLowerCase() ) {\n                        if (token == \"MMM\" || ( token == \"NNN\" && i > 11 ) ) {\n                            month = i + 1;\n                            if (month > 12 ) {\n                                month -= 12;\n                            }\n                            i_val += month_name.length;\n                            break;\n                        }\n                    }\n                }\n                if ( ( month < 1 ) || ( month > 12 ) ) {\n                    return 0;\n                }\n            } else if (token == \"EE\" || token == \"E\" ) {\n                for (var i = 0; i < DAY_NAMES.length; i++) {\n                    var day_name = DAY_NAMES[i];\n                    if (val.substring(i_val, i_val + day_name.length).toLowerCase() == day_name.toLowerCase() ) {\n                        i_val += day_name.length;\n                        break;\n                    }\n                }\n            } else if (token == \"MM\" || token == \"M\" ) {\n                month = _getInt(val, i_val, token.length, 2);\n                if (month == null || ( month < 1 ) || ( month > 12 ) ) {\n                    return 0;\n                }\n                i_val += month.length;\n            } else if (token == \"dd\" || token == \"d\" ) {\n                date = _getInt(val, i_val, token.length, 2);\n                if (date == null || ( date < 1 ) || ( date > 31 ) ) {\n                    return 0;\n                }\n                i_val += date.length;\n            } else if (token == \"hh\" || token == \"h\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 1 ) || ( hh > 12 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n            } else if (token == \"HH\" || token == \"H\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 0 ) || ( hh > 23 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n            } else if (token == \"KK\" || token == \"K\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 0 ) || ( hh > 11 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n            } else if (token == \"kk\" || token == \"k\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 1 ) || ( hh > 24 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n                hh--;\n            } else if (token == \"mm\" || token == \"m\" ) {\n                mm = _getInt(val, i_val, token.length, 2);\n                if (mm == null || ( mm < 0 ) || ( mm > 59 ) ) {\n                    return 0;\n                }\n                i_val += mm.length;\n            } else if (token == \"ss\" || token == \"s\" ) {\n                ss = _getInt(val, i_val, token.length, 2);\n                if (ss == null || ( ss < 0 ) || ( ss > 59 ) ) {\n                    return 0;\n                }\n                i_val += ss.length;\n            } else if (token == \"a\" ) {\n                if (val.substring(i_val, i_val + 2).toLowerCase() == \"am\" ) {\n                    ampm = \"AM\";\n                } else if (val.substring(i_val, i_val + 2).toLowerCase() == \"pm\" ) {\n                    ampm = \"PM\";\n                } else {\n                    return 0;\n                }\n                i_val += 2;\n            } else {\n                if (val.substring(i_val, i_val + token.length) != token ) {\n                    return 0;\n                } else {\n                    i_val += token.length;\n                }\n            }\n        }\n        // If there are any trailing characters left in the value, it doesn't\n        // match\n        if (i_val != val.length ) {\n            return 0;\n        }\n        // Is date valid for month?\n        if (month == 2 ) {\n            // Check for leap year\n            if ( ( ( year % 4 == 0 ) && ( year % 100 != 0 ) ) || ( year % 400 == 0 ) ) { // leap\n                // year\n                if (date > 29 ) {\n                    return 0;\n                }\n            } else {\n                if (date > 28 ) {\n                    return 0;\n                }\n            }\n        }\n        if ( ( month == 4 ) || ( month == 6 ) || ( month == 9 ) || ( month == 11 ) ) {\n            if (date > 30 ) {\n                return 0;\n            }\n        }\n        // Correct hours value\n        if (hh < 12 && ampm == \"PM\" ) {\n            hh = hh - 0 + 12;\n        } else if (hh > 11 && ampm == \"AM\" ) {\n            hh -= 12;\n        }\n        return new Date(year, month - 1, date, hh, mm, ss);\n    }\n    Date.prototype.formatDate = function(dateFmt) {\n        return formatDate(this, dateFmt);\n    };\n    String.prototype.parseDate = function(dateFmt) {\n        if (this.length < dateFmt.length ) {\n            dateFmt = dateFmt.slice(0, this.length);\n        }\n        return parseDate(this, dateFmt);\n    };\n\n    /**\n     * replaceTmEval(\"{1+2}-{2-1}\")\n     */\n    function replaceTmEval(data) {\n        return data.replace(RegExp(\"({[A-Za-z0-9_+-]*})\", \"g\"), function($1) {\n            return eval('(' + $1.replace(/[{}]+/g, \"\") + ')');\n        });\n    }\n    /**\n     * dateFmt:%y-%M-%d %y-%M-{%d+1} ex: new Date().formatDateTm('%y-%M-{%d-1}')\n     * new Date().formatDateTm('2012-1')\n     */\n    Date.prototype.formatDateTm = function(dateFmt) {\n        var y = this.getFullYear();\n        var m = this.getMonth() + 1;\n        var d = this.getDate();\n        var sDate = dateFmt.replaceAll(\"%y\", y).replaceAll(\"%M\", m).replaceAll(\"%d\", d);\n        sDate = replaceTmEval(sDate);\n        var _y = 1970, _m = 0, _d = 1;\n        var aDate = sDate.split(\"-\");\n        if (aDate.length > 0 ) {\n            _y = aDate[0];\n        }\n        if (aDate.length > 1 ) {\n            _m = aDate[1] - 1;\n        }\n        if (aDate.length > 2 ) {\n            _d = aDate[2];\n        }\n        return new Date(_y, _m, _d).formatDate('yyyy-MM-dd');\n    };\n} )();\n\n/**\n * @requires jquery.validate.js\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    if ($.validator ) {\n        $.validator.addMethod(\"alphanumeric\", function(value, element) {\n            return this.optional(element) || /^\\w+$/i.test(value);\n        }, \"Letters, numbers or underscores only please\");\n        $.validator.addMethod(\"lettersonly\", function(value, element) {\n            return this.optional(element) || /^[a-z]+$/i.test(value);\n        }, \"Letters only please\");\n        $.validator.addMethod(\"letterstart\", function(value, element) {\n            return this.optional(element) || /^[a-z]+\\w+$/i.test(value);\n        }, \"Letters, numbers or underscores only  please,The first character must be letter\");\n        $.validator.addMethod(\"phone\", function(value, element) {\n            return this.optional(element) || /^[0-9 \\(\\)]{7,30}$/.test(value);\n        }, \"Please specify a valid phone number\");\n        $.validator.addMethod(\"postcode\", function(value, element) {\n            return this.optional(element) || /^[0-9 A-Za-z]{5,20}$/.test(value);\n        }, \"Please specify a valid postcode\");\n        $.validator.addMethod(\"domain\", function(value, element) {\n            return this.optional(element) || /^((((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|(\\[?((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\]?)|(localhost)|(loopback)|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)*)?$/i.test(value);\n        }, \"Please specify a valid domain\");\n        $.validator.addMethod(\"date\", function(value, element) {\n            value = value.replace(/\\s+/g, \"\");\n            if (String.prototype.parseDate ) {\n                var $input = $(element);\n                var pattern = $input.attr('dateFmt') || 'yyyy-MM-dd';\n                return !$input.val() || $input.val().parseDate(pattern);\n            } else {\n                return this.optional(element) || value.match(/^\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}$/);\n            }\n        }, \"Please enter a valid date.\");\n\n        /*\n         * \u81ea\u5b9a\u4e49js\u51fd\u6570\u9a8c\u8bc1 <input type=\"text\" name=\"xxx\" customvalid=\"xxxFn(element)\"\n         * title=\"xxx\" />\n         */\n        $.validator.addMethod(\"customvalid\", function(value, element, params) {\n            try {\n                return eval('(' + params + ')');\n            } catch (e) {\n                return false;\n            }\n        }, \"Please fix this field.\");\n        $.validator.addClassRules({\n            date: {\n                date: true\n            }, alphanumeric: {\n                alphanumeric: true\n            }, lettersonly: {\n                lettersonly: true\n            }, phone: {\n                phone: true\n            }, postcode: {\n                postcode: true\n            }\n        });\n        $.validator.setDefaults({\n            errorElement: \"span\"\n        });\n        $.validator.autoCreateRanges = true;\n    }\n\n} )(jQuery);\n/**\n * @author Roger Wu\n * @version 1.0\n */\n( function($) {\n    $.fn.cssv = function(pre) {\n        var cssPre = $(this).css(pre);\n        return cssPre.substring(0, cssPre.indexOf(\"px\")) * 1;\n    };\n    $.fn.jBar = function(options) {\n        var op = $.extend({\n            container: \"#navTab\", toggleBut: \".toggleCollapse\", sideBar: \"#sidebar\", sideBar2: \"#sidebar_s\", splitBar: \"#splitBar\",\n            splitBar2: \"#splitBarProxy\", iconClass: \"icon-chevron-sign-right\"\n        }, options);\n        return this.each(function() {\n            var jbar = this;\n            var sbar = $(op.sideBar2, jbar);\n            var bar = $(op.sideBar, jbar);\n            $(op.toggleBut).click(function() {\n                if($(op.splitBar).is(':visible')){\n                    DWZ.ui.sbar = false;\n                    $('.icon',op.toggleBut).addClass(op.iconClass);\n                    $(op.splitBar).hide();\n                    var sbarwidth = sbar.cssv(\"left\") + sbar.outerWidth();\n                    var barleft = sbarwidth - bar.outerWidth();\n                    var cleft = $(op.container).cssv(\"margin-left\") - ( bar.outerWidth() - sbar.outerWidth() );\n                    var cwidth = bar.outerWidth() - sbar.outerWidth() + $(op.container).outerWidth();\n                    $(op.container).animate({\n                        'margin-left': cleft, width: cwidth\n                    }, 50, function() {\n                        bar.animate({\n                            left: barleft\n                        }, 50, function() {\n                            bar.hide();\n                            sbar.show().css(\"left\", -50).animate({\n                                left: 0\n                            }, 20);\n                            $(window).trigger(DWZ.eventType.resizeGrid);\n                        });\n                    });\n                    $(sbar).click(function() {\n                        var sbarwidth = sbar.width();\n                        if (bar.is(\":hidden\") ) {\n                            bar.show().animate({\n                                left: sbarwidth,\n                                top: 0\n                            }, 50);\n                            $(op.container).click(_hideBar);\n                        } else {\n                            bar.animate({\n                                left: barleft,\n                                top: 0\n                            }, 50, function() {\n                                bar.hide();\n                            });\n                        }\n                        function _hideBar() {\n                            $(op.container).unbind(\"click\", _hideBar);\n                            if (!DWZ.ui.sbar ) {\n                                bar.animate({\n                                    left: barleft,\n                                    top: 0\n                                }, 50, function() {\n                                    bar.hide();\n                                });\n                            }\n                        }\n                        return false;\n                    });\n                }else{\n                    DWZ.ui.sbar = true;\n                    $('.icon',op.toggleBut).removeClass(op.iconClass);\n                    sbar.animate({\n                        left: -50\n                    }, 20, function() {\n                        bar.show();\n                    });\n                    bar.animate({\n                        left: 0,\n                        top: 0\n                    }, 80, function() {\n                        $(op.splitBar).show();\n                        var cleft = bar.outerWidth();\n                        var cwidth = $(op.container).outerWidth() - ( cleft - $(op.container).cssv(\"margin-left\") );\n                        $(op.container).css({\n                            'margin-left': cleft, width: cwidth\n                        });\n                        $(sbar).unbind('click');\n                        $(window).trigger(DWZ.eventType.resizeGrid);\n                    });\n                }\n                return false;\n            });\n            $(op.splitBar).mousedown(function(event) {\n                $(op.splitBar2).each(function() {\n                    var spbar2 = $(this);\n                    setTimeout(function() {\n                        spbar2.show();\n                    }, 10);\n                    spbar2.css({\n                        visibility: \"visible\", left: $(op.splitBar).css(\"left\")\n                    });\n                    spbar2.jDrag($.extend(options, {\n                        obj: $(\"#sidebar\"), move: \"horizontal\", event: event, stop: function() {\n                            $(this).css(\"visibility\", \"hidden\");\n                            var move = $(this).cssv(\"left\") - $(op.splitBar).cssv(\"left\");\n                            var sbarwidth = bar.outerWidth() + move;\n                            var cleft = $(op.container).cssv(\"margin-left\") + move;\n                            var cwidth = $(op.container).outerWidth() - move - 1;\n                            bar.css(\"width\", sbarwidth);\n                            $(op.splitBar).css(\"left\", $(this).css(\"left\"));\n                            $(op.container).css({\n                                'margin-left': cleft, width: cwidth\n                            });\n                        }\n                    }));\n                    return false;\n                });\n            });\n        });\n    }\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n( function($) {\n    $.fn.jDrag = function(options) {\n        if (typeof options == 'string' ) {\n            if (options == 'destroy' ) {\n                return this.each(function() {\n                    $(this).unbind('mousedown', $.rwdrag.start);\n                    $.data(this, 'pp-rwdrag', null);\n                });\n            }\n        }\n        return this.each(function() {\n            var el = $(this);\n            $.data($.rwdrag, 'pp-rwdrag', {\n                options: $.extend({\n                    el: el, obj: el\n                }, options)\n            });\n            if (options.event ) {\n                $.rwdrag.start(options.event);\n            } else {\n                var select = options.selector;\n                $(select, obj).bind('mousedown', $.rwdrag.start);\n            }\n        });\n    };\n    $.rwdrag = {\n        start: function(e) {\n            document.onselectstart = function(e) {\n                return false\n            };// \u7981\u6b62\u9009\u62e9\n\n            var data = $.data(this, 'pp-rwdrag');\n            var el = data.options.el[0];\n            $.data(el, 'pp-rwdrag', {\n                options: data.options\n            });\n            if (!$.rwdrag.current ) {\n                $.rwdrag.current = {\n                    el: el, oleft: parseInt(el.style.left) || 0, otop: parseInt(el.style.top) || 0, ox: e.pageX || e.screenX, oy: e.pageY || e.screenY\n                };\n                $(document).bind(\"mouseup\", $.rwdrag.stop).bind(\"mousemove\", $.rwdrag.drag);\n            }\n        },\n        drag: function(e) {\n            if (!e ) {\n                var e = window.event;\n            }\n            var current = $.rwdrag.current;\n            var data = $.data(current.el, 'pp-rwdrag');\n            var left = ( current.oleft + ( e.pageX || e.clientX ) - current.ox );\n            var top = ( current.otop + ( e.pageY || e.clientY ) - current.oy );\n            if (top < 1 ) {\n                top = 0;\n            }\n            if (data.options.move == 'horizontal' ) {\n                if ( ( data.options.minW && left >= $(data.options.obj).cssv(\"left\") + data.options.minW )\n                        && ( data.options.maxW && left <= $(data.options.obj).cssv(\"left\") + data.options.maxW ) ) {\n                    current.el.style.left = left + 'px';\n                } else if (data.options.scop ) {\n                    if (data.options.relObj ) {\n                        if ( ( left - parseInt(data.options.relObj.style.left) ) > data.options.cellMinW ) {\n                            current.el.style.left = left + 'px';\n                        }\n                    } else {\n                        current.el.style.left = left + 'px';\n                    }\n                }\n            } else if (data.options.move == 'vertical' ) {\n                current.el.style.top = top + 'px';\n            } else {\n                var selector = data.options.selector ? $(data.options.selector, data.options.obj): $(data.options.obj);\n                if (left >= -selector.outerWidth() * 2 / 3 && top >= 0 && ( left + selector.outerWidth() / 3 < $(window).width() )\n                        && ( top + selector.outerHeight() < $(window).height() ) ) {\n                    current.el.style.left = left + 'px';\n                    current.el.style.top = top + 'px';\n                }\n            }\n            if (data.options.drag ) {\n                data.options.drag.apply(current.el, [ current.el, e ]);\n            }\n            return $.rwdrag.preventEvent(e);\n        }, stop: function(e) {\n            var current = $.rwdrag.current;\n            var data = $.data(current.el, 'pp-rwdrag');\n            $(document).unbind('mousemove', $.rwdrag.drag).unbind('mouseup', $.rwdrag.stop);\n            if (data.options.stop ) {\n                data.options.stop.apply(current.el, [ current.el, e ]);\n            }\n            $.rwdrag.current = null;\n            document.onselectstart = function(e) {\n                return true\n            };// \u542f\u7528\u9009\u62e9\n            return $.rwdrag.preventEvent(e);\n        }, preventEvent: function(e) {\n            if (e.stopPropagation ) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault ) {\n                e.preventDefault();\n            }\n            return false;\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu\n * @version 1.0 added extend property oncheck\n */\n( function($) {\n    $.extend($.fn, {\n        jTree: function(options) {\n            var op = $.extend({\n                checkFn: null, selected: \"selected\", exp: \"expandable\", coll: \"collapsable\", firstExp: \"first_expandable\", firstColl: \"first_collapsable\",\n                lastExp: \"last_expandable\", lastColl: \"last_collapsable\", folderExp: \"folder_expandable\", folderColl: \"folder_collapsable\", endExp: \"end_expandable\",\n                endColl: \"end_collapsable\", file: \"file\", ck: \"checked\", unck: \"unchecked\", async: \"_src\"\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                var cnum = $this.children().length;\n                $(\">li\", $this).each(function() {\n                    var $li = $(this);\n                    var first = $li.prev()[0] ? false: true;\n                    var last = $li.next()[0] ? false: true;\n                    $li.genTree({\n                        root: $this,\n                        icon: $this.hasClass(\"treeFolder\"), ckbox: $this.hasClass(\"treeCheck\") , excludeParent:  $this.hasClass(\"excludeParent\"), options: op, level: 0,\n                        exp: ( cnum > 1 ? ( first ? op.firstExp: ( last ? op.lastExp: op.exp ) ): op.endExp ),\n                        coll: ( cnum > 1 ? ( first ? op.firstColl: ( last ? op.lastColl: op.coll ) ): op.endColl ),\n                        showSub: ( !$this.hasClass(\"collapse\") && ( $this.hasClass(\"expand\") || ( cnum > 1 ? false : true ) ) ),\n                        isLast: ( cnum > 1 ? ( last ? true: false ): true )\n                    });\n                });\n                setTimeout(function() {\n                    if ($this.hasClass(\"treeCheck\") ) {\n                        var checkFn = eval($this.attr(\"oncheck\"));\n                        if (checkFn && $.isFunction(checkFn) ) {\n                            $(\"div.ckbox\", $this).each(function() {\n                                var ckbox = $(this);\n                                ckbox.click(function() {\n                                    var checked = $(ckbox).hasClass(\"checked\");\n                                    var items = [ ];\n                                    if (checked ) {\n                                        var tnode = $(ckbox).parent().parent();\n                                        var boxes = $(\"input\", tnode);\n                                        if (boxes.size() > 1 ) {\n                                            $(boxes).each(function() {\n                                                items[items.length] = {\n                                                    name: $(this).attr(\"name\"), value: $(this).val()\n                                                };\n                                            });\n                                        } else {\n                                            items = {\n                                                name: boxes.attr(\"name\"), value: boxes.val()\n                                            };\n                                        }\n                                    }\n                                    checkFn({\n                                        checked: checked, items: items\n                                    });\n                                    return false;\n                                });\n                            });\n                        }\n                    }\n                    $(\"a\", $this).click(function(event) {\n                        $(\"div.\" + op.selected, $this).removeClass(op.selected);\n                        var parent = $(this).parent().addClass(op.selected);\n                        var $li = $(this).parents(\"li:first\"), sTarget = $li.attr(\"target\");\n                        if (sTarget ) {\n                            if ($(\"#\" + sTarget, $this).size() == 0 ) {\n                                $this.prepend('<input id=\"' + sTarget + '\" type=\"hidden\" />');\n                            }\n                            $(\"#\" + sTarget, $this).val($li.attr(\"rel\"));\n                        }\n                        $(\".ckbox\", parent).trigger(\"click\");\n                        event.stopPropagation();\n                        $(document).trigger(\"click\");\n                        if (!$(this).attr(\"target\") ) {\n                            return false;\n                        }\n                    });\n                }, 1);\n            });\n        },\n        subTree: function(op, level) {\n            return this.each(function() {\n                $(\">li\", this).each(function() {\n                    var $this = $(this);\n                    var isLast = ( $this.next()[0] ? false: true );\n                    $this.genTree({\n                        root: op.root, icon: op.icon, ckbox: op.ckbox, excludeParent: op.excludeParent, exp: isLast ? op.options.lastExp: op.options.exp, coll: isLast ? op.options.lastColl: op.options.coll,\n                        options: op.options, level: level, space: isLast ? null: op.space, showSub: op.showSub, isLast: isLast\n                    });\n                });\n            });\n        },\n        genTree: function(options) {\n            var op = $.extend({\n                root: options.root, icon: options.icon, ckbox: options.ckbox, excludeParent: options.excludeParent, exp: \"\", coll: \"\", showSub: false, level: 0, options: null, isLast: false\n            }, options);\n            return this.each(function() {\n                var node = $(this);\n                var tree = $(\">ul\", node);\n                var parent = node.parent().prev();\n                var checked = 'unchecked';\n                if (op.ckbox && 0 > $(\">.checked\", parent).size() ) {\n                    checked = 'checked';\n                }\n                if (tree.size() > 0 || node.attr(op.options.async)) {\n                    node.children(\":first\").wrap(\"<div></div>\");\n                    $(\">div\", node).prepend(( op.ckbox ? \"<div class='ckbox \" + checked + \"'></div>\": \"\" )\n                            + ( op.icon ? \"<div class='\" + ( ( op.showSub  && !node.attr(op.options.async) )  ? op.options.folderColl: op.options.folderExp ) + \"'></div>\": \"<div class='\" + ( ( op.showSub && !node.attr(op.options.async) ) ? op.coll: op.exp ) + \"'></div>\" ));\n                    if (tree.size() > 0 ) {\n                        op.showSub ? tree.show(): tree.hide();\n                    }\n                    $(\">div>div.\"+op.options.folderColl+\",>div>div.\"+op.options.folderExp+\",>div>a\", node).click(function() {\n                        if(node.attr(op.options.async)){\n                            $.ajax({\n                                type: 'get', url: node.attr(op.options.async), async: false, data: {}, success: function(response){\n                                    node.append(response);\n                                    tree = $(\">ul\", node).hide();\n                                    initLink(tree);\n                                    $(\"a\", tree).click(function(event) {\n                                        $(\"div.\" + op.options.selected, op.root).removeClass(op.options.selected);\n                                        var parent = $(this).parent().addClass(op.options.selected);\n                                        var $li = $(this).parents(\"li:first\"), sTarget = $li.attr(\"target\");\n                                        if (sTarget ) {\n                                            if ($(\"#\" + sTarget, op.root).size() == 0 ) {\n                                                op.root.prepend('<input id=\"' + sTarget + '\" type=\"hidden\" />');\n                                            }\n                                            $(\"#\" + sTarget, op.root).val($li.attr(\"rel\"));\n                                        }\n                                        $(\".ckbox\", parent).trigger(\"click\");\n                                        event.stopPropagation();\n                                        $(document).trigger(\"click\");\n                                        if (!$(this).attr(\"target\") ) {\n                                            return false;\n                                        }\n                                    });\n                                    node.removeAttr(op.options.async);\n                                },error: DWZ.ajaxError\n                            });\n                            if(node.attr(op.options.async) ){\n                                return false;\n                            }\n                        }\n                        var $fnode = $(\">li:first\", tree);\n                        if ($fnode.children(\":first\").isTag('a') ) {\n                            tree.subTree(op, op.level + 1);\n                        }\n                        var isA = $(this).isTag('a');\n                        var $this = $(\">div>div.\"+op.coll+\",>div>div.\"+op.exp, node);\n                        if (!isA || tree.is(\":hidden\") ) {\n                            $this.toggleClass(op.exp).toggleClass(op.coll);\n                            if (op.icon ) {\n                                $(\">div>div:last\", node).toggleClass(op.options.folderExp).toggleClass(op.options.folderColl);\n                            }\n                        }\n                        ( tree.is(\":hidden\") ) ? tree.slideDown(100): ( isA ? \"\": tree.slideUp(100) );\n                        return false;\n                    });\n                    addSpace(op.level, node);\n                    if (op.showSub ) {\n                        tree.subTree(op, op.level + 1);\n                    }\n                } else {\n                    node.children().wrap(\"<div></div>\");\n                    $(\">div\", node).prepend(( op.ckbox ? \"<div class='ckbox \" + checked + \"'></div>\": \"\" )\n                            + ( op.icon ? \"<div class='\"+op.options.file+\"'></div>\": \"<div class='node'></div>\" ));\n                    if(op.icon ) {\n                        $(\">div>div.\"+op.options.file, node).click(function() {\n                            $(this).next().click();\n                            return false;\n                        });\n                    }\n                    addSpace(op.level, node);\n                }\n                if (op.ckbox ) {\n                    node._check(op);\n                }\n                if (!$.support.leadingWhitespace ) {\n                    $(\">div\", node).click(function() {\n                        $(\"a\", this).trigger(\"click\");\n                        return false;\n                    });\n                }\n            });\n            function addSpace(level, node) {\n                if (level > 0 ) {\n                    var parent = node.parent().parent();\n                    var space = !parent.next()[0] ? \"indent\": \"line\";\n                    var plist = \"<div class='\" + space + \"'></div>\";\n                    if (level > 1 ) {\n                        var next = $(\">div>div\", parent).filter(\":first\");\n                        var prev = \"\";\n                        while (level > 1) {\n                            prev = prev + \"<div class='\" + next.attr(\"class\") + \"'></div>\";\n                            next = next.next();\n                            level--;\n                        }\n                        plist = prev + plist;\n                    }\n                    $(\">div\", node).prepend(plist);\n                }\n            }\n        }, _check: function(op) {\n            var node = $(this);\n            var ckbox = $(\">div>.ckbox\", node);\n            var $input = node.find(\"a\");\n            var tname = $input.attr(\"tname\"), tvalue = $input.attr(\"tvalue\");\n            var attrs = \"\";\n            if (tname ) {\n                attrs += \"name='\" + tname + \"' \";\n            }\n            if (tvalue ) {\n                attrs += \"value='\" + tvalue + \"' \";\n            }\n            ckbox.append(\"<input type='checkbox' style='display:none;' \" + attrs + \"/>\").click(function() {\n                var cked = ckbox.hasClass(\"checked\");\n                var aClass = cked ? \"unchecked\": \"checked\";\n                var rClass = cked ? \"checked\": \"unchecked\";\n                ckbox.removeClass(rClass).removeClass(!cked ? \"indeterminate\": \"\").addClass(aClass);\n                $(\"input\", ckbox).prop(\"checked\", !cked);\n                $(\">ul\", node).find(\"li\").each(function() {\n                    var box = $(\"div.ckbox\", this);\n                    box.removeClass(rClass).removeClass(!cked ? \"indeterminate\": \"\").addClass(aClass).find(\"input\").prop(\"checked\", !cked);\n                });\n                $(node)._checkParent(op.excludeParent);\n                return false;\n            });\n            var cAttr = $input.attr(\"checked\") || false;\n            if (cAttr ) {\n                ckbox.find(\"input\").prop(\"checked\", true);\n                ckbox.removeClass(\"unchecked\").addClass(\"checked\");\n                $(node)._checkParent(op.excludeParent);\n            }\n        }, _checkParent: function(excludeParent) {\n            if ($(this).parent().hasClass(\"tree\") ) {\n                return;\n            }\n            var parent = $(this).parent().parent();\n            var stree = $(\">ul\", parent);\n            var ckbox = stree.find(\">li>a\").size() + stree.find(\"div.ckbox\").size();\n            var ckboxed = stree.find(\"div.checked\").size();\n            var aClass = ( ckboxed == ckbox ? \"checked\": ( ckboxed != 0 ? \"indeterminate\": \"unchecked\" ) );\n            var rClass = ( ckboxed == ckbox ? \"indeterminate\": ( ckboxed != 0 ? \"checked\": \"indeterminate\" ) );\n            $(\">div>.ckbox\", parent).removeClass(\"unchecked\").removeClass(\"checked\").removeClass(rClass).addClass(aClass);\n            var $checkbox = $(\":checkbox\", parent);\n            if (aClass == \"checked\" ) {\n                $checkbox.prop(\"checked\", true);\n                $(\">div>.ckbox\", parent).find(\"input\").prop(\"checked\", true);\n            } else if (aClass == \"unchecked\" ) {\n                $checkbox.removeAttr(\"checked\");\n            } else if (aClass == \"indeterminate\" && !excludeParent) {\n                $(\">div>.ckbox\", parent).find(\"input\").prop(\"checked\", true);\n            }\n            parent._checkParent(excludeParent);\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n\n( function($) {\n    var jmenus = new Map();\n    // If the DWZ scope is not available, add it\n    $.dwz = $.dwz || {};\n    $.fn.extend({\n        accordion: function(options, data) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            return this.each(function() {\n                if (options.fillSpace) jmenus.put(options.fillSpace, this);\n                if (typeof options == \"string\" ) {\n                    var accordion = $.data(this, \"dwz-accordion\");\n                    accordion[options].apply(accordion, args);\n                    // INIT with optional options\n                } else if (!$(this).is(\".dwz-accordion\") ) {\n                    $.data(this, \"dwz-accordion\", new $.dwz.accordion(this, options));\n                }\n            });\n        },\n        /**\n         * deprecated, use accordion(\"activate\", index) instead\n         *\n         * @param {Object}\n         *            index\n         */\n        activate: function(index) {\n            return this.accordion(\"activate\", index);\n        }\n    });\n    $.dwz.accordion = function(container, options) {\n\n        // setup configuration\n        this.options = options = $.extend({}, $.dwz.accordion.defaults, options);\n        this.element = container;\n        $(container).addClass(\"dwz-accordion\");\n        if (options.navigation ) {\n            var current = $(container).find(\"a\").filter(options.navigationFilter);\n            if (current.length ) {\n                if (current.filter(options.header).length ) {\n                    options.active = current;\n                } else {\n                    options.active = current.parent().parent().prev();\n                    current.addClass(\"current\");\n                }\n            }\n        }\n        // calculate active if not specified, using the first header\n        options.headers = $(container).find(options.header);\n        options.active = findActive(options.headers, options.active);\n        if ( options.fillSpace ) {\n            fillSpace(options.fillSpace);\n        } else if ( options.autoheight ) {\n            var maxHeight = 0;\n            options.headers.next().each(function() {\n                maxHeight = Math.max(maxHeight, $(this).outerHeight());\n            }).height(maxHeight);\n        }\n        options.headers.not(options.active || \"\").next().hide();\n        options.active.find(\"h2\").addClass(options.selectedClass);\n        options.active.find(\"h2 .icon\").addClass(options.selectedIconClass);\n        if (options.event ) {\n            $(container).bind( ( options.event ) + \".dwz-accordion\", clickHandler);\n        }\n    };\n    $.dwz.accordion.prototype = {\n        activate: function(index) {\n            // call clickHandler with custom event\n            clickHandler.call(this.element, {\n                target: findActive(this.options.headers, index)[0]\n            });\n        },\n\n        enable: function() {\n            this.options.disabled = false;\n        }, disable: function() {\n            this.options.disabled = true;\n        }, destroy: function() {\n            this.options.headers.next().css(\"display\", \"\");\n            if ( this.options.fillSpace || this.options.autoheight ) {\n                this.options.headers.next().css(\"height\", \"\");\n            }\n            $.removeData(this.element, \"dwz-accordion\");\n            $(this.element).removeClass(\"dwz-accordion\").unbind(\".dwz-accordion\");\n        }\n    }\n    function scopeCallback(callback, scope) {\n        return function() {\n            return callback.apply(scope, arguments);\n        };\n    }\n    function completed(cancel) {\n        // if removed while animated data can be empty\n        if (!$.data(this, \"dwz-accordion\") ) {\n            return;\n        }\n        var instance = $.data(this, \"dwz-accordion\");\n        var options = instance.options;\n        options.running = cancel ? 0: --options.running;\n        if (options.running ) {\n            return;\n        }\n        if (options.clearStyle ) {\n            options.toShow.add(options.toHide).css({\n                height: \"\", overflow: \"\"\n            });\n        }\n        $(this).triggerHandler(\"change.dwz-accordion\", [ options.data ], options.change);\n    }\n    function fillSpace(key){\n        var obj = jmenus.get(key);\n        if (!obj) return;\n\n        var parent = $(obj).parent();\n        var height = parent.height() - (($(\".accordionHeader\", obj).size()) * ($(\".accordionHeader:first-child\", obj).outerHeight())) -2;\n\n        var os = parent.children().not(obj);\n        $.each(os, function(i){\n            height -= $(os[i]).outerHeight();\n        });\n        $(\".accordionContent\",obj).height(height);\n    }\n    function toggle(toShow, toHide, data, clickedActive, down) {\n        var options = $.data(this, \"dwz-accordion\").options;\n        options.toShow = toShow;\n        options.toHide = toHide;\n        options.data = data;\n        var complete = scopeCallback(completed, this);\n\n        // count elements to animate\n        options.running = toHide.size() == 0 ? toShow.size(): toHide.size();\n        if (options.animated ) {\n            if (!options.alwaysOpen && clickedActive ) {\n                $.dwz.accordion.animations[options.animated]({\n                    toShow: jQuery([ ]), toHide: toHide, complete: complete, down: down, autoheight: options.autoheight\n                });\n            } else {\n                $.dwz.accordion.animations[options.animated]({\n                    toShow: toShow, toHide: toHide, complete: complete, down: down, autoheight: options.autoheight\n                });\n            }\n        } else {\n            if (!options.alwaysOpen && clickedActive ) {\n                toShow.toggle();\n            } else {\n                toHide.hide();\n                toShow.show();\n            }\n            complete(true);\n        }\n    }\n    function clickHandler(event) {\n        var options = $.data(this, \"dwz-accordion\").options;\n        if (options.disabled ) {\n            return false;\n        }\n\n        // called only when using activate(false) to close all parts\n        // programmatically\n        if (!event.target && !options.alwaysOpen ) {\n            options.active.find(\"h2\").toggleClass(options.selectedClass);\n            options.active.find(\"h2 .icon\").toggleClass(options.selectedIconClass);\n            var toHide = options.active.next(), data = {\n                instance: this, options: options, newHeader: jQuery([ ]), oldHeader: options.active, newContent: jQuery([ ]), oldContent: toHide\n            }, toShow = options.active = $([ ]);\n            toggle.call(this, toShow, toHide, data);\n            return false;\n        }\n        // get the click target\n        var clicked = $(event.target);\n\n        // due to the event delegation model, we have to check if one\n        // of the parent elements is our actual header, and find that\n        if (clicked.parents(options.header).length ) {\n            while (!clicked.is(options.header)) {\n                clicked = clicked.parent();\n            }\n        }\n        var clickedActive = clicked[0] == options.active[0];\n\n        // if animations are still active, or the active header is the target,\n        // ignore click\n        if (options.running || ( options.alwaysOpen && clickedActive ) ) {\n            return false;\n        }\n        if (!clicked.is(options.header) ) {\n            return;\n        }\n\n        // switch classes\n        options.active.find(\"h2\").toggleClass(options.selectedClass);\n        options.active.find(\"h2 .icon\").toggleClass(options.selectedIconClass);\n        if (!clickedActive ) {\n            clicked.find(\"h2\").addClass(options.selectedClass);\n            clicked.find(\"h2 .icon\").toggleClass(options.selectedIconClass);\n        }\n\n        // find elements to show and hide\n        var toShow = clicked.next(), toHide = options.active.next(),\n        // data = [clicked, options.active, toShow, toHide],\n        data = {\n            instance: this, options: options, newHeader: clicked, oldHeader: options.active, newContent: toShow, oldContent: toHide\n        }, down = options.headers.index(options.active[0]) > options.headers.index(clicked[0]);\n        options.active = clickedActive ? $([ ]): clicked;\n        toggle.call(this, toShow, toHide, data, clickedActive, down);\n        return false;\n    }\n\n    function findActive(headers, selector) {\n        return selector != undefined ? typeof selector == \"number\" ? headers.filter(\":eq(\" + selector + \")\"): headers.not(headers.not(selector)): selector === false ? $([ ])\n                : headers.filter(\":eq(0)\");\n    }\n    $.extend($.dwz.accordion, {\n        defaults: {\n            selectedClass: \"collapsable\",selectedIconClass: \"icon-chevron-down\", alwaysOpen: true, animated: 'slide', event: \"click\", header: \".accordionHeader\", autoheight: true, running: 0, clearStyle: true,\n            navigationFilter: function() {\n                return this.href.toLowerCase() == location.href.toLowerCase();\n            }\n        }, animations: {\n            slide: function(options, additions) {\n                options = $.extend({\n                    easing: \"swing\", duration: 100\n                }, options, additions);\n                if (!options.toHide.size() ) {\n                    options.toShow.animate({\n                        height: \"show\"\n                    }, options);\n                    return;\n                }\n                var hideHeight = options.toHide.height(), showHeight = options.toShow.height(), difference = showHeight / hideHeight;\n                options.toShow.css({\n                    height: 0\n                }).show();\n                options.toHide.filter(\":hidden\").each(options.complete).end().filter(\":visible\").animate({\n                    height: \"hide\"\n                }, {\n                    step: function(now) {\n                        var current = ( hideHeight - now ) * difference;\n                        if (!$.support.leadingWhitespace ) {\n                            current = Math.ceil(current);\n                        }\n                        options.toShow.height(current);\n                    }, duration: options.duration, easing: options.easing, complete: function() {\n                        options.toShow.css({\n                            height: showHeight\n                        });\n                        options.toShow.css({\n                            overflow: \"auto\"\n                        });\n                        options.complete();\n                    }\n                });\n            }, bounceslide: function(options) {\n                this.slide(options, {\n                    easing: options.down ? \"bounceout\": \"swing\", duration: options.down ? 200: 100\n                });\n            }, easeslide: function(options) {\n                this.slide(options, {\n                    easing: \"easeinout\", duration: 100\n                })\n            }\n        }\n    });\n} )(jQuery);\n\nfunction initEnv() {\n    $(\"body\").append(DWZ.frag[\"dwzFrag\"]);\n    if (!$.support.leadingWhitespace && /6.0/.test(navigator.userAgent) ) {\n        try {\n            document.execCommand(\"BackgroundImageCache\", false, true);\n        } catch (e) {}\n    }\n    if (!$.support.leadingWhitespace ) {\n        window.setInterval(\"CollectGarbage();\", 10000);\n    }\n    $(window).resize(function() {\n        initLayout();\n        $(this).trigger(DWZ.eventType.resizeGrid);\n    });\n    var ajaxbg = $(\"#background,#progressBar\");\n    ajaxbg.hide();\n    ajaxbg.click(function(){\n        $('#background,#progressBar').hide();\n    });\n    $(document).ajaxStart(function() {\n        ajaxbg.show();\n    }).ajaxStop(function() {\n        ajaxbg.hide();\n    });\n    $(\"#leftside\").jBar({\n        minW: 150, maxW: 700\n    });\n    if ($.taskBar ){\n        $.taskBar.init();\n    }\n    setTimeout(function() {\n        initLayout();\n        if (window.navTab) {\n            navTab.init();\n        }\n        initUI();\n        if ($.fn.navMenu ){\n            var hash = location.hash.skipChar('#').replace(/\\?.*$/, '');\n            var callback;\n            var parentId;\n            if(hash ) {\n                parentId = hash.substring(0, hash.indexOf('_'));\n                var tabid = hash.substring(hash.indexOf('_') + 1);\n                if(tabid ) {\n                    callback = function(){\n                        $('#menu a[rel='+escapeJquery(tabid)+']').click();\n                    }\n                }\n            }\n            $(\"#navMenu\").navMenu(callback);\n            if(parentId ) {\n                $('#navMenu a[parentid='+parentId+']').click();\n            }\n        }\n        $(document).trigger(DWZ.eventType.initEnvAfter);\n    }, 10);\n}\nfunction initLayout() {\n    var iContentW = $(window).width() - (DWZ.ui.sbar ? $(\"#sidebar\").width() : $(\"#sidebar_s\").width());\n    var iContentH = $(window).height() - $('header').outerHeight(true) - $('footer').outerHeight(true);\n    $(\"#navTab\").css({\"width\":iContentW});\n    $(\"main .tabsPageContent\").height(iContentH - $('.tabsPageHeader').outerHeight(true)).find(\"[layoutH]\").layoutH();\n    $(\"#splitBar, #splitBarProxy\").height(iContentH - 2);\n    $(\"#taskbar\").css({\n        top: iContentH + $(\"header\").height(), width: $(window).width()\n    });\n  $(\"#menu\").css({'max-height':iContentH-$(\"#sidebar .collapse\").height()});\n}\n\nfunction initUI(_box) {\n    var $p = $(_box || document);\n    // css tables\n    $('table.list', $p).cssTable();\n    // jTables\n    $('table.table', $p).jTable();\n\n    // auto bind tabs\n    $(\"div.tabs\", $p).each(function() {\n        var $this = $(this);\n        var options = {};\n        options.currentIndex = $this.attr(\"currentIndex\") || 0;\n        options.eventType = $this.attr(\"eventType\") || \"click\";\n        $this.tabs(options);\n    });\n    $(\"ul.tree\", $p).jTree();\n    $('div.accordion', $p).each(function() {\n        var $this = $(this);\n        $this.accordion({\n            alwaysOpen: false, active: 0, autoheight:false\n        });\n    });\n    $(\":button.checkboxCtrl, :checkbox.checkboxCtrl\", $p).checkboxCtrl($p);\n    if ($.fn.combox ){\n        $(\"select.combox\", $p).combox();\n    }\n    if ($.fn.uploadify ) {\n        $(\":file[uploaderOption]\", $p).each(function() {\n            var $this = $(this);\n            var options = {\n                fileObjName: $this.attr(\"name\") || \"file\", auto: true, multi: true, onUploadError: uploadifyError\n            };\n            var uploaderOption = DWZ.jsonEval($this.attr(\"uploaderOption\"));\n            $.extend(options, uploaderOption);\n            DWZ.debug(\"uploaderOption: \" + DWZ.obj2str(uploaderOption));\n            $this.uploadify(options);\n        });\n    }\n\n    // validate form\n    $(\"form.required-validate\", $p).each(function() {\n        var $form = $(this);\n        $form.validate({\n            onsubmit: false, focusInvalid: false, focusCleanup: true, errorElement: \"span\", ignore: \".ignore\", invalidHandler: function(form, validator) {\n                var errors = validator.numberOfInvalids();\n                if (errors ) {\n                    var message = DWZ.msg(\"validateFormError\", [ errors ]);\n                    alertMsg.error(message);\n                }\n            }\n        });\n        $form.find(\"input[customvalid]\").each(function() {\n            var $input = $(this);\n            $input.rules(\"add\", {\n                customvalid: $input.attr(\"customvalid\")\n            })\n        });\n    });\n    if ($.fn.datepicker ) {\n        $('input.date', $p).each(function() {\n            var $this = $(this);\n            var opts = {};\n            if ($this.attr(\"dateFmt\") ) {\n                opts.pattern = $this.attr(\"dateFmt\");\n            }\n            if ($this.attr(\"minDate\") ) {\n                opts.minDate = $this.attr(\"minDate\");\n            }\n            if ($this.attr(\"maxDate\") ) {\n                opts.maxDate = $this.attr(\"maxDate\");\n            }\n            if ($this.attr(\"mmStep\") ) {\n                opts.mmStep = $this.attr(\"mmStep\");\n            }\n            if ($this.attr(\"ssStep\") ) {\n                opts.ssStep = $this.attr(\"ssStep\");\n            }\n            $this.datepicker(opts);\n        });\n    }\n\n    initLink($p);\n\n    $(\"div.pagination\", $p).each(function() {\n        var $this = $(this);\n        $this.pagination({\n            targetType: $this.attr(\"targetType\"), rel: $this.attr(\"rel\"), totalCount: $this.attr(\"totalCount\"), numPerPage: $this.attr(\"numPerPage\") ,\n            pageNumShown: $this.attr(\"pageNumShown\"), currentPage: $this.attr(\"currentPage\")\n        });\n    });\n    if ($.fn.sortDrag ) {\n        $(\"div.sortDrag\", $p).sortDrag();\n    }\n\n    // dwz.ajax.js\n    if ($.fn.multLookup ) {\n        $(\"[multLookup]:button\", $p).multLookup();\n    }\n    if ($.fn.suggest ) {\n        $(\"input[suggestFields]\", $p).suggest();\n    }\n    if ($.fn.itemDetail ) {\n        $(\"table.itemDetail\", $p).itemDetail();\n    }\n    // \u6267\u884c\u7b2c\u4e09\u65b9jQuery\u63d2\u4ef6\u3010 \u7b2c\u4e09\u65b9jQuery\u63d2\u4ef6\u6ce8\u518c\uff1aDWZ.regPlugins.push(function($p){}); \u3011\n    $.each(DWZ.regPlugins, function(index, fn) {\n        fn($p);\n    });\n    // init styles\n    $(\"input[type=text], input[type=number], input[type=password], textarea\", $p).not(\"textarea.editor\", $p).addClass(\"textInput\");\n    $(\"input[readonly], textarea[readonly]\", $p).addClass(\"readonly\");\n    $(\"input[disabled=true], textarea[disabled=true]\", $p).addClass(\"disabled\");\n    $(\"input[type=text]\", $p).not(\"div.tabs input[type=text]\", $p).filter(\"[alt]\").inputAlert();\n}\n\nfunction initLink($p) {\n    // navTab\n    $(\"a[target=navTab]\", $p).each(function() {\n        $(this).click(function(event) {\n            var $this = $(this);\n            var title = $this.attr(\"title\") || $this.text();\n            if(title){\n                title = title.replace(/<[^>]*>/gi,\"\");\n            }\n            var titleHtml = $this.attr(\"title\") || $this.html();\n            var icon = $this.attr(\"icon\");\n            if(icon){\n                titleHtml = icon + \" \" + titleHtml;\n            }\n            var tabid = $this.attr(\"rel\") || \"_blank\";\n            var fresh = eval($this.attr(\"fresh\") || \"true\");\n            var external = eval($this.attr(\"external\") || \"false\");\n            var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n            var newWindow = (navigator.platform.match(\"Mac\") ? event.metaKey : event.ctrlKey);\n            DWZ.debug(url);\n            if (!url.isFinishedTm() ) {\n                alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                return false;\n            }\n            navTab.openTab(tabid, url, {\n                title: title, titleHtml: titleHtml, fresh: fresh, external: external, focusNewWindow:newWindow\n            });\n            return false;\n        });\n    });\n\n    // dialogs\n    $(\"a[target=dialog]\", $p).each(function() {\n        $(this).click(function(event) {\n            var $this = $(this);\n            var title = $this.attr(\"title\") || $this.html();\n            var rel = $this.attr(\"rel\") || \"_blank\";\n            var options = {};\n            var w = $this.attr(\"width\");\n            var h = $this.attr(\"height\");\n            if (w ) {\n                options.width = w;\n            }\n            if (h ) {\n                options.height = h;\n            }\n            options.max = eval($this.attr(\"max\") || \"false\");\n            options.mask = eval($this.attr(\"mask\") || \"false\");\n            options.maxable = eval($this.attr(\"maxable\") || \"true\");\n            options.minable = eval($this.attr(\"minable\") || \"true\");\n            options.fresh = eval($this.attr(\"fresh\") || \"true\");\n            options.resizable = eval($this.attr(\"resizable\") || \"true\");\n            options.drawable = eval($this.attr(\"drawable\") || \"true\");\n            options.close = eval($this.attr(\"close\") || \"\");\n            options.param = $this.attr(\"param\") || \"\";\n            options.focusNewWindow = (navigator.platform.match(\"Mac\") ? event.metaKey : event.ctrlKey);\n            var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n            DWZ.debug(url);\n            if (!url.isFinishedTm() ) {\n                alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                return false;\n            }\n            $.pdialog.open(url, rel, title, options);\n            return false;\n        });\n    });\n    $(\"a[target=ajax]\", $p).each(function() {\n        $(this).click(function() {\n            var $this = $(this);\n            var rel = $this.attr(\"rel\");\n            if (rel ) {\n                var $rel = $(\"#\" + rel);\n                $rel.loadUrl($this.attr(\"href\"), {}, function() {\n                    $rel.find(\"[layoutH]\").layoutH();\n                });\n            }\n            return false;\n        });\n    });\n    if ($.fn.ajaxTodo ) {\n        $(\"a[target=ajaxTodo]\", $p).ajaxTodo();\n    }\n    if ($.fn.dwzExport ) {\n        $(\"a[target=dwzExport]\", $p).dwzExport();\n    }\n    if ($.fn.lookup ) {\n        $(\"a[lookupGroup]\", $p).lookup();\n    }\n    if ($.fn.selectedTodo ) {\n        $(\"a[target=selectedTodo]\", $p).selectedTodo();\n    }\n}\n\n/**\n * Theme Plugins\n *\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n        theme: function(options) {\n            var op = $.extend({\n                themeBase: \"themes\", defaultTheme: \"default\"\n            }, options);\n            var _themeHref = op.themeBase + \"/#theme#/style.css\";\n            var $themeItem = $(\"<link href=\\\"\" + _themeHref.replace(\"#theme#\", op.defaultTheme) + \"\\\" rel=\\\"stylesheet\\\" media=\\\"screen\\\"/>\");\n            var setTheme = function(themeName) {\n                $themeItem.attr(\"href\", _themeHref.replace(\"#theme#\", themeName));\n                jThemeLi.find(\">div\").removeClass(\"selected\");\n                jThemeLi.filter(\"[theme=\" + themeName + \"]\").find(\">div\").addClass(\"selected\");\n                if ($.isFunction($.cookie) ) {\n                    $.cookie(\"dwz_theme\", themeName);\n                }\n            }\n            var jThemeLi = $(this).find(\">li[theme]\");\n            jThemeLi.each(function(index) {\n                var $this = $(this);\n                var themeName = $this.attr(\"theme\");\n                if(themeName == op.defaultTheme){\n                    $this.find(\">div\").addClass(\"selected\");\n                }\n                $this.addClass(themeName).click(function() {\n                    setTheme(themeName);\n                });\n            });\n            if ($.isFunction($.cookie) ) {\n                if ($.cookie(\"dwz_theme\") ) {\n                    setTheme($.cookie(\"dwz_theme\"));\n                }\n            }\n            $themeItem.appendTo($(\"head\"));\n            return this;\n        }\n    });\n} )(jQuery);\n/**\n * @author zhanghuihua@msn.com\n */\n( function($) {\n    $.fn.navMenu = function(callback) {\n        return this.each(function() {\n            var $box = $(this);\n            var $callback = callback;\n            $box.find(\"li>a\").click(function() {\n                var $a = $(this);\n                if(!$a.is(\"[href^=javascript:]\")){\n                    $(\"#sidebar #menu\").ajaxUrl({\n                        type: \"get\", url: $a.attr(\"href\"), callback: function(response) {\n                            $box.find(\"li\").removeClass(\"selected\");\n                            $a.parent().addClass(\"selected\");\n                            if($callback ) {\n                                $callback();\n                                $callback = null;\n                            }\n                        }\n                    });\n                }\n                return false;\n            });\n        });\n    }\n} )(jQuery);\n\n/**\n * @author ZhangHuihua@msn.com\n */\n$.setRegional(\"alertMsg\", {\n    title: {\n        error: \"Error\", info: \"Information\", warn: \"Warning\", correct: \"Successful\", confirm: \"Confirmation\"\n    }, butMsg: {\n        ok: \"OK\", yes: \"Yes\", no: \"No\", cancel: \"Cancel\"\n    }\n});\nvar alertMsg = {\n    _boxId: \"#alertMsgBox\", _bgId: \"#alertBackground\", _closeTimer: null, _types: {\n        error: \"error\", info: \"info\", warn: \"warn\", correct: \"correct\", confirm: \"confirm\"\n    }, _getTitle: function(key) {\n        return $.regional.alertMsg.title[key];\n    }, _keydownOk: function(event) {\n        if (event.keyCode == DWZ.keyCode.ENTER || event.keyCode == DWZ.keyCode.BACKSPACE ){\n            event.data.target.trigger(\"click\");\n            return false;\n        }\n    }, _keydownEsc: function(event) {\n        if (event.keyCode == DWZ.keyCode.ESC ){\n            event.data.target.trigger(\"click\");\n        }\n    } ,\n    /**\n     * @param {Object}\n     *            type\n     * @param {Object}\n     *            msg\n     * @param {Object}\n     *            buttons [button1, button2]\n     */\n    _open: function(type, msg, buttons) {\n        $(this._boxId).remove();\n        var butsHtml = \"\";\n        if (buttons ) {\n            for (var i = 0; i < buttons.length; i++) {\n                var sRel = buttons[i].call ? \"callback\": \"\";\n                butsHtml += DWZ.frag[\"alertButFrag\"].replace(\"#butMsg#\", buttons[i].name).replace(\"#callback#\", sRel);\n            }\n        }\n        var boxHtml = DWZ.frag[\"alertBoxFrag\"].replace(\"#type#\", type).replace(\"#title#\", this._getTitle(type)).replace(\"#message#\", msg).replace(\"#butFragment#\", butsHtml);\n        $($.parseHTML(boxHtml, document, true)).appendTo(\"body\").css({\n            top: -$(this._boxId).height() + \"px\"\n        }).animate({\n            top: \"0px\"\n        }, 500);\n        if (this._closeTimer ) {\n            clearTimeout(this._closeTimer);\n            this._closeTimer = null;\n        }\n        if (this._types.info == type || this._types.correct == type ) {\n            this._closeTimer = setTimeout(function() {\n                alertMsg.close()\n            }, 3500);\n        } else {\n            $(this._bgId).show();\n        }\n        var jButs = $(this._boxId).find(\"a.button\");\n        var jCallButs = jButs.filter(\"[rel=callback]\");\n        var jDoc = $(document);\n        for (var i = 0; i < buttons.length; i++) {\n            if (buttons[i].call ){\n                jCallButs.eq(i).click(buttons[i].call);\n            }\n            if (buttons[i].keyCode == DWZ.keyCode.ENTER ) {\n                jDoc.bind(\"keydown\", {\n                    target: jButs.eq(i)\n                }, this._keydownOk);\n            }\n            if (buttons[i].keyCode == DWZ.keyCode.ESC ) {\n                jDoc.bind(\"keydown\", {\n                    target: jButs.eq(i)\n                }, this._keydownEsc);\n            }\n        }\n    }, close: function() {\n        $(document).unbind(\"keydown\", this._keydownOk).unbind(\"keydown\", this._keydownEsc);\n        $(this._boxId).animate({\n            top: -$(this._boxId).height()\n        }, 100, function() {\n            $(this).remove();\n        });\n        $(this._bgId).hide();\n        if(this._callback){\n            this._callback();\n            this._callback = null;\n        }\n    }, error: function(msg, options) {\n        this._alert(this._types.error, msg, options);\n    }, info: function(msg, options) {\n        this._alert(this._types.info, msg, options);\n    }, warn: function(msg, options) {\n        this._alert(this._types.warn, msg, options);\n    }, correct: function(msg, options) {\n        this._alert(this._types.correct, msg, options);\n    }, _alert: function(type, msg, options) {\n        var op = {\n            okName: $.regional.alertMsg.butMsg.ok, okCall: null\n        };\n        $.extend(op, options);\n        if(options && options.callback && $.isFunction(options.callback)){\n            this._callback = options.callback;\n        }\n        var buttons = [ {\n            name: op.okName, call: op.okCall, keyCode: DWZ.keyCode.ENTER\n        } ];\n        this._open(type, msg, buttons);\n    } ,\n    /**\n     * @param {Object}\n     *            msg\n     * @param {Object}\n     *            options {okName, okCal, cancelName, cancelCall}\n     */\n    confirm: function(msg, options) {\n        var op = {\n            okName: $.regional.alertMsg.butMsg.ok, okCall: null, cancelName: $.regional.alertMsg.butMsg.cancel, cancelCall: null\n        };\n        $.extend(op, options);\n        var buttons = [ {\n            name: op.okName, call: op.okCall, keyCode: DWZ.keyCode.ENTER\n        }, {\n            name: op.cancelName, call: op.cancelCall, keyCode: DWZ.keyCode.ESC\n        } ];\n        this._open(this._types.confirm, msg, buttons);\n    }\n};\n\n/**\n * @author zhanghuihua@msn.com\n */\n\n( function($) {\n    var menu,  hash;\n    $.fn.extend({\n        contextMenu: function(id, options) {\n            var op = $.extend({\n                bindings: {}, ctrSub: null\n            }, options);\n            if (!menu ) {\n                menu = $('<div id=\"contextmenu\"></div>').appendTo('body').hide();\n            }\n            hash = hash || [ ];\n            hash.push({\n                id: id, bindings: op.bindings || {}, ctrSub: op.ctrSub\n            });\n            var index = hash.length - 1;\n            $(this).bind('contextmenu', function(e) {\n                display(index, this, e, op);\n                return false;\n            });\n            return this;\n        }\n    });\n    function display(index, trigger, e, options) {\n        var cur = hash[index];\n        var content = $(DWZ.frag[cur.id]);\n        content.find('li');\n\n        // Send the content to the menu\n        menu.html(content);\n        $.each(cur.bindings, function(id, func) {\n            $(\"[rel='\" + id + \"']\", menu).bind('click', function(e) {\n                hide();\n                func($(trigger), $(\"#\" + cur.id));\n            });\n        });\n        var posX = e.pageX;\n        var posY = e.pageY;\n        if ($(window).width() < posX + menu.width() ) {\n            posX -= menu.width();\n        }\n        if ($(window).height() < posY + menu.height() ) {\n            posY -= menu.height();\n        }\n        menu.css({\n            'left': posX, 'top': posY\n        }).show();\n        $(document).one('click', hide);\n        if ($.isFunction(cur.ctrSub) ) {\n            cur.ctrSub($(trigger), $(\"#\" + cur.id));\n        }\n    }\n    function hide() {\n        menu.hide();\n    }\n} )(jQuery);\n\n/**\n * @author ZhangHuihua@msn.com\n */\nvar navTab = {\n    componentBox: null, // tab component. contain tabBox, prevBut, nextBut,\n    // panelBox\n    _tabBox: null ,\n    _prevBut: null ,\n    _nextBut: null ,\n    _panelBox: null ,\n    _moreBut: null ,\n    _moreBox: null ,\n    _currentIndex: 0 ,\n    _op: {\n        id: \"navTab\", step: 4 , stTabBox: \".navTab-tab\", stPanelBox: \".navTab-panel\", mainTabId: \"main\", close$: \"a.close\", prevClass: \"tabsLeft\", nextClass: \"tabsRight\" ,\n        stMore: \".tabsMore\", stMoreLi: \"ul.tabsMoreList\"\n    } ,\n    init: function(options) {\n        if ($.History) {\n            $.History.init();\n        }\n        var $this = this;\n        $.extend(this._op, options);\n        this.componentBox = $(\"#\" + this._op.id);\n        this.step = this._op.step;\n        this._tabBox = this.componentBox.find(this._op.stTabBox);\n        this._panelBox = this.componentBox.find(this._op.stPanelBox);\n        this._prevBut = this.componentBox.find(\".\" + this._op.prevClass);\n        this._nextBut = this.componentBox.find(\".\" + this._op.nextClass);\n        this._moreBut = this.componentBox.find(this._op.stMore);\n        this._moreBox = this.componentBox.find(this._op.stMoreLi);\n        this._prevBut.click(function(event) {\n            $this._scrollPrev()\n        });\n        this._nextBut.click(function(event) {\n            $this._scrollNext()\n        });\n        this._moreBut.click(function() {\n            $this._moreBox.show();\n            return false;\n        });\n        $(document).click(function() {\n            $this._moreBox.hide()\n        });\n        this._contextmenu(this._tabBox);\n        this._contextmenu(this._getTabs());\n        this._init();\n        this._ctrlScrollBut();\n    } ,\n    _init: function() {\n        var $this = this;\n        this._getTabs().each(function(iTabIndex) {\n            $(this).unbind(\"click\").click(function(event) {\n                $this._switchTab(iTabIndex);\n            });\n            $(this).find(navTab._op.close$).unbind(\"click\").click(function() {\n                $this._closeTab(iTabIndex);\n            });\n        });\n        this._getMoreLi().each(function(iTabIndex) {\n            $(this).find(\">a\").unbind(\"click\").click(function(event) {\n                $this._switchTab(iTabIndex);\n            });\n        });\n        this._switchTab(this._currentIndex);\n    } ,\n    _contextmenu: function($obj) { // navTab\u53f3\u952e\u83dc\u5355\n        var $this = this;\n        $obj.contextMenu('navTabCM', {\n            bindings: {\n                reload: function(t, m) {\n                    $this._reload(t, true);\n                }, closeCurrent: function(t, m) {\n                    var tabId = t.attr(\"tabid\");\n                    if (tabId ) {\n                        $this.closeTab(tabId);\n                    } else {\n                        $this.closeCurrentTab();\n                    }\n                }, closeOther: function(t, m) {\n                    var index = $this._indexTabId(t.attr(\"tabid\"));\n                    $this._closeOtherTab(index > 0 ? index: $this._currentIndex);\n                }, closeAll: function(t, m) {\n                    $this.closeAllTab();\n                }\n            }, ctrSub: function(t, m) {\n                var mReload = m.find(\"[rel='reload']\");\n                var mCur = m.find(\"[rel='closeCurrent']\");\n                var mOther = m.find(\"[rel='closeOther']\");\n                var mAll = m.find(\"[rel='closeAll']\");\n                var $tabLi = $this._getTabs();\n                if ($tabLi.size() < 2 ) {\n                    mCur.addClass(\"disabled\");\n                    mOther.addClass(\"disabled\");\n                    mAll.addClass(\"disabled\");\n                }\n                if ($this._currentIndex == 0 || t.attr(\"tabid\") == $this._op.mainTabId ) {\n                    mCur.addClass(\"disabled\");\n                    if(!t.attr('url')){\n                        mReload.addClass(\"disabled\");\n                    }\n                } else if ($tabLi.size() == 2 ) {\n                    mOther.addClass(\"disabled\");\n                }\n            }\n        });\n    } ,\n    _getTabs: function() {\n        return this._tabBox.find(\"> li\");\n    } ,\n    _getPanels: function() {\n        return this._panelBox.find(\"> div\");\n    } ,\n    _getMoreLi: function() {\n        return this._moreBox.find(\"> li\");\n    } ,\n    _getTab: function(tabid) {\n        var index = this._indexTabId(tabid);\n        if (index >= 0 ) {\n            return this._getTabs().eq(index);\n        }\n    } ,\n    getPanel: function(tabid) {\n        var index = this._indexTabId(tabid);\n        if (index >= 0 ) {\n            return this._getPanels().eq(index);\n        }\n    } ,\n    _getTabsW: function(iStart, iEnd) {\n        return this._tabsW(this._getTabs().slice(iStart, iEnd));\n    } ,\n    _tabsW: function($tabs) {\n        var iW = 0;\n        $tabs.each(function() {\n            iW += $(this).outerWidth(true);\n        });\n        return iW;\n    } ,\n    _indexTabId: function(tabid) {\n        if (!tabid ) {\n            return -1;\n        }\n        var iOpenIndex = -1;\n        this._getTabs().each(function(index) {\n            if ($(this).attr(\"tabid\") == tabid ) {\n                iOpenIndex = index;\n                return;\n            }\n        });\n        return iOpenIndex;\n    } ,\n    _getLeft: function() {\n        return this._tabBox.position().left;\n    } ,\n    _getScrollBarW: function() {\n        return this.componentBox.width() - 90;\n    } ,\n    _visibleStart: function() {\n        var iLeft = this._getLeft(), iW = 0;\n        var $tabs = this._getTabs();\n        for (var i = 0; i < $tabs.size(); i++) {\n            if (iW + iLeft >= 0 ) {\n                return i;\n            }\n            iW += $tabs.eq(i).outerWidth(true);\n        }\n        return 0;\n    } ,\n    _visibleEnd: function() {\n        var iLeft = this._getLeft(), iW = 0;\n        var $tabs = this._getTabs();\n        for (var i = 0; i < $tabs.size(); i++) {\n            iW += $tabs.eq(i).outerWidth(true);\n            if (iW + iLeft > this._getScrollBarW() ) {\n                return i;\n            }\n        }\n        return $tabs.size();\n    } ,\n    _scrollPrev: function() {\n        var iStart = this._visibleStart();\n        if (iStart >= this.step ) {\n            this._scrollTab(-this._getTabsW(0, iStart - this.step));\n        } else if (iStart > 0 ) {\n            this._scrollTab(-this._getTabsW(0, iStart - 1));\n        }\n    } ,\n    _scrollNext: function() {\n        var iEnd = this._visibleEnd();\n        if (iEnd + this.step <= this._getTabs().size() ) {\n            this._scrollTab(-this._getTabsW(0, iEnd + this.step) + this._getScrollBarW());\n        } else if (iEnd < this._getTabs().size() ) {\n            this._scrollTab(-this._getTabsW(0, iEnd + 1) + this._getScrollBarW());\n        }\n    } ,\n    _scrollTab: function(iLeft, isNext) {\n        var $this = this;\n        this._tabBox.animate({\n            left: iLeft + 'px'\n        }, 200, function() {\n            $this._ctrlScrollBut();\n        });\n    } ,\n    _scrollCurrent: function() { // auto scroll current tab\n        var iW = this._tabsW(this._getTabs());\n        if (iW <= this._getScrollBarW() ) {\n            this._scrollTab(0);\n        } else if (this._getLeft() < this._getScrollBarW() - iW ) {\n            this._scrollTab(this._getScrollBarW() - iW);\n        } else if (this._currentIndex < this._visibleStart() ) {\n            this._scrollTab(-this._getTabsW(0, this._currentIndex));\n        } else if (this._currentIndex >= this._visibleEnd() ) {\n            this._scrollTab(this._getScrollBarW() - this._getTabs().eq(this._currentIndex).outerWidth(true) - this._getTabsW(0, this._currentIndex));\n        }\n    } ,\n    _ctrlScrollBut: function() {\n        var iW = this._tabsW(this._getTabs());\n        if (this._getScrollBarW() > iW ) {\n            this._prevBut.addClass(\"tabsLeftDisabled\");\n            this._nextBut.addClass(\"tabsRightDisabled\");\n            this._tabBox.parent().removeClass(\"tabsPageHeaderMargin\");\n        } else {\n            this._prevBut.removeClass(\"tabsLeftDisabled\");\n            this._nextBut.removeClass(\"tabsRightDisabled\");\n            this._tabBox.parent().addClass(\"tabsPageHeaderMargin\");\n            if (this._getLeft() >= 0 ) {\n                this._prevBut.addClass(\"tabsLeftDisabled\");\n            } else if (this._getLeft() <= this._getScrollBarW() - iW ) {\n                this._nextBut.addClass(\"tabsRightDisabled\");\n            }\n        }\n    } ,\n    _switchTab: function(iTabIndex) {\n        var $tab = this._getTabs().removeClass(\"selected\").eq(iTabIndex).addClass(\"selected\");\n        this._getPanels().hide().eq(iTabIndex).show();\n        this._getMoreLi().removeClass(\"selected\").eq(iTabIndex).addClass(\"selected\");\n        this._currentIndex = iTabIndex;\n        this._scrollCurrent();\n        this._reload($tab);\n    } ,\n    _closeTab: function(index, openTabid) {\n        this._getTabs().eq(index).remove();\n        this._getPanels().eq(index).trigger(DWZ.eventType.pageClear).remove();\n        this._getMoreLi().eq(index).remove();\n        if (this._currentIndex >= index ) {\n            this._currentIndex--;\n        }\n        if (openTabid ) {\n            var openIndex = this._indexTabId(openTabid);\n            if (openIndex > 0 ) {\n                this._currentIndex = openIndex;\n            }\n        }\n        this._init();\n        this._scrollCurrent();\n        this._reload(this._getTabs().eq(this._currentIndex));\n    } ,\n    closeTab: function(tabid) {\n        var index = this._indexTabId(tabid);\n        if (index > 0 ) {\n            this._closeTab(index);\n        }\n    } ,\n    closeCurrentTab: function(openTabid) { // openTabid\n        // \u53ef\u4ee5\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u5173\u95ed\u5f53\u524dtab\u540e\uff0c\u6253\u5f00\u6700\u540e\u4e00\u4e2atab\n        if (this._currentIndex > 0 ) {\n            this._closeTab(this._currentIndex, openTabid);\n        }\n    } ,\n    closeAllTab: function() {\n        this._getTabs().filter(\":gt(0)\").remove();\n        this._getPanels().filter(\":gt(0)\").trigger(DWZ.eventType.pageClear).remove();\n        this._getMoreLi().filter(\":gt(0)\").remove();\n        this._currentIndex = 0;\n        this._init();\n        this._scrollCurrent();\n    } ,\n    _closeOtherTab: function(index) {\n        index = index || this._currentIndex;\n        if (index > 0 ) {\n            var str$ = \":eq(\" + index + \")\";\n            this._getTabs().not(str$).filter(\":gt(0)\").remove();\n            this._getPanels().not(str$).filter(\":gt(0)\").trigger(DWZ.eventType.pageClear).remove();\n            this._getMoreLi().not(str$).filter(\":gt(0)\").remove();\n            this._currentIndex = 1;\n            this._init();\n            this._scrollCurrent();\n        } else {\n            this.closeAllTab();\n        }\n    } ,\n    _loadUrlCallback: function($panel) {\n        $panel.find(\"[layoutH]\").layoutH();\n        $panel.find(\":button.close\").click(function() {\n            navTab.closeCurrentTab();\n        });\n    } ,\n    _reload: function($tab, flag) {\n        flag = flag || $tab.data(\"reloadFlag\");\n        var url = $tab.attr(\"url\");\n        if (flag && url ) {\n            $tab.data(\"reloadFlag\", null);\n            var $panel = this.getPanel($tab.attr(\"tabid\"));\n            if ($tab.hasClass(\"external\") || url.isExternalUrl()) {\n                navTab.openExternal(url, $panel);\n            } else {\n                // \u83b7\u53d6pagerForm\u53c2\u6570\n                var $pagerForm = $(\".pagerForm\", $panel);\n                if(0==$pagerForm.length || \"2\" ==flag){\n                    $panel.loadUrl(url, $pagerForm.serializeArray(), function() {\n                        navTab._loadUrlCallback($panel);\n                    });\n                }else{\n                    $pagerForm.submit();\n                }\n            }\n        }\n    } ,\n    reloadFlag: function(tabid,value) {\n        var $tab = this._getTab(tabid);\n        if ($tab ) {\n            if (this._indexTabId(tabid) == this._currentIndex ) {\n                this._reload($tab, true);\n            } else {\n                if(!value){\n                    value = 1;\n                }\n                $tab.data(\"reloadFlag\", value);\n            }\n        }\n    } ,\n    reload: function(url, options) {\n        var op = $.extend({\n            data: {}, navTabId: \"\", callback: null\n        }, options);\n        var $tab = op.navTabId ? this._getTab(op.navTabId): this._getTabs().eq(this._currentIndex);\n        var $panel = op.navTabId ? this.getPanel(op.navTabId): this._getPanels().eq(this._currentIndex);\n        if ($panel ) {\n            if (!url ) {\n                url = $tab.attr(\"url\");\n            }\n            if (url ) {\n                if ($tab.hasClass(\"external\") ) {\n                    navTab.openExternal(url, $panel);\n                } else {\n                    if ($.isEmptyObject(op.data) ) { // \u83b7\u53d6pagerForm\u53c2\u6570\n                        var $pagerForm = $(\".pagerForm\", $panel);\n                        op.data = $pagerForm.size() > 0 ? $pagerForm.serializeArray(): {}\n                    }\n                    $panel.ajaxUrl({\n                        type: \"POST\", url: url, data: op.data, callback: function(response) {\n                            navTab._loadUrlCallback($panel);\n                            if ($.isFunction(op.callback) ) {\n                                op.callback(response);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    } ,\n    getCurrentPanel: function() {\n        return this._getPanels().eq(this._currentIndex);\n    } ,\n    checkTimeout: function() {\n        var json = DWZ.jsonEval(this.getCurrentPanel().html());\n        if (json && json.statusCode == DWZ.statusCode.timeout ) {\n            this.closeCurrentTab();\n        }\n    } ,\n    openExternal: function(url, $panel) {\n        var ih = navTab._panelBox.height();\n        $panel.html(DWZ.frag[\"externalFrag\"].replaceAll(\"{url}\", url).replaceAll(\"{height}\", ih + \"px\"));\n    } ,\n    /**\n     * @param {Object}\n     *            tabid\n     * @param {Object}\n     *            url\n     * @param {Object}\n     *            params: title, data, fresh\n     */\n    openTab: function(tabid, url, options) { // if found tabid replace tab,\n        // else create a new tab.\n        var op = $.extend({\n            title: \"New Tab\", titleHtml: \"New Tab\", data: {}, fresh: true, external: false, focusNewWindow:false\n        }, options);\n        var iOpenIndex = this._indexTabId(tabid);\n        if (iOpenIndex >= 0 && !op.focusNewWindow) {\n            var $tab = this._getTabs().eq(iOpenIndex);\n            var $panel = this._getPanels().eq(iOpenIndex);\n            if (op.fresh || $tab.attr(\"url\") != url ) {\n                $tab.attr(\"url\", url);\n                if (op.external || url.isExternalUrl() ) {\n                    $tab.addClass(\"external\");\n                    navTab.openExternal(url, $panel);\n                } else {\n                    $tab.removeClass(\"external\");\n                    $panel.ajaxUrl({\n                        type: \"GET\", url: url, data: op.data, callback: function() {\n                            navTab._loadUrlCallback($panel);\n                        }\n                    });\n                }\n            }\n            this._currentIndex = iOpenIndex;\n        } else {\n            if(op.focusNewWindow){\n              tabid += Math.round(Math.random() * 10000000);\n            }\n            this._getPanels().eq(this._currentIndex).after('<div class=\"page unitBox\"></div>');\n            this._getTabs().eq(this._currentIndex).after($('<li tabid=\"' + tabid + '\"><a href=\"javascript:;\" class=\"close\"><i class=\"icon-remove-sign\"></i></a></li>').attr('tabid',tabid).append($('<a href=\"javascript:\"></a>').attr('title',op.title).html(op.titleHtml)));\n            this._getMoreLi().eq(this._currentIndex).after($('<li></li>').append($('<a href=\"javascript:\"></a>').attr('title',op.title).html(op.titleHtml)));\n            var $tabs = this._getTabs();\n            var $tab = $tabs.eq(this._currentIndex+1);\n            var $panel = this._getPanels().eq(this._currentIndex+1);\n\n            if (op.external || url.isExternalUrl() ) {\n                $tab.addClass(\"external\");\n                navTab.openExternal(url, $panel);\n            } else {\n                $tab.removeClass(\"external\");\n                $panel.ajaxUrl({\n                    type: \"GET\", url: url, data: op.data, callback: function() {\n                        navTab._loadUrlCallback($panel);\n                    }\n                });\n            }\n            if ($.History) {\n                setTimeout(function(){\n                    $.History.addHistory($('#navMenu .selected a').attr('parentid') + '_' + tabid, function(hash){\n                        var tabid = hash.substring(hash.indexOf('_')+1);\n                        var i = navTab._indexTabId(tabid);\n                        if (i >= 0) navTab._switchTab(i);\n                    }, tabid);\n                }, 10);\n            }\n            this._currentIndex = this._currentIndex + 1;\n            this._contextmenu($tabs.eq(this._currentIndex));\n        }\n        this._init();\n        this._scrollCurrent();\n        this._getTabs().eq(this._currentIndex).attr(\"url\", url);\n    }\n};\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n\n        /**\n         * options: reverse[true, false], eventType[click, hover],\n         * currentIndex[default index 0] stTab[tabs selector], stTabPanel[tab\n         * panel selector] ajaxClass[ajax load], closeClass[close tab]\n         */\n        tabs: function(options) {\n            var op = $.extend({\n                reverse: false, eventType: \"click\", currentIndex: 0, stTabHeader: \"> .tabsHeader\", stTab: \">.tabsHeaderContent>ul\", stTabPanel: \"> .tabsContent\" ,\n                ajaxClass: \"j-ajax\", closeClass: \"close\", prevClass: \"tabsLeft\", nextClass: \"tabsRight\"\n            }, options);\n            return this.each(function() {\n                initTab($(this));\n            });\n            function initTab(jT) {\n                var jSelector = jT.add($(\"> *\", jT));\n                var jTabHeader = $(op.stTabHeader, jSelector);\n                var jTabs = $(op.stTab + \" li\", jTabHeader);\n                var jGroups = $(op.stTabPanel + \" > *\", jSelector);\n                jTabs.unbind().find(\"a\").unbind();\n                jTabHeader.find(\".\" + op.prevClass).unbind();\n                jTabHeader.find(\".\" + op.nextClass).unbind();\n                jTabs.each(function(iTabIndex) {\n                    if (op.currentIndex == iTabIndex ) {\n                        $(this).addClass(\"selected\");\n                    } else {\n                        $(this).removeClass(\"selected\");\n                    }\n                    if (op.eventType == \"hover\" ) {\n                        $(this).hover(function(event) {\n                            switchTab(jT, iTabIndex)\n                        });\n                    } else {\n                        $(this).click(function(event) {\n                            switchTab(jT, iTabIndex)\n                        });\n                    }\n                    $(\"a\", this).each(function() {\n                        if ($(this).hasClass(op.ajaxClass) ) {\n                            $(this).click(function(event) {\n                                var jGroup = jGroups.eq(iTabIndex);\n                                if (this.href && !jGroup.attr(\"loaded\") ) {\n                                    jGroup.loadUrl(this.href, {}, function() {\n                                        jGroup.find(\"[layoutH]\").layoutH();\n                                        jGroup.attr(\"loaded\", true);\n                                    });\n                                }\n                                event.preventDefault();\n                            });\n                        } else if ($(this).hasClass(op.closeClass) ) {\n                            $(this).click(function(event) {\n                                jTabs.eq(iTabIndex).remove();\n                                jGroups.eq(iTabIndex).remove();\n                                if (iTabIndex == op.currentIndex ) {\n                                    op.currentIndex = ( iTabIndex + 1 < jTabs.size() ) ? iTabIndex: iTabIndex - 1;\n                                } else if (iTabIndex < op.currentIndex ) {\n                                    op.currentIndex = iTabIndex;\n                                }\n                                initTab(jT);\n                                return false;\n                            });\n                        }\n                    });\n                });\n                switchTab(jT, op.currentIndex);\n            }\n            function switchTab(jT, iTabIndex) {\n                var jSelector = jT.add($(\"> *\", jT));\n                var jTabHeader = $(op.stTabHeader, jSelector);\n                var jTabs = $(op.stTab + \" li\", jTabHeader);\n                var jGroups = $(op.stTabPanel + \" > *\", jSelector);\n                var jTab = jTabs.eq(iTabIndex);\n                var jGroup = jGroups.eq(iTabIndex);\n                if (op.reverse && ( jTab.hasClass(\"selected\") ) ) {\n                    jTabs.removeClass(\"selected\");\n                    jGroups.hide();\n                } else {\n                    op.currentIndex = iTabIndex;\n                    jTabs.removeClass(\"selected\");\n                    jTab.addClass(\"selected\");\n                    jGroups.hide().eq(op.currentIndex).show();\n                }\n                if (!jGroup.attr(\"inited\") ) {\n                    jGroup.attr(\"inited\", 1000).find(\"input[type=text]\").filter(\"[alt]\").inputAlert();\n                }\n            }\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu\n * @version 1.0\n */\n( function($) {\n    $.fn.extend({\n        jresize: function(options) {\n            if (typeof options == 'string' ) {\n                if (options == 'destroy' ) {\n                    return this.each(function() {\n                        var dialog = this;\n                        $(\"div[class^='resizable']\", dialog).each(function() {\n                            $(this).hide();\n                        });\n                    });\n                }\n            }\n            return this.each(function() {\n                var dialog = $(this);\n                var resizable = $(\".resizable\");\n                $(\"div[class^='resizable']\", dialog).each(function() {\n                    var bar = this;\n                    $(bar).mousedown(function(event) {\n                        $.pdialog.switchDialog(dialog);\n                        $.resizeTool.start(resizable, dialog, event, $(bar).attr(\"tar\"));\n                        return false;\n                    }).show();\n                });\n            });\n        }\n    });\n    $.resizeTool = {\n        start: function(resizable, dialog, e, target) {\n            $.pdialog.initResize(resizable, dialog, target);\n            $.data(resizable[0], 'layer-drag', {\n                options: $.extend($.pdialog._op, {\n                    target: target, dialog: dialog, stop: $.resizeTool.stop\n                })\n            });\n            $.layerdrag.start(resizable[0], e, $.pdialog._op);\n        }, stop: function() {\n            var data = $.data(arguments[0], 'layer-drag');\n            $.pdialog.resizeDialog(arguments[0], data.options.dialog, data.options.target);\n            $(\"body\").css(\"cursor\", \"\");\n            $(arguments[0]).hide();\n        }\n    };\n    $.layerdrag = {\n        start: function(obj, e, options) {\n            if (!$.layerdrag.current ) {\n                $.layerdrag.current = {\n                    el: obj, oleft: parseInt(obj.style.left) || 0, owidth: parseInt(obj.style.width) || 0, otop: parseInt(obj.style.top) || 0 ,\n                    oheight: parseInt(obj.style.height) || 0, ox: e.pageX || e.screenX, oy: e.pageY || e.clientY\n                };\n                $(document).bind('mouseup', $.layerdrag.stop);\n                $(document).bind('mousemove', $.layerdrag.drag);\n            }\n            return $.layerdrag.preventEvent(e);\n        }, drag: function(e) {\n            if (!e ) {\n                var e = window.event;\n            }\n            var current = $.layerdrag.current;\n            var data = $.data(current.el, 'layer-drag');\n            var lmove = ( e.pageX || e.screenX ) - current.ox;\n            var tmove = ( e.pageY || e.clientY ) - current.oy;\n            if ( ( e.pageY || e.clientY ) <= 0 || ( e.pageY || e.clientY ) >= ( $(window).height() - $(\".dialogHeader\", $(data.options.dialog)).outerHeight() ) ) {\n                return false;\n            }\n            var target = data.options.target;\n            var width = current.owidth;\n            var height = current.oheight;\n            if (target != \"n\" && target != \"s\" ) {\n                width += ( target.indexOf(\"w\") >= 0 ) ? -lmove: lmove;\n            }\n            if (width >= $.pdialog._op.minW ) {\n                if (target.indexOf(\"w\") >= 0 ) {\n                    current.el.style.left = ( current.oleft + lmove ) + 'px';\n                }\n                if (target != \"n\" && target != \"s\" ) {\n                    current.el.style.width = width + 'px';\n                }\n            }\n            if (target != \"w\" && target != \"e\" ) {\n                height += ( target.indexOf(\"n\") >= 0 ) ? -tmove: tmove;\n            }\n            if (height >= $.pdialog._op.minH ) {\n                if (target.indexOf(\"n\") >= 0 ) {\n                    current.el.style.top = ( current.otop + tmove ) + 'px';\n                }\n                if (target != \"w\" && target != \"e\" ) {\n                    current.el.style.height = height + 'px';\n                }\n            }\n            return $.layerdrag.preventEvent(e);\n        }, stop: function(e) {\n            var current = $.layerdrag.current;\n            var data = $.data(current.el, 'layer-drag');\n            $(document).unbind('mousemove', $.layerdrag.drag);\n            $(document).unbind('mouseup', $.layerdrag.stop);\n            if (data.options.stop ) {\n                data.options.stop.apply(current.el, [ current.el ]);\n            }\n            $.layerdrag.current = null;\n            return $.layerdrag.preventEvent(e);\n        }, preventEvent: function(e) {\n            if (e.stopPropagation ) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault ) {\n                e.preventDefault();\n            }\n            return false;\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu reference:dwz.drag.js, dwz.dialogDrag.js, dwz.resize.js,\n *         dwz.taskBar.js\n */\n( function($) {\n    $.pdialog = {\n        _op: {\n            height: 500, width: 850, minH: 40, minW: 50, total: 20, max: false, mask: false, resizable: true, drawable: true, maxable: true, minable: true ,focusNewWindow: false,\n            fresh: true\n        } ,\n        _current: null ,\n        _zIndex: 42 ,\n        getCurrent: function() {\n            return this._current;\n        } ,\n        reload: function(url, options) {\n            var op = $.extend({\n                data: {}, dialogId: \"\", callback: null\n            }, options);\n            var dialog = ( op.dialogId && $(\"body\").data(op.dialogId) ) || this._current;\n            if (dialog ) {\n                var jDContent = dialog.find(\".dialogContent\");\n                jDContent.ajaxUrl({\n                    type: \"POST\", url: url, data: op.data, callback: function(response) {\n                        jDContent.find(\"[layoutH]\").layoutH(jDContent);\n                        $(\":button.close\", dialog).click(function() {\n                            $.pdialog.close(dialog);\n                            return false;\n                        });\n                        if ($.isFunction(op.callback) ) {\n                            op.callback(response);\n                        }\n                    }\n                });\n            }\n        } ,\n        // \u6253\u5f00\u4e00\u4e2a\u5c42\n        open: function(url, dlgid, title, options) {\n            var op = $.extend({}, $.pdialog._op, options);\n            var dialog = $(\"body\").data(dlgid);\n            // \u91cd\u590d\u6253\u5f00\u4e00\u4e2a\u5c42\n            if (dialog && !op.focusNewWindow) {\n                if (dialog.is(\":hidden\") ) {\n                    dialog.show();\n                }\n                if (op.fresh || url != dialog.data(\"url\") ) {\n                    dialog.data(\"url\", url);\n                    dialog.find(\".dialogHeader\").find(\"h1\").html(title);\n                    this.switchDialog(dialog);\n                    var jDContent = dialog.find(\".dialogContent\");\n                    jDContent.loadUrl(url, {}, function() {\n                        jDContent.find(\"[layoutH]\").layoutH(jDContent);\n                        $(\"button.close\").click(function() {\n                            $.pdialog.close(dialog);\n                            return false;\n                        });\n                    });\n                }\n            } else { // \u6253\u5f00\u4e00\u4e2a\u5168\u65b0\u7684\u5c42\n                if(op.focusNewWindow){\n                  dlgid += Math.round(Math.random() * 10000000);\n                }\n                dialog = $($.parseHTML(DWZ.frag[\"dialogFrag\"], document, true)).appendTo($(\"body\"));\n                dialog = $(dialog);\n                dialog.data(\"id\", dlgid);\n                dialog.data(\"url\", url);\n                if (options.close ) {\n                    dialog.data(\"close\", options.close);\n                }\n                if (options.param ) {\n                    dialog.data(\"param\", options.param);\n                }\n                ( $.fn.bgiframe && dialog.bgiframe() );\n                dialog.find(\".dialogHeader\").find(\"h1\").html(title);\n                dialog.css(\"zIndex\", ( $.pdialog._zIndex += 2 ));\n                $.pdialog._init(dialog, options);\n                dialog.click(function() {\n                    $.pdialog.switchDialog(dialog);\n                });\n                if (op.resizable ) {\n                    dialog.jresize();\n                }\n                if (op.drawable ) {\n                    dialog.dialogDrag();\n                }\n                $(\"a.close\", dialog).click(function(event) {\n                    $.pdialog.close(dialog);\n                    return false;\n                });\n                if (op.maxable ) {\n                    $(\"a.maximize\", dialog).show().click(function(event) {\n                        $.pdialog.switchDialog(dialog);\n                        $.pdialog.maxsize(dialog);\n                        dialog.jresize(\"destroy\").dialogDrag(\"destroy\");\n                        return false;\n                    });\n                } else {\n                    $(\"a.maximize\", dialog).hide();\n                }\n                $(\"a.restore\", dialog).click(function(event) {\n                    $.pdialog.restore(dialog);\n                    dialog.jresize().dialogDrag();\n                    return false;\n                });\n                if (op.minable ) {\n                    $(\"a.minimize\", dialog).show().click(function(event) {\n                        $.pdialog.minimize(dialog);\n                        return false;\n                    });\n                } else {\n                    $(\"a.minimize\", dialog).hide();\n                }\n                $(\"div.dialogHeader a\", dialog).mousedown(function() {\n                    return false;\n                });\n                $(\"div.dialogHeader\", dialog).dblclick(function() {\n                    if ($(\"a.restore\", dialog).is(\":hidden\") ) {\n                        $(\"a.maximize\", dialog).trigger(\"click\");\n                    } else {\n                        $(\"a.restore\", dialog).trigger(\"click\");\n                    }\n                });\n                if (op.max ) {\n                    $.pdialog.maxsize(dialog);\n                    dialog.jresize(\"destroy\").dialogDrag(\"destroy\");\n                }\n                $(\"body\").data(dlgid, dialog);\n                $.pdialog._current = dialog;\n                // load data\n                var jDContent = $(\".dialogContent\", dialog);\n                jDContent.loadUrl(url, {}, function() {\n                    jDContent.find(\"[layoutH]\").layoutH(jDContent);\n                    $(\"button.close\").click(function() {\n                        $.pdialog.close(dialog);\n                        return false;\n                    });\n                });\n            }\n            if (op.mask ) {\n                dialog.css(\"zIndex\", 1000);\n                $(\"a.minimize\", dialog).hide();\n                dialog.data(\"mask\", true);\n                $(\"#dialogBackground\").show();\n            } else {\n                // add a task to task bar\n                if (op.minable ){\n                    $.taskBar.addDialog(dlgid, title);\n                }\n            }\n        } ,\n        /**\n         * \u5207\u6362\u5f53\u524d\u5c42\n         *\n         * @param {Object}\n         *            dialog\n         */\n        switchDialog: function(dialog) {\n            var index = dialog.css(\"zIndex\");\n            if ($.pdialog._current ) {\n                var cindex = $($.pdialog._current).css(\"zIndex\");\n                $.pdialog._current.css(\"zIndex\", index);\n                dialog.css(\"zIndex\", cindex);\n                $.pdialog._current = dialog;\n            }\n            $.taskBar.switchTask(dialog.data(\"id\"));\n        } ,\n        _init: function(dialog, options) {\n            var op = $.extend({}, this._op, options);\n            var height = op.height > op.minH ? op.height < $(document).height() ? op.height: $(document).height() : op.minH;\n            var width = op.width > op.minW ? op.width < $(document).width() ? op.width: $(document).width() : op.minW;\n            if (isNaN(dialog.height()) || dialog.height() < height ) {\n                dialog.height(height);\n                $(\".dialogContent\", dialog).height(height - $(\".dialogHeader\", dialog).outerHeight());\n            }\n            if (isNaN(dialog.css(\"width\")) || dialog.width() < width ) {\n                dialog.width(width);\n            }\n            var iTop = ( $(window).height() - dialog.height() ) / 2;\n            dialog.css({\n                left: ( $(window).width() - dialog.width() ) / 2, top: iTop > 0 ? iTop: 0\n            });\n        } ,\n        /**\n         * \u521d\u59cb\u5316\u534a\u900f\u660e\u5c42\n         *\n         * @param {Object}\n         *            resizable\n         * @param {Object}\n         *            dialog\n         * @param {Object}\n         *            target\n         */\n        initResize: function(resizable, dialog, target) {\n            $(\"body\").css(\"cursor\", target + \"-resize\");\n            resizable.css({\n                top: dialog.css(\"top\"), left: dialog.css(\"left\"), height: dialog.css(\"height\"), width: dialog.css(\"width\")\n            });\n            resizable.show();\n        } ,\n        /**\n         * \u6539\u53d8\u5de6\u53f3\u62d6\u52a8\u5c42\u7684\u9ad8\u5ea6\n         *\n         * @param {Object}\n         *            target\n         * @param {Object}\n         *            tmove\n         * @param {Object}\n         *            dialog\n         */\n        resizeTool: function(target, tmove, dialog) {\n            $(\"div[class^='resizable']\", dialog).filter(function() {\n                return $(this).attr(\"tar\") == 'w' || $(this).attr(\"tar\") == 'e';\n            }).each(function() {\n                $(this).css(\"height\", $(this).outerHeight() + tmove);\n            });\n        } ,\n        /**\n         * \u6539\u53d8\u539f\u59cb\u5c42\u7684\u5927\u5c0f\n         *\n         * @param {Object}\n         *            obj\n         * @param {Object}\n         *            dialog\n         * @param {Object}\n         *            target\n         */\n        resizeDialog: function(obj, dialog, target) {\n            var oleft = parseInt(obj.style.left);\n            var otop = parseInt(obj.style.top);\n            var height = parseInt(obj.style.height);\n            var width = parseInt(obj.style.width);\n            if (target == \"n\" || target == \"nw\" ) {\n                tmove = parseInt(dialog.css(\"top\")) - otop;\n            } else {\n                tmove = height - parseInt(dialog.css(\"height\"));\n            }\n            dialog.css({\n                left: oleft, width: width, top: otop, height: height\n            });\n            $(\".dialogContent\", dialog).css(\"width\", (width -10) + \"px\");\n            if (target != \"w\" && target != \"e\" ) {\n                var content = $(\".dialogContent\", dialog);\n                content.css({\n                    height: height - $(\".dialogHeader\", dialog).outerHeight()\n                });\n                content.find(\"[layoutH]\").layoutH(content);\n                $.pdialog.resizeTool(target, tmove, dialog);\n            }\n            $(window).trigger(DWZ.eventType.resizeGrid);\n        },\n        close: function(dialog) {\n            if (typeof dialog == 'string' ) {\n                dialog = $(\"body\").data(dialog);\n            }\n            var close = dialog.data(\"close\");\n            var go = true;\n            if (close && $.isFunction(close) ) {\n                var param = dialog.data(\"param\");\n                if (param && param != \"\" ) {\n                    param = DWZ.jsonEval(param);\n                    go = close(param);\n                } else {\n                    go = close();\n                }\n                if (!go ) {\n                    return;\n                }\n            }\n            dialog.hide();\n            if (dialog.data(\"mask\") ) {\n                $(\"#dialogBackground\").hide();\n            } else {\n                if (dialog.data(\"id\") ) {\n                    $.taskBar.closeDialog(dialog.data(\"id\"));\n                }\n            }\n            $(\"body\").removeData(dialog.data(\"id\"));\n            dialog.trigger(DWZ.eventType.pageClear).remove();\n            this._current = null;\n        },\n        closeCurrent: function() {\n            this.close($.pdialog._current);\n        },\n        checkTimeout: function() {\n            var $conetnt = $(\".dialogContent\", $.pdialog._current);\n            var json = DWZ.jsonEval($conetnt.html());\n            if (json && json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                this.closeCurrent();\n            }\n        },\n        maxsize: function(dialog) {\n            dialog.data(\"original\", {\n                top: dialog.css(\"top\"), left: dialog.css(\"left\"), width: dialog.css(\"width\"), height: dialog.css(\"height\")\n            });\n            $(\"a.maximize\", dialog).hide();\n            $(\"a.restore\", dialog).show();\n            var iContentW = $(window).width();\n            var iContentH = $(window).height() - $('footer').height();\n            dialog.css({\n                top: \"0px\", left: \"0px\", width: iContentW + \"px\", height: iContentH + \"px\"\n            });\n            $.pdialog._resizeContent(dialog,iContentH);\n        },\n        restore: function(dialog) {\n            var original = dialog.data(\"original\");\n            var dwidth = parseInt(original.width);\n            var dheight = parseInt(original.height);\n            dialog.css({\n                top: original.top, left: original.left, width: dwidth, height: dheight\n            });\n            $.pdialog._resizeContent(dialog,dheight);\n            $(\"a.maximize\", dialog).show();\n            $(\"a.restore\", dialog).hide();\n        },\n        minimize: function(dialog) {\n            dialog.hide();\n            var task = $.taskBar.getTask(dialog.data(\"id\"));\n            $(\".resizable\").css({\n                top: dialog.css(\"top\"), left: dialog.css(\"left\"), height: dialog.css(\"height\"), width: dialog.css(\"width\")\n            }).show().animate({\n                top: $(window).height() - 60, left: task.position().left, width: task.outerWidth(), height: task.outerHeight()\n            }, 250, function() {\n                $(this).hide();\n                $.taskBar.inactive(dialog.data(\"id\"));\n            });\n        },\n        _resizeContent: function(dialog,height) {\n            var content = $(\".dialogContent\", dialog);\n            content.css({\n                height: height - $(\".dialogHeader\", dialog).outerHeight()\n            });\n            content.find(\"[layoutH]\").layoutH(content);\n            $(window).trigger(DWZ.eventType.resizeGrid);\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n( function($) {\n    $.fn.dialogDrag = function(options) {\n        if (typeof options == 'string' ) {\n            if (options == 'destroy' ) {\n                return this.each(function() {\n                    var dialog = this;\n                    $(\"div.dialogHeader\", dialog).unbind(\"mousedown\");\n                });\n            }\n        }\n        return this.each(function() {\n            var dialog = $(this);\n            $(\"div.dialogHeader\", dialog).mousedown(function(e) {\n                $.pdialog.switchDialog(dialog);\n                dialog.data(\"task\", true);\n                setTimeout(function() {\n                    if (dialog.data(\"task\") ) {\n                        $.dialogDrag.start(dialog, e);\n                    }\n                }, 100);\n                return false;\n            }).mouseup(function(e) {\n                dialog.data(\"task\", false);\n                return false;\n            });\n        });\n    };\n    $.dialogDrag = {\n        currId: null, _init: function(dialog) {\n            this.currId = new Date().getTime();\n            var shadow = $(\"#dialogProxy\");\n            if (!shadow.size() ) {\n                shadow = $(DWZ.frag[\"dialogProxy\"]);\n                $(\"body\").append(shadow);\n            }\n            $(\"h1\", shadow).html($(\".dialogHeader h1\", dialog).text());\n        },\n        start: function(dialog, event) {\n            this._init(dialog);\n            var sh = $(\"#dialogProxy\");\n            sh.css({\n                left: dialog.css(\"left\"), top: dialog.css(\"top\"), height: dialog.css(\"height\"), width: dialog.css(\"width\"), zIndex: parseInt(dialog.css(\"zIndex\")) + 1\n            }).show();\n            $(\"div.dialogContent\", sh).css(\"height\", $(\"div.dialogContent\", dialog).css(\"height\"));\n            sh.data(\"dialog\", dialog);\n            dialog.css({\n                left: \"-10000px\", top: \"-10000px\"\n            });\n            $(sh).jDrag({\n                selector: \".dialogHeader\", stop: this.stop, event: event\n            });\n            return false;\n        },\n        stop: function() {\n            var sh = $(arguments[0]);\n            var dialog = sh.data(\"dialog\");\n            dialog.css({\n                left: $(sh).css(\"left\"), top: $(sh).css(\"top\")\n            });\n            $(sh).hide();\n        }\n    }\n} )(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    var _op = {\n        cursor: 'move', // selector \u7684\u9f20\u6807\u624b\u52bf\n        sortBoxs: 'div.sortDrag', // \u62d6\u52a8\u6392\u5e8f\u9879\u7236\u5bb9\u5668\n        replace: false, // 2\u4e2asortBox\u4e4b\u95f4\u62d6\u52a8\u66ff\u6362\n        items: '> *', // \u62d6\u52a8\u6392\u5e8f\u9879\u9009\u62e9\u5668\n        selector: '', // \u62d6\u52a8\u6392\u5e8f\u9879\u7528\u4e8e\u62d6\u52a8\u7684\u5b50\u5143\u7d20\u7684\u9009\u62e9\u5668\uff0c\u4e3a\u7a7a\u65f6\u7b49\u4e8eitem\n        zIndex: 1000\n    };\n    var sortDrag = {\n        start: function($sortBox, $item, event, op) {\n            var $placeholder = this._createPlaceholder($item);\n            var $helper = $item.clone();\n            var position = $item.position();\n            $helper.data('$sortBox', $sortBox).data('op', op).data('$item', $item).data('$placeholder', $placeholder);\n            $helper.addClass('sortDragHelper').css({\n                position: 'absolute', top: position.top + $sortBox.scrollTop(), left: position.left, zIndex: op.zIndex, width: $item.width() + 'px' ,\n                height: $item.height() + 'px'\n            }).jDrag({\n                selector: op.selector, drag: this.drag, stop: this.stop, event: event\n            });\n            $item.before($placeholder).before($helper).hide();\n            return false;\n        } ,\n        drag: function(el, event) {\n            var $helper = $(arguments[0]), $sortBox = $helper.data('$sortBox'), $placeholder = $helper.data('$placeholder');\n            var $items = $sortBox.find($helper.data('op')['items']).filter(':visible').filter(':not(.sortDragPlaceholder, .sortDragHelper)');\n            var helperPos = $helper.position(), firstPos = $items.eq(0).position();\n            var $overBox = sortDrag._getOverSortBox($helper, event);\n            if ($overBox.length > 0 && $overBox[0] != $sortBox[0] ) { // \u79fb\u52a8\u5230\u5176\u4ed6\u5bb9\u5668\n                $placeholder.appendTo($overBox);\n                $helper.data('$sortBox', $overBox);\n            } else {\n                for (var i = 0; i < $items.length; i++) {\n                    var $this = $items.eq(i), position = $this.position();\n                    if (helperPos.top > position.top + 10 ) {\n                        $this.after($placeholder);\n                    } else if (helperPos.top <= position.top ) {\n                        $this.before($placeholder);\n                        break;\n                    }\n                }\n            }\n        } ,\n        stop: function() {\n            var $helper = $(arguments[0]), $sortBox = $helper.data('$sortBox'), $item = $helper.data('$item'), $placeholder = $helper.data('$placeholder');\n            var position = $placeholder.position();\n            $helper.animate({\n                top: ( position.top + $sortBox.scrollTop() ) + \"px\", left: position.left + \"px\"\n            }, {\n                complete: function() {\n                    if ($helper.data('op')['replace'] ) { // 2\u4e2asortBox\u4e4b\u95f4\u66ff\u6362\u5904\u7406\n                        $srcBox = $item.parents(_op.sortBoxs + \":first\");\n                        $destBox = $placeholder.parents(_op.sortBoxs + \":first\");\n                        if ($srcBox[0] != $destBox[0] ) { // \u5224\u65ad\u662f\u5426\u79fb\u52a8\u5230\u5176\u4ed6\u5bb9\u5668\u4e2d\n                            $replaceItem = $placeholder.next();\n                            if ($replaceItem.size() > 0 ) {\n                                $replaceItem.insertAfter($item);\n                            }\n                        }\n                    }\n                    $item.insertAfter($placeholder).show();\n                    $placeholder.remove();\n                    $helper.remove();\n                }, duration: 300\n            });\n        } ,\n        _createPlaceholder: function($item) {\n            return $('<' + $item[0].nodeName + ' class=\"sortDragPlaceholder\"/>').css({\n                width: $item.outerWidth() + 'px', height: $item.outerHeight() + 'px', marginTop: $item.css('marginTop'), marginRight: $item.css('marginRight') ,\n                marginBottom: $item.css('marginBottom'), marginLeft: $item.css('marginLeft')\n            });\n        },\n        _getOverSortBox: function($item, e) {\n            var itemPos = $item.position();\n            var y = itemPos.top + ( $item.height() / 2 ), x = itemPos.left + ( $item.width() / 2 );\n            return $(_op.sortBoxs).filter(':visible').filter(function() {\n                var $sortBox = $(this), sortBoxPos = $sortBox.position(), sortBoxH = $sortBox.height(), sortBoxW = $sortBox.width();\n                return DWZ.isOver(y, x, sortBoxPos.top, sortBoxPos.left, sortBoxH, sortBoxW);\n            });\n        }\n    };\n    $.fn.sortDrag = function(options) {\n        return this.each(function() {\n            var op = $.extend({}, _op, options);\n            var $sortBox = $(this);\n            if ($sortBox.attr('selector') ) {\n                op.selector = $sortBox.attr('selector');\n            }\n            $sortBox.find(op.items).each(function(i) {\n                var $item = $(this), $selector = $item;\n                if (op.selector ) {\n                    $selector = $item.find(op.selector).css({\n                        cursor: op.cursor\n                    });\n                }\n                $selector.mousedown(function(event) {\n                    sortDrag.start($sortBox, $item, event, op);\n                    event.preventDefault();\n                });\n            });\n        });\n    }\n} )(jQuery);\n/**\n * Theme Plugins\n *\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n        cssTable: function(options) {\n            return this.each(function() {\n                var $this = $(this);\n                var $trs = $this.find('tbody>tr');\n                var $grid = $this.parent(); // table\n\n                $trs.each(function(index) {\n                    var $tr = $(this);\n                    $tr.click(function() {\n                        $trs.filter(\".selected\").removeClass(\"selected\");\n                        $tr.addClass(\"selected\");\n                        var sTarget = $tr.attr(\"target\");\n                        if (sTarget ) {\n                            if ($(\"#\" + sTarget, $grid).size() == 0 ) {\n                                $grid.prepend('<input id=\"' + sTarget + '\" type=\"hidden\" />');\n                            }\n                            $(\"#\" + sTarget, $grid).val($tr.attr(\"rel\"));\n                        }\n                    });\n                    if ($(\".edit\", $tr).length) {\n                        $tr.dblclick(function() {\n                            $(\".edit:eq(0)\", $tr).click();\n                        });\n                    } else if ($(\".panelBar .icon-edit\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).length ) {\n                        $tr.dblclick(function() {\n                            $(\".panelBar .icon-edit:eq(0)\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).parent().click();\n                        });\n                    }\n                });\n                $this.find(\"thead [orderField]\").orderBy({\n                    targetType: $this.attr(\"targetType\"), rel: $this.attr(\"rel\"), asc: $this.attr(\"asc\") || \"asc\", desc: $this.attr(\"desc\") || \"desc\"\n                });\n            });\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu v1.0\n * @author ZhangHuihua@msn.com 2011-4-1\n */\n(function($){\n    $.fn.jTable = function(options){\n        return this.each(function(){\n            var $table = $(this), nowrapTD = $table.attr(\"nowrapTD\");\n            var tlength = $table.width();\n            var aStyles = [];\n            var $tc = $table.parent().addClass(\"j-resizeGrid\"); // table parent container\n            var oldThs = $table.find(\"thead>tr:last-child\").find(\"th\");\n\n            for(var i = 0, l = oldThs.size(); i < l; i++) {\n                var $th = $(oldThs[i]);\n                var style = [], width = $th.innerWidth() - (100 * $th.innerWidth() / tlength)-2;\n                style[0] = parseInt(width);\n                style[1] = $th.attr(\"align\");\n                aStyles[aStyles.length] = style;\n            }\n            $(this).wrap(\"<div class='grid'></div>\");\n            var $grid = $table.parent().html($table.html());\n            var thead = $grid.find(\"thead\");\n            thead.wrap(\"<div class='gridHeader'><div class='gridThead'><table style='width:\" + (tlength - 20) + \"px;'></table></div></div>\");\n            var lastH = $(\">tr:last-child\", thead);\n            var ths = $(\">th\", lastH);\n            $(\"th\",thead).each(function(){\n                var $th = $(this);\n                $th.html(\"<div class='gridCol' title='\"+$th.text()+\"'>\"+ $th.html() +\"</div>\");\n            });\n\n            ths.each(function(i){\n                var $th = $(this), style = aStyles[i];\n                $th.addClass(style[1]).removeAttr(\"align\").removeAttr(\"width\").width(style[0]);\n            }).filter(\"[orderField]\").orderBy({\n                targetType: $table.attr(\"targetType\"),\n                rel:$table.attr(\"rel\"),\n                asc: $table.attr(\"asc\") || \"asc\",\n                desc:  $table.attr(\"desc\") || \"desc\"\n            });\n\n            var tbody = $grid.find(\">tbody\");\n            tbody.wrap(\"<div class='gridScroller' layoutH style='width:\" + $tc.width() + \"px;'><div class='gridTbody'><table style='width:\" + (tlength - 20) + \"px;'></table></div></div>\");\n            var ftr = $(\">tr:first-child\", tbody);\n            var $trs = tbody.find('>tr');\n\n            $trs.each(function(){\n                var $tr = $(this);\n                var $ftds = $(\">td\", this);\n\n                for (var i=0; i < $ftds.size(); i++) {\n                    var $ftd = $($ftds[i]);\n                    if (nowrapTD != \"false\") $ftd.html(\"<div>\" + $ftd.html() + \"</div>\");\n                    if (i < aStyles.length) $ftd.addClass(aStyles[i][1]);\n                }\n                $tr.click(function(){\n                    $trs.filter(\".selected\").removeClass(\"selected\");\n                    $tr.addClass(\"selected\");\n                    var sTarget = $tr.attr(\"target\");\n                    if (sTarget) {\n                        if ($(\"#\"+sTarget, $grid).size() == 0) {\n                            $grid.prepend('<input id=\"'+sTarget+'\" type=\"hidden\" />');\n                        }\n                        $(\"#\"+sTarget, $grid).val($tr.attr(\"rel\"));\n                    }\n                });\n                if ($(\".edit\", $tr).length) {\n                    $tr.dblclick(function() {\n                        $(\".edit:eq(0)\", $tr).click();\n                    });\n                } else if ($(\".icon-edit\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).length ) {\n                    $tr.dblclick(function() {\n                        $(\".icon-edit:eq(0)\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).parent().click();\n                    });\n                }\n            });\n\n            $(\">td\",ftr).each(function(i){\n                if (i < aStyles.length) $(this).width(aStyles[i][0]);\n            });\n            $grid.append(\"<div class='resizeMarker' style='height:300px; left:57px;display:none;'></div><div class='resizeProxy' style='height:300px; left:377px;display:none;'></div>\");\n\n            var scroller = $(\".gridScroller\", $grid);\n            scroller.scroll(function(event){\n                var header = $(\".gridThead\", $grid);\n                if(scroller.scrollLeft() > 0){\n                    header.css(\"position\", \"relative\");\n                    var scroll = scroller.scrollLeft();\n                    header.css(\"left\", scroller.cssv(\"left\") - scroll);\n                }\n                if(scroller.scrollLeft() == 0) {\n                    header.css(\"position\", \"relative\");\n                    header.css(\"left\", \"0px\");\n                }\n                return false;\n            });\n\n\n            $(\">tr\", thead).each(function(){\n\n                $(\">th\", this).each(function(i){\n                    var th = this, $th = $(this);\n                    $th.mouseover(function(event){\n                        var offset = $.jTableTool.getOffset(th, event).offsetX;\n                        if($th.outerWidth() - offset < 5) {\n                            $th.css(\"cursor\", \"col-resize\").mousedown(function(event){\n                                $(\".resizeProxy\", $grid).show().css({\n                                    left: $.jTableTool.getRight(th)- $(\".gridScroller\", $grid).scrollLeft(),\n                                    top:$.jTableTool.getTop(th),\n                                    height:$.jTableTool.getHeight(th,$grid),\n                                    cursor:\"col-resize\"\n                                });\n                                $(\".resizeMarker\", $grid).show().css({\n                                        left: $.jTableTool.getLeft(th) + 1 - $(\".gridScroller\", $grid).scrollLeft(),\n                                        top: $.jTableTool.getTop(th),\n                                        height:$.jTableTool.getHeight(th,$grid)\n                                });\n                                $(\".resizeProxy\", $grid).jDrag($.extend(options, {scop:true, cellMinW:20, relObj:$(\".resizeMarker\", $grid)[0],\n                                        move: \"horizontal\",\n                                        event:event,\n                                        stop: function(){\n                                            var pleft = $(\".resizeProxy\", $grid).position().left;\n                                            var mleft = $(\".resizeMarker\", $grid).position().left;\n                                            var move = pleft - mleft - $th.outerWidth() -9;\n\n                                            var cols = $.jTableTool.getColspan($th);\n                                            var cellNum = $.jTableTool.getCellNum($th);\n                                            var oldW = $th.width(), newW = $th.width() + move;\n                                            var $dcell = $(\">td\", ftr).eq(cellNum - 1);\n\n                                            $th.width(newW + \"px\");\n                                            $dcell.width(newW+\"px\");\n\n                                            var $table1 = $(thead).parent();\n                                            $table1.width(($table1.width() - oldW + newW)+\"px\");\n                                            var $table2 = $(tbody).parent();\n                                            $table2.width(($table2.width() - oldW + newW)+\"px\");\n\n                                            $(\".resizeMarker,.resizeProxy\", $grid).hide();\n                                        }\n                                    })\n                                );\n                            });\n                        } else {\n                            $th.css(\"cursor\", $th.attr(\"orderField\") ? \"pointer\" : \"default\");\n                            $th.unbind(\"mousedown\");\n                        }\n                        return false;\n                    });\n                });\n            });\n\n            function _resizeGrid(){\n                $(\"div.j-resizeGrid\").each(function(){\n                    var width = $(this).innerWidth();\n                    if (width){\n                        $(\"div.gridScroller\", this).width(width+\"px\");\n                        if(width -20 > $(\"div.gridHeader>.gridThead>table\", this).width()) {\n                            $(\"div.gridHeader>.gridThead>table\", this).width((width - 20 )+\"px\");\n                            $(\"div.gridScroller>.gridTbody>table\", this).width((width - 20 )+\"px\");\n                        }\n                    }\n                });\n            }\n            $(window).unbind(DWZ.eventType.resizeGrid).bind(\"resizeGrid\", _resizeGrid);\n        });\n    };\n\n\n    $.jTableTool = {\n        getLeft:function(obj) {\n            var width = 0;\n            $(obj).prevAll().each(function(){\n                width += $(this).outerWidth();\n            });\n            return width - 1;\n        },\n        getRight:function(obj) {\n            var width = 0;\n            $(obj).prevAll().andSelf().each(function(){\n                width += $(this).outerWidth();\n            });\n            return width - 1;\n        },\n        getTop:function(obj) {\n            var height = 0;\n            $(obj).parent().prevAll().each(function(){\n                height += $(this).outerHeight();\n            });\n            return height;\n        },\n        getHeight:function(obj, parent) {\n            var height = 0;\n            var head = $(obj).parent();\n            head.nextAll().andSelf().each(function(){\n                height += $(this).outerHeight();\n            });\n            $(\".gridTbody\", parent).children().each(function(){\n                height += $(this).outerHeight();\n            });\n            return height;\n        },\n        getCellNum:function(obj) {\n            return $(obj).prevAll().andSelf().size();\n        },\n        getColspan:function(obj) {\n            return $(obj).attr(\"colspan\") || 1;\n        },\n        getStart:function(obj) {\n            var start = 1;\n            $(obj).prevAll().each(function(){\n                start += parseInt($(this).attr(\"colspan\") || 1);\n            });\n            return start;\n        },\n        getPageCoord:function(element){\n            var coord = {x: 0, y: 0};\n            while (element){\n                coord.x += element.offsetLeft;\n                coord.y += element.offsetTop;\n                element = element.offsetParent;\n            }\n            return coord;\n        },\n        getOffset:function(obj, evt){\n            if(/msie/.test(navigator.userAgent.toLowerCase())) {\n                var objset = $(obj).offset();\n                var evtset = {\n                    offsetX:evt.pageX || evt.screenX,\n                    offsetY:evt.pageY || evt.screenY\n                };\n                var offset ={\n                    offsetX: evtset.offsetX - objset.left,\n                    offsetY: evtset.offsetY - objset.top\n                };\n                return offset;\n            }\n            var target = evt.target;\n            if (target.offsetLeft == undefined){\n                target = target.parentNode;\n            }\n            var pageCoord = $.jTableTool.getPageCoord(target);\n            var eventCoord ={\n                x: window.pageXOffset + evt.clientX,\n                y: window.pageYOffset + evt.clientY\n            };\n            var offset ={\n                offsetX: eventCoord.x - pageCoord.x,\n                offsetY: eventCoord.y - pageCoord.y\n            };\n            return offset;\n        }\n    };\n})(jQuery);\n\n\n/**\n * @author Roger Wu\n * @version 1.0\n */\n( function($) {\n    $.fn.extend({\n        jTask: function(options) {\n            return this.each(function() {\n                var $task = $(this);\n                var id = $task.attr(\"id\");\n                $task.click(function(e) {\n                    var dialog = $(\"body\").data(id);\n                    if ($task.hasClass(\"selected\") ) {\n                        $(\"a.minimize\", dialog).trigger(\"click\");\n                    } else {\n                        if ($(dialog).is(\":hidden\") ) {\n                            $.taskBar.restoreDialog(dialog);\n                        } else {\n                            $(dialog).trigger(\"click\");\n                        }\n                    }\n                    $.taskBar.scrollCurrent($(this));\n                    return false;\n                });\n                $(\"div.close\", $task).click(function(e) {\n                    $.pdialog.close(id)\n                    return false;\n                });\n            });\n        }\n    });\n    $.taskBar = {\n        _taskBar: null ,\n        _taskBox: null ,\n        _prevBut: null ,\n        _nextBut: null ,\n        _op: {\n            id: \"taskbar\", taskBox: \"div.taskbarContent\", prevBut: \".taskbarLeft\", prevDis: \"taskbarLeftDisabled\", nextBut: \".taskbarRight\" ,\n            nextDis: \"taskbarRightDisabled\", selected: \"selected\", boxMargin: \"taskbarMargin\"\n        },\n        init: function(options) {\n            var $this = this;\n            $.extend(this._op, options);\n            this._taskBar = $(\"#\" + this._op.id);\n            if (this._taskBar.size() == 0 ) {\n                this._taskBar = $($.parseHTML(DWZ.frag[\"taskbar\"], document, true)).appendTo($(\"body\"));\n                this._taskBar.find(\".taskbarLeft\");\n                this._taskBar.find(\".taskbarRight\");\n            }\n            this._taskBox = this._taskBar.find(this._op.taskBox);\n            this._taskList = this._taskBox.find(\">ul\");\n            this._prevBut = this._taskBar.find(this._op.prevBut);\n            this._nextBut = this._taskBar.find(this._op.nextBut);\n            this._prevBut.click(function(e) {\n                $this.scrollLeft()\n            });\n            this._nextBut.click(function(e) {\n                $this.scrollRight()\n            });\n\n            this._contextmenu(this._taskBox); // taskBar\u53f3\u952e\u83dc\u5355\n        },\n        _contextmenu: function(obj) {\n            $(obj).contextMenu('dialogCM', {\n                bindings: {\n                    closeCurrent: function(t, m) {\n                        var obj = t.isTag(\"li\") ? t: $.taskBar._getCurrent();\n                        $(\"div.close\", obj).trigger(\"click\");\n                    }, closeOther: function(t, m) {\n                        var selector = t.isTag(\"li\") ? ( \"#\" + t.attr(\"id\") ): \".selected\";\n                        var tasks = $.taskBar._taskList.find(\">li:not(:\" + selector + \")\");\n                        tasks.each(function(i) {\n                            $(\"div.close\", tasks[i]).trigger(\"click\");\n                        });\n                    }, closeAll: function(t, m) {\n                        var tasks = $.taskBar._getTasks();\n                        tasks.each(function(i) {\n                            $(\"div.close\", tasks[i]).trigger(\"click\");\n                        });\n                    }\n                }, ctrSub: function(t, m) {\n                    var mCur = m.find(\"[rel='closeCurrent']\");\n                    var mOther = m.find(\"[rel='closeOther']\");\n                    if (!$.taskBar._getCurrent()[0] ) {\n                        mCur.addClass(\"disabled\");\n                        mOther.addClass(\"disabled\");\n                    } else {\n                        if ($.taskBar._getTasks().size() == 1 ) {\n                            mOther.addClass(\"disabled\");\n                        }\n                    }\n                }\n            });\n        },\n        _scrollCurrent: function() {\n            var iW = this._tasksW(this._getTasks());\n            if (iW > this._getTaskBarW() ) {\n                var $this = this;\n                var lTask = $(\">li:last-child\", this._taskList);\n                var left = this._getTaskBarW() - lTask.position().left - lTask.outerWidth(true);\n                this._taskList.animate({\n                    left: left + 'px'\n                }, 200, function() {\n                    $this._ctrlScrollBut();\n                });\n            } else {\n                this._ctrlScrollBut();\n            }\n        },\n        _getTaskBarW: function() {\n            return this._taskBox.width() - ( this._prevBut.is(\":hidden\") ? this._prevBut.width() + 2: 0 ) - ( this._nextBut.is(\":hidden\") ? this._nextBut.width() + 2: 0 );\n        },\n        _scrollTask: function(task) {\n            var $this = this;\n            if (task.position().left + this._getLeft() + task.outerWidth() > this._getBarWidth() ) {\n                var left = this._getTaskBarW() - task.position().left - task.outerWidth(true) - 2;\n                this._taskList.animate({\n                    left: left + 'px'\n                }, 200, function() {\n                    $this._ctrlScrollBut();\n                });\n            } else if (task.position().left + this._getLeft() < 0 ) {\n                var left = this._getLeft() - ( task.position().left + this._getLeft() );\n                this._taskList.animate({\n                    left: left + 'px'\n                }, 200, function() {\n                    $this._ctrlScrollBut();\n                });\n            }\n        } ,\n        /**\n         * \u63a7\u5236\u5de6\u53f3\u79fb\u52a8\u6309\u94ae\u4f55\u65f6\u663e\u793a\u4e0e\u9690\u85cf\n         */\n        _ctrlScrollBut: function() {\n            var iW = this._tasksW(this._getTasks());\n            if (this._getTaskBarW() > iW ) {\n                this._taskBox.removeClass(this._op.boxMargin);\n                this._nextBut.hide();\n                this._prevBut.hide();\n                if (this._getTasks().eq(0)[0] ) {\n                    this._scrollTask(this._getTasks().eq(0));\n                }\n            } else {\n                this._taskBox.addClass(this._op.boxMargin);\n                this._nextBut.show().removeClass(this._op.nextDis);\n                this._prevBut.show().removeClass(this._op.prevDis);\n                if (this._getLeft() >= 0 ) {\n                    this._prevBut.addClass(this._op.prevDis);\n                }\n                if (this._getLeft() <= this._getTaskBarW() - iW ) {\n                    this._nextBut.addClass(this._op.nextDis);\n                }\n            }\n        } ,\n        _getLeft: function() {\n            return this._taskList.position().left;\n        } ,\n        /**\n         * \u53d6\u5f97\u7b2c\u4e00\u4e2a\u5b8c\u5168\u663e\u793a\u5728taskbar\u4e0a\u7684\u4efb\u52a1\n         */\n        _visibleStart: function() {\n            var iLeft = this._getLeft();\n            var jTasks = this._getTasks();\n            for (var i = 0; i < jTasks.size(); i++) {\n                if (jTasks.eq(i).position().left + jTasks.eq(i).outerWidth(true) + iLeft >= 0 ) {\n                    return jTasks.eq(i);\n                }\n            }\n            return jTasks.eq(0);\n        } ,\n        /**\n         * \u53d6\u5f97\u6700\u540e\u4e00\u4e2a\u5b8c\u5168\u663e\u793a\u5728taskbar\u4e0a\u7684\u4efb\u52a1\n         */\n        _visibleEnd: function() {\n            var iLeft = this._getLeft();\n            var jTasks = this._getTasks();\n            for (var i = 0; i < jTasks.size(); i++) {\n                if (jTasks.eq(i).position().left + jTasks.eq(i).outerWidth(true) + iLeft > this._getBarWidth() ) {\n                    return jTasks.eq(i);\n                }\n            }\n            return jTasks.eq(jTasks.size() - 1);\n        } ,\n        /**\n         * \u53d6\u5f97\u6240\u6709\u7684\u4efb\u52a1\n         */\n        _getTasks: function() {\n            return this._taskList.find(\">li\");\n        } ,\n        /**\n         * \u8ba1\u7b97\u6240\u4f20\u5165\u7684\u6240\u6709\u4efb\u52a1\u7684\u5bbd\u5ea6\u548c\n         *\n         * @param {Object}\n         *            jTasks\n         */\n        _tasksW: function(jTasks) {\n            var iW = 0;\n            jTasks.each(function() {\n                iW += $(this).outerWidth(true);\n            });\n            return iW;\n        },\n        _getBarWidth: function() {\n            return this._taskBar.innerWidth();\n        } ,\n        /**\n         * \u5728\u4efb\u52a1\u680f\u4e0a\u65b0\u52a0\u4e00\u4e2a\u4efb\u52a1\n         *\n         * @param {Object}\n         *            id\n         * @param {Object}\n         *            title\n         */\n        addDialog: function(id, title) {\n            this.show();\n            var task = $(\"#\" + id, this._taskList);\n            if (!task[0] ) {\n                var taskFrag = '<li id=\"#taskid#\"><div class=\"taskbutton\">#title#</div><div class=\"close\"><i class=\"icon-remove\"></i></div></li>';\n                this._taskList.append(taskFrag.replace(\"#taskid#\", id).replace(\"#title#\", title));\n                task = $(\"#\" + id, this._taskList);\n                task.jTask();\n            } else {\n                $(\">div.taskbutton\", task).text(title);\n            }\n            this._contextmenu(task);\n            this.switchTask(id);\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u5173\u95ed\u4e00\u4e2a\u4efb\u52a1\n         *\n         * @param {Object}\n         *            id\n         */\n        closeDialog: function(obj) {\n            var task = ( typeof obj == 'string' ) ? $(\"#\" + obj, this._taskList): obj;\n            task.remove();\n            if (this._getTasks().size() == 0 ) {\n                this.hide();\n            }\n            this._scrollCurrent();\n        } ,\n        /**\n         * @param {Object}\n         *            id or dialog\n         */\n        restoreDialog: function(obj) {\n            var dialog = ( typeof obj == 'string' ) ? $(\"body\").data(obj): obj;\n            var id = ( typeof obj == 'string' ) ? obj: dialog.data(\"id\");\n            var task = $.taskBar.getTask(id);\n            $(\".resizable\").css({\n                top: $(window).height() - 60, left: $(task).position().left, height: $(task).outerHeight(), width: $(task).outerWidth()\n            }).show().animate({\n                top: $(dialog).css(\"top\"), left: $(dialog).css(\"left\"), width: $(dialog).css(\"width\"), height: $(dialog).css(\"height\")\n            }, 250, function() {\n                $(this).hide();\n                $(dialog).show();\n                $.pdialog._current = dialog;\n            });\n            $.taskBar.switchTask(id);\n        } ,\n        /**\n         * \u628a\u4efb\u52a1\u53d8\u6210\u4e0d\u662f\u5f53\u524d\u7684\n         *\n         * @param {Object}\n         *            id\n         */\n        inactive: function(id) {\n            $(\"#\" + id, this._taskList).removeClass(\"selected\");\n        } ,\n        /**\n         * \u5411\u5de6\u79fb\u4e00\u4e2a\u4efb\u52a1\n         */\n        scrollLeft: function() {\n            var task = this._visibleStart();\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u5411\u53f3\u79fb\u4e00\u4e2a\u4efb\u52a1\n         */\n        scrollRight: function() {\n            var task = this._visibleEnd();\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u79fb\u51fa\u5f53\u524d\u70b9\u51fb\u7684\u4efb\u52a1\n         *\n         * @param {Object}\n         *            task\n         */\n        scrollCurrent: function(task) {\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u5207\u6362\u4efb\u52a1\n         *\n         * @param {Object}\n         *            id\n         */\n        switchTask: function(id) {\n            this._getCurrent().removeClass(\"selected\");\n            this.getTask(id).addClass(\"selected\");\n        }, _getCurrent: function() {\n            return this._taskList.find(\">.selected\");\n        }, getTask: function(id) {\n            return $(\"#\" + id, this._taskList);\n        } ,\n        /**\n         * \u663e\u793a\u4efb\u52a1\u680f\n         */\n        show: function() {\n            if (this._taskBar.is(\":hidden\") ) {\n                this._taskBar.css(\"top\", $(window).height() - 34 + this._taskBar.outerHeight()).show();\n                this._taskBar.animate({\n                    top: $(window).height() - this._taskBar.outerHeight()\n                }, 500);\n            }\n        } ,\n        /**\n         * \u9690\u85cf\u4efb\u52a1\u680f\n         */\n        hide: function() {\n            this._taskBar.animate({\n                top: $(window).height() - 29 + this._taskBar.outerHeight(true)\n            }, 500, function() {\n                $.taskBar._taskBar.hide();\n            });\n        }\n    }\n} )(jQuery);\n/**\n * html\u8f6c\u4e49\n * @param sHtml\n * @returns\n */\nfunction html2Escape(sHtml) {\n    return Base64.encode(sHtml);\n}\n/**\n * @author ZhangHuihua@msn.com\n */\n\n/**\n * \u666e\u901aajax\u8868\u5355\u63d0\u4ea4\n *\n * @param {Object}\n *            form\n * @param {Object}\n *            callback\n * @param {String}\n *            confirmMsg \u63d0\u793a\u786e\u8ba4\u4fe1\u606f\n */\nfunction validateCallback(form, callback, confirmMsg) {\n    var $form = $(form);\n    $(\"textarea.editor\", $form).each(function() {\n        if('ckeditor'==$(this).attr('editorType')) {\n            CKEDITOR.instances[$(this).data(\"id\")].updateElement();\n        } else if (\"kindeditor\"==$(this).attr(\"editorType\")){\n            KindEditor.sync('#'+$(this).data(\"id\"));\n        } else {\n            UE.instants[$(this).data(\"id\")].sync();\n        }\n        if('true'==$(this).attr('escape')){\n            $(this).val(html2Escape($(this).val()));\n        }\n    });\n    $(\"textarea.code\", $form).each(function() {\n         $(this).val(DWZ.instances[$(this).data(\"id\")].getValue());\n         if('true'==$(this).attr('escape')){\n             $(this).val(html2Escape($(this).val()));\n         }\n    });\n    if (!$form.valid() ) {\n        return false;\n    }\n    $(\"input[escape=true]\", $form).each(function() {\n        if($(this).val()){\n          $(this).attr('maxlength',128);\n          $(this).val(sha512($(this).val()));\n        }\n    });\n    var _submitFn = function() {\n        $.ajax({\n            type: form.method || 'POST', url: $form.attr(\"action\"), data: $form.serializeArray(), dataType: \"json\", cache: false, success: callback || DWZ.ajaxDone ,\n            error: DWZ.ajaxError\n        });\n    }\n    if (confirmMsg ) {\n        alertMsg.confirm(confirmMsg, {\n            okCall: _submitFn\n        });\n    } else {\n        _submitFn();\n    }\n    return false;\n}\n/**\n * \u5e26\u6587\u4ef6\u4e0a\u4f20\u7684ajax\u8868\u5355\u63d0\u4ea4\n *\n * @param {Object}\n *            form\n * @param {Object}\n *            callback\n */\nfunction iframeCallback(form, callback) {\n    var $form = $(form), $iframe = $(\"#callbackframe\");\n    if (!$form.valid() ) {\n        return false;\n    }\n    if ($iframe.size() == 0 ) {\n        $iframe = $($.parseHTML(\"<iframe id='callbackframe' name='callbackframe' src='about:blank' style='display:none'></iframe>\", document, true)).appendTo(\"body\");\n    }\n    if (!form.ajax ) {\n        $form.append('<input type=\"hidden\" name=\"ajax\" value=\"1\" />');\n    }\n    form.target = \"callbackframe\";\n    _iframeResponse($iframe[0], callback || DWZ.ajaxDone);\n}\nfunction _iframeResponse(iframe, callback) {\n    var $iframe = $(iframe), $document = $(document);\n    $document.trigger(\"ajaxStart\");\n    $iframe.bind(\"load\", function(event) {\n        $iframe.unbind(\"load\");\n        $document.trigger(\"ajaxStop\");\n\n        if (iframe.src == \"javascript:'%3Chtml%3E%3C/html%3E';\" || // For\n        // Safari\n        iframe.src == \"javascript:'<html></html>';\" ) { // For FF, IE\n            return;\n        }\n        var doc = iframe.contentDocument || iframe.document;\n\n        // fixing Opera 9.26,10.00\n        if (doc.readyState && doc.readyState != 'complete' ) {\n            return;\n        }\n        // fixing Opera 9.64\n        if (doc.body && doc.body.innerHTML == \"false\" ) {\n            return;\n        }\n        var response;\n        if (doc.XMLDocument ) {\n            // response is a xml document Internet Explorer property\n            response = doc.XMLDocument;\n        } else if (doc.body ) {\n            try {\n                response = $iframe.contents().find(\"body\").text();\n                response = $.parseJSON(response);\n            } catch (e) { // response is html document or plain text\n                response = doc.body.innerHTML;\n            }\n        } else {\n            // response is a xml document\n            response = doc;\n        }\n        callback(response);\n    });\n}\n\n/**\n * navTabAjaxDone\u662fDWZ\u6846\u67b6\u4e2d\u9884\u5b9a\u4e49\u7684\u8868\u5355\u63d0\u4ea4\u56de\u8c03\u51fd\u6570\uff0e \u670d\u52a1\u5668\u8f6c\u56denavTabId\u53ef\u4ee5\u628a\u90a3\u4e2anavTab\u6807\u8bb0\u4e3areloadFlag=1,\n * \u4e0b\u6b21\u5207\u6362\u5230\u90a3\u4e2anavTab\u65f6\u4f1a\u91cd\u65b0\u8f7d\u5165\u5185\u5bb9. callbackType\u5982\u679c\u662fcloseCurrent\u5c31\u4f1a\u5173\u95ed\u5f53\u524dtab\n * \u53ea\u6709callbackType=\"forward\"\u65f6\u9700\u8981forwardUrl\u503c\n * navTabAjaxDone\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u57fa\u672c\u53ef\u4ee5\u901a\u7528\u4e86\uff0c\u5982\u679c\u8fd8\u6709\u7279\u6b8a\u9700\u8981\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u56de\u8c03\u51fd\u6570. \u5982\u679c\u8868\u5355\u63d0\u4ea4\u53ea\u63d0\u793a\u64cd\u4f5c\u662f\u5426\u6210\u529f, \u5c31\u53ef\u4ee5\u4e0d\u6307\u5b9a\u56de\u8c03\u51fd\u6570.\n * \u6846\u67b6\u4f1a\u9ed8\u8ba4\u8c03\u7528DWZ.ajaxDone() <form action=\"/user.do?method=save\" onsubmit=\"return\n * validateCallback(this, navTabAjaxDone)\">\n * form\u63d0\u4ea4\u540e\u8fd4\u56dejson\u6570\u636e\u7ed3\u6784statusCode=DWZ.statusCode.ok\u8868\u793a\u64cd\u4f5c\u6210\u529f, \u505a\u9875\u9762\u8df3\u8f6c\u7b49\u64cd\u4f5c.\n * statusCode=DWZ.statusCode.error\u8868\u793a\u64cd\u4f5c\u5931\u8d25, \u63d0\u793a\u9519\u8bef\u539f\u56e0.\n * statusCode=DWZ.statusCode.timeout\u8868\u793asession\u8d85\u65f6\uff0c\u4e0b\u6b21\u70b9\u51fb\u65f6\u8df3\u8f6c\u5230DWZ.loginUrl\n * {\"statusCode\":\"200\", \"message\":\"\u64cd\u4f5c\u6210\u529f\", \"navTabId\":\"navNewsLi\",\n * \"forwardUrl\":\"\", \"callbackType\":\"closeCurrent\", \"rel\".\"xxxId\"}\n * {\"statusCode\":\"300\", \"message\":\"\u64cd\u4f5c\u5931\u8d25\"} {\"statusCode\":\"301\", \"message\":\"\u4f1a\u8bdd\u8d85\u65f6\"}\n */\nfunction navTabAjaxDone(json) {\n    DWZ.ajaxDone(json);\n    if (json[DWZ.keys.statusCode] == DWZ.statusCode.ok ) {\n        if (json.navTabId ) { // \u628a\u6307\u5b9anavTab\u9875\u9762\u6807\u8bb0\u4e3a\u9700\u8981\u201c\u91cd\u65b0\u8f7d\u5165\u201d\u3002\u6ce8\u610fnavTabId\u4e0d\u80fd\u662f\u5f53\u524dnavTab\u9875\u9762\u7684\n            if('page' == json.rel){\n                navTab.reloadFlag(json.navTabId, 2);\n            }else{\n                navTab.reloadFlag(json.navTabId);\n            }\n        } else { // \u91cd\u65b0\u8f7d\u5165\u5f53\u524dnavTab\u9875\u9762\n            var $pagerForm = $(\".pagerForm\", navTab.getCurrentPanel());\n            if(0!=$pagerForm.length){\n                $pagerForm.submit();\n            }\n        }\n        if (\"closeCurrent\" == json.callbackType ) {\n            setTimeout(function() {\n                navTab.closeCurrentTab(json.navTabId);\n            }, 100);\n        } else if (\"forward\" == json.callbackType ) {\n            if (json.navTabId ) {\n                navTab.reload(json.forwardUrl, {\n                    navTabId: json.navTabId\n                });\n            }else{\n                navTab.reload(json.forwardUrl);\n            }\n        } else if (\"forwardConfirm\" == json.callbackType ) {\n            alertMsg.confirm(json.confirmMsg || DWZ.msg(\"forwardConfirmMsg\"), {\n                okCall: function() {\n                    navTab.reload(json.forwardUrl);\n                }, cancelCall: function() {\n                    navTab.closeCurrentTab(json.navTabId);\n                }\n            });\n        }\n    }\n}\n\n/**\n * dialog\u4e0a\u7684\u8868\u5355\u63d0\u4ea4\u56de\u8c03\u51fd\u6570 \u5f53\u524dnavTab\u9875\u9762\u6709pagerForm\u5c31\u91cd\u65b0\u52a0\u8f7d \u670d\u52a1\u5668\u8f6c\u56denavTabId\uff0c\u53ef\u4ee5\u91cd\u65b0\u8f7d\u5165\u6307\u5b9a\u7684navTab.\n * statusCode=DWZ.statusCode.ok\u8868\u793a\u64cd\u4f5c\u6210\u529f, \u81ea\u52a8\u5173\u95ed\u5f53\u524ddialog\n * form\u63d0\u4ea4\u540e\u8fd4\u56dejson\u6570\u636e\u7ed3\u6784,json\u683c\u5f0f\u548cnavTabAjaxDone\u4e00\u81f4\n */\nfunction dialogAjaxDone(json) {\n    DWZ.ajaxDone(json);\n    if (json[DWZ.keys.statusCode] == DWZ.statusCode.ok ) {\n        if (json.navTabId ) {\n            navTab.reload(json.forwardUrl, {\n                navTabId: json.navTabId\n            });\n        } else {\n            var $panel = navTab.getCurrentPanel();\n            var $pagerForm = $(\".pagerForm\", navTab.getCurrentPanel());\n            if(0!=$pagerForm.length){\n                $pagerForm.submit();\n            }\n        }\n        if (\"closeCurrent\" == json.callbackType ) {\n            $.pdialog.closeCurrent();\n        }\n    }\n}\n\n/**\n * \u5904\u7406navTab\u4e0a\u7684\u67e5\u8be2, \u4f1a\u91cd\u65b0\u8f7d\u5165\u5f53\u524dnavTab\n *\n * @param {Object}\n *            form\n */\nfunction navTabSearch(form, navTabId) {\n    var $form = $(form);\n    navTab.reload($form.attr('action'), {\n        data: $form.serializeArray(), navTabId: navTabId\n    });\n    return false;\n}\n/**\n * \u5904\u7406dialog\u5f39\u51fa\u5c42\u4e0a\u7684\u67e5\u8be2, \u4f1a\u91cd\u65b0\u8f7d\u5165\u5f53\u524ddialog\n *\n * @param {Object}\n *            form\n */\nfunction dialogSearch(form) {\n    var $form = $(form);\n    if (form[DWZ.pageInfo.pageNum] ) {\n        form[DWZ.pageInfo.pageNum].value = 1;\n    }\n    $.pdialog.reload($form.attr('action'), {\n        data: $form.serializeArray()\n    });\n    return false;\n}\n/**\n * \u5904\u7406div\u4e0a\u7684\u5c40\u90e8\u67e5\u8be2, \u4f1a\u91cd\u65b0\u8f7d\u5165\u6307\u5b9adiv\n *\n * @param {Object}\n *            form\n */\nfunction divSearch(form, rel) {\n    var $form = $(form);\n    if (form[DWZ.pageInfo.pageNum] ) {\n        form[DWZ.pageInfo.pageNum].value = 1;\n    }\n    if (rel ) {\n        var $box = $(\"#\" + rel);\n        $box.ajaxUrl({\n            type: \"POST\", url: $form.attr(\"action\"), data: $form.serializeArray(), callback: function() {\n                $box.find(\"[layoutH]\").layoutH();\n            }\n        });\n    }\n    return false;\n}\n/**\n * @param {Object}\n *            args {pageNum:\"\",numPerPage:\"\",orderField:\"\",orderDirection:\"\"}\n * @param String\n *            formId \u5206\u9875\u8868\u5355\u9009\u62e9\u5668\uff0c\u975e\u5fc5\u586b\u9879\u9ed8\u8ba4\u503c\u662f \"pagerForm\"\n */\nfunction _getPagerForm($parent, args) {\n    var form = $(\".pagerForm\", $parent).get(0);\n    if (form ) {\n        if (args[\"pageNum\"] ) {\n            form[DWZ.pageInfo.pageNum].value = args[\"pageNum\"];\n        }\n        if (args[\"numPerPage\"] ) {\n            form[DWZ.pageInfo.numPerPage].value = args[\"numPerPage\"];\n        }\n        if (args[\"orderField\"] ) {\n            form[DWZ.pageInfo.orderField].value = args[\"orderField\"];\n        }\n        if (args[\"orderDirection\"] && form[DWZ.pageInfo.orderDirection] ) {\n            form[DWZ.pageInfo.orderDirection].value = args[\"orderDirection\"];\n        }\n    }\n    return form;\n}\n\n/**\n * \u5904\u7406navTab\u4e2d\u7684\u5206\u9875\u548c\u6392\u5e8f targetType: navTab \u6216 dialog rel: \u53ef\u9009 \u7528\u4e8e\u5c40\u90e8\u5237\u65b0div id\u53f7 data:\n * pagerForm\u53c2\u6570 {pageNum:\"n\", numPerPage:\"n\", orderField:\"xxx\",\n * orderDirection:\"\"} callback: \u52a0\u8f7d\u5b8c\u6210\u56de\u8c03\u51fd\u6570\n */\nfunction dwzPageBreak(options) {\n    var op = $.extend({\n        targetType: \"navTab\", rel: \"\", data: {\n            pageNum: \"\", numPerPage: \"\", orderField: \"\", orderDirection: \"\"\n        }, callback: null\n    }, options);\n    var $parent = op.targetType == \"dialog\" ? $.pdialog.getCurrent(): navTab.getCurrentPanel();\n    if (op.rel ) {\n        var $box = $parent.find(\"#\" + op.rel);\n        var form = _getPagerForm($box, op.data);\n        if (form ) {\n            $box.ajaxUrl({\n                type: \"POST\", url: $(form).attr(\"action\"), data: $(form).serializeArray(), callback: function() {\n                    $box.find(\"[layoutH]\").layoutH();\n                }\n            });\n        }\n    } else {\n        var form = _getPagerForm($parent, op.data);\n        var params = $(form).serializeArray();\n        if (op.targetType == \"dialog\" ) {\n            if (form ) {\n                $.pdialog.reload($(form).attr(\"action\"), {\n                    data: params, callback: op.callback\n                });\n            }\n        } else {\n            if (form ) {\n                navTab.reload($(form).attr(\"action\"), {\n                    data: params, callback: op.callback\n                });\n            }\n        }\n    }\n}\n/**\n * \u5904\u7406navTab\u4e2d\u7684\u5206\u9875\u548c\u6392\u5e8f\n *\n * @param args\n *            {pageNum:\"n\", numPerPage:\"n\", orderField:\"xxx\", orderDirection:\"\"}\n * @param rel\uff1a\n *            \u53ef\u9009 \u7528\u4e8e\u5c40\u90e8\u5237\u65b0div id\u53f7\n */\nfunction navTabPageBreak(args, rel) {\n    dwzPageBreak({\n        targetType: \"navTab\", rel: rel, data: args\n    });\n}\n/**\n * \u5904\u7406dialog\u4e2d\u7684\u5206\u9875\u548c\u6392\u5e8f \u53c2\u6570\u540c navTabPageBreak\n */\nfunction dialogPageBreak(args, rel) {\n    dwzPageBreak({\n        targetType: \"dialog\", rel: rel, data: args\n    });\n}\nfunction ajaxTodo(url, callback) {\n    var $callback = callback || navTabAjaxDone;\n    if (!$.isFunction($callback) ) {\n        $callback = eval('(' + callback + ')');\n    }\n    $.ajax({\n        type: 'POST', url: url, dataType: \"json\", cache: false, success: $callback, error: DWZ.ajaxError\n    });\n}\n\nfunction escapeJquery(srcString) {\n    var escapseResult = srcString;\n    var jsSpecialChars = [\"\\\\\", \"^\", \"$\", \"*\", \"?\", \".\", \"+\", \"(\", \")\", \"[\",\n        \"]\", \"|\", \"{\", \"}\"];\n    var jquerySpecialChars = [\"~\", \"`\", \"@\", \"#\", \"%\", \"&\", \"=\", \"'\", \"\\\"\",\n        \":\", \";\", \"<\", \">\", \",\", \"/\"];\n    for (var i = 0; i < jsSpecialChars.length; i++) {\n        escapseResult = escapseResult.replace(new RegExp(\"\\\\\"\n                + jsSpecialChars[i], \"g\"), \"\\\\\"\n                + jsSpecialChars[i]);\n    }\n    for (var i = 0; i < jquerySpecialChars.length; i++) {\n        escapseResult = escapseResult.replace(new RegExp(jquerySpecialChars[i],\n                \"g\"), \"\\\\\" + jquerySpecialChars[i]);\n    }\n    return escapseResult;\n}\n\n\n/**\n * http://www.uploadify.com/documentation/uploadify/onqueuecomplete/\n */\nfunction uploadifyQueueComplete(queueData) {\n    var msg = \"The total number of files uploaded: \" + queueData.uploadsSuccessful + \"<br/>\" + \"The total number of errors while uploading: \" + queueData.uploadsErrored + \"<br/>\"\n            + \"The total number of bytes uploaded: \" + queueData.queueBytesUploaded + \"<br/>\" + \"The average speed of all uploaded files: \" + queueData.averageSpeed;\n    if (queueData.uploadsErrored ) {\n        alertMsg.error(msg);\n    } else {\n        alertMsg.correct(msg);\n    }\n}\n/**\n * http://www.uploadify.com/documentation/uploadify/onuploadsuccess/\n */\nfunction uploadifySuccess(file, data, response) {\n    alert(data)\n}\n\n/**\n * http://www.uploadify.com/documentation/uploadify/onuploaderror/\n */\nfunction uploadifyError(file, errorCode, errorMsg) {\n    alertMsg.error(errorCode + \": \" + errorMsg);\n}\n\n/**\n * http://www.uploadify.com/documentation/\n *\n * @param {Object}\n *            event\n * @param {Object}\n *            queueID\n * @param {Object}\n *            fileObj\n * @param {Object}\n *            errorObj\n */\nfunction uploadifyError(event, queueId, fileObj, errorObj) {\n    alert(\"event:\" + event + \"\\nqueueId:\" + queueId + \"\\nfileObj.name:\" + fileObj.name + \"\\nerrorObj.type:\" + errorObj.type + \"\\nerrorObj.info:\" + errorObj.info);\n}\n$.fn.extend({\n    ajaxTodo: function() {\n        return this.each(function() {\n            var $this = $(this);\n            $this.click(function(event) {\n                var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n                DWZ.debug(url);\n                if (!url.isFinishedTm() ) {\n                    alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                    return false;\n                }\n                var title = $this.attr(\"title\");\n                if (title ) {\n                    alertMsg.confirm(title, {\n                        okCall: function() {\n                            ajaxTodo(url, $this.attr(\"callback\"));\n                        }\n                    });\n                } else {\n                    ajaxTodo(url, $this.attr(\"callback\"));\n                }\n                event.preventDefault();\n            });\n        });\n    }, dwzExport: function() {\n        function _doExport($this) {\n            var $p = $this.attr(\"targetType\") == \"dialog\" ? $.pdialog.getCurrent(): navTab.getCurrentPanel();\n            var $form = $(\".pagerForm\", $p);\n            var url = $this.attr(\"href\");\n            window.location = url + ( url.indexOf('?') == -1 ? \"?\": \"&\" ) + $form.serialize();\n        }\n        return this.each(function() {\n            var $this = $(this);\n            $this.click(function(event) {\n                var title = $this.attr(\"title\");\n                if (title ) {\n                    alertMsg.confirm(title, {\n                        okCall: function() {\n                            _doExport($this);\n                        }\n                    });\n                } else {\n                    _doExport($this);\n                }\n                event.preventDefault();\n            });\n        });\n    }\n});\n\n/**\n * @author ZhangHuihua@msn.com\n * @param {Object}\n *            opts Several options\n */\n( function($) {\n    $.fn.extend({\n        pagination: function(opts) {\n            var setting = {\n                first$: \"li.j-first\", prev$: \"li.j-prev\", next$: \"li.j-next\", last$: \"li.j-last\", nums$: \"li.j-num>a\", jumpto$: \"li.jumpto\" ,\n                pageNumFrag: '<li class=\"#liClass#\"><a href=\"javascript:;\">#pageNum#</a></li>'\n            };\n            return this.each(function() {\n                var $this = $(this);\n                var pc = new Pagination(opts);\n                var interval = pc.getInterval();\n                var pageNumFrag = '';\n                for (var i = interval.start; i < interval.end; i++) {\n                    pageNumFrag += setting.pageNumFrag.replaceAll(\"#pageNum#\", i).replaceAll(\"#liClass#\", i == pc.getCurrentPage() ? 'selected j-num': 'j-num');\n                }\n                $this.html(DWZ.frag.pagination.replaceAll(\"#pageNumFrag#\", pageNumFrag).replaceAll(\"#currentPage#\", pc.getCurrentPage())).find(\"li\");\n                var $first = $this.find(setting.first$);\n                var $prev = $this.find(setting.prev$);\n                var $next = $this.find(setting.next$);\n                var $last = $this.find(setting.last$);\n                if (pc.hasPrev() ) {\n                    $first.add($prev).find(\">span\").hide();\n                    _bindEvent($prev, pc.getCurrentPage() - 1, pc.targetType(), pc.rel());\n                    _bindEvent($first, 1, pc.targetType(), pc.rel());\n                } else {\n                    $first.add($prev).addClass(\"disabled\").find(\">a\").hide();\n                }\n                if (pc.hasNext() ) {\n                    $next.add($last).find(\">span\").hide();\n                    _bindEvent($next, pc.getCurrentPage() + 1, pc.targetType(), pc.rel());\n                    _bindEvent($last, pc.numPages(), pc.targetType(), pc.rel());\n                } else {\n                    $next.add($last).addClass(\"disabled\").find(\">a\").hide();\n                }\n                $this.find(setting.nums$).each(function(i) {\n                    _bindEvent($(this), i + interval.start, pc.targetType(), pc.rel());\n                });\n                $this.find(setting.jumpto$).each(function() {\n                    var $this = $(this);\n                    var $inputBox = $this.find(\":text\");\n                    var $button = $this.find(\"a\");\n                    $button.click(function(event) {\n                        var pageNum = $inputBox.val();\n                        if (pageNum && pageNum.isPositiveInteger() ) {\n                            dwzPageBreak({\n                                targetType: pc.targetType(), rel: pc.rel(), data: {\n                                    pageNum: pageNum\n                                }\n                            });\n                        }\n                    });\n                    $inputBox.keyup(function(event) {\n                        if (event.keyCode == DWZ.keyCode.ENTER ) {\n                            $button.click();\n                        }\n                    });\n                });\n            });\n            function _bindEvent($target, pageNum, targetType, rel) {\n                $target.bind(\"click\", {\n                    pageNum: pageNum\n                }, function(event) {\n                    dwzPageBreak({\n                        targetType: targetType, rel: rel, data: {\n                            pageNum: event.data.pageNum\n                        }\n                    });\n                    event.preventDefault();\n                });\n            }\n        } ,\n\n        orderBy: function(options) {\n            var op = $.extend({\n                targetType: \"navTab\", rel: \"\", asc: \"asc\", desc: \"desc\"\n            }, options);\n            return this.each(function() {\n                var $this = $(this).css({\n                    cursor: \"pointer\"\n                }).click(function() {\n                    var orderField = $this.attr(\"orderField\");\n                    var orderDirection = $this.hasClass(op.asc) ? op.desc: op.asc;\n                    dwzPageBreak({\n                        targetType: op.targetType, rel: op.rel, data: {\n                            orderField: orderField, orderDirection: orderDirection\n                        }\n                    });\n                });\n            });\n        }\n    });\n    var Pagination = function(opts) {\n        this.opts = $.extend({\n            targetType: \"navTab\", // navTab, dialog\n            rel: \"\", // \u7528\u4e8e\u5c40\u90e8\u5237\u65b0div id\u53f7\n            totalCount: 0, numPerPage: 10, pageNumShown: 10, currentPage: 1, callback: function() {\n                return false;\n            }\n        }, opts);\n    }\n    $.extend(Pagination.prototype, {\n        targetType: function() {\n            return this.opts.targetType\n        }, rel: function() {\n            return this.opts.rel\n        }, numPages: function() {\n            return Math.ceil(this.opts.totalCount / this.opts.numPerPage);\n        }, getInterval: function() {\n            var ne_half = Math.ceil(this.opts.pageNumShown / 2);\n            var np = this.numPages();\n            var upper_limit = np - this.opts.pageNumShown;\n            var start = this.getCurrentPage() > ne_half ? Math.max(Math.min(this.getCurrentPage() - ne_half, upper_limit), 0): 0;\n            var end = this.getCurrentPage() > ne_half ? Math.min(this.getCurrentPage() + ne_half, np): Math.min(this.opts.pageNumShown, np);\n            return {\n                start: start + 1, end: end + 1\n            };\n        }, getCurrentPage: function() {\n            var currentPage = parseInt(this.opts.currentPage);\n            if (isNaN(currentPage) ) {\n                return 1;\n            }\n            return currentPage;\n        }, hasPrev: function() {\n            return this.getCurrentPage() > 1;\n        }, hasNext: function() {\n            return this.getCurrentPage() < this.numPages();\n        }\n    });\n} )(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    var _lookup = {\n        currentGroup: \"\", suffix: \"\", $target: null, pk: \"id\", nextButton: null\n    };\n    var _util = {\n        _lookupPrefix: function(key) {\n            var strDot = _lookup.currentGroup ? \".\": \"\";\n            return _lookup.currentGroup + strDot + key + _lookup.suffix;\n        }, lookupPk: function(key) {\n            return this._lookupPrefix(key);\n        }, lookupField: function(key) {\n            return this.lookupPk(key);\n        }\n    };\n    $.extend({\n        bringBackSuggest: function(args) {\n            var $box = _lookup['$target'].parents(\".unitBox:first\");\n            $box.find(\":input\").each(function() {\n                var $input = $(this), inputName = $input.attr(\"name\");\n                for ( var key in args) {\n                    var name = ( _lookup.pk == key ) ? _util.lookupPk(key): _util.lookupField(key);\n                    if (name == inputName && \"\" != name ) {\n                        if($input.hasClass('editor')){\n                            if('ckeditor'==$input.attr('editorType')) {\n                                CKEDITOR.instances[$input.data(\"id\")].setDate(args[key]);\n                            } else if (\"kindeditor\"==$input.attr(\"editorType\")){\n                                KindEditor.html('#'+$input.data(\"id\"),args[key]);\n                            } else {\n                                UE.instants[$input.data(\"id\")].setContent(args[key]);\n                            }\n                        } else {\n                            $input.val(args[key]).trigger('change');\n                        }\n                        break;\n                    }\n                }\n            });\n        },\n        bringBack: function(json) {\n            if (json[DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n                if (json[DWZ.keys.message] ) {\n                    alertMsg.error(json[DWZ.keys.message]);\n                }\n            } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                alertMsg.error(json[DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                    okCall: function() {\n                        DWZ.loadLogin();\n                    }\n                });\n            } else {\n                $.bringBackSuggest(json);\n                $.pdialog.closeCurrent();\n            }\n        },\n        batchBringBack: function(args) {\n            if(_lookup.nextButton ) {\n                for ( var row in args) {\n                    _lookup.nextButton.click();\n                    if (args[row][DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n                        if (args[row][DWZ.keys.message] ) {\n                            alertMsg.error(args[row][DWZ.keys.message]);\n                        }\n                        break;\n                    } else if (args[row][DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                        alertMsg.error(args[row][DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                            okCall: function() {\n                                DWZ.loadLogin();\n                            }\n                        });\n                        break;\n                    } else {\n                        $.bringBackSuggest(args[row]);\n                    }\n                }\n            }\n            $.pdialog.closeCurrent();\n        }\n    });\n    $.fn.extend({\n        lookup: function() {\n            return this.each(function() {\n                var $this = $(this), options = {\n                    mask: true, width: $this.attr('width') || 820, height: $this.attr('height') || 500, maxable: eval($this.attr(\"maxable\") || \"true\") ,\n                    resizable: eval($this.attr(\"resizable\") || \"true\")\n                };\n                $this.click(function(event) {\n                    _lookup = $.extend(_lookup, {\n                        currentGroup: $this.attr(\"lookupGroup\") || \"\", suffix: $this.attr(\"suffix\") || \"\", $target: $this, pk: $this.attr(\"lookupPk\") || \"\"\n                    });\n                    var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n                    if (!url.isFinishedTm() ) {\n                        alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    $.pdialog.open(url, \"_blank\", $this.attr(\"title\") || $this.text(), options);\n                    return false;\n                });\n            });\n        } ,\n        multLookup: function() {\n            return this.each(function() {\n                var $this = $(this), args = {};\n                $this.click(function(event) {\n                    var $unitBox = $this.parents(\".unitBox:first\");\n                    $unitBox.find(\"[name='\" + $this.attr(\"multLookup\") + \"']\").filter(\":checked\").each(function() {\n                        var _args = DWZ.jsonEval($(this).val());\n                        for ( var key in _args) {\n                            var value = args[key] ? args[key] + \",\": \"\";\n                            args[key] = value + _args[key];\n                        }\n                    });\n                    if ($.isEmptyObject(args) ) {\n                        alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    $.bringBack(args);\n                    return false;\n                });\n            });\n        } ,\n        suggest: function() {\n            var op = {\n                suggest$: \"#suggest\", suggestShadow$: \"#suggestShadow\"\n            };\n            var selectedIndex = -1;\n            return this.each(function() {\n                var $input = $(this).attr('autocomplete', 'off').keydown(function(event) {\n                    if (event.keyCode == DWZ.keyCode.ENTER && $(op.suggest$).is(':visible') ) {\n                        return false; // \u5c4f\u853d\u56de\u8f66\u63d0\u4ea4\n                    }\n                });\n                var suggestFields = $input.attr('suggestFields').split(\",\");\n                function _show(event) {\n                    var offset = $input.offset();\n                    var iTop = offset.top + this.offsetHeight;\n                    var $suggest = $(op.suggest$);\n                    if ($suggest.size() == 0 ) {\n                        $suggest = $('<div id=\"suggest\"></div>').appendTo($('body'));\n                    }\n                    $suggest.css({\n                        left: offset.left + 'px', top: iTop + 'px'\n                    }).show();\n                    _lookup = $.extend(_lookup, {\n                        currentGroup: $input.attr(\"lookupGroup\") || \"\", suffix: $input.attr(\"suffix\") || \"\", $target: $input, pk: $input.attr(\"lookupPk\") || \"\"\n                    });\n                    var url = $input.attr(\"suggestUrl\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n                    if (!url.isFinishedTm() ) {\n                        alertMsg.error($input.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    var postData = {};\n                    postData[$input.attr(\"postField\") || \"inputValue\"] = $input.val();\n                    $.ajax({\n                        global: false, type: 'POST', dataType: \"json\", url: url, cache: false, data: postData, success: function(response) {\n                            if (!response ) {\n                                return;\n                            }\n                            var html = '';\n                            $.each(response, function(i) {\n                                var liAttr = '', liLabel = '';\n                                for (var i = 0; i < suggestFields.length; i++) {\n                                    var str = this[suggestFields[i]];\n                                    if (str ) {\n                                        if (liLabel ) {\n                                            liLabel += '-';\n                                        }\n                                        liLabel += str;\n                                    }\n                                }\n                                for ( var key in this) {\n                                    if (liAttr ) {\n                                        liAttr += ',';\n                                    }\n                                    liAttr += key + \":'\" + this[key] + \"'\";\n                                }\n                                html += '<li lookupAttrs=\"' + liAttr + '\">' + liLabel + '</li>';\n                            });\n                            var $lis = $suggest.html('<ul>' + html + '</ul>').find(\"li\");\n                            $lis.click(function() {\n                                _select($(this));\n                                if($input.next().hasClass('suggestButton')){\n                                    $input.next().click();\n                                }\n                            });\n                            if ($lis.size() == 0 ) {\n                                var jsonStr = \"\";\n                                for (var i = 0; i < suggestFields.length; i++) {\n                                    if (_util.lookupField(suggestFields[i]) == event.target.name ) {\n                                        break;\n                                    }\n                                    if (jsonStr ) {\n                                        jsonStr += ',';\n                                    }\n                                    jsonStr += suggestFields[i] + \":''\";\n                                }\n                                jsonStr = \"{\" + _lookup.pk + \":'',\" + jsonStr + \"}\";\n                                $.bringBackSuggest(DWZ.jsonEval(jsonStr));\n                            }\n                        }, error: function() {\n                            $suggest.html('');\n                        }\n                    });\n                    $(document).bind(\"click\", _close);\n                    return false;\n                }\n                function _select($item) {\n                    var jsonStr = \"{\" + $item.attr('lookupAttrs') + \"}\";\n                    $.bringBackSuggest(DWZ.jsonEval(jsonStr));\n                }\n                function _close() {\n                    $(op.suggest$).html('').hide();\n                    selectedIndex = -1;\n                    $(document).unbind(\"click\", _close);\n                }\n                $input.focus(_show).click(false).keyup(function(event) {\n                    var $items = $(op.suggest$).find(\"li\");\n                    switch (event.keyCode) {\n                        case DWZ.keyCode.ESC:\n                        case DWZ.keyCode.TAB:\n                        case DWZ.keyCode.SHIFT:\n                        case DWZ.keyCode.HOME:\n                        case DWZ.keyCode.END:\n                        case DWZ.keyCode.LEFT:\n                        case DWZ.keyCode.RIGHT:\n                            break;\n                        case DWZ.keyCode.ENTER:\n                            _close();\n                            break;\n                        case DWZ.keyCode.DOWN:\n                            if (selectedIndex >= $items.size() - 1 ) {\n                                selectedIndex = -1;\n                            } else {\n                                selectedIndex++;\n                            }\n                            break;\n                        case DWZ.keyCode.UP:\n                            if (selectedIndex < 0 ) {\n                                selectedIndex = $items.size() - 1;\n                            } else {\n                                selectedIndex--;\n                            }\n                            break;\n                        default :\n                            _show(event);\n                    }\n                    $items.removeClass(\"selected\");\n                    if (selectedIndex >= 0 ) {\n                        var $item = $items.eq(selectedIndex).addClass(\"selected\");\n                        _select($item);\n                    }\n                });\n            });\n        } ,\n        itemDetail: function() {\n            return this.each(function() {\n                var $table = $(this).css(\"clear\", \"both\"), $tbody = $table.find(\"tbody\");\n                var fields = [ ];\n                $table.find(\"tr:first th[type]\").each(function(i) {\n                    var $th = $(this);\n                    var field = {\n                        type: $th.attr(\"type\") || \"text\", patternDate: $th.attr(\"dateFmt\") || \"yyyy-MM-dd\", name: $th.attr(\"name\") || \"\" ,\n                        defaultVal: $th.attr(\"defaultVal\") || \"\", size: $th.attr(\"size\") || \"12\", enumUrl: $th.attr(\"enumUrl\") || \"\" ,\n                        lookupGroup: $th.attr(\"lookupGroup\") || \"\", lookupUrl: $th.attr(\"lookupUrl\") || \"\", lookupPk: $th.attr(\"lookupPk\") || \"id\" ,\n                        suggestUrl: $th.attr(\"suggestUrl\"), suggestFields: $th.attr(\"suggestFields\"), postField: $th.attr(\"postField\") || \"\" ,\n                        fieldClass: $th.attr(\"fieldClass\") || \"\", fieldAttrs: $th.attr(\"fieldAttrs\") || \"\", title:$th.text()\n                    };\n                    fields.push(field);\n                });\n                $tbody.find(\"a.btnDel\").click(function() {\n                    var $btnDel = $(this);\n                    if ($btnDel.is(\"[href^=javascript:]\") ) {\n                        $btnDel.parents(\"tr:first\").remove();\n                        initSuffix($tbody);\n                        return false;\n                    }\n                    function delDbData() {\n                        $.ajax({\n                            type: 'POST', dataType: \"json\", url: $btnDel.attr('href'), cache: false, success: function() {\n                                $btnDel.parents(\"tr:first\").remove();\n                                initSuffix($tbody);\n                            }, error: DWZ.ajaxError\n                        });\n                    }\n                    if ($btnDel.attr(\"title\") ) {\n                        alertMsg.confirm($btnDel.attr(\"title\"), {\n                            okCall: delDbData\n                        });\n                    } else {\n                        delDbData();\n                    }\n                    return false;\n                });\n                var addButTxt = $table.attr('addButton') || \"Add New\";\n                if (addButTxt ) {\n                    var $addBut = $('<label style=\"width:auto;\"><button type=\"button\" class=\"button\">' + addButTxt + '</button></label>').insertBefore($table).find('button');\n                    var batchButtonTxt = $table.attr('batchButton') || \"Batch upload\";\n                    var batchUploadUrl = $table.attr('batchUploadUrl');\n                    if(batchUploadUrl){\n                        var $batchButton = $('<label><a class=\"button\" lookupGroup=\"\" href=\"'+batchUploadUrl+'\" width=\"1000\" height=\"600\" >'+batchButtonTxt+'</a></label>').initUI().insertBefore($table).find('a');\n                        $batchButton.click(function(){\n                            _lookup = $.extend(_lookup, {\n                                nextButton : $addBut\n                            });\n                        });\n                    } else {\n                        var $rowNum = $('<label><input type=\"text\" name=\"dwz_rowNum\" class=\"textInput\" value=\"1\" size=\"2\"/></label>').insertBefore($table).find('input');\n                    }\n\n                    var trTm = \"\";\n                    $addBut.click(function() {\n                        if (!trTm ) {\n                            trTm = trHtml(fields);\n                        }\n                        var rowNum = 1;\n                        if(!batchUploadUrl ){\n                            try {\n                                rowNum = parseInt($rowNum.val());\n                            } catch (e) {}\n                        }\n                        for (var i = 0; i < rowNum; i++) {\n                            var $tr = $($.parseHTML(trTm, document, true));\n                            $tr.appendTo($tbody).initUI().find(\"a.btnDel\").click(function() {\n                                $(this).parents(\"tr:first\").remove();\n                                initSuffix($tbody);\n                                return false;\n                            });\n                        }\n                        initSuffix($tbody);\n                        var $attach = $tr.find('.btnAttach');\n                        if(batchUploadUrl && $attach ){\n                            _lookup = $.extend(_lookup, {\n                                currentGroup: $attach.attr(\"lookupGroup\") || \"\", suffix: $attach.attr(\"suffix\") || \"\", $target: $attach, pk: $attach.attr(\"lookupPk\") || \"\"\n                            });\n                        }\n                    });\n                }\n            });\n\n            /**\n             * \u5220\u9664\u65f6\u91cd\u65b0\u521d\u59cb\u5316\u4e0b\u6807\n             */\n            function initSuffix($tbody) {\n                $tbody.find('>tr').each(function(i) {\n                    $(':input, a.btnLook, a.btnAttach', this).each(function() {\n                        var $this = $(this), name = $this.attr('name'), val = $this.val();\n                        if (name ) {\n                            $this.attr('name', name.replaceSuffix(i));\n                        }\n                        var lookupGroup = $this.attr('lookupGroup');\n                        if (lookupGroup ) {\n                            $this.attr('lookupGroup', lookupGroup.replaceSuffix(i));\n                        }\n                        var suffix = $this.attr(\"suffix\");\n                        if (suffix ) {\n                            $this.attr('suffix', suffix.replaceSuffix(i));\n                        }\n                        if (val && val.indexOf(\"#index#\") >= 0 ) {\n                            $this.val(val.replace('#index#', i + 1));\n                        }\n                    });\n                });\n            }\n            function tdHtml(field) {\n                var html = '', suffix = '';\n                if (field.name.endsWith(\"[#index#]\") ) {\n                    suffix = \"[#index#]\";\n                } else if (field.name.endsWith(\"[]\") ) {\n                    suffix = \"[]\";\n                }\n                var suffixFrag = suffix ? ' suffix=\"' + suffix + '\" ': '';\n                var attrFrag = '';\n                if (field.fieldAttrs ) {\n                    var attrs = DWZ.jsonEval(field.fieldAttrs);\n                    for ( var key in attrs) {\n                        attrFrag += key + '=\"' + attrs[key] + '\"';\n                    }\n                }\n                switch (field.type) {\n                    case 'del':\n                        html = '<a href=\"javascript:void(0)\" class=\"btnDel ' + field.fieldClass + '\"></a>';\n                        break;\n                    case 'lookup':\n                        var suggestFrag = '';\n                        if (field.suggestFields ) {\n                            suggestFrag = 'autocomplete=\"off\" lookupGroup=\"' + field.lookupGroup + '\"' + suffixFrag + ' suggestUrl=\"' + field.suggestUrl + '\" suggestFields=\"'\n                                    + field.suggestFields + '\"' + ' postField=\"' + field.postField + '\"';\n                        }\n                        html = '<input type=\"hidden\" name=\"' + field.lookupGroup + '.' + field.lookupPk + suffix + '\"/>' + '<input type=\"text\" name=\"' + field.name + '\"'\n                                + suggestFrag + ' lookupPk=\"' + field.lookupPk + '\" size=\"' + field.size + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '/>' + '<a class=\"btnLook\" href=\"'\n                                + field.lookupUrl + '\" lookupGroup=\"' + field.lookupGroup + '\" ' + suggestFrag + ' lookupPk=\"' + field.lookupPk + '\" ' + attrFrag + '>'+field.title+'</a>';\n                        break;\n                    case 'attach':\n                        html = '<input type=\"hidden\" name=\"' + field.lookupGroup + '.' + field.lookupPk + suffix + '\"/>' + '<input type=\"text\" name=\"' + field.name + '\" size=\"'\n                                + field.size + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '/>' + '<a class=\"btnAttach\" href=\"' + field.lookupUrl + '\" lookupGroup=\"' + field.lookupGroup\n                                + '\" ' + suffixFrag + ' lookupPk=\"' + field.lookupPk + '\" width=\"1000\" height=\"600\" ' + attrFrag + '>'+field.title+'</a>';\n                        break;\n                    case 'enum':\n                        $.ajax({\n                            type: \"POST\", dataType: \"html\", async: false, url: field.enumUrl, data: {\n                                inputName: field.name\n                            }, success: function(response) {\n                                html = response;\n                            }\n                        });\n                        break;\n                    case 'date':\n                        html = '<input type=\"text\" name=\"' + field.name + '\" value=\"' + field.defaultVal + '\" class=\"date ' + field.fieldClass + '\" dateFmt=\"' + field.patternDate\n                                + '\" size=\"' + field.size + '\" ' + attrFrag + '/>';\n                        break;\n                    case 'checkbox':\n                        html = '<input type=\"checkbox\" name=\"' + field.name + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '/>';\n                        break;\n                    case 'textarea':\n                        html = '<textarea name=\"' + field.name + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '>' + field.defaultVal + '</textarea>';\n                        break;\n                    case 'number':\n                        html = '<input type=\"number\" name=\"' + field.name + '\" value=\"' + field.defaultVal + '\" size=\"' + field.size + '\" class=\"' + field.fieldClass + '\" '\n                        + attrFrag + '/>';\n                        break;\n                    default :\n                        html = '<input type=\"text\" name=\"' + field.name + '\" value=\"' + field.defaultVal + '\" size=\"' + field.size + '\" class=\"' + field.fieldClass + '\" '\n                                + attrFrag + '/>';\n                        break;\n                }\n                return '<td>' + html + '</td>';\n            }\n            function trHtml(fields) {\n                var html = '';\n                $(fields).each(function() {\n                    html += tdHtml(this);\n                });\n                return '<tr class=\"unitBox\">' + html + '</tr>';\n            }\n        },\n        selectedTodo: function() {\n            function _getIds(selectedIds, targetType) {\n                var ids = \"\";\n                var $box = targetType == \"dialog\" ? $.pdialog.getCurrent(): navTab.getCurrentPanel();\n                $box.find(\"input:checked\").filter(\"[name='\" + selectedIds + \"']\").each(function(i) {\n                    var val = $(this).val();\n                    ids += i == 0 ? val: \",\" + val;\n                });\n                return ids;\n            }\n            return this.each(function() {\n                var $this = $(this);\n                var selectedIds = $this.attr(\"rel\") || \"ids\";\n                var postType = $this.attr(\"postType\") || \"map\";\n                $this.click(function() {\n                    var targetType = $this.attr(\"targetType\");\n                    var ids = _getIds(selectedIds, targetType);\n                    if (!ids ) {\n                        alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    var _callback = $this.attr(\"callback\") || ( targetType == \"dialog\" ? dialogAjaxDone: navTabAjaxDone );\n                    if (!$.isFunction(_callback) ) {\n                        _callback = eval('(' + _callback + ')');\n                    }\n                    function _doPost() {\n                        $.ajax({\n                            type: 'POST', url: $this.attr('href'), dataType: 'json', cache: false, data: function() {\n                                if (postType == 'map' ) {\n                                    return $.map(ids.split(','), function(val, i) {\n                                        return {\n                                            name: selectedIds, value: val\n                                        };\n                                    })\n                                } else {\n                                    var _data = {};\n                                    _data[selectedIds] = ids;\n                                    return _data;\n                                }\n                            }(), success: _callback, error: DWZ.ajaxError\n                        });\n                    }\n                    var title = $this.attr(\"title\");\n                    if (title ) {\n                        alertMsg.confirm(title, {\n                            okCall: _doPost\n                        });\n                    } else {\n                        _doPost();\n                    }\n                    return false;\n                });\n            });\n        }\n    });\n} )(jQuery);\n\n/**\n * reference dwz.util.date.js\n *\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.setRegional(\"datepicker\", {\n        dayNames: [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ] ,\n        monthNames: [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ]\n    });\n    $.fn.datepicker = function(opts) {\n        var setting = {\n            box$: \"#calendar\",\n            year$: \"#calendar [name=year]\", month$: \"#calendar [name=month]\",\n            tmInputs$: \"#calendar .time :text\", hour$: \"#calendar .time .hh\" , minute$: \"#calendar .time .mm\", second$: \"#calendar .time .ss\",\n            tmBox$: \"#calendar .tm\", tmUp$: \"#calendar .time .up\", tmDown$: \"#calendar .time .down\" ,\n            close$: \"#calendar .close\", main$: \"#calendar .main\", days$: \"#calendar .days\", dayNames$: \"#calendar .dayNames\" ,\n            clearBut$: \"#calendar .clearBut\", okBut$: \"#calendar .okBut\"\n        };\n        function changeTmMenu(sltClass) {\n            var $tm = $(setting.tmBox$);\n            $tm.removeClass(\"hh\").removeClass(\"mm\").removeClass(\"ss\");\n            if (sltClass ) {\n                $tm.addClass(sltClass);\n                $(setting.tmInputs$).removeClass(\"slt\").filter(\".\" + sltClass).addClass(\"slt\");\n            }\n        }\n        function clickTmMenu($input, type) {\n            $(setting.tmBox$).find(\".\" + type + \" li\").each(function() {\n                var $li = $(this);\n                $li.click(function() {\n                    $input.val($li.text());\n                });\n            });\n        }\n        function keydownInt(e) {\n            if (! ( ( e.keyCode >= 48 && e.keyCode <= 57 ) || ( e.keyCode == DWZ.keyCode.DELETE || e.keyCode == DWZ.keyCode.BACKSPACE ) ) ) {\n                return false;\n            }\n        }\n        function changeTm($input, type) {\n            var ivalue = parseInt($input.val()), istart = parseInt($input.attr(\"start\")) || 0, iend = parseInt($input.attr(\"end\"));\n            var istep = parseInt($input.attr('step') || 1);\n            if (type == 1 ) {\n                if (ivalue <= iend - istep ) {\n                    $input.val(ivalue + istep);\n                }\n            } else if (type == -1 ) {\n                if (ivalue >= istart + istep ) {\n                    $input.val(ivalue - istep);\n                }\n            } else if (ivalue > iend ) {\n                $input.val(iend);\n            } else if (ivalue < istart ) {\n                $input.val(istart);\n            }\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var dp = new Datepicker($this.val(), opts);\n            function generateCalendar(dp) {\n                var dw = dp.getDateWrap();\n                var minDate = dp.getMinDate();\n                var maxDate = dp.getMaxDate();\n                var monthStart = new Date(dw.year, dw.month - 1, 1);\n                var startDay = monthStart.getDay();\n                var dayStr = \"\";\n                if (startDay > 0 ) {\n                    monthStart.setMonth(monthStart.getMonth() - 1);\n                    var prevDateWrap = dp.getDateWrap(monthStart);\n                    for (var t = prevDateWrap.days - startDay + 1; t <= prevDateWrap.days; t++) {\n                        var _date = new Date(dw.year, dw.month - 2, t);\n                        var _ctrClass = ( _date >= minDate && _date <= maxDate ) ? '': 'disabled';\n                        dayStr += '<dd class=\"other ' + _ctrClass + '\" chMonth=\"-1\" day=\"' + t + '\">' + t + '</dd>';\n                    }\n                }\n                for (var t = 1; t <= dw.days; t++) {\n                    var _date = new Date(dw.year, dw.month - 1, t);\n                    var _ctrClass = ( _date >= minDate && _date <= maxDate ) ? '': 'disabled';\n                    if (t == dw.day ) {\n                        dayStr += '<dd class=\"slt ' + _ctrClass + '\" day=\"' + t + '\">' + t + '</dd>';\n                    } else {\n                        dayStr += '<dd class=\"' + _ctrClass + '\" day=\"' + t + '\">' + t + '</dd>';\n                    }\n                }\n                for (var t = 1; t <= 42 - startDay - dw.days; t++) {\n                    var _date = new Date(dw.year, dw.month, t);\n                    var _ctrClass = ( _date >= minDate && _date <= maxDate ) ? '': 'disabled';\n                    dayStr += '<dd class=\"other ' + _ctrClass + '\" chMonth=\"1\" day=\"' + t + '\">' + t + '</dd>';\n                }\n                var $days = $(setting.days$).html(dayStr).find(\"dd\");\n                $days.not('.disabled').click(function() {\n                    var $day = $(this);\n                    if (!dp.hasTime() ) {\n                        $this.val(dp.formatDate(dp.changeDay($day.attr(\"day\"), $day.attr(\"chMonth\"))));\n                        closeCalendar();\n                    } else {\n                        $days.removeClass(\"slt\");\n                        $day.addClass(\"slt\");\n                    }\n                });\n                if (!dp.hasDate() ) {\n                    $(setting.main$).addClass('nodate'); // \u4ec5\u65f6\u95f4\uff0c\u65e0\u65e5\u671f\n                }\n\n                if (dp.hasTime() ) {\n                    $(\"#calendar .time\").show();\n\n                    var iHour = dw.hour, iMinute = dw.minute, iSecond = dw.second;\n\n                    if (dp.opts.defaultTime && !$this.val()) {\n                        var timeStr = dp.opts.defaultTime.split(':');\n                        iHour = parseInt(timeStr[0]);\n                        iMinute = parseInt(timeStr[1]);\n                        iSecond = parseInt(timeStr[2]);\n                    }\n                    iMinute = parseInt(iMinute / dp.opts.mmStep) * dp.opts.mmStep;\n                    iSecond = dp.hasSecond() ? iSecond : 0;\n\n                    var $hour = $(setting.hour$).val(iHour).focus(function() {\n                        changeTmMenu(\"hh\");\n                    });\n                    var $minute = $(setting.minute$).val(iMinute).attr('step', dp.opts.mmStep).focus(function() {\n                        changeTmMenu(\"mm\");\n                    });\n                    var $second = $(setting.second$).val(iSecond).attr('step', dp.opts.ssStep).focus(function() {\n                        changeTmMenu(\"ss\");\n                    });\n                    $hour.add($minute).add($second).click(function() {\n                        return false\n                    });\n                    clickTmMenu($hour, \"hh\");\n                    clickTmMenu($minute, \"mm\");\n                    clickTmMenu($second, \"ss\");\n                    $(setting.box$).click(function() {\n                        changeTmMenu();\n                    });\n                    var $inputs = $(setting.tmInputs$);\n                    $inputs.keydown(keydownInt).each(function() {\n                        var $input = $(this);\n                        $input.keyup(function() {\n                            changeTm($input, 0);\n                        });\n                    });\n                    $(setting.tmUp$).click(function() {\n                        $inputs.filter(\".slt\").each(function() {\n                            changeTm($(this), 1);\n                        });\n                    });\n                    $(setting.tmDown$).click(function() {\n                        $inputs.filter(\".slt\").each(function() {\n                            changeTm($(this), -1);\n                        });\n                    });\n                    if (!dp.hasHour() ) {\n                        $hour.attr(\"disabled\", true);\n                    }\n                    if (!dp.hasMinute() ) {\n                        $minute.attr(\"disabled\", true);\n                    }\n                    if (!dp.hasSecond() ) {\n                        $second.attr(\"disabled\", true);\n                    }\n                }\n            }\n            function closeCalendar() {\n                $(setting.box$).remove();\n                $(document).unbind(\"click\", closeCalendar);\n            }\n            $this.click(function(event) {\n                closeCalendar();\n                var dp = new Datepicker($this.val(), opts);\n                var offset = $this.offset();\n                var iTop = offset.top + this.offsetHeight;\n                $($.parseHTML(DWZ.frag['calendarFrag'], document, true)).appendTo(\"body\").css({\n                    left: offset.left + 'px', top: iTop + 'px'\n                }).show().click(function(event) {\n                    event.stopPropagation();\n                });\n                ( $.fn.bgiframe && $(setting.box$).bgiframe() );\n                var dayNames = \"\";\n                $.each($.regional.datepicker.dayNames, function(i, v) {\n                    dayNames += \"<dt>\" + v + \"</dt>\"\n                });\n                $(setting.dayNames$).html(dayNames);\n                var dw = dp.getDateWrap();\n                var $year = $(setting.year$);\n                var yearstart = dp.getMinDate().getFullYear();\n                var yearend = dp.getMaxDate().getFullYear();\n                for (y = yearstart; y <= yearend; y++) {\n                    $year.append('<option value=\"' + y + '\"' + ( dw.year == y ? 'selected=\"selected\"': '' ) + '>' + y + '</option>');\n                }\n                var $month = $(setting.month$);\n                $.each($.regional.datepicker.monthNames, function(i, v) {\n                    var m = i + 1;\n                    $month.append('<option value=\"' + m + '\"' + ( dw.month == m ? 'selected=\"selected\"': '' ) + '>' + v + '</option>');\n                });\n\n                // generate calendar\n                generateCalendar(dp);\n                $year.add($month).change(function() {\n                    dp.changeDate($year.val(), $month.val());\n                    generateCalendar(dp);\n                });\n\n                // fix top\n                var iBoxH = $(setting.box$).outerHeight(true);\n                if (iTop > iBoxH && iTop > $(window).height() - iBoxH ) {\n                    $(setting.box$).css(\"top\", offset.top - iBoxH);\n                }\n                $(setting.close$).click(function() {\n                    closeCalendar();\n                });\n                $(setting.clearBut$).click(function() {\n                    $this.val(\"\");\n                    closeCalendar();\n                });\n                $(setting.okBut$).click(function() {\n                    var $dd = $(setting.days$).find(\"dd.slt\");\n                    if ($dd.hasClass(\"disabled\") ) {\n                        return false;\n                    }\n                    var date = dp.changeDay($dd.attr(\"day\"), $dd.attr(\"chMonth\"));\n                    if (dp.hasTime() ) {\n                        date.setHours(parseInt($(setting.hour$).val()));\n                        date.setMinutes(parseInt($(setting.minute$).val()));\n                        date.setSeconds(parseInt($(setting.second$).val()));\n                    }\n                    $this.val(dp.formatDate(date));\n                    closeCalendar();\n                });\n                $(document).bind(\"click\", closeCalendar);\n                return false;\n            });\n        });\n    }\n    var Datepicker = function(sDate, opts) {\n        this.opts = $.extend({\n            pattern: 'yyyy-MM-dd', minDate: \"1970-01-01\", maxDate: \"2099-12-31\", mmStep: 1, ssStep: 1\n        }, opts);\n\n        // \u52a8\u6001minDate\u3001maxDate\n        var now = new Date();\n        this.opts.minDate = now.formatDateTm(this.opts.minDate);\n        this.opts.maxDate = now.formatDateTm(this.opts.maxDate);\n        this.sDate = sDate.trim();\n    }\n    $.extend(Datepicker.prototype, {\n        get: function(name) {\n            return this.opts[name];\n        },\n        _getDays: function(y, m) {// \u83b7\u53d6\u67d0\u5e74\u67d0\u6708\u7684\u5929\u6570\n\n            return m == 2 ? ( y % 4 || ! ( y % 100 ) && y % 400 ? 28: 29 ): ( /4|6|9|11/.test(m) ? 30: 31 );\n        },\n        _minMaxDate: function(sDate) {\n            var _count = sDate.split('-').length - 1;\n            var _format = 'y-M-d';\n            if (_count == 1 ) {\n                _format = 'y-M';\n            } else if (_count == 0 ) {\n                _format = 'y';\n            }\n            return sDate.parseDate(_format);\n        },\n        getMinDate: function() {\n            return this._minMaxDate(this.opts.minDate);\n        },\n        getMaxDate: function() {\n            var _sDate = this.opts.maxDate;\n            var _count = _sDate.split('-').length - 1;\n            var _date = this._minMaxDate(_sDate);\n\n            if (_count < 2 ) { // format:y-M\u3001y\n\n                var _day = this._getDays(_date.getFullYear(), _date.getMonth() + 1);\n                _date.setDate(_day);\n                if (_count == 0 ) {// format:y\n\n                    _date.setMonth(11);\n                }\n            }\n            return _date;\n        },\n        getDateWrap: function(date) { // \u5f97\u5230\u5e74,\u6708,\u65e5\n\n            if (!date ) {\n                date = this.parseDate(this.sDate) || new Date();\n            }\n            var y = date.getFullYear();\n            var m = date.getMonth() + 1;\n            var days = this._getDays(y, m);\n            return {\n                year: y, month: m, day: date.getDate(), hour: date.getHours(), minute: date.getMinutes(), second: date.getSeconds(), days: days, date: date\n            }\n        } ,\n        /**\n         * @param {year:2010,\n         *            month:05, day:24}\n         */\n        changeDate: function(y, m, d) {\n            var date = new Date(y, m - 1, d || 1);\n            this.sDate = this.formatDate(date);\n            return date;\n        },\n        changeDay: function(day, chMonth) {\n            if (!chMonth ) {\n                chMonth = 0;\n            }\n            var dw = this.getDateWrap();\n            return this.changeDate(dw.year, dw.month + parseInt(chMonth), day);\n        },\n        parseDate: function(sDate) {\n            if (!sDate ) {\n                return null;\n            }\n            return sDate.parseDate(this.opts.pattern);\n        },\n        formatDate: function(date) {\n            return date.formatDate(this.opts.pattern);\n        },\n        hasHour: function() {\n            return this.opts.pattern.indexOf(\"H\") != -1;\n        },\n        hasMinute: function() {\n            return this.opts.pattern.indexOf(\"m\") != -1;\n        },\n        hasSecond: function() {\n            return this.opts.pattern.indexOf(\"s\") != -1;\n        },\n        hasTime: function() {\n            return this.hasHour() || this.hasMinute() || this.hasSecond();\n        },\n        hasDate: function() {\n            var _dateKeys = [\"y\", \"M\", \"d\", \"E\"];\n            for (var i = 0; i < _dateKeys.length; i++) {\n                if (this.opts.pattern.indexOf(_dateKeys[i]) != -1 ) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n( function($) {\n    $.extend($.fn, {\n        jBlindUp: function(options) {\n            var op = $.extend({\n                duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                $(this).animate({\n                    height: 0\n                }, {\n                    step: function() {\n                    }, duration: op.duration, easing: op.easing, complete: function() {\n                        $this.css({\n                            display: \"none\"\n                        });\n                        op.call();\n                    }\n                });\n            });\n        },\n        jBlindDown: function(options) {\n            var op = $.extend({\n                to: 0, duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                var fixedPanelHeight = ( op.to > 0 ) ? op.to: $.effect.getDimensions($this[0]).height;\n                $this.animate({\n                    height: fixedPanelHeight\n                }, {\n                    step: function() {\n                    }, duration: op.duration, easing: op.easing, complete: function() {\n                        $this.css({\n                            display: \"\"\n                        });\n                        op.call();\n                    }\n                });\n            });\n        },\n        jSlideUp: function(options) {\n            var op = $.extend({\n                to: 0, duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                $this.wrapInner(\"<div></div>\");\n                var fixedHeight = ( op.to > 0 ) ? op.to: $.effect.getDimensions($(\">div\", $this)[0]).height;\n                $this.css({\n                    overflow: \"visible\", position: \"relative\"\n                });\n                $(\">div\", $this).css({\n                    position: \"relative\"\n                }).animate({\n                    top: -fixedHeight\n                }, {\n                    easing: op.easing, duration: op.duration, complete: function() {\n                        $this.html($(this).html());\n                    }\n                });\n            });\n        },\n        jSlideDown: function(options) {\n            var op = $.extend({\n                to: 0, duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                var fixedHeight = ( op.to > 0 ) ? op.to: $.effect.getDimensions($this[0]).height;\n                $this.wrapInner(\"<div style=\\\"top:-\" + fixedHeight + \"px;\\\"></div>\");\n                $this.css({\n                    overflow: \"visible\", position: \"relative\", height: \"0px\"\n                }).animate({\n                    height: fixedHeight\n                }, {\n                    duration: op.duration, easing: op.easing, complete: function() {\n                        $this.css({\n                            display: \"\", overflow: \"\"\n                        });\n                        op.call();\n                    }\n                });\n                $(\">div\", $this).css({\n                    position: \"relative\"\n                }).animate({\n                    top: 0\n                }, {\n                    easing: op.easing, duration: op.duration, complete: function() {\n                        $this.html($(this).html());\n                    }\n                });\n            });\n        }\n    });\n    $.effect = {\n        getDimensions: function(element, displayElement) {\n            var dimensions = new $.effect.Rectangle;\n            var displayOrig = $(element).css(\"display\");\n            var visibilityOrig = $(element).css(\"visibility\");\n            var isZero = $(element).height() == 0 ? true: false;\n            if ($(element).is(\":hidden\") ) {\n                $(element).css({\n                    visibility: \"hidden\", display: \"block\"\n                });\n                if (isZero ) {\n                    $(element).css(\"height\", \"\");\n                }\n                if ($.browser.opera ) {\n                    refElement.focus();\n                }\n            }\n            dimensions.height = $(element).outerHeight();\n            dimensions.width = $(element).outerWidth();\n            if (displayOrig == 'none' ) {\n                $(element).css({\n                    visibility: visibilityOrig, display: 'none'\n                });\n                if (isZero ) {\n                    $(element).css(\"height\", \"0px\");\n                }\n            }\n            return dimensions;\n        }\n    }\n    $.effect.Rectangle = function() {\n        this.width = 0;\n        this.height = 0;\n        this.unit = \"px\";\n    }\n} )(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n        checkboxCtrl: function(parent) {\n            return this.each(function() {\n                var $trigger = $(this);\n                $trigger.click(function() {\n                    var group = $trigger.attr(\"group\");\n                    if ($trigger.is(\":checkbox\") ) {\n                        var type = $trigger.is(\":checked\") ? \"all\": \"none\";\n                        if (group ) {\n                            $.checkbox.select(group, type, parent);\n                        }\n                    } else {\n                        if (group ) {\n                            $.checkbox.select(group, $trigger.attr(\"selectType\") || \"all\", parent);\n                        }\n                    }\n                });\n            });\n        }\n    });\n    $.checkbox = {\n        selectAll: function(_name, _parent) {\n            this.select(_name, \"all\", _parent);\n        },\n        unSelectAll: function(_name, _parent) {\n            this.select(_name, \"none\", _parent);\n        },\n        selectInvert: function(_name, _parent) {\n            this.select(_name, \"invert\", _parent);\n        },\n        select: function(_name, _type, _parent) {\n            $parent = $(_parent || document);\n            $checkboxLi = $parent.find(\":checkbox[name='\" + _name + \"']\");\n            switch (_type) {\n                case \"invert\":\n                    $checkboxLi.each(function() {\n                        $checkbox = $(this);\n                        $checkbox.prop('checked', !$checkbox.is(\":checked\"));\n                    });\n                    break;\n                case \"none\":\n                    $checkboxLi.prop('checked', false);\n                    break;\n                default :\n                    $checkboxLi.prop('checked', true);\n                    break;\n            }\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n\n( function($) {\n    var allSelectBox = [ ];\n    var killAllBox = function(bid) {\n        $.each(allSelectBox, function(i) {\n            if (allSelectBox[i] != bid ) {\n                if (!$(\"#\" + allSelectBox[i])[0] ) {\n                    $(\"#op_\" + allSelectBox[i]).remove();\n                } else {\n                    $(\"#op_\" + allSelectBox[i]).css({\n                        height: \"\", width: \"\"\n                    }).hide();\n                }\n                $('#'+ allSelectBox[i]).children('a').removeClass('expand');\n                $(document).unbind(\"click\", killAllBox);\n            }\n        });\n    };\n    var _onchange = function(event) {\n        var $ref = $(\"select[name=\" + escapeJquery(event.data.$this.attr('ref'))+\"]\");\n        if ($ref.size() == 0 ) {\n            return false;\n        }\n        if(event.data.$this.attr('index')){\n            $ref=$ref.eq(event.data.$this.attr('index'));\n        }\n        $.ajax({\n            type: 'POST', dataType: \"json\", url: event.data.$this.attr('refUrl').replace(\"{value}\", encodeURIComponent(event.data.$this.val())), cache: false, data: {} ,\n            success: function(json) {\n                if (!json ) {\n                    return;\n                }\n                var html = '';\n                $.each(json, function(i) {\n                    if (json[i] && json[i].length > 1 ) {\n                        html += '<option value=\"' + json[i][0] + '\">' + json[i][1] + '</option>';\n                    }\n                });\n                var $refCombox = $ref.parents(\"div.combox:first\");\n                $ref.html(html).insertAfter($refCombox);\n                $refCombox.remove();\n                $ref.trigger(\"change\").combox();\n            }, error: DWZ.ajaxError\n        });\n    };\n    $.extend($.fn, {\n        comboxSelect: function(options) {\n            var op = $.extend({\n                selector: \">a\"\n            }, options);\n            return this.each(function() {\n                var box = $(this);\n                var selector = $(op.selector, box);\n                allSelectBox.push(box.attr(\"id\"));\n                $(op.selector, box).click(function() {\n                    var options = $(\"#op_\" + box.attr(\"id\"));\n                    var optionlist=$('ul',options);\n                    if (options.is(\":hidden\") ) {\n                        box.children('a').addClass('expand');\n                        if (options.height() > 300 ) {\n                            optionlist.css({\n                                height: \"300px\", overflow: \"scroll\"\n                            });\n                        }\n                        var top = box.offset().top + box[0].offsetHeight + 1;\n                        if (top + options.outerHeight(true) > $(window).height() - 20 ) {\n                            top = top - box.outerHeight(true) - options.outerHeight(true) - 1;\n                        }\n                        options.css({\n                            top: top, left: box.offset().left\n                        }).show();\n                        if($('a.selected',options).length){\n                            optionlist.stop().animate({scrollTop:$('a.selected',optionlist).offset().top-optionlist.offset().top+optionlist.scrollTop()},500);\n                        }\n                        $('.search input',options).focus().keyup(function(){\n                            var val = $(this).val();\n                            if(val){\n                                $('li',optionlist).hide();\n                                $('li a:contains('+escapeJquery(val)+')',optionlist).parent().show();\n                                $('li a',optionlist).each(function(){\n                                    if(0 < $(this).attr('value').indexOf(val)){\n                                        $(this).parent().show();\n                                    }\n                                });\n                            }else{\n                                $('li',optionlist).show();\n                            }\n                            $('li.disabled',optionlist).hide();\n                        }).click(function(){\n                            return false;\n                        }).val('');\n                        $('li',optionlist).show();\n                        $('li.disabled',optionlist).hide();\n                        killAllBox(box.attr(\"id\"));\n                        $(document).click(killAllBox);\n                    } else {\n                        $(document).unbind(\"click\", killAllBox);\n                        killAllBox();\n                    }\n                    return false;\n                });\n                $(\"#op_\" + box.attr(\"id\")).find(\" li\").comboxOption(selector, box);\n            });\n        } ,\n        comboxOption: function(selector, box) {\n            return this.each(function() {\n                $(\">a\", this).click(function() {\n                    var $this = $(this);\n                    $this.parent().parent().find(\".selected\").removeClass(\"selected\");\n                    $this.addClass(\"selected\");\n                    selector.text($this.text());\n                    var $input = $(\"select\", box);\n                    if ($input.val() != $this.attr(\"value\") ) {\n                        $(\"select\", box).val($this.attr(\"value\")).trigger(\"change\");\n                    }\n                });\n            });\n        } ,\n        combox: function() {\n            /* \u6e05\u7406\u4e0b\u62c9\u5c42 */\n            var _selectBox = [ ];\n            $.each(allSelectBox, function(i) {\n                if ($(\"#\" + allSelectBox[i])[0] ) {\n                    _selectBox.push(allSelectBox[i]);\n                } else {\n                    $(\"#op_\" + allSelectBox[i]).remove();\n                }\n            });\n            allSelectBox = _selectBox;\n            return this.each(function(i) {\n                var $this = $(this).removeClass(\"combox\");\n                var name = $this.attr(\"name\");\n                var value = $this.val();\n                var label = '';\n                if( \"undefined\" !== typeof value  && value){\n                    label = $(\"option[value=\" + escapeJquery(value) + \"]\", $this).text();\n                }else if(\"\" == value){\n                    label = $(\"option[value='']\", $this).text();\n                }\n                var ref = $this.attr(\"ref\");\n                var refUrl = $this.attr(\"refUrl\") || \"\";\n                var cid = $this.attr(\"id\") || Math.round(Math.random() * 10000000);\n                var select = '<div class=\"combox\"><div id=\"combox_' + cid + '\" class=\"select\"' + ( ref ? ' ref=\"' + ref + '\"': '' ) + '>';\n                select += '<a href=\"javascript:\" class=\"' + $this.attr(\"class\") + '\" name=\"' + name + '\" value=\"' + value + '\">' + label + '</a></div></div>';\n                var options = '<div class=\"comboxop\" id=\"op_combox_' + cid + '\"><div class=\"search\"><input type=\"text\" class=\"textInput\"/></div><ul>';\n                $(\"option\", $this).each(function() {\n                    var option = $(this);\n                    options += \"<li><a class=\\\"\" + ( value == option[0].value ? \"selected\": \"\" ) + \"\\\" href=\\\"#\\\" value=\\\"\" + option[0].value + \"\\\">\" + option[0].text\n                            + \"</a></li>\";\n                });\n                options += \"</ul></div>\";\n                $(\"body\").append(options);\n                $this.after(select);\n                $(\"div.select\", $this.next()).comboxSelect().append($this);\n                if (ref && refUrl ) {\n                    $this.unbind(\"change\", _onchange).bind(\"change\", {\n                        $this: $this\n                    }, _onchange);\n                }\n            });\n        }\n    });\n} )(jQuery);\n/**\n * jQuery ajax history plugins\n * @author \u5f20\u6167\u534e z@j-ui.com\n */\n\n\n(function($){\n\n    $.extend({\n\n        History: {\n            _hash: new Array(),\n            _currentHash: \"\",\n            _callback: undefined,\n            init: function(callback){\n                $.History._callback = callback;\n                var current_hash = location.hash.replace(/\\?.*$/, '');\n                $.History._currentHash = current_hash;\n\n                if (!$.support.leadingWhitespace) {\n                    if ($.History._currentHash == '') {\n                        $.History._currentHash = '#';\n                    }\n                    $(\"body\").append('<iframe id=\"jQuery_history\" style=\"display: none;\" src=\"about:blank\"></iframe>');\n                    var ihistory = $(\"#jQuery_history\")[0];\n                    var iframe = ihistory.contentDocument || ihistory.contentWindow.document;\n                    iframe.open();\n                    iframe.close();\n                    iframe.location.hash = current_hash;\n                }\n                if ($.isFunction(this._callback))\n                    $.History._callback(current_hash.skipChar(\"#\"));\n                setInterval($.History._historyCheck, 100);\n            },\n            _historyCheck: function(){\n                var current_hash = \"\";\n                if (!$.support.leadingWhitespace) {\n                    var ihistory = $(\"#jQuery_history\")[0];\n                    var iframe = ihistory.contentWindow;\n                    current_hash = iframe.location.hash.skipChar(\"#\").replace(/\\?.*$/, '');\n                } else {\n                    current_hash = location.hash.skipChar('#').replace(/\\?.*$/, '');\n                }\n                if (current_hash != $.History._currentHash) {\n                    $.History._currentHash = current_hash;\n                    $.History.loadHistory(current_hash);\n                }\n\n            },\n            addHistory: function(hash, fun, args){\n                $.History._currentHash = hash;\n                var history = [hash, fun, args];\n                $.History._hash.push(history);\n                if (!$.support.leadingWhitespace) {\n                    var ihistory = $(\"#jQuery_history\")[0];\n                    var iframe = ihistory.contentDocument || ihistory.contentWindow.document;\n                    iframe.open();\n                    iframe.close();\n                    iframe.location.hash = hash.replace(/\\?.*$/, '');\n                    location.hash = hash.replace(/\\?.*$/, '');\n                } else {\n                    location.hash = hash.replace(/\\?.*$/, '');\n                }\n            },\n            loadHistory: function(hash){\n                if (!$.support.leadingWhitespace) {\n                    location.hash = hash;\n                }\n                for (var i = 0; i < $.History._hash.length; i += 1) {\n                    if ($.History._hash[i][0] == hash) {\n                        $.History._hash[i][1]($.History._hash[i][2]);\n                        return;\n                    }\n                }\n            }\n        }\n    });\n})(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.printBox = function(rel) {\n        var _printBoxId = 'printBox';\n        var $contentBox = rel ? $('#' + rel): $(\"body\"), $printBox = $('#' + _printBoxId);\n        if ($printBox.size() == 0 ) {\n            $printBox = $('<div id=\"' + _printBoxId + '\"></div>').appendTo(\"body\");\n        }\n        $printBox.html($contentBox.html()).find(\"[layoutH]\").height(\"auto\");\n        window.print();\n    }\n} )(jQuery);"], "fixing_code": ["/**\n * @author ZhangHuihua@msn.com\n */\nvar DWZ = {\n    version: \"1.5.0\" ,\n    regPlugins: [ ], // [function($parent){} ...]\n    // sbar: show sidebar\n    keyCode: {\n        ENTER: 13, ESC: 27, END: 35, HOME: 36, SHIFT: 16, TAB: 9, LEFT: 37, RIGHT: 39, UP: 38, DOWN: 40, DELETE: 46, BACKSPACE: 8, CHAR_S: 83\n    } ,\n    eventType: {\n        pageClear: \"pageClear\", // \u7528\u4e8e\u91cd\u65b0ajaxLoad\u3001\u5173\u95ednabTab, \u5173\u95eddialog\u65f6\uff0c\u53bb\u9664xheditor\u7b49\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u8d44\u6e90\n        resizeGrid: \"resizeGrid\", // \u7528\u4e8e\u7a97\u53e3\u6216dialog\u5927\u5c0f\u8c03\u6574\n        initEnvAfter: \"initEnvAfter\" // initEnv\u5b8c\u6210\u89e6\u53d1\n    } ,\n    isOverAxis: function(x, reference, size) {\n        // Determines when x coordinate is over \"b\" element axis\n        return ( x > reference ) && ( x < ( reference + size ) );\n    } ,\n    isOver: function(y, x, top, left, height, width) {\n        // Determines when x, y coordinates is over \"b\" element\n        return this.isOverAxis(y, top, height) && this.isOverAxis(x, left, width);\n    } ,\n\n    pageInfo: {\n        pageNum: \"pageNum\", numPerPage: \"numPerPage\", orderField: \"orderField\", orderDirection: \"orderDirection\"\n    } ,\n    statusCode: {\n        ok: 200, okAndRefresh: 201, error: 300, timeout: 301\n    } ,\n    keys: {\n        statusCode: \"statusCode\", message: \"message\"\n    } ,\n    ui: {\n        sbar: true\n    } ,\n    frag: {}, // page fragment\n    _msg: {}, // alert message\n    _set: {\n        loginUrl: \"\", // session timeout\n        loginTitle: \"\", // if loginTitle open a login dialog\n        debug: false\n    } ,\n    msg: function(key, args) {\n        var _format = function(str, args) {\n            args = args || [ ];\n            var result = str || \"\";\n            for (var i = 0; i < args.length; i++) {\n                result = result.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), args[i]);\n            }\n            return result;\n        }\n        return _format(this._msg[key], args);\n    } ,\n    debug: function(msg) {\n        if (this._set.debug ) {\n            if (typeof ( console ) != \"undefined\" ) {\n                console.log(msg);\n            } else {\n                alert(msg);\n            }\n        }\n    } ,\n    loadLogin: function() {\n        if ($.pdialog && DWZ._set.loginTitle ) {\n            $.pdialog.open(DWZ._set.loginUrl, \"login\", DWZ._set.loginTitle, {\n                mask: true, width: 520, height: 260\n            });\n        } else {\n            window.location = DWZ._set.loginUrl;\n        }\n    } ,\n    instances : {},\n    /*\n     * json to string\n     */\n    obj2str: function(o) {\n        var r = [ ];\n        if (typeof o == \"string\" ) {\n            return \"\\\"\" + o.replace(/([\\'\\\"\\\\])/g, \"\\\\$1\").replace(/(\\n)/g, \"\\\\n\").replace(/(\\r)/g, \"\\\\r\").replace(/(\\t)/g, \"\\\\t\") + \"\\\"\";\n        }\n        if (typeof o == \"object\" ) {\n            if (!o.sort ) {\n                for ( var i in o)\n                    r.push(i + \":\" + DWZ.obj2str(o[i]));\n                if (!!document.all && !/^\\n?function\\s*toString\\(\\)\\s*\\{\\n?\\s*\\[native code\\]\\n?\\s*\\}\\n?\\s*$/.test(o.toString) ) {\n                    r.push(\"toString:\" + o.toString.toString());\n                }\n                r = \"{\" + r.join() + \"}\"\n            } else {\n                for (var i = 0; i < o.length; i++) {\n                    r.push(DWZ.obj2str(o[i]));\n                }\n                r = \"[\" + r.join() + \"]\"\n            }\n            return r;\n        }\n        return o.toString();\n    } ,\n    jsonEval: function(data) {\n        try {\n            if ($.type(data) == 'string' ) {\n                return eval('(' + data + ')');\n            } else {\n                return data;\n            }\n        } catch (e) {\n            return {};\n        }\n    } ,\n    ajaxError: function(xhr, ajaxOptions, thrownError) {\n        if (alertMsg ) {\n            if('undefined' == typeof thrownError||\"\" ==thrownError){\n                var exception = $($.parseHTML(xhr.responseText, document, true)).find('#divexception textarea');\n                if(exception.length){\n                    thrownError=exception.val();\n                }\n            }\n            alertMsg.error(\"<div>Http status: \" + xhr.status + \" \" + xhr.statusText + \"</div>\" + \"<div>ajaxOptions: \" + ajaxOptions + \"</div>\" + \"<div>thrownError: \" + thrownError\n                    + \"</div>\");\n        } else {\n            alert(\"Http status: \" + xhr.status + \" \" + xhr.statusText + \"\\najaxOptions: \" + ajaxOptions + \"\\nthrownError:\" + thrownError + \"\\n\" + xhr.responseText);\n        }\n    },\n    ajaxDone: function(json) {\n        if (json[DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n            if (json[DWZ.keys.message] && alertMsg ) {\n                alertMsg.error(json[DWZ.keys.message]);\n            }\n        } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n            if (alertMsg ){\n                alertMsg.error(json[DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                    okCall: DWZ.loadLogin\n                });\n            } else {\n                DWZ.loadLogin();\n            }\n        } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.okAndRefresh ){\n            if (json[DWZ.keys.message] && alertMsg ){\n                alertMsg.correct(json[DWZ.keys.message],{\n                    callback:function(){\n                        window.location.reload();\n                    }\n                });\n            }\n        } else {\n            if (json[DWZ.keys.message] && alertMsg ){\n                alertMsg.correct(json[DWZ.keys.message]);\n            }\n        }\n    },\n    init: function(pageFrag, options) {\n        var op = $.extend({\n            loginUrl: \"login.html\", loginTitle: null, callback: null, debug: false, statusCode: {}\n        }, options);\n        this._set.loginUrl = op.loginUrl;\n        this._set.loginTitle = op.loginTitle;\n        this._set.debug = op.debug;\n        $.extend(DWZ.statusCode, op.statusCode);\n        $.extend(DWZ.keys, op.keys);\n        $.extend(DWZ.pageInfo, op.pageInfo);\n        $.ajax({\n            type: 'GET', url: pageFrag, dataType: 'html', cache: false, error: function(xhr) {\n                alert(xhr.statusText);\n            }, success: function(html) {\n                $($.parseHTML(html, document, true)).each(function() {\n                    var pageId = $(this).attr(\"id\");\n                    if (pageId ) {\n                        DWZ.frag[pageId] = $(this).text();\n                    }\n                });\n                if ($.isFunction(op.callback) ) {\n                    op.callback();\n                }\n            }\n        });\n        var _doc = $(document);\n        if (!_doc.isBind(DWZ.eventType.pageClear) ) {\n            _doc.bind(DWZ.eventType.pageClear, function(event) {\n                var box = event.target;\n                $(\"textarea.editor\", $(box)).each(function() {\n                    if('ckeditor'==$(this).attr('editorType')) {\n                        CKEDITOR.instances[$(this).data(\"id\")].destroy();\n                    } else if(\"kindeditor\"==$(this).attr(\"editorType\")) {\n                        KindEditor.remove('#'+$(this).data(\"id\"));\n                    } else {\n                        UE.instants[$(this).data(\"id\")].destroy();\n                    }\n                });\n                $(\"textarea.code\", $(box)).each(function() {\n                    delete DWZ.instances[$(this).data(\"id\")];\n                });\n                $(\".image-editor\", $(box)).each(function() {\n                    DWZ.instances[$(this).data(\"id\")].destroy();\n                    delete DWZ.instances[$(this).data(\"id\")];\n                });\n                $('[close-url]',$(box)).each(function (){\n                    $.getJSON($(this).attr(\"close-url\"), function(data) {});\n                });\n            });\n        }\n    }\n};\n\n( function($) {\n    // DWZ set regional\n    $.setRegional = function(key, value) {\n        if (!$.regional ) {\n            $.regional = {};\n        }\n        $.regional[key] = value;\n    };\n\n    // DWZ set msg\n    $.setMessage = function(key, value) {\n        DWZ._msg[key] = value;\n    };\n\n    $.fn.extend({\n        /**\n         * @param {Object}\n         *            op: {type:GET/POST, url:ajax\u8bf7\u6c42\u5730\u5740, data:ajax\u8bf7\u6c42\u53c2\u6570\u5217\u8868,\n         *            callback:\u56de\u8c03\u51fd\u6570 }\n         */\n        ajaxUrl: function(op) {\n            var $this = $(this);\n            $this.trigger(DWZ.eventType.pageClear);\n            $.ajax({\n                type: op.type || 'GET', url: op.url, data: op.data, cache: false, success: function(response) {\n                    var json = DWZ.jsonEval(response);\n                    if (json[DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n                        if (json[DWZ.keys.message] ) {\n                            alertMsg.error(json[DWZ.keys.message]);\n                        }\n                    } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                        $this.html(response);\n                        if ($.pdialog ) {\n                            $.pdialog.checkTimeout();\n                        }\n                        if (navTab ) {\n                            navTab.checkTimeout();\n                        }\n                        alertMsg.error(json[DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                            okCall: function() {\n                                DWZ.loadLogin();\n                            }\n                        });\n                    } else {\n                        $this.html(response).initUI();\n                        if ($.isFunction(op.callback) ) {\n                            op.callback(response);\n                        }\n                    }\n                },\n                error: DWZ.ajaxError, statusCode: {\n                    503: function(xhr, ajaxOptions, thrownError) {\n                        alert(DWZ.msg(\"statusCode_503\") || thrownError);\n                    }\n                }\n            });\n        },\n        loadUrl: function(url, data, callback) {\n            $(this).ajaxUrl({\n                url: url, data: data, callback: callback\n            });\n        },\n        initUI: function() {\n            return this.each(function() {\n                if ($.isFunction(initUI) ) {\n                    initUI(this);\n                }\n            });\n        },\n        /**\n         * adjust component inner reference box height\n         *\n         * @param {Object}\n         *            refBox: reference box jQuery Obj\n         */\n        layoutH: function($refBox) {\n            return this.each(function() {\n                var $this = $(this);\n                if (!$refBox ) {\n                    $refBox = $this.parents(\"div.layoutBox:first\");\n                }\n                var iRefH = $refBox.height();\n\n                var iLayoutH = 0;\n                if ($this.parents('.rightPageContent').length != 0){\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.rightPageContent'));\n                }else if ($this.parents('.pageFormContent').length != 0){\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.pageFormContent')) + 30;\n                }else if ($this.parents('.page').length != 0 ) {\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.page'));\n                }else if ($this.parents('.dialogContent').length != 0){\n                    iLayoutH = $this.getSiblingsElemsH($this.parents('.dialogContent'));\n                }\n\n                var iH = iRefH - iLayoutH > 50 ? iRefH - iLayoutH: 50;\n                if ($this.isTag(\"table\") ) {\n                    $this.removeAttr(\"layoutH\").wrap('<div layoutH=\"' + iLayoutH + '\" style=\"overflow:auto;height:' + iH + 'px\"></div>');\n                } else {\n                    $this.outerHeight(iH).css(\"overflow\", \"auto\");\n                }\n            });\n        },\n        /**\n         * \u83b7\u53d6page\u4e2d\u7684\u5176\u4ed6\u5143\u7d20\u7684\u603b\u9ad8\u5ea6\n         */\n        getSiblingsElemsH: function($container) {\n            var height = 0;\n            var $page = $container;\n            var headerH = this.getElemsH($page, '.pageHeader');\n            var formBarH = this.getElemsH($page, '.formBar');\n            var contentTitleH = this.getElemsH($page, '.contentTitle');\n            var gridHeaderH = this.getElemsH($page, '.gridHeader');\n            var tabsHeaderH = this.getElemsH($page, '.tabsHeader');\n            var pageBarH = this.getElemsH($page, '.pageBar.panelBar');\n            var panelBarH = this.getElemsH($page, '.panelBar:not(.pageBar)');\n            height = headerH + pageBarH + gridHeaderH + panelBarH + formBarH + tabsHeaderH + contentTitleH;\n            return height;\n        },\n        /**\n         * \u83b7\u53d6\u5143\u7d20\u9ad8\u5ea6\n         * @param $container \u603b\u5bb9\u5668\n         * @param elem    \u5f53\u524d\u5143\u7d20\u7684jquery\u9009\u62e9\u7684\u5b57\u7b26\u4e32\n         */\n        getElemsH: function($container, elem){\n            var h = 0;\n            var $elem = $container.find(elem);\n            var isSilbinsElem = true;\n            if($elem.length != 0){\n                if(this.find(elem).length == 0){\n                    var $silbingsElems = this.siblings();\n                    for(var i=0;i<$silbingsElems.length;i++){\n                        if($silbingsElems.eq(i).find(elem).length != 0){\n                            isSilbinsElem = false;\n                            break;\n                        }\n                    }\n                    if(isSilbinsElem){\n                        h = $elem.outerHeight(true);\n                    }\n                }\n            }\n            return h;\n        },\n        inputAlert: function() {\n            return this.each(function() {\n                var $this = $(this);\n                function getAltBox() {\n                    return $this.parent().find(\"label.alt\");\n                }\n                function altBoxCss(opacity) {\n                    var position = $this.position();\n                    return {\n                        width: $this.width(), top: position.top + 'px', left: position.left + 'px', opacity: opacity || 1\n                    };\n                }\n                if (getAltBox().size() < 1 ) {\n                    if (!$this.attr(\"id\") ) {\n                        $this.attr(\"id\", $this.attr(\"name\") + \"_\" + Math.round(Math.random() * 10000));\n                    }\n                    var $label = $('<label class=\"alt\" for=\"' + $this.attr(\"id\") + '\">' + $this.attr(\"alt\") + '</label>').appendTo($this.parent());\n                    $label.css(altBoxCss(0.6));\n                    if ($this.val() ) {\n                        $label.hide();\n                    }\n                }\n                $this.focus(function() {\n                    getAltBox().css(altBoxCss(0.3));\n                }).blur(function() {\n                    if (!$(this).val() ) {\n                        getAltBox().show().css(\"opacity\", 1);\n                    }\n                }).keydown(function() {\n                    getAltBox().hide();\n                });\n            });\n        },\n        isTag: function(tn) {\n            if (!tn || undefined == $(this)[0] ) {\n                return false;\n            }\n            return $(this)[0].tagName.toLowerCase() == tn ? true: false;\n        },\n        /**\n         * \u5224\u65ad\u5f53\u524d\u5143\u7d20\u662f\u5426\u5df2\u7ecf\u7ed1\u5b9a\u67d0\u4e2a\u4e8b\u4ef6\n         *\n         * @param {Object}\n         *            type\n         */\n        isBind: function(type) {\n            var _events = $(this).data(\"events\");\n            return _events && type && _events[type];\n        },\n        /**\n         * \u8f93\u51fafirebug\u65e5\u5fd7\n         *\n         * @param {Object}\n         *            msg\n         */\n        log: function(msg) {\n            return this.each(function() {\n                if (console ) {\n                    console.log(\"%s: %o\", msg, this);\n                }\n            });\n        }\n    });\n\n    /**\n     * \u6269\u5c55String\u65b9\u6cd5\n     */\n    $.extend(String.prototype, {\n        isPositiveInteger: function() {\n            return ( new RegExp(/^[1-9]\\d*$/).test(this) );\n        },\n        isInteger: function() {\n            return (new RegExp(/^\\d+$/).test(this));\n        },\n        isNumber: function(value, element) {\n            return (new RegExp(/^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/).test(this));\n        },\n        trim: function() {\n            return this.replace(/(^\\s*)|(\\s*$)|\\r|\\n/g, \"\");\n        },\n        startsWith: function(pattern) {\n            return this.indexOf(pattern) === 0;\n        },\n        endsWith: function(pattern) {\n            var d = this.length - pattern.length;\n            return d >= 0 && this.lastIndexOf(pattern) === d;\n        },\n        replaceSuffix: function(index) {\n            return this.replace(/\\[[0-9]+\\]/, \"[\" + index + \"]\").replace(\"#index#\", index);\n        },\n        trans: function() {\n            return this.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&quot;/g, '\"');\n        },\n        encodeTXT: function() {\n            return (this).replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\").replaceAll(\" \", \"&nbsp;\");\n        },\n        replaceAll: function(os, ns) {\n            return this.replace(new RegExp(os, \"gm\"), ns);\n        },\n        replaceTm: function(data) {\n            if (!data) {\n                return this;\n            }\n            return this.replace(RegExp(\"({[A-Za-z_]+[A-Za-z0-9_]*})\", \"g\"), function($1) {\n                return data[$1.replace(/[{}]+/g, \"\")];\n            })\n        },\n        replaceTmById: function(_box) {\n            var $parent = _box || $(document);\n            return this.replace(RegExp(\"({[A-Za-z_]+[A-Za-z0-9_]*})\", \"g\"), function($1) {\n                var $input = $parent.find(\"#\" + $1.replace(/[{}]+/g, \"\"));\n                return $input.val() ? $input.val(): $1;\n            });\n        },\n        isFinishedTm: function() {\n            return ! ( new RegExp(\"{[A-Za-z_]+[A-Za-z0-9_]*}\").test(this) );\n        },\n        skipChar: function(ch) {\n            if (!this || this.length === 0) {\n                return \"\";\n            }\n            if (this.charAt(0) === ch) {\n                return this.substring(1).skipChar(ch);\n            }\n            return this;\n        },\n        isValidPwd: function() {\n            return (new RegExp(/^([_]|[a-zA-Z0-9]){6,32}$/).test(this));\n        },\n        isValidMail: function() {\n            return (new RegExp(/^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/).test(this.trim()));\n        },\n        isSpaces: function() {\n            for (var i = 0; i < this.length; i += 1) {\n                var ch = this.charAt(i);\n                if (ch != \" \" && ch != \"\\n\" && ch != \"\\t\" && ch != \"\\r\") {\n                    return fals;\n                }\n            }\n            return true;\n        },\n        isPhone: function() {\n            return (new RegExp(/(^([0-9]{3,4}[-])?\\d{3,8}(-\\d{1,6})?$)|(^\\([0-9]{3,4}\\)\\d{3,8}(\\(\\d{1,6}\\))?$)|(^\\d{3,8}$)/).test(this));\n        },\n        isUrl: function() {\n            return ( new RegExp(/^([a-zA-z]+:)?\\/\\/([a-zA-Z0-9\\-\\.]+)([-\\w .\\/?%&=:]*)$/).test(this) );\n        },\n        isExternalUrl: function() {\n            var domain = document.domain;\n            if(\"\" == domain){\n                domain = \"localhost\";\n            }\n            return this.isUrl() && this.indexOf(\"//\" + domain) == -1;\n        }\n    });\n} )(jQuery);\n\n/**\n * You can use this map like this: var myMap = new Map();\n * myMap.put(\"key\",\"value\"); var key = myMap.get(\"key\"); myMap.remove(\"key\");\n */\nfunction Map() {\n    this.elements = new Array();\n    this.size = function() {\n        return this.elements.length;\n    }\n    this.isEmpty = function() {\n        return ( this.elements.length < 1 );\n    }\n    this.clear = function() {\n        this.elements = new Array();\n    }\n    this.put = function(_key, _value) {\n        this.remove(_key);\n        this.elements.push({\n            key: _key, value: _value\n        });\n    }\n    this.remove = function(_key) {\n        try {\n            for (i = 0; i < this.elements.length; i++) {\n                if (this.elements[i].key == _key ) {\n                    this.elements.splice(i, 1);\n                    return true;\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n        return false;\n    }\n    this.get = function(_key) {\n        try {\n            for (i = 0; i < this.elements.length; i++) {\n                if (this.elements[i].key == _key ) {\n                    return this.elements[i].value;\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    }\n    this.element = function(_index) {\n        if (_index < 0 || _index >= this.elements.length ) {\n            return null;\n        }\n        return this.elements[_index];\n    }\n    this.containsKey = function(_key) {\n        try {\n            for (i = 0; i < this.elements.length; i++) {\n                if (this.elements[i].key == _key ) {\n                    return true;\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n        return false;\n    }\n    this.values = function() {\n        var arr = new Array();\n        for (i = 0; i < this.elements.length; i++) {\n            arr.push(this.elements[i].value);\n        }\n        return arr;\n    }\n    this.keys = function() {\n        var arr = new Array();\n        for (i = 0; i < this.elements.length; i++) {\n            arr.push(this.elements[i].key);\n        }\n        return arr;\n    }\n}\n/**\n * @author ZhangHuihua@msn.com\n *         ---------------------------------------------------------- These\n *         functions use the same 'format' strings as the\n *         java.text.SimpleDateFormat class, with minor exceptions. The format\n *         string consists of the following abbreviations: Field | Full Form |\n *         Short Form -------------+--------------------+-----------------------\n *         Year | yyyy (4 digits) | yy (2 digits), y (2 or 4 digits) Month | MMM\n *         (name or abbr.)| MM (2 digits), M (1 or 2 digits) | NNN (abbr.) | Day\n *         of Month | dd (2 digits) | d (1 or 2 digits) Day of Week | EE (name) |\n *         E (abbr) Hour (1-12) | hh (2 digits) | h (1 or 2 digits) Hour (0-23) |\n *         HH (2 digits) | H (1 or 2 digits) Hour (0-11) | KK (2 digits) | K (1\n *         or 2 digits) Hour (1-24) | kk (2 digits) | k (1 or 2 digits) Minute |\n *         mm (2 digits) | m (1 or 2 digits) Second | ss (2 digits) | s (1 or 2\n *         digits) AM/PM | a | NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM,\n *         not mm! Examples: \"MMM d, y\" matches: January 01, 2000 Dec 1, 1970\n *         Nov 20, 00 \"M/d/yy\" matches: 01/20/00 9/2/00 \"MMM dd, yyyy hh:mm:ssa\"\n *         matches: \"January 01, 2000 12:30:45AM\"\n *         ----------------------------------------------------------\n */\n( function() {\n    var MONTH_NAMES = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'Jan', 'Feb', 'Mar',\n        'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');\n    var DAY_NAMES = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat');\n    function LZ(x) {\n        return ( x < 0 || x > 9 ? \"\": \"0\" ) + x\n    }\n\n    /**\n     * formatDate (date_object, format) Returns a date in the output format\n     * specified. The format string uses the same abbreviations as in\n     * parseDate()\n     *\n     * @param {Object}\n     *            date\n     * @param {Object}\n     *            format\n     */\n    function formatDate(date, format) {\n        format = format + \"\";\n        var result = \"\";\n        var i_format = 0;\n        var c = \"\";\n        var token = \"\";\n        var y = date.getYear() + \"\";\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var E = date.getDay();\n        var H = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n        var yyyy, yy, MMM, MM, dd, hh, h, mm, ss, ampm, HH, H, KK, K, kk, k;\n        // Convert real date parts into formatted versions\n        var value = {};\n        if (y.length < 4 ) {\n            y = \"\" + ( y - 0 + 1900 );\n        }\n        value.y = \"\" + y;\n        value.yyyy = y;\n        value.yy = y.substring(2, 4);\n        value.M = M;\n        value.MM = LZ(M);\n        value.MMM = MONTH_NAMES[M - 1];\n        value.NNN = MONTH_NAMES[M + 11];\n        value.d = d;\n        value.dd = LZ(d);\n        value.E = DAY_NAMES[E + 7];\n        value.EE = DAY_NAMES[E];\n        value.H = H;\n        value.HH = LZ(H);\n        if (H == 0 ) {\n            value.h = 12;\n        } else {\n            if (H > 12) {\n                value.h = H - 12;\n            } else {\n                value.h = H;\n            }\n\n        }\n        value.hh = LZ(value.h);\n        if (H > 11 ) {\n            value.K = H - 12;\n        } else {\n            value.K = H;\n        }\n        value.k = H + 1;\n        value.KK = LZ(value.K);\n        value.kk = LZ(value.k);\n        if (H > 11 ) {\n            value.a = \"PM\";\n        } else {\n            value.a = \"AM\";\n        }\n        value.m = m;\n        value.mm = LZ(m);\n        value.s = s;\n        value.ss = LZ(s);\n        while (i_format < format.length) {\n            c = format.charAt(i_format);\n            token = \"\";\n            while ( ( format.charAt(i_format) == c ) && ( i_format < format.length )) {\n                token += format.charAt(i_format++);\n            }\n            if (value[token] != null ) {\n                result += value[token];\n            } else {\n                result += token;\n            }\n        }\n        return result;\n    }\n    function _isInteger(val) {\n        return ( new RegExp(/^\\d+$/).test(val) );\n    }\n    function _getInt(str, i, minlength, maxlength) {\n        for (var x = maxlength; x >= minlength; x--) {\n            var token = str.substring(i, i + x);\n            if (token.length < minlength ) {\n                return null;\n            }\n            if (_isInteger(token) ) {\n                return token;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * parseDate( date_string, format_string ) This function takes a date string\n     * and a format string. It matches If the date string matches the format\n     * string, it returns the date. If it does not match, it returns 0.\n     *\n     * @param {Object}\n     *            val\n     * @param {Object}\n     *            format\n     */\n    function parseDate(val, format) {\n        val = val + \"\";\n        format = format + \"\";\n        var i_val = 0;\n        var i_format = 0;\n        var c = \"\";\n        var token = \"\";\n        var token2 = \"\";\n        var x, y;\n        var now = new Date(1970, 0, 1);\n        var year = now.getYear();\n        var month = now.getMonth() + 1;\n        var date = 1;\n        var hh = now.getHours();\n        var mm = now.getMinutes();\n        var ss = now.getSeconds();\n        var ampm = \"\";\n        while (i_format < format.length) {\n            // Get next token from format string\n            c = format.charAt(i_format);\n            token = \"\";\n            while ( ( format.charAt(i_format) == c ) && ( i_format < format.length )) {\n                token += format.charAt(i_format++);\n            }\n            // Extract contents of value based on format token\n            if (token == \"yyyy\" || token == \"yy\" || token == \"y\" ) {\n                if (token == \"yyyy\" ) {\n                    x = 4;\n                    y = 4;\n                }\n                if (token == \"yy\" ) {\n                    x = 2;\n                    y = 2;\n                }\n                if (token == \"y\" ) {\n                    x = 2;\n                    y = 4;\n                }\n                year = _getInt(val, i_val, x, y);\n                if (year == null ) {\n                    return 0;\n                }\n                i_val += year.length;\n                if (year.length == 2 ) {\n                    if (year > 70 ) {\n                        year = 1900 + ( year - 0 );\n                    } else {\n                        year = 2000 + ( year - 0 );\n                    }\n                }\n            } else if (token == \"MMM\" || token == \"NNN\" ) {\n                month = 0;\n                for (var i = 0; i < MONTH_NAMES.length; i++) {\n                    var month_name = MONTH_NAMES[i];\n                    if (val.substring(i_val, i_val + month_name.length).toLowerCase() == month_name.toLowerCase() ) {\n                        if (token == \"MMM\" || ( token == \"NNN\" && i > 11 ) ) {\n                            month = i + 1;\n                            if (month > 12 ) {\n                                month -= 12;\n                            }\n                            i_val += month_name.length;\n                            break;\n                        }\n                    }\n                }\n                if ( ( month < 1 ) || ( month > 12 ) ) {\n                    return 0;\n                }\n            } else if (token == \"EE\" || token == \"E\" ) {\n                for (var i = 0; i < DAY_NAMES.length; i++) {\n                    var day_name = DAY_NAMES[i];\n                    if (val.substring(i_val, i_val + day_name.length).toLowerCase() == day_name.toLowerCase() ) {\n                        i_val += day_name.length;\n                        break;\n                    }\n                }\n            } else if (token == \"MM\" || token == \"M\" ) {\n                month = _getInt(val, i_val, token.length, 2);\n                if (month == null || ( month < 1 ) || ( month > 12 ) ) {\n                    return 0;\n                }\n                i_val += month.length;\n            } else if (token == \"dd\" || token == \"d\" ) {\n                date = _getInt(val, i_val, token.length, 2);\n                if (date == null || ( date < 1 ) || ( date > 31 ) ) {\n                    return 0;\n                }\n                i_val += date.length;\n            } else if (token == \"hh\" || token == \"h\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 1 ) || ( hh > 12 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n            } else if (token == \"HH\" || token == \"H\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 0 ) || ( hh > 23 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n            } else if (token == \"KK\" || token == \"K\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 0 ) || ( hh > 11 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n            } else if (token == \"kk\" || token == \"k\" ) {\n                hh = _getInt(val, i_val, token.length, 2);\n                if (hh == null || ( hh < 1 ) || ( hh > 24 ) ) {\n                    return 0;\n                }\n                i_val += hh.length;\n                hh--;\n            } else if (token == \"mm\" || token == \"m\" ) {\n                mm = _getInt(val, i_val, token.length, 2);\n                if (mm == null || ( mm < 0 ) || ( mm > 59 ) ) {\n                    return 0;\n                }\n                i_val += mm.length;\n            } else if (token == \"ss\" || token == \"s\" ) {\n                ss = _getInt(val, i_val, token.length, 2);\n                if (ss == null || ( ss < 0 ) || ( ss > 59 ) ) {\n                    return 0;\n                }\n                i_val += ss.length;\n            } else if (token == \"a\" ) {\n                if (val.substring(i_val, i_val + 2).toLowerCase() == \"am\" ) {\n                    ampm = \"AM\";\n                } else if (val.substring(i_val, i_val + 2).toLowerCase() == \"pm\" ) {\n                    ampm = \"PM\";\n                } else {\n                    return 0;\n                }\n                i_val += 2;\n            } else {\n                if (val.substring(i_val, i_val + token.length) != token ) {\n                    return 0;\n                } else {\n                    i_val += token.length;\n                }\n            }\n        }\n        // If there are any trailing characters left in the value, it doesn't\n        // match\n        if (i_val != val.length ) {\n            return 0;\n        }\n        // Is date valid for month?\n        if (month == 2 ) {\n            // Check for leap year\n            if ( ( ( year % 4 == 0 ) && ( year % 100 != 0 ) ) || ( year % 400 == 0 ) ) { // leap\n                // year\n                if (date > 29 ) {\n                    return 0;\n                }\n            } else {\n                if (date > 28 ) {\n                    return 0;\n                }\n            }\n        }\n        if ( ( month == 4 ) || ( month == 6 ) || ( month == 9 ) || ( month == 11 ) ) {\n            if (date > 30 ) {\n                return 0;\n            }\n        }\n        // Correct hours value\n        if (hh < 12 && ampm == \"PM\" ) {\n            hh = hh - 0 + 12;\n        } else if (hh > 11 && ampm == \"AM\" ) {\n            hh -= 12;\n        }\n        return new Date(year, month - 1, date, hh, mm, ss);\n    }\n    Date.prototype.formatDate = function(dateFmt) {\n        return formatDate(this, dateFmt);\n    };\n    String.prototype.parseDate = function(dateFmt) {\n        if (this.length < dateFmt.length ) {\n            dateFmt = dateFmt.slice(0, this.length);\n        }\n        return parseDate(this, dateFmt);\n    };\n\n    /**\n     * replaceTmEval(\"{1+2}-{2-1}\")\n     */\n    function replaceTmEval(data) {\n        return data.replace(RegExp(\"({[A-Za-z0-9_+-]*})\", \"g\"), function($1) {\n            return eval('(' + $1.replace(/[{}]+/g, \"\") + ')');\n        });\n    }\n    /**\n     * dateFmt:%y-%M-%d %y-%M-{%d+1} ex: new Date().formatDateTm('%y-%M-{%d-1}')\n     * new Date().formatDateTm('2012-1')\n     */\n    Date.prototype.formatDateTm = function(dateFmt) {\n        var y = this.getFullYear();\n        var m = this.getMonth() + 1;\n        var d = this.getDate();\n        var sDate = dateFmt.replaceAll(\"%y\", y).replaceAll(\"%M\", m).replaceAll(\"%d\", d);\n        sDate = replaceTmEval(sDate);\n        var _y = 1970, _m = 0, _d = 1;\n        var aDate = sDate.split(\"-\");\n        if (aDate.length > 0 ) {\n            _y = aDate[0];\n        }\n        if (aDate.length > 1 ) {\n            _m = aDate[1] - 1;\n        }\n        if (aDate.length > 2 ) {\n            _d = aDate[2];\n        }\n        return new Date(_y, _m, _d).formatDate('yyyy-MM-dd');\n    };\n} )();\n\n/**\n * @requires jquery.validate.js\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    if ($.validator ) {\n        $.validator.addMethod(\"alphanumeric\", function(value, element) {\n            return this.optional(element) || /^\\w+$/i.test(value);\n        }, \"Letters, numbers or underscores only please\");\n        $.validator.addMethod(\"lettersonly\", function(value, element) {\n            return this.optional(element) || /^[a-z]+$/i.test(value);\n        }, \"Letters only please\");\n        $.validator.addMethod(\"letterstart\", function(value, element) {\n            return this.optional(element) || /^[a-z]+\\w+$/i.test(value);\n        }, \"Letters, numbers or underscores only  please,The first character must be letter\");\n        $.validator.addMethod(\"phone\", function(value, element) {\n            return this.optional(element) || /^[0-9 \\(\\)]{7,30}$/.test(value);\n        }, \"Please specify a valid phone number\");\n        $.validator.addMethod(\"postcode\", function(value, element) {\n            return this.optional(element) || /^[0-9 A-Za-z]{5,20}$/.test(value);\n        }, \"Please specify a valid postcode\");\n        $.validator.addMethod(\"domain\", function(value, element) {\n            return this.optional(element) || /^((((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|(\\[?((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\]?)|(localhost)|(loopback)|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)*)?$/i.test(value);\n        }, \"Please specify a valid domain\");\n        $.validator.addMethod(\"date\", function(value, element) {\n            value = value.replace(/\\s+/g, \"\");\n            if (String.prototype.parseDate ) {\n                var $input = $(element);\n                var pattern = $input.attr('dateFmt') || 'yyyy-MM-dd';\n                return !$input.val() || $input.val().parseDate(pattern);\n            } else {\n                return this.optional(element) || value.match(/^\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}$/);\n            }\n        }, \"Please enter a valid date.\");\n\n        /*\n         * \u81ea\u5b9a\u4e49js\u51fd\u6570\u9a8c\u8bc1 <input type=\"text\" name=\"xxx\" customvalid=\"xxxFn(element)\"\n         * title=\"xxx\" />\n         */\n        $.validator.addMethod(\"customvalid\", function(value, element, params) {\n            try {\n                return eval('(' + params + ')');\n            } catch (e) {\n                return false;\n            }\n        }, \"Please fix this field.\");\n        $.validator.addClassRules({\n            date: {\n                date: true\n            }, alphanumeric: {\n                alphanumeric: true\n            }, lettersonly: {\n                lettersonly: true\n            }, phone: {\n                phone: true\n            }, postcode: {\n                postcode: true\n            }\n        });\n        $.validator.setDefaults({\n            errorElement: \"span\"\n        });\n        $.validator.autoCreateRanges = true;\n    }\n\n} )(jQuery);\n/**\n * @author Roger Wu\n * @version 1.0\n */\n( function($) {\n    $.fn.cssv = function(pre) {\n        var cssPre = $(this).css(pre);\n        return cssPre.substring(0, cssPre.indexOf(\"px\")) * 1;\n    };\n    $.fn.jBar = function(options) {\n        var op = $.extend({\n            container: \"#navTab\", toggleBut: \".toggleCollapse\", sideBar: \"#sidebar\", sideBar2: \"#sidebar_s\", splitBar: \"#splitBar\",\n            splitBar2: \"#splitBarProxy\", iconClass: \"icon-chevron-sign-right\"\n        }, options);\n        return this.each(function() {\n            var jbar = this;\n            var sbar = $(op.sideBar2, jbar);\n            var bar = $(op.sideBar, jbar);\n            $(op.toggleBut).click(function() {\n                if($(op.splitBar).is(':visible')){\n                    DWZ.ui.sbar = false;\n                    $('.icon',op.toggleBut).addClass(op.iconClass);\n                    $(op.splitBar).hide();\n                    var sbarwidth = sbar.cssv(\"left\") + sbar.outerWidth();\n                    var barleft = sbarwidth - bar.outerWidth();\n                    var cleft = $(op.container).cssv(\"margin-left\") - ( bar.outerWidth() - sbar.outerWidth() );\n                    var cwidth = bar.outerWidth() - sbar.outerWidth() + $(op.container).outerWidth();\n                    $(op.container).animate({\n                        'margin-left': cleft, width: cwidth\n                    }, 50, function() {\n                        bar.animate({\n                            left: barleft\n                        }, 50, function() {\n                            bar.hide();\n                            sbar.show().css(\"left\", -50).animate({\n                                left: 0\n                            }, 20);\n                            $(window).trigger(DWZ.eventType.resizeGrid);\n                        });\n                    });\n                    $(sbar).click(function() {\n                        var sbarwidth = sbar.width();\n                        if (bar.is(\":hidden\") ) {\n                            bar.show().animate({\n                                left: sbarwidth,\n                                top: 0\n                            }, 50);\n                            $(op.container).click(_hideBar);\n                        } else {\n                            bar.animate({\n                                left: barleft,\n                                top: 0\n                            }, 50, function() {\n                                bar.hide();\n                            });\n                        }\n                        function _hideBar() {\n                            $(op.container).unbind(\"click\", _hideBar);\n                            if (!DWZ.ui.sbar ) {\n                                bar.animate({\n                                    left: barleft,\n                                    top: 0\n                                }, 50, function() {\n                                    bar.hide();\n                                });\n                            }\n                        }\n                        return false;\n                    });\n                }else{\n                    DWZ.ui.sbar = true;\n                    $('.icon',op.toggleBut).removeClass(op.iconClass);\n                    sbar.animate({\n                        left: -50\n                    }, 20, function() {\n                        bar.show();\n                    });\n                    bar.animate({\n                        left: 0,\n                        top: 0\n                    }, 80, function() {\n                        $(op.splitBar).show();\n                        var cleft = bar.outerWidth();\n                        var cwidth = $(op.container).outerWidth() - ( cleft - $(op.container).cssv(\"margin-left\") );\n                        $(op.container).css({\n                            'margin-left': cleft, width: cwidth\n                        });\n                        $(sbar).unbind('click');\n                        $(window).trigger(DWZ.eventType.resizeGrid);\n                    });\n                }\n                return false;\n            });\n            $(op.splitBar).mousedown(function(event) {\n                $(op.splitBar2).each(function() {\n                    var spbar2 = $(this);\n                    setTimeout(function() {\n                        spbar2.show();\n                    }, 10);\n                    spbar2.css({\n                        visibility: \"visible\", left: $(op.splitBar).css(\"left\")\n                    });\n                    spbar2.jDrag($.extend(options, {\n                        obj: $(\"#sidebar\"), move: \"horizontal\", event: event, stop: function() {\n                            $(this).css(\"visibility\", \"hidden\");\n                            var move = $(this).cssv(\"left\") - $(op.splitBar).cssv(\"left\");\n                            var sbarwidth = bar.outerWidth() + move;\n                            var cleft = $(op.container).cssv(\"margin-left\") + move;\n                            var cwidth = $(op.container).outerWidth() - move - 1;\n                            bar.css(\"width\", sbarwidth);\n                            $(op.splitBar).css(\"left\", $(this).css(\"left\"));\n                            $(op.container).css({\n                                'margin-left': cleft, width: cwidth\n                            });\n                        }\n                    }));\n                    return false;\n                });\n            });\n        });\n    }\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n( function($) {\n    $.fn.jDrag = function(options) {\n        if (typeof options == 'string' ) {\n            if (options == 'destroy' ) {\n                return this.each(function() {\n                    $(this).unbind('mousedown', $.rwdrag.start);\n                    $.data(this, 'pp-rwdrag', null);\n                });\n            }\n        }\n        return this.each(function() {\n            var el = $(this);\n            $.data($.rwdrag, 'pp-rwdrag', {\n                options: $.extend({\n                    el: el, obj: el\n                }, options)\n            });\n            if (options.event ) {\n                $.rwdrag.start(options.event);\n            } else {\n                var select = options.selector;\n                $(select, obj).bind('mousedown', $.rwdrag.start);\n            }\n        });\n    };\n    $.rwdrag = {\n        start: function(e) {\n            document.onselectstart = function(e) {\n                return false\n            };// \u7981\u6b62\u9009\u62e9\n\n            var data = $.data(this, 'pp-rwdrag');\n            var el = data.options.el[0];\n            $.data(el, 'pp-rwdrag', {\n                options: data.options\n            });\n            if (!$.rwdrag.current ) {\n                $.rwdrag.current = {\n                    el: el, oleft: parseInt(el.style.left) || 0, otop: parseInt(el.style.top) || 0, ox: e.pageX || e.screenX, oy: e.pageY || e.screenY\n                };\n                $(document).bind(\"mouseup\", $.rwdrag.stop).bind(\"mousemove\", $.rwdrag.drag);\n            }\n        },\n        drag: function(e) {\n            if (!e ) {\n                var e = window.event;\n            }\n            var current = $.rwdrag.current;\n            var data = $.data(current.el, 'pp-rwdrag');\n            var left = ( current.oleft + ( e.pageX || e.clientX ) - current.ox );\n            var top = ( current.otop + ( e.pageY || e.clientY ) - current.oy );\n            if (top < 1 ) {\n                top = 0;\n            }\n            if (data.options.move == 'horizontal' ) {\n                if ( ( data.options.minW && left >= $(data.options.obj).cssv(\"left\") + data.options.minW )\n                        && ( data.options.maxW && left <= $(data.options.obj).cssv(\"left\") + data.options.maxW ) ) {\n                    current.el.style.left = left + 'px';\n                } else if (data.options.scop ) {\n                    if (data.options.relObj ) {\n                        if ( ( left - parseInt(data.options.relObj.style.left) ) > data.options.cellMinW ) {\n                            current.el.style.left = left + 'px';\n                        }\n                    } else {\n                        current.el.style.left = left + 'px';\n                    }\n                }\n            } else if (data.options.move == 'vertical' ) {\n                current.el.style.top = top + 'px';\n            } else {\n                var selector = data.options.selector ? $(data.options.selector, data.options.obj): $(data.options.obj);\n                if (left >= -selector.outerWidth() * 2 / 3 && top >= 0 && ( left + selector.outerWidth() / 3 < $(window).width() )\n                        && ( top + selector.outerHeight() < $(window).height() ) ) {\n                    current.el.style.left = left + 'px';\n                    current.el.style.top = top + 'px';\n                }\n            }\n            if (data.options.drag ) {\n                data.options.drag.apply(current.el, [ current.el, e ]);\n            }\n            return $.rwdrag.preventEvent(e);\n        }, stop: function(e) {\n            var current = $.rwdrag.current;\n            var data = $.data(current.el, 'pp-rwdrag');\n            $(document).unbind('mousemove', $.rwdrag.drag).unbind('mouseup', $.rwdrag.stop);\n            if (data.options.stop ) {\n                data.options.stop.apply(current.el, [ current.el, e ]);\n            }\n            $.rwdrag.current = null;\n            document.onselectstart = function(e) {\n                return true\n            };// \u542f\u7528\u9009\u62e9\n            return $.rwdrag.preventEvent(e);\n        }, preventEvent: function(e) {\n            if (e.stopPropagation ) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault ) {\n                e.preventDefault();\n            }\n            return false;\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu\n * @version 1.0 added extend property oncheck\n */\n( function($) {\n    $.extend($.fn, {\n        jTree: function(options) {\n            var op = $.extend({\n                checkFn: null, selected: \"selected\", exp: \"expandable\", coll: \"collapsable\", firstExp: \"first_expandable\", firstColl: \"first_collapsable\",\n                lastExp: \"last_expandable\", lastColl: \"last_collapsable\", folderExp: \"folder_expandable\", folderColl: \"folder_collapsable\", endExp: \"end_expandable\",\n                endColl: \"end_collapsable\", file: \"file\", ck: \"checked\", unck: \"unchecked\", async: \"_src\"\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                var cnum = $this.children().length;\n                $(\">li\", $this).each(function() {\n                    var $li = $(this);\n                    var first = $li.prev()[0] ? false: true;\n                    var last = $li.next()[0] ? false: true;\n                    $li.genTree({\n                        root: $this,\n                        icon: $this.hasClass(\"treeFolder\"), ckbox: $this.hasClass(\"treeCheck\") , excludeParent:  $this.hasClass(\"excludeParent\"), options: op, level: 0,\n                        exp: ( cnum > 1 ? ( first ? op.firstExp: ( last ? op.lastExp: op.exp ) ): op.endExp ),\n                        coll: ( cnum > 1 ? ( first ? op.firstColl: ( last ? op.lastColl: op.coll ) ): op.endColl ),\n                        showSub: ( !$this.hasClass(\"collapse\") && ( $this.hasClass(\"expand\") || ( cnum > 1 ? false : true ) ) ),\n                        isLast: ( cnum > 1 ? ( last ? true: false ): true )\n                    });\n                });\n                setTimeout(function() {\n                    if ($this.hasClass(\"treeCheck\") ) {\n                        var checkFn = eval($this.attr(\"oncheck\"));\n                        if (checkFn && $.isFunction(checkFn) ) {\n                            $(\"div.ckbox\", $this).each(function() {\n                                var ckbox = $(this);\n                                ckbox.click(function() {\n                                    var checked = $(ckbox).hasClass(\"checked\");\n                                    var items = [ ];\n                                    if (checked ) {\n                                        var tnode = $(ckbox).parent().parent();\n                                        var boxes = $(\"input\", tnode);\n                                        if (boxes.size() > 1 ) {\n                                            $(boxes).each(function() {\n                                                items[items.length] = {\n                                                    name: $(this).attr(\"name\"), value: $(this).val()\n                                                };\n                                            });\n                                        } else {\n                                            items = {\n                                                name: boxes.attr(\"name\"), value: boxes.val()\n                                            };\n                                        }\n                                    }\n                                    checkFn({\n                                        checked: checked, items: items\n                                    });\n                                    return false;\n                                });\n                            });\n                        }\n                    }\n                    $(\"a\", $this).click(function(event) {\n                        $(\"div.\" + op.selected, $this).removeClass(op.selected);\n                        var parent = $(this).parent().addClass(op.selected);\n                        var $li = $(this).parents(\"li:first\"), sTarget = $li.attr(\"target\");\n                        if (sTarget ) {\n                            if ($(\"#\" + sTarget, $this).size() == 0 ) {\n                                $this.prepend('<input id=\"' + sTarget + '\" type=\"hidden\" />');\n                            }\n                            $(\"#\" + sTarget, $this).val($li.attr(\"rel\"));\n                        }\n                        $(\".ckbox\", parent).trigger(\"click\");\n                        event.stopPropagation();\n                        $(document).trigger(\"click\");\n                        if (!$(this).attr(\"target\") ) {\n                            return false;\n                        }\n                    });\n                }, 1);\n            });\n        },\n        subTree: function(op, level) {\n            return this.each(function() {\n                $(\">li\", this).each(function() {\n                    var $this = $(this);\n                    var isLast = ( $this.next()[0] ? false: true );\n                    $this.genTree({\n                        root: op.root, icon: op.icon, ckbox: op.ckbox, excludeParent: op.excludeParent, exp: isLast ? op.options.lastExp: op.options.exp, coll: isLast ? op.options.lastColl: op.options.coll,\n                        options: op.options, level: level, space: isLast ? null: op.space, showSub: op.showSub, isLast: isLast\n                    });\n                });\n            });\n        },\n        genTree: function(options) {\n            var op = $.extend({\n                root: options.root, icon: options.icon, ckbox: options.ckbox, excludeParent: options.excludeParent, exp: \"\", coll: \"\", showSub: false, level: 0, options: null, isLast: false\n            }, options);\n            return this.each(function() {\n                var node = $(this);\n                var tree = $(\">ul\", node);\n                var parent = node.parent().prev();\n                var checked = 'unchecked';\n                if (op.ckbox && 0 > $(\">.checked\", parent).size() ) {\n                    checked = 'checked';\n                }\n                if (tree.size() > 0 || node.attr(op.options.async)) {\n                    node.children(\":first\").wrap(\"<div></div>\");\n                    $(\">div\", node).prepend(( op.ckbox ? \"<div class='ckbox \" + checked + \"'></div>\": \"\" )\n                            + ( op.icon ? \"<div class='\" + ( ( op.showSub  && !node.attr(op.options.async) )  ? op.options.folderColl: op.options.folderExp ) + \"'></div>\": \"<div class='\" + ( ( op.showSub && !node.attr(op.options.async) ) ? op.coll: op.exp ) + \"'></div>\" ));\n                    if (tree.size() > 0 ) {\n                        op.showSub ? tree.show(): tree.hide();\n                    }\n                    $(\">div>div.\"+op.options.folderColl+\",>div>div.\"+op.options.folderExp+\",>div>a\", node).click(function() {\n                        if(node.attr(op.options.async)){\n                            $.ajax({\n                                type: 'get', url: node.attr(op.options.async), async: false, data: {}, success: function(response){\n                                    node.append(response);\n                                    tree = $(\">ul\", node).hide();\n                                    initLink(tree);\n                                    $(\"a\", tree).click(function(event) {\n                                        $(\"div.\" + op.options.selected, op.root).removeClass(op.options.selected);\n                                        var parent = $(this).parent().addClass(op.options.selected);\n                                        var $li = $(this).parents(\"li:first\"), sTarget = $li.attr(\"target\");\n                                        if (sTarget ) {\n                                            if ($(\"#\" + sTarget, op.root).size() == 0 ) {\n                                                op.root.prepend('<input id=\"' + sTarget + '\" type=\"hidden\" />');\n                                            }\n                                            $(\"#\" + sTarget, op.root).val($li.attr(\"rel\"));\n                                        }\n                                        $(\".ckbox\", parent).trigger(\"click\");\n                                        event.stopPropagation();\n                                        $(document).trigger(\"click\");\n                                        if (!$(this).attr(\"target\") ) {\n                                            return false;\n                                        }\n                                    });\n                                    node.removeAttr(op.options.async);\n                                },error: DWZ.ajaxError\n                            });\n                            if(node.attr(op.options.async) ){\n                                return false;\n                            }\n                        }\n                        var $fnode = $(\">li:first\", tree);\n                        if ($fnode.children(\":first\").isTag('a') ) {\n                            tree.subTree(op, op.level + 1);\n                        }\n                        var isA = $(this).isTag('a');\n                        var $this = $(\">div>div.\"+op.coll+\",>div>div.\"+op.exp, node);\n                        if (!isA || tree.is(\":hidden\") ) {\n                            $this.toggleClass(op.exp).toggleClass(op.coll);\n                            if (op.icon ) {\n                                $(\">div>div:last\", node).toggleClass(op.options.folderExp).toggleClass(op.options.folderColl);\n                            }\n                        }\n                        ( tree.is(\":hidden\") ) ? tree.slideDown(100): ( isA ? \"\": tree.slideUp(100) );\n                        return false;\n                    });\n                    addSpace(op.level, node);\n                    if (op.showSub ) {\n                        tree.subTree(op, op.level + 1);\n                    }\n                } else {\n                    node.children().wrap(\"<div></div>\");\n                    $(\">div\", node).prepend(( op.ckbox ? \"<div class='ckbox \" + checked + \"'></div>\": \"\" )\n                            + ( op.icon ? \"<div class='\"+op.options.file+\"'></div>\": \"<div class='node'></div>\" ));\n                    if(op.icon ) {\n                        $(\">div>div.\"+op.options.file, node).click(function() {\n                            $(this).next().click();\n                            return false;\n                        });\n                    }\n                    addSpace(op.level, node);\n                }\n                if (op.ckbox ) {\n                    node._check(op);\n                }\n                if (!$.support.leadingWhitespace ) {\n                    $(\">div\", node).click(function() {\n                        $(\"a\", this).trigger(\"click\");\n                        return false;\n                    });\n                }\n            });\n            function addSpace(level, node) {\n                if (level > 0 ) {\n                    var parent = node.parent().parent();\n                    var space = !parent.next()[0] ? \"indent\": \"line\";\n                    var plist = \"<div class='\" + space + \"'></div>\";\n                    if (level > 1 ) {\n                        var next = $(\">div>div\", parent).filter(\":first\");\n                        var prev = \"\";\n                        while (level > 1) {\n                            prev = prev + \"<div class='\" + next.attr(\"class\") + \"'></div>\";\n                            next = next.next();\n                            level--;\n                        }\n                        plist = prev + plist;\n                    }\n                    $(\">div\", node).prepend(plist);\n                }\n            }\n        }, _check: function(op) {\n            var node = $(this);\n            var ckbox = $(\">div>.ckbox\", node);\n            var $input = node.find(\"a\");\n            var tname = $input.attr(\"tname\"), tvalue = $input.attr(\"tvalue\");\n            var attrs = \"\";\n            if (tname ) {\n                attrs += \"name='\" + tname + \"' \";\n            }\n            if (tvalue ) {\n                attrs += \"value='\" + tvalue + \"' \";\n            }\n            ckbox.append(\"<input type='checkbox' style='display:none;' \" + attrs + \"/>\").click(function() {\n                var cked = ckbox.hasClass(\"checked\");\n                var aClass = cked ? \"unchecked\": \"checked\";\n                var rClass = cked ? \"checked\": \"unchecked\";\n                ckbox.removeClass(rClass).removeClass(!cked ? \"indeterminate\": \"\").addClass(aClass);\n                $(\"input\", ckbox).prop(\"checked\", !cked);\n                $(\">ul\", node).find(\"li\").each(function() {\n                    var box = $(\"div.ckbox\", this);\n                    box.removeClass(rClass).removeClass(!cked ? \"indeterminate\": \"\").addClass(aClass).find(\"input\").prop(\"checked\", !cked);\n                });\n                $(node)._checkParent(op.excludeParent);\n                return false;\n            });\n            var cAttr = $input.attr(\"checked\") || false;\n            if (cAttr ) {\n                ckbox.find(\"input\").prop(\"checked\", true);\n                ckbox.removeClass(\"unchecked\").addClass(\"checked\");\n                $(node)._checkParent(op.excludeParent);\n            }\n        }, _checkParent: function(excludeParent) {\n            if ($(this).parent().hasClass(\"tree\") ) {\n                return;\n            }\n            var parent = $(this).parent().parent();\n            var stree = $(\">ul\", parent);\n            var ckbox = stree.find(\">li>a\").size() + stree.find(\"div.ckbox\").size();\n            var ckboxed = stree.find(\"div.checked\").size();\n            var aClass = ( ckboxed == ckbox ? \"checked\": ( ckboxed != 0 ? \"indeterminate\": \"unchecked\" ) );\n            var rClass = ( ckboxed == ckbox ? \"indeterminate\": ( ckboxed != 0 ? \"checked\": \"indeterminate\" ) );\n            $(\">div>.ckbox\", parent).removeClass(\"unchecked\").removeClass(\"checked\").removeClass(rClass).addClass(aClass);\n            var $checkbox = $(\":checkbox\", parent);\n            if (aClass == \"checked\" ) {\n                $checkbox.prop(\"checked\", true);\n                $(\">div>.ckbox\", parent).find(\"input\").prop(\"checked\", true);\n            } else if (aClass == \"unchecked\" ) {\n                $checkbox.removeAttr(\"checked\");\n            } else if (aClass == \"indeterminate\" && !excludeParent) {\n                $(\">div>.ckbox\", parent).find(\"input\").prop(\"checked\", true);\n            }\n            parent._checkParent(excludeParent);\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n\n( function($) {\n    var jmenus = new Map();\n    // If the DWZ scope is not available, add it\n    $.dwz = $.dwz || {};\n    $.fn.extend({\n        accordion: function(options, data) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            return this.each(function() {\n                if (options.fillSpace) jmenus.put(options.fillSpace, this);\n                if (typeof options == \"string\" ) {\n                    var accordion = $.data(this, \"dwz-accordion\");\n                    accordion[options].apply(accordion, args);\n                    // INIT with optional options\n                } else if (!$(this).is(\".dwz-accordion\") ) {\n                    $.data(this, \"dwz-accordion\", new $.dwz.accordion(this, options));\n                }\n            });\n        },\n        /**\n         * deprecated, use accordion(\"activate\", index) instead\n         *\n         * @param {Object}\n         *            index\n         */\n        activate: function(index) {\n            return this.accordion(\"activate\", index);\n        }\n    });\n    $.dwz.accordion = function(container, options) {\n\n        // setup configuration\n        this.options = options = $.extend({}, $.dwz.accordion.defaults, options);\n        this.element = container;\n        $(container).addClass(\"dwz-accordion\");\n        if (options.navigation ) {\n            var current = $(container).find(\"a\").filter(options.navigationFilter);\n            if (current.length ) {\n                if (current.filter(options.header).length ) {\n                    options.active = current;\n                } else {\n                    options.active = current.parent().parent().prev();\n                    current.addClass(\"current\");\n                }\n            }\n        }\n        // calculate active if not specified, using the first header\n        options.headers = $(container).find(options.header);\n        options.active = findActive(options.headers, options.active);\n        if ( options.fillSpace ) {\n            fillSpace(options.fillSpace);\n        } else if ( options.autoheight ) {\n            var maxHeight = 0;\n            options.headers.next().each(function() {\n                maxHeight = Math.max(maxHeight, $(this).outerHeight());\n            }).height(maxHeight);\n        }\n        options.headers.not(options.active || \"\").next().hide();\n        options.active.find(\"h2\").addClass(options.selectedClass);\n        options.active.find(\"h2 .icon\").addClass(options.selectedIconClass);\n        if (options.event ) {\n            $(container).bind( ( options.event ) + \".dwz-accordion\", clickHandler);\n        }\n    };\n    $.dwz.accordion.prototype = {\n        activate: function(index) {\n            // call clickHandler with custom event\n            clickHandler.call(this.element, {\n                target: findActive(this.options.headers, index)[0]\n            });\n        },\n\n        enable: function() {\n            this.options.disabled = false;\n        }, disable: function() {\n            this.options.disabled = true;\n        }, destroy: function() {\n            this.options.headers.next().css(\"display\", \"\");\n            if ( this.options.fillSpace || this.options.autoheight ) {\n                this.options.headers.next().css(\"height\", \"\");\n            }\n            $.removeData(this.element, \"dwz-accordion\");\n            $(this.element).removeClass(\"dwz-accordion\").unbind(\".dwz-accordion\");\n        }\n    }\n    function scopeCallback(callback, scope) {\n        return function() {\n            return callback.apply(scope, arguments);\n        };\n    }\n    function completed(cancel) {\n        // if removed while animated data can be empty\n        if (!$.data(this, \"dwz-accordion\") ) {\n            return;\n        }\n        var instance = $.data(this, \"dwz-accordion\");\n        var options = instance.options;\n        options.running = cancel ? 0: --options.running;\n        if (options.running ) {\n            return;\n        }\n        if (options.clearStyle ) {\n            options.toShow.add(options.toHide).css({\n                height: \"\", overflow: \"\"\n            });\n        }\n        $(this).triggerHandler(\"change.dwz-accordion\", [ options.data ], options.change);\n    }\n    function fillSpace(key){\n        var obj = jmenus.get(key);\n        if (!obj) return;\n\n        var parent = $(obj).parent();\n        var height = parent.height() - (($(\".accordionHeader\", obj).size()) * ($(\".accordionHeader:first-child\", obj).outerHeight())) -2;\n\n        var os = parent.children().not(obj);\n        $.each(os, function(i){\n            height -= $(os[i]).outerHeight();\n        });\n        $(\".accordionContent\",obj).height(height);\n    }\n    function toggle(toShow, toHide, data, clickedActive, down) {\n        var options = $.data(this, \"dwz-accordion\").options;\n        options.toShow = toShow;\n        options.toHide = toHide;\n        options.data = data;\n        var complete = scopeCallback(completed, this);\n\n        // count elements to animate\n        options.running = toHide.size() == 0 ? toShow.size(): toHide.size();\n        if (options.animated ) {\n            if (!options.alwaysOpen && clickedActive ) {\n                $.dwz.accordion.animations[options.animated]({\n                    toShow: jQuery([ ]), toHide: toHide, complete: complete, down: down, autoheight: options.autoheight\n                });\n            } else {\n                $.dwz.accordion.animations[options.animated]({\n                    toShow: toShow, toHide: toHide, complete: complete, down: down, autoheight: options.autoheight\n                });\n            }\n        } else {\n            if (!options.alwaysOpen && clickedActive ) {\n                toShow.toggle();\n            } else {\n                toHide.hide();\n                toShow.show();\n            }\n            complete(true);\n        }\n    }\n    function clickHandler(event) {\n        var options = $.data(this, \"dwz-accordion\").options;\n        if (options.disabled ) {\n            return false;\n        }\n\n        // called only when using activate(false) to close all parts\n        // programmatically\n        if (!event.target && !options.alwaysOpen ) {\n            options.active.find(\"h2\").toggleClass(options.selectedClass);\n            options.active.find(\"h2 .icon\").toggleClass(options.selectedIconClass);\n            var toHide = options.active.next(), data = {\n                instance: this, options: options, newHeader: jQuery([ ]), oldHeader: options.active, newContent: jQuery([ ]), oldContent: toHide\n            }, toShow = options.active = $([ ]);\n            toggle.call(this, toShow, toHide, data);\n            return false;\n        }\n        // get the click target\n        var clicked = $(event.target);\n\n        // due to the event delegation model, we have to check if one\n        // of the parent elements is our actual header, and find that\n        if (clicked.parents(options.header).length ) {\n            while (!clicked.is(options.header)) {\n                clicked = clicked.parent();\n            }\n        }\n        var clickedActive = clicked[0] == options.active[0];\n\n        // if animations are still active, or the active header is the target,\n        // ignore click\n        if (options.running || ( options.alwaysOpen && clickedActive ) ) {\n            return false;\n        }\n        if (!clicked.is(options.header) ) {\n            return;\n        }\n\n        // switch classes\n        options.active.find(\"h2\").toggleClass(options.selectedClass);\n        options.active.find(\"h2 .icon\").toggleClass(options.selectedIconClass);\n        if (!clickedActive ) {\n            clicked.find(\"h2\").addClass(options.selectedClass);\n            clicked.find(\"h2 .icon\").toggleClass(options.selectedIconClass);\n        }\n\n        // find elements to show and hide\n        var toShow = clicked.next(), toHide = options.active.next(),\n        // data = [clicked, options.active, toShow, toHide],\n        data = {\n            instance: this, options: options, newHeader: clicked, oldHeader: options.active, newContent: toShow, oldContent: toHide\n        }, down = options.headers.index(options.active[0]) > options.headers.index(clicked[0]);\n        options.active = clickedActive ? $([ ]): clicked;\n        toggle.call(this, toShow, toHide, data, clickedActive, down);\n        return false;\n    }\n\n    function findActive(headers, selector) {\n        return selector != undefined ? typeof selector == \"number\" ? headers.filter(\":eq(\" + selector + \")\"): headers.not(headers.not(selector)): selector === false ? $([ ])\n                : headers.filter(\":eq(0)\");\n    }\n    $.extend($.dwz.accordion, {\n        defaults: {\n            selectedClass: \"collapsable\",selectedIconClass: \"icon-chevron-down\", alwaysOpen: true, animated: 'slide', event: \"click\", header: \".accordionHeader\", autoheight: true, running: 0, clearStyle: true,\n            navigationFilter: function() {\n                return this.href.toLowerCase() == location.href.toLowerCase();\n            }\n        }, animations: {\n            slide: function(options, additions) {\n                options = $.extend({\n                    easing: \"swing\", duration: 100\n                }, options, additions);\n                if (!options.toHide.size() ) {\n                    options.toShow.animate({\n                        height: \"show\"\n                    }, options);\n                    return;\n                }\n                var hideHeight = options.toHide.height(), showHeight = options.toShow.height(), difference = showHeight / hideHeight;\n                options.toShow.css({\n                    height: 0\n                }).show();\n                options.toHide.filter(\":hidden\").each(options.complete).end().filter(\":visible\").animate({\n                    height: \"hide\"\n                }, {\n                    step: function(now) {\n                        var current = ( hideHeight - now ) * difference;\n                        if (!$.support.leadingWhitespace ) {\n                            current = Math.ceil(current);\n                        }\n                        options.toShow.height(current);\n                    }, duration: options.duration, easing: options.easing, complete: function() {\n                        options.toShow.css({\n                            height: showHeight\n                        });\n                        options.toShow.css({\n                            overflow: \"auto\"\n                        });\n                        options.complete();\n                    }\n                });\n            }, bounceslide: function(options) {\n                this.slide(options, {\n                    easing: options.down ? \"bounceout\": \"swing\", duration: options.down ? 200: 100\n                });\n            }, easeslide: function(options) {\n                this.slide(options, {\n                    easing: \"easeinout\", duration: 100\n                })\n            }\n        }\n    });\n} )(jQuery);\n\nfunction initEnv() {\n    $(\"body\").append(DWZ.frag[\"dwzFrag\"]);\n    if (!$.support.leadingWhitespace && /6.0/.test(navigator.userAgent) ) {\n        try {\n            document.execCommand(\"BackgroundImageCache\", false, true);\n        } catch (e) {}\n    }\n    if (!$.support.leadingWhitespace ) {\n        window.setInterval(\"CollectGarbage();\", 10000);\n    }\n    $(window).resize(function() {\n        initLayout();\n        $(this).trigger(DWZ.eventType.resizeGrid);\n    });\n    var ajaxbg = $(\"#background,#progressBar\");\n    ajaxbg.hide();\n    ajaxbg.click(function(){\n        $('#background,#progressBar').hide();\n    });\n    $(document).ajaxStart(function() {\n        ajaxbg.show();\n    }).ajaxStop(function() {\n        ajaxbg.hide();\n    });\n    $(\"#leftside\").jBar({\n        minW: 150, maxW: 700\n    });\n    if ($.taskBar ){\n        $.taskBar.init();\n    }\n    setTimeout(function() {\n        initLayout();\n        if (window.navTab) {\n            navTab.init();\n        }\n        initUI();\n        if ($.fn.navMenu ){\n            var hash = location.hash.skipChar('#').replace(/\\?.*$/, '');\n            var callback;\n            var parentId;\n            if(hash ) {\n                parentId = hash.substring(0, hash.indexOf('_'));\n                var tabid = hash.substring(hash.indexOf('_') + 1);\n                if(tabid ) {\n                    callback = function(){\n                        $('#menu a[rel='+escapeJquery(tabid)+']').click();\n                    }\n                }\n            }\n            $(\"#navMenu\").navMenu(callback);\n            if(parentId ) {\n                $('#navMenu a[parentid='+parentId+']').click();\n            }\n        }\n        $(document).trigger(DWZ.eventType.initEnvAfter);\n    }, 10);\n}\nfunction initLayout() {\n    var iContentW = $(window).width() - (DWZ.ui.sbar ? $(\"#sidebar\").width() : $(\"#sidebar_s\").width());\n    var iContentH = $(window).height() - $('header').outerHeight(true) - $('footer').outerHeight(true);\n    $(\"#navTab\").css({\"width\":iContentW});\n    $(\"main .tabsPageContent\").height(iContentH - $('.tabsPageHeader').outerHeight(true)).find(\"[layoutH]\").layoutH();\n    $(\"#splitBar, #splitBarProxy\").height(iContentH - 2);\n    $(\"#taskbar\").css({\n        top: iContentH + $(\"header\").height(), width: $(window).width()\n    });\n  $(\"#menu\").css({'max-height':iContentH-$(\"#sidebar .collapse\").height()});\n}\n\nfunction initUI(_box) {\n    var $p = $(_box || document);\n    // css tables\n    $('table.list', $p).cssTable();\n    // jTables\n    $('table.table', $p).jTable();\n\n    // auto bind tabs\n    $(\"div.tabs\", $p).each(function() {\n        var $this = $(this);\n        var options = {};\n        options.currentIndex = $this.attr(\"currentIndex\") || 0;\n        options.eventType = $this.attr(\"eventType\") || \"click\";\n        $this.tabs(options);\n    });\n    $(\"ul.tree\", $p).jTree();\n    $('div.accordion', $p).each(function() {\n        var $this = $(this);\n        $this.accordion({\n            alwaysOpen: false, active: 0, autoheight:false\n        });\n    });\n    $(\":button.checkboxCtrl, :checkbox.checkboxCtrl\", $p).checkboxCtrl($p);\n    if ($.fn.combox ){\n        $(\"select.combox\", $p).combox();\n    }\n    if ($.fn.uploadify ) {\n        $(\":file[uploaderOption]\", $p).each(function() {\n            var $this = $(this);\n            var options = {\n                fileObjName: $this.attr(\"name\") || \"file\", auto: true, multi: true, onUploadError: uploadifyError\n            };\n            var uploaderOption = DWZ.jsonEval($this.attr(\"uploaderOption\"));\n            $.extend(options, uploaderOption);\n            DWZ.debug(\"uploaderOption: \" + DWZ.obj2str(uploaderOption));\n            $this.uploadify(options);\n        });\n    }\n\n    // validate form\n    $(\"form.required-validate\", $p).each(function() {\n        var $form = $(this);\n        $form.validate({\n            onsubmit: false, focusInvalid: false, focusCleanup: true, errorElement: \"span\", ignore: \".ignore\", invalidHandler: function(form, validator) {\n                var errors = validator.numberOfInvalids();\n                if (errors ) {\n                    var message = DWZ.msg(\"validateFormError\", [ errors ]);\n                    alertMsg.error(message);\n                }\n            }\n        });\n        $form.find(\"input[customvalid]\").each(function() {\n            var $input = $(this);\n            $input.rules(\"add\", {\n                customvalid: $input.attr(\"customvalid\")\n            })\n        });\n    });\n    if ($.fn.datepicker ) {\n        $('input.date', $p).each(function() {\n            var $this = $(this);\n            var opts = {};\n            if ($this.attr(\"dateFmt\") ) {\n                opts.pattern = $this.attr(\"dateFmt\");\n            }\n            if ($this.attr(\"minDate\") ) {\n                opts.minDate = $this.attr(\"minDate\");\n            }\n            if ($this.attr(\"maxDate\") ) {\n                opts.maxDate = $this.attr(\"maxDate\");\n            }\n            if ($this.attr(\"mmStep\") ) {\n                opts.mmStep = $this.attr(\"mmStep\");\n            }\n            if ($this.attr(\"ssStep\") ) {\n                opts.ssStep = $this.attr(\"ssStep\");\n            }\n            $this.datepicker(opts);\n        });\n    }\n\n    initLink($p);\n\n    $(\"div.pagination\", $p).each(function() {\n        var $this = $(this);\n        $this.pagination({\n            targetType: $this.attr(\"targetType\"), rel: $this.attr(\"rel\"), totalCount: $this.attr(\"totalCount\"), numPerPage: $this.attr(\"numPerPage\") ,\n            pageNumShown: $this.attr(\"pageNumShown\"), currentPage: $this.attr(\"currentPage\")\n        });\n    });\n    if ($.fn.sortDrag ) {\n        $(\"div.sortDrag\", $p).sortDrag();\n    }\n\n    // dwz.ajax.js\n    if ($.fn.multLookup ) {\n        $(\"[multLookup]:button\", $p).multLookup();\n    }\n    if ($.fn.suggest ) {\n        $(\"input[suggestFields]\", $p).suggest();\n    }\n    if ($.fn.itemDetail ) {\n        $(\"table.itemDetail\", $p).itemDetail();\n    }\n    // \u6267\u884c\u7b2c\u4e09\u65b9jQuery\u63d2\u4ef6\u3010 \u7b2c\u4e09\u65b9jQuery\u63d2\u4ef6\u6ce8\u518c\uff1aDWZ.regPlugins.push(function($p){}); \u3011\n    $.each(DWZ.regPlugins, function(index, fn) {\n        fn($p);\n    });\n    // init styles\n    $(\"input[type=text], input[type=number], input[type=password], textarea\", $p).not(\"textarea.editor\", $p).addClass(\"textInput\");\n    $(\"input[readonly], textarea[readonly]\", $p).addClass(\"readonly\");\n    $(\"input[disabled=true], textarea[disabled=true]\", $p).addClass(\"disabled\");\n    $(\"input[type=text]\", $p).not(\"div.tabs input[type=text]\", $p).filter(\"[alt]\").inputAlert();\n}\n\nfunction initLink($p) {\n    // navTab\n    $(\"a[target=navTab]\", $p).each(function() {\n        $(this).click(function(event) {\n            var $this = $(this);\n             var title = $this.attr(\"title\") || $this.text();\n            if(title){\n                title = title.replace(/<[^>]*>/gi,\"\");\n            }\n            var icon = $this.attr(\"icon\") || $this.find(\"i\").prop(\"outerHTML\");\n            var tabid = $this.attr(\"rel\") || \"_blank\";\n            var fresh = eval($this.attr(\"fresh\") || \"true\");\n            var external = eval($this.attr(\"external\") || \"false\");\n            var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n            var newWindow = (navigator.platform.match(\"Mac\") ? event.metaKey : event.ctrlKey);\n            DWZ.debug(url);\n            if (!url.isFinishedTm() ) {\n                alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                return false;\n            }\n            navTab.openTab(tabid, url, {\n                title: title, icon: icon, fresh: fresh, external: external, focusNewWindow:newWindow\n            });\n            return false;\n        });\n    });\n\n    // dialogs\n    $(\"a[target=dialog]\", $p).each(function() {\n        $(this).click(function(event) {\n            var $this = $(this);\n            var title = $this.attr(\"title\") || $this.text();\n            var rel = $this.attr(\"rel\") || \"_blank\";\n            var options = {};\n            var w = $this.attr(\"width\");\n            var h = $this.attr(\"height\");\n            if (w ) {\n                options.width = w;\n            }\n            if (h ) {\n                options.height = h;\n            }\n            options.max = eval($this.attr(\"max\") || \"false\");\n            options.mask = eval($this.attr(\"mask\") || \"false\");\n            options.maxable = eval($this.attr(\"maxable\") || \"true\");\n            options.minable = eval($this.attr(\"minable\") || \"true\");\n            options.fresh = eval($this.attr(\"fresh\") || \"true\");\n            options.resizable = eval($this.attr(\"resizable\") || \"true\");\n            options.drawable = eval($this.attr(\"drawable\") || \"true\");\n            options.close = eval($this.attr(\"close\") || \"\");\n            options.param = $this.attr(\"param\") || \"\";\n            options.focusNewWindow = (navigator.platform.match(\"Mac\") ? event.metaKey : event.ctrlKey);\n            var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n            DWZ.debug(url);\n            if (!url.isFinishedTm() ) {\n                alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                return false;\n            }\n            $.pdialog.open(url, rel, title, options);\n            return false;\n        });\n    });\n    $(\"a[target=ajax]\", $p).each(function() {\n        $(this).click(function() {\n            var $this = $(this);\n            var rel = $this.attr(\"rel\");\n            if (rel ) {\n                var $rel = $(\"#\" + rel);\n                $rel.loadUrl($this.attr(\"href\"), {}, function() {\n                    $rel.find(\"[layoutH]\").layoutH();\n                });\n            }\n            return false;\n        });\n    });\n    if ($.fn.ajaxTodo ) {\n        $(\"a[target=ajaxTodo]\", $p).ajaxTodo();\n    }\n    if ($.fn.dwzExport ) {\n        $(\"a[target=dwzExport]\", $p).dwzExport();\n    }\n    if ($.fn.lookup ) {\n        $(\"a[lookupGroup]\", $p).lookup();\n    }\n    if ($.fn.selectedTodo ) {\n        $(\"a[target=selectedTodo]\", $p).selectedTodo();\n    }\n}\n\n/**\n * Theme Plugins\n *\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n        theme: function(options) {\n            var op = $.extend({\n                themeBase: \"themes\", defaultTheme: \"default\"\n            }, options);\n            var _themeHref = op.themeBase + \"/#theme#/style.css\";\n            var $themeItem = $(\"<link href=\\\"\" + _themeHref.replace(\"#theme#\", op.defaultTheme) + \"\\\" rel=\\\"stylesheet\\\" media=\\\"screen\\\"/>\");\n            var setTheme = function(themeName) {\n                $themeItem.attr(\"href\", _themeHref.replace(\"#theme#\", themeName));\n                jThemeLi.find(\">div\").removeClass(\"selected\");\n                jThemeLi.filter(\"[theme=\" + themeName + \"]\").find(\">div\").addClass(\"selected\");\n                if ($.isFunction($.cookie) ) {\n                    $.cookie(\"dwz_theme\", themeName);\n                }\n            }\n            var jThemeLi = $(this).find(\">li[theme]\");\n            jThemeLi.each(function(index) {\n                var $this = $(this);\n                var themeName = $this.attr(\"theme\");\n                if(themeName == op.defaultTheme){\n                    $this.find(\">div\").addClass(\"selected\");\n                }\n                $this.addClass(themeName).click(function() {\n                    setTheme(themeName);\n                });\n            });\n            if ($.isFunction($.cookie) ) {\n                if ($.cookie(\"dwz_theme\") ) {\n                    setTheme($.cookie(\"dwz_theme\"));\n                }\n            }\n            $themeItem.appendTo($(\"head\"));\n            return this;\n        }\n    });\n} )(jQuery);\n/**\n * @author zhanghuihua@msn.com\n */\n( function($) {\n    $.fn.navMenu = function(callback) {\n        return this.each(function() {\n            var $box = $(this);\n            var $callback = callback;\n            $box.find(\"li>a\").click(function() {\n                var $a = $(this);\n                if(!$a.is(\"[href^=javascript:]\")){\n                    $(\"#sidebar #menu\").ajaxUrl({\n                        type: \"get\", url: $a.attr(\"href\"), callback: function(response) {\n                            $box.find(\"li\").removeClass(\"selected\");\n                            $a.parent().addClass(\"selected\");\n                            if($callback ) {\n                                $callback();\n                                $callback = null;\n                            }\n                        }\n                    });\n                }\n                return false;\n            });\n        });\n    }\n} )(jQuery);\n\n/**\n * @author ZhangHuihua@msn.com\n */\n$.setRegional(\"alertMsg\", {\n    title: {\n        error: \"Error\", info: \"Information\", warn: \"Warning\", correct: \"Successful\", confirm: \"Confirmation\"\n    }, butMsg: {\n        ok: \"OK\", yes: \"Yes\", no: \"No\", cancel: \"Cancel\"\n    }\n});\nvar alertMsg = {\n    _boxId: \"#alertMsgBox\", _bgId: \"#alertBackground\", _closeTimer: null, _types: {\n        error: \"error\", info: \"info\", warn: \"warn\", correct: \"correct\", confirm: \"confirm\"\n    }, _getTitle: function(key) {\n        return $.regional.alertMsg.title[key];\n    }, _keydownOk: function(event) {\n        if (event.keyCode == DWZ.keyCode.ENTER || event.keyCode == DWZ.keyCode.BACKSPACE ){\n            event.data.target.trigger(\"click\");\n            return false;\n        }\n    }, _keydownEsc: function(event) {\n        if (event.keyCode == DWZ.keyCode.ESC ){\n            event.data.target.trigger(\"click\");\n        }\n    } ,\n    /**\n     * @param {Object}\n     *            type\n     * @param {Object}\n     *            msg\n     * @param {Object}\n     *            buttons [button1, button2]\n     */\n    _open: function(type, msg, buttons) {\n        $(this._boxId).remove();\n        var butsHtml = \"\";\n        if (buttons ) {\n            for (var i = 0; i < buttons.length; i++) {\n                var sRel = buttons[i].call ? \"callback\": \"\";\n                butsHtml += DWZ.frag[\"alertButFrag\"].replace(\"#butMsg#\", buttons[i].name).replace(\"#callback#\", sRel);\n            }\n        }\n        var boxHtml = DWZ.frag[\"alertBoxFrag\"].replace(\"#type#\", type).replace(\"#title#\", this._getTitle(type)).replace(\"#message#\", msg).replace(\"#butFragment#\", butsHtml);\n        $($.parseHTML(boxHtml, document, true)).appendTo(\"body\").css({\n            top: -$(this._boxId).height() + \"px\"\n        }).animate({\n            top: \"0px\"\n        }, 500);\n        if (this._closeTimer ) {\n            clearTimeout(this._closeTimer);\n            this._closeTimer = null;\n        }\n        if (this._types.info == type || this._types.correct == type ) {\n            this._closeTimer = setTimeout(function() {\n                alertMsg.close()\n            }, 3500);\n        } else {\n            $(this._bgId).show();\n        }\n        var jButs = $(this._boxId).find(\"a.button\");\n        var jCallButs = jButs.filter(\"[rel=callback]\");\n        var jDoc = $(document);\n        for (var i = 0; i < buttons.length; i++) {\n            if (buttons[i].call ){\n                jCallButs.eq(i).click(buttons[i].call);\n            }\n            if (buttons[i].keyCode == DWZ.keyCode.ENTER ) {\n                jDoc.bind(\"keydown\", {\n                    target: jButs.eq(i)\n                }, this._keydownOk);\n            }\n            if (buttons[i].keyCode == DWZ.keyCode.ESC ) {\n                jDoc.bind(\"keydown\", {\n                    target: jButs.eq(i)\n                }, this._keydownEsc);\n            }\n        }\n    }, close: function() {\n        $(document).unbind(\"keydown\", this._keydownOk).unbind(\"keydown\", this._keydownEsc);\n        $(this._boxId).animate({\n            top: -$(this._boxId).height()\n        }, 100, function() {\n            $(this).remove();\n        });\n        $(this._bgId).hide();\n        if(this._callback){\n            this._callback();\n            this._callback = null;\n        }\n    }, error: function(msg, options) {\n        this._alert(this._types.error, msg, options);\n    }, info: function(msg, options) {\n        this._alert(this._types.info, msg, options);\n    }, warn: function(msg, options) {\n        this._alert(this._types.warn, msg, options);\n    }, correct: function(msg, options) {\n        this._alert(this._types.correct, msg, options);\n    }, _alert: function(type, msg, options) {\n        var op = {\n            okName: $.regional.alertMsg.butMsg.ok, okCall: null\n        };\n        $.extend(op, options);\n        if(options && options.callback && $.isFunction(options.callback)){\n            this._callback = options.callback;\n        }\n        var buttons = [ {\n            name: op.okName, call: op.okCall, keyCode: DWZ.keyCode.ENTER\n        } ];\n        this._open(type, msg, buttons);\n    } ,\n    /**\n     * @param {Object}\n     *            msg\n     * @param {Object}\n     *            options {okName, okCal, cancelName, cancelCall}\n     */\n    confirm: function(msg, options) {\n        var op = {\n            okName: $.regional.alertMsg.butMsg.ok, okCall: null, cancelName: $.regional.alertMsg.butMsg.cancel, cancelCall: null\n        };\n        $.extend(op, options);\n        var buttons = [ {\n            name: op.okName, call: op.okCall, keyCode: DWZ.keyCode.ENTER\n        }, {\n            name: op.cancelName, call: op.cancelCall, keyCode: DWZ.keyCode.ESC\n        } ];\n        this._open(this._types.confirm, msg, buttons);\n    }\n};\n\n/**\n * @author zhanghuihua@msn.com\n */\n\n( function($) {\n    var menu,  hash;\n    $.fn.extend({\n        contextMenu: function(id, options) {\n            var op = $.extend({\n                bindings: {}, ctrSub: null\n            }, options);\n            if (!menu ) {\n                menu = $('<div id=\"contextmenu\"></div>').appendTo('body').hide();\n            }\n            hash = hash || [ ];\n            hash.push({\n                id: id, bindings: op.bindings || {}, ctrSub: op.ctrSub\n            });\n            var index = hash.length - 1;\n            $(this).bind('contextmenu', function(e) {\n                display(index, this, e, op);\n                return false;\n            });\n            return this;\n        }\n    });\n    function display(index, trigger, e, options) {\n        var cur = hash[index];\n        var content = $(DWZ.frag[cur.id]);\n        content.find('li');\n\n        // Send the content to the menu\n        menu.html(content);\n        $.each(cur.bindings, function(id, func) {\n            $(\"[rel='\" + id + \"']\", menu).bind('click', function(e) {\n                hide();\n                func($(trigger), $(\"#\" + cur.id));\n            });\n        });\n        var posX = e.pageX;\n        var posY = e.pageY;\n        if ($(window).width() < posX + menu.width() ) {\n            posX -= menu.width();\n        }\n        if ($(window).height() < posY + menu.height() ) {\n            posY -= menu.height();\n        }\n        menu.css({\n            'left': posX, 'top': posY\n        }).show();\n        $(document).one('click', hide);\n        if ($.isFunction(cur.ctrSub) ) {\n            cur.ctrSub($(trigger), $(\"#\" + cur.id));\n        }\n    }\n    function hide() {\n        menu.hide();\n    }\n} )(jQuery);\n\n/**\n * @author ZhangHuihua@msn.com\n */\nvar navTab = {\n    componentBox: null, // tab component. contain tabBox, prevBut, nextBut,\n    // panelBox\n    _tabBox: null ,\n    _prevBut: null ,\n    _nextBut: null ,\n    _panelBox: null ,\n    _moreBut: null ,\n    _moreBox: null ,\n    _currentIndex: 0 ,\n    _op: {\n        id: \"navTab\", step: 4 , stTabBox: \".navTab-tab\", stPanelBox: \".navTab-panel\", mainTabId: \"main\", close$: \"a.close\", prevClass: \"tabsLeft\", nextClass: \"tabsRight\" ,\n        stMore: \".tabsMore\", stMoreLi: \"ul.tabsMoreList\"\n    } ,\n    init: function(options) {\n        if ($.History) {\n            $.History.init();\n        }\n        var $this = this;\n        $.extend(this._op, options);\n        this.componentBox = $(\"#\" + this._op.id);\n        this.step = this._op.step;\n        this._tabBox = this.componentBox.find(this._op.stTabBox);\n        this._panelBox = this.componentBox.find(this._op.stPanelBox);\n        this._prevBut = this.componentBox.find(\".\" + this._op.prevClass);\n        this._nextBut = this.componentBox.find(\".\" + this._op.nextClass);\n        this._moreBut = this.componentBox.find(this._op.stMore);\n        this._moreBox = this.componentBox.find(this._op.stMoreLi);\n        this._prevBut.click(function(event) {\n            $this._scrollPrev()\n        });\n        this._nextBut.click(function(event) {\n            $this._scrollNext()\n        });\n        this._moreBut.click(function() {\n            $this._moreBox.show();\n            return false;\n        });\n        $(document).click(function() {\n            $this._moreBox.hide()\n        });\n        this._contextmenu(this._tabBox);\n        this._contextmenu(this._getTabs());\n        this._init();\n        this._ctrlScrollBut();\n    } ,\n    _init: function() {\n        var $this = this;\n        this._getTabs().each(function(iTabIndex) {\n            $(this).unbind(\"click\").click(function(event) {\n                $this._switchTab(iTabIndex);\n            });\n            $(this).find(navTab._op.close$).unbind(\"click\").click(function() {\n                $this._closeTab(iTabIndex);\n            });\n        });\n        this._getMoreLi().each(function(iTabIndex) {\n            $(this).find(\">a\").unbind(\"click\").click(function(event) {\n                $this._switchTab(iTabIndex);\n            });\n        });\n        this._switchTab(this._currentIndex);\n    } ,\n    _contextmenu: function($obj) { // navTab\u53f3\u952e\u83dc\u5355\n        var $this = this;\n        $obj.contextMenu('navTabCM', {\n            bindings: {\n                reload: function(t, m) {\n                    $this._reload(t, true);\n                }, closeCurrent: function(t, m) {\n                    var tabId = t.attr(\"tabid\");\n                    if (tabId ) {\n                        $this.closeTab(tabId);\n                    } else {\n                        $this.closeCurrentTab();\n                    }\n                }, closeOther: function(t, m) {\n                    var index = $this._indexTabId(t.attr(\"tabid\"));\n                    $this._closeOtherTab(index > 0 ? index: $this._currentIndex);\n                }, closeAll: function(t, m) {\n                    $this.closeAllTab();\n                }\n            }, ctrSub: function(t, m) {\n                var mReload = m.find(\"[rel='reload']\");\n                var mCur = m.find(\"[rel='closeCurrent']\");\n                var mOther = m.find(\"[rel='closeOther']\");\n                var mAll = m.find(\"[rel='closeAll']\");\n                var $tabLi = $this._getTabs();\n                if ($tabLi.size() < 2 ) {\n                    mCur.addClass(\"disabled\");\n                    mOther.addClass(\"disabled\");\n                    mAll.addClass(\"disabled\");\n                }\n                if ($this._currentIndex == 0 || t.attr(\"tabid\") == $this._op.mainTabId ) {\n                    mCur.addClass(\"disabled\");\n                    if(!t.attr('url')){\n                        mReload.addClass(\"disabled\");\n                    }\n                } else if ($tabLi.size() == 2 ) {\n                    mOther.addClass(\"disabled\");\n                }\n            }\n        });\n    } ,\n    _getTabs: function() {\n        return this._tabBox.find(\"> li\");\n    } ,\n    _getPanels: function() {\n        return this._panelBox.find(\"> div\");\n    } ,\n    _getMoreLi: function() {\n        return this._moreBox.find(\"> li\");\n    } ,\n    _getTab: function(tabid) {\n        var index = this._indexTabId(tabid);\n        if (index >= 0 ) {\n            return this._getTabs().eq(index);\n        }\n    } ,\n    getPanel: function(tabid) {\n        var index = this._indexTabId(tabid);\n        if (index >= 0 ) {\n            return this._getPanels().eq(index);\n        }\n    } ,\n    _getTabsW: function(iStart, iEnd) {\n        return this._tabsW(this._getTabs().slice(iStart, iEnd));\n    } ,\n    _tabsW: function($tabs) {\n        var iW = 0;\n        $tabs.each(function() {\n            iW += $(this).outerWidth(true);\n        });\n        return iW;\n    } ,\n    _indexTabId: function(tabid) {\n        if (!tabid ) {\n            return -1;\n        }\n        var iOpenIndex = -1;\n        this._getTabs().each(function(index) {\n            if ($(this).attr(\"tabid\") == tabid ) {\n                iOpenIndex = index;\n                return;\n            }\n        });\n        return iOpenIndex;\n    } ,\n    _getLeft: function() {\n        return this._tabBox.position().left;\n    } ,\n    _getScrollBarW: function() {\n        return this.componentBox.width() - 90;\n    } ,\n    _visibleStart: function() {\n        var iLeft = this._getLeft(), iW = 0;\n        var $tabs = this._getTabs();\n        for (var i = 0; i < $tabs.size(); i++) {\n            if (iW + iLeft >= 0 ) {\n                return i;\n            }\n            iW += $tabs.eq(i).outerWidth(true);\n        }\n        return 0;\n    } ,\n    _visibleEnd: function() {\n        var iLeft = this._getLeft(), iW = 0;\n        var $tabs = this._getTabs();\n        for (var i = 0; i < $tabs.size(); i++) {\n            iW += $tabs.eq(i).outerWidth(true);\n            if (iW + iLeft > this._getScrollBarW() ) {\n                return i;\n            }\n        }\n        return $tabs.size();\n    } ,\n    _scrollPrev: function() {\n        var iStart = this._visibleStart();\n        if (iStart >= this.step ) {\n            this._scrollTab(-this._getTabsW(0, iStart - this.step));\n        } else if (iStart > 0 ) {\n            this._scrollTab(-this._getTabsW(0, iStart - 1));\n        }\n    } ,\n    _scrollNext: function() {\n        var iEnd = this._visibleEnd();\n        if (iEnd + this.step <= this._getTabs().size() ) {\n            this._scrollTab(-this._getTabsW(0, iEnd + this.step) + this._getScrollBarW());\n        } else if (iEnd < this._getTabs().size() ) {\n            this._scrollTab(-this._getTabsW(0, iEnd + 1) + this._getScrollBarW());\n        }\n    } ,\n    _scrollTab: function(iLeft, isNext) {\n        var $this = this;\n        this._tabBox.animate({\n            left: iLeft + 'px'\n        }, 200, function() {\n            $this._ctrlScrollBut();\n        });\n    } ,\n    _scrollCurrent: function() { // auto scroll current tab\n        var iW = this._tabsW(this._getTabs());\n        if (iW <= this._getScrollBarW() ) {\n            this._scrollTab(0);\n        } else if (this._getLeft() < this._getScrollBarW() - iW ) {\n            this._scrollTab(this._getScrollBarW() - iW);\n        } else if (this._currentIndex < this._visibleStart() ) {\n            this._scrollTab(-this._getTabsW(0, this._currentIndex));\n        } else if (this._currentIndex >= this._visibleEnd() ) {\n            this._scrollTab(this._getScrollBarW() - this._getTabs().eq(this._currentIndex).outerWidth(true) - this._getTabsW(0, this._currentIndex));\n        }\n    } ,\n    _ctrlScrollBut: function() {\n        var iW = this._tabsW(this._getTabs());\n        if (this._getScrollBarW() > iW ) {\n            this._prevBut.addClass(\"tabsLeftDisabled\");\n            this._nextBut.addClass(\"tabsRightDisabled\");\n            this._tabBox.parent().removeClass(\"tabsPageHeaderMargin\");\n        } else {\n            this._prevBut.removeClass(\"tabsLeftDisabled\");\n            this._nextBut.removeClass(\"tabsRightDisabled\");\n            this._tabBox.parent().addClass(\"tabsPageHeaderMargin\");\n            if (this._getLeft() >= 0 ) {\n                this._prevBut.addClass(\"tabsLeftDisabled\");\n            } else if (this._getLeft() <= this._getScrollBarW() - iW ) {\n                this._nextBut.addClass(\"tabsRightDisabled\");\n            }\n        }\n    } ,\n    _switchTab: function(iTabIndex) {\n        var $tab = this._getTabs().removeClass(\"selected\").eq(iTabIndex).addClass(\"selected\");\n        this._getPanels().hide().eq(iTabIndex).show();\n        this._getMoreLi().removeClass(\"selected\").eq(iTabIndex).addClass(\"selected\");\n        this._currentIndex = iTabIndex;\n        this._scrollCurrent();\n        this._reload($tab);\n    } ,\n    _closeTab: function(index, openTabid) {\n        this._getTabs().eq(index).remove();\n        this._getPanels().eq(index).trigger(DWZ.eventType.pageClear).remove();\n        this._getMoreLi().eq(index).remove();\n        if (this._currentIndex >= index ) {\n            this._currentIndex--;\n        }\n        if (openTabid ) {\n            var openIndex = this._indexTabId(openTabid);\n            if (openIndex > 0 ) {\n                this._currentIndex = openIndex;\n            }\n        }\n        this._init();\n        this._scrollCurrent();\n        this._reload(this._getTabs().eq(this._currentIndex));\n    } ,\n    closeTab: function(tabid) {\n        var index = this._indexTabId(tabid);\n        if (index > 0 ) {\n            this._closeTab(index);\n        }\n    } ,\n    closeCurrentTab: function(openTabid) { // openTabid\n        // \u53ef\u4ee5\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u5173\u95ed\u5f53\u524dtab\u540e\uff0c\u6253\u5f00\u6700\u540e\u4e00\u4e2atab\n        if (this._currentIndex > 0 ) {\n            this._closeTab(this._currentIndex, openTabid);\n        }\n    } ,\n    closeAllTab: function() {\n        this._getTabs().filter(\":gt(0)\").remove();\n        this._getPanels().filter(\":gt(0)\").trigger(DWZ.eventType.pageClear).remove();\n        this._getMoreLi().filter(\":gt(0)\").remove();\n        this._currentIndex = 0;\n        this._init();\n        this._scrollCurrent();\n    } ,\n    _closeOtherTab: function(index) {\n        index = index || this._currentIndex;\n        if (index > 0 ) {\n            var str$ = \":eq(\" + index + \")\";\n            this._getTabs().not(str$).filter(\":gt(0)\").remove();\n            this._getPanels().not(str$).filter(\":gt(0)\").trigger(DWZ.eventType.pageClear).remove();\n            this._getMoreLi().not(str$).filter(\":gt(0)\").remove();\n            this._currentIndex = 1;\n            this._init();\n            this._scrollCurrent();\n        } else {\n            this.closeAllTab();\n        }\n    } ,\n    _loadUrlCallback: function($panel) {\n        $panel.find(\"[layoutH]\").layoutH();\n        $panel.find(\":button.close\").click(function() {\n            navTab.closeCurrentTab();\n        });\n    } ,\n    _reload: function($tab, flag) {\n        flag = flag || $tab.data(\"reloadFlag\");\n        var url = $tab.attr(\"url\");\n        if (flag && url ) {\n            $tab.data(\"reloadFlag\", null);\n            var $panel = this.getPanel($tab.attr(\"tabid\"));\n            if ($tab.hasClass(\"external\") || url.isExternalUrl()) {\n                navTab.openExternal(url, $panel);\n            } else {\n                // \u83b7\u53d6pagerForm\u53c2\u6570\n                var $pagerForm = $(\".pagerForm\", $panel);\n                if(0==$pagerForm.length || \"2\" ==flag){\n                    $panel.loadUrl(url, $pagerForm.serializeArray(), function() {\n                        navTab._loadUrlCallback($panel);\n                    });\n                }else{\n                    $pagerForm.submit();\n                }\n            }\n        }\n    } ,\n    reloadFlag: function(tabid,value) {\n        var $tab = this._getTab(tabid);\n        if ($tab ) {\n            if (this._indexTabId(tabid) == this._currentIndex ) {\n                this._reload($tab, true);\n            } else {\n                if(!value){\n                    value = 1;\n                }\n                $tab.data(\"reloadFlag\", value);\n            }\n        }\n    } ,\n    reload: function(url, options) {\n        var op = $.extend({\n            data: {}, navTabId: \"\", callback: null\n        }, options);\n        var $tab = op.navTabId ? this._getTab(op.navTabId): this._getTabs().eq(this._currentIndex);\n        var $panel = op.navTabId ? this.getPanel(op.navTabId): this._getPanels().eq(this._currentIndex);\n        if ($panel ) {\n            if (!url ) {\n                url = $tab.attr(\"url\");\n            }\n            if (url ) {\n                if ($tab.hasClass(\"external\") ) {\n                    navTab.openExternal(url, $panel);\n                } else {\n                    if ($.isEmptyObject(op.data) ) { // \u83b7\u53d6pagerForm\u53c2\u6570\n                        var $pagerForm = $(\".pagerForm\", $panel);\n                        op.data = $pagerForm.size() > 0 ? $pagerForm.serializeArray(): {}\n                    }\n                    $panel.ajaxUrl({\n                        type: \"POST\", url: url, data: op.data, callback: function(response) {\n                            navTab._loadUrlCallback($panel);\n                            if ($.isFunction(op.callback) ) {\n                                op.callback(response);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    } ,\n    getCurrentPanel: function() {\n        return this._getPanels().eq(this._currentIndex);\n    } ,\n    checkTimeout: function() {\n        var json = DWZ.jsonEval(this.getCurrentPanel().html());\n        if (json && json.statusCode == DWZ.statusCode.timeout ) {\n            this.closeCurrentTab();\n        }\n    } ,\n    openExternal: function(url, $panel) {\n        var ih = navTab._panelBox.height();\n        $panel.html(DWZ.frag[\"externalFrag\"].replaceAll(\"{url}\", url).replaceAll(\"{height}\", ih + \"px\"));\n    } ,\n    /**\n     * @param {Object}\n     *            tabid\n     * @param {Object}\n     *            url\n     * @param {Object}\n     *            params: title, data, fresh\n     */\n    openTab: function(tabid, url, options) { // if found tabid replace tab,\n        // else create a new tab.\n        var op = $.extend({\n            title: \"New Tab\", icon: \"\", data: {}, fresh: true, external: false, focusNewWindow:false\n        }, options);\n        var iOpenIndex = this._indexTabId(tabid);\n        if (iOpenIndex >= 0 && !op.focusNewWindow) {\n            var $tab = this._getTabs().eq(iOpenIndex);\n            var $panel = this._getPanels().eq(iOpenIndex);\n            if (op.fresh || $tab.attr(\"url\") != url ) {\n                $tab.attr(\"url\", url);\n                if (op.external || url.isExternalUrl() ) {\n                    $tab.addClass(\"external\");\n                    navTab.openExternal(url, $panel);\n                } else {\n                    $tab.removeClass(\"external\");\n                    $panel.ajaxUrl({\n                        type: \"GET\", url: url, data: op.data, callback: function() {\n                            navTab._loadUrlCallback($panel);\n                        }\n                    });\n                }\n            }\n            this._currentIndex = iOpenIndex;\n        } else {\n            if(op.focusNewWindow){\n              tabid += Math.round(Math.random() * 10000000);\n            }\n            this._getPanels().eq(this._currentIndex).after('<div class=\"page unitBox\"></div>');\n            this._getTabs().eq(this._currentIndex).after($('<li><a href=\"javascript:;\" class=\"close\"><i class=\"icon-remove-sign\"></i></a></li>').attr('tabid',tabid).prepend($('<a href=\"javascript:\"></a>').attr('title',op.title).text(op.title).prepend(op.icon)));\n            this._getMoreLi().eq(this._currentIndex).after($('<li></li>').append($('<a href=\"javascript:\"></a>').attr('title',op.title).text(op.title).prepend(op.icon)));\n            var $tabs = this._getTabs();\n            var $tab = $tabs.eq(this._currentIndex+1);\n            var $panel = this._getPanels().eq(this._currentIndex+1);\n\n            if (op.external || url.isExternalUrl() ) {\n                $tab.addClass(\"external\");\n                navTab.openExternal(url, $panel);\n            } else {\n                $tab.removeClass(\"external\");\n                $panel.ajaxUrl({\n                    type: \"GET\", url: url, data: op.data, callback: function() {\n                        navTab._loadUrlCallback($panel);\n                    }\n                });\n            }\n            if ($.History) {\n                setTimeout(function(){\n                    $.History.addHistory($('#navMenu .selected a').attr('parentid') + '_' + tabid, function(hash){\n                        var tabid = hash.substring(hash.indexOf('_')+1);\n                        var i = navTab._indexTabId(tabid);\n                        if (i >= 0) navTab._switchTab(i);\n                    }, tabid);\n                }, 10);\n            }\n            this._currentIndex = this._currentIndex + 1;\n            this._contextmenu($tabs.eq(this._currentIndex));\n        }\n        this._init();\n        this._scrollCurrent();\n        this._getTabs().eq(this._currentIndex).attr(\"url\", url);\n    }\n};\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n\n        /**\n         * options: reverse[true, false], eventType[click, hover],\n         * currentIndex[default index 0] stTab[tabs selector], stTabPanel[tab\n         * panel selector] ajaxClass[ajax load], closeClass[close tab]\n         */\n        tabs: function(options) {\n            var op = $.extend({\n                reverse: false, eventType: \"click\", currentIndex: 0, stTabHeader: \"> .tabsHeader\", stTab: \">.tabsHeaderContent>ul\", stTabPanel: \"> .tabsContent\" ,\n                ajaxClass: \"j-ajax\", closeClass: \"close\", prevClass: \"tabsLeft\", nextClass: \"tabsRight\"\n            }, options);\n            return this.each(function() {\n                initTab($(this));\n            });\n            function initTab(jT) {\n                var jSelector = jT.add($(\"> *\", jT));\n                var jTabHeader = $(op.stTabHeader, jSelector);\n                var jTabs = $(op.stTab + \" li\", jTabHeader);\n                var jGroups = $(op.stTabPanel + \" > *\", jSelector);\n                jTabs.unbind().find(\"a\").unbind();\n                jTabHeader.find(\".\" + op.prevClass).unbind();\n                jTabHeader.find(\".\" + op.nextClass).unbind();\n                jTabs.each(function(iTabIndex) {\n                    if (op.currentIndex == iTabIndex ) {\n                        $(this).addClass(\"selected\");\n                    } else {\n                        $(this).removeClass(\"selected\");\n                    }\n                    if (op.eventType == \"hover\" ) {\n                        $(this).hover(function(event) {\n                            switchTab(jT, iTabIndex)\n                        });\n                    } else {\n                        $(this).click(function(event) {\n                            switchTab(jT, iTabIndex)\n                        });\n                    }\n                    $(\"a\", this).each(function() {\n                        if ($(this).hasClass(op.ajaxClass) ) {\n                            $(this).click(function(event) {\n                                var jGroup = jGroups.eq(iTabIndex);\n                                if (this.href && !jGroup.attr(\"loaded\") ) {\n                                    jGroup.loadUrl(this.href, {}, function() {\n                                        jGroup.find(\"[layoutH]\").layoutH();\n                                        jGroup.attr(\"loaded\", true);\n                                    });\n                                }\n                                event.preventDefault();\n                            });\n                        } else if ($(this).hasClass(op.closeClass) ) {\n                            $(this).click(function(event) {\n                                jTabs.eq(iTabIndex).remove();\n                                jGroups.eq(iTabIndex).remove();\n                                if (iTabIndex == op.currentIndex ) {\n                                    op.currentIndex = ( iTabIndex + 1 < jTabs.size() ) ? iTabIndex: iTabIndex - 1;\n                                } else if (iTabIndex < op.currentIndex ) {\n                                    op.currentIndex = iTabIndex;\n                                }\n                                initTab(jT);\n                                return false;\n                            });\n                        }\n                    });\n                });\n                switchTab(jT, op.currentIndex);\n            }\n            function switchTab(jT, iTabIndex) {\n                var jSelector = jT.add($(\"> *\", jT));\n                var jTabHeader = $(op.stTabHeader, jSelector);\n                var jTabs = $(op.stTab + \" li\", jTabHeader);\n                var jGroups = $(op.stTabPanel + \" > *\", jSelector);\n                var jTab = jTabs.eq(iTabIndex);\n                var jGroup = jGroups.eq(iTabIndex);\n                if (op.reverse && ( jTab.hasClass(\"selected\") ) ) {\n                    jTabs.removeClass(\"selected\");\n                    jGroups.hide();\n                } else {\n                    op.currentIndex = iTabIndex;\n                    jTabs.removeClass(\"selected\");\n                    jTab.addClass(\"selected\");\n                    jGroups.hide().eq(op.currentIndex).show();\n                }\n                if (!jGroup.attr(\"inited\") ) {\n                    jGroup.attr(\"inited\", 1000).find(\"input[type=text]\").filter(\"[alt]\").inputAlert();\n                }\n            }\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu\n * @version 1.0\n */\n( function($) {\n    $.fn.extend({\n        jresize: function(options) {\n            if (typeof options == 'string' ) {\n                if (options == 'destroy' ) {\n                    return this.each(function() {\n                        var dialog = this;\n                        $(\"div[class^='resizable']\", dialog).each(function() {\n                            $(this).hide();\n                        });\n                    });\n                }\n            }\n            return this.each(function() {\n                var dialog = $(this);\n                var resizable = $(\".resizable\");\n                $(\"div[class^='resizable']\", dialog).each(function() {\n                    var bar = this;\n                    $(bar).mousedown(function(event) {\n                        $.pdialog.switchDialog(dialog);\n                        $.resizeTool.start(resizable, dialog, event, $(bar).attr(\"tar\"));\n                        return false;\n                    }).show();\n                });\n            });\n        }\n    });\n    $.resizeTool = {\n        start: function(resizable, dialog, e, target) {\n            $.pdialog.initResize(resizable, dialog, target);\n            $.data(resizable[0], 'layer-drag', {\n                options: $.extend($.pdialog._op, {\n                    target: target, dialog: dialog, stop: $.resizeTool.stop\n                })\n            });\n            $.layerdrag.start(resizable[0], e, $.pdialog._op);\n        }, stop: function() {\n            var data = $.data(arguments[0], 'layer-drag');\n            $.pdialog.resizeDialog(arguments[0], data.options.dialog, data.options.target);\n            $(\"body\").css(\"cursor\", \"\");\n            $(arguments[0]).hide();\n        }\n    };\n    $.layerdrag = {\n        start: function(obj, e, options) {\n            if (!$.layerdrag.current ) {\n                $.layerdrag.current = {\n                    el: obj, oleft: parseInt(obj.style.left) || 0, owidth: parseInt(obj.style.width) || 0, otop: parseInt(obj.style.top) || 0 ,\n                    oheight: parseInt(obj.style.height) || 0, ox: e.pageX || e.screenX, oy: e.pageY || e.clientY\n                };\n                $(document).bind('mouseup', $.layerdrag.stop);\n                $(document).bind('mousemove', $.layerdrag.drag);\n            }\n            return $.layerdrag.preventEvent(e);\n        }, drag: function(e) {\n            if (!e ) {\n                var e = window.event;\n            }\n            var current = $.layerdrag.current;\n            var data = $.data(current.el, 'layer-drag');\n            var lmove = ( e.pageX || e.screenX ) - current.ox;\n            var tmove = ( e.pageY || e.clientY ) - current.oy;\n            if ( ( e.pageY || e.clientY ) <= 0 || ( e.pageY || e.clientY ) >= ( $(window).height() - $(\".dialogHeader\", $(data.options.dialog)).outerHeight() ) ) {\n                return false;\n            }\n            var target = data.options.target;\n            var width = current.owidth;\n            var height = current.oheight;\n            if (target != \"n\" && target != \"s\" ) {\n                width += ( target.indexOf(\"w\") >= 0 ) ? -lmove: lmove;\n            }\n            if (width >= $.pdialog._op.minW ) {\n                if (target.indexOf(\"w\") >= 0 ) {\n                    current.el.style.left = ( current.oleft + lmove ) + 'px';\n                }\n                if (target != \"n\" && target != \"s\" ) {\n                    current.el.style.width = width + 'px';\n                }\n            }\n            if (target != \"w\" && target != \"e\" ) {\n                height += ( target.indexOf(\"n\") >= 0 ) ? -tmove: tmove;\n            }\n            if (height >= $.pdialog._op.minH ) {\n                if (target.indexOf(\"n\") >= 0 ) {\n                    current.el.style.top = ( current.otop + tmove ) + 'px';\n                }\n                if (target != \"w\" && target != \"e\" ) {\n                    current.el.style.height = height + 'px';\n                }\n            }\n            return $.layerdrag.preventEvent(e);\n        }, stop: function(e) {\n            var current = $.layerdrag.current;\n            var data = $.data(current.el, 'layer-drag');\n            $(document).unbind('mousemove', $.layerdrag.drag);\n            $(document).unbind('mouseup', $.layerdrag.stop);\n            if (data.options.stop ) {\n                data.options.stop.apply(current.el, [ current.el ]);\n            }\n            $.layerdrag.current = null;\n            return $.layerdrag.preventEvent(e);\n        }, preventEvent: function(e) {\n            if (e.stopPropagation ) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault ) {\n                e.preventDefault();\n            }\n            return false;\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu reference:dwz.drag.js, dwz.dialogDrag.js, dwz.resize.js,\n *         dwz.taskBar.js\n */\n( function($) {\n    $.pdialog = {\n        _op: {\n            height: 500, width: 850, minH: 40, minW: 50, total: 20, max: false, mask: false, resizable: true, drawable: true, maxable: true, minable: true ,focusNewWindow: false,\n            fresh: true\n        } ,\n        _current: null ,\n        _zIndex: 42 ,\n        getCurrent: function() {\n            return this._current;\n        } ,\n        reload: function(url, options) {\n            var op = $.extend({\n                data: {}, dialogId: \"\", callback: null\n            }, options);\n            var dialog = ( op.dialogId && $(\"body\").data(op.dialogId) ) || this._current;\n            if (dialog ) {\n                var jDContent = dialog.find(\".dialogContent\");\n                jDContent.ajaxUrl({\n                    type: \"POST\", url: url, data: op.data, callback: function(response) {\n                        jDContent.find(\"[layoutH]\").layoutH(jDContent);\n                        $(\":button.close\", dialog).click(function() {\n                            $.pdialog.close(dialog);\n                            return false;\n                        });\n                        if ($.isFunction(op.callback) ) {\n                            op.callback(response);\n                        }\n                    }\n                });\n            }\n        } ,\n        // \u6253\u5f00\u4e00\u4e2a\u5c42\n        open: function(url, dlgid, title, options) {\n            var op = $.extend({}, $.pdialog._op, options);\n            var dialog = $(\"body\").data(dlgid);\n            // \u91cd\u590d\u6253\u5f00\u4e00\u4e2a\u5c42\n            if (dialog && !op.focusNewWindow) {\n                if (dialog.is(\":hidden\") ) {\n                    dialog.show();\n                }\n                if (op.fresh || url != dialog.data(\"url\") ) {\n                    dialog.data(\"url\", url);\n                    dialog.find(\".dialogHeader\").find(\"h1\").text(title);\n                    this.switchDialog(dialog);\n                    var jDContent = dialog.find(\".dialogContent\");\n                    jDContent.loadUrl(url, {}, function() {\n                        jDContent.find(\"[layoutH]\").layoutH(jDContent);\n                        $(\"button.close\").click(function() {\n                            $.pdialog.close(dialog);\n                            return false;\n                        });\n                    });\n                }\n            } else { // \u6253\u5f00\u4e00\u4e2a\u5168\u65b0\u7684\u5c42\n                if(op.focusNewWindow){\n                  dlgid += Math.round(Math.random() * 10000000);\n                }\n                dialog = $($.parseHTML(DWZ.frag[\"dialogFrag\"], document, true)).appendTo($(\"body\"));\n                dialog = $(dialog);\n                dialog.data(\"id\", dlgid);\n                dialog.data(\"url\", url);\n                if (options.close ) {\n                    dialog.data(\"close\", options.close);\n                }\n                if (options.param ) {\n                    dialog.data(\"param\", options.param);\n                }\n                ( $.fn.bgiframe && dialog.bgiframe() );\n                dialog.find(\".dialogHeader\").find(\"h1\").text(title);\n                dialog.css(\"zIndex\", ( $.pdialog._zIndex += 2 ));\n                $.pdialog._init(dialog, options);\n                dialog.click(function() {\n                    $.pdialog.switchDialog(dialog);\n                });\n                if (op.resizable ) {\n                    dialog.jresize();\n                }\n                if (op.drawable ) {\n                    dialog.dialogDrag();\n                }\n                $(\"a.close\", dialog).click(function(event) {\n                    $.pdialog.close(dialog);\n                    return false;\n                });\n                if (op.maxable ) {\n                    $(\"a.maximize\", dialog).show().click(function(event) {\n                        $.pdialog.switchDialog(dialog);\n                        $.pdialog.maxsize(dialog);\n                        dialog.jresize(\"destroy\").dialogDrag(\"destroy\");\n                        return false;\n                    });\n                } else {\n                    $(\"a.maximize\", dialog).hide();\n                }\n                $(\"a.restore\", dialog).click(function(event) {\n                    $.pdialog.restore(dialog);\n                    dialog.jresize().dialogDrag();\n                    return false;\n                });\n                if (op.minable ) {\n                    $(\"a.minimize\", dialog).show().click(function(event) {\n                        $.pdialog.minimize(dialog);\n                        return false;\n                    });\n                } else {\n                    $(\"a.minimize\", dialog).hide();\n                }\n                $(\"div.dialogHeader a\", dialog).mousedown(function() {\n                    return false;\n                });\n                $(\"div.dialogHeader\", dialog).dblclick(function() {\n                    if ($(\"a.restore\", dialog).is(\":hidden\") ) {\n                        $(\"a.maximize\", dialog).trigger(\"click\");\n                    } else {\n                        $(\"a.restore\", dialog).trigger(\"click\");\n                    }\n                });\n                if (op.max ) {\n                    $.pdialog.maxsize(dialog);\n                    dialog.jresize(\"destroy\").dialogDrag(\"destroy\");\n                }\n                $(\"body\").data(dlgid, dialog);\n                $.pdialog._current = dialog;\n                // load data\n                var jDContent = $(\".dialogContent\", dialog);\n                jDContent.loadUrl(url, {}, function() {\n                    jDContent.find(\"[layoutH]\").layoutH(jDContent);\n                    $(\"button.close\").click(function() {\n                        $.pdialog.close(dialog);\n                        return false;\n                    });\n                });\n            }\n            if (op.mask ) {\n                dialog.css(\"zIndex\", 1000);\n                $(\"a.minimize\", dialog).hide();\n                dialog.data(\"mask\", true);\n                $(\"#dialogBackground\").show();\n            } else {\n                // add a task to task bar\n                if (op.minable ){\n                    $.taskBar.addDialog(dlgid, title);\n                }\n            }\n        } ,\n        /**\n         * \u5207\u6362\u5f53\u524d\u5c42\n         *\n         * @param {Object}\n         *            dialog\n         */\n        switchDialog: function(dialog) {\n            var index = dialog.css(\"zIndex\");\n            if ($.pdialog._current ) {\n                var cindex = $($.pdialog._current).css(\"zIndex\");\n                $.pdialog._current.css(\"zIndex\", index);\n                dialog.css(\"zIndex\", cindex);\n                $.pdialog._current = dialog;\n            }\n            $.taskBar.switchTask(dialog.data(\"id\"));\n        } ,\n        _init: function(dialog, options) {\n            var op = $.extend({}, this._op, options);\n            var height = op.height > op.minH ? op.height < $(document).height() ? op.height: $(document).height() : op.minH;\n            var width = op.width > op.minW ? op.width < $(document).width() ? op.width: $(document).width() : op.minW;\n            if (isNaN(dialog.height()) || dialog.height() < height ) {\n                dialog.height(height);\n                $(\".dialogContent\", dialog).height(height - $(\".dialogHeader\", dialog).outerHeight());\n            }\n            if (isNaN(dialog.css(\"width\")) || dialog.width() < width ) {\n                dialog.width(width);\n            }\n            var iTop = ( $(window).height() - dialog.height() ) / 2;\n            dialog.css({\n                left: ( $(window).width() - dialog.width() ) / 2, top: iTop > 0 ? iTop: 0\n            });\n        } ,\n        /**\n         * \u521d\u59cb\u5316\u534a\u900f\u660e\u5c42\n         *\n         * @param {Object}\n         *            resizable\n         * @param {Object}\n         *            dialog\n         * @param {Object}\n         *            target\n         */\n        initResize: function(resizable, dialog, target) {\n            $(\"body\").css(\"cursor\", target + \"-resize\");\n            resizable.css({\n                top: dialog.css(\"top\"), left: dialog.css(\"left\"), height: dialog.css(\"height\"), width: dialog.css(\"width\")\n            });\n            resizable.show();\n        } ,\n        /**\n         * \u6539\u53d8\u5de6\u53f3\u62d6\u52a8\u5c42\u7684\u9ad8\u5ea6\n         *\n         * @param {Object}\n         *            target\n         * @param {Object}\n         *            tmove\n         * @param {Object}\n         *            dialog\n         */\n        resizeTool: function(target, tmove, dialog) {\n            $(\"div[class^='resizable']\", dialog).filter(function() {\n                return $(this).attr(\"tar\") == 'w' || $(this).attr(\"tar\") == 'e';\n            }).each(function() {\n                $(this).css(\"height\", $(this).outerHeight() + tmove);\n            });\n        } ,\n        /**\n         * \u6539\u53d8\u539f\u59cb\u5c42\u7684\u5927\u5c0f\n         *\n         * @param {Object}\n         *            obj\n         * @param {Object}\n         *            dialog\n         * @param {Object}\n         *            target\n         */\n        resizeDialog: function(obj, dialog, target) {\n            var oleft = parseInt(obj.style.left);\n            var otop = parseInt(obj.style.top);\n            var height = parseInt(obj.style.height);\n            var width = parseInt(obj.style.width);\n            if (target == \"n\" || target == \"nw\" ) {\n                tmove = parseInt(dialog.css(\"top\")) - otop;\n            } else {\n                tmove = height - parseInt(dialog.css(\"height\"));\n            }\n            dialog.css({\n                left: oleft, width: width, top: otop, height: height\n            });\n            $(\".dialogContent\", dialog).css(\"width\", (width -10) + \"px\");\n            if (target != \"w\" && target != \"e\" ) {\n                var content = $(\".dialogContent\", dialog);\n                content.css({\n                    height: height - $(\".dialogHeader\", dialog).outerHeight()\n                });\n                content.find(\"[layoutH]\").layoutH(content);\n                $.pdialog.resizeTool(target, tmove, dialog);\n            }\n            $(window).trigger(DWZ.eventType.resizeGrid);\n        },\n        close: function(dialog) {\n            if (typeof dialog == 'string' ) {\n                dialog = $(\"body\").data(dialog);\n            }\n            var close = dialog.data(\"close\");\n            var go = true;\n            if (close && $.isFunction(close) ) {\n                var param = dialog.data(\"param\");\n                if (param && param != \"\" ) {\n                    param = DWZ.jsonEval(param);\n                    go = close(param);\n                } else {\n                    go = close();\n                }\n                if (!go ) {\n                    return;\n                }\n            }\n            dialog.hide();\n            if (dialog.data(\"mask\") ) {\n                $(\"#dialogBackground\").hide();\n            } else {\n                if (dialog.data(\"id\") ) {\n                    $.taskBar.closeDialog(dialog.data(\"id\"));\n                }\n            }\n            $(\"body\").removeData(dialog.data(\"id\"));\n            dialog.trigger(DWZ.eventType.pageClear).remove();\n            this._current = null;\n        },\n        closeCurrent: function() {\n            this.close($.pdialog._current);\n        },\n        checkTimeout: function() {\n            var $conetnt = $(\".dialogContent\", $.pdialog._current);\n            var json = DWZ.jsonEval($conetnt.html());\n            if (json && json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                this.closeCurrent();\n            }\n        },\n        maxsize: function(dialog) {\n            dialog.data(\"original\", {\n                top: dialog.css(\"top\"), left: dialog.css(\"left\"), width: dialog.css(\"width\"), height: dialog.css(\"height\")\n            });\n            $(\"a.maximize\", dialog).hide();\n            $(\"a.restore\", dialog).show();\n            var iContentW = $(window).width();\n            var iContentH = $(window).height() - $('footer').height();\n            dialog.css({\n                top: \"0px\", left: \"0px\", width: iContentW + \"px\", height: iContentH + \"px\"\n            });\n            $.pdialog._resizeContent(dialog,iContentH);\n        },\n        restore: function(dialog) {\n            var original = dialog.data(\"original\");\n            var dwidth = parseInt(original.width);\n            var dheight = parseInt(original.height);\n            dialog.css({\n                top: original.top, left: original.left, width: dwidth, height: dheight\n            });\n            $.pdialog._resizeContent(dialog,dheight);\n            $(\"a.maximize\", dialog).show();\n            $(\"a.restore\", dialog).hide();\n        },\n        minimize: function(dialog) {\n            dialog.hide();\n            var task = $.taskBar.getTask(dialog.data(\"id\"));\n            $(\".resizable\").css({\n                top: dialog.css(\"top\"), left: dialog.css(\"left\"), height: dialog.css(\"height\"), width: dialog.css(\"width\")\n            }).show().animate({\n                top: $(window).height() - 60, left: task.position().left, width: task.outerWidth(), height: task.outerHeight()\n            }, 250, function() {\n                $(this).hide();\n                $.taskBar.inactive(dialog.data(\"id\"));\n            });\n        },\n        _resizeContent: function(dialog,height) {\n            var content = $(\".dialogContent\", dialog);\n            content.css({\n                height: height - $(\".dialogHeader\", dialog).outerHeight()\n            });\n            content.find(\"[layoutH]\").layoutH(content);\n            $(window).trigger(DWZ.eventType.resizeGrid);\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n( function($) {\n    $.fn.dialogDrag = function(options) {\n        if (typeof options == 'string' ) {\n            if (options == 'destroy' ) {\n                return this.each(function() {\n                    var dialog = this;\n                    $(\"div.dialogHeader\", dialog).unbind(\"mousedown\");\n                });\n            }\n        }\n        return this.each(function() {\n            var dialog = $(this);\n            $(\"div.dialogHeader\", dialog).mousedown(function(e) {\n                $.pdialog.switchDialog(dialog);\n                dialog.data(\"task\", true);\n                setTimeout(function() {\n                    if (dialog.data(\"task\") ) {\n                        $.dialogDrag.start(dialog, e);\n                    }\n                }, 100);\n                return false;\n            }).mouseup(function(e) {\n                dialog.data(\"task\", false);\n                return false;\n            });\n        });\n    };\n    $.dialogDrag = {\n        currId: null, _init: function(dialog) {\n            this.currId = new Date().getTime();\n            var shadow = $(\"#dialogProxy\");\n            if (!shadow.size() ) {\n                shadow = $(DWZ.frag[\"dialogProxy\"]);\n                $(\"body\").append(shadow);\n            }\n            $(\"h1\", shadow).html($(\".dialogHeader h1\", dialog).text());\n        },\n        start: function(dialog, event) {\n            this._init(dialog);\n            var sh = $(\"#dialogProxy\");\n            sh.css({\n                left: dialog.css(\"left\"), top: dialog.css(\"top\"), height: dialog.css(\"height\"), width: dialog.css(\"width\"), zIndex: parseInt(dialog.css(\"zIndex\")) + 1\n            }).show();\n            $(\"div.dialogContent\", sh).css(\"height\", $(\"div.dialogContent\", dialog).css(\"height\"));\n            sh.data(\"dialog\", dialog);\n            dialog.css({\n                left: \"-10000px\", top: \"-10000px\"\n            });\n            $(sh).jDrag({\n                selector: \".dialogHeader\", stop: this.stop, event: event\n            });\n            return false;\n        },\n        stop: function() {\n            var sh = $(arguments[0]);\n            var dialog = sh.data(\"dialog\");\n            dialog.css({\n                left: $(sh).css(\"left\"), top: $(sh).css(\"top\")\n            });\n            $(sh).hide();\n        }\n    }\n} )(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    var _op = {\n        cursor: 'move', // selector \u7684\u9f20\u6807\u624b\u52bf\n        sortBoxs: 'div.sortDrag', // \u62d6\u52a8\u6392\u5e8f\u9879\u7236\u5bb9\u5668\n        replace: false, // 2\u4e2asortBox\u4e4b\u95f4\u62d6\u52a8\u66ff\u6362\n        items: '> *', // \u62d6\u52a8\u6392\u5e8f\u9879\u9009\u62e9\u5668\n        selector: '', // \u62d6\u52a8\u6392\u5e8f\u9879\u7528\u4e8e\u62d6\u52a8\u7684\u5b50\u5143\u7d20\u7684\u9009\u62e9\u5668\uff0c\u4e3a\u7a7a\u65f6\u7b49\u4e8eitem\n        zIndex: 1000\n    };\n    var sortDrag = {\n        start: function($sortBox, $item, event, op) {\n            var $placeholder = this._createPlaceholder($item);\n            var $helper = $item.clone();\n            var position = $item.position();\n            $helper.data('$sortBox', $sortBox).data('op', op).data('$item', $item).data('$placeholder', $placeholder);\n            $helper.addClass('sortDragHelper').css({\n                position: 'absolute', top: position.top + $sortBox.scrollTop(), left: position.left, zIndex: op.zIndex, width: $item.width() + 'px' ,\n                height: $item.height() + 'px'\n            }).jDrag({\n                selector: op.selector, drag: this.drag, stop: this.stop, event: event\n            });\n            $item.before($placeholder).before($helper).hide();\n            return false;\n        } ,\n        drag: function(el, event) {\n            var $helper = $(arguments[0]), $sortBox = $helper.data('$sortBox'), $placeholder = $helper.data('$placeholder');\n            var $items = $sortBox.find($helper.data('op')['items']).filter(':visible').filter(':not(.sortDragPlaceholder, .sortDragHelper)');\n            var helperPos = $helper.position(), firstPos = $items.eq(0).position();\n            var $overBox = sortDrag._getOverSortBox($helper, event);\n            if ($overBox.length > 0 && $overBox[0] != $sortBox[0] ) { // \u79fb\u52a8\u5230\u5176\u4ed6\u5bb9\u5668\n                $placeholder.appendTo($overBox);\n                $helper.data('$sortBox', $overBox);\n            } else {\n                for (var i = 0; i < $items.length; i++) {\n                    var $this = $items.eq(i), position = $this.position();\n                    if (helperPos.top > position.top + 10 ) {\n                        $this.after($placeholder);\n                    } else if (helperPos.top <= position.top ) {\n                        $this.before($placeholder);\n                        break;\n                    }\n                }\n            }\n        } ,\n        stop: function() {\n            var $helper = $(arguments[0]), $sortBox = $helper.data('$sortBox'), $item = $helper.data('$item'), $placeholder = $helper.data('$placeholder');\n            var position = $placeholder.position();\n            $helper.animate({\n                top: ( position.top + $sortBox.scrollTop() ) + \"px\", left: position.left + \"px\"\n            }, {\n                complete: function() {\n                    if ($helper.data('op')['replace'] ) { // 2\u4e2asortBox\u4e4b\u95f4\u66ff\u6362\u5904\u7406\n                        $srcBox = $item.parents(_op.sortBoxs + \":first\");\n                        $destBox = $placeholder.parents(_op.sortBoxs + \":first\");\n                        if ($srcBox[0] != $destBox[0] ) { // \u5224\u65ad\u662f\u5426\u79fb\u52a8\u5230\u5176\u4ed6\u5bb9\u5668\u4e2d\n                            $replaceItem = $placeholder.next();\n                            if ($replaceItem.size() > 0 ) {\n                                $replaceItem.insertAfter($item);\n                            }\n                        }\n                    }\n                    $item.insertAfter($placeholder).show();\n                    $placeholder.remove();\n                    $helper.remove();\n                }, duration: 300\n            });\n        } ,\n        _createPlaceholder: function($item) {\n            return $('<' + $item[0].nodeName + ' class=\"sortDragPlaceholder\"/>').css({\n                width: $item.outerWidth() + 'px', height: $item.outerHeight() + 'px', marginTop: $item.css('marginTop'), marginRight: $item.css('marginRight') ,\n                marginBottom: $item.css('marginBottom'), marginLeft: $item.css('marginLeft')\n            });\n        },\n        _getOverSortBox: function($item, e) {\n            var itemPos = $item.position();\n            var y = itemPos.top + ( $item.height() / 2 ), x = itemPos.left + ( $item.width() / 2 );\n            return $(_op.sortBoxs).filter(':visible').filter(function() {\n                var $sortBox = $(this), sortBoxPos = $sortBox.position(), sortBoxH = $sortBox.height(), sortBoxW = $sortBox.width();\n                return DWZ.isOver(y, x, sortBoxPos.top, sortBoxPos.left, sortBoxH, sortBoxW);\n            });\n        }\n    };\n    $.fn.sortDrag = function(options) {\n        return this.each(function() {\n            var op = $.extend({}, _op, options);\n            var $sortBox = $(this);\n            if ($sortBox.attr('selector') ) {\n                op.selector = $sortBox.attr('selector');\n            }\n            $sortBox.find(op.items).each(function(i) {\n                var $item = $(this), $selector = $item;\n                if (op.selector ) {\n                    $selector = $item.find(op.selector).css({\n                        cursor: op.cursor\n                    });\n                }\n                $selector.mousedown(function(event) {\n                    sortDrag.start($sortBox, $item, event, op);\n                    event.preventDefault();\n                });\n            });\n        });\n    }\n} )(jQuery);\n/**\n * Theme Plugins\n *\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n        cssTable: function(options) {\n            return this.each(function() {\n                var $this = $(this);\n                var $trs = $this.find('tbody>tr');\n                var $grid = $this.parent(); // table\n\n                $trs.each(function(index) {\n                    var $tr = $(this);\n                    $tr.click(function() {\n                        $trs.filter(\".selected\").removeClass(\"selected\");\n                        $tr.addClass(\"selected\");\n                        var sTarget = $tr.attr(\"target\");\n                        if (sTarget ) {\n                            if ($(\"#\" + sTarget, $grid).size() == 0 ) {\n                                $grid.prepend('<input id=\"' + sTarget + '\" type=\"hidden\" />');\n                            }\n                            $(\"#\" + sTarget, $grid).val($tr.attr(\"rel\"));\n                        }\n                    });\n                    if ($(\".edit\", $tr).length) {\n                        $tr.dblclick(function() {\n                            $(\".edit:eq(0)\", $tr).click();\n                        });\n                    } else if ($(\".panelBar .icon-edit\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).length ) {\n                        $tr.dblclick(function() {\n                            $(\".panelBar .icon-edit:eq(0)\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).parent().click();\n                        });\n                    }\n                });\n                $this.find(\"thead [orderField]\").orderBy({\n                    targetType: $this.attr(\"targetType\"), rel: $this.attr(\"rel\"), asc: $this.attr(\"asc\") || \"asc\", desc: $this.attr(\"desc\") || \"desc\"\n                });\n            });\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu v1.0\n * @author ZhangHuihua@msn.com 2011-4-1\n */\n(function($){\n    $.fn.jTable = function(options){\n        return this.each(function(){\n            var $table = $(this), nowrapTD = $table.attr(\"nowrapTD\");\n            var tlength = $table.width();\n            var aStyles = [];\n            var $tc = $table.parent().addClass(\"j-resizeGrid\"); // table parent container\n            var oldThs = $table.find(\"thead>tr:last-child\").find(\"th\");\n\n            for(var i = 0, l = oldThs.size(); i < l; i++) {\n                var $th = $(oldThs[i]);\n                var style = [], width = $th.innerWidth() - (100 * $th.innerWidth() / tlength)-2;\n                style[0] = parseInt(width);\n                style[1] = $th.attr(\"align\");\n                aStyles[aStyles.length] = style;\n            }\n            $(this).wrap(\"<div class='grid'></div>\");\n            var $grid = $table.parent().html($table.html());\n            var thead = $grid.find(\"thead\");\n            thead.wrap(\"<div class='gridHeader'><div class='gridThead'><table style='width:\" + (tlength - 20) + \"px;'></table></div></div>\");\n            var lastH = $(\">tr:last-child\", thead);\n            var ths = $(\">th\", lastH);\n            $(\"th\",thead).each(function(){\n                var $th = $(this);\n                $th.html(\"<div class='gridCol' title='\"+$th.text()+\"'>\"+ $th.html() +\"</div>\");\n            });\n\n            ths.each(function(i){\n                var $th = $(this), style = aStyles[i];\n                $th.addClass(style[1]).removeAttr(\"align\").removeAttr(\"width\").width(style[0]);\n            }).filter(\"[orderField]\").orderBy({\n                targetType: $table.attr(\"targetType\"),\n                rel:$table.attr(\"rel\"),\n                asc: $table.attr(\"asc\") || \"asc\",\n                desc:  $table.attr(\"desc\") || \"desc\"\n            });\n\n            var tbody = $grid.find(\">tbody\");\n            tbody.wrap(\"<div class='gridScroller' layoutH style='width:\" + $tc.width() + \"px;'><div class='gridTbody'><table style='width:\" + (tlength - 20) + \"px;'></table></div></div>\");\n            var ftr = $(\">tr:first-child\", tbody);\n            var $trs = tbody.find('>tr');\n\n            $trs.each(function(){\n                var $tr = $(this);\n                var $ftds = $(\">td\", this);\n\n                for (var i=0; i < $ftds.size(); i++) {\n                    var $ftd = $($ftds[i]);\n                    if (nowrapTD != \"false\") $ftd.html(\"<div>\" + $ftd.html() + \"</div>\");\n                    if (i < aStyles.length) $ftd.addClass(aStyles[i][1]);\n                }\n                $tr.click(function(){\n                    $trs.filter(\".selected\").removeClass(\"selected\");\n                    $tr.addClass(\"selected\");\n                    var sTarget = $tr.attr(\"target\");\n                    if (sTarget) {\n                        if ($(\"#\"+sTarget, $grid).size() == 0) {\n                            $grid.prepend('<input id=\"'+sTarget+'\" type=\"hidden\" />');\n                        }\n                        $(\"#\"+sTarget, $grid).val($tr.attr(\"rel\"));\n                    }\n                });\n                if ($(\".edit\", $tr).length) {\n                    $tr.dblclick(function() {\n                        $(\".edit:eq(0)\", $tr).click();\n                    });\n                } else if ($(\".icon-edit\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).length ) {\n                    $tr.dblclick(function() {\n                        $(\".icon-edit:eq(0)\", ( !$.pdialog.getCurrent() ) ? navTab.getCurrentPanel(): $.pdialog.getCurrent()).parent().click();\n                    });\n                }\n            });\n\n            $(\">td\",ftr).each(function(i){\n                if (i < aStyles.length) $(this).width(aStyles[i][0]);\n            });\n            $grid.append(\"<div class='resizeMarker' style='height:300px; left:57px;display:none;'></div><div class='resizeProxy' style='height:300px; left:377px;display:none;'></div>\");\n\n            var scroller = $(\".gridScroller\", $grid);\n            scroller.scroll(function(event){\n                var header = $(\".gridThead\", $grid);\n                if(scroller.scrollLeft() > 0){\n                    header.css(\"position\", \"relative\");\n                    var scroll = scroller.scrollLeft();\n                    header.css(\"left\", scroller.cssv(\"left\") - scroll);\n                }\n                if(scroller.scrollLeft() == 0) {\n                    header.css(\"position\", \"relative\");\n                    header.css(\"left\", \"0px\");\n                }\n                return false;\n            });\n\n\n            $(\">tr\", thead).each(function(){\n\n                $(\">th\", this).each(function(i){\n                    var th = this, $th = $(this);\n                    $th.mouseover(function(event){\n                        var offset = $.jTableTool.getOffset(th, event).offsetX;\n                        if($th.outerWidth() - offset < 5) {\n                            $th.css(\"cursor\", \"col-resize\").mousedown(function(event){\n                                $(\".resizeProxy\", $grid).show().css({\n                                    left: $.jTableTool.getRight(th)- $(\".gridScroller\", $grid).scrollLeft(),\n                                    top:$.jTableTool.getTop(th),\n                                    height:$.jTableTool.getHeight(th,$grid),\n                                    cursor:\"col-resize\"\n                                });\n                                $(\".resizeMarker\", $grid).show().css({\n                                        left: $.jTableTool.getLeft(th) + 1 - $(\".gridScroller\", $grid).scrollLeft(),\n                                        top: $.jTableTool.getTop(th),\n                                        height:$.jTableTool.getHeight(th,$grid)\n                                });\n                                $(\".resizeProxy\", $grid).jDrag($.extend(options, {scop:true, cellMinW:20, relObj:$(\".resizeMarker\", $grid)[0],\n                                        move: \"horizontal\",\n                                        event:event,\n                                        stop: function(){\n                                            var pleft = $(\".resizeProxy\", $grid).position().left;\n                                            var mleft = $(\".resizeMarker\", $grid).position().left;\n                                            var move = pleft - mleft - $th.outerWidth() -9;\n\n                                            var cols = $.jTableTool.getColspan($th);\n                                            var cellNum = $.jTableTool.getCellNum($th);\n                                            var oldW = $th.width(), newW = $th.width() + move;\n                                            var $dcell = $(\">td\", ftr).eq(cellNum - 1);\n\n                                            $th.width(newW + \"px\");\n                                            $dcell.width(newW+\"px\");\n\n                                            var $table1 = $(thead).parent();\n                                            $table1.width(($table1.width() - oldW + newW)+\"px\");\n                                            var $table2 = $(tbody).parent();\n                                            $table2.width(($table2.width() - oldW + newW)+\"px\");\n\n                                            $(\".resizeMarker,.resizeProxy\", $grid).hide();\n                                        }\n                                    })\n                                );\n                            });\n                        } else {\n                            $th.css(\"cursor\", $th.attr(\"orderField\") ? \"pointer\" : \"default\");\n                            $th.unbind(\"mousedown\");\n                        }\n                        return false;\n                    });\n                });\n            });\n\n            function _resizeGrid(){\n                $(\"div.j-resizeGrid\").each(function(){\n                    var width = $(this).innerWidth();\n                    if (width){\n                        $(\"div.gridScroller\", this).width(width+\"px\");\n                        if(width -20 > $(\"div.gridHeader>.gridThead>table\", this).width()) {\n                            $(\"div.gridHeader>.gridThead>table\", this).width((width - 20 )+\"px\");\n                            $(\"div.gridScroller>.gridTbody>table\", this).width((width - 20 )+\"px\");\n                        }\n                    }\n                });\n            }\n            $(window).unbind(DWZ.eventType.resizeGrid).bind(\"resizeGrid\", _resizeGrid);\n        });\n    };\n\n\n    $.jTableTool = {\n        getLeft:function(obj) {\n            var width = 0;\n            $(obj).prevAll().each(function(){\n                width += $(this).outerWidth();\n            });\n            return width - 1;\n        },\n        getRight:function(obj) {\n            var width = 0;\n            $(obj).prevAll().andSelf().each(function(){\n                width += $(this).outerWidth();\n            });\n            return width - 1;\n        },\n        getTop:function(obj) {\n            var height = 0;\n            $(obj).parent().prevAll().each(function(){\n                height += $(this).outerHeight();\n            });\n            return height;\n        },\n        getHeight:function(obj, parent) {\n            var height = 0;\n            var head = $(obj).parent();\n            head.nextAll().andSelf().each(function(){\n                height += $(this).outerHeight();\n            });\n            $(\".gridTbody\", parent).children().each(function(){\n                height += $(this).outerHeight();\n            });\n            return height;\n        },\n        getCellNum:function(obj) {\n            return $(obj).prevAll().andSelf().size();\n        },\n        getColspan:function(obj) {\n            return $(obj).attr(\"colspan\") || 1;\n        },\n        getStart:function(obj) {\n            var start = 1;\n            $(obj).prevAll().each(function(){\n                start += parseInt($(this).attr(\"colspan\") || 1);\n            });\n            return start;\n        },\n        getPageCoord:function(element){\n            var coord = {x: 0, y: 0};\n            while (element){\n                coord.x += element.offsetLeft;\n                coord.y += element.offsetTop;\n                element = element.offsetParent;\n            }\n            return coord;\n        },\n        getOffset:function(obj, evt){\n            if(/msie/.test(navigator.userAgent.toLowerCase())) {\n                var objset = $(obj).offset();\n                var evtset = {\n                    offsetX:evt.pageX || evt.screenX,\n                    offsetY:evt.pageY || evt.screenY\n                };\n                var offset ={\n                    offsetX: evtset.offsetX - objset.left,\n                    offsetY: evtset.offsetY - objset.top\n                };\n                return offset;\n            }\n            var target = evt.target;\n            if (target.offsetLeft == undefined){\n                target = target.parentNode;\n            }\n            var pageCoord = $.jTableTool.getPageCoord(target);\n            var eventCoord ={\n                x: window.pageXOffset + evt.clientX,\n                y: window.pageYOffset + evt.clientY\n            };\n            var offset ={\n                offsetX: eventCoord.x - pageCoord.x,\n                offsetY: eventCoord.y - pageCoord.y\n            };\n            return offset;\n        }\n    };\n})(jQuery);\n\n\n/**\n * @author Roger Wu\n * @version 1.0\n */\n( function($) {\n    $.fn.extend({\n        jTask: function(options) {\n            return this.each(function() {\n                var $task = $(this);\n                var id = $task.attr(\"id\");\n                $task.click(function(e) {\n                    var dialog = $(\"body\").data(id);\n                    if ($task.hasClass(\"selected\") ) {\n                        $(\"a.minimize\", dialog).trigger(\"click\");\n                    } else {\n                        if ($(dialog).is(\":hidden\") ) {\n                            $.taskBar.restoreDialog(dialog);\n                        } else {\n                            $(dialog).trigger(\"click\");\n                        }\n                    }\n                    $.taskBar.scrollCurrent($(this));\n                    return false;\n                });\n                $(\"div.close\", $task).click(function(e) {\n                    $.pdialog.close(id)\n                    return false;\n                });\n            });\n        }\n    });\n    $.taskBar = {\n        _taskBar: null ,\n        _taskBox: null ,\n        _prevBut: null ,\n        _nextBut: null ,\n        _op: {\n            id: \"taskbar\", taskBox: \"div.taskbarContent\", prevBut: \".taskbarLeft\", prevDis: \"taskbarLeftDisabled\", nextBut: \".taskbarRight\" ,\n            nextDis: \"taskbarRightDisabled\", selected: \"selected\", boxMargin: \"taskbarMargin\"\n        },\n        init: function(options) {\n            var $this = this;\n            $.extend(this._op, options);\n            this._taskBar = $(\"#\" + this._op.id);\n            if (this._taskBar.size() == 0 ) {\n                this._taskBar = $($.parseHTML(DWZ.frag[\"taskbar\"], document, true)).appendTo($(\"body\"));\n                this._taskBar.find(\".taskbarLeft\");\n                this._taskBar.find(\".taskbarRight\");\n            }\n            this._taskBox = this._taskBar.find(this._op.taskBox);\n            this._taskList = this._taskBox.find(\">ul\");\n            this._prevBut = this._taskBar.find(this._op.prevBut);\n            this._nextBut = this._taskBar.find(this._op.nextBut);\n            this._prevBut.click(function(e) {\n                $this.scrollLeft()\n            });\n            this._nextBut.click(function(e) {\n                $this.scrollRight()\n            });\n\n            this._contextmenu(this._taskBox); // taskBar\u53f3\u952e\u83dc\u5355\n        },\n        _contextmenu: function(obj) {\n            $(obj).contextMenu('dialogCM', {\n                bindings: {\n                    closeCurrent: function(t, m) {\n                        var obj = t.isTag(\"li\") ? t: $.taskBar._getCurrent();\n                        $(\"div.close\", obj).trigger(\"click\");\n                    }, closeOther: function(t, m) {\n                        var selector = t.isTag(\"li\") ? ( \"#\" + t.attr(\"id\") ): \".selected\";\n                        var tasks = $.taskBar._taskList.find(\">li:not(:\" + selector + \")\");\n                        tasks.each(function(i) {\n                            $(\"div.close\", tasks[i]).trigger(\"click\");\n                        });\n                    }, closeAll: function(t, m) {\n                        var tasks = $.taskBar._getTasks();\n                        tasks.each(function(i) {\n                            $(\"div.close\", tasks[i]).trigger(\"click\");\n                        });\n                    }\n                }, ctrSub: function(t, m) {\n                    var mCur = m.find(\"[rel='closeCurrent']\");\n                    var mOther = m.find(\"[rel='closeOther']\");\n                    if (!$.taskBar._getCurrent()[0] ) {\n                        mCur.addClass(\"disabled\");\n                        mOther.addClass(\"disabled\");\n                    } else {\n                        if ($.taskBar._getTasks().size() == 1 ) {\n                            mOther.addClass(\"disabled\");\n                        }\n                    }\n                }\n            });\n        },\n        _scrollCurrent: function() {\n            var iW = this._tasksW(this._getTasks());\n            if (iW > this._getTaskBarW() ) {\n                var $this = this;\n                var lTask = $(\">li:last-child\", this._taskList);\n                var left = this._getTaskBarW() - lTask.position().left - lTask.outerWidth(true);\n                this._taskList.animate({\n                    left: left + 'px'\n                }, 200, function() {\n                    $this._ctrlScrollBut();\n                });\n            } else {\n                this._ctrlScrollBut();\n            }\n        },\n        _getTaskBarW: function() {\n            return this._taskBox.width() - ( this._prevBut.is(\":hidden\") ? this._prevBut.width() + 2: 0 ) - ( this._nextBut.is(\":hidden\") ? this._nextBut.width() + 2: 0 );\n        },\n        _scrollTask: function(task) {\n            var $this = this;\n            if (task.position().left + this._getLeft() + task.outerWidth() > this._getBarWidth() ) {\n                var left = this._getTaskBarW() - task.position().left - task.outerWidth(true) - 2;\n                this._taskList.animate({\n                    left: left + 'px'\n                }, 200, function() {\n                    $this._ctrlScrollBut();\n                });\n            } else if (task.position().left + this._getLeft() < 0 ) {\n                var left = this._getLeft() - ( task.position().left + this._getLeft() );\n                this._taskList.animate({\n                    left: left + 'px'\n                }, 200, function() {\n                    $this._ctrlScrollBut();\n                });\n            }\n        } ,\n        /**\n         * \u63a7\u5236\u5de6\u53f3\u79fb\u52a8\u6309\u94ae\u4f55\u65f6\u663e\u793a\u4e0e\u9690\u85cf\n         */\n        _ctrlScrollBut: function() {\n            var iW = this._tasksW(this._getTasks());\n            if (this._getTaskBarW() > iW ) {\n                this._taskBox.removeClass(this._op.boxMargin);\n                this._nextBut.hide();\n                this._prevBut.hide();\n                if (this._getTasks().eq(0)[0] ) {\n                    this._scrollTask(this._getTasks().eq(0));\n                }\n            } else {\n                this._taskBox.addClass(this._op.boxMargin);\n                this._nextBut.show().removeClass(this._op.nextDis);\n                this._prevBut.show().removeClass(this._op.prevDis);\n                if (this._getLeft() >= 0 ) {\n                    this._prevBut.addClass(this._op.prevDis);\n                }\n                if (this._getLeft() <= this._getTaskBarW() - iW ) {\n                    this._nextBut.addClass(this._op.nextDis);\n                }\n            }\n        } ,\n        _getLeft: function() {\n            return this._taskList.position().left;\n        } ,\n        /**\n         * \u53d6\u5f97\u7b2c\u4e00\u4e2a\u5b8c\u5168\u663e\u793a\u5728taskbar\u4e0a\u7684\u4efb\u52a1\n         */\n        _visibleStart: function() {\n            var iLeft = this._getLeft();\n            var jTasks = this._getTasks();\n            for (var i = 0; i < jTasks.size(); i++) {\n                if (jTasks.eq(i).position().left + jTasks.eq(i).outerWidth(true) + iLeft >= 0 ) {\n                    return jTasks.eq(i);\n                }\n            }\n            return jTasks.eq(0);\n        } ,\n        /**\n         * \u53d6\u5f97\u6700\u540e\u4e00\u4e2a\u5b8c\u5168\u663e\u793a\u5728taskbar\u4e0a\u7684\u4efb\u52a1\n         */\n        _visibleEnd: function() {\n            var iLeft = this._getLeft();\n            var jTasks = this._getTasks();\n            for (var i = 0; i < jTasks.size(); i++) {\n                if (jTasks.eq(i).position().left + jTasks.eq(i).outerWidth(true) + iLeft > this._getBarWidth() ) {\n                    return jTasks.eq(i);\n                }\n            }\n            return jTasks.eq(jTasks.size() - 1);\n        } ,\n        /**\n         * \u53d6\u5f97\u6240\u6709\u7684\u4efb\u52a1\n         */\n        _getTasks: function() {\n            return this._taskList.find(\">li\");\n        } ,\n        /**\n         * \u8ba1\u7b97\u6240\u4f20\u5165\u7684\u6240\u6709\u4efb\u52a1\u7684\u5bbd\u5ea6\u548c\n         *\n         * @param {Object}\n         *            jTasks\n         */\n        _tasksW: function(jTasks) {\n            var iW = 0;\n            jTasks.each(function() {\n                iW += $(this).outerWidth(true);\n            });\n            return iW;\n        },\n        _getBarWidth: function() {\n            return this._taskBar.innerWidth();\n        } ,\n        /**\n         * \u5728\u4efb\u52a1\u680f\u4e0a\u65b0\u52a0\u4e00\u4e2a\u4efb\u52a1\n         *\n         * @param {Object}\n         *            id\n         * @param {Object}\n         *            title\n         */\n        addDialog: function(id, title) {\n            this.show();\n            var task = $(\"#\" + id, this._taskList);\n            if (!task[0] ) {\n                var taskFrag = '<li id=\"#taskid#\"><div class=\"taskbutton\">#title#</div><div class=\"close\"><i class=\"icon-remove\"></i></div></li>';\n                this._taskList.append(taskFrag.replace(\"#taskid#\", id).replace(\"#title#\", title));\n                task = $(\"#\" + id, this._taskList);\n                task.jTask();\n            } else {\n                $(\">div.taskbutton\", task).text(title);\n            }\n            this._contextmenu(task);\n            this.switchTask(id);\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u5173\u95ed\u4e00\u4e2a\u4efb\u52a1\n         *\n         * @param {Object}\n         *            id\n         */\n        closeDialog: function(obj) {\n            var task = ( typeof obj == 'string' ) ? $(\"#\" + obj, this._taskList): obj;\n            task.remove();\n            if (this._getTasks().size() == 0 ) {\n                this.hide();\n            }\n            this._scrollCurrent();\n        } ,\n        /**\n         * @param {Object}\n         *            id or dialog\n         */\n        restoreDialog: function(obj) {\n            var dialog = ( typeof obj == 'string' ) ? $(\"body\").data(obj): obj;\n            var id = ( typeof obj == 'string' ) ? obj: dialog.data(\"id\");\n            var task = $.taskBar.getTask(id);\n            $(\".resizable\").css({\n                top: $(window).height() - 60, left: $(task).position().left, height: $(task).outerHeight(), width: $(task).outerWidth()\n            }).show().animate({\n                top: $(dialog).css(\"top\"), left: $(dialog).css(\"left\"), width: $(dialog).css(\"width\"), height: $(dialog).css(\"height\")\n            }, 250, function() {\n                $(this).hide();\n                $(dialog).show();\n                $.pdialog._current = dialog;\n            });\n            $.taskBar.switchTask(id);\n        } ,\n        /**\n         * \u628a\u4efb\u52a1\u53d8\u6210\u4e0d\u662f\u5f53\u524d\u7684\n         *\n         * @param {Object}\n         *            id\n         */\n        inactive: function(id) {\n            $(\"#\" + id, this._taskList).removeClass(\"selected\");\n        } ,\n        /**\n         * \u5411\u5de6\u79fb\u4e00\u4e2a\u4efb\u52a1\n         */\n        scrollLeft: function() {\n            var task = this._visibleStart();\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u5411\u53f3\u79fb\u4e00\u4e2a\u4efb\u52a1\n         */\n        scrollRight: function() {\n            var task = this._visibleEnd();\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u79fb\u51fa\u5f53\u524d\u70b9\u51fb\u7684\u4efb\u52a1\n         *\n         * @param {Object}\n         *            task\n         */\n        scrollCurrent: function(task) {\n            this._scrollTask(task);\n        } ,\n        /**\n         * \u5207\u6362\u4efb\u52a1\n         *\n         * @param {Object}\n         *            id\n         */\n        switchTask: function(id) {\n            this._getCurrent().removeClass(\"selected\");\n            this.getTask(id).addClass(\"selected\");\n        }, _getCurrent: function() {\n            return this._taskList.find(\">.selected\");\n        }, getTask: function(id) {\n            return $(\"#\" + id, this._taskList);\n        } ,\n        /**\n         * \u663e\u793a\u4efb\u52a1\u680f\n         */\n        show: function() {\n            if (this._taskBar.is(\":hidden\") ) {\n                this._taskBar.css(\"top\", $(window).height() - 34 + this._taskBar.outerHeight()).show();\n                this._taskBar.animate({\n                    top: $(window).height() - this._taskBar.outerHeight()\n                }, 500);\n            }\n        } ,\n        /**\n         * \u9690\u85cf\u4efb\u52a1\u680f\n         */\n        hide: function() {\n            this._taskBar.animate({\n                top: $(window).height() - 29 + this._taskBar.outerHeight(true)\n            }, 500, function() {\n                $.taskBar._taskBar.hide();\n            });\n        }\n    }\n} )(jQuery);\n/**\n * html\u8f6c\u4e49\n * @param sHtml\n * @returns\n */\nfunction html2Escape(sHtml) {\n    return Base64.encode(sHtml);\n}\n/**\n * @author ZhangHuihua@msn.com\n */\n\n/**\n * \u666e\u901aajax\u8868\u5355\u63d0\u4ea4\n *\n * @param {Object}\n *            form\n * @param {Object}\n *            callback\n * @param {String}\n *            confirmMsg \u63d0\u793a\u786e\u8ba4\u4fe1\u606f\n */\nfunction validateCallback(form, callback, confirmMsg) {\n    var $form = $(form);\n    $(\"textarea.editor\", $form).each(function() {\n        if('ckeditor'==$(this).attr('editorType')) {\n            CKEDITOR.instances[$(this).data(\"id\")].updateElement();\n        } else if (\"kindeditor\"==$(this).attr(\"editorType\")){\n            KindEditor.sync('#'+$(this).data(\"id\"));\n        } else {\n            UE.instants[$(this).data(\"id\")].sync();\n        }\n        if('true'==$(this).attr('escape')){\n            $(this).val(html2Escape($(this).val()));\n        }\n    });\n    $(\"textarea.code\", $form).each(function() {\n         $(this).val(DWZ.instances[$(this).data(\"id\")].getValue());\n         if('true'==$(this).attr('escape')){\n             $(this).val(html2Escape($(this).val()));\n         }\n    });\n    if (!$form.valid() ) {\n        return false;\n    }\n    $(\"input[escape=true]\", $form).each(function() {\n        if($(this).val()){\n          $(this).attr('maxlength',128);\n          $(this).val(sha512($(this).val()));\n        }\n    });\n    var _submitFn = function() {\n        $.ajax({\n            type: form.method || 'POST', url: $form.attr(\"action\"), data: $form.serializeArray(), dataType: \"json\", cache: false, success: callback || DWZ.ajaxDone ,\n            error: DWZ.ajaxError\n        });\n    }\n    if (confirmMsg ) {\n        alertMsg.confirm(confirmMsg, {\n            okCall: _submitFn\n        });\n    } else {\n        _submitFn();\n    }\n    return false;\n}\n/**\n * \u5e26\u6587\u4ef6\u4e0a\u4f20\u7684ajax\u8868\u5355\u63d0\u4ea4\n *\n * @param {Object}\n *            form\n * @param {Object}\n *            callback\n */\nfunction iframeCallback(form, callback) {\n    var $form = $(form), $iframe = $(\"#callbackframe\");\n    if (!$form.valid() ) {\n        return false;\n    }\n    if ($iframe.size() == 0 ) {\n        $iframe = $($.parseHTML(\"<iframe id='callbackframe' name='callbackframe' src='about:blank' style='display:none'></iframe>\", document, true)).appendTo(\"body\");\n    }\n    if (!form.ajax ) {\n        $form.append('<input type=\"hidden\" name=\"ajax\" value=\"1\" />');\n    }\n    form.target = \"callbackframe\";\n    _iframeResponse($iframe[0], callback || DWZ.ajaxDone);\n}\nfunction _iframeResponse(iframe, callback) {\n    var $iframe = $(iframe), $document = $(document);\n    $document.trigger(\"ajaxStart\");\n    $iframe.bind(\"load\", function(event) {\n        $iframe.unbind(\"load\");\n        $document.trigger(\"ajaxStop\");\n\n        if (iframe.src == \"javascript:'%3Chtml%3E%3C/html%3E';\" || // For\n        // Safari\n        iframe.src == \"javascript:'<html></html>';\" ) { // For FF, IE\n            return;\n        }\n        var doc = iframe.contentDocument || iframe.document;\n\n        // fixing Opera 9.26,10.00\n        if (doc.readyState && doc.readyState != 'complete' ) {\n            return;\n        }\n        // fixing Opera 9.64\n        if (doc.body && doc.body.innerHTML == \"false\" ) {\n            return;\n        }\n        var response;\n        if (doc.XMLDocument ) {\n            // response is a xml document Internet Explorer property\n            response = doc.XMLDocument;\n        } else if (doc.body ) {\n            try {\n                response = $iframe.contents().find(\"body\").text();\n                response = $.parseJSON(response);\n            } catch (e) { // response is html document or plain text\n                response = doc.body.innerHTML;\n            }\n        } else {\n            // response is a xml document\n            response = doc;\n        }\n        callback(response);\n    });\n}\n\n/**\n * navTabAjaxDone\u662fDWZ\u6846\u67b6\u4e2d\u9884\u5b9a\u4e49\u7684\u8868\u5355\u63d0\u4ea4\u56de\u8c03\u51fd\u6570\uff0e \u670d\u52a1\u5668\u8f6c\u56denavTabId\u53ef\u4ee5\u628a\u90a3\u4e2anavTab\u6807\u8bb0\u4e3areloadFlag=1,\n * \u4e0b\u6b21\u5207\u6362\u5230\u90a3\u4e2anavTab\u65f6\u4f1a\u91cd\u65b0\u8f7d\u5165\u5185\u5bb9. callbackType\u5982\u679c\u662fcloseCurrent\u5c31\u4f1a\u5173\u95ed\u5f53\u524dtab\n * \u53ea\u6709callbackType=\"forward\"\u65f6\u9700\u8981forwardUrl\u503c\n * navTabAjaxDone\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u57fa\u672c\u53ef\u4ee5\u901a\u7528\u4e86\uff0c\u5982\u679c\u8fd8\u6709\u7279\u6b8a\u9700\u8981\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u56de\u8c03\u51fd\u6570. \u5982\u679c\u8868\u5355\u63d0\u4ea4\u53ea\u63d0\u793a\u64cd\u4f5c\u662f\u5426\u6210\u529f, \u5c31\u53ef\u4ee5\u4e0d\u6307\u5b9a\u56de\u8c03\u51fd\u6570.\n * \u6846\u67b6\u4f1a\u9ed8\u8ba4\u8c03\u7528DWZ.ajaxDone() <form action=\"/user.do?method=save\" onsubmit=\"return\n * validateCallback(this, navTabAjaxDone)\">\n * form\u63d0\u4ea4\u540e\u8fd4\u56dejson\u6570\u636e\u7ed3\u6784statusCode=DWZ.statusCode.ok\u8868\u793a\u64cd\u4f5c\u6210\u529f, \u505a\u9875\u9762\u8df3\u8f6c\u7b49\u64cd\u4f5c.\n * statusCode=DWZ.statusCode.error\u8868\u793a\u64cd\u4f5c\u5931\u8d25, \u63d0\u793a\u9519\u8bef\u539f\u56e0.\n * statusCode=DWZ.statusCode.timeout\u8868\u793asession\u8d85\u65f6\uff0c\u4e0b\u6b21\u70b9\u51fb\u65f6\u8df3\u8f6c\u5230DWZ.loginUrl\n * {\"statusCode\":\"200\", \"message\":\"\u64cd\u4f5c\u6210\u529f\", \"navTabId\":\"navNewsLi\",\n * \"forwardUrl\":\"\", \"callbackType\":\"closeCurrent\", \"rel\".\"xxxId\"}\n * {\"statusCode\":\"300\", \"message\":\"\u64cd\u4f5c\u5931\u8d25\"} {\"statusCode\":\"301\", \"message\":\"\u4f1a\u8bdd\u8d85\u65f6\"}\n */\nfunction navTabAjaxDone(json) {\n    DWZ.ajaxDone(json);\n    if (json[DWZ.keys.statusCode] == DWZ.statusCode.ok ) {\n        if (json.navTabId ) { // \u628a\u6307\u5b9anavTab\u9875\u9762\u6807\u8bb0\u4e3a\u9700\u8981\u201c\u91cd\u65b0\u8f7d\u5165\u201d\u3002\u6ce8\u610fnavTabId\u4e0d\u80fd\u662f\u5f53\u524dnavTab\u9875\u9762\u7684\n            if('page' == json.rel){\n                navTab.reloadFlag(json.navTabId, 2);\n            }else{\n                navTab.reloadFlag(json.navTabId);\n            }\n        } else { // \u91cd\u65b0\u8f7d\u5165\u5f53\u524dnavTab\u9875\u9762\n            var $pagerForm = $(\".pagerForm\", navTab.getCurrentPanel());\n            if(0!=$pagerForm.length){\n                $pagerForm.submit();\n            }\n        }\n        if (\"closeCurrent\" == json.callbackType ) {\n            setTimeout(function() {\n                navTab.closeCurrentTab(json.navTabId);\n            }, 100);\n        } else if (\"forward\" == json.callbackType ) {\n            if (json.navTabId ) {\n                navTab.reload(json.forwardUrl, {\n                    navTabId: json.navTabId\n                });\n            }else{\n                navTab.reload(json.forwardUrl);\n            }\n        } else if (\"forwardConfirm\" == json.callbackType ) {\n            alertMsg.confirm(json.confirmMsg || DWZ.msg(\"forwardConfirmMsg\"), {\n                okCall: function() {\n                    navTab.reload(json.forwardUrl);\n                }, cancelCall: function() {\n                    navTab.closeCurrentTab(json.navTabId);\n                }\n            });\n        }\n    }\n}\n\n/**\n * dialog\u4e0a\u7684\u8868\u5355\u63d0\u4ea4\u56de\u8c03\u51fd\u6570 \u5f53\u524dnavTab\u9875\u9762\u6709pagerForm\u5c31\u91cd\u65b0\u52a0\u8f7d \u670d\u52a1\u5668\u8f6c\u56denavTabId\uff0c\u53ef\u4ee5\u91cd\u65b0\u8f7d\u5165\u6307\u5b9a\u7684navTab.\n * statusCode=DWZ.statusCode.ok\u8868\u793a\u64cd\u4f5c\u6210\u529f, \u81ea\u52a8\u5173\u95ed\u5f53\u524ddialog\n * form\u63d0\u4ea4\u540e\u8fd4\u56dejson\u6570\u636e\u7ed3\u6784,json\u683c\u5f0f\u548cnavTabAjaxDone\u4e00\u81f4\n */\nfunction dialogAjaxDone(json) {\n    DWZ.ajaxDone(json);\n    if (json[DWZ.keys.statusCode] == DWZ.statusCode.ok ) {\n        if (json.navTabId ) {\n            navTab.reload(json.forwardUrl, {\n                navTabId: json.navTabId\n            });\n        } else {\n            var $panel = navTab.getCurrentPanel();\n            var $pagerForm = $(\".pagerForm\", navTab.getCurrentPanel());\n            if(0!=$pagerForm.length){\n                $pagerForm.submit();\n            }\n        }\n        if (\"closeCurrent\" == json.callbackType ) {\n            $.pdialog.closeCurrent();\n        }\n    }\n}\n\n/**\n * \u5904\u7406navTab\u4e0a\u7684\u67e5\u8be2, \u4f1a\u91cd\u65b0\u8f7d\u5165\u5f53\u524dnavTab\n *\n * @param {Object}\n *            form\n */\nfunction navTabSearch(form, navTabId) {\n    var $form = $(form);\n    navTab.reload($form.attr('action'), {\n        data: $form.serializeArray(), navTabId: navTabId\n    });\n    return false;\n}\n/**\n * \u5904\u7406dialog\u5f39\u51fa\u5c42\u4e0a\u7684\u67e5\u8be2, \u4f1a\u91cd\u65b0\u8f7d\u5165\u5f53\u524ddialog\n *\n * @param {Object}\n *            form\n */\nfunction dialogSearch(form) {\n    var $form = $(form);\n    if (form[DWZ.pageInfo.pageNum] ) {\n        form[DWZ.pageInfo.pageNum].value = 1;\n    }\n    $.pdialog.reload($form.attr('action'), {\n        data: $form.serializeArray()\n    });\n    return false;\n}\n/**\n * \u5904\u7406div\u4e0a\u7684\u5c40\u90e8\u67e5\u8be2, \u4f1a\u91cd\u65b0\u8f7d\u5165\u6307\u5b9adiv\n *\n * @param {Object}\n *            form\n */\nfunction divSearch(form, rel) {\n    var $form = $(form);\n    if (form[DWZ.pageInfo.pageNum] ) {\n        form[DWZ.pageInfo.pageNum].value = 1;\n    }\n    if (rel ) {\n        var $box = $(\"#\" + rel);\n        $box.ajaxUrl({\n            type: \"POST\", url: $form.attr(\"action\"), data: $form.serializeArray(), callback: function() {\n                $box.find(\"[layoutH]\").layoutH();\n            }\n        });\n    }\n    return false;\n}\n/**\n * @param {Object}\n *            args {pageNum:\"\",numPerPage:\"\",orderField:\"\",orderDirection:\"\"}\n * @param String\n *            formId \u5206\u9875\u8868\u5355\u9009\u62e9\u5668\uff0c\u975e\u5fc5\u586b\u9879\u9ed8\u8ba4\u503c\u662f \"pagerForm\"\n */\nfunction _getPagerForm($parent, args) {\n    var form = $(\".pagerForm\", $parent).get(0);\n    if (form ) {\n        if (args[\"pageNum\"] ) {\n            form[DWZ.pageInfo.pageNum].value = args[\"pageNum\"];\n        }\n        if (args[\"numPerPage\"] ) {\n            form[DWZ.pageInfo.numPerPage].value = args[\"numPerPage\"];\n        }\n        if (args[\"orderField\"] ) {\n            form[DWZ.pageInfo.orderField].value = args[\"orderField\"];\n        }\n        if (args[\"orderDirection\"] && form[DWZ.pageInfo.orderDirection] ) {\n            form[DWZ.pageInfo.orderDirection].value = args[\"orderDirection\"];\n        }\n    }\n    return form;\n}\n\n/**\n * \u5904\u7406navTab\u4e2d\u7684\u5206\u9875\u548c\u6392\u5e8f targetType: navTab \u6216 dialog rel: \u53ef\u9009 \u7528\u4e8e\u5c40\u90e8\u5237\u65b0div id\u53f7 data:\n * pagerForm\u53c2\u6570 {pageNum:\"n\", numPerPage:\"n\", orderField:\"xxx\",\n * orderDirection:\"\"} callback: \u52a0\u8f7d\u5b8c\u6210\u56de\u8c03\u51fd\u6570\n */\nfunction dwzPageBreak(options) {\n    var op = $.extend({\n        targetType: \"navTab\", rel: \"\", data: {\n            pageNum: \"\", numPerPage: \"\", orderField: \"\", orderDirection: \"\"\n        }, callback: null\n    }, options);\n    var $parent = op.targetType == \"dialog\" ? $.pdialog.getCurrent(): navTab.getCurrentPanel();\n    if (op.rel ) {\n        var $box = $parent.find(\"#\" + op.rel);\n        var form = _getPagerForm($box, op.data);\n        if (form ) {\n            $box.ajaxUrl({\n                type: \"POST\", url: $(form).attr(\"action\"), data: $(form).serializeArray(), callback: function() {\n                    $box.find(\"[layoutH]\").layoutH();\n                }\n            });\n        }\n    } else {\n        var form = _getPagerForm($parent, op.data);\n        var params = $(form).serializeArray();\n        if (op.targetType == \"dialog\" ) {\n            if (form ) {\n                $.pdialog.reload($(form).attr(\"action\"), {\n                    data: params, callback: op.callback\n                });\n            }\n        } else {\n            if (form ) {\n                navTab.reload($(form).attr(\"action\"), {\n                    data: params, callback: op.callback\n                });\n            }\n        }\n    }\n}\n/**\n * \u5904\u7406navTab\u4e2d\u7684\u5206\u9875\u548c\u6392\u5e8f\n *\n * @param args\n *            {pageNum:\"n\", numPerPage:\"n\", orderField:\"xxx\", orderDirection:\"\"}\n * @param rel\uff1a\n *            \u53ef\u9009 \u7528\u4e8e\u5c40\u90e8\u5237\u65b0div id\u53f7\n */\nfunction navTabPageBreak(args, rel) {\n    dwzPageBreak({\n        targetType: \"navTab\", rel: rel, data: args\n    });\n}\n/**\n * \u5904\u7406dialog\u4e2d\u7684\u5206\u9875\u548c\u6392\u5e8f \u53c2\u6570\u540c navTabPageBreak\n */\nfunction dialogPageBreak(args, rel) {\n    dwzPageBreak({\n        targetType: \"dialog\", rel: rel, data: args\n    });\n}\nfunction ajaxTodo(url, callback) {\n    var $callback = callback || navTabAjaxDone;\n    if (!$.isFunction($callback) ) {\n        $callback = eval('(' + callback + ')');\n    }\n    $.ajax({\n        type: 'POST', url: url, dataType: \"json\", cache: false, success: $callback, error: DWZ.ajaxError\n    });\n}\n\nfunction escapeJquery(srcString) {\n    var escapseResult = srcString;\n    var jsSpecialChars = [\"\\\\\", \"^\", \"$\", \"*\", \"?\", \".\", \"+\", \"(\", \")\", \"[\",\n        \"]\", \"|\", \"{\", \"}\"];\n    var jquerySpecialChars = [\"~\", \"`\", \"@\", \"#\", \"%\", \"&\", \"=\", \"'\", \"\\\"\",\n        \":\", \";\", \"<\", \">\", \",\", \"/\"];\n    for (var i = 0; i < jsSpecialChars.length; i++) {\n        escapseResult = escapseResult.replace(new RegExp(\"\\\\\"\n                + jsSpecialChars[i], \"g\"), \"\\\\\"\n                + jsSpecialChars[i]);\n    }\n    for (var i = 0; i < jquerySpecialChars.length; i++) {\n        escapseResult = escapseResult.replace(new RegExp(jquerySpecialChars[i],\n                \"g\"), \"\\\\\" + jquerySpecialChars[i]);\n    }\n    return escapseResult;\n}\n\n\n/**\n * http://www.uploadify.com/documentation/uploadify/onqueuecomplete/\n */\nfunction uploadifyQueueComplete(queueData) {\n    var msg = \"The total number of files uploaded: \" + queueData.uploadsSuccessful + \"<br/>\" + \"The total number of errors while uploading: \" + queueData.uploadsErrored + \"<br/>\"\n            + \"The total number of bytes uploaded: \" + queueData.queueBytesUploaded + \"<br/>\" + \"The average speed of all uploaded files: \" + queueData.averageSpeed;\n    if (queueData.uploadsErrored ) {\n        alertMsg.error(msg);\n    } else {\n        alertMsg.correct(msg);\n    }\n}\n/**\n * http://www.uploadify.com/documentation/uploadify/onuploadsuccess/\n */\nfunction uploadifySuccess(file, data, response) {\n    alert(data)\n}\n\n/**\n * http://www.uploadify.com/documentation/uploadify/onuploaderror/\n */\nfunction uploadifyError(file, errorCode, errorMsg) {\n    alertMsg.error(errorCode + \": \" + errorMsg);\n}\n\n/**\n * http://www.uploadify.com/documentation/\n *\n * @param {Object}\n *            event\n * @param {Object}\n *            queueID\n * @param {Object}\n *            fileObj\n * @param {Object}\n *            errorObj\n */\nfunction uploadifyError(event, queueId, fileObj, errorObj) {\n    alert(\"event:\" + event + \"\\nqueueId:\" + queueId + \"\\nfileObj.name:\" + fileObj.name + \"\\nerrorObj.type:\" + errorObj.type + \"\\nerrorObj.info:\" + errorObj.info);\n}\n$.fn.extend({\n    ajaxTodo: function() {\n        return this.each(function() {\n            var $this = $(this);\n            $this.click(function(event) {\n                var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n                DWZ.debug(url);\n                if (!url.isFinishedTm() ) {\n                    alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                    return false;\n                }\n                var title = $this.attr(\"title\");\n                if (title ) {\n                    alertMsg.confirm(title, {\n                        okCall: function() {\n                            ajaxTodo(url, $this.attr(\"callback\"));\n                        }\n                    });\n                } else {\n                    ajaxTodo(url, $this.attr(\"callback\"));\n                }\n                event.preventDefault();\n            });\n        });\n    }, dwzExport: function() {\n        function _doExport($this) {\n            var $p = $this.attr(\"targetType\") == \"dialog\" ? $.pdialog.getCurrent(): navTab.getCurrentPanel();\n            var $form = $(\".pagerForm\", $p);\n            var url = $this.attr(\"href\");\n            window.location = url + ( url.indexOf('?') == -1 ? \"?\": \"&\" ) + $form.serialize();\n        }\n        return this.each(function() {\n            var $this = $(this);\n            $this.click(function(event) {\n                var title = $this.attr(\"title\");\n                if (title ) {\n                    alertMsg.confirm(title, {\n                        okCall: function() {\n                            _doExport($this);\n                        }\n                    });\n                } else {\n                    _doExport($this);\n                }\n                event.preventDefault();\n            });\n        });\n    }\n});\n\n/**\n * @author ZhangHuihua@msn.com\n * @param {Object}\n *            opts Several options\n */\n( function($) {\n    $.fn.extend({\n        pagination: function(opts) {\n            var setting = {\n                first$: \"li.j-first\", prev$: \"li.j-prev\", next$: \"li.j-next\", last$: \"li.j-last\", nums$: \"li.j-num>a\", jumpto$: \"li.jumpto\" ,\n                pageNumFrag: '<li class=\"#liClass#\"><a href=\"javascript:;\">#pageNum#</a></li>'\n            };\n            return this.each(function() {\n                var $this = $(this);\n                var pc = new Pagination(opts);\n                var interval = pc.getInterval();\n                var pageNumFrag = '';\n                for (var i = interval.start; i < interval.end; i++) {\n                    pageNumFrag += setting.pageNumFrag.replaceAll(\"#pageNum#\", i).replaceAll(\"#liClass#\", i == pc.getCurrentPage() ? 'selected j-num': 'j-num');\n                }\n                $this.html(DWZ.frag.pagination.replaceAll(\"#pageNumFrag#\", pageNumFrag).replaceAll(\"#currentPage#\", pc.getCurrentPage())).find(\"li\");\n                var $first = $this.find(setting.first$);\n                var $prev = $this.find(setting.prev$);\n                var $next = $this.find(setting.next$);\n                var $last = $this.find(setting.last$);\n                if (pc.hasPrev() ) {\n                    $first.add($prev).find(\">span\").hide();\n                    _bindEvent($prev, pc.getCurrentPage() - 1, pc.targetType(), pc.rel());\n                    _bindEvent($first, 1, pc.targetType(), pc.rel());\n                } else {\n                    $first.add($prev).addClass(\"disabled\").find(\">a\").hide();\n                }\n                if (pc.hasNext() ) {\n                    $next.add($last).find(\">span\").hide();\n                    _bindEvent($next, pc.getCurrentPage() + 1, pc.targetType(), pc.rel());\n                    _bindEvent($last, pc.numPages(), pc.targetType(), pc.rel());\n                } else {\n                    $next.add($last).addClass(\"disabled\").find(\">a\").hide();\n                }\n                $this.find(setting.nums$).each(function(i) {\n                    _bindEvent($(this), i + interval.start, pc.targetType(), pc.rel());\n                });\n                $this.find(setting.jumpto$).each(function() {\n                    var $this = $(this);\n                    var $inputBox = $this.find(\":text\");\n                    var $button = $this.find(\"a\");\n                    $button.click(function(event) {\n                        var pageNum = $inputBox.val();\n                        if (pageNum && pageNum.isPositiveInteger() ) {\n                            dwzPageBreak({\n                                targetType: pc.targetType(), rel: pc.rel(), data: {\n                                    pageNum: pageNum\n                                }\n                            });\n                        }\n                    });\n                    $inputBox.keyup(function(event) {\n                        if (event.keyCode == DWZ.keyCode.ENTER ) {\n                            $button.click();\n                        }\n                    });\n                });\n            });\n            function _bindEvent($target, pageNum, targetType, rel) {\n                $target.bind(\"click\", {\n                    pageNum: pageNum\n                }, function(event) {\n                    dwzPageBreak({\n                        targetType: targetType, rel: rel, data: {\n                            pageNum: event.data.pageNum\n                        }\n                    });\n                    event.preventDefault();\n                });\n            }\n        } ,\n\n        orderBy: function(options) {\n            var op = $.extend({\n                targetType: \"navTab\", rel: \"\", asc: \"asc\", desc: \"desc\"\n            }, options);\n            return this.each(function() {\n                var $this = $(this).css({\n                    cursor: \"pointer\"\n                }).click(function() {\n                    var orderField = $this.attr(\"orderField\");\n                    var orderDirection = $this.hasClass(op.asc) ? op.desc: op.asc;\n                    dwzPageBreak({\n                        targetType: op.targetType, rel: op.rel, data: {\n                            orderField: orderField, orderDirection: orderDirection\n                        }\n                    });\n                });\n            });\n        }\n    });\n    var Pagination = function(opts) {\n        this.opts = $.extend({\n            targetType: \"navTab\", // navTab, dialog\n            rel: \"\", // \u7528\u4e8e\u5c40\u90e8\u5237\u65b0div id\u53f7\n            totalCount: 0, numPerPage: 10, pageNumShown: 10, currentPage: 1, callback: function() {\n                return false;\n            }\n        }, opts);\n    }\n    $.extend(Pagination.prototype, {\n        targetType: function() {\n            return this.opts.targetType\n        }, rel: function() {\n            return this.opts.rel\n        }, numPages: function() {\n            return Math.ceil(this.opts.totalCount / this.opts.numPerPage);\n        }, getInterval: function() {\n            var ne_half = Math.ceil(this.opts.pageNumShown / 2);\n            var np = this.numPages();\n            var upper_limit = np - this.opts.pageNumShown;\n            var start = this.getCurrentPage() > ne_half ? Math.max(Math.min(this.getCurrentPage() - ne_half, upper_limit), 0): 0;\n            var end = this.getCurrentPage() > ne_half ? Math.min(this.getCurrentPage() + ne_half, np): Math.min(this.opts.pageNumShown, np);\n            return {\n                start: start + 1, end: end + 1\n            };\n        }, getCurrentPage: function() {\n            var currentPage = parseInt(this.opts.currentPage);\n            if (isNaN(currentPage) ) {\n                return 1;\n            }\n            return currentPage;\n        }, hasPrev: function() {\n            return this.getCurrentPage() > 1;\n        }, hasNext: function() {\n            return this.getCurrentPage() < this.numPages();\n        }\n    });\n} )(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    var _lookup = {\n        currentGroup: \"\", suffix: \"\", $target: null, pk: \"id\", nextButton: null\n    };\n    var _util = {\n        _lookupPrefix: function(key) {\n            var strDot = _lookup.currentGroup ? \".\": \"\";\n            return _lookup.currentGroup + strDot + key + _lookup.suffix;\n        }, lookupPk: function(key) {\n            return this._lookupPrefix(key);\n        }, lookupField: function(key) {\n            return this.lookupPk(key);\n        }\n    };\n    $.extend({\n        bringBackSuggest: function(args) {\n            var $box = _lookup['$target'].parents(\".unitBox:first\");\n            $box.find(\":input\").each(function() {\n                var $input = $(this), inputName = $input.attr(\"name\");\n                for ( var key in args) {\n                    var name = ( _lookup.pk == key ) ? _util.lookupPk(key): _util.lookupField(key);\n                    if (name == inputName && \"\" != name ) {\n                        if($input.hasClass('editor')){\n                            if('ckeditor'==$input.attr('editorType')) {\n                                CKEDITOR.instances[$input.data(\"id\")].setDate(args[key]);\n                            } else if (\"kindeditor\"==$input.attr(\"editorType\")){\n                                KindEditor.html('#'+$input.data(\"id\"),args[key]);\n                            } else {\n                                UE.instants[$input.data(\"id\")].setContent(args[key]);\n                            }\n                        } else {\n                            $input.val(args[key]).trigger('change');\n                        }\n                        break;\n                    }\n                }\n            });\n        },\n        bringBack: function(json) {\n            if (json[DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n                if (json[DWZ.keys.message] ) {\n                    alertMsg.error(json[DWZ.keys.message]);\n                }\n            } else if (json[DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                alertMsg.error(json[DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                    okCall: function() {\n                        DWZ.loadLogin();\n                    }\n                });\n            } else {\n                $.bringBackSuggest(json);\n                $.pdialog.closeCurrent();\n            }\n        },\n        batchBringBack: function(args) {\n            if(_lookup.nextButton ) {\n                for ( var row in args) {\n                    _lookup.nextButton.click();\n                    if (args[row][DWZ.keys.statusCode] == DWZ.statusCode.error ) {\n                        if (args[row][DWZ.keys.message] ) {\n                            alertMsg.error(args[row][DWZ.keys.message]);\n                        }\n                        break;\n                    } else if (args[row][DWZ.keys.statusCode] == DWZ.statusCode.timeout ) {\n                        alertMsg.error(args[row][DWZ.keys.message] || DWZ.msg(\"sessionTimout\"), {\n                            okCall: function() {\n                                DWZ.loadLogin();\n                            }\n                        });\n                        break;\n                    } else {\n                        $.bringBackSuggest(args[row]);\n                    }\n                }\n            }\n            $.pdialog.closeCurrent();\n        }\n    });\n    $.fn.extend({\n        lookup: function() {\n            return this.each(function() {\n                var $this = $(this), options = {\n                    mask: true, width: $this.attr('width') || 820, height: $this.attr('height') || 500, maxable: eval($this.attr(\"maxable\") || \"true\") ,\n                    resizable: eval($this.attr(\"resizable\") || \"true\")\n                };\n                $this.click(function(event) {\n                    _lookup = $.extend(_lookup, {\n                        currentGroup: $this.attr(\"lookupGroup\") || \"\", suffix: $this.attr(\"suffix\") || \"\", $target: $this, pk: $this.attr(\"lookupPk\") || \"\"\n                    });\n                    var url = $this.attr(\"href\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n                    if (!url.isFinishedTm() ) {\n                        alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    $.pdialog.open(url, \"_blank\", $this.attr(\"title\") || $this.text(), options);\n                    return false;\n                });\n            });\n        } ,\n        multLookup: function() {\n            return this.each(function() {\n                var $this = $(this), args = {};\n                $this.click(function(event) {\n                    var $unitBox = $this.parents(\".unitBox:first\");\n                    $unitBox.find(\"[name='\" + $this.attr(\"multLookup\") + \"']\").filter(\":checked\").each(function() {\n                        var _args = DWZ.jsonEval($(this).val());\n                        for ( var key in _args) {\n                            var value = args[key] ? args[key] + \",\": \"\";\n                            args[key] = value + _args[key];\n                        }\n                    });\n                    if ($.isEmptyObject(args) ) {\n                        alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    $.bringBack(args);\n                    return false;\n                });\n            });\n        } ,\n        suggest: function() {\n            var op = {\n                suggest$: \"#suggest\", suggestShadow$: \"#suggestShadow\"\n            };\n            var selectedIndex = -1;\n            return this.each(function() {\n                var $input = $(this).attr('autocomplete', 'off').keydown(function(event) {\n                    if (event.keyCode == DWZ.keyCode.ENTER && $(op.suggest$).is(':visible') ) {\n                        return false; // \u5c4f\u853d\u56de\u8f66\u63d0\u4ea4\n                    }\n                });\n                var suggestFields = $input.attr('suggestFields').split(\",\");\n                function _show(event) {\n                    var offset = $input.offset();\n                    var iTop = offset.top + this.offsetHeight;\n                    var $suggest = $(op.suggest$);\n                    if ($suggest.size() == 0 ) {\n                        $suggest = $('<div id=\"suggest\"></div>').appendTo($('body'));\n                    }\n                    $suggest.css({\n                        left: offset.left + 'px', top: iTop + 'px'\n                    }).show();\n                    _lookup = $.extend(_lookup, {\n                        currentGroup: $input.attr(\"lookupGroup\") || \"\", suffix: $input.attr(\"suffix\") || \"\", $target: $input, pk: $input.attr(\"lookupPk\") || \"\"\n                    });\n                    var url = $input.attr(\"suggestUrl\").replaceTmById($(event.target).parents(\".unitBox:first\"));\n                    if (!url.isFinishedTm() ) {\n                        alertMsg.error($input.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    var postData = {};\n                    postData[$input.attr(\"postField\") || \"inputValue\"] = $input.val();\n                    $.ajax({\n                        global: false, type: 'POST', dataType: \"json\", url: url, cache: false, data: postData, success: function(response) {\n                            if (!response ) {\n                                return;\n                            }\n                            var html = '';\n                            $.each(response, function(i) {\n                                var liAttr = '', liLabel = '';\n                                for (var i = 0; i < suggestFields.length; i++) {\n                                    var str = this[suggestFields[i]];\n                                    if (str ) {\n                                        if (liLabel ) {\n                                            liLabel += '-';\n                                        }\n                                        liLabel += str;\n                                    }\n                                }\n                                for ( var key in this) {\n                                    if (liAttr ) {\n                                        liAttr += ',';\n                                    }\n                                    liAttr += key + \":'\" + this[key] + \"'\";\n                                }\n                                html += '<li lookupAttrs=\"' + liAttr + '\">' + liLabel + '</li>';\n                            });\n                            var $lis = $suggest.html('<ul>' + html + '</ul>').find(\"li\");\n                            $lis.click(function() {\n                                _select($(this));\n                                if($input.next().hasClass('suggestButton')){\n                                    $input.next().click();\n                                }\n                            });\n                            if ($lis.size() == 0 ) {\n                                var jsonStr = \"\";\n                                for (var i = 0; i < suggestFields.length; i++) {\n                                    if (_util.lookupField(suggestFields[i]) == event.target.name ) {\n                                        break;\n                                    }\n                                    if (jsonStr ) {\n                                        jsonStr += ',';\n                                    }\n                                    jsonStr += suggestFields[i] + \":''\";\n                                }\n                                jsonStr = \"{\" + _lookup.pk + \":'',\" + jsonStr + \"}\";\n                                $.bringBackSuggest(DWZ.jsonEval(jsonStr));\n                            }\n                        }, error: function() {\n                            $suggest.html('');\n                        }\n                    });\n                    $(document).bind(\"click\", _close);\n                    return false;\n                }\n                function _select($item) {\n                    var jsonStr = \"{\" + $item.attr('lookupAttrs') + \"}\";\n                    $.bringBackSuggest(DWZ.jsonEval(jsonStr));\n                }\n                function _close() {\n                    $(op.suggest$).html('').hide();\n                    selectedIndex = -1;\n                    $(document).unbind(\"click\", _close);\n                }\n                $input.focus(_show).click(false).keyup(function(event) {\n                    var $items = $(op.suggest$).find(\"li\");\n                    switch (event.keyCode) {\n                        case DWZ.keyCode.ESC:\n                        case DWZ.keyCode.TAB:\n                        case DWZ.keyCode.SHIFT:\n                        case DWZ.keyCode.HOME:\n                        case DWZ.keyCode.END:\n                        case DWZ.keyCode.LEFT:\n                        case DWZ.keyCode.RIGHT:\n                            break;\n                        case DWZ.keyCode.ENTER:\n                            _close();\n                            break;\n                        case DWZ.keyCode.DOWN:\n                            if (selectedIndex >= $items.size() - 1 ) {\n                                selectedIndex = -1;\n                            } else {\n                                selectedIndex++;\n                            }\n                            break;\n                        case DWZ.keyCode.UP:\n                            if (selectedIndex < 0 ) {\n                                selectedIndex = $items.size() - 1;\n                            } else {\n                                selectedIndex--;\n                            }\n                            break;\n                        default :\n                            _show(event);\n                    }\n                    $items.removeClass(\"selected\");\n                    if (selectedIndex >= 0 ) {\n                        var $item = $items.eq(selectedIndex).addClass(\"selected\");\n                        _select($item);\n                    }\n                });\n            });\n        } ,\n        itemDetail: function() {\n            return this.each(function() {\n                var $table = $(this).css(\"clear\", \"both\"), $tbody = $table.find(\"tbody\");\n                var fields = [ ];\n                $table.find(\"tr:first th[type]\").each(function(i) {\n                    var $th = $(this);\n                    var field = {\n                        type: $th.attr(\"type\") || \"text\", patternDate: $th.attr(\"dateFmt\") || \"yyyy-MM-dd\", name: $th.attr(\"name\") || \"\" ,\n                        defaultVal: $th.attr(\"defaultVal\") || \"\", size: $th.attr(\"size\") || \"12\", enumUrl: $th.attr(\"enumUrl\") || \"\" ,\n                        lookupGroup: $th.attr(\"lookupGroup\") || \"\", lookupUrl: $th.attr(\"lookupUrl\") || \"\", lookupPk: $th.attr(\"lookupPk\") || \"id\" ,\n                        suggestUrl: $th.attr(\"suggestUrl\"), suggestFields: $th.attr(\"suggestFields\"), postField: $th.attr(\"postField\") || \"\" ,\n                        fieldClass: $th.attr(\"fieldClass\") || \"\", fieldAttrs: $th.attr(\"fieldAttrs\") || \"\", title:$th.text()\n                    };\n                    fields.push(field);\n                });\n                $tbody.find(\"a.btnDel\").click(function() {\n                    var $btnDel = $(this);\n                    if ($btnDel.is(\"[href^=javascript:]\") ) {\n                        $btnDel.parents(\"tr:first\").remove();\n                        initSuffix($tbody);\n                        return false;\n                    }\n                    function delDbData() {\n                        $.ajax({\n                            type: 'POST', dataType: \"json\", url: $btnDel.attr('href'), cache: false, success: function() {\n                                $btnDel.parents(\"tr:first\").remove();\n                                initSuffix($tbody);\n                            }, error: DWZ.ajaxError\n                        });\n                    }\n                    if ($btnDel.attr(\"title\") ) {\n                        alertMsg.confirm($btnDel.attr(\"title\"), {\n                            okCall: delDbData\n                        });\n                    } else {\n                        delDbData();\n                    }\n                    return false;\n                });\n                var addButTxt = $table.attr('addButton') || \"Add New\";\n                if (addButTxt ) {\n                    var $addBut = $('<label style=\"width:auto;\"><button type=\"button\" class=\"button\">' + addButTxt + '</button></label>').insertBefore($table).find('button');\n                    var batchButtonTxt = $table.attr('batchButton') || \"Batch upload\";\n                    var batchUploadUrl = $table.attr('batchUploadUrl');\n                    if(batchUploadUrl){\n                        var $batchButton = $('<label><a class=\"button\" lookupGroup=\"\" href=\"'+batchUploadUrl+'\" width=\"1000\" height=\"600\" >'+batchButtonTxt+'</a></label>').initUI().insertBefore($table).find('a');\n                        $batchButton.click(function(){\n                            _lookup = $.extend(_lookup, {\n                                nextButton : $addBut\n                            });\n                        });\n                    } else {\n                        var $rowNum = $('<label><input type=\"text\" name=\"dwz_rowNum\" class=\"textInput\" value=\"1\" size=\"2\"/></label>').insertBefore($table).find('input');\n                    }\n\n                    var trTm = \"\";\n                    $addBut.click(function() {\n                        if (!trTm ) {\n                            trTm = trHtml(fields);\n                        }\n                        var rowNum = 1;\n                        if(!batchUploadUrl ){\n                            try {\n                                rowNum = parseInt($rowNum.val());\n                            } catch (e) {}\n                        }\n                        for (var i = 0; i < rowNum; i++) {\n                            var $tr = $($.parseHTML(trTm, document, true));\n                            $tr.appendTo($tbody).initUI().find(\"a.btnDel\").click(function() {\n                                $(this).parents(\"tr:first\").remove();\n                                initSuffix($tbody);\n                                return false;\n                            });\n                        }\n                        initSuffix($tbody);\n                        var $attach = $tr.find('.btnAttach');\n                        if(batchUploadUrl && $attach ){\n                            _lookup = $.extend(_lookup, {\n                                currentGroup: $attach.attr(\"lookupGroup\") || \"\", suffix: $attach.attr(\"suffix\") || \"\", $target: $attach, pk: $attach.attr(\"lookupPk\") || \"\"\n                            });\n                        }\n                    });\n                }\n            });\n\n            /**\n             * \u5220\u9664\u65f6\u91cd\u65b0\u521d\u59cb\u5316\u4e0b\u6807\n             */\n            function initSuffix($tbody) {\n                $tbody.find('>tr').each(function(i) {\n                    $(':input, a.btnLook, a.btnAttach', this).each(function() {\n                        var $this = $(this), name = $this.attr('name'), val = $this.val();\n                        if (name ) {\n                            $this.attr('name', name.replaceSuffix(i));\n                        }\n                        var lookupGroup = $this.attr('lookupGroup');\n                        if (lookupGroup ) {\n                            $this.attr('lookupGroup', lookupGroup.replaceSuffix(i));\n                        }\n                        var suffix = $this.attr(\"suffix\");\n                        if (suffix ) {\n                            $this.attr('suffix', suffix.replaceSuffix(i));\n                        }\n                        if (val && val.indexOf(\"#index#\") >= 0 ) {\n                            $this.val(val.replace('#index#', i + 1));\n                        }\n                    });\n                });\n            }\n            function tdHtml(field) {\n                var html = '', suffix = '';\n                if (field.name.endsWith(\"[#index#]\") ) {\n                    suffix = \"[#index#]\";\n                } else if (field.name.endsWith(\"[]\") ) {\n                    suffix = \"[]\";\n                }\n                var suffixFrag = suffix ? ' suffix=\"' + suffix + '\" ': '';\n                var attrFrag = '';\n                if (field.fieldAttrs ) {\n                    var attrs = DWZ.jsonEval(field.fieldAttrs);\n                    for ( var key in attrs) {\n                        attrFrag += key + '=\"' + attrs[key] + '\"';\n                    }\n                }\n                switch (field.type) {\n                    case 'del':\n                        html = '<a href=\"javascript:void(0)\" class=\"btnDel ' + field.fieldClass + '\"></a>';\n                        break;\n                    case 'lookup':\n                        var suggestFrag = '';\n                        if (field.suggestFields ) {\n                            suggestFrag = 'autocomplete=\"off\" lookupGroup=\"' + field.lookupGroup + '\"' + suffixFrag + ' suggestUrl=\"' + field.suggestUrl + '\" suggestFields=\"'\n                                    + field.suggestFields + '\"' + ' postField=\"' + field.postField + '\"';\n                        }\n                        html = '<input type=\"hidden\" name=\"' + field.lookupGroup + '.' + field.lookupPk + suffix + '\"/>' + '<input type=\"text\" name=\"' + field.name + '\"'\n                                + suggestFrag + ' lookupPk=\"' + field.lookupPk + '\" size=\"' + field.size + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '/>' + '<a class=\"btnLook\" href=\"'\n                                + field.lookupUrl + '\" lookupGroup=\"' + field.lookupGroup + '\" ' + suggestFrag + ' lookupPk=\"' + field.lookupPk + '\" ' + attrFrag + '>'+field.title+'</a>';\n                        break;\n                    case 'attach':\n                        html = '<input type=\"hidden\" name=\"' + field.lookupGroup + '.' + field.lookupPk + suffix + '\"/>' + '<input type=\"text\" name=\"' + field.name + '\" size=\"'\n                                + field.size + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '/>' + '<a class=\"btnAttach\" href=\"' + field.lookupUrl + '\" lookupGroup=\"' + field.lookupGroup\n                                + '\" ' + suffixFrag + ' lookupPk=\"' + field.lookupPk + '\" width=\"1000\" height=\"600\" ' + attrFrag + '>'+field.title+'</a>';\n                        break;\n                    case 'enum':\n                        $.ajax({\n                            type: \"POST\", dataType: \"html\", async: false, url: field.enumUrl, data: {\n                                inputName: field.name\n                            }, success: function(response) {\n                                html = response;\n                            }\n                        });\n                        break;\n                    case 'date':\n                        html = '<input type=\"text\" name=\"' + field.name + '\" value=\"' + field.defaultVal + '\" class=\"date ' + field.fieldClass + '\" dateFmt=\"' + field.patternDate\n                                + '\" size=\"' + field.size + '\" ' + attrFrag + '/>';\n                        break;\n                    case 'checkbox':\n                        html = '<input type=\"checkbox\" name=\"' + field.name + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '/>';\n                        break;\n                    case 'textarea':\n                        html = '<textarea name=\"' + field.name + '\" class=\"' + field.fieldClass + '\" ' + attrFrag + '>' + field.defaultVal + '</textarea>';\n                        break;\n                    case 'number':\n                        html = '<input type=\"number\" name=\"' + field.name + '\" value=\"' + field.defaultVal + '\" size=\"' + field.size + '\" class=\"' + field.fieldClass + '\" '\n                        + attrFrag + '/>';\n                        break;\n                    default :\n                        html = '<input type=\"text\" name=\"' + field.name + '\" value=\"' + field.defaultVal + '\" size=\"' + field.size + '\" class=\"' + field.fieldClass + '\" '\n                                + attrFrag + '/>';\n                        break;\n                }\n                return '<td>' + html + '</td>';\n            }\n            function trHtml(fields) {\n                var html = '';\n                $(fields).each(function() {\n                    html += tdHtml(this);\n                });\n                return '<tr class=\"unitBox\">' + html + '</tr>';\n            }\n        },\n        selectedTodo: function() {\n            function _getIds(selectedIds, targetType) {\n                var ids = \"\";\n                var $box = targetType == \"dialog\" ? $.pdialog.getCurrent(): navTab.getCurrentPanel();\n                $box.find(\"input:checked\").filter(\"[name='\" + selectedIds + \"']\").each(function(i) {\n                    var val = $(this).val();\n                    ids += i == 0 ? val: \",\" + val;\n                });\n                return ids;\n            }\n            return this.each(function() {\n                var $this = $(this);\n                var selectedIds = $this.attr(\"rel\") || \"ids\";\n                var postType = $this.attr(\"postType\") || \"map\";\n                $this.click(function() {\n                    var targetType = $this.attr(\"targetType\");\n                    var ids = _getIds(selectedIds, targetType);\n                    if (!ids ) {\n                        alertMsg.error($this.attr(\"warn\") || DWZ.msg(\"alertSelectMsg\"));\n                        return false;\n                    }\n                    var _callback = $this.attr(\"callback\") || ( targetType == \"dialog\" ? dialogAjaxDone: navTabAjaxDone );\n                    if (!$.isFunction(_callback) ) {\n                        _callback = eval('(' + _callback + ')');\n                    }\n                    function _doPost() {\n                        $.ajax({\n                            type: 'POST', url: $this.attr('href'), dataType: 'json', cache: false, data: function() {\n                                if (postType == 'map' ) {\n                                    return $.map(ids.split(','), function(val, i) {\n                                        return {\n                                            name: selectedIds, value: val\n                                        };\n                                    })\n                                } else {\n                                    var _data = {};\n                                    _data[selectedIds] = ids;\n                                    return _data;\n                                }\n                            }(), success: _callback, error: DWZ.ajaxError\n                        });\n                    }\n                    var title = $this.attr(\"title\");\n                    if (title ) {\n                        alertMsg.confirm(title, {\n                            okCall: _doPost\n                        });\n                    } else {\n                        _doPost();\n                    }\n                    return false;\n                });\n            });\n        }\n    });\n} )(jQuery);\n\n/**\n * reference dwz.util.date.js\n *\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.setRegional(\"datepicker\", {\n        dayNames: [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ] ,\n        monthNames: [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ]\n    });\n    $.fn.datepicker = function(opts) {\n        var setting = {\n            box$: \"#calendar\",\n            year$: \"#calendar [name=year]\", month$: \"#calendar [name=month]\",\n            tmInputs$: \"#calendar .time :text\", hour$: \"#calendar .time .hh\" , minute$: \"#calendar .time .mm\", second$: \"#calendar .time .ss\",\n            tmBox$: \"#calendar .tm\", tmUp$: \"#calendar .time .up\", tmDown$: \"#calendar .time .down\" ,\n            close$: \"#calendar .close\", main$: \"#calendar .main\", days$: \"#calendar .days\", dayNames$: \"#calendar .dayNames\" ,\n            clearBut$: \"#calendar .clearBut\", okBut$: \"#calendar .okBut\"\n        };\n        function changeTmMenu(sltClass) {\n            var $tm = $(setting.tmBox$);\n            $tm.removeClass(\"hh\").removeClass(\"mm\").removeClass(\"ss\");\n            if (sltClass ) {\n                $tm.addClass(sltClass);\n                $(setting.tmInputs$).removeClass(\"slt\").filter(\".\" + sltClass).addClass(\"slt\");\n            }\n        }\n        function clickTmMenu($input, type) {\n            $(setting.tmBox$).find(\".\" + type + \" li\").each(function() {\n                var $li = $(this);\n                $li.click(function() {\n                    $input.val($li.text());\n                });\n            });\n        }\n        function keydownInt(e) {\n            if (! ( ( e.keyCode >= 48 && e.keyCode <= 57 ) || ( e.keyCode == DWZ.keyCode.DELETE || e.keyCode == DWZ.keyCode.BACKSPACE ) ) ) {\n                return false;\n            }\n        }\n        function changeTm($input, type) {\n            var ivalue = parseInt($input.val()), istart = parseInt($input.attr(\"start\")) || 0, iend = parseInt($input.attr(\"end\"));\n            var istep = parseInt($input.attr('step') || 1);\n            if (type == 1 ) {\n                if (ivalue <= iend - istep ) {\n                    $input.val(ivalue + istep);\n                }\n            } else if (type == -1 ) {\n                if (ivalue >= istart + istep ) {\n                    $input.val(ivalue - istep);\n                }\n            } else if (ivalue > iend ) {\n                $input.val(iend);\n            } else if (ivalue < istart ) {\n                $input.val(istart);\n            }\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var dp = new Datepicker($this.val(), opts);\n            function generateCalendar(dp) {\n                var dw = dp.getDateWrap();\n                var minDate = dp.getMinDate();\n                var maxDate = dp.getMaxDate();\n                var monthStart = new Date(dw.year, dw.month - 1, 1);\n                var startDay = monthStart.getDay();\n                var dayStr = \"\";\n                if (startDay > 0 ) {\n                    monthStart.setMonth(monthStart.getMonth() - 1);\n                    var prevDateWrap = dp.getDateWrap(monthStart);\n                    for (var t = prevDateWrap.days - startDay + 1; t <= prevDateWrap.days; t++) {\n                        var _date = new Date(dw.year, dw.month - 2, t);\n                        var _ctrClass = ( _date >= minDate && _date <= maxDate ) ? '': 'disabled';\n                        dayStr += '<dd class=\"other ' + _ctrClass + '\" chMonth=\"-1\" day=\"' + t + '\">' + t + '</dd>';\n                    }\n                }\n                for (var t = 1; t <= dw.days; t++) {\n                    var _date = new Date(dw.year, dw.month - 1, t);\n                    var _ctrClass = ( _date >= minDate && _date <= maxDate ) ? '': 'disabled';\n                    if (t == dw.day ) {\n                        dayStr += '<dd class=\"slt ' + _ctrClass + '\" day=\"' + t + '\">' + t + '</dd>';\n                    } else {\n                        dayStr += '<dd class=\"' + _ctrClass + '\" day=\"' + t + '\">' + t + '</dd>';\n                    }\n                }\n                for (var t = 1; t <= 42 - startDay - dw.days; t++) {\n                    var _date = new Date(dw.year, dw.month, t);\n                    var _ctrClass = ( _date >= minDate && _date <= maxDate ) ? '': 'disabled';\n                    dayStr += '<dd class=\"other ' + _ctrClass + '\" chMonth=\"1\" day=\"' + t + '\">' + t + '</dd>';\n                }\n                var $days = $(setting.days$).html(dayStr).find(\"dd\");\n                $days.not('.disabled').click(function() {\n                    var $day = $(this);\n                    if (!dp.hasTime() ) {\n                        $this.val(dp.formatDate(dp.changeDay($day.attr(\"day\"), $day.attr(\"chMonth\"))));\n                        closeCalendar();\n                    } else {\n                        $days.removeClass(\"slt\");\n                        $day.addClass(\"slt\");\n                    }\n                });\n                if (!dp.hasDate() ) {\n                    $(setting.main$).addClass('nodate'); // \u4ec5\u65f6\u95f4\uff0c\u65e0\u65e5\u671f\n                }\n\n                if (dp.hasTime() ) {\n                    $(\"#calendar .time\").show();\n\n                    var iHour = dw.hour, iMinute = dw.minute, iSecond = dw.second;\n\n                    if (dp.opts.defaultTime && !$this.val()) {\n                        var timeStr = dp.opts.defaultTime.split(':');\n                        iHour = parseInt(timeStr[0]);\n                        iMinute = parseInt(timeStr[1]);\n                        iSecond = parseInt(timeStr[2]);\n                    }\n                    iMinute = parseInt(iMinute / dp.opts.mmStep) * dp.opts.mmStep;\n                    iSecond = dp.hasSecond() ? iSecond : 0;\n\n                    var $hour = $(setting.hour$).val(iHour).focus(function() {\n                        changeTmMenu(\"hh\");\n                    });\n                    var $minute = $(setting.minute$).val(iMinute).attr('step', dp.opts.mmStep).focus(function() {\n                        changeTmMenu(\"mm\");\n                    });\n                    var $second = $(setting.second$).val(iSecond).attr('step', dp.opts.ssStep).focus(function() {\n                        changeTmMenu(\"ss\");\n                    });\n                    $hour.add($minute).add($second).click(function() {\n                        return false\n                    });\n                    clickTmMenu($hour, \"hh\");\n                    clickTmMenu($minute, \"mm\");\n                    clickTmMenu($second, \"ss\");\n                    $(setting.box$).click(function() {\n                        changeTmMenu();\n                    });\n                    var $inputs = $(setting.tmInputs$);\n                    $inputs.keydown(keydownInt).each(function() {\n                        var $input = $(this);\n                        $input.keyup(function() {\n                            changeTm($input, 0);\n                        });\n                    });\n                    $(setting.tmUp$).click(function() {\n                        $inputs.filter(\".slt\").each(function() {\n                            changeTm($(this), 1);\n                        });\n                    });\n                    $(setting.tmDown$).click(function() {\n                        $inputs.filter(\".slt\").each(function() {\n                            changeTm($(this), -1);\n                        });\n                    });\n                    if (!dp.hasHour() ) {\n                        $hour.attr(\"disabled\", true);\n                    }\n                    if (!dp.hasMinute() ) {\n                        $minute.attr(\"disabled\", true);\n                    }\n                    if (!dp.hasSecond() ) {\n                        $second.attr(\"disabled\", true);\n                    }\n                }\n            }\n            function closeCalendar() {\n                $(setting.box$).remove();\n                $(document).unbind(\"click\", closeCalendar);\n            }\n            $this.click(function(event) {\n                closeCalendar();\n                var dp = new Datepicker($this.val(), opts);\n                var offset = $this.offset();\n                var iTop = offset.top + this.offsetHeight;\n                $($.parseHTML(DWZ.frag['calendarFrag'], document, true)).appendTo(\"body\").css({\n                    left: offset.left + 'px', top: iTop + 'px'\n                }).show().click(function(event) {\n                    event.stopPropagation();\n                });\n                ( $.fn.bgiframe && $(setting.box$).bgiframe() );\n                var dayNames = \"\";\n                $.each($.regional.datepicker.dayNames, function(i, v) {\n                    dayNames += \"<dt>\" + v + \"</dt>\"\n                });\n                $(setting.dayNames$).html(dayNames);\n                var dw = dp.getDateWrap();\n                var $year = $(setting.year$);\n                var yearstart = dp.getMinDate().getFullYear();\n                var yearend = dp.getMaxDate().getFullYear();\n                for (y = yearstart; y <= yearend; y++) {\n                    $year.append('<option value=\"' + y + '\"' + ( dw.year == y ? 'selected=\"selected\"': '' ) + '>' + y + '</option>');\n                }\n                var $month = $(setting.month$);\n                $.each($.regional.datepicker.monthNames, function(i, v) {\n                    var m = i + 1;\n                    $month.append('<option value=\"' + m + '\"' + ( dw.month == m ? 'selected=\"selected\"': '' ) + '>' + v + '</option>');\n                });\n\n                // generate calendar\n                generateCalendar(dp);\n                $year.add($month).change(function() {\n                    dp.changeDate($year.val(), $month.val());\n                    generateCalendar(dp);\n                });\n\n                // fix top\n                var iBoxH = $(setting.box$).outerHeight(true);\n                if (iTop > iBoxH && iTop > $(window).height() - iBoxH ) {\n                    $(setting.box$).css(\"top\", offset.top - iBoxH);\n                }\n                $(setting.close$).click(function() {\n                    closeCalendar();\n                });\n                $(setting.clearBut$).click(function() {\n                    $this.val(\"\");\n                    closeCalendar();\n                });\n                $(setting.okBut$).click(function() {\n                    var $dd = $(setting.days$).find(\"dd.slt\");\n                    if ($dd.hasClass(\"disabled\") ) {\n                        return false;\n                    }\n                    var date = dp.changeDay($dd.attr(\"day\"), $dd.attr(\"chMonth\"));\n                    if (dp.hasTime() ) {\n                        date.setHours(parseInt($(setting.hour$).val()));\n                        date.setMinutes(parseInt($(setting.minute$).val()));\n                        date.setSeconds(parseInt($(setting.second$).val()));\n                    }\n                    $this.val(dp.formatDate(date));\n                    closeCalendar();\n                });\n                $(document).bind(\"click\", closeCalendar);\n                return false;\n            });\n        });\n    }\n    var Datepicker = function(sDate, opts) {\n        this.opts = $.extend({\n            pattern: 'yyyy-MM-dd', minDate: \"1970-01-01\", maxDate: \"2099-12-31\", mmStep: 1, ssStep: 1\n        }, opts);\n\n        // \u52a8\u6001minDate\u3001maxDate\n        var now = new Date();\n        this.opts.minDate = now.formatDateTm(this.opts.minDate);\n        this.opts.maxDate = now.formatDateTm(this.opts.maxDate);\n        this.sDate = sDate.trim();\n    }\n    $.extend(Datepicker.prototype, {\n        get: function(name) {\n            return this.opts[name];\n        },\n        _getDays: function(y, m) {// \u83b7\u53d6\u67d0\u5e74\u67d0\u6708\u7684\u5929\u6570\n\n            return m == 2 ? ( y % 4 || ! ( y % 100 ) && y % 400 ? 28: 29 ): ( /4|6|9|11/.test(m) ? 30: 31 );\n        },\n        _minMaxDate: function(sDate) {\n            var _count = sDate.split('-').length - 1;\n            var _format = 'y-M-d';\n            if (_count == 1 ) {\n                _format = 'y-M';\n            } else if (_count == 0 ) {\n                _format = 'y';\n            }\n            return sDate.parseDate(_format);\n        },\n        getMinDate: function() {\n            return this._minMaxDate(this.opts.minDate);\n        },\n        getMaxDate: function() {\n            var _sDate = this.opts.maxDate;\n            var _count = _sDate.split('-').length - 1;\n            var _date = this._minMaxDate(_sDate);\n\n            if (_count < 2 ) { // format:y-M\u3001y\n\n                var _day = this._getDays(_date.getFullYear(), _date.getMonth() + 1);\n                _date.setDate(_day);\n                if (_count == 0 ) {// format:y\n\n                    _date.setMonth(11);\n                }\n            }\n            return _date;\n        },\n        getDateWrap: function(date) { // \u5f97\u5230\u5e74,\u6708,\u65e5\n\n            if (!date ) {\n                date = this.parseDate(this.sDate) || new Date();\n            }\n            var y = date.getFullYear();\n            var m = date.getMonth() + 1;\n            var days = this._getDays(y, m);\n            return {\n                year: y, month: m, day: date.getDate(), hour: date.getHours(), minute: date.getMinutes(), second: date.getSeconds(), days: days, date: date\n            }\n        } ,\n        /**\n         * @param {year:2010,\n         *            month:05, day:24}\n         */\n        changeDate: function(y, m, d) {\n            var date = new Date(y, m - 1, d || 1);\n            this.sDate = this.formatDate(date);\n            return date;\n        },\n        changeDay: function(day, chMonth) {\n            if (!chMonth ) {\n                chMonth = 0;\n            }\n            var dw = this.getDateWrap();\n            return this.changeDate(dw.year, dw.month + parseInt(chMonth), day);\n        },\n        parseDate: function(sDate) {\n            if (!sDate ) {\n                return null;\n            }\n            return sDate.parseDate(this.opts.pattern);\n        },\n        formatDate: function(date) {\n            return date.formatDate(this.opts.pattern);\n        },\n        hasHour: function() {\n            return this.opts.pattern.indexOf(\"H\") != -1;\n        },\n        hasMinute: function() {\n            return this.opts.pattern.indexOf(\"m\") != -1;\n        },\n        hasSecond: function() {\n            return this.opts.pattern.indexOf(\"s\") != -1;\n        },\n        hasTime: function() {\n            return this.hasHour() || this.hasMinute() || this.hasSecond();\n        },\n        hasDate: function() {\n            var _dateKeys = [\"y\", \"M\", \"d\", \"E\"];\n            for (var i = 0; i < _dateKeys.length; i++) {\n                if (this.opts.pattern.indexOf(_dateKeys[i]) != -1 ) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n( function($) {\n    $.extend($.fn, {\n        jBlindUp: function(options) {\n            var op = $.extend({\n                duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                $(this).animate({\n                    height: 0\n                }, {\n                    step: function() {\n                    }, duration: op.duration, easing: op.easing, complete: function() {\n                        $this.css({\n                            display: \"none\"\n                        });\n                        op.call();\n                    }\n                });\n            });\n        },\n        jBlindDown: function(options) {\n            var op = $.extend({\n                to: 0, duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                var fixedPanelHeight = ( op.to > 0 ) ? op.to: $.effect.getDimensions($this[0]).height;\n                $this.animate({\n                    height: fixedPanelHeight\n                }, {\n                    step: function() {\n                    }, duration: op.duration, easing: op.easing, complete: function() {\n                        $this.css({\n                            display: \"\"\n                        });\n                        op.call();\n                    }\n                });\n            });\n        },\n        jSlideUp: function(options) {\n            var op = $.extend({\n                to: 0, duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                $this.wrapInner(\"<div></div>\");\n                var fixedHeight = ( op.to > 0 ) ? op.to: $.effect.getDimensions($(\">div\", $this)[0]).height;\n                $this.css({\n                    overflow: \"visible\", position: \"relative\"\n                });\n                $(\">div\", $this).css({\n                    position: \"relative\"\n                }).animate({\n                    top: -fixedHeight\n                }, {\n                    easing: op.easing, duration: op.duration, complete: function() {\n                        $this.html($(this).html());\n                    }\n                });\n            });\n        },\n        jSlideDown: function(options) {\n            var op = $.extend({\n                to: 0, duration: 500, easing: \"swing\", call: function() {\n                }\n            }, options);\n            return this.each(function() {\n                var $this = $(this);\n                var fixedHeight = ( op.to > 0 ) ? op.to: $.effect.getDimensions($this[0]).height;\n                $this.wrapInner(\"<div style=\\\"top:-\" + fixedHeight + \"px;\\\"></div>\");\n                $this.css({\n                    overflow: \"visible\", position: \"relative\", height: \"0px\"\n                }).animate({\n                    height: fixedHeight\n                }, {\n                    duration: op.duration, easing: op.easing, complete: function() {\n                        $this.css({\n                            display: \"\", overflow: \"\"\n                        });\n                        op.call();\n                    }\n                });\n                $(\">div\", $this).css({\n                    position: \"relative\"\n                }).animate({\n                    top: 0\n                }, {\n                    easing: op.easing, duration: op.duration, complete: function() {\n                        $this.html($(this).html());\n                    }\n                });\n            });\n        }\n    });\n    $.effect = {\n        getDimensions: function(element, displayElement) {\n            var dimensions = new $.effect.Rectangle;\n            var displayOrig = $(element).css(\"display\");\n            var visibilityOrig = $(element).css(\"visibility\");\n            var isZero = $(element).height() == 0 ? true: false;\n            if ($(element).is(\":hidden\") ) {\n                $(element).css({\n                    visibility: \"hidden\", display: \"block\"\n                });\n                if (isZero ) {\n                    $(element).css(\"height\", \"\");\n                }\n                if ($.browser.opera ) {\n                    refElement.focus();\n                }\n            }\n            dimensions.height = $(element).outerHeight();\n            dimensions.width = $(element).outerWidth();\n            if (displayOrig == 'none' ) {\n                $(element).css({\n                    visibility: visibilityOrig, display: 'none'\n                });\n                if (isZero ) {\n                    $(element).css(\"height\", \"0px\");\n                }\n            }\n            return dimensions;\n        }\n    }\n    $.effect.Rectangle = function() {\n        this.width = 0;\n        this.height = 0;\n        this.unit = \"px\";\n    }\n} )(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.fn.extend({\n        checkboxCtrl: function(parent) {\n            return this.each(function() {\n                var $trigger = $(this);\n                $trigger.click(function() {\n                    var group = $trigger.attr(\"group\");\n                    if ($trigger.is(\":checkbox\") ) {\n                        var type = $trigger.is(\":checked\") ? \"all\": \"none\";\n                        if (group ) {\n                            $.checkbox.select(group, type, parent);\n                        }\n                    } else {\n                        if (group ) {\n                            $.checkbox.select(group, $trigger.attr(\"selectType\") || \"all\", parent);\n                        }\n                    }\n                });\n            });\n        }\n    });\n    $.checkbox = {\n        selectAll: function(_name, _parent) {\n            this.select(_name, \"all\", _parent);\n        },\n        unSelectAll: function(_name, _parent) {\n            this.select(_name, \"none\", _parent);\n        },\n        selectInvert: function(_name, _parent) {\n            this.select(_name, \"invert\", _parent);\n        },\n        select: function(_name, _type, _parent) {\n            $parent = $(_parent || document);\n            $checkboxLi = $parent.find(\":checkbox[name='\" + _name + \"']\");\n            switch (_type) {\n                case \"invert\":\n                    $checkboxLi.each(function() {\n                        $checkbox = $(this);\n                        $checkbox.prop('checked', !$checkbox.is(\":checked\"));\n                    });\n                    break;\n                case \"none\":\n                    $checkboxLi.prop('checked', false);\n                    break;\n                default :\n                    $checkboxLi.prop('checked', true);\n                    break;\n            }\n        }\n    };\n} )(jQuery);\n/**\n * @author Roger Wu\n */\n\n( function($) {\n    var allSelectBox = [ ];\n    var killAllBox = function(bid) {\n        $.each(allSelectBox, function(i) {\n            if (allSelectBox[i] != bid ) {\n                if (!$(\"#\" + allSelectBox[i])[0] ) {\n                    $(\"#op_\" + allSelectBox[i]).remove();\n                } else {\n                    $(\"#op_\" + allSelectBox[i]).css({\n                        height: \"\", width: \"\"\n                    }).hide();\n                }\n                $('#'+ allSelectBox[i]).children('a').removeClass('expand');\n                $(document).unbind(\"click\", killAllBox);\n            }\n        });\n    };\n    var _onchange = function(event) {\n        var $ref = $(\"select[name=\" + escapeJquery(event.data.$this.attr('ref'))+\"]\");\n        if ($ref.size() == 0 ) {\n            return false;\n        }\n        if(event.data.$this.attr('index')){\n            $ref=$ref.eq(event.data.$this.attr('index'));\n        }\n        $.ajax({\n            type: 'POST', dataType: \"json\", url: event.data.$this.attr('refUrl').replace(\"{value}\", encodeURIComponent(event.data.$this.val())), cache: false, data: {} ,\n            success: function(json) {\n                if (!json ) {\n                    return;\n                }\n                var html = '';\n                $.each(json, function(i) {\n                    if (json[i] && json[i].length > 1 ) {\n                        html += '<option value=\"' + json[i][0] + '\">' + json[i][1] + '</option>';\n                    }\n                });\n                var $refCombox = $ref.parents(\"div.combox:first\");\n                $ref.html(html).insertAfter($refCombox);\n                $refCombox.remove();\n                $ref.trigger(\"change\").combox();\n            }, error: DWZ.ajaxError\n        });\n    };\n    $.extend($.fn, {\n        comboxSelect: function(options) {\n            var op = $.extend({\n                selector: \">a\"\n            }, options);\n            return this.each(function() {\n                var box = $(this);\n                var selector = $(op.selector, box);\n                allSelectBox.push(box.attr(\"id\"));\n                $(op.selector, box).click(function() {\n                    var options = $(\"#op_\" + box.attr(\"id\"));\n                    var optionlist=$('ul',options);\n                    if (options.is(\":hidden\") ) {\n                        box.children('a').addClass('expand');\n                        if (options.height() > 300 ) {\n                            optionlist.css({\n                                height: \"300px\", overflow: \"scroll\"\n                            });\n                        }\n                        var top = box.offset().top + box[0].offsetHeight + 1;\n                        if (top + options.outerHeight(true) > $(window).height() - 20 ) {\n                            top = top - box.outerHeight(true) - options.outerHeight(true) - 1;\n                        }\n                        options.css({\n                            top: top, left: box.offset().left\n                        }).show();\n                        if($('a.selected',options).length){\n                            optionlist.stop().animate({scrollTop:$('a.selected',optionlist).offset().top-optionlist.offset().top+optionlist.scrollTop()},500);\n                        }\n                        $('.search input',options).focus().keyup(function(){\n                            var val = $(this).val();\n                            if(val){\n                                $('li',optionlist).hide();\n                                $('li a:contains('+escapeJquery(val)+')',optionlist).parent().show();\n                                $('li a',optionlist).each(function(){\n                                    if(0 < $(this).attr('value').indexOf(val)){\n                                        $(this).parent().show();\n                                    }\n                                });\n                            }else{\n                                $('li',optionlist).show();\n                            }\n                            $('li.disabled',optionlist).hide();\n                        }).click(function(){\n                            return false;\n                        }).val('');\n                        $('li',optionlist).show();\n                        $('li.disabled',optionlist).hide();\n                        killAllBox(box.attr(\"id\"));\n                        $(document).click(killAllBox);\n                    } else {\n                        $(document).unbind(\"click\", killAllBox);\n                        killAllBox();\n                    }\n                    return false;\n                });\n                $(\"#op_\" + box.attr(\"id\")).find(\" li\").comboxOption(selector, box);\n            });\n        } ,\n        comboxOption: function(selector, box) {\n            return this.each(function() {\n                $(\">a\", this).click(function() {\n                    var $this = $(this);\n                    $this.parent().parent().find(\".selected\").removeClass(\"selected\");\n                    $this.addClass(\"selected\");\n                    selector.text($this.text());\n                    var $input = $(\"select\", box);\n                    if ($input.val() != $this.attr(\"value\") ) {\n                        $(\"select\", box).val($this.attr(\"value\")).trigger(\"change\");\n                    }\n                });\n            });\n        } ,\n        combox: function() {\n            /* \u6e05\u7406\u4e0b\u62c9\u5c42 */\n            var _selectBox = [ ];\n            $.each(allSelectBox, function(i) {\n                if ($(\"#\" + allSelectBox[i])[0] ) {\n                    _selectBox.push(allSelectBox[i]);\n                } else {\n                    $(\"#op_\" + allSelectBox[i]).remove();\n                }\n            });\n            allSelectBox = _selectBox;\n            return this.each(function(i) {\n                var $this = $(this).removeClass(\"combox\");\n                var name = $this.attr(\"name\");\n                var value = $this.val();\n                var label = '';\n                if( \"undefined\" !== typeof value  && value){\n                    label = $(\"option[value=\" + escapeJquery(value) + \"]\", $this).text();\n                }else if(\"\" == value){\n                    label = $(\"option[value='']\", $this).text();\n                }\n                var ref = $this.attr(\"ref\");\n                var refUrl = $this.attr(\"refUrl\") || \"\";\n                var cid = $this.attr(\"id\") || Math.round(Math.random() * 10000000);\n                var select = '<div class=\"combox\"><div id=\"combox_' + cid + '\" class=\"select\"' + ( ref ? ' ref=\"' + ref + '\"': '' ) + '>';\n                select += '<a href=\"javascript:\" class=\"' + $this.attr(\"class\") + '\" name=\"' + name + '\" value=\"' + value + '\">' + label + '</a></div></div>';\n                var options = '<div class=\"comboxop\" id=\"op_combox_' + cid + '\"><div class=\"search\"><input type=\"text\" class=\"textInput\"/></div><ul>';\n                $(\"option\", $this).each(function() {\n                    var option = $(this);\n                    options += \"<li><a class=\\\"\" + ( value == option[0].value ? \"selected\": \"\" ) + \"\\\" href=\\\"#\\\" value=\\\"\" + option[0].value + \"\\\">\" + option[0].text\n                            + \"</a></li>\";\n                });\n                options += \"</ul></div>\";\n                $(\"body\").append(options);\n                $this.after(select);\n                $(\"div.select\", $this.next()).comboxSelect().append($this);\n                if (ref && refUrl ) {\n                    $this.unbind(\"change\", _onchange).bind(\"change\", {\n                        $this: $this\n                    }, _onchange);\n                }\n            });\n        }\n    });\n} )(jQuery);\n/**\n * jQuery ajax history plugins\n * @author \u5f20\u6167\u534e z@j-ui.com\n */\n\n\n(function($){\n\n    $.extend({\n\n        History: {\n            _hash: new Array(),\n            _currentHash: \"\",\n            _callback: undefined,\n            init: function(callback){\n                $.History._callback = callback;\n                var current_hash = location.hash.replace(/\\?.*$/, '');\n                $.History._currentHash = current_hash;\n\n                if (!$.support.leadingWhitespace) {\n                    if ($.History._currentHash == '') {\n                        $.History._currentHash = '#';\n                    }\n                    $(\"body\").append('<iframe id=\"jQuery_history\" style=\"display: none;\" src=\"about:blank\"></iframe>');\n                    var ihistory = $(\"#jQuery_history\")[0];\n                    var iframe = ihistory.contentDocument || ihistory.contentWindow.document;\n                    iframe.open();\n                    iframe.close();\n                    iframe.location.hash = current_hash;\n                }\n                if ($.isFunction(this._callback))\n                    $.History._callback(current_hash.skipChar(\"#\"));\n                setInterval($.History._historyCheck, 100);\n            },\n            _historyCheck: function(){\n                var current_hash = \"\";\n                if (!$.support.leadingWhitespace) {\n                    var ihistory = $(\"#jQuery_history\")[0];\n                    var iframe = ihistory.contentWindow;\n                    current_hash = iframe.location.hash.skipChar(\"#\").replace(/\\?.*$/, '');\n                } else {\n                    current_hash = location.hash.skipChar('#').replace(/\\?.*$/, '');\n                }\n                if (current_hash != $.History._currentHash) {\n                    $.History._currentHash = current_hash;\n                    $.History.loadHistory(current_hash);\n                }\n\n            },\n            addHistory: function(hash, fun, args){\n                $.History._currentHash = hash;\n                var history = [hash, fun, args];\n                $.History._hash.push(history);\n                if (!$.support.leadingWhitespace) {\n                    var ihistory = $(\"#jQuery_history\")[0];\n                    var iframe = ihistory.contentDocument || ihistory.contentWindow.document;\n                    iframe.open();\n                    iframe.close();\n                    iframe.location.hash = hash.replace(/\\?.*$/, '');\n                    location.hash = hash.replace(/\\?.*$/, '');\n                } else {\n                    location.hash = hash.replace(/\\?.*$/, '');\n                }\n            },\n            loadHistory: function(hash){\n                if (!$.support.leadingWhitespace) {\n                    location.hash = hash;\n                }\n                for (var i = 0; i < $.History._hash.length; i += 1) {\n                    if ($.History._hash[i][0] == hash) {\n                        $.History._hash[i][1]($.History._hash[i][2]);\n                        return;\n                    }\n                }\n            }\n        }\n    });\n})(jQuery);\n/**\n * @author ZhangHuihua@msn.com\n */\n( function($) {\n    $.printBox = function(rel) {\n        var _printBoxId = 'printBox';\n        var $contentBox = rel ? $('#' + rel): $(\"body\"), $printBox = $('#' + _printBoxId);\n        if ($printBox.size() == 0 ) {\n            $printBox = $('<div id=\"' + _printBoxId + '\"></div>').appendTo(\"body\");\n        }\n        $printBox.html($contentBox.html()).find(\"[layoutH]\").height(\"auto\");\n        window.print();\n    }\n} )(jQuery);"], "filenames": ["publiccms-parent/publiccms/src/main/webapp/resource/js/dwz.min.js"], "buggy_code_start_loc": [1945], "buggy_code_end_loc": [3022], "fixing_code_start_loc": [1945], "fixing_code_end_loc": [3018], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, was found in sanluan PublicCMS. Affected is the function initLink of the file dwz.min.js of the component Tab Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is a972dc9b1c94aea2d84478bf26283904c21e4ca2. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-213456.", "other": {"cve": {"id": "CVE-2022-3950", "sourceIdentifier": "cna@vuldb.com", "published": "2022-11-11T14:15:10.113", "lastModified": "2022-11-15T21:06:29.847", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, was found in sanluan PublicCMS. Affected is the function initLink of the file dwz.min.js of the component Tab Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is a972dc9b1c94aea2d84478bf26283904c21e4ca2. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-213456."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-707"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:publiccms:publiccms:*:*:*:*:*:*:*:*", "versionEndExcluding": "2022-09-14", "matchCriteriaId": "7E7A643A-5035-45D2-B806-705442725E9E"}]}]}], "references": [{"url": "https://github.com/sanluan/PublicCMS/commit/a972dc9b1c94aea2d84478bf26283904c21e4ca2", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.213456", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/sanluan/PublicCMS/commit/a972dc9b1c94aea2d84478bf26283904c21e4ca2"}}