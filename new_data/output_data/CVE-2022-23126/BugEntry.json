{"buggy_code": ["FROM grafana/grafana:7.5.12\n\nENV GF_ANALYTICS_REPORTING_ENABLED=FALSE \\\n    GF_AUTH_ANONYMOUS_ENABLED=true \\\n    GF_AUTH_BASIC_ENABLED=false \\\n    GF_PATHS_PLUGINS=\"/var/lib/grafana-plugins\" \\\n    GF_SECURITY_ADMIN_PASSWORD=admin \\\n    GF_SECURITY_ADMIN_USER=admin \\\n    GF_SECURITY_ALLOW_EMBEDDING=true \\\n    GF_SECURITY_DISABLE_GRAVATAR=true \\\n    GF_USERS_ALLOW_SIGN_UP=false \\\n    DATABASE_PORT=5432\n\nUSER root\n\nRUN mkdir -p \"$GF_PATHS_PLUGINS\" && \\\n    chown -R grafana \"$GF_PATHS_PLUGINS\"\n\nUSER grafana\n\nRUN grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" plugins install pr0ps-trackmap-panel 2.1.2 && \\\n    grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" plugins install natel-discrete-panel 0.1.0 && \\\n    grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" plugins install grafana-piechart-panel 1.6.1 && \\\n    grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" --pluginUrl https://github.com/panodata/grafana-map-panel/releases/download/0.15.0/grafana-map-panel-0.15.0.zip plugins install grafana-worldmap-panel-ng\n\nCOPY logo.svg /usr/share/grafana/public/img/grafana_icon.svg\nCOPY favicon.png /usr/share/grafana/public/img/fav32.png\nCOPY apple-touch-icon.png /usr/share/grafana/public/img/apple-touch-icon.png\n\nCOPY datasource.yml /etc/grafana/provisioning/datasources/\nCOPY dashboards.yml /etc/grafana/provisioning/dashboards/\nCOPY dashboards/internal/*.json /dashboards_internal/\nCOPY dashboards/reports/*.json /dashboards_reports/\nCOPY dashboards/*.json /dashboards/\n\nEXPOSE 3000\n", "---\ntitle: Docker install\nsidebar_label: Docker\n---\n\nThis document provides the necessary steps for installation of TeslaMate on a any system that runs Docker. For a walkthrough that provides the necessary steps for manual installation see [Manual Install](debian.md).\n\nThis setup is recommended only if you are running TeslaMate **on your home network**, as otherwise your Tesla API tokens might be at risk. If you intend to expose TeslaMate directly to the internet check out the [advanced guides](../guides/traefik.md).\n\n## Requirements\n\n- Docker _(if you are new to Docker, see [Installing Docker and Docker Compose](https://dev.to/rohansawant/installing-docker-and-docker-compose-on-the-raspberry-pi-in-5-simple-steps-3mgl))_\n- A Machine that's always on, so TeslaMate can continually fetch data\n- At least 1 GB of RAM on the machine for the installation to succeed.\n- External internet access, to talk to tesla.com\n\n## Instructions\n\n1. Create a file called `docker-compose.yml` with the following content:\n\n   ```yml title=\"docker-compose.yml\"\n   version: \"3\"\n\n   services:\n     teslamate:\n       image: teslamate/teslamate:latest\n       restart: always\n       environment:\n         - DATABASE_USER=teslamate\n         - DATABASE_PASS= #insert your secure password!\n         - DATABASE_NAME=teslamate\n         - DATABASE_HOST=database\n         - MQTT_HOST=mosquitto\n       ports:\n         - 4000:4000\n       volumes:\n         - ./import:/opt/app/import\n       cap_drop:\n         - all\n\n     database:\n       image: postgres:13\n       restart: always\n       environment:\n         - POSTGRES_USER=teslamate\n         - POSTGRES_PASSWORD= #insert your secure password!\n         - POSTGRES_DB=teslamate\n       volumes:\n         - teslamate-db:/var/lib/postgresql/data\n\n     grafana:\n       image: teslamate/grafana:latest\n       restart: always\n       environment:\n         - DATABASE_USER=teslamate\n         - DATABASE_PASS= #insert your secure password!\n         - DATABASE_NAME=teslamate\n         - DATABASE_HOST=database\n       ports:\n         - 3000:3000\n       volumes:\n         - teslamate-grafana-data:/var/lib/grafana\n\n     mosquitto:\n       image: eclipse-mosquitto:2\n       restart: always\n       command: mosquitto -c /mosquitto-no-auth.conf\n       # ports:\n       #   - 1883:1883\n       volumes:\n         - mosquitto-conf:/mosquitto/config\n         - mosquitto-data:/mosquitto/data\n\n   volumes:\n     teslamate-db:\n     teslamate-grafana-data:\n     mosquitto-conf:\n     mosquitto-data:\n   ```\n\n2. Choose your secure database password and insert it at every occurence of `DATABASE_PASS` and `POSTGRES_PASSWORD`\n\n3. Start the docker containers with `docker-compose up`. To run the containers in the background add the `-d` flag:\n\n   ```bash\n   docker-compose up -d\n   ```\n\n## Usage\n\n1. Open the web interface [http://your-ip-address:4000](http://localhost:4000)\n2. Sign in with your Tesla account\n3. The Grafana dashboards are available at [http://your-ip-address:3000](http://localhost:3000).\n\n## [Update](../upgrading.mdx)\n\nTo update the running TeslaMate configuration to the latest version, run the following commands:\n\n```bash\ndocker-compose pull\ndocker-compose up -d\n```\n"], "fixing_code": ["FROM grafana/grafana:7.5.12\n\nENV GF_ANALYTICS_REPORTING_ENABLED=FALSE \\\n    GF_AUTH_ANONYMOUS_ENABLED=false \\\n    GF_AUTH_BASIC_ENABLED=false \\\n    GF_PATHS_PLUGINS=\"/var/lib/grafana-plugins\" \\\n    GF_SECURITY_ADMIN_PASSWORD=admin \\\n    GF_SECURITY_ADMIN_USER=admin \\\n    GF_SECURITY_ALLOW_EMBEDDING=true \\\n    GF_SECURITY_DISABLE_GRAVATAR=true \\\n    GF_USERS_ALLOW_SIGN_UP=false \\\n    DATABASE_PORT=5432\n\nUSER root\n\nRUN mkdir -p \"$GF_PATHS_PLUGINS\" && \\\n    chown -R grafana \"$GF_PATHS_PLUGINS\"\n\nUSER grafana\n\nRUN grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" plugins install pr0ps-trackmap-panel 2.1.2 && \\\n    grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" plugins install natel-discrete-panel 0.1.0 && \\\n    grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" plugins install grafana-piechart-panel 1.6.1 && \\\n    grafana-cli --pluginsDir \"${GF_PATHS_PLUGINS}\" --pluginUrl https://github.com/panodata/grafana-map-panel/releases/download/0.15.0/grafana-map-panel-0.15.0.zip plugins install grafana-worldmap-panel-ng\n\nCOPY logo.svg /usr/share/grafana/public/img/grafana_icon.svg\nCOPY favicon.png /usr/share/grafana/public/img/fav32.png\nCOPY apple-touch-icon.png /usr/share/grafana/public/img/apple-touch-icon.png\n\nCOPY datasource.yml /etc/grafana/provisioning/datasources/\nCOPY dashboards.yml /etc/grafana/provisioning/dashboards/\nCOPY dashboards/internal/*.json /dashboards_internal/\nCOPY dashboards/reports/*.json /dashboards_reports/\nCOPY dashboards/*.json /dashboards/\n\nEXPOSE 3000\n", "---\ntitle: Docker install\nsidebar_label: Docker\n---\n\nThis document provides the necessary steps for installation of TeslaMate on a any system that runs Docker. For a walkthrough that provides the necessary steps for manual installation see [Manual Install](debian.md).\n\nThis setup is recommended only if you are running TeslaMate **on your home network**, as otherwise your Tesla API tokens might be at risk. If you intend to expose TeslaMate directly to the internet check out the [advanced guides](../guides/traefik.md).\n\n## Requirements\n\n- Docker _(if you are new to Docker, see [Installing Docker and Docker Compose](https://dev.to/rohansawant/installing-docker-and-docker-compose-on-the-raspberry-pi-in-5-simple-steps-3mgl))_\n- A Machine that's always on, so TeslaMate can continually fetch data\n- At least 1 GB of RAM on the machine for the installation to succeed.\n- External internet access, to talk to tesla.com\n\n## Instructions\n\n1. Create a file called `docker-compose.yml` with the following content:\n\n   ```yml title=\"docker-compose.yml\"\n   version: \"3\"\n\n   services:\n     teslamate:\n       image: teslamate/teslamate:latest\n       restart: always\n       environment:\n         - DATABASE_USER=teslamate\n         - DATABASE_PASS= #insert your secure password!\n         - DATABASE_NAME=teslamate\n         - DATABASE_HOST=database\n         - MQTT_HOST=mosquitto\n       ports:\n         - 4000:4000\n       volumes:\n         - ./import:/opt/app/import\n       cap_drop:\n         - all\n\n     database:\n       image: postgres:13\n       restart: always\n       environment:\n         - POSTGRES_USER=teslamate\n         - POSTGRES_PASSWORD= #insert your secure password!\n         - POSTGRES_DB=teslamate\n       volumes:\n         - teslamate-db:/var/lib/postgresql/data\n\n     grafana:\n       image: teslamate/grafana:latest\n       restart: always\n       environment:\n         - DATABASE_USER=teslamate\n         - DATABASE_PASS= #insert your secure password!\n         - DATABASE_NAME=teslamate\n         - DATABASE_HOST=database\n       ports:\n         - 3000:3000\n       volumes:\n         - teslamate-grafana-data:/var/lib/grafana\n\n     mosquitto:\n       image: eclipse-mosquitto:2\n       restart: always\n       command: mosquitto -c /mosquitto-no-auth.conf\n       # ports:\n       #   - 1883:1883\n       volumes:\n         - mosquitto-conf:/mosquitto/config\n         - mosquitto-data:/mosquitto/data\n\n   volumes:\n     teslamate-db:\n     teslamate-grafana-data:\n     mosquitto-conf:\n     mosquitto-data:\n   ```\n\n2. Choose your secure database password and insert it at every occurence of `DATABASE_PASS` and `POSTGRES_PASSWORD`\n\n3. Start the docker containers with `docker-compose up`. To run the containers in the background add the `-d` flag:\n\n   ```bash\n   docker-compose up -d\n   ```\n\n## Usage\n\n1. Open the web interface [http://your-ip-address:4000](http://localhost:4000)\n2. Sign in with your Tesla account\n3. The Grafana dashboards are available at [http://your-ip-address:3000](http://localhost:3000). Log in with the default user `admin` (inital password `admin`) and enter a secure password.\n\n## [Update](../upgrading.mdx)\n\nTo update the running TeslaMate configuration to the latest version, run the following commands:\n\n```bash\ndocker-compose pull\ndocker-compose up -d\n```\n"], "filenames": ["grafana/Dockerfile", "website/docs/installation/docker.md"], "buggy_code_start_loc": [4, 93], "buggy_code_end_loc": [5, 94], "fixing_code_start_loc": [4, 93], "fixing_code_end_loc": [5, 94], "type": "CWE-287", "message": "TeslaMate before 1.25.1 (when using the default Docker configuration) allows attackers to open doors of Tesla vehicles, start Keyless Driving, and interfere with vehicle operation en route. This occurs because an attacker can leverage Grafana login access to obtain a token for Tesla API calls.", "other": {"cve": {"id": "CVE-2022-23126", "sourceIdentifier": "cve@mitre.org", "published": "2022-01-24T19:15:08.447", "lastModified": "2022-01-28T20:42:23.783", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "TeslaMate before 1.25.1 (when using the default Docker configuration) allows attackers to open doors of Tesla vehicles, start Keyless Driving, and interfere with vehicle operation en route. This occurs because an attacker can leverage Grafana login access to obtain a token for Tesla API calls."}, {"lang": "es", "value": "TeslaMate versiones anteriores a 1.25.1, (cuando es usada la configuraci\u00f3n predeterminada de Docker) permite a atacantes abrir las puertas de los veh\u00edculos Tesla, iniciar la conducci\u00f3n sin llave e interferir en el funcionamiento del veh\u00edculo en ruta. Esto ocurre porque un atacante puede aprovechar el acceso de inicio de sesi\u00f3n de Grafana para obtener un token para las llamadas a la API de Tesla"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-287"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:teslamate_project:teslamate:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.25.1", "matchCriteriaId": "86FC7395-772A-4EAB-BF7E-421E5D2A4FD2"}]}]}], "references": [{"url": "https://github.com/adriankumpf/teslamate/commit/fff6915e7364f83b3030f980d5743299c4e5260d", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/adriankumpf/teslamate/compare/v1.25.0...v1.25.1", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/adriankumpf/teslamate/releases/tag/v1.25.1", "source": "cve@mitre.org", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://medium.com/@david_colombo/how-i-got-access-to-25-teslas-around-the-world-by-accident-and-curiosity-8b9ef040a028", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://twitter.com/teslascope/status/1481252837174624258", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/adriankumpf/teslamate/commit/fff6915e7364f83b3030f980d5743299c4e5260d"}}