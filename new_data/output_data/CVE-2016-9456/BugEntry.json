{"buggy_code": ["<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\ndefine('SMARTY_DIR', MAX_PATH . '/lib/smarty/');\n\nrequire_once MAX_PATH . '/lib/smarty/Smarty.class.php';\nrequire_once MAX_PATH . '/lib/smarty/plugins/modifier.escape.php';\nrequire_once MAX_PATH . '/lib/OA/Dll.php';\nrequire_once MAX_PATH . '/lib/pear/Date.php';\nrequire_once MAX_PATH . '/lib/OX/Translation.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\n\n/**\n * A UI templating class.\n *\n * @package    OpenXAdmin\n */\nclass OA_Admin_Template extends Smarty\n{\n    /**\n     * @var string\n     */\n    var $templateName;\n\n    /**\n     * @var string\n     */\n    var $cacheId;\n\n    /**\n     * @var int\n     */\n    var $_tabIndex = 0;\n\n    function __construct($templateName)\n    {\n        $this->init($templateName);\n    }\n\n    function init($templateName)\n    {\n        $this->template_dir = MAX_PATH . '/lib/templates/admin';\n        $this->compile_dir  = MAX_PATH . '/var/templates_compiled';\n        $this->cache_dir    = MAX_PATH . '/var/cache';\n\n        $this->caching = 0;\n        $this->cache_lifetime = 3600;\n\n        $this->register_function('t', array('OA_Admin_Template',  '_function_t'));\n\n        $this->register_function('tabindex', array('OA_Admin_Template',  '_function_tabindex'));\n\n        $this->register_function('oa_icon', array('OA_Admin_Template',  '_function_oa_icon'));\n        $this->register_function('oa_title_sort', array('OA_Admin_Template',  '_function_oa_title_sort'));\n\n        $this->register_function('ox_column_title', array('OA_Admin_Template',  '_function_ox_column_title'));\n        $this->register_function('ox_column_class', array('OA_Admin_Template',  '_function_ox_column_class'));\n        $this->register_function('ox_campaign_type', array('OA_Admin_Template',  '_function_ox_campaign_type'));\n        $this->register_function('ox_campaign_status', array('OA_Admin_Template',  '_function_ox_campaign_status'));\n        $this->register_function('ox_campaign_icon', array('OA_Admin_Template',  '_function_ox_campaign_icon'));\n        $this->register_function('ox_banner_size', array('OA_Admin_Template',  '_function_ox_banner_size'));\n        $this->register_function('ox_banner_icon', array('OA_Admin_Template',  '_function_ox_banner_icon'));\n        $this->register_function('ox_zone_size', array('OA_Admin_Template',  '_function_ox_zone_size'));\n        $this->register_function('ox_zone_icon', array('OA_Admin_Template',  '_function_ox_zone_icon'));\n        $this->register_function('ox_tracker_type', array('OA_Admin_Template',  '_function_ox_tracker_type'));\n        $this->register_function('ox_entity_id', array('OA_Admin_Template',  '_function_ox_entity_id'));\n\n        $this->register_function('boldSearchPhrase', array('OA_Admin_Template', '_function_boldSearchPhrase'));\n\n        $this->register_function('oa_is_admin', array('OA_Admin_Template',  '_function_oa_is_admin'));\n        $this->register_function('oa_is_manager', array('OA_Admin_Template',  '_function_oa_is_manager'));\n        $this->register_function('oa_is_advertiser', array('OA_Admin_Template',  '_function_oa_is_advertiser'));\n        $this->register_function('oa_is_trafficker', array('OA_Admin_Template',  '_function_oa_is_trafficker'));\n\n        $this->register_function('phpAds_ShowBreak', array('OA_Admin_Template',  '_function_phpAds_ShowBreak'));\n        $this->register_function('phpAds_DelConfirm', array('OA_Admin_Template',  '_function_phpAds_DelConfirm'));\n        $this->register_function('MAX_zoneDelConfirm', array('OA_Admin_Template',  '_function_MAX_zoneDelConfirm'));\n\n        $this->register_function('showStatusText', array('OA_Admin_Template',  '_function_showStatusText'));\n        $this->register_function('showCampaignType', array('OA_Admin_Template',  '_function_showCampaignType'));\n\n        $this->register_function('oa_form_input_attributes', array('OA_Admin_Template',  '_function_form_input_attributes'));\n        $this->register_block('oa_edit', array('OA_Admin_Template',  '_block_edit'));\n        $this->register_block('oa_form_element', array('OA_Admin_Template',  '_block_form_element'));\n\n        $this->templateName = $templateName;\n\n        $this->assign('phpAds_TextDirection',  $GLOBALS['phpAds_TextDirection']);\n        $this->assign('phpAds_TextAlignLeft',  $GLOBALS['phpAds_TextAlignLeft']);\n        $this->assign('phpAds_TextAlignRight', $GLOBALS['phpAds_TextAlignRight']);\n        $this->assign('assetPath', OX::assetPath());\n        $this->assign(\"adminWebPath\", MAX::constructURL(MAX_URL_ADMIN, ''));\n        $this->assign(\"oaTemplateDir\", MAX_PATH.'/lib/templates/admin/');\n\n        //for pluggable page elements\n        //- plugins may need to refrence their JS in OXP page templates\n        $this->assign(\"adminPluginWebPath\", MAX::constructURL(MAX_URL_ADMIN, 'plugins'));\n\n        //- plugins may need to inject their own\n        //template based elements into normal templates\n        $this->assign(\"pluginBaseDir\", MAX_PATH.'/www/admin/plugins/');\n        $this->assign(\"pluginTemplateDir\", '/templates/');\n\n        /**\n         * CVE-2013-5954\n         *\n         * Register the helper method to allow the the required session token to\n         * be placed into GET method calls for CRUD operations in templates. See\n         * OA_Permission::checkSessionToken() method for details.\n         */\n        $this->register_function('rv_add_session_token', array('OA_Admin_Template', '_add_session_token'));\n\n    }\n\n    /**\n     * CVE-2013-5954\n     *\n     * Helper method to allow the the required session token to be placed\n     * into GET method calls for CRUD operations in templates. See\n     * OA_Permission::checkSessionToken() method for details.\n     */\n    static public function _add_session_token()\n    {\n        return 'token=' . urlencode(phpAds_SessionGetToken());\n    }\n\n    /**\n     * A method to set a cache id for the current page\n     *\n     * @param mixed $cacheId Either a string or an array of parameters\n     */\n    function setCacheId($cacheId = null)\n    {\n        if (is_null($cacheId)) {\n            $this->cacheId = null;\n            $this->caching = 0;\n        } else {\n            if (is_array($cacheId)) {\n                $cacheId = join('^@^', $cacheId);\n            }\n            $this->cacheId = md5($cacheId);\n            $this->caching = 1;\n        }\n    }\n\n    /**\n     * A method to set the cached version of the template to be used until\n     * a certain date/time\n     *\n     * @param Date $oDate\n     */\n    function setCacheExpireAt($oDate)\n    {\n        $timeStamp = strftime($oDate->format('%Y-%m-%d %H:%M:%S'));\n        $this->cache_lifetime = $timeStamp - time();\n        $this->caching = 2;\n    }\n\n    /**\n     * A method to set the cached vertsion of the template to expire after\n     * a time span\n     *\n     * @param Date_Span $oSpan\n     */\n    function setCacheLifetime($oSpan)\n    {\n        $this->cache_lifetime = $oSpan->toSeconds();\n        $this->caching = 2;\n    }\n\n    function is_cached($tpl_file = null, $cache_id = null, $compile_id = null)\n    {\n        return parent::is_cached($this->templateName, $this->cacheId);\n    }\n\n\n    function display($resource_name = null, $cache_id = null, $compile_id = null)\n    {\n        parent::display($this->templateName, $this->cacheId);\n    }\n\n\n    function toString()\n    {\n        return parent::fetch($this->templateName, $this->cacheId, null, false);\n    }\n\n\n    function _function_t($aParams, &$smarty)\n    {\n        $oTrans = new OX_Translation();\n\n        if (!empty($aParams['str'])) {\n            if (!empty($aParams['values'])) {\n                $aValues = explode('|', $aParams['values']);\n            } else {\n                $aValues = array();\n            }\n            $t = $oTrans->translate($aParams['str'], $aValues);\n        } elseif (!empty($aParams['key'])) {\n            $t = $oTrans->translate($aParams['key']);\n        }\n\n        if (isset($t)) {\n            if (empty($aParams['escape'])) {\n                return $t;\n            }\n\n            return smarty_modifier_escape($t, $aParams['escape']);\n        }\n\n        // If nothing found in global scope, return the value unchanged\n        if (!empty($aParams['str'])) {\n            return $aParams['str'];\n        }\n        if (!empty($aParams['key'])) {\n            return $aParams['key'];\n        }\n\n        $smarty->trigger_error(\"t: missing 'str' or 'key' parameters: \".$aParams['str']);\n    }\n\n\n    function _function_showCampaignType($aParams, &$smarty)\n    {\n        $priority = $aParams['priority'];\n        return OX_Util_Utils::getCampaignTypeName($priority);\n    }\n\n\n    function _function_showStatusText($aParams, &$smarty)\n    {\n        global $strCampaignStatusRunning, $strCampaignStatusPaused, $strCampaignStatusAwaiting,\n               $strCampaignStatusExpired, $strCampaignStatusApproval, $strCampaignStatusRejected,\n               $strCampaignStatusPending;\n\n        if (isset($aParams['status'])) {\n              switch ($aParams['status']) {\n                    case OA_ENTITY_STATUS_PENDING:\n                        $class = 'pending';\n                        $text  = $strCampaignStatusPending;\n                        break;\n                    case OA_ENTITY_STATUS_RUNNING:\n                        $class = 'started';\n                        $text  = $strCampaignStatusRunning;\n                        break;\n                    case OA_ENTITY_STATUS_PAUSED:\n                        $class = 'paused';\n                        $text  = $strCampaignStatusPaused;\n                        break;\n                    case OA_ENTITY_STATUS_AWAITING:\n                        $class = 'awaiting';\n                        $text  = $strCampaignStatusAwaiting;\n                        break;\n                    case OA_ENTITY_STATUS_EXPIRED:\n                        $class = 'finished';\n                        $text  = $strCampaignStatusExpired;\n                        break;\n                    case OA_ENTITY_STATUS_APPROVAL:\n                        $class = 'accepted';\n                        $text  = $strCampaignStatusApproval;\n                        break;\n                    case OA_ENTITY_STATUS_REJECTED:\n                        $class = 'rejected';\n                        $text  = $strCampaignStatusRejected;\n                        break;\n                }\n                $oTrans = new OX_Translation();\n                $text = $oTrans->translate($text);\n\n                if ($status == OA_ENTITY_STATUS_APPROVAL) {\n                    $text = \"<a href='campaign-edit.php?clientid=\".$aParams['clientid'].\"&campaignid=\".$aParams['campaignid'].\"'>\" .\n                            $text . \"</a>\";\n                }\n                return '<span class=\"'.$class.'\">' . $text . '</span>';\n        }\n\n        $smarty->trigger_error(\"showStatusText: missing 'status' parameter\");\n    }\n\n    function _function_tabindex($aParams, &$smarty)\n    {\n        return ' tabindex=\"'.++$smarty->_tabIndex.'\"';\n    }\n\n    function _function_oa_icon($aParams, &$smarty)\n    {\n        if (!empty($aParams['banner']) && is_array($aParams['banner'])) {\n            $type   = 'banner';\n            $banner = $aParams['banner'];\n\n            $campaign_active = isset($aParams['campaign']['status']) ? $aParams['campaign']['status'] == OA_ENTITY_STATUS_RUNNING : true;\n            $active          = $banner['status'] == OA_ENTITY_STATUS_RUNNING && $campaign_active;\n\n            switch ($banner['type'])\n            {\n                case 'html': $flavour = '-html'; break;\n                case 'txt':  $flavour = '-text'; break;\n                case 'url':  $flavour = '-url'; break;\n                default:     $flavour = '-stored'; break;\n            }\n        } elseif (!empty($aParams['campaign']) && is_array($aParams['campaign'])) {\n            $type     = 'campaign';\n            $campaign = $aParams['campaign'];\n\n            $active = $campaign['status'] == OA_ENTITY_STATUS_RUNNING;\n            $flavour = '';\n        } elseif (!empty($aParams['advertiser']) && is_array($aParams['advertiser'])) {\n            $type     = 'advertiser';\n            $campaign = $aParams['advertiser'];\n\n            $active = true;\n            $flavour = '';\n        }\n\n        if (!empty($type)) {\n            return OX::assetPath('images/icon-'.$type.$flavour.($active ? '' : '-d').'.gif');\n        }\n\n        $smarty->trigger_error(\"t: missing parameter(s)\");\n    }\n\n    function _function_oa_title_sort($aParams, &$smarty)\n    {\n        if (!empty($aParams['str'])) {\n            if (!empty($aParams['item'])) {\n                $str  = $this->_function_t($aParams, $smarty);\n                $item = $aParams['item'];\n\n                $order = !empty($aParams['order']) ? $aParams['order'] : 'down';\n                $url   = !empty($aParams['url'])     ? $aParams['url']     : '#';\n                $url   .= strpos($url, '?') !== false ? '&' : '?';\n\n                $buffer = '<a href=\"'.htmlspecialchars($url.'listorder='.$item).'\">'.$str.'</a>';\n\n                $listorder = $smarty->get_template_vars('listorder');\n                $orderdirection = $smarty->get_template_vars('orderdirection');\n\n                if (empty($listorder) && !empty($aParams['default']) && $aParams['default']) {\n                    $listorder = $item;\n                }\n\n                if (empty($orderdirection)) {\n                    $orderdirection = $order;\n                }\n\n                if ($listorder == $item) {\n                    $order = $orderdirection == 'down' ? 'up' : 'down';\n                    $caret = $orderdirection == 'down' ? 'ds'  : 'u';\n\n                    $buffer .= ' <a href=\"'.htmlspecialchars($url.'orderdirection='.$order).'\">';\n                    $buffer .= '<img src=\"' . OX::assetPath() . '/images/caret-'.$caret.'.gif\" border=\"0\" alt=\"\" title=\"\">';\n                    $buffer .= '</a>';\n                }\n\n                return $buffer;\n            } else {\n                $smarty->trigger_error(\"t: missing 'item' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'str'parameter\");\n        }\n    }\n\n\n    function _function_ox_column_title($aParams, &$smarty)\n    {\n        if (!empty($aParams['str'])) {\n            if (!empty($aParams['item'])) {\n                $str  = $this->_function_t($aParams, $smarty);\n                $item = $aParams['item'];\n\n                $url  = !empty($aParams['url']) ? $aParams['url'] : '#';\n                $url .= strpos($url, '?') !== false ? '&' : '?';\n                $url .= 'listorder=' . $item;\n\n                $listorder = $smarty->get_template_vars('listorder');\n                if (empty($listorder) && !empty($aParams['default']) && $aParams['default']) {\n                    $listorder = $item;\n                }\n\n                if ($listorder == $item) {\n                    $orderdirection = $smarty->get_template_vars('orderdirection');\n                    if (empty($orderdirection)) {\n                        $orderdirection = !empty($aParams['order']) ? $aParams['order'] : 'down';\n                    }\n\n                    $url .= '&orderdirection=' . ($orderdirection == 'down' ? 'up' : 'down');\n                }\n\n                $buffer = '<a href=\"' . htmlspecialchars($url) . '\">' . $str . '</a>';\n\n                return $buffer;\n            } else {\n                $smarty->trigger_error(\"t: missing 'item' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'str'parameter\");\n        }\n    }\n\n    function _function_ox_column_class($aParams, &$smarty)\n    {\n        if (!empty($aParams['item'])) {\n            $item = $aParams['item'];\n\n            $listorder = $smarty->get_template_vars('listorder');\n            if (empty($listorder) && !empty($aParams['default']) && $aParams['default']) {\n                $listorder = $item;\n            }\n\n\n            if ($listorder == $item) {\n                $orderdirection = $smarty->get_template_vars('orderdirection');\n                if (empty($orderdirection)) {\n                    $orderdirection = !empty($aParams['order']) ? $aParams['order'] : 'down';\n                }\n\n                if ($orderdirection == 'down') {\n                    return ' sortDown';\n                }\n\n                return ' sortUp';\n            }\n\n            return '';\n        } else {\n            $smarty->trigger_error(\"t: missing 'item' parameter\");\n        }\n    }\n\n    function _function_ox_banner_size($aParams, &$smarty)\n    {\n        global $phpAds_IAB;\n        require_once MAX_PATH . '/www/admin/lib-size.inc.php';\n\n        if (isset($aParams['width']) && isset($aParams['height'])) {\n            $width = $aParams['width'];\n            $height = $aParams['height'];\n\n            if ($width == -1) $width = '*';\n            if ($height == -1) $height = '*';\n\n            return phpAds_getBannerSize($width, $height);\n        } else {\n            $smarty->trigger_error(\"t: missing 'width' or 'height' parameter\");\n        }\n    }\n\n    function _function_ox_banner_icon($aParams, &$smarty)\n    {\n        if (isset($aParams['type'])) {\n            if (isset($aParams['active'])) {\n                $active = $aParams['active'];\n                $type = $aParams['type'];\n\n                if ($active) {\n                    switch($type) {\n                        case 'html':    return 'iconBannerHtml';\n                        case 'txt':     return 'iconBannerText';\n                        case 'url':     return 'iconBannerExternal';\n                        default:        return 'iconBanner';\n                    }\n                }\n\n                switch($type) {\n                    case 'html':    return 'iconBannerHtmlDisabled';\n                    case 'txt':     return 'iconBannerTextDisabled';\n                    case 'url':     return 'iconBannerExternalDisabled';\n                    default:        return 'iconBannerDisabled';\n                }\n            } else {\n                $smarty->trigger_error(\"t: missing 'active' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'type' parameter\");\n        }\n    }\n\n    function _function_ox_zone_size($aParams, &$smarty)\n    {\n        global $phpAds_IAB;\n        require_once MAX_PATH . '/www/admin/lib-size.inc.php';\n\n        if (isset($aParams['width']) && isset($aParams['height'])) {\n            if (isset($aParams['delivery'])) {\n                $width = $aParams['width'];\n                $height = $aParams['height'];\n                $delivery = $aParams['delivery'];\n                $translation = new OX_Translation ();\n\n                if ($delivery == phpAds_ZoneText) {\n                    return $translation->translate('Custom') . \" (\" . $translation->translate('TextAdZone') . \")\";\n                } else if ($delivery == OX_ZoneVideoInstream) {\n                    return $translation->translate('Custom') . \" (\" . $translation->translate('ZoneVideoInstream') . \")\";\n                } else if ($delivery == OX_ZoneVideoOverlay) {\n                    return $translation->translate('Custom') . \" (\" . $translation->translate('ZoneVideoOverlay') . \")\";\n                } else {\n                    if ($width == -1) $width = '*';\n                    if ($height == -1) $height = '*';\n\n                    return phpAds_getBannerSize($width, $height);\n                }\n            } else {\n                $smarty->trigger_error(\"t: missing 'delivery' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'width' or 'height' parameter\");\n        }\n    }\n\n    function _function_ox_zone_icon($aParams, &$smarty)\n    {\n        if (isset($aParams['delivery'])) {\n            if (isset($aParams['active'])) {\n                $active = $aParams['active'];\n                $delivery = $aParams['delivery'];\n\n                if (isset($aParams['warning']) && $aParams['warning']) {\n                    return 'iconZoneWarning';\n                }\n\n                if ($active) {\n                    switch($delivery) {\n                        case phpAds_ZoneInterstitial:   return 'iconZoneFloating';\n                        case phpAds_ZoneText:           return 'iconZoneText';\n                        case MAX_ZoneEmail:             return 'iconZoneEmail';\n                        case OX_ZoneVideoInstream:      return 'iconZoneVideoInstream';\n                        case OX_ZoneVideoOverlay:       return 'iconZoneVideoOverlay';\n                        default:                        return 'iconZone';\n                    }\n                }\n\n                switch($delivery) {\n                    case phpAds_ZoneInterstitial:   return 'iconZoneFloatingDisabled';\n                    case phpAds_ZoneText:           return 'iconZoneTextDisabled';\n                    case MAX_ZoneEmail:             return 'iconZoneEmailDisabled';\n                    case OX_ZoneVideoInstream:      return 'iconZoneVideoInstreamDisabled';\n                    case OX_ZoneVideoOverlay:       return 'iconZoneVideoOverlayDisabled';\n                    default:                        return 'iconZoneDisabled';\n                }\n            } else {\n                $smarty->trigger_error(\"t: missing 'active' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'delivery' parameter\");\n        }\n    }\n\n\t\tfunction _function_ox_campaign_type($aParams, &$smarty)\n\t\t{\n\t\t\tif (isset($aParams['type'])) {\n\t\t\t\t$type = $aParams['type'];\n\t\t\t\t$translation = new OX_Translation ();\n\n                if ($type == OX_CAMPAIGN_TYPE_OVERRIDE) {\n\t\t\t\t\treturn \"<span class='campaign-type campaign-override'>\" . $translation->translate('Override') . \"</span>\";\n                } elseif ($type == OX_CAMPAIGN_TYPE_CONTRACT_NORMAL) {\n\t\t\t\t\treturn \"<span class='campaign-type campaign-contract'>\" . $translation->translate('Contract') . \"</span>\";\n\t\t\t\t} elseif ($type == OX_CAMPAIGN_TYPE_REMNANT || $type == OX_CAMPAIGN_TYPE_ECPM){\n\t\t\t\t\treturn \"<span class='campaign-type campaign-remnant'>\" . $translation->translate('Remnant') . \"</span>\";\n                }\n                return \"<span class='campaign-type campaign-contract'>\".$type. \"</span>\";\n\t\t\t} else {\n\t\t\t\t$smarty->trigger_error(\"t: missing 'type' parameter\");\n\t\t\t}\n\t\t}\n\n    function _function_ox_campaign_status($aParams, &$smarty)\n    {\n        if (isset($aParams['status'])) {\n            $status = $aParams['status'];\n            $translation = new OX_Translation ();\n\n            switch ($status) {\n                case OA_ENTITY_STATUS_PENDING:\n                    $class = 'sts-pending';\n                    $text  = $translation->translate('CampaignStatusPending');\n                    break;\n                case OA_ENTITY_STATUS_RUNNING:\n                    $class = 'sts-accepted';\n                    $text  = $translation->translate('CampaignStatusRunning');\n                    break;\n                case OA_ENTITY_STATUS_PAUSED:\n                    $class = 'sts-paused';\n                    $text  = $translation->translate('CampaignStatusPaused');\n                    break;\n                case OA_ENTITY_STATUS_AWAITING:\n                    $class = 'sts-not-started';\n                    $text  = $translation->translate('CampaignStatusAwaiting');\n                    break;\n                case OA_ENTITY_STATUS_EXPIRED:\n                    $class = 'sts-finished';\n                    $text  = $translation->translate('CampaignStatusExpired');\n                    break;\n                case OA_ENTITY_STATUS_INACTIVE:\n                    $class = 'sts-inactive';\n                    $text  = $translation->translate('CampaignStatusInactive');\n                    break;\n                case OA_ENTITY_STATUS_APPROVAL:\n                    $class = 'sts-awaiting';\n                    $text  = $translation->translate('CampaignStatusApproval');\n                    break;\n                case OA_ENTITY_STATUS_REJECTED:\n                    $class = 'sts-rejected';\n                    $text  = $translation->translate('CampaignStatusRejected');\n                    break;\n            }\n            $oTrans = new OX_Translation();\n            $text = $oTrans->translate($text);\n\n            if ($status == OA_ENTITY_STATUS_APPROVAL) {\n                $text = \"<a href='campaign-edit.php?clientid=\".$aParams['clientid'].\"&campaignid=\".$aParams['campaignid'].\"'>\" . $text . \"</a>\";\n            }\n\n            return \"<span class='\" . $class . \"'>\" . $text . \"</span>\";\n        }\n\n        $smarty->trigger_error(\"showStatusText: missing 'status' parameter\");\n    }\n\n    function _function_ox_campaign_icon($aParams, &$smarty)\n    {\n        if (isset($aParams['status'])) {\n            if ($aParams['status'] == OA_ENTITY_STATUS_RUNNING) {\n                return 'iconCampaign';\n            }\n\n            return 'iconCampaignDisabled';\n        } else {\n            $smarty->trigger_error(\"t: missing 'status' parameter\");\n        }\n    }\n\n    function _function_ox_tracker_type($aParams, &$smarty)\n    {\n        if (isset($aParams['type'])) {\n            $type = $aParams['type'];\n\t\t\t$type = $GLOBALS['_MAX']['CONN_TYPES'][$type];\n\n\t\t\t// Warning: $type contains the id of translation string... remove 'str' to be able to pass it on to OX_Translation\n\t\t\t$type = substr($type, 3);\n\n            $translation = new OX_Translation ();\n\t\t\treturn $translation->translate($type);\n        } else {\n            $smarty->trigger_error(\"t: missing 'type' parameter\");\n        }\n    }\n\n    /**\n     * Smarty function to bold searched phrase in tekst\n     * use: {boldSearchPhrase text=\"some text\" search=\"search phrase\"}\n     *\n     * @param array $aParams - $aParams['text'] - text to modify, $aParams['search'] - search phrase to bold\n     * @param object &$smarty\n     * @return string\n     */\n    function _function_boldSearchPhrase($aParams, &$smarty)\n    {\n        if (!empty($aParams['text'])) {\n            if (!empty($aParams['search'])) {\n                $searchPhrase = $aParams['search'];\n                $text = $aParams['text'];\n                $strPos = stripos($text,$searchPhrase);\n                if ($strPos !== false ) {\n                    $strLen = strlen($searchPhrase);\n                    return  htmlspecialchars(substr($text, 0, $strPos)) .\n                            \"<b class='sr'>\" . htmlspecialchars(substr($text, $strPos, $strLen)) . \"</b>\" .\n                            htmlspecialchars(substr($text, $strPos+$strLen));\n                    }\n            }\n            return htmlspecialchars($aParams['text']);\n        }\n    }\n\n    function _block_edit($aParams, $content, &$smarty, &$repeat)\n    {\n        static $break = false;\n\n        if (!$repeat) {\n            $aParams['content'] = $content;\n            if (isset($aParams['params']) && is_array($aParams)) {\n                $aParams += $aParams['params'];\n            }\n            if (!isset($aParams['break'])) {\n                $aParams['break'] = $break;\n            }\n\n            $smarty->assign('_e', $aParams);\n            $result = $smarty->fetch('edit-table/main.html');\n            $smarty->clear_assign('_e');\n\n            $break = $aParams['type'] != 'section';\n\n            return $result;\n        }\n    }\n\n\n   function _block_form_element($aParams, $content, &$smarty, &$repeat)\n    {\n        static $break = false;\n\n        if ($repeat && $aParams['elem']['type'] == 'header') {\n            $break = false; //do not display breaks for first element in section\n        }\n        if (!$repeat) {\n            $aParams['content'] = $content;\n            if (isset($aParams['elem']) && is_array($aParams)) {\n                $aParams += $aParams['elem'];\n            }\n            if (!isset($aParams['break'])) {\n                $aParams['break'] = $break;\n            }\n\n            //if macro invoked with parent parameter do not add break\n            if(isset($aParams['parent'])) {\n                $aParams['break'] = false;\n            }\n\n            //put some context for form elements (set parent)\n            if (is_array($smarty->_tag_stack) && count($smarty->_tag_stack) > 0) {\n                if (isset($smarty->_tag_stack[0][1]['elem']['type'])) {\n                    $aParams['parent_tag'] = $smarty->_tag_stack[0][1]['elem']['type'];\n                }\n            }\n\n            //store old _e if recursion happens\n            $old_e = $smarty->get_template_vars('_e');\n            $smarty->assign('_e', $aParams);\n            $result = $smarty->fetch(MAX_PATH . '/lib/templates/admin/form/elements.html');\n            $smarty->clear_assign('_e');\n\n            //restore old _e (if any)\n            if (isset($old_e)) {\n                $smarty->assign('_e', $old_e);\n            }\n\n            //decorate result with decorators content\n            if (!empty($aParams['decorators']['list'])) {\n                foreach ($aParams['decorators']['list'] as $decorator) {\n                    $result = $decorator->render($result);\n                }\n            }\n\n            $break = ($aParams['type'] != 'header');\n\n            return $result;\n        }\n    }\n\n\n    function _function_form_input_attributes($aParams, $smarty)\n    {\n        $elem = $aParams['elem'];\n        $parent = $aParams['parent'];\n        $attributes = &$elem['attributes'];\n\n        //default id to name if not set\n        if (empty($attributes['id'])) {\n            $attributes['id'] = $attributes['name'];\n        }\n\n        //if frozen disable //TODO append 'frozen' class here or to form??\n        if ($elem['frozen'] == true) {\n            $attributes['disabled'] = 'disabled';\n            $attributes['class'] .= ' frozen';\n        }\n\n        //set default type to text if not given\n        if (empty($elem['type'])) {\n            $elem['type'] = 'text';\n        }\n\n        //default class to 'large' for different inputs (apart from submits, buttons, selects, checkboxes)\n        if ($elem['type'] == 'text' || $elem['type'] == 'password') {\n            if (empty($attributes['class'])) {\n                 if (!empty($parent)) {  //if parent is set it means it is in group\n                    $attributes['class'] = 'x-small'; //mulitelement lines needs smaller elements\n                 }\n                 else {\n                     $attributes['class'] = 'large'; //first level elems get big\n                 }\n            }\n        }\n\n        if ($elem['type'] == 'select') {\n            if (empty($attributes['class'])) {\n                 if (!empty($parent)) {  //if parent is set it means it is in group\n                    $attributes['class'] = 'small'; //mulitelement lines needs smaller elements\n                 }\n                 else {\n                     $attributes['class'] = 'medium'; //first level elems get big\n                 }\n            }\n        }\n\n        //custom textarea styles\n        if ($elem['type'] == 'textarea') {\n            if (!$this->_hasSizeClass($attributes['class'])) {\n                $attributes['class'] = 'large';\n            }\n\n            $attributes['class'].=\" small-h\"; //set height\n            $attributes['wrap']=\"off\";\n            $attributes['dir']=\"ltr\";\n        }\n\n        $attrString = \"\";\n        foreach ($attributes as $attribute => $value) {\n            $attrString .= \"$attribute=\\\"\".smarty_modifier_escape($value).\"\\\" \";\n        }\n\n        return $attrString;\n    }\n\n    function _hasSizeClass($className)\n    {\n        if (empty($className)) {\n            return false;\n        }\n        //this is simplified - we should check for spaces and line start/end\n        //but is it worth the performance penalty?\n        $result = preg_match('/x-large|large|medium|small|x-small/', $className) == 0\n            ? false : true;\n\n        return $result;\n    }\n\n\n    function _function_ox_entity_id($aParams, &$smarty) {\n        if ($GLOBALS['_MAX']['PREF']['ui_show_entity_id'] == true) {\n            $id = $aParams['id'];\n            return '<small title=\"' .\n                $this->_function_t(array('str' => $aParams['type']), $smarty) . ' ' .\n                $this->_function_t(array('str' => 'ID'), $smarty) . ': ' . $id . '\">[' . $id . ']</small>';\n        } else {\n            return '';\n        }\n    }\n\n    function _function_oa_is_admin($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_ADMIN);\n    }\n\n    function _function_oa_is_manager($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_MANAGER);\n    }\n\n    function _function_oa_is_advertiser($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER);\n    }\n\n    function _function_oa_is_trafficker($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_TRAFFICKER);\n    }\n\n    // OLD FUNCTIONS\n\n    function _function_phpAds_DelConfirm($aParams, &$smarty)\n    {\n        return phpAds_DelConfirm($this->_function_t($aParams, $smarty));\n    }\n\n    function _function_MAX_zoneDelConfirm($aParams, &$smarty)\n    {\n        return MAX_zoneDelConfirm($aParams['zoneid']);\n    }\n\n    function _function_phpAds_ShowBreak()\n    {\n        ob_start();\n        phpAds_ShowBreak();\n        return ob_get_clean();\n    }\n}\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\nrequire_once MAX_PATH . '/lib/Max.php';\nrequire_once MAX_PATH . '/lib/max/Dal/Inventory/Trackers.php';\n\nrequire_once MAX_PATH . '/lib/OA/ServiceLocator.php';\n\nrequire_once OX_PATH . '/lib/OX.php';\nrequire_once LIB_PATH . '/Admin/Redirect.php';\nrequire_once OX_PATH . '/lib/pear/HTML/Template/Flexy.php';\n\n\n\n/**\n * A class for determining the available geotargeting modes.\n *\n * @package    Max\n */\nclass MAX_Admin_Inventory_TrackerAppend\n{\n    /* @var MAX_Dal_TrackerTags */\n    var $_dal;\n\n    var $_cycle = 0;\n\n    var $advertiser_id;\n    var $tracker_id;\n    var $codes;\n    var $showReminder;\n    var $assetPath;\n\n    /**\n     * PHP5-style constructor\n     */\n    function __construct()\n    {\n        $this->_useDefaultDal();\n\n        $this->advertiser_id = MAX_getValue('clientid', 0);\n        $this->tracker_id    = MAX_getValue('trackerid', 0);\n        $this->assetPath \t = OX::assetPath();\n        $this->showReminder  = false;\n    }\n\n    function _useDefaultDal()\n    {\n        $oServiceLocator =& OA_ServiceLocator::instance();\n        $dal =& $oServiceLocator->get('MAX_Dal_Inventory_Trackers');\n        if (!$dal) {\n            $dal = new MAX_Dal_Inventory_Trackers();\n        }\n        $this->_dal =& $dal;\n    }\n\n    function cycleRow($class)\n    {\n        return trim($class.(($this->_cycle++ % 2) ? ' light' : ' dark'));\n    }\n\n    function getPausedCodes()\n    {\n        $paused = array();\n        foreach ($this->codes as $k => $v) {\n            if ($v['paused']) {\n                $paused[] = $k;\n            }\n        }\n\n        return join(',', $paused);\n    }\n\n    function handlePost($vars)\n    {\n        $codes = array();\n\n        if (isset($vars['tag']) && is_array($vars['tag'])) {\n            foreach ($vars['tag'] as $k => $v) {\n                $codes[$k] = array('tagcode' => stripslashes($v), 'paused' => false);\n                $codes[$k]['autotrack'] = isset($vars['autotrack'][$k]);\n            }\n        }\n\n        if (isset($vars['t_paused'])) {\n            foreach (explode(',', $vars['t_paused']) as $k) {\n                if (isset($codes[$k])) {\n                    $codes[$k]['paused'] = true;\n                }\n            }\n        }\n\n        if (isset($vars['t_action'])) {\n            switch ($vars['t_action']) {\n                case 'new':\n                    $codes[] = array('tagcode' => '', 'paused' => false);\n                    break;\n\n                case 'del':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']])) {\n                        unset($codes[$vars['t_id']]);\n                    }\n                    break;\n\n                case 'up':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']]) && isset($codes[$vars['t_id'] - 1])) {\n                        $tmp = $codes[$vars['t_id']];\n                        $codes[$vars['t_id']] = $codes[$vars['t_id'] - 1];\n                        $codes[$vars['t_id'] - 1] = $tmp;\n                    }\n                    break;\n\n                case 'down':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']]) && isset($codes[$vars['t_id'] + 1])) {\n                        $tmp = $codes[$vars['t_id']];\n                        $codes[$vars['t_id']] = $codes[$vars['t_id'] + 1];\n                        $codes[$vars['t_id'] + 1] = $tmp;\n                    }\n                    break;\n\n                case 'pause':\n                case 'restart':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']])) {\n                        $codes[$vars['t_id']]['paused'] = $vars['t_action'] == 'pause';\n                    }\n                    break;\n            }\n        }\n\n        if (isset($vars['save'])) {\n            $this->_dal->setAppendCodes($this->tracker_id, $codes);\n\n            // Queue confirmation message\n            $doTrackers = OA_Dal::factoryDO('trackers');\n            $doTrackers->get($this->tracker_id);\n\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strTrackerAppendHasBeenUpdated'], array(\n                MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=\".$this->advertiser_id.\"&trackerid=\".$this->tracker_id),\n                htmlspecialchars($doTrackers->trackername)\n            ));\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n            OX_Admin_Redirect::redirect(\"tracker-append.php?clientid={$this->advertiser_id}&trackerid={$this->tracker_id}\");\n        } else {\n            $this->codes = $codes;\n            $this->showReminder = true;\n        }\n    }\n\n    function handleGet()\n    {\n        if (is_null($this->codes)) {\n            $this->codes = $this->_dal->getAppendCodes($this->tracker_id);\n        }\n    }\n\n    function display()\n    {\n        $output = new HTML_Template_Flexy(array(\n            'templateDir'       => MAX_PATH . '/lib/max/Admin/Inventory/themes',\n            'compileDir'        => MAX_PATH . '/var/templates_compiled',\n            'flexyIgnore'        => true\n        ));\n\n        $codes = $this->codes;\n        $this->codes = array();\n        if (is_array($codes)) {\n            foreach ($codes as $v){\n                $k = count($this->codes);\n                $v['id']   = \"tag_{$k}\";\n                $v['name'] = \"tag[{$k}]\";\n                $v['autotrackname'] = \"autotrack[{$k}]\";\n                $v['autotrack'] = isset($v['autotrack']) ? $v['autotrack'] : false;\n                $v['rank'] = $k + 1;\n                $v['move_up'] = $k > 0;\n                $v['move_down'] = $k < count($codes) - 1;\n                $this->codes[] = $v;\n            }\n        }\n\n        // Display page content\n        $output->compile('TrackerAppend.html');\n        $output->outputObject($this);\n    }\n}\n\n?>\n", "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n<title>{title}</title>\n</head>\n\n<body>\n<div flexy:start=\"here\">\n<script type=\"text/javascript\">\n<!--\n\nfunction MMM_trackerAction(action, id)\n{\n    var f = document.getElementById('trackerAppendForm');\n    \n    f.t_action.value = action;\n    f.t_id.value = id;\n    f.submit();\n    return false;\n}\n\n//-->\n</script>\n<div flexy:if=\"showReminder\" class=\"errormessage\"><img class=\"errormessage\" src=\"{assetPath}/images/warning.gif\" align=\"absmiddle\">\n<span class='tab-s'>You have unsaved changes on this page, make sure you press &quot;Save Changes&quot; when finished</span><br>\n</div>\n<form id=\"trackerAppendForm\" class=\"section\" method=\"post\">\n    <input type=\"hidden\" name=\"clientid\" value=\"{advertiser_id}\" />\n    <input type=\"hidden\" name=\"trackerid\" value=\"{tracker_id}\" />\n    <input type=\"hidden\" name=\"t_action\" />\n    <input type=\"hidden\" name=\"t_id\"  />\n    <input type=\"hidden\" name=\"t_paused\" value=\"{getPausedCodes()}\" />\n    <h3>Append tracker code</h3>\n    <div flexy:foreach=\"codes,k,v\" class=\"{cycleRow(#row#)}\">\n        <div class=\"label\">\n            <label for=\"{v[id]}\">{v[rank]}. Tracker code{if:v[paused]} (Paused){end:}</label>\n        </div>\n        <div class=\"element\">\n            <textarea name=\"{v[name]}\" id=\"{v[id]}\" rows=\"3\">{v[tagcode]}</textarea><br />\n            <span>\n                {if:v[autotrack]}<input type=\"checkbox\" name=\"{v[autotrackname]}\" id=\"{v[autotrackname]}\" checked=\"checked\" />\n                {else:}<input type=\"checkbox\" name=\"{v[autotrackname]}\" id=\"{v[autotrackname]}\" />\n                {end:} Automatically change the HTML code to track the same variables\n            </span>\n        </div>\n        <div class=\"link-buttons\">\n            <a flexy:if=\"!v[paused]\" href=\"#\" onclick=\"return MMM_trackerAction('pause', '{k}')\"><img src=\"{assetPath}/images/icon-deactivate.gif\" width=\"16\" height=\"16\" /> Pause</a>\n            <a flexy:if=\"v[paused]\" href=\"#\" onclick=\"return MMM_trackerAction('restart', '{k}')\"><img src=\"{assetPath}/images/icon-activate.gif\" width=\"16\" height=\"16\" /> Restart</a>\n            <a flexy:if=\"v[move_up]\" href=\"#\" onclick=\"return MMM_trackerAction('up', '{k}')\"><img src=\"{assetPath}/images/triangle-u.gif\" width=\"16\" height=\"16\" /> Move up</a>\n            <span flexy:if=\"!v[move_up]\"><img src=\"{assetPath}/images/triangle-u-d.gif\" width=\"16\" height=\"16\" /> Move up</span>\n            <a flexy:if=\"v[move_down]\" href=\"#\" onclick=\"return MMM_trackerAction('down', '{k}')\"><img src=\"{assetPath}/images/triangle-d.gif\" width=\"16\" height=\"16\" /> Move down</a>\n            <span flexy:if=\"!v[move_down]\"><img src=\"{assetPath}/images/triangle-d-d.gif\" width=\"16\" height=\"16\" /> Move down</span>\n            <a href=\"#\" onclick=\"return MMM_trackerAction('del', '{k}')\"><img src=\"{assetPath}/images/icon-recycle.gif\" width=\"16\" height=\"16\" /> Delete</a>\n        </div>\n    </div>\n    <div class=\"row last\"><img src=\"{assetPath}/images/icon-acl-add.gif\" width=\"16\" height=\"16\" alt=\"Append new tag\" width=\"16\" height=\"16\" />&nbsp;<a href=\"#\" onclick=\"return MMM_trackerAction('new', '')\">Append new tag</a></div>\n    <br />\n    <br />\n    <input name=\"save\" type=\"submit\" value=\"Save changes\" />\n</form>\n</td></tr></table>\n</div>\n</body>\nThis isn't here at all.\n</html>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\nrequire_once MAX_PATH . '/lib/max/Admin_DA.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once LIB_PATH . '/Plugin/Component.php';\nrequire_once MAX_PATH . '/lib/OX/Util/Utils.php';\nrequire_once MAX_PATH . '/lib/OA/Admin/UI/model/InventoryPageHeaderModelBuilder.php';\n\n\nfunction MAX_getDisplayName($name, $length = 60, $append = '...')\n{\n    $displayName = strlen($name) > $length ? rtrim(substr($name, 0, $length-strlen($append))) . $append : $name;\n    if (empty($displayName)) {\n        $displayName = $GLOBALS['strUntitled'];\n    }\n    return $displayName;\n}\n\nfunction MAX_buildName($id, $name)\n{\n    return htmlspecialchars($name);\n}\n\nfunction MAX_getEntityIcon($entity, $active=true, $type='', $marketAdvertiserid = '')\n{\n    include_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n    $icon = '';\n    switch ($entity) {\n        case 'advertiser' :\n            $do = OA_Dal::factoryDO('Clients');\n            switch($type) {\n                case DataObjects_Clients::ADVERTISER_TYPE_MARKET:\n                    $icon = 'images/icon-advertiser-openx.png';\n                break;\n                default:\n                    if($active) {\n                        $icon = 'images/icon-advertiser.gif';\n                    } else {\n                        $icon = 'images/icon-advertiser-d.gif';\n                    }\n                break;\n            }\n            break;\n\n        case 'placement'  :\n            $do = OA_Dal::factoryDO('Campaigns');\n            switch($type) {\n                case DataObjects_Campaigns::CAMPAIGN_TYPE_MARKET_CAMPAIGN_OPTIN:\n                case DataObjects_Campaigns::CAMPAIGN_TYPE_MARKET_CONTRACT:\n                case DataObjects_Campaigns::CAMPAIGN_TYPE_MARKET_ZONE_OPTIN:\n                    $icon = 'images/icon-campaigns-openx.png';\n                break;\n\n                default:\n                    if($active) {\n                        $icon = 'images/icon-campaign.gif';\n                    } else {\n                        $icon = 'images/icon-campaign-d.gif';\n                    }\n                break;\n                }\n            break;\n        case 'publisher'  : $icon = 'images/icon-affiliate.gif'; break;\n        case 'ad' :\n            switch ($type) {\n                case 'html' : $icon = $active ? 'images/icon-banner-html.gif' : 'images/icon-banner-html-d.gif'; break;\n                case 'txt'  : $icon = $active ? 'images/icon-banner-text.gif' : 'images/icon-banner-text-d.gif'; break;\n                case 'url'  : $icon = $active ? 'images/icon-banner-url.gif' : 'images/icon-banner-url-d.gif'; break;\n                case 'web'  : $icon = $active ? 'images/icon-banner-stored.gif' : 'images/icon-banner-stored-d.gif'; break;\n                default     : $icon = $active ? 'images/icon-banner-stored.gif' : 'images/icon-banner-stored-d.gif'; break;\n            }\n            break;\n        case 'zone'       :\n            switch ($type) {\n                case MAX_ZoneMarketMigrated  : $icon = 'images/icon-advertiser-openx.png'; break;\n                case phpAds_ZoneBanner       : $icon = 'images/icon-zone.gif'; break;\n                case phpAds_ZoneInterstitial : $icon = 'images/icon-interstitial.gif'; break;\n                case phpAds_ZonePopup        : $icon = 'images/icon-popup.gif'; break;\n                case phpAds_ZoneText         : $icon = 'images/icon-textzone.gif'; break;\n                case MAX_ZoneEmail           : $icon = 'images/icon-zone-email.gif'; break;\n                case MAX_ZoneClick           : $icon = 'images/icon-zone-click.gif'; break;\n                default                      : $icon = 'images/icon-zone.gif'; break;\n            }\n            break;\n    }\n    return substr($icon,0,4) == 'http' ? $icon : (OX::assetPath() . \"/\" . $icon);\n}\n\nfunction MAX_displayZoneHeader($pageName, $listorder, $orderdirection, $entityIds=null, $anonymous=false)\n{\n    global $phpAds_TextAlignRight;\n    $column1 = _getHtmlHeaderColumn($GLOBALS['strName'], 'name', $pageName, $entityIds, $listorder, $orderdirection);\n    $column2 = _getHtmlHeaderColumn($GLOBALS['strID'], 'id', $pageName, $entityIds, $listorder, $orderdirection, ($anonymous == false));\n    $column3 = _getHtmlHeaderColumn($GLOBALS['strDescription'], 'description', $pageName, $entityIds, $listorder, $orderdirection);\n    echo \"\n    <tr height='1'>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='300' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td width='100%'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n    </tr>\n    <tr height='25'>\n        <td>$column1</td>\n        <td>$column2</td>\n        <td>$column3</td>\n    </tr>\n    <tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n}\n\nfunction MAX_displayStatsHeader($pageName, $listorder, $orderdirection, $entityIds=null, $anonymous=false)\n{\n    global $phpAds_TextAlignRight;\n    $column1 = _getHtmlHeaderColumn($GLOBALS['strName'], 'name', $pageName, $entityIds, $listorder, $orderdirection);\n    $column2 = _getHtmlHeaderColumn($GLOBALS['strID'], 'id', $pageName, $entityIds, $listorder, $orderdirection, ($anonymous == false));\n    $column3 = _getHtmlHeaderColumn($GLOBALS['strRequests'], 'sum_requests', $pageName, $entityIds, $listorder, $orderdirection);\n    $column4 = _getHtmlHeaderColumn($GLOBALS['strImpressions'], 'sum_views', $pageName, $entityIds, $listorder, $orderdirection);\n    $column5 = _getHtmlHeaderColumn($GLOBALS['strClicks'], 'sum_clicks', $pageName, $entityIds, $listorder, $orderdirection);\n    $column6 = _getHtmlHeaderColumn($GLOBALS['strCTRShort'], 'ctr', $pageName, $entityIds, $listorder, $orderdirection);\n    $column7 = _getHtmlHeaderColumn($GLOBALS['strConversions'], 'sum_conversions', $pageName, $entityIds, $listorder, $orderdirection);\n    $column8 = _getHtmlHeaderColumn($GLOBALS['strCNVRShort'], 'cnvr', $pageName, $entityIds, $listorder, $orderdirection);\n    echo \"\n    <tr height='1'>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='200' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n    </tr>\n    <tr height='25'>\n        <td width='30%'>$column1</td>\n        <td align='$phpAds_TextAlignRight'>$column2</td>\n        <td align='$phpAds_TextAlignRight'>$column3</td>\n        <td align='$phpAds_TextAlignRight'>$column4</td>\n        <td align='$phpAds_TextAlignRight'>$column5</td>\n        <td align='$phpAds_TextAlignRight'>$column6</td>\n        <td align='$phpAds_TextAlignRight'>$column7</td>\n        <td align='$phpAds_TextAlignRight'>$column8</td>\n    </tr>\n    <tr height='1'><td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n}\n\nfunction MAX_displayStatsHistoryHeader($pageName, $listorder, $orderdirection, $entityIds=null)\n{\n    global $phpAds_TextAlignRight;\n    $column1 = _getHtmlHeaderColumn($GLOBALS['strDays'], 'name', $pageName, $entityIds, $listorder, $orderdirection);\n    $column2 = _getHtmlHeaderColumn($GLOBALS['strImpressions'], 'sum_views', $pageName, $entityIds, $listorder, $orderdirection);\n    $column3 = _getHtmlHeaderColumn($GLOBALS['strClicks'], 'sum_clicks', $pageName, $entityIds, $listorder, $orderdirection);\n    $column4 = _getHtmlHeaderColumn($GLOBALS['strCTRShort'], 'ctr', $pageName, $entityIds, $listorder, $orderdirection);\n    $column5 = _getHtmlHeaderColumn($GLOBALS['strConversions'], 'sum_conversions', $pageName, $entityIds, $listorder, $orderdirection);\n    $column6 = _getHtmlHeaderColumn($GLOBALS['strCNVRShort'], 'cnvr', $pageName, $entityIds, $listorder, $orderdirection);\n    echo \"\n        <table border='0' cellpadding='0' cellspacing='0' width='100%'>\n        <tr height='1'>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='200' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        </tr>\n        <tr height='25'>\n            <td width='30%'>$column1</td>\n            <td align='$phpAds_TextAlignRight'>$column2</td>\n            <td align='$phpAds_TextAlignRight'>$column3</td>\n            <td align='$phpAds_TextAlignRight'>$column4</td>\n            <td align='$phpAds_TextAlignRight'>$column5</td>\n            <td align='$phpAds_TextAlignRight'>$column6</td>\n        </tr>\n        <tr height='1'><td colspan='7' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\n    \";\n}\n\nfunction MAX_displayNoStatsMessage()\n{\n    echo \"\n    <br /><br /><div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/info.gif' width='16' height='16' border='0' align='absmiddle'>{$GLOBALS['strNoStats']}</div>\";\n}\n\nfunction _getHtmlHeaderColumn($title, $name, $pageName, $entityIds, $listorder, $orderdirection, $showColumn = true)\n{\n    $str = '';\n    $entity = _getEntityString($entityIds);\n    if ($listorder == $name) {\n        if (($orderdirection == '') || ($orderdirection == 'down')) {\n            $str = \"<a href='$pageName?{$entity}orderdirection=up'><img src='\" . OX::assetPath() . \"/images/caret-ds.gif' border='0' alt='' title=''></a>\";\n        } else {\n            $str = \"<a href='$pageName?{$entity}orderdirection=down'><img src='\" . OX::assetPath() . \"/images/caret-u.gif' border='0' alt='' title=''></a>\";\n        }\n    }\n    return $showColumn ? \"<b><a href='$pageName?{$entity}listorder=$name'>$title</a>$str</b>\" : '';\n}\n\nfunction _getEntityString($entityIds)\n{\n    $entity = '';\n    if (!empty($entityIds)) {\n        $entityArr = array();\n        foreach ($entityIds as $entityId => $entityValue) {\n            $entityArr[] = \"$entityId=$entityValue\";\n        }\n        $entity = implode('&',$entityArr) . '&';\n    }\n\n    return $entity;\n}\n\nfunction MAX_displayDateSelectionForm($period, $period_start, $period_end, $pageName, &$tabindex, $hiddenValues = null)\n{\n    global $tabindex;\n    require_once MAX_PATH . '/lib/max/Admin/UI/FieldFactory.php';\n\n    $oDaySpan =& FieldFactory::newField('day-span');\n    $oDaySpan->_name = 'period';\n    $oDaySpan->_autoSubmit = true;\n    $oDaySpan->setValueFromArray(array('period_preset' => $period, 'period_start' => $period_start, 'period_end' => $period_end));\n    $oDaySpan->_tabIndex = $tabindex;\n    echo \"\n    <form id='period_form' name='period_form' action='$pageName'>\";\n    $oDaySpan->display();\n    $tabindex = $oDaySpan->_tabIndex;\n    echo \"\n    <input type='button' value='Go' onclick='return periodFormSubmit()' style='margin-left: 1em' tabindex='\".$tabindex++.\"' />\";\n    _displayHiddenValues($hiddenValues);\n    echo \"\n    </form>\";\n}\n\nfunction _displayHiddenValues($hiddenValues)\n{\n    if (!empty($hiddenValues) && is_array($hiddenValues)) {\n        foreach ($hiddenValues as $name => $value) {\n            echo \"\n    <input type='hidden' name='$name' value='$value'>\";\n        }\n    }\n}\n\nfunction MAX_displayPeriodSelectionForm($period, $pageName, &$tabindex, $hiddenValues = null)\n{\n    global $phpAds_TextDirection;\n\n    echo \"\n    <form action='$pageName'>\n    <select name='period' onChange='this.form.submit();' tabindex='\". $tabindex++ .\"'>\n        <option value='daily'\".($period == 'daily' ? ' selected' : '').\">{$GLOBALS['strDailyHistory']}</option>\n        <option value='w'\".($period == 'weekly' ? ' selected' : '').\">{$GLOBALS['strWeeklyHistory']}</option>\n        <option value='m'\".($period == 'monthly' ? ' selected' : '').\">{$GLOBALS['strMonthlyHistory']}</option>\n    </select>\n    &nbsp;&nbsp;\n    <input type='image' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif' border='0' name='submit'>\n    &nbsp;\";\n    _displayHiddenValues($hiddenValues);\n    echo \"\n    </form>\n    \";\n}\n\nfunction MAX_displayHistoryStatsDaily($aHistoryStats, $aTotalHistoryStats, $pageName, $hiddenValues = null)\n{\n    $i = 0;\n    $entity = _getEntityString($hiddenValues);\n    foreach ($aHistoryStats as $day => $stats) {\n        $bgColor = ($i++ % 2 == 0) ? '#F6F6F6' : '#FFFFFF';\n        $views = phpAds_formatNumber($stats['sum_views']);\n        $clicks = phpAds_formatNumber($stats['sum_clicks']);\n        $conversions = phpAds_formatNumber($stats['sum_conversions']);\n        $ctr = phpAds_buildRatioPercentage($stats['sum_clicks'], $stats['sum_views']);\n        $cnvr = phpAds_buildRatioPercentage($stats['sum_conversions'], $stats['sum_clicks']);\n        echo \"\n        <tr height='25' bgcolor='$bgColor'>\n            <td>&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-date.gif' align='absmiddle' alt=''>&nbsp;<a href='$pageName?{$entity}'>$day</a></td>\n            <td align='right'>$views</td>\n            <td align='right'>$clicks</td>\n            <td align='right'>$ctr</td>\n            <td align='right'>$conversions</td>\n            <td align='right'>$cnvr</td>\n        </tr>\n        <tr><td height='1' colspan='6' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%' alt=''></td></tr>\n        \";\n    }\n    echo \"\n    </table>\";\n}\n\nfunction MAX_displayPublisherZoneStats($aParams, $pageName, $anonymous, $aNodes, $expand, $listorder, $orderdirection, $hideinactive, $showPublisher, $entityIds)\n{\n    global $phpAds_TextAlignLeft, $phpAds_TextAlignRight, $phpAds_TextDirection;\n\n    // Get the icons for all levels (publisher/zone)\n    $entity = _getEntityString($entityIds);\n    $publishersHidden = 0;\n\n    $aPublishers = Admin_DA::fromCache('getPublishersStats', $aParams);\n    if (!empty($aPublishers)) {\n        echo \"\n        <br /><br />\n        <table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n        MAX_displayStatsHeader($pageName, $listorder, $orderdirection, $entityIds);\n\n        // Variable to determine if the row should be grey or white...\n        $i=0;\n\n        // Loop through publishers\n        $totalRequests = 0;\n        $totalViews = 0;\n        $totalClicks = 0;\n        $totalConversions = 0;\n        MAX_sortArray($aPublishers, ($listorder == 'id' ? 'publisher_id' : $listorder), $orderdirection == 'up');\n        foreach($aPublishers as $publisherId => $publisher) {\n            $publisherRequests = phpAds_formatNumber($publisher['sum_requests']);\n            $publisherViews = phpAds_formatNumber($publisher['sum_views']);\n            $publisherClicks = phpAds_formatNumber($publisher['sum_clicks']);\n            $publisherConversions = phpAds_formatNumber($publisher['sum_conversions']);\n            $publisherCtr = phpAds_buildRatioPercentage($publisher['sum_clicks'], $publisher['sum_views']);\n            $publisherSr = phpAds_buildRatioPercentage($publisher['sum_conversions'], $publisher['sum_clicks']);\n            $publisherExpanded = MAX_isExpanded($publisherId, $expand, $aNodes, 'p');\n            $publisherActive = true;\n            $publisherIcon = MAX_getEntityIcon('publisher', $publisherActive);\n\n            if (!$hideinactive || $publisherActive) {\n                $bgcolor = ($i++ % 2 == 0) ? \" bgcolor='#F6F6F6'\" : '';\n                echo \"\n            <tr height='25'$bgcolor>\n                <td>\";\n                if (!empty($publisher['num_children'])) {\n                    if ($publisherExpanded)\n                        echo \"&nbsp;<a href='$pageName?{$entity}collapse=p$publisherId'><img src='\" . OX::assetPath() . \"/images/triangle-d.gif' align='absmiddle' border='0'></a>&nbsp;\";\n                    else\n                        echo \"&nbsp;<a href='$pageName?{$entity}expand=p$publisherId'><img src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/triangle-l.gif' align='absmiddle' border='0'></a>&nbsp;\";\n                }\n                else\n                    echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/spacer.gif' height='16' width='16'>&nbsp;\";\n\n                echo \"\n                    <img src='$publisherIcon' align='absmiddle'>&nbsp;\n                    <a href='stats.php?entity=affiliate&breakdown=history&affiliateid=$publisherId'>{$publisher['name']}</a>\n                </td>\";\n                if ($anonymous) {\n                    echo \"\n                <td align='$phpAds_TextAlignRight'>&nbsp;</td>\";\n                } else {\n                    echo \"\n                <td align='$phpAds_TextAlignRight'>$publisherId</td>\";\n                    }\n                    echo \"\n                <td align='$phpAds_TextAlignRight'>$publisherRequests</td>\n                <td align='$phpAds_TextAlignRight'>$publisherViews</td>\n                <td align='$phpAds_TextAlignRight'>$publisherClicks</td>\n                <td align='$phpAds_TextAlignRight'>$publisherCtr</td>\n                <td align='$phpAds_TextAlignRight'>$publisherConversions</td>\n                <td align='$phpAds_TextAlignRight'>$publisherSr</td>\n            </tr>\";\n\n                if (!empty($publisher['num_children']) && $publisherExpanded) {\n                    echo \"\n            <tr height='1'>\n                <td$bgcolor><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\n                <td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\n            </tr>\";\n\n\n                    // Loop through zones\n                    $aZones = Admin_DA::fromCache('getZonesStats', $aParams);\n                    MAX_sortArray($aZones, ($listorder == 'id' ? 'zone_id' : $listorder), $orderdirection == 'up');\n                    foreach ($aZones as $zoneId => $zone) {\n                        $zoneRequests = phpAds_formatNumber($zone['sum_requests']);\n                        $zoneViews = phpAds_formatNumber($zone['sum_views']);\n                        $zoneClicks = phpAds_formatNumber($zone['sum_clicks']);\n                        $zoneConversions = phpAds_formatNumber($zone['sum_conversions']);\n                        $zoneCtr = phpAds_buildRatioPercentage($zone['sum_clicks'], $zone['sum_views']);\n                        $zoneSr = phpAds_buildRatioPercentage($zone['sum_conversions'], $zone['sum_clicks']);\n                        $zoneActive = true;\n                        $zoneIcon = MAX_getEntityIcon('zone', $zoneActive, $zone['type']);\n\n                        echo \"\n            <tr height='25'$bgcolor>\n                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <img src='\" . OX::assetPath() . \"/images/spacer.gif' height='16' width='16' align='absmiddle'>&nbsp;\n                    <img src='$zoneIcon' align='absmiddle'>&nbsp;\n                    <a href='stats.php?entity=zone&breakdown=history&affiliateid=$publisherId&zoneid=$zoneId'>{$zone['name']}</a>\n                </td>\n                <td align='$phpAds_TextAlignRight'>$zoneId</td>\n                <td align='$phpAds_TextAlignRight'>$zoneRequests</td>\n                <td align='$phpAds_TextAlignRight'>$zoneViews</td>\n                <td align='$phpAds_TextAlignRight'>$zoneClicks</td>\n                <td align='$phpAds_TextAlignRight'>$zoneCtr</td>\n                <td align='$phpAds_TextAlignRight'>$zoneConversions</td>\n                <td align='$phpAds_TextAlignRight'>$zoneSr</td>\n            </tr>\";\n                    }\n                }\n                echo \"\n                <tr height='1'><td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n            } else {\n                $publishersHidden++;\n            }\n            $totalRequests += $publisher['sum_requests'];\n            $totalViews += $publisher['sum_views'];\n            $totalClicks += $publisher['sum_clicks'];\n            $totalConversions += $publisher['sum_conversions'];\n        }\n\n        // Total\n        echo \"\n        <tr height='25'$bgcolor>\n            <td>&nbsp;&nbsp;<b>{$GLOBALS['strTotal']}</b></td>\n            <td>&nbsp;</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalRequests).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalViews).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalViews, $totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalConversions).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalClicks, $totalConversions).\"</td>\n        </tr>\n        <tr height='1'>\n            <td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n        </tr>\";\n        if (!$anonymous) {\n            $publisherIcon = MAX_getEntityIcon('publisher');\n            echo \"\n        <tr>\n            <td colspan='4' align='$phpAds_TextAlignLeft' nowrap>\";\n\n            if ($hideinactive == true) {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-activate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=0'>{$GLOBALS['strShowAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;$publishersHidden {$GLOBALS['strInactivePublishersHidden']}\";\n            } else {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-hideinactivate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=1'>{$GLOBALS['strHideInactivePublishers']}</a>\";\n            }\n\n            echo \"\n            </td>\n            <td colspan='4' align='$phpAds_TextAlignRight' nowrap><img src='\" . OX::assetPath() . \"/images/triangle-d.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=all' accesskey='$keyExpandAll'>{$GLOBALS['strExpandAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/triangle-l.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=none' accesskey='$keyCollapseAll'>{$GLOBALS['strCollapseAll']}</a>&nbsp;&nbsp;</td>\n        </tr>\n        <tr height='25'>\";\n            if ($showPublisher == 't') {\n                echo \"\n            <td colspan='8' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='$publisherIcon' align='absmiddle'><a href='$pageName?{$entity}showpublisher=f'> Hide parent publisher</a></td>\";\n            } else {\n                echo \"\n            <td colspan='8' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='$publisherIcon' align='absmiddle'><a href='$pageName?{$entity}showpublisher=t'> Show parent publisher</a></td>\";\n            }\n            echo \"\n        </tr>\";\n        }\n        echo \"\n        </table>\n        <br /><br />\";\n    } else {\n        MAX_displayNoStatsMessage();\n    }\n}\n\nfunction MAX_displayZoneStats($aParams, $pageName, $anonymous, $aNodes, $expand, $listorder, $orderdirection, $hideinactive, $showPublisher, $entityIds)\n{\n    global $phpAds_TextAlignLeft, $phpAds_TextAlignRight, $phpAds_TextDirection;\n\n    // Get the icons for all levels (publisher/zone)\n    $entity = _getEntityString($entityIds);\n    $publishersHidden = 0;\n\n    $aZones = Admin_DA::fromCache('getZonesStats', $aParams);\n    if (!empty($aZones)) {\n        echo \"\n        <br /><br />\n        <table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n        MAX_displayStatsHeader($pageName, $listorder, $orderdirection, $entityIds, $anonymous);\n\n        // Variable to determine if the row should be grey or white...\n        $i=0;\n        $totalRequests = 0;\n        $totalViews = 0;\n        $totalClicks = 0;\n        $totalConversions = 0;\n\n        // Loop through publishers\n        MAX_sortArray($aZones, ($listorder == 'id' ? 'zone_id' : $listorder), $orderdirection == 'up');\n        foreach($aZones as $zoneId => $zone) {\n            $zoneRequests = phpAds_formatNumber($zone['sum_requests']);\n            $zoneViews = phpAds_formatNumber($zone['sum_views']);\n            $zoneClicks = phpAds_formatNumber($zone['sum_clicks']);\n            $zoneConversions = phpAds_formatNumber($zone['sum_conversions']);\n            $zoneCtr = phpAds_buildRatioPercentage($zone['sum_clicks'], $zone['sum_views']);\n            $zoneSr = phpAds_buildRatioPercentage($zone['sum_conversions'], $zone['sum_clicks']);\n            $zoneActive = true;\n            $zoneIcon = MAX_getEntityIcon('zone', $zoneActive, $zone['type']);\n\n            if (!$hideinactive || $zoneActive) {\n                $bgcolor = ($i++ % 2 == 0) ? \" bgcolor='#F6F6F6'\" : '';\n                echo \"\n        <tr height='25'$bgcolor>\n            <td>&nbsp;<img src='\" . OX::assetPath() . \"/images/spacer.gif' height='16' width='16'>&nbsp;\n                <img src='$zoneIcon' align='absmiddle'>&nbsp;\";\n                if ($anonymous) {\n                    echo \"\n                Hidden zone {$zone['id']}\";\n                } else {\n                    echo \"\n                <a href='stats.php?entity=zone&breakdown=history&affiliateid={$zone['publisher_id']}'>{$zone['name']}</a>\";\n                }\n                echo \"\n            </td>\";\n                if ($anonymous) {\n                    echo \"\n            <td align='$phpAds_TextAlignRight'>&nbsp;</td>\";\n                } else {\n                    echo \"\n            <td align='$phpAds_TextAlignRight'>$zoneId</td>\";\n                }\n                echo \"\n            <td align='$phpAds_TextAlignRight'>$zoneRequests</td>\n            <td align='$phpAds_TextAlignRight'>$zoneViews</td>\n            <td align='$phpAds_TextAlignRight'>$zoneClicks</td>\n            <td align='$phpAds_TextAlignRight'>$zoneCtr</td>\n            <td align='$phpAds_TextAlignRight'>$zoneConversions</td>\n            <td align='$phpAds_TextAlignRight'>$zoneSr</td>\n        </tr>\n        <tr height='1'><td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n            } else {\n                $publishersHidden++;\n            }\n            $totalRequests += $zone['sum_requests'];\n            $totalViews += $zone['sum_views'];\n            $totalClicks += $zone['sum_clicks'];\n            $totalConversions += $zone['sum_conversions'];\n        }\n\n        // Total\n        echo \"\n        <tr height='25'$bgcolor>\n            <td>&nbsp;&nbsp;<b>{$GLOBALS['strTotal']}</b></td>\n            <td>&nbsp;</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalRequests).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalViews).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalViews, $totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalConversions).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalClicks, $totalConversions).\"</td>\n        </tr>\n        <tr height='1'>\n            <td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n        </tr>\";\n        if (!$anonymous) {\n            echo \"\n        <tr>\n            <td colspan='4' align='$phpAds_TextAlignLeft' nowrap>\";\n\n            if ($hideinactive == true) {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-activate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=0'>{$GLOBALS['strShowAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;$publishersHidden {$GLOBALS['strInactivePublishersHidden']}\";\n            } else {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-hideinactivate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=1'>{$GLOBALS['strHideInactivePublishers']}</a>\";\n            }\n\n            echo \"\n            </td>\n            <td colspan='4' align='$phpAds_TextAlignRight' nowrap><img src='\" . OX::assetPath() . \"/images/triangle-d.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=all'>{$GLOBALS['strExpandAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/triangle-l.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=none'>{$GLOBALS['strCollapseAll']}</a>&nbsp;&nbsp;</td>\n        </tr>\n        <tr height='25'>\";\n            if ($showPublisher == 't') {\n                echo \"\n            <td colspan='7' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-affiliate.gif' align='absmiddle'><a href='$pageName?{$entity}showpublisher=f'> Hide parent publisher</a></td>\";\n            } else {\n                echo \"\n            <td colspan='7' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-affiliate.gif' align='absmiddle'><a href='$pageName?{$entity}showpublisher=t'> Show parent publisher</a></td>\";\n            }\n            echo \"\n        </tr>\";\n        }\n        echo \"\n        </table>\n        <br /><br />\";\n    } else {\n        MAX_displayNoStatsMessage();\n    }\n}\n\nfunction MAX_displayInventoryBreadcrumbs($aEntityNamesUrls, $entityClass, $newEntity = false)\n{\n    MAX_displayInventoryBreadcrumbsInternal($aEntityNamesUrls, MAX_buildBreadcrumbPath($entityClass), $newEntity);\n}\n\nfunction MAX_displayInventoryBreadcrumbsInternal($aEntityNamesUrls, $breadcrumbPath, $newEntity = false)\n{\n    global $phpAds_breadcrumbs;\n\n    $path = array();\n\n    // Breadcrumbs above the main title\n    for ($i = 0; $i < count($aEntityNamesUrls); $i++) {\n    \t$breadcrumbInfo = MAX_buildBreadcrumbInfo($breadcrumbPath[$i]);\n\n        $path[] = array(\n            'name' => $aEntityNamesUrls[$i][\"name\"],\n            'url' => $aEntityNamesUrls[$i][\"url\"],\n            'label' => ($newEntity && $i == count($aEntityNamesUrls) -1 ? $breadcrumbInfo['newLabel'] : $breadcrumbInfo['label']),\n            'newTarget' => $breadcrumbInfo['newTarget'],\n            'cssClass' => $breadcrumbInfo['class']\n        );\n    }\n\n    $phpAds_breadcrumbs = array(\n        'path' => $path,\n        'newEntity' => $newEntity\n    );\n}\n\nfunction MAX_buildBreadcrumbInfo($entityClass)\n{\n\tswitch ($entityClass)\n\t{\n\t\tcase 'advertiser':\n\t       return array(\"label\" => $GLOBALS['strClient'], \"newLabel\" => $GLOBALS['strAddClient'], \"class\" => \"adv\");\n\n\t\tcase 'campaign':\n\t       return array(\"label\" => $GLOBALS['strCampaign'], \"newLabel\" => $GLOBALS['strAddCampaign'], \"newTarget\" => $GLOBALS['strCampaignForAdvertiser'], \"class\" => \"camp\");\n\n\t\tcase 'tracker':\n\t       return array(\"label\" => $GLOBALS['strTracker'], \"newLabel\" => $GLOBALS['strAddTracker'], \"newTarget\" => $GLOBALS['strTrackerForAdvertiser'], \"class\" => \"track\");\n\n\t\tcase 'banner':\n\t       return array(\"label\" => $GLOBALS['strBanner'], \"newLabel\" => $GLOBALS['strAddBanner'], \"newTarget\" => $GLOBALS['strBannerToCampaign'], \"class\" => \"ban\");\n\n\t\tcase 'website':\n\t       return array(\"label\" => $GLOBALS['strAffiliate'], \"newLabel\" => $GLOBALS['strAddNewAffiliate'], \"class\" => \"webs\");\n\n\t\tcase 'zone':\n            return array(\"label\" => $GLOBALS['strZone'], \"newLabel\" => $GLOBALS['strAddNewZone'], \"newTarget\" => $GLOBALS['strZoneToWebsite'], \"class\" => \"zone\");\n\n\t\tcase 'channel':\n\t       return array(\"label\" => $GLOBALS['strChannel'], \"newLabel\" => $GLOBALS['strAddNewChannel'], \"newTarget\" => $GLOBALS['strChannelToWebsite'], \"class\" => \"chan\");\n\n\t\tcase 'agency':\n\t       return array(\"label\" => $GLOBALS['strAgency'], \"newLabel\" => $GLOBALS['strAddAgency'], \"class\" => \"agen\");\n\n\t\tcase 'day':\n\t       return array(\"label\" => $GLOBALS['strDay'], \"newLabel\" => '', \"class\" => \"day\");\n\t}\n\n\treturn null;\n}\n\nfunction MAX_buildBreadcrumbPath($entityClass)\n{\n\tswitch ($entityClass)\n\t{\n\t\tcase 'banner':\n\t\tcase 'campaign':\n\t\tcase 'advertiser':\n\t\t\treturn array('advertiser', 'campaign', 'banner');\n\n\t\tcase 'tracker':\n\t\t\treturn array('advertiser', 'tracker');\n\n\t\tcase 'website':\n\t\tcase 'zone':\n\t\t\treturn array('website', 'zone');\n\n\t\tcase 'trafficker-zone':\n\t\t\treturn array('zone');\n\n\t\tcase 'channel':\n\t\t\treturn array('website', 'channel');\n\n\t\tcase 'global-channel':\n\t\t\treturn array('channel');\n\n\t\tcase 'agency':\n\t\t\treturn array('agency');\n\t}\n\n\treturn null;\n}\n\n/**\n * Builds header model for advertiser edit page tabs\n *\n * @param mixed $idOrAdvertiser - either advertiser id or advertiser array\n * @return OA_Admin_UI_Model_PageHeaderModel\n */\nfunction buildAdvertiserHeaderModel($idOrAdvertiser)\n{\n    if (is_array($idOrAdvertiser)) {\n        $aAdvertiser = $idOrAdvertiser;\n    }\n    else if (!empty($idOrAdvertiser)) {\n        $aAdvertiser = phpAds_getClientDetails($idOrAdvertiser);\n    }\n    else {\n        $aAdvertiser = array();\n    }\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $pageType = empty($aAdvertiser['clientid']) ? 'edit-new' : 'edit';\n\n    $oHeaderModel = $builder->buildEntityHeader(array(\n        array(\"name\" => $aAdvertiser['clientname'])),\n        \"advertiser\", $pageType);\n    return $oHeaderModel;\n}\n\nfunction MAX_displayTrackerBreadcrumbs($clientid, $trackerid = null)\n{\n\tif ($trackerid) {\n        $parentClientId = phpAds_getTrackerParentClientID($trackerid);\n        $tracker = phpAds_getTrackerDetails($trackerid);\n        $trackerName = $tracker['trackername'];\n        $pageType = 'edit';\n\t}\n\telse {\n\t\t$parentClientId = $clientid;\n\t\t$trackerName = \"\";\n\t\t$pageType = 'edit-new';\n\t}\n    $advertiserEditUrl = \"advertiser-edit.php?clientid=$parentClientId\";\n    $advertiser = phpAds_getClientDetails($parentClientId);\n    $advertiserName = $advertiser['clientname'];\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                        array(\"name\" => $advertiserName, \"url\" => $advertiserEditUrl),\n                                        array(\"name\" => $trackerName)),\n                                        'tracker', $pageType);\n\n    return $oHeaderModel;\n}\n\nfunction MAX_displayWebsiteBreadcrumbs($affiliateid)\n{\n\tif ($affiliateid) {\n\t\t$publisher = Admin_DA::getPublisher($affiliateid);\n        $websiteName = $publisher['name'];\n        $pageType = \"edit\";\n\t}\n\telse {\n\t\t$websiteName = \"\";\n\t\t$pageType = \"edit-new\";\n\t}\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n\t    array(\"name\" => $websiteName)), \"website\", $pageType);\n\n\treturn $oHeaderModel;\n}\n\n\n\n\nfunction MAX_displayNavigationPublisher($pageName, $aOtherPublishers, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    $publisherId = $aEntities['affiliateid'];\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['affiliateid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n\n    // Determine which tab is highlighted\n    switch ($pageName) {\n        case 'affiliate-channels.php' : $tabValue = '4.2.4'; break;\n    }\n\n    // Sort the publishers by name...\n    require_once(MAX_PATH . '/lib/max/other/stats.php');\n    MAX_displayInventoryBreadcrumbs(array(array(\"name\" => $publisherName)), \"website\");\n    phpAds_PageHeader($tabValue, $extra = '');\n}\n\n\nfunction MAX_displayZoneEntitySelection($entity, $aOtherAdvertisers, $aOtherPlacements, $aOtherAds, $advertiserId, $placementId, $adId, $publisherId, $zoneId, $title, $pageName, &$tabIndex)\n{\n    echo \"\n<br />$title<br /><br />\n<table cellpadding='0' cellspacing='0' border='0'>\n<tr>\";\n    $aSavedEntities = array('affiliateid' => $publisherId, 'zoneid' => $zoneId);\n    _displayZoneEntitySelectionCell('advertiser', $advertiserId, $aOtherAdvertisers, 'clientid', $aSavedEntities, ($entity != 'advertiser'), $pageName, $tabIndex);\n\n    if (!empty($advertiserId) && $entity != 'advertiser') {\n        $aSavedEntities['clientid'] = $advertiserId;\n        _displayZoneEntitySelectionCell('placement', $placementId, $aOtherPlacements, 'campaignid', $aSavedEntities, ($entity != 'placement'), $pageName, $tabIndex);\n\n        if (!empty($placementId) && $entity != 'placement') {\n            $aSavedEntities['campaignid'] = $placementId;\n            _displayZoneEntitySelectionCell('ad', $adId, $aOtherAds, 'bannerid', $aSavedEntities, ($entity != 'ad'), $pageName, $tabIndex);\n        }\n    }\n    echo \"\n</tr>\n</table>\n<br /><br />\";\n}\n\nfunction _displayZoneEntitySelectionCell($entity, $entityId, $aOtherEntities, $entityIdName, $aSavedEntities, $autoSubmit, $pageName, &$tabIndex)\n{\n    global $phpAds_TextDirection;\n\n    $onChange = $autoSubmit ? \" onChange='this.form.submit();'\" : '';\n    $submitIcon = $autoSubmit ? '' : \"&nbsp;<input type='hidden' name='action' value='set'><input id='link_submit' name='submitimage' id='submitimage' type='image' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif' border='0' tabindex='\".($tabIndex++).\"'>\";\n    $tabInfo = \" tabindex='\" . ($tabIndex++) . \"'\";\n    $entityIcon = MAX_getEntityIcon($entity);\n    echo \"\n<td>\n<form name='zonetypeselection' method='get' action='$pageName'>\";\n    foreach($aSavedEntities as $savedEntityName => $savedEntityId) {\n        echo \"\n<input type='hidden' name='$savedEntityName' value='$savedEntityId'>\";\n    }\n    echo \"\n    &nbsp;&nbsp;<img src='$entityIcon' align='absmiddle'>&nbsp;\n    <select name='$entityIdName'{$onChange}{$tabInfo}>\";\n    // Show an empty value in the dropdown if none is selected\n    if (empty($entityId)) {\n        switch ($entity) {\n            case 'advertiser' : $description = \"-- {$GLOBALS['strSelectAdvertiser']} --\"; break;\n            case 'placement'  : $description = \"-- {$GLOBALS['strSelectPlacement']} --\"; break;\n            case 'ad' : $description = \"-- {$GLOBALS['strSelectAd']} --\"; break;\n            default : $description = '';\n        }\n        echo \"\n        <option value='' selected>$description</option>\";\n    }\n\n    $aOtherEntities = _multiSort($aOtherEntities, 'name', 'advertiser_id');\n    foreach ($aOtherEntities as $aOtherEntity) {\n        switch ($entity) {\n            case 'advertiser':\n                $otherEntityId = $aOtherEntity['advertiser_id'];\n                break;\n            case 'placement':\n                $otherEntityId = $aOtherEntity['placement_id'];\n                break;\n            case 'ad':\n                $otherEntityId = $aOtherEntity['ad_id'];\n                break;\n        }\n        $selected = $otherEntityId == $entityId ? ' selected' : '';\n\n        $adsCount = '';\n        if ($entity == 'placement') {\n            $aParams = array('placement_id' => $otherEntityId);\n            $aParams += MAX_getLinkedAdParams($GLOBALS['zoneId']);\n\n            $doCampaign = OA_Dal::factoryDO('campaigns');\n            $doCampaign->campaignid = $otherEntityId;\n            $doCampaign->find();\n            $doCampaign->fetch();\n\n            if($doCampaign->type == DataObjects_Campaigns::CAMPAIGN_TYPE_DEFAULT) {\n                $translation = new OX_Translation();\n                $aStringParams[\"bannerCount\"] = count(Admin_DA::getAds($aParams));\n                $translated = $translation->translate($GLOBALS['strWithXBanners'], $aStringParams);\n                $adsCount = \"(\" .$translated.\")\";\n            }\n        }\n\n        $name = MAX_buildName($otherEntityId, $aOtherEntity['name']);\n        echo \"\n        <option value='$otherEntityId'{$selected}>\".$name.\" $adsCount</option>\";\n    }\n    echo \"\n    </select>\n    $submitIcon\n</form>\n</td>\";\n}\n\nfunction MAX_displayLinkedAdsPlacements($aParams, $publisherId, $zoneId, $hideInactive, $showParentPlacements, $pageName, &$tabIndex)\n{\n    global $phpAds_TextDirection, $phpAds_TextAlignRight;\n\n    echo \"\n<table id='linked-banners' width='100%' border='0' align='center' cellspacing='0' cellpadding='0'>\n<tr height='25'>\n<td width='40%'><b>&nbsp;&nbsp;{$GLOBALS['strName']}</b></td>\n<td><b>{$GLOBALS['strID']}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n<td>&nbsp;</td>\n</tr>\n<tr height='1'>\n<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n</tr>\";\n    $i = 0;\n    $inactive = 0;\n    $aPlacements = !empty($aParams) ? Admin_DA::getPlacements($aParams) : array();\n    foreach ($aPlacements as $placementId => $aPlacement) {\n        $aAds = Admin_DA::getAds($aParams + array('placement_id' => $placementId), true);\n        $placementActive = $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING;\n        if (!$hideInactive || $placementActive) {\n            $bgcolor = $i % 2 == 0 ? \" bgcolor='#F6F6F6'\" : '';\n            if ($showParentPlacements) {\n                $placementIcon = MAX_getEntityIcon('placement', $placementActive);\n                $placementName = MAX_getDisplayName($aPlacement['name']);\n                $placementLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='campaign-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId'>$placementName</a>\" : $placementName;\n                if ($i > 0) {\n                    echo \"\n<tr height='1'>\n<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\n</tr>\";\n            }\n            echo \"\n<tr height='25'$bgcolor>\n<td>\n    &nbsp;&nbsp;<img src='$placementIcon' align='absmiddle'>\n    &nbsp;$placementLink\n</td>\n<td>$placementId</td>\n<td>&nbsp;</td>\n</tr>\";\n            }\n            foreach ($aAds as $adId => $aAd) {\n                $adActive = ($aAd['status'] == OA_ENTITY_STATUS_RUNNING && $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING);\n                if (!$hideInactive || $adActive) {\n                    $adIcon = MAX_getEntityIcon('ad', $adActive, $aAd['type']);\n                    $adName = htmlspecialchars(MAX_getDisplayName($aAd['name']));\n                    $adLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='banner-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId&bannerid=$adId'>$adName</a>\" : $adName;\n                    $adWidth = $aAd['contenttype'] == 'txt' ? 300 : $aAd['width'] + 64;\n                    $adHeight = $aAd['contenttype'] == 'txt' ? 200 : $aAd['height'] + (!empty($aAd['bannertext']) ? 90 : 64);\n                    echo \"\n<tr height='1'>\n<td$bgcolor><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\n<td colspan='2' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-el.gif' height='1' width='100%'></td>\n</tr>\n<tr height='25'$bgcolor>\n<td>\n    &nbsp;&nbsp;<a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&bannerid=$adId&action=remove'><img src='\" . OX::assetPath() . \"/images/caret-l.gif' border='0' align='absmiddle'></a>\n    &nbsp;&nbsp;&nbsp;&nbsp;<img src='$adIcon' align='absmiddle'>&nbsp;$adLink</td>\n<td>$adId</td>\n<td align='$phpAds_TextAlignRight'>\n    <img src='\" . OX::assetPath() . \"/images/icon-zoom.gif' align='absmiddle' border='0'>&nbsp;<a href='banner-htmlpreview.php?bannerid=$adId' target='_new' onClick=\\\"return openWindow('banner-htmlpreview.php?bannerid=$adId', '', 'status=no,scrollbars=no,resizable=no,width=$adWidth,height=$adHeight');\\\">{$GLOBALS['strShowBanner']}</a>&nbsp;&nbsp;\n</td>\n</tr>\";\n                } else {\n                    $inactive++;\n                }\n            }\n            $i++;\n        } else {\n            $inactive += count($aAds);\n        }\n    }\n    $showParentText = $showParentPlacements ? $GLOBALS['strHideParentCampaigns'] : $GLOBALS['strShowParentCampaigns'];\n    $showParentValue = $showParentPlacements ? '0': '1';\n    $hideInactiveText = $hideInactive ? $GLOBALS['strShowAll'] : $GLOBALS['strHideInactiveBanners'];\n    $hideInactiveStats = $hideInactive ? \"&nbsp;&nbsp;|&nbsp;&nbsp;$inactive {$GLOBALS['strInactiveBannersHidden']}\" : '';\n    $hideInactiveValue = $hideInactive ? '0' : '1';\n    $hideInactiveIcon = OX::assetPath($hideInactive ? 'images/icon-activate.gif' : 'images/icon-hideinactivate.gif');\n    echo \"\n<tr height='1'>\n<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n</tr>\n<tr height='25'>\n<td colspan='2'>\n    <img src='$hideInactiveIcon' align='absmiddle' border='0'>\n    <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&hideinactive=$hideInactiveValue'>$hideInactiveText</a>$hideInactiveStats\n</td>\n<td align='right'>\n    <img src='\" . OX::assetPath() . \"/images/icon-campaign-d.gif' align='absmiddle' border='0'>\n    <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&showcampaigns=$showParentValue'>$showParentText</a>\n</table>\";\n}\n\nfunction MAX_displayLinkedPlacementsAds($aParams, $publisherId, $zoneId, $hideInactive, $showMatchingAds, $pageName, &$tabIndex, $directLinkedAds=false)\n    {\n        echo \"\n    <br /><strong>{$GLOBALS['strCampaignLinkedAds']}:</strong><br />\n    <table id='linked-campaigns' width='100%' border='0' align='center' cellspacing='0' cellpadding='0'>\n    <tr height='25'>\n        <td width='40%'><b>&nbsp;&nbsp;{$GLOBALS['strName']}</b></td>\n        <td width='20%'><b>&nbsp;&nbsp;{$GLOBALS['strType']}</b></td>\n        <td><b>{$GLOBALS['strID']}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n        <td>&nbsp;</td>\n    </tr>\n    <tr height='1'>\n        <td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n    </tr>\";\n\n        $i = 0;\n        $inactive = 0;\n        $aPlacements = (!empty($aParams)) ? Admin_DA::getPlacements($aParams) : array();\n        foreach ($aPlacements as $placementId => $aPlacement) {\n            $placementActive = $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING;\n            if (!$hideInactive || $placementActive) {\n                $pParams = $aParams;\n                $pParams['placement_id'] = $placementId;\n                $aAds = Admin_DA::getAds($pParams, true);\n                $bgcolor = $i % 2 == 0 ? \" bgcolor='#F6F6F6'\" : '';\n                // Remove these ad(s) from the direct linked ads\n                foreach ($aAds as $dAdId) {\n                    unset($directLinkedAds[$dAdId['ad_id']]);\n                }\n\n                // Remove from array any ads not linked to the zone.\n                // These might exist if campaign has been linked to zone\n                // and indivual ads have then been unlinked\n                $pParams = array('zone_id' => $zoneId);\n                $aAdZones = Admin_DA::getAdZones($pParams, true);\n                $aAdZoneLinks = array();\n                foreach($aAdZones as $aAdZone) {\n                    $aAdZoneLinks[] = $aAdZone['ad_id'];\n                }\n                foreach($aAds as $adId => $aAd) {\n                    if (!in_array($adId, $aAdZoneLinks)) {\n                        unset($aAds[$adId]);\n                    }\n                }\n\n                $placementIcon = MAX_getEntityIcon('placement', $placementActive);\n                $placementName = htmlspecialchars(MAX_getDisplayName($aPlacement['name']));\n                $placementLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='campaign-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId'>$placementName</a>\" : $placementName;\n                $placementTypeName = OX_Util_Utils::getCampaignTypeName($aPlacement['priority']);\n                $adCount = empty($aAds) ? 0 : count($aAds);\n                $placementDescription = $showMatchingAds ? '&nbsp;' : str_replace('{count}', $adCount, $GLOBALS['strMatchingBanners']);\n                if ($i > 0) {\n                    echo \"\n    <tr height='1'>\n        <td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\n    </tr>\";\n                }\n                echo \"\n    <tr height='25'$bgcolor>\n        <td>\n            &nbsp;&nbsp;<a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&campaignid=$placementId&action=remove'><img src='\" . OX::assetPath() . \"/images/caret-l.gif' border='0' align='absmiddle'></a>\n            &nbsp;&nbsp;<img src='$placementIcon' align='absmiddle'>\n            &nbsp;$placementLink\n        </td>\n        <td><span class='campaign-type'>$placementTypeName</span></td>\n        <td>$placementId</td>\n        <td>$placementDescription</td>\n    </tr>\";\n                if ($showMatchingAds && !empty($aAds)) {\n                    foreach ($aAds as $adId => $aAd) {\n                        $adActive = ($aAd['status'] == OA_ENTITY_STATUS_RUNNING && $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING);\n                        if (!$hideInactive || $adActive) {\n                            $adIcon = MAX_getEntityIcon('ad', $adActive, $aAd['type']);\n                            $adName = htmlspecialchars(MAX_getDisplayName($aAd['name']));\n                            $adLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='banner-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId&bannerid=$adId'>$adName</a>\" : $adName;\n                            $adWidth = $aAd['contenttype'] == 'txt' ? 300 : $aAd['width'] + 64;\n                            $adHeight = $aAd['contenttype'] == 'txt' ? 200 : $aAd['height'] + (!empty($aAd['bannertext']) ? 90 : 64);\n                            echo \"\n    <tr height='1'>\n        <td$bgcolor><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\n        <td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-el.gif' height='1' width='100%'></td>\n    </tr>\n    <tr height='25'$bgcolor>\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src='$adIcon' align='absmiddle'>&nbsp;$adLink</td>\n        <td></td>\n        <td>$adId</td>\n        <td align=\".$GLOBALS['phpAds_TextAlignRight'].\">\n            <img src='\" . OX::assetPath() . \"/images/icon-zoom.gif' align='absmiddle' border='0'>&nbsp;<a href='banner-htmlpreview.php?bannerid=$adId' target='_new' onClick=\\\"return openWindow('banner-htmlpreview.php?bannerid=$adId', '', 'status=no,scrollbars=no,resizable=no,width=$adWidth,height=$adHeight');\\\">{$GLOBALS['strShowBanner']}</a>&nbsp;&nbsp;\n        </td>\n    </tr>\";\n                        } else {\n                            $inactive++;\n                        }\n                    }\n                }\n                $i++;\n            } else {\n                $inactive++;\n            }\n        }\n        $showMatchingText = $showMatchingAds ? $GLOBALS['strHideMatchingBanners'] : $GLOBALS['strShowMatchingBanners'];\n        $showMatchingValue = $showMatchingAds ? '0' : '1';\n        $hideInactiveText = $hideInactive ? $GLOBALS['strShowAll'] : $GLOBALS['strHideInactiveCampaigns'];\n        $hideInactiveStats = $hideInactive ? \"&nbsp;&nbsp;|&nbsp;&nbsp;$inactive {$GLOBALS['strInactiveCampaignsHidden']}\" : '';\n        $hideInactiveValue = $hideInactive ? '0' : '1';\n        $hideInactiveIcon = OX::assetPath($hideInactive ? 'images/icon-activate.gif' : 'images/icon-hideinactivate.gif');\n        echo \"\n    <tr height='1'>\n        <td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n    </tr>\n    <tr height='25'>\n        <td colspan='3'>\n            <img src='$hideInactiveIcon' align='absmiddle' border='0'>\n            <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&hideinactive=$hideInactiveValue'>$hideInactiveText</a>$hideInactiveStats\n        </td>\n        <td align='right'>\n            <img src='\" . OX::assetPath() . \"/images/icon-banner-stored-d.gif' align='absmiddle' border='0'>\n            <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&showbanners=$showMatchingValue'>$showMatchingText</a>\n    </table>\";\n        if (!empty($directLinkedAds)) {\n            echo \"<br /><strong>{$GLOBALS['strBannerLinkedAds']}:</strong><br />\";\n            $aParams = array('ad_id' => implode(',', array_keys($directLinkedAds)));\n            MAX_displayLinkedAdsPlacements($aParams, $publisherId, $zoneId, $hideInactive, $showParentPlacements, $pageName, $tabIndex);\n        }\n    }\n\nfunction MAX_displayPlacementAdSelectionViewForm($publisherId, $zoneId, $view, $pageName, &$tabIndex, $aOtherZones = array())\n{\n    global $phpAds_TextDirection;\n\n    $disabled = null;\n    $disabledHidden = null;\n    if (!empty($aOtherZones[$zoneId]['type'])) {\n        if ($aOtherZones[$zoneId]['type'] == MAX_ZoneEmail) {\n            $view = 'ad';\n            $disabled = ' disabled';\n            $disabledHidden = \"<input type='hidden' name='view' value='ad' />\";\n        }\n    }\n    $placementSelected = $view == 'placement' ? ' selected' : '';\n    $categorySelected = $view == 'category' ? ' selected' : '';\n    $adSelected = $view == 'ad' ? ' selected' : '';\n\n    echo \"\n<form name='zoneview' method='post' action='$pageName'>\n<input type='hidden' name='zoneid' value='$zoneId'>\n<input type='hidden' name='affiliateid' value='$publisherId'>\n<table border='0' width='100%' cellpadding='0' cellspacing='0'>\n<tr height='25'>\n<td colspan='3'><b>{$GLOBALS['strSelectZoneType']}</b></td>\n</tr>\n<tr height='25'>\n<td>\n    <select name='view' onchange='this.form.submit();' $disabled>\n        <option value='placement'$placementSelected>{$GLOBALS['strCampaignDefaults']}</option>\n        <!--option value='category'$categorySelected>{$GLOBALS['strLinkedCategories']}</option-->\n        <option value='ad'$adSelected>{$GLOBALS['strLinkedBanners']}</option>\n    </select>\n    &nbsp;<input type='image' id='link_type_submit' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif' border='0'>\n    $disabledHidden\n</td>\n</tr>\n</table>\n</form>\";\n    phpAds_ShowBreak();\n    echo \"\n<br />\";\n}\n\nfunction MAX_displayAcls($acls, $aParams)\n{\n    $tabindex =& $GLOBALS['tabindex'];\n    $page = basename($_SERVER['SCRIPT_NAME']);\n    $conf = $GLOBALS['_MAX']['CONF'];\n\n    echo \"<form action='{$page}' method='post'>\";\n\n    echo \"<label><img src='\" . OX::assetPath() . \"/images/icon-acl-add.gif' align='absmiddle'>&nbsp;\". $GLOBALS['strACLAdd'] .\": &nbsp;\";\n    echo \"<select name='type' accesskey='{$GLOBALS['keyAddNew']}' tabindex='\".($tabindex++).\"'>\";\n\n    $deliveryLimitations = OX_Component::getComponents('deliveryLimitations', null, false);\n    foreach ($deliveryLimitations as $pluginName => $plugin) {\n        if ($plugin->isAllowed($page)) {\n            echo \"<option value='{$pluginName}'>\" . $plugin->getName() . \"</option>\";\n        }\n    }\n\n    echo \"</select></label>\";\n    echo \"&nbsp;\";\n    echo \"<input type='submit' class='flat' name='action[new]' value='\" . $GLOBALS['strAdd'] . \"'\";\n\n    phpAds_ShowBreak();\n    echo \"<br />\";\n    $aErrors = OX_AclCheckInputsFields($acls, $page);\n    if (!empty($GLOBALS['action'])) {\n        // We are part way through making changes, show a message\n        //echo \"<br>\";\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/warning.gif' align='absmiddle'>\";\n        echo \"<span class='tab-s'>{$GLOBALS['strUnsavedChanges']}</span><br>\";\n        echo \"</div>\";\n    }\n    elseif (!MAX_AclValidate($page, $aParams)) {\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/warning.gif' align='absmiddle'>\";\n        echo \"<span class='tab-r'>{$GLOBALS['strDeliveryLimitationsDisagree']}</span><br>\";\n        echo \"</div>\";\n    }\n\n    if ($aErrors  !== true) {\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/warning.gif' align='absmiddle'>\";\n        echo \"<span class='tab-s'>{$GLOBALS['strDeliveryLimitationsInputErrors']}</span><br><ul>\";\n        foreach ($aErrors as $error) {\n            echo \"<li><span class='tab-s'>{$error}</span><br></li>\";\n        }\n        echo \"</ul></div>\";\n    }\n\n    foreach ($aParams as $name => $value) {\n        echo \"<input type='hidden' name='{$name}' value='{$value}' />\";\n    }\n    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n    echo \"<tr><td height='25' colspan='4' bgcolor='#FFFFFF'><b>{$GLOBALS['strDeliveryLimitations']}</b></td></tr>\";\n    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\n    if (empty($acls)) {\n        echo \"<tr><td height='24' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{$GLOBALS['strNoLimitations']}</td></tr>\";\n        echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    } else {\n        echo \"<tr><td height='25' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{$GLOBALS['strOnlyDisplayWhen']}</td></tr>\";\n        echo \"<tr><td colspan='4'><img src='\" . OX::assetPath() . \"/images/break-el.gif' width='100%' height='1'></td></tr>\";\n\n        foreach ($acls as $aclId => $acl) {\n            if ($deliveryLimitationPlugin = OA_aclGetComponentFromRow($acl)) {\n                $deliveryLimitationPlugin->init($acl);\n                $deliveryLimitationPlugin->count = count($acls);\n                if ($deliveryLimitationPlugin->isAllowed($page)) {\n                    $deliveryLimitationPlugin->display();\n                }\n            }\n        }\n    }\n\n    echo \"<tr><td height='30' colspan='2'>\";\n\n    if (!empty($acls)) {\n        $url = $page . '?';\n        foreach ($aParams as $name => $value) {\n            $url .= \"{$name}={$value}&\";\n        }\n        $url .= \"action[clear]=true\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-recycle.gif' border='0' align='absmiddle'>&nbsp;\n                <a href='{$url}'>{$GLOBALS['strRemoveAllLimitations']}</a>&nbsp;&nbsp;&nbsp;&nbsp;\n        \";\n    }\n\n    echo \"</td><td height='30' colspan='2' align='{$GLOBALS['phpAds_TextAlignRight']}'>\";\n    echo \"</td></tr>\";\n\n    echo \"</table>\";\n}\n\nfunction MAX_displayChannels($channels, $aParams) {\n    $entityString = _getEntityString($aParams);\n    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n\n    echo \"<tr height='25'><td height='25'><b>&nbsp;&nbsp;{$GLOBALS['strName']}</a></b></td>\";\n\n    echo \"<td height='25'><b>{$GLOBALS['strID']}</a></td>\";\n    echo \"<td height='25'>&nbsp;</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\n    if (empty($channels)) {\n        echo \"<tr height='25' bgcolor='#F6F6F6'><td height='25' colspan='3'>\";\n        echo \"&nbsp;&nbsp;{$GLOBALS['strNoChannels']}</td></tr>\";\n\n        echo \"<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    } else {\n        $i = 0;\n        foreach ($channels as $channelId => $channel) {\n            if ($i > 0) echo \"<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\";\n            echo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n            echo \"<td height='25'>&nbsp;&nbsp;\";\n            echo \"<img src='\" . OX::assetPath() . \"/images/icon-channel.gif' align='absmiddle'>&nbsp;\";\n\n            // set channel ownership info for display\n            if ($GLOBALS['pageName'] != 'affiliate-channels.php') {\n                if (!empty($channel['publisher_id'])) {\n                    $ownerTypeStr = 'Publisher: ';\n                    $publisher = Admin_DA::getPublisher($channel['publisher_id']);\n                    $ownerNameStr = '[id'.$channel['publisher_id'].'] '.$publisher['name'];\n                } else if (!empty($channel['agency_id']) && empty($channel['publisher_id'])\n                       && !OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                    $ownerTypeStr = 'Agency: ';\n                    $agency = Admin_DA::getAgency($channel['agency_id']);\n                    $ownerNameStr = '[id'.$channel['agency_id'].'] '.$agency['name'];\n                } else {\n                    $ownerTypeStr = '';\n                    $ownerNameStr = '';\n                }\n            }\n            $ownerStr = !empty($ownerTypeStr) ? '&nbsp&nbsp<i>'.$ownerTypeStr.'</i>'.htmlspecialchars($ownerNameStr) : '';\n\n            echo \"<a href='channel-edit.php?{$entityString}channelid={$channel['channel_id']}'>\".htmlspecialchars($channel['name'].$ownerStr).\"</a>\";\n            echo \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\";\n            echo \"</td>\";\n            echo \"<td height='25'>{$channel['channel_id']}</td>\";\n            echo \"<td>&nbsp;</td></tr>\";\n\n            // Description\n            echo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n            echo \"<td>&nbsp;</td>\";\n            echo \"<td height='25' colspan='3'>\".htmlspecialchars(stripslashes($channel['description'])).\"</td>\";\n            echo \"</tr>\";\n\n            echo \"<tr height='1'>\";\n            echo \"<td \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\"><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\";\n            echo \"<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\";\n            echo \"</tr>\";\n            echo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n\n            // Empty\n            echo \"<td>&nbsp;</td>\";\n\n            // Buttons\n            echo \"<td height='25' colspan='3'>\";\n\n            echo \"<img src='\" . OX::assetPath() . \"/images/icon-acl.gif' border='0' align='absmiddle' alt='{$GLOBALS['strIncludedBanners']}'>&nbsp;<a href='channel-acl.php?{$entityString}channelid={$channel['channel_id']}'>{$GLOBALS['strEditChannelLimitations']}</a>&nbsp;&nbsp;&nbsp;&nbsp;\";\n            echo \"<img src='\" . OX::assetPath() . \"/images/icon-recycle.gif' border='0' align='absmiddle' alt='{$GLOBALS['strDelete']}'>&nbsp;<a href='channel-delete.php?token=\" . urlencode(phpAds_SessionGetToken()) . \"&{$entityString}channelid={$channel['channel_id']}&returnurl=\".(empty($aParams['affiliateid']) ? 'channel-index.php' : 'affiliate-channels.php').\"'\".phpAds_DelConfirm($GLOBALS['strConfirmDeleteChannel']).\">{$GLOBALS['strDelete']}</a>&nbsp;&nbsp;&nbsp;&nbsp;\";\n\n            echo \"</td></tr>\";\n            $i++;\n        }\n        if (!empty($channels)) {\n            echo \"<tr height='1'><td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n        }\n    }\n    echo \"</table>\";\n}\n\n/**\n * Show a confirm message for zone delete\n *\n * @param int $zoneId Zone ID\n * @return string\n */\nfunction MAX_zoneDelConfirm($zoneId)\n{\n    $dalZones = OA_Dal::factoryDAL('zones');\n    return phpAds_DelConfirm(\n                ($dalZones->checkZoneLinkedToActiveCampaign($zoneId)) ?\n                    $GLOBALS['strConfirmDeleteZoneLinkActive'] . '\\n' . $GLOBALS['strConfirmDeleteZone']\n                    : $GLOBALS['strConfirmDeleteZone']\n           );\n}\n\nfunction OX_Display_ConversionWindowHTML($varName, $windowSeconds, &$tabindex, $enabled = true)\n{\n    $window = _secondsToWindowArray($windowSeconds);\n    echo \"\n        \" . (($enabled) ? \"<input id='{$varName}daytrk' class='flat' type='text' size='3' name='{$varName}day' value='{$window['days']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['days']) . \" {$GLOBALS['strDays']} &nbsp;&nbsp;\n        \" . (($enabled) ? \"<input id='{$varName}hourtrk' class='flat' type='text' size='3' name='{$varName}hour' value='{$window['hours']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['hours']) . \" {$GLOBALS['strHours']} &nbsp;&nbsp;\n        \" . (($enabled) ? \"<input id='{$varName}minutetrk' class='flat' type='text' size='3' name='{$varName}minute' value='{$window['minutes']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['minutes']) . \" {$GLOBALS['strMinutes']} &nbsp;&nbsp;\n        \" . (($enabled) ? \"<input id='{$varName}secondtrk' class='flat' type='text' size='3' name='{$varName}second' value='{$window['seconds']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['seconds']) . \" {$GLOBALS['strSeconds']} &nbsp;&nbsp;\n    \";\n}\n\n// Determine whether an advertiser has an active placement/ad running under it...\nfunction _isAdvertiserActive($aAdvertiserPlacementAd)\n{\n    $active = false;\n    if (isset($aAdvertiserPlacementAd['children'])) {\n        foreach($aAdvertiserPlacementAd['children'] as $aPlacementAd) {\n            if (_isPlacementActive($aPlacementAd)) {\n                $active = true;\n                break;\n            }\n        }\n    }\n    return $active;\n}\n\n// Determine whether a placement has an active ad running under it...\nfunction _isPlacementActive($aPlacementAd)\n{\n    $active = false;\n    if ($aPlacementAd['status'] == OA_ENTITY_STATUS_RUNNING) {\n        if (isset($aPlacementAd['children'])) {\n            foreach($aPlacementAd['children'] as $aAd) {\n                if ($aAd['status'] == OA_ENTITY_STATUS_RUNNING) {\n                    $active = true;\n                    break;\n                }\n            }\n        }\n    }\n    return $active;\n}\n\n// Determine whether a publisher is active...\nfunction _isPublisherActive($aPublisherZone)\n{\n    return true;  // for now, all publishers are active.\n}\n\n// Determine whether a zone is active...\nfunction _isZoneActive($aZone)\n{\n    return true;  // for now, all zones are active.\n}\n\nfunction _secondsToWindowArray($seconds)\n{\n    $return['days'] = floor($seconds / (60*60*24));\n    $seconds = $seconds % (60*60*24);\n    $return['hours'] = floor($seconds / (60*60));\n    $seconds = $seconds % (60*60);\n    $return['minutes'] = floor($seconds / (60));\n    $seconds = $seconds % (60);\n    $return['seconds'] = $seconds;\n    return $return;\n}\n\nfunction _windowValuesToseconds($days, $hours, $minutes, $seconds)\n{\n    $days =    ($days > 0)    ? $days    : 0;\n    $hours =   ($hours > 0)   ? $hours   : 0;\n    $minutes = ($minutes > 0) ? $minutes : 0;\n    $seconds = ($seconds > 0) ? $seconds : 0;\n    return $days * (24*60*60) + $hours * (60*60) + $minutes * (60) + $seconds;\n}\n\nfunction _multiSort($array, $arg1, $arg2){\n        $arr1 = array();\n        $arr2 = array();\n\n        foreach ($array as $key => $value){\n            $arr1[$key] = strtolower( $value[$arg1] );\n            $arr2[$key] = $value[$arg2];\n        }\n\n        array_multisort($arr1, $arr2, $array);\n        return $array;\n}\n\n/** Tools and Breadcrumbs **/\nfunction MAX_displayNavigationTracker($advertiserId, $trackerId, $aOtherAdvertisers)\n{\n    addTrackerPageTools($advertiserId, $trackerId, $aOtherAdvertisers);\n    $oHeaderModel = MAX_displayTrackerBreadcrumbs($advertiserId, $trackerId);\n    phpAds_PageHeader(null, $oHeaderModel);\n}\n\n\nfunction MAX_displayNavigationCampaign($campaignId, $aOtherAdvertisers, $aOtherCampaigns, $aEntities)\n{\n    $advertiserId = $aEntities['clientid'];\n\n\n    $doCampaign = OA_Dal::factoryDO('campaigns');\n    $doCampaign->campaignid = $campaignId;\n    $doCampaign->find();\n    $doCampaign->fetch();\n    $campaignName = $doCampaign->campaignname;\n\n    $advertiserName = MAX_buildName($advertiserId, $aOtherAdvertisers[$advertiserId]['name']);\n    $advertiserEditUrl = '';\n    if (OA_Permission::hasAccessToObject('clients', $advertiserId, OA_Permission::OPERATION_EDIT)) {\n        $advertiserEditUrl = \"advertiser-edit.php?clientid=$advertiserId\";\n    }\n\n    addCampaignPageTools($advertiserId, $campaignId, $aOtherAdvertisers, $aEntities);\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                          array(\"name\" => $advertiserName, \"url\" => $advertiserEditUrl),\n                                          array(\"name\" => $campaignName)),\n                                        \"campaign\", \"edit\");\n    phpAds_PageHeader(null, $oHeaderModel);\n}\n\n\nfunction MAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    $advertiserId = $aEntities['clientid'];\n    $campaignId = $aEntities['campaignid'];\n    $bannerId = $aEntities['bannerid'];\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['bannerid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n    if ($pageName == 'banner-edit.php' && empty($bannerId)) {\n                $tabValue = 'banner-edit_new';\n                $pageType = 'edit-new';\n    }\n    else {\n    \t$pageType = 'edit';\n    }\n\n    $advertiserEditUrl = '';\n    $campaignEditUrl = '';\n\n    if (OA_Permission::hasAccessToObject('clients', $advertiserId)) {\n        $advertiserEditUrl = \"advertiser-edit.php?clientid=$advertiserId\";\n    }\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        $campaignEditUrl = \"campaign-edit.php?clientid=$advertiserId&campaignid=$campaignId\";\n    }\n\n    // Build banner preview\n    if ($bannerId && !empty($GLOBALS['_MAX']['PREF']['ui_show_banner_preview']) && empty($_GET['nopreview'])) {\n        $bannerCode = MAX_bannerPreview($bannerId);\n    } else {\n        $bannerCode = '';\n    }\n\n    $advertiserDetails = phpAds_getClientDetails($advertiserId);\n    $advertiserName = $advertiserDetails['clientname'];\n    $campaignDetails = Admin_DA::getPlacement($campaignId);\n    $campaignName = $campaignDetails['name'];\n    $bannerName = $aOtherBanners[$bannerId]['name'];\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                      array(\"name\" => $advertiserName, \"url\" => $advertiserEditUrl),\n                                      array(\"name\" => $campaignName, \"url\" => $campaignEditUrl),\n                                      array(\"name\" => $bannerName)),\n                                    \"banner\", $pageType);\n\n    global $phpAds_breadcrumbs_extra;\n    $phpAds_breadcrumbs_extra .= \"<div class='bannercode'>$bannerCode</div>\";\n    if ($bannerCode != '') {\n        $phpAds_breadcrumbs_extra .= \"<br />\";\n    }\n\n    addBannerPageTools($advertiserId, $campaignId, $bannerId, $aOtherCampaigns, $aOtherBanners, $aEntities);\n    phpAds_PageHeader($tabValue, $oHeaderModel);\n}\n\nfunction MAX_bannerPreview($bannerId)\n{\n    require_once (MAX_PATH . '/lib/max/Delivery/adRender.php');\n    $aBanner = Admin_DA::getAd($bannerId);\n    $aBanner['storagetype'] = $aBanner['type'];\n    $aBanner['bannerid'] = $aBanner['ad_id'];\n    if ($aBanner['contenttype'] == 'swf') {\n        return\n            MAX_adRender($aBanner, 0, '', '', '', true, '', false, false) .\n            \"<br /><br />\" .\n            _adRenderImage($aBanner, 0, '', '', true, false, false, true);\n    } else {\n        return\n            MAX_adRender($aBanner, 0, '', '', '', true, '', false, false);\n    }\n}\n\nfunction MAX_displayNavigationZone($pageName, $aOtherPublishers, $aOtherZones, $aEntities)\n{\n\n    global $phpAds_TextDirection;\n\n    $websiteId = $aEntities['affiliateid'];\n    $zoneId = $aEntities['zoneid'];\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['zoneid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n    $aPublisher = $aOtherPublishers[$websiteId];\n    $publisherName = MAX_buildName($websiteId, $aPublisher['name']);\n    $zoneName = (empty($zoneId)) ? $GLOBALS['strUntitled'] : MAX_buildName($zoneId, $aOtherZones[$zoneId]['name']);\n\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        $tabSections = array('4.2.3.2', '4.2.3.6', '4.2.3.3', '4.2.3.4', '4.2.3.5');\n        // Determine which tab is highlighted\n        switch ($pageName) {\n            case 'zone-edit.php'       :\n                if (empty($zoneId)) {\n                    $tabValue = 'zone-edit_new';\n                } else {\n                    $tabValue = 'zone-edit';\n                }\n                break;\n            default: $tabSections = basename($pageName); break;\n        }\n    }\n    elseif (OA_Permission::isAccount(OA_ACCOUNT_TRAFFICKER)) {\n        $tabSections = array();\n        if (OA_Permission::hasPermission(OA_PERM_ZONE_EDIT)) { $tabSections[] = '2.1.1'; }\n        if (OA_Permission::hasPermission(OA_PERM_ZONE_LINK)) { $tabSections[] = '2.1.2'; }\n        $tabSections[] = '2.1.3';\n        if (OA_Permission::hasPermission(OA_PERM_ZONE_INVOCATION)) { $tabSections[] = '2.1.4'; }\n        switch($pageName) {\n            case 'zone-edit.php': {\n                $tabValue = 'zone-edit';\n                if (empty($zoneId)) {\n                     $tabValue = 'zone-edit_new';\n                }\n                break;\n            }\n            case 'zone-include.php': $tabValue = '2.1.2'; break;\n            case 'zone-probability.php': $tabValue = '2.1.3'; break;\n            case 'zone-invocation.php': $tabValue = '2.1.4'; break;\n        }\n    }\n    // Sort the zones by name...\n    require_once(MAX_PATH . '/lib/max/other/stats.php');\n\n    $publisherEditUrl = \"affiliate-edit.php?affiliateid=$websiteId\";\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADMIN, OA_ACCOUNT_MANAGER)) {\n        $publisherEditUrl = \"affiliate-zones.php?affiliateid=$websiteId\";\n    }\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                       array(\"name\" => $publisherName, \"url\" => $publisherEditUrl),\n                                       array(\"name\" => empty($zoneId) ? '' : $zoneName)\n                                   ), \"zone\", empty($zoneId));\n\n    if (!empty($zoneId)) {\n        addZonePageTools($websiteId, $zoneId, $aOtherPublishers, $aEntities);\n    }\n    phpAds_PageHeader($tabValue, $oHeaderModel);\n    phpAds_ShowSections($tabSections);\n}\n\nfunction MAX_displayNavigationChannel($pageName, $aOtherChannels, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    $agencyId = isset($aEntities['agencyid']) ? $aEntities['agencyid'] : null;\n    $websiteId = isset($aEntities['affiliateid']) ? $aEntities['affiliateid'] : null;\n    $channelId = $aEntities['channelid'];\n    $channelName = $aOtherChannels[$channelId]['name'];\n\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['channelid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n\n    if (!empty($websiteId)) {\n        $channelType = 'publisher';\n    }\n    else {\n        $channelType = 'agency';\n    }\n\n    // Determine which set of tabs to show...\n    if ($channelType == 'publisher') {\n        // Determine which tab is highlighted\n        switch ($pageName) {\n            case 'channel-edit.php' : $tabValue = (!empty($channelId)) ? 'channel-edit-affiliate' : 'channel-edit-affiliate_new'; break;\n            case 'channel-acl.php' : $tabValue = 'channel-affiliate-acl'; break;\n        }\n    } else {\n        // Determine which tab is highlighted\n        switch ($pageName) {\n            case 'channel-edit.php' : $tabValue = (!empty($channelId)) ? 'channel-edit' : 'channel-edit_new'; break;\n            case 'channel-acl.php' : $tabValue = 'channel-acl'; break;\n        }\n    }\n\n    // Sort the channels by name...\n    require_once(MAX_PATH . '/lib/max/other/stats.php');\n\n    $publisherEditUrl = \"affiliate-edit.php?affiliateid=$websiteId\";\n    if (!empty($channelId)) {\n        addChannelPageTools($agencyId, $websiteId, $channelId, $channelType);\n\n        // Determine which tab is highlighted\n        $publisher = Admin_DA::getPublisher($websiteId);\n        $publisherName = $publisher['name'];\n        if (!empty($channelId)) {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                array(\"name\" => $publisherName, url => $publisherEditUrl),\n                array(\"name\" => $channelName)), \"channel\", \"edit\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n        else {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                array(\"name\" => $publisherName, url => $publisherEditUrl),\n                array(\"name\" => $channelName)), \"channel\", \"edit-new\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n    }\n    else {\n        if (!empty($channelId)) {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                array(\"name\" => $channelName)), \"global-channel\", \"edit\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n        else {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                        array(\"name\" => \"\")), \"global-channel\", \"edit-new\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n    }\n}\n\n\nfunction addAdvertiserPageToolsAndShortcuts($advertiserId)\n{\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        addPageLinkTool($GLOBALS[\"strAddCampaign_Key\"], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-edit.php?clientid=\".$advertiserId), \"iconCampaignAdd\", $GLOBALS[\"keyAddNew\"] );\n    }\n    addPageShortcut($GLOBALS['strAdvertiserCampaigns'], MAX::constructUrl(MAX_URL_ADMIN, \"advertiser-campaigns.php?clientid=$advertiserId\"), \"iconCampaigns\");\n    addPageShortcut($GLOBALS['strClientHistory'], MAX::constructUrl(MAX_URL_ADMIN, 'stats.php?entity=advertiser&breakdown=history&clientid='.$advertiserId), 'iconStatistics');\n}\n\n\nfunction addTrackerPageTools($advertiserId, $trackerId, $aOtherAdvertisers)\n{\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        //duplicate\n        addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"tracker-modify.php?clientid=\".$advertiserId.\"&trackerid=\".$trackerId.\"&duplicate=true&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconTrackerDuplicate\");\n\n        //move to\n        $form  = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'tracker-modify.php') . \"'>\n            <input type='hidden' name='trackerid' value='$trackerId'\n            <input type='hidden' name='clientid' value='$advertiserId'\n            <input type='hidden' name='returnurl' value='tracker-edit.php'>\n            <select name='moveto'>\";\n        foreach ($aOtherAdvertisers as $advertiser) {\n            $form .= \"<option value='\".$advertiser['clientid'].\"'>\".htmlspecialchars(MAX_buildName($advertiser['clientid'], $advertiser['clientname'])).\"</option>\";\n        }\n        $form .= \"</select><input type='image' class='submit' src='\" . OX::assetPath() . \"/images/\".$GLOBALS['phpAds_TextDirection'].\"/go_blue.gif'></form>\";\n        addPageFormTool($GLOBALS['strMoveTo'], 'iconTrackerMove', $form);\n\n        //delete\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteTracker']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"tracker-delete.php?token=\" . urlencode(phpAds_SessionGetToken()) . \"&clientid=\".$advertiserId.\"&trackerid=\".$trackerId.\"&returnurl=advertiser-trackers.php\"), \"iconDelete\", null, $deleteConfirm);\n        addPageShortcut($GLOBALS['strBackToTrackers'], MAX::constructUrl(MAX_URL_ADMIN, \"advertiser-trackers.php?clientid=$advertiserId\"), \"iconBack\");\n    }\n}\n\n\nfunction addCampaignPageTools($clientid, $campaignid, $aOtherAdvertisers, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-modify.php?duplicate=1&clientid=$clientid&campaignid=$campaignid&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconCampaignDuplicate\");\n\n        if (OA_Permission::hasAccessToObject('campaigns', $campaignid, OA_Permission::OPERATION_MOVE)) {\n            $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'campaign-modify.php') . \"'>\n            <input type='hidden' name='clientid' value='$clientid'>\n            <input type='hidden' name='campaignid' value='$campaignid'>\n            <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'])).\"'>\n            <select name='newclientid'>\";\n                $aOtherAdvertisers = _multiSort($aOtherAdvertisers,'name','advertiser_id');\n                foreach ($aOtherAdvertisers as $aOtherAdvertiser) {\n                    $otherAdvertiserId = $aOtherAdvertiser['advertiser_id'];\n                    $otherAdvertiserName = MAX_buildName($otherAdvertiserId, $aOtherAdvertiser['name']);\n\n                    if ($otherAdvertiserId != $advertiserId) {\n                        $form .= \"<option value='$otherAdvertiserId'>\" . htmlspecialchars($otherAdvertiserName) . \"</option>\";\n                    }\n                }\n            $form .= \"</select><input type='image' class='submit' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif'></form>\";\n\n            addPageFormTool($GLOBALS['strMoveTo'], 'iconCampaignMove', $form);\n        }\n\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteCampaign']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-delete.php?token=\" . urlencode(phpAds_SessionGetToken()) . \"&clientid=$clientid&campaignid=$campaignid&returnurl=advertiser-campaigns.php\"), \"iconDelete\", null, $deleteConfirm);\n    }\n\n    //shortcuts\n    if (!empty($campaignid) && !OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        if (OA_Permission::hasAccessToObject('campaigns', $campaignid, OA_Permission::OPERATION_ADD_CHILD)) {\n            addPageLinkTool($GLOBALS[\"strAddBanner_Key\"], MAX::constructUrl(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid\"), \"iconBannerAdd\", $GLOBALS[\"strAddNew\"] );\n        }\n        addPageShortcut($GLOBALS['strBackToCampaigns'], MAX::constructUrl(MAX_URL_ADMIN, \"advertiser-campaigns.php?clientid=$clientid\"), \"iconBack\");\n    }\n    if (!empty($campaignid)) {\n        if (OA_Permission::hasAccessToObject('campaigns', $campaignid, OA_Permission::OPERATION_VIEW_CHILDREN)) {\n            addPageShortcut($GLOBALS['strCampaignBanners'], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-banners.php?clientid=$clientid&campaignid=$campaignid\"), \"iconBanners\");\n        }\n        $entityString = _getEntityString($aEntities);\n        addPageShortcut($GLOBALS['strCampaignHistory'], MAX::constructUrl(MAX_URL_ADMIN, \"stats.php?entity=campaign&breakdown=history&$entityString\"), 'iconStatistics');\n    }\n}\n\nfunction addBannerPageTools($advertiserId, $campaignId, $bannerId, $aOtherCampaigns, $aOtherBanners, $aEntities)\n{\n    if (empty($bannerId)) {\n        return;\n    }\n\n    global $phpAds_TextDirection;\n    //duplicate\n    addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"banner-modify.php?duplicate=true&clientid=$advertiserId&campaignid=$campaignId&bannerid=$bannerId&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconBannerDuplicate\");\n\n    //move to\n    $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'banner-modify.php') . \"'>\n    <input type='hidden' name='clientid' value='$advertiserId'>\n    <input type='hidden' name='campaignid' value='$campaignId'>\n    <input type='hidden' name='bannerid' value='$bannerId'>\n    <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'])).\"'>\n    <select name='moveto'>\";\n    $aOtherCampaigns = _multiSort($aOtherCampaigns,'name','placement_id');\n    foreach ($aOtherCampaigns as $otherCampaignId => $aOtherCampaign) {\n        // mask campaign name if anonymous campaign\n        $aOtherCampaign['name'] = MAX_getPlacementName($aOtherCampaign);\n        $otherCampaignName = MAX_buildName($aOtherCampaign['placement_id'], $aOtherCampaign['name']);\n\n        if ($aOtherCampaign['placement_id'] != $campaignId) {\n            $form .= \"<option value='\" . $aOtherCampaign['placement_id'] . \"'>\" . htmlspecialchars($otherCampaignName) . \"</option>\";\n        }\n        else {\n            $campaignName = $otherCampaignName;\n        }\n    }\n    $form .= \"</select><input name='moveto' class='submit' type='image' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif'></form>\";\n    addPageFormTool($GLOBALS['strMoveTo'], 'iconBannerMove', $form);\n\n    //apply to\n    if (basename($_SERVER['SCRIPT_NAME']) == 'banner-acl.php') {\n        $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'banner-modify.php') . \"'>\n        <input type='hidden' name='clientid' value='$advertiserId'>\n        <input type='hidden' name='campaignid' value='$campaignId'>\n        <input type='hidden' name='bannerid' value='$bannerId'>\n        <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'])).\"'>\n        <select name='applyto'>\";\n\n        $aOtherBanners = _multiSort($aOtherBanners,'name','ad_id');\n        foreach ($aOtherBanners as $idx => $aOtherBanner) {\n            if ($aOtherBanner['ad_id'] != $bannerId) {\n                $form .= \"<option value='{$aOtherBanner['ad_id']}'>\" . MAX_buildName($aOtherBanner['ad_id'], $aOtherBanner['name']) . \"</option>\";\n            }\n        }\n        $form .= \"</select><input type='image' class='submit' name='applyto' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif'></form>\";\n\n        addPageFormTool($GLOBALS['strApplyLimitationsTo'], 'iconBannerApplyLimitations', $form);\n    }\n\n    //delete\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteBanner']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"banner-delete.php?token=\" . urlencode(phpAds_SessionGetToken()) . \"&clientid=$advertiserId&campaignid=$campaignId&bannerid=$bannerId&returnurl=campaign-banners.php\"), \"iconDelete\", null, $deleteConfirm);\n    }\n\n    /* Shortcuts */\n    addPageShortcut($GLOBALS['strBackToBanners'], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-banners.php?clientid=$advertiserId&campaignid=$campaignId\"), \"iconBack\");\n    $entityString = _getEntityString($aEntities);\n    addPageShortcut($GLOBALS['strBannerHistory'], MAX::constructUrl(MAX_URL_ADMIN, \"stats.php?entity=banner&breakdown=history&$entityString\"), 'iconStatistics');\n}\n\n\nfunction addWebsitePageTools($websiteId)\n{\n    if (!empty($websiteId) && (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n        || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)\n        || OA_Permission::hasPermission(OA_PERM_ZONE_ADD))) {\n        addPageLinkTool($GLOBALS[\"strAddNewZone_Key\"], MAX::constructUrl(MAX_URL_ADMIN, \"zone-edit.php?affiliateid=$websiteId\"), \"iconZoneAdd\", $GLOBALS[\"keyAddNew\"] );\n        addPageShortcut($GLOBALS['strWebsiteZones'], MAX::constructUrl(MAX_URL_ADMIN, \"affiliate-zones.php?affiliateid=$websiteId\"), \"iconZones\");\n    }\n    addPageShortcut($GLOBALS['strAffiliateHistory'], MAX::constructUrl(MAX_URL_ADMIN, 'stats.php?entity=affiliate&breakdown=history&affiliateid='.$websiteId), 'iconStatistics');\n}\n\n\nfunction addZonePageTools($affiliateid, $zoneid, $aOtherPublishers, $aEntities)\n{\n    global $phpAds_TextDirection;\n    //duplicate\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n        || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)\n        || OA_Permission::hasPermission(OA_PERM_ZONE_ADD)) {\n        addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"zone-modify.php?duplicate=true&affiliateid=$affiliateid&zoneid=$zoneid&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconZoneDuplicate\");\n    }\n\n    //move to\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n        || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'zone-modify.php') . \"'>\n        <input type='hidden' name='affiliateid' value='$affiliateid'>\n        <input type='hidden' name='zoneid' value='$zoneid'>\n        <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'])).\"'>\n        <select name='newaffiliateid'>\";\n        $aOtherPublishers = _multiSort($aOtherPublishers,'name','publisher_id');\n        foreach ($aOtherPublishers as $otherPublisherId => $aOtherPublisher) {\n            $otherPublisherName = MAX_buildName($aOtherPublisher['publisher_id'], $aOtherPublisher['name']);\n            if ($aOtherPublisher['publisher_id'] != $affiliateid) {\n                $form .= \"<option value='\" . $aOtherPublisher['publisher_id'] . \"'>\" . htmlspecialchars($otherPublisherName) . \"</option>\";\n            }\n        }\n        $form .= \"</select><input type='image' class='submit' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif'></form>\";\n\n        addPageFormTool($GLOBALS['strMoveTo'], 'iconZoneMove', $form);\n    }\n\n    //delete\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n       || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)\n       || OA_Permission::hasPermission(OA_PERM_ZONE_DELETE)) {\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteZone']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"zone-delete.php?token=\" . urlencode(phpAds_SessionGetToken()) . \"&affiliateid=$affiliateid&zoneid=$zoneid&returnurl=affiliate-zones.php\"), \"iconDelete\", null, $deleteConfirm);\n    }\n\n    //shortcut\n    addPageShortcut($GLOBALS['strBackToZones'], MAX::constructUrl(MAX_URL_ADMIN, \"affiliate-zones.php?affiliateid=$affiliateid\"), \"iconBack\");\n    $entityString = _getEntityString($aEntities);\n    addPageShortcut($GLOBALS['strZoneHistory'], MAX::constructUrl(MAX_URL_ADMIN, \"stats.php?entity=zone&breakdown=history&$entityString\"), 'iconStatistics');\n}\n\nfunction addChannelPageTools($agencyid, $websiteId, $channelid, $channelType)\n{\n    if ($channelType == 'publisher') {\n        $deleteReturlUrl = MAX::constructUrl(MAX_URL_ADMIN, 'affiliate-channels.php');\n    }\n    else {\n        $deleteReturlUrl = MAX::constructUrl(MAX_URL_ADMIN, 'channel-index.php');\n    }\n\n    //duplicate\n    addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"channel-modify.php?duplicate=true&agencyid=$agencyid&affiliateid=$websiteId&channelid=$channelid&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconTargetingChannelDuplicate\");\n\n    //delete\n    $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteChannel']);\n    addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"channel-delete.php?token=\" . urlencode(phpAds_SessionGetToken()) . \"&agencyid=$agencyid&affiliateid=$websiteId&channelid=$channelid&returnurl=$deleteReturlUrl\"), \"iconDelete\", null, $deleteConfirm);\n}\n\n\n/**\n * Builds Pear pager object, preconfigured with items per page. Pager links are\n * processed to make them more readable. Also items name in summary can be added.\n *\n * @param unknown_type $items\n * @param unknown_type $itemsPerPage\n * @param unknown_type $withNumbers\n * @param unknown_type $itemsName\n * @return unknown\n */\nfunction OX_buildPager($items, $itemsPerPage, $withNumbers = true, $itemsName = '', $delta = 4,\n    $currentPage = null, $fileName = null, $params = null)\n{\n    require_once MAX_PATH . '/lib/pear/Pager/Pager.php';\n\n    $oTrans = new OX_Translation();\n\n    /** prepare paging **/\n    $count = count($items);\n        $delta = $withNumbers ? $delta : 0;\n\n\n    $pagerOptions = array(\n        'mode'       => 'Sliding',\n        'perPage'    => $itemsPerPage,\n        'delta'      => $delta,\n        'totalItems' => $count,\n        'prevImg'       => '&lt; ' . $oTrans->translate('Back'),\n        'nextImg'       => $oTrans->translate('Next') . ' &gt;',\n        'urlVar' => 'p',\n        'linkClass' => 'page',\n        'curPageLinkClassName' => 'current',\n        'spacesBeforeSeparator' => 0,\n        'httpMethod' => 'GET',\n        'spacesAfterSeparator' => 0\n    );\n    if (!empty($fileName)) {\n        $pagerOptions['fileName'] = $fileName;\n        $pagerOptions['fixFileName'] = false;\n    }\n    if (!empty($params)) {\n        $pagerOptions['extraVars'] = $params;\n    }\n    if (!empty($currentPage)) {\n        $pagerOptions['currentPage'] = $currentPage;\n    }\n\n    $pager = Pager::factory($pagerOptions);\n    list($from, $to) = $pager->getOffsetByPageId();\n    $summary = \"<em>$from</em>-<em>$to</em> of <em>\".$pager->numItems().\" $itemsName</em>\";\n    $pager->summary = $summary;\n\n    //override links with shorter pager controls\n    if (!$withNumbers) {\n        $links = $pager->links;\n        $shortLinks = preg_replace(\"/<span class=\\\"current\\\">\\d+<\\/span>/i\", \"<span class='summary'>$summary</span>\" , $links);\n        $shortLinks = preg_replace(\"/\\[\\d+\\]/\", \"\" , $shortLinks);\n        $pager->links = $shortLinks;\n    }\n\n    return $pager;\n}\n\n\n\n?>\n", "{*<!--\n\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n\n-->*}\n{view_before_content}\n\n<form id=\"zoneLinkingForm\">\n<div id=\"campaign-zone\" class=\"new-form\">\n  <input id=\"advertiser-id\" type=\"hidden\" value=\"{$advertiserId}\" />\n  <input id=\"campaign-id\" type=\"hidden\" value=\"{$campaignId}\" />\n\n  <div id=\"filters\">\n    <div id=\"filters-available\">\n      <h3 class=\"filter-panel-title\">{t str=AvailableZones}</h3>\n      <div class=\"filter-panel\">\n\t      <div class=\"bg-left\"></div>\n\t      <div class=\"bg-right\"></div>\n\n\t      <div class=\"filter-content\">\n          <div id=\"status-available\">&nbsp;</div>\n\t        {include file=campaign-zone-panel-filters.html\n\t                 panelId=available categories=$aCategories}\n\t      </div>\n\t      &nbsp;\n\t    </div>\n    </div>\n\n    <div id=\"filters-linked\">\n      <h3 class=\"filter-panel-title\">{t str=LinkedZones}</h3>\n      <div class=\"filter-panel\">\n        <div class=\"bg-left\"></div>\n        <div class=\"bg-right\"></div>\n\n        <div class=\"filter-content\">\n          <div id=\"status-linked\">&nbsp;</div>\n\t        {include file=campaign-zone-panel-filters.html\n\t                 panelId=linked categories=$aCategories}\n\t      </div>\n\t    </div>\n    </div>\n  </div>\n\n  &nbsp;\n\n  <div id=\"select-zones\">\n    <div id=\"available\">\n      <div class=\"zones-container new-table-container\">\n        <div id=\"zones-available-loading\" class=\"ajax-loading panel-loading hide\"></div>\n        <div id=\"zones-available-container\">\n          <table id=\"zones-available\" class=\"zones new-table\">\n            <tbody>\n              <tr class=\"header hide\">\n                <th class=\"name\"><label><input type=\"checkbox\" id=\"available-select-all\" class=\"checkbox select-all\" /> {t str=SelectUnselectAll}</label></th>\n                <th class=\"link\"></th>\n                <th class=\"ctr\">{t str=FinanceCTR}</th>\n                <th class=\"cr\">{t str=FinanceCR}</th>\n                <th class=\"ecpm last\">{t str=FinanceCPM}</th>\n              </tr>\n            </tbody>\n\n            <tbody id=\"zones-available-rows\">\n              <tr class=\"hide\"><td></td></tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"linked\">\n      <div class=\"zones-container new-table-container\">\n        <div id=\"zones-linked-loading\" class=\"ajax-loading panel-loading hide\"></div>\n        <div id=\"zones-linked-container\">\n          <table id=\"zones-linked\" class=\"zones new-table\">\n            <tbody>\n              <tr class=\"header hide\">\n                <th class=\"name\"><label><input type=\"checkbox\" id=\"linked-select-all\" class=\"checkbox select-all\" /> {t str=SelectUnselectAll}</label></th>\n                <th class=\"link\"></th>\n                <th class=\"ctr\">{t str=FinanceCTR}</th>\n                <th class=\"cr\">{t str=FinanceCR}</th>\n                <th class=\"ecpm last\">{t str=FinanceCPM}</th>\n              </tr>\n            </tbody>\n\n            <tbody id=\"zones-linked-rows\">\n              <tr class=\"hide\"><td></td></tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"linking-buttons\">\n      <button accesskey=\"l\" id=\"link-button\" class=\"flat button\" type=\"button\" ><u>L</u>ink <span class=\"arrow-right\"></span></button><br />\n      <button accesskey=\"u\" id=\"unlink-button\" class=\"flat button\" type=\"button\"><span class=\"arrow-left\"></span> <u>U</u>nlink</button>\n\n      <div style=\"margin-top: 2ex; text-align: center\">\n        <span id=\"linking-indicator\" class=\"ajax-loading-big hide\"></span>\n        <span id=\"linking-status\"></span>\n        <span id=\"error-indicator\" class=\"ajax-error hide\">{t str=LinkingNotSuccess}</span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"accurate-info\"><div class=\"accurate-box\"></div>{t str=CalculatedForThisCampaign}</div>\n  <div class=\"estim-info\"><div class=\"estim-box\"></div>{t str=CalculatedForAllCampaigns}</div>\n\n\t<script type=\"text/javascript\"><!--\n{literal}\n  $(document).ready(function() {\n    // Multicheckbox selections, selection by row clicks\n    $(\"#zones-available-container, #zones-linked-container\").multicheckboxes({\n      toSelectClass: \"to-link\",\n      toUselectClass: \"\",\n      selectAllSelector: \".select-all\",\n      updateElement: \"tr\"\n    });\n\n    addMultiselectListeners(\"available\");\n    addMultiselectListeners(\"linked\");\n\n    $(\"#zones-linked-container, #zones-available-container\").bind(\"filter\", function() {\n      var panel = this.id.substring(\"zones-\".length).replace(/-container/, '');\n      var $quickSearch = $(\"#quick-search-\" + panel);\n      var postData = {\n        \"clientid\": $(\"#advertiser-id\").val(),\n        \"campaignid\": $(\"#campaign-id\").val(),\n        \"status\": panel,\n        \"text\": $quickSearch.is(\".example-search\") ? \"\" : $quickSearch.val()\n      };\n\n      sendZonesRequest(panel, \"campaign-zone-zones.php\", postData);\n    });\n\n    // Link/Unlink buttons\n    $(\"#link-button\").bind(\"click\", [ \"link\" ], sendLinkingRequest);\n    $(\"#unlink-button\").bind(\"click\", [ \"unlink\" ], sendLinkingRequest);\n\n    // Quick search fields\n    $(\"#quick-search-available, #quick-search-linked\")\n      .example(\"zone name, website name\", { class_name: 'example-search'})\n      .typeWatch({\n        callback: function() {\n          var panelId = this.el.id.substring(\"quick-search-\".length);\n          $(\"#zones-\" + panelId + '-container').trigger(\"filter\");\n        },\n        wait: 500,\n        captureLength: 1\n      });\n\n    $(\"#zones-available-container, #zones-linked-container\").trigger(\"filter\").trigger(\"multichange\");\n  });\n\n  function sendZonesRequest(panel, url, params) {\n    $.ajax({\n      url: url,\n      type: \"GET\",\n      data: params,\n      cache: false,\n      complete: function() {\n        $(\"#zones-\" + panel + \"-loading\").hide();\n      },\n      success: function(data) {\n        if (!checkReload(data)) {\n          updatePanel(data, panel);\n        }\n      },\n      error: function() {\n        $(\"#error-indicator\").show();\n      }\n    });\n    $(\"#error-indicator\").hide();\n    $(\"#zones-\" + panel + \"-loading\").show();\n  }\n\n  // Performs linking/unlinking and refreshes panels on completion\n  function sendLinkingRequest(event) {\n    var action = event.data[0];\n\n    $(\"#link-button, #unlink-button\").attr(\"disabled\", true);\n\n    var $checkboxContainer;\n    if (action == \"link\") {\n      $checkboxContainer = $(\"#zones-available\");\n    } else {\n      $checkboxContainer = $(\"#zones-linked\");\n    }\n\n    var checkedNames = $.map($checkboxContainer.find(\":checked\").not(\".select-all\"), function(val) {\n      return val.name;\n    });\n\n    // Data from all filters\n    var quickSearchLinked = $(\"#quick-search-linked\").is(\".example-search\") ? \"\" : $(\"#quick-search-linked\").val();\n    var quickSearchAvailable = $(\"#quick-search-available\").is(\".example-search\") ? \"\" : $(\"#quick-search-available\").val();\n    if (action == \"link\") {\n        if (quickSearchLinked  != \"\" && quickSearchLinked != quickSearchAvailable) {\n           quickSearchLinked = \"\";\n           $(\"#quick-search-linked\").val(\"\");\n        }\n    }\n    else {\n      if (quickSearchAvailable  != \"\" && quickSearchLinked != quickSearchAvailable) {\n         quickSearchAvailable = \"\";\n         $(\"#quick-search-available\").val(\"\");\n      }\n    }\n\n    var postData = {\n      \"clientid\": $(\"#advertiser-id\").val(),\n      \"campaignid\": $(\"#campaign-id\").val(),\n      \"text-linked\": quickSearchLinked,\n      \"text-available\": quickSearchAvailable,\n      \"action\": action,\n      \"ids[]\": checkedNames,\n      \"allSelected\": $checkboxContainer.data(\"allSelected\"),\n      \"page-linked\": $(\"#page-linked\").text(),\n      \"page-available\": $(\"#page-available\").text()\n    };\n\n    $.ajax({\n      url: \"campaign-zone-link.php\",\n      type: \"POST\",\n      data: postData,\n      cache: false,\n      complete: function() {\n        $(\".select-all\").attr(\"checked\", false);\n        $(\"#linking-indicator\").hide();\n      },\n      success: function(data) {\n        if (!checkReload(data)) {\n          updatePanel(data, \"available\");\n          updatePanel(data, \"linked\");\n\n\t        $(\"#linking-status\").html(extractPart(data, \"info\", \"result\")).stop().show().css(\"opacity\", \"1\");\n\t        if (window.linkingTimout) {\n\t          window.linkingTimout.clearTimeout();\n\t        }\n\t        window.linkingTimeout = window.setTimeout(function() {\n\t          $(\"#zones-available\").find(\"tr.just-linked\").removeClass(\"just-linked\", $(\"#zones-available-rows tr\").size() <= 100 ? 5000 : 0);\n\t          $(\"#zones-linked\").find(\"tr.just-linked\").removeClass(\"just-linked\",  $(\"#zones-linked-rows tr\").size() <= 100 ? 5000 : 0);\n\t          $(\"#linking-status\").fadeOut(5000);\n\t        }, 2000);\n\t      }\n\n{/literal}{if $runMPE}\n\t      // Run MPE\n\t      $.get('run-mpe.php');\n{/if}{literal}\n\n      },\n      error: function() {\n        $(\"#error-indicator\").show();\n      }\n    });\n\n    $(\"#error-indicator\").hide();\n    $(\"#linking-indicator\").show();\n    $(\"#linking-status\").hide();\n  }\n\n  function updatePanel(data, panel) {\n    var panelRows = extractPart(data, panel, \"rows\");\n    $(\"#zones-\" + panel + \"-container\").get(0).innerHTML = panelRows;\n    $(\"#zones-\" + panel + \" tr.header\").visible(!$(\"#zones-\" + panel + \"-rows tr:eq(0)\").is(\".empty\"));\n    var panelStatus = extractPart(data, panel, \"status\");\n    $(\"#status-\" + panel).html(panelStatus);\n    $(\"#zones-\" + panel + \"-container\").trigger('dataUpdate');\n    $(\"#zones-\" + panel + \"-container a.page\").click(function() {\n      sendZonesRequest(panel, this.href, {})\n      return false;\n    });\n\n    if ($(\"#page-\" + panel).size() > 0) {\n      $(\"#zones-\" + panel + \"-loading\").addClass(\"has-paging\");\n    } else {\n      $(\"#zones-\" + panel + \"-loading\").removeClass(\"has-paging\");\n    }\n    addSelectAllListeners(panel);\n  }\n\n  function addMultiselectListeners(panel) {\n    $(\"#zones-\" + panel + \"-container\").bind(\"multichange\", function() {\n      var $selectAll = $(\"#zones-\" + panel + \" .select-all\");\n      var selectAllChecked = $selectAll.size() > 0 && $selectAll.is(\":checked\");\n      $(\"#zones-\" + panel + \"-select-all, #select-all-container-\" + panel).setElementVisible(selectAllChecked);\n      if (!selectAllChecked) {\n        cancelAllZonesSelection(panel);\n      }\n\n      $(\"#\" + (panel == \"available\" ? \"link\" : \"unlink\") + \"-button\")\n        .attr(\"disabled\", $(\"#zones-\" + panel + \" :checked\").not(\".select-all\").size() == 0);\n    });\n  }\n\n  function addSelectAllListeners(panel) {\n    $(\"#zones-\" + panel + \"-select-all a\").click(function() {\n      $(\"#zones-\" + panel + \"-select-all\").hide();\n      $(\"#zones-\" + panel + \"-all-selected\").show();\n      $(\"#zones-\" + panel).data(\"allSelected\", true);\n      return false;\n    });\n    $(\"#zones-\" + panel + \"-all-selected a\").click(function() {\n      cancelAllZonesSelection(panel);\n      $(\"#zones-\" + panel + \" :checkbox\").attr(\"checked\", false);\n      $(\"#zones-\" + panel + \"-rows tr\").removeClass(\"to-link\");\n      return false;\n    });\n  }\n\n  function cancelAllZonesSelection(panel) {\n    $(\"#select-all-container-\" + panel).hide();\n    $(\"#zones-\" + panel + \"-select-all\").hide();\n    $(\"#zones-\" + panel + \"-all-selected\").hide();\n    $(\"#zones-\" + panel).data(\"allSelected\", false);\n  }\n\n  function checkReload(data) {\n    if (data.indexOf(\"<!-- install -->\") >= 0 || data.indexOf(\"<!-- login -->\") >= 0) {\n      document.location.reload();\n      return true;\n    }\n    return false;\n  }\n\n  function extractPart(data, status, part) {\n    var startMarker = \"<!--\" + part + \"-\" + status + \"-start-->\";\n    var endMarker = \"<!--\" + part + \"-\" + status + \"-end-->\";\n    return data.substring(data.indexOf(startMarker) + startMarker.length, data.indexOf(endMarker));\n  }\n{/literal}\n  //--></script>\n\n</div>\n</form>\n{view_after_content}", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Register input variables\n\n//phpAds_registerGlobal ('returnurl', 'duplicate', 'moveto_x', 'moveto', 'applyto_x', 'applyto');\nphpAds_registerGlobal('bannerid', 'campaignid', 'clientid', 'returnurl', 'duplicate', 'moveto', 'moveto_x', 'applyto', 'applyto_x');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n\nOA_Permission::checkSessionToken();\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($bannerid)) {\n    OA_Permission::enforceAccessToObject('banners', $bannerid);\n\n    if (!empty($moveto) && isset($moveto_x)) {\n        if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n            OA_Permission::enforceAccessToObject('campaigns', $moveto);\n        }\n\n        // Move the banner\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $doBanners->campaignid = $moveto;\n        $doBanners->update();\n\n        // Increase the memory for running the maintenance\n        OX_increaseMemoryLimit(OX_getMinimumRequiredMemory('maintenance'));\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        // Get new clientid\n        $clientid = phpAds_getCampaignParentClientID($moveto);\n\n        //confirmation message\n        $bannerName = $doBanners->description;\n        $doCampaigns = OA_Dal::factoryDO('campaigns');\n        if ($doCampaigns->get($moveto)) {\n           $campaignName = $doCampaigns->campaignname;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenMoved'],\n            array(htmlspecialchars($bannerName), htmlspecialchars($campaignName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$moveto}&bannerid={$bannerid}\");\n\n    } elseif (!empty($applyto) && isset($applyto_x)) {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $bannerName = $doBanners->description;\n\n        if ($applyto == -1) {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('campaigns', $campaignid);\n            }\n            $appliedTo = 0;\n            $doBanners = OA_Dal::factoryDO('banners');\n            $doBanners->campaignid = $campaignid;\n            $doBanners->find();\n            while ($doBanners->fetch()) {\n                if (($doBanners->bannerid != $bannerid) && (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $doBanners->bannerid))) {\n                    $appliedTo++;\n                }\n            }\n            $applyto = $bannerid;\n        } else {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('banners', $applyto);\n            }\n            if (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $applyto)) {\n                $appliedTo++;\n            }\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerAclHasBeenAppliedTo'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($bannerName),\n                $appliedTo\n            )\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$applyto);\n    } elseif (isset($duplicate) && $duplicate == 'true') {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $oldName = $doBanners->description;\n        $new_bannerid = $doBanners->duplicate();\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        //confirmation message\n        $newName = $doBanners->description;\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$new_bannerid\"),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$new_bannerid);\n    }\n    else {\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$bannerid);\n    }\n}\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\ninclude_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\nrequire_once MAX_PATH . '/lib/max/other/common.php';\n\n// Register input variables\nphpAds_registerGlobal ('campaignid', 'clientid', 'newclientid', 'returnurl', 'duplicate');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n\nif(!empty($duplicate)) {\n    OA_Permission::enforceAccessToObject('clients',   $clientid, false, OA_Permission::OPERATION_VIEW);\n    OA_Permission::enforceAccessToObject('campaigns', $campaignid, false, OA_Permission::OPERATION_DUPLICATE);\n}\nelse if (!empty($newclientid)) {\n    OA_Permission::enforceAccessToObject('clients',   $clientid, false, OA_Permission::OPERATION_VIEW);\n    OA_Permission::enforceAccessToObject('campaigns', $campaignid, false, OA_Permission::OPERATION_MOVE);\n    OA_Permission::enforceAccessToObject('clients', $newclientid, false, OA_Permission::OPERATION_EDIT);\n}\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($campaignid)) {\n    if (!empty($duplicate)) {\n    \t// Duplicate the campaign\n    \t$doCampaigns = OA_Dal::factoryDO('campaigns');\n    \t$doCampaigns->get($campaignid);\n        $oldName = $doCampaigns->campaignname;\n    \t$newCampaignId = $doCampaigns->duplicate();\n\n        if ($newCampaignId) {\n            // Queue confirmation message\n            $newName = $doCampaigns->campaignname;\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strCampaignHasBeenDuplicated'],\n                array(MAX::constructURL(MAX_URL_ADMIN, \"campaign-edit.php?clientid=$clientid&campaignid=$campaignid\"),\n                    htmlspecialchars($oldName),\n                    MAX::constructURL(MAX_URL_ADMIN, \"campaign-edit.php?clientid=$clientid&campaignid=$newCampaignId\"),\n                    htmlspecialchars($newName))\n            );\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n            Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$newCampaignId}\");\n            exit;\n        }\n        else {\n            phpAds_sqlDie();\n        }\n\n    }\n    else if (!empty($newclientid)) {\n\n        /*-------------------------------------------------------*/\n        /* Restore cache of $node_array, if it exists            */\n        /*-------------------------------------------------------*/\n\n        if (isset($session['prefs']['advertiser-index.php']['nodes'])) {\n            $node_array = $session['prefs']['advertiser-index.php']['nodes'];\n        }\n\n        /*-------------------------------------------------------*/\n\n        // Delete any campaign-tracker links\n        $doCampaign_trackers = OA_Dal::factoryDO('campaigns_trackers');\n        $doCampaign_trackers->campaignid = $campaignid;\n        $doCampaign_trackers->delete();\n\n        // Move the campaign\n        $doCampaigns = OA_Dal::factoryDO('campaigns');\n        $doCampaigns->get($campaignid);\n        $doCampaigns->clientid = $newclientid;\n        $doCampaigns->update();\n\n        // Find and delete the campains from $node_array, if\n        // necessary. (Later, it would be better to have\n        // links to this file pass in the clientid as well,\n        // to facilitate the process below.\n        if (isset($node_array['clients'])) {\n            foreach ($node_array['clients'] as $key => $val) {\n                if (isset($node_array['clients'][$key]['campaigns'])) {\n                    unset($node_array['clients'][$key]['campaigns'][$campaignid]);\n                }\n            }\n        }\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        /*-------------------------------------------------------*/\n        /* Save the $node_array, if necessary                    */\n        /*-------------------------------------------------------*/\n\n        if (isset($node_array)) {\n            $session['prefs']['advertiser-index.php']['nodes'] = $node_array;\n            phpAds_SessionDataStore();\n        }\n\n        /*-------------------------------------------------------*/\n\n        // Queue confirmation message\n        $campaignName = $doCampaigns->campaignname;\n        $doClients = OA_Dal::factoryDO('clients');\n        if ($doClients->get($newclientid)) {\n            $advertiserName = $doClients->clientname;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strCampaignHasBeenMoved'],\n            array(htmlspecialchars($campaignName), htmlspecialchars($advertiserName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n    }\n}\n\nHeader (\"Location: \".$returnurl.\"?clientid=\".(isset($newclientid) ? $newclientid : $clientid).\"&campaignid=\".$campaignid);\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Send header with charset info\nheader (\"Content-Type: text/html\".(isset($phpAds_CharSet) && $phpAds_CharSet != \"\" ? \"; charset=\".$phpAds_CharSet : \"\"));\n\nrequire_once MAX_PATH . '/lib/OA/Admin/Template.php';\nrequire_once MAX_PATH . '/lib/OA/Admin/UI/CampaignZoneLink.php';\n\nphpAds_registerGlobalUnslashed('action', 'campaignid', 'allSelected',\n        'text-linked', 'text-available');\n\n$agencyId   = OA_Permission::getAgencyId();\n$oDalZones  = OA_Dal::factoryDAL('zones');\n$action     = $GLOBALS[\"action\"];\n$campaignId = $GLOBALS['campaignid'];\n\nOA_Permission::enforceAccount ( OA_ACCOUNT_MANAGER );\nOA_Permission::enforceAccessToObject ( 'campaigns', $campaignid );\n\n$aZonesIds = array();\n$aZonesIdsHash = array();\nforeach ($_REQUEST['ids'] as $zone) {\n    if (substr($zone, 0, 1) == 'z') {\n        $aZonesIds[] = (int) substr($zone, 1);\n        $aZonesIdsHash[(int) substr($zone, 1)] = \"x\";\n    }\n}\n\n// If we're requested to link all matching zones, we need to determine the ids to link\n// Ideally, there should be a DAL method to that directly. Note that we're replacing\n// only the $aZonesIds array here, and keeping $aZonesIdsHash populated based on the\n// zone ids from the request. This way, zones with ids from the request will get\n// higlighted as \"just linked\". It doesn't make to put all zone ids in $aZonesIdsHash as\n// only\nif ($GLOBALS['allSelected'] == 'true') {\n    $aZonesIds = array();\n    $link = ($action == 'link');\n    $text = ($link ? $GLOBALS['text-available'] : $GLOBALS['text-linked']);\n    $websites = $oDalZones->getWebsitesAndZones($agencyId, $campaignId, !$link, $text);\n    foreach ($websites as $website) {\n        $zones = $website['zones'];\n        foreach ($zones as $zoneid => $zone) {\n        \t$aZonesIds []= $zoneid;\n        }\n    }\n}\n\nswitch ($action) {\n    case \"link\" :\n            $result = $oDalZones->linkZonesToCampaign($aZonesIds, $campaignId);\n        break;\n    case \"unlink\" :\n            $result = $oDalZones->unlinkZonesFromCampaign($aZonesIds, $campaignId);\n        break;\n};\n\n$oTpl = OA_Admin_UI_CampaignZoneLink::createTemplateWithModel('available', false);\n$oTpl->assign('aZonesIdHash', $aZonesIdsHash);\n$oTpl->display();\n\n$oTpl = OA_Admin_UI_CampaignZoneLink::createTemplateWithModel('linked', false);\n$oTpl->assign('aZonesIdHash', $aZonesIdsHash);\n$oTpl->display();\n\n// We need to\necho \"<!--result-info-start-->\";\nswitch ($action) {\n    case \"link\" :\n            if ($result == -1) {\n                echo $GLOBALS['strLinkingZonesProblem'];\n            } else {\n                echo $result.\" \".$GLOBALS['strZonesLinked'];\n            }\n        break;\n    case \"unlink\" :\n            if ($result == -1) {\n                echo $GLOBALS['strUnlinkingZonesProblem'];\n            } else {\n                echo $result.\" \".$GLOBALS['strZonesUnlinked'];\n            }\n        break;\n};\necho \"<!--result-info-end-->\";\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/other/lib-acl.inc.php';\n\n// Register input variables\n\nphpAds_registerGlobalUnslashed('acl', 'action', 'submit', 'channelid', 'agencyid');\n\n/*-------------------------------------------------------*/\n/* Affiliate interface security                          */\n/*-------------------------------------------------------*/\n\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('channel', $channelid);\n\n$pageName = basename($_SERVER['SCRIPT_NAME']);\n$agencyId = OA_Permission::getAgencyId();\n$tabindex = 1;\n\nif (!empty($affiliateid)) {\n    OA_Permission::enforceAccessToObject('affiliates', $affiliateid);\n\n    /*-------------------------------------------------------*/\n\t/* Store preferences\t\t\t\t\t\t\t\t\t */\n\t/*-------------------------------------------------------*/\n\t$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['affiliateid'] = $affiliateid;\n\tphpAds_SessionDataStore();\n\n    $aEntities = array('agencyid' => $agencyId, 'affiliateid' => $affiliateid, 'channelid' => $channelid);\n    $aOtherChannels = Admin_DA::getChannels(array('publisher_id' => $affiliateid));\n} else {\n    $aEntities = array('agencyid' => $agencyId, 'channelid' => $channelid);\n    $aOtherChannels = Admin_DA::getChannels(array('agency_id' => $agencyId, 'channel_type' => 'agency'));\n}\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\n\nif (!empty($action)) {\n    if (empty($acl)) $acl = array();\n    $acl = MAX_AclAdjust($acl, $action);\n}\nelseif (!empty($submit)) {\n    $acl = (isset($acl)) ? $acl : array();\n    // Only save when inputs are valid\n    if (OX_AclCheckInputsFields($acl, $pageName) === true) {\n        if (MAX_AclSave($acl, $aEntities)) {\n\n            // Queue confirmation message\n            $doChannel = OA_Dal::factoryDO('channel');\n            $doChannel->get($channelid);\n\n            $translation = new OX_Translation ();\n            $translated_message = $translation->translate ( $GLOBALS['strChannelAclHasBeenUpdated'], array(\n                MAX::constructURL(MAX_URL_ADMIN, \"channel-edit.php?\" . (!empty($affiliateid) ? \"affiliateid={$affiliateid}&\" : \"\") . \"channelid={$channelid}\"),\n                htmlspecialchars($doChannel->name)\n            ));\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n            // Redirect\n            if (!empty($affiliateid)) {\n                header(\"Location: channel-acl.php?affiliateid={$affiliateid}&channelid={$channelid}\");\n            } else {\n                header(\"Location: channel-acl.php?channelid={$channelid}\");\n            }\n            exit;\n        }\n    }\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nMAX_displayNavigationChannel($pageName, $aOtherChannels, $aEntities);\n\n$aChannel = Admin_DA::getChannel($channelid);\nif (!isset($acl)) {\n    $acl = Admin_DA::getChannelLimitations(array('channel_id' => $channelid));\n    // This array needs to be sorted by executionorder, this should ideally be done in SQL\n    // When we move to DataObject this should be addressed\n    ksort($acl);\n}\n\nif (!empty($affiliateid)) {\n    $aParams = array('affiliateid' => $affiliateid, 'channelid' => $channelid);\n} else {\n    $aParams = array('agencyid' => $agencyId, 'channelid' => $channelid);\n}\n\nMAX_displayAcls($acl, $aParams);\n\necho \"<br /><input type='submit' name='submit' value='{$GLOBALS['strSaveChanges']}' tabindex='\".($tabindex++).\"'></form>\";\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\n\n// Register input variables\nphpAds_registerGlobal('newaffiliateid', 'returnurl', 'duplicate');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('channel', $channelid);\n\n$affiliateid    = (int) $affiliateid;\n$channelid      = (int) $channelid;\n\nif (empty($returnurl)) {\n    $returnurl = 'channel-edit.php';\n}\n\n// Security check\nif (isset($channelid) && $channelid != '') {\n    if (isset($duplicate) && $duplicate == 'true') {\n\n        //get channel old channel name\n        $doChannel = OA_Dal::factoryDO('channel');\n        if ($doChannel->get($channelid)) {\n            $oldName = $doChannel->name;\n        }\n        // Duplicate the channel\n        $newChannelId = OA_Dal::staticDuplicate('channel', $channelid);\n\n        //get new name\n        $doChannel = OA_Dal::factoryDO('channel');\n        if ($doChannel->get($newChannelId)) {\n            $newName = $doChannel->name;\n        }\n        // Queue confirmation message\n        $translation = new OX_Translation();\n        $oldChannelParams = (!$affiliateid)\n            ? \"channelid=$channelid\"\n            :   \"affiliateid=$affiliateid&channelid=$channelid\";\n\n        $newChannelParams = (!$affiliateid)\n            ? \"?channelid=$newChannelId\"\n            : \"?affiliateid=$affiliateid&channelid=$newChannelId\";\n\n        $translated_message = $translation->translate ( $GLOBALS['strChannelHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"channel-edit.php?\".$oldChannelParams),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"channel-edit.php?\".$newChannelParams),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n        Header(\"Location: \".$returnurl.$newChannelParams);\n        exit;\n\n    }\n\n}\n\nHeader(\"Location: \".$returnurl.\"?affiliateid=\".$affiliateid.\"&channelid=\".$channelid);\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\nfunction OA_runMPE()\n{\n    $objResponse = new xajaxResponse();\n    $objResponse->addAssign(\"run-mpe\", \"innerHTML\", \"<img src='run-mpe.php' />\");\n    return $objResponse;\n}\n\nrequire_once MAX_PATH .'/lib/Max.php';\nrequire_once MAX_PATH .'/lib/xajax/xajax.inc.php';\n$xajax = new xajax(MAX::constructURL(MAX_URL_ADMIN,'run-mpe-xajax.php'));\n$xajax->registerFunction(\"OA_runMPE\");\n$xajax->processRequests();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/other/lib-acl.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action');\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"acls\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($action) && ($action == 'Recompile')) {\n    MAX_AclReCompileAll();\n    echo \"<strong>$strAllBannerChannelCompiled</strong><br />\";\n}\n\necho $strBannerChannelResult;\nphpAds_ShowBreak();\n// Check the ACLs in the database against the compiled limitation strings...\n\necho \"<strong>\". $strChannels .\":</strong>\";\nphpAds_showBreak();\n\n// Check all the channels...\nOX_increaseMemoryLimit(OX_getMinimumRequiredMemory('maintenance'));\n\n$dalChannel = OA_Dal::factoryDAL('channel');\n$rsChannel = $dalChannel->getChannelsAndAffiliates();\n$rsChannel->find();\n$allChannelsValid = true;\nwhile ($rsChannel->fetch() && $row = $rsChannel->toArray()) {\n    if (!MAX_AclValidate('channel-acl.php', array('channelid' => $row['channelid']))) {\n        $allChannelsValid = false;\n        $affiliateName = (!empty($row['affiliatename'])) ? $row['affiliatename'] : $strUntitled;\n        echo \"<a href='channel-acl.php?affiliateid={$row['affiliateid']}&channelid={$row['channelid']}'>{$row['name']}</a><br />\";\n    }\n}\nif ($allChannelsValid) {\n    echo $strChannelCompiledLimitationsValid;\n}\nphpAds_showBreak();\n\necho \"<strong>$strBanners:</strong>\";\nphpAds_ShowBreak();\n\n$dalBanners = OA_Dal::factoryDAL('banners');\n$rsBanners = $dalBanners->getBannersCampaignsClients();\n$rsBanners->find();\n\n$allBannersValid = true;\nwhile ($rsBanners->fetch() && $row = $rsBanners->toArray()) {\n    if (!MAX_AclValidate('banner-acl.php', array('bannerid' => $row['bannerid']))) {\n        $allBannersValid = false;\n        $bannerName = (!empty($row['description'])) ? $row['description'] : $strUntitled;\n        $campaignName = (!empty($row['campaignname'])) ? $row['campaignname'] : $strUntitled;\n        $clientName = (!empty($row['clientname'])) ? $row['clientname'] : $strUntitled;\n        echo \"{$clientName} -> {$campaignName} -> <a href='banner-acl.php?clientid={$row['clientid']}&campaignid={$row['campaignid']}&bannerid={$row['bannerid']}'>{$bannerName}</a><br />\";\n    }\n}\nif ($allBannersValid) {\n    echo $strBannerCompiledLimitationsValid;\n}\n\nif (!$allBannersValid || !$allChannelsValid) {\n    phpAds_ShowBreak();\n    echo \"<br /><strong>\". $strErrorsFound .\"</strong><br /><br />\";\n    echo $strRepairCompiledLimitations;\n    echo \"<form action='' METHOD='GET'>\";\n    echo \"<input type='submit' name='action' value='$strRecompile' />\";\n    echo \"</form>\";\n}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/Dal/Inventory/Trackers.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action');\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"appendcodes\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Init DAL\n$tr = new MAX_Dal_Inventory_Trackers();\n\nif (!empty($action) && ($action == 'Recompile')) {\n    $tr->recompileAppendCodes();\n    echo \"<strong>$strAppendCodesRecompiled<br />\";\n}\n\necho $strAppendCodesResult;\nphpAds_ShowBreak();\n// Check the append codes in the database against the compiled appendcode strings...\n\necho \"<strong>$strTrackers:</strong>\";\nphpAds_showBreak();\n\n// Check all the trackers...\n$diffs = $tr->checkCompiledAppendCodes();\n\nforeach ($diffs as $v) {\n    echo \"<a href='client-trackers.php?clientid={$v['clientid']}&trackerid={$v['trackerid']}'>{$v['trackername']}</a><br />\";\n}\n\nif ($allTrackersValid = !count($diffs)) {\n    echo $strAppendCodesValid;\n}\nphpAds_showBreak();\n\nif (!$allTrackersValid) {\n    phpAds_ShowBreak();\n    echo \"<br /><strong>$strErrorsFound</strong><br /><br />\";\n    echo \"$strRepairAppenedCodes<br />\";\n    echo \"<form action='' METHOD='GET'>\";\n    echo \"<input type='submit' name='action' value='$strRecompile' />\";\n    echo \"</form>\";\n}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner-cache.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action', 'returnurl');\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($action) && ($action == 'Rebuild')) {\n    $result = processBanners(true);\n    if (empty($result['errors'])) {\n        if (empty($returnurl)) { $returnurl = 'maintenance-banners-check.php'; }\n        OX_Admin_Redirect::redirect($returnurl);\n    } else {\n        _showPageHeader();\n        echo $GLOBALS['strBannerCacheErrorsFound'];\n        echo \"<ul>\";\n       foreach ($result['errors'] as $error) {\n            $doCampaigns = OA_Dal::factoryDO('campaigns');\n            if (empty($campaigns[$error['campaignid']])) {\n                if ($doCampaigns->get($error['campaignid'])) {\n                    $campaigns[$error['campaignid']] = $doCampaigns->toArray();\n                }\n            }\n            echo \"<li><a href='banner-edit.php?clientid={$campaigns[$error['campaignid']]['clientid']}&campaignid={$error['campaignid']}&bannerid={$error['bannerid']}'>{$error['description']}</a></li>\";\n        }\n        echo \"</ul>\";\n    }\n} else {\n    $result = processBanners(false);\n    if (!empty($result['errors']) || !empty($result['different'])) {\n        _showPageHeader();\n        echo $GLOBALS['strBannerCacheDifferencesFound'];\n        echo \"<form action='' METHOD='GET'>\";\n        echo \"<input type='submit' name='action' value='{$GLOBALS['strBannerCacheRebuildButton']}' />\";\n        echo \"</form>\";\n    } else {\n        _showPageHeader();\n        echo $GLOBALS['strBannerCacheOK'];\n    }\n}\n\nfunction _showPageHeader()\n{\n    phpAds_PageHeader(\"maintenance-index\");\n    phpAds_MaintenanceSelection(\"banners\");\n}\n\n\n//function processBanners($commit = false) {\n//    $doBanners = OA_Dal::factoryDO('banners');\n//\n//    if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER))\n//    {\n//        $doBanners->addReferenceFilter('agency', $agencyId = OA_Permission::getEntityId());\n//    }\n//    $doBanners->find();\n//\n//    $different = 0;\n//    $same      = 0;\n//    $errors    = array();\n//\n//    while ($doBanners->fetch())\n//    {\n//    \t// Rebuild filename\n//    \tif ($doBanners->storagetype == 'sql' || $doBanners->storagetype == 'web') {\n//    \t\t$doBanners->imageurl = '';\n//    \t}\n//    \t$GLOBALS['_MAX']['bannerrebuild']['errors'] = false;\n//    \tif ($commit) {\n//            $doBannersClone = clone($doBanners);\n//            $doBannersClone->update();\n//            $newCache = $doBannersClone->htmlcache;\n//    \t} else {\n//    \t    $newCache = phpAds_getBannerCache($doBanners->toArray());\n//    \t}\n//        if (empty($GLOBALS['_MAX']['bannerrebuild']['errors'])) {\n//            if ($doBanners->htmlcache != $newCache && ($doBanners->storagetype == 'html')) {\n//                $different++;\n//            } else {\n//                $same++;\n//            }\n//    \t} else {\n//    \t    $errors[] = $doBanners->toArray();\n//    \t}\n//    }\n//    return array('errors' => $errors, 'different' => $different, 'same' => $same);\n//}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once LIB_PATH . '/Extension/invocationTags/InvocationTagsOptions.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"encoding\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Note: Taken from EncodingMigration.php (with the idfields and joinon arrays removed and updated for use with DataObjects)\n/**\n * An array to hold all the tables and fields that should be converted\n *\n * @var array of arrays(\n *  'fields' => array: field names that should be converted,\n *  'idfields' => array: fields identifying the primary (multi?) key used for the WHERE clause on update\n *  'joinon' string: Identifies which field in the table should be used to build the join up (to get the agency ID where applicable)\n */\n$aTableFields = array(\n    'acls' => array(\n        'fields' => array('data'),\n        'idfields' => array('bannerid', 'executionorder'),\n    ),\n    'acls_channel' => array(\n        'fields'    => array('data'),\n        'idfields'  => array('channelid', 'executionorder'),\n    ),\n    'affiliates' =>  array(\n        'fields' =>  array('name', 'mnemonic', 'comments', 'contact', 'email', 'website'),\n        'idfields'  => array('affiliateid'),\n    ),\n    'agency' => array(\n        'fields' => array('name', 'contact', 'email'),\n        'idfields'  => array('agencyid'),\n    ),\n    'application_variable' => array(\n        'fields' => array('name', 'value'),\n        'idfields'  => array('name'),\n    ),\n    'banners' => array(\n        'fields' => array('htmltemplate','htmlcache','target','url','alt','bannertext','description','append','comments','keyword','statustext'),\n        'idfields'  => array('bannerid'),\n    ),\n    'campaigns' => array(\n        'fields' => array('campaignname','comments'),\n        'idfields'  => array('campaignid'),\n    ),\n    'channel' => array(\n        'fields' => array('name','description','comments'),\n        'idfields'  => array('channelid'),\n    ),\n    'clients' => array(\n        'fields' => array('clientname','contact','email','comments'),\n        'idfields'  => array('clientid'),\n    ),\n    'tracker_append' => array(\n        'fields' => array('tagcode'),\n        'idfields'  => array('tracker_append_id'),\n    ),\n    'trackers' => array(\n        'fields' => array('trackername','description','appendcode'),\n        'idfields'  => array('trackerid'),\n    ),\n    'userlog' => array(\n        'fields' => array('details'),\n        'idfields'  => array('userlogid'),\n    ),\n    'users' => array(\n        'fields' => array('contact_name', 'email_address', 'comments'),\n        'idfields'  => array('user_id'),\n    ),\n\n    'variables' => array(\n        'fields' => array('name','description','variablecode'),\n        'idfields'  => array('variableid'),\n    ),\n    'zones' => array(\n        'fields' => array('zonename','description','prepend','append','comments','what'),\n        'idfields'  => array('zoneid'),\n    ),\n);\n\nif (!empty($_POST['encConfirm'])) {\n    _iterateTableFields($aTableFields, true);\n    Header(\"Location: maintenance-maintenance.php\");\n}\n\n/**\n * This function iterates over the table fields, and either gathers data which would be changed, or changes the data\n *\n * @param array $aTableFields\n * @return array\n */\nfunction _iterateTableFields($aTableFields, $execute = false)\n{\n    $aChanged = array();\n    $encTo =   (!empty($_POST['encTo']))   ? $_POST['encTo']   : 'UTF-8';\n    $encFrom = (!empty($_POST['encFrom'])) ? $_POST['encFrom'] : 'UTF-8';\n\n    foreach ($aTableFields as $table => $tableData)\n    {\n        $doTable = OA_Dal::factoryDO($table);\n        $doTable->find();\n        while ($doTable->fetch()) {\n            $changed = false;\n            foreach ($tableData['fields'] as $field) {\n                $converted = MAX_commonConvertEncoding($doTable->$field, $encTo, $encFrom);\n                if ($converted === $doTable->$field) { continue; }\n                $id = array();\n                foreach ($tableData['idfields'] as $idField) {\n                    $id[$idField] = $doTable->$idField;\n                }\n                if ($execute && !in_array(implode('.', $id), $_POST['aExecute'][$table][$field])) {\n                    continue;\n                }\n\n                $aChanged[$table][$field][] = array('from' => $doTable->$field, 'to' => $converted, 'id' => $id);\n                $doTable->$field = $converted;\n                $changed = true;\n            }\n            if ($changed && $execute) { $doTable->update(); }\n        }\n    }\n   return $aChanged;\n}\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strEncodingExplaination;\necho \"<br /><br />\";\n\nphpAds_ShowBreak();\necho \"<form action='maintenance-encoding.php' method='POST'>\";\n$oOptions = new Plugins_InvocationTagsOptions();\n$aEncodings = $oOptions->_getAvailableCharsets();\n\n$selectedFrom = (!empty($_POST['encFrom'])) ? $_POST['encFrom'] : 'UTF-8';\n$selectedTo   = (!empty($_POST['encTo']))   ? $_POST['encTo']   : 'UTF-8';\n\necho $strEncodingConvertFrom . \" <select name='encFrom'>\\n\";\nforeach ($aEncodings as $encCode => $encName) {\n    $selected = ($encCode == $selectedFrom) ? \" selected='selected'\" : '';\n    echo \"    <option value='{$encCode}' {$selected}>{$encName}</option>\\n\";\n}\necho \"</select> \";\n\n//echo $strEncodingConvertTo . \" <select name='encTo'>\\n\";\n//foreach ($aEncodings as $encCode => $encName) {\n//    $selected = ($encCode == $selectedTo) ? \" selected='selected'\" : '';\n//    echo \"    <option value='{$encCode}' {$selected}>{$encName}</option>\\n\";\n//}\n//echo \"</select> \";\n\necho \"<input type='submit' name='encTest' value='{$strEncodingConvertTest}' />\";\n\n// Show the results of the encoding\nif (!empty($_POST['encTest'])) {\n    phpAds_ShowBreak();\n\n    $aChanged = _iterateTableFields($aTableFields, false);\n\n    echo \"{$GLOBALS['strConvertThese']}<br /><br />\n        <table border='1' padding='1'>\n            <tr><th>{$GLOBALS['strInclude']}</th><th>{$GLOBALS['strFrom']}</th><th>\" . ucfirst($GLOBALS['strTo']) . \"</th></tr>\\n\";\n\n    foreach ($aChanged as $table => $aFields) {\n        foreach ($aFields as $field => $aItems) {\n            foreach ($aItems as $idx => $aItem) {\n                echo \"<tr>\n                            <td><input type='checkbox' name='aExecute[{$table}][{$field}][]' value='\" . implode('.', $aItem['id']) . \"' checked='checked' /></td>\n                            <td>\" . (htmlspecialchars($aItem['from'])) . \"</td>\n                            <td>\" . (htmlspecialchars($aItem['to'])) . \"</td>\n                        </tr>\\n\";\n            }\n        }\n    }\n    echo \"</table><br />\";\n    echo \"<input type='submit' name='encConfirm' value='{$GLOBALS['strConvert']}' /> <input type='button' name='encCancel' value='{$GLOBALS['strCancel']}' onclick='javascript:document.location = \\\"\" . $_SERVER['SCRIPT_NAME'] . \"\\\";' />\";\n}\n\nphpAds_ShowBreak();\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action', 'returnurl');\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"menus\");\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strMenusPrecis;\necho \"<br /><br />\";\n\nif (!empty($action))\n{\n    switch ($action)\n    {\n        case 'build':\n            require_once(LIB_PATH.'/Extension/admin.php');\n            $oExtensionManager = new OX_Extension_admin();\n            $oExtensionManager->runTasksOnDemand();\n            break;\n        default:\n    }\n    echo $strMenusCachedOk.'</br>';\n}\n\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-menus.php?action=build'>Rebuild Menu Cache</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"plugins\");\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strPluginsPrecis;\necho \"<br /><br />\";\n\nphpAds_registerGlobal('action', 'returnurl');\n\nif (!empty($action))\n{\n    switch ($action)\n    {\n        case 'rep':\n            // generates brief display and detailed log\n            // with debug info on plugin installations and status\n            require_once(LIB_PATH.'/Extension/ExtensionCommon.php');\n            $oExtensionManager = new OX_Extension_Common();\n            $aPlugins = $oExtensionManager->getPluginsDiagnostics();\n            $oTpl = new OA_Admin_Template('plugin-report.html');\n            $oTpl->assign('aPlugins', $aPlugins['simple']);\n            $oTpl->assign('aErrors', $aPlugins['errors']);\n            if ($fp = fopen(MAX_PATH.'/var/plugins-report.log','w'))\n            {\n                fwrite($fp, \"********** Display array var_dump **********\\n\");\n                fwrite($fp, print_r($aPlugins['simple'],true));\n                fwrite($fp, \"\\n********** Errors array var_dump: **********\\n\");\n                fwrite($fp, print_r($aPlugins['errors'],true));\n                fwrite($fp, \"\\n********** getPluginsDiagnostics() var_dump: **********\\n\");\n                fwrite($fp, print_r($aPlugins['detail'],true));\n                fclose($fp);\n            }\n            break;\n        case 'pref':\n            // this rebuilds the cached array that holds the text and links\n            // for the account-preferences drop-down list\n            require_once(LIB_PATH.'/Extension/ExtensionCommon.php');\n            $oExtensionManager = new OX_Extension_Common();\n            $oExtensionManager->cachePreferenceOptions();\n            break;\n        case 'hook':\n            // this rebuilds the cached array that holds the component hook registration array\n            require_once(LIB_PATH.'/Extension/ExtensionCommon.php');\n            $oExtensionManager = new OX_Extension_Common();\n            $oExtensionManager->cacheComponentHooks();\n            break;\n        case 'reg':\n            // currently rewrites delivery hooks to conf\n            require_once(LIB_PATH.'/Extension/ExtensionDelivery.php');\n            $oExtensionManager = new OX_Extension_Delivery();\n            $oExtensionManager->runTasksOnDemand();\n            break;\n        case 'exp':\n            $oTpl = new OA_Admin_Template('plugin-export.html');\n            require_once LIB_PATH.'/Plugin/PluginExport.php';\n            $oExporter = new OX_PluginExport();\n            $aErrors = array();\n            foreach ($GLOBALS['_MAX']['CONF']['plugins'] as $name => $enabled)\n            {\n                $aPlugins[$name]['file'] = '';\n                $aPlugins[$name]['error'] = false;\n                if ($file = $oExporter->exportPlugin($name))\n                {\n                    $aPlugins[$name]['file'] = $file;\n                }\n                else\n                {\n                    $aPlugins[$name]['error'] = true;\n                    $aErrors[] = $oExporter->aErrors;\n                }\n            }\n            $oTpl->assign('aPlugins', $aPlugins);\n            $oTpl->assign('aErrors', $aErrors);\n            break;\n        /*case 'dep':\n            require_once LIB_PATH . '/Plugin/PluginManager.php';\n            $oPluginManager = new OX_PluginManager();\n            $oPluginManager->_cacheDependencies();\n            if (empty($oPluginManager->aErrors))\n            {\n                $oPluginManager->aMessages[] = 'No dependency problems detected';\n            }\n            break;*/\n        default:\n    }\n}\n\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?action=hook'>Rebuild Component Hooks Cache</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?action=pref'>Rebuild Preferences List</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?action=reg'>Rebuild Delivery Hooks Cache</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?action=rep'>Plugin Report</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?action=exp'>Export All Plugins</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\n\n/*echo \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?action=dep'>Check Dependencies</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();*/\nif ($oTpl)\n{\n    $oTpl->display();\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Set timezone to UTC\nOA_setTimeZoneUTC();\n\n// Run the Maintenance Priority Engine process\nOA_Maintenance_Priority::run();\n\n// Rebuild cache\n// include_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n// phpAds_cacheDelete();\n\nOX_Admin_Redirect::redirect('maintenance-priority.php');\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"priority\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nfunction phpAds_showBanners()\n{\n\t$conf = $GLOBALS['_MAX']['CONF'];\n\tglobal $strUntitled, $strName, $strID, $strWeight;\n\tglobal $strProbability, $strPriority, $strRecalculatePriority;\n\tglobal $phpAds_TextDirection;\n\n\t$doAdZoneAssoc = OA_Dal::factoryDO('ad_zone_assoc');\n\t$doAdZoneAssoc->selectAdd();\n\t$doAdZoneAssoc->selectAs(array('ad_id'), 'bannerid');\n\t$doAdZoneAssoc->selectAdd('priority');\n\t$doAdZoneAssoc->zoneid = 0;\n\t$doAdZoneAssoc->OrderBy('priority DESC');\n    $doAdZoneAssoc->find();\n\n    $rows = array();\n\t$prioritysum = 0;\n\n\twhile ($doAdZoneAssoc->fetch() && $tmprow = $doAdZoneAssoc->toArray()) {\n\t\tif ($tmprow['priority']) {\n\t\t\t$prioritysum += $tmprow['priority'];\n\t\t\t$rows[$tmprow['bannerid']] = $tmprow;\n\t\t}\n\t}\n\n\tif (is_array($rows)) {\n\t\t$i=0;\n\n\t\t// Header\n\t\techo \"<table width='100%' border='0' align='center' cellspacing='0' cellpadding='0'>\";\n\t\techo \"<tr height='25'>\";\n\t\techo \"<td height='25'><b>&nbsp;&nbsp;\".$strName.\"</b></td>\";\n\t\techo \"<td height='25'><b>\".$strID.\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\";\n\t\techo \"<td height='25'><b>\".$strPriority.\"</b></td>\";\n\t\techo \"<td height='25'><b>\".$strProbability.\"</b></td>\";\n\t\techo \"</tr>\";\n\n\t\techo \"<tr height='1'><td colspan='5' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\n\t\t// Banners\n\t\tforeach (array_keys($rows) as $key) {\n\t\t\t$name = phpAds_getBannerName($rows[$key]['bannerid'], 60, false);\n\n\t\t\tif ($i > 0) echo \"<tr height='1'><td colspan='5' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td></tr>\";\n\n\t    \techo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n\n\t\t\techo \"<td height='25'>\";\n\t\t\techo \"&nbsp;&nbsp;\";\n\n\t\t\t// Banner icon\n\t\t\tif ($rows[$key]['storagetype'] == 'html')\n\t\t\t\techo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-html.gif' align='absmiddle'>&nbsp;\";\n\t\t\telseif ($rows[$key]['storagetype'] == 'url')\n\t\t\t\techo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-url.gif' align='absmiddle'>&nbsp;\";\n\t\t\telse\n\t\t\t\techo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-stored.gif' align='absmiddle'>&nbsp;\";\n\n\t\t\t// Name\n\t\t\techo $name;\n\t\t\techo \"</td>\";\n\n\t\t\techo \"<td height='25'>\".$rows[$key]['bannerid'].\"</td>\";\n\t\t\techo \"<td height='25'>\".$rows[$key]['priority'].\"</td>\";\n\t\t\techo \"<td height='25'>\".number_format($rows[$key]['priority'] / $prioritysum * 100, $pref['ui_percentage_decimals']).\"%</td>\";\n\n\t\t\techo \"</tr>\";\n\t\t\t$i++;\n\t\t}\n\n\t\t// Footer\n\t\techo \"<tr height='1'><td colspan='5' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\t\techo \"</table>\";\n\t}\n}\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\n\n// Show recalculate button\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-priority-calculate.php'>$strRecalculatePriority</a>&nbsp;&nbsp;\";\necho \"<br /><br />\";\nphpAds_ShowBreak();\n\necho \"<br /><br />\";\n//echo 'This page needs to be re-written to show an agency-based list of ad/zone priority data...';\necho \"<br /><br />\";\n\necho \"</table>\";\necho \"<br /><br />\";\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$doBanners = OA_Dal::factoryDO('banners');\n$doBanners->storagetype = 'sql';\n$doBanners->find();\n\nwhile ($doBanners->fetch())\n{\n\t// Get the filename\n\t$filename = $doBanners->filename;\n\n\t// Copy the file\n\t$buffer = phpAds_ImageRetrieve('sql', $filename);\n\t$doBanners->filename = phpAds_ImageStore('web', $filename, $buffer);\n\n\t// TODO: Would be nice if we gave some indication to the user of success or failure!\n\tif ($doBanners->filename != false)\n\t{\n\t\tphpAds_ImageDelete ('sql', $filename);\n\n\t    $doBannersClone = clone($doBanners);\n\n\t\t$doBannersClone->imageurl = '';\n\t\t$doBannersClone->storagetype = 'web';\n\n        $doBannersClone->update();\n\t}\n}\n\nHeader(\"Location: maintenance-storage.php\");\n\n?>", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"storage\");\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strStorageExplaination;\necho \"<br /><br />\";\n\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-storage-move.php'>$strMoveToDirectory</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\n\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_ADVERTISER);\n\n\n// Set longer time out, and ignore user abort\nif (!ini_get('safe_mode')) {\n    @set_time_limit($conf['maintenance']['timeLimitScripts']);\n    @ignore_user_abort(true);\n}\n\n// No output required\nob_start();\n\n// Run maintenance\nOA_Maintenance_Priority::run();\n\n// Clean the output buffer\nob_clean();\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/max/Admin/Inventory/TrackerAppend.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients', $clientid);\nOA_Permission::enforceAccessToObject('trackers', $trackerid);\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\nphpAds_SessionDataStore();\n\n// Initialize trackerAppend class\n$trackerAppend = new Max_Admin_Inventory_TrackerAppend();\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\nheader(\"Content-Type: text/html; charset=ISO-8859-1\");\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $trackerAppend->handlePost($_POST);\n} else {\n    $trackerAppend->handleGet();\n}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n$doClients = OA_Dal::factoryDO('clients');\n$doClients->whereAdd('clientid <>'.$trackerid);\nif (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n    $doClients->agencyid = OA_Permission::getAgencyId();\n}\n$doClients->find();\n$aOtherAdvertisers = array();\nwhile ($doClients->fetch() && $row = $doClients->toArray()) {\n    $aOtherAdvertisers[] = $row;\n}\nMAX_displayNavigationTracker($clientid, $trackerid, $aOtherAdvertisers);\n\n$trackerAppend->display();\n\n\n\n/*-------------------------------------------------------*/\n/* Store preferences                                     */\n/*-------------------------------------------------------*/\n\n$session['prefs']['tracker-variables.php']['trackerid'] = $trackerid;\n\n\nphpAds_SessionDataStore();\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\n\n// Register input variables\nphpAds_registerGlobal (\n    'action',\n    'variablemethod'\n);\n\n// Since there may be an unknown number of variables posted (which are accessed by $_POST directly in the code below),\n// clean the whole $_POST array\nMAX_commonRemoveSpecialChars($_POST);\n\n/*-------------------------------------------------------*/\n/* Affiliate interface security                          */\n/*-------------------------------------------------------*/\n\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients', $clientid);\nOA_Permission::enforceAccessToObject('trackers', $trackerid);\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\nphpAds_SessionDataStore();\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nif (!isset($variables))\n    if (isset($session['prefs']['tracker-variables.php']['variables']) && $session['prefs']['tracker-variables.php']['trackerid']==$trackerid)\n        $variables = $session['prefs']['tracker-variables.php']['variables'];\n\n\n\nif (!empty($trackerid))\n{\n    // Get publisher list\n    $dalAffiliates = OA_Dal::factoryDAL('affiliates');\n    $rsAffiliates = $dalAffiliates->getPublishersByTracker($trackerid);\n    $rsAffiliates->find();\n\n    $publishers = array();\n    while ($rsAffiliates->fetch() && $row = $rsAffiliates->toArray()) {\n        $publishers[$row['affiliateid']] = strip_tags(phpAds_BuildAffiliateName($row['affiliateid'], $row['name']));\n    }\n\n    if (!isset($variablemethod)) {\n        // get variable method\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        if ($doTrackers->get($trackerid)) {\n            $variablemethod = $doTrackers->variablemethod;\n        }\n    }\n\n    if (!isset($variables))\n    {\n        // get variables from db\n        $doVariables = OA_Dal::factoryDO('variables');\n        $doVariables->trackerid = $trackerid;\n        $doVariables->find();\n\n        $variables = array();\n        while ($doVariables->fetch() && $vars = $doVariables->toArray())\n        {\n            // Remove assignment\n            $vars['variablecode'] = addslashes(trim(preg_replace('/^.+?=/', '', $vars['variablecode'])));\n\n            $vars['publisher_visible'] = array();\n            $vars['publisher_hidden']  = array();\n\n            $variables[$vars['variableid']] = $vars;\n        }\n\n        // get publisher visibility from db\n        $doVariables = OA_Dal::factoryDO('variables');\n        $doVariables->trackerid = $trackerid;\n        $doVariable_publisher = OA_Dal::factoryDO('variable_publisher');\n        $doVariables->joinAdd($doVariable_publisher);\n        $doVariables->find();\n\n        while ($doVariables->fetch() && $pubs = $doVariables->toArray())\n        {\n            if ($pubs['visible'] && $variables[$pubs['variable_id']]['hidden'] == 't') {\n                $variables[$pubs['variable_id']]['publisher_visible'][] = $pubs['publisher_id'];\n            } elseif (!$pubs['visible'] && $variables[$pubs['variable_id']]['hidden'] != 't') {\n                $variables[$pubs['variable_id']]['publisher_hidden'][] = $pubs['publisher_id'];\n            }\n        }\n\n        // Remove keys]\n        if (isset($variables))\n        {\n            $variables = array_values($variables);\n        }\n    }\n    else\n    {\n        // Get values on the form\n        for ($f=0; $f < sizeof($variables)+1; $f++)\n        if (isset($_POST['name'.$f]))\n        {\n\n            $variables[$f]['name'] = $_POST['name'.$f];\n            $variables[$f]['description'] = $_POST['description'.$f];\n            $variables[$f]['datatype'] = $_POST['datatype'.$f];\n            $variables[$f]['purpose'] = $_POST['purpose'.$f];\n            $variables[$f]['reject_if_empty'] = isset($_POST['reject_if_empty'.$f]) ? $_POST['reject_if_empty'.$f] : '';\n            $variables[$f]['is_unique'] = isset($_POST['is_unique'.$f]) ? $_POST['is_unique'.$f] : '';\n            // Set window delays\n            $uniqueWindowSeconds = 0;\n            if (!empty($_POST['uniquewindow'.$f]))\n            {\n                $uniqueWindow = $_POST['uniquewindow'.$f];\n                if ($uniqueWindow['second'] != '-')  $uniqueWindowSeconds += (int)$uniqueWindow['second'];\n                if ($uniqueWindow['minute'] != '-')  $uniqueWindowSeconds += (int)$uniqueWindow['minute'] * 60;\n                if ($uniqueWindow['hour'] != '-')      $uniqueWindowSeconds += (int)$uniqueWindow['hour'] * 60*60;\n                if ($uniqueWindow['day'] != '-')      $uniqueWindowSeconds += (int)$uniqueWindow['day'] * 60*60*24;\n            }\n            $variables[$f]['unique_window'] = $uniqueWindowSeconds;\n            $variables[$f]['variablecode'] = $_POST['variablecode'.$f];\n\n            $variables[$f]['publisher_visible'] = array();\n            $variables[$f]['publisher_hidden']  = array();\n\n            switch ($_POST['visibility'.$f]) {\n                case 'all':\n                    $variables[$f]['hidden'] = 't';\n                    break;\n                case 'none':\n                    $variables[$f]['hidden'] = 'f';\n                    break;\n                default:\n                    $variables[$f]['hidden'] = $_POST['p_default'.$f] ? 'f' : 't';\n                    if ($_POST['p_default'.$f]) {\n                        $variables[$f]['publisher_hidden']  = isset($_POST['p_hide'.$f]) && is_array($_POST['p_hide'.$f]) ? $_POST['p_hide'.$f] : array();\n                    } else {\n                        $variables[$f]['publisher_visible'] = isset($_POST['p_show'.$f]) && is_array($_POST['p_show'.$f]) ? $_POST['p_show'.$f] : array();\n                    }\n            }\n        }\n    }\n\n    // insert a new variable\n    if (isset($action['new']))\n            $variables[] = array(\n                'publisher_visible' => array(),\n                'publisher_hidden' => array(),\n                'name' => '',\n                'hidden' => 'f',\n                'description' => '',\n                'datatype' => 'string',\n                'purpose' => '',\n                'reject_if_empty' => '',\n                'is_unique' => null,\n                'unique_window' => 0,\n                'variablecode' => '',\n            );\n\n\n    // has user clicked on save changes?\n    if (isset($action['save']))\n    {\n        // save variablemethod\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        $doTrackers->get($trackerid);\n        $doTrackers->variablemethod = $variablemethod;\n        $doTrackers->update();\n\n        $isUniqueAlreadyExists = false;\n        foreach($variables as $k => $v)\n        {\n            // Set purpose to NULL when generic was chosen\n            if (!empty($v['purpose'])) {\n                $v['purpose'] = $v['purpose'];\n            } else {\n                $v['purpose'] = \"NULL\";\n            }\n\n            if ($v['is_unique']) {\n                if($isUniqueAlreadyExists) {\n                    $variables[$k]['is_unique'] = $v['is_unique'] = 0;\n                } else {\n                    $variables[$k]['is_unique'] = $v['is_unique'] = 1;\n                }\n                $isUniqueAlreadyExists = true;\n            }\n\n            switch ($variablemethod) {\n                case 'js':\n                    $v['variablecode'] = \"var {$v['name']} = \\\\'%%\".strtoupper($v['name']).\"_VALUE%%\\\\'\"; break;\n                case 'dom':\n                    $v['variablecode'] = ''; break;\n                case 'custom':\n                    $v['variablecode'] = \"var {$v['name']} = \\\\'\".$v['variablecode'].\"\\\\'\"; break;\n                default:\n                    $v['variablecode'] = \"var {$v['name']} = escape(\\\\'%%\".strtoupper($v['name']).\"_VALUE%%\\\\')\"; break;\n            }\n\n            // Always delete variable_publisher entries\n            if (!empty($v['variableid'])) {\n                $doVariable_publisher = OA_Dal::factoryDO('variable_publisher');\n                $doVariable_publisher->variable_id = $v['variableid'];\n                $doVariable_publisher->delete();\n            }\n\n            $doVariables = OA_Dal::factoryDO('variables');\n            if (!empty($v['variableid']) && isset($v['delete'])) {\n                // delete variables from db\n                $doVariables->deleteById($v['variableid']);\n            } elseif (isset($v['variableid']) && !isset($v['delete'])) {\n                // update variable info\n                $doVariables->get($v['variableid']);\n                $doVariables->setFrom($v);\n                $doVariables->update();\n            } else {\n                $doVariables->setFrom($v);\n                $doVariables->trackerid = $trackerid;\n                $v['variableid'] = $doVariables->insert();\n            }\n\n            // Update variable_publisher entries\n            $variable_publisher = array();\n            if (is_array($v['publisher_visible'])) {\n                foreach ($v['publisher_visible'] as $p) {\n                    $variable_publisher[$p] = 1;\n                }\n            }\n            if (is_array($v['publisher_hidden'])) {\n                foreach ($v['publisher_hidden'] as $p) {\n                    $variable_publisher[$p] = 0;\n                }\n            }\n\n            foreach ($variable_publisher as $publisher_id => $visible) {\n                $doVariable_publisher = OA_Dal::factoryDO('variable_publisher');\n                $doVariable_publisher->variable_id = $v['variableid'];\n                $doVariable_publisher->publisher_id = $publisher_id;\n                $doVariable_publisher->visible = $visible;\n                $doVariable_publisher->insert();\n            }\n\n        }\n\n        // Queue confirmation message\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strTrackerVarsHaveBeenUpdated'], array(\n            MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=\".$clientid.\"&trackerid=\".$trackerid),\n            htmlspecialchars($doTrackers->trackername)\n        ));\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        // unset variables!\n        unset    ($session['prefs']['tracker-variables.php']);\n        phpAds_SessionDataStore();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_CacheDelete('what=tracker:' . $trackerid);\n\n        // redirect to the next page\n        header     (\"Location: tracker-variables.php?clientid=\".$clientid.\"&trackerid=\".$trackerid);\n        exit;\n\n    }\n\n}\n\n$doClients = OA_Dal::factoryDO('clients');\n$doClients->whereAdd('clientid <>'.$trackerid);\nif (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n    $doClients->agencyid = OA_Permission::getAgencyId();\n}\n$doClients->find();\n$aOtherAdvertisers = array();\nwhile ($doClients->fetch() && $row = $doClients->toArray()) {\n    $aOtherAdvertisers[] = $row;\n}\nMAX_displayNavigationTracker($clientid, $trackerid, $aOtherAdvertisers);\n\n\n//Start\n$tabindex = 0;\n\nif (isset($trackerid) && $trackerid != '')\n{\n            echo \"<form action='\".$_SERVER['SCRIPT_NAME'].\"?clientid=$clientid&trackerid=$trackerid' method='post' onsubmit='return m3_hideShowSubmit()'>\\n\";\n                echo \"<input type='hidden' name='submit' value='true'>\";\n                echo \"<input type='image' name='dummy' src='\" . OX::assetPath() . \"/images/spacer.gif' border='0' width='1' height='1'>\\n\";\n                echo \"<br /><br />\\n\";\n\n                echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\".\"\\n\";\n                echo \"<tr><td height='25' colspan='3'><b>\".$strTrackingSettings.\"</b></td></tr>\".\"\\n\";\n                echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\".\"\\n\";\n                echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\".\"\\n\";\n\n                echo \"<tr>\".\"\\n\";\n                echo \"\\t\".\"<td width='30'>&nbsp;</td>\".\"\\n\";\n                echo \"\\t\".\"<td width='200'>\".$strTrackerType.\"</td>\".\"\\n\";\n                echo \"\\t\".\"<td><select name='variablemethod' tabindex='\".($tabindex++).\"' onchange=\\\"m3_updateVariableMethod()\\\">\";\n                echo \"<option value='js'\".($variablemethod == 'js' ? ' selected' : '').\">\".$strTrackerTypeJS.\"</option>\";\n                echo \"<option value='default'\".($variablemethod == 'default' ? ' selected' : '').\">\".$strTrackerTypeDefault.\"</option>\";\n                echo \"<option value='dom'\".($variablemethod == 'dom' ? ' selected' : '').\">\".$strTrackerTypeDOM.\"</option>\";\n                echo \"<option value='custom'\".($variablemethod == 'custom' ? ' selected' : '').\">\".$strTrackerTypeCustom.\"</option>\";\n                echo \"</select></td>\".\"\\n\";\n                echo \"</tr>\".\"\\n\";\n                echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\".\"\\n\";\n                echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\".\"\\n\";\n                echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\".\"\\n\";\n                echo \"</table>\";\n\n                echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\\n\";\n                    echo \"<tr><td height='25' colspan='4' bgcolor='#FFFFFF'><b>\".$strVariables.\"</b></td></tr>\\n\";\n                    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\\n\";\n\n        if ($variables)\n        {\n            $varCount = 0;\n            if (isset($action['del']))\n            {\n                $key = array_keys($action['del']);\n                $variables[$key[0]]['delete']= true;\n            }\n\n                    foreach ($variables as $k=>$v)\n                    {\n                        if (!isset($v['delete']))\n                        {\n                            $varCount++;\n                            // variable area\n                            echo \"<tr><td height='25' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;\".$strTrackFollowingVars.\"</td></tr>\\n\";\n                            echo \"<tr><td colspan='4'><img src='\" . OX::assetPath() . \"/images/break-el.gif' width='100%' height='1'></td></tr>\\n\";\n                            echo \"<tr><td colspan='4' bgcolor='#F6F6F6'><br /></td></tr>\\n\";\n                            echo \"<tr height='35' bgcolor='#F6F6F6' valign='top'>\\n\";\n                                echo \"<td width='100'></td>\\n\";\n                                echo \"<td width='130'><img src='\" . OX::assetPath() . \"/images/icon-acl.gif' align='absmiddle'>&nbsp;Variable</td>\\n\";\n                                echo \"<td>\\n\";\n                                    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableName.\"</td>\\n\";\n                                            echo \"<td><input class='flat' type='text' name='name{$k}' value=\\\"\".htmlspecialchars($v['name']).\"\\\"></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td width='200'>\".$strVariableDescription.\"</td>\\n\";\n                                            echo \"<td><input class='flat' type='text' name='description\".$k.\"' value=\\\"\".htmlspecialchars($v['description']).\"\\\"></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableDataType.\"</td>\\n\";\n                                            echo \"<td><select name='datatype\".$k.\"'>\\n\";\n                                            echo \"<option \".($v['datatype'] =='string'  ? 'selected ' : '').\"value='string'>\".$strString.\"</option>\\n\";\n                                            echo \"<option \".($v['datatype'] =='numeric' ? 'selected ' : '').\"value='numeric'>\".$strNumber.\"</option>\\n\";\n                                            echo \"<option \".($v['datatype'] =='date' ? 'selected ' : '').\"value='date'>\".$strDate.\"</option>\\n\";\n                                            echo \"</select></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariablePurpose.\"</td>\\n\";\n                                            echo \"<td><select name='purpose\".$k.\"'>\\n\";\n                                            echo \"<option \".(!$v['purpose'] ? 'selected ' : '').\"value=''>\".$strGeneric.\"</option>\\n\";\n                                            echo \"<option \".($v['purpose'] == 'basket_value'  ? 'selected ' : '').\"value='basket_value'>\".$strBasketValue.\"</option>\\n\";\n                                            echo \"<option \".($v['purpose'] == 'num_items' ? 'selected ' : '').\"value='num_items'>\".$strNumItems.\"</option>\\n\";\n                                            echo \"<option \".($v['purpose'] == 'post_code' ? 'selected ' : '').\"value='post_code'>\".$strPostcode.\"</option>\\n\";\n                                            echo \"</select></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableRejectEmpty.\"</td>\\n\";\n                                            echo \"<td>\\n\";\n                                                $checked = ($v['reject_if_empty']) ? 'checked' : '';\n                                                echo \"<input type='checkbox' name='reject_if_empty\".$k.\"' value='1' $checked>\";\n                                            echo \"</td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableIsUnique.\"</td>\\n\";\n                                            echo \"<td>\\n\";\n                                                $checked = ($v['is_unique']) ? 'checked' : '';\n                                                $uniqueCheckboxId = 'uniqueCheckbox'.$k;\n\n                                                $seconds_left = $v['unique_window'];\n                                                $uniqueWindow['day'] = floor($seconds_left / (60*60*24));\n                                                $seconds_left = $seconds_left % (60*60*24);\n                                                $uniqueWindow['hour'] = floor($seconds_left / (60*60));\n                                                $seconds_left = $seconds_left % (60*60);\n                                                $uniqueWindow['minute'] = floor($seconds_left / (60));\n                                                $seconds_left = $seconds_left % (60);\n                                                $uniqueWindow['second'] = $seconds_left;\n\n                                                echo \"<table cellpadding='0' cellspacing='0'><tr><td align='left'>\";\n                                                echo \"<input type='checkbox' id='$uniqueCheckboxId' onClick='m3_setRadioCheckbox(this, \\\"is_unique\\\")' name='is_unique\".$k.\"' value='1' $checked>\";\n\n                                                echo '</td><td>';\n\n                                                echo \"<div id='uniqueWindow$k' style='visibility: hidden;'>\";\n                                                echo \"&nbsp;&nbsp;&nbsp;&nbsp;$strUniqueWindow&nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowday$k' class='flat' type='text' size='3' name='uniquewindow{$k}[day]' value='\".$uniqueWindow['day'].\"' onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strDays.\" &nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowhour$k' class='flat' type='text' size='3' name='uniquewindow{$k}[hour]' value='\".$uniqueWindow['hour'].\"' onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strHours.\" &nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowminute$k' class='flat' type='text' size='3' name='uniquewindow{$k}[minute]' value='\".$uniqueWindow['minute'].\"' onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strMinutes.\" &nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowsecond$k' class='flat' type='text' size='3' name='uniquewindow{$k}[second]' value='\".$uniqueWindow['second'].\"' onBlur=\\\"m3_formLimitBlur($k);\\\" onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strSeconds;\n                                                echo '</div>';\n\n                                                echo '</td></tr></table>';\n\n                                                $onLoadUniqueJs = '';\n                                                if($checked) {\n                                                    $onLoadUniqueJs = \"\\nm3_setRadioCheckbox(document.getElementById('$uniqueCheckboxId'), \\\"is_unique\\\");\";\n                                                }\n                                                $onLoadUniqueJs .= \"\\nm3_formLimitUpdate($k);\";\n\n                                            echo \"</td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\". 'Variable hidden to' .\"</td>\\n\";\n                                            echo \"<td><select name='visibility\".$k.\"' id='visibility\".$k.\"' onchange='m3_updateVisibility()'>\\n\";\n                                            echo \"<option \".($v['hidden'] != 't' && !count($v['publisher_hidden']) ? 'selected ' : '').\"value='none'>\". 'No websites' .\"</option>\\n\";\n                                            echo \"<option \".(count($v['publisher_visible']) || count($v['publisher_hidden']) ? 'selected ' : '').\"value='some'>\". 'Some websites' .\"</option>\\n\";\n                                            echo \"<option \".($v['hidden'] == 't' && !count($v['publisher_visible'])  ? 'selected ' : '').\"value='all'>\". 'All websites' .\"</option>\\n\";\n                                            echo \"</select></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr class='customvisibility\".$k.\"'><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr class='customvisibility\".$k.\"' valign='top'>\\n\";\n                                            echo \"<td>&nbsp;</td><td><table cellpadding='0' cellspacing='0' width='100%'><tr valign='top' align='left'>\";\n                                            echo \"<td width='50%'><input name='p_default\".$k.\"' type='radio' value='0' \".(count($v['publisher_visible']) || !count($v['publisher_hidden']) ? 'checked ' : '').\"/> \\n\";\n                                            echo \"Hide:<br /><select name='p_hide\".$k.\"[]' id='p_hide\".$k.\"' style='width: 90%' onchange='m3_hideShowMove(this, 1)' size='5' multiple='multiple'>\\n\";\n                                            if ($v['hidden'] == 't') {\n                                                $diff = array_diff(array_keys($publishers), $v['publisher_visible']);\n                                            } elseif (!count($v['publisher_hidden'])) {\n                                                $diff = array_keys($publishers);\n                                            } else {\n                                                $diff = $v['publisher_hidden'];\n                                            }\n                                            foreach ($diff as $p) {\n                                                if (isset($publishers[$p])) {\n                                                    echo \"<option value='\".$p.\"'>\".$publishers[$p].\"</option>\\n\";\n                                                }\n                                            }\n                                            echo \"</select><br /><input type='button' value='&gt;&gt;&gt;' onclick='m3_hideShowMoveAll(\".$k.\", 1)' /></td>\\n\";\n                                            echo \"<td width='50%'><input name='p_default\".$k.\"' type='radio' value='1' \".(count($v['publisher_hidden']) ? 'checked ' : '').\"/> \\n\";\n                                            echo \"Show:<br /><select name='p_show\".$k.\"[]' id='p_show\".$k.\"' style='width: 90%' onchange='m3_hideShowMove(this, 0)' size='5' multiple='multiple'>\\n\";\n                                            if ($v['hidden'] != 't') {\n                                                if (!count($v['publisher_hidden'])) {\n                                                    $diff = array();\n                                                } else {\n                                                    $diff = array_diff(array_keys($publishers), $v['publisher_hidden']);\n                                                }\n                                            } else {\n                                                $diff = $v['publisher_visible'];\n                                            }\n                                            foreach ($diff as $p) {\n                                                if (isset($publishers[$p])) {\n                                                    echo \"<option value='\".$p.\"'>\".$publishers[$p].\"</option>\\n\";\n                                                }\n                                            }\n                                            echo \"</select><input type='button' value='&lt;&lt;&lt;' onclick='m3_hideShowMoveAll(\".$k.\", 0)' /></td>\";\n                                            echo \"</td></tr></table></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr class='jscode'><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr class='jscode' valign='top'>\\n\";\n                                            echo \"<td>\".$strVariableCode.\"</td>\\n\";\n                                            echo \"<td><table cellpadding='0' cellspacing='0'><tr valign='top'><td>variable&nbsp;=&nbsp;</td><td><textarea name='variablecode\".$k.\"' rows='3' cols='40'>\".htmlspecialchars(stripslashes($v['variablecode'])).\"</textarea></td></tr></table></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                    echo \"</table>\\n\";\n                                echo\"</td>\\n\";\n                                echo \"<td align='right'><input type='image' name='action[del][\".$k.\"]' src='\" . OX::assetPath() . \"/images/icon-recycle.gif' border='0' align='absmiddle' alt='Delete'>&nbsp;&nbsp;</td>\";\n                            echo \"</tr>\";\n                            echo \"<tr bgcolor='#F6F6F6'>\\n\";\n                                echo \"<td>&nbsp;</td>\\n\";\n                                echo \"<td>&nbsp;</td>\\n\";\n                                echo \"<td colspan='2'></td>\\n\";\n                            echo \"</tr>\\n\";\n                            echo \"<tr>\";\n                                echo \"<td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\";\n                            echo \"</tr>\";\n\n                        }\n\n                    }\n\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\";\n                    echo \"</tr>\";\n\n                    echo \"<tr>\";\n                    if ($varCount < 10) {\n                        echo \"<td colspan='4' align='right'>\";\n                            echo \"<img src='\" . OX::assetPath() . \"/images/icon-acl-add.gif' align='absmiddle'>&nbsp;&nbsp;\".$strAddVariable.\"&nbsp;&nbsp;\";\n                            echo \"<input type='image' name='action[new]' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif' border='0' align='absmiddle' alt='$strSave'>\";\n                        echo \"</td>\";\n                    }\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\\n\";\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'>\";\n                            echo \"<input type='submit' name='action[save]' value='Save Changes' tabindex='15'>\\n\";\n                        echo \"</td>\";\n                    echo \"</tr>\";\n                echo \"</form>\";\n\n\n            echo \"</table>\";\n\n        }\n        else\n        {\n            echo \"<tr><td height='25' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;\".$strNoVarsToTrack.\"</td></tr>\\n\";\n            echo \"<tr><td colspan='4'><img src='\" . OX::assetPath() . \"/images/break-el.gif' width='100%' height='1'></td></tr>\\n\";\n\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\";\n                    echo \"</tr>\";\n\n                    echo \"<tr>\";\n                        echo \"<td colspan='4' align='right'>\";\n                            echo \"<img src='\" . OX::assetPath() . \"/images/icon-acl-add.gif' align='absmiddle'>&nbsp;&nbsp;\".$strAddVariable.\"&nbsp;&nbsp;\";\n                            echo \"<input type='image' name='action[new]' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif' border='0' align='absmiddle' alt='$strSave'>\";\n                        echo \"</td>\";\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\\n\";\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'>\";\n                            echo \"<input type='submit' name='action[save]' value='Save Changes' tabindex='15'>\\n\";\n                        echo \"</td>\";\n                    echo \"</tr>\";\n                echo \"</form>\";\n\n\n            echo \"</table>\";\n        }\n\n}\n/*-------------------------------------------------------*/\n/* Store preferences                                     */\n/*-------------------------------------------------------*/\n\n$session['prefs']['tracker-variables.php']['variables'] = $variables;\n$session['prefs']['tracker-variables.php']['trackerid'] = $trackerid;\n\n\nphpAds_SessionDataStore();\n\n?>\n\n<script language='JavaScript'>\n<!--\n\n    function m3_setRadioCheckbox(field, groupName)\n    {\n        if (document.forms && document.getElementsByTagName)\n        {\n            var fields = eval('field.form.getElementsByTagName(\"input\");');\n\n            for (i=0; i < fields.length; i++)\n            {\n                if (fields[i].getAttribute(\"type\").toLowerCase() == \"checkbox\"\n                    && fields[i].name.indexOf(groupName) != -1) {\n                    var v = fields[i].name.substring(9);\n                    if(fields[i].name != field.name) {\n                        fields[i].checked = false;\n                        m3_setWindowVisibility('uniqueWindow' + v, false);\n                    } else {\n                        m3_setWindowVisibility('uniqueWindow' + v, field.checked);\n                    }\n                }\n            }\n        }\n    }\n\n    function m3_setWindowVisibility(elementName, visibility) {\n        if(visibility) {\n            visible = 'visible';\n        } else {\n            visible = 'hidden';\n        }\n        element = document.getElementById(elementName);\n        if(element) {\n            element.style.visibility = visible;\n        }\n    }\n\n    function m3_formLimitBlur(key)\n    {\n        uniquewindowday    = document.getElementById('uniquewindowday' + key);\n        uniquewindowhour   = document.getElementById('uniquewindowhour' + key);\n        uniquewindowminute = document.getElementById('uniquewindowminute' + key);\n        uniquewindowsecond = document.getElementById('uniquewindowsecond' + key);\n\n        if (uniquewindowday.value == '') uniquewindowday.value = '0';\n        if (uniquewindowhour.value == '') uniquewindowhour.value = '0';\n        if (uniquewindowminute.value == '') uniquewindowminute.value = '0';\n        if (uniquewindowsecond.value == '') uniquewindowsecond.value = '0';\n\n        m3_formLimitUpdate(key);\n    }\n\n    function m3_formLimitUpdate(key)\n    {\n        uniquewindowday    = document.getElementById('uniquewindowday' + key);\n        uniquewindowhour   = document.getElementById('uniquewindowhour' + key);\n        uniquewindowminute = document.getElementById('uniquewindowminute' + key);\n        uniquewindowsecond = document.getElementById('uniquewindowsecond' + key);\n\n        // Set -\n        if (uniquewindowhour.value == '-' && uniquewindowday.value != '-') uniquewindowhour.value = '0';\n        if (uniquewindowminute.value == '-' && uniquewindowhour.value != '-') uniquewindowminute.value = '0';\n        if (uniquewindowsecond.value == '-' && uniquewindowminute.value != '-') uniquewindowsecond.value = '0';\n\n        // Set 0\n        if (uniquewindowday.value == '0') uniquewindowday.value = '-';\n        if (uniquewindowday.value == '-' && uniquewindowhour.value == '0') uniquewindowhour.value = '-';\n        if (uniquewindowhour.value == '-' && uniquewindowminute.value == '0') uniquewindowminute.value = '-';\n        if (uniquewindowminute.value == '-' && uniquewindowsecond.value == '0') uniquewindowsecond.value = '-';\n    }\n\n    //m3_formLimitUpdate(document.clientform);\n\n    function m3_updateVariableMethod()\n    {\n        var s = findObj('variablemethod');\n        var display = s.selectedIndex == s.options.length - 1 ? '' : 'none'\n\n        var trs = document.getElementsByTagName('TR');\n        for (var i = 0; i < trs.length; i++) {\n            if (trs[i].className == 'jscode') {\n                trs[i].style.display = display;\n            }\n        }\n    }\n\n    m3_updateVariableMethod();\n\n    function m3_updateVisibility()\n    {\n        var s = document.getElementsByTagName('SELECT');\n        for (var i = 0; i < s.length; i++) {\n            if (s[i].id.match(/^visibility/)) {\n                var id = s[i].id.replace(/^[^0-9]+/, '');\n                var display = s[i].selectedIndex == 1 ? '' : 'none';\n\n                var trs = document.getElementsByTagName('TR');\n                for (var j = 0; j < trs.length; j++) {\n                    if (trs[j].className == 'customvisibility' + id) {\n                        trs[j].style.display = display;\n                    }\n                }\n            }\n        }\n    }\n\n    m3_updateVisibility();\n\n    function m3_hideShowMove(o, s)\n    {\n        var id = o.id.replace(/^[^0-9]+/, '');\n        var p = document.getElementById((s ? 'p_show' : 'p_hide') + id);\n\n        var sel = o.selectedIndex;\n\n        if (sel >= 0) {\n            p.appendChild(o.options[sel]);\n            o.selectedIndex = -1;\n            p.selectedIndex = -1;\n            o.blur();\n            p.blur();\n        }\n    }\n\n    function m3_hideShowMoveAll(id, s)\n    {\n        var o = document.getElementById((s ? 'p_hide' : 'p_show') + id);\n        var p = document.getElementById((s ? 'p_show' : 'p_hide') + id);\n\n        for (var i = o.options.length - 1; i >= 0; i--) {\n            p.appendChild(o.options[i]);\n        }\n\n        o.selectedIndex = -1;\n        p.selectedIndex = -1;\n        o.blur();\n        p.blur();\n    }\n\n    function m3_hideShowSubmit()\n    {\n        var s = document.getElementsByTagName('SELECT');\n        for (var i = 0; i < s.length; i++) {\n            if (s[i].id.match(/^p_(show|hide)/)) {\n                for (var j = 0; j < s[i].options.length; j++) {\n                    var c = document.createElement('INPUT');\n                    c.type = 'hidden';\n                    c.name = s[i].name;\n                    c.value = s[i].options[j].value;\n                    s[i].parentNode.appendChild(c);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    <?php if (isset($onLoadUniqueJs)) echo $onLoadUniqueJs; ?>\n\n//-->\n</script>\n\n<?php\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Preliminary check before including config.php to prevent it from outputting HTML code\n// in case session is expired\nif (!empty($_POST['xajax'])) {\n    require_once MAX_PATH . '/www/admin/lib-sessions.inc.php';\n    require_once MAX_PATH . '/lib/OA/Permission.php';\n    unset($session);\n    phpAds_SessionDataFetch();\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADMIN)) {\n        $_POST['xajax']     = $_GET['xajax']     = $_REQUEST['xajax']     = 'sessionExpired';\n        $_POST['xajaxargs'] = $_GET['xajaxargs'] = $_REQUEST['xajaxargs'] = array();\n        require_once MAX_PATH . '/lib/xajax.inc.php';\n    }\n}\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Upgrade/Upgrade.php';\nrequire_once MAX_PATH . '/lib/RV/Sync.php';\nrequire_once MAX_PATH . '/lib/xajax.inc.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n$oUpgrader = new OA_Upgrade();\n\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"updates-index\");\nphpAds_MaintenanceSelection(\"history\", \"updates\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nfunction getDBAuditTable($aAudit)\n{\n    $td = \"<td class=\\\"tablebody\\\">%s</td>\";\n    $th = \"<th align=\\\"left\\\" style='background-color: #ddd; border-bottom: 1px solid #ccc;'><b>%s</b></th>\";\n    $schemas = \"<table width='100%' cellpadding='8' cellspacing='0' style='border: 1px solid #ccc; background-color: #eee;'>\";\n    $schemas.= \"<tr>\";\n    //$schemas.= sprintf($th, 'schema');\n    //$schemas.= sprintf($th, 'version');\n    $schemas.= sprintf($th, 'Table origin');\n    $schemas.= sprintf($th, 'Backup table');\n    $schemas.= sprintf($th, 'Size');\n    $schemas.= sprintf($th, 'Rows');\n    //$schemas.= sprintf($th, 'Delete');\n    $schemas.= \"</tr>\";\n    $totalSize = 0;\n    $totalRows = 0;\n    foreach ($aAudit AS $k => $aRec)\n    {\n        $schemas.= \"<tr>\";\n        //$schemas.= sprintf($td, $aRec['schema_name']);\n        //$schemas.= sprintf($td, $aRec['version']);\n        $schemas.= sprintf($td, $aRec['tablename']);\n        $schemas.= sprintf($td, $aRec['tablename_backup']);\n        $schemas.= sprintf($td, round($aRec['backup_size'] * 10, 2) . ' kb');\n        $schemas.= sprintf($td, $aRec['backup_rows']);\n        //$schemas.= sprintf($td, \"<input type=\\\"checkbox\\\" id=\\\"chk_tbl[{$aRec['database_action_id']}]\\\" name=\\\"chk_tbl[{$aRec['database_action_id']}]\\\" checked />\");\n        $schemas.= \"</tr>\";\n        $totalSize = $totalSize + $aRec['backup_size'];\n        $totalRows = $totalRows + $aRec['backup_rows'];\n    }\n\n    $schemas.= \"<tr>\";\n    $schemas.= sprintf($th, 'Total');\n    $schemas.= sprintf($th, count($aAudit) . ' tables');\n    $schemas.= sprintf($th, round($totalSize * 10, 2) . ' kb');\n    $schemas.= sprintf($th, $totalRows);\n    //$schemas.= sprintf($th, 'Delete');\n    $schemas.= \"</tr>\";\n\n    $schemas.= \"</table>\";\n    return $schemas;\n}\n\n$oUpgrader->initDatabaseConnection();\n\nif (array_key_exists('btn_clean_audit', $_POST))\n{\n    $upgrade_id = $_POST['upgrade_action_id'];\n    $oUpgrader->oAuditor->cleanAuditArtifacts($upgrade_id);\n}\n\n$aAudit = $oUpgrader->oAuditor->queryAuditAllDescending();\n\n\n/*-------------------------------------------------------*/\n/* Error handling                                        */\n/*-------------------------------------------------------*/\n\n$aErrors = $oUpgrader->getErrors();\nif (count($aErrors)>0)\n{\n?>\n<div class='errormessage'><img class='errormessage' src='<?php echo OX::assetPath() ?>/images/errormessage.gif' width='16' height='16' border='0' align='absmiddle'>\n    <?php\n        foreach ($aErrors AS $k => $err)\n        {\n            echo $err.'<br />';\n        }\n    ?>\n</div>\n<?php\n}\n$aMessages = $oUpgrader->getMessages();\nif (count($aMessages)>0)\n{\n?>\n<div class='errormessage' style='background-color: #eee;'><img class='errormessage' src='<?php echo OX::assetPath() ?>/images/info.gif' width='16' height='16' border='0' align='absmiddle'>\n    <?php\n        foreach ($aMessages AS $k => $msg)\n        {\n            echo $msg.'<br />';\n        }\n    ?>\n</div>\n<?php\n}\n\n/*-------------------------------------------------------*/\n/* Display                                               */\n/*-------------------------------------------------------*/\n?>\n        <script type=\"text/javascript\" src=\"<?php echo OX::assetPath() ?>/js/xajax.js\"></script>\n        <script type=\"text/javascript\">\n        <?php\n        include MAX_PATH . '/var/templates_compiled/oxajax.js';\n        ?>\n        </script>\n\n\t\t<table width='100%' border='0' cellspacing='0' cellpadding='0'>\n\t\t<tr>\n\t\t\t<td width='40'>&nbsp;</td>\n\t\t\t<td>\n                <br /><br />\n                <table border='0' width='90%' cellpadding='0' cellspacing='0'>\n                <tr height='25'>\n                    <td height='25'>\n                        <b style=\"color: #003399;\"><?php echo $strName; ?></b>\n                    </td>\n                    <td height='25'>&nbsp;</td>\n                    <td height=\"25\">\n                        <b style=\"color: #003399;\"><?php echo $strFromVersion ?></b>\n                    </td>\n                    <td height=\"25\">\n                        <b style=\"color: #003399;\"><?php echo $strToVersion ?></b>\n                    </td>\n                    <td height=\"25\">\n                        <b style=\"color: #003399;\"><?php echo $strStatus ?></b>\n                    </td>\n                    <td height='25'>\n                        <b style=\"color: #003399;\">Date</b>\n                    </td>\n                    <td height='25' width='70'>\n                        <b style=\"color: #003399;\">&nbsp;</b>\n                    </td>\n                </tr>\n                <tr height='1'>\n                    <td colspan='7' bgcolor='#888888'><img src='<?php echo OX::assetPath() ?>/images/break.gif' height='1' width='100%'></td>\n                </tr>\n                <?php\n                $i=0;\n                asort($aAudit);\n                foreach ($aAudit AS $k => $v)\n                {\n                    if (($v['backups'] || !empty($v['logfile']) || !empty($v['confbackup'])) && $v['logfile'] != 'cleaned by user' && $v['logfile'] != 'file not found'&& $v['confbackup'] != 'cleaned by user' && $v['confbackup'] != 'file not found')\n                    {\n                        $v['backupsExist'] = true;\n                    }\n                ?>\n                    <form name=\"frmOpenads\" action=\"updates-history.php\" method=\"POST\">\n                    <tr height='25' <?php echo ($i%2==0?\"bgcolor='#F6F6F6'\":\"\"); ?>>\n                        <?php\n                            if ($v['backups']) {\n                        ?>\n                        <td height='25' width='25'>\n                            &nbsp;<a href=\"#\" onclick=\"return false;\" title=\"<?php echo $strToggleDataBackupDetails ?>\"><img id=\"img_expand_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/<?php echo $phpAds_TextDirection; ?>/triangle-l.gif\" alt=\"<?php echo $GLOBALS['strClickViewBackupDetails'] ?>\" onclick=\"xajax_expandOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /><img id=\"img_collapse_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/triangle-d.gif\" style=\"display:none\" alt=\"<?php echo $GLOBALS['strClickHideBackupDetails'] ?>\" onclick=\"xajax_collapseOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /></a>\n                        </td>\n                        <td height='25'>\n                            <b>&nbsp;<a href=\"#\" title=\"<?php echo $strShowBackupDetails ?>\" id=\"text_expand_<?php echo $v['upgrade_action_id']; ?>\" onclick=\"xajax_expandOSURow('<?php echo $v['upgrade_action_id']; ?>');return false;\"><?php echo $v['updated']; ?></a><a href=\"#\" title=\"<?php echo $GLOBALS['strHideBackupDetails'] ?>\" id=\"text_collapse_<?php echo $v['upgrade_action_id']; ?>\" style=\"display:none\" onclick=\"xajax_collapseOSURow('<?php echo $v['upgrade_action_id']; ?>');return false;\"><?php echo $v['updated']; ?></a></b>\n                        <?php\n                            } else {\n                        ?>\n                            <td colspan=\"2\"><b style=\"color: #003399;\">&nbsp;<?php echo $v['upgrade_name']; ?></a></b></td>\n                        <?php\n                            }\n                        ?>\n                        </td>\n                        <td height='25'>\n                            <?php echo ($v['version_from']) ? $v['version_from'] : '<b>---</b>'; ?>\n                        </td>\n                        <td height='25'>\n                            <?php echo ($v['version_to']) ? $v['version_to'] : '<b>---</b>'; ?>\n                        </td>\n                        <td height='25'>\n                            <span style=\"text-transform:lowercase;\"><?php  echo ($v['upgrade_name'] == 'version stamp') ? $strUpdatedDbVersionStamp : $aProductStatus[$v['description']]; ?></span>\n                        </td>\n                        <td><b style=\"color: #003399;\">&nbsp;<?php echo $v['updated']; ?></a></b></td>\n                        <td height='25' align='right'>\n                        </td>\n                </tr>\n                <tr height='1'><td colspan='2' bgcolor='#F6F6F6'><img src='<?php echo OX::assetPath() ?>/images/spacer.gif' width='1' height='1'></td><td colspan='5' bgcolor='#888888'><img src='<?php echo OX::assetPath() ?>/images/break-l.gif' height='1' width='100%'></td></tr>\n                <tr style=\"display:table-row;\" <?php echo ($i%2==0?\"bgcolor='#F6F6F6'\":\"\"); ?>>\n                    <td colspan='2'>&nbsp;</td>\n                    <td colspan='5'>\n                        <table width='100%' cellpadding='5' cellspacing='0' border='0' style='border: 0px solid #ccc; margin: 10px 0 10px 0; '>\n                        <tr height='20'>\n                            <td width=\"275\" style=\"border-bottom: 1px solid #ccc;\">\n                            <?php echo $strArtifacts ?>:\n                            </td>\n                            <td width=\"100\" style=\"border-bottom: 1px solid #ccc;\">\n                            <?php echo ($v['backups']) ? \"<b>\" : \"\"; echo ($v['backupsExist']) ? $v['backups'] + !empty($v['logfile']) + !empty($v['confbackup']) : 0; echo ($v['backups']) ? \"</b>\" : \"\"; ?>\n                            </td>\n                            <td align=\"right\" style=\"border-bottom: 1px solid #ccc;\">\n                            <?php\n                            if ($v['backupsExist']) {\n                            ?>\n                                <img src='<?php echo OX::assetPath() ?>/images/icon-recycle.gif' border='0' align='absmiddle' alt='<?php echo $strDelete ?>'><input type=\"submit\" name=\"btn_clean_audit\" onClick=\"return confirm('<?php echo $strBackupDeleteConfirm ?>')\" style=\"cursor: pointer; border: 0; background: 0; color: #003399;font-size: 13px;\" value=\"<?php echo $strDeleteArtifacts ?>\">\n                            <?php\n                            }\n                            else\n                            {\n                            ?>\n                                &nbsp;\n                            <?php\n                            }\n                            ?>\n                            </td>\n                        </tr>\n                        <?php\n                        if ($v['backups'])\n                        {\n                        ?>\n                        <tr>\n                            <td width=\"235\">\n                            <?php echo $strBackupDbTables ?>:\n                            </td>\n                            <td width=\"100\" colspan=\"2\">\n                            <?php echo $v['backups'];?>\n                            <a href=\"#\" onclick=\"return false;\" title=\"<?php echo $strToggleDataBackupDetails ?>\"><img id=\"info_expand_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/info.gif\" alt=\"<?php echo $strClickViewBackupDetails ?>\" onclick=\"xajax_expandOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /><img id=\"info_collapse_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/info.gif\" style=\"display:none\" alt=\"<?php echo $strClickHideBackupDetails ?>\" onclick=\"xajax_collapseOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /></a>\n                            </td>\n                        </tr>\n                        <?php\n                        }\n                        if ($v['logfile'])\n                        {\n                        ?>\n                        <tr height='20'>\n                            <td><?php echo $strLogFiles ?>:</td>\n                            <td colspan=\"2\">\n                            <?php echo $v['logfile']; ?>\n                            </td>\n                        </tr>\n                        <?php\n                        }\n                        if ($v['confbackup'])\n                        {\n                        ?>\n                        <tr height='20'>\n                            <td><?php echo $strConfigBackups ?>:</td>\n                            <td colspan=\"2\">\n                            <?php echo $v['confbackup']; ?>\n                            </td>\n                        <?php\n                        }\n                        ?>\n                        </tr>\n                        <tr>\n                            <td colspan='3'>\n                            <div id=\"cell_<?php echo $v['upgrade_action_id']; ?>\"> </div>\n                            </td>\n                        </tr>\n                        </table>\n                    </td>\n                    <input type=\"hidden\" name=\"upgrade_action_id\" value=\"<?php echo $v['upgrade_action_id']; ?>\" />\n                </tr>\n              </form>\n                <tr height='1'><td colspan='7' bgcolor='#888888'><img src='<?php echo OX::assetPath() ?>/images/break.gif' height='1' width='100%'></td></tr>\n                <?php\n                    $i++;\n                }\n                ?>\n                <tr height='25'>\n                    <td colspan='7' height='25' align='right'>\n                    </td>\n                </tr>\n                </table>\n                <br /><br />\n            </td>\n\t\t\t<td width='40'>&nbsp;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width='40' height='20'>&nbsp;</td>\n\t\t\t<td height='20'>&nbsp;</td>\n\t\t</tr>\n\t\t</table>\n<?php\n\n/*-------------------------------------------------------*/\n/* Footer                                                */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\n\n// Register input variables\nphpAds_registerGlobal('newaffiliateid', 'returnurl', 'duplicate');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_TRAFFICKER);\nOA_Permission::enforceAccessToObject('affiliates', $affiliateid);\nOA_Permission::enforceAccessToObject('zones', $zoneid);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (isset($zoneid) && $zoneid != '') {\n\n    if (isset($newaffiliateid) && $newaffiliateid != '') {\n        // A publisher cannot move a zone to another publisher!\n        OA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n        // Needs to ensure that the publisher the zone is being moved\n        // to is owned by the agency, if an agency is logged in\n        OA_Permission::enforceAccessToObject('affiliates', $newaffiliateid);\n        // Move the zone to the new Publisher/Affiliate\n        $doZones = OA_Dal::factoryDO('zones');\n        $doZones->get($zoneid);\n        $doZones->affiliateid = $newaffiliateid;\n        $doZones->update();\n\n        // Queue confirmation message\n        $zoneName = $doZones->zonename;\n        $doAffiliates = OA_Dal::factoryDO('affiliates');\n        if ($doAffiliates->get($newaffiliateid)) {\n            $websiteName = $doAffiliates->name;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate($GLOBALS['strZoneHasBeenMoved'],\n            array(htmlspecialchars($zoneName), htmlspecialchars($websiteName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n        Header(\"Location: \".$returnurl.\"?affiliateid=\".$newaffiliateid.\"&zoneid=\".$zoneid);\n        exit;\n\n    }\n    elseif (isset($duplicate) && $duplicate == 'true') {\n        // Can the user add new zones?\n        if (OA_Permission::isAccount(OA_ACCOUNT_TRAFFICKER)) {\n            OA_Permission::enforceAllowed(OA_PERM_ZONE_ADD);\n        }\n        // Duplicate the zone\n        $doZones = OA_Dal::factoryDO('zones');\n        $doZones->get($zoneid);\n        $oldName = $doZones->zonename;\n        $new_zoneid = $doZones->duplicate();\n        if ($doZones->get($new_zoneid)) {\n            $newName = $doZones->zonename;;\n        }\n        // Queue confirmation message\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strZoneHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"zone-edit.php?affiliateid=$affiliateid&zoneid=$zoneid\"),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"zone-edit.php?affiliateid=$affiliateid&zoneid=$new_zoneid\"),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header(\"Location: \".$returnurl.\"?affiliateid=\".$affiliateid.\"&zoneid=\".$new_zoneid);\n        exit;\n\n    }\n\n}\n\nHeader(\"Location: \".$returnurl.\"?affiliateid=\".$affiliateid.\"&zoneid=\".$zoneid);\n\n?>"], "fixing_code": ["<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\ndefine('SMARTY_DIR', MAX_PATH . '/lib/smarty/');\n\nrequire_once MAX_PATH . '/lib/smarty/Smarty.class.php';\nrequire_once MAX_PATH . '/lib/smarty/plugins/modifier.escape.php';\nrequire_once MAX_PATH . '/lib/OA/Dll.php';\nrequire_once MAX_PATH . '/lib/pear/Date.php';\nrequire_once MAX_PATH . '/lib/OX/Translation.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\n\n/**\n * A UI templating class.\n *\n * @package    OpenXAdmin\n */\nclass OA_Admin_Template extends Smarty\n{\n    /**\n     * @var string\n     */\n    var $templateName;\n\n    /**\n     * @var string\n     */\n    var $cacheId;\n\n    /**\n     * @var int\n     */\n    var $_tabIndex = 0;\n\n    function __construct($templateName)\n    {\n        $this->init($templateName);\n    }\n\n    function init($templateName)\n    {\n        $this->template_dir = MAX_PATH . '/lib/templates/admin';\n        $this->compile_dir  = MAX_PATH . '/var/templates_compiled';\n        $this->cache_dir    = MAX_PATH . '/var/cache';\n\n        $this->caching = 0;\n        $this->cache_lifetime = 3600;\n\n        $this->register_function('t', array('OA_Admin_Template',  '_function_t'));\n\n        $this->register_function('tabindex', array('OA_Admin_Template',  '_function_tabindex'));\n\n        $this->register_function('oa_icon', array('OA_Admin_Template',  '_function_oa_icon'));\n        $this->register_function('oa_title_sort', array('OA_Admin_Template',  '_function_oa_title_sort'));\n\n        $this->register_function('ox_column_title', array('OA_Admin_Template',  '_function_ox_column_title'));\n        $this->register_function('ox_column_class', array('OA_Admin_Template',  '_function_ox_column_class'));\n        $this->register_function('ox_campaign_type', array('OA_Admin_Template',  '_function_ox_campaign_type'));\n        $this->register_function('ox_campaign_status', array('OA_Admin_Template',  '_function_ox_campaign_status'));\n        $this->register_function('ox_campaign_icon', array('OA_Admin_Template',  '_function_ox_campaign_icon'));\n        $this->register_function('ox_banner_size', array('OA_Admin_Template',  '_function_ox_banner_size'));\n        $this->register_function('ox_banner_icon', array('OA_Admin_Template',  '_function_ox_banner_icon'));\n        $this->register_function('ox_zone_size', array('OA_Admin_Template',  '_function_ox_zone_size'));\n        $this->register_function('ox_zone_icon', array('OA_Admin_Template',  '_function_ox_zone_icon'));\n        $this->register_function('ox_tracker_type', array('OA_Admin_Template',  '_function_ox_tracker_type'));\n        $this->register_function('ox_entity_id', array('OA_Admin_Template',  '_function_ox_entity_id'));\n\n        $this->register_function('boldSearchPhrase', array('OA_Admin_Template', '_function_boldSearchPhrase'));\n\n        $this->register_function('oa_is_admin', array('OA_Admin_Template',  '_function_oa_is_admin'));\n        $this->register_function('oa_is_manager', array('OA_Admin_Template',  '_function_oa_is_manager'));\n        $this->register_function('oa_is_advertiser', array('OA_Admin_Template',  '_function_oa_is_advertiser'));\n        $this->register_function('oa_is_trafficker', array('OA_Admin_Template',  '_function_oa_is_trafficker'));\n\n        $this->register_function('phpAds_ShowBreak', array('OA_Admin_Template',  '_function_phpAds_ShowBreak'));\n        $this->register_function('phpAds_DelConfirm', array('OA_Admin_Template',  '_function_phpAds_DelConfirm'));\n        $this->register_function('MAX_zoneDelConfirm', array('OA_Admin_Template',  '_function_MAX_zoneDelConfirm'));\n\n        $this->register_function('showStatusText', array('OA_Admin_Template',  '_function_showStatusText'));\n        $this->register_function('showCampaignType', array('OA_Admin_Template',  '_function_showCampaignType'));\n\n        $this->register_function('oa_form_input_attributes', array('OA_Admin_Template',  '_function_form_input_attributes'));\n        $this->register_block('oa_edit', array('OA_Admin_Template',  '_block_edit'));\n        $this->register_block('oa_form_element', array('OA_Admin_Template',  '_block_form_element'));\n\n        $this->templateName = $templateName;\n\n        $this->assign('phpAds_TextDirection',  $GLOBALS['phpAds_TextDirection']);\n        $this->assign('phpAds_TextAlignLeft',  $GLOBALS['phpAds_TextAlignLeft']);\n        $this->assign('phpAds_TextAlignRight', $GLOBALS['phpAds_TextAlignRight']);\n        $this->assign('assetPath', OX::assetPath());\n        $this->assign(\"adminWebPath\", MAX::constructURL(MAX_URL_ADMIN, ''));\n        $this->assign(\"oaTemplateDir\", MAX_PATH.'/lib/templates/admin/');\n\n        //for pluggable page elements\n        //- plugins may need to refrence their JS in OXP page templates\n        $this->assign(\"adminPluginWebPath\", MAX::constructURL(MAX_URL_ADMIN, 'plugins'));\n\n        //- plugins may need to inject their own\n        //template based elements into normal templates\n        $this->assign(\"pluginBaseDir\", MAX_PATH.'/www/admin/plugins/');\n        $this->assign(\"pluginTemplateDir\", '/templates/');\n\n        /**\n         * CVE-2013-5954\n         *\n         * Register the helper method to allow the the required session token to\n         * be placed into GET method calls for CRUD operations in templates. See\n         * OA_Permission::checkSessionToken() method for details.\n         */\n        $this->register_function('rv_add_session_token', array('OA_Admin_Template', '_add_session_token'));\n\n        // Also assign a template variable for other usages\n        $this->assign(\"csrfToken\", phpAds_SessionGetToken());\n    }\n\n    /**\n     * CVE-2013-5954\n     *\n     * Helper method to allow the the required session token to be placed\n     * into GET method calls for CRUD operations in templates. See\n     * OA_Permission::checkSessionToken() method for details.\n     */\n    static public function _add_session_token()\n    {\n        return 'token=' . urlencode(phpAds_SessionGetToken());\n    }\n\n    /**\n     * A method to set a cache id for the current page\n     *\n     * @param mixed $cacheId Either a string or an array of parameters\n     */\n    function setCacheId($cacheId = null)\n    {\n        if (is_null($cacheId)) {\n            $this->cacheId = null;\n            $this->caching = 0;\n        } else {\n            if (is_array($cacheId)) {\n                $cacheId = join('^@^', $cacheId);\n            }\n            $this->cacheId = md5($cacheId);\n            $this->caching = 1;\n        }\n    }\n\n    /**\n     * A method to set the cached version of the template to be used until\n     * a certain date/time\n     *\n     * @param Date $oDate\n     */\n    function setCacheExpireAt($oDate)\n    {\n        $timeStamp = strftime($oDate->format('%Y-%m-%d %H:%M:%S'));\n        $this->cache_lifetime = $timeStamp - time();\n        $this->caching = 2;\n    }\n\n    /**\n     * A method to set the cached vertsion of the template to expire after\n     * a time span\n     *\n     * @param Date_Span $oSpan\n     */\n    function setCacheLifetime($oSpan)\n    {\n        $this->cache_lifetime = $oSpan->toSeconds();\n        $this->caching = 2;\n    }\n\n    function is_cached($tpl_file = null, $cache_id = null, $compile_id = null)\n    {\n        return parent::is_cached($this->templateName, $this->cacheId);\n    }\n\n\n    function display($resource_name = null, $cache_id = null, $compile_id = null)\n    {\n        parent::display($this->templateName, $this->cacheId);\n    }\n\n\n    function toString()\n    {\n        return parent::fetch($this->templateName, $this->cacheId, null, false);\n    }\n\n\n    function _function_t($aParams, &$smarty)\n    {\n        $oTrans = new OX_Translation();\n\n        if (!empty($aParams['str'])) {\n            if (!empty($aParams['values'])) {\n                $aValues = explode('|', $aParams['values']);\n            } else {\n                $aValues = array();\n            }\n            $t = $oTrans->translate($aParams['str'], $aValues);\n        } elseif (!empty($aParams['key'])) {\n            $t = $oTrans->translate($aParams['key']);\n        }\n\n        if (isset($t)) {\n            if (empty($aParams['escape'])) {\n                return $t;\n            }\n\n            return smarty_modifier_escape($t, $aParams['escape']);\n        }\n\n        // If nothing found in global scope, return the value unchanged\n        if (!empty($aParams['str'])) {\n            return $aParams['str'];\n        }\n        if (!empty($aParams['key'])) {\n            return $aParams['key'];\n        }\n\n        $smarty->trigger_error(\"t: missing 'str' or 'key' parameters: \".$aParams['str']);\n    }\n\n\n    function _function_showCampaignType($aParams, &$smarty)\n    {\n        $priority = $aParams['priority'];\n        return OX_Util_Utils::getCampaignTypeName($priority);\n    }\n\n\n    function _function_showStatusText($aParams, &$smarty)\n    {\n        global $strCampaignStatusRunning, $strCampaignStatusPaused, $strCampaignStatusAwaiting,\n               $strCampaignStatusExpired, $strCampaignStatusApproval, $strCampaignStatusRejected,\n               $strCampaignStatusPending;\n\n        if (isset($aParams['status'])) {\n              switch ($aParams['status']) {\n                    case OA_ENTITY_STATUS_PENDING:\n                        $class = 'pending';\n                        $text  = $strCampaignStatusPending;\n                        break;\n                    case OA_ENTITY_STATUS_RUNNING:\n                        $class = 'started';\n                        $text  = $strCampaignStatusRunning;\n                        break;\n                    case OA_ENTITY_STATUS_PAUSED:\n                        $class = 'paused';\n                        $text  = $strCampaignStatusPaused;\n                        break;\n                    case OA_ENTITY_STATUS_AWAITING:\n                        $class = 'awaiting';\n                        $text  = $strCampaignStatusAwaiting;\n                        break;\n                    case OA_ENTITY_STATUS_EXPIRED:\n                        $class = 'finished';\n                        $text  = $strCampaignStatusExpired;\n                        break;\n                    case OA_ENTITY_STATUS_APPROVAL:\n                        $class = 'accepted';\n                        $text  = $strCampaignStatusApproval;\n                        break;\n                    case OA_ENTITY_STATUS_REJECTED:\n                        $class = 'rejected';\n                        $text  = $strCampaignStatusRejected;\n                        break;\n                }\n                $oTrans = new OX_Translation();\n                $text = $oTrans->translate($text);\n\n                if ($status == OA_ENTITY_STATUS_APPROVAL) {\n                    $text = \"<a href='campaign-edit.php?clientid=\".$aParams['clientid'].\"&campaignid=\".$aParams['campaignid'].\"'>\" .\n                            $text . \"</a>\";\n                }\n                return '<span class=\"'.$class.'\">' . $text . '</span>';\n        }\n\n        $smarty->trigger_error(\"showStatusText: missing 'status' parameter\");\n    }\n\n    function _function_tabindex($aParams, &$smarty)\n    {\n        return ' tabindex=\"'.++$smarty->_tabIndex.'\"';\n    }\n\n    function _function_oa_icon($aParams, &$smarty)\n    {\n        if (!empty($aParams['banner']) && is_array($aParams['banner'])) {\n            $type   = 'banner';\n            $banner = $aParams['banner'];\n\n            $campaign_active = isset($aParams['campaign']['status']) ? $aParams['campaign']['status'] == OA_ENTITY_STATUS_RUNNING : true;\n            $active          = $banner['status'] == OA_ENTITY_STATUS_RUNNING && $campaign_active;\n\n            switch ($banner['type'])\n            {\n                case 'html': $flavour = '-html'; break;\n                case 'txt':  $flavour = '-text'; break;\n                case 'url':  $flavour = '-url'; break;\n                default:     $flavour = '-stored'; break;\n            }\n        } elseif (!empty($aParams['campaign']) && is_array($aParams['campaign'])) {\n            $type     = 'campaign';\n            $campaign = $aParams['campaign'];\n\n            $active = $campaign['status'] == OA_ENTITY_STATUS_RUNNING;\n            $flavour = '';\n        } elseif (!empty($aParams['advertiser']) && is_array($aParams['advertiser'])) {\n            $type     = 'advertiser';\n            $campaign = $aParams['advertiser'];\n\n            $active = true;\n            $flavour = '';\n        }\n\n        if (!empty($type)) {\n            return OX::assetPath('images/icon-'.$type.$flavour.($active ? '' : '-d').'.gif');\n        }\n\n        $smarty->trigger_error(\"t: missing parameter(s)\");\n    }\n\n    function _function_oa_title_sort($aParams, &$smarty)\n    {\n        if (!empty($aParams['str'])) {\n            if (!empty($aParams['item'])) {\n                $str  = $this->_function_t($aParams, $smarty);\n                $item = $aParams['item'];\n\n                $order = !empty($aParams['order']) ? $aParams['order'] : 'down';\n                $url   = !empty($aParams['url'])     ? $aParams['url']     : '#';\n                $url   .= strpos($url, '?') !== false ? '&' : '?';\n\n                $buffer = '<a href=\"'.htmlspecialchars($url.'listorder='.$item).'\">'.$str.'</a>';\n\n                $listorder = $smarty->get_template_vars('listorder');\n                $orderdirection = $smarty->get_template_vars('orderdirection');\n\n                if (empty($listorder) && !empty($aParams['default']) && $aParams['default']) {\n                    $listorder = $item;\n                }\n\n                if (empty($orderdirection)) {\n                    $orderdirection = $order;\n                }\n\n                if ($listorder == $item) {\n                    $order = $orderdirection == 'down' ? 'up' : 'down';\n                    $caret = $orderdirection == 'down' ? 'ds'  : 'u';\n\n                    $buffer .= ' <a href=\"'.htmlspecialchars($url.'orderdirection='.$order).'\">';\n                    $buffer .= '<img src=\"' . OX::assetPath() . '/images/caret-'.$caret.'.gif\" border=\"0\" alt=\"\" title=\"\">';\n                    $buffer .= '</a>';\n                }\n\n                return $buffer;\n            } else {\n                $smarty->trigger_error(\"t: missing 'item' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'str'parameter\");\n        }\n    }\n\n\n    function _function_ox_column_title($aParams, &$smarty)\n    {\n        if (!empty($aParams['str'])) {\n            if (!empty($aParams['item'])) {\n                $str  = $this->_function_t($aParams, $smarty);\n                $item = $aParams['item'];\n\n                $url  = !empty($aParams['url']) ? $aParams['url'] : '#';\n                $url .= strpos($url, '?') !== false ? '&' : '?';\n                $url .= 'listorder=' . $item;\n\n                $listorder = $smarty->get_template_vars('listorder');\n                if (empty($listorder) && !empty($aParams['default']) && $aParams['default']) {\n                    $listorder = $item;\n                }\n\n                if ($listorder == $item) {\n                    $orderdirection = $smarty->get_template_vars('orderdirection');\n                    if (empty($orderdirection)) {\n                        $orderdirection = !empty($aParams['order']) ? $aParams['order'] : 'down';\n                    }\n\n                    $url .= '&orderdirection=' . ($orderdirection == 'down' ? 'up' : 'down');\n                }\n\n                $buffer = '<a href=\"' . htmlspecialchars($url) . '\">' . $str . '</a>';\n\n                return $buffer;\n            } else {\n                $smarty->trigger_error(\"t: missing 'item' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'str'parameter\");\n        }\n    }\n\n    function _function_ox_column_class($aParams, &$smarty)\n    {\n        if (!empty($aParams['item'])) {\n            $item = $aParams['item'];\n\n            $listorder = $smarty->get_template_vars('listorder');\n            if (empty($listorder) && !empty($aParams['default']) && $aParams['default']) {\n                $listorder = $item;\n            }\n\n\n            if ($listorder == $item) {\n                $orderdirection = $smarty->get_template_vars('orderdirection');\n                if (empty($orderdirection)) {\n                    $orderdirection = !empty($aParams['order']) ? $aParams['order'] : 'down';\n                }\n\n                if ($orderdirection == 'down') {\n                    return ' sortDown';\n                }\n\n                return ' sortUp';\n            }\n\n            return '';\n        } else {\n            $smarty->trigger_error(\"t: missing 'item' parameter\");\n        }\n    }\n\n    function _function_ox_banner_size($aParams, &$smarty)\n    {\n        global $phpAds_IAB;\n        require_once MAX_PATH . '/www/admin/lib-size.inc.php';\n\n        if (isset($aParams['width']) && isset($aParams['height'])) {\n            $width = $aParams['width'];\n            $height = $aParams['height'];\n\n            if ($width == -1) $width = '*';\n            if ($height == -1) $height = '*';\n\n            return phpAds_getBannerSize($width, $height);\n        } else {\n            $smarty->trigger_error(\"t: missing 'width' or 'height' parameter\");\n        }\n    }\n\n    function _function_ox_banner_icon($aParams, &$smarty)\n    {\n        if (isset($aParams['type'])) {\n            if (isset($aParams['active'])) {\n                $active = $aParams['active'];\n                $type = $aParams['type'];\n\n                if ($active) {\n                    switch($type) {\n                        case 'html':    return 'iconBannerHtml';\n                        case 'txt':     return 'iconBannerText';\n                        case 'url':     return 'iconBannerExternal';\n                        default:        return 'iconBanner';\n                    }\n                }\n\n                switch($type) {\n                    case 'html':    return 'iconBannerHtmlDisabled';\n                    case 'txt':     return 'iconBannerTextDisabled';\n                    case 'url':     return 'iconBannerExternalDisabled';\n                    default:        return 'iconBannerDisabled';\n                }\n            } else {\n                $smarty->trigger_error(\"t: missing 'active' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'type' parameter\");\n        }\n    }\n\n    function _function_ox_zone_size($aParams, &$smarty)\n    {\n        global $phpAds_IAB;\n        require_once MAX_PATH . '/www/admin/lib-size.inc.php';\n\n        if (isset($aParams['width']) && isset($aParams['height'])) {\n            if (isset($aParams['delivery'])) {\n                $width = $aParams['width'];\n                $height = $aParams['height'];\n                $delivery = $aParams['delivery'];\n                $translation = new OX_Translation ();\n\n                if ($delivery == phpAds_ZoneText) {\n                    return $translation->translate('Custom') . \" (\" . $translation->translate('TextAdZone') . \")\";\n                } else if ($delivery == OX_ZoneVideoInstream) {\n                    return $translation->translate('Custom') . \" (\" . $translation->translate('ZoneVideoInstream') . \")\";\n                } else if ($delivery == OX_ZoneVideoOverlay) {\n                    return $translation->translate('Custom') . \" (\" . $translation->translate('ZoneVideoOverlay') . \")\";\n                } else {\n                    if ($width == -1) $width = '*';\n                    if ($height == -1) $height = '*';\n\n                    return phpAds_getBannerSize($width, $height);\n                }\n            } else {\n                $smarty->trigger_error(\"t: missing 'delivery' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'width' or 'height' parameter\");\n        }\n    }\n\n    function _function_ox_zone_icon($aParams, &$smarty)\n    {\n        if (isset($aParams['delivery'])) {\n            if (isset($aParams['active'])) {\n                $active = $aParams['active'];\n                $delivery = $aParams['delivery'];\n\n                if (isset($aParams['warning']) && $aParams['warning']) {\n                    return 'iconZoneWarning';\n                }\n\n                if ($active) {\n                    switch($delivery) {\n                        case phpAds_ZoneInterstitial:   return 'iconZoneFloating';\n                        case phpAds_ZoneText:           return 'iconZoneText';\n                        case MAX_ZoneEmail:             return 'iconZoneEmail';\n                        case OX_ZoneVideoInstream:      return 'iconZoneVideoInstream';\n                        case OX_ZoneVideoOverlay:       return 'iconZoneVideoOverlay';\n                        default:                        return 'iconZone';\n                    }\n                }\n\n                switch($delivery) {\n                    case phpAds_ZoneInterstitial:   return 'iconZoneFloatingDisabled';\n                    case phpAds_ZoneText:           return 'iconZoneTextDisabled';\n                    case MAX_ZoneEmail:             return 'iconZoneEmailDisabled';\n                    case OX_ZoneVideoInstream:      return 'iconZoneVideoInstreamDisabled';\n                    case OX_ZoneVideoOverlay:       return 'iconZoneVideoOverlayDisabled';\n                    default:                        return 'iconZoneDisabled';\n                }\n            } else {\n                $smarty->trigger_error(\"t: missing 'active' parameter\");\n            }\n        } else {\n            $smarty->trigger_error(\"t: missing 'delivery' parameter\");\n        }\n    }\n\n\t\tfunction _function_ox_campaign_type($aParams, &$smarty)\n\t\t{\n\t\t\tif (isset($aParams['type'])) {\n\t\t\t\t$type = $aParams['type'];\n\t\t\t\t$translation = new OX_Translation ();\n\n                if ($type == OX_CAMPAIGN_TYPE_OVERRIDE) {\n\t\t\t\t\treturn \"<span class='campaign-type campaign-override'>\" . $translation->translate('Override') . \"</span>\";\n                } elseif ($type == OX_CAMPAIGN_TYPE_CONTRACT_NORMAL) {\n\t\t\t\t\treturn \"<span class='campaign-type campaign-contract'>\" . $translation->translate('Contract') . \"</span>\";\n\t\t\t\t} elseif ($type == OX_CAMPAIGN_TYPE_REMNANT || $type == OX_CAMPAIGN_TYPE_ECPM){\n\t\t\t\t\treturn \"<span class='campaign-type campaign-remnant'>\" . $translation->translate('Remnant') . \"</span>\";\n                }\n                return \"<span class='campaign-type campaign-contract'>\".$type. \"</span>\";\n\t\t\t} else {\n\t\t\t\t$smarty->trigger_error(\"t: missing 'type' parameter\");\n\t\t\t}\n\t\t}\n\n    function _function_ox_campaign_status($aParams, &$smarty)\n    {\n        if (isset($aParams['status'])) {\n            $status = $aParams['status'];\n            $translation = new OX_Translation ();\n\n            switch ($status) {\n                case OA_ENTITY_STATUS_PENDING:\n                    $class = 'sts-pending';\n                    $text  = $translation->translate('CampaignStatusPending');\n                    break;\n                case OA_ENTITY_STATUS_RUNNING:\n                    $class = 'sts-accepted';\n                    $text  = $translation->translate('CampaignStatusRunning');\n                    break;\n                case OA_ENTITY_STATUS_PAUSED:\n                    $class = 'sts-paused';\n                    $text  = $translation->translate('CampaignStatusPaused');\n                    break;\n                case OA_ENTITY_STATUS_AWAITING:\n                    $class = 'sts-not-started';\n                    $text  = $translation->translate('CampaignStatusAwaiting');\n                    break;\n                case OA_ENTITY_STATUS_EXPIRED:\n                    $class = 'sts-finished';\n                    $text  = $translation->translate('CampaignStatusExpired');\n                    break;\n                case OA_ENTITY_STATUS_INACTIVE:\n                    $class = 'sts-inactive';\n                    $text  = $translation->translate('CampaignStatusInactive');\n                    break;\n                case OA_ENTITY_STATUS_APPROVAL:\n                    $class = 'sts-awaiting';\n                    $text  = $translation->translate('CampaignStatusApproval');\n                    break;\n                case OA_ENTITY_STATUS_REJECTED:\n                    $class = 'sts-rejected';\n                    $text  = $translation->translate('CampaignStatusRejected');\n                    break;\n            }\n            $oTrans = new OX_Translation();\n            $text = $oTrans->translate($text);\n\n            if ($status == OA_ENTITY_STATUS_APPROVAL) {\n                $text = \"<a href='campaign-edit.php?clientid=\".$aParams['clientid'].\"&campaignid=\".$aParams['campaignid'].\"'>\" . $text . \"</a>\";\n            }\n\n            return \"<span class='\" . $class . \"'>\" . $text . \"</span>\";\n        }\n\n        $smarty->trigger_error(\"showStatusText: missing 'status' parameter\");\n    }\n\n    function _function_ox_campaign_icon($aParams, &$smarty)\n    {\n        if (isset($aParams['status'])) {\n            if ($aParams['status'] == OA_ENTITY_STATUS_RUNNING) {\n                return 'iconCampaign';\n            }\n\n            return 'iconCampaignDisabled';\n        } else {\n            $smarty->trigger_error(\"t: missing 'status' parameter\");\n        }\n    }\n\n    function _function_ox_tracker_type($aParams, &$smarty)\n    {\n        if (isset($aParams['type'])) {\n            $type = $aParams['type'];\n\t\t\t$type = $GLOBALS['_MAX']['CONN_TYPES'][$type];\n\n\t\t\t// Warning: $type contains the id of translation string... remove 'str' to be able to pass it on to OX_Translation\n\t\t\t$type = substr($type, 3);\n\n            $translation = new OX_Translation ();\n\t\t\treturn $translation->translate($type);\n        } else {\n            $smarty->trigger_error(\"t: missing 'type' parameter\");\n        }\n    }\n\n    /**\n     * Smarty function to bold searched phrase in tekst\n     * use: {boldSearchPhrase text=\"some text\" search=\"search phrase\"}\n     *\n     * @param array $aParams - $aParams['text'] - text to modify, $aParams['search'] - search phrase to bold\n     * @param object &$smarty\n     * @return string\n     */\n    function _function_boldSearchPhrase($aParams, &$smarty)\n    {\n        if (!empty($aParams['text'])) {\n            if (!empty($aParams['search'])) {\n                $searchPhrase = $aParams['search'];\n                $text = $aParams['text'];\n                $strPos = stripos($text,$searchPhrase);\n                if ($strPos !== false ) {\n                    $strLen = strlen($searchPhrase);\n                    return  htmlspecialchars(substr($text, 0, $strPos)) .\n                            \"<b class='sr'>\" . htmlspecialchars(substr($text, $strPos, $strLen)) . \"</b>\" .\n                            htmlspecialchars(substr($text, $strPos+$strLen));\n                    }\n            }\n            return htmlspecialchars($aParams['text']);\n        }\n    }\n\n    function _block_edit($aParams, $content, &$smarty, &$repeat)\n    {\n        static $break = false;\n\n        if (!$repeat) {\n            $aParams['content'] = $content;\n            if (isset($aParams['params']) && is_array($aParams)) {\n                $aParams += $aParams['params'];\n            }\n            if (!isset($aParams['break'])) {\n                $aParams['break'] = $break;\n            }\n\n            $smarty->assign('_e', $aParams);\n            $result = $smarty->fetch('edit-table/main.html');\n            $smarty->clear_assign('_e');\n\n            $break = $aParams['type'] != 'section';\n\n            return $result;\n        }\n    }\n\n\n   function _block_form_element($aParams, $content, &$smarty, &$repeat)\n    {\n        static $break = false;\n\n        if ($repeat && $aParams['elem']['type'] == 'header') {\n            $break = false; //do not display breaks for first element in section\n        }\n        if (!$repeat) {\n            $aParams['content'] = $content;\n            if (isset($aParams['elem']) && is_array($aParams)) {\n                $aParams += $aParams['elem'];\n            }\n            if (!isset($aParams['break'])) {\n                $aParams['break'] = $break;\n            }\n\n            //if macro invoked with parent parameter do not add break\n            if(isset($aParams['parent'])) {\n                $aParams['break'] = false;\n            }\n\n            //put some context for form elements (set parent)\n            if (is_array($smarty->_tag_stack) && count($smarty->_tag_stack) > 0) {\n                if (isset($smarty->_tag_stack[0][1]['elem']['type'])) {\n                    $aParams['parent_tag'] = $smarty->_tag_stack[0][1]['elem']['type'];\n                }\n            }\n\n            //store old _e if recursion happens\n            $old_e = $smarty->get_template_vars('_e');\n            $smarty->assign('_e', $aParams);\n            $result = $smarty->fetch(MAX_PATH . '/lib/templates/admin/form/elements.html');\n            $smarty->clear_assign('_e');\n\n            //restore old _e (if any)\n            if (isset($old_e)) {\n                $smarty->assign('_e', $old_e);\n            }\n\n            //decorate result with decorators content\n            if (!empty($aParams['decorators']['list'])) {\n                foreach ($aParams['decorators']['list'] as $decorator) {\n                    $result = $decorator->render($result);\n                }\n            }\n\n            $break = ($aParams['type'] != 'header');\n\n            return $result;\n        }\n    }\n\n\n    function _function_form_input_attributes($aParams, $smarty)\n    {\n        $elem = $aParams['elem'];\n        $parent = $aParams['parent'];\n        $attributes = &$elem['attributes'];\n\n        //default id to name if not set\n        if (empty($attributes['id'])) {\n            $attributes['id'] = $attributes['name'];\n        }\n\n        //if frozen disable //TODO append 'frozen' class here or to form??\n        if ($elem['frozen'] == true) {\n            $attributes['disabled'] = 'disabled';\n            $attributes['class'] .= ' frozen';\n        }\n\n        //set default type to text if not given\n        if (empty($elem['type'])) {\n            $elem['type'] = 'text';\n        }\n\n        //default class to 'large' for different inputs (apart from submits, buttons, selects, checkboxes)\n        if ($elem['type'] == 'text' || $elem['type'] == 'password') {\n            if (empty($attributes['class'])) {\n                 if (!empty($parent)) {  //if parent is set it means it is in group\n                    $attributes['class'] = 'x-small'; //mulitelement lines needs smaller elements\n                 }\n                 else {\n                     $attributes['class'] = 'large'; //first level elems get big\n                 }\n            }\n        }\n\n        if ($elem['type'] == 'select') {\n            if (empty($attributes['class'])) {\n                 if (!empty($parent)) {  //if parent is set it means it is in group\n                    $attributes['class'] = 'small'; //mulitelement lines needs smaller elements\n                 }\n                 else {\n                     $attributes['class'] = 'medium'; //first level elems get big\n                 }\n            }\n        }\n\n        //custom textarea styles\n        if ($elem['type'] == 'textarea') {\n            if (!$this->_hasSizeClass($attributes['class'])) {\n                $attributes['class'] = 'large';\n            }\n\n            $attributes['class'].=\" small-h\"; //set height\n            $attributes['wrap']=\"off\";\n            $attributes['dir']=\"ltr\";\n        }\n\n        $attrString = \"\";\n        foreach ($attributes as $attribute => $value) {\n            $attrString .= \"$attribute=\\\"\".smarty_modifier_escape($value).\"\\\" \";\n        }\n\n        return $attrString;\n    }\n\n    function _hasSizeClass($className)\n    {\n        if (empty($className)) {\n            return false;\n        }\n        //this is simplified - we should check for spaces and line start/end\n        //but is it worth the performance penalty?\n        $result = preg_match('/x-large|large|medium|small|x-small/', $className) == 0\n            ? false : true;\n\n        return $result;\n    }\n\n\n    function _function_ox_entity_id($aParams, &$smarty) {\n        if ($GLOBALS['_MAX']['PREF']['ui_show_entity_id'] == true) {\n            $id = $aParams['id'];\n            return '<small title=\"' .\n                $this->_function_t(array('str' => $aParams['type']), $smarty) . ' ' .\n                $this->_function_t(array('str' => 'ID'), $smarty) . ': ' . $id . '\">[' . $id . ']</small>';\n        } else {\n            return '';\n        }\n    }\n\n    function _function_oa_is_admin($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_ADMIN);\n    }\n\n    function _function_oa_is_manager($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_MANAGER);\n    }\n\n    function _function_oa_is_advertiser($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER);\n    }\n\n    function _function_oa_is_trafficker($aParams, $smarty) {\n        return OA_Permission::isAccount(OA_ACCOUNT_TRAFFICKER);\n    }\n\n    // OLD FUNCTIONS\n\n    function _function_phpAds_DelConfirm($aParams, &$smarty)\n    {\n        return phpAds_DelConfirm($this->_function_t($aParams, $smarty));\n    }\n\n    function _function_MAX_zoneDelConfirm($aParams, &$smarty)\n    {\n        return MAX_zoneDelConfirm($aParams['zoneid']);\n    }\n\n    function _function_phpAds_ShowBreak()\n    {\n        ob_start();\n        phpAds_ShowBreak();\n        return ob_get_clean();\n    }\n}\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\nrequire_once MAX_PATH . '/lib/Max.php';\nrequire_once MAX_PATH . '/lib/max/Dal/Inventory/Trackers.php';\n\nrequire_once MAX_PATH . '/lib/OA/ServiceLocator.php';\n\nrequire_once OX_PATH . '/lib/OX.php';\nrequire_once LIB_PATH . '/Admin/Redirect.php';\nrequire_once OX_PATH . '/lib/pear/HTML/Template/Flexy.php';\n\n\n\n/**\n * A class for determining the available geotargeting modes.\n *\n * @package    Max\n */\nclass MAX_Admin_Inventory_TrackerAppend\n{\n    /* @var MAX_Dal_TrackerTags */\n    var $_dal;\n\n    var $_cycle = 0;\n\n    var $advertiser_id;\n    var $tracker_id;\n    var $codes;\n    var $showReminder;\n    var $assetPath;\n\n    /**\n     * PHP5-style constructor\n     */\n    function __construct()\n    {\n        $this->_useDefaultDal();\n\n        $this->csrf_token    = phpAds_SessionGetToken();\n        $this->advertiser_id = MAX_getValue('clientid', 0);\n        $this->tracker_id    = MAX_getValue('trackerid', 0);\n        $this->assetPath \t = OX::assetPath();\n        $this->showReminder  = false;\n    }\n\n    function _useDefaultDal()\n    {\n        $oServiceLocator =& OA_ServiceLocator::instance();\n        $dal =& $oServiceLocator->get('MAX_Dal_Inventory_Trackers');\n        if (!$dal) {\n            $dal = new MAX_Dal_Inventory_Trackers();\n        }\n        $this->_dal =& $dal;\n    }\n\n    function cycleRow($class)\n    {\n        return trim($class.(($this->_cycle++ % 2) ? ' light' : ' dark'));\n    }\n\n    function getPausedCodes()\n    {\n        $paused = array();\n        foreach ($this->codes as $k => $v) {\n            if ($v['paused']) {\n                $paused[] = $k;\n            }\n        }\n\n        return join(',', $paused);\n    }\n\n    function handlePost($vars)\n    {\n        $codes = array();\n\n        if (isset($vars['tag']) && is_array($vars['tag'])) {\n            foreach ($vars['tag'] as $k => $v) {\n                $codes[$k] = array('tagcode' => stripslashes($v), 'paused' => false);\n                $codes[$k]['autotrack'] = isset($vars['autotrack'][$k]);\n            }\n        }\n\n        if (isset($vars['t_paused'])) {\n            foreach (explode(',', $vars['t_paused']) as $k) {\n                if (isset($codes[$k])) {\n                    $codes[$k]['paused'] = true;\n                }\n            }\n        }\n\n        if (isset($vars['t_action'])) {\n            switch ($vars['t_action']) {\n                case 'new':\n                    $codes[] = array('tagcode' => '', 'paused' => false);\n                    break;\n\n                case 'del':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']])) {\n                        unset($codes[$vars['t_id']]);\n                    }\n                    break;\n\n                case 'up':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']]) && isset($codes[$vars['t_id'] - 1])) {\n                        $tmp = $codes[$vars['t_id']];\n                        $codes[$vars['t_id']] = $codes[$vars['t_id'] - 1];\n                        $codes[$vars['t_id'] - 1] = $tmp;\n                    }\n                    break;\n\n                case 'down':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']]) && isset($codes[$vars['t_id'] + 1])) {\n                        $tmp = $codes[$vars['t_id']];\n                        $codes[$vars['t_id']] = $codes[$vars['t_id'] + 1];\n                        $codes[$vars['t_id'] + 1] = $tmp;\n                    }\n                    break;\n\n                case 'pause':\n                case 'restart':\n                    if (isset($vars['t_id']) && isset($codes[$vars['t_id']])) {\n                        $codes[$vars['t_id']]['paused'] = $vars['t_action'] == 'pause';\n                    }\n                    break;\n            }\n        }\n\n        if (isset($vars['save'])) {\n            $this->_dal->setAppendCodes($this->tracker_id, $codes);\n\n            // Queue confirmation message\n            $doTrackers = OA_Dal::factoryDO('trackers');\n            $doTrackers->get($this->tracker_id);\n\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strTrackerAppendHasBeenUpdated'], array(\n                MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=\".$this->advertiser_id.\"&trackerid=\".$this->tracker_id),\n                htmlspecialchars($doTrackers->trackername)\n            ));\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n            OX_Admin_Redirect::redirect(\"tracker-append.php?clientid={$this->advertiser_id}&trackerid={$this->tracker_id}\");\n        } else {\n            $this->codes = $codes;\n            $this->showReminder = true;\n        }\n    }\n\n    function handleGet()\n    {\n        if (is_null($this->codes)) {\n            $this->codes = $this->_dal->getAppendCodes($this->tracker_id);\n        }\n    }\n\n    function display()\n    {\n        $output = new HTML_Template_Flexy(array(\n            'templateDir'       => MAX_PATH . '/lib/max/Admin/Inventory/themes',\n            'compileDir'        => MAX_PATH . '/var/templates_compiled',\n            'flexyIgnore'        => true\n        ));\n\n        $codes = $this->codes;\n        $this->codes = array();\n        if (is_array($codes)) {\n            foreach ($codes as $v){\n                $k = count($this->codes);\n                $v['id']   = \"tag_{$k}\";\n                $v['name'] = \"tag[{$k}]\";\n                $v['autotrackname'] = \"autotrack[{$k}]\";\n                $v['autotrack'] = isset($v['autotrack']) ? $v['autotrack'] : false;\n                $v['rank'] = $k + 1;\n                $v['move_up'] = $k > 0;\n                $v['move_down'] = $k < count($codes) - 1;\n                $this->codes[] = $v;\n            }\n        }\n\n        // Display page content\n        $output->compile('TrackerAppend.html');\n        $output->outputObject($this);\n    }\n}\n\n?>\n", "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n<title>{title}</title>\n</head>\n\n<body>\n<div flexy:start=\"here\">\n<script type=\"text/javascript\">\n<!--\n\nfunction MMM_trackerAction(action, id)\n{\n    var f = document.getElementById('trackerAppendForm');\n\n    f.t_action.value = action;\n    f.t_id.value = id;\n    f.submit();\n    return false;\n}\n\n//-->\n</script>\n<div flexy:if=\"showReminder\" class=\"errormessage\"><img class=\"errormessage\" src=\"{assetPath}/images/warning.gif\" align=\"absmiddle\">\n<span class='tab-s'>You have unsaved changes on this page, make sure you press &quot;Save Changes&quot; when finished</span><br>\n</div>\n<form id=\"trackerAppendForm\" class=\"section\" method=\"post\">\n    <input type=\"hidden\" name=\"token\" value=\"{csrf_token}\" />\n    <input type=\"hidden\" name=\"clientid\" value=\"{advertiser_id}\" />\n    <input type=\"hidden\" name=\"trackerid\" value=\"{tracker_id}\" />\n    <input type=\"hidden\" name=\"t_action\" />\n    <input type=\"hidden\" name=\"t_id\"  />\n    <input type=\"hidden\" name=\"t_paused\" value=\"{getPausedCodes()}\" />\n    <h3>Append tracker code</h3>\n    <div flexy:foreach=\"codes,k,v\" class=\"{cycleRow(#row#)}\">\n        <div class=\"label\">\n            <label for=\"{v[id]}\">{v[rank]}. Tracker code{if:v[paused]} (Paused){end:}</label>\n        </div>\n        <div class=\"element\">\n            <textarea name=\"{v[name]}\" id=\"{v[id]}\" rows=\"3\">{v[tagcode]}</textarea><br />\n            <span>\n                {if:v[autotrack]}<input type=\"checkbox\" name=\"{v[autotrackname]}\" id=\"{v[autotrackname]}\" checked=\"checked\" />\n                {else:}<input type=\"checkbox\" name=\"{v[autotrackname]}\" id=\"{v[autotrackname]}\" />\n                {end:} Automatically change the HTML code to track the same variables\n            </span>\n        </div>\n        <div class=\"link-buttons\">\n            <a flexy:if=\"!v[paused]\" href=\"#\" onclick=\"return MMM_trackerAction('pause', '{k}')\"><img src=\"{assetPath}/images/icon-deactivate.gif\" width=\"16\" height=\"16\" /> Pause</a>\n            <a flexy:if=\"v[paused]\" href=\"#\" onclick=\"return MMM_trackerAction('restart', '{k}')\"><img src=\"{assetPath}/images/icon-activate.gif\" width=\"16\" height=\"16\" /> Restart</a>\n            <a flexy:if=\"v[move_up]\" href=\"#\" onclick=\"return MMM_trackerAction('up', '{k}')\"><img src=\"{assetPath}/images/triangle-u.gif\" width=\"16\" height=\"16\" /> Move up</a>\n            <span flexy:if=\"!v[move_up]\"><img src=\"{assetPath}/images/triangle-u-d.gif\" width=\"16\" height=\"16\" /> Move up</span>\n            <a flexy:if=\"v[move_down]\" href=\"#\" onclick=\"return MMM_trackerAction('down', '{k}')\"><img src=\"{assetPath}/images/triangle-d.gif\" width=\"16\" height=\"16\" /> Move down</a>\n            <span flexy:if=\"!v[move_down]\"><img src=\"{assetPath}/images/triangle-d-d.gif\" width=\"16\" height=\"16\" /> Move down</span>\n            <a href=\"#\" onclick=\"return MMM_trackerAction('del', '{k}')\"><img src=\"{assetPath}/images/icon-recycle.gif\" width=\"16\" height=\"16\" /> Delete</a>\n        </div>\n    </div>\n    <div class=\"row last\"><img src=\"{assetPath}/images/icon-acl-add.gif\" width=\"16\" height=\"16\" alt=\"Append new tag\" width=\"16\" height=\"16\" />&nbsp;<a href=\"#\" onclick=\"return MMM_trackerAction('new', '')\">Append new tag</a></div>\n    <br />\n    <br />\n    <input name=\"save\" type=\"submit\" value=\"Save changes\" />\n</form>\n</td></tr></table>\n</div>\n</body>\nThis isn't here at all.\n</html>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\nrequire_once MAX_PATH . '/lib/max/Admin_DA.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once LIB_PATH . '/Plugin/Component.php';\nrequire_once MAX_PATH . '/lib/OX/Util/Utils.php';\nrequire_once MAX_PATH . '/lib/OA/Admin/UI/model/InventoryPageHeaderModelBuilder.php';\n\n\nfunction MAX_getDisplayName($name, $length = 60, $append = '...')\n{\n    $displayName = strlen($name) > $length ? rtrim(substr($name, 0, $length-strlen($append))) . $append : $name;\n    if (empty($displayName)) {\n        $displayName = $GLOBALS['strUntitled'];\n    }\n    return $displayName;\n}\n\nfunction MAX_buildName($id, $name)\n{\n    return htmlspecialchars($name);\n}\n\nfunction MAX_getEntityIcon($entity, $active=true, $type='', $marketAdvertiserid = '')\n{\n    include_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n    $icon = '';\n    switch ($entity) {\n        case 'advertiser' :\n            $do = OA_Dal::factoryDO('Clients');\n            switch($type) {\n                case DataObjects_Clients::ADVERTISER_TYPE_MARKET:\n                    $icon = 'images/icon-advertiser-openx.png';\n                break;\n                default:\n                    if($active) {\n                        $icon = 'images/icon-advertiser.gif';\n                    } else {\n                        $icon = 'images/icon-advertiser-d.gif';\n                    }\n                break;\n            }\n            break;\n\n        case 'placement'  :\n            $do = OA_Dal::factoryDO('Campaigns');\n            switch($type) {\n                case DataObjects_Campaigns::CAMPAIGN_TYPE_MARKET_CAMPAIGN_OPTIN:\n                case DataObjects_Campaigns::CAMPAIGN_TYPE_MARKET_CONTRACT:\n                case DataObjects_Campaigns::CAMPAIGN_TYPE_MARKET_ZONE_OPTIN:\n                    $icon = 'images/icon-campaigns-openx.png';\n                break;\n\n                default:\n                    if($active) {\n                        $icon = 'images/icon-campaign.gif';\n                    } else {\n                        $icon = 'images/icon-campaign-d.gif';\n                    }\n                break;\n                }\n            break;\n        case 'publisher'  : $icon = 'images/icon-affiliate.gif'; break;\n        case 'ad' :\n            switch ($type) {\n                case 'html' : $icon = $active ? 'images/icon-banner-html.gif' : 'images/icon-banner-html-d.gif'; break;\n                case 'txt'  : $icon = $active ? 'images/icon-banner-text.gif' : 'images/icon-banner-text-d.gif'; break;\n                case 'url'  : $icon = $active ? 'images/icon-banner-url.gif' : 'images/icon-banner-url-d.gif'; break;\n                case 'web'  : $icon = $active ? 'images/icon-banner-stored.gif' : 'images/icon-banner-stored-d.gif'; break;\n                default     : $icon = $active ? 'images/icon-banner-stored.gif' : 'images/icon-banner-stored-d.gif'; break;\n            }\n            break;\n        case 'zone'       :\n            switch ($type) {\n                case MAX_ZoneMarketMigrated  : $icon = 'images/icon-advertiser-openx.png'; break;\n                case phpAds_ZoneBanner       : $icon = 'images/icon-zone.gif'; break;\n                case phpAds_ZoneInterstitial : $icon = 'images/icon-interstitial.gif'; break;\n                case phpAds_ZonePopup        : $icon = 'images/icon-popup.gif'; break;\n                case phpAds_ZoneText         : $icon = 'images/icon-textzone.gif'; break;\n                case MAX_ZoneEmail           : $icon = 'images/icon-zone-email.gif'; break;\n                case MAX_ZoneClick           : $icon = 'images/icon-zone-click.gif'; break;\n                default                      : $icon = 'images/icon-zone.gif'; break;\n            }\n            break;\n    }\n    return substr($icon,0,4) == 'http' ? $icon : (OX::assetPath() . \"/\" . $icon);\n}\n\nfunction MAX_displayZoneHeader($pageName, $listorder, $orderdirection, $entityIds=null, $anonymous=false)\n{\n    global $phpAds_TextAlignRight;\n    $column1 = _getHtmlHeaderColumn($GLOBALS['strName'], 'name', $pageName, $entityIds, $listorder, $orderdirection);\n    $column2 = _getHtmlHeaderColumn($GLOBALS['strID'], 'id', $pageName, $entityIds, $listorder, $orderdirection, ($anonymous == false));\n    $column3 = _getHtmlHeaderColumn($GLOBALS['strDescription'], 'description', $pageName, $entityIds, $listorder, $orderdirection);\n    echo \"\n    <tr height='1'>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='300' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td width='100%'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n    </tr>\n    <tr height='25'>\n        <td>$column1</td>\n        <td>$column2</td>\n        <td>$column3</td>\n    </tr>\n    <tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n}\n\nfunction MAX_displayStatsHeader($pageName, $listorder, $orderdirection, $entityIds=null, $anonymous=false)\n{\n    global $phpAds_TextAlignRight;\n    $column1 = _getHtmlHeaderColumn($GLOBALS['strName'], 'name', $pageName, $entityIds, $listorder, $orderdirection);\n    $column2 = _getHtmlHeaderColumn($GLOBALS['strID'], 'id', $pageName, $entityIds, $listorder, $orderdirection, ($anonymous == false));\n    $column3 = _getHtmlHeaderColumn($GLOBALS['strRequests'], 'sum_requests', $pageName, $entityIds, $listorder, $orderdirection);\n    $column4 = _getHtmlHeaderColumn($GLOBALS['strImpressions'], 'sum_views', $pageName, $entityIds, $listorder, $orderdirection);\n    $column5 = _getHtmlHeaderColumn($GLOBALS['strClicks'], 'sum_clicks', $pageName, $entityIds, $listorder, $orderdirection);\n    $column6 = _getHtmlHeaderColumn($GLOBALS['strCTRShort'], 'ctr', $pageName, $entityIds, $listorder, $orderdirection);\n    $column7 = _getHtmlHeaderColumn($GLOBALS['strConversions'], 'sum_conversions', $pageName, $entityIds, $listorder, $orderdirection);\n    $column8 = _getHtmlHeaderColumn($GLOBALS['strCNVRShort'], 'cnvr', $pageName, $entityIds, $listorder, $orderdirection);\n    echo \"\n    <tr height='1'>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='200' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n    </tr>\n    <tr height='25'>\n        <td width='30%'>$column1</td>\n        <td align='$phpAds_TextAlignRight'>$column2</td>\n        <td align='$phpAds_TextAlignRight'>$column3</td>\n        <td align='$phpAds_TextAlignRight'>$column4</td>\n        <td align='$phpAds_TextAlignRight'>$column5</td>\n        <td align='$phpAds_TextAlignRight'>$column6</td>\n        <td align='$phpAds_TextAlignRight'>$column7</td>\n        <td align='$phpAds_TextAlignRight'>$column8</td>\n    </tr>\n    <tr height='1'><td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n}\n\nfunction MAX_displayStatsHistoryHeader($pageName, $listorder, $orderdirection, $entityIds=null)\n{\n    global $phpAds_TextAlignRight;\n    $column1 = _getHtmlHeaderColumn($GLOBALS['strDays'], 'name', $pageName, $entityIds, $listorder, $orderdirection);\n    $column2 = _getHtmlHeaderColumn($GLOBALS['strImpressions'], 'sum_views', $pageName, $entityIds, $listorder, $orderdirection);\n    $column3 = _getHtmlHeaderColumn($GLOBALS['strClicks'], 'sum_clicks', $pageName, $entityIds, $listorder, $orderdirection);\n    $column4 = _getHtmlHeaderColumn($GLOBALS['strCTRShort'], 'ctr', $pageName, $entityIds, $listorder, $orderdirection);\n    $column5 = _getHtmlHeaderColumn($GLOBALS['strConversions'], 'sum_conversions', $pageName, $entityIds, $listorder, $orderdirection);\n    $column6 = _getHtmlHeaderColumn($GLOBALS['strCNVRShort'], 'cnvr', $pageName, $entityIds, $listorder, $orderdirection);\n    echo \"\n        <table border='0' cellpadding='0' cellspacing='0' width='100%'>\n        <tr height='1'>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='200' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n            <td><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='80' height='1' border='0' alt='' title=''></td>\n        </tr>\n        <tr height='25'>\n            <td width='30%'>$column1</td>\n            <td align='$phpAds_TextAlignRight'>$column2</td>\n            <td align='$phpAds_TextAlignRight'>$column3</td>\n            <td align='$phpAds_TextAlignRight'>$column4</td>\n            <td align='$phpAds_TextAlignRight'>$column5</td>\n            <td align='$phpAds_TextAlignRight'>$column6</td>\n        </tr>\n        <tr height='1'><td colspan='7' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\n    \";\n}\n\nfunction MAX_displayNoStatsMessage()\n{\n    echo \"\n    <br /><br /><div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/info.gif' width='16' height='16' border='0' align='absmiddle'>{$GLOBALS['strNoStats']}</div>\";\n}\n\nfunction _getHtmlHeaderColumn($title, $name, $pageName, $entityIds, $listorder, $orderdirection, $showColumn = true)\n{\n    $str = '';\n    $entity = _getEntityString($entityIds);\n    if ($listorder == $name) {\n        if (($orderdirection == '') || ($orderdirection == 'down')) {\n            $str = \"<a href='$pageName?{$entity}orderdirection=up'><img src='\" . OX::assetPath() . \"/images/caret-ds.gif' border='0' alt='' title=''></a>\";\n        } else {\n            $str = \"<a href='$pageName?{$entity}orderdirection=down'><img src='\" . OX::assetPath() . \"/images/caret-u.gif' border='0' alt='' title=''></a>\";\n        }\n    }\n    return $showColumn ? \"<b><a href='$pageName?{$entity}listorder=$name'>$title</a>$str</b>\" : '';\n}\n\nfunction _getEntityString($entityIds)\n{\n    $entity = '';\n    if (!empty($entityIds)) {\n        $entityArr = array();\n        foreach ($entityIds as $entityId => $entityValue) {\n            $entityArr[] = \"$entityId=$entityValue\";\n        }\n        $entity = implode('&',$entityArr) . '&';\n    }\n\n    return $entity;\n}\n\nfunction MAX_displayDateSelectionForm($period, $period_start, $period_end, $pageName, &$tabindex, $hiddenValues = null)\n{\n    global $tabindex;\n    require_once MAX_PATH . '/lib/max/Admin/UI/FieldFactory.php';\n\n    $oDaySpan =& FieldFactory::newField('day-span');\n    $oDaySpan->_name = 'period';\n    $oDaySpan->_autoSubmit = true;\n    $oDaySpan->setValueFromArray(array('period_preset' => $period, 'period_start' => $period_start, 'period_end' => $period_end));\n    $oDaySpan->_tabIndex = $tabindex;\n    echo \"\n    <form id='period_form' name='period_form' action='$pageName'>\";\n    $oDaySpan->display();\n    $tabindex = $oDaySpan->_tabIndex;\n    echo \"\n    <input type='button' value='Go' onclick='return periodFormSubmit()' style='margin-left: 1em' tabindex='\".$tabindex++.\"' />\";\n    _displayHiddenValues($hiddenValues);\n    echo \"\n    </form>\";\n}\n\nfunction _displayHiddenValues($hiddenValues)\n{\n    if (!empty($hiddenValues) && is_array($hiddenValues)) {\n        foreach ($hiddenValues as $name => $value) {\n            echo \"\n    <input type='hidden' name='$name' value='$value'>\";\n        }\n    }\n}\n\nfunction MAX_displayPeriodSelectionForm($period, $pageName, &$tabindex, $hiddenValues = null)\n{\n    global $phpAds_TextDirection;\n\n    echo \"\n    <form action='$pageName'>\n    <select name='period' onChange='this.form.submit();' tabindex='\". $tabindex++ .\"'>\n        <option value='daily'\".($period == 'daily' ? ' selected' : '').\">{$GLOBALS['strDailyHistory']}</option>\n        <option value='w'\".($period == 'weekly' ? ' selected' : '').\">{$GLOBALS['strWeeklyHistory']}</option>\n        <option value='m'\".($period == 'monthly' ? ' selected' : '').\">{$GLOBALS['strMonthlyHistory']}</option>\n    </select>\n    &nbsp;&nbsp;\n    <input type='image' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif' border='0' name='submit'>\n    &nbsp;\";\n    _displayHiddenValues($hiddenValues);\n    echo \"\n    </form>\n    \";\n}\n\nfunction MAX_displayHistoryStatsDaily($aHistoryStats, $aTotalHistoryStats, $pageName, $hiddenValues = null)\n{\n    $i = 0;\n    $entity = _getEntityString($hiddenValues);\n    foreach ($aHistoryStats as $day => $stats) {\n        $bgColor = ($i++ % 2 == 0) ? '#F6F6F6' : '#FFFFFF';\n        $views = phpAds_formatNumber($stats['sum_views']);\n        $clicks = phpAds_formatNumber($stats['sum_clicks']);\n        $conversions = phpAds_formatNumber($stats['sum_conversions']);\n        $ctr = phpAds_buildRatioPercentage($stats['sum_clicks'], $stats['sum_views']);\n        $cnvr = phpAds_buildRatioPercentage($stats['sum_conversions'], $stats['sum_clicks']);\n        echo \"\n        <tr height='25' bgcolor='$bgColor'>\n            <td>&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-date.gif' align='absmiddle' alt=''>&nbsp;<a href='$pageName?{$entity}'>$day</a></td>\n            <td align='right'>$views</td>\n            <td align='right'>$clicks</td>\n            <td align='right'>$ctr</td>\n            <td align='right'>$conversions</td>\n            <td align='right'>$cnvr</td>\n        </tr>\n        <tr><td height='1' colspan='6' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%' alt=''></td></tr>\n        \";\n    }\n    echo \"\n    </table>\";\n}\n\nfunction MAX_displayPublisherZoneStats($aParams, $pageName, $anonymous, $aNodes, $expand, $listorder, $orderdirection, $hideinactive, $showPublisher, $entityIds)\n{\n    global $phpAds_TextAlignLeft, $phpAds_TextAlignRight, $phpAds_TextDirection;\n\n    // Get the icons for all levels (publisher/zone)\n    $entity = _getEntityString($entityIds);\n    $publishersHidden = 0;\n\n    $aPublishers = Admin_DA::fromCache('getPublishersStats', $aParams);\n    if (!empty($aPublishers)) {\n        echo \"\n        <br /><br />\n        <table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n        MAX_displayStatsHeader($pageName, $listorder, $orderdirection, $entityIds);\n\n        // Variable to determine if the row should be grey or white...\n        $i=0;\n\n        // Loop through publishers\n        $totalRequests = 0;\n        $totalViews = 0;\n        $totalClicks = 0;\n        $totalConversions = 0;\n        MAX_sortArray($aPublishers, ($listorder == 'id' ? 'publisher_id' : $listorder), $orderdirection == 'up');\n        foreach($aPublishers as $publisherId => $publisher) {\n            $publisherRequests = phpAds_formatNumber($publisher['sum_requests']);\n            $publisherViews = phpAds_formatNumber($publisher['sum_views']);\n            $publisherClicks = phpAds_formatNumber($publisher['sum_clicks']);\n            $publisherConversions = phpAds_formatNumber($publisher['sum_conversions']);\n            $publisherCtr = phpAds_buildRatioPercentage($publisher['sum_clicks'], $publisher['sum_views']);\n            $publisherSr = phpAds_buildRatioPercentage($publisher['sum_conversions'], $publisher['sum_clicks']);\n            $publisherExpanded = MAX_isExpanded($publisherId, $expand, $aNodes, 'p');\n            $publisherActive = true;\n            $publisherIcon = MAX_getEntityIcon('publisher', $publisherActive);\n\n            if (!$hideinactive || $publisherActive) {\n                $bgcolor = ($i++ % 2 == 0) ? \" bgcolor='#F6F6F6'\" : '';\n                echo \"\n            <tr height='25'$bgcolor>\n                <td>\";\n                if (!empty($publisher['num_children'])) {\n                    if ($publisherExpanded)\n                        echo \"&nbsp;<a href='$pageName?{$entity}collapse=p$publisherId'><img src='\" . OX::assetPath() . \"/images/triangle-d.gif' align='absmiddle' border='0'></a>&nbsp;\";\n                    else\n                        echo \"&nbsp;<a href='$pageName?{$entity}expand=p$publisherId'><img src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/triangle-l.gif' align='absmiddle' border='0'></a>&nbsp;\";\n                }\n                else\n                    echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/spacer.gif' height='16' width='16'>&nbsp;\";\n\n                echo \"\n                    <img src='$publisherIcon' align='absmiddle'>&nbsp;\n                    <a href='stats.php?entity=affiliate&breakdown=history&affiliateid=$publisherId'>{$publisher['name']}</a>\n                </td>\";\n                if ($anonymous) {\n                    echo \"\n                <td align='$phpAds_TextAlignRight'>&nbsp;</td>\";\n                } else {\n                    echo \"\n                <td align='$phpAds_TextAlignRight'>$publisherId</td>\";\n                    }\n                    echo \"\n                <td align='$phpAds_TextAlignRight'>$publisherRequests</td>\n                <td align='$phpAds_TextAlignRight'>$publisherViews</td>\n                <td align='$phpAds_TextAlignRight'>$publisherClicks</td>\n                <td align='$phpAds_TextAlignRight'>$publisherCtr</td>\n                <td align='$phpAds_TextAlignRight'>$publisherConversions</td>\n                <td align='$phpAds_TextAlignRight'>$publisherSr</td>\n            </tr>\";\n\n                if (!empty($publisher['num_children']) && $publisherExpanded) {\n                    echo \"\n            <tr height='1'>\n                <td$bgcolor><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\n                <td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\n            </tr>\";\n\n\n                    // Loop through zones\n                    $aZones = Admin_DA::fromCache('getZonesStats', $aParams);\n                    MAX_sortArray($aZones, ($listorder == 'id' ? 'zone_id' : $listorder), $orderdirection == 'up');\n                    foreach ($aZones as $zoneId => $zone) {\n                        $zoneRequests = phpAds_formatNumber($zone['sum_requests']);\n                        $zoneViews = phpAds_formatNumber($zone['sum_views']);\n                        $zoneClicks = phpAds_formatNumber($zone['sum_clicks']);\n                        $zoneConversions = phpAds_formatNumber($zone['sum_conversions']);\n                        $zoneCtr = phpAds_buildRatioPercentage($zone['sum_clicks'], $zone['sum_views']);\n                        $zoneSr = phpAds_buildRatioPercentage($zone['sum_conversions'], $zone['sum_clicks']);\n                        $zoneActive = true;\n                        $zoneIcon = MAX_getEntityIcon('zone', $zoneActive, $zone['type']);\n\n                        echo \"\n            <tr height='25'$bgcolor>\n                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <img src='\" . OX::assetPath() . \"/images/spacer.gif' height='16' width='16' align='absmiddle'>&nbsp;\n                    <img src='$zoneIcon' align='absmiddle'>&nbsp;\n                    <a href='stats.php?entity=zone&breakdown=history&affiliateid=$publisherId&zoneid=$zoneId'>{$zone['name']}</a>\n                </td>\n                <td align='$phpAds_TextAlignRight'>$zoneId</td>\n                <td align='$phpAds_TextAlignRight'>$zoneRequests</td>\n                <td align='$phpAds_TextAlignRight'>$zoneViews</td>\n                <td align='$phpAds_TextAlignRight'>$zoneClicks</td>\n                <td align='$phpAds_TextAlignRight'>$zoneCtr</td>\n                <td align='$phpAds_TextAlignRight'>$zoneConversions</td>\n                <td align='$phpAds_TextAlignRight'>$zoneSr</td>\n            </tr>\";\n                    }\n                }\n                echo \"\n                <tr height='1'><td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n            } else {\n                $publishersHidden++;\n            }\n            $totalRequests += $publisher['sum_requests'];\n            $totalViews += $publisher['sum_views'];\n            $totalClicks += $publisher['sum_clicks'];\n            $totalConversions += $publisher['sum_conversions'];\n        }\n\n        // Total\n        echo \"\n        <tr height='25'$bgcolor>\n            <td>&nbsp;&nbsp;<b>{$GLOBALS['strTotal']}</b></td>\n            <td>&nbsp;</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalRequests).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalViews).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalViews, $totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalConversions).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalClicks, $totalConversions).\"</td>\n        </tr>\n        <tr height='1'>\n            <td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n        </tr>\";\n        if (!$anonymous) {\n            $publisherIcon = MAX_getEntityIcon('publisher');\n            echo \"\n        <tr>\n            <td colspan='4' align='$phpAds_TextAlignLeft' nowrap>\";\n\n            if ($hideinactive == true) {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-activate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=0'>{$GLOBALS['strShowAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;$publishersHidden {$GLOBALS['strInactivePublishersHidden']}\";\n            } else {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-hideinactivate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=1'>{$GLOBALS['strHideInactivePublishers']}</a>\";\n            }\n\n            echo \"\n            </td>\n            <td colspan='4' align='$phpAds_TextAlignRight' nowrap><img src='\" . OX::assetPath() . \"/images/triangle-d.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=all' accesskey='$keyExpandAll'>{$GLOBALS['strExpandAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/triangle-l.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=none' accesskey='$keyCollapseAll'>{$GLOBALS['strCollapseAll']}</a>&nbsp;&nbsp;</td>\n        </tr>\n        <tr height='25'>\";\n            if ($showPublisher == 't') {\n                echo \"\n            <td colspan='8' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='$publisherIcon' align='absmiddle'><a href='$pageName?{$entity}showpublisher=f'> Hide parent publisher</a></td>\";\n            } else {\n                echo \"\n            <td colspan='8' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='$publisherIcon' align='absmiddle'><a href='$pageName?{$entity}showpublisher=t'> Show parent publisher</a></td>\";\n            }\n            echo \"\n        </tr>\";\n        }\n        echo \"\n        </table>\n        <br /><br />\";\n    } else {\n        MAX_displayNoStatsMessage();\n    }\n}\n\nfunction MAX_displayZoneStats($aParams, $pageName, $anonymous, $aNodes, $expand, $listorder, $orderdirection, $hideinactive, $showPublisher, $entityIds)\n{\n    global $phpAds_TextAlignLeft, $phpAds_TextAlignRight, $phpAds_TextDirection;\n\n    // Get the icons for all levels (publisher/zone)\n    $entity = _getEntityString($entityIds);\n    $publishersHidden = 0;\n\n    $aZones = Admin_DA::fromCache('getZonesStats', $aParams);\n    if (!empty($aZones)) {\n        echo \"\n        <br /><br />\n        <table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n        MAX_displayStatsHeader($pageName, $listorder, $orderdirection, $entityIds, $anonymous);\n\n        // Variable to determine if the row should be grey or white...\n        $i=0;\n        $totalRequests = 0;\n        $totalViews = 0;\n        $totalClicks = 0;\n        $totalConversions = 0;\n\n        // Loop through publishers\n        MAX_sortArray($aZones, ($listorder == 'id' ? 'zone_id' : $listorder), $orderdirection == 'up');\n        foreach($aZones as $zoneId => $zone) {\n            $zoneRequests = phpAds_formatNumber($zone['sum_requests']);\n            $zoneViews = phpAds_formatNumber($zone['sum_views']);\n            $zoneClicks = phpAds_formatNumber($zone['sum_clicks']);\n            $zoneConversions = phpAds_formatNumber($zone['sum_conversions']);\n            $zoneCtr = phpAds_buildRatioPercentage($zone['sum_clicks'], $zone['sum_views']);\n            $zoneSr = phpAds_buildRatioPercentage($zone['sum_conversions'], $zone['sum_clicks']);\n            $zoneActive = true;\n            $zoneIcon = MAX_getEntityIcon('zone', $zoneActive, $zone['type']);\n\n            if (!$hideinactive || $zoneActive) {\n                $bgcolor = ($i++ % 2 == 0) ? \" bgcolor='#F6F6F6'\" : '';\n                echo \"\n        <tr height='25'$bgcolor>\n            <td>&nbsp;<img src='\" . OX::assetPath() . \"/images/spacer.gif' height='16' width='16'>&nbsp;\n                <img src='$zoneIcon' align='absmiddle'>&nbsp;\";\n                if ($anonymous) {\n                    echo \"\n                Hidden zone {$zone['id']}\";\n                } else {\n                    echo \"\n                <a href='stats.php?entity=zone&breakdown=history&affiliateid={$zone['publisher_id']}'>{$zone['name']}</a>\";\n                }\n                echo \"\n            </td>\";\n                if ($anonymous) {\n                    echo \"\n            <td align='$phpAds_TextAlignRight'>&nbsp;</td>\";\n                } else {\n                    echo \"\n            <td align='$phpAds_TextAlignRight'>$zoneId</td>\";\n                }\n                echo \"\n            <td align='$phpAds_TextAlignRight'>$zoneRequests</td>\n            <td align='$phpAds_TextAlignRight'>$zoneViews</td>\n            <td align='$phpAds_TextAlignRight'>$zoneClicks</td>\n            <td align='$phpAds_TextAlignRight'>$zoneCtr</td>\n            <td align='$phpAds_TextAlignRight'>$zoneConversions</td>\n            <td align='$phpAds_TextAlignRight'>$zoneSr</td>\n        </tr>\n        <tr height='1'><td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n            } else {\n                $publishersHidden++;\n            }\n            $totalRequests += $zone['sum_requests'];\n            $totalViews += $zone['sum_views'];\n            $totalClicks += $zone['sum_clicks'];\n            $totalConversions += $zone['sum_conversions'];\n        }\n\n        // Total\n        echo \"\n        <tr height='25'$bgcolor>\n            <td>&nbsp;&nbsp;<b>{$GLOBALS['strTotal']}</b></td>\n            <td>&nbsp;</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalRequests).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalViews).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalViews, $totalClicks).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_formatNumber($totalConversions).\"</td>\n            <td align='$phpAds_TextAlignRight'>\".phpAds_buildCTR($totalClicks, $totalConversions).\"</td>\n        </tr>\n        <tr height='1'>\n            <td colspan='8' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n        </tr>\";\n        if (!$anonymous) {\n            echo \"\n        <tr>\n            <td colspan='4' align='$phpAds_TextAlignLeft' nowrap>\";\n\n            if ($hideinactive == true) {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-activate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=0'>{$GLOBALS['strShowAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;$publishersHidden {$GLOBALS['strInactivePublishersHidden']}\";\n            } else {\n                echo \"&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-hideinactivate.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}hideinactive=1'>{$GLOBALS['strHideInactivePublishers']}</a>\";\n            }\n\n            echo \"\n            </td>\n            <td colspan='4' align='$phpAds_TextAlignRight' nowrap><img src='\" . OX::assetPath() . \"/images/triangle-d.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=all'>{$GLOBALS['strExpandAll']}</a>&nbsp;&nbsp;|&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/triangle-l.gif' align='absmiddle' border='0'>&nbsp;<a href='$pageName?{$entity}expand=none'>{$GLOBALS['strCollapseAll']}</a>&nbsp;&nbsp;</td>\n        </tr>\n        <tr height='25'>\";\n            if ($showPublisher == 't') {\n                echo \"\n            <td colspan='7' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-affiliate.gif' align='absmiddle'><a href='$pageName?{$entity}showpublisher=f'> Hide parent publisher</a></td>\";\n            } else {\n                echo \"\n            <td colspan='7' align='$phpAds_TextAlignLeft' nowrap>&nbsp;&nbsp;<img src='\" . OX::assetPath() . \"/images/icon-affiliate.gif' align='absmiddle'><a href='$pageName?{$entity}showpublisher=t'> Show parent publisher</a></td>\";\n            }\n            echo \"\n        </tr>\";\n        }\n        echo \"\n        </table>\n        <br /><br />\";\n    } else {\n        MAX_displayNoStatsMessage();\n    }\n}\n\nfunction MAX_displayInventoryBreadcrumbs($aEntityNamesUrls, $entityClass, $newEntity = false)\n{\n    MAX_displayInventoryBreadcrumbsInternal($aEntityNamesUrls, MAX_buildBreadcrumbPath($entityClass), $newEntity);\n}\n\nfunction MAX_displayInventoryBreadcrumbsInternal($aEntityNamesUrls, $breadcrumbPath, $newEntity = false)\n{\n    global $phpAds_breadcrumbs;\n\n    $path = array();\n\n    // Breadcrumbs above the main title\n    for ($i = 0; $i < count($aEntityNamesUrls); $i++) {\n    \t$breadcrumbInfo = MAX_buildBreadcrumbInfo($breadcrumbPath[$i]);\n\n        $path[] = array(\n            'name' => $aEntityNamesUrls[$i][\"name\"],\n            'url' => $aEntityNamesUrls[$i][\"url\"],\n            'label' => ($newEntity && $i == count($aEntityNamesUrls) -1 ? $breadcrumbInfo['newLabel'] : $breadcrumbInfo['label']),\n            'newTarget' => $breadcrumbInfo['newTarget'],\n            'cssClass' => $breadcrumbInfo['class']\n        );\n    }\n\n    $phpAds_breadcrumbs = array(\n        'path' => $path,\n        'newEntity' => $newEntity\n    );\n}\n\nfunction MAX_buildBreadcrumbInfo($entityClass)\n{\n\tswitch ($entityClass)\n\t{\n\t\tcase 'advertiser':\n\t       return array(\"label\" => $GLOBALS['strClient'], \"newLabel\" => $GLOBALS['strAddClient'], \"class\" => \"adv\");\n\n\t\tcase 'campaign':\n\t       return array(\"label\" => $GLOBALS['strCampaign'], \"newLabel\" => $GLOBALS['strAddCampaign'], \"newTarget\" => $GLOBALS['strCampaignForAdvertiser'], \"class\" => \"camp\");\n\n\t\tcase 'tracker':\n\t       return array(\"label\" => $GLOBALS['strTracker'], \"newLabel\" => $GLOBALS['strAddTracker'], \"newTarget\" => $GLOBALS['strTrackerForAdvertiser'], \"class\" => \"track\");\n\n\t\tcase 'banner':\n\t       return array(\"label\" => $GLOBALS['strBanner'], \"newLabel\" => $GLOBALS['strAddBanner'], \"newTarget\" => $GLOBALS['strBannerToCampaign'], \"class\" => \"ban\");\n\n\t\tcase 'website':\n\t       return array(\"label\" => $GLOBALS['strAffiliate'], \"newLabel\" => $GLOBALS['strAddNewAffiliate'], \"class\" => \"webs\");\n\n\t\tcase 'zone':\n            return array(\"label\" => $GLOBALS['strZone'], \"newLabel\" => $GLOBALS['strAddNewZone'], \"newTarget\" => $GLOBALS['strZoneToWebsite'], \"class\" => \"zone\");\n\n\t\tcase 'channel':\n\t       return array(\"label\" => $GLOBALS['strChannel'], \"newLabel\" => $GLOBALS['strAddNewChannel'], \"newTarget\" => $GLOBALS['strChannelToWebsite'], \"class\" => \"chan\");\n\n\t\tcase 'agency':\n\t       return array(\"label\" => $GLOBALS['strAgency'], \"newLabel\" => $GLOBALS['strAddAgency'], \"class\" => \"agen\");\n\n\t\tcase 'day':\n\t       return array(\"label\" => $GLOBALS['strDay'], \"newLabel\" => '', \"class\" => \"day\");\n\t}\n\n\treturn null;\n}\n\nfunction MAX_buildBreadcrumbPath($entityClass)\n{\n\tswitch ($entityClass)\n\t{\n\t\tcase 'banner':\n\t\tcase 'campaign':\n\t\tcase 'advertiser':\n\t\t\treturn array('advertiser', 'campaign', 'banner');\n\n\t\tcase 'tracker':\n\t\t\treturn array('advertiser', 'tracker');\n\n\t\tcase 'website':\n\t\tcase 'zone':\n\t\t\treturn array('website', 'zone');\n\n\t\tcase 'trafficker-zone':\n\t\t\treturn array('zone');\n\n\t\tcase 'channel':\n\t\t\treturn array('website', 'channel');\n\n\t\tcase 'global-channel':\n\t\t\treturn array('channel');\n\n\t\tcase 'agency':\n\t\t\treturn array('agency');\n\t}\n\n\treturn null;\n}\n\n/**\n * Builds header model for advertiser edit page tabs\n *\n * @param mixed $idOrAdvertiser - either advertiser id or advertiser array\n * @return OA_Admin_UI_Model_PageHeaderModel\n */\nfunction buildAdvertiserHeaderModel($idOrAdvertiser)\n{\n    if (is_array($idOrAdvertiser)) {\n        $aAdvertiser = $idOrAdvertiser;\n    }\n    else if (!empty($idOrAdvertiser)) {\n        $aAdvertiser = phpAds_getClientDetails($idOrAdvertiser);\n    }\n    else {\n        $aAdvertiser = array();\n    }\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $pageType = empty($aAdvertiser['clientid']) ? 'edit-new' : 'edit';\n\n    $oHeaderModel = $builder->buildEntityHeader(array(\n        array(\"name\" => $aAdvertiser['clientname'])),\n        \"advertiser\", $pageType);\n    return $oHeaderModel;\n}\n\nfunction MAX_displayTrackerBreadcrumbs($clientid, $trackerid = null)\n{\n\tif ($trackerid) {\n        $parentClientId = phpAds_getTrackerParentClientID($trackerid);\n        $tracker = phpAds_getTrackerDetails($trackerid);\n        $trackerName = $tracker['trackername'];\n        $pageType = 'edit';\n\t}\n\telse {\n\t\t$parentClientId = $clientid;\n\t\t$trackerName = \"\";\n\t\t$pageType = 'edit-new';\n\t}\n    $advertiserEditUrl = \"advertiser-edit.php?clientid=$parentClientId\";\n    $advertiser = phpAds_getClientDetails($parentClientId);\n    $advertiserName = $advertiser['clientname'];\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                        array(\"name\" => $advertiserName, \"url\" => $advertiserEditUrl),\n                                        array(\"name\" => $trackerName)),\n                                        'tracker', $pageType);\n\n    return $oHeaderModel;\n}\n\nfunction MAX_displayWebsiteBreadcrumbs($affiliateid)\n{\n\tif ($affiliateid) {\n\t\t$publisher = Admin_DA::getPublisher($affiliateid);\n        $websiteName = $publisher['name'];\n        $pageType = \"edit\";\n\t}\n\telse {\n\t\t$websiteName = \"\";\n\t\t$pageType = \"edit-new\";\n\t}\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n\t    array(\"name\" => $websiteName)), \"website\", $pageType);\n\n\treturn $oHeaderModel;\n}\n\n\n\n\nfunction MAX_displayNavigationPublisher($pageName, $aOtherPublishers, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    $publisherId = $aEntities['affiliateid'];\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['affiliateid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n\n    // Determine which tab is highlighted\n    switch ($pageName) {\n        case 'affiliate-channels.php' : $tabValue = '4.2.4'; break;\n    }\n\n    // Sort the publishers by name...\n    require_once(MAX_PATH . '/lib/max/other/stats.php');\n    MAX_displayInventoryBreadcrumbs(array(array(\"name\" => $publisherName)), \"website\");\n    phpAds_PageHeader($tabValue, $extra = '');\n}\n\n\nfunction MAX_displayZoneEntitySelection($entity, $aOtherAdvertisers, $aOtherPlacements, $aOtherAds, $advertiserId, $placementId, $adId, $publisherId, $zoneId, $title, $pageName, &$tabIndex)\n{\n    echo \"\n<br />$title<br /><br />\n<table cellpadding='0' cellspacing='0' border='0'>\n<tr>\";\n    $aSavedEntities = array('affiliateid' => $publisherId, 'zoneid' => $zoneId);\n    _displayZoneEntitySelectionCell('advertiser', $advertiserId, $aOtherAdvertisers, 'clientid', $aSavedEntities, ($entity != 'advertiser'), $pageName, $tabIndex);\n\n    if (!empty($advertiserId) && $entity != 'advertiser') {\n        $aSavedEntities['clientid'] = $advertiserId;\n        _displayZoneEntitySelectionCell('placement', $placementId, $aOtherPlacements, 'campaignid', $aSavedEntities, ($entity != 'placement'), $pageName, $tabIndex);\n\n        if (!empty($placementId) && $entity != 'placement') {\n            $aSavedEntities['campaignid'] = $placementId;\n            _displayZoneEntitySelectionCell('ad', $adId, $aOtherAds, 'bannerid', $aSavedEntities, ($entity != 'ad'), $pageName, $tabIndex);\n        }\n    }\n    echo \"\n</tr>\n</table>\n<br /><br />\";\n}\n\nfunction _displayZoneEntitySelectionCell($entity, $entityId, $aOtherEntities, $entityIdName, $aSavedEntities, $autoSubmit, $pageName, &$tabIndex)\n{\n    global $phpAds_TextDirection;\n\n    $onChange = $autoSubmit ? \" onChange='this.form.submit();'\" : '';\n    $submitIcon = $autoSubmit ? '' : \"&nbsp;<input type='hidden' name='action' value='set'><input id='link_submit' name='submitimage' id='submitimage' type='image' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif' border='0' tabindex='\".($tabIndex++).\"'>\";\n    $tabInfo = \" tabindex='\" . ($tabIndex++) . \"'\";\n    $entityIcon = MAX_getEntityIcon($entity);\n    echo \"\n<td>\n<form name='zonetypeselection' method='get' action='$pageName'>\";\n    foreach($aSavedEntities as $savedEntityName => $savedEntityId) {\n        echo \"\n<input type='hidden' name='$savedEntityName' value='$savedEntityId'>\";\n    }\n    echo \"\n    &nbsp;&nbsp;<img src='$entityIcon' align='absmiddle'>&nbsp;\n    <select name='$entityIdName'{$onChange}{$tabInfo}>\";\n    // Show an empty value in the dropdown if none is selected\n    if (empty($entityId)) {\n        switch ($entity) {\n            case 'advertiser' : $description = \"-- {$GLOBALS['strSelectAdvertiser']} --\"; break;\n            case 'placement'  : $description = \"-- {$GLOBALS['strSelectPlacement']} --\"; break;\n            case 'ad' : $description = \"-- {$GLOBALS['strSelectAd']} --\"; break;\n            default : $description = '';\n        }\n        echo \"\n        <option value='' selected>$description</option>\";\n    }\n\n    $aOtherEntities = _multiSort($aOtherEntities, 'name', 'advertiser_id');\n    foreach ($aOtherEntities as $aOtherEntity) {\n        switch ($entity) {\n            case 'advertiser':\n                $otherEntityId = $aOtherEntity['advertiser_id'];\n                break;\n            case 'placement':\n                $otherEntityId = $aOtherEntity['placement_id'];\n                break;\n            case 'ad':\n                $otherEntityId = $aOtherEntity['ad_id'];\n                break;\n        }\n        $selected = $otherEntityId == $entityId ? ' selected' : '';\n\n        $adsCount = '';\n        if ($entity == 'placement') {\n            $aParams = array('placement_id' => $otherEntityId);\n            $aParams += MAX_getLinkedAdParams($GLOBALS['zoneId']);\n\n            $doCampaign = OA_Dal::factoryDO('campaigns');\n            $doCampaign->campaignid = $otherEntityId;\n            $doCampaign->find();\n            $doCampaign->fetch();\n\n            if($doCampaign->type == DataObjects_Campaigns::CAMPAIGN_TYPE_DEFAULT) {\n                $translation = new OX_Translation();\n                $aStringParams[\"bannerCount\"] = count(Admin_DA::getAds($aParams));\n                $translated = $translation->translate($GLOBALS['strWithXBanners'], $aStringParams);\n                $adsCount = \"(\" .$translated.\")\";\n            }\n        }\n\n        $name = MAX_buildName($otherEntityId, $aOtherEntity['name']);\n        echo \"\n        <option value='$otherEntityId'{$selected}>\".$name.\" $adsCount</option>\";\n    }\n    echo \"\n    </select>\n    $submitIcon\n</form>\n</td>\";\n}\n\nfunction MAX_displayLinkedAdsPlacements($aParams, $publisherId, $zoneId, $hideInactive, $showParentPlacements, $pageName, &$tabIndex)\n{\n    global $phpAds_TextDirection, $phpAds_TextAlignRight;\n\n    echo \"\n<table id='linked-banners' width='100%' border='0' align='center' cellspacing='0' cellpadding='0'>\n<tr height='25'>\n<td width='40%'><b>&nbsp;&nbsp;{$GLOBALS['strName']}</b></td>\n<td><b>{$GLOBALS['strID']}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n<td>&nbsp;</td>\n</tr>\n<tr height='1'>\n<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n</tr>\";\n    $i = 0;\n    $inactive = 0;\n    $aPlacements = !empty($aParams) ? Admin_DA::getPlacements($aParams) : array();\n    foreach ($aPlacements as $placementId => $aPlacement) {\n        $aAds = Admin_DA::getAds($aParams + array('placement_id' => $placementId), true);\n        $placementActive = $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING;\n        if (!$hideInactive || $placementActive) {\n            $bgcolor = $i % 2 == 0 ? \" bgcolor='#F6F6F6'\" : '';\n            if ($showParentPlacements) {\n                $placementIcon = MAX_getEntityIcon('placement', $placementActive);\n                $placementName = MAX_getDisplayName($aPlacement['name']);\n                $placementLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='campaign-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId'>$placementName</a>\" : $placementName;\n                if ($i > 0) {\n                    echo \"\n<tr height='1'>\n<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\n</tr>\";\n            }\n            echo \"\n<tr height='25'$bgcolor>\n<td>\n    &nbsp;&nbsp;<img src='$placementIcon' align='absmiddle'>\n    &nbsp;$placementLink\n</td>\n<td>$placementId</td>\n<td>&nbsp;</td>\n</tr>\";\n            }\n            foreach ($aAds as $adId => $aAd) {\n                $adActive = ($aAd['status'] == OA_ENTITY_STATUS_RUNNING && $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING);\n                if (!$hideInactive || $adActive) {\n                    $adIcon = MAX_getEntityIcon('ad', $adActive, $aAd['type']);\n                    $adName = htmlspecialchars(MAX_getDisplayName($aAd['name']));\n                    $adLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='banner-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId&bannerid=$adId'>$adName</a>\" : $adName;\n                    $adWidth = $aAd['contenttype'] == 'txt' ? 300 : $aAd['width'] + 64;\n                    $adHeight = $aAd['contenttype'] == 'txt' ? 200 : $aAd['height'] + (!empty($aAd['bannertext']) ? 90 : 64);\n                    echo \"\n<tr height='1'>\n<td$bgcolor><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\n<td colspan='2' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-el.gif' height='1' width='100%'></td>\n</tr>\n<tr height='25'$bgcolor>\n<td>\n    &nbsp;&nbsp;<a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&bannerid=$adId&action=remove'><img src='\" . OX::assetPath() . \"/images/caret-l.gif' border='0' align='absmiddle'></a>\n    &nbsp;&nbsp;&nbsp;&nbsp;<img src='$adIcon' align='absmiddle'>&nbsp;$adLink</td>\n<td>$adId</td>\n<td align='$phpAds_TextAlignRight'>\n    <img src='\" . OX::assetPath() . \"/images/icon-zoom.gif' align='absmiddle' border='0'>&nbsp;<a href='banner-htmlpreview.php?bannerid=$adId' target='_new' onClick=\\\"return openWindow('banner-htmlpreview.php?bannerid=$adId', '', 'status=no,scrollbars=no,resizable=no,width=$adWidth,height=$adHeight');\\\">{$GLOBALS['strShowBanner']}</a>&nbsp;&nbsp;\n</td>\n</tr>\";\n                } else {\n                    $inactive++;\n                }\n            }\n            $i++;\n        } else {\n            $inactive += count($aAds);\n        }\n    }\n    $showParentText = $showParentPlacements ? $GLOBALS['strHideParentCampaigns'] : $GLOBALS['strShowParentCampaigns'];\n    $showParentValue = $showParentPlacements ? '0': '1';\n    $hideInactiveText = $hideInactive ? $GLOBALS['strShowAll'] : $GLOBALS['strHideInactiveBanners'];\n    $hideInactiveStats = $hideInactive ? \"&nbsp;&nbsp;|&nbsp;&nbsp;$inactive {$GLOBALS['strInactiveBannersHidden']}\" : '';\n    $hideInactiveValue = $hideInactive ? '0' : '1';\n    $hideInactiveIcon = OX::assetPath($hideInactive ? 'images/icon-activate.gif' : 'images/icon-hideinactivate.gif');\n    echo \"\n<tr height='1'>\n<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n</tr>\n<tr height='25'>\n<td colspan='2'>\n    <img src='$hideInactiveIcon' align='absmiddle' border='0'>\n    <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&hideinactive=$hideInactiveValue'>$hideInactiveText</a>$hideInactiveStats\n</td>\n<td align='right'>\n    <img src='\" . OX::assetPath() . \"/images/icon-campaign-d.gif' align='absmiddle' border='0'>\n    <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&showcampaigns=$showParentValue'>$showParentText</a>\n</table>\";\n}\n\nfunction MAX_displayLinkedPlacementsAds($aParams, $publisherId, $zoneId, $hideInactive, $showMatchingAds, $pageName, &$tabIndex, $directLinkedAds=false)\n    {\n        echo \"\n    <br /><strong>{$GLOBALS['strCampaignLinkedAds']}:</strong><br />\n    <table id='linked-campaigns' width='100%' border='0' align='center' cellspacing='0' cellpadding='0'>\n    <tr height='25'>\n        <td width='40%'><b>&nbsp;&nbsp;{$GLOBALS['strName']}</b></td>\n        <td width='20%'><b>&nbsp;&nbsp;{$GLOBALS['strType']}</b></td>\n        <td><b>{$GLOBALS['strID']}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\n        <td>&nbsp;</td>\n    </tr>\n    <tr height='1'>\n        <td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n    </tr>\";\n\n        $i = 0;\n        $inactive = 0;\n        $aPlacements = (!empty($aParams)) ? Admin_DA::getPlacements($aParams) : array();\n        foreach ($aPlacements as $placementId => $aPlacement) {\n            $placementActive = $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING;\n            if (!$hideInactive || $placementActive) {\n                $pParams = $aParams;\n                $pParams['placement_id'] = $placementId;\n                $aAds = Admin_DA::getAds($pParams, true);\n                $bgcolor = $i % 2 == 0 ? \" bgcolor='#F6F6F6'\" : '';\n                // Remove these ad(s) from the direct linked ads\n                foreach ($aAds as $dAdId) {\n                    unset($directLinkedAds[$dAdId['ad_id']]);\n                }\n\n                // Remove from array any ads not linked to the zone.\n                // These might exist if campaign has been linked to zone\n                // and indivual ads have then been unlinked\n                $pParams = array('zone_id' => $zoneId);\n                $aAdZones = Admin_DA::getAdZones($pParams, true);\n                $aAdZoneLinks = array();\n                foreach($aAdZones as $aAdZone) {\n                    $aAdZoneLinks[] = $aAdZone['ad_id'];\n                }\n                foreach($aAds as $adId => $aAd) {\n                    if (!in_array($adId, $aAdZoneLinks)) {\n                        unset($aAds[$adId]);\n                    }\n                }\n\n                $placementIcon = MAX_getEntityIcon('placement', $placementActive);\n                $placementName = htmlspecialchars(MAX_getDisplayName($aPlacement['name']));\n                $placementLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='campaign-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId'>$placementName</a>\" : $placementName;\n                $placementTypeName = OX_Util_Utils::getCampaignTypeName($aPlacement['priority']);\n                $adCount = empty($aAds) ? 0 : count($aAds);\n                $placementDescription = $showMatchingAds ? '&nbsp;' : str_replace('{count}', $adCount, $GLOBALS['strMatchingBanners']);\n                if ($i > 0) {\n                    echo \"\n    <tr height='1'>\n        <td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\n    </tr>\";\n                }\n                echo \"\n    <tr height='25'$bgcolor>\n        <td>\n            &nbsp;&nbsp;<a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&campaignid=$placementId&action=remove'><img src='\" . OX::assetPath() . \"/images/caret-l.gif' border='0' align='absmiddle'></a>\n            &nbsp;&nbsp;<img src='$placementIcon' align='absmiddle'>\n            &nbsp;$placementLink\n        </td>\n        <td><span class='campaign-type'>$placementTypeName</span></td>\n        <td>$placementId</td>\n        <td>$placementDescription</td>\n    </tr>\";\n                if ($showMatchingAds && !empty($aAds)) {\n                    foreach ($aAds as $adId => $aAd) {\n                        $adActive = ($aAd['status'] == OA_ENTITY_STATUS_RUNNING && $aPlacement['status'] == OA_ENTITY_STATUS_RUNNING);\n                        if (!$hideInactive || $adActive) {\n                            $adIcon = MAX_getEntityIcon('ad', $adActive, $aAd['type']);\n                            $adName = htmlspecialchars(MAX_getDisplayName($aAd['name']));\n                            $adLink = (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) ? \"<a href='banner-edit.php?clientid={$aPlacement['advertiser_id']}&campaignid=$placementId&bannerid=$adId'>$adName</a>\" : $adName;\n                            $adWidth = $aAd['contenttype'] == 'txt' ? 300 : $aAd['width'] + 64;\n                            $adHeight = $aAd['contenttype'] == 'txt' ? 200 : $aAd['height'] + (!empty($aAd['bannertext']) ? 90 : 64);\n                            echo \"\n    <tr height='1'>\n        <td$bgcolor><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\n        <td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-el.gif' height='1' width='100%'></td>\n    </tr>\n    <tr height='25'$bgcolor>\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src='$adIcon' align='absmiddle'>&nbsp;$adLink</td>\n        <td></td>\n        <td>$adId</td>\n        <td align=\".$GLOBALS['phpAds_TextAlignRight'].\">\n            <img src='\" . OX::assetPath() . \"/images/icon-zoom.gif' align='absmiddle' border='0'>&nbsp;<a href='banner-htmlpreview.php?bannerid=$adId' target='_new' onClick=\\\"return openWindow('banner-htmlpreview.php?bannerid=$adId', '', 'status=no,scrollbars=no,resizable=no,width=$adWidth,height=$adHeight');\\\">{$GLOBALS['strShowBanner']}</a>&nbsp;&nbsp;\n        </td>\n    </tr>\";\n                        } else {\n                            $inactive++;\n                        }\n                    }\n                }\n                $i++;\n            } else {\n                $inactive++;\n            }\n        }\n        $showMatchingText = $showMatchingAds ? $GLOBALS['strHideMatchingBanners'] : $GLOBALS['strShowMatchingBanners'];\n        $showMatchingValue = $showMatchingAds ? '0' : '1';\n        $hideInactiveText = $hideInactive ? $GLOBALS['strShowAll'] : $GLOBALS['strHideInactiveCampaigns'];\n        $hideInactiveStats = $hideInactive ? \"&nbsp;&nbsp;|&nbsp;&nbsp;$inactive {$GLOBALS['strInactiveCampaignsHidden']}\" : '';\n        $hideInactiveValue = $hideInactive ? '0' : '1';\n        $hideInactiveIcon = OX::assetPath($hideInactive ? 'images/icon-activate.gif' : 'images/icon-hideinactivate.gif');\n        echo \"\n    <tr height='1'>\n        <td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n    </tr>\n    <tr height='25'>\n        <td colspan='3'>\n            <img src='$hideInactiveIcon' align='absmiddle' border='0'>\n            <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&hideinactive=$hideInactiveValue'>$hideInactiveText</a>$hideInactiveStats\n        </td>\n        <td align='right'>\n            <img src='\" . OX::assetPath() . \"/images/icon-banner-stored-d.gif' align='absmiddle' border='0'>\n            <a href='$pageName?affiliateid=$publisherId&zoneid=$zoneId&showbanners=$showMatchingValue'>$showMatchingText</a>\n    </table>\";\n        if (!empty($directLinkedAds)) {\n            echo \"<br /><strong>{$GLOBALS['strBannerLinkedAds']}:</strong><br />\";\n            $aParams = array('ad_id' => implode(',', array_keys($directLinkedAds)));\n            MAX_displayLinkedAdsPlacements($aParams, $publisherId, $zoneId, $hideInactive, $showParentPlacements, $pageName, $tabIndex);\n        }\n    }\n\nfunction MAX_displayPlacementAdSelectionViewForm($publisherId, $zoneId, $view, $pageName, &$tabIndex, $aOtherZones = array())\n{\n    global $phpAds_TextDirection;\n\n    $disabled = null;\n    $disabledHidden = null;\n    if (!empty($aOtherZones[$zoneId]['type'])) {\n        if ($aOtherZones[$zoneId]['type'] == MAX_ZoneEmail) {\n            $view = 'ad';\n            $disabled = ' disabled';\n            $disabledHidden = \"<input type='hidden' name='view' value='ad' />\";\n        }\n    }\n    $placementSelected = $view == 'placement' ? ' selected' : '';\n    $categorySelected = $view == 'category' ? ' selected' : '';\n    $adSelected = $view == 'ad' ? ' selected' : '';\n\n    echo \"\n<form name='zoneview' method='post' action='$pageName'>\n<input type='hidden' name='zoneid' value='$zoneId'>\n<input type='hidden' name='affiliateid' value='$publisherId'>\n<table border='0' width='100%' cellpadding='0' cellspacing='0'>\n<tr height='25'>\n<td colspan='3'><b>{$GLOBALS['strSelectZoneType']}</b></td>\n</tr>\n<tr height='25'>\n<td>\n    <select name='view' onchange='this.form.submit();' $disabled>\n        <option value='placement'$placementSelected>{$GLOBALS['strCampaignDefaults']}</option>\n        <!--option value='category'$categorySelected>{$GLOBALS['strLinkedCategories']}</option-->\n        <option value='ad'$adSelected>{$GLOBALS['strLinkedBanners']}</option>\n    </select>\n    &nbsp;<input type='image' id='link_type_submit' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif' border='0'>\n    $disabledHidden\n</td>\n</tr>\n</table>\n</form>\";\n    phpAds_ShowBreak();\n    echo \"\n<br />\";\n}\n\nfunction MAX_displayAcls($acls, $aParams)\n{\n    $tabindex =& $GLOBALS['tabindex'];\n    $page = basename($_SERVER['SCRIPT_NAME']);\n    $conf = $GLOBALS['_MAX']['CONF'];\n\n    echo \"<form action='{$page}' method='post'>\";\n    echo \"<input type='hidden' name='token' value='\".urlencode(phpAds_SessionGetToken()).\"' />\";\n\n    echo \"<label><img src='\" . OX::assetPath() . \"/images/icon-acl-add.gif' align='absmiddle'>&nbsp;\". $GLOBALS['strACLAdd'] .\": &nbsp;\";\n    echo \"<select name='type' accesskey='{$GLOBALS['keyAddNew']}' tabindex='\".($tabindex++).\"'>\";\n\n    $deliveryLimitations = OX_Component::getComponents('deliveryLimitations', null, false);\n    foreach ($deliveryLimitations as $pluginName => $plugin) {\n        if ($plugin->isAllowed($page)) {\n            echo \"<option value='{$pluginName}'>\" . $plugin->getName() . \"</option>\";\n        }\n    }\n\n    echo \"</select></label>\";\n    echo \"&nbsp;\";\n    echo \"<input type='submit' class='flat' name='action[new]' value='\" . $GLOBALS['strAdd'] . \"'\";\n\n    phpAds_ShowBreak();\n    echo \"<br />\";\n    $aErrors = OX_AclCheckInputsFields($acls, $page);\n    if (!empty($GLOBALS['action'])) {\n        // We are part way through making changes, show a message\n        //echo \"<br>\";\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/warning.gif' align='absmiddle'>\";\n        echo \"<span class='tab-s'>{$GLOBALS['strUnsavedChanges']}</span><br>\";\n        echo \"</div>\";\n    }\n    elseif (!MAX_AclValidate($page, $aParams)) {\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/warning.gif' align='absmiddle'>\";\n        echo \"<span class='tab-r'>{$GLOBALS['strDeliveryLimitationsDisagree']}</span><br>\";\n        echo \"</div>\";\n    }\n\n    if ($aErrors  !== true) {\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/warning.gif' align='absmiddle'>\";\n        echo \"<span class='tab-s'>{$GLOBALS['strDeliveryLimitationsInputErrors']}</span><br><ul>\";\n        foreach ($aErrors as $error) {\n            echo \"<li><span class='tab-s'>{$error}</span><br></li>\";\n        }\n        echo \"</ul></div>\";\n    }\n\n    foreach ($aParams as $name => $value) {\n        echo \"<input type='hidden' name='{$name}' value='{$value}' />\";\n    }\n    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n    echo \"<tr><td height='25' colspan='4' bgcolor='#FFFFFF'><b>{$GLOBALS['strDeliveryLimitations']}</b></td></tr>\";\n    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\n    if (empty($acls)) {\n        echo \"<tr><td height='24' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{$GLOBALS['strNoLimitations']}</td></tr>\";\n        echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    } else {\n        echo \"<tr><td height='25' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{$GLOBALS['strOnlyDisplayWhen']}</td></tr>\";\n        echo \"<tr><td colspan='4'><img src='\" . OX::assetPath() . \"/images/break-el.gif' width='100%' height='1'></td></tr>\";\n\n        foreach ($acls as $aclId => $acl) {\n            if ($deliveryLimitationPlugin = OA_aclGetComponentFromRow($acl)) {\n                $deliveryLimitationPlugin->init($acl);\n                $deliveryLimitationPlugin->count = count($acls);\n                if ($deliveryLimitationPlugin->isAllowed($page)) {\n                    $deliveryLimitationPlugin->display();\n                }\n            }\n        }\n    }\n\n    echo \"<tr><td height='30' colspan='2'>\";\n\n    if (!empty($acls)) {\n        $url = $page . '?';\n        foreach ($aParams as $name => $value) {\n            $url .= \"{$name}={$value}&\";\n        }\n        $url .= \"action[clear]=true\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-recycle.gif' border='0' align='absmiddle'>&nbsp;\n                <a href='{$url}'>{$GLOBALS['strRemoveAllLimitations']}</a>&nbsp;&nbsp;&nbsp;&nbsp;\n        \";\n    }\n\n    echo \"</td><td height='30' colspan='2' align='{$GLOBALS['phpAds_TextAlignRight']}'>\";\n    echo \"</td></tr>\";\n\n    echo \"</table>\";\n}\n\nfunction MAX_displayChannels($channels, $aParams) {\n    $entityString = _getEntityString($aParams);\n    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n\n    echo \"<tr height='25'><td height='25'><b>&nbsp;&nbsp;{$GLOBALS['strName']}</a></b></td>\";\n\n    echo \"<td height='25'><b>{$GLOBALS['strID']}</a></td>\";\n    echo \"<td height='25'>&nbsp;</td>\";\n    echo \"</tr>\";\n\n    echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\n    if (empty($channels)) {\n        echo \"<tr height='25' bgcolor='#F6F6F6'><td height='25' colspan='3'>\";\n        echo \"&nbsp;&nbsp;{$GLOBALS['strNoChannels']}</td></tr>\";\n\n        echo \"<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    } else {\n        $i = 0;\n        foreach ($channels as $channelId => $channel) {\n            if ($i > 0) echo \"<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\";\n            echo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n            echo \"<td height='25'>&nbsp;&nbsp;\";\n            echo \"<img src='\" . OX::assetPath() . \"/images/icon-channel.gif' align='absmiddle'>&nbsp;\";\n\n            // set channel ownership info for display\n            if ($GLOBALS['pageName'] != 'affiliate-channels.php') {\n                if (!empty($channel['publisher_id'])) {\n                    $ownerTypeStr = 'Publisher: ';\n                    $publisher = Admin_DA::getPublisher($channel['publisher_id']);\n                    $ownerNameStr = '[id'.$channel['publisher_id'].'] '.$publisher['name'];\n                } else if (!empty($channel['agency_id']) && empty($channel['publisher_id'])\n                       && !OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                    $ownerTypeStr = 'Agency: ';\n                    $agency = Admin_DA::getAgency($channel['agency_id']);\n                    $ownerNameStr = '[id'.$channel['agency_id'].'] '.$agency['name'];\n                } else {\n                    $ownerTypeStr = '';\n                    $ownerNameStr = '';\n                }\n            }\n            $ownerStr = !empty($ownerTypeStr) ? '&nbsp&nbsp<i>'.$ownerTypeStr.'</i>'.htmlspecialchars($ownerNameStr) : '';\n\n            echo \"<a href='channel-edit.php?{$entityString}channelid={$channel['channel_id']}'>\".htmlspecialchars($channel['name'].$ownerStr).\"</a>\";\n            echo \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\";\n            echo \"</td>\";\n            echo \"<td height='25'>{$channel['channel_id']}</td>\";\n            echo \"<td>&nbsp;</td></tr>\";\n\n            // Description\n            echo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n            echo \"<td>&nbsp;</td>\";\n            echo \"<td height='25' colspan='3'>\".htmlspecialchars(stripslashes($channel['description'])).\"</td>\";\n            echo \"</tr>\";\n\n            echo \"<tr height='1'>\";\n            echo \"<td \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\"><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='1'></td>\";\n            echo \"<td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td>\";\n            echo \"</tr>\";\n            echo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n\n            // Empty\n            echo \"<td>&nbsp;</td>\";\n\n            // Buttons\n            echo \"<td height='25' colspan='3'>\";\n\n            echo \"<img src='\" . OX::assetPath() . \"/images/icon-acl.gif' border='0' align='absmiddle' alt='{$GLOBALS['strIncludedBanners']}'>&nbsp;<a href='channel-acl.php?{$entityString}channelid={$channel['channel_id']}'>{$GLOBALS['strEditChannelLimitations']}</a>&nbsp;&nbsp;&nbsp;&nbsp;\";\n            echo \"<img src='\" . OX::assetPath() . \"/images/icon-recycle.gif' border='0' align='absmiddle' alt='{$GLOBALS['strDelete']}'>&nbsp;<a href='channel-delete.php?token=\" . urlencode(phpAds_SessionGetToken()) . \"&{$entityString}channelid={$channel['channel_id']}&returnurl=\".(empty($aParams['affiliateid']) ? 'channel-index.php' : 'affiliate-channels.php').\"'\".phpAds_DelConfirm($GLOBALS['strConfirmDeleteChannel']).\">{$GLOBALS['strDelete']}</a>&nbsp;&nbsp;&nbsp;&nbsp;\";\n\n            echo \"</td></tr>\";\n            $i++;\n        }\n        if (!empty($channels)) {\n            echo \"<tr height='1'><td colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n        }\n    }\n    echo \"</table>\";\n}\n\n/**\n * Show a confirm message for zone delete\n *\n * @param int $zoneId Zone ID\n * @return string\n */\nfunction MAX_zoneDelConfirm($zoneId)\n{\n    $dalZones = OA_Dal::factoryDAL('zones');\n    return phpAds_DelConfirm(\n                ($dalZones->checkZoneLinkedToActiveCampaign($zoneId)) ?\n                    $GLOBALS['strConfirmDeleteZoneLinkActive'] . '\\n' . $GLOBALS['strConfirmDeleteZone']\n                    : $GLOBALS['strConfirmDeleteZone']\n           );\n}\n\nfunction OX_Display_ConversionWindowHTML($varName, $windowSeconds, &$tabindex, $enabled = true)\n{\n    $window = _secondsToWindowArray($windowSeconds);\n    echo \"\n        \" . (($enabled) ? \"<input id='{$varName}daytrk' class='flat' type='text' size='3' name='{$varName}day' value='{$window['days']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['days']) . \" {$GLOBALS['strDays']} &nbsp;&nbsp;\n        \" . (($enabled) ? \"<input id='{$varName}hourtrk' class='flat' type='text' size='3' name='{$varName}hour' value='{$window['hours']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['hours']) . \" {$GLOBALS['strHours']} &nbsp;&nbsp;\n        \" . (($enabled) ? \"<input id='{$varName}minutetrk' class='flat' type='text' size='3' name='{$varName}minute' value='{$window['minutes']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['minutes']) . \" {$GLOBALS['strMinutes']} &nbsp;&nbsp;\n        \" . (($enabled) ? \"<input id='{$varName}secondtrk' class='flat' type='text' size='3' name='{$varName}second' value='{$window['seconds']}' onKeyUp=\\\"phpAds_formLimitUpdate();\\\" tabindex='\".($tabindex++).\"' />\" : $window['seconds']) . \" {$GLOBALS['strSeconds']} &nbsp;&nbsp;\n    \";\n}\n\n// Determine whether an advertiser has an active placement/ad running under it...\nfunction _isAdvertiserActive($aAdvertiserPlacementAd)\n{\n    $active = false;\n    if (isset($aAdvertiserPlacementAd['children'])) {\n        foreach($aAdvertiserPlacementAd['children'] as $aPlacementAd) {\n            if (_isPlacementActive($aPlacementAd)) {\n                $active = true;\n                break;\n            }\n        }\n    }\n    return $active;\n}\n\n// Determine whether a placement has an active ad running under it...\nfunction _isPlacementActive($aPlacementAd)\n{\n    $active = false;\n    if ($aPlacementAd['status'] == OA_ENTITY_STATUS_RUNNING) {\n        if (isset($aPlacementAd['children'])) {\n            foreach($aPlacementAd['children'] as $aAd) {\n                if ($aAd['status'] == OA_ENTITY_STATUS_RUNNING) {\n                    $active = true;\n                    break;\n                }\n            }\n        }\n    }\n    return $active;\n}\n\n// Determine whether a publisher is active...\nfunction _isPublisherActive($aPublisherZone)\n{\n    return true;  // for now, all publishers are active.\n}\n\n// Determine whether a zone is active...\nfunction _isZoneActive($aZone)\n{\n    return true;  // for now, all zones are active.\n}\n\nfunction _secondsToWindowArray($seconds)\n{\n    $return['days'] = floor($seconds / (60*60*24));\n    $seconds = $seconds % (60*60*24);\n    $return['hours'] = floor($seconds / (60*60));\n    $seconds = $seconds % (60*60);\n    $return['minutes'] = floor($seconds / (60));\n    $seconds = $seconds % (60);\n    $return['seconds'] = $seconds;\n    return $return;\n}\n\nfunction _windowValuesToseconds($days, $hours, $minutes, $seconds)\n{\n    $days =    ($days > 0)    ? $days    : 0;\n    $hours =   ($hours > 0)   ? $hours   : 0;\n    $minutes = ($minutes > 0) ? $minutes : 0;\n    $seconds = ($seconds > 0) ? $seconds : 0;\n    return $days * (24*60*60) + $hours * (60*60) + $minutes * (60) + $seconds;\n}\n\nfunction _multiSort($array, $arg1, $arg2){\n        $arr1 = array();\n        $arr2 = array();\n\n        foreach ($array as $key => $value){\n            $arr1[$key] = strtolower( $value[$arg1] );\n            $arr2[$key] = $value[$arg2];\n        }\n\n        array_multisort($arr1, $arr2, $array);\n        return $array;\n}\n\n/** Tools and Breadcrumbs **/\nfunction MAX_displayNavigationTracker($advertiserId, $trackerId, $aOtherAdvertisers)\n{\n    addTrackerPageTools($advertiserId, $trackerId, $aOtherAdvertisers);\n    $oHeaderModel = MAX_displayTrackerBreadcrumbs($advertiserId, $trackerId);\n    phpAds_PageHeader(null, $oHeaderModel);\n}\n\n\nfunction MAX_displayNavigationCampaign($campaignId, $aOtherAdvertisers, $aOtherCampaigns, $aEntities)\n{\n    $advertiserId = $aEntities['clientid'];\n\n\n    $doCampaign = OA_Dal::factoryDO('campaigns');\n    $doCampaign->campaignid = $campaignId;\n    $doCampaign->find();\n    $doCampaign->fetch();\n    $campaignName = $doCampaign->campaignname;\n\n    $advertiserName = MAX_buildName($advertiserId, $aOtherAdvertisers[$advertiserId]['name']);\n    $advertiserEditUrl = '';\n    if (OA_Permission::hasAccessToObject('clients', $advertiserId, OA_Permission::OPERATION_EDIT)) {\n        $advertiserEditUrl = \"advertiser-edit.php?clientid=$advertiserId\";\n    }\n\n    addCampaignPageTools($advertiserId, $campaignId, $aOtherAdvertisers, $aEntities);\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                          array(\"name\" => $advertiserName, \"url\" => $advertiserEditUrl),\n                                          array(\"name\" => $campaignName)),\n                                        \"campaign\", \"edit\");\n    phpAds_PageHeader(null, $oHeaderModel);\n}\n\n\nfunction MAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    $advertiserId = $aEntities['clientid'];\n    $campaignId = $aEntities['campaignid'];\n    $bannerId = $aEntities['bannerid'];\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['bannerid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n    if ($pageName == 'banner-edit.php' && empty($bannerId)) {\n                $tabValue = 'banner-edit_new';\n                $pageType = 'edit-new';\n    }\n    else {\n    \t$pageType = 'edit';\n    }\n\n    $advertiserEditUrl = '';\n    $campaignEditUrl = '';\n\n    if (OA_Permission::hasAccessToObject('clients', $advertiserId)) {\n        $advertiserEditUrl = \"advertiser-edit.php?clientid=$advertiserId\";\n    }\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        $campaignEditUrl = \"campaign-edit.php?clientid=$advertiserId&campaignid=$campaignId\";\n    }\n\n    // Build banner preview\n    if ($bannerId && !empty($GLOBALS['_MAX']['PREF']['ui_show_banner_preview']) && empty($_GET['nopreview'])) {\n        $bannerCode = MAX_bannerPreview($bannerId);\n    } else {\n        $bannerCode = '';\n    }\n\n    $advertiserDetails = phpAds_getClientDetails($advertiserId);\n    $advertiserName = $advertiserDetails['clientname'];\n    $campaignDetails = Admin_DA::getPlacement($campaignId);\n    $campaignName = $campaignDetails['name'];\n    $bannerName = $aOtherBanners[$bannerId]['name'];\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                      array(\"name\" => $advertiserName, \"url\" => $advertiserEditUrl),\n                                      array(\"name\" => $campaignName, \"url\" => $campaignEditUrl),\n                                      array(\"name\" => $bannerName)),\n                                    \"banner\", $pageType);\n\n    global $phpAds_breadcrumbs_extra;\n    $phpAds_breadcrumbs_extra .= \"<div class='bannercode'>$bannerCode</div>\";\n    if ($bannerCode != '') {\n        $phpAds_breadcrumbs_extra .= \"<br />\";\n    }\n\n    addBannerPageTools($advertiserId, $campaignId, $bannerId, $aOtherCampaigns, $aOtherBanners, $aEntities);\n    phpAds_PageHeader($tabValue, $oHeaderModel);\n}\n\nfunction MAX_bannerPreview($bannerId)\n{\n    require_once (MAX_PATH . '/lib/max/Delivery/adRender.php');\n    $aBanner = Admin_DA::getAd($bannerId);\n    $aBanner['storagetype'] = $aBanner['type'];\n    $aBanner['bannerid'] = $aBanner['ad_id'];\n    if ($aBanner['contenttype'] == 'swf') {\n        return\n            MAX_adRender($aBanner, 0, '', '', '', true, '', false, false) .\n            \"<br /><br />\" .\n            _adRenderImage($aBanner, 0, '', '', true, false, false, true);\n    } else {\n        return\n            MAX_adRender($aBanner, 0, '', '', '', true, '', false, false);\n    }\n}\n\nfunction MAX_displayNavigationZone($pageName, $aOtherPublishers, $aOtherZones, $aEntities)\n{\n\n    global $phpAds_TextDirection;\n\n    $websiteId = $aEntities['affiliateid'];\n    $zoneId = $aEntities['zoneid'];\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['zoneid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n    $aPublisher = $aOtherPublishers[$websiteId];\n    $publisherName = MAX_buildName($websiteId, $aPublisher['name']);\n    $zoneName = (empty($zoneId)) ? $GLOBALS['strUntitled'] : MAX_buildName($zoneId, $aOtherZones[$zoneId]['name']);\n\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        $tabSections = array('4.2.3.2', '4.2.3.6', '4.2.3.3', '4.2.3.4', '4.2.3.5');\n        // Determine which tab is highlighted\n        switch ($pageName) {\n            case 'zone-edit.php'       :\n                if (empty($zoneId)) {\n                    $tabValue = 'zone-edit_new';\n                } else {\n                    $tabValue = 'zone-edit';\n                }\n                break;\n            default: $tabSections = basename($pageName); break;\n        }\n    }\n    elseif (OA_Permission::isAccount(OA_ACCOUNT_TRAFFICKER)) {\n        $tabSections = array();\n        if (OA_Permission::hasPermission(OA_PERM_ZONE_EDIT)) { $tabSections[] = '2.1.1'; }\n        if (OA_Permission::hasPermission(OA_PERM_ZONE_LINK)) { $tabSections[] = '2.1.2'; }\n        $tabSections[] = '2.1.3';\n        if (OA_Permission::hasPermission(OA_PERM_ZONE_INVOCATION)) { $tabSections[] = '2.1.4'; }\n        switch($pageName) {\n            case 'zone-edit.php': {\n                $tabValue = 'zone-edit';\n                if (empty($zoneId)) {\n                     $tabValue = 'zone-edit_new';\n                }\n                break;\n            }\n            case 'zone-include.php': $tabValue = '2.1.2'; break;\n            case 'zone-probability.php': $tabValue = '2.1.3'; break;\n            case 'zone-invocation.php': $tabValue = '2.1.4'; break;\n        }\n    }\n    // Sort the zones by name...\n    require_once(MAX_PATH . '/lib/max/other/stats.php');\n\n    $publisherEditUrl = \"affiliate-edit.php?affiliateid=$websiteId\";\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADMIN, OA_ACCOUNT_MANAGER)) {\n        $publisherEditUrl = \"affiliate-zones.php?affiliateid=$websiteId\";\n    }\n\n    $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n    $oHeaderModel = $builder->buildEntityHeader(array(\n                                       array(\"name\" => $publisherName, \"url\" => $publisherEditUrl),\n                                       array(\"name\" => empty($zoneId) ? '' : $zoneName)\n                                   ), \"zone\", empty($zoneId));\n\n    if (!empty($zoneId)) {\n        addZonePageTools($websiteId, $zoneId, $aOtherPublishers, $aEntities);\n    }\n    phpAds_PageHeader($tabValue, $oHeaderModel);\n    phpAds_ShowSections($tabSections);\n}\n\nfunction MAX_displayNavigationChannel($pageName, $aOtherChannels, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    $agencyId = isset($aEntities['agencyid']) ? $aEntities['agencyid'] : null;\n    $websiteId = isset($aEntities['affiliateid']) ? $aEntities['affiliateid'] : null;\n    $channelId = $aEntities['channelid'];\n    $channelName = $aOtherChannels[$channelId]['name'];\n\n    $entityString = _getEntityString($aEntities);\n    $aOtherEntities = $aEntities;\n    unset($aOtherEntities['channelid']);\n    $otherEntityString = _getEntityString($aOtherEntities);\n\n    if (!empty($websiteId)) {\n        $channelType = 'publisher';\n    }\n    else {\n        $channelType = 'agency';\n    }\n\n    // Determine which set of tabs to show...\n    if ($channelType == 'publisher') {\n        // Determine which tab is highlighted\n        switch ($pageName) {\n            case 'channel-edit.php' : $tabValue = (!empty($channelId)) ? 'channel-edit-affiliate' : 'channel-edit-affiliate_new'; break;\n            case 'channel-acl.php' : $tabValue = 'channel-affiliate-acl'; break;\n        }\n    } else {\n        // Determine which tab is highlighted\n        switch ($pageName) {\n            case 'channel-edit.php' : $tabValue = (!empty($channelId)) ? 'channel-edit' : 'channel-edit_new'; break;\n            case 'channel-acl.php' : $tabValue = 'channel-acl'; break;\n        }\n    }\n\n    // Sort the channels by name...\n    require_once(MAX_PATH . '/lib/max/other/stats.php');\n\n    $publisherEditUrl = \"affiliate-edit.php?affiliateid=$websiteId\";\n    if (!empty($channelId)) {\n        addChannelPageTools($agencyId, $websiteId, $channelId, $channelType);\n\n        // Determine which tab is highlighted\n        $publisher = Admin_DA::getPublisher($websiteId);\n        $publisherName = $publisher['name'];\n        if (!empty($channelId)) {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                array(\"name\" => $publisherName, url => $publisherEditUrl),\n                array(\"name\" => $channelName)), \"channel\", \"edit\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n        else {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                array(\"name\" => $publisherName, url => $publisherEditUrl),\n                array(\"name\" => $channelName)), \"channel\", \"edit-new\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n    }\n    else {\n        if (!empty($channelId)) {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                array(\"name\" => $channelName)), \"global-channel\", \"edit\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n        else {\n            $builder = new OA_Admin_UI_Model_InventoryPageHeaderModelBuilder();\n            $oHeaderModel = $builder->buildEntityHeader(array(\n                        array(\"name\" => \"\")), \"global-channel\", \"edit-new\");\n            phpAds_PageHeader($tabValue, $oHeaderModel);\n        }\n    }\n}\n\n\nfunction addAdvertiserPageToolsAndShortcuts($advertiserId)\n{\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        addPageLinkTool($GLOBALS[\"strAddCampaign_Key\"], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-edit.php?clientid=\".$advertiserId), \"iconCampaignAdd\", $GLOBALS[\"keyAddNew\"] );\n    }\n    addPageShortcut($GLOBALS['strAdvertiserCampaigns'], MAX::constructUrl(MAX_URL_ADMIN, \"advertiser-campaigns.php?clientid=$advertiserId\"), \"iconCampaigns\");\n    addPageShortcut($GLOBALS['strClientHistory'], MAX::constructUrl(MAX_URL_ADMIN, 'stats.php?entity=advertiser&breakdown=history&clientid='.$advertiserId), 'iconStatistics');\n}\n\n\nfunction addTrackerPageTools($advertiserId, $trackerId, $aOtherAdvertisers)\n{\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        $token = phpAds_SessionGetToken();\n\n        //duplicate\n        addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"tracker-modify.php?token=\".urlencode($token).\"&clientid=\".$advertiserId.\"&trackerid=\".$trackerId.\"&duplicate=true&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconTrackerDuplicate\");\n\n        //move to\n        $form  = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'tracker-modify.php') . \"'>\n            <input type='hidden' name='token' value='\".htmlspecialchars($token, ENT_QUOTES).\"'>\n            <input type='hidden' name='trackerid' value='$trackerId'\n            <input type='hidden' name='clientid' value='$advertiserId'\n            <input type='hidden' name='returnurl' value='tracker-edit.php'>\n            <select name='moveto'>\";\n        foreach ($aOtherAdvertisers as $advertiser) {\n            $form .= \"<option value='\".$advertiser['clientid'].\"'>\".htmlspecialchars(MAX_buildName($advertiser['clientid'], $advertiser['clientname'])).\"</option>\";\n        }\n        $form .= \"</select><input type='image' class='submit' src='\" . OX::assetPath() . \"/images/\".$GLOBALS['phpAds_TextDirection'].\"/go_blue.gif'></form>\";\n        addPageFormTool($GLOBALS['strMoveTo'], 'iconTrackerMove', $form);\n\n        //delete\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteTracker']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"tracker-delete.php?token=\".urlencode($token).\"&clientid=\".$advertiserId.\"&trackerid=\".$trackerId.\"&returnurl=advertiser-trackers.php\"), \"iconDelete\", null, $deleteConfirm);\n        addPageShortcut($GLOBALS['strBackToTrackers'], MAX::constructUrl(MAX_URL_ADMIN, \"advertiser-trackers.php?clientid=$advertiserId\"), \"iconBack\");\n    }\n}\n\n\nfunction addCampaignPageTools($clientid, $campaignid, $aOtherAdvertisers, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n\n        $token = phpAds_SessionGetToken();\n\n        addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-modify.php?token=\".urlencode($token).\"&duplicate=1&clientid=$clientid&campaignid=$campaignid&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconCampaignDuplicate\");\n\n        if (OA_Permission::hasAccessToObject('campaigns', $campaignid, OA_Permission::OPERATION_MOVE)) {\n            $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'campaign-modify.php') . \"'>\n            <input type='hidden' name='token' value='\".htmlspecialchars($token, ENT_QUOTES).\"'>\n            <input type='hidden' name='clientid' value='$clientid'>\n            <input type='hidden' name='campaignid' value='$campaignid'>\n            <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'], ENT_QUOTES)).\"'>\n            <select name='newclientid'>\";\n                $aOtherAdvertisers = _multiSort($aOtherAdvertisers,'name','advertiser_id');\n                foreach ($aOtherAdvertisers as $aOtherAdvertiser) {\n                    $otherAdvertiserId = $aOtherAdvertiser['advertiser_id'];\n                    $otherAdvertiserName = MAX_buildName($otherAdvertiserId, $aOtherAdvertiser['name']);\n\n                    if ($otherAdvertiserId != $advertiserId) {\n                        $form .= \"<option value='$otherAdvertiserId'>\" . htmlspecialchars($otherAdvertiserName) . \"</option>\";\n                    }\n                }\n            $form .= \"</select><input type='image' class='submit' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif'></form>\";\n\n            addPageFormTool($GLOBALS['strMoveTo'], 'iconCampaignMove', $form);\n        }\n\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteCampaign']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-delete.php?token=\".urlencode($token).\"&clientid=$clientid&campaignid=$campaignid&returnurl=advertiser-campaigns.php\"), \"iconDelete\", null, $deleteConfirm);\n    }\n\n    //shortcuts\n    if (!empty($campaignid) && !OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        if (OA_Permission::hasAccessToObject('campaigns', $campaignid, OA_Permission::OPERATION_ADD_CHILD)) {\n            addPageLinkTool($GLOBALS[\"strAddBanner_Key\"], MAX::constructUrl(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid\"), \"iconBannerAdd\", $GLOBALS[\"strAddNew\"] );\n        }\n        addPageShortcut($GLOBALS['strBackToCampaigns'], MAX::constructUrl(MAX_URL_ADMIN, \"advertiser-campaigns.php?clientid=$clientid\"), \"iconBack\");\n    }\n    if (!empty($campaignid)) {\n        if (OA_Permission::hasAccessToObject('campaigns', $campaignid, OA_Permission::OPERATION_VIEW_CHILDREN)) {\n            addPageShortcut($GLOBALS['strCampaignBanners'], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-banners.php?clientid=$clientid&campaignid=$campaignid\"), \"iconBanners\");\n        }\n        $entityString = _getEntityString($aEntities);\n        addPageShortcut($GLOBALS['strCampaignHistory'], MAX::constructUrl(MAX_URL_ADMIN, \"stats.php?entity=campaign&breakdown=history&$entityString\"), 'iconStatistics');\n    }\n}\n\nfunction addBannerPageTools($advertiserId, $campaignId, $bannerId, $aOtherCampaigns, $aOtherBanners, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    if (empty($bannerId)) {\n        return;\n    }\n\n    $token = phpAds_SessionGetToken();\n\n    //duplicate\n    addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"banner-modify.php?token=\".urlencode($token).\"&duplicate=true&clientid=$advertiserId&campaignid=$campaignId&bannerid=$bannerId&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconBannerDuplicate\");\n\n    //move to\n    $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'banner-modify.php') . \"'>\n    <input type='hidden' name='token' value='\".htmlspecialchars($token, ENT_QUOTES).\"'>\n    <input type='hidden' name='clientid' value='$advertiserId'>\n    <input type='hidden' name='campaignid' value='$campaignId'>\n    <input type='hidden' name='bannerid' value='$bannerId'>\n    <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'])).\"'>\n    <select name='moveto'>\";\n    $aOtherCampaigns = _multiSort($aOtherCampaigns,'name','placement_id');\n    foreach ($aOtherCampaigns as $otherCampaignId => $aOtherCampaign) {\n        // mask campaign name if anonymous campaign\n        $aOtherCampaign['name'] = MAX_getPlacementName($aOtherCampaign);\n        $otherCampaignName = MAX_buildName($aOtherCampaign['placement_id'], $aOtherCampaign['name']);\n\n        if ($aOtherCampaign['placement_id'] != $campaignId) {\n            $form .= \"<option value='\" . $aOtherCampaign['placement_id'] . \"'>\" . htmlspecialchars($otherCampaignName) . \"</option>\";\n        }\n        else {\n            $campaignName = $otherCampaignName;\n        }\n    }\n    $form .= \"</select><input name='moveto' class='submit' type='image' src='\" . OX::assetPath() . \"/images/$phpAds_TextDirection/go_blue.gif'></form>\";\n    addPageFormTool($GLOBALS['strMoveTo'], 'iconBannerMove', $form);\n\n    //apply to\n    if (basename($_SERVER['SCRIPT_NAME']) == 'banner-acl.php') {\n        $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'banner-modify.php') . \"'>\n        <input type='hidden' name='token' value='\".htmlspecialchars($token, ENT_QUOTES).\"'>\n        <input type='hidden' name='clientid' value='$advertiserId'>\n        <input type='hidden' name='campaignid' value='$campaignId'>\n        <input type='hidden' name='bannerid' value='$bannerId'>\n        <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'])).\"'>\n        <select name='applyto'>\";\n\n        $aOtherBanners = _multiSort($aOtherBanners,'name','ad_id');\n        foreach ($aOtherBanners as $idx => $aOtherBanner) {\n            if ($aOtherBanner['ad_id'] != $bannerId) {\n                $form .= \"<option value='{$aOtherBanner['ad_id']}'>\" . MAX_buildName($aOtherBanner['ad_id'], $aOtherBanner['name']) . \"</option>\";\n            }\n        }\n        $form .= \"</select><input type='image' class='submit' name='applyto' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif'></form>\";\n\n        addPageFormTool($GLOBALS['strApplyLimitationsTo'], 'iconBannerApplyLimitations', $form);\n    }\n\n    //delete\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteBanner']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"banner-delete.php?token=\".urlencode($token).\"&clientid=$advertiserId&campaignid=$campaignId&bannerid=$bannerId&returnurl=campaign-banners.php\"), \"iconDelete\", null, $deleteConfirm);\n    }\n\n    /* Shortcuts */\n    addPageShortcut($GLOBALS['strBackToBanners'], MAX::constructUrl(MAX_URL_ADMIN, \"campaign-banners.php?clientid=$advertiserId&campaignid=$campaignId\"), \"iconBack\");\n    $entityString = _getEntityString($aEntities);\n    addPageShortcut($GLOBALS['strBannerHistory'], MAX::constructUrl(MAX_URL_ADMIN, \"stats.php?entity=banner&breakdown=history&$entityString\"), 'iconStatistics');\n}\n\n\nfunction addWebsitePageTools($websiteId)\n{\n    if (!empty($websiteId) && (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n        || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)\n        || OA_Permission::hasPermission(OA_PERM_ZONE_ADD))) {\n        addPageLinkTool($GLOBALS[\"strAddNewZone_Key\"], MAX::constructUrl(MAX_URL_ADMIN, \"zone-edit.php?affiliateid=$websiteId\"), \"iconZoneAdd\", $GLOBALS[\"keyAddNew\"] );\n        addPageShortcut($GLOBALS['strWebsiteZones'], MAX::constructUrl(MAX_URL_ADMIN, \"affiliate-zones.php?affiliateid=$websiteId\"), \"iconZones\");\n    }\n    addPageShortcut($GLOBALS['strAffiliateHistory'], MAX::constructUrl(MAX_URL_ADMIN, 'stats.php?entity=affiliate&breakdown=history&affiliateid='.$websiteId), 'iconStatistics');\n}\n\n\nfunction addZonePageTools($affiliateid, $zoneid, $aOtherPublishers, $aEntities)\n{\n    global $phpAds_TextDirection;\n\n    $token = phpAds_SessionGetToken();\n\n    //duplicate\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n        || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)\n        || OA_Permission::hasPermission(OA_PERM_ZONE_ADD)) {\n        addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"zone-modify.php?duplicate=true&affiliateid=$affiliateid&zoneid=$zoneid&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconZoneDuplicate\");\n    }\n\n    //move to\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n        || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        $form = \"<form action='\" . MAX::constructUrl(MAX_URL_ADMIN, 'zone-modify.php') . \"'>\n        <input type='hidden' name='token' value='\".htmlspecialchars($token, ENT_QUOTES).\"'>\n        <input type='hidden' name='affiliateid' value='$affiliateid'>\n        <input type='hidden' name='zoneid' value='$zoneid'>\n        <input type='hidden' name='returnurl' value='\".htmlspecialchars(basename($_SERVER['SCRIPT_NAME'])).\"'>\n        <select name='newaffiliateid'>\";\n        $aOtherPublishers = _multiSort($aOtherPublishers,'name','publisher_id');\n        foreach ($aOtherPublishers as $otherPublisherId => $aOtherPublisher) {\n            $otherPublisherName = MAX_buildName($aOtherPublisher['publisher_id'], $aOtherPublisher['name']);\n            if ($aOtherPublisher['publisher_id'] != $affiliateid) {\n                $form .= \"<option value='\" . $aOtherPublisher['publisher_id'] . \"'>\" . htmlspecialchars($otherPublisherName) . \"</option>\";\n            }\n        }\n        $form .= \"</select><input type='image' class='submit' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif'></form>\";\n\n        addPageFormTool($GLOBALS['strMoveTo'], 'iconZoneMove', $form);\n    }\n\n    //delete\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN)\n       || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)\n       || OA_Permission::hasPermission(OA_PERM_ZONE_DELETE)) {\n        $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteZone']);\n        addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"zone-delete.php?token=\".urlencode($token).\"&affiliateid=$affiliateid&zoneid=$zoneid&returnurl=affiliate-zones.php\"), \"iconDelete\", null, $deleteConfirm);\n    }\n\n    //shortcut\n    addPageShortcut($GLOBALS['strBackToZones'], MAX::constructUrl(MAX_URL_ADMIN, \"affiliate-zones.php?affiliateid=$affiliateid\"), \"iconBack\");\n    $entityString = _getEntityString($aEntities);\n    addPageShortcut($GLOBALS['strZoneHistory'], MAX::constructUrl(MAX_URL_ADMIN, \"stats.php?entity=zone&breakdown=history&$entityString\"), 'iconStatistics');\n}\n\nfunction addChannelPageTools($agencyid, $websiteId, $channelid, $channelType)\n{\n    if ($channelType == 'publisher') {\n        $deleteReturlUrl = MAX::constructUrl(MAX_URL_ADMIN, 'affiliate-channels.php');\n    }\n    else {\n        $deleteReturlUrl = MAX::constructUrl(MAX_URL_ADMIN, 'channel-index.php');\n    }\n\n    $token = phpAds_SessionGetToken();\n\n    //duplicate\n    addPageLinkTool($GLOBALS[\"strDuplicate\"], MAX::constructUrl(MAX_URL_ADMIN, \"channel-modify.php?token=\".urlencode($token).\"&duplicate=true&agencyid=$agencyid&affiliateid=$websiteId&channelid=$channelid&returnurl=\".urlencode(basename($_SERVER['SCRIPT_NAME']))), \"iconTargetingChannelDuplicate\");\n\n    //delete\n    $deleteConfirm = phpAds_DelConfirm($GLOBALS['strConfirmDeleteChannel']);\n    addPageLinkTool($GLOBALS[\"strDelete\"], MAX::constructUrl(MAX_URL_ADMIN, \"channel-delete.php?token=\".urlencode($token).\"&agencyid=$agencyid&affiliateid=$websiteId&channelid=$channelid&returnurl=$deleteReturlUrl\"), \"iconDelete\", null, $deleteConfirm);\n}\n\n\n/**\n * Builds Pear pager object, preconfigured with items per page. Pager links are\n * processed to make them more readable. Also items name in summary can be added.\n *\n * @param unknown_type $items\n * @param unknown_type $itemsPerPage\n * @param unknown_type $withNumbers\n * @param unknown_type $itemsName\n * @return unknown\n */\nfunction OX_buildPager($items, $itemsPerPage, $withNumbers = true, $itemsName = '', $delta = 4,\n    $currentPage = null, $fileName = null, $params = null)\n{\n    require_once MAX_PATH . '/lib/pear/Pager/Pager.php';\n\n    $oTrans = new OX_Translation();\n\n    /** prepare paging **/\n    $count = count($items);\n        $delta = $withNumbers ? $delta : 0;\n\n\n    $pagerOptions = array(\n        'mode'       => 'Sliding',\n        'perPage'    => $itemsPerPage,\n        'delta'      => $delta,\n        'totalItems' => $count,\n        'prevImg'       => '&lt; ' . $oTrans->translate('Back'),\n        'nextImg'       => $oTrans->translate('Next') . ' &gt;',\n        'urlVar' => 'p',\n        'linkClass' => 'page',\n        'curPageLinkClassName' => 'current',\n        'spacesBeforeSeparator' => 0,\n        'httpMethod' => 'GET',\n        'spacesAfterSeparator' => 0\n    );\n    if (!empty($fileName)) {\n        $pagerOptions['fileName'] = $fileName;\n        $pagerOptions['fixFileName'] = false;\n    }\n    if (!empty($params)) {\n        $pagerOptions['extraVars'] = $params;\n    }\n    if (!empty($currentPage)) {\n        $pagerOptions['currentPage'] = $currentPage;\n    }\n\n    $pager = Pager::factory($pagerOptions);\n    list($from, $to) = $pager->getOffsetByPageId();\n    $summary = \"<em>$from</em>-<em>$to</em> of <em>\".$pager->numItems().\" $itemsName</em>\";\n    $pager->summary = $summary;\n\n    //override links with shorter pager controls\n    if (!$withNumbers) {\n        $links = $pager->links;\n        $shortLinks = preg_replace(\"/<span class=\\\"current\\\">\\d+<\\/span>/i\", \"<span class='summary'>$summary</span>\" , $links);\n        $shortLinks = preg_replace(\"/\\[\\d+\\]/\", \"\" , $shortLinks);\n        $pager->links = $shortLinks;\n    }\n\n    return $pager;\n}\n\n\n\n?>\n", "{*<!--\n\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n\n-->*}\n{view_before_content}\n\n<form id=\"zoneLinkingForm\">\n<div id=\"campaign-zone\" class=\"new-form\">\n  <input id=\"csrf-token\" type=\"hidden\" value=\"{$csrfToken|escape}\" />\n  <input id=\"advertiser-id\" type=\"hidden\" value=\"{$advertiserId}\" />\n  <input id=\"campaign-id\" type=\"hidden\" value=\"{$campaignId}\" />\n\n  <div id=\"filters\">\n    <div id=\"filters-available\">\n      <h3 class=\"filter-panel-title\">{t str=AvailableZones}</h3>\n      <div class=\"filter-panel\">\n\t      <div class=\"bg-left\"></div>\n\t      <div class=\"bg-right\"></div>\n\n\t      <div class=\"filter-content\">\n          <div id=\"status-available\">&nbsp;</div>\n\t        {include file=campaign-zone-panel-filters.html\n\t                 panelId=available categories=$aCategories}\n\t      </div>\n\t      &nbsp;\n\t    </div>\n    </div>\n\n    <div id=\"filters-linked\">\n      <h3 class=\"filter-panel-title\">{t str=LinkedZones}</h3>\n      <div class=\"filter-panel\">\n        <div class=\"bg-left\"></div>\n        <div class=\"bg-right\"></div>\n\n        <div class=\"filter-content\">\n          <div id=\"status-linked\">&nbsp;</div>\n\t        {include file=campaign-zone-panel-filters.html\n\t                 panelId=linked categories=$aCategories}\n\t      </div>\n\t    </div>\n    </div>\n  </div>\n\n  &nbsp;\n\n  <div id=\"select-zones\">\n    <div id=\"available\">\n      <div class=\"zones-container new-table-container\">\n        <div id=\"zones-available-loading\" class=\"ajax-loading panel-loading hide\"></div>\n        <div id=\"zones-available-container\">\n          <table id=\"zones-available\" class=\"zones new-table\">\n            <tbody>\n              <tr class=\"header hide\">\n                <th class=\"name\"><label><input type=\"checkbox\" id=\"available-select-all\" class=\"checkbox select-all\" /> {t str=SelectUnselectAll}</label></th>\n                <th class=\"link\"></th>\n                <th class=\"ctr\">{t str=FinanceCTR}</th>\n                <th class=\"cr\">{t str=FinanceCR}</th>\n                <th class=\"ecpm last\">{t str=FinanceCPM}</th>\n              </tr>\n            </tbody>\n\n            <tbody id=\"zones-available-rows\">\n              <tr class=\"hide\"><td></td></tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"linked\">\n      <div class=\"zones-container new-table-container\">\n        <div id=\"zones-linked-loading\" class=\"ajax-loading panel-loading hide\"></div>\n        <div id=\"zones-linked-container\">\n          <table id=\"zones-linked\" class=\"zones new-table\">\n            <tbody>\n              <tr class=\"header hide\">\n                <th class=\"name\"><label><input type=\"checkbox\" id=\"linked-select-all\" class=\"checkbox select-all\" /> {t str=SelectUnselectAll}</label></th>\n                <th class=\"link\"></th>\n                <th class=\"ctr\">{t str=FinanceCTR}</th>\n                <th class=\"cr\">{t str=FinanceCR}</th>\n                <th class=\"ecpm last\">{t str=FinanceCPM}</th>\n              </tr>\n            </tbody>\n\n            <tbody id=\"zones-linked-rows\">\n              <tr class=\"hide\"><td></td></tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"linking-buttons\">\n      <button accesskey=\"l\" id=\"link-button\" class=\"flat button\" type=\"button\" ><u>L</u>ink <span class=\"arrow-right\"></span></button><br />\n      <button accesskey=\"u\" id=\"unlink-button\" class=\"flat button\" type=\"button\"><span class=\"arrow-left\"></span> <u>U</u>nlink</button>\n\n      <div style=\"margin-top: 2ex; text-align: center\">\n        <span id=\"linking-indicator\" class=\"ajax-loading-big hide\"></span>\n        <span id=\"linking-status\"></span>\n        <span id=\"error-indicator\" class=\"ajax-error hide\">{t str=LinkingNotSuccess}</span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"accurate-info\"><div class=\"accurate-box\"></div>{t str=CalculatedForThisCampaign}</div>\n  <div class=\"estim-info\"><div class=\"estim-box\"></div>{t str=CalculatedForAllCampaigns}</div>\n\n\t<script type=\"text/javascript\"><!--\n{literal}\n  $(document).ready(function() {\n    // Multicheckbox selections, selection by row clicks\n    $(\"#zones-available-container, #zones-linked-container\").multicheckboxes({\n      toSelectClass: \"to-link\",\n      toUselectClass: \"\",\n      selectAllSelector: \".select-all\",\n      updateElement: \"tr\"\n    });\n\n    addMultiselectListeners(\"available\");\n    addMultiselectListeners(\"linked\");\n\n    $(\"#zones-linked-container, #zones-available-container\").bind(\"filter\", function() {\n      var panel = this.id.substring(\"zones-\".length).replace(/-container/, '');\n      var $quickSearch = $(\"#quick-search-\" + panel);\n      var postData = {\n        \"clientid\": $(\"#advertiser-id\").val(),\n        \"campaignid\": $(\"#campaign-id\").val(),\n        \"status\": panel,\n        \"text\": $quickSearch.is(\".example-search\") ? \"\" : $quickSearch.val()\n      };\n\n      sendZonesRequest(panel, \"campaign-zone-zones.php\", postData);\n    });\n\n    // Link/Unlink buttons\n    $(\"#link-button\").bind(\"click\", [ \"link\" ], sendLinkingRequest);\n    $(\"#unlink-button\").bind(\"click\", [ \"unlink\" ], sendLinkingRequest);\n\n    // Quick search fields\n    $(\"#quick-search-available, #quick-search-linked\")\n      .example(\"zone name, website name\", { class_name: 'example-search'})\n      .typeWatch({\n        callback: function() {\n          var panelId = this.el.id.substring(\"quick-search-\".length);\n          $(\"#zones-\" + panelId + '-container').trigger(\"filter\");\n        },\n        wait: 500,\n        captureLength: 1\n      });\n\n    $(\"#zones-available-container, #zones-linked-container\").trigger(\"filter\").trigger(\"multichange\");\n  });\n\n  function sendZonesRequest(panel, url, params) {\n    $.ajax({\n      url: url,\n      type: \"GET\",\n      data: params,\n      cache: false,\n      complete: function() {\n        $(\"#zones-\" + panel + \"-loading\").hide();\n      },\n      success: function(data) {\n        if (!checkReload(data)) {\n          updatePanel(data, panel);\n        }\n      },\n      error: function() {\n        $(\"#error-indicator\").show();\n      }\n    });\n    $(\"#error-indicator\").hide();\n    $(\"#zones-\" + panel + \"-loading\").show();\n  }\n\n  // Performs linking/unlinking and refreshes panels on completion\n  function sendLinkingRequest(event) {\n    var action = event.data[0];\n\n    $(\"#link-button, #unlink-button\").attr(\"disabled\", true);\n\n    var $checkboxContainer;\n    if (action == \"link\") {\n      $checkboxContainer = $(\"#zones-available\");\n    } else {\n      $checkboxContainer = $(\"#zones-linked\");\n    }\n\n    var checkedNames = $.map($checkboxContainer.find(\":checked\").not(\".select-all\"), function(val) {\n      return val.name;\n    });\n\n    // Data from all filters\n    var quickSearchLinked = $(\"#quick-search-linked\").is(\".example-search\") ? \"\" : $(\"#quick-search-linked\").val();\n    var quickSearchAvailable = $(\"#quick-search-available\").is(\".example-search\") ? \"\" : $(\"#quick-search-available\").val();\n    if (action == \"link\") {\n        if (quickSearchLinked  != \"\" && quickSearchLinked != quickSearchAvailable) {\n           quickSearchLinked = \"\";\n           $(\"#quick-search-linked\").val(\"\");\n        }\n    }\n    else {\n      if (quickSearchAvailable  != \"\" && quickSearchLinked != quickSearchAvailable) {\n         quickSearchAvailable = \"\";\n         $(\"#quick-search-available\").val(\"\");\n      }\n    }\n\n    var postData = {\n      \"token\": $(\"#csrf-token\").val(),\n      \"clientid\": $(\"#advertiser-id\").val(),\n      \"campaignid\": $(\"#campaign-id\").val(),\n      \"text-linked\": quickSearchLinked,\n      \"text-available\": quickSearchAvailable,\n      \"action\": action,\n      \"ids[]\": checkedNames,\n      \"allSelected\": $checkboxContainer.data(\"allSelected\"),\n      \"page-linked\": $(\"#page-linked\").text(),\n      \"page-available\": $(\"#page-available\").text()\n    };\n\n    $.ajax({\n      url: \"campaign-zone-link.php\",\n      type: \"POST\",\n      data: postData,\n      cache: false,\n      complete: function() {\n        $(\".select-all\").attr(\"checked\", false);\n        $(\"#linking-indicator\").hide();\n      },\n      success: function(data) {\n        if (!checkReload(data)) {\n          updatePanel(data, \"available\");\n          updatePanel(data, \"linked\");\n\n          // Refresh token\n          $(\"#csrf-token\").val(extractPart(data, \"value\", \"token\"));\n\n\t        $(\"#linking-status\").html(extractPart(data, \"info\", \"result\")).stop().show().css(\"opacity\", \"1\");\n\t        if (window.linkingTimout) {\n\t          window.linkingTimout.clearTimeout();\n\t        }\n\t        window.linkingTimeout = window.setTimeout(function() {\n\t          $(\"#zones-available\").find(\"tr.just-linked\").removeClass(\"just-linked\", $(\"#zones-available-rows tr\").size() <= 100 ? 5000 : 0);\n\t          $(\"#zones-linked\").find(\"tr.just-linked\").removeClass(\"just-linked\",  $(\"#zones-linked-rows tr\").size() <= 100 ? 5000 : 0);\n\t          $(\"#linking-status\").fadeOut(5000);\n\t        }, 2000);\n\t      }\n\n{/literal}{if $runMPE}\n\t      // Run MPE\n\t      $.get('run-mpe.php');\n{/if}{literal}\n\n      },\n      error: function() {\n        $(\"#error-indicator\").show();\n      }\n    });\n\n    $(\"#error-indicator\").hide();\n    $(\"#linking-indicator\").show();\n    $(\"#linking-status\").hide();\n  }\n\n  function updatePanel(data, panel) {\n    var panelRows = extractPart(data, panel, \"rows\");\n    $(\"#zones-\" + panel + \"-container\").get(0).innerHTML = panelRows;\n    $(\"#zones-\" + panel + \" tr.header\").visible(!$(\"#zones-\" + panel + \"-rows tr:eq(0)\").is(\".empty\"));\n    var panelStatus = extractPart(data, panel, \"status\");\n    $(\"#status-\" + panel).html(panelStatus);\n    $(\"#zones-\" + panel + \"-container\").trigger('dataUpdate');\n    $(\"#zones-\" + panel + \"-container a.page\").click(function() {\n      sendZonesRequest(panel, this.href, {})\n      return false;\n    });\n\n    if ($(\"#page-\" + panel).size() > 0) {\n      $(\"#zones-\" + panel + \"-loading\").addClass(\"has-paging\");\n    } else {\n      $(\"#zones-\" + panel + \"-loading\").removeClass(\"has-paging\");\n    }\n    addSelectAllListeners(panel);\n  }\n\n  function addMultiselectListeners(panel) {\n    $(\"#zones-\" + panel + \"-container\").bind(\"multichange\", function() {\n      var $selectAll = $(\"#zones-\" + panel + \" .select-all\");\n      var selectAllChecked = $selectAll.size() > 0 && $selectAll.is(\":checked\");\n      $(\"#zones-\" + panel + \"-select-all, #select-all-container-\" + panel).setElementVisible(selectAllChecked);\n      if (!selectAllChecked) {\n        cancelAllZonesSelection(panel);\n      }\n\n      $(\"#\" + (panel == \"available\" ? \"link\" : \"unlink\") + \"-button\")\n        .attr(\"disabled\", $(\"#zones-\" + panel + \" :checked\").not(\".select-all\").size() == 0);\n    });\n  }\n\n  function addSelectAllListeners(panel) {\n    $(\"#zones-\" + panel + \"-select-all a\").click(function() {\n      $(\"#zones-\" + panel + \"-select-all\").hide();\n      $(\"#zones-\" + panel + \"-all-selected\").show();\n      $(\"#zones-\" + panel).data(\"allSelected\", true);\n      return false;\n    });\n    $(\"#zones-\" + panel + \"-all-selected a\").click(function() {\n      cancelAllZonesSelection(panel);\n      $(\"#zones-\" + panel + \" :checkbox\").attr(\"checked\", false);\n      $(\"#zones-\" + panel + \"-rows tr\").removeClass(\"to-link\");\n      return false;\n    });\n  }\n\n  function cancelAllZonesSelection(panel) {\n    $(\"#select-all-container-\" + panel).hide();\n    $(\"#zones-\" + panel + \"-select-all\").hide();\n    $(\"#zones-\" + panel + \"-all-selected\").hide();\n    $(\"#zones-\" + panel).data(\"allSelected\", false);\n  }\n\n  function checkReload(data) {\n    if (data.indexOf(\"<!-- install -->\") >= 0 || data.indexOf(\"<!-- login -->\") >= 0) {\n      document.location.reload();\n      return true;\n    }\n    return false;\n  }\n\n  function extractPart(data, status, part) {\n    var startMarker = \"<!--\" + part + \"-\" + status + \"-start-->\";\n    var endMarker = \"<!--\" + part + \"-\" + status + \"-end-->\";\n    return data.substring(data.indexOf(startMarker) + startMarker.length, data.indexOf(endMarker));\n  }\n{/literal}\n  //--></script>\n\n</div>\n</form>\n{view_after_content}", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Register input variables\n\n//phpAds_registerGlobal ('returnurl', 'duplicate', 'moveto_x', 'moveto', 'applyto_x', 'applyto');\nphpAds_registerGlobal('bannerid', 'campaignid', 'clientid', 'returnurl', 'duplicate', 'moveto', 'moveto_x', 'applyto', 'applyto_x');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($bannerid)) {\n    OA_Permission::checkSessionToken();\n\n    OA_Permission::enforceAccessToObject('banners', $bannerid);\n\n    if (!empty($moveto) && isset($moveto_x)) {\n        if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n            OA_Permission::enforceAccessToObject('campaigns', $moveto);\n        }\n\n        // Move the banner\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $doBanners->campaignid = $moveto;\n        $doBanners->update();\n\n        // Increase the memory for running the maintenance\n        OX_increaseMemoryLimit(OX_getMinimumRequiredMemory('maintenance'));\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        // Get new clientid\n        $clientid = phpAds_getCampaignParentClientID($moveto);\n\n        //confirmation message\n        $bannerName = $doBanners->description;\n        $doCampaigns = OA_Dal::factoryDO('campaigns');\n        if ($doCampaigns->get($moveto)) {\n           $campaignName = $doCampaigns->campaignname;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenMoved'],\n            array(htmlspecialchars($bannerName), htmlspecialchars($campaignName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$moveto}&bannerid={$bannerid}\");\n\n    } elseif (!empty($applyto) && isset($applyto_x)) {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $bannerName = $doBanners->description;\n\n        if ($applyto == -1) {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('campaigns', $campaignid);\n            }\n            $appliedTo = 0;\n            $doBanners = OA_Dal::factoryDO('banners');\n            $doBanners->campaignid = $campaignid;\n            $doBanners->find();\n            while ($doBanners->fetch()) {\n                if (($doBanners->bannerid != $bannerid) && (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $doBanners->bannerid))) {\n                    $appliedTo++;\n                }\n            }\n            $applyto = $bannerid;\n        } else {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('banners', $applyto);\n            }\n            if (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $applyto)) {\n                $appliedTo++;\n            }\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerAclHasBeenAppliedTo'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($bannerName),\n                $appliedTo\n            )\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$applyto);\n    } elseif (isset($duplicate) && $duplicate == 'true') {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $oldName = $doBanners->description;\n        $new_bannerid = $doBanners->duplicate();\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        //confirmation message\n        $newName = $doBanners->description;\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$new_bannerid\"),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$new_bannerid);\n    }\n    else {\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$bannerid);\n    }\n}\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\ninclude_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\nrequire_once MAX_PATH . '/lib/max/other/common.php';\n\n// Register input variables\nphpAds_registerGlobal ('campaignid', 'clientid', 'newclientid', 'returnurl', 'duplicate');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n\nif(!empty($duplicate)) {\n    OA_Permission::enforceAccessToObject('clients',   $clientid, false, OA_Permission::OPERATION_VIEW);\n    OA_Permission::enforceAccessToObject('campaigns', $campaignid, false, OA_Permission::OPERATION_DUPLICATE);\n}\nelse if (!empty($newclientid)) {\n    OA_Permission::enforceAccessToObject('clients',   $clientid, false, OA_Permission::OPERATION_VIEW);\n    OA_Permission::enforceAccessToObject('campaigns', $campaignid, false, OA_Permission::OPERATION_MOVE);\n    OA_Permission::enforceAccessToObject('clients', $newclientid, false, OA_Permission::OPERATION_EDIT);\n}\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($campaignid)) {\n    OA_Permission::checkSessionToken();\n\n    if (!empty($duplicate)) {\n    \t// Duplicate the campaign\n    \t$doCampaigns = OA_Dal::factoryDO('campaigns');\n    \t$doCampaigns->get($campaignid);\n        $oldName = $doCampaigns->campaignname;\n    \t$newCampaignId = $doCampaigns->duplicate();\n\n        if ($newCampaignId) {\n            // Queue confirmation message\n            $newName = $doCampaigns->campaignname;\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strCampaignHasBeenDuplicated'],\n                array(MAX::constructURL(MAX_URL_ADMIN, \"campaign-edit.php?clientid=$clientid&campaignid=$campaignid\"),\n                    htmlspecialchars($oldName),\n                    MAX::constructURL(MAX_URL_ADMIN, \"campaign-edit.php?clientid=$clientid&campaignid=$newCampaignId\"),\n                    htmlspecialchars($newName))\n            );\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n            Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$newCampaignId}\");\n            exit;\n        }\n        else {\n            phpAds_sqlDie();\n        }\n\n    }\n    else if (!empty($newclientid)) {\n\n        /*-------------------------------------------------------*/\n        /* Restore cache of $node_array, if it exists            */\n        /*-------------------------------------------------------*/\n\n        if (isset($session['prefs']['advertiser-index.php']['nodes'])) {\n            $node_array = $session['prefs']['advertiser-index.php']['nodes'];\n        }\n\n        /*-------------------------------------------------------*/\n\n        // Delete any campaign-tracker links\n        $doCampaign_trackers = OA_Dal::factoryDO('campaigns_trackers');\n        $doCampaign_trackers->campaignid = $campaignid;\n        $doCampaign_trackers->delete();\n\n        // Move the campaign\n        $doCampaigns = OA_Dal::factoryDO('campaigns');\n        $doCampaigns->get($campaignid);\n        $doCampaigns->clientid = $newclientid;\n        $doCampaigns->update();\n\n        // Find and delete the campains from $node_array, if\n        // necessary. (Later, it would be better to have\n        // links to this file pass in the clientid as well,\n        // to facilitate the process below.\n        if (isset($node_array['clients'])) {\n            foreach ($node_array['clients'] as $key => $val) {\n                if (isset($node_array['clients'][$key]['campaigns'])) {\n                    unset($node_array['clients'][$key]['campaigns'][$campaignid]);\n                }\n            }\n        }\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        /*-------------------------------------------------------*/\n        /* Save the $node_array, if necessary                    */\n        /*-------------------------------------------------------*/\n\n        if (isset($node_array)) {\n            $session['prefs']['advertiser-index.php']['nodes'] = $node_array;\n            phpAds_SessionDataStore();\n        }\n\n        /*-------------------------------------------------------*/\n\n        // Queue confirmation message\n        $campaignName = $doCampaigns->campaignname;\n        $doClients = OA_Dal::factoryDO('clients');\n        if ($doClients->get($newclientid)) {\n            $advertiserName = $doClients->clientname;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strCampaignHasBeenMoved'],\n            array(htmlspecialchars($campaignName), htmlspecialchars($advertiserName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n    }\n}\n\nHeader (\"Location: \".$returnurl.\"?clientid=\".(isset($newclientid) ? $newclientid : $clientid).\"&campaignid=\".$campaignid);\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Send header with charset info\nheader (\"Content-Type: text/html\".(isset($phpAds_CharSet) && $phpAds_CharSet != \"\" ? \"; charset=\".$phpAds_CharSet : \"\"));\n\nrequire_once MAX_PATH . '/lib/OA/Admin/Template.php';\nrequire_once MAX_PATH . '/lib/OA/Admin/UI/CampaignZoneLink.php';\n\nphpAds_registerGlobalUnslashed('action', 'campaignid', 'allSelected',\n        'text-linked', 'text-available');\n\n$agencyId   = OA_Permission::getAgencyId();\n$oDalZones  = OA_Dal::factoryDAL('zones');\n$action     = $GLOBALS[\"action\"];\n$campaignId = $GLOBALS['campaignid'];\n\nOA_Permission::enforceAccount ( OA_ACCOUNT_MANAGER );\nOA_Permission::enforceAccessToObject ( 'campaigns', $campaignid );\n\nOA_Permission::checkSessionToken();\n\n$aZonesIds = array();\n$aZonesIdsHash = array();\nforeach ($_REQUEST['ids'] as $zone) {\n    if (substr($zone, 0, 1) == 'z') {\n        $aZonesIds[] = (int) substr($zone, 1);\n        $aZonesIdsHash[(int) substr($zone, 1)] = \"x\";\n    }\n}\n\n// If we're requested to link all matching zones, we need to determine the ids to link\n// Ideally, there should be a DAL method to that directly. Note that we're replacing\n// only the $aZonesIds array here, and keeping $aZonesIdsHash populated based on the\n// zone ids from the request. This way, zones with ids from the request will get\n// higlighted as \"just linked\". It doesn't make to put all zone ids in $aZonesIdsHash as\n// only\nif ($GLOBALS['allSelected'] == 'true') {\n    $aZonesIds = array();\n    $link = ($action == 'link');\n    $text = ($link ? $GLOBALS['text-available'] : $GLOBALS['text-linked']);\n    $websites = $oDalZones->getWebsitesAndZones($agencyId, $campaignId, !$link, $text);\n    foreach ($websites as $website) {\n        $zones = $website['zones'];\n        foreach ($zones as $zoneid => $zone) {\n        \t$aZonesIds []= $zoneid;\n        }\n    }\n}\n\nswitch ($action) {\n    case \"link\" :\n            $result = $oDalZones->linkZonesToCampaign($aZonesIds, $campaignId);\n        break;\n    case \"unlink\" :\n            $result = $oDalZones->unlinkZonesFromCampaign($aZonesIds, $campaignId);\n        break;\n};\n\n$oTpl = OA_Admin_UI_CampaignZoneLink::createTemplateWithModel('available', false);\n$oTpl->assign('aZonesIdHash', $aZonesIdsHash);\n$oTpl->display();\n\n$oTpl = OA_Admin_UI_CampaignZoneLink::createTemplateWithModel('linked', false);\n$oTpl->assign('aZonesIdHash', $aZonesIdsHash);\n$oTpl->display();\n\n// We need to\necho \"<!--result-info-start-->\";\nswitch ($action) {\n    case \"link\" :\n            if ($result == -1) {\n                echo $GLOBALS['strLinkingZonesProblem'];\n            } else {\n                echo $result.\" \".$GLOBALS['strZonesLinked'];\n            }\n        break;\n    case \"unlink\" :\n            if ($result == -1) {\n                echo $GLOBALS['strUnlinkingZonesProblem'];\n            } else {\n                echo $result.\" \".$GLOBALS['strZonesUnlinked'];\n            }\n        break;\n};\necho \"<!--result-info-end-->\";\n\n// CSRF Token\necho \"<!--token-value-start-->\".phpAds_SessionGetToken().\"<!--token-value-end-->\";\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/other/lib-acl.inc.php';\n\n// Register input variables\n\nphpAds_registerGlobalUnslashed('acl', 'action', 'submit', 'channelid', 'agencyid');\n\n/*-------------------------------------------------------*/\n/* Affiliate interface security                          */\n/*-------------------------------------------------------*/\n\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('channel', $channelid);\n\n$pageName = basename($_SERVER['SCRIPT_NAME']);\n$agencyId = OA_Permission::getAgencyId();\n$tabindex = 1;\n\nif (!empty($affiliateid)) {\n    OA_Permission::enforceAccessToObject('affiliates', $affiliateid);\n\n    /*-------------------------------------------------------*/\n\t/* Store preferences\t\t\t\t\t\t\t\t\t */\n\t/*-------------------------------------------------------*/\n\t$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['affiliateid'] = $affiliateid;\n\tphpAds_SessionDataStore();\n\n    $aEntities = array('agencyid' => $agencyId, 'affiliateid' => $affiliateid, 'channelid' => $channelid);\n    $aOtherChannels = Admin_DA::getChannels(array('publisher_id' => $affiliateid));\n} else {\n    $aEntities = array('agencyid' => $agencyId, 'channelid' => $channelid);\n    $aOtherChannels = Admin_DA::getChannels(array('agency_id' => $agencyId, 'channel_type' => 'agency'));\n}\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\n\nif (!empty($action)) {\n    if (empty($acl)) $acl = array();\n    $acl = MAX_AclAdjust($acl, $action);\n}\nelseif (!empty($submit)) {\n    OA_Permission::checkSessionToken();\n\n    $acl = (isset($acl)) ? $acl : array();\n    // Only save when inputs are valid\n    if (OX_AclCheckInputsFields($acl, $pageName) === true) {\n        if (MAX_AclSave($acl, $aEntities)) {\n\n            // Queue confirmation message\n            $doChannel = OA_Dal::factoryDO('channel');\n            $doChannel->get($channelid);\n\n            $translation = new OX_Translation ();\n            $translated_message = $translation->translate ( $GLOBALS['strChannelAclHasBeenUpdated'], array(\n                MAX::constructURL(MAX_URL_ADMIN, \"channel-edit.php?\" . (!empty($affiliateid) ? \"affiliateid={$affiliateid}&\" : \"\") . \"channelid={$channelid}\"),\n                htmlspecialchars($doChannel->name)\n            ));\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n            // Redirect\n            if (!empty($affiliateid)) {\n                header(\"Location: channel-acl.php?affiliateid={$affiliateid}&channelid={$channelid}\");\n            } else {\n                header(\"Location: channel-acl.php?channelid={$channelid}\");\n            }\n            exit;\n        }\n    }\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nMAX_displayNavigationChannel($pageName, $aOtherChannels, $aEntities);\n\n$aChannel = Admin_DA::getChannel($channelid);\nif (!isset($acl)) {\n    $acl = Admin_DA::getChannelLimitations(array('channel_id' => $channelid));\n    // This array needs to be sorted by executionorder, this should ideally be done in SQL\n    // When we move to DataObject this should be addressed\n    ksort($acl);\n}\n\nif (!empty($affiliateid)) {\n    $aParams = array('affiliateid' => $affiliateid, 'channelid' => $channelid);\n} else {\n    $aParams = array('agencyid' => $agencyId, 'channelid' => $channelid);\n}\n\nMAX_displayAcls($acl, $aParams);\n\necho \"<br /><input type='submit' name='submit' value='{$GLOBALS['strSaveChanges']}' tabindex='\".($tabindex++).\"'></form>\";\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\n\n// Register input variables\nphpAds_registerGlobal('newaffiliateid', 'returnurl', 'duplicate');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('channel', $channelid);\n\n$affiliateid    = (int) $affiliateid;\n$channelid      = (int) $channelid;\n\nif (empty($returnurl)) {\n    $returnurl = 'channel-edit.php';\n}\n\n// Security check\nif (isset($channelid) && $channelid != '') {\n    OA_Permission::checkSessionToken();\n\n    if (isset($duplicate) && $duplicate == 'true') {\n\n        //get channel old channel name\n        $doChannel = OA_Dal::factoryDO('channel');\n        if ($doChannel->get($channelid)) {\n            $oldName = $doChannel->name;\n        }\n        // Duplicate the channel\n        $newChannelId = OA_Dal::staticDuplicate('channel', $channelid);\n\n        //get new name\n        $doChannel = OA_Dal::factoryDO('channel');\n        if ($doChannel->get($newChannelId)) {\n            $newName = $doChannel->name;\n        }\n        // Queue confirmation message\n        $translation = new OX_Translation();\n        $oldChannelParams = (!$affiliateid)\n            ? \"channelid=$channelid\"\n            :   \"affiliateid=$affiliateid&channelid=$channelid\";\n\n        $newChannelParams = (!$affiliateid)\n            ? \"?channelid=$newChannelId\"\n            : \"?affiliateid=$affiliateid&channelid=$newChannelId\";\n\n        $translated_message = $translation->translate ( $GLOBALS['strChannelHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"channel-edit.php?\".$oldChannelParams),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"channel-edit.php?\".$newChannelParams),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n        Header(\"Location: \".$returnurl.$newChannelParams);\n        exit;\n\n    }\n\n}\n\nHeader(\"Location: \".$returnurl.\"?affiliateid=\".$affiliateid.\"&channelid=\".$channelid);\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\nfunction OA_runMPE()\n{\n    $objResponse = new xajaxResponse();\n    $objResponse->addAssign(\"run-mpe\", \"innerHTML\", \"<img src='run-mpe.ph?token=\".urlencode(phpAds_SessionGetToken()).\"' />\");\n    return $objResponse;\n}\n\nrequire_once MAX_PATH .'/lib/Max.php';\nrequire_once MAX_PATH .'/lib/xajax/xajax.inc.php';\n$xajax = new xajax(MAX::constructURL(MAX_URL_ADMIN,'run-mpe-xajax.php'));\n$xajax->registerFunction(\"OA_runMPE\");\n$xajax->processRequests();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/other/lib-acl.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action');\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"acls\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($action) && ($action == 'Recompile')) {\n    OA_Permission::checkSessionToken();\n\n    MAX_AclReCompileAll();\n    echo \"<strong>$strAllBannerChannelCompiled</strong><br />\";\n}\n\necho $strBannerChannelResult;\nphpAds_ShowBreak();\n// Check the ACLs in the database against the compiled limitation strings...\n\necho \"<strong>\". $strChannels .\":</strong>\";\nphpAds_showBreak();\n\n// Check all the channels...\nOX_increaseMemoryLimit(OX_getMinimumRequiredMemory('maintenance'));\n\n$dalChannel = OA_Dal::factoryDAL('channel');\n$rsChannel = $dalChannel->getChannelsAndAffiliates();\n$rsChannel->find();\n$allChannelsValid = true;\nwhile ($rsChannel->fetch() && $row = $rsChannel->toArray()) {\n    if (!MAX_AclValidate('channel-acl.php', array('channelid' => $row['channelid']))) {\n        $allChannelsValid = false;\n        $affiliateName = (!empty($row['affiliatename'])) ? $row['affiliatename'] : $strUntitled;\n        echo \"<a href='channel-acl.php?affiliateid={$row['affiliateid']}&channelid={$row['channelid']}'>{$row['name']}</a><br />\";\n    }\n}\nif ($allChannelsValid) {\n    echo $strChannelCompiledLimitationsValid;\n}\nphpAds_showBreak();\n\necho \"<strong>$strBanners:</strong>\";\nphpAds_ShowBreak();\n\n$dalBanners = OA_Dal::factoryDAL('banners');\n$rsBanners = $dalBanners->getBannersCampaignsClients();\n$rsBanners->find();\n\n$allBannersValid = true;\nwhile ($rsBanners->fetch() && $row = $rsBanners->toArray()) {\n    if (!MAX_AclValidate('banner-acl.php', array('bannerid' => $row['bannerid']))) {\n        $allBannersValid = false;\n        $bannerName = (!empty($row['description'])) ? $row['description'] : $strUntitled;\n        $campaignName = (!empty($row['campaignname'])) ? $row['campaignname'] : $strUntitled;\n        $clientName = (!empty($row['clientname'])) ? $row['clientname'] : $strUntitled;\n        echo \"{$clientName} -> {$campaignName} -> <a href='banner-acl.php?clientid={$row['clientid']}&campaignid={$row['campaignid']}&bannerid={$row['bannerid']}'>{$bannerName}</a><br />\";\n    }\n}\nif ($allBannersValid) {\n    echo $strBannerCompiledLimitationsValid;\n}\n\nif (!$allBannersValid || !$allChannelsValid) {\n    phpAds_ShowBreak();\n    echo \"<br /><strong>\". $strErrorsFound .\"</strong><br /><br />\";\n    echo $strRepairCompiledLimitations;\n    echo \"<form action='' METHOD='GET'>\";\n    echo \"<input type='hidden' name='token' value='\".htmlspecialchars(phpAds_SessionGetToken(), ENT_QUOTES).\"' />\";\n    echo \"<input type='submit' name='action' value='$strRecompile' />\";\n    echo \"</form>\";\n}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/Dal/Inventory/Trackers.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action');\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"appendcodes\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Init DAL\n$tr = new MAX_Dal_Inventory_Trackers();\n\nif (!empty($action) && ($action == 'Recompile')) {\n    OA_Permission::checkSessionToken();\n\n    $tr->recompileAppendCodes();\n    echo \"<strong>$strAppendCodesRecompiled<br />\";\n}\n\necho $strAppendCodesResult;\nphpAds_ShowBreak();\n// Check the append codes in the database against the compiled appendcode strings...\n\necho \"<strong>$strTrackers:</strong>\";\nphpAds_showBreak();\n\n// Check all the trackers...\n$diffs = $tr->checkCompiledAppendCodes();\n\nforeach ($diffs as $v) {\n    echo \"<a href='client-trackers.php?clientid={$v['clientid']}&trackerid={$v['trackerid']}'>{$v['trackername']}</a><br />\";\n}\n\nif ($allTrackersValid = !count($diffs)) {\n    echo $strAppendCodesValid;\n}\nphpAds_showBreak();\n\nif (!$allTrackersValid) {\n    phpAds_ShowBreak();\n    echo \"<br /><strong>$strErrorsFound</strong><br /><br />\";\n    echo \"$strRepairAppenedCodes<br />\";\n    echo \"<form action='' METHOD='GET'>\";\n    echo \"<input type='hidden' name='token' value='\".htmlspecialchars(phpAds_SessionGetToken(), ENT_QUOTES).\"' />\";\n    echo \"<input type='submit' name='action' value='$strRecompile' />\";\n    echo \"</form>\";\n}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner-cache.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action', 'returnurl');\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($action) && ($action == 'Rebuild')) {\n    OA_Permission::checkSessionToken();\n\n    $result = processBanners(true);\n    if (empty($result['errors'])) {\n        if (empty($returnurl)) { $returnurl = 'maintenance-banners-check.php'; }\n        OX_Admin_Redirect::redirect($returnurl);\n    } else {\n        _showPageHeader();\n        echo $GLOBALS['strBannerCacheErrorsFound'];\n        echo \"<ul>\";\n       foreach ($result['errors'] as $error) {\n            $doCampaigns = OA_Dal::factoryDO('campaigns');\n            if (empty($campaigns[$error['campaignid']])) {\n                if ($doCampaigns->get($error['campaignid'])) {\n                    $campaigns[$error['campaignid']] = $doCampaigns->toArray();\n                }\n            }\n            echo \"<li><a href='banner-edit.php?clientid={$campaigns[$error['campaignid']]['clientid']}&campaignid={$error['campaignid']}&bannerid={$error['bannerid']}'>{$error['description']}</a></li>\";\n        }\n        echo \"</ul>\";\n    }\n} else {\n    $result = processBanners(false);\n    if (!empty($result['errors']) || !empty($result['different'])) {\n        _showPageHeader();\n        echo $GLOBALS['strBannerCacheDifferencesFound'];\n        echo \"<form action='' METHOD='GET'>\";\n        echo \"<input type='hidden' name='token' value='\".htmlspecialchars(phpAds_SessionGetToken(), ENT_QUOTES).\"' />\";\n        echo \"<input type='submit' name='action' value='{$GLOBALS['strBannerCacheRebuildButton']}' />\";\n        echo \"</form>\";\n    } else {\n        _showPageHeader();\n        echo $GLOBALS['strBannerCacheOK'];\n    }\n}\n\nfunction _showPageHeader()\n{\n    phpAds_PageHeader(\"maintenance-index\");\n    phpAds_MaintenanceSelection(\"banners\");\n}\n\n\n//function processBanners($commit = false) {\n//    $doBanners = OA_Dal::factoryDO('banners');\n//\n//    if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER))\n//    {\n//        $doBanners->addReferenceFilter('agency', $agencyId = OA_Permission::getEntityId());\n//    }\n//    $doBanners->find();\n//\n//    $different = 0;\n//    $same      = 0;\n//    $errors    = array();\n//\n//    while ($doBanners->fetch())\n//    {\n//    \t// Rebuild filename\n//    \tif ($doBanners->storagetype == 'sql' || $doBanners->storagetype == 'web') {\n//    \t\t$doBanners->imageurl = '';\n//    \t}\n//    \t$GLOBALS['_MAX']['bannerrebuild']['errors'] = false;\n//    \tif ($commit) {\n//            $doBannersClone = clone($doBanners);\n//            $doBannersClone->update();\n//            $newCache = $doBannersClone->htmlcache;\n//    \t} else {\n//    \t    $newCache = phpAds_getBannerCache($doBanners->toArray());\n//    \t}\n//        if (empty($GLOBALS['_MAX']['bannerrebuild']['errors'])) {\n//            if ($doBanners->htmlcache != $newCache && ($doBanners->storagetype == 'html')) {\n//                $different++;\n//            } else {\n//                $same++;\n//            }\n//    \t} else {\n//    \t    $errors[] = $doBanners->toArray();\n//    \t}\n//    }\n//    return array('errors' => $errors, 'different' => $different, 'same' => $same);\n//}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once LIB_PATH . '/Extension/invocationTags/InvocationTagsOptions.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"encoding\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Note: Taken from EncodingMigration.php (with the idfields and joinon arrays removed and updated for use with DataObjects)\n/**\n * An array to hold all the tables and fields that should be converted\n *\n * @var array of arrays(\n *  'fields' => array: field names that should be converted,\n *  'idfields' => array: fields identifying the primary (multi?) key used for the WHERE clause on update\n *  'joinon' string: Identifies which field in the table should be used to build the join up (to get the agency ID where applicable)\n */\n$aTableFields = array(\n    'acls' => array(\n        'fields' => array('data'),\n        'idfields' => array('bannerid', 'executionorder'),\n    ),\n    'acls_channel' => array(\n        'fields'    => array('data'),\n        'idfields'  => array('channelid', 'executionorder'),\n    ),\n    'affiliates' =>  array(\n        'fields' =>  array('name', 'mnemonic', 'comments', 'contact', 'email', 'website'),\n        'idfields'  => array('affiliateid'),\n    ),\n    'agency' => array(\n        'fields' => array('name', 'contact', 'email'),\n        'idfields'  => array('agencyid'),\n    ),\n    'application_variable' => array(\n        'fields' => array('name', 'value'),\n        'idfields'  => array('name'),\n    ),\n    'banners' => array(\n        'fields' => array('htmltemplate','htmlcache','target','url','alt','bannertext','description','append','comments','keyword','statustext'),\n        'idfields'  => array('bannerid'),\n    ),\n    'campaigns' => array(\n        'fields' => array('campaignname','comments'),\n        'idfields'  => array('campaignid'),\n    ),\n    'channel' => array(\n        'fields' => array('name','description','comments'),\n        'idfields'  => array('channelid'),\n    ),\n    'clients' => array(\n        'fields' => array('clientname','contact','email','comments'),\n        'idfields'  => array('clientid'),\n    ),\n    'tracker_append' => array(\n        'fields' => array('tagcode'),\n        'idfields'  => array('tracker_append_id'),\n    ),\n    'trackers' => array(\n        'fields' => array('trackername','description','appendcode'),\n        'idfields'  => array('trackerid'),\n    ),\n    'userlog' => array(\n        'fields' => array('details'),\n        'idfields'  => array('userlogid'),\n    ),\n    'users' => array(\n        'fields' => array('contact_name', 'email_address', 'comments'),\n        'idfields'  => array('user_id'),\n    ),\n\n    'variables' => array(\n        'fields' => array('name','description','variablecode'),\n        'idfields'  => array('variableid'),\n    ),\n    'zones' => array(\n        'fields' => array('zonename','description','prepend','append','comments','what'),\n        'idfields'  => array('zoneid'),\n    ),\n);\n\nif (!empty($_POST['encConfirm'])) {\n    OA_Permission::checkSessionToken();\n\n    _iterateTableFields($aTableFields, true);\n    Header(\"Location: maintenance-maintenance.php\");\n}\n\n/**\n * This function iterates over the table fields, and either gathers data which would be changed, or changes the data\n *\n * @param array $aTableFields\n * @return array\n */\nfunction _iterateTableFields($aTableFields, $execute = false)\n{\n    $aChanged = array();\n    $encTo =   (!empty($_POST['encTo']))   ? $_POST['encTo']   : 'UTF-8';\n    $encFrom = (!empty($_POST['encFrom'])) ? $_POST['encFrom'] : 'UTF-8';\n\n    foreach ($aTableFields as $table => $tableData)\n    {\n        $doTable = OA_Dal::factoryDO($table);\n        $doTable->find();\n        while ($doTable->fetch()) {\n            $changed = false;\n            foreach ($tableData['fields'] as $field) {\n                $converted = MAX_commonConvertEncoding($doTable->$field, $encTo, $encFrom);\n                if ($converted === $doTable->$field) { continue; }\n                $id = array();\n                foreach ($tableData['idfields'] as $idField) {\n                    $id[$idField] = $doTable->$idField;\n                }\n                if ($execute && !in_array(implode('.', $id), $_POST['aExecute'][$table][$field])) {\n                    continue;\n                }\n\n                $aChanged[$table][$field][] = array('from' => $doTable->$field, 'to' => $converted, 'id' => $id);\n                $doTable->$field = $converted;\n                $changed = true;\n            }\n            if ($changed && $execute) { $doTable->update(); }\n        }\n    }\n   return $aChanged;\n}\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strEncodingExplaination;\necho \"<br /><br />\";\n\nphpAds_ShowBreak();\necho \"<form action='maintenance-encoding.php' method='POST'>\";\n$oOptions = new Plugins_InvocationTagsOptions();\n$aEncodings = $oOptions->_getAvailableCharsets();\n\n$selectedFrom = (!empty($_POST['encFrom'])) ? $_POST['encFrom'] : 'UTF-8';\n$selectedTo   = (!empty($_POST['encTo']))   ? $_POST['encTo']   : 'UTF-8';\n\necho $strEncodingConvertFrom . \" <select name='encFrom'>\\n\";\nforeach ($aEncodings as $encCode => $encName) {\n    $selected = ($encCode == $selectedFrom) ? \" selected='selected'\" : '';\n    echo \"    <option value='{$encCode}' {$selected}>{$encName}</option>\\n\";\n}\necho \"</select> \";\n\n//echo $strEncodingConvertTo . \" <select name='encTo'>\\n\";\n//foreach ($aEncodings as $encCode => $encName) {\n//    $selected = ($encCode == $selectedTo) ? \" selected='selected'\" : '';\n//    echo \"    <option value='{$encCode}' {$selected}>{$encName}</option>\\n\";\n//}\n//echo \"</select> \";\n\necho \"<input type='submit' name='encTest' value='{$strEncodingConvertTest}' />\";\n\n// Show the results of the encoding\nif (!empty($_POST['encTest'])) {\n    phpAds_ShowBreak();\n\n    $aChanged = _iterateTableFields($aTableFields, false);\n\n    echo \"{$GLOBALS['strConvertThese']}<br /><br />\n        <table border='1' padding='1'>\n            <tr><th>{$GLOBALS['strInclude']}</th><th>{$GLOBALS['strFrom']}</th><th>\" . ucfirst($GLOBALS['strTo']) . \"</th></tr>\\n\";\n\n    foreach ($aChanged as $table => $aFields) {\n        foreach ($aFields as $field => $aItems) {\n            foreach ($aItems as $idx => $aItem) {\n                echo \"<tr>\n                            <td><input type='checkbox' name='aExecute[{$table}][{$field}][]' value='\" . implode('.', $aItem['id']) . \"' checked='checked' /></td>\n                            <td>\" . (htmlspecialchars($aItem['from'])) . \"</td>\n                            <td>\" . (htmlspecialchars($aItem['to'])) . \"</td>\n                        </tr>\\n\";\n            }\n        }\n    }\n    echo \"</table><br />\";\n    echo \"<input type='hidden' name='token' value='\".htmlspecialchars(phpAds_SessionGetToken(), ENT_QUOTES).\"' />\";\n    echo \"<input type='submit' name='encConfirm' value='{$GLOBALS['strConvert']}' /> <input type='button' name='encCancel' value='{$GLOBALS['strCancel']}' onclick='javascript:document.location = \\\"\" . $_SERVER['SCRIPT_NAME'] . \"\\\";' />\";\n}\n\nphpAds_ShowBreak();\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\nphpAds_registerGlobal('action', 'returnurl');\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"menus\");\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strMenusPrecis;\necho \"<br /><br />\";\n\nif (!empty($action))\n{\n    OA_Permission::checkSessionToken();\n\n    switch ($action)\n    {\n        case 'build':\n            require_once(LIB_PATH.'/Extension/admin.php');\n            $oExtensionManager = new OX_Extension_admin();\n            $oExtensionManager->runTasksOnDemand();\n            break;\n        default:\n    }\n    echo $strMenusCachedOk.'</br>';\n}\n\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-menus.php?action=build&amp;token=\".urlencode(phpAds_SessionGetToken()).\"'>Rebuild Menu Cache</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"plugins\");\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strPluginsPrecis;\necho \"<br /><br />\";\n\nphpAds_registerGlobal('action', 'returnurl');\n\nif (!empty($action))\n{\n    OA_Permission::checkSessionToken();\n\n    switch ($action)\n    {\n        case 'rep':\n            // generates brief display and detailed log\n            // with debug info on plugin installations and status\n            require_once(LIB_PATH.'/Extension/ExtensionCommon.php');\n            $oExtensionManager = new OX_Extension_Common();\n            $aPlugins = $oExtensionManager->getPluginsDiagnostics();\n            $oTpl = new OA_Admin_Template('plugin-report.html');\n            $oTpl->assign('aPlugins', $aPlugins['simple']);\n            $oTpl->assign('aErrors', $aPlugins['errors']);\n            if ($fp = fopen(MAX_PATH.'/var/plugins-report.log','w'))\n            {\n                fwrite($fp, \"********** Display array var_dump **********\\n\");\n                fwrite($fp, print_r($aPlugins['simple'],true));\n                fwrite($fp, \"\\n********** Errors array var_dump: **********\\n\");\n                fwrite($fp, print_r($aPlugins['errors'],true));\n                fwrite($fp, \"\\n********** getPluginsDiagnostics() var_dump: **********\\n\");\n                fwrite($fp, print_r($aPlugins['detail'],true));\n                fclose($fp);\n            }\n            break;\n        case 'pref':\n            // this rebuilds the cached array that holds the text and links\n            // for the account-preferences drop-down list\n            require_once(LIB_PATH.'/Extension/ExtensionCommon.php');\n            $oExtensionManager = new OX_Extension_Common();\n            $oExtensionManager->cachePreferenceOptions();\n            break;\n        case 'hook':\n            // this rebuilds the cached array that holds the component hook registration array\n            require_once(LIB_PATH.'/Extension/ExtensionCommon.php');\n            $oExtensionManager = new OX_Extension_Common();\n            $oExtensionManager->cacheComponentHooks();\n            break;\n        case 'reg':\n            // currently rewrites delivery hooks to conf\n            require_once(LIB_PATH.'/Extension/ExtensionDelivery.php');\n            $oExtensionManager = new OX_Extension_Delivery();\n            $oExtensionManager->runTasksOnDemand();\n            break;\n        case 'exp':\n            $oTpl = new OA_Admin_Template('plugin-export.html');\n            require_once LIB_PATH.'/Plugin/PluginExport.php';\n            $oExporter = new OX_PluginExport();\n            $aErrors = array();\n            foreach ($GLOBALS['_MAX']['CONF']['plugins'] as $name => $enabled)\n            {\n                $aPlugins[$name]['file'] = '';\n                $aPlugins[$name]['error'] = false;\n                if ($file = $oExporter->exportPlugin($name))\n                {\n                    $aPlugins[$name]['file'] = $file;\n                }\n                else\n                {\n                    $aPlugins[$name]['error'] = true;\n                    $aErrors[] = $oExporter->aErrors;\n                }\n            }\n            $oTpl->assign('aPlugins', $aPlugins);\n            $oTpl->assign('aErrors', $aErrors);\n            break;\n        /*case 'dep':\n            require_once LIB_PATH . '/Plugin/PluginManager.php';\n            $oPluginManager = new OX_PluginManager();\n            $oPluginManager->_cacheDependencies();\n            if (empty($oPluginManager->aErrors))\n            {\n                $oPluginManager->aMessages[] = 'No dependency problems detected';\n            }\n            break;*/\n        default:\n    }\n}\n\n$token = 'token='.urlencode(phpAds_SessionGetToken()).'&amp;';\n\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?{$token}action=hook'>Rebuild Component Hooks Cache</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?{$token}action=pref'>Rebuild Preferences List</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?{$token}action=reg'>Rebuild Delivery Hooks Cache</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?{$token}action=rep'>Plugin Report</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?{$token}action=exp'>Export All Plugins</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\n\n/*echo \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-plugins.php?{$token}action=dep'>Check Dependencies</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();*/\nif ($oTpl)\n{\n    $oTpl->display();\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\nOA_Permission::checkSessionToken();\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n// Set timezone to UTC\nOA_setTimeZoneUTC();\n\n// Run the Maintenance Priority Engine process\nOA_Maintenance_Priority::run();\n\n// Rebuild cache\n// include_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n// phpAds_cacheDelete();\n\nOX_Admin_Redirect::redirect('maintenance-priority.php');\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"priority\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nfunction phpAds_showBanners()\n{\n\t$conf = $GLOBALS['_MAX']['CONF'];\n\tglobal $strUntitled, $strName, $strID, $strWeight;\n\tglobal $strProbability, $strPriority, $strRecalculatePriority;\n\tglobal $phpAds_TextDirection;\n\n\t$doAdZoneAssoc = OA_Dal::factoryDO('ad_zone_assoc');\n\t$doAdZoneAssoc->selectAdd();\n\t$doAdZoneAssoc->selectAs(array('ad_id'), 'bannerid');\n\t$doAdZoneAssoc->selectAdd('priority');\n\t$doAdZoneAssoc->zoneid = 0;\n\t$doAdZoneAssoc->OrderBy('priority DESC');\n    $doAdZoneAssoc->find();\n\n    $rows = array();\n\t$prioritysum = 0;\n\n\twhile ($doAdZoneAssoc->fetch() && $tmprow = $doAdZoneAssoc->toArray()) {\n\t\tif ($tmprow['priority']) {\n\t\t\t$prioritysum += $tmprow['priority'];\n\t\t\t$rows[$tmprow['bannerid']] = $tmprow;\n\t\t}\n\t}\n\n\tif (is_array($rows)) {\n\t\t$i=0;\n\n\t\t// Header\n\t\techo \"<table width='100%' border='0' align='center' cellspacing='0' cellpadding='0'>\";\n\t\techo \"<tr height='25'>\";\n\t\techo \"<td height='25'><b>&nbsp;&nbsp;\".$strName.\"</b></td>\";\n\t\techo \"<td height='25'><b>\".$strID.\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>\";\n\t\techo \"<td height='25'><b>\".$strPriority.\"</b></td>\";\n\t\techo \"<td height='25'><b>\".$strProbability.\"</b></td>\";\n\t\techo \"</tr>\";\n\n\t\techo \"<tr height='1'><td colspan='5' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\n\t\t// Banners\n\t\tforeach (array_keys($rows) as $key) {\n\t\t\t$name = phpAds_getBannerName($rows[$key]['bannerid'], 60, false);\n\n\t\t\tif ($i > 0) echo \"<tr height='1'><td colspan='5' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='100%'></td></tr>\";\n\n\t    \techo \"<tr height='25' \".($i%2==0?\"bgcolor='#F6F6F6'\":\"\").\">\";\n\n\t\t\techo \"<td height='25'>\";\n\t\t\techo \"&nbsp;&nbsp;\";\n\n\t\t\t// Banner icon\n\t\t\tif ($rows[$key]['storagetype'] == 'html')\n\t\t\t\techo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-html.gif' align='absmiddle'>&nbsp;\";\n\t\t\telseif ($rows[$key]['storagetype'] == 'url')\n\t\t\t\techo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-url.gif' align='absmiddle'>&nbsp;\";\n\t\t\telse\n\t\t\t\techo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-stored.gif' align='absmiddle'>&nbsp;\";\n\n\t\t\t// Name\n\t\t\techo $name;\n\t\t\techo \"</td>\";\n\n\t\t\techo \"<td height='25'>\".$rows[$key]['bannerid'].\"</td>\";\n\t\t\techo \"<td height='25'>\".$rows[$key]['priority'].\"</td>\";\n\t\t\techo \"<td height='25'>\".number_format($rows[$key]['priority'] / $prioritysum * 100, $pref['ui_percentage_decimals']).\"%</td>\";\n\n\t\t\techo \"</tr>\";\n\t\t\t$i++;\n\t\t}\n\n\t\t// Footer\n\t\techo \"<tr height='1'><td colspan='5' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n\t\techo \"</table>\";\n\t}\n}\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\n\n// Show recalculate button\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-priority-calculate.php?token=\".urlencode(phpAds_SessionGetToken()).\"'>$strRecalculatePriority</a>&nbsp;&nbsp;\";\necho \"<br /><br />\";\nphpAds_ShowBreak();\n\necho \"<br /><br />\";\n//echo 'This page needs to be re-written to show an agency-based list of ad/zone priority data...';\necho \"<br /><br />\";\n\necho \"</table>\";\necho \"<br /><br />\";\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\nOA_Permission::checkSessionToken();\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$doBanners = OA_Dal::factoryDO('banners');\n$doBanners->storagetype = 'sql';\n$doBanners->find();\n\nwhile ($doBanners->fetch())\n{\n\t// Get the filename\n\t$filename = $doBanners->filename;\n\n\t// Copy the file\n\t$buffer = phpAds_ImageRetrieve('sql', $filename);\n\t$doBanners->filename = phpAds_ImageStore('web', $filename, $buffer);\n\n\t// TODO: Would be nice if we gave some indication to the user of success or failure!\n\tif ($doBanners->filename != false)\n\t{\n\t\tphpAds_ImageDelete ('sql', $filename);\n\n\t    $doBannersClone = clone($doBanners);\n\n\t\t$doBannersClone->imageurl = '';\n\t\t$doBannersClone->storagetype = 'web';\n\n        $doBannersClone->update();\n\t}\n}\n\nHeader(\"Location: maintenance-storage.php\");\n\n?>", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"maintenance-index\");\nphpAds_MaintenanceSelection(\"storage\");\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\necho \"<br />\";\necho $strStorageExplaination;\necho \"<br /><br />\";\n\nphpAds_ShowBreak();\necho \"<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' border='0' align='absmiddle'>&nbsp;<a href='maintenance-storage-move.php?token=\".urlencode(phpAds_SessionGetToken()).\"'>$strMoveToDirectory</a>&nbsp;&nbsp;\";\nphpAds_ShowBreak();\n\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_ADVERTISER);\nOA_Permission::checkSessionToken();\n\n\n// Set longer time out, and ignore user abort\nif (!ini_get('safe_mode')) {\n    @set_time_limit($conf['maintenance']['timeLimitScripts']);\n    @ignore_user_abort(true);\n}\n\n// No output required\nob_start();\n\n// Run maintenance\nOA_Maintenance_Priority::run();\n\n// Clean the output buffer\nob_clean();\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/max/Admin/Inventory/TrackerAppend.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients', $clientid);\nOA_Permission::enforceAccessToObject('trackers', $trackerid);\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\nphpAds_SessionDataStore();\n\n// Initialize trackerAppend class\n$trackerAppend = new Max_Admin_Inventory_TrackerAppend();\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\nheader(\"Content-Type: text/html; charset=ISO-8859-1\");\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    OA_Permission::checkSessionToken();\n\n    $trackerAppend->handlePost($_POST);\n} else {\n    $trackerAppend->handleGet();\n}\n\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n$doClients = OA_Dal::factoryDO('clients');\n$doClients->whereAdd('clientid <>'.$trackerid);\nif (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n    $doClients->agencyid = OA_Permission::getAgencyId();\n}\n$doClients->find();\n$aOtherAdvertisers = array();\nwhile ($doClients->fetch() && $row = $doClients->toArray()) {\n    $aOtherAdvertisers[] = $row;\n}\nMAX_displayNavigationTracker($clientid, $trackerid, $aOtherAdvertisers);\n\n$trackerAppend->display();\n\n\n\n/*-------------------------------------------------------*/\n/* Store preferences                                     */\n/*-------------------------------------------------------*/\n\n$session['prefs']['tracker-variables.php']['trackerid'] = $trackerid;\n\n\nphpAds_SessionDataStore();\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\n\n// Register input variables\nphpAds_registerGlobal (\n    'action',\n    'variablemethod'\n);\n\n// Since there may be an unknown number of variables posted (which are accessed by $_POST directly in the code below),\n// clean the whole $_POST array\nMAX_commonRemoveSpecialChars($_POST);\n\n/*-------------------------------------------------------*/\n/* Affiliate interface security                          */\n/*-------------------------------------------------------*/\n\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients', $clientid);\nOA_Permission::enforceAccessToObject('trackers', $trackerid);\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\nphpAds_SessionDataStore();\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nif (!isset($variables))\n    if (isset($session['prefs']['tracker-variables.php']['variables']) && $session['prefs']['tracker-variables.php']['trackerid']==$trackerid)\n        $variables = $session['prefs']['tracker-variables.php']['variables'];\n\n\n\nif (!empty($trackerid))\n{\n    // Get publisher list\n    $dalAffiliates = OA_Dal::factoryDAL('affiliates');\n    $rsAffiliates = $dalAffiliates->getPublishersByTracker($trackerid);\n    $rsAffiliates->find();\n\n    $publishers = array();\n    while ($rsAffiliates->fetch() && $row = $rsAffiliates->toArray()) {\n        $publishers[$row['affiliateid']] = strip_tags(phpAds_BuildAffiliateName($row['affiliateid'], $row['name']));\n    }\n\n    if (!isset($variablemethod)) {\n        // get variable method\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        if ($doTrackers->get($trackerid)) {\n            $variablemethod = $doTrackers->variablemethod;\n        }\n    }\n\n    if (!isset($variables))\n    {\n        // get variables from db\n        $doVariables = OA_Dal::factoryDO('variables');\n        $doVariables->trackerid = $trackerid;\n        $doVariables->find();\n\n        $variables = array();\n        while ($doVariables->fetch() && $vars = $doVariables->toArray())\n        {\n            // Remove assignment\n            $vars['variablecode'] = addslashes(trim(preg_replace('/^.+?=/', '', $vars['variablecode'])));\n\n            $vars['publisher_visible'] = array();\n            $vars['publisher_hidden']  = array();\n\n            $variables[$vars['variableid']] = $vars;\n        }\n\n        // get publisher visibility from db\n        $doVariables = OA_Dal::factoryDO('variables');\n        $doVariables->trackerid = $trackerid;\n        $doVariable_publisher = OA_Dal::factoryDO('variable_publisher');\n        $doVariables->joinAdd($doVariable_publisher);\n        $doVariables->find();\n\n        while ($doVariables->fetch() && $pubs = $doVariables->toArray())\n        {\n            if ($pubs['visible'] && $variables[$pubs['variable_id']]['hidden'] == 't') {\n                $variables[$pubs['variable_id']]['publisher_visible'][] = $pubs['publisher_id'];\n            } elseif (!$pubs['visible'] && $variables[$pubs['variable_id']]['hidden'] != 't') {\n                $variables[$pubs['variable_id']]['publisher_hidden'][] = $pubs['publisher_id'];\n            }\n        }\n\n        // Remove keys]\n        if (isset($variables))\n        {\n            $variables = array_values($variables);\n        }\n    }\n    else\n    {\n        // Get values on the form\n        for ($f=0; $f < sizeof($variables)+1; $f++)\n        if (isset($_POST['name'.$f]))\n        {\n\n            $variables[$f]['name'] = $_POST['name'.$f];\n            $variables[$f]['description'] = $_POST['description'.$f];\n            $variables[$f]['datatype'] = $_POST['datatype'.$f];\n            $variables[$f]['purpose'] = $_POST['purpose'.$f];\n            $variables[$f]['reject_if_empty'] = isset($_POST['reject_if_empty'.$f]) ? $_POST['reject_if_empty'.$f] : '';\n            $variables[$f]['is_unique'] = isset($_POST['is_unique'.$f]) ? $_POST['is_unique'.$f] : '';\n            // Set window delays\n            $uniqueWindowSeconds = 0;\n            if (!empty($_POST['uniquewindow'.$f]))\n            {\n                $uniqueWindow = $_POST['uniquewindow'.$f];\n                if ($uniqueWindow['second'] != '-')  $uniqueWindowSeconds += (int)$uniqueWindow['second'];\n                if ($uniqueWindow['minute'] != '-')  $uniqueWindowSeconds += (int)$uniqueWindow['minute'] * 60;\n                if ($uniqueWindow['hour'] != '-')      $uniqueWindowSeconds += (int)$uniqueWindow['hour'] * 60*60;\n                if ($uniqueWindow['day'] != '-')      $uniqueWindowSeconds += (int)$uniqueWindow['day'] * 60*60*24;\n            }\n            $variables[$f]['unique_window'] = $uniqueWindowSeconds;\n            $variables[$f]['variablecode'] = $_POST['variablecode'.$f];\n\n            $variables[$f]['publisher_visible'] = array();\n            $variables[$f]['publisher_hidden']  = array();\n\n            switch ($_POST['visibility'.$f]) {\n                case 'all':\n                    $variables[$f]['hidden'] = 't';\n                    break;\n                case 'none':\n                    $variables[$f]['hidden'] = 'f';\n                    break;\n                default:\n                    $variables[$f]['hidden'] = $_POST['p_default'.$f] ? 'f' : 't';\n                    if ($_POST['p_default'.$f]) {\n                        $variables[$f]['publisher_hidden']  = isset($_POST['p_hide'.$f]) && is_array($_POST['p_hide'.$f]) ? $_POST['p_hide'.$f] : array();\n                    } else {\n                        $variables[$f]['publisher_visible'] = isset($_POST['p_show'.$f]) && is_array($_POST['p_show'.$f]) ? $_POST['p_show'.$f] : array();\n                    }\n            }\n        }\n    }\n\n    // insert a new variable\n    if (isset($action['new']))\n            $variables[] = array(\n                'publisher_visible' => array(),\n                'publisher_hidden' => array(),\n                'name' => '',\n                'hidden' => 'f',\n                'description' => '',\n                'datatype' => 'string',\n                'purpose' => '',\n                'reject_if_empty' => '',\n                'is_unique' => null,\n                'unique_window' => 0,\n                'variablecode' => '',\n            );\n\n\n    // has user clicked on save changes?\n    if (isset($action['save']))\n    {\n        OA_Permission::checkSessionToken();\n\n        // save variablemethod\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        $doTrackers->get($trackerid);\n        $doTrackers->variablemethod = $variablemethod;\n        $doTrackers->update();\n\n        $isUniqueAlreadyExists = false;\n        foreach($variables as $k => $v)\n        {\n            // Set purpose to NULL when generic was chosen\n            if (!empty($v['purpose'])) {\n                $v['purpose'] = $v['purpose'];\n            } else {\n                $v['purpose'] = \"NULL\";\n            }\n\n            if ($v['is_unique']) {\n                if($isUniqueAlreadyExists) {\n                    $variables[$k]['is_unique'] = $v['is_unique'] = 0;\n                } else {\n                    $variables[$k]['is_unique'] = $v['is_unique'] = 1;\n                }\n                $isUniqueAlreadyExists = true;\n            }\n\n            switch ($variablemethod) {\n                case 'js':\n                    $v['variablecode'] = \"var {$v['name']} = \\\\'%%\".strtoupper($v['name']).\"_VALUE%%\\\\'\"; break;\n                case 'dom':\n                    $v['variablecode'] = ''; break;\n                case 'custom':\n                    $v['variablecode'] = \"var {$v['name']} = \\\\'\".$v['variablecode'].\"\\\\'\"; break;\n                default:\n                    $v['variablecode'] = \"var {$v['name']} = escape(\\\\'%%\".strtoupper($v['name']).\"_VALUE%%\\\\')\"; break;\n            }\n\n            // Always delete variable_publisher entries\n            if (!empty($v['variableid'])) {\n                $doVariable_publisher = OA_Dal::factoryDO('variable_publisher');\n                $doVariable_publisher->variable_id = $v['variableid'];\n                $doVariable_publisher->delete();\n            }\n\n            $doVariables = OA_Dal::factoryDO('variables');\n            if (!empty($v['variableid']) && isset($v['delete'])) {\n                // delete variables from db\n                $doVariables->deleteById($v['variableid']);\n            } elseif (isset($v['variableid']) && !isset($v['delete'])) {\n                // update variable info\n                $doVariables->get($v['variableid']);\n                $doVariables->setFrom($v);\n                $doVariables->update();\n            } else {\n                $doVariables->setFrom($v);\n                $doVariables->trackerid = $trackerid;\n                $v['variableid'] = $doVariables->insert();\n            }\n\n            // Update variable_publisher entries\n            $variable_publisher = array();\n            if (is_array($v['publisher_visible'])) {\n                foreach ($v['publisher_visible'] as $p) {\n                    $variable_publisher[$p] = 1;\n                }\n            }\n            if (is_array($v['publisher_hidden'])) {\n                foreach ($v['publisher_hidden'] as $p) {\n                    $variable_publisher[$p] = 0;\n                }\n            }\n\n            foreach ($variable_publisher as $publisher_id => $visible) {\n                $doVariable_publisher = OA_Dal::factoryDO('variable_publisher');\n                $doVariable_publisher->variable_id = $v['variableid'];\n                $doVariable_publisher->publisher_id = $publisher_id;\n                $doVariable_publisher->visible = $visible;\n                $doVariable_publisher->insert();\n            }\n\n        }\n\n        // Queue confirmation message\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strTrackerVarsHaveBeenUpdated'], array(\n            MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=\".$clientid.\"&trackerid=\".$trackerid),\n            htmlspecialchars($doTrackers->trackername)\n        ));\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        // unset variables!\n        unset    ($session['prefs']['tracker-variables.php']);\n        phpAds_SessionDataStore();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_CacheDelete('what=tracker:' . $trackerid);\n\n        // redirect to the next page\n        header     (\"Location: tracker-variables.php?clientid=\".$clientid.\"&trackerid=\".$trackerid);\n        exit;\n\n    }\n\n}\n\n$doClients = OA_Dal::factoryDO('clients');\n$doClients->whereAdd('clientid <>'.$trackerid);\nif (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n    $doClients->agencyid = OA_Permission::getAgencyId();\n}\n$doClients->find();\n$aOtherAdvertisers = array();\nwhile ($doClients->fetch() && $row = $doClients->toArray()) {\n    $aOtherAdvertisers[] = $row;\n}\nMAX_displayNavigationTracker($clientid, $trackerid, $aOtherAdvertisers);\n\n\n//Start\n$tabindex = 0;\n\nif (isset($trackerid) && $trackerid != '')\n{\n            echo \"<form action='\".$_SERVER['SCRIPT_NAME'].\"?clientid=$clientid&trackerid=$trackerid' method='post' onsubmit='return m3_hideShowSubmit()'>\\n\";\n                echo \"<input type='token' name='submit' value='\".htmlspecialchars(phpAds_SessionGetToken(), ENT_QUOTES).\"'>\";\n                echo \"<input type='hidden' name='submit' value='true'>\";\n                echo \"<input type='image' name='dummy' src='\" . OX::assetPath() . \"/images/spacer.gif' border='0' width='1' height='1'>\\n\";\n                echo \"<br /><br />\\n\";\n\n                echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\".\"\\n\";\n                echo \"<tr><td height='25' colspan='3'><b>\".$strTrackingSettings.\"</b></td></tr>\".\"\\n\";\n                echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\".\"\\n\";\n                echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\".\"\\n\";\n\n                echo \"<tr>\".\"\\n\";\n                echo \"\\t\".\"<td width='30'>&nbsp;</td>\".\"\\n\";\n                echo \"\\t\".\"<td width='200'>\".$strTrackerType.\"</td>\".\"\\n\";\n                echo \"\\t\".\"<td><select name='variablemethod' tabindex='\".($tabindex++).\"' onchange=\\\"m3_updateVariableMethod()\\\">\";\n                echo \"<option value='js'\".($variablemethod == 'js' ? ' selected' : '').\">\".$strTrackerTypeJS.\"</option>\";\n                echo \"<option value='default'\".($variablemethod == 'default' ? ' selected' : '').\">\".$strTrackerTypeDefault.\"</option>\";\n                echo \"<option value='dom'\".($variablemethod == 'dom' ? ' selected' : '').\">\".$strTrackerTypeDOM.\"</option>\";\n                echo \"<option value='custom'\".($variablemethod == 'custom' ? ' selected' : '').\">\".$strTrackerTypeCustom.\"</option>\";\n                echo \"</select></td>\".\"\\n\";\n                echo \"</tr>\".\"\\n\";\n                echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\".\"\\n\";\n                echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\".\"\\n\";\n                echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\".\"\\n\";\n                echo \"</table>\";\n\n                echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\\n\";\n                    echo \"<tr><td height='25' colspan='4' bgcolor='#FFFFFF'><b>\".$strVariables.\"</b></td></tr>\\n\";\n                    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\\n\";\n\n        if ($variables)\n        {\n            $varCount = 0;\n            if (isset($action['del']))\n            {\n                $key = array_keys($action['del']);\n                $variables[$key[0]]['delete']= true;\n            }\n\n                    foreach ($variables as $k=>$v)\n                    {\n                        if (!isset($v['delete']))\n                        {\n                            $varCount++;\n                            // variable area\n                            echo \"<tr><td height='25' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;\".$strTrackFollowingVars.\"</td></tr>\\n\";\n                            echo \"<tr><td colspan='4'><img src='\" . OX::assetPath() . \"/images/break-el.gif' width='100%' height='1'></td></tr>\\n\";\n                            echo \"<tr><td colspan='4' bgcolor='#F6F6F6'><br /></td></tr>\\n\";\n                            echo \"<tr height='35' bgcolor='#F6F6F6' valign='top'>\\n\";\n                                echo \"<td width='100'></td>\\n\";\n                                echo \"<td width='130'><img src='\" . OX::assetPath() . \"/images/icon-acl.gif' align='absmiddle'>&nbsp;Variable</td>\\n\";\n                                echo \"<td>\\n\";\n                                    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0'>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableName.\"</td>\\n\";\n                                            echo \"<td><input class='flat' type='text' name='name{$k}' value=\\\"\".htmlspecialchars($v['name']).\"\\\"></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td width='200'>\".$strVariableDescription.\"</td>\\n\";\n                                            echo \"<td><input class='flat' type='text' name='description\".$k.\"' value=\\\"\".htmlspecialchars($v['description']).\"\\\"></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableDataType.\"</td>\\n\";\n                                            echo \"<td><select name='datatype\".$k.\"'>\\n\";\n                                            echo \"<option \".($v['datatype'] =='string'  ? 'selected ' : '').\"value='string'>\".$strString.\"</option>\\n\";\n                                            echo \"<option \".($v['datatype'] =='numeric' ? 'selected ' : '').\"value='numeric'>\".$strNumber.\"</option>\\n\";\n                                            echo \"<option \".($v['datatype'] =='date' ? 'selected ' : '').\"value='date'>\".$strDate.\"</option>\\n\";\n                                            echo \"</select></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariablePurpose.\"</td>\\n\";\n                                            echo \"<td><select name='purpose\".$k.\"'>\\n\";\n                                            echo \"<option \".(!$v['purpose'] ? 'selected ' : '').\"value=''>\".$strGeneric.\"</option>\\n\";\n                                            echo \"<option \".($v['purpose'] == 'basket_value'  ? 'selected ' : '').\"value='basket_value'>\".$strBasketValue.\"</option>\\n\";\n                                            echo \"<option \".($v['purpose'] == 'num_items' ? 'selected ' : '').\"value='num_items'>\".$strNumItems.\"</option>\\n\";\n                                            echo \"<option \".($v['purpose'] == 'post_code' ? 'selected ' : '').\"value='post_code'>\".$strPostcode.\"</option>\\n\";\n                                            echo \"</select></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableRejectEmpty.\"</td>\\n\";\n                                            echo \"<td>\\n\";\n                                                $checked = ($v['reject_if_empty']) ? 'checked' : '';\n                                                echo \"<input type='checkbox' name='reject_if_empty\".$k.\"' value='1' $checked>\";\n                                            echo \"</td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\".$strVariableIsUnique.\"</td>\\n\";\n                                            echo \"<td>\\n\";\n                                                $checked = ($v['is_unique']) ? 'checked' : '';\n                                                $uniqueCheckboxId = 'uniqueCheckbox'.$k;\n\n                                                $seconds_left = $v['unique_window'];\n                                                $uniqueWindow['day'] = floor($seconds_left / (60*60*24));\n                                                $seconds_left = $seconds_left % (60*60*24);\n                                                $uniqueWindow['hour'] = floor($seconds_left / (60*60));\n                                                $seconds_left = $seconds_left % (60*60);\n                                                $uniqueWindow['minute'] = floor($seconds_left / (60));\n                                                $seconds_left = $seconds_left % (60);\n                                                $uniqueWindow['second'] = $seconds_left;\n\n                                                echo \"<table cellpadding='0' cellspacing='0'><tr><td align='left'>\";\n                                                echo \"<input type='checkbox' id='$uniqueCheckboxId' onClick='m3_setRadioCheckbox(this, \\\"is_unique\\\")' name='is_unique\".$k.\"' value='1' $checked>\";\n\n                                                echo '</td><td>';\n\n                                                echo \"<div id='uniqueWindow$k' style='visibility: hidden;'>\";\n                                                echo \"&nbsp;&nbsp;&nbsp;&nbsp;$strUniqueWindow&nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowday$k' class='flat' type='text' size='3' name='uniquewindow{$k}[day]' value='\".$uniqueWindow['day'].\"' onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strDays.\" &nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowhour$k' class='flat' type='text' size='3' name='uniquewindow{$k}[hour]' value='\".$uniqueWindow['hour'].\"' onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strHours.\" &nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowminute$k' class='flat' type='text' size='3' name='uniquewindow{$k}[minute]' value='\".$uniqueWindow['minute'].\"' onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strMinutes.\" &nbsp;&nbsp;\";\n                                                echo \"<input id='uniquewindowsecond$k' class='flat' type='text' size='3' name='uniquewindow{$k}[second]' value='\".$uniqueWindow['second'].\"' onBlur=\\\"m3_formLimitBlur($k);\\\" onKeyUp=\\\"m3_formLimitUpdate($k);\\\"'> \".$strSeconds;\n                                                echo '</div>';\n\n                                                echo '</td></tr></table>';\n\n                                                $onLoadUniqueJs = '';\n                                                if($checked) {\n                                                    $onLoadUniqueJs = \"\\nm3_setRadioCheckbox(document.getElementById('$uniqueCheckboxId'), \\\"is_unique\\\");\";\n                                                }\n                                                $onLoadUniqueJs .= \"\\nm3_formLimitUpdate($k);\";\n\n                                            echo \"</td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr>\\n\";\n                                            echo \"<td>\". 'Variable hidden to' .\"</td>\\n\";\n                                            echo \"<td><select name='visibility\".$k.\"' id='visibility\".$k.\"' onchange='m3_updateVisibility()'>\\n\";\n                                            echo \"<option \".($v['hidden'] != 't' && !count($v['publisher_hidden']) ? 'selected ' : '').\"value='none'>\". 'No websites' .\"</option>\\n\";\n                                            echo \"<option \".(count($v['publisher_visible']) || count($v['publisher_hidden']) ? 'selected ' : '').\"value='some'>\". 'Some websites' .\"</option>\\n\";\n                                            echo \"<option \".($v['hidden'] == 't' && !count($v['publisher_visible'])  ? 'selected ' : '').\"value='all'>\". 'All websites' .\"</option>\\n\";\n                                            echo \"</select></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr class='customvisibility\".$k.\"'><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr class='customvisibility\".$k.\"' valign='top'>\\n\";\n                                            echo \"<td>&nbsp;</td><td><table cellpadding='0' cellspacing='0' width='100%'><tr valign='top' align='left'>\";\n                                            echo \"<td width='50%'><input name='p_default\".$k.\"' type='radio' value='0' \".(count($v['publisher_visible']) || !count($v['publisher_hidden']) ? 'checked ' : '').\"/> \\n\";\n                                            echo \"Hide:<br /><select name='p_hide\".$k.\"[]' id='p_hide\".$k.\"' style='width: 90%' onchange='m3_hideShowMove(this, 1)' size='5' multiple='multiple'>\\n\";\n                                            if ($v['hidden'] == 't') {\n                                                $diff = array_diff(array_keys($publishers), $v['publisher_visible']);\n                                            } elseif (!count($v['publisher_hidden'])) {\n                                                $diff = array_keys($publishers);\n                                            } else {\n                                                $diff = $v['publisher_hidden'];\n                                            }\n                                            foreach ($diff as $p) {\n                                                if (isset($publishers[$p])) {\n                                                    echo \"<option value='\".$p.\"'>\".$publishers[$p].\"</option>\\n\";\n                                                }\n                                            }\n                                            echo \"</select><br /><input type='button' value='&gt;&gt;&gt;' onclick='m3_hideShowMoveAll(\".$k.\", 1)' /></td>\\n\";\n                                            echo \"<td width='50%'><input name='p_default\".$k.\"' type='radio' value='1' \".(count($v['publisher_hidden']) ? 'checked ' : '').\"/> \\n\";\n                                            echo \"Show:<br /><select name='p_show\".$k.\"[]' id='p_show\".$k.\"' style='width: 90%' onchange='m3_hideShowMove(this, 0)' size='5' multiple='multiple'>\\n\";\n                                            if ($v['hidden'] != 't') {\n                                                if (!count($v['publisher_hidden'])) {\n                                                    $diff = array();\n                                                } else {\n                                                    $diff = array_diff(array_keys($publishers), $v['publisher_hidden']);\n                                                }\n                                            } else {\n                                                $diff = $v['publisher_visible'];\n                                            }\n                                            foreach ($diff as $p) {\n                                                if (isset($publishers[$p])) {\n                                                    echo \"<option value='\".$p.\"'>\".$publishers[$p].\"</option>\\n\";\n                                                }\n                                            }\n                                            echo \"</select><input type='button' value='&lt;&lt;&lt;' onclick='m3_hideShowMoveAll(\".$k.\", 0)' /></td>\";\n                                            echo \"</td></tr></table></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                        echo \"<tr class='jscode'><td colspan='2'>&nbsp;</td></tr>\\n\";\n                                        echo \"<tr class='jscode' valign='top'>\\n\";\n                                            echo \"<td>\".$strVariableCode.\"</td>\\n\";\n                                            echo \"<td><table cellpadding='0' cellspacing='0'><tr valign='top'><td>variable&nbsp;=&nbsp;</td><td><textarea name='variablecode\".$k.\"' rows='3' cols='40'>\".htmlspecialchars(stripslashes($v['variablecode'])).\"</textarea></td></tr></table></td>\\n\";\n                                        echo \"</tr>\\n\";\n                                    echo \"</table>\\n\";\n                                echo\"</td>\\n\";\n                                echo \"<td align='right'><input type='image' name='action[del][\".$k.\"]' src='\" . OX::assetPath() . \"/images/icon-recycle.gif' border='0' align='absmiddle' alt='Delete'>&nbsp;&nbsp;</td>\";\n                            echo \"</tr>\";\n                            echo \"<tr bgcolor='#F6F6F6'>\\n\";\n                                echo \"<td>&nbsp;</td>\\n\";\n                                echo \"<td>&nbsp;</td>\\n\";\n                                echo \"<td colspan='2'></td>\\n\";\n                            echo \"</tr>\\n\";\n                            echo \"<tr>\";\n                                echo \"<td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\";\n                            echo \"</tr>\";\n\n                        }\n\n                    }\n\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\";\n                    echo \"</tr>\";\n\n                    echo \"<tr>\";\n                    if ($varCount < 10) {\n                        echo \"<td colspan='4' align='right'>\";\n                            echo \"<img src='\" . OX::assetPath() . \"/images/icon-acl-add.gif' align='absmiddle'>&nbsp;&nbsp;\".$strAddVariable.\"&nbsp;&nbsp;\";\n                            echo \"<input type='image' name='action[new]' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif' border='0' align='absmiddle' alt='$strSave'>\";\n                        echo \"</td>\";\n                    }\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\\n\";\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'>\";\n                            echo \"<input type='submit' name='action[save]' value='Save Changes' tabindex='15'>\\n\";\n                        echo \"</td>\";\n                    echo \"</tr>\";\n                echo \"</form>\";\n\n\n            echo \"</table>\";\n\n        }\n        else\n        {\n            echo \"<tr><td height='25' colspan='4' bgcolor='#F6F6F6'>&nbsp;&nbsp;\".$strNoVarsToTrack.\"</td></tr>\\n\";\n            echo \"<tr><td colspan='4'><img src='\" . OX::assetPath() . \"/images/break-el.gif' width='100%' height='1'></td></tr>\\n\";\n\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\";\n                    echo \"</tr>\";\n\n                    echo \"<tr>\";\n                        echo \"<td colspan='4' align='right'>\";\n                            echo \"<img src='\" . OX::assetPath() . \"/images/icon-acl-add.gif' align='absmiddle'>&nbsp;&nbsp;\".$strAddVariable.\"&nbsp;&nbsp;\";\n                            echo \"<input type='image' name='action[new]' src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/go_blue.gif' border='0' align='absmiddle' alt='$strSave'>\";\n                        echo \"</td>\";\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'><img src='\" . OX::assetPath() . \"/images/spacer.gif' width='1' height='10' /></td>\\n\";\n                    echo \"</tr>\";\n                    echo \"<tr>\";\n                        echo \"<td colspan='4'>\";\n                            echo \"<input type='submit' name='action[save]' value='Save Changes' tabindex='15'>\\n\";\n                        echo \"</td>\";\n                    echo \"</tr>\";\n                echo \"</form>\";\n\n\n            echo \"</table>\";\n        }\n\n}\n/*-------------------------------------------------------*/\n/* Store preferences                                     */\n/*-------------------------------------------------------*/\n\n$session['prefs']['tracker-variables.php']['variables'] = $variables;\n$session['prefs']['tracker-variables.php']['trackerid'] = $trackerid;\n\n\nphpAds_SessionDataStore();\n\n?>\n\n<script language='JavaScript'>\n<!--\n\n    function m3_setRadioCheckbox(field, groupName)\n    {\n        if (document.forms && document.getElementsByTagName)\n        {\n            var fields = eval('field.form.getElementsByTagName(\"input\");');\n\n            for (i=0; i < fields.length; i++)\n            {\n                if (fields[i].getAttribute(\"type\").toLowerCase() == \"checkbox\"\n                    && fields[i].name.indexOf(groupName) != -1) {\n                    var v = fields[i].name.substring(9);\n                    if(fields[i].name != field.name) {\n                        fields[i].checked = false;\n                        m3_setWindowVisibility('uniqueWindow' + v, false);\n                    } else {\n                        m3_setWindowVisibility('uniqueWindow' + v, field.checked);\n                    }\n                }\n            }\n        }\n    }\n\n    function m3_setWindowVisibility(elementName, visibility) {\n        if(visibility) {\n            visible = 'visible';\n        } else {\n            visible = 'hidden';\n        }\n        element = document.getElementById(elementName);\n        if(element) {\n            element.style.visibility = visible;\n        }\n    }\n\n    function m3_formLimitBlur(key)\n    {\n        uniquewindowday    = document.getElementById('uniquewindowday' + key);\n        uniquewindowhour   = document.getElementById('uniquewindowhour' + key);\n        uniquewindowminute = document.getElementById('uniquewindowminute' + key);\n        uniquewindowsecond = document.getElementById('uniquewindowsecond' + key);\n\n        if (uniquewindowday.value == '') uniquewindowday.value = '0';\n        if (uniquewindowhour.value == '') uniquewindowhour.value = '0';\n        if (uniquewindowminute.value == '') uniquewindowminute.value = '0';\n        if (uniquewindowsecond.value == '') uniquewindowsecond.value = '0';\n\n        m3_formLimitUpdate(key);\n    }\n\n    function m3_formLimitUpdate(key)\n    {\n        uniquewindowday    = document.getElementById('uniquewindowday' + key);\n        uniquewindowhour   = document.getElementById('uniquewindowhour' + key);\n        uniquewindowminute = document.getElementById('uniquewindowminute' + key);\n        uniquewindowsecond = document.getElementById('uniquewindowsecond' + key);\n\n        // Set -\n        if (uniquewindowhour.value == '-' && uniquewindowday.value != '-') uniquewindowhour.value = '0';\n        if (uniquewindowminute.value == '-' && uniquewindowhour.value != '-') uniquewindowminute.value = '0';\n        if (uniquewindowsecond.value == '-' && uniquewindowminute.value != '-') uniquewindowsecond.value = '0';\n\n        // Set 0\n        if (uniquewindowday.value == '0') uniquewindowday.value = '-';\n        if (uniquewindowday.value == '-' && uniquewindowhour.value == '0') uniquewindowhour.value = '-';\n        if (uniquewindowhour.value == '-' && uniquewindowminute.value == '0') uniquewindowminute.value = '-';\n        if (uniquewindowminute.value == '-' && uniquewindowsecond.value == '0') uniquewindowsecond.value = '-';\n    }\n\n    //m3_formLimitUpdate(document.clientform);\n\n    function m3_updateVariableMethod()\n    {\n        var s = findObj('variablemethod');\n        var display = s.selectedIndex == s.options.length - 1 ? '' : 'none'\n\n        var trs = document.getElementsByTagName('TR');\n        for (var i = 0; i < trs.length; i++) {\n            if (trs[i].className == 'jscode') {\n                trs[i].style.display = display;\n            }\n        }\n    }\n\n    m3_updateVariableMethod();\n\n    function m3_updateVisibility()\n    {\n        var s = document.getElementsByTagName('SELECT');\n        for (var i = 0; i < s.length; i++) {\n            if (s[i].id.match(/^visibility/)) {\n                var id = s[i].id.replace(/^[^0-9]+/, '');\n                var display = s[i].selectedIndex == 1 ? '' : 'none';\n\n                var trs = document.getElementsByTagName('TR');\n                for (var j = 0; j < trs.length; j++) {\n                    if (trs[j].className == 'customvisibility' + id) {\n                        trs[j].style.display = display;\n                    }\n                }\n            }\n        }\n    }\n\n    m3_updateVisibility();\n\n    function m3_hideShowMove(o, s)\n    {\n        var id = o.id.replace(/^[^0-9]+/, '');\n        var p = document.getElementById((s ? 'p_show' : 'p_hide') + id);\n\n        var sel = o.selectedIndex;\n\n        if (sel >= 0) {\n            p.appendChild(o.options[sel]);\n            o.selectedIndex = -1;\n            p.selectedIndex = -1;\n            o.blur();\n            p.blur();\n        }\n    }\n\n    function m3_hideShowMoveAll(id, s)\n    {\n        var o = document.getElementById((s ? 'p_hide' : 'p_show') + id);\n        var p = document.getElementById((s ? 'p_show' : 'p_hide') + id);\n\n        for (var i = o.options.length - 1; i >= 0; i--) {\n            p.appendChild(o.options[i]);\n        }\n\n        o.selectedIndex = -1;\n        p.selectedIndex = -1;\n        o.blur();\n        p.blur();\n    }\n\n    function m3_hideShowSubmit()\n    {\n        var s = document.getElementsByTagName('SELECT');\n        for (var i = 0; i < s.length; i++) {\n            if (s[i].id.match(/^p_(show|hide)/)) {\n                for (var j = 0; j < s[i].options.length; j++) {\n                    var c = document.createElement('INPUT');\n                    c.type = 'hidden';\n                    c.name = s[i].name;\n                    c.value = s[i].options[j].value;\n                    s[i].parentNode.appendChild(c);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    <?php if (isset($onLoadUniqueJs)) echo $onLoadUniqueJs; ?>\n\n//-->\n</script>\n\n<?php\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Preliminary check before including config.php to prevent it from outputting HTML code\n// in case session is expired\nif (!empty($_POST['xajax'])) {\n    require_once MAX_PATH . '/www/admin/lib-sessions.inc.php';\n    require_once MAX_PATH . '/lib/OA/Permission.php';\n    unset($session);\n    phpAds_SessionDataFetch();\n    if (!OA_Permission::isAccount(OA_ACCOUNT_ADMIN)) {\n        $_POST['xajax']     = $_GET['xajax']     = $_REQUEST['xajax']     = 'sessionExpired';\n        $_POST['xajaxargs'] = $_GET['xajaxargs'] = $_REQUEST['xajaxargs'] = array();\n        require_once MAX_PATH . '/lib/xajax.inc.php';\n    }\n}\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Upgrade/Upgrade.php';\nrequire_once MAX_PATH . '/lib/RV/Sync.php';\nrequire_once MAX_PATH . '/lib/xajax.inc.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-maintenance.inc.php';\n\n$oUpgrader = new OA_Upgrade();\n\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_ADMIN);\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageHeader(\"updates-index\");\nphpAds_MaintenanceSelection(\"history\", \"updates\");\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nfunction getDBAuditTable($aAudit)\n{\n    $td = \"<td class=\\\"tablebody\\\">%s</td>\";\n    $th = \"<th align=\\\"left\\\" style='background-color: #ddd; border-bottom: 1px solid #ccc;'><b>%s</b></th>\";\n    $schemas = \"<table width='100%' cellpadding='8' cellspacing='0' style='border: 1px solid #ccc; background-color: #eee;'>\";\n    $schemas.= \"<tr>\";\n    //$schemas.= sprintf($th, 'schema');\n    //$schemas.= sprintf($th, 'version');\n    $schemas.= sprintf($th, 'Table origin');\n    $schemas.= sprintf($th, 'Backup table');\n    $schemas.= sprintf($th, 'Size');\n    $schemas.= sprintf($th, 'Rows');\n    //$schemas.= sprintf($th, 'Delete');\n    $schemas.= \"</tr>\";\n    $totalSize = 0;\n    $totalRows = 0;\n    foreach ($aAudit AS $k => $aRec)\n    {\n        $schemas.= \"<tr>\";\n        //$schemas.= sprintf($td, $aRec['schema_name']);\n        //$schemas.= sprintf($td, $aRec['version']);\n        $schemas.= sprintf($td, $aRec['tablename']);\n        $schemas.= sprintf($td, $aRec['tablename_backup']);\n        $schemas.= sprintf($td, round($aRec['backup_size'] * 10, 2) . ' kb');\n        $schemas.= sprintf($td, $aRec['backup_rows']);\n        //$schemas.= sprintf($td, \"<input type=\\\"checkbox\\\" id=\\\"chk_tbl[{$aRec['database_action_id']}]\\\" name=\\\"chk_tbl[{$aRec['database_action_id']}]\\\" checked />\");\n        $schemas.= \"</tr>\";\n        $totalSize = $totalSize + $aRec['backup_size'];\n        $totalRows = $totalRows + $aRec['backup_rows'];\n    }\n\n    $schemas.= \"<tr>\";\n    $schemas.= sprintf($th, 'Total');\n    $schemas.= sprintf($th, count($aAudit) . ' tables');\n    $schemas.= sprintf($th, round($totalSize * 10, 2) . ' kb');\n    $schemas.= sprintf($th, $totalRows);\n    //$schemas.= sprintf($th, 'Delete');\n    $schemas.= \"</tr>\";\n\n    $schemas.= \"</table>\";\n    return $schemas;\n}\n\n$oUpgrader->initDatabaseConnection();\n\nif (array_key_exists('btn_clean_audit', $_POST))\n{\n    OA_Permission::checkSessionToken();\n\n    $upgrade_id = $_POST['upgrade_action_id'];\n    $oUpgrader->oAuditor->cleanAuditArtifacts($upgrade_id);\n}\n\n$aAudit = $oUpgrader->oAuditor->queryAuditAllDescending();\n\n\n/*-------------------------------------------------------*/\n/* Error handling                                        */\n/*-------------------------------------------------------*/\n\n$aErrors = $oUpgrader->getErrors();\nif (count($aErrors)>0)\n{\n?>\n<div class='errormessage'><img class='errormessage' src='<?php echo OX::assetPath() ?>/images/errormessage.gif' width='16' height='16' border='0' align='absmiddle'>\n    <?php\n        foreach ($aErrors AS $k => $err)\n        {\n            echo $err.'<br />';\n        }\n    ?>\n</div>\n<?php\n}\n$aMessages = $oUpgrader->getMessages();\nif (count($aMessages)>0)\n{\n?>\n<div class='errormessage' style='background-color: #eee;'><img class='errormessage' src='<?php echo OX::assetPath() ?>/images/info.gif' width='16' height='16' border='0' align='absmiddle'>\n    <?php\n        foreach ($aMessages AS $k => $msg)\n        {\n            echo $msg.'<br />';\n        }\n    ?>\n</div>\n<?php\n}\n\n/*-------------------------------------------------------*/\n/* Display                                               */\n/*-------------------------------------------------------*/\n?>\n        <script type=\"text/javascript\" src=\"<?php echo OX::assetPath() ?>/js/xajax.js\"></script>\n        <script type=\"text/javascript\">\n        <?php\n        include MAX_PATH . '/var/templates_compiled/oxajax.js';\n        ?>\n        </script>\n\n\t\t<table width='100%' border='0' cellspacing='0' cellpadding='0'>\n\t\t<tr>\n\t\t\t<td width='40'>&nbsp;</td>\n\t\t\t<td>\n                <br /><br />\n                <table border='0' width='90%' cellpadding='0' cellspacing='0'>\n                <tr height='25'>\n                    <td height='25'>\n                        <b style=\"color: #003399;\"><?php echo $strName; ?></b>\n                    </td>\n                    <td height='25'>&nbsp;</td>\n                    <td height=\"25\">\n                        <b style=\"color: #003399;\"><?php echo $strFromVersion ?></b>\n                    </td>\n                    <td height=\"25\">\n                        <b style=\"color: #003399;\"><?php echo $strToVersion ?></b>\n                    </td>\n                    <td height=\"25\">\n                        <b style=\"color: #003399;\"><?php echo $strStatus ?></b>\n                    </td>\n                    <td height='25'>\n                        <b style=\"color: #003399;\">Date</b>\n                    </td>\n                    <td height='25' width='70'>\n                        <b style=\"color: #003399;\">&nbsp;</b>\n                    </td>\n                </tr>\n                <tr height='1'>\n                    <td colspan='7' bgcolor='#888888'><img src='<?php echo OX::assetPath() ?>/images/break.gif' height='1' width='100%'></td>\n                </tr>\n                <?php\n                $i=0;\n                asort($aAudit);\n                foreach ($aAudit AS $k => $v)\n                {\n                    if (($v['backups'] || !empty($v['logfile']) || !empty($v['confbackup'])) && $v['logfile'] != 'cleaned by user' && $v['logfile'] != 'file not found'&& $v['confbackup'] != 'cleaned by user' && $v['confbackup'] != 'file not found')\n                    {\n                        $v['backupsExist'] = true;\n                    }\n                ?>\n                    <form name=\"frmOpenads\" action=\"updates-history.php\" method=\"POST\">\n                    <tr height='25' <?php echo ($i%2==0?\"bgcolor='#F6F6F6'\":\"\"); ?>>\n                        <?php\n                            if ($v['backups']) {\n                        ?>\n                        <td height='25' width='25'>\n                            &nbsp;<a href=\"#\" onclick=\"return false;\" title=\"<?php echo $strToggleDataBackupDetails ?>\"><img id=\"img_expand_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/<?php echo $phpAds_TextDirection; ?>/triangle-l.gif\" alt=\"<?php echo $GLOBALS['strClickViewBackupDetails'] ?>\" onclick=\"xajax_expandOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /><img id=\"img_collapse_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/triangle-d.gif\" style=\"display:none\" alt=\"<?php echo $GLOBALS['strClickHideBackupDetails'] ?>\" onclick=\"xajax_collapseOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /></a>\n                        </td>\n                        <td height='25'>\n                            <b>&nbsp;<a href=\"#\" title=\"<?php echo $strShowBackupDetails ?>\" id=\"text_expand_<?php echo $v['upgrade_action_id']; ?>\" onclick=\"xajax_expandOSURow('<?php echo $v['upgrade_action_id']; ?>');return false;\"><?php echo $v['updated']; ?></a><a href=\"#\" title=\"<?php echo $GLOBALS['strHideBackupDetails'] ?>\" id=\"text_collapse_<?php echo $v['upgrade_action_id']; ?>\" style=\"display:none\" onclick=\"xajax_collapseOSURow('<?php echo $v['upgrade_action_id']; ?>');return false;\"><?php echo $v['updated']; ?></a></b>\n                        <?php\n                            } else {\n                        ?>\n                            <td colspan=\"2\"><b style=\"color: #003399;\">&nbsp;<?php echo $v['upgrade_name']; ?></a></b></td>\n                        <?php\n                            }\n                        ?>\n                        </td>\n                        <td height='25'>\n                            <?php echo ($v['version_from']) ? $v['version_from'] : '<b>---</b>'; ?>\n                        </td>\n                        <td height='25'>\n                            <?php echo ($v['version_to']) ? $v['version_to'] : '<b>---</b>'; ?>\n                        </td>\n                        <td height='25'>\n                            <span style=\"text-transform:lowercase;\"><?php  echo ($v['upgrade_name'] == 'version stamp') ? $strUpdatedDbVersionStamp : $aProductStatus[$v['description']]; ?></span>\n                        </td>\n                        <td><b style=\"color: #003399;\">&nbsp;<?php echo $v['updated']; ?></a></b></td>\n                        <td height='25' align='right'>\n                        </td>\n                </tr>\n                <tr height='1'><td colspan='2' bgcolor='#F6F6F6'><img src='<?php echo OX::assetPath() ?>/images/spacer.gif' width='1' height='1'></td><td colspan='5' bgcolor='#888888'><img src='<?php echo OX::assetPath() ?>/images/break-l.gif' height='1' width='100%'></td></tr>\n                <tr style=\"display:table-row;\" <?php echo ($i%2==0?\"bgcolor='#F6F6F6'\":\"\"); ?>>\n                    <td colspan='2'>&nbsp;</td>\n                    <td colspan='5'>\n                        <table width='100%' cellpadding='5' cellspacing='0' border='0' style='border: 0px solid #ccc; margin: 10px 0 10px 0; '>\n                        <tr height='20'>\n                            <td width=\"275\" style=\"border-bottom: 1px solid #ccc;\">\n                            <?php echo $strArtifacts ?>:\n                            </td>\n                            <td width=\"100\" style=\"border-bottom: 1px solid #ccc;\">\n                            <?php echo ($v['backups']) ? \"<b>\" : \"\"; echo ($v['backupsExist']) ? $v['backups'] + !empty($v['logfile']) + !empty($v['confbackup']) : 0; echo ($v['backups']) ? \"</b>\" : \"\"; ?>\n                            </td>\n                            <td align=\"right\" style=\"border-bottom: 1px solid #ccc;\">\n                            <?php\n                            if ($v['backupsExist']) {\n                            ?>\n                                <img src='<?php echo OX::assetPath() ?>/images/icon-recycle.gif' border='0' align='absmiddle' alt='<?php echo $strDelete ?>'><input type=\"submit\" name=\"btn_clean_audit\" onClick=\"return confirm('<?php echo $strBackupDeleteConfirm ?>')\" style=\"cursor: pointer; border: 0; background: 0; color: #003399;font-size: 13px;\" value=\"<?php echo $strDeleteArtifacts ?>\">\n                            <?php\n                            }\n                            else\n                            {\n                            ?>\n                                &nbsp;\n                            <?php\n                            }\n                            ?>\n                            </td>\n                        </tr>\n                        <?php\n                        if ($v['backups'])\n                        {\n                        ?>\n                        <tr>\n                            <td width=\"235\">\n                            <?php echo $strBackupDbTables ?>:\n                            </td>\n                            <td width=\"100\" colspan=\"2\">\n                            <?php echo $v['backups'];?>\n                            <a href=\"#\" onclick=\"return false;\" title=\"<?php echo $strToggleDataBackupDetails ?>\"><img id=\"info_expand_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/info.gif\" alt=\"<?php echo $strClickViewBackupDetails ?>\" onclick=\"xajax_expandOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /><img id=\"info_collapse_<?php echo $v['upgrade_action_id']; ?>\" src=\"<?php echo OX::assetPath() ?>/images/info.gif\" style=\"display:none\" alt=\"<?php echo $strClickHideBackupDetails ?>\" onclick=\"xajax_collapseOSURow('<?php echo $v['upgrade_action_id']; ?>');\" border=\"0\" /></a>\n                            </td>\n                        </tr>\n                        <?php\n                        }\n                        if ($v['logfile'])\n                        {\n                        ?>\n                        <tr height='20'>\n                            <td><?php echo $strLogFiles ?>:</td>\n                            <td colspan=\"2\">\n                            <?php echo $v['logfile']; ?>\n                            </td>\n                        </tr>\n                        <?php\n                        }\n                        if ($v['confbackup'])\n                        {\n                        ?>\n                        <tr height='20'>\n                            <td><?php echo $strConfigBackups ?>:</td>\n                            <td colspan=\"2\">\n                            <?php echo $v['confbackup']; ?>\n                            </td>\n                        <?php\n                        }\n                        ?>\n                        </tr>\n                        <tr>\n                            <td colspan='3'>\n                            <div id=\"cell_<?php echo $v['upgrade_action_id']; ?>\"> </div>\n                            </td>\n                        </tr>\n                        </table>\n                    </td>\n                    <input type=\"hidden\" name=\"upgrade_action_id\" value=\"<?php echo $v['upgrade_action_id']; ?>\" />\n                    <input type=\"hidden\" name=\"token\" value=\"<?php echo htmlspecialchars(phpAds_SessionGetToken()); ?>\" />\n                </tr>\n              </form>\n                <tr height='1'><td colspan='7' bgcolor='#888888'><img src='<?php echo OX::assetPath() ?>/images/break.gif' height='1' width='100%'></td></tr>\n                <?php\n                    $i++;\n                }\n                ?>\n                <tr height='25'>\n                    <td colspan='7' height='25' align='right'>\n                    </td>\n                </tr>\n                </table>\n                <br /><br />\n            </td>\n\t\t\t<td width='40'>&nbsp;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width='40' height='20'>&nbsp;</td>\n\t\t\t<td height='20'>&nbsp;</td>\n\t\t</tr>\n\t\t</table>\n<?php\n\n/*-------------------------------------------------------*/\n/* Footer                                                */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\n\n// Register input variables\nphpAds_registerGlobal('newaffiliateid', 'returnurl', 'duplicate');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_TRAFFICKER);\nOA_Permission::enforceAccessToObject('affiliates', $affiliateid);\nOA_Permission::enforceAccessToObject('zones', $zoneid);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (isset($zoneid) && $zoneid != '') {\n    OA_Permission::checkSessionToken();\n\n    if (isset($newaffiliateid) && $newaffiliateid != '') {\n        // A publisher cannot move a zone to another publisher!\n        OA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n        // Needs to ensure that the publisher the zone is being moved\n        // to is owned by the agency, if an agency is logged in\n        OA_Permission::enforceAccessToObject('affiliates', $newaffiliateid);\n        // Move the zone to the new Publisher/Affiliate\n        $doZones = OA_Dal::factoryDO('zones');\n        $doZones->get($zoneid);\n        $doZones->affiliateid = $newaffiliateid;\n        $doZones->update();\n\n        // Queue confirmation message\n        $zoneName = $doZones->zonename;\n        $doAffiliates = OA_Dal::factoryDO('affiliates');\n        if ($doAffiliates->get($newaffiliateid)) {\n            $websiteName = $doAffiliates->name;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate($GLOBALS['strZoneHasBeenMoved'],\n            array(htmlspecialchars($zoneName), htmlspecialchars($websiteName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n        Header(\"Location: \".$returnurl.\"?affiliateid=\".$newaffiliateid.\"&zoneid=\".$zoneid);\n        exit;\n\n    }\n    elseif (isset($duplicate) && $duplicate == 'true') {\n        // Can the user add new zones?\n        if (OA_Permission::isAccount(OA_ACCOUNT_TRAFFICKER)) {\n            OA_Permission::enforceAllowed(OA_PERM_ZONE_ADD);\n        }\n        // Duplicate the zone\n        $doZones = OA_Dal::factoryDO('zones');\n        $doZones->get($zoneid);\n        $oldName = $doZones->zonename;\n        $new_zoneid = $doZones->duplicate();\n        if ($doZones->get($new_zoneid)) {\n            $newName = $doZones->zonename;;\n        }\n        // Queue confirmation message\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strZoneHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"zone-edit.php?affiliateid=$affiliateid&zoneid=$zoneid\"),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"zone-edit.php?affiliateid=$affiliateid&zoneid=$new_zoneid\"),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header(\"Location: \".$returnurl.\"?affiliateid=\".$affiliateid.\"&zoneid=\".$new_zoneid);\n        exit;\n\n    }\n\n}\n\nHeader(\"Location: \".$returnurl.\"?affiliateid=\".$affiliateid.\"&zoneid=\".$zoneid);\n\n?>"], "filenames": ["lib/OA/Admin/Template.php", "lib/max/Admin/Inventory/TrackerAppend.php", "lib/max/Admin/Inventory/themes/TrackerAppend.html", "lib/max/other/html.php", "lib/templates/admin/campaign-zone.html", "www/admin/banner-modify.php", "www/admin/campaign-modify.php", "www/admin/campaign-zone-link.php", "www/admin/channel-acl.php", "www/admin/channel-modify.php", "www/admin/lib-maintenance-priority.inc.php", "www/admin/maintenance-acl-check.php", "www/admin/maintenance-appendcode-check.php", "www/admin/maintenance-banners-check.php", "www/admin/maintenance-encoding.php", "www/admin/maintenance-menus.php", "www/admin/maintenance-plugins.php", "www/admin/maintenance-priority-calculate.php", "www/admin/maintenance-priority.php", "www/admin/maintenance-storage-move.php", "www/admin/maintenance-storage.php", "www/admin/run-mpe.php", "www/admin/tracker-append.php", "www/admin/tracker-variables.php", "www/admin/updates-history.php", "www/admin/zone-modify.php"], "buggy_code_start_loc": [121, 48, 16, 1149, 15, 34, 45, 39, 61, 36, 16, 40, 42, 34, 107, 42, 42, 22, 120, 23, 41, 20, 42, 183, 101, 34], "buggy_code_end_loc": [121, 48, 28, 1899, 240, 40, 45, 107, 61, 36, 17, 96, 70, 59, 203, 57, 132, 22, 121, 23, 42, 20, 42, 307, 297, 34], "fixing_code_start_loc": [122, 49, 16, 1150, 16, 33, 46, 40, 62, 37, 16, 41, 43, 35, 108, 43, 43, 23, 120, 24, 41, 21, 43, 184, 102, 35], "fixing_code_end_loc": [124, 50, 30, 1918, 246, 41, 48, 110, 64, 39, 17, 100, 74, 63, 207, 59, 136, 24, 121, 25, 42, 22, 45, 311, 301, 36], "type": "CWE-352", "message": "Revive Adserver before 3.2.3 suffers from Cross-Site Request Forgery (CSRF). The Revive Adserver team conducted a security audit of the admin interface scripts in order to identify and fix other potential CSRF vulnerabilities. Over 20+ such issues were fixed.", "other": {"cve": {"id": "CVE-2016-9456", "sourceIdentifier": "support@hackerone.com", "published": "2017-03-28T02:59:00.667", "lastModified": "2017-03-30T01:59:01.533", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Revive Adserver before 3.2.3 suffers from Cross-Site Request Forgery (CSRF). The Revive Adserver team conducted a security audit of the admin interface scripts in order to identify and fix other potential CSRF vulnerabilities. Over 20+ such issues were fixed."}, {"lang": "es", "value": "Revive Adserver en versiones anteriores a 3.2.3 sufre de solicitud de falsificaci\u00f3n en sitios cruzados (CSRF). El equipo Revive Adserver realiz\u00f3 una auditor\u00eda de seguridad de los scripts de interfaz de administraci\u00f3n a fin de identificar y corregir otras vulnerabilidades potenciales de CSRF. M\u00e1s de 20 + estos problemas fueron solucionados."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}, {"source": "support@hackerone.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:revive-adserver:revive_adserver:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.2.2", "matchCriteriaId": "94F64F5A-ACD3-4AED-82BE-832D7B4801DA"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/83964", "source": "support@hackerone.com"}, {"url": "https://github.com/revive-adserver/revive-adserver/commit/e563ca61e4f3b7210cb61f53284adaa8aef4a49a", "source": "support@hackerone.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://www.revive-adserver.com/security/revive-sa-2016-001/", "source": "support@hackerone.com", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/revive-adserver/revive-adserver/commit/e563ca61e4f3b7210cb61f53284adaa8aef4a49a"}}