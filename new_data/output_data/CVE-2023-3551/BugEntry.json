{"buggy_code": ["/*\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @version   \n * @file      functions.js\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n/**\n*   Countdown before session expiration\n**/\nfunction countdown()\n{\n    // if a process is in progress then do not decrease the time counter.\n    if (typeof ProcessInProgress !== 'undefined' && ProcessInProgress === true) {\n        $('.countdown-icon')\n            .addClass('fas fa-history')\n            .removeClass('far fa-clock');\n        \n        $(this).delay(1000).queue(function()\n        {\n            countdown();\n            $(this).dequeue();\n        });\n\n        return false;\n    }\n\n    // Continue\n    let DayTill;\n    let hoursInDay = 24;\n    let limitTen = 10;\n    let oneSecondsMs = 1000;\n    let theDay =  $('#temps_restant').val();\n    let today = new Date();\n    let second = Math.floor(theDay - today.getTime() / oneSecondsMs);\n    let minute = Math.floor(second / hourInMinutes);\n    let hour = Math.floor(minute / hourInMinutes);\n    let CHour= hour % hoursInDay;\n    if (CHour < limitTen) {\n        CHour = '0' + CHour;\n    }\n    let CMinute= minute % hourInMinutes;\n    if (CMinute < limitTen) {\n        CMinute = '0' + CMinute;\n    }\n    let CSecond= second % hourInMinutes;\n    if (CSecond < limitTen) {\n        CSecond = '0' + CSecond;\n    }\n    DayTill = CHour + ':' + CMinute + ':' + CSecond;\n\n    // Session will soon be closed\n    if (DayTill === '00:00:50') {\n        showExtendSession();\n        $('#countdown').css('color', 'red');\n    }\n\n    // Manage end of session\n    if ($('#temps_restant').val() !== '' && DayTill <= '00:00:00' && parseInt($('#please_login').val()) !== 1) {\n        $('#please_login').val('1');\n        $(location).attr('href','index.php?session=expired');\n    }\n\n    //Rewrite the string to the correct information.\n    if ($('#countdown')) {\n        $('#countdown').html('<i class=\"far fa-clock countdown-icon mr-1\"></i>' + DayTill);\n    }\n\n    //Create the timer 'counter' that will automatic restart function countdown() again every second.\n    $(this).delay(1000).queue(function()\n    {\n        countdown();\n        $(this).dequeue();\n    });\n}\n\n\n/**\n*\n**/\nfunction unsanitizeString(string) {\n    if(string !== \"\" && string !== null) {\n        string = string.replace(/\\\\/g,\"\").replace(/&#92;/g, \"\\\\\").replace(/&quot;/g, '\"');\n    }\n    return string;\n}\n\n/**\n*   Clean up a string and delete any scripting tags\n**/\nfunction sanitizeString(string) {\n    if(string !== \"\" && string !== null && string !== undefined) {\n        string = string.replace(/\\\\/g,\"&#92;\").replace(/\"/g,\"&quot;\");\n        string = string.replace(new RegExp(\"\\\\s*<script[^>]*>[\\\\s\\\\S]*?</script>\\\\s*\",\"ig\"), \"\");\n    }\n    return string;\n}\n\n/**\n*   Checks if URL has expected format\n**/\nfunction validateURL(url) {\n    let urlregex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    return urlregex.test(url);\n}\n\n\nfunction split( val ) {\n    return val.split( / \\s*/ );\n}\n\nfunction extractLast( term ) {\n    return split( term ).pop();\n}\n\n/**\n * Shows error message\n * @param  {string} message  Message to display\n * @return {boolean}         False\n */\nfunction jsonErrorHdl(message)\n{\n    //show as confirm\n    // Prepare modal\n    showModalDialogBox(\n        '#warningModal',\n        '<i class=\"fas fa-warning fa-lg warning mr-2\"></i>Caution',\n        message,\n        '',\n        'Close',\n        true,\n        true\n    );\n\n    // Actions on modal buttons\n    $(document).on('click', '#warningModalButtonClose', function() {\n        \n    });\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // SHow user\n    });\n    return false;\n}\n\n/**\n * [prepareExchangedData description]\n * @param  {[type]} data [description]\n * @param  {[type]} type [description]\n * @param  {[type]} key  [description]\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n * @return {[type]}      [description]\n */\nfunction prepareExchangedData(data, type, key, fileName = '', functionName = '')\n{\n    if (type === 'decode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            try {\n                return $.parseJSON(data);\n            }\n            catch (e) {\n                return jsonErrorHdl(data);\n            }\n        } else {\n            try {\n                let encryption = new Encryption();\n                return JSON.parse(encryption.decrypt(data, key));\n            }\n            catch (e) {\n                return jsonErrorHdl('<b>Next error occurred</b><div>' + e + '</div>'\n                    + (fileName !== '' ? '<br><b>Informations:</b><div>  - File: ' + fileName + '<br>  - Function: ' + functionName + '</div>': '')\n                    + '<div><br><b>Raw answer from server:</b><br>'+data+'</div>');\n            }\n        }\n    } else if (type === 'encode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            return stripHtml(data);\n        } else {\n            let encryption = new Encryption();\n            return encryption.encrypt(data, key);\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n/**\n * Returns the text from a HTML string\n * \n * @param {string} String The html string\n */\nfunction stripHtml(html) {\n    // Create a new div element\n    let temporalDivElement = document.createElement('div');\n    // Set the HTML content with the providen\n    temporalDivElement.innerHTML = html;\n    // Retrieve the text property of the element (cross-browser support)\n    return temporalDivElement.textContent || temporalDivElement.innerText || '';\n}\n\n\n/**\n * \n * @param {string} data Crypted string\n * @param {string} key  Session key\n */\nfunction unCryptData(data, key)\n{\n    if (data !== undefined && data.substr(0, 7) === 'crypted') {\n        let uncryptedData = prepareExchangedData(\n            data.substr(7),\n            'decode',\n            key\n        )\n        \n        if (uncryptedData.password.length > 0)\n            return uncryptedData.password;\n        else\n            return false;\n    }\n    return false;\n}\n\n/**\n * \n * @param {string}data Crypted string\n * @param {string}key  Session key\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n */\nfunction decodeQueryReturn(data, key, fileName = '', functionName = '')\n{\n    try {\n        return prepareExchangedData(data , \"decode\", key, fileName, functionName);\n    } catch (e) {\n        // error\n        toastr.remove();\n        toastr.error(\n            'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        return false;\n    }\n}\n\n/**\n * \n * @param {string} action Action\n * @param {string} name   Name\n * @param {array} data    Data\n */\nfunction browserSession(action, name, data)\n{\n    // Initialize the session\n    if (action === 'init') {\n        if (store.get(name) === 'undefined'\n            || store.get(name) === undefined\n        ) {\n            store.set(\n                name,\n                data\n            );\n        } else {\n            // Ensure all entries exist\n            $(data).each(function(value, key) {\n                store.update(\n                    name,\n                    function(bSession)\n                    {\n                        bSession.key = value;\n                    }\n                )\n            });\n        }\n    }\n}\n\n/**\n * \n * @param {string} modalId      Modal id\n * @param {string} title        Title\n * @param {string} body         Body\n * @param {string} actionButton Action Button\n * @param {string} closeButton  Close Button\n * @param {string} xlSize       Size\n * @param {string} warningModal Warning Modal\n * @param {string} closeCross   Close on cross\n */\nfunction showModalDialogBox(\n    modalId,\n    title,\n    body,\n    actionButton,\n    closeButton,\n    xlSize = false,\n    warningModal = false,\n    closeCross = true\n) {\n    $(modalId + 'Title').html(title);\n    $(modalId + 'Body').html(body);\n    if (actionButton === '') {\n        $(modalId + 'ButtonAction').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonAction').removeClass('hidden');\n        $(modalId + 'ButtonAction').html(actionButton);\n    }\n    if (closeButton === '') {\n        $(modalId + 'ButtonClose').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonClose').removeClass('hidden');\n        $(modalId + 'ButtonClose').html(closeButton);\n    }\n    if (xlSize === true) {\n        $(modalId + ' div:first').addClass('modal-xl');\n    } else {\n        $(modalId + ' div:first').removeClass('modal-xl');\n    }\n    if (warningModal === true) {\n        $(modalId + ':eq(1)').addClass('bg-warning');\n    } else {\n        $(modalId + ':eq(1)').removeClass('bg-warning');\n    }\n    if (closeCross === false) {\n        $(modalId + 'CrossClose').addClass('hidden');\n    } else {\n        $(modalId + 'CrossClose').removeClass('hidden');\n    }\n    $(modalId).modal({\n        backdrop : 'static',\n        keyboard : false,\n        show: true,\n        focus: true\n    });\n    $(modalId).modal('handleUpdate');\n}\n\n/**\n * Sanitize a string\n * \n * @param {string} str  The string\n */\nfunction htmlEncode(str){\n    return String(str).replace(/[^\\w. ]/gi, function(c){\n        return '&#'+c.charCodeAt(0)+';';\n    });\n}\n\n/* Extend String object with method to encode multi-byte string to utf8\n * - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n * - note utf8Encode is an identity function with 7-bit ascii strings, but not with 8-bit strings;\n * - utf8Encode('x') = 'x', but utf8Encode('\u00e7a') = '\u00c3\u00a7a', and utf8Encode('\u00c3\u00a7a') = '\u00c3\u0083\u00c2\u00a7a'*/\nif (typeof String.prototype.utf8Encode == 'undefined') {\n    String.prototype.utf8Encode = function() {\n        return unescape( encodeURIComponent( this ) );\n    };\n}\n\n/* Extend String object with method to decode utf8 string to multi-byte */\nif (typeof String.prototype.utf8Decode == 'undefined') {\n    String.prototype.utf8Decode = function() {\n        try {\n            return decodeURIComponent( escape( this ) );\n        } catch (e) {\n            return this; // invalid UTF-8? return as-is\n        }\n    };\n}\n\nfunction simplePurifier(\n    text,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false\n)\n{\n    return DOMPurify.sanitize(\n        text\n            .replaceAll('&lt;', '<')\n            .replaceAll('&#x3C;', '<')\n            .replaceAll('&#60;', '<')\n            .replaceAll('&gt;', '>')\n            .replaceAll('&#x3E;', '>')\n            .replaceAll('&#62;', '>')\n            .replaceAll('&amp;', '&')\n            .replaceAll('&#38;', '&')\n            .replaceAll('&#x26;', '&')\n            .replaceAll('&quot;', '\"')\n            .replaceAll('&#34;;', '\"')\n            .replaceAll('&#x22;', '\"')\n            .replaceAll('&#39;', \"'\"),\n        {USE_PROFILES: {html:bHtml, svg:bSvg, svgFilters: bSvgFilters}}\n    );\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @param {*} text \n * @returns bool||string\n */\nfunction fieldDomPurifier(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    text = ''\n)\n{\n    if (field === undefined ||field === '') {\n        return false;\n    }\n    let string = '';\n    text = (text === '') ? $(field).val() : text;\n\n    // Purify string\n    string = simplePurifier(text, bHtml, bSvg, bSvgFilters);\n    \n    // Clear field if string is empty and warn user\n    if (string === '' && text !== '') {\n        $(field).val('');\n        return false;\n    }\n\n    return string;\n}\n\n/**\n * Permits to get all fields of a class and purify them\n * @param {*} elementClass \n * @returns array\n */\nfunction fieldDomPurifierLoop(elementClass)\n{\n    let purifyStop = false,\n        arrFields = [];\n    $.each($(elementClass), function(index, element) {\n        purifiedField = fieldDomPurifier(\n            '#' + $(element).attr('id'), \n            $(element).hasClass('purifyHtml') === true ? true : false,\n            $(element).hasClass('purifySvg') === true ? true : false,\n            $(element).hasClass('purifySvgFilter') === true ? true : false,\n            typeof $(element).data('purify-text') !== 'undefined' ? $(element).data('purify-text') : ''\n        );\n\n        if (purifiedField === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Please remove all special characters from your input.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            $('#' + $(element).attr('id')).focus();\n            purifyStop = true;\n            return {\n                'purifyStop' : purifyStop,\n                'arrFields' : arrFields\n            };\n        } else {\n            $(element).val(purifiedField);\n            if (typeof $(element).data('field') !== 'undefined') {\n                arrFields[$(element).data('field')] = purifiedField;\n            } else if (typeof $(element).data('field-name') !== 'undefined') {\n                arrFields[$(element).data('field-name')] = purifiedField;\n            }\n        }\n    });\n    \n    // return\n    return {\n        'purifyStop' : purifyStop,\n        'arrFields' : arrFields\n    };\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @returns bool||string\n */\nfunction fieldDomPurifierWithWarning(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n)\n{\n    if (field === undefined || field === '') {\n        return false;\n    }\n    if ($(field).val() === '') {\n        return '';\n    }\n    let string = '';\n\n    // Purify string\n    string = simplePurifier($(field).val(), bHtml, bSvg, bSvgFilters);\n    \n    // Clear field if string is empty and warn user\n    if (string === '') {\n        toastr.remove();\n        toastr.warning(\n            'XSS attempt detected. Please remove all special characters from your input.',\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        $(field).focus();\n        return false;\n    }\n\n    return string;\n}", "<?php\n\n/** @noinspection ReturnTypeCanBeDeclaredInspection */\n\ndeclare(strict_types=1);\n\nnamespace voku\\helper;\n\nuse const ENT_DISALLOWED;\nuse const ENT_HTML5;\nuse const ENT_QUOTES;\nuse const ENT_SUBSTITUTE;\nuse const HTML_ENTITIES;\n\n/**\n * AntiXSS - ported from \"CodeIgniter\"\n *\n * ## \ud83c\uddf7\ud83c\uddfa \u0420\u0443\u0441\u0441\u043a\u0438\u043c \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0430\u043c\n * \u0412 \u0423\u043a\u0440\u0430\u0438\u043d\u0435 \u0441\u0435\u0439\u0447\u0430\u0441 \u0438\u0434\u0435\u0442 \u0432\u043e\u0439\u043d\u0430. \u0421\u0438\u043b\u0430\u043c\u0438 \u0420\u0424 \u043d\u0430\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0443\u0434\u0430\u0440\u044b \u043f\u043e \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u043e\u0439 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u0432 [\u0425\u0430\u0440\u044c\u043a\u043e\u0432\u0435][1], [\u041a\u0438\u0435\u0432\u0435][2], [\u0427\u0435\u0440\u043d\u0438\u0433\u043e\u0432\u0435][3], [\u0421\u0443\u043c\u0430\u0445][4], [\u0418\u0440\u043f\u0435\u043d\u0435][5] \u0438 \u0434\u0435\u0441\u044f\u0442\u043a\u0430\u0445 \u0434\u0440\u0443\u0433\u0438\u0445 \u0433\u043e\u0440\u043e\u0434\u043e\u0432. \u0413\u0438\u0431\u043d\u0443\u0442 \u043b\u044e\u0434\u0438 - \u0438 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u043e\u0435 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435, \u0438 \u0432\u043e\u0435\u043d\u043d\u044b\u0435, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u044b\u0432\u043d\u0438\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u0440\u043e\u0441\u0438\u043b\u0438 \u0432\u043e\u0435\u0432\u0430\u0442\u044c. \u0427\u0442\u043e\u0431\u044b \u043b\u0438\u0448\u0438\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043d\u0430\u0440\u043e\u0434 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0420\u0424 \u0437\u0430\u043f\u0440\u0435\u0442\u0438\u043b\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0432\u043e\u0439\u043d\u0443 \u0432\u043e\u0439\u043d\u043e\u0439, \u0437\u0430\u043a\u0440\u044b\u043b\u043e \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u0421\u041c\u0418 \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0435\u0439\u0447\u0430\u0441 \u0440\u044f\u0434 \u0434\u0438\u043a\u0442\u0430\u0442\u043e\u0440\u0441\u043a\u0438\u0445 \u0437\u0430\u043a\u043e\u043d\u043e\u0432. \u042d\u0442\u0438 \u0437\u0430\u043a\u043e\u043d\u044b \u043f\u0440\u0438\u0437\u0432\u0430\u043d\u044b \u0437\u0430\u0442\u043a\u043d\u0443\u0442\u044c \u0440\u043e\u0442 \u0432\u0441\u0435\u043c, \u043a\u0442\u043e \u043f\u0440\u043e\u0442\u0438\u0432 \u0432\u043e\u0439\u043d\u044b. \u0417\u0430 \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u044b\u0432 \u043a \u043c\u0438\u0440\u0443 \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043b\u0435\u0442 \u0442\u044e\u0440\u044c\u043c\u044b.\n * \u041d\u0435 \u043c\u043e\u043b\u0447\u0438\u0442\u0435! \u041c\u043e\u043b\u0447\u0430\u043d\u0438\u0435 - \u0437\u043d\u0430\u043a \u0432\u0430\u0448\u0435\u0433\u043e \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u044f \u0441 \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u043e\u0439 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430.\n *  **\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u044b\u0431\u043e\u0440 \u041d\u0415 \u041c\u041e\u041b\u0427\u0410\u0422\u042c.**\n * ---\n * ## \ud83c\uddfa\ud83c\uddf8 To people of Russia\n * There is a war in Ukraine right now. The forces of the Russian Federation are attacking civilian infrastructure in [Kharkiv][1], [Kyiv][2], [Chernihiv][3], [Sumy][4], [Irpin][5] and dozens of other cities. People are dying \u2013 both civilians and military servicemen, including Russian conscripts who were thrown into the fighting. In order to deprive its own people of access to information, the government of the Russian Federation has forbidden calling a war a war, shut down independent media and is passing a number of dictatorial laws. These laws are meant to silence all those who are against war. You can be jailed for multiple years for simply calling for peace.\n * Do not be silent! Silence is a sign that you accept the Russian government's policy.\n * **You can choose NOT TO BE SILENT.**\n * ---\n * - [1] https://cloudfront-us-east-2.images.arcpublishing.com/reuters/P7K2MSZDGFMIJPDD7CI2GIROJI.jpg \"Kharkiv under attack\"\n * - [2] https://gdb.voanews.com/01bd0000-0aff-0242-fad0-08d9fc92c5b3_cx0_cy5_cw0_w1023_r1_s.jpg \"Kyiv under attack\"\n * - [3] https://ichef.bbci.co.uk/news/976/cpsprodpb/163DD/production/_123510119_hi074310744.jpg \"Chernihiv under attack\"\n * - [4] https://www.youtube.com/watch?v=8K-bkqKKf2A \"Sumy under attack\"\n * - [5] https://cloudfront-us-east-2.images.arcpublishing.com/reuters/K4MTMLEHTRKGFK3GSKAT4GR3NE.jpg \"Irpin under attack\"\n *\n * @copyright   Copyright (c) 2008 - 2014, EllisLab, Inc. (http://ellislab.com/)\n * @copyright   Copyright (c) 2014 - 2015, British Columbia Institute of Technology (http://bcit.ca/)\n * @copyright   Copyright (c) 2015 - 2020, Lars Moelleken (https://moelleken.org/)\n * @license     http://opensource.org/licenses/MIT\tMIT License\n */\nfinal class AntiXSS\n{\n    const VOKU_ANTI_XSS_GT = 'voku::anti-xss::gt';\n\n    const VOKU_ANTI_XSS_LT = 'voku::anti-xss::lt';\n\n    const VOKU_ANTI_XSS_STYLE = 'voku::anti-xss::STYLE';\n\n    /**\n     * List of never allowed regex replacements.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_regex = [];\n\n    /**\n     * List of html tags that will not close automatically.\n     *\n     * @var string[]\n     */\n    private $_do_not_close_html_tags = [];\n\n    /**\n     * List of never allowed call statements.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_js_callback_regex = [\n        '\\(?window\\)?\\.',\n        '\\(?history\\)?\\.',\n        '\\(?location\\)?\\.',\n        '\\(?document\\)?\\.',\n        '\\(?cookie\\)?\\.',\n        '\\(?ScriptElement\\)?\\.',\n        'd\\s*a\\s*t\\s*a\\s*:',\n    ];\n    \n    /**\n     * List of simple never allowed call statements.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_call_strings = [\n        // default javascript\n        'javascript',\n        // Java: jar-protocol is an XSS hazard\n        'jar',\n        // Mac (will not run the script, but open it in AppleScript Editor)\n        'applescript',\n        // IE: https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#VBscript_in_an_image\n        'vbscript',\n        'vbs',\n        // IE, surprise!\n        'wscript',\n        // IE\n        'jscript',\n        // https://html5sec.org/#behavior\n        'behavior',\n        // old Netscape\n        'mocha',\n        // old Netscape\n        'livescript',\n        // default view source\n        'view-source',\n    ];\n\n    /**\n     * @var string[]\n     */\n    private $_never_allowed_str_afterwards = [\n        '&lt;script&gt;',\n        '&lt;/script&gt;',\n    ];\n\n    /**\n     * List of never allowed strings, afterwards.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_on_events_afterwards = [\n        'onAbort',\n        'onActivate',\n        'onAttribute',\n        'onAfterPrint',\n        'onAfterScriptExecute',\n        'onAfterUpdate',\n        'onAnimationCancel',\n        'onAnimationEnd',\n        'onAnimationIteration',\n        'onAnimationStart',\n        'onAriaRequest',\n        'onAutoComplete',\n        'onAutoCompleteError',\n        'onAuxClick',\n        'onBeforeActivate',\n        'onBeforeCopy',\n        'onBeforeCut',\n        'onBeforeDeactivate',\n        'onBeforeEditFocus',\n        'onBeforePaste',\n        'onBeforePrint',\n        'onBeforeScriptExecute',\n        'onBeforeUnload',\n        'onBeforeUpdate',\n        'onBegin',\n        'onBlur',\n        'onBounce',\n        'onCancel',\n        'onCanPlay',\n        'onCanPlayThrough',\n        'onCellChange',\n        'onChange',\n        'onClick',\n        'onClose',\n        'onCommand',\n        'onCompassNeedsCalibration',\n        'onContextMenu',\n        'onControlSelect',\n        'onCopy',\n        'onCueChange',\n        'onCut',\n        'onDataAvailable',\n        'onDataSetChanged',\n        'onDataSetComplete',\n        'onDblClick',\n        'onDeactivate',\n        'onDeviceLight',\n        'onDeviceMotion',\n        'onDeviceOrientation',\n        'onDeviceProximity',\n        'onDrag',\n        'onDragDrop',\n        'onDragEnd',\n        'onDragExit',\n        'onDragEnter',\n        'onDragLeave',\n        'onDragOver',\n        'onDragStart',\n        'onDrop',\n        'onDurationChange',\n        'onEmptied',\n        'onEnd',\n        'onEnded',\n        'onError',\n        'onErrorUpdate',\n        'onExit',\n        'onFilterChange',\n        'onFinish',\n        'onFocus',\n        'onFocusIn',\n        'onFocusOut',\n        'onFormChange',\n        'onFormInput',\n        'onFullScreenChange',\n        'onFullScreenError',\n        'onGotPointerCapture',\n        'onHashChange',\n        'onHelp',\n        'onInput',\n        'onInvalid',\n        'onKeyDown',\n        'onKeyPress',\n        'onKeyUp',\n        'onLanguageChange',\n        'onLayoutComplete',\n        'onLoad',\n        'onLoadEnd',\n        'onLoadedData',\n        'onLoadedMetaData',\n        'onLoadStart',\n        'onLoseCapture',\n        'onLostPointerCapture',\n        'onMediaComplete',\n        'onMediaError',\n        'onMessage',\n        'onMouseDown',\n        'onMouseEnter',\n        'onMouseLeave',\n        'onMouseMove',\n        'onMouseOut',\n        'onMouseOver',\n        'onMouseUp',\n        'onMouseWheel',\n        'onMove',\n        'onMoveEnd',\n        'onMoveStart',\n        'onMozFullScreenChange',\n        'onMozFullScreenError',\n        'onMozPointerLockChange',\n        'onMozPointerLockError',\n        'onMsContentZoom',\n        'onMsFullScreenChange',\n        'onMsFullScreenError',\n        'onMsGestureChange',\n        'onMsGestureDoubleTap',\n        'onMsGestureEnd',\n        'onMsGestureHold',\n        'onMsGestureStart',\n        'onMsGestureTap',\n        'onMsGotPointerCapture',\n        'onMsInertiaStart',\n        'onMsLostPointerCapture',\n        'onMsManipulationStateChanged',\n        'onMsPointerCancel',\n        'onMsPointerDown',\n        'onMsPointerEnter',\n        'onMsPointerLeave',\n        'onMsPointerMove',\n        'onMsPointerOut',\n        'onMsPointerOver',\n        'onMsPointerUp',\n        'onMsSiteModeJumpListItemRemoved',\n        'onMsThumbnailClick',\n        'onOffline',\n        'onOnline',\n        'onOutOfSync',\n        'onPage',\n        'onPageHide',\n        'onPageShow',\n        'onPaste',\n        'onPause',\n        'onPlay',\n        'onPlaying',\n        'onPointerCancel',\n        'onPointerDown',\n        'onPointerEnter',\n        'onPointerLeave',\n        'onPointerLockChange',\n        'onPointerLockError',\n        'onPointerMove',\n        'onPointerOut',\n        'onPointerOver',\n        'onPointerRawUpdate',\n        'onPointerUp',\n        'onPopState',\n        'onProgress',\n        'onPropertyChange',\n        'onqt_error',\n        'onRateChange',\n        'onReadyStateChange',\n        'onReceived',\n        'onRepeat',\n        'onReset',\n        'onResize',\n        'onResizeEnd',\n        'onResizeStart',\n        'onResume',\n        'onReverse',\n        'onRowDelete',\n        'onRowEnter',\n        'onRowExit',\n        'onRowInserted',\n        'onRowsDelete',\n        'onRowsEnter',\n        'onRowsExit',\n        'onRowsInserted',\n        'onScroll',\n        'onSearch',\n        'onSeek',\n        'onSeeked',\n        'onSeeking',\n        'onSelect',\n        'onSelectionChange',\n        'onSelectStart',\n        'onStalled',\n        'onStorage',\n        'onStorageCommit',\n        'onStart',\n        'onStop',\n        'onShow',\n        'onSyncRestored',\n        'onSubmit',\n        'onSuspend',\n        'onSynchRestored',\n        'onTimeError',\n        'onTimeUpdate',\n        'onTimer',\n        'onTrackChange',\n        'onTransitionEnd',\n        'onTransitionRun',\n        'onTransitionStart',\n        'onToggle',\n        'onTouchCancel',\n        'onTouchEnd',\n        'onTouchLeave',\n        'onTouchMove',\n        'onTouchStart',\n        'onTransitionCancel',\n        'onTransitionEnd',\n        'onUnload',\n        'onUnhandledRejection',\n        'onURLFlip',\n        'onUserProximity',\n        'onVolumeChange',\n        'onWaiting',\n        'onWebKitAnimationEnd',\n        'onWebKitAnimationIteration',\n        'onWebKitAnimationStart',\n        'onWebKitFullScreenChange',\n        'onWebKitFullScreenError',\n        'onWebKitTransitionEnd',\n        'onWheel',\n    ];\n\n    /**\n     * https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Event_Handlers\n     *\n     * @var string[]\n     */\n    private $_evil_attributes_regex = [\n        'style',\n        'xmlns:xdp',\n        'formaction',\n        'form',\n        'xlink:href',\n        'seekSegmentTime',\n        'FSCommand',\n    ];\n\n    /**\n     * @var string[]\n     */\n    private $_evil_html_tags = [\n        'applet',\n        'audio',\n        'basefont',\n        'base',\n        'behavior',\n        'bgsound',\n        'blink',\n        'body',\n        'embed',\n        'eval',\n        'expression',\n        'form',\n        'frameset',\n        'frame',\n        'head',\n        'html',\n        'ilayer',\n        'iframe',\n        'input',\n        'button',\n        'select',\n        'isindex',\n        'layer',\n        'link',\n        'meta',\n        'keygen',\n        'object',\n        'plaintext',\n        'style',\n        'script',\n        'textarea',\n        'title',\n        'math',\n        'noscript',\n        'event-source',\n        'vmlframe',\n        'video',\n        'source',\n        'svg',\n        'xml',\n    ];\n\n    /**\n     * @var string\n     */\n    private $_spacing_regex = '(?:\\s|\"|\\'|\\+|&#x0[9A-F];|%0[9a-f])*?';\n\n    /**\n     * The replacement-string for not allowed strings.\n     *\n     * @var string\n     */\n    private $_replacement = '';\n\n    /**\n     * List of never allowed strings.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_str = [];\n\n    /**\n     * If your DB (MySQL) encoding is \"utf8\" and not \"utf8mb4\", then\n     * you can't save 4-Bytes chars from UTF-8 and someone can create stored XSS-attacks.\n     *\n     * @var bool\n     */\n    private $_stripe_4byte_chars = false;\n\n    /**\n     * @var bool|null\n     */\n    private $_xss_found;\n\n    /**\n     * @var string\n     */\n    private $_cache_evil_attributes_regex_string = '';\n\n    /**\n     * @var string\n     */\n    private $_cache_never_allowed_regex_string = '';\n\n    /**\n     * @var string\n     */\n    private $_cache__evil_html_tags_str = '';\n\n    /**\n     * __construct()\n     */\n    public function __construct()\n    {\n        $this->_initNeverAllowedStr();\n        $this->_initNeverAllowedRegex();\n    }\n\n    /**\n     * Compact any exploded words.\n     *\n     * <p>\n     * <br />\n     * INFO: This corrects words like:  j a v a s c r i p t\n     * <br />\n     * These words are compacted back to their correct state.\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _compact_exploded_javascript($str)\n    {\n        static $WORDS_CACHE;\n        $WORDS_CACHE['chunk'] = [];\n        $WORDS_CACHE['split'] = [];\n\n        $words = [\n            'javascript',\n            '<script',\n            '</script>',\n            'base64',\n            'document',\n            'eval',\n        ];\n\n        // check if we need to perform the regex-stuff\n        if (\\strlen($str) <= 30) {\n            $useStrPos = true;\n        } else {\n            $useStrPos = false;\n        }\n\n        foreach ($words as $word) {\n            if (!isset($WORDS_CACHE['chunk'][$word])) {\n                $WORDS_CACHE['chunk'][$word] = \\substr(\n                    \\chunk_split($word, 1, $this->_spacing_regex),\n                    0,\n                    -\\strlen($this->_spacing_regex)\n                );\n\n                $WORDS_CACHE['split'][$word] = \\str_split($word);\n            }\n\n            if ($useStrPos) {\n                foreach ($WORDS_CACHE['split'][$word] as $charTmp) {\n                    if (\\stripos($str, $charTmp) === false) {\n                        continue 2;\n                    }\n                }\n            }\n\n            // We only want to do this when it is followed by a non-word character.\n            // And if there are no char at the start of the string.\n            //\n            // That way valid stuff like \"dealer to!\" does not become \"dealerto\".\n\n            $str = (string) \\preg_replace_callback(\n                '#(?<before>[^\\p{L}]|^)(?<word>' . \\str_replace(\n                    ['#', '.'],\n                    ['\\#', '\\.'],\n                    $WORDS_CACHE['chunk'][$word]\n                ) . ')(?<after>[^\\p{L}@.!?\\' ]|$)#ius',\n                function ($matches) {\n                    return $this->_compact_exploded_words_callback($matches);\n                },\n                $str\n            );\n        }\n\n        return $str;\n    }\n\n    /**\n     * Compact exploded words.\n     *\n     * <p>\n     * <br />\n     * INFO: Callback method for xss_clean() to remove whitespace from things like 'j a v a s c r i p t'.\n     * </p>\n     *\n     * @param string[] $matches\n     *\n     * @return  string\n     */\n    private function _compact_exploded_words_callback($matches)\n    {\n        return $matches['before'] . \\preg_replace(\n            '/' . $this->_spacing_regex . '/ius',\n            '',\n            $matches['word']\n        ) . $matches['after'];\n    }\n\n    /**\n     * HTML-Entity decode callback.\n     *\n     * @param string[] $match\n     *\n     * @return string\n     */\n    private function _decode_entity($match)\n    {\n        // init\n        $str = $match[0];\n\n        // protect GET variables without XSS in URLs\n        $needProtection = true;\n        if (\\strpos($str, '=') !== false) {\n            $strCopy = $str;\n            $matchesTmp = [];\n            while (\\preg_match(\"/[?|&]?[\\p{L}\\d_\\-\\[\\]]+\\s*=\\s*([\\\"'])(?<attr>[^\\1]*?)\\\\1/u\", $strCopy, $matches)) {\n                $matchesTmp[] = $matches;\n                $strCopy = \\str_replace($matches[0], '', $strCopy);\n\n                if (\\substr_count($strCopy, '\"') <= 1 && \\substr_count($strCopy, '\\'') <= 1) {\n                    break;\n                }\n            }\n\n            if ($strCopy !== $str) {\n                $needProtection = false;\n                foreach ($matchesTmp as $matches) {\n                    if (isset($matches['attr'])) {\n                        $tmpAntiXss = clone $this;\n\n                        $urlPartClean = $tmpAntiXss->xss_clean((string) $matches['attr']);\n\n                        if ($tmpAntiXss->isXssFound() === true) {\n                            $this->_xss_found = true;\n\n                            $urlPartClean = \\str_replace(['&lt;', '&gt;'], [self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], $urlPartClean);\n                            $urlPartClean = UTF8::rawurldecode($urlPartClean);\n                            $urlPartClean = \\str_replace([self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], ['&lt;', '&gt;'], $urlPartClean);\n\n                            $str = \\str_ireplace($matches['attr'], $urlPartClean, $str);\n                        }\n                    }\n                }\n            }\n        }\n\n        if ($needProtection) {\n            $str = \\str_replace(['&lt;', '&gt;'], [self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], $str);\n            $str = $this->_entity_decode(UTF8::rawurldecode($str));\n            $str = \\str_replace([self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], ['&lt;', '&gt;'], $str);\n        }\n\n        return $str;\n    }\n\n    /**\n     * Decode the html-tags but keep links without XSS.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _decode_string($str)\n    {\n        // init\n        $regExForHtmlTags = '/<\\p{L}+(?:[^>\"\\']|([\"\\']).*\\1)*>/usU';\n\n        if (\n            \\strpos($str, '<') !== false\n            &&\n            \\preg_match($regExForHtmlTags, $str, $matches)\n        ) {\n            $str = (string) \\preg_replace_callback(\n                $regExForHtmlTags,\n                function ($matches) {\n                    return $this->_decode_entity($matches);\n                },\n                $str\n            );\n        } else {\n            $str = UTF8::rawurldecode($str);\n        }\n\n        return $str;\n    }\n\n    /**\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _do($str)\n    {\n        $str = (string) $str;\n        $strInt = (int) $str;\n        $strFloat = (float) $str;\n        if (\n            !$str\n            ||\n            (string) $strInt === $str\n            ||\n            (string) $strFloat === $str\n        ) {\n            // no xss found\n            if ($this->_xss_found !== true) {\n                $this->_xss_found = false;\n            }\n\n            return $str;\n        }\n\n        // remove the BOM from UTF-8 / UTF-16 / UTF-32 strings\n        $str = UTF8::remove_bom($str);\n\n        // replace the diamond question mark (\ufffd) and invalid-UTF8 chars\n        $str = UTF8::replace_diamond_question_mark($str, '');\n\n        // replace invisible characters with one single space\n        $str = UTF8::remove_invisible_characters($str, true, '', false);\n\n        // decode UTF-7 characters\n        $str = $this->_repack_utf7($str);\n\n        // decode the string\n        $str = $this->_decode_string($str);\n\n        // remove all >= 4-Byte chars if needed\n        if ($this->_stripe_4byte_chars) {\n            $str = (string) \\preg_replace('/[\\x{10000}-\\x{10FFFF}]/u', '', $str);\n        }\n\n        // backup the string (for later comparison)\n        $str_backup = $str;\n        \n        // process\n        do {\n            // backup the string (for the loop)\n            $str_backup_loop = $str;\n\n            // correct words before the browser will do it\n            $str = $this->_compact_exploded_javascript($str);\n    \n            // remove disallowed javascript calls in links, images etc.\n            $str = $this->_remove_disallowed_javascript($str);\n    \n            // remove strings that are never allowed\n            $str = $this->_do_never_allowed($str);\n    \n            // remove evil attributes such as style, onclick and xmlns\n            $str = $this->_remove_evil_attributes($str);\n    \n            // sanitize naughty JavaScript elements\n            $str = $this->_sanitize_naughty_javascript($str);\n    \n            // sanitize naughty HTML elements\n            $str = $this->_sanitize_naughty_html($str);\n    \n            // final clean up\n            //\n            // -> This adds a bit of extra precaution in case something got through the above filters.\n            $str = $this->_do_never_allowed_afterwards($str);\n        } while ($str_backup_loop !== $str);\n\n        // check for xss\n        if ($this->_xss_found !== true) {\n            $this->_xss_found = !($str_backup === $str);\n        }\n        \n        return $str;\n    }\n\n    /**\n     * Remove never allowed strings.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _do_never_allowed($str)\n    {\n        static $NEVER_ALLOWED_CACHE = [];\n\n        $NEVER_ALLOWED_CACHE['keys'] = null;\n\n        if ($NEVER_ALLOWED_CACHE['keys'] === null) {\n            $NEVER_ALLOWED_CACHE['keys'] = \\array_keys($this->_never_allowed_str);\n        }\n\n        $str = \\str_ireplace(\n            $NEVER_ALLOWED_CACHE['keys'],\n            $this->_never_allowed_str,\n            $str\n        );\n\n        // ---\n\n        $replaceNeverAllowedCall = [];\n        foreach ($this->_never_allowed_call_strings as $call) {\n            if (\\stripos($str, $call) !== false) {\n                $replaceNeverAllowedCall[] = $call;\n            }\n        }\n        if (\\count($replaceNeverAllowedCall) > 0) {\n            $str = (string) \\preg_replace(\n                '#([^\\p{L}]|^)(?:' . \\implode('|', $replaceNeverAllowedCall) . ')\\s*:(?:.*?([/\\\\\\;()\\'\">]|$))#ius',\n                '$1' . $this->_replacement . '$2',\n                $str\n            );\n        }\n\n        // ---\n\n        $regex_combined = [];\n        foreach ($this->_never_allowed_regex as $regex => $replacement) {\n            if ($replacement === $this->_replacement) {\n                $regex_combined[] = $regex;\n\n                continue;\n            }\n\n            $str = (string) \\preg_replace(\n                '#' . $regex . '#iUus',\n                $replacement,\n                $str\n            );\n        }\n\n        if (!$this->_cache_never_allowed_regex_string || $regex_combined !== []) {\n            $this->_cache_never_allowed_regex_string = \\implode('|', $regex_combined);\n        }\n\n        if ($this->_cache_never_allowed_regex_string) {\n            $str = (string) \\preg_replace(\n                '#' . $this->_cache_never_allowed_regex_string . '#ius',\n                $this->_replacement,\n                $str\n            );\n        }\n\n        return $str;\n    }\n\n    /**\n     * @return array\n     *\n     * @phpstan-return array<string, list<string>>\n     */\n    private function _get_never_allowed_on_events_afterwards_chunks()\n    {\n        // init\n        $array = [];\n\n        foreach ($this->_never_allowed_on_events_afterwards as $event) {\n            $array[$event[0] . $event[1] . $event[2]][] = $event;\n        }\n\n        return $array;\n    }\n\n    /**\n     * Remove never allowed string, afterwards.\n     *\n     * <p>\n     * <br />\n     * INFO: clean-up also some string, if there is no html-tag\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return  string\n     */\n    private function _do_never_allowed_afterwards($str)\n    {\n        if (\\stripos($str, 'on') !== false) {\n            foreach ($this->_get_never_allowed_on_events_afterwards_chunks() as $eventNameBeginning => $events) {\n                if (\\stripos($str, $eventNameBeginning) === false) {\n                    continue;\n                }\n\n                foreach ($events as $event) {\n                    if (\\stripos($str, $event) === false) {\n                        continue;\n                    }\n\n                    $regex = '(?<before>[^\\p{L}@.!?>]|^)(?:' . \\implode('|', $events) . ')(?<after>\\(.*?\\)|.*?>|(?:\\s|\\[.*?\\])*?=(?:\\s|\\[.*?\\])*?|(?:\\s|\\[.*?\\])*?&equals;(?:\\s|\\[.*?\\])*?|[^\\p{L}]*?=[^\\p{L}]*?|[^\\p{L}]*?&equals;[^\\p{L}]*?|$|\\s*?>*?$)';\n\n                    do {\n                        $count = $temp_count = 0;\n\n                        $str = (string) \\preg_replace(\n                            '#' . $regex . '#ius',\n                            '$1' . $this->_replacement . '$2',\n                            $str,\n                            -1,\n                            $temp_count\n                        );\n                        $count += $temp_count;\n                    } while ($count);\n\n                    break;\n                }\n            }\n        }\n\n        return (string) \\str_ireplace(\n            $this->_never_allowed_str_afterwards,\n            $this->_replacement,\n            $str\n        );\n    }\n\n    /**\n     * Entity-decoding.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _entity_decode($str)\n    {\n        static $HTML_ENTITIES_CACHE;\n\n        $flags = ENT_QUOTES | ENT_HTML5 | ENT_DISALLOWED | ENT_SUBSTITUTE;\n\n        // decode-again, for e.g. HHVM or miss configured applications ...\n        if (\n            \\strpos($str, '&') !== false\n            &&\n            \\preg_match_all('/(?<html_entity>&[A-Za-z]{2,};{0})/', $str, $matches)\n        ) {\n            if ($HTML_ENTITIES_CACHE === null) {\n                // links:\n                // - http://dev.w3.org/html5/html-author/charref\n                // - http://www.w3schools.com/charsets/ref_html_entities_n.asp\n                $entitiesSecurity = [\n                    '&#x00000;'          => '',\n                    '&#0;'               => '',\n                    '&#x00001;'          => '',\n                    '&#1;'               => '',\n                    '&nvgt;'             => '',\n                    '&#61253;'           => '',\n                    '&#x0EF45;'          => '',\n                    '&shy;'              => '',\n                    '&#x000AD;'          => '',\n                    '&#173;'             => '',\n                    '&colon;'            => ':',\n                    '&#x0003A;'          => ':',\n                    '&#58;'              => ':',\n                    '&lpar;'             => '(',\n                    '&#x00028;'          => '(',\n                    '&#40;'              => '(',\n                    '&rpar;'             => ')',\n                    '&#x00029;'          => ')',\n                    '&#41;'              => ')',\n                    '&quest;'            => '?',\n                    '&#x0003F;'          => '?',\n                    '&#63;'              => '?',\n                    '&sol;'              => '/',\n                    '&#x0002F;'          => '/',\n                    '&#47;'              => '/',\n                    '&apos;'             => '\\'',\n                    '&#x00027;'          => '\\'',\n                    '&#039;'             => '\\'',\n                    '&#39;'              => '\\'',\n                    '&#x27;'             => '\\'',\n                    '&bsol;'             => '\\'',\n                    '&#x0005C;'          => '\\\\',\n                    '&#92;'              => '\\\\',\n                    '&comma;'            => ',',\n                    '&#x0002C;'          => ',',\n                    '&#44;'              => ',',\n                    '&period;'           => '.',\n                    '&#x0002E;'          => '.',\n                    '&quot;'             => '\"',\n                    '&QUOT;'             => '\"',\n                    '&#x00022;'          => '\"',\n                    '&#34;'              => '\"',\n                    '&grave;'            => '`',\n                    '&DiacriticalGrave;' => '`',\n                    '&#x00060;'          => '`',\n                    '&#96;'              => '`',\n                    '&#46;'              => '.',\n                    '&equals;'           => '=',\n                    '&#x0003D;'          => '=',\n                    '&#61;'              => '=',\n                    '&newline;'          => \"\\n\",\n                    '&#x0000A;'          => \"\\n\",\n                    '&#10;'              => \"\\n\",\n                    '&tab;'              => \"\\t\",\n                    '&#x00009;'          => \"\\t\",\n                    '&#9;'               => \"\\t\",\n                ];\n\n                $HTML_ENTITIES_CACHE = \\array_merge(\n                    $entitiesSecurity,\n                    \\array_flip(\\get_html_translation_table(HTML_ENTITIES, $flags)),\n                    \\array_flip(self::_get_data('entities_fallback'))\n                );\n            }\n\n            $search = [];\n            $replace = [];\n            foreach ($matches['html_entity'] as $match) {\n                $match .= ';';\n                if (isset($HTML_ENTITIES_CACHE[$match])) {\n                    $search[$match] = $match;\n                    $replace[$match] = $HTML_ENTITIES_CACHE[$match];\n                }\n            }\n\n            if (\\count($replace) > 0) {\n                $str = \\str_ireplace($search, $replace, $str);\n            }\n        }\n\n        return $str;\n    }\n\n    /**\n     * Filters tag attributes for consistency and safety.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _filter_attributes($str)\n    {\n        if ($str === '') {\n            return '';\n        }\n\n        if (\\strpos($str, '=') !== false) {\n            $matchesTmp = [];\n            while (\\preg_match('#\\s*[\\p{L}\\d_\\-\\[\\]]+\\s*=\\s*([\"\\'])(?:[^\\1]*?)\\\\1#u', $str, $matches)) {\n                $matchesTmp[] = $matches[0];\n                $str = \\str_replace($matches[0], '', $str);\n\n                if (\\substr_count($str, '\"') <= 1 && \\substr_count($str, '\\'') <= 1) {\n                    break;\n                }\n            }\n            $out = \\implode('', $matchesTmp);\n        } else {\n            $out = $str;\n        }\n\n        return $out;\n    }\n\n    /**\n     * get data from \"/data/*.php\"\n     *\n     * @param string $file\n     *\n     * @return string[]\n     *\n     * @phpstan-return array<string, string>\n     */\n    private static function _get_data($file)\n    {\n        /** @noinspection PhpIncludeInspection */\n        return include __DIR__ . '/data/' . $file . '.php';\n    }\n\n    /**\n     * initialize \"$this->_never_allowed_str\"\n     *\n     * @return void\n     */\n    private function _initNeverAllowedStr()\n    {\n        $this->_never_allowed_str = [\n            'document.cookie'   => $this->_replacement,\n            '(document).cookie' => $this->_replacement,\n            'document.write'    => $this->_replacement,\n            '(document).write'  => $this->_replacement,\n            '.parentNode'       => $this->_replacement,\n            '.innerHTML'        => $this->_replacement,\n            '.appendChild'      => $this->_replacement,\n            '-moz-binding'      => $this->_replacement,\n            '<?'                => '&lt;?',\n            '?>'                => '?&gt;',\n            '<![CDATA['         => '&lt;![CDATA[',\n            '<!ENTITY'          => '&lt;!ENTITY',\n            '<!DOCTYPE'         => '&lt;!DOCTYPE',\n            '<!ATTLIST'         => '&lt;!ATTLIST',\n        ];\n    }\n\n    /**\n     * initialize \"$this->_never_allowed_regex\"\n     *\n     * @return void\n     */\n    private function _initNeverAllowedRegex()\n    {\n        $this->_never_allowed_regex = [\n            // default javascript\n            '(\\(?:?document\\)?|\\(?:?window\\)?(?:\\.document)?)\\.(?:location|on\\w*)' => $this->_replacement,\n            // data-attribute + base64\n            \"([\\\"'])?data\\s*:\\s*(?!image\\s*\\/\\s*(?!svg.*?))[^\\1]*?base64[^\\1]*?,[^\\1]*?\\1?\" => $this->_replacement,\n            // old IE, old Netscape\n            'expression\\s*(?:\\(|&\\#40;)' => $this->_replacement,\n            // src=\"js\"\n            'src\\=(?<wrapper>[\\'|\"]).*\\.js(?:\\g{wrapper})' => $this->_replacement,\n            // comments\n            '<!--(.*)-->' => '&lt;!--$1--&gt;',\n            '<!--'        => '&lt;!--',\n        ];\n    }\n\n    /**\n     * Callback method for xss_clean() to sanitize links.\n     *\n     * <p>\n     * <br />\n     * INFO: This limits the PCRE backtracks, making it more performance friendly\n     * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\n     * PHP 5.2+ on link-heavy strings.\n     * </p>\n     *\n     * @param string[] $match\n     *\n     * @return string\n     */\n    private function _js_link_removal_callback($match)\n    {\n        return $this->_js_removal_callback($match, 'href');\n    }\n\n    /**\n     * Callback method for xss_clean() to sanitize tags.\n     *\n     * <p>\n     * <br />\n     * INFO: This limits the PCRE backtracks, making it more performance friendly\n     * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\n     * PHP 5.2+ on image tag heavy strings.\n     * </p>\n     *\n     * @param string[]  $match\n     * @param string $search\n     *\n     * @return string\n     */\n    private function _js_removal_callback($match, $search)\n    {\n        if (!$match[0]) {\n            return '';\n        }\n\n        $replacer = $this->_filter_attributes($match[1]);\n\n        // filter for \"$search\"-attributes\n        if (\\stripos($match[1], $search . '=') !== false) {\n            $pattern = '#' . $search . '=(?<wrapper>[\\'|\"])(?<link>.*)(?:\\g{wrapper})#isU';\n            $matchInner = [];\n            $foundSomethingBad = false;\n            if (\\preg_match($pattern, $match[1], $matchInner)) {\n                $needProtection = true;\n                $matchInner['link'] = \\str_replace(' ', '%20', $matchInner['link']);\n\n                if (\n                    \\strpos($matchInner[0], 'script') === false\n                    &&\n                    \\strpos(\\str_replace(['http://', 'https://'], '', $matchInner[0]), ':') === false\n                    &&\n                    (\n                        \\filter_var($matchInner['link'], \\FILTER_VALIDATE_URL) !== false\n                        ||\n                        \\filter_var('https://localhost.localdomain/' . $matchInner['link'], \\FILTER_VALIDATE_URL) !== false\n                    )\n                ) {\n                    $needProtection = false;\n                }\n\n                if ($needProtection) {\n                    $tmpAntiXss = clone $this;\n\n                    $tmpAntiXss->xss_clean((string) $matchInner[0]);\n\n                    if ($tmpAntiXss->isXssFound() === true) {\n                        $foundSomethingBad = true;\n                        $this->_xss_found = true;\n\n                        $replacer = (string) \\preg_replace(\n                            $pattern,\n                            $search . '=\"' . $this->_replacement . '\"',\n                            $replacer\n                        );\n                    }\n                }\n            }\n\n            if (!$foundSomethingBad) {\n                // filter for javascript\n                $patternTmp = '';\n                foreach ($this->_never_allowed_call_strings as $callTmp) {\n                    if (\\stripos($match[0], $callTmp) !== false) {\n                        $patternTmp .= $callTmp . ':|';\n                    }\n                }\n                $pattern = '#' . $search . '=.*(?:' . $patternTmp . \\implode('|', $this->_never_allowed_js_callback_regex) . ')#ius';\n                $matchInner = [];\n                if (\\preg_match($pattern, $match[1], $matchInner)) {\n                    $replacer = (string) \\preg_replace(\n                        $pattern,\n                        $search . '=\"' . $this->_replacement . '\"',\n                        $replacer\n                    );\n                }\n            }\n        }\n        \n        if (\n            \\substr($match[0], -3) === ' />'\n            &&\n            \\substr($match[1], -2) === ' /'\n            &&\n            \\substr($replacer, -2) !== ' /'\n        ) {\n            $replacer .= ' /';\n        } elseif (\n            \\substr($match[0], -2) === '/>'\n            &&\n            \\substr($match[1], -1) === '/'\n            &&\n            \\substr($replacer, -1) !== '/'\n        ) {\n            $replacer .= '/';\n        }\n        \n        \n        return \\str_ireplace($match[1], $replacer, (string) $match[0]);\n    }\n\n    /**\n     * Callback method for xss_clean() to sanitize image tags.\n     *\n     * <p>\n     * <br />\n     * INFO: This limits the PCRE backtracks, making it more performance friendly\n     * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\n     * PHP 5.2+ on image tag heavy strings.\n     * </p>\n     *\n     * @param string[] $match\n     *\n     * @return string\n     */\n    private function _js_src_removal_callback(array $match)\n    {\n        return $this->_js_removal_callback($match, 'src');\n    }\n\n    /**\n     * Remove disallowed Javascript in links or img tags\n     *\n     * <p>\n     * <br />\n     * We used to do some version comparisons and use of stripos(),\n     * but it is dog slow compared to these simplified non-capturing\n     * preg_match(), especially if the pattern exists in the string\n     * </p>\n     *\n     * <p>\n     * <br />\n     * Note: It was reported that not only space characters, but all in\n     * the following pattern can be parsed as separators between a tag name\n     * and its attributes: [\\d\\s\"\\'`;,\\/\\=\\(\\x00\\x0B\\x09\\x0C]\n     * ... however, UTF8::clean() above already strips the\n     * hex-encoded ones, so we'll skip them below.\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _remove_disallowed_javascript($str)\n    {\n        do {\n            $original = $str;\n\n            if (\\stripos($str, '<a') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<a[^\\p{L}@>]+([^>]*?)(?:>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_link_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = \\preg_replace_callback(\n                        '#<a[^\\p{L}@>]+([^>]*)(?:>|$)#iu',\n                        function ($matches) {\n                            return $this->_js_link_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<img') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<img[^\\p{L}@]+([^>]*?)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        if (\n                            \\strpos($matches[1], 'base64') !== false\n                            &&\n                            \\preg_match(\"/([\\\"'])?data\\s*:\\s*(?:image\\s*\\/.*)[^\\1]*base64[^\\1]*,[^\\1]*\\1?/iUus\", $matches[1])\n                        ) {\n                            return $matches[0];\n                        }\n\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = (string) \\preg_replace_callback(\n                        '#<img[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                        function ($matches) {\n                            if (\n                                \\strpos($matches[1], 'base64') !== false\n                                &&\n                                \\preg_match(\"/([\\\"'])?data\\s*:\\s*(?:image\\s*\\/.*)[^\\1]*base64[^\\1]*,[^\\1]*\\1?/iUus\", $matches[1])\n                            ) {\n                                return $matches[0];\n                            }\n\n                            return $this->_js_src_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<audio') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<audio[^\\p{L}@]+([^>]*?)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = (string) \\preg_replace_callback(\n                        '#<audio[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                        function ($matches) {\n                            return $this->_js_src_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<video') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<video[^\\p{L}@]+([^>]*?)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = \\preg_replace_callback(\n                        '#<video[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                        function ($matches) {\n                            return $this->_js_src_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<source') !== false) {\n                $str = (string) \\preg_replace_callback(\n                    '#<source[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n            }\n\n            if (\\stripos($str, 'script') !== false) {\n                // INFO: US-ASCII: \u00bc === <\n                $str = (string) \\preg_replace(\n                    '#(?:%3C|\u00bc|<)\\s*script[^\\p{L}@]+(?:[^>]*)(?:\\s?/?(?:%3E|\u00be|>)|$)#iu',\n                    $this->_replacement,\n                    $str\n                );\n            }\n\n            if (\\stripos($str, 'script') !== false) {\n                // INFO: US-ASCII: \u00bc === <\n                $str = (string) \\preg_replace(\n                    '#(?:%3C|\u00bc|<)[^\\p{L}@]*/*[^\\p{L}@]*(?:script[^\\p{L}@]+).*(?:%3E|\u00be|>)?#iUus',\n                    $this->_replacement,\n                    $str\n                );\n            }\n        } while ($original !== $str);\n\n        return (string) $str;\n    }\n\n    /**\n     * Remove Evil HTML Attributes (like event handlers and style).\n     *\n     * It removes the evil attribute and either:\n     *\n     *  - Everything up until a space. For example, everything between the pipes:\n     *\n     * <code>\n     *   <a |style=document.write('hello');alert('world');| class=link>\n     * </code>\n     *\n     *  - Everything inside the quotes. For example, everything between the pipes:\n     *\n     * <code>\n     *   <a |style=\"document.write('hello'); alert('world');\"| class=\"link\">\n     * </code>\n     *\n     * @param string $str <p>The string to check.</p>\n     *\n     * @return string\n     *                <p>The string with the evil attributes removed.</p>\n     */\n    private function _remove_evil_attributes($str)\n    {\n        // replace style-attribute, first (if needed)\n        if (\n            \\stripos($str, 'style') !== false\n            &&\n            \\in_array('style', $this->_evil_attributes_regex, true)\n        ) {\n            do {\n                $count = $temp_count = 0;\n\n                $str = (string) \\preg_replace(\n                    '/(<[^>]+)(?<!\\p{L})(style\\s*=\\s*\"(?:[^\"]*?)\"|style\\s*=\\s*\\'(?:[^\\']*?)\\')/iu',\n                    '$1' . $this->_replacement,\n                    $str,\n                    -1,\n                    $temp_count\n                );\n                $count += $temp_count;\n            } while ($count);\n        }\n\n        if (!$this->_cache_evil_attributes_regex_string) {\n            $this->_cache_evil_attributes_regex_string = \\implode('|', $this->_evil_attributes_regex);\n            $this->_cache_evil_attributes_regex_string .= '|' . \\implode('\\w*|', $this->_never_allowed_on_events_afterwards);\n        }\n\n        do {\n            $count = $temp_count = 0;\n\n            // find occurrences of illegal attribute strings with and without quotes (\" and ' are octal quotes)\n            $regex = '/(.*)((?:<[^>]+)(?<!\\p{L}))(?:' . $this->_cache_evil_attributes_regex_string . ')(?:\\s*=\\s*)(?:\\'(?:.*?)\\'|\"(?:.*?)\")(.*)/ius';\n            $strTmp = \\preg_replace(\n                $regex,\n                '$1$2' . $this->_replacement . '$3$4',\n                $str,\n                -1,\n                $temp_count\n            );\n            if ($strTmp === null) {\n                $regex = '/(?:' . $this->_cache_evil_attributes_regex_string . ')(?:\\s*=\\s*)(?:\\'(?:.*?)\\'|\"(?:.*?)\")/ius';\n                $strTmp = \\preg_replace(\n                    $regex,\n                    $this->_replacement,\n                    $str,\n                    -1,\n                    $temp_count\n                );\n            }\n            $str = (string)$strTmp;\n            $count += $temp_count;\n\n            $regex =  '/(.*?)(<[^>]+)(?<!\\p{L})(?:' . $this->_cache_evil_attributes_regex_string . ')\\s*=\\s*(?:[^\\s>]*)/ius';\n            $strTmp = \\preg_replace(\n                $regex,\n                '$1$2' . $this->_replacement . '$3',\n                $str,\n                -1,\n                $temp_count\n            );\n            if ($strTmp === null) {\n                $regex =  '/(?<!\\p{L})(?:' . $this->_cache_evil_attributes_regex_string . ')\\s*=\\s*(?:[^\\s>]*)(.*?)/ius';\n                $strTmp = \\preg_replace(\n                    $regex,\n                    '$1$2' . $this->_replacement . '$3',\n                    $str,\n                    -1,\n                    $temp_count\n                );\n            }\n            $str = (string)$strTmp;\n            $count += $temp_count;\n        } while ($count);\n\n        return (string) $str;\n    }\n\n    /**\n     * UTF-7 decoding function.\n     *\n     * @param string $str <p>HTML document for recode ASCII part of UTF-7 back to ASCII.</p>\n     *\n     * @return string\n     */\n    private function _repack_utf7($str)\n    {\n        if (\\strpos($str, '-') === false) {\n            return $str;\n        }\n\n        return (string) \\preg_replace_callback(\n            '#\\+([\\p{L}\\d]+)-#iu',\n            function ($matches) {\n                return $this->_repack_utf7_callback($matches);\n            },\n            $str\n        );\n    }\n\n    /**\n     * Additional UTF-7 decoding function.\n     *\n     * @param string[] $strings <p>Array of strings for recode ASCII part of UTF-7 back to ASCII.</p>\n     *\n     * @return string\n     */\n    private function _repack_utf7_callback($strings)\n    {\n        $strTmp = \\base64_decode($strings[1], true);\n\n        if ($strTmp === false) {\n            return $strings[0];\n        }\n\n        if (\\rtrim(\\base64_encode($strTmp), '=') !== \\rtrim($strings[1], '=')) {\n            return $strings[0];\n        }\n\n        $string = (string) \\preg_replace_callback(\n            '/^((?:\\x00.)*?)((?:[^\\x00].)+)/us',\n            function ($matches) {\n                return $this->_repack_utf7_callback_back($matches);\n            },\n            $strTmp\n        );\n\n        return (string) \\preg_replace(\n            '/\\x00(.)/us',\n            '$1',\n            $string\n        );\n    }\n\n    /**\n     * Additional UTF-7 encoding function.\n     *\n     * @param string $str <p>String for recode ASCII part of UTF-7 back to ASCII.</p>\n     *\n     * @return string\n     */\n    private function _repack_utf7_callback_back($str)\n    {\n        return $str[1] . '+' . \\rtrim(\\base64_encode($str[2]), '=') . '-';\n    }\n\n    /**\n     * Sanitize naughty HTML elements.\n     *\n     * <p>\n     * <br />\n     *\n     * If a tag containing any of the words in the list\n     * below is found, the tag gets converted to entities.\n     *\n     * <br /><br />\n     *\n     * So this: <blink>\n     * <br />\n     * Becomes: &lt;blink&gt;\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _sanitize_naughty_html($str)\n    {\n        // init\n        $strEnd = '';\n\n        do {\n            $original = $str;\n\n            if (\n                \\strpos($str, '<') === false\n                &&\n                \\strpos($str, '>') === false\n            ) {\n                return $str;\n            }\n\n            if (!$this->_cache__evil_html_tags_str) {\n                $this->_cache__evil_html_tags_str = \\implode('|', $this->_evil_html_tags);\n            }\n\n            $str = (string) \\preg_replace_callback(\n                '#<(?<start>/*\\s*)(?<tagName>' . $this->_cache__evil_html_tags_str . ')(?<end>[^><]*)(?<rest>[><]*)#ius',\n                function ($matches) {\n                    return $this->_sanitize_naughty_html_callback($matches);\n                },\n                $str\n            );\n\n            if (\\strpos($str, '<') === false) {\n                return $str;\n            }\n\n            if (\n                $this->_xss_found\n                &&\n                \\trim($str) === '<'\n            ) {\n                return '';\n            }\n\n            $str = (string) \\preg_replace_callback(\n                '#<(?!!--|!\\[)((?<start>/*\\s*)((?<tagName>[\\p{L}:]+)(?=[^\\p{L}]|$|)|.+)[^\\s\"\\'\\p{L}>/=]*[^>]*)(?<closeTag>>)?#iusS', // tags without comments\n                function ($matches) {\n                    if (\n                        $this->_do_not_close_html_tags !== []\n                        &&\n                        isset($matches['tagName'])\n                        &&\n                        \\in_array($matches['tagName'], $this->_do_not_close_html_tags, true)\n                    ) {\n                        return $matches[0];\n                    }\n\n                    return $this->_close_html_callback($matches);\n                },\n                $str\n            );\n\n            if ($str === $strEnd) {\n                return (string) $str;\n            }\n\n            $strEnd = $str;\n        } while ($original !== $str);\n\n        return (string) $str;\n    }\n\n    /**\n     * @param string[] $matches\n     *\n     * @return string\n     */\n    private function _close_html_callback($matches)\n    {\n        if (empty($matches['closeTag'])) {\n            // allow e.g. \"< $2.20\" and e.g. \"< 1 year\"\n            if (\\preg_match('/^[ .,\\d=%\u20ac$\u20a2\u20a3\u00a3\u20a4\u20b6\u2133\u20a5\u20a6\u20a7\u20a8\u0dbb\u0dd4\u0bb0\u0bc2\u0bf9\u0930\u0942\u20b9\u0af1\u20a9\u20aa\u20b8\u20ab\u058f\u20ad\u20ba\u20bc\u20ae\u20af\u20b0\u20b7\u20b1\ufdfc\u20b2\u20be\u20b3\u20b4\u20bd\u20b5\u20a1\u00a2\u00a5\u5186\u09f3\u5143\u17db\u20a0\u00a4\u0e3f\u060b]*$|^[ .,\\d=%\u20ac$\u20a2\u20a3\u00a3\u20a4\u20b6\u2133\u20a5\u20a6\u20a7\u20a8\u0dbb\u0dd4\u0bb0\u0bc2\u0bf9\u0930\u0942\u20b9\u0af1\u20a9\u20aa\u20b8\u20ab\u058f\u20ad\u20ba\u20bc\u20ae\u20af\u20b0\u20b7\u20b1\ufdfc\u20b2\u20be\u20b3\u20b4\u20bd\u20b5\u20a1\u00a2\u00a5\u5186\u09f3\u5143\u17db\u20a0\u00a4\u0e3f\u060b]+\\p{L}*\\s*$/u', $matches[1])) {\n                return '<' . \\str_replace(['>', '<'], ['&gt;', '&lt;'], $matches[1]);\n            }\n\n            return '&lt;' . \\str_replace(['>', '<'], ['&gt;', '&lt;'], $matches[1]);\n        }\n\n        return '<' . \\str_replace(['>', '<'], ['&gt;', '&lt;'], $matches[1]) . '>';\n    }\n\n    /**\n     * Sanitize naughty HTML.\n     *\n     * <p>\n     * <br />\n     * Callback method for AntiXSS->sanitize_naughty_html() to remove naughty HTML elements.\n     * </p>\n     *\n     * @param string[] $matches\n     *\n     * @return string\n     */\n    private function _sanitize_naughty_html_callback($matches)\n    {\n        $fullMatch = $matches[0];\n\n        // skip some edge-cases\n        /** @noinspection NotOptimalIfConditionsInspection */\n        if (\n            (\n                \\strpos($fullMatch, '=') === false\n                &&\n                \\strpos($fullMatch, ' ') === false\n                &&\n                \\strpos($fullMatch, ':') === false\n                &&\n                \\strpos($fullMatch, '/') === false\n                &&\n                \\strpos($fullMatch, '\\\\') === false\n                &&\n                \\stripos($fullMatch, '<' . $matches['tagName'] . '>') !== 0\n                &&\n                \\stripos($fullMatch, '</' . $matches['tagName'] . '>') !== 0\n                &&\n                \\stripos($fullMatch, '<' . $matches['tagName'] . '<') !== 0\n            )\n            ||\n            \\preg_match('/<\\/?' . $matches['tagName'] . '\\p{L}+>/ius', $fullMatch) === 1\n        ) {\n            return $fullMatch;\n        }\n\n        return '&lt;' . $matches['start'] . $matches['tagName'] . $matches['end'] // encode opening brace\n               // encode captured opening or closing brace to prevent recursive vectors\n               . \\str_replace(\n                   [\n                       '>',\n                   ],\n                   [\n                       '&gt;',\n                   ],\n                   $matches['rest']\n               );\n    }\n\n    /**\n     * Sanitize naughty scripting elements\n     *\n     * <p>\n     * <br />\n     *\n     * Similar to above, only instead of looking for\n     * tags it looks for PHP and JavaScript commands\n     * that are disallowed. Rather than removing the\n     * code, it simply converts the parenthesis to entities\n     * rendering the code un-executable.\n     *\n     * <br /><br />\n     *\n     * For example:  <pre>eval('some code')</pre>\n     * <br />\n     * Becomes:      <pre>eval&#40;'some code'&#41;</pre>\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _sanitize_naughty_javascript($str)\n    {\n        if (\\strpos($str, '(') !== false) {\n            $patterns = [\n                'alert',\n                'prompt',\n                'confirm',\n                'cmd',\n                'passthru',\n                'eval',\n                'exec',\n                'execScript',\n                'setTimeout',\n                'setInterval',\n                'setImmediate',\n                'expression',\n                'system',\n                'fopen',\n                'fsockopen',\n                'file',\n                'file_get_contents',\n                'readfile',\n                'unlink',\n            ];\n\n            $found = false;\n            foreach ($patterns as $pattern) {\n                if (\\strpos($str, $pattern) !== false) {\n                    $found = true;\n\n                    break;\n                }\n            }\n\n            if ($found === true) {\n                $str = (string) \\preg_replace(\n                    '#(?<!\\p{L})(' . \\implode('|', $patterns) . ')(\\s*)\\((.*)\\)#uisU',\n                    '\\\\1\\\\2&#40;\\\\3&#41;',\n                    $str\n                );\n            }\n        }\n\n        return (string) $str;\n    }\n\n    /**\n     * Add some strings to the \"_evil_attributes\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addEvilAttributes(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_evil_attributes_regex = \\array_merge(\n            $strings,\n            $this->_evil_attributes_regex\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_evil_html_tags\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addEvilHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache__evil_html_tags_str = '';\n\n        $this->_evil_html_tags = \\array_merge(\n            $strings,\n            $this->_evil_html_tags\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_regex\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_never_allowed_regex_string = '';\n\n        $this->_never_allowed_regex = \\array_merge(\n            $strings,\n            $this->_never_allowed_regex\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_regex\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_never_allowed_regex_string = '';\n\n        $this->_never_allowed_regex = \\array_diff(\n            $this->_never_allowed_regex,\n            \\array_intersect($strings, $this->_never_allowed_regex)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_on_events_afterwards\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedOnEventsAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_never_allowed_on_events_afterwards = \\array_merge(\n            $strings,\n            $this->_never_allowed_on_events_afterwards\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_str_afterwards\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedStrAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_str_afterwards = \\array_merge(\n            $strings,\n            $this->_never_allowed_str_afterwards\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_do_not_close_html_tags\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addDoNotCloseHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_do_not_close_html_tags = \\array_merge(\n            $strings,\n            $this->_do_not_close_html_tags\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_js_callback_regex\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedJsCallbackRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_js_callback_regex = \\array_merge(\n            $strings,\n            $this->_never_allowed_js_callback_regex\n        );\n\n        return $this;\n    }\n    \n    /**\n     * Add some strings to the \"_never_allowed_call_strings\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedCallStrings(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_call_strings = \\array_merge(\n            $strings,\n            $this->_never_allowed_call_strings\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_do_not_close_html_tags\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeDoNotCloseHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_do_not_close_html_tags = \\array_diff(\n            $this->_do_not_close_html_tags,\n            \\array_intersect($strings, $this->_do_not_close_html_tags)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Check if the \"AntiXSS->xss_clean()\"-method found an XSS attack in the last run.\n     *\n     * @return bool|null\n     *                   <p>Will return null if the \"xss_clean()\" wasn't running at all.</p>\n     */\n    public function isXssFound()\n    {\n        return $this->_xss_found;\n    }\n\n    /**\n     * Remove some strings from the \"_evil_attributes\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeEvilAttributes(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_evil_attributes_regex = \\array_diff(\n            $this->_evil_attributes_regex,\n            \\array_intersect($strings, $this->_evil_attributes_regex)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_evil_html_tags\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeEvilHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache__evil_html_tags_str = '';\n\n        $this->_evil_html_tags = \\array_diff(\n            $this->_evil_html_tags,\n            \\array_intersect($strings, $this->_evil_html_tags)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_on_events_afterwards\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedOnEventsAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_never_allowed_on_events_afterwards = \\array_diff(\n            $this->_never_allowed_on_events_afterwards,\n            \\array_intersect($strings, $this->_never_allowed_on_events_afterwards)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_str_afterwards\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedStrAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_str_afterwards = \\array_diff(\n            $this->_never_allowed_str_afterwards,\n            \\array_intersect($strings, $this->_never_allowed_str_afterwards)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_call_strings\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedCallStrings(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_call_strings = \\array_diff(\n            $this->_never_allowed_call_strings,\n            \\array_intersect($strings, $this->_never_allowed_call_strings)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_js_callback_regex\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedJsCallbackRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_js_callback_regex = \\array_diff(\n            $this->_never_allowed_js_callback_regex,\n            \\array_intersect($strings, $this->_never_allowed_js_callback_regex)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Set the replacement-string for not allowed strings.\n     *\n     * @param string $string\n     *\n     * @return $this\n     */\n    public function setReplacement($string): self\n    {\n        $this->_replacement = (string) $string;\n\n        $this->_initNeverAllowedStr();\n        $this->_initNeverAllowedRegex();\n\n        return $this;\n    }\n\n    /**\n     * Set the option to stripe 4-Byte chars.\n     *\n     * <p>\n     * <br />\n     * INFO: use it if your DB (MySQL) can't use \"utf8mb4\" -> preventing stored XSS-attacks\n     * </p>\n     *\n     * @param bool $bool\n     *\n     * @return $this\n     */\n    public function setStripe4byteChars($bool): self\n    {\n        $this->_stripe_4byte_chars = (bool) $bool;\n\n        return $this;\n    }\n\n    /**\n     * XSS Clean\n     *\n     * <p>\n     * <br />\n     * Sanitizes data so that \"Cross Site Scripting\" hacks can be\n     * prevented. This method does a fair amount of work but\n     * it is extremely thorough, designed to prevent even the\n     * most obscure XSS attempts. But keep in mind that nothing\n     * is ever 100% foolproof...\n     * </p>\n     *\n     * <p>\n     * <br />\n     * <strong>Note:</strong> Should only be used to deal with data upon submission.\n     *   It's not something that should be used for general\n     *   runtime processing.\n     * </p>\n     *\n     * @see http://channel.bitflux.ch/wiki/XSS_Prevention\n     *    Based in part on some code and ideas from Bitflux.\n     * @see http://ha.ckers.org/xss.html\n     *    To help develop this script I used this great list of\n     *    vulnerabilities along with a few other hacks I've\n     *    harvested from examining vulnerabilities in other programs.\n     *\n     * @param string|string[] $str\n     *                             <p>input data e.g. string or array of strings</p>\n     *\n     * @return string|string[]\n     *\n     * @template TXssCleanInput as string|string[]\n     * @phpstan-param TXssCleanInput $str\n     * @phpstan-return TXssCleanInput\n     */\n    public function xss_clean($str)\n    {\n        // reset\n        $this->_xss_found = null;\n\n        // check for an array of strings\n        if (\\is_array($str)) {\n            foreach ($str as &$value) {\n                /* @phpstan-ignore-next-line | _xss_found is maybe changed via \"xss_clean\" */\n                if ($this->_xss_found === true) {\n                    $alreadyFoundXss = true;\n                } else {\n                    $alreadyFoundXss = false;\n                }\n                \n                $value = $this->xss_clean($value);\n\n                /* @phpstan-ignore-next-line | _xss_found is maybe changed via \"xss_clean\" */\n                if ($alreadyFoundXss === true) {\n                    $this->_xss_found = true;\n                }\n            }\n\n            /** @var TXssCleanInput $str - hack for phpstan */\n            return $str;\n        }\n\n        $old_str_backup = $str;\n\n        // process\n        do {\n            $old_str = $str;\n            $str = $this->_do($str);\n        } while ($old_str !== $str);\n\n        // keep the old value, if there wasn't any XSS attack\n        if ($this->_xss_found !== true) {\n            $str = $old_str_backup;\n        }\n\n        return $str;\n    }\n}\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      2fa.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\necho \"ici\";\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    console.log('2FA loaded')\n\n    $(document).on('click', '.generate-key', function() {\n        var size = $(this).data('length'),\n            target = $(this).closest('.input-group').find('input').attr('id');\n\n        $.post(\n            'sources/main.queries.php', {\n                type: 'generate_new_key',\n                type_category: 'action_key',\n                size: size\n            },\n            function(data) {\n                $('#' + target).val(data[0].key);\n            },\n            'json'\n        );\n    })\n\n\n    $(document).on('click', '#button-duo-config-check', function() {\n        var data = \"{\\\"ikey\\\":\\\"\" + sanitizeString($(\"#duo_ikey\").val()) + \"\\\", \\\"skey\\\":\\\"\" + sanitizeString($(\"#duo_skey\").val()) + \"\\\", \\\"host\\\":\\\"\" + sanitizeString($(\"#duo_host\").val()) + \"\\\"}\";\n\n        // Prepare data\n        var data = {\n            'duo_ikey': $('#duo_ikey').val(),\n            'duo_skey': $('#duo_skey').val(),\n            'duo_host': $('#duo_host').val()\n        }\n        console.log(data);\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'run_duo_config_check',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        data.message,\n                        '', {\n                            timeOut: 15000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Inform user\n                    toastr.remove();\n                    toastr.info(\n                        '<?php echo langHdl('duo-config-check-success'); ?>',\n                        '', {\n                            timeOut: 5000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      2fa.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n// Load template\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('mfa'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"card card-primary\">\n                    <div class=\"card-header\">\n                        <h3 class='card-title'><?php echo langHdl('mfa_configuration'); ?></h3>\n                    </div>\n\n                    <div class=\"card-body\">\n\n                        <div class=\"row mb-4\">\n                            <div class=\"col-9\">\n                                <?php echo langHdl('2factors_expected_for_admin'); ?>\n                                <small class='form-text text-muted'>\n                                    <?php echo langHdl('2factors_expected_for_admin_tip'); ?>\n                                </small>\n                            </div>\n                            <div class=\"col-3\">\n                                <div class=\"toggle toggle-modern\" id=\"admin_2fa_required\" data-toggle-on=\"<?php echo isset($SETTINGS['admin_2fa_required']) && (int) $SETTINGS['admin_2fa_required'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"admin_2fa_required_input\" value=\"<?php echo isset($SETTINGS['admin_2fa_required']) && (int) $SETTINGS['admin_2fa_required'] === 1 ? '1' : '0'; ?>\">\n                            </div>\n                        </div>\n\n                        <div class=\"row mb-4\">\n                            <div class=\"col-6\">\n                                <?php echo langHdl('mfa_for_roles'); ?>\n                                <small class='form-text text-muted'>\n                                    <?php echo langHdl('mfa_for_roles_tip'); ?>\n                                </small>\n                            </div>\n                            <div class='col-6'>\n                                <select class='form-control form-control-sm select2 disabled' id='mfa_for_roles' onchange='' multiple=\"multiple\" style=\"width:100%;\">\n                                    <?php\n                                    // Get selected groups\n                                    $arrRolesMFA = json_decode($SETTINGS['mfa_for_roles'], true);\n                                    if ($arrRolesMFA === 0 || empty($arrRolesMFA) === true) {\n                                        $arrRolesMFA = [];\n                                    }\n                                    // Get full list\n                                    $roles = performDBQuery(\n                                        $SETTINGS,\n                                        'id, title',\n                                        'roles_title'\n                                    );\n                                    foreach ($roles as $role) {\n                                        echo '\n                                    <option value=\"' . $role['id'] . '\"', in_array($role['id'], $arrRolesMFA) === true ? ' selected' : '', '>' . addslashes($role['title']) . '</option>';\n                                    }\n                                    ?>\n                                </select>\n                            </div>\n                        </div>\n\n                        <ul class=\"nav nav-tabs mb-4\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#google\" aria-controls=\"google\" aria-selected=\"true\"><?php echo langHdl('google_2fa'); ?></a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#duo\" role=\"tab\" aria-controls=\"duo\" aria-selected=\"false\"><?php echo langHdl('duo_security'); ?></a>\n                            </li>\n                            <!--\n                                <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#yubico\" role=\"tab\" aria-controls=\"yubico\" aria-selected=\"false\"><?php echo langHdl('yubico'); ?></a>\n                            </li>\n                                -->\n                        </ul>\n                        <div class=\"tab-content\">\n\n                            <div class=\"tab-pane fade show active\" id=\"google\" role=\"tabpanel\" aria-labelledby=\"google-tab\">\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_2factors_authentication_setting'); ?>\n                                        <small class='form-text text-muted'>\n                                            <?php echo langHdl('admin_2factors_authentication_setting_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"google_authentication\" data-toggle-on=\"<?php echo isset($SETTINGS['google_authentication']) && (int) $SETTINGS['google_authentication'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"google_authentication_input\" value=\"<?php echo isset($SETTINGS['google_authentication']) && (int) $SETTINGS['google_authentication'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_ga_website_name'); ?>\n                                        <small class='form-text text-muted'>\n                                            <?php echo langHdl('admin_ga_website_name_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"ga_website_name\" value=\"<?php echo isset($SETTINGS['ga_website_name']) === true ? $SETTINGS['ga_website_name'] : ''; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('ga_reset_by_user'); ?>\n                                        <small class='form-text text-muted'>\n                                            <?php echo langHdl('ga_reset_by_user_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"ga_reset_by_user\" data-toggle-on=\"<?php echo isset($SETTINGS['ga_reset_by_user']) && (int) $SETTINGS['ga_reset_by_user'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"ga_reset_by_user_input\" value=\"<?php echo isset($SETTINGS['ga_reset_by_user']) && (int) $SETTINGS['ga_reset_by_user'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"tab-pane\" id=\"duo\" role=\"tabpanel\" aria-labelledby=\"duo-tab\">\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('settings_duo'); ?>\n                                        <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n                                            <?php echo langHdl('settings_duo_tip'); ?>\n                                        </small>\n                                        <div>\n                                            <small><a href=\"<?php echo DUO_ADMIN_URL_INFO; ?>\" target=\"_blank\"><?php echo langHdl('more_information'); ?></a></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"duo\" data-toggle-on=\"<?php echo isset($SETTINGS['duo']) && (int) $SETTINGS['duo'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"duo_input\" value=\"<?php echo isset($SETTINGS['duo']) && (int) $SETTINGS['duo'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_duo_intro'); ?>\n                                        <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n                                            <?php echo langHdl('settings_duo_explanation'); ?>\n                                        </small>\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-5\">\n                                        <?php echo langHdl('admin_duo_ikey'); ?>\n                                    </div>\n                                    <div class=\"col-7\">\n                                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"duo_ikey\" value=\"<?php echo isset($SETTINGS['duo_ikey']) === true ? $SETTINGS['duo_ikey'] : ''; ?>\">\n                                    </div>\n                                </div>\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-5\">\n                                        <?php echo langHdl('admin_duo_skey'); ?>\n                                    </div>\n                                    <div class=\"col-7\">\n                                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"duo_skey\" value=\"<?php echo isset($SETTINGS['duo_skey']) === true ? $SETTINGS['duo_skey'] : ''; ?>\">\n                                    </div>\n                                </div>\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-5\">\n                                        <?php echo langHdl('admin_duo_host'); ?>\n                                    </div>\n                                    <div class=\"col-7\">\n                                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"duo_host\" value=\"<?php echo isset($SETTINGS['duo_host']) === true ? $SETTINGS['duo_host'] : ''; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <button class=\"btn btn-primary\" id=\"button-duo-config-check\">\n                                        <?php echo langHdl('duo-run-config-check'); ?>\n                                    </button>\n                                </div>\n                            </div>\n\n                            <!--\n                            <div class=\"tab-pane\" id=\"yubico\" role=\"tabpanel\" aria-labelledby=\"yubico-tab\">\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_yubico_authentication_setting'); ?>\n                                        <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n                                            <?php echo langHdl('yubico_authentication_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"yubico_authentication\" data-toggle-on=\"<?php echo isset($SETTINGS['yubico_authentication']) && (int) $SETTINGS['yubico_authentication'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"yubico_authentication_input\" value=\"<?php echo isset($SETTINGS['yubico_authentication']) && (int) $SETTINGS['yubico_authentication'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n                            </div>\n                                -->\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      admin.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\n?>\n\n<script type=\"text/javascript\">\n    var requestRunning = false;\n\n    /**\n     * ADMIN\n     */\n    // <- PREPARE TOGGLES\n    $('.toggle').toggles({\n        drag: true,\n        click: true,\n        text: {\n            on: '<?php echo langHdl('yes'); ?>',\n            off: '<?php echo langHdl('no'); ?>'\n        },\n        on: true,\n        animate: 250,\n        easing: 'swing',\n        width: 50,\n        height: 20,\n        type: 'compact'\n    });\n    $('.toggle').on('toggle', function(e, active) {\n        if (active) {\n            $(\"#\" + e.target.id + \"_input\").val(1);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", false);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").removeClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").removeClass('hidden');\n            }\n        } else {\n            $(\"#\" + e.target.id + \"_input\").val(0);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", true);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").addClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").addClass('hidden');\n            }\n        }\n\n        var data = {\n            \"field\": e.target.id,\n            \"value\": $(\"#\" + e.target.id + \"_input\").val(),\n        }\n        console.log(data)\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n    // .-> END. TOGGLES\n\n    // <- PREPARE SELECT2\n    $('.select2').select2({\n        language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'EN'; ?>'\n    });\n\n    /**\n     */\n    $(document).on('change', '.form-control-sm, .setting-ldap', function() {\n        var field = $(this).attr('id'),\n            value = $.isArray($(this).val()) === false ? $(this).val() : JSON.stringify($(this).val().map(Number));\n\n        if (field === '' || field === undefined || $(this).hasClass('no-save') === true) return false;\n        \n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n\n        // Sanitize value\n        value = fieldDomPurifierWithWarning('#' + field);\n        if (value === false) {\n            return false;\n        }\n        $('#' + field).val(value);\n\n        requestRunning = true;\n\n        var data = {\n            \"field\": field,\n            \"value\": value,\n        }\n        console.log(data);\n\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n                requestRunning = false;\n            }\n        );\n    });\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n    // Initialization\n    var userDidAChange = false,\n        userTemporaryCode = '',\n        constVisibleOTP = false,\n        userClipboard,\n        ProcessInProgress = false,\n        debugJavascript = false;\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare tooltips\n    $('.infotip').tooltip();\n\n    // Prepare Select2\n    $('.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        radioClass: 'iradio_flat-blue',\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n    $('#form-create-special-folder').iCheck('disable');\n\n    // Prevent submit on button\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n    //Launch the datatables pluggin\n    var oTable = $('#table-users').DataTable({\n        'paging': true,\n        'searching': true,\n        'order': [\n            [1, 'asc']\n        ],\n        'info': true,\n        'processing': false,\n        'serverSide': true,\n        'responsive': false,\n        'select': false,\n        'stateSave': true,\n        'autoWidth': true,\n        'ajax': {\n            url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/users.datatable.php',\n        },\n        'language': {\n            'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n        },\n        'columns': [{\n                'width': '80px',\n                className: 'details-control',\n                'render': function(data, type, row, meta) {\n                    return '<div class=\"group-btn btn-user-action\">' +\n                        '' +\n                        '<button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fas fa-cog\"></i>&nbsp;' +\n                        '</button>' +\n                        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n                        ($(data).data('auth-type') === 'local' ?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-password\"><i class=\"fas fa-lock mr-2\"></i><?php echo langHdl('change_login_password'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"edit\"><i class=\"fas fa-pen mr-2\"></i><?php echo langHdl('edit'); ?></li>' +\n                        ($(data).data('otp-provided') !== \"\"?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-otp\"><i class=\"fas fa-mask mr-2\"></i><?php echo langHdl('generate_new_otp'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\" data-action=\"logs\"><i class=\"fas fa-newspaper mr-2\"></i><?php echo langHdl('see_logs'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"qrcode\"><i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('user_ga_code'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"access-rights\"><i class=\"fas fa-sitemap mr-2\"></i><?php echo langHdl('user_folders_rights'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"disable-user\"><i class=\"fas fa-user-slash text-warning mr-2\" disabled></i><?php echo langHdl('disable_enable'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"delete-user\"><i class=\"fas fa-user-minus text-danger mr-2\" disabled></i><?php echo langHdl('delete'); ?></li>' +\n                        '</ul>' +\n                        '</div>';\n                }\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            }\n        ],\n        'preDrawCallback': function() {\n            toastr.info(\n                '<?php echo langHdl('loading'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>',\n                ''\n            );\n        },\n        'drawCallback': function() {\n            // Tooltips\n            $('.infotip').tooltip();\n\n            // Remove progress toast\n            $('.toast').remove();\n        },\n        /*'createdRow': function( row, data, dataIndex ) {\n            var newClasses = $(data[6]).filter('#row-class-' + dataIndex).val();\n            $(row).addClass(newClasses);\n        }*/\n    });\n\n\n\n    $('#form-email').change(function() {\n        //extract domain from email\n        var domain = $(this).val().split('@')[1];\n        if (domain === undefined) {\n            return false;\n        }\n        domain = domain.toLowerCase()\n\n        //check if domain exists\n        $.post(\"sources/users.queries.php\", {\n                type: \"check_domain\",\n                domain: domain\n            },\n            function(data) {\n                data = $.parseJSON(data);\n                if (debugJavascript === true) console.log(data);\n\n                $(\"#new_folder_role_domain\").attr(\"disabled\", \"disabled\");\n                if (data.folder === 'not_exists' && data.role === 'not_exists' && domain !== '') {\n                    $('#form-create-special-folder').iCheck('enable');\n                    $('#form-special-folder').val(domain);\n                } else {\n                    $('#form-create-special-folder').iCheck('disable');\n                    $('#form-special-folder').val('');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonClose', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        if (debugJavascript === true) console.log('Closing warning dialog')\n        toastr.remove();\n        $('#warningModal').modal('hide');\n\n        // Fianlize UI\n        // clear form fields\n        $(\".clear-me\").val('');\n        $('.select2').val('').change();\n        //$('#privilege-user').iCheck('check');\n        $('.form-check-input')\n            .iCheck('disable')\n            .iCheck('uncheck');\n\n        // refresh table content\n        oTable.ajax.reload();\n\n        // Show list of users\n        $('#row-form').addClass('hidden');\n        $('#row-list').removeClass('hidden');\n    });\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        //console.log('send email for '+store.get('teampassUser').admin_new_user_temporary_encryption_code)\n        //console.log(store.get('teampassUser'))\n        //console.log(store.get('teampassApplication'))\n\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fas fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('sending_email_message'); ?>',\n            '',\n            '',\n            true,\n            false,\n            false\n        );\n\n        // Prepare data\n        if (store.get('teampassApplication').formUserAction === \"add_new_user\") {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_new_user');?>',\n                'pre_replace' : {\n                    '#code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                    '#login#' : store.get('teampassUser').admin_new_user_login,\n                    '#password#' : store.get('teampassUser').admin_new_user_password,\n                }\n            }\n        } else {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_temporary_encryption_code');?>',\n                'pre_replace' : {\n                    '#enc_code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                }\n            }\n        }\n\n        // Launch action\n        $.post(\n            'sources/main.queries.php', {\n                type: 'mail_me',\n                type_category: 'action_mail',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                //console.log(data);\n\n                if (data.error !== false) {\n                    $('#warningModal').modal('hide');\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Fianlize UI\n                    // clear form fields\n                    $(\".clear-me\").val('');\n                    $('.select2').val('').change();\n                    //$('#privilege-user').iCheck('check');\n                    $('.form-check-input')\n                        .iCheck('disable')\n                        .iCheck('uncheck');\n\n                    // Show list of users\n                    $('#row-form').addClass('hidden');\n                    $('#row-list').removeClass('hidden');\n\n                    // Hide dialogbox\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // change the user status to ready to use\n                    data = {\n                        'user_id': store.get('teampassUser').admin_new_user_id,\n                    }\n\n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'user_is_ready',\n                            type_category: 'action_user',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            if (debugJavascript === true) console.log('User has been created');\n\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Remove action from store\n                            if (debugJavascript === true) console.log('Clear Store variables')\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                                }\n                            );\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.admin_new_user_password = '',\n                                    teampassUser.admin_new_user_temporary_encryption_code = '',\n                                    teampassUser.admin_new_user_login = '';\n                                }\n                            );\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * BUILD AND CHECK THE USER LOGIN\n     */\n    $('.build-login').change(function() {\n        // Build login only if it is empty\n        if ($(\"#form-login\").val() === '') {\n            //return false;\n        }\n        // Build login\n        if ($(this).attr('id') !== 'form-login') {\n            $(\"#form-login\").val(\n                $(\"#form-name\")\n                .val()\n                .toLowerCase()\n                .replace(/ /g, \"\") + \".\" + $(\"#form-lastname\").val().toLowerCase().replace(/ /g, \"\")\n            );\n        }\n\n        // Check if login exists\n        $.post(\n            'sources/users.queries.php', {\n                type: 'is_login_available',\n                login: $('#form-login').val(),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Show result\n                    if (data.login_exists === 0) {\n                        $('#form-login')\n                            .removeClass('is-invalid')\n                            .addClass('is-valid');\n                        $('#form-login-conform').val(true);\n                    } else {\n                        $('#form-login')\n                            .removeClass('is-valid')\n                            .addClass('is-invalid');\n                        $('#form-login-conform').val(false);\n                    }\n                }\n            }\n        );\n    });\n\n\n    function userTasksCreation(userId, userPassword, userTemporaryCode)\n    {\n        var data = {\n            user_id: userId,\n            user_pwd: userPassword,\n            user_code: userTemporaryCode,\n        }\n\n        // Do query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"create_new_user_tasks\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true)  {\n                    console.info(\"R\u00e9ception des donn\u00e9es :\")\n                    console.log(data);\n                }\n                \n                if (data.error === true) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    dfd.reject();\n                } else {\n                    // show message to user\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 2000\n                        }\n                    );\n\n                    // Reload list of users\n                    oTable.ajax.reload();\n\n                    // Prepare UI\n                    $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                    $('#row-form').addClass('hidden');\n                }\n            }\n        );\n    }\n\n    /**\n     * \n     */\n    // Launch recursive action to encrypt the keys\n    function callRecursiveUserDataEncryption(\n        userId,\n        step,\n        start\n    ) {\n        var dfd = $.Deferred();\n        ProcessInProgress = true;\n        \n        var stepText = '';\n        if (debugJavascript === true) console.log('Performing '+step)\n\n        // Prepare progress string\n        if (step === 'step0') {\n            stepText = '<?php echo langHdl('inititialization'); ?>';\n        } else if (step === 'step1') {\n            stepText = '<?php echo langHdl('items'); ?>';\n        } else if (step === 'step2') {\n            stepText = '<?php echo langHdl('logs'); ?>';\n        } else if (step === 'step3') {\n            stepText = '<?php echo langHdl('suggestions'); ?>';\n        } else if (step === 'step4') {\n            stepText = '<?php echo langHdl('fields'); ?>';\n        } else if (step === 'step5') {\n            stepText = '<?php echo langHdl('files'); ?>';\n        } else if (step === 'step6') {\n            stepText = '<?php echo langHdl('personal_items'); ?>';\n        }\n\n        if (step !== 'finished') {\n            if (store.get('teampassUser').related_items_number !== null) {\n                $nbItemsToConvert = \" / \" + store.get('teampassUser').related_items_number;\n            } else {\n                $nbItemsToConvert = '';\n            }\n            // Inform user\n            $(\"#warningModalBody\").html('<b><?php echo langHdl('encryption_keys'); ?> - ' +\n                stepText + '</b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + ']<span id=\"warningModalBody_extra\">' + $nbItemsToConvert + '</span> ' +\n                '... <?php echo langHdl('please_wait'); ?><i class=\"fas fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n            // If expected, show the OPT to the admin\n            if (constVisibleOTP === true) {\n                toastr.info(\n                    '<?php echo langHdl('show_encryption_code_to_admin');?> <div><input class=\"form-control form-item-control flex-nowrap\" value=\"' + userTemporaryCode + '\" readonly></div>'\n                    + '<br /><button type=\"button\" class=\"btn clear\"><?php echo langHdl('close');?></button>',\n                    '<?php echo langHdl('information'); ?>',\n                    {\n                        extendedTimeOut: 0,\n                        timeOut: 0,\n                        tapToDismiss: false,\n                        newestOnTop: true,\n                        preventDuplicates: true,\n                        onHidden: (toast) => {\n                            // prevent against multiple occurances (#3305)\n                            constVisibleOTP = false;\n                        },\n                    }\n                );\n            }\n\n            var data = {\n                action: step,\n                start: start,\n                length: <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                user_id: userId,\n            }\n            if (debugJavascript === true) {\n                console.info(\"Envoi des donn\u00e9es :\")\n                console.log(data);\n            }\n\n            // Do query\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_sharekeys_reencryption_next\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) {\n                        console.info(\"R\u00e9ception des donn\u00e9es :\")\n                        console.log(data);\n                    }\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        dfd.reject();\n                    } else {\n                        // Prepare variables\n                        userId = data.userId;\n                        step = data.step;\n                        start = data.start;\n\n                        // Do recursive call until step = finished\n                        callRecursiveUserDataEncryption(\n                            userId,\n                            step,\n                            start\n                        ).done(function(response) {\n                            dfd.resolve(response);\n                        });\n                    }\n                }\n            );\n        } else {\n            // Ask user\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-envelope-open-text fa-lg warning mr-2\"></i><?php echo langHdl('information'); ?>',\n                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('send_user_password_by_email'); ?>'+\n                '<div class=\"row\">'+\n                    (store.get('teampassApplication').formUserAction === \"add_new_user\" ?\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_password'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><div><?php echo langHdl('user_password'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_password+'\"></div>'+\n                    '<div><?php echo langHdl('user_temporary_encryption_code'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    :\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_temporary_encryption_code'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    )+\n                '</div>',\n                '<?php echo langHdl('send_by_email'); ?>',\n                '<?php echo langHdl('close'); ?>',\n                true,\n                false,\n                false\n            );\n            $('#warningModal').modal('show');\n\n            $(document).on('click', '#warningModal-button-user-pwd', function() {\n                $('#warningModal-user-pwd').removeClass('hidden');\n                $('#warningModal-button-user-pwd').prop( \"disabled\", true );\n                setTimeout(\n                    () => {\n                        $('#warningModal-user-pwd').addClass('hidden');\n                        $('#warningModal-button-user-pwd').prop( \"disabled\", false );\n                    },\n                    5000\n                );\n            });\n\n            ProcessInProgress = false;\n        }\n        return dfd.promise();\n    }\n\n\n\n    /**\n     * TOP MENU BUTTONS ACTIONS\n     */\n    $(document).on('click', '.tp-action', function() {\n        // Ensure that password strength indicator is reseted\n        //$('#form-password').focus();\n\n        // Hide if user is not admin\n        if (parseInt(store.get('teampassUser').user_admin) === 1 || parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n            $('.only-admin').removeClass('hidden');\n        } else {\n            $('.only-admin').addClass('hidden');\n        }\n\n        if ($(this).data('action') === 'new') {\n            // ADD NEW USER\n            $('#row-list').addClass('hidden');\n            $('#row-form, #group-create-special-folder, .not-for-admin').removeClass('hidden');\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else if (parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n            } else {\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n                $('#privilege-manager').iCheck('disable');\n            }\n\n            // Prepare checks\n            $('#privilege-user').iCheck('check');\n            $('#form-create-special-folder').iCheck('disable');\n\n            // Personal folder\n            if (store.get('teampassSettings').enable_pf_feature === '1') {\n                $('#form-create-personal-folder')\n                    .iCheck('enable')\n                    .iCheck('check');\n            } else {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n            \n            // MFA enabled\n            if (store.get('teampassSettings').duo === '1' || store.get('teampassSettings').google_authentication === '1') {\n                $('#form-create-mfa-enabled')\n                    .iCheck('enable')\n                    .iCheck('check');\n                $('#form-create-mfa-enabled-div').removeClass('hidden');\n            } else {\n                $('#form-create-mfa-enabled').iCheck('disable');\n                $('#form-create-mfa-enabled-div').addClass('hidden');\n            }\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_new_user';\n                }\n            );\n\n        } else if ($(this).data('action') === 'edit') {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // EDIT EXISTING USER\n            $('#row-list, #group-create-special-folder, #group-delete-user').addClass('hidden');\n            $('#row-form').removeClass('hidden');\n            $('.form-check-input').iCheck('enable');\n\n            // Personal folder\n            if (parseInt(store.get('teampassSettings').enable_pf_feature) === 0) {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else {\n                $('input[type=radio].only-admin').iCheck('disable');\n            }\n\n            // What type of form? Edit or new user\n            var userID = $(this).data('id');\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'store_user_changes',\n                        teampassApplication.formUserId = userID; // Store user ID   \n                }\n            );\n\n            var data = {\n                'user_id': userID,\n            };\n\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get_user_info\",\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error === false) {\n                        // Prefil with user data\n                        $('#form-login').val(data.login);\n                        $('#form-email').val(data.email);\n                        $('#form-name').val(data.name);\n                        $('#form-lastname').val(data.lastname);\n                        $('#form-create-root-folder').iCheck(data.can_create_root_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-personal-folder').iCheck(data.personal_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-mfa-enabled').iCheck(data.mfa_enabled === 1 ? 'check' : 'uncheck');\n\n                        // Case of user locked\n                        if (data.disabled === 1) {\n                            $('#group-delete-user').removeClass('hidden');\n                            $('#form-delete-user-confirm').iCheck('uncheck');\n                        }\n\n                        // Clear selects\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid')\n                            .find('option')\n                            .remove();\n\n                        var tmp = '';\n                        $(data.foldersAllow).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-auth').append(tmp);\n\n                        tmp = '';\n                        $(data.foldersForbid).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-forbid').append(tmp);\n\n                        tmp = '';\n                        $(data.managedby).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-managedby').append(tmp);\n\n                        tmp = '';\n                        $(data.function).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-roles').append(tmp);\n\n                        // Generate select2\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid').select2();\n\n                        // User's current privilege\n                        if (data.admin === 1) {\n                            $('#privilege-admin').iCheck('check');\n                            $('.not-for-admin').addClass('hidden');\n                        } else if (data.can_manage_all_users === 1) {\n                            $('#privilege-hr').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.gestionnaire === 1) {\n                            $('#privilege-manager').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.read_only === 1) {\n                            $('#privilege-ro').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else {\n                            $('#privilege-user').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        }\n\n                        $('input:radio[name=privilege]').on('ifChanged', function() {\n                            userDidAChange = true;\n                            $(this).data('change-ongoing', true);\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    } else {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit') {\n            // Loop on all changed fields\n            var arrayQuery = [];\n            $('.form-control').each(function(i, obj) {\n                if ($(this).data('change-ongoing') === true\n                    //|| $('#form-password').val() !== 'do_not_change'\n                ) {\n                    arrayQuery.push({\n                        'field': $(this).prop('id'),\n                        'value': $(this).val(),\n                    });\n                }\n            });\n\n            if (arrayQuery.length > 0) {\n                // Now save\n                // get lists\n                var forbidFld = [],\n                    authFld = [],\n                    groups = [];\n                $(\"#form-roles option:selected\").each(function() {\n                    groups.push($(this).val())\n                });\n                $(\"#form-auth option:selected\").each(function() {\n                    authFld.push($(this).val())\n                });\n                $(\"#form-forbid option:selected\").each(function() {\n                    forbidFld.push($(this).val())\n                });\n\n                // Mandatory?\n                var validated = true,\n                    validEmailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n                $('.required').each(function(i, obj) {\n                    if ($(this).val() === '' && $(this).hasClass('select2') === false) {\n                        $(this).addClass('is-invalid');\n                        validated = false;\n                    } else if ($('#' + $(this).attr('id') + ' :selected').length === 0 && $(this).hasClass('select2') === true) {\n                        $('#' + $(this).attr('id') + ' + span').addClass('is-invalid');\n                        validated = false;\n                    } else if ($(this).hasClass('validate-email') === true) {\n                        if ($(this).val().match(validEmailRegex)) {\n                            $(this).removeClass('is-invalid');\n                        } else {\n                            $(this).addClass('is-invalid');\n                            validated = false;\n                        }\n                    } else {\n                        $(this).removeClass('is-invalid');\n                        $('#' + $(this).attr('id') + ' + span').removeClass('is-invalid');\n                    }\n                });\n                if (validated === false) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Get number of items to treat\n                data_tmp = {\n                    'user_id': <?php echo $_SESSION['user_id']; ?>,\n                }\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'get_number_of_items_to_treat',\n                        type_category: 'action_system',\n                        data: prepareExchangedData(JSON.stringify(data_tmp), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data_tmp) {\n                        data_tmp = prepareExchangedData(data_tmp, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.related_items_number = data_tmp.nbItems;\n                            }\n                        );\n                    }\n                );\n\n                // Sanitize text fields\n                purifyRes = fieldDomPurifierLoop('#form-user .purify');\n                if (purifyRes.purifyStop === true) {\n                    // if purify failed, stop\n                    return false;\n                }\n\n                //prepare data\n                var data = {\n                    'user_id': store.get('teampassApplication').formUserId,\n                    'login': purifyRes.arrFields['login'],\n                    'name': purifyRes.arrFields['name'],\n                    'lastname': purifyRes.arrFields['lastname'],\n                    'email': purifyRes.arrFields['email'],\n                    'admin': $('#privilege-admin').prop('checked'),\n                    'manager': $('#privilege-manager').prop('checked'),\n                    'hr': $('#privilege-hr').prop('checked'),\n                    'read_only': $('#privilege-ro').prop('checked'),\n                    'personal_folder': $('#form-create-personal-folder').prop('checked'),\n                    'new_folder_role_domain': $('#form-create-special-folder').prop('checked'),\n                    'domain': $('#form-special-folder').val(),\n                    'isAdministratedByRole': $('#form-managedby').val(),\n                    'groups': groups,\n                    'allowed_flds': authFld,\n                    'forbidden_flds': forbidFld,\n                    'action_on_user': 'update',\n                    'form-create-root-folder': $('#form-create-root-folder').prop('checked'),\n                    'form-user-disabled': $('#form-user-disabled').prop('checked'),\n                    'mfa_enabled': $('#form-create-mfa-enabled').prop('checked'),\n                };\n                if (debugJavascript === true) {\n                    console.log(data);\n                    console.log(store.get('teampassApplication').formUserAction);\n                }                \n                var formUserId = store.get('teampassApplication').formUserId;\n                \n                $.post(\n                    'sources/users.queries.php', {\n                        type: store.get('teampassApplication').formUserAction,\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else if (store.get('teampassApplication').formUserAction === 'add_new_user') {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('new_user_info_by_mail'); ?>',\n                                '', {\n                                    timeOut: 4000\n                                }\n                            );\n                            // ---\n                        } else {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 2000\n                                }\n                            );\n                        }\n\n                        // Reload list of users\n                        oTable.ajax.reload();\n\n                        // Prepare UI\n                        $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                        $('#row-form').addClass('hidden');\n\n                        // Clean form\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input').iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n                    }\n                )\n            } else {\n                // No change performed on form\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('no_change_performed'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n            }\n        } else if ($(this).data('action') === 'cancel') {\n            $('.clear-me').val('');\n            $('.select2').val('').change();\n            $('.extra-form, #row-folders').addClass('hidden');\n            $('#row-list').removeClass('hidden');\n\n            // Prepare checks\n            $('.form-check-input').iCheck('uncheck');\n\n            // Remove action from store\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = '',\n                        teampassApplication.formUserId = '';\n                }\n            );\n        } else if ($(this).data('action') === 'qrcode') {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // This sends a GA Code by email to user\n            data = {\n                'user_id': $(this).data('id'),\n                'demand_origin': 'users_management_list',\n                'send_email': 1\n            }\n\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'ga_generate_qr',\n                    type_category: 'action_user',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('share_sent_ok'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            // ---\n        } else if ($(this).data('action') === 'new-password') {\n            var userId = $(this).data('id');\n            // Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': userId,\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {                 \n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // PRepare info\n                            $('#dialog-admin-change-user-password-info')\n                                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_password_info'); ?>');\n                            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n                            // SHow form\n                            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n                            $('#admin_change_user_password_target_user').val(userId);\n                        }\n                    }\n                }\n            );\n\n            // ---\n        } else if ($(this).data('action') === 'new-enc-code') {\n            // HIde\n            $('.content-header, .content').addClass('hidden');\n\n            // PRepare info\n            $('#dialog-admin-change-user-password-info')\n                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_encryption_code_info'); ?>');\n            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n            // SHow form\n            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n            $('#admin_change_user_encryption_code_target_user').val($(this).data('id'));\n            // ---\n        } else if ($(this).data('action') === 'logs') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-logs').removeClass('hidden');\n            $('#row-logs-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            //Launch the datatables pluggin\n            var oTableLogs = $('#table-logs').DataTable({\n                'destroy': true,\n                'paging': true,\n                'searching': true,\n                'order': [\n                    [1, 'asc']\n                ],\n                'info': true,\n                'processing': false,\n                'serverSide': true,\n                'responsive': true,\n                'select': true,\n                'stateSave': false,\n                'retrieve': false,\n                'autoWidth': true,\n                'ajax': {\n                    url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/user.logs.datatables.php',\n                    data: function(d) {\n                        d.userId = userID;\n                    }\n                },\n                'language': {\n                    'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n                },\n                'columns': [{\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    }\n                ],\n                'preDrawCallback': function() {\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                },\n                'drawCallback': function() {\n                    // Tooltips\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n            });\n\n\n        } else if ($(this).data('action') === 'access-rights') {\n            $('#row-list, #row-logs').addClass('hidden');\n            $('#row-folders').removeClass('hidden');\n            $('#row-folders-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            $('#row-folders-results').html('');\n\n            // Send query\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'user_folders_rights',\n                    user_id: userID,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Show table\n                        $('#row-folders-results').html(data.html);\n\n                        // Prepare tooltips\n                        $('.infotip').tooltip();\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'disable-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('user_disable_status'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-disabled\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {                \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                    'disabled_status': $('#user-disabled').prop('checked') === true ? 1 : 0,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'manage_user_disable_status',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Show icon or not\n                            if ($('#user-disabled').prop('checked') === true) {\n                                $('#user-login-'+userID).before('<i class=\"fas fa-user-slash infotip text-danger mr-2\" title=\"<?php echo langHdl('account_is_locked');?>\" id=\"user-disable-'+userID+'\"></i>');\n                            } else {\n                                $('#user-disable-'+userID).remove();\n                            }\n                            \n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'delete-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('by_clicking_this_checkbox_confirm_user_deletion'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-to-delete\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#user-to-delete').prop('checked') === false) {\n                    $('#warningModal').modal('hide');\n                    return false;\n                }             \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'delete_user',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'refresh') {\n            $('.form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n            oTable.ajax.reload();\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'propagate') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-propagate').removeClass('hidden');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load list of users\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'get_list_of_users_for_sharing',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Build select\n                        var html = '';\n                        $.each(data.values, function(i, value) {\n                            html += '<option value=\"' + value.id + '\" data-groups=\"' + value.groups + '\" data-managed-by=\"' + value.managedBy + '\" data-folders-allowed=\"' + value.foldersAllowed + '\" data-folders-forbidden=\"' + value.foldersForbidden + '\" data-groups-id=\"' + value.groupIds + '\" data-managed-by-id=\"' + value.managedById + '\" data-folders-allowed-id=\"' + value.foldersAllowedIds + '\" data-folders-forbidden-id=\"' + value.foldersForbiddenIds + '\" data-admin=\"' + value.admin + '\" data-manager=\"' + value.manager + '\" data-hr=\"' + value.hr + '\" data-read-only=\"' + value.readOnly + '\" data-personal-folder=\"' + value.personalFolder + '\" data-root-folder=\"' + value.rootFolder + '\">' + value.name + ' ' + value.lastname + ' [' + value.login + ']</option>';\n                        });\n\n                        $('#propagate-from, #propagate-to')\n                            .find('option')\n                            .remove()\n                            .end()\n                            .append(html)\n                            .change();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'do-propagate') {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n            // destination users\n            var userIds = $('#propagate-to').val();\n\n            if (userIds.length === 0) return false;\n\n            // Prepare data\n            var data = {\n                source_id: $(\"#propagate-from option:selected\").val(),\n                destination_ids: userIds,\n                user_functions: $(\"#propagate-from option:selected\").data('groups-id'),\n                user_managedby: $(\"#propagate-from option:selected\").data('managed-by-id'),\n                user_fldallowed: $(\"#propagate-from option:selected\").data('folders-allowed-id'),\n                user_fldforbid: $(\"#propagate-from option:selected\").data('folders-forbidden-id'),\n                user_admin: $(\"#propagate-from option:selected\").data('admin'),\n                user_manager: $(\"#propagate-from option:selected\").data('manager'),\n                user_hr: $(\"#propagate-from option:selected\").data('hr'),\n                user_readonly: $(\"#propagate-from option:selected\").data('read-only'),\n                user_personalfolder: $(\"#propagate-from option:selected\").data('personal-folder'),\n                user_rootfolder: $(\"#propagate-from option:selected\").data('root-folder'),\n            };\n            if (debugJavascript === true) console.log(data);\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"update_users_rights_sharing\",\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input')\n                            .iCheck('disable')\n                            .iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-sync') {\n            $('.form').addClass('hidden');\n            $('#row-ldap').removeClass('hidden');\n\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close') {\n            $('.extra-form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-existing-users') {\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-add-role') {\n            $('#ldap-users-table').addClass('hidden');\n            $('#ldap-new-role').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close-new-role') {\n            $('#ldap-users-table').removeClass('hidden');\n            $('#ldap-new-role').addClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'add-new-role') {\n            if ($('#ldap-new-role-selection').val() === '') {\n                // ERROR\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            } else {\n                // Add new role to Teampass\n\n                // Prepare data\n                var data = {\n                    'label': simplePurifier($('#ldap-new-role-selection').val()),\n                    'complexity': $('#ldap-new-role-complexity').val(),\n                    'allowEdit': 0,\n                    'action': 'add_role',\n                    'folderId' : -1,\n                }\n\n                if (debugJavascript === true) console.log(data);\n                \n                $.post(\n                    'sources/roles.queries.php', {\n                        type: 'change_role_definition',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $('#ldap-new-role-selection').val('');\n                            $('#ldap-users-table').removeClass('hidden');\n                            $('#row-ldap-body').html('');\n                            $('#ldap-new-role').addClass('hidden');\n\n                            refreshListUsersLDAP();\n                        }\n                    }\n                );\n\n            }\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'new-otp') {// Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': $(this).data('id'),\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {  \n                            var userID = data.user_infos.id;\n                            showModalDialogBox(\n                                '#warningModal',\n                                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                                '<div class=\"form-group\">'+\n                                    '<span class=\"mr-3\"><?php echo langHdl('generate_new_otp_informations'); ?></span>'+\n                                '</div>',\n                                '<?php echo langHdl('perform'); ?>',\n                                '<?php echo langHdl('cancel'); ?>'\n                            );\n                            \n                            $(document).on('click', '#warningModalButtonAction', function() {                \n                                // prepare user\n\n                                // Show spinner\n                                toastr.remove();\n                                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n                                // generate keys\n                                generateUserKeys(\n                                    {\n                                        'user_id': userID,\n                                    },\n                                    ''\n                                );\n                            });\n                        }\n                    }\n                }\n            );\n\n            /**/\n            //\n            // --- END\n            //\n        }\n    });\n\n\n    /**\n     * Permit to show some info while selecting a  User\n     */\n    $(document).on('change', '#propagate-from', function() {\n        var selectedOption = $(this).find('option:selected');\n        $('#propagate-user-roles').html($(selectedOption).data('groups'));\n        $('#propagate-user-managedby').html($(selectedOption).data('managed-by'));\n        $('#propagate-user-allowed').html($(selectedOption).data('folders-allowed'));\n        $('#propagate-user-fordidden').html($(selectedOption).data('folders-forbidden'));\n    });\n\n\n    /**\n     * TRACK CHANGES IN FORM\n     */\n    $('#form-user .track-change')\n        .on('change', function() {\n            if ($(this).val() !== null && $(this).val().length > 0) {\n                userDidAChange = true;\n                $(this).data('change-ongoing', true);\n            } else {\n                $(this).data('change-ongoing', false);\n            }\n        })\n        .on('ifChecked', function() {\n            userDidAChange = true;\n            $(this).data('change-ongoing', true);\n        });\n\n    //************************************************************* */\n\n\n\n    /**\n     * EDIT EACH ROW\n     */\n    var currentText = '',\n        item = '',\n        initialColumnWidth = '',\n        actionOnGoing = false,\n        field = '',\n        columnId = '',\n        tableDef = {\n            'login': {\n                'column': 2\n            },\n            'name': {\n                'column': 3\n            },\n            'lastname': {\n                'column': 4\n            },\n            'isAdministratedByRole': {\n                'column': 5\n            },\n            'fonction_id': {\n                'column': 6\n            }\n        };\n\n    /**\n     * EDIT TEXT INPUT\n     */\n    $(document).on('click', '.edit-text', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n\n        $(this)\n            .addClass('hidden')\n            .after('<input type=\"text\" class=\"form-control form-item-control remove-me save-me\" value=\"' + currentText + '\">');\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n        if (debugJavascript === true) console.log('Width ' + initialColumnWidth)\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n    });\n\n    /**\n     * EDIT SELECT LIST\n     */\n    $(document).on('click', '.edit-select', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n        if (debugJavascript === true) console.log(columnId)\n\n        $(this).addClass('hidden');\n\n        // Show select\n        $(\"#select-managedBy\")\n            .insertAfter('#' + $(this).attr('id'))\n            .after('<i class=\"fa fa-close text-danger pointer temp-button mr-3\" id=\"select-managedBy-close\"></i>');\n        $('#select-managedBy option[value=\"' + $(this).data('value') + '\"]').prop('selected', true);\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n\n        $('#select-managedBy-close').click(function() {\n            $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth);\n            $('.edit-select').removeClass('hidden');\n            $('.tmp-loader, .temp-button').remove();\n        });\n    });\n\n\n    /**\n     * MANAGE USER KEYS PRESSED\n     */\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            // Escape Key\n            $('.remove-me, .tmp-loader').remove();\n            $('.edit-text').removeClass('hidden');\n        }\n        if (e.keyCode === 13 && actionOnGoing === false) {\n            // Enter key\n            actionOnGoing = true;\n            saveChange(item, currentText, $(':focus'), field);\n        }\n    });\n\n\n    function saveChange(item, currentText, change, field) {\n        if (change.val() !== currentText) {\n            change\n                .after('<i class=\"fa fa-refresh fa-spin fa-fw tmp-loader\"></i>');\n\n            // prepare data\n            var data = {\n                'user_id': item.data('id'),\n                'field': field,\n                'value': change.val()\n            };\n            \n            // Save\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'save_user_change',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    if (change.is('input') === true) {\n                        change.remove();\n                        $('.tmp-loader').remove();\n                        item\n                            .text(change.val())\n                            .removeClass('hidden');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                    } else if (change.is('select') === true) {\n                        $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                        $('.tmp-loader, .temp-button').remove();\n\n                        // Show change\n                        if (debugJavascript === true) console.log(change)\n                        item\n                            .html(change.text())\n                            .attr('data-value', change.val())\n                            .removeClass('hidden');\n                    }\n                    actionOnGoing = false;\n                },\n                'json'\n            );\n        } else {\n            change.remove();\n            $('.tmp-loader').remove();\n            item\n                .text(change.val())\n                .removeClass('hidden');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n        }\n    }\n\n    /**\n     * Refreshing list of users from LDAP\n     *\n     * @return void\n     */\n    function refreshListUsersLDAP() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_list_of_users_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on users list\n                    var html = '',\n                        groupsNumber = 0,\n                        userLogin,\n                        group;\n                    var entry;\n                    $.each(data.entries, function(i, entry) {\n                        userLogin = entry[store.get('teampassSettings').ldap_user_attribute] !== undefined ? entry[store.get('teampassSettings').ldap_user_attribute][0] : '';\n                        // CHeck if not empty\n                        if (userLogin !== '') {\n                            html += '<tr>' +\n                                '<td>' + userLogin +\n                                '</td>' +\n                                '<td>' +\n                                '<i class=\"fas fa-info-circle ml-3 infotip text-info pointer text-center\" data-toggle=\"tooltip\" data-html=\"true\" title=\"' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-user mr-1\\'></i>' +\n                                (entry.displayname !== undefined ? '' + entry.displayname[0] + '' : '') + '</p>' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-envelope mr-1\\'></i>' + (entry.mail !== undefined ? '' + entry.mail[0] + '' : '') + '</p>' +\n                                '\"></i>' +\n                                '</td><td>' +\n                                (entry.userInTeampass === 0 ? '' :\n                                '<i class=\"fas ' + (entry.userAuthType !== undefined && entry.userAuthType === 'ldap' ? 'fa-toggle-on text-info ' : 'fa-toggle-off ') + 'mr-1 text-center pointer action-change-ldap-synchronization\" data-user-id=\"' + entry.userInTeampass + '\" data-user-auth-type=\"' + entry.userAuthType + '\"></i>') +\n                                '</td><td>';\n                            groupsNumber = 0;\n                            $.each(entry.memberof, function(j, group) {\n                                var regex = String(group).replace('CN=', 'cn').match(/(cn=)(.*?),/g);\n                                if (regex !== null) {\n                                    group = regex[0].replace('cn=', '').replace(',', '');\n                                    // Check if this user has this group in Teampass\n                                    if (entry.teampass !== undefined && entry.ldap_groups.filter(p => p.title === group).length > 0) {\n                                        html += group + '<i class=\"far fa-check-circle text-success ml-2 infotip\" title=\"<?php echo langHdl('user_has_this_role_in_teampass'); ?>\"></i><br>';\n                                    } else {\n                                        // Check if this group exists in Teampass and propose to add it\n                                        tmp = data.teampass_groups.filter(p => p.title === group);\n                                        if (tmp.length > 0 && entry.userInTeampass === 0) {\n                                            html += group + '<i class=\"fas fa-user-graduate text-primary ml-2 pointer infotip action-add-role-to-user\" title=\"<?php echo langHdl('add_user_to_role'); ?>\" data-user-id=\"' + entry.userInTeampass + '\" data-role-id=\"' + tmp[0].id + '\"></i><br>';\n                                        } else {\n                                            html += group + '<br>';\n                                        }\n                                    }\n                                    groupsNumber++;\n                                }\n                            });\n                            html += '</td><td>';\n                            // Action icons\n                            html += (entry.userInTeampass === 0 ? '<i class=\"fas fa-user-plus text-warning ml-2 infotip pointer add-user-icon\" title=\"<?php echo langHdl('add_user_in_teampass'); ?>\" data-user-login=\"' + userLogin + '\" data-user-email=\"' + (entry.mail !== undefined ? entry.mail[0] : '') + '\" data-user-name=\"' + (entry.givenname !== undefined ? entry.givenname[0] : '') + '\" data-user-lastname=\"' + (entry.sn !== undefined ? entry.sn[0] : '') + '\"></i>' : '');\n\n                            // Only of not admin\n                            /*if (userLogin !== 'admin') {\n                                html += (entry.teampass.auth === 'ldap' ? '<i class=\"fas fa-link text-success ml-2 infotip pointer auth-local\" title=\"<?php echo langHdl('ldap_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>' : '<i class=\"fas fa-unlink text-orange ml-2 infotip pointer auth-ldap\" title=\"<?php echo langHdl('local_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>');\n                            }*/\n\n                            html += '</td></tr>';\n                        }\n                    });\n\n                    $('#row-ldap-body').html(html);\n\n                    $('#row-ldap-body').removeClass('overlay');\n\n                    $('.infotip').tooltip('update');\n\n                    // Build list box of new roles that could be created\n                    $('#ldap-new-role-selection')\n                        .empty()\n                        .append('<option value=\"\">--- <?php echo langHdl('select'); ?> ---</option>');\n                    $.each(data.ldap_groups, function(i, group) {\n                        tmp = data.teampass_groups.filter(p => p.title === group);\n                        if (tmp.length === 0) {\n                            $('#ldap-new-role-selection').append(\n                                '<option value=\"' + group + '\">' + group + '</option>'\n                            );\n                        }\n                    });\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to add a role to a Teampass user\n     *\n     * @return void\n     */\n    function addRoleToUser() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $('.selected-role').data('user-id'),\n            'field': 'fonction_id',\n            'value': $('.selected-role').data('role-id'),\n            'context': 'add_one_role_to_user'\n        };\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon\n                    $('.selected-role')\n                        .removeClass('fas fa-user-graduate text-primary pointer action-add-role-to-user')\n                        .addClass('far fa-check-circle text-success')\n                        .prop('title', '<?php echo langHdl('user_has_this_role_in_teampass'); ?>');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                $('.selected-role').removeClass('selected-role');\n            }\n        );\n    }\n\n    $(document).on('click', '.action-add-role-to-user', function() {\n        $(this).addClass('selected-role');\n\n        toastr.warning(\n            '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"addRoleToUser()\"><?php echo langHdl('please_confirm'); ?></button>',\n            '<?php echo langHdl('info'); ?>', {\n                positionClass: 'toast-top-center',\n                closeButton: true\n            }\n        );\n    });\n\n    // Enable/disable ldap sync on user\n    $(document).on('click', '.action-change-ldap-synchronization', function() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $(this).data('user-id'),\n            'field': 'auth_type',\n            'value': $(this).hasClass('fa-toggle-off') === true ? 'ldap' : 'local',\n            'context': ''\n        },\n        selectedIcon = $(this);\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon format\n                    if (selectedIcon.hasClass('fa-toggle-off') === true) {\n                        selectedIcon\n                            .removeClass('fa-toggle-off')\n                            .addClass('fa-toggle-on text-info')\n                            .prop('data-user-auth-type', 'ldap');\n                    } else {\n                        selectedIcon\n                            .removeClass('fa-toggle-on text-info')\n                            .addClass('fa-toggle-off')\n                            .prop('data-user-auth-type', 'local');\n                    }\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * Permits to add an AD user in Teampass\n     *\n     * @return void\n     */\n    function addUserInTeampass() {\n        $('#warningModal').modal('hide');\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        // what roles\n        var roles = [];\n        $(\"#ldap-user-roles option:selected\").each(function() {\n            roles.push($(this).val())\n        });\n\n        // Sanitize text fields\n        purifyRes = fieldDomPurifierLoop('#form-user .purify');\n        if (purifyRes.purifyStop === true) {\n            // if purify failed, stop\n            return false;\n        }\n\n        // prepare data\n        var data = {\n            'login': simplePurifier($('.selected-user').data('user-login')),\n            'name': simplePurifier($('.selected-user').data('user-name') === '' ? $('#ldap-user-name').val() : $('.selected-user').data('user-name')),\n            'lastname': simplePurifier($('.selected-user').data('user-lastname')),\n            'email': simplePurifier($('.selected-user').data('user-email')),\n            'roles' : roles,\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'add_user_from_ldap',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                userTemporaryCode = data.user_code;\n                constVisibleOTP = data.visible_otp;\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {                    \n                    generateUserKeys(data, userTemporaryCode);\n                }\n            }\n        );\n    }\n\n\n    function generateUserKeys(data, userTemporaryCode)\n    {\n        // manage keys encryption for new user\n        // Case where we need to encrypt new keys for the user\n        // Process is: \n        // 2/ clear all keys for this user\n        // 3/ generate keys for this user with encryption key\n\n        \n        // If expected to create new encryption key\n        var parameters = {\n            'user_id': data.user_id,\n        };\n\n        if (debugJavascript === true) {\n            console.log(parameters);\n            console.info('Prepare TASK for new user encryption keys')\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'generate_temporary_encryption_key',\n                type_category: 'action_key',\n                data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data_otc) {\n                data_otc = prepareExchangedData(data_otc, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                if (data_otc.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data_otc.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // If expected, show the OPT to the admin\n                    if (data_otc.visible_otp === true) {\n                        showModalDialogBox(\n                            '#warningModal',\n                            '<i class=\"fa-solid fa-user-secret mr-2\"></i><<?php echo langHdl('your_attention_is_required'); ?>',\n                            '<?php echo langHdl('show_encryption_code_to_admin'); ?>' +\n                            '<div><input class=\"form-control form-item-control flex-nowrap ml-2\" value=\"' + data_otc.code + '\" readonly></div>',\n                            '',\n                            '<?php echo langHdl('close'); ?>'\n                        );\n                    }\n\n                    // update the process\n                    // add all tasks\n                    var data_to_send = {\n                        user_id: data.user_id,\n                        user_code: data_otc.code,\n                    }\n\n                    //console.log(data_to_send);\n                    //return false;\n\n                    // Do query\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"create_new_user_tasks\",\n                            data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data_tasks) {\n                            data_tasks = prepareExchangedData(data_tasks, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            \n                            if (data_tasks.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data_tasks.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                // show message to user\n                                // Finalizing\n                                //$('#warningModal').modal('hide');\n\n                                // Now close in progress toast\n                                $('.close-toastr-progress').closest('.toast').remove();\n                                \n                                // refresh the list of users in LDAP not added in Teampass\n                                refreshListUsersLDAP();    \n\n                                // Rrefresh list of users in Teampass\n                                oTable.ajax.reload();\n\n                                toastr.success(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 1000\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to change the auth type of the user\n     *\n     * @return void\n     */\n    function changeUserAuthType(auth) {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'id': $('.selected-user').data('user-id'),\n            'auth_type': auth\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'change_user_auth_type',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    refreshListUsersLDAP();\n                }\n            }\n        );\n    }\n\n    $(document)\n        .on('click', '.add-user-icon', function() {\n            var thisElement = $(this);\n            $(thisElement).addClass('selected-user');\n\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-user-plus fa-lg warning mr-2\"></i><?php echo langHdl('new_ldap_user_info'); ?> <b>'+$(this)[0].dataset.userLogin+'</b>',\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('name'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-name\" value=\"'+ $(this).attr('data-user-name')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('lastname'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-lastname\" value=\"'+ $(this).attr('data-user-lastname')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('email'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-email\" value=\"'+ $(this).attr('data-user-email')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-roles\"><?php echo langHdl('roles'); ?></label>'+\n                    '<select id=\"ldap-user-roles\" class=\"form-control form-item-control select2 required\" style=\"width:100%;\" multiple=\"multiple\">'+\n                    '<?php echo $optionsRoles; ?></select>'+\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#ldap-user-name').val() !== \"\" && $('#ldap-user-roles :selected').length > 0) {\n                    addUserInTeampass();\n                    $(thisElement).removeClass('selected-user');\n                }\n            });\n            $(document).on('click', '#warningModalButtonClose', function() {\n                $(thisElement).removeClass('selected-user');\n            });\n        })\n        .on('click', '.auth-ldap', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'ldap\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_ldap'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        })\n        .on('click', '.auth-local', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'local\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_local'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        });\n\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      logs.datatables.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nrequire_once 'SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\nif (! isset($_SESSION['CPM']) || $_SESSION['CPM'] === false || ! isset($_SESSION['key']) || empty($_SESSION['key'])) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php')) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php')) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n// Do checks\nrequire_once $SETTINGS['cpassman_dir'].'/includes/config/include.php';\nrequire_once $SETTINGS['cpassman_dir'].'/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'utilities.logs', $SETTINGS) === false) {\n    // Not allowed page\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'].'/error.php';\n    exit;\n}\n\n/*\n * Define Timezone\n*/\nif (isset($SETTINGS['timezone']) === true) {\n    date_default_timezone_set($SETTINGS['timezone']);\n} else {\n    date_default_timezone_set('UTC');\n}\n\nrequire_once $SETTINGS['cpassman_dir'].'/includes/language/'.$_SESSION['user']['user_language'].'.php';\nrequire_once $SETTINGS['cpassman_dir'].'/includes/config/settings.php';\nheader('Content-type: text/html; charset=utf-8');\nheader('Cache-Control: no-cache, must-revalidate');\nrequire_once 'main.functions.php';\n//Connect to DB\ninclude_once $SETTINGS['cpassman_dir'].'/includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n// prepare the queries\nif (isset($_GET['action']) === true) {\n    //init SQL variables\n    $sWhere = $sOrder = $sLimit = '';\n    $aSortTypes = ['asc', 'desc'];\n    /* BUILD QUERY */\n    //Paging\n    if (isset($_GET['length']) === true && (int) $_GET['length'] !== -1) {\n        $sLimit = ' LIMIT '.filter_var($_GET['start'], FILTER_SANITIZE_NUMBER_INT).', '.filter_var($_GET['length'], FILTER_SANITIZE_NUMBER_INT).'';\n    }\n}\n\nif (isset($_GET['action']) === true && $_GET['action'] === 'connections') {\n    //Columns name\n    $aColumns = ['l.date', 'l.label', 'l.qui', 'u.login', 'u.name', 'u.lastname'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \"WHERE l.type = 'user_connection'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace((string) $sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id)'.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, l.label as label, l.qui as who, \n            u.login as login, u.name AS name, u.lastname AS lastname\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id)'.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    /*\n           * Output\n        */\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.str_replace([chr(10), chr(13)], [' ', ' '], htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES)).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n\n    /* ERRORS LOG */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'access') {\n    //Columns name\n    $aColumns = ['l.date', 'i.label', 'u.login'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \" WHERE l.action = 'at_shown'\";\n    if ($_GET['sSearch'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].' LIKE %ss_'.$i.' OR ';\n        }\n        $sWhere = substr_replace((string) $sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id)'.\n            $sWhere,\n            [\n                '0' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '1' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '2' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n            ]\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, u.login as login, i.label as label\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id)\n            $sWhere\n            $sOrder\n            $sLimit',\n            [\n                '0' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '1' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '2' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n            ]\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.str_replace([chr(10), chr(13)], [' ', ' '], htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES)).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n\n    /* COPY LOG */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'copy') {\n    //Columns name\n    $aColumns = ['l.date', 'i.label', 'u.login'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \"WHERE l.action = 'at_copy'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace((string) $sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id) '.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, u.login as login, u.name AS name, u.lastname AS lastname, i.label as label\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n\n    /*\n    * ADMIN LOG\n     */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'admin') {\n    //Columns name\n    $aColumns = ['l.date', 'u.login', 'l.label', 'l.field_1'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \"WHERE l.type IN ('admin_action', 'user_mngt')\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n        FROM '.prefixTable('log_system').' as l\n        INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n        $sWhere\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, u.login as login, u.name AS name, u.lastname AS lastname, l.label as label, l.field_1 as field_1\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    /*\n         * Output\n        */\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": [ ';\n    foreach ($rows as $record) {\n        $get_item_in_list = true;\n        $sOutput_item = '[';\n        //col1\n        $sOutput_item .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).'\", ';\n        //col3\n        if ($record['label'] === 'at_user_added') {\n            $cell = langHdl('user_creation');\n        } elseif ($record['label'] === 'at_user_deleted' || $record['label'] === 'user_deleted') {\n            $cell = langHdl('user_deletion');\n        } elseif ($record['label'] === 'at_user_updated') {\n            $cell = langHdl('user_updated');\n        } elseif (strpos($record['label'], 'at_user_email_changed') !== false) {\n            $change = explode(':', $record['label']);\n            $cell = langHdl('log_user_email_changed').' '.$change[1];\n        } elseif ($record['label'] === 'at_user_new_keys') {\n            $cell = langHdl('new_keys_generated');\n        } else {\n            $cell = htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES);\n        }\n        $sOutput_item .= '\"'.$cell.'\" ';\n        //col4\n        if (empty($record['field_1']) === false) {\n            // get user name\n            $info = DB::queryfirstrow(\n                'SELECT u.login as login, u.name AS name, u.lastname AS lastname\n                    FROM '.prefixTable('users').' as u\n                    WHERE u.id = %i',\n                    $record['field_1']\n            );\n            $sOutput_item .= ', \"'.(empty($info['name']) === false ? htmlspecialchars(stripslashes((string) $info['name'].' '.$info['lastname']), ENT_QUOTES) : 'Removed user ('.$record['field_1'].')').'\" ';\n        } else {\n            $sOutput_item .= ', \"\" ';\n        }\n        //Finish the line\n        $sOutput_item .= '], ';\n        if ($get_item_in_list === true) {\n            $sOutput .= $sOutput_item;\n        }\n    }\n    if ($iFilteredTotal > 0) {\n        $sOutput = substr_replace($sOutput, '', -2);\n    }\n    $sOutput .= '] }';\n/* ITEMS */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'items') {\n    require_once $SETTINGS['cpassman_dir'].'/sources/main.functions.php';\n    //Columns name\n    $aColumns = ['l.date', 'i.label', 'u.login', 'l.action', 'i.perso', 'i.id', 't.title'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = '';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' WHERE (';\n        if (isset($_GET['search']['column']) === true && $_GET['search']['column'] !== 'all') {\n            $sWhere .= $_GET['search']['column'].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%') \";\n        } else {\n            for ($i = 0; $i < count($aColumns); ++$i) {\n                $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n            }\n            $sWhere = substr_replace($sWhere, '', -3).') ';\n        }\n    }\n    \n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_items').' AS l\n            INNER JOIN '.prefixTable('items').' AS i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' AS u ON (l.id_user=u.id)\n            INNER JOIN '.prefixTable('nested_tree').' AS t ON (i.id_tree=t.id) '.\n            $sWhere.\n            $sOrder\n    );\n\n    $rows = DB::query(\n        'SELECT l.date AS date, u.login AS login, u.name AS name, u.lastname AS lastname, i.label AS label,\n            i.perso AS perso, l.action AS action, t.title AS folder,\n            i.id AS id\n            FROM '.prefixTable('log_items').' AS l\n            INNER JOIN '.prefixTable('items').' AS i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' AS u ON (l.id_user=u.id)\n            INNER JOIN '.prefixTable('nested_tree').' AS t ON (i.id_tree=t.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": [ ';\n    foreach ($rows as $record) {\n        $get_item_in_list = true;\n        $sOutput_item = '[';\n        //col1\n        $sOutput_item .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col3\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['id']), ENT_QUOTES).'\", ';\n        //col3\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES).'\", ';\n        //col2\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['folder']), ENT_QUOTES).'\", ';\n        //col2\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\", ';\n        //col4\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes(langHdl($record['action'])), ENT_QUOTES).'\", ';\n        //col5\n        if ($record['perso'] === 1) {\n            $sOutput_item .= '\"'.htmlspecialchars(stripslashes(langHdl('yes')), ENT_QUOTES).'\"';\n        } else {\n            $sOutput_item .= '\"'.htmlspecialchars(stripslashes(langHdl('no')), ENT_QUOTES).'\"';\n        }\n\n        //Finish the line\n        $sOutput_item .= '], ';\n        if ($get_item_in_list === true) {\n            $sOutput .= $sOutput_item;\n        }\n    }\n    if ($iFilteredTotal > 0) {\n        $sOutput = substr_replace($sOutput, '', -2);\n    }\n    $sOutput .= '] }';\n/* FAILED AUTHENTICATION */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'failed_auth') {\n    //Columns name\n    $aColumns = ['l.date', 'l.label', 'l.qui', 'l.field_1'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    /*\n       * Filtering\n       * NOTE this does not match the built-in DataTables filtering which does it\n       * word by word on any field. It's possible to do here, but concerned about efficiency\n       * on very large tables, and MySQL's regex functionality is very limited\n    */\n    $sWhere = \"WHERE l.type = 'failed_auth'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_system').' as l '.\n            $sWhere\n    );\n    $rows = DB::query(\n        'SELECT l.date as auth_date, l.label as label, l.qui as who, l.field_1\n            FROM '.prefixTable('log_system').' as l '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    if ($iTotal === '') {\n        $iTotal = 0;\n    }\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['auth_date']).'\", ';\n        //col2 - 3\n        if ($record['label'] === 'password_is_not_correct' || $record['label'] === 'user_not_exists') {\n            $sOutput .= '\"'.langHdl($record['label']).'\", \"'.$record['field_1'].'\", ';\n        } else {\n            $sOutput .= '\"'.langHdl($record['label']).'\", \"\", ';\n        }\n\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['who']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'errors') {\n    //Columns name\n    $aColumns = ['l.date', 'l.label', 'l.qui', 'u.login', 'u.name', 'u.lastname'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    /*\n       * Filtering\n       * NOTE this does not match the built-in DataTables filtering which does it\n       * word by word on any field. It's possible to do here, but concerned about efficiency\n       * on very large tables, and MySQL's regex functionality is very limited\n    */\n    $sWhere = \"WHERE l.type = 'error'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, l.label as label, l.qui as who,\n            u.login as login, u.name AS name, u.lastname AS lastname\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.addslashes(str_replace([chr(10), chr(13), '`', '<br />@', \"'\"], ['<br>', '<br>', \"'\", '', '&#39;'], $record['label'])).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'items_in_edition') {\n    //Columns name\n    $aColumns = ['e.timestamp', 'u.login', 'i.label', 'u.name', 'u.lastname'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    /*\n       * Filtering\n       * NOTE this does not match the built-in DataTables filtering which does it\n       * word by word on any field. It's possible to do here, but concerned about efficiency\n       * on very large tables, and MySQL's regex functionality is very limited\n    */\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere = ' WHERE (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(e.timestamp)\n            FROM '.prefixTable('items_edition').' AS e\n            INNER JOIN '.prefixTable('items').' as i ON (e.item_id=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (e.user_id=u.id) '.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT e.timestamp, e.item_id, e.user_id, u.login, u.name, u.lastname, i.label\n            FROM '.prefixTable('items_edition').' AS e\n            INNER JOIN '.prefixTable('items').' as i ON (e.item_id=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (e.user_id=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-id=\\\"'.$record['item_id'].'\\\">\", ';\n        //col2\n        $time_diff = intval(time() - $record['timestamp']);\n        $hoursDiff = round($time_diff / 3600, 0, PHP_ROUND_HALF_DOWN);\n        $minutesDiffRemainder = floor($time_diff % 3600 / 60);\n        $sOutput .= '\"'.$hoursDiff.'h '.$minutesDiffRemainder.'m'.'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\", ';\n        //col5 - TAGS\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'users_logged_in') {\n    //Columns name\n    $aColumns = ['login', 'name', 'lastname', 'timestamp', 'last_connexion'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    $sWhere = ' WHERE ((timestamp != \"\" AND session_end >= \"'.time().'\")';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere = ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n    $sWhere .= ') ';\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(timestamp)\n            FROM '.prefixTable('users').' '.\n            $sWhere\n    );\n    $rows = DB::query(\n        'SELECT *\n            FROM '.prefixTable('users').' '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-id=\\\"'.$record['id'].'\\\">\", ';\n        //col2\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\", ';\n        //col3\n        if ($record['admin'] === '1') {\n            $user_role = langHdl('god');\n        } elseif (langHdl('gestionnaire') === 1) {\n            $user_role = langHdl('gestionnaire');\n        } else {\n            $user_role = langHdl('user');\n        }\n        $sOutput .= '\"'.$user_role.'\", ';\n        //col4\n        $time_diff = intval(time() - $record['timestamp']);\n        $hoursDiff = round($time_diff / 3600, 0, PHP_ROUND_HALF_DOWN);\n        $minutesDiffRemainder = floor($time_diff % 3600 / 60);\n        $sOutput .= '\"'.$hoursDiff.'h '.$minutesDiffRemainder.'m\" ';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'tasks_in_progress') {\n    //Columns name\n    $aColumns = ['increment_id', 'created_at', 'updated_at', 'process_type', 'is_in_progress'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    $sWhere = ' WHERE ((finished_at = \"\")';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n    $sWhere .= ') ';\n    DB::debugmode(false);\n    $iTotal = DB::queryFirstField(\n    'SELECT COUNT(increment_id)\n        FROM '.prefixTable('processes').' AS p \n        LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n        $sWhere\n    );\n    $rows = DB::query(\n        'SELECT *\n            FROM '.prefixTable('processes').' AS p \n            LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-done=\\\"'.$record['is_in_progress'].'\\\" data-type=\\\"'.$record['process_type'].'\\\" data-process-id=\\\"'.$record['increment_id'].'\\\"></span>\", ';\n        //col2\n        $sOutput .= '\"'.date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['created_at']).'\", ';\n        //col3\n        $sOutput .= '\"'.($record['updated_at'] === '' ? '-' : date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['updated_at'])).'\", ';\n        //col4\n        $sOutput .= '\"'.$record['process_type'].'\", ';\n        // col5\n        if ($record['process_type'] === 'create_user_keys') {\n            $data_user = DB::queryfirstrow(\n                'SELECT name, lastname FROM ' . prefixTable('users') . '\n                WHERE id = %i',\n                json_decode($record['arguments'], true)['new_user_id']\n            );\n            $sOutput .= '\"'.$data_user['name'].' '.$data_user['lastname'].'\", ';\n        } elseif ($record['process_type'] === 'send_email') {\n            $sOutput .= '\"'.json_decode($record['arguments'], true)['receiver_name'].'\", ';\n        }\n        // col6\n        $sOutput .= '\"\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'tasks_finished') {\n    //Columns name\n    $aColumns = ['p.created_at', 'p.finished_at', 'p.process_type', 'u.name'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    $sWhere = ' WHERE ((finished_at != \"\")';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n    $sWhere .= ') ';\n    \n    DB::debugmode(false);\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(increment_id)\n            FROM '.prefixTable('processes').' AS p \n            LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n            $sWhere\n    );\n\n    $rows = DB::query(\n        'SELECT *\n            FROM '.prefixTable('processes').' AS p \n            LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        // play with dates\n        $start = strtotime(date('Y-m-d H:i:s', (int) $record['created_at']));\n        $end = strtotime(date('Y-m-d H:i:s', (int) $record['finished_at']));\n        \n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-done=\\\"'.$record['is_in_progress'].'\\\" data-type=\\\"'.$record['process_type'].'\\\"  data-process-id=\\\"'.$record['increment_id'].'\\\"></span>\", ';\n        //col2\n        $sOutput .= '\"'.date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['created_at']).'\", ';\n        //col3\n        $sOutput .= '\"'.date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['finished_at']).'\", ';\n        //col4\n        $sOutput .= '\"'.$record['process_type'].'\", ';\n        // col5\n        if ($record['process_type'] === 'create_user_keys') {\n            $data_user = DB::queryfirstrow(\n                'SELECT name, lastname FROM ' . prefixTable('users') . '\n                WHERE id = %i',\n                json_decode($record['arguments'], true)['new_user_id']\n            );\n            $sOutput .= '\"'.(isset($data_user['name']) === true ? $data_user['name'] : '').' '.(isset($data_user['lastname']) === true ? $data_user['lastname'] : '').'\", ';\n        } elseif ($record['process_type'] === 'send_email') {\n            $sOutput .= '\"'.json_decode($record['arguments'], true)['receiver_name'].'\", ';\n        }\n        // col6\n        $diff = abs($end - $start) / 60;\n        $sOutput .= '\"'.floor($diff / 60).':'.($diff % 60).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n}\n\necho $sOutput;\n"], "fixing_code": ["/*\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @version   \n * @file      functions.js\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n/**\n*   Countdown before session expiration\n**/\nfunction countdown()\n{\n    // if a process is in progress then do not decrease the time counter.\n    if (typeof ProcessInProgress !== 'undefined' && ProcessInProgress === true) {\n        $('.countdown-icon')\n            .addClass('fas fa-history')\n            .removeClass('far fa-clock');\n        \n        $(this).delay(1000).queue(function()\n        {\n            countdown();\n            $(this).dequeue();\n        });\n\n        return false;\n    }\n\n    // Continue\n    let DayTill;\n    let hoursInDay = 24;\n    let limitTen = 10;\n    let oneSecondsMs = 1000;\n    let theDay =  $('#temps_restant').val();\n    let today = new Date();\n    let second = Math.floor(theDay - today.getTime() / oneSecondsMs);\n    let minute = Math.floor(second / hourInMinutes);\n    let hour = Math.floor(minute / hourInMinutes);\n    let CHour= hour % hoursInDay;\n    if (CHour < limitTen) {\n        CHour = '0' + CHour;\n    }\n    let CMinute= minute % hourInMinutes;\n    if (CMinute < limitTen) {\n        CMinute = '0' + CMinute;\n    }\n    let CSecond= second % hourInMinutes;\n    if (CSecond < limitTen) {\n        CSecond = '0' + CSecond;\n    }\n    DayTill = CHour + ':' + CMinute + ':' + CSecond;\n\n    // Session will soon be closed\n    if (DayTill === '00:00:50') {\n        showExtendSession();\n        $('#countdown').css('color', 'red');\n    }\n\n    // Manage end of session\n    if ($('#temps_restant').val() !== '' && DayTill <= '00:00:00' && parseInt($('#please_login').val()) !== 1) {\n        $('#please_login').val('1');\n        $(location).attr('href','index.php?session=expired');\n    }\n\n    //Rewrite the string to the correct information.\n    if ($('#countdown')) {\n        $('#countdown').html('<i class=\"far fa-clock countdown-icon mr-1\"></i>' + DayTill);\n    }\n\n    //Create the timer 'counter' that will automatic restart function countdown() again every second.\n    $(this).delay(1000).queue(function()\n    {\n        countdown();\n        $(this).dequeue();\n    });\n}\n\n\n/**\n*\n**/\nfunction unsanitizeString(string) {\n    if(string !== \"\" && string !== null) {\n        string = string.replace(/\\\\/g,\"\").replace(/&#92;/g, \"\\\\\").replace(/&quot;/g, '\"');\n    }\n    return string;\n}\n\n/**\n*   Clean up a string and delete any scripting tags\n**/\nfunction sanitizeString(string) {\n    if(string !== \"\" && string !== null && string !== undefined) {\n        string = string.replace(/\\\\/g,\"&#92;\").replace(/\"/g,\"&quot;\");\n        string = string.replace(new RegExp(\"\\\\s*<script[^>]*>[\\\\s\\\\S]*?</script>\\\\s*\",\"ig\"), \"\");\n    }\n    return string;\n}\n\n/**\n*   Checks if URL has expected format\n**/\nfunction validateURL(url) {\n    let urlregex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    return urlregex.test(url);\n}\n\n\nfunction split( val ) {\n    return val.split( / \\s*/ );\n}\n\nfunction extractLast( term ) {\n    return split( term ).pop();\n}\n\n/**\n * Shows error message\n * @param  {string} message  Message to display\n * @return {boolean}         False\n */\nfunction jsonErrorHdl(message)\n{\n    //show as confirm\n    // Prepare modal\n    showModalDialogBox(\n        '#warningModal',\n        '<i class=\"fas fa-warning fa-lg warning mr-2\"></i>Caution',\n        message,\n        '',\n        'Close',\n        true,\n        true\n    );\n\n    // Actions on modal buttons\n    $(document).on('click', '#warningModalButtonClose', function() {\n        \n    });\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // SHow user\n    });\n    return false;\n}\n\n/**\n * [prepareExchangedData description]\n * @param  {[type]} data [description]\n * @param  {[type]} type [description]\n * @param  {[type]} key  [description]\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n * @return {[type]}      [description]\n */\nfunction prepareExchangedData(data, type, key, fileName = '', functionName = '')\n{\n    if (type === 'decode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            try {\n                return $.parseJSON(data);\n            }\n            catch (e) {\n                return jsonErrorHdl(data);\n            }\n        } else {\n            try {\n                let encryption = new Encryption();\n                return JSON.parse(encryption.decrypt(data, key));\n            }\n            catch (e) {\n                return jsonErrorHdl('<b>Next error occurred</b><div>' + e + '</div>'\n                    + (fileName !== '' ? '<br><b>Informations:</b><div>  - File: ' + fileName + '<br>  - Function: ' + functionName + '</div>': '')\n                    + '<div><br><b>Raw answer from server:</b><br>'+data+'</div>');\n            }\n        }\n    } else if (type === 'encode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            return stripHtml(data);\n        } else {\n            let encryption = new Encryption();\n            return encryption.encrypt(data, key);\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n/**\n * Returns the text from a HTML string\n * \n * @param {string} String The html string\n */\nfunction stripHtml(html) {\n    // Create a new div element\n    let temporalDivElement = document.createElement('div');\n    // Set the HTML content with the providen\n    temporalDivElement.innerHTML = html;\n    // Retrieve the text property of the element (cross-browser support)\n    return temporalDivElement.textContent || temporalDivElement.innerText || '';\n}\n\n\n/**\n * \n * @param {string} data Crypted string\n * @param {string} key  Session key\n */\nfunction unCryptData(data, key)\n{\n    if (data !== undefined && data.substr(0, 7) === 'crypted') {\n        let uncryptedData = prepareExchangedData(\n            data.substr(7),\n            'decode',\n            key\n        )\n        \n        if (uncryptedData.password.length > 0)\n            return uncryptedData.password;\n        else\n            return false;\n    }\n    return false;\n}\n\n/**\n * \n * @param {string}data Crypted string\n * @param {string}key  Session key\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n */\nfunction decodeQueryReturn(data, key, fileName = '', functionName = '')\n{\n    try {\n        return prepareExchangedData(data , \"decode\", key, fileName, functionName);\n    } catch (e) {\n        // error\n        toastr.remove();\n        toastr.error(\n            'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        return false;\n    }\n}\n\n/**\n * \n * @param {string} action Action\n * @param {string} name   Name\n * @param {array} data    Data\n */\nfunction browserSession(action, name, data)\n{\n    // Initialize the session\n    if (action === 'init') {\n        if (store.get(name) === 'undefined'\n            || store.get(name) === undefined\n        ) {\n            store.set(\n                name,\n                data\n            );\n        } else {\n            // Ensure all entries exist\n            $(data).each(function(value, key) {\n                store.update(\n                    name,\n                    function(bSession)\n                    {\n                        bSession.key = value;\n                    }\n                )\n            });\n        }\n    }\n}\n\n/**\n * \n * @param {string} modalId      Modal id\n * @param {string} title        Title\n * @param {string} body         Body\n * @param {string} actionButton Action Button\n * @param {string} closeButton  Close Button\n * @param {string} xlSize       Size\n * @param {string} warningModal Warning Modal\n * @param {string} closeCross   Close on cross\n */\nfunction showModalDialogBox(\n    modalId,\n    title,\n    body,\n    actionButton,\n    closeButton,\n    xlSize = false,\n    warningModal = false,\n    closeCross = true\n) {\n    $(modalId + 'Title').html(title);\n    $(modalId + 'Body').html(body);\n    if (actionButton === '') {\n        $(modalId + 'ButtonAction').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonAction').removeClass('hidden');\n        $(modalId + 'ButtonAction').html(actionButton);\n    }\n    if (closeButton === '') {\n        $(modalId + 'ButtonClose').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonClose').removeClass('hidden');\n        $(modalId + 'ButtonClose').html(closeButton);\n    }\n    if (xlSize === true) {\n        $(modalId + ' div:first').addClass('modal-xl');\n    } else {\n        $(modalId + ' div:first').removeClass('modal-xl');\n    }\n    if (warningModal === true) {\n        $(modalId + ':eq(1)').addClass('bg-warning');\n    } else {\n        $(modalId + ':eq(1)').removeClass('bg-warning');\n    }\n    if (closeCross === false) {\n        $(modalId + 'CrossClose').addClass('hidden');\n    } else {\n        $(modalId + 'CrossClose').removeClass('hidden');\n    }\n    $(modalId).modal({\n        backdrop : 'static',\n        keyboard : false,\n        show: true,\n        focus: true\n    });\n    $(modalId).modal('handleUpdate');\n}\n\n/**\n * Sanitize a string\n * \n * @param {string} str  The string\n */\nfunction htmlEncode(str){\n    return String(str).replace(/[^\\w. ]/gi, function(c){\n        return '&#'+c.charCodeAt(0)+';';\n    });\n}\n\n/* Extend String object with method to encode multi-byte string to utf8\n * - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n * - note utf8Encode is an identity function with 7-bit ascii strings, but not with 8-bit strings;\n * - utf8Encode('x') = 'x', but utf8Encode('\u00e7a') = '\u00c3\u00a7a', and utf8Encode('\u00c3\u00a7a') = '\u00c3\u0083\u00c2\u00a7a'*/\nif (typeof String.prototype.utf8Encode == 'undefined') {\n    String.prototype.utf8Encode = function() {\n        return unescape( encodeURIComponent( this ) );\n    };\n}\n\n/* Extend String object with method to decode utf8 string to multi-byte */\nif (typeof String.prototype.utf8Decode == 'undefined') {\n    String.prototype.utf8Decode = function() {\n        try {\n            return decodeURIComponent( escape( this ) );\n        } catch (e) {\n            return this; // invalid UTF-8? return as-is\n        }\n    };\n}\n\nfunction simplePurifier(\n    text,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false\n) \n{\n    return DOMPurify.sanitize(\n        sanitizeDom(text)\n            .replaceAll('&lt;', '<')\n            .replaceAll('&#x3C;', '<')\n            .replaceAll('&#60;', '<')\n            .replaceAll('&gt;', '>')\n            .replaceAll('&#x3E;', '>')\n            .replaceAll('&#62;', '>')\n            .replaceAll('&amp;', '&')\n            .replaceAll('&#38;', '&')\n            .replaceAll('&#x26;', '&')\n            .replaceAll('&quot;', '\"')\n            .replaceAll('&#34;;', '\"')\n            .replaceAll('&#x22;', '\"')\n            .replaceAll('&#39;', \"'\"),\n        {USE_PROFILES: {html:bHtml, svg:bSvg, svgFilters: bSvgFilters}}\n    );\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @param {*} text \n * @returns bool||string\n */\nfunction fieldDomPurifier(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    text = ''\n)\n{\n    if (field === undefined ||field === '') {\n        return false;\n    }\n    let string = '';\n    text = (text === '') ? $(field).val() : text;\n\n    // Purify string\n    string = simplePurifier(text, bHtml, bSvg, bSvgFilters);\n    \n    // Clear field if string is empty and warn user\n    if (string === '' && text !== '') {\n        $(field).val('');\n        return false;\n    }\n\n    return string;\n}\n\n/**\n * Permits to get all fields of a class and purify them\n * @param {*} elementClass \n * @returns array\n */\nfunction fieldDomPurifierLoop(elementClass)\n{\n    let purifyStop = false,\n        arrFields = [];\n    $.each($(elementClass), function(index, element) {\n        purifiedField = fieldDomPurifier(\n            '#' + $(element).attr('id'), \n            $(element).hasClass('purifyHtml') === true ? true : false,\n            $(element).hasClass('purifySvg') === true ? true : false,\n            $(element).hasClass('purifySvgFilter') === true ? true : false,\n            typeof $(element).data('purify-text') !== 'undefined' ? $(element).data('purify-text') : ''\n        );\n\n        if (purifiedField === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Please remove all special characters from your input.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            $('#' + $(element).attr('id')).focus();\n            purifyStop = true;\n            return {\n                'purifyStop' : purifyStop,\n                'arrFields' : arrFields\n            };\n        } else {\n            $(element).val(purifiedField);\n            if (typeof $(element).data('field') !== 'undefined') {\n                arrFields[$(element).data('field')] = purifiedField;\n            } else if (typeof $(element).data('field-name') !== 'undefined') {\n                arrFields[$(element).data('field-name')] = purifiedField;\n            }\n        }\n    });\n    \n    // return\n    return {\n        'purifyStop' : purifyStop,\n        'arrFields' : arrFields\n    };\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @returns bool||string\n */\nfunction fieldDomPurifierWithWarning(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    bSetting = false,\n)\n{\n    if (field === undefined || field === '') {\n        return false;\n    }\n    if ($(field).val() === '') {\n        return '';\n    }\n    let string = '',\n        currentString = $(field).val();\n\n    // if bSetting is true, we use the setting value\n    // remove any closing ', string that could corrupt the setting\n    if (bSetting === true) {\n        currentString = currentString.replace(/',/g, '');\n    }\n\n    // Purify string\n    string = simplePurifier(\n        sanitizeDom(currentString),\n        bHtml,\n        bSvg,\n        bSvgFilters\n    );\n    \n    // Clear field if string is empty and warn user\n    if (string === '') {\n        toastr.remove();\n        toastr.warning(\n            'XSS attempt detected. Please remove all special characters from your input.',\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        $(field).focus();\n        return false;\n    }\n\n    return string;\n}\n\nconst sanitizeDom = (str) => {\n    const div = document.createElement('div');\n    div.textContent = str;\n    newString = div.innerHTML;\n    div.remove();\n    return newString;\n}", "<?php\n\n/** @noinspection ReturnTypeCanBeDeclaredInspection */\n\ndeclare(strict_types=1);\n\nnamespace voku\\helper;\n\nuse const ENT_DISALLOWED;\nuse const ENT_HTML5;\nuse const ENT_QUOTES;\nuse const ENT_SUBSTITUTE;\nuse const HTML_ENTITIES;\n\n/**\n * AntiXSS - ported from \"CodeIgniter\"\n *\n * ## \ud83c\uddf7\ud83c\uddfa \u0420\u0443\u0441\u0441\u043a\u0438\u043c \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0430\u043c\n * \u0412 \u0423\u043a\u0440\u0430\u0438\u043d\u0435 \u0441\u0435\u0439\u0447\u0430\u0441 \u0438\u0434\u0435\u0442 \u0432\u043e\u0439\u043d\u0430. \u0421\u0438\u043b\u0430\u043c\u0438 \u0420\u0424 \u043d\u0430\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0443\u0434\u0430\u0440\u044b \u043f\u043e \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u043e\u0439 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u0432 [\u0425\u0430\u0440\u044c\u043a\u043e\u0432\u0435][1], [\u041a\u0438\u0435\u0432\u0435][2], [\u0427\u0435\u0440\u043d\u0438\u0433\u043e\u0432\u0435][3], [\u0421\u0443\u043c\u0430\u0445][4], [\u0418\u0440\u043f\u0435\u043d\u0435][5] \u0438 \u0434\u0435\u0441\u044f\u0442\u043a\u0430\u0445 \u0434\u0440\u0443\u0433\u0438\u0445 \u0433\u043e\u0440\u043e\u0434\u043e\u0432. \u0413\u0438\u0431\u043d\u0443\u0442 \u043b\u044e\u0434\u0438 - \u0438 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u043e\u0435 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435, \u0438 \u0432\u043e\u0435\u043d\u043d\u044b\u0435, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u044b\u0432\u043d\u0438\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u0440\u043e\u0441\u0438\u043b\u0438 \u0432\u043e\u0435\u0432\u0430\u0442\u044c. \u0427\u0442\u043e\u0431\u044b \u043b\u0438\u0448\u0438\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043d\u0430\u0440\u043e\u0434 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0420\u0424 \u0437\u0430\u043f\u0440\u0435\u0442\u0438\u043b\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0432\u043e\u0439\u043d\u0443 \u0432\u043e\u0439\u043d\u043e\u0439, \u0437\u0430\u043a\u0440\u044b\u043b\u043e \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u0421\u041c\u0418 \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0435\u0439\u0447\u0430\u0441 \u0440\u044f\u0434 \u0434\u0438\u043a\u0442\u0430\u0442\u043e\u0440\u0441\u043a\u0438\u0445 \u0437\u0430\u043a\u043e\u043d\u043e\u0432. \u042d\u0442\u0438 \u0437\u0430\u043a\u043e\u043d\u044b \u043f\u0440\u0438\u0437\u0432\u0430\u043d\u044b \u0437\u0430\u0442\u043a\u043d\u0443\u0442\u044c \u0440\u043e\u0442 \u0432\u0441\u0435\u043c, \u043a\u0442\u043e \u043f\u0440\u043e\u0442\u0438\u0432 \u0432\u043e\u0439\u043d\u044b. \u0417\u0430 \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u044b\u0432 \u043a \u043c\u0438\u0440\u0443 \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043b\u0435\u0442 \u0442\u044e\u0440\u044c\u043c\u044b.\n * \u041d\u0435 \u043c\u043e\u043b\u0447\u0438\u0442\u0435! \u041c\u043e\u043b\u0447\u0430\u043d\u0438\u0435 - \u0437\u043d\u0430\u043a \u0432\u0430\u0448\u0435\u0433\u043e \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u044f \u0441 \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u043e\u0439 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430.\n *  **\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u044b\u0431\u043e\u0440 \u041d\u0415 \u041c\u041e\u041b\u0427\u0410\u0422\u042c.**\n * ---\n * ## \ud83c\uddfa\ud83c\uddf8 To people of Russia\n * There is a war in Ukraine right now. The forces of the Russian Federation are attacking civilian infrastructure in [Kharkiv][1], [Kyiv][2], [Chernihiv][3], [Sumy][4], [Irpin][5] and dozens of other cities. People are dying \u2013 both civilians and military servicemen, including Russian conscripts who were thrown into the fighting. In order to deprive its own people of access to information, the government of the Russian Federation has forbidden calling a war a war, shut down independent media and is passing a number of dictatorial laws. These laws are meant to silence all those who are against war. You can be jailed for multiple years for simply calling for peace.\n * Do not be silent! Silence is a sign that you accept the Russian government's policy.\n * **You can choose NOT TO BE SILENT.**\n * ---\n * - [1] https://cloudfront-us-east-2.images.arcpublishing.com/reuters/P7K2MSZDGFMIJPDD7CI2GIROJI.jpg \"Kharkiv under attack\"\n * - [2] https://gdb.voanews.com/01bd0000-0aff-0242-fad0-08d9fc92c5b3_cx0_cy5_cw0_w1023_r1_s.jpg \"Kyiv under attack\"\n * - [3] https://ichef.bbci.co.uk/news/976/cpsprodpb/163DD/production/_123510119_hi074310744.jpg \"Chernihiv under attack\"\n * - [4] https://www.youtube.com/watch?v=8K-bkqKKf2A \"Sumy under attack\"\n * - [5] https://cloudfront-us-east-2.images.arcpublishing.com/reuters/K4MTMLEHTRKGFK3GSKAT4GR3NE.jpg \"Irpin under attack\"\n *\n * @copyright   Copyright (c) 2008 - 2014, EllisLab, Inc. (http://ellislab.com/)\n * @copyright   Copyright (c) 2014 - 2015, British Columbia Institute of Technology (http://bcit.ca/)\n * @copyright   Copyright (c) 2015 - 2020, Lars Moelleken (https://moelleken.org/)\n * @license     http://opensource.org/licenses/MIT\tMIT License\n */\nfinal class AntiXSS\n{\n    const VOKU_ANTI_XSS_GT = 'voku::anti-xss::gt';\n\n    const VOKU_ANTI_XSS_LT = 'voku::anti-xss::lt';\n\n    const VOKU_ANTI_XSS_STYLE = 'voku::anti-xss::STYLE';\n\n    /**\n     * List of never allowed regex replacements.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_regex = [];\n\n    /**\n     * List of html tags that will not close automatically.\n     *\n     * @var string[]\n     */\n    private $_do_not_close_html_tags = [];\n\n    /**\n     * List of never allowed call statements.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_js_callback_regex = [\n        '\\(?window\\)?\\.',\n        '\\(?history\\)?\\.',\n        '\\(?location\\)?\\.',\n        '\\(?document\\)?\\.',\n        '\\(?cookie\\)?\\.',\n        '\\(?ScriptElement\\)?\\.',\n        'd\\s*a\\s*t\\s*a\\s*:',\n    ];\n    \n    /**\n     * List of simple never allowed call statements.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_call_strings = [\n        // default javascript\n        'javascript',\n        // Java: jar-protocol is an XSS hazard\n        'jar',\n        // Mac (will not run the script, but open it in AppleScript Editor)\n        'applescript',\n        // IE: https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#VBscript_in_an_image\n        'vbscript',\n        'vbs',\n        // IE, surprise!\n        'wscript',\n        // IE\n        'jscript',\n        // https://html5sec.org/#behavior\n        'behavior',\n        // old Netscape\n        'mocha',\n        // old Netscape\n        'livescript',\n        // default view source\n        'view-source',\n    ];\n\n    /**\n     * @var string[]\n     */\n    private $_never_allowed_str_afterwards = [\n        '&lt;script&gt;',\n        '&lt;/script&gt;',\n    ];\n\n    /**\n     * List of never allowed strings, afterwards.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_on_events_afterwards = [\n        'onAbort',\n        'onActivate',\n        'onAttribute',\n        'onAfterPrint',\n        'onAfterScriptExecute',\n        'onAfterUpdate',\n        'onAnimationCancel',\n        'onAnimationEnd',\n        'onAnimationIteration',\n        'onAnimationStart',\n        'onAriaRequest',\n        'onAutoComplete',\n        'onAutoCompleteError',\n        'onAuxClick',\n        'onBeforeActivate',\n        'onBeforeCopy',\n        'onBeforeCut',\n        'onBeforeDeactivate',\n        'onBeforeEditFocus',\n        'onBeforePaste',\n        'onBeforePrint',\n        'onBeforeScriptExecute',\n        'onBeforeUnload',\n        'onBeforeUpdate',\n        'onBegin',\n        'onBlur',\n        'onBounce',\n        'onCancel',\n        'onCanPlay',\n        'onCanPlayThrough',\n        'onCellChange',\n        'onChange',\n        'onClick',\n        'onClose',\n        'onCommand',\n        'onCompassNeedsCalibration',\n        'onContextMenu',\n        'onControlSelect',\n        'onCopy',\n        'onCueChange',\n        'onCut',\n        'onDataAvailable',\n        'onDataSetChanged',\n        'onDataSetComplete',\n        'onDblClick',\n        'onDeactivate',\n        'onDeviceLight',\n        'onDeviceMotion',\n        'onDeviceOrientation',\n        'onDeviceProximity',\n        'onDrag',\n        'onDragDrop',\n        'onDragEnd',\n        'onDragExit',\n        'onDragEnter',\n        'onDragLeave',\n        'onDragOver',\n        'onDragStart',\n        'onDrop',\n        'onDurationChange',\n        'onEmptied',\n        'onEnd',\n        'onEnded',\n        'onError',\n        'onErrorUpdate',\n        'onExit',\n        'onFilterChange',\n        'onFinish',\n        'onFocus',\n        'onFocusIn',\n        'onFocusOut',\n        'onFormChange',\n        'onFormInput',\n        'onFullScreenChange',\n        'onFullScreenError',\n        'onGotPointerCapture',\n        'onHashChange',\n        'onHelp',\n        'onInput',\n        'onInvalid',\n        'onKeyDown',\n        'onKeyPress',\n        'onKeyUp',\n        'onLanguageChange',\n        'onLayoutComplete',\n        'onLoad',\n        'onLoadEnd',\n        'onLoadedData',\n        'onLoadedMetaData',\n        'onLoadStart',\n        'onLoseCapture',\n        'onLostPointerCapture',\n        'onMediaComplete',\n        'onMediaError',\n        'onMessage',\n        'onMouseDown',\n        'onMouseEnter',\n        'onMouseLeave',\n        'onMouseMove',\n        'onMouseOut',\n        'onMouseOver',\n        'onMouseUp',\n        'onMouseWheel',\n        'onMove',\n        'onMoveEnd',\n        'onMoveStart',\n        'onMozFullScreenChange',\n        'onMozFullScreenError',\n        'onMozPointerLockChange',\n        'onMozPointerLockError',\n        'onMsContentZoom',\n        'onMsFullScreenChange',\n        'onMsFullScreenError',\n        'onMsGestureChange',\n        'onMsGestureDoubleTap',\n        'onMsGestureEnd',\n        'onMsGestureHold',\n        'onMsGestureStart',\n        'onMsGestureTap',\n        'onMsGotPointerCapture',\n        'onMsInertiaStart',\n        'onMsLostPointerCapture',\n        'onMsManipulationStateChanged',\n        'onMsPointerCancel',\n        'onMsPointerDown',\n        'onMsPointerEnter',\n        'onMsPointerLeave',\n        'onMsPointerMove',\n        'onMsPointerOut',\n        'onMsPointerOver',\n        'onMsPointerUp',\n        'onMsSiteModeJumpListItemRemoved',\n        'onMsThumbnailClick',\n        'onOffline',\n        'onOnline',\n        'onOutOfSync',\n        'onPage',\n        'onPageHide',\n        'onPageShow',\n        'onPaste',\n        'onPause',\n        'onPlay',\n        'onPlaying',\n        'onPointerCancel',\n        'onPointerDown',\n        'onPointerEnter',\n        'onPointerLeave',\n        'onPointerLockChange',\n        'onPointerLockError',\n        'onPointerMove',\n        'onPointerOut',\n        'onPointerOver',\n        'onPointerRawUpdate',\n        'onPointerUp',\n        'onPopState',\n        'onProgress',\n        'onPropertyChange',\n        'onqt_error',\n        'onRateChange',\n        'onReadyStateChange',\n        'onReceived',\n        'onRepeat',\n        'onReset',\n        'onResize',\n        'onResizeEnd',\n        'onResizeStart',\n        'onResume',\n        'onReverse',\n        'onRowDelete',\n        'onRowEnter',\n        'onRowExit',\n        'onRowInserted',\n        'onRowsDelete',\n        'onRowsEnter',\n        'onRowsExit',\n        'onRowsInserted',\n        'onScroll',\n        'onSearch',\n        'onSeek',\n        'onSeeked',\n        'onSeeking',\n        'onSelect',\n        'onSelectionChange',\n        'onSelectStart',\n        'onStalled',\n        'onStorage',\n        'onStorageCommit',\n        'onStart',\n        'onStop',\n        'onShow',\n        'onSyncRestored',\n        'onSubmit',\n        'onSuspend',\n        'onSynchRestored',\n        'onTimeError',\n        'onTimeUpdate',\n        'onTimer',\n        'onTrackChange',\n        'onTransitionEnd',\n        'onTransitionRun',\n        'onTransitionStart',\n        'onToggle',\n        'onTouchCancel',\n        'onTouchEnd',\n        'onTouchLeave',\n        'onTouchMove',\n        'onTouchStart',\n        'onTransitionCancel',\n        'onTransitionEnd',\n        'onUnload',\n        'onUnhandledRejection',\n        'onURLFlip',\n        'onUserProximity',\n        'onVolumeChange',\n        'onWaiting',\n        'onWebKitAnimationEnd',\n        'onWebKitAnimationIteration',\n        'onWebKitAnimationStart',\n        'onWebKitFullScreenChange',\n        'onWebKitFullScreenError',\n        'onWebKitTransitionEnd',\n        'onWheel',\n    ];\n\n    /**\n     * https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Event_Handlers\n     *\n     * @var string[]\n     */\n    private $_evil_attributes_regex = [\n        'style',\n        'xmlns:xdp',\n        'formaction',\n        'form',\n        'xlink:href',\n        'seekSegmentTime',\n        'FSCommand',\n    ];\n\n    /**\n     * @var string[]\n     */\n    private $_evil_html_tags = [\n        'applet',\n        'audio',\n        'basefont',\n        'base',\n        'behavior',\n        'bgsound',\n        'blink',\n        'body',\n        'embed',\n        'eval',\n        'expression',\n        'form',\n        'frameset',\n        'frame',\n        'head',\n        'html',\n        'ilayer',\n        'iframe',\n        'input',\n        'button',\n        'select',\n        'isindex',\n        'layer',\n        'link',\n        'meta',\n        'keygen',\n        'object',\n        'plaintext',\n        'style',\n        'script',\n        'textarea',\n        'title',\n        'math',\n        'noscript',\n        'event-source',\n        'vmlframe',\n        'video',\n        'source',\n        'svg',\n        'xml',\n    ];\n\n    /**\n     * @var string\n     */\n    private $_spacing_regex = '(?:\\s|\"|\\'|\\+|&#x0[9A-F];|%0[9a-f])*?';\n\n    /**\n     * The replacement-string for not allowed strings.\n     *\n     * @var string\n     */\n    private $_replacement = '';\n\n    /**\n     * List of never allowed strings.\n     *\n     * @var string[]\n     */\n    private $_never_allowed_str = [];\n\n    /**\n     * If your DB (MySQL) encoding is \"utf8\" and not \"utf8mb4\", then\n     * you can't save 4-Bytes chars from UTF-8 and someone can create stored XSS-attacks.\n     *\n     * @var bool\n     */\n    private $_stripe_4byte_chars = false;\n\n    /**\n     * @var bool|null\n     */\n    private $_xss_found;\n\n    /**\n     * @var string\n     */\n    private $_cache_evil_attributes_regex_string = '';\n\n    /**\n     * @var string\n     */\n    private $_cache_never_allowed_regex_string = '';\n\n    /**\n     * @var string\n     */\n    private $_cache__evil_html_tags_str = '';\n\n    /**\n     * __construct()\n     */\n    public function __construct()\n    {\n        $this->_initNeverAllowedStr();\n        $this->_initNeverAllowedRegex();\n        UTF8::checkForSupport();\n    }\n\n    /**\n     * Compact any exploded words.\n     *\n     * <p>\n     * <br />\n     * INFO: This corrects words like:  j a v a s c r i p t\n     * <br />\n     * These words are compacted back to their correct state.\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _compact_exploded_javascript($str)\n    {\n        static $WORDS_CACHE;\n        $WORDS_CACHE['chunk'] = [];\n        $WORDS_CACHE['split'] = [];\n\n        $words = [\n            'javascript',\n            '<script',\n            '</script>',\n            'base64',\n            'document',\n            'eval',\n        ];\n\n        // check if we need to perform the regex-stuff\n        if (\\strlen($str) <= 30) {\n            $useStrPos = true;\n        } else {\n            $useStrPos = false;\n        }\n\n        foreach ($words as $word) {\n            if (!isset($WORDS_CACHE['chunk'][$word])) {\n                $WORDS_CACHE['chunk'][$word] = \\substr(\n                    \\chunk_split($word, 1, $this->_spacing_regex),\n                    0,\n                    -\\strlen($this->_spacing_regex)\n                );\n\n                $WORDS_CACHE['split'][$word] = \\str_split($word);\n            }\n\n            if ($useStrPos) {\n                foreach ($WORDS_CACHE['split'][$word] as $charTmp) {\n                    if (\\stripos($str, $charTmp) === false) {\n                        continue 2;\n                    }\n                }\n            }\n\n            // We only want to do this when it is followed by a non-word character.\n            // And if there are no char at the start of the string.\n            //\n            // That way valid stuff like \"dealer to!\" does not become \"dealerto\".\n\n            $str = (string) \\preg_replace_callback(\n                '#(?<before>[^\\p{L}]|^)(?<word>' . \\str_replace(\n                    ['#', '.'],\n                    ['\\#', '\\.'],\n                    $WORDS_CACHE['chunk'][$word]\n                ) . ')(?<after>[^\\p{L}@.!?\\' ]|$)#ius',\n                function ($matches) {\n                    return $this->_compact_exploded_words_callback($matches);\n                },\n                $str\n            );\n        }\n\n        return $str;\n    }\n\n    /**\n     * Compact exploded words.\n     *\n     * <p>\n     * <br />\n     * INFO: Callback method for xss_clean() to remove whitespace from things like 'j a v a s c r i p t'.\n     * </p>\n     *\n     * @param string[] $matches\n     *\n     * @return  string\n     */\n    private function _compact_exploded_words_callback($matches)\n    {\n        return $matches['before'] . \\preg_replace(\n            '/' . $this->_spacing_regex . '/ius',\n            '',\n            $matches['word']\n        ) . $matches['after'];\n    }\n\n    /**\n     * HTML-Entity decode callback.\n     *\n     * @param string[] $match\n     *\n     * @return string\n     */\n    private function _decode_entity($match)\n    {\n        // init\n        $str = $match[0];\n\n        // protect GET variables without XSS in URLs\n        $needProtection = true;\n        if (\\strpos($str, '=') !== false) {\n            $strCopy = $str;\n            $matchesTmp = [];\n            while (\\preg_match(\"/[?|&]?[\\p{L}\\d_\\-\\[\\]]+\\s*=\\s*([\\\"'])(?<attr>[^\\1]*?)\\\\1/u\", $strCopy, $matches)) {\n                $matchesTmp[] = $matches;\n                $strCopy = \\str_replace($matches[0], '', $strCopy);\n\n                if (\\substr_count($strCopy, '\"') <= 1 && \\substr_count($strCopy, '\\'') <= 1) {\n                    break;\n                }\n            }\n\n            if ($strCopy !== $str) {\n                $needProtection = false;\n                foreach ($matchesTmp as $matches) {\n                    if (isset($matches['attr'])) {\n                        $tmpAntiXss = clone $this;\n\n                        $urlPartClean = $tmpAntiXss->xss_clean((string) $matches['attr']);\n\n                        if ($tmpAntiXss->isXssFound() === true) {\n                            $this->_xss_found = true;\n\n                            $urlPartClean = \\str_replace(['&lt;', '&gt;'], [self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], $urlPartClean);\n                            $urlPartClean = UTF8::rawurldecode($urlPartClean);\n                            $urlPartClean = \\str_replace([self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], ['&lt;', '&gt;'], $urlPartClean);\n\n                            $str = \\str_ireplace($matches['attr'], $urlPartClean, $str);\n                        }\n                    }\n                }\n            }\n        }\n\n        if ($needProtection) {\n            $str = \\str_replace(['&lt;', '&gt;'], [self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], $str);\n            $str = $this->_entity_decode(UTF8::rawurldecode($str));\n            $str = \\str_replace([self::VOKU_ANTI_XSS_LT, self::VOKU_ANTI_XSS_GT], ['&lt;', '&gt;'], $str);\n        }\n\n        return $str;\n    }\n\n    /**\n     * Decode the html-tags but keep links without XSS.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _decode_string($str)\n    {\n        // init\n        $regExForHtmlTags = '/<\\p{L}+(?:[^>\"\\']|([\"\\']).*\\1)*>/usU';\n\n        if (\n            \\strpos($str, '<') !== false\n            &&\n            \\preg_match($regExForHtmlTags, $str, $matches)\n        ) {\n            $str = (string) \\preg_replace_callback(\n                $regExForHtmlTags,\n                function ($matches) {\n                    return $this->_decode_entity($matches);\n                },\n                $str\n            );\n        } else {\n            $str = UTF8::rawurldecode($str);\n        }\n\n        return $str;\n    }\n\n    /**\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _do($str)\n    {\n        $str = (string) $str;\n        $strInt = (int) $str;\n        $strFloat = (float) $str;\n        if (\n            !$str\n            ||\n            (string) $strInt === $str\n            ||\n            (string) $strFloat === $str\n        ) {\n            // no xss found\n            if ($this->_xss_found !== true) {\n                $this->_xss_found = false;\n            }\n\n            return $str;\n        }\n\n        // remove the BOM from UTF-8 / UTF-16 / UTF-32 strings\n        $str = UTF8::remove_bom($str);\n\n        // replace the diamond question mark (\ufffd) and invalid-UTF8 chars\n        $str = UTF8::replace_diamond_question_mark($str, '');\n\n        // replace invisible characters with one single space\n        $str = UTF8::remove_invisible_characters($str, true, '', false);\n\n        // decode UTF-7 characters\n        $str = $this->_repack_utf7($str);\n\n        // decode the string\n        $str = $this->_decode_string($str);\n\n        // remove all >= 4-Byte chars if needed\n        if ($this->_stripe_4byte_chars) {\n            $str = (string) \\preg_replace('/[\\x{10000}-\\x{10FFFF}]/u', '', $str);\n        }\n\n        // backup the string (for later comparison)\n        $str_backup = $str;\n        \n        // process\n        do {\n            // backup the string (for the loop)\n            $str_backup_loop = $str;\n\n            // correct words before the browser will do it\n            $str = $this->_compact_exploded_javascript($str);\n    \n            // remove disallowed javascript calls in links, images etc.\n            $str = $this->_remove_disallowed_javascript($str);\n    \n            // remove strings that are never allowed\n            $str = $this->_do_never_allowed($str);\n    \n            // remove evil attributes such as style, onclick and xmlns\n            $str = $this->_remove_evil_attributes($str);\n    \n            // sanitize naughty JavaScript elements\n            $str = $this->_sanitize_naughty_javascript($str);\n    \n            // sanitize naughty HTML elements\n            $str = $this->_sanitize_naughty_html($str);\n    \n            // final clean up\n            //\n            // -> This adds a bit of extra precaution in case something got through the above filters.\n            $str = $this->_do_never_allowed_afterwards($str);\n        } while ($str_backup_loop !== $str);\n\n        // check for xss\n        if ($this->_xss_found !== true) {\n            $this->_xss_found = !($str_backup === $str);\n        }\n        \n        return $str;\n    }\n\n    /**\n     * Remove never allowed strings.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _do_never_allowed($str)\n    {\n        static $NEVER_ALLOWED_CACHE = [];\n\n        $NEVER_ALLOWED_CACHE['keys'] = null;\n\n        if ($NEVER_ALLOWED_CACHE['keys'] === null) {\n            $NEVER_ALLOWED_CACHE['keys'] = \\array_keys($this->_never_allowed_str);\n        }\n\n        $str = \\str_ireplace(\n            $NEVER_ALLOWED_CACHE['keys'],\n            $this->_never_allowed_str,\n            $str\n        );\n\n        // ---\n\n        $replaceNeverAllowedCall = [];\n        foreach ($this->_never_allowed_call_strings as $call) {\n            if (\\stripos($str, $call) !== false) {\n                $replaceNeverAllowedCall[] = $call;\n            }\n        }\n        if (\\count($replaceNeverAllowedCall) > 0) {\n            $str = (string) \\preg_replace(\n                '#([^\\p{L}]|^)(?:' . \\implode('|', $replaceNeverAllowedCall) . ')\\s*:(?:.*?([/\\\\\\;()\\'\">]|$))#ius',\n                '$1' . $this->_replacement . '$2',\n                $str\n            );\n        }\n\n        // ---\n\n        $regex_combined = [];\n        foreach ($this->_never_allowed_regex as $regex => $replacement) {\n            if ($replacement === $this->_replacement) {\n                $regex_combined[] = $regex;\n\n                continue;\n            }\n\n            $str = (string) \\preg_replace(\n                '#' . $regex . '#iUus',\n                $replacement,\n                $str\n            );\n        }\n\n        if (!$this->_cache_never_allowed_regex_string || $regex_combined !== []) {\n            $this->_cache_never_allowed_regex_string = \\implode('|', $regex_combined);\n        }\n\n        if ($this->_cache_never_allowed_regex_string) {\n            $str = (string) \\preg_replace(\n                '#' . $this->_cache_never_allowed_regex_string . '#ius',\n                $this->_replacement,\n                $str\n            );\n        }\n\n        return $str;\n    }\n\n    /**\n     * @return array\n     *\n     * @phpstan-return array<string, list<string>>\n     */\n    private function _get_never_allowed_on_events_afterwards_chunks()\n    {\n        // init\n        $array = [];\n\n        foreach ($this->_never_allowed_on_events_afterwards as $event) {\n            $array[$event[0] . $event[1] . $event[2]][] = $event;\n        }\n\n        return $array;\n    }\n\n    /**\n     * Remove never allowed string, afterwards.\n     *\n     * <p>\n     * <br />\n     * INFO: clean-up also some string, if there is no html-tag\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return  string\n     */\n    private function _do_never_allowed_afterwards($str)\n    {\n        if (\\stripos($str, 'on') !== false) {\n            foreach ($this->_get_never_allowed_on_events_afterwards_chunks() as $eventNameBeginning => $events) {\n                if (\\stripos($str, $eventNameBeginning) === false) {\n                    continue;\n                }\n\n                foreach ($events as $event) {\n                    if (\\stripos($str, $event) === false) {\n                        continue;\n                    }\n\n                    $regex = '(?<before>[^\\p{L}@.!?>]|^)(?:' . \\implode('|', $events) . ')(?<after>\\(.*?\\)|.*?>|(?:\\s|\\[.*?\\])*?=(?:\\s|\\[.*?\\])*?|(?:\\s|\\[.*?\\])*?&equals;(?:\\s|\\[.*?\\])*?|[^\\p{L}]*?=[^\\p{L}]*?|[^\\p{L}]*?&equals;[^\\p{L}]*?|$|\\s*?>*?$)';\n\n                    do {\n                        $count = $temp_count = 0;\n\n                        $str = (string) \\preg_replace(\n                            '#' . $regex . '#ius',\n                            '$1' . $this->_replacement . '$2',\n                            $str,\n                            -1,\n                            $temp_count\n                        );\n                        $count += $temp_count;\n                    } while ($count);\n\n                    break;\n                }\n            }\n        }\n\n        return (string) \\str_ireplace(\n            $this->_never_allowed_str_afterwards,\n            $this->_replacement,\n            $str\n        );\n    }\n\n    /**\n     * Entity-decoding.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _entity_decode($str)\n    {\n        static $HTML_ENTITIES_CACHE;\n\n        $flags = ENT_QUOTES | ENT_HTML5 | ENT_DISALLOWED | ENT_SUBSTITUTE;\n\n        // decode-again, for e.g. HHVM or miss configured applications ...\n        if (\n            \\strpos($str, '&') !== false\n            &&\n            \\preg_match_all('/(?<html_entity>&[A-Za-z]{2,};{0})/', $str, $matches)\n        ) {\n            if ($HTML_ENTITIES_CACHE === null) {\n                // links:\n                // - http://dev.w3.org/html5/html-author/charref\n                // - http://www.w3schools.com/charsets/ref_html_entities_n.asp\n                $entitiesSecurity = [\n                    '&#x00000;'          => '',\n                    '&#0;'               => '',\n                    '&#x00001;'          => '',\n                    '&#1;'               => '',\n                    '&nvgt;'             => '',\n                    '&#61253;'           => '',\n                    '&#x0EF45;'          => '',\n                    '&shy;'              => '',\n                    '&#x000AD;'          => '',\n                    '&#173;'             => '',\n                    '&colon;'            => ':',\n                    '&#x0003A;'          => ':',\n                    '&#58;'              => ':',\n                    '&lpar;'             => '(',\n                    '&#x00028;'          => '(',\n                    '&#40;'              => '(',\n                    '&rpar;'             => ')',\n                    '&#x00029;'          => ')',\n                    '&#41;'              => ')',\n                    '&quest;'            => '?',\n                    '&#x0003F;'          => '?',\n                    '&#63;'              => '?',\n                    '&sol;'              => '/',\n                    '&#x0002F;'          => '/',\n                    '&#47;'              => '/',\n                    '&apos;'             => '\\'',\n                    '&#x00027;'          => '\\'',\n                    '&#039;'             => '\\'',\n                    '&#39;'              => '\\'',\n                    '&#x27;'             => '\\'',\n                    '&bsol;'             => '\\'',\n                    '&#x0005C;'          => '\\\\',\n                    '&#92;'              => '\\\\',\n                    '&comma;'            => ',',\n                    '&#x0002C;'          => ',',\n                    '&#44;'              => ',',\n                    '&period;'           => '.',\n                    '&#x0002E;'          => '.',\n                    '&quot;'             => '\"',\n                    '&QUOT;'             => '\"',\n                    '&#x00022;'          => '\"',\n                    '&#34;'              => '\"',\n                    '&grave;'            => '`',\n                    '&DiacriticalGrave;' => '`',\n                    '&#x00060;'          => '`',\n                    '&#96;'              => '`',\n                    '&#46;'              => '.',\n                    '&equals;'           => '=',\n                    '&#x0003D;'          => '=',\n                    '&#61;'              => '=',\n                    '&newline;'          => \"\\n\",\n                    '&#x0000A;'          => \"\\n\",\n                    '&#10;'              => \"\\n\",\n                    '&tab;'              => \"\\t\",\n                    '&#x00009;'          => \"\\t\",\n                    '&#9;'               => \"\\t\",\n                ];\n\n                $HTML_ENTITIES_CACHE = \\array_merge(\n                    $entitiesSecurity,\n                    \\array_flip(\\get_html_translation_table(HTML_ENTITIES, $flags)),\n                    \\array_flip(self::_get_data('entities_fallback'))\n                );\n            }\n\n            $search = [];\n            $replace = [];\n            foreach ($matches['html_entity'] as $match) {\n                $match .= ';';\n                if (isset($HTML_ENTITIES_CACHE[$match])) {\n                    $search[$match] = $match;\n                    $replace[$match] = $HTML_ENTITIES_CACHE[$match];\n                }\n            }\n\n            if (\\count($replace) > 0) {\n                $str = \\str_ireplace($search, $replace, $str);\n            }\n        }\n\n        return $str;\n    }\n\n    /**\n     * Filters tag attributes for consistency and safety.\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _filter_attributes($str)\n    {\n        if ($str === '') {\n            return '';\n        }\n\n        if (\\strpos($str, '=') !== false) {\n            $matchesTmp = [];\n            while (\\preg_match('#\\s*[\\p{L}\\d_\\-\\[\\]]+\\s*=\\s*([\"\\'])(?:[^\\1]*?)\\\\1#u', $str, $matches)) {\n                $matchesTmp[] = $matches[0];\n                $str = \\str_replace($matches[0], '', $str);\n\n                if (\\substr_count($str, '\"') <= 1 && \\substr_count($str, '\\'') <= 1) {\n                    break;\n                }\n            }\n            $out = \\implode('', $matchesTmp);\n        } else {\n            $out = $str;\n        }\n\n        return $out;\n    }\n\n    /**\n     * get data from \"/data/*.php\"\n     *\n     * @param string $file\n     *\n     * @return string[]\n     *\n     * @phpstan-return array<string, string>\n     */\n    private static function _get_data($file)\n    {\n        /** @noinspection PhpIncludeInspection */\n        return include __DIR__ . '/data/' . $file . '.php';\n    }\n\n    /**\n     * initialize \"$this->_never_allowed_str\"\n     *\n     * @return void\n     */\n    private function _initNeverAllowedStr()\n    {\n        $this->_never_allowed_str = [\n            'document.cookie'   => $this->_replacement,\n            '(document).cookie' => $this->_replacement,\n            'document.write'    => $this->_replacement,\n            '(document).write'  => $this->_replacement,\n            '.parentNode'       => $this->_replacement,\n            '.innerHTML'        => $this->_replacement,\n            '.appendChild'      => $this->_replacement,\n            '-moz-binding'      => $this->_replacement,\n            '<?'                => '&lt;?',\n            '?>'                => '?&gt;',\n            '<![CDATA['         => '&lt;![CDATA[',\n            '<!ENTITY'          => '&lt;!ENTITY',\n            '<!DOCTYPE'         => '&lt;!DOCTYPE',\n            '<!ATTLIST'         => '&lt;!ATTLIST',\n        ];\n    }\n\n    /**\n     * initialize \"$this->_never_allowed_regex\"\n     *\n     * @return void\n     */\n    private function _initNeverAllowedRegex()\n    {\n        $this->_never_allowed_regex = [\n            // default javascript\n            '(\\(?:?document\\)?|\\(?:?window\\)?(?:\\.document)?)\\.(?:location|on\\w*)' => $this->_replacement,\n            // data-attribute + base64\n            \"([\\\"'])?data\\s*:\\s*(?!image\\s*\\/\\s*(?!svg.*?))[^\\1]*?base64[^\\1]*?,[^\\1]*?\\1?\" => $this->_replacement,\n            // old IE, old Netscape\n            'expression\\s*(?:\\(|&\\#40;)' => $this->_replacement,\n            // src=\"js\"\n            'src\\=(?<wrapper>[\\'|\"]).*\\.js(?:\\g{wrapper})' => $this->_replacement,\n            // comments\n            '<!--(.*)-->' => '&lt;!--$1--&gt;',\n            '<!--'        => '&lt;!--',\n        ];\n    }\n\n    /**\n     * Callback method for xss_clean() to sanitize links.\n     *\n     * <p>\n     * <br />\n     * INFO: This limits the PCRE backtracks, making it more performance friendly\n     * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\n     * PHP 5.2+ on link-heavy strings.\n     * </p>\n     *\n     * @param string[] $match\n     *\n     * @return string\n     */\n    private function _js_link_removal_callback($match)\n    {\n        return $this->_js_removal_callback($match, 'href');\n    }\n\n    /**\n     * Callback method for xss_clean() to sanitize tags.\n     *\n     * <p>\n     * <br />\n     * INFO: This limits the PCRE backtracks, making it more performance friendly\n     * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\n     * PHP 5.2+ on image tag heavy strings.\n     * </p>\n     *\n     * @param string[]  $match\n     * @param string $search\n     *\n     * @return string\n     */\n    private function _js_removal_callback($match, $search)\n    {\n        if (!$match[0]) {\n            return '';\n        }\n\n        $replacer = $this->_filter_attributes($match[1]);\n\n        // filter for \"$search\"-attributes\n        if (\\stripos($match[1], $search . '=') !== false) {\n            $pattern = '#' . $search . '=(?<wrapper>[\\'|\"])(?<link>.*)(?:\\g{wrapper})#isU';\n            $matchInner = [];\n            $foundSomethingBad = false;\n            if (\\preg_match($pattern, $match[1], $matchInner)) {\n                $needProtection = true;\n                $matchInner['link'] = \\str_replace(' ', '%20', $matchInner['link']);\n\n                if (\n                    \\strpos($matchInner[0], 'script') === false\n                    &&\n                    \\strpos(\\str_replace(['http://', 'https://'], '', $matchInner[0]), ':') === false\n                    &&\n                    (\n                        \\filter_var($matchInner['link'], \\FILTER_VALIDATE_URL) !== false\n                        ||\n                        \\filter_var('https://localhost.localdomain/' . $matchInner['link'], \\FILTER_VALIDATE_URL) !== false\n                    )\n                ) {\n                    $needProtection = false;\n                }\n\n                if ($needProtection) {\n                    $tmpAntiXss = clone $this;\n\n                    $tmpAntiXss->xss_clean((string) $matchInner[0]);\n\n                    if ($tmpAntiXss->isXssFound() === true) {\n                        $foundSomethingBad = true;\n                        $this->_xss_found = true;\n\n                        $replacer = (string) \\preg_replace(\n                            $pattern,\n                            $search . '=\"' . $this->_replacement . '\"',\n                            $replacer\n                        );\n                    }\n                }\n            }\n\n            if (!$foundSomethingBad) {\n                // filter for javascript\n                $patternTmp = '';\n                foreach ($this->_never_allowed_call_strings as $callTmp) {\n                    if (\\stripos($match[0], $callTmp) !== false) {\n                        $patternTmp .= $callTmp . ':|';\n                    }\n                }\n                $pattern = '#' . $search . '=.*(?:' . $patternTmp . \\implode('|', $this->_never_allowed_js_callback_regex) . ')#ius';\n                $matchInner = [];\n                if (\\preg_match($pattern, $match[1], $matchInner)) {\n                    $replacer = (string) \\preg_replace(\n                        $pattern,\n                        $search . '=\"' . $this->_replacement . '\"',\n                        $replacer\n                    );\n                }\n            }\n        }\n        \n        if (\n            \\substr($match[0], -3) === ' />'\n            &&\n            \\substr($match[1], -2) === ' /'\n            &&\n            \\substr($replacer, -2) !== ' /'\n        ) {\n            $replacer .= ' /';\n        } elseif (\n            \\substr($match[0], -2) === '/>'\n            &&\n            \\substr($match[1], -1) === '/'\n            &&\n            \\substr($replacer, -1) !== '/'\n        ) {\n            $replacer .= '/';\n        }\n        \n        \n        return \\str_ireplace($match[1], $replacer, (string) $match[0]);\n    }\n\n    /**\n     * Callback method for xss_clean() to sanitize image tags.\n     *\n     * <p>\n     * <br />\n     * INFO: This limits the PCRE backtracks, making it more performance friendly\n     * and prevents PREG_BACKTRACK_LIMIT_ERROR from being triggered in\n     * PHP 5.2+ on image tag heavy strings.\n     * </p>\n     *\n     * @param string[] $match\n     *\n     * @return string\n     */\n    private function _js_src_removal_callback(array $match)\n    {\n        return $this->_js_removal_callback($match, 'src');\n    }\n\n    /**\n     * Remove disallowed Javascript in links or img tags\n     *\n     * <p>\n     * <br />\n     * We used to do some version comparisons and use of stripos(),\n     * but it is dog slow compared to these simplified non-capturing\n     * preg_match(), especially if the pattern exists in the string\n     * </p>\n     *\n     * <p>\n     * <br />\n     * Note: It was reported that not only space characters, but all in\n     * the following pattern can be parsed as separators between a tag name\n     * and its attributes: [\\d\\s\"\\'`;,\\/\\=\\(\\x00\\x0B\\x09\\x0C]\n     * ... however, UTF8::clean() above already strips the\n     * hex-encoded ones, so we'll skip them below.\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _remove_disallowed_javascript($str)\n    {\n        do {\n            $original = $str;\n\n            if (\\stripos($str, '<a') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<a[^\\p{L}@>]+([^>]*?)(?:>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_link_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = \\preg_replace_callback(\n                        '#<a[^\\p{L}@>]+([^>]*)(?:>|$)#iu',\n                        function ($matches) {\n                            return $this->_js_link_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<img') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<img[^\\p{L}@]+([^>]*?)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        if (\n                            \\strpos($matches[1], 'base64') !== false\n                            &&\n                            \\preg_match(\"/([\\\"'])?data\\s*:\\s*(?:image\\s*\\/.*)[^\\1]*base64[^\\1]*,[^\\1]*\\1?/iUus\", $matches[1])\n                        ) {\n                            return $matches[0];\n                        }\n\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = (string) \\preg_replace_callback(\n                        '#<img[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                        function ($matches) {\n                            if (\n                                \\strpos($matches[1], 'base64') !== false\n                                &&\n                                \\preg_match(\"/([\\\"'])?data\\s*:\\s*(?:image\\s*\\/.*)[^\\1]*base64[^\\1]*,[^\\1]*\\1?/iUus\", $matches[1])\n                            ) {\n                                return $matches[0];\n                            }\n\n                            return $this->_js_src_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<audio') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<audio[^\\p{L}@]+([^>]*?)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = (string) \\preg_replace_callback(\n                        '#<audio[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                        function ($matches) {\n                            return $this->_js_src_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<video') !== false) {\n                $strTmp = \\preg_replace_callback(\n                    '#<video[^\\p{L}@]+([^>]*?)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n                if ($strTmp === null) {\n                    $strTmp = \\preg_replace_callback(\n                        '#<video[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                        function ($matches) {\n                            return $this->_js_src_removal_callback($matches);\n                        },\n                        $str\n                    );\n                }\n                $str = (string)$strTmp;\n            }\n\n            if (\\stripos($str, '<source') !== false) {\n                $str = (string) \\preg_replace_callback(\n                    '#<source[^\\p{L}@]+([^>]*)(?:\\s?/?>|$)#iu',\n                    function ($matches) {\n                        return $this->_js_src_removal_callback($matches);\n                    },\n                    $str\n                );\n            }\n\n            if (\\stripos($str, 'script') !== false) {\n                // INFO: US-ASCII: \u00bc === <\n                $str = (string) \\preg_replace(\n                    '#(?:%3C|\u00bc|<)\\s*script[^\\p{L}@]+(?:[^>]*)(?:\\s?/?(?:%3E|\u00be|>)|$)#iu',\n                    $this->_replacement,\n                    $str\n                );\n            }\n\n            if (\\stripos($str, 'script') !== false) {\n                // INFO: US-ASCII: \u00bc === <\n                $str = (string) \\preg_replace(\n                    '#(?:%3C|\u00bc|<)[^\\p{L}@]*/*[^\\p{L}@]*(?:script[^\\p{L}@]+).*(?:%3E|\u00be|>)?#iUus',\n                    $this->_replacement,\n                    $str\n                );\n            }\n        } while ($original !== $str);\n\n        return (string) $str;\n    }\n\n    /**\n     * Remove Evil HTML Attributes (like event handlers and style).\n     *\n     * It removes the evil attribute and either:\n     *\n     *  - Everything up until a space. For example, everything between the pipes:\n     *\n     * <code>\n     *   <a |style=document.write('hello');alert('world');| class=link>\n     * </code>\n     *\n     *  - Everything inside the quotes. For example, everything between the pipes:\n     *\n     * <code>\n     *   <a |style=\"document.write('hello'); alert('world');\"| class=\"link\">\n     * </code>\n     *\n     * @param string $str <p>The string to check.</p>\n     *\n     * @return string\n     *                <p>The string with the evil attributes removed.</p>\n     */\n    private function _remove_evil_attributes($str)\n    {\n        // replace style-attribute, first (if needed)\n        if (\n            \\stripos($str, 'style') !== false\n            &&\n            \\in_array('style', $this->_evil_attributes_regex, true)\n        ) {\n            do {\n                $count = $temp_count = 0;\n\n                $str = (string) \\preg_replace(\n                    '/(<[^>]+)(?<!\\p{L})(style\\s*=\\s*\"(?:[^\"]*?)\"|style\\s*=\\s*\\'(?:[^\\']*?)\\')/iu',\n                    '$1' . $this->_replacement,\n                    $str,\n                    -1,\n                    $temp_count\n                );\n                $count += $temp_count;\n            } while ($count);\n        }\n\n        if (!$this->_cache_evil_attributes_regex_string) {\n            $this->_cache_evil_attributes_regex_string = \\implode('|', $this->_evil_attributes_regex);\n            $this->_cache_evil_attributes_regex_string .= '|' . \\implode('\\w*|', $this->_never_allowed_on_events_afterwards);\n        }\n\n        do {\n            $count = $temp_count = 0;\n\n            // find occurrences of illegal attribute strings with and without quotes (\" and ' are octal quotes)\n            $regex = '/(.*)((?:<[^>]+)(?<!\\p{L}))(?:' . $this->_cache_evil_attributes_regex_string . ')(?:\\s*=\\s*)(?:\\'(?:.*?)\\'|\"(?:.*?)\")(.*)/ius';\n            $strTmp = \\preg_replace(\n                $regex,\n                '$1$2' . $this->_replacement . '$3$4',\n                $str,\n                -1,\n                $temp_count\n            );\n            if ($strTmp === null) {\n                $regex = '/(?:' . $this->_cache_evil_attributes_regex_string . ')(?:\\s*=\\s*)(?:\\'(?:.*?)\\'|\"(?:.*?)\")/ius';\n                $strTmp = \\preg_replace(\n                    $regex,\n                    $this->_replacement,\n                    $str,\n                    -1,\n                    $temp_count\n                );\n            }\n            $str = (string)$strTmp;\n            $count += $temp_count;\n\n            $regex =  '/(.*?)(<[^>]+)(?<!\\p{L})(?:' . $this->_cache_evil_attributes_regex_string . ')\\s*=\\s*(?:[^\\s>]*)/ius';\n            $strTmp = \\preg_replace(\n                $regex,\n                '$1$2' . $this->_replacement . '$3',\n                $str,\n                -1,\n                $temp_count\n            );\n            if ($strTmp === null) {\n                $regex =  '/(?<!\\p{L})(?:' . $this->_cache_evil_attributes_regex_string . ')\\s*=\\s*(?:[^\\s>]*)(.*?)/ius';\n                $strTmp = \\preg_replace(\n                    $regex,\n                    '$1$2' . $this->_replacement . '$3',\n                    $str,\n                    -1,\n                    $temp_count\n                );\n            }\n            $str = (string)$strTmp;\n            $count += $temp_count;\n        } while ($count);\n\n        return (string) $str;\n    }\n\n    /**\n     * UTF-7 decoding function.\n     *\n     * @param string $str <p>HTML document for recode ASCII part of UTF-7 back to ASCII.</p>\n     *\n     * @return string\n     */\n    private function _repack_utf7($str)\n    {\n        if (\\strpos($str, '-') === false) {\n            return $str;\n        }\n\n        return (string) \\preg_replace_callback(\n            '#\\+([\\p{L}\\d]+)-#iu',\n            function ($matches) {\n                return $this->_repack_utf7_callback($matches);\n            },\n            $str\n        );\n    }\n\n    /**\n     * Additional UTF-7 decoding function.\n     *\n     * @param string[] $strings <p>Array of strings for recode ASCII part of UTF-7 back to ASCII.</p>\n     *\n     * @return string\n     */\n    private function _repack_utf7_callback($strings)\n    {\n        $strTmp = \\base64_decode($strings[1], true);\n\n        if ($strTmp === false) {\n            return $strings[0];\n        }\n\n        if (\\rtrim(\\base64_encode($strTmp), '=') !== \\rtrim($strings[1], '=')) {\n            return $strings[0];\n        }\n\n        $string = (string) \\preg_replace_callback(\n            '/^((?:\\x00.)*?)((?:[^\\x00].)+)/us',\n            function ($matches) {\n                return $this->_repack_utf7_callback_back($matches);\n            },\n            $strTmp\n        );\n\n        return (string) \\preg_replace(\n            '/\\x00(.)/us',\n            '$1',\n            $string\n        );\n    }\n\n    /**\n     * Additional UTF-7 encoding function.\n     *\n     * @param string $str <p>String for recode ASCII part of UTF-7 back to ASCII.</p>\n     *\n     * @return string\n     */\n    private function _repack_utf7_callback_back($str)\n    {\n        return $str[1] . '+' . \\rtrim(\\base64_encode($str[2]), '=') . '-';\n    }\n\n    /**\n     * Sanitize naughty HTML elements.\n     *\n     * <p>\n     * <br />\n     *\n     * If a tag containing any of the words in the list\n     * below is found, the tag gets converted to entities.\n     *\n     * <br /><br />\n     *\n     * So this: <blink>\n     * <br />\n     * Becomes: &lt;blink&gt;\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _sanitize_naughty_html($str)\n    {\n        // init\n        $strEnd = '';\n\n        do {\n            $original = $str;\n\n            if (\n                \\strpos($str, '<') === false\n                &&\n                \\strpos($str, '>') === false\n            ) {\n                return $str;\n            }\n\n            if (!$this->_cache__evil_html_tags_str) {\n                $this->_cache__evil_html_tags_str = \\implode('|', $this->_evil_html_tags);\n            }\n\n            $str = (string) \\preg_replace_callback(\n                '#<(?<start>/*\\s*)(?<tagName>' . $this->_cache__evil_html_tags_str . ')(?<end>[^><]*)(?<rest>[><]*)#ius',\n                function ($matches) {\n                    return $this->_sanitize_naughty_html_callback($matches);\n                },\n                $str\n            );\n\n            if (\\strpos($str, '<') === false) {\n                return $str;\n            }\n\n            if (\n                $this->_xss_found\n                &&\n                \\trim($str) === '<'\n            ) {\n                return '';\n            }\n\n            $str = (string) \\preg_replace_callback(\n                '#<(?!!--|!\\[)((?<start>/*\\s*)((?<tagName>[\\p{L}:]+)(?=[^\\p{L}]|$|)|.+)[^\\s\"\\'\\p{L}>/=]*[^>]*)(?<closeTag>>)?#iusS', // tags without comments\n                function ($matches) {\n                    if (\n                        $this->_do_not_close_html_tags !== []\n                        &&\n                        isset($matches['tagName'])\n                        &&\n                        \\in_array($matches['tagName'], $this->_do_not_close_html_tags, true)\n                    ) {\n                        return $matches[0];\n                    }\n\n                    return $this->_close_html_callback($matches);\n                },\n                $str\n            );\n\n            if ($str === $strEnd) {\n                return (string) $str;\n            }\n\n            $strEnd = $str;\n        } while ($original !== $str);\n\n        return (string) $str;\n    }\n\n    /**\n     * @param string[] $matches\n     *\n     * @return string\n     */\n    private function _close_html_callback($matches)\n    {\n        if (empty($matches['closeTag'])) {\n            // allow e.g. \"< $2.20\" and e.g. \"< 1 year\"\n            if (\\preg_match('/^[ .,\\d=%\u20ac$\u20a2\u20a3\u00a3\u20a4\u20b6\u2133\u20a5\u20a6\u20a7\u20a8\u0dbb\u0dd4\u0bb0\u0bc2\u0bf9\u0930\u0942\u20b9\u0af1\u20a9\u20aa\u20b8\u20ab\u058f\u20ad\u20ba\u20bc\u20ae\u20af\u20b0\u20b7\u20b1\ufdfc\u20b2\u20be\u20b3\u20b4\u20bd\u20b5\u20a1\u00a2\u00a5\u5186\u09f3\u5143\u17db\u20a0\u00a4\u0e3f\u060b]*$|^[ .,\\d=%\u20ac$\u20a2\u20a3\u00a3\u20a4\u20b6\u2133\u20a5\u20a6\u20a7\u20a8\u0dbb\u0dd4\u0bb0\u0bc2\u0bf9\u0930\u0942\u20b9\u0af1\u20a9\u20aa\u20b8\u20ab\u058f\u20ad\u20ba\u20bc\u20ae\u20af\u20b0\u20b7\u20b1\ufdfc\u20b2\u20be\u20b3\u20b4\u20bd\u20b5\u20a1\u00a2\u00a5\u5186\u09f3\u5143\u17db\u20a0\u00a4\u0e3f\u060b]+\\p{L}*\\s*$/u', $matches[1])) {\n                return '<' . \\str_replace(['>', '<'], ['&gt;', '&lt;'], $matches[1]);\n            }\n\n            return '&lt;' . \\str_replace(['>', '<'], ['&gt;', '&lt;'], $matches[1]);\n        }\n\n        return '<' . \\str_replace(['>', '<'], ['&gt;', '&lt;'], $matches[1]) . '>';\n    }\n\n    /**\n     * Sanitize naughty HTML.\n     *\n     * <p>\n     * <br />\n     * Callback method for AntiXSS->sanitize_naughty_html() to remove naughty HTML elements.\n     * </p>\n     *\n     * @param string[] $matches\n     *\n     * @return string\n     */\n    private function _sanitize_naughty_html_callback($matches)\n    {\n        $fullMatch = $matches[0];\n\n        // skip some edge-cases\n        /** @noinspection NotOptimalIfConditionsInspection */\n        if (\n            (\n                \\strpos($fullMatch, '=') === false\n                &&\n                \\strpos($fullMatch, ' ') === false\n                &&\n                \\strpos($fullMatch, ':') === false\n                &&\n                \\strpos($fullMatch, '/') === false\n                &&\n                \\strpos($fullMatch, '\\\\') === false\n                &&\n                \\stripos($fullMatch, '<' . $matches['tagName'] . '>') !== 0\n                &&\n                \\stripos($fullMatch, '</' . $matches['tagName'] . '>') !== 0\n                &&\n                \\stripos($fullMatch, '<' . $matches['tagName'] . '<') !== 0\n            )\n            ||\n            \\preg_match('/<\\/?' . $matches['tagName'] . '\\p{L}+>/ius', $fullMatch) === 1\n        ) {\n            return $fullMatch;\n        }\n\n        return '&lt;' . $matches['start'] . $matches['tagName'] . $matches['end'] // encode opening brace\n               // encode captured opening or closing brace to prevent recursive vectors\n               . \\str_replace(\n                   [\n                       '>',\n                   ],\n                   [\n                       '&gt;',\n                   ],\n                   $matches['rest']\n               );\n    }\n\n    /**\n     * Sanitize naughty scripting elements\n     *\n     * <p>\n     * <br />\n     *\n     * Similar to above, only instead of looking for\n     * tags it looks for PHP and JavaScript commands\n     * that are disallowed. Rather than removing the\n     * code, it simply converts the parenthesis to entities\n     * rendering the code un-executable.\n     *\n     * <br /><br />\n     *\n     * For example:  <pre>eval('some code')</pre>\n     * <br />\n     * Becomes:      <pre>eval&#40;'some code'&#41;</pre>\n     * </p>\n     *\n     * @param string $str\n     *\n     * @return string\n     */\n    private function _sanitize_naughty_javascript($str)\n    {\n        if (\\strpos($str, '(') !== false) {\n            $patterns = [\n                'alert',\n                'prompt',\n                'confirm',\n                'cmd',\n                'passthru',\n                'eval',\n                'exec',\n                'execScript',\n                'setTimeout',\n                'setInterval',\n                'setImmediate',\n                'expression',\n                'system',\n                'fopen',\n                'fsockopen',\n                'file',\n                'file_get_contents',\n                'readfile',\n                'unlink',\n            ];\n\n            $found = false;\n            foreach ($patterns as $pattern) {\n                if (\\strpos($str, $pattern) !== false) {\n                    $found = true;\n\n                    break;\n                }\n            }\n\n            if ($found === true) {\n                $str = (string) \\preg_replace(\n                    '#(?<!\\p{L})(' . \\implode('|', $patterns) . ')(\\s*)\\((.*)\\)#uisU',\n                    '\\\\1\\\\2&#40;\\\\3&#41;',\n                    $str\n                );\n            }\n        }\n\n        return (string) $str;\n    }\n\n    /**\n     * Add some strings to the \"_evil_attributes\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addEvilAttributes(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_evil_attributes_regex = \\array_merge(\n            $strings,\n            $this->_evil_attributes_regex\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_evil_html_tags\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addEvilHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache__evil_html_tags_str = '';\n\n        $this->_evil_html_tags = \\array_merge(\n            $strings,\n            $this->_evil_html_tags\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_regex\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_never_allowed_regex_string = '';\n\n        $this->_never_allowed_regex = \\array_merge(\n            $strings,\n            $this->_never_allowed_regex\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_regex\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_never_allowed_regex_string = '';\n\n        $this->_never_allowed_regex = \\array_diff(\n            $this->_never_allowed_regex,\n            \\array_intersect($strings, $this->_never_allowed_regex)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_on_events_afterwards\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedOnEventsAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_never_allowed_on_events_afterwards = \\array_merge(\n            $strings,\n            $this->_never_allowed_on_events_afterwards\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_str_afterwards\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedStrAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_str_afterwards = \\array_merge(\n            $strings,\n            $this->_never_allowed_str_afterwards\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_do_not_close_html_tags\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addDoNotCloseHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_do_not_close_html_tags = \\array_merge(\n            $strings,\n            $this->_do_not_close_html_tags\n        );\n\n        return $this;\n    }\n\n    /**\n     * Add some strings to the \"_never_allowed_js_callback_regex\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedJsCallbackRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_js_callback_regex = \\array_merge(\n            $strings,\n            $this->_never_allowed_js_callback_regex\n        );\n\n        return $this;\n    }\n    \n    /**\n     * Add some strings to the \"_never_allowed_call_strings\"-array.\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function addNeverAllowedCallStrings(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_call_strings = \\array_merge(\n            $strings,\n            $this->_never_allowed_call_strings\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_do_not_close_html_tags\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeDoNotCloseHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_do_not_close_html_tags = \\array_diff(\n            $this->_do_not_close_html_tags,\n            \\array_intersect($strings, $this->_do_not_close_html_tags)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Check if the \"AntiXSS->xss_clean()\"-method found an XSS attack in the last run.\n     *\n     * @return bool|null\n     *                   <p>Will return null if the \"xss_clean()\" wasn't running at all.</p>\n     */\n    public function isXssFound()\n    {\n        return $this->_xss_found;\n    }\n\n    /**\n     * Remove some strings from the \"_evil_attributes\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeEvilAttributes(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_evil_attributes_regex = \\array_diff(\n            $this->_evil_attributes_regex,\n            \\array_intersect($strings, $this->_evil_attributes_regex)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_evil_html_tags\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeEvilHtmlTags(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache__evil_html_tags_str = '';\n\n        $this->_evil_html_tags = \\array_diff(\n            $this->_evil_html_tags,\n            \\array_intersect($strings, $this->_evil_html_tags)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_on_events_afterwards\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedOnEventsAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        // reset\n        $this->_cache_evil_attributes_regex_string = '';\n\n        $this->_never_allowed_on_events_afterwards = \\array_diff(\n            $this->_never_allowed_on_events_afterwards,\n            \\array_intersect($strings, $this->_never_allowed_on_events_afterwards)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_str_afterwards\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedStrAfterwards(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_str_afterwards = \\array_diff(\n            $this->_never_allowed_str_afterwards,\n            \\array_intersect($strings, $this->_never_allowed_str_afterwards)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_call_strings\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedCallStrings(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_call_strings = \\array_diff(\n            $this->_never_allowed_call_strings,\n            \\array_intersect($strings, $this->_never_allowed_call_strings)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Remove some strings from the \"_never_allowed_js_callback_regex\"-array.\n     *\n     * <p>\n     * <br />\n     * WARNING: Use this method only if you have a really good reason.\n     * </p>\n     *\n     * @param string[] $strings\n     *\n     * @return $this\n     */\n    public function removeNeverAllowedJsCallbackRegex(array $strings): self\n    {\n        if ($strings === []) {\n            return $this;\n        }\n\n        $this->_never_allowed_js_callback_regex = \\array_diff(\n            $this->_never_allowed_js_callback_regex,\n            \\array_intersect($strings, $this->_never_allowed_js_callback_regex)\n        );\n\n        return $this;\n    }\n\n    /**\n     * Set the replacement-string for not allowed strings.\n     *\n     * @param string $string\n     *\n     * @return $this\n     */\n    public function setReplacement($string): self\n    {\n        $this->_replacement = (string) $string;\n\n        $this->_initNeverAllowedStr();\n        $this->_initNeverAllowedRegex();\n\n        return $this;\n    }\n\n    /**\n     * Set the option to stripe 4-Byte chars.\n     *\n     * <p>\n     * <br />\n     * INFO: use it if your DB (MySQL) can't use \"utf8mb4\" -> preventing stored XSS-attacks\n     * </p>\n     *\n     * @param bool $bool\n     *\n     * @return $this\n     */\n    public function setStripe4byteChars($bool): self\n    {\n        $this->_stripe_4byte_chars = (bool) $bool;\n\n        return $this;\n    }\n\n    /**\n     * XSS Clean\n     *\n     * <p>\n     * <br />\n     * Sanitizes data so that \"Cross Site Scripting\" hacks can be\n     * prevented. This method does a fair amount of work but\n     * it is extremely thorough, designed to prevent even the\n     * most obscure XSS attempts. But keep in mind that nothing\n     * is ever 100% foolproof...\n     * </p>\n     *\n     * <p>\n     * <br />\n     * <strong>Note:</strong> Should only be used to deal with data upon submission.\n     *   It's not something that should be used for general\n     *   runtime processing.\n     * </p>\n     *\n     * @see http://channel.bitflux.ch/wiki/XSS_Prevention\n     *    Based in part on some code and ideas from Bitflux.\n     * @see http://ha.ckers.org/xss.html\n     *    To help develop this script I used this great list of\n     *    vulnerabilities along with a few other hacks I've\n     *    harvested from examining vulnerabilities in other programs.\n     *\n     * @param string|string[] $str\n     *                             <p>input data e.g. string or array of strings</p>\n     *\n     * @return string|string[]\n     *\n     * @template TXssCleanInput as string|string[]\n     * @phpstan-param TXssCleanInput $str\n     * @phpstan-return TXssCleanInput\n     */\n    public function xss_clean($str)\n    {\n        // reset\n        $this->_xss_found = null;\n\n        // check for an array of strings\n        if (\\is_array($str)) {\n            foreach ($str as &$value) {\n                /* @phpstan-ignore-next-line | _xss_found is maybe changed via \"xss_clean\" */\n                if ($this->_xss_found === true) {\n                    $alreadyFoundXss = true;\n                } else {\n                    $alreadyFoundXss = false;\n                }\n                \n                $value = $this->xss_clean($value);\n\n                /* @phpstan-ignore-next-line | _xss_found is maybe changed via \"xss_clean\" */\n                if ($alreadyFoundXss === true) {\n                    $this->_xss_found = true;\n                }\n            }\n\n            /** @var TXssCleanInput $str - hack for phpstan */\n            return $str;\n        }\n\n        $old_str_backup = $str;\n\n        // process\n        do {\n            $old_str = $str;\n            $str = $this->_do($str);\n        } while ($old_str !== $str);\n\n        // keep the old value, if there wasn't any XSS attack\n        if ($this->_xss_found !== true) {\n            $str = $old_str_backup;\n        }\n\n        return $str;\n    }\n}\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      2fa.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\necho \"ici\";\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    $(document).on('click', '#button-duo-config-check', function() {\n        toastr\n            .info('<?php echo langHdl('loading_item'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Prepare data\n        var data = {\n            'duo_ikey': sanitizeString($('#duo_ikey').val()),\n            'duo_skey': sanitizeString($('#duo_skey').val()),\n            'duo_host': sanitizeString($('#duo_host').val())\n        }\n        console.log(data);\n\n        // Launch action\n        $.post(\n            'sources/admin.queries.php', {\n                type: 'run_duo_config_check',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.remove();\n                    toastr.warning(\n                        data.message,\n                        '', {\n                            timeOut: 15000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('duo-config-check-success'); ?>',\n                        '', {\n                            timeOut: 5000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      2fa.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], '2fa', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n\n// Load template\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/main.functions.php';\n\n?>\n\n<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1 class=\"m-0 text-dark\">\n                    <i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('mfa'); ?>\n                </h1>\n            </div><!-- /.col -->\n        </div><!-- /.row -->\n    </div><!-- /.container-fluid -->\n</div>\n<!-- /.content-header -->\n\n<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"card card-primary\">\n                    <div class=\"card-header\">\n                        <h3 class='card-title'><?php echo langHdl('mfa_configuration'); ?></h3>\n                    </div>\n\n                    <div class=\"card-body\">\n\n                        <div class=\"row mb-4\">\n                            <div class=\"col-9\">\n                                <?php echo langHdl('2factors_expected_for_admin'); ?>\n                                <small class='form-text text-muted'>\n                                    <?php echo langHdl('2factors_expected_for_admin_tip'); ?>\n                                </small>\n                            </div>\n                            <div class=\"col-3\">\n                                <div class=\"toggle toggle-modern\" id=\"admin_2fa_required\" data-toggle-on=\"<?php echo isset($SETTINGS['admin_2fa_required']) && (int) $SETTINGS['admin_2fa_required'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"admin_2fa_required_input\" value=\"<?php echo isset($SETTINGS['admin_2fa_required']) && (int) $SETTINGS['admin_2fa_required'] === 1 ? '1' : '0'; ?>\">\n                            </div>\n                        </div>\n\n                        <div class=\"row mb-4\">\n                            <div class=\"col-6\">\n                                <?php echo langHdl('mfa_for_roles'); ?>\n                                <small class='form-text text-muted'>\n                                    <?php echo langHdl('mfa_for_roles_tip'); ?>\n                                </small>\n                            </div>\n                            <div class='col-6'>\n                                <select class='form-control form-control-sm select2 disabled' id='mfa_for_roles' onchange='' multiple=\"multiple\" style=\"width:100%;\">\n                                    <?php\n                                    // Get selected groups\n                                    $arrRolesMFA = json_decode($SETTINGS['mfa_for_roles'], true);\n                                    if ($arrRolesMFA === 0 || empty($arrRolesMFA) === true) {\n                                        $arrRolesMFA = [];\n                                    }\n                                    // Get full list\n                                    $roles = performDBQuery(\n                                        $SETTINGS,\n                                        'id, title',\n                                        'roles_title'\n                                    );\n                                    foreach ($roles as $role) {\n                                        echo '\n                                    <option value=\"' . $role['id'] . '\"', in_array($role['id'], $arrRolesMFA) === true ? ' selected' : '', '>' . addslashes($role['title']) . '</option>';\n                                    }\n                                    ?>\n                                </select>\n                            </div>\n                        </div>\n\n                        <ul class=\"nav nav-tabs mb-4\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#google\" aria-controls=\"google\" aria-selected=\"true\"><?php echo langHdl('google_2fa'); ?></a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#duo\" role=\"tab\" aria-controls=\"duo\" aria-selected=\"false\"><?php echo langHdl('duo_security'); ?></a>\n                            </li>\n                            <!--\n                                <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#yubico\" role=\"tab\" aria-controls=\"yubico\" aria-selected=\"false\"><?php echo langHdl('yubico'); ?></a>\n                            </li>\n                                -->\n                        </ul>\n                        <div class=\"tab-content\">\n\n                            <div class=\"tab-pane fade show active\" id=\"google\" role=\"tabpanel\" aria-labelledby=\"google-tab\">\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_2factors_authentication_setting'); ?>\n                                        <small class='form-text text-muted'>\n                                            <?php echo langHdl('admin_2factors_authentication_setting_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"google_authentication\" data-toggle-on=\"<?php echo isset($SETTINGS['google_authentication']) && (int) $SETTINGS['google_authentication'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"google_authentication_input\" value=\"<?php echo isset($SETTINGS['google_authentication']) && (int) $SETTINGS['google_authentication'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_ga_website_name'); ?>\n                                        <small class='form-text text-muted'>\n                                            <?php echo langHdl('admin_ga_website_name_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <input type=\"text\" class=\"form-control form-control-sm purify\" data-field=\"label\" id=\"ga_website_name\" value=\"<?php echo isset($SETTINGS['ga_website_name']) === true ? $SETTINGS['ga_website_name'] : ''; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('ga_reset_by_user'); ?>\n                                        <small class='form-text text-muted'>\n                                            <?php echo langHdl('ga_reset_by_user_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"ga_reset_by_user\" data-toggle-on=\"<?php echo isset($SETTINGS['ga_reset_by_user']) && (int) $SETTINGS['ga_reset_by_user'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"ga_reset_by_user_input\" value=\"<?php echo isset($SETTINGS['ga_reset_by_user']) && (int) $SETTINGS['ga_reset_by_user'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div class=\"tab-pane\" id=\"duo\" role=\"tabpanel\" aria-labelledby=\"duo-tab\">\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('settings_duo'); ?>\n                                        <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n                                            <?php echo langHdl('settings_duo_tip'); ?>\n                                        </small>\n                                        <div>\n                                            <small><a href=\"<?php echo DUO_ADMIN_URL_INFO; ?>\" target=\"_blank\"><?php echo langHdl('more_information'); ?></a></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"duo\" data-toggle-on=\"<?php echo isset($SETTINGS['duo']) && (int) $SETTINGS['duo'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"duo_input\" value=\"<?php echo isset($SETTINGS['duo']) && (int) $SETTINGS['duo'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_duo_intro'); ?>\n                                        <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n                                            <?php echo langHdl('settings_duo_explanation'); ?>\n                                        </small>\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-5\">\n                                        <?php echo langHdl('admin_duo_ikey'); ?>\n                                    </div>\n                                    <div class=\"col-7\">\n                                        <input type=\"text\" class=\"form-control form-control-sm purify\" data-field=\"label\" id=\"duo_ikey\" value=\"<?php echo isset($SETTINGS['duo_ikey']) === true ? $SETTINGS['duo_ikey'] : ''; ?>\">\n                                    </div>\n                                </div>\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-5\">\n                                        <?php echo langHdl('admin_duo_skey'); ?>\n                                    </div>\n                                    <div class=\"col-7\">\n                                        <input type=\"text\" class=\"form-control form-control-sm purify\" data-field=\"label\" id=\"duo_skey\" value=\"<?php echo isset($SETTINGS['duo_skey']) === true ? $SETTINGS['duo_skey'] : ''; ?>\">\n                                    </div>\n                                </div>\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-5\">\n                                        <?php echo langHdl('admin_duo_host'); ?>\n                                    </div>\n                                    <div class=\"col-7\">\n                                        <input type=\"text\" class=\"form-control form-control-sm purify\" data-field=\"label\" id=\"duo_host\" value=\"<?php echo isset($SETTINGS['duo_host']) === true ? $SETTINGS['duo_host'] : ''; ?>\">\n                                    </div>\n                                </div>\n\n                                <div class=\"row mb-2\">\n                                    <button class=\"btn btn-primary\" id=\"button-duo-config-check\">\n                                        <?php echo langHdl('duo-run-config-check'); ?>\n                                    </button>\n                                </div>\n                            </div>\n\n                            <!--\n                            <div class=\"tab-pane\" id=\"yubico\" role=\"tabpanel\" aria-labelledby=\"yubico-tab\">\n                                <div class=\"row mb-2\">\n                                    <div class=\"col-9\">\n                                        <?php echo langHdl('admin_yubico_authentication_setting'); ?>\n                                        <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n                                            <?php echo langHdl('yubico_authentication_tip'); ?>\n                                        </small>\n                                    </div>\n                                    <div class=\"col-3\">\n                                        <div class=\"toggle toggle-modern\" id=\"yubico_authentication\" data-toggle-on=\"<?php echo isset($SETTINGS['yubico_authentication']) && (int) $SETTINGS['yubico_authentication'] === 1 ? 'true' : 'false'; ?>\"></div><input type=\"hidden\" id=\"yubico_authentication_input\" value=\"<?php echo isset($SETTINGS['yubico_authentication']) && (int) $SETTINGS['yubico_authentication'] === 1 ? '1' : '0'; ?>\">\n                                    </div>\n                                </div>\n                            </div>\n                                -->\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      admin.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\n?>\n\n<script type=\"text/javascript\">\n    var requestRunning = false;\n\n    /**\n     * ADMIN\n     */\n    // <- PREPARE TOGGLES\n    $('.toggle').toggles({\n        drag: true,\n        click: true,\n        text: {\n            on: '<?php echo langHdl('yes'); ?>',\n            off: '<?php echo langHdl('no'); ?>'\n        },\n        on: true,\n        animate: 250,\n        easing: 'swing',\n        width: 50,\n        height: 20,\n        type: 'compact'\n    });\n    $('.toggle').on('toggle', function(e, active) {\n        if (active) {\n            $(\"#\" + e.target.id + \"_input\").val(1);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", false);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").removeClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").removeClass('hidden');\n            }\n        } else {\n            $(\"#\" + e.target.id + \"_input\").val(0);\n            if (e.target.id == \"allow_print\") {\n                $(\"#roles_allowed_to_print_select\").prop(\"disabled\", true);\n            }\n            if (e.target.id == \"anyone_can_modify\") {\n                $(\"#form-item-row-modify\").addClass('hidden');\n            }\n            if (e.target.id == \"restricted_to\") {\n                $(\"#form-item-row-restricted\").addClass('hidden');\n            }\n        }\n\n        var data = {\n            \"field\": e.target.id,\n            \"value\": $(\"#\" + e.target.id + \"_input\").val(),\n        }\n        console.log(data)\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n            }\n        );\n    });\n    // .-> END. TOGGLES\n\n    // <- PREPARE SELECT2\n    $('.select2').select2({\n        language: '<?php echo isset($_SESSION['user_language_code']) === true ? $_SESSION['user_language_code'] : 'EN'; ?>'\n    });\n\n    /**\n     */\n    $(document).on('change', '.form-control-sm, .setting-ldap', function() {\n        var field = $(this).attr('id'),\n            value = $.isArray($(this).val()) === false ? $(this).val() : JSON.stringify($(this).val().map(Number));\n\n        if (field === '' || field === undefined || $(this).hasClass('no-save') === true) return false;\n        \n        // prevent launch of similar query in case of doubleclick\n        if (requestRunning === true) {\n            return false;\n        }\n\n        // Sanitize value\n        value = fieldDomPurifierWithWarning('#' + field, false, false, false, true);\n        if (value === false) {\n            return false;\n        }\n        $('#' + field).val(value);\n\n        requestRunning = true;\n\n        var data = {\n            \"field\": field,\n            \"value\": value,\n        }\n        console.log(data);\n\n        // Store in DB   \n        $.post(\n            \"sources/admin.queries.php\", {\n                type: \"save_option_change\",\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                // Handle server answer\n                try {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                } catch (e) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('server_answer_error') . '<br />' . langHdl('server_returned_data') . ':<br />'; ?>' + data.error,\n                        '', {\n                            closeButton: true,\n                            positionClass: 'toastr-top-right'\n                        }\n                    );\n                    return false;\n                }\n                console.log(data)\n                if (data.error === false) {\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('saved'); ?>',\n                        '', {\n                            timeOut: 2000,\n                            progressBar: true\n                        }\n                    );\n                }\n                requestRunning = false;\n            }\n        );\n    });\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      users.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n    // Initialization\n    var userDidAChange = false,\n        userTemporaryCode = '',\n        constVisibleOTP = false,\n        userClipboard,\n        ProcessInProgress = false,\n        debugJavascript = false;\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare tooltips\n    $('.infotip').tooltip();\n\n    // Prepare Select2\n    $('.select2').select2({\n        language: '<?php echo $_SESSION['user_language_code']; ?>'\n    });\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].flat-blue, input[type=\"radio\"].flat-blue').iCheck({\n        radioClass: 'iradio_flat-blue',\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n    $('#form-create-special-folder').iCheck('disable');\n\n    // Prevent submit on button\n    $('.btn-no-click')\n        .click(function(e) {\n            e.preventDefault();\n        });\n\n\n    //Launch the datatables pluggin\n    var oTable = $('#table-users').DataTable({\n        'paging': true,\n        'searching': true,\n        'order': [\n            [1, 'asc']\n        ],\n        'info': true,\n        'processing': false,\n        'serverSide': true,\n        'responsive': false,\n        'select': false,\n        'stateSave': true,\n        'autoWidth': true,\n        'ajax': {\n            url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/users.datatable.php',\n        },\n        'language': {\n            'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n        },\n        'columns': [{\n                'width': '80px',\n                className: 'details-control',\n                'render': function(data, type, row, meta) {\n                    return '<div class=\"group-btn btn-user-action\">' +\n                        '' +\n                        '<button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fas fa-cog\"></i>&nbsp;' +\n                        '</button>' +\n                        '<ul class=\"dropdown-menu\" role=\"menu\">' +\n                        ($(data).data('auth-type') === 'local' ?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-password\"><i class=\"fas fa-lock mr-2\"></i><?php echo langHdl('change_login_password'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"edit\"><i class=\"fas fa-pen mr-2\"></i><?php echo langHdl('edit'); ?></li>' +\n                        ($(data).data('otp-provided') !== \"\"?\n                            '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"new-otp\"><i class=\"fas fa-mask mr-2\"></i><?php echo langHdl('generate_new_otp'); ?></li>' :\n                            ''\n                        ) +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\" data-action=\"logs\"><i class=\"fas fa-newspaper mr-2\"></i><?php echo langHdl('see_logs'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-action=\"qrcode\"><i class=\"fas fa-qrcode mr-2\"></i><?php echo langHdl('user_ga_code'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"access-rights\"><i class=\"fas fa-sitemap mr-2\"></i><?php echo langHdl('user_folders_rights'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"disable-user\"><i class=\"fas fa-user-slash text-warning mr-2\" disabled></i><?php echo langHdl('disable_enable'); ?></li>' +\n                        '<li class=\"dropdown-item pointer tp-action\" data-id=\"' + $(data).data('id') + '\" data-fullname=\"' + $(data).data('fullname') + '\"data-action=\"delete-user\"><i class=\"fas fa-user-minus text-danger mr-2\" disabled></i><?php echo langHdl('delete'); ?></li>' +\n                        '</ul>' +\n                        '</div>';\n                }\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                className: 'dt-body-left'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            },\n            {\n                'width': '70px',\n                className: 'dt-body-center'\n            }\n        ],\n        'preDrawCallback': function() {\n            toastr.info(\n                '<?php echo langHdl('loading'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>',\n                ''\n            );\n        },\n        'drawCallback': function() {\n            // Tooltips\n            $('.infotip').tooltip();\n\n            // Remove progress toast\n            $('.toast').remove();\n        },\n        /*'createdRow': function( row, data, dataIndex ) {\n            var newClasses = $(data[6]).filter('#row-class-' + dataIndex).val();\n            $(row).addClass(newClasses);\n        }*/\n    });\n\n\n\n    $('#form-email').change(function() {\n        //extract domain from email\n        var domain = $(this).val().split('@')[1];\n        if (domain === undefined) {\n            return false;\n        }\n        domain = domain.toLowerCase()\n\n        //check if domain exists\n        $.post(\"sources/users.queries.php\", {\n                type: \"check_domain\",\n                domain: domain\n            },\n            function(data) {\n                data = $.parseJSON(data);\n                if (debugJavascript === true) console.log(data);\n\n                $(\"#new_folder_role_domain\").attr(\"disabled\", \"disabled\");\n                if (data.folder === 'not_exists' && data.role === 'not_exists' && domain !== '') {\n                    $('#form-create-special-folder').iCheck('enable');\n                    $('#form-special-folder').val(domain);\n                } else {\n                    $('#form-create-special-folder').iCheck('disable');\n                    $('#form-special-folder').val('');\n                }\n            }\n        );\n    });\n\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonClose', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        if (debugJavascript === true) console.log('Closing warning dialog')\n        toastr.remove();\n        $('#warningModal').modal('hide');\n\n        // Fianlize UI\n        // clear form fields\n        $(\".clear-me\").val('');\n        $('.select2').val('').change();\n        //$('#privilege-user').iCheck('check');\n        $('.form-check-input')\n            .iCheck('disable')\n            .iCheck('uncheck');\n\n        // refresh table content\n        oTable.ajax.reload();\n\n        // Show list of users\n        $('#row-form').addClass('hidden');\n        $('#row-list').removeClass('hidden');\n    });\n\n\n    /**\n     * \n     */\n    // Fires when user click on button SEND\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // check if uform is the one expected\n        if ($('#warningModal-button-user-pwd').length === 0) {\n            return false;\n        } \n        //console.log('send email for '+store.get('teampassUser').admin_new_user_temporary_encryption_code)\n        //console.log(store.get('teampassUser'))\n        //console.log(store.get('teampassApplication'))\n\n        showModalDialogBox(\n            '#warningModal',\n            '<i class=\"fas fa-user-shield fa-lg warning mr-2\"></i><?php echo langHdl('caution'); ?>',\n            '<?php echo langHdl('sending_email_message'); ?>',\n            '',\n            '',\n            true,\n            false,\n            false\n        );\n\n        // Prepare data\n        if (store.get('teampassApplication').formUserAction === \"add_new_user\") {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_new_user');?>',\n                'pre_replace' : {\n                    '#code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                    '#login#' : store.get('teampassUser').admin_new_user_login,\n                    '#password#' : store.get('teampassUser').admin_new_user_password,\n                }\n            }\n        } else {\n            var data = {\n                'receipt': $('#form-email').val(),\n                'subject': 'TEAMPASS - <?php echo langHdl('temporary_encryption_code');?>',\n                'body': '<?php echo langHdl('email_body_temporary_encryption_code');?>',\n                'pre_replace' : {\n                    '#enc_code#' : store.get('teampassUser').admin_new_user_temporary_encryption_code,\n                }\n            }\n        }\n\n        // Launch action\n        $.post(\n            'sources/main.queries.php', {\n                type: 'mail_me',\n                type_category: 'action_mail',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                //console.log(data);\n\n                if (data.error !== false) {\n                    $('#warningModal').modal('hide');\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Fianlize UI\n                    // clear form fields\n                    $(\".clear-me\").val('');\n                    $('.select2').val('').change();\n                    //$('#privilege-user').iCheck('check');\n                    $('.form-check-input')\n                        .iCheck('disable')\n                        .iCheck('uncheck');\n\n                    // Show list of users\n                    $('#row-form').addClass('hidden');\n                    $('#row-list').removeClass('hidden');\n\n                    // Hide dialogbox\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n\n                    // change the user status to ready to use\n                    data = {\n                        'user_id': store.get('teampassUser').admin_new_user_id,\n                    }\n\n                    $.post(\n                        'sources/main.queries.php', {\n                            type: 'user_is_ready',\n                            type_category: 'action_user',\n                            data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data) {\n                            if (debugJavascript === true) console.log('User has been created');\n\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Remove action from store\n                            if (debugJavascript === true) console.log('Clear Store variables')\n                            store.update(\n                                'teampassApplication',\n                                function(teampassApplication) {\n                                    teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                                }\n                            );\n                            store.update(\n                                'teampassUser',\n                                function(teampassUser) {\n                                    teampassUser.admin_new_user_password = '',\n                                    teampassUser.admin_new_user_temporary_encryption_code = '',\n                                    teampassUser.admin_new_user_login = '';\n                                }\n                            );\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * BUILD AND CHECK THE USER LOGIN\n     */\n    $('.build-login').change(function() {\n        // Build login only if it is empty\n        if ($(\"#form-login\").val() === '') {\n            //return false;\n        }\n        // Build login\n        if ($(this).attr('id') !== 'form-login') {\n            $(\"#form-login\").val(\n                $(\"#form-name\")\n                .val()\n                .toLowerCase()\n                .replace(/ /g, \"\") + \".\" + $(\"#form-lastname\").val().toLowerCase().replace(/ /g, \"\")\n            );\n        }\n\n        // Check if login exists\n        $.post(\n            'sources/users.queries.php', {\n                type: 'is_login_available',\n                login: $('#form-login').val(),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Show result\n                    if (data.login_exists === 0) {\n                        $('#form-login')\n                            .removeClass('is-invalid')\n                            .addClass('is-valid');\n                        $('#form-login-conform').val(true);\n                    } else {\n                        $('#form-login')\n                            .removeClass('is-valid')\n                            .addClass('is-invalid');\n                        $('#form-login-conform').val(false);\n                    }\n                }\n            }\n        );\n    });\n\n\n    function userTasksCreation(userId, userPassword, userTemporaryCode)\n    {\n        var data = {\n            user_id: userId,\n            user_pwd: userPassword,\n            user_code: userTemporaryCode,\n        }\n\n        // Do query\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"create_new_user_tasks\",\n                data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                if (debugJavascript === true)  {\n                    console.info(\"R\u00e9ception des donn\u00e9es :\")\n                    console.log(data);\n                }\n                \n                if (data.error === true) {\n                    // error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n\n                    dfd.reject();\n                } else {\n                    // show message to user\n                    $('#warningModal').modal('hide');\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 2000\n                        }\n                    );\n\n                    // Reload list of users\n                    oTable.ajax.reload();\n\n                    // Prepare UI\n                    $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                    $('#row-form').addClass('hidden');\n                }\n            }\n        );\n    }\n\n    /**\n     * \n     */\n    // Launch recursive action to encrypt the keys\n    function callRecursiveUserDataEncryption(\n        userId,\n        step,\n        start\n    ) {\n        var dfd = $.Deferred();\n        ProcessInProgress = true;\n        \n        var stepText = '';\n        if (debugJavascript === true) console.log('Performing '+step)\n\n        // Prepare progress string\n        if (step === 'step0') {\n            stepText = '<?php echo langHdl('inititialization'); ?>';\n        } else if (step === 'step1') {\n            stepText = '<?php echo langHdl('items'); ?>';\n        } else if (step === 'step2') {\n            stepText = '<?php echo langHdl('logs'); ?>';\n        } else if (step === 'step3') {\n            stepText = '<?php echo langHdl('suggestions'); ?>';\n        } else if (step === 'step4') {\n            stepText = '<?php echo langHdl('fields'); ?>';\n        } else if (step === 'step5') {\n            stepText = '<?php echo langHdl('files'); ?>';\n        } else if (step === 'step6') {\n            stepText = '<?php echo langHdl('personal_items'); ?>';\n        }\n\n        if (step !== 'finished') {\n            if (store.get('teampassUser').related_items_number !== null) {\n                $nbItemsToConvert = \" / \" + store.get('teampassUser').related_items_number;\n            } else {\n                $nbItemsToConvert = '';\n            }\n            // Inform user\n            $(\"#warningModalBody\").html('<b><?php echo langHdl('encryption_keys'); ?> - ' +\n                stepText + '</b> [' + start + ' - ' + (parseInt(start) + <?php echo NUMBER_ITEMS_IN_BATCH;?>) + ']<span id=\"warningModalBody_extra\">' + $nbItemsToConvert + '</span> ' +\n                '... <?php echo langHdl('please_wait'); ?><i class=\"fas fa-spinner fa-pulse ml-3 text-primary\"></i>');\n\n            // If expected, show the OPT to the admin\n            if (constVisibleOTP === true) {\n                toastr.info(\n                    '<?php echo langHdl('show_encryption_code_to_admin');?> <div><input class=\"form-control form-item-control flex-nowrap\" value=\"' + userTemporaryCode + '\" readonly></div>'\n                    + '<br /><button type=\"button\" class=\"btn clear\"><?php echo langHdl('close');?></button>',\n                    '<?php echo langHdl('information'); ?>',\n                    {\n                        extendedTimeOut: 0,\n                        timeOut: 0,\n                        tapToDismiss: false,\n                        newestOnTop: true,\n                        preventDuplicates: true,\n                        onHidden: (toast) => {\n                            // prevent against multiple occurances (#3305)\n                            constVisibleOTP = false;\n                        },\n                    }\n                );\n            }\n\n            var data = {\n                action: step,\n                start: start,\n                length: <?php echo NUMBER_ITEMS_IN_BATCH;?>,\n                user_id: userId,\n            }\n            if (debugJavascript === true) {\n                console.info(\"Envoi des donn\u00e9es :\")\n                console.log(data);\n            }\n\n            // Do query\n            $.post(\n                \"sources/main.queries.php\", {\n                    type: \"user_sharekeys_reencryption_next\",\n                    type_category: 'action_key',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                    if (debugJavascript === true) {\n                        console.info(\"R\u00e9ception des donn\u00e9es :\")\n                        console.log(data);\n                    }\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n\n                        dfd.reject();\n                    } else {\n                        // Prepare variables\n                        userId = data.userId;\n                        step = data.step;\n                        start = data.start;\n\n                        // Do recursive call until step = finished\n                        callRecursiveUserDataEncryption(\n                            userId,\n                            step,\n                            start\n                        ).done(function(response) {\n                            dfd.resolve(response);\n                        });\n                    }\n                }\n            );\n        } else {\n            // Ask user\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-envelope-open-text fa-lg warning mr-2\"></i><?php echo langHdl('information'); ?>',\n                '<i class=\"fas fa-info-circle mr-2\"></i><?php echo langHdl('send_user_password_by_email'); ?>'+\n                '<div class=\"row\">'+\n                    (store.get('teampassApplication').formUserAction === \"add_new_user\" ?\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_password'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><div><?php echo langHdl('user_password'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_password+'\"></div>'+\n                    '<div><?php echo langHdl('user_temporary_encryption_code'); ?><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    :\n                    '<div class=\"col-lg-2\"><button type=\"button\" class=\"btn btn-block btn-secondary mr-2\"  id=\"warningModal-button-user-pwd\"><?php echo langHdl('show_user_temporary_encryption_code'); ?></button></div>'+\n                    '<div class=\"col-lg-4 hidden\" id=\"warningModal-user-pwd\"><input class=\"form-control form-item-control\" value=\"'+store.get('teampassUser').admin_new_user_temporary_encryption_code+'\"></div></div>'\n                    )+\n                '</div>',\n                '<?php echo langHdl('send_by_email'); ?>',\n                '<?php echo langHdl('close'); ?>',\n                true,\n                false,\n                false\n            );\n            $('#warningModal').modal('show');\n\n            $(document).on('click', '#warningModal-button-user-pwd', function() {\n                $('#warningModal-user-pwd').removeClass('hidden');\n                $('#warningModal-button-user-pwd').prop( \"disabled\", true );\n                setTimeout(\n                    () => {\n                        $('#warningModal-user-pwd').addClass('hidden');\n                        $('#warningModal-button-user-pwd').prop( \"disabled\", false );\n                    },\n                    5000\n                );\n            });\n\n            ProcessInProgress = false;\n        }\n        return dfd.promise();\n    }\n\n\n\n    /**\n     * TOP MENU BUTTONS ACTIONS\n     */\n    $(document).on('click', '.tp-action', function() {\n        // Ensure that password strength indicator is reseted\n        //$('#form-password').focus();\n\n        // Hide if user is not admin\n        if (parseInt(store.get('teampassUser').user_admin) === 1 || parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n            $('.only-admin').removeClass('hidden');\n        } else {\n            $('.only-admin').addClass('hidden');\n        }\n\n        if ($(this).data('action') === 'new') {\n            // ADD NEW USER\n            $('#row-list').addClass('hidden');\n            $('#row-form, #group-create-special-folder, .not-for-admin').removeClass('hidden');\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else if (parseInt(store.get('teampassUser').user_can_manage_all_users) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n            } else {\n                $('#privilege-admin').iCheck('disable');\n                $('#privilege-hr').iCheck('disable');\n                $('#privilege-manager').iCheck('disable');\n            }\n\n            // Prepare checks\n            $('#privilege-user').iCheck('check');\n            $('#form-create-special-folder').iCheck('disable');\n\n            // Personal folder\n            if (store.get('teampassSettings').enable_pf_feature === '1') {\n                $('#form-create-personal-folder')\n                    .iCheck('enable')\n                    .iCheck('check');\n            } else {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n            \n            // MFA enabled\n            if (store.get('teampassSettings').duo === '1' || store.get('teampassSettings').google_authentication === '1') {\n                $('#form-create-mfa-enabled')\n                    .iCheck('enable')\n                    .iCheck('check');\n                $('#form-create-mfa-enabled-div').removeClass('hidden');\n            } else {\n                $('#form-create-mfa-enabled').iCheck('disable');\n                $('#form-create-mfa-enabled-div').addClass('hidden');\n            }\n\n            // What type of form? Edit or new user\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'add_new_user';\n                }\n            );\n\n        } else if ($(this).data('action') === 'edit') {\n            // SHow user\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // EDIT EXISTING USER\n            $('#row-list, #group-create-special-folder, #group-delete-user').addClass('hidden');\n            $('#row-form').removeClass('hidden');\n            $('.form-check-input').iCheck('enable');\n\n            // Personal folder\n            if (parseInt(store.get('teampassSettings').enable_pf_feature) === 0) {\n                $('#form-create-personal-folder').iCheck('disable');\n            }\n\n            // HIDE FROM FORM ELEMENTS ONLY FOR ADMIN\n            if (parseInt(store.get('teampassUser').user_admin) === 1) {\n                $('input[type=radio].only-admin').iCheck('enable');\n            } else {\n                $('input[type=radio].only-admin').iCheck('disable');\n            }\n\n            // What type of form? Edit or new user\n            var userID = $(this).data('id');\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = 'store_user_changes',\n                        teampassApplication.formUserId = userID; // Store user ID   \n                }\n            );\n\n            var data = {\n                'user_id': userID,\n            };\n\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get_user_info\",\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error === false) {\n                        // Prefil with user data\n                        $('#form-login').val(data.login);\n                        $('#form-email').val(data.email);\n                        $('#form-name').val(data.name);\n                        $('#form-lastname').val(data.lastname);\n                        $('#form-create-root-folder').iCheck(data.can_create_root_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-personal-folder').iCheck(data.personal_folder === 1 ? 'check' : 'uncheck');\n                        $('#form-create-mfa-enabled').iCheck(data.mfa_enabled === 1 ? 'check' : 'uncheck');\n\n                        // Case of user locked\n                        if (data.disabled === 1) {\n                            $('#group-delete-user').removeClass('hidden');\n                            $('#form-delete-user-confirm').iCheck('uncheck');\n                        }\n\n                        // Clear selects\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid')\n                            .find('option')\n                            .remove();\n\n                        var tmp = '';\n                        $(data.foldersAllow).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-auth').append(tmp);\n\n                        tmp = '';\n                        $(data.foldersForbid).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-forbid').append(tmp);\n\n                        tmp = '';\n                        $(data.managedby).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-managedby').append(tmp);\n\n                        tmp = '';\n                        $(data.function).each(function(i, value) {\n                            tmp += '<option value=\"' + value.id + '\" ' + value.selected + '>' + value.title + '</option>';\n                        });\n                        $('#form-roles').append(tmp);\n\n                        // Generate select2\n                        $('#form-roles, #form-managedby, #form-auth, #form-forbid').select2();\n\n                        // User's current privilege\n                        if (data.admin === 1) {\n                            $('#privilege-admin').iCheck('check');\n                            $('.not-for-admin').addClass('hidden');\n                        } else if (data.can_manage_all_users === 1) {\n                            $('#privilege-hr').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.gestionnaire === 1) {\n                            $('#privilege-manager').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else if (data.read_only === 1) {\n                            $('#privilege-ro').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        } else {\n                            $('#privilege-user').iCheck('check');\n                            $('.not-for-admin').removeClass('hidden');\n                        }\n\n                        $('input:radio[name=privilege]').on('ifChanged', function() {\n                            userDidAChange = true;\n                            $(this).data('change-ongoing', true);\n                        });\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    } else {\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                        return false;\n                    }\n                }\n            );\n        } else if ($(this).data('action') === 'submit') {\n            // Loop on all changed fields\n            var arrayQuery = [];\n            $('.form-control').each(function(i, obj) {\n                if ($(this).data('change-ongoing') === true\n                    //|| $('#form-password').val() !== 'do_not_change'\n                ) {\n                    arrayQuery.push({\n                        'field': $(this).prop('id'),\n                        'value': $(this).val(),\n                    });\n                }\n            });\n\n            if (arrayQuery.length > 0) {\n                // Now save\n                // get lists\n                var forbidFld = [],\n                    authFld = [],\n                    groups = [];\n                $(\"#form-roles option:selected\").each(function() {\n                    groups.push($(this).val())\n                });\n                $(\"#form-auth option:selected\").each(function() {\n                    authFld.push($(this).val())\n                });\n                $(\"#form-forbid option:selected\").each(function() {\n                    forbidFld.push($(this).val())\n                });\n\n                // Mandatory?\n                var validated = true,\n                    validEmailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,15})+$/;\n                $('.required').each(function(i, obj) {\n                    if ($(this).val() === '' && $(this).hasClass('select2') === false) {\n                        $(this).addClass('is-invalid');\n                        validated = false;\n                    } else if ($('#' + $(this).attr('id') + ' :selected').length === 0 && $(this).hasClass('select2') === true) {\n                        $('#' + $(this).attr('id') + ' + span').addClass('is-invalid');\n                        validated = false;\n                    } else if ($(this).hasClass('validate-email') === true) {\n                        if ($(this).val().match(validEmailRegex)) {\n                            $(this).removeClass('is-invalid');\n                        } else {\n                            $(this).addClass('is-invalid');\n                            validated = false;\n                        }\n                    } else {\n                        $(this).removeClass('is-invalid');\n                        $('#' + $(this).attr('id') + ' + span').removeClass('is-invalid');\n                    }\n                });\n                if (validated === false) {\n                    toastr.remove();\n                    toastr.error(\n                        '<?php echo langHdl('fields_with_mandatory_information_are_missing'); ?>',\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                    return false;\n                }\n\n                // SHow user\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n                // Get number of items to treat\n                data_tmp = {\n                    'user_id': <?php echo $_SESSION['user_id']; ?>,\n                }\n                $.post(\n                    'sources/main.queries.php', {\n                        type: 'get_number_of_items_to_treat',\n                        type_category: 'action_system',\n                        data: prepareExchangedData(JSON.stringify(data_tmp), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data_tmp) {\n                        data_tmp = prepareExchangedData(data_tmp, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                        store.update(\n                            'teampassUser',\n                            function(teampassUser) {\n                                teampassUser.related_items_number = data_tmp.nbItems;\n                            }\n                        );\n                    }\n                );\n\n                // Sanitize text fields\n                purifyRes = fieldDomPurifierLoop('#form-user .purify');\n                if (purifyRes.purifyStop === true) {\n                    // if purify failed, stop\n                    return false;\n                }\n\n                //prepare data\n                var data = {\n                    'user_id': store.get('teampassApplication').formUserId,\n                    'login': purifyRes.arrFields['login'],\n                    'name': purifyRes.arrFields['name'],\n                    'lastname': purifyRes.arrFields['lastname'],\n                    'email': purifyRes.arrFields['email'],\n                    'admin': $('#privilege-admin').prop('checked'),\n                    'manager': $('#privilege-manager').prop('checked'),\n                    'hr': $('#privilege-hr').prop('checked'),\n                    'read_only': $('#privilege-ro').prop('checked'),\n                    'personal_folder': $('#form-create-personal-folder').prop('checked'),\n                    'new_folder_role_domain': $('#form-create-special-folder').prop('checked'),\n                    'domain': $('#form-special-folder').val(),\n                    'isAdministratedByRole': $('#form-managedby').val(),\n                    'groups': groups,\n                    'allowed_flds': authFld,\n                    'forbidden_flds': forbidFld,\n                    'action_on_user': 'update',\n                    'form-create-root-folder': $('#form-create-root-folder').prop('checked'),\n                    'form-user-disabled': $('#form-user-disabled').prop('checked'),\n                    'mfa_enabled': $('#form-create-mfa-enabled').prop('checked'),\n                };\n                if (debugJavascript === true) {\n                    console.log(data);\n                    console.log(store.get('teampassApplication').formUserAction);\n                }                \n                var formUserId = store.get('teampassApplication').formUserId;\n                \n                $.post(\n                    'sources/users.queries.php', {\n                        type: store.get('teampassApplication').formUserAction,\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: \"<?php echo $_SESSION['key']; ?>\"\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else if (store.get('teampassApplication').formUserAction === 'add_new_user') {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('new_user_info_by_mail'); ?>',\n                                '', {\n                                    timeOut: 4000\n                                }\n                            );\n                            // ---\n                        } else {\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 2000\n                                }\n                            );\n                        }\n\n                        // Reload list of users\n                        oTable.ajax.reload();\n\n                        // Prepare UI\n                        $('#row-list, #group-create-special-folder, #group-delete-user').removeClass('hidden');\n                        $('#row-form').addClass('hidden');\n\n                        // Clean form\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input').iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n                    }\n                )\n            } else {\n                // No change performed on form\n                toastr.remove();\n                toastr.success(\n                    '<?php echo langHdl('no_change_performed'); ?>',\n                    '', {\n                        timeOut: 1000\n                    }\n                );\n            }\n        } else if ($(this).data('action') === 'cancel') {\n            $('.clear-me').val('');\n            $('.select2').val('').change();\n            $('.extra-form, #row-folders').addClass('hidden');\n            $('#row-list').removeClass('hidden');\n\n            // Prepare checks\n            $('.form-check-input').iCheck('uncheck');\n\n            // Remove action from store\n            store.update(\n                'teampassApplication',\n                function(teampassApplication) {\n                    teampassApplication.formUserAction = '',\n                        teampassApplication.formUserId = '';\n                }\n            );\n        } else if ($(this).data('action') === 'qrcode') {\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // This sends a GA Code by email to user\n            data = {\n                'user_id': $(this).data('id'),\n                'demand_origin': 'users_management_list',\n                'send_email': 1\n            }\n\n            $.post(\n                'sources/main.queries.php', {\n                    type: 'ga_generate_qr',\n                    type_category: 'action_user',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('share_sent_ok'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            // ---\n        } else if ($(this).data('action') === 'new-password') {\n            var userId = $(this).data('id');\n            // Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': userId,\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    \n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {                 \n                            // HIde\n                            $('.content-header, .content').addClass('hidden');\n\n                            // PRepare info\n                            $('#dialog-admin-change-user-password-info')\n                                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_password_info'); ?>');\n                            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n                            // SHow form\n                            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n                            $('#admin_change_user_password_target_user').val(userId);\n                        }\n                    }\n                }\n            );\n\n            // ---\n        } else if ($(this).data('action') === 'new-enc-code') {\n            // HIde\n            $('.content-header, .content').addClass('hidden');\n\n            // PRepare info\n            $('#dialog-admin-change-user-password-info')\n                .html('<i class=\"icon fas fa-info mr-2\"></i><?php echo langHdl('admin_change_user_encryption_code_info'); ?>');\n            $(\"#dialog-admin-change-user-password-progress\").html('<?php echo langHdl('provide_current_psk_and_click_launch'); ?>');\n\n            // SHow form\n            $('#dialog-admin-change-user-password').removeClass('hidden');\n\n            $('#admin_change_user_encryption_code_target_user').val($(this).data('id'));\n            // ---\n        } else if ($(this).data('action') === 'logs') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-logs').removeClass('hidden');\n            $('#row-logs-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            //Launch the datatables pluggin\n            var oTableLogs = $('#table-logs').DataTable({\n                'destroy': true,\n                'paging': true,\n                'searching': true,\n                'order': [\n                    [1, 'asc']\n                ],\n                'info': true,\n                'processing': false,\n                'serverSide': true,\n                'responsive': true,\n                'select': true,\n                'stateSave': false,\n                'retrieve': false,\n                'autoWidth': true,\n                'ajax': {\n                    url: '<?php echo $SETTINGS['cpassman_url']; ?>/sources/user.logs.datatables.php',\n                    data: function(d) {\n                        d.userId = userID;\n                    }\n                },\n                'language': {\n                    'url': '<?php echo $SETTINGS['cpassman_url']; ?>/includes/language/datatables.<?php echo $_SESSION['user']['user_language']; ?>.txt'\n                },\n                'columns': [{\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    },\n                    {\n                        className: 'dt-body-left'\n                    }\n                ],\n                'preDrawCallback': function() {\n                    toastr.remove();\n                    toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                },\n                'drawCallback': function() {\n                    // Tooltips\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                },\n            });\n\n\n        } else if ($(this).data('action') === 'access-rights') {\n            $('#row-list, #row-logs').addClass('hidden');\n            $('#row-folders').removeClass('hidden');\n            $('#row-folders-title').text(\n                $(this).data('fullname')\n            )\n            var userID = $(this).data('id');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            $('#row-folders-results').html('');\n\n            // Send query\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'user_folders_rights',\n                    user_id: userID,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Show table\n                        $('#row-folders-results').html(data.html);\n\n                        // Prepare tooltips\n                        $('.infotip').tooltip();\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'disable-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('user_disable_status'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-disabled\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {                \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                    'disabled_status': $('#user-disabled').prop('checked') === true ? 1 : 0,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'manage_user_disable_status',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // Show icon or not\n                            if ($('#user-disabled').prop('checked') === true) {\n                                $('#user-login-'+userID).before('<i class=\"fas fa-user-slash infotip text-danger mr-2\" title=\"<?php echo langHdl('account_is_locked');?>\" id=\"user-disable-'+userID+'\"></i>');\n                            } else {\n                                $('#user-disable-'+userID).remove();\n                            }\n                            \n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'delete-user') {\n            var userID = $(this).data('id');\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                '<div class=\"form-group\">'+\n                    '<span class=\"mr-3\"><?php echo langHdl('by_clicking_this_checkbox_confirm_user_deletion'); ?></span>'+\n                    '<input type=\"checkbox\" class=\"form-check-input form-control flat-blue\" id=\"user-to-delete\">' +\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $('input[type=\"checkbox\"].flat-blue').iCheck({\n                checkboxClass: 'icheckbox_flat-blue',\n            });\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#user-to-delete').prop('checked') === false) {\n                    $('#warningModal').modal('hide');\n                    return false;\n                }             \n\n                // Show spinner\n                toastr.remove();\n                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n                $('#warningModal').modal('hide');\n\n                var data = {\n                    'user_id': userID,\n                };\n\n                // Send query\n                $.post(\n                    'sources/users.queries.php', {\n                        type: 'delete_user',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error !== false) {\n                            // Show error\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            // refresh table content\n                            oTable.ajax.reload();\n\n                            // Prepare tooltips\n                            $('.infotip').tooltip();\n                            // Inform user\n                            toastr.remove();\n                            toastr.success(\n                                '<?php echo langHdl('done'); ?>',\n                                '', {\n                                    timeOut: 1000\n                                }\n                            );\n                        }\n                    }\n                );\n            });\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'refresh') {\n            $('.form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n            oTable.ajax.reload();\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'propagate') {\n            $('#row-list, #row-folders').addClass('hidden');\n            $('#row-propagate').removeClass('hidden');\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Load list of users\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'get_list_of_users_for_sharing',\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    if (debugJavascript === true) console.log(data);\n\n                    if (data.error !== false) {\n                        // Show error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Build select\n                        var html = '';\n                        $.each(data.values, function(i, value) {\n                            html += '<option value=\"' + value.id + '\" data-groups=\"' + value.groups + '\" data-managed-by=\"' + value.managedBy + '\" data-folders-allowed=\"' + value.foldersAllowed + '\" data-folders-forbidden=\"' + value.foldersForbidden + '\" data-groups-id=\"' + value.groupIds + '\" data-managed-by-id=\"' + value.managedById + '\" data-folders-allowed-id=\"' + value.foldersAllowedIds + '\" data-folders-forbidden-id=\"' + value.foldersForbiddenIds + '\" data-admin=\"' + value.admin + '\" data-manager=\"' + value.manager + '\" data-hr=\"' + value.hr + '\" data-read-only=\"' + value.readOnly + '\" data-personal-folder=\"' + value.personalFolder + '\" data-root-folder=\"' + value.rootFolder + '\">' + value.name + ' ' + value.lastname + ' [' + value.login + ']</option>';\n                        });\n\n                        $('#propagate-from, #propagate-to')\n                            .find('option')\n                            .remove()\n                            .end()\n                            .append(html)\n                            .change();\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'do-propagate') {\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n\n            // destination users\n            var userIds = $('#propagate-to').val();\n\n            if (userIds.length === 0) return false;\n\n            // Prepare data\n            var data = {\n                source_id: $(\"#propagate-from option:selected\").val(),\n                destination_ids: userIds,\n                user_functions: $(\"#propagate-from option:selected\").data('groups-id'),\n                user_managedby: $(\"#propagate-from option:selected\").data('managed-by-id'),\n                user_fldallowed: $(\"#propagate-from option:selected\").data('folders-allowed-id'),\n                user_fldforbid: $(\"#propagate-from option:selected\").data('folders-forbidden-id'),\n                user_admin: $(\"#propagate-from option:selected\").data('admin'),\n                user_manager: $(\"#propagate-from option:selected\").data('manager'),\n                user_hr: $(\"#propagate-from option:selected\").data('hr'),\n                user_readonly: $(\"#propagate-from option:selected\").data('read-only'),\n                user_personalfolder: $(\"#propagate-from option:selected\").data('personal-folder'),\n                user_rootfolder: $(\"#propagate-from option:selected\").data('root-folder'),\n            };\n            if (debugJavascript === true) console.log(data);\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"update_users_rights_sharing\",\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: \"<?php echo $_SESSION['key']; ?>\"\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        $('.clear-me').val('');\n                        $('.select2').val('').change();\n                        $('.extra-form, #row-folders').addClass('hidden');\n                        $('#row-list').removeClass('hidden');\n\n                        // Prepare checks\n                        $('.form-check-input')\n                            .iCheck('disable')\n                            .iCheck('uncheck');\n\n                        // Remove action from store\n                        store.update(\n                            'teampassApplication',\n                            function(teampassApplication) {\n                                teampassApplication.formUserAction = '',\n                                    teampassApplication.formUserId = '';\n                            }\n                        );\n\n                        // Inform user\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-sync') {\n            $('.form').addClass('hidden');\n            $('#row-ldap').removeClass('hidden');\n\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close') {\n            $('.extra-form').addClass('hidden');\n            $('#users-list').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-existing-users') {\n            refreshListUsersLDAP();\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'ldap-add-role') {\n            $('#ldap-users-table').addClass('hidden');\n            $('#ldap-new-role').removeClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'close-new-role') {\n            $('#ldap-users-table').removeClass('hidden');\n            $('#ldap-new-role').addClass('hidden');\n\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'add-new-role') {\n            if ($('#ldap-new-role-selection').val() === '') {\n                // ERROR\n                toastr.remove();\n                toastr.error(\n                    '<?php echo langHdl('error_field_is_mandatory'); ?>',\n                    '<?php echo langHdl('caution'); ?>', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n            } else {\n                // Add new role to Teampass\n\n                // Prepare data\n                var data = {\n                    'label': simplePurifier($('#ldap-new-role-selection').val()),\n                    'complexity': $('#ldap-new-role-complexity').val(),\n                    'allowEdit': 0,\n                    'action': 'add_role',\n                    'folderId' : -1,\n                }\n\n                if (debugJavascript === true) console.log(data);\n                \n                $.post(\n                    'sources/roles.queries.php', {\n                        type: 'change_role_definition',\n                        data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                        key: '<?php echo $_SESSION['key']; ?>'\n                    },\n                    function(data) {\n                        //decrypt data\n                        data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                        if (debugJavascript === true) console.log(data);\n\n                        if (data.error === true) {\n                            // ERROR\n                            toastr.remove();\n                            toastr.error(\n                                data.message,\n                                '<?php echo langHdl('caution'); ?>', {\n                                    timeOut: 5000,\n                                    progressBar: true\n                                }\n                            );\n                        } else {\n                            $('#ldap-new-role-selection').val('');\n                            $('#ldap-users-table').removeClass('hidden');\n                            $('#row-ldap-body').html('');\n                            $('#ldap-new-role').addClass('hidden');\n\n                            refreshListUsersLDAP();\n                        }\n                    }\n                );\n\n            }\n\n            /**/\n            //\n            // --- END\n            //\n        } else if ($(this).data('action') === 'new-otp') {// Check if no tasks on-going for this user\n            data_to_send = {\n                'user_id': $(this).data('id'),\n            }\n            $.post(\n                \"sources/users.queries.php\", {\n                    type: \"get-user-infos\",\n                    data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // error\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('caution'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // Continue   \n                        if (data.user_infos.ongoing_process_id !== null) {  \n                            toastr.remove();\n                            toastr.warning(\n                                data.message,\n                                '<?php echo langHdl('user_encryption_ongoing'); ?>', {\n                                    timeOut: 10000,\n                                    progressBar: true\n                                }\n                            ); \n                        } else {  \n                            var userID = data.user_infos.id;\n                            showModalDialogBox(\n                                '#warningModal',\n                                '<i class=\"fas fa-exclamation-circle fa-lg warning mr-2\"></i><?php echo langHdl('your_attention_please'); ?>',\n                                '<div class=\"form-group\">'+\n                                    '<span class=\"mr-3\"><?php echo langHdl('generate_new_otp_informations'); ?></span>'+\n                                '</div>',\n                                '<?php echo langHdl('perform'); ?>',\n                                '<?php echo langHdl('cancel'); ?>'\n                            );\n                            \n                            $(document).on('click', '#warningModalButtonAction', function() {                \n                                // prepare user\n\n                                // Show spinner\n                                toastr.remove();\n                                toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n                                // generate keys\n                                generateUserKeys(\n                                    {\n                                        'user_id': userID,\n                                    },\n                                    ''\n                                );\n                            });\n                        }\n                    }\n                }\n            );\n\n            /**/\n            //\n            // --- END\n            //\n        }\n    });\n\n\n    /**\n     * Permit to show some info while selecting a  User\n     */\n    $(document).on('change', '#propagate-from', function() {\n        var selectedOption = $(this).find('option:selected');\n        $('#propagate-user-roles').html($(selectedOption).data('groups'));\n        $('#propagate-user-managedby').html($(selectedOption).data('managed-by'));\n        $('#propagate-user-allowed').html($(selectedOption).data('folders-allowed'));\n        $('#propagate-user-fordidden').html($(selectedOption).data('folders-forbidden'));\n    });\n\n\n    /**\n     * TRACK CHANGES IN FORM\n     */\n    $('#form-user .track-change')\n        .on('change', function() {\n            if ($(this).val() !== null && $(this).val().length > 0) {\n                userDidAChange = true;\n                $(this).data('change-ongoing', true);\n            } else {\n                $(this).data('change-ongoing', false);\n            }\n        })\n        .on('ifChecked', function() {\n            userDidAChange = true;\n            $(this).data('change-ongoing', true);\n        });\n\n    //************************************************************* */\n\n\n\n    /**\n     * EDIT EACH ROW\n     */\n    var currentText = '',\n        item = '',\n        initialColumnWidth = '',\n        actionOnGoing = false,\n        field = '',\n        columnId = '',\n        tableDef = {\n            'login': {\n                'column': 2\n            },\n            'name': {\n                'column': 3\n            },\n            'lastname': {\n                'column': 4\n            },\n            'isAdministratedByRole': {\n                'column': 5\n            },\n            'fonction_id': {\n                'column': 6\n            }\n        };\n\n    /**\n     * EDIT TEXT INPUT\n     */\n    $(document).on('click', '.edit-text', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n\n        $(this)\n            .addClass('hidden')\n            .after('<input type=\"text\" class=\"form-control form-item-control remove-me save-me\" value=\"' + currentText + '\">');\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n        if (debugJavascript === true) console.log('Width ' + initialColumnWidth)\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n    });\n\n    /**\n     * EDIT SELECT LIST\n     */\n    $(document).on('click', '.edit-select', function() {\n        currentText = $(this).text();\n        item = $(this);\n        field = $(this).data('field');\n        columnId = tableDef[field].column;\n        if (debugJavascript === true) console.log(columnId)\n\n        $(this).addClass('hidden');\n\n        // Show select\n        $(\"#select-managedBy\")\n            .insertAfter('#' + $(this).attr('id'))\n            .after('<i class=\"fa fa-close text-danger pointer temp-button mr-3\" id=\"select-managedBy-close\"></i>');\n        $('#select-managedBy option[value=\"' + $(this).data('value') + '\"]').prop('selected', true);\n\n        // Store current width and change it\n        initialColumnWidth = $('#table-users thead th:eq(' + (columnId - 1) + ')').width();\n        $('#table-users thead th:eq(' + (columnId - 1) + ')').width('300');\n\n        // Launch save on focus lost\n        $('.save-me')\n            .focus()\n            .focusout(function() {\n                if (actionOnGoing === false) {\n                    actionOnGoing = true;\n                    saveChange(item, currentText, $(this), field);\n                }\n            });\n\n        $('#select-managedBy-close').click(function() {\n            $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth);\n            $('.edit-select').removeClass('hidden');\n            $('.tmp-loader, .temp-button').remove();\n        });\n    });\n\n\n    /**\n     * MANAGE USER KEYS PRESSED\n     */\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            // Escape Key\n            $('.remove-me, .tmp-loader').remove();\n            $('.edit-text').removeClass('hidden');\n        }\n        if (e.keyCode === 13 && actionOnGoing === false) {\n            // Enter key\n            actionOnGoing = true;\n            saveChange(item, currentText, $(':focus'), field);\n        }\n    });\n\n\n    function saveChange(item, currentText, change, field) {\n        if (change.val() !== currentText) {\n            change\n                .after('<i class=\"fa fa-refresh fa-spin fa-fw tmp-loader\"></i>');\n\n            // prepare data\n            var data = {\n                'user_id': item.data('id'),\n                'field': field,\n                'value': change.val()\n            };\n            \n            // Save\n            $.post(\n                'sources/users.queries.php', {\n                    type: 'save_user_change',\n                    data: prepareExchangedData(JSON.stringify(data), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    if (change.is('input') === true) {\n                        change.remove();\n                        $('.tmp-loader').remove();\n                        item\n                            .text(change.val())\n                            .removeClass('hidden');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                    } else if (change.is('select') === true) {\n                        $(\"#select-managedBy\").detach().appendTo('#hidden-managedBy');\n                        $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n                        $('.tmp-loader, .temp-button').remove();\n\n                        // Show change\n                        if (debugJavascript === true) console.log(change)\n                        item\n                            .html(change.text())\n                            .attr('data-value', change.val())\n                            .removeClass('hidden');\n                    }\n                    actionOnGoing = false;\n                },\n                'json'\n            );\n        } else {\n            change.remove();\n            $('.tmp-loader').remove();\n            item\n                .text(change.val())\n                .removeClass('hidden');\n            $('#table-users thead th:eq(' + (columnId - 1) + ')').width(initialColumnWidth)\n        }\n    }\n\n    /**\n     * Refreshing list of users from LDAP\n     *\n     * @return void\n     */\n    function refreshListUsersLDAP() {\n        // FIND ALL USERS IN LDAP\n        //toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        $('#row-ldap-body')\n            .addClass('overlay')\n            .html('');\n\n        $.post(\n            \"sources/users.queries.php\", {\n                type: \"get_list_of_users_in_ldap\",\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data)\n\n                if (data.error === true) {\n                    // ERROR\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // loop on users list\n                    var html = '',\n                        groupsNumber = 0,\n                        userLogin,\n                        group;\n                    var entry;\n                    $.each(data.entries, function(i, entry) {\n                        userLogin = entry[store.get('teampassSettings').ldap_user_attribute] !== undefined ? entry[store.get('teampassSettings').ldap_user_attribute][0] : '';\n                        // CHeck if not empty\n                        if (userLogin !== '') {\n                            html += '<tr>' +\n                                '<td>' + userLogin +\n                                '</td>' +\n                                '<td>' +\n                                '<i class=\"fas fa-info-circle ml-3 infotip text-info pointer text-center\" data-toggle=\"tooltip\" data-html=\"true\" title=\"' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-user mr-1\\'></i>' +\n                                (entry.displayname !== undefined ? '' + entry.displayname[0] + '' : '') + '</p>' +\n                                '<p class=\\'text-left\\'><i class=\\'fas fa-envelope mr-1\\'></i>' + (entry.mail !== undefined ? '' + entry.mail[0] + '' : '') + '</p>' +\n                                '\"></i>' +\n                                '</td><td>' +\n                                (entry.userInTeampass === 0 ? '' :\n                                '<i class=\"fas ' + (entry.userAuthType !== undefined && entry.userAuthType === 'ldap' ? 'fa-toggle-on text-info ' : 'fa-toggle-off ') + 'mr-1 text-center pointer action-change-ldap-synchronization\" data-user-id=\"' + entry.userInTeampass + '\" data-user-auth-type=\"' + entry.userAuthType + '\"></i>') +\n                                '</td><td>';\n                            groupsNumber = 0;\n                            $.each(entry.memberof, function(j, group) {\n                                var regex = String(group).replace('CN=', 'cn').match(/(cn=)(.*?),/g);\n                                if (regex !== null) {\n                                    group = regex[0].replace('cn=', '').replace(',', '');\n                                    // Check if this user has this group in Teampass\n                                    if (entry.teampass !== undefined && entry.ldap_groups.filter(p => p.title === group).length > 0) {\n                                        html += group + '<i class=\"far fa-check-circle text-success ml-2 infotip\" title=\"<?php echo langHdl('user_has_this_role_in_teampass'); ?>\"></i><br>';\n                                    } else {\n                                        // Check if this group exists in Teampass and propose to add it\n                                        tmp = data.teampass_groups.filter(p => p.title === group);\n                                        if (tmp.length > 0 && entry.userInTeampass === 0) {\n                                            html += group + '<i class=\"fas fa-user-graduate text-primary ml-2 pointer infotip action-add-role-to-user\" title=\"<?php echo langHdl('add_user_to_role'); ?>\" data-user-id=\"' + entry.userInTeampass + '\" data-role-id=\"' + tmp[0].id + '\"></i><br>';\n                                        } else {\n                                            html += group + '<br>';\n                                        }\n                                    }\n                                    groupsNumber++;\n                                }\n                            });\n                            html += '</td><td>';\n                            // Action icons\n                            html += (entry.userInTeampass === 0 ? '<i class=\"fas fa-user-plus text-warning ml-2 infotip pointer add-user-icon\" title=\"<?php echo langHdl('add_user_in_teampass'); ?>\" data-user-login=\"' + userLogin + '\" data-user-email=\"' + (entry.mail !== undefined ? entry.mail[0] : '') + '\" data-user-name=\"' + (entry.givenname !== undefined ? entry.givenname[0] : '') + '\" data-user-lastname=\"' + (entry.sn !== undefined ? entry.sn[0] : '') + '\"></i>' : '');\n\n                            // Only of not admin\n                            /*if (userLogin !== 'admin') {\n                                html += (entry.teampass.auth === 'ldap' ? '<i class=\"fas fa-link text-success ml-2 infotip pointer auth-local\" title=\"<?php echo langHdl('ldap_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>' : '<i class=\"fas fa-unlink text-orange ml-2 infotip pointer auth-ldap\" title=\"<?php echo langHdl('local_user_password_is_used_for_authentication'); ?>\" data-user-id=\"' + entry.teampass.id + '\"></i>');\n                            }*/\n\n                            html += '</td></tr>';\n                        }\n                    });\n\n                    $('#row-ldap-body').html(html);\n\n                    $('#row-ldap-body').removeClass('overlay');\n\n                    $('.infotip').tooltip('update');\n\n                    // Build list box of new roles that could be created\n                    $('#ldap-new-role-selection')\n                        .empty()\n                        .append('<option value=\"\">--- <?php echo langHdl('select'); ?> ---</option>');\n                    $.each(data.ldap_groups, function(i, group) {\n                        tmp = data.teampass_groups.filter(p => p.title === group);\n                        if (tmp.length === 0) {\n                            $('#ldap-new-role-selection').append(\n                                '<option value=\"' + group + '\">' + group + '</option>'\n                            );\n                        }\n                    });\n\n                    // Inform user\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                    $('.close-toastr-progress').closest('.toast').remove();\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to add a role to a Teampass user\n     *\n     * @return void\n     */\n    function addRoleToUser() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $('.selected-role').data('user-id'),\n            'field': 'fonction_id',\n            'value': $('.selected-role').data('role-id'),\n            'context': 'add_one_role_to_user'\n        };\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon\n                    $('.selected-role')\n                        .removeClass('fas fa-user-graduate text-primary pointer action-add-role-to-user')\n                        .addClass('far fa-check-circle text-success')\n                        .prop('title', '<?php echo langHdl('user_has_this_role_in_teampass'); ?>');\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n                $('.selected-role').removeClass('selected-role');\n            }\n        );\n    }\n\n    $(document).on('click', '.action-add-role-to-user', function() {\n        $(this).addClass('selected-role');\n\n        toastr.warning(\n            '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"addRoleToUser()\"><?php echo langHdl('please_confirm'); ?></button>',\n            '<?php echo langHdl('info'); ?>', {\n                positionClass: 'toast-top-center',\n                closeButton: true\n            }\n        );\n    });\n\n    // Enable/disable ldap sync on user\n    $(document).on('click', '.action-change-ldap-synchronization', function() {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'user_id': $(this).data('user-id'),\n            'field': 'auth_type',\n            'value': $(this).hasClass('fa-toggle-off') === true ? 'ldap' : 'local',\n            'context': ''\n        },\n        selectedIcon = $(this);\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'save_user_change',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // CHange icon format\n                    if (selectedIcon.hasClass('fa-toggle-off') === true) {\n                        selectedIcon\n                            .removeClass('fa-toggle-off')\n                            .addClass('fa-toggle-on text-info')\n                            .prop('data-user-auth-type', 'ldap');\n                    } else {\n                        selectedIcon\n                            .removeClass('fa-toggle-on text-info')\n                            .addClass('fa-toggle-off')\n                            .prop('data-user-auth-type', 'local');\n                    }\n\n                    $('.infotip').tooltip();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    });\n\n\n    /**\n     * Permits to add an AD user in Teampass\n     *\n     * @return void\n     */\n    function addUserInTeampass() {\n        $('#warningModal').modal('hide');\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i><span class=\"close-toastr-progress\"></span>');\n\n        // what roles\n        var roles = [];\n        $(\"#ldap-user-roles option:selected\").each(function() {\n            roles.push($(this).val())\n        });\n\n        // Sanitize text fields\n        purifyRes = fieldDomPurifierLoop('#form-user .purify');\n        if (purifyRes.purifyStop === true) {\n            // if purify failed, stop\n            return false;\n        }\n\n        // prepare data\n        var data = {\n            'login': simplePurifier($('.selected-user').data('user-login')),\n            'name': simplePurifier($('.selected-user').data('user-name') === '' ? $('#ldap-user-name').val() : $('.selected-user').data('user-name')),\n            'lastname': simplePurifier($('.selected-user').data('user-lastname')),\n            'email': simplePurifier($('.selected-user').data('user-email')),\n            'roles' : roles,\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'add_user_from_ldap',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n                userTemporaryCode = data.user_code;\n                constVisibleOTP = data.visible_otp;\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {                    \n                    generateUserKeys(data, userTemporaryCode);\n                }\n            }\n        );\n    }\n\n\n    function generateUserKeys(data, userTemporaryCode)\n    {\n        // manage keys encryption for new user\n        // Case where we need to encrypt new keys for the user\n        // Process is: \n        // 2/ clear all keys for this user\n        // 3/ generate keys for this user with encryption key\n\n        \n        // If expected to create new encryption key\n        var parameters = {\n            'user_id': data.user_id,\n        };\n\n        if (debugJavascript === true) {\n            console.log(parameters);\n            console.info('Prepare TASK for new user encryption keys')\n        }\n        $.post(\n            'sources/main.queries.php', {\n                type: 'generate_temporary_encryption_key',\n                type_category: 'action_key',\n                data: prepareExchangedData(JSON.stringify(parameters), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data_otc) {\n                data_otc = prepareExchangedData(data_otc, 'decode', '<?php echo $_SESSION['key']; ?>');\n\n                if (data_otc.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data_otc.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // If expected, show the OPT to the admin\n                    if (data_otc.visible_otp === true) {\n                        showModalDialogBox(\n                            '#warningModal',\n                            '<i class=\"fa-solid fa-user-secret mr-2\"></i><<?php echo langHdl('your_attention_is_required'); ?>',\n                            '<?php echo langHdl('show_encryption_code_to_admin'); ?>' +\n                            '<div><input class=\"form-control form-item-control flex-nowrap ml-2\" value=\"' + data_otc.code + '\" readonly></div>',\n                            '',\n                            '<?php echo langHdl('close'); ?>'\n                        );\n                    }\n\n                    // update the process\n                    // add all tasks\n                    var data_to_send = {\n                        user_id: data.user_id,\n                        user_code: data_otc.code,\n                    }\n\n                    //console.log(data_to_send);\n                    //return false;\n\n                    // Do query\n                    $.post(\n                        \"sources/users.queries.php\", {\n                            type: \"create_new_user_tasks\",\n                            data: prepareExchangedData(JSON.stringify(data_to_send), 'encode', '<?php echo $_SESSION['key']; ?>'),\n                            key: '<?php echo $_SESSION['key']; ?>'\n                        },\n                        function(data_tasks) {\n                            data_tasks = prepareExchangedData(data_tasks, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n                            \n                            if (data_tasks.error === true) {\n                                // error\n                                toastr.remove();\n                                toastr.error(\n                                    data_tasks.message,\n                                    '<?php echo langHdl('caution'); ?>', {\n                                        timeOut: 5000,\n                                        progressBar: true\n                                    }\n                                );\n                            } else {\n                                // show message to user\n                                // Finalizing\n                                //$('#warningModal').modal('hide');\n\n                                // Now close in progress toast\n                                $('.close-toastr-progress').closest('.toast').remove();\n                                \n                                // refresh the list of users in LDAP not added in Teampass\n                                refreshListUsersLDAP();    \n\n                                // Rrefresh list of users in Teampass\n                                oTable.ajax.reload();\n\n                                toastr.success(\n                                    '<?php echo langHdl('done'); ?>',\n                                    '', {\n                                        timeOut: 1000\n                                    }\n                                );\n                            }\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Permits to change the auth type of the user\n     *\n     * @return void\n     */\n    function changeUserAuthType(auth) {\n        toastr.remove();\n        toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // prepare data\n        var data = {\n            'id': $('.selected-user').data('user-id'),\n            'auth_type': auth\n        };\n        if (debugJavascript === true) console.log(data)\n\n        $.post(\n            'sources/users.queries.php', {\n                type: 'change_user_auth_type',\n                data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                key: \"<?php echo $_SESSION['key']; ?>\"\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                if (debugJavascript === true) console.log(data);\n\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('caution'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    refreshListUsersLDAP();\n                }\n            }\n        );\n    }\n\n    $(document)\n        .on('click', '.add-user-icon', function() {\n            var thisElement = $(this);\n            $(thisElement).addClass('selected-user');\n\n            showModalDialogBox(\n                '#warningModal',\n                '<i class=\"fas fa-user-plus fa-lg warning mr-2\"></i><?php echo langHdl('new_ldap_user_info'); ?> <b>'+$(this)[0].dataset.userLogin+'</b>',\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('name'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-name\" value=\"'+ $(this).attr('data-user-name')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('lastname'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-lastname\" value=\"'+ $(this).attr('data-user-lastname')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-name\"><?php echo langHdl('email'); ?></label>'+\n                    '<input readonly type=\"text\" class=\"form-control required\" id=\"ldap-user-email\" value=\"'+ $(this).attr('data-user-email')+'\">'+\n                '</div>'+\n                '<div class=\"form-group\">'+\n                    '<label for=\"ldap-user-roles\"><?php echo langHdl('roles'); ?></label>'+\n                    '<select id=\"ldap-user-roles\" class=\"form-control form-item-control select2 required\" style=\"width:100%;\" multiple=\"multiple\">'+\n                    '<?php echo $optionsRoles; ?></select>'+\n                '</div>',\n                '<?php echo langHdl('perform'); ?>',\n                '<?php echo langHdl('cancel'); ?>'\n            );\n            $(document).on('click', '#warningModalButtonAction', function() {\n                if ($('#ldap-user-name').val() !== \"\" && $('#ldap-user-roles :selected').length > 0) {\n                    addUserInTeampass();\n                    $(thisElement).removeClass('selected-user');\n                }\n            });\n            $(document).on('click', '#warningModalButtonClose', function() {\n                $(thisElement).removeClass('selected-user');\n            });\n        })\n        .on('click', '.auth-ldap', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'ldap\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_ldap'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        })\n        .on('click', '.auth-local', function() {\n            $(this).addClass('selected-user');\n\n            toastr.warning(\n                '&nbsp;<button type=\"button\" class=\"btn clear btn-toastr\" style=\"width:100%;\" onclick=\"changeUserAuthType(\\'local\\')\"><?php echo langHdl('please_confirm'); ?></button>',\n                '<?php echo langHdl('change_authentification_type_to_local'); ?>', {\n                    positionClass: 'toast-top-center',\n                    closeButton: true\n                }\n            );\n        });\n\n\n\n    //]]>\n</script>\n", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      logs.datatables.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nrequire_once 'SecureHandler.php';\nsession_name('teampass_session');\nsession_start();\nif (! isset($_SESSION['CPM']) || $_SESSION['CPM'] === false || ! isset($_SESSION['key']) || empty($_SESSION['key'])) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php')) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php')) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception(\"Error file '/includes/config/tp.config.php' not exists\", 1);\n}\n\n// Do checks\nrequire_once $SETTINGS['cpassman_dir'].'/includes/config/include.php';\nrequire_once $SETTINGS['cpassman_dir'].'/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'utilities.logs', $SETTINGS) === false) {\n    // Not allowed page\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    include $SETTINGS['cpassman_dir'].'/error.php';\n    exit;\n}\n\n/*\n * Define Timezone\n*/\nif (isset($SETTINGS['timezone']) === true) {\n    date_default_timezone_set($SETTINGS['timezone']);\n} else {\n    date_default_timezone_set('UTC');\n}\n\nrequire_once $SETTINGS['cpassman_dir'].'/includes/language/'.$_SESSION['user']['user_language'].'.php';\nrequire_once $SETTINGS['cpassman_dir'].'/includes/config/settings.php';\nheader('Content-type: text/html; charset=utf-8');\nheader('Cache-Control: no-cache, must-revalidate');\nrequire_once 'main.functions.php';\n//Connect to DB\ninclude_once $SETTINGS['cpassman_dir'].'/includes/libraries/Database/Meekrodb/db.class.php';\nif (defined('DB_PASSWD_CLEAR') === false) {\n    define('DB_PASSWD_CLEAR', defuseReturnDecrypted(DB_PASSWD, $SETTINGS));\n}\nDB::$host = DB_HOST;\nDB::$user = DB_USER;\nDB::$password = DB_PASSWD_CLEAR;\nDB::$dbName = DB_NAME;\nDB::$port = DB_PORT;\nDB::$encoding = DB_ENCODING;\nDB::$ssl = DB_SSL;\nDB::$connect_options = DB_CONNECT_OPTIONS;\n// prepare the queries\nif (isset($_GET['action']) === true) {\n    //init SQL variables\n    $sWhere = $sOrder = $sLimit = '';\n    $aSortTypes = ['asc', 'desc'];\n    /* BUILD QUERY */\n    //Paging\n    if (isset($_GET['length']) === true && (int) $_GET['length'] !== -1) {\n        $sLimit = ' LIMIT '.filter_var($_GET['start'], FILTER_SANITIZE_NUMBER_INT).', '.filter_var($_GET['length'], FILTER_SANITIZE_NUMBER_INT).'';\n    }\n}\n\nif (isset($_GET['action']) === true && $_GET['action'] === 'connections') {\n    //Columns name\n    $aColumns = ['l.date', 'l.label', 'l.qui', 'u.login', 'u.name', 'u.lastname'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \"WHERE l.type = 'user_connection'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace((string) $sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id)'.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, l.label as label, l.qui as who, \n            u.login as login, u.name AS name, u.lastname AS lastname\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id)'.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    /*\n           * Output\n        */\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.str_replace([chr(10), chr(13)], [' ', ' '], htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES)).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n\n    /* ERRORS LOG */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'access') {\n    //Columns name\n    $aColumns = ['l.date', 'i.label', 'u.login'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \" WHERE l.action = 'at_shown'\";\n    if ($_GET['sSearch'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].' LIKE %ss_'.$i.' OR ';\n        }\n        $sWhere = substr_replace((string) $sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id)'.\n            $sWhere,\n            [\n                '0' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '1' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '2' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n            ]\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, u.login as login, i.label as label\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id)\n            $sWhere\n            $sOrder\n            $sLimit',\n            [\n                '0' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '1' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n                '2' => filter_var($_GET['sSearch'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n            ]\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.str_replace([chr(10), chr(13)], [' ', ' '], htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES)).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n\n    /* COPY LOG */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'copy') {\n    //Columns name\n    $aColumns = ['l.date', 'i.label', 'u.login'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \"WHERE l.action = 'at_copy'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace((string) $sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id) '.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, u.login as login, u.name AS name, u.lastname AS lastname, i.label as label\n            FROM '.prefixTable('log_items').' as l\n            INNER JOIN '.prefixTable('items').' as i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (l.id_user=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n\n    /*\n    * ADMIN LOG\n     */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'admin') {\n    //Columns name\n    $aColumns = ['l.date', 'u.login', 'l.label', 'l.field_1'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = \"WHERE l.type IN ('admin_action', 'user_mngt')\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n        FROM '.prefixTable('log_system').' as l\n        INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n        $sWhere\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, u.login as login, u.name AS name, u.lastname AS lastname, l.label as label, l.field_1 as field_1\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    /*\n         * Output\n        */\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": [ ';\n    foreach ($rows as $record) {\n        $get_item_in_list = true;\n        $sOutput_item = '[';\n        //col1\n        $sOutput_item .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).'\", ';\n        //col3\n        if ($record['label'] === 'at_user_added') {\n            $cell = langHdl('user_creation');\n        } elseif ($record['label'] === 'at_user_deleted' || $record['label'] === 'user_deleted') {\n            $cell = langHdl('user_deletion');\n        } elseif ($record['label'] === 'at_user_updated') {\n            $cell = langHdl('user_updated');\n        } elseif (strpos($record['label'], 'at_user_email_changed') !== false) {\n            $change = explode(':', $record['label']);\n            $cell = langHdl('log_user_email_changed').' '.$change[1];\n        } elseif ($record['label'] === 'at_user_new_keys') {\n            $cell = langHdl('new_keys_generated');\n        } else {\n            $cell = htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES);\n        }\n        $sOutput_item .= '\"'.$cell.'\" ';\n        //col4\n        if (empty($record['field_1']) === false) {\n            // get user name\n            $info = DB::queryfirstrow(\n                'SELECT u.login as login, u.name AS name, u.lastname AS lastname\n                    FROM '.prefixTable('users').' as u\n                    WHERE u.id = %i',\n                    $record['field_1']\n            );\n            $sOutput_item .= ', \"'.(empty($info['name']) === false ? htmlspecialchars(stripslashes((string) $info['name'].' '.$info['lastname']), ENT_QUOTES) : 'Removed user ('.$record['field_1'].')').'\" ';\n        } else {\n            $sOutput_item .= ', \"\" ';\n        }\n        //Finish the line\n        $sOutput_item .= '], ';\n        if ($get_item_in_list === true) {\n            $sOutput .= $sOutput_item;\n        }\n    }\n    if ($iFilteredTotal > 0) {\n        $sOutput = substr_replace($sOutput, '', -2);\n    }\n    $sOutput .= '] }';\n/* ITEMS */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'items') {\n    require_once $SETTINGS['cpassman_dir'].'/sources/main.functions.php';\n    //Columns name\n    $aColumns = ['l.date', 'i.label', 'u.login', 'l.action', 'i.perso', 'i.id', 't.title'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    // Filtering\n    $sWhere = '';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' WHERE (';\n        if (isset($_GET['search']['column']) === true && $_GET['search']['column'] !== 'all') {\n            $sWhere .= $_GET['search']['column'].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%') \";\n        } else {\n            for ($i = 0; $i < count($aColumns); ++$i) {\n                $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n            }\n            $sWhere = substr_replace($sWhere, '', -3).') ';\n        }\n    }\n    \n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_items').' AS l\n            INNER JOIN '.prefixTable('items').' AS i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' AS u ON (l.id_user=u.id)\n            INNER JOIN '.prefixTable('nested_tree').' AS t ON (i.id_tree=t.id) '.\n            $sWhere.\n            $sOrder\n    );\n\n    $rows = DB::query(\n        'SELECT l.date AS date, u.login AS login, u.name AS name, u.lastname AS lastname, i.label AS label,\n            i.perso AS perso, l.action AS action, t.title AS folder,\n            i.id AS id\n            FROM '.prefixTable('log_items').' AS l\n            INNER JOIN '.prefixTable('items').' AS i ON (l.id_item=i.id)\n            INNER JOIN '.prefixTable('users').' AS u ON (l.id_user=u.id)\n            INNER JOIN '.prefixTable('nested_tree').' AS t ON (i.id_tree=t.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": [ ';\n    foreach ($rows as $record) {\n        $get_item_in_list = true;\n        $sOutput_item = '[';\n        //col1\n        $sOutput_item .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col3\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['id']), ENT_QUOTES).'\", ';\n        //col3\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES).'\", ';\n        //col2\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['folder']), ENT_QUOTES).'\", ';\n        //col2\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\", ';\n        //col4\n        $sOutput_item .= '\"'.htmlspecialchars(stripslashes(langHdl($record['action'])), ENT_QUOTES).'\", ';\n        //col5\n        if ($record['perso'] === 1) {\n            $sOutput_item .= '\"'.htmlspecialchars(stripslashes(langHdl('yes')), ENT_QUOTES).'\"';\n        } else {\n            $sOutput_item .= '\"'.htmlspecialchars(stripslashes(langHdl('no')), ENT_QUOTES).'\"';\n        }\n\n        //Finish the line\n        $sOutput_item .= '], ';\n        if ($get_item_in_list === true) {\n            $sOutput .= $sOutput_item;\n        }\n    }\n    if ($iFilteredTotal > 0) {\n        $sOutput = substr_replace($sOutput, '', -2);\n    }\n    $sOutput .= '] }';\n/* FAILED AUTHENTICATION */\n} elseif (isset($_GET['action']) && $_GET['action'] === 'failed_auth') {\n    //Columns name\n    $aColumns = ['l.date', 'l.label', 'l.qui', 'l.field_1'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    /*\n       * Filtering\n       * NOTE this does not match the built-in DataTables filtering which does it\n       * word by word on any field. It's possible to do here, but concerned about efficiency\n       * on very large tables, and MySQL's regex functionality is very limited\n    */\n    $sWhere = \"WHERE l.type = 'failed_auth'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_system').' as l '.\n            $sWhere\n    );\n    $rows = DB::query(\n        'SELECT l.date as auth_date, l.label as label, l.qui as who, l.field_1\n            FROM '.prefixTable('log_system').' as l '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    if ($iTotal === '') {\n        $iTotal = 0;\n    }\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['auth_date']).'\", ';\n        //col2 - 3\n        if ($record['label'] === 'password_is_not_correct' || $record['label'] === 'user_not_exists') {\n            $sOutput .= '\"'.langHdl($record['label']).'\", \"'.$record['field_1'].'\", ';\n        } else {\n            $sOutput .= '\"'.langHdl($record['label']).'\", \"\", ';\n        }\n\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['who']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'errors') {\n    //Columns name\n    $aColumns = ['l.date', 'l.label', 'l.qui', 'u.login', 'u.name', 'u.lastname'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    /*\n       * Filtering\n       * NOTE this does not match the built-in DataTables filtering which does it\n       * word by word on any field. It's possible to do here, but concerned about efficiency\n       * on very large tables, and MySQL's regex functionality is very limited\n    */\n    $sWhere = \"WHERE l.type = 'error'\";\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(*)\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT l.date as date, l.label as label, l.qui as who,\n            u.login as login, u.name AS name, u.lastname AS lastname\n            FROM '.prefixTable('log_system').' as l\n            INNER JOIN '.prefixTable('users').' as u ON (l.qui=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"'.date($SETTINGS['date_format'].' '.$SETTINGS['time_format'], (int) $record['date']).'\", ';\n        //col2\n        $sOutput .= '\"'.addslashes(str_replace([chr(10), chr(13), '`', '<br />@', \"'\"], ['<br>', '<br>', \"'\", '', '&#39;'], $record['label'])).'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'items_in_edition') {\n    //Columns name\n    $aColumns = ['e.timestamp', 'u.login', 'i.label', 'u.name', 'u.lastname'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    /*\n       * Filtering\n       * NOTE this does not match the built-in DataTables filtering which does it\n       * word by word on any field. It's possible to do here, but concerned about efficiency\n       * on very large tables, and MySQL's regex functionality is very limited\n    */\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere = ' WHERE (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(e.timestamp)\n            FROM '.prefixTable('items_edition').' AS e\n            INNER JOIN '.prefixTable('items').' as i ON (e.item_id=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (e.user_id=u.id) '.\n            $sWhere.\n            $sOrder\n    );\n    $rows = DB::query(\n        'SELECT e.timestamp, e.item_id, e.user_id, u.login, u.name, u.lastname, i.label\n            FROM '.prefixTable('items_edition').' AS e\n            INNER JOIN '.prefixTable('items').' as i ON (e.item_id=i.id)\n            INNER JOIN '.prefixTable('users').' as u ON (e.user_id=u.id) '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-id=\\\"'.$record['item_id'].'\\\">\", ';\n        //col2\n        $time_diff = intval(time() - $record['timestamp']);\n        $hoursDiff = round($time_diff / 3600, 0, PHP_ROUND_HALF_DOWN);\n        $minutesDiffRemainder = floor($time_diff % 3600 / 60);\n        $sOutput .= '\"'.$hoursDiff.'h '.$minutesDiffRemainder.'m'.'\", ';\n        //col3\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\", ';\n        //col5 - TAGS\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['label']), ENT_QUOTES).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'users_logged_in') {\n    //Columns name\n    $aColumns = ['login', 'name', 'lastname', 'timestamp', 'last_connexion'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    $sWhere = ' WHERE ((timestamp != \"\" AND session_end >= \"'.time().'\")';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere = ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n    $sWhere .= ') ';\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(timestamp)\n            FROM '.prefixTable('users').' '.\n            $sWhere\n    );\n    $rows = DB::query(\n        'SELECT *\n            FROM '.prefixTable('users').' '.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-id=\\\"'.$record['id'].'\\\">\", ';\n        //col2\n        $sOutput .= '\"'.htmlspecialchars(stripslashes((string) $record['name']), ENT_QUOTES).' '.htmlspecialchars(stripslashes((string) $record['lastname']), ENT_QUOTES).' ['.htmlspecialchars(stripslashes((string) $record['login']), ENT_QUOTES).']\", ';\n        //col3\n        if ($record['admin'] === '1') {\n            $user_role = langHdl('god');\n        } elseif (langHdl('gestionnaire') === 1) {\n            $user_role = langHdl('gestionnaire');\n        } else {\n            $user_role = langHdl('user');\n        }\n        $sOutput .= '\"'.$user_role.'\", ';\n        //col4\n        $time_diff = intval(time() - $record['timestamp']);\n        $hoursDiff = round($time_diff / 3600, 0, PHP_ROUND_HALF_DOWN);\n        $minutesDiffRemainder = floor($time_diff % 3600 / 60);\n        $sOutput .= '\"'.$hoursDiff.'h '.$minutesDiffRemainder.'m\" ';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'tasks_in_progress') {\n    //Columns name\n    $aColumns = ['p.increment_id', 'p.created_at', 'p.updated_at', 'p.process_type', 'p.is_in_progress'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    $sWhere = ' WHERE ((p.finished_at = \"\")';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n    $sWhere .= ') ';\n    DB::debugmode(false);\n    $iTotal = DB::queryFirstField(\n    'SELECT COUNT(p.increment_id)\n        FROM '.prefixTable('processes').' AS p \n        LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n        $sWhere\n    );\n    $rows = DB::query(\n        'SELECT p.*\n            FROM '.prefixTable('processes').' AS p \n            LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-done=\\\"'.$record['is_in_progress'].'\\\" data-type=\\\"'.$record['process_type'].'\\\" data-process-id=\\\"'.$record['increment_id'].'\\\"></span>\", ';\n        //col2\n        $sOutput .= '\"'.date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['created_at']).'\", ';\n        //col3\n        $sOutput .= '\"'.($record['updated_at'] === '' ? '-' : date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['updated_at'])).'\", ';\n        //col4\n        $sOutput .= '\"'.$record['process_type'].'\", ';\n        // col5\n        if ($record['process_type'] === 'create_user_keys') {\n            $data_user = DB::queryfirstrow(\n                'SELECT name, lastname FROM ' . prefixTable('users') . '\n                WHERE id = %i',\n                json_decode($record['arguments'], true)['new_user_id']\n            );\n            $sOutput .= '\"'.$data_user['name'].' '.$data_user['lastname'].'\", ';\n        } elseif ($record['process_type'] === 'send_email') {\n            $sOutput .= '\"'.json_decode($record['arguments'], true)['receiver_name'].'\", ';\n        }\n        // col6\n        $sOutput .= '\"\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n} elseif (isset($_GET['action']) && $_GET['action'] === 'tasks_finished') {\n    //Columns name\n    $aColumns = ['p.created_at', 'p.finished_at', 'p.process_type', 'u.name'];\n    //Ordering\n    if (isset($_GET['order'][0]['dir']) === true\n        && in_array($_GET['order'][0]['dir'], $aSortTypes) === true\n        && isset($_GET['order'][0]['column']) === true\n        && (int) $_GET['order'][0]['column'] !== 0\n        && $_GET['order'][0]['column'] !== 'asc'\n    ) {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[filter_var($_GET['order'][0]['column'], FILTER_SANITIZE_NUMBER_INT)].' '.\n            filter_var($_GET['order'][0]['dir'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).' ';\n    } else {\n        $sOrder = 'ORDER BY  '.\n            $aColumns[0].' DESC';\n    }\n\n    $sWhere = ' WHERE ((finished_at != \"\")';\n    if (isset($_GET['search']['value']) === true && $_GET['search']['value'] !== '') {\n        $sWhere .= ' AND (';\n        for ($i = 0; $i < count($aColumns); ++$i) {\n            $sWhere .= $aColumns[$i].\" LIKE '%\".filter_var($_GET['search']['value'], FILTER_SANITIZE_FULL_SPECIAL_CHARS).\"%' OR \";\n        }\n        $sWhere = substr_replace($sWhere, '', -3).') ';\n    }\n    $sWhere .= ') ';\n    \n    DB::debugmode(false);\n    $iTotal = DB::queryFirstField(\n        'SELECT COUNT(p.increment_id)\n            FROM '.prefixTable('processes').' AS p \n            LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n            $sWhere\n    );\n\n    $rows = DB::query(\n        'SELECT p.*\n            FROM '.prefixTable('processes').' AS p \n            LEFT JOIN '.prefixTable('users').' AS u ON u.id = json_extract(p.arguments, \"$[0]\")'.\n            $sWhere.\n            $sOrder.\n            $sLimit\n    );\n    $iFilteredTotal = DB::count();\n    // Output\n    $sOutput = '{';\n    $sOutput .= '\"sEcho\": '.intval($_GET['draw']).', ';\n    $sOutput .= '\"iTotalRecords\": '.$iTotal.', ';\n    $sOutput .= '\"iTotalDisplayRecords\": '.$iTotal.', ';\n    $sOutput .= '\"aaData\": ';\n    if ($iFilteredTotal > 0) {\n        $sOutput .= '[';\n    }\n    foreach ($rows as $record) {\n        // play with dates\n        $start = strtotime(date('Y-m-d H:i:s', (int) $record['created_at']));\n        $end = strtotime(date('Y-m-d H:i:s', (int) $record['finished_at']));\n        \n        $sOutput .= '[';\n        //col1\n        $sOutput .= '\"<span data-done=\\\"'.$record['is_in_progress'].'\\\" data-type=\\\"'.$record['process_type'].'\\\"  data-process-id=\\\"'.$record['increment_id'].'\\\"></span>\", ';\n        //col2\n        $sOutput .= '\"'.date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['created_at']).'\", ';\n        //col3\n        $sOutput .= '\"'.date($SETTINGS['date_format'] . ' ' . $SETTINGS['time_format'], (int) $record['finished_at']).'\", ';\n        //col4\n        $sOutput .= '\"'.$record['process_type'].'\", ';\n        // col5\n        if ($record['process_type'] === 'create_user_keys') {\n            $data_user = DB::queryfirstrow(\n                'SELECT name, lastname FROM ' . prefixTable('users') . '\n                WHERE id = %i',\n                json_decode($record['arguments'], true)['new_user_id']\n            );\n            $sOutput .= '\"'.(isset($data_user['name']) === true ? $data_user['name'] : '').' '.(isset($data_user['lastname']) === true ? $data_user['lastname'] : '').'\", ';\n        } elseif ($record['process_type'] === 'send_email') {\n            $sOutput .= '\"'.json_decode($record['arguments'], true)['receiver_name'].'\", ';\n        }\n        // col6\n        $diff = abs($end - $start) / 60;\n        $sOutput .= '\"'.floor($diff / 60).':'.($diff % 60).'\"';\n        //Finish the line\n        $sOutput .= '],';\n    }\n\n    if (count($rows) > 0) {\n        $sOutput = substr_replace($sOutput, '', -1);\n        $sOutput .= '] }';\n    } else {\n        $sOutput .= '[] }';\n    }\n}\n\necho $sOutput;\n"], "filenames": ["includes/js/functions.js", "includes/libraries/anti-xss-master/src/voku/helper/AntiXSS.php", "pages/2fa.js.php", "pages/2fa.php", "pages/admin.js.php", "pages/users.js.php", "sources/logs.datatables.php"], "buggy_code_start_loc": [398, 457, 58, 160, 138, 901, 841], "buggy_code_end_loc": [545, 457, 114, 225, 139, 902, 962], "fixing_code_start_loc": [398, 458, 57, 160, 138, 901, 841], "fixing_code_end_loc": [567, 459, 95, 225, 139, 902, 962], "type": "CWE-94", "message": " Code Injection in GitHub repository nilsteampassnet/teampass prior to 3.0.10.", "other": {"cve": {"id": "CVE-2023-3551", "sourceIdentifier": "security@huntr.dev", "published": "2023-07-08T09:15:42.750", "lastModified": "2023-07-14T14:40:10.177", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": " Code Injection in GitHub repository nilsteampassnet/teampass prior to 3.0.10."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.2, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:teampass:teampass:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.0.10", "matchCriteriaId": "6C3D28BC-A4B7-45E4-8B54-0F13DFB41437"}]}]}], "references": [{"url": "https://github.com/nilsteampassnet/teampass/commit/cc6abc76aa46ed4a27736c1d2f21e432a5d54e6f", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/cf8878ff-6cd9-49be-b313-7ac2a94fc7f7", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/nilsteampassnet/teampass/commit/cc6abc76aa46ed4a27736c1d2f21e432a5d54e6f"}}