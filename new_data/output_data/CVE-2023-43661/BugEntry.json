{"buggy_code": ["<?php\n\n/*\n * This file is part of Cachet.\n *\n * (c) Alt Three Services Limited\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace CachetHQ\\Cachet\\Bus\\Handlers\\Commands\\Incident;\n\nuse CachetHQ\\Cachet\\Bus\\Commands\\Component\\UpdateComponentCommand;\nuse CachetHQ\\Cachet\\Bus\\Commands\\Incident\\CreateIncidentCommand;\nuse CachetHQ\\Cachet\\Bus\\Events\\Incident\\IncidentWasCreatedEvent;\nuse CachetHQ\\Cachet\\Bus\\Exceptions\\Incident\\InvalidIncidentTimestampException;\nuse CachetHQ\\Cachet\\Bus\\Handlers\\Traits\\StoresMeta;\nuse CachetHQ\\Cachet\\Models\\Component;\nuse CachetHQ\\Cachet\\Models\\Incident;\nuse CachetHQ\\Cachet\\Models\\IncidentTemplate;\nuse CachetHQ\\Cachet\\Models\\Meta;\nuse CachetHQ\\Cachet\\Services\\Dates\\DateFactory;\nuse Carbon\\Carbon;\nuse Illuminate\\Contracts\\Auth\\Guard;\nuse Twig\\Environment as Twig_Environment;\nuse Twig\\Loader\\ArrayLoader as Twig_Loader_Array;\n\n/**\n * This is the create incident command handler.\n *\n * @author James Brooks <james@alt-three.com>\n */\nclass CreateIncidentCommandHandler\n{\n    use StoresMeta;\n\n    /**\n     * The authentication guard instance.\n     *\n     * @var \\Illuminate\\Contracts\\Auth\\Guard\n     */\n    protected $auth;\n\n    /**\n     * The date factory instance.\n     *\n     * @var \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory\n     */\n    protected $dates;\n\n    /**\n     * Create a new create incident command handler instance.\n     *\n     * @param \\Illuminate\\Contracts\\Auth\\Guard            $auth\n     * @param \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory $dates\n     *\n     * @return void\n     */\n    public function __construct(Guard $auth, DateFactory $dates)\n    {\n        $this->auth = $auth;\n        $this->dates = $dates;\n    }\n\n    /**\n     * Handle the create incident command.\n     *\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\CreateIncidentCommand $command\n     *\n     * @return \\CachetHQ\\Cachet\\Models\\Incident\n     */\n    public function handle(CreateIncidentCommand $command)\n    {\n        $data = [\n            'user_id'  => $this->auth->user()->id,\n            'name'     => $command->name,\n            'status'   => $command->status,\n            'visible'  => $command->visible,\n            'stickied' => $command->stickied,\n        ];\n\n        if ($template = IncidentTemplate::where('slug', '=', $command->template)->first()) {\n            $data['message'] = $this->parseTemplate($template, $command);\n        } else {\n            $data['message'] = $command->message;\n        }\n\n        // Link with the component.\n        if ($command->component_id) {\n            $data['component_id'] = $command->component_id;\n        }\n\n        // The incident occurred at a different time.\n        if ($occurredAt = $command->occurred_at) {\n            if ($date = $this->dates->create('Y-m-d H:i', $occurredAt)) {\n                $data['occurred_at'] = $date;\n            } else {\n                throw new InvalidIncidentTimestampException(\"Unable to pass timestamp {$occurredAt}\");\n            }\n        } else {\n            $data['occurred_at'] = Carbon::now();\n        }\n\n        // Create the incident\n        $incident = Incident::create($data);\n\n        // Store any meta?\n        if ($meta = $command->meta) {\n            $this->storeMeta($command->meta, 'incidents', $incident->id);\n        }\n\n        // Update the component.\n        if ($component = Component::find($command->component_id)) {\n            execute(new UpdateComponentCommand(\n                Component::find($command->component_id),\n                null,\n                null,\n                $command->component_status,\n                null,\n                null,\n                null,\n                null,\n                null,\n                false\n            ));\n        }\n\n        event(new IncidentWasCreatedEvent($this->auth->user(), $incident, (bool) $command->notify));\n\n        return $incident;\n    }\n\n    /**\n     * Compiles an incident template into an incident message.\n     *\n     * @param \\CachetHQ\\Cachet\\Models\\IncidentTemplate                     $template\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\CreateIncidentCommand $command\n     *\n     * @return string\n     */\n    protected function parseTemplate(IncidentTemplate $template, CreateIncidentCommand $command)\n    {\n        $env = new Twig_Environment(new Twig_Loader_Array([]));\n        $template = $env->createTemplate($template->template);\n\n        $vars = array_merge($command->template_vars, [\n            'incident' => [\n                'name'             => $command->name,\n                'status'           => $command->status,\n                'message'          => $command->message,\n                'visible'          => $command->visible,\n                'notify'           => $command->notify,\n                'stickied'         => $command->stickied,\n                'occurred_at'      => $command->occurred_at,\n                'component'        => Component::find($command->component_id) ?: null,\n                'component_status' => $command->component_status,\n            ],\n        ]);\n\n        return $template->render($vars);\n    }\n}\n", "<?php\n\n/*\n * This file is part of Cachet.\n *\n * (c) Alt Three Services Limited\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace CachetHQ\\Cachet\\Bus\\Handlers\\Commands\\Incident;\n\nuse CachetHQ\\Cachet\\Bus\\Commands\\Component\\UpdateComponentCommand;\nuse CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand;\nuse CachetHQ\\Cachet\\Bus\\Events\\Incident\\IncidentWasUpdatedEvent;\nuse CachetHQ\\Cachet\\Bus\\Exceptions\\Incident\\InvalidIncidentTimestampException;\nuse CachetHQ\\Cachet\\Bus\\Handlers\\Traits\\StoresMeta;\nuse CachetHQ\\Cachet\\Models\\Component;\nuse CachetHQ\\Cachet\\Models\\Incident;\nuse CachetHQ\\Cachet\\Models\\IncidentTemplate;\nuse CachetHQ\\Cachet\\Services\\Dates\\DateFactory;\nuse Illuminate\\Contracts\\Auth\\Guard;\nuse Twig\\Environment as Twig_Environment;\nuse Twig\\Loader\\ArrayLoader as Twig_Loader_Array;\n\n/**\n * This is the update incident command handler.\n *\n * @author James Brooks <james@alt-three.com>\n */\nclass UpdateIncidentCommandHandler\n{\n    use StoresMeta;\n\n    /**\n     * The authentication guard instance.\n     *\n     * @var \\Illuminate\\Contracts\\Auth\\Guard\n     */\n    protected $auth;\n\n    /**\n     * The date factory instance.\n     *\n     * @var \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory\n     */\n    protected $dates;\n\n    /**\n     * Create a new update incident command handler instance.\n     *\n     * @param \\Illuminate\\Contracts\\Auth\\Guard            $auth\n     * @param \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory $dates\n     *\n     * @return void\n     */\n    public function __construct(Guard $auth, DateFactory $dates)\n    {\n        $this->auth = $auth;\n        $this->dates = $dates;\n    }\n\n    /**\n     * Handle the update incident command.\n     *\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand $command\n     *\n     * @return \\CachetHQ\\Cachet\\Models\\Incident\n     */\n    public function handle(UpdateIncidentCommand $command)\n    {\n        if ($template = IncidentTemplate::where('slug', '=', $command->template)->first()) {\n            $command->message = $this->parseTemplate($template, $command);\n        }\n\n        $incident = $command->incident;\n        $incident->fill($this->filter($command));\n\n        // The incident occurred at a different time.\n        if ($occurredAt = $command->occurred_at) {\n            if ($date = $this->dates->create('Y-m-d H:i', $occurredAt)) {\n                $incident->fill(['occurred_at' => $date]);\n            } else {\n                throw new InvalidIncidentTimestampException(\"Unable to pass timestamp {$occurredAt}\");\n            }\n        }\n\n        // Rather than making lots of updates, just fill and save.\n        $incident->save();\n\n        // Store any meta?\n        if ($meta = $command->meta) {\n            $this->storeMeta($command->meta, 'incidents', $incident->id);\n        }\n\n        // Update the component.\n        if ($component = Component::find($command->component_id)) {\n            execute(new UpdateComponentCommand(\n                Component::find($command->component_id),\n                null,\n                null,\n                $command->component_status,\n                null,\n                null,\n                null,\n                null,\n                null,\n                false\n            ));\n        }\n\n        event(new IncidentWasUpdatedEvent($this->auth->user(), $incident));\n\n        return $incident;\n    }\n\n    /**\n     * Filter the command data.\n     *\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand $command\n     *\n     * @return array\n     */\n    protected function filter(UpdateIncidentCommand $command)\n    {\n        $params = [\n            'name'             => $command->name,\n            'status'           => $command->status,\n            'message'          => $command->message,\n            'visible'          => $command->visible,\n            'stickied'         => $command->stickied,\n            'component_id'     => $command->component_id,\n            'component_status' => $command->component_status,\n            'notify'           => $command->notify,\n        ];\n\n        return array_filter($params, function ($val) {\n            return $val !== null;\n        });\n    }\n\n    /**\n     * Compiles an incident template into an incident message.\n     *\n     * @param \\CachetHQ\\Cachet\\Models\\IncidentTemplate                     $template\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand $command\n     *\n     * @return string\n     */\n    protected function parseTemplate(IncidentTemplate $template, UpdateIncidentCommand $command)\n    {\n        $env = new Twig_Environment(new Twig_Loader_Array([]));\n        $template = $env->createTemplate($template->template);\n\n        $vars = array_merge($command->template_vars, [\n            'incident' => [\n                'name'             => $command->name,\n                'status'           => $command->status,\n                'message'          => $command->message,\n                'visible'          => $command->visible,\n                'notify'           => $command->notify,\n                'stickied'         => $command->stickied,\n                'occurred_at'      => $command->occurred_at,\n                'component'        => Component::find($command->component_id) ?: null,\n                'component_status' => $command->component_status,\n            ],\n        ]);\n\n        return $template->render($vars);\n    }\n}\n", "{\n    \"name\": \"cachethq/cachet\",\n    \"description\": \"An open source status page system, for everyone.\",\n    \"keywords\": [\n        \"laravel\",\n        \"cachet\",\n        \"alt-three\",\n        \"status\",\n        \"page\"\n    ],\n    \"type\": \"project\",\n    \"license\": \"BSD-3-Clause\",\n    \"authors\": [\n        {\n            \"name\": \"James Brooks\",\n            \"email\": \"james@alt-three.com\"\n        },\n        {\n            \"name\": \"Graham Campbell\",\n            \"email\": \"graham@alt-three.com\"\n        },\n        {\n            \"name\": \"Joseph Cohen\",\n            \"email\": \"joe@alt-three.com\"\n        }\n    ],\n    \"replace\": {\n        \"paragonie/random_compat\": \"*\",\n        \"symfony/polyfill-mbstring\": \"*\"\n    },\n    \"require\": {\n        \"php\": \"^7.1.3\",\n        \"ext-mbstring\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-xml\": \"*\",\n        \"alt-three/bus\": \"^4.1\",\n        \"cachethq/badger\": \"^2.0\",\n        \"cachethq/emoji\": \"^3.0\",\n        \"cachethq/twitter\": \"^3.0\",\n        \"alt-three/validator\": \"^4.1\",\n        \"aws/aws-sdk-php\": \"^3.7\",\n        \"barryvdh/laravel-cors\": \"^0.11.0\",\n        \"bugsnag/bugsnag-laravel\": \"^2.15\",\n        \"chillerlan/php-qrcode\": \"^2.0\",\n        \"doctrine/dbal\": \"2.9.*\",\n        \"fideloper/proxy\": \"^4.0\",\n        \"graham-campbell/binput\": \"^6.0\",\n        \"graham-campbell/exceptions\": \"^11.1\",\n        \"graham-campbell/markdown\": \"^11.2\",\n        \"guzzlehttp/guzzle\": \"^6.3.3\",\n        \"jenssegers/date\": \"^3.4\",\n        \"laravel/framework\": \"5.7.*\",\n        \"laravel/tinker\": \"^1.0\",\n        \"mccool/laravel-auto-presenter\": \"^7.1\",\n        \"nexmo/client\": \"^1.5\",\n        \"pragmarx/google2fa\": \"^5.0\",\n        \"predis/predis\": \"^1.1\",\n        \"twig/twig\": \"^2.6\"\n    },\n    \"require-dev\": {\n        \"ext-sqlite3\": \"*\",\n        \"alt-three/testbench\": \"5.0.x-dev\",\n        \"barryvdh/laravel-debugbar\": \"^3.2\",\n        \"filp/whoops\": \"^2.3\",\n        \"fzaninotto/faker\": \"^1.8\",\n        \"graham-campbell/analyzer\": \"^2.1\",\n        \"mockery/mockery\": \"^1.2\",\n        \"phpunit/phpunit\": \"^7.4\",\n        \"tightenco/mailthief\": \"^0.3.14\"\n    },\n    \"suggest\": {\n        \"ext-apc\": \"APC Support cache driver.\"\n    },\n    \"autoload\": {\n        \"classmap\": [\n            \"database\"\n        ],\n        \"files\": [\n            \"app/helpers.php\"\n        ],\n        \"psr-4\": {\n            \"CachetHQ\\\\Cachet\\\\\": \"app/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"CachetHQ\\\\Tests\\\\Cachet\\\\\": \"tests/\"\n        }\n    },\n    \"scripts\": {\n        \"post-root-package-install\": [\n          \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\n        ],\n        \"post-create-project-cmd\": [\n          \"@php artisan key:generate\"\n        ],\n        \"post-autoload-dump\": [\n          \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\n          \"@php artisan package:discover\"\n        ],\n        \"test\": [\n          \"@php artisan config:clear\",\n          \"vendor/bin/phpunit\"\n        ],\n        \"test-coverage\": [\n          \"@php artisan config:clear\",\n          \"vendor/bin/phpunit --coverage-clover=coverage.xml\"\n        ]\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"7.1.3\"\n        },\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true,\n        \"optimize-autoloader\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"2.4-dev\"\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n", "<?php\n\n/*\n * This file is part of Cachet.\n *\n * (c) Alt Three Services Limited\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Cachet Timezone\n    |--------------------------------------------------------------------------\n    |\n    | The timezone Cachet uses for converting timezones on saving.\n    |\n    */\n\n    'timezone' => 'UTC',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Docker\n    |--------------------------------------------------------------------------\n    |\n    | Is the installation running under a Docker container?\n    |\n    */\n\n    'is_docker' => env('DOCKER', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Beacon\n    |--------------------------------------------------------------------------\n    |\n    | Has the installation agreed to sending us Beacon data?\n    |\n    | Default: true\n    |\n    */\n\n    'beacon' => env('CACHET_BEACON', true),\n\n];\n"], "fixing_code": ["<?php\n\n/*\n * This file is part of Cachet.\n *\n * (c) Alt Three Services Limited\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace CachetHQ\\Cachet\\Bus\\Handlers\\Commands\\Incident;\n\nuse CachetHQ\\Cachet\\Bus\\Commands\\Component\\UpdateComponentCommand;\nuse CachetHQ\\Cachet\\Bus\\Commands\\Incident\\CreateIncidentCommand;\nuse CachetHQ\\Cachet\\Bus\\Events\\Incident\\IncidentWasCreatedEvent;\nuse CachetHQ\\Cachet\\Bus\\Exceptions\\Incident\\InvalidIncidentTimestampException;\nuse CachetHQ\\Cachet\\Bus\\Handlers\\Traits\\StoresMeta;\nuse CachetHQ\\Cachet\\Models\\Component;\nuse CachetHQ\\Cachet\\Models\\Incident;\nuse CachetHQ\\Cachet\\Models\\IncidentTemplate;\nuse CachetHQ\\Cachet\\Models\\Meta;\nuse CachetHQ\\Cachet\\Services\\Dates\\DateFactory;\nuse Carbon\\Carbon;\nuse Illuminate\\Contracts\\Auth\\Guard;\n\nuse Twig\\Environment as Twig_Environment;\nuse Twig\\Loader\\ArrayLoader as Twig_Loader_Array;\n\n\n\n/**\n * This is the create incident command handler.\n *\n * @author James Brooks <james@alt-three.com>\n */\nclass CreateIncidentCommandHandler\n{\n    use StoresMeta;\n\n    /**\n     * The authentication guard instance.\n     *\n     * @var \\Illuminate\\Contracts\\Auth\\Guard\n     */\n    protected $auth;\n\n    /**\n     * The date factory instance.\n     *\n     * @var \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory\n     */\n    protected $dates;\n\n    protected $twigConfig;\n\n    /**\n     * Create a new create incident command handler instance.\n     *\n     * @param \\Illuminate\\Contracts\\Auth\\Guard            $auth\n     * @param \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory $dates\n     *\n     * @return void\n     */\n    public function __construct(Guard $auth, DateFactory $dates)\n    {\n        $this->auth = $auth;\n        $this->dates = $dates;\n\n        $this->twigConfig = config(\"cachet.twig\");\n    }\n\n    /**\n     * Handle the create incident command.\n     *\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\CreateIncidentCommand $command\n     *\n     * @return \\CachetHQ\\Cachet\\Models\\Incident\n     */\n    public function handle(CreateIncidentCommand $command)\n    {\n        $data = [\n            'user_id'  => $this->auth->user()->id,\n            'name'     => $command->name,\n            'status'   => $command->status,\n            'visible'  => $command->visible,\n            'stickied' => $command->stickied,\n        ];\n\n        if ($template = IncidentTemplate::where('slug', '=', $command->template)->first()) {\n            $data['message'] = $this->parseTemplate($template, $command);\n        } else {\n            $data['message'] = $command->message;\n        }\n\n        // Link with the component.\n        if ($command->component_id) {\n            $data['component_id'] = $command->component_id;\n        }\n\n        // The incident occurred at a different time.\n        if ($occurredAt = $command->occurred_at) {\n            if ($date = $this->dates->create('Y-m-d H:i', $occurredAt)) {\n                $data['occurred_at'] = $date;\n            } else {\n                throw new InvalidIncidentTimestampException(\"Unable to pass timestamp {$occurredAt}\");\n            }\n        } else {\n            $data['occurred_at'] = Carbon::now();\n        }\n\n        // Create the incident\n        $incident = Incident::create($data);\n\n        // Store any meta?\n        if ($meta = $command->meta) {\n            $this->storeMeta($command->meta, 'incidents', $incident->id);\n        }\n\n        // Update the component.\n        if ($component = Component::find($command->component_id)) {\n            execute(new UpdateComponentCommand(\n                Component::find($command->component_id),\n                null,\n                null,\n                $command->component_status,\n                null,\n                null,\n                null,\n                null,\n                null,\n                false\n            ));\n        }\n\n        event(new IncidentWasCreatedEvent($this->auth->user(), $incident, (bool) $command->notify));\n\n        return $incident;\n    }\n\n    protected function sandboxedTwigTemplateData(String $templateData) {\n\n        if (!$templateData) {\n            return \"\";\n        }\n\n        $policy = new \\Twig\\Sandbox\\SecurityPolicy($this->twigConfig[\"tags\"], \n        $this->twigConfig[\"filters\"],\n        $this->twigConfig[\"methods\"],\n        $this->twigConfig[\"props\"], \n        $this->twigConfig[\"functions\"]);\n\n        $sandbox = new \\Twig\\Extension\\SandboxExtension($policy);\n\n        $templateBasicLoader = new Twig_Loader_Array([\n            'firstStageLoader' => $templateData\n        ]);\n\n        $sandBoxBasicLoader = new Twig_Loader_Array([\n            'secondStageLoader' => '{% sandbox %}{% include \"firstStageLoader\" %} {% endsandbox %}'\n        ]);\n\n        $hardenedLoader = new \\Twig\\Loader\\ChainLoader([$templateBasicLoader, $sandBoxBasicLoader]);\n        $twig = new Twig_Environment($hardenedLoader);\n        $twig->addExtension($sandbox);\n        return $twig;\n    }\n\n    /**\n     * Compiles an incident template into an incident message.\n     *\n     * @param \\CachetHQ\\Cachet\\Models\\IncidentTemplate                     $template\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\CreateIncidentCommand $command\n     *\n     * @return string\n     */\n    protected function parseTemplate(IncidentTemplate $template, CreateIncidentCommand $command)\n    {\n        $template = $this->sandboxedTwigTemplateData($template->template);\n\n        $vars = array_merge($command->template_vars, [\n            'incident' => [\n                'name'             => $command->name,\n                'status'           => $command->status,\n                'message'          => $command->message,\n                'visible'          => $command->visible,\n                'notify'           => $command->notify,\n                'stickied'         => $command->stickied,\n                'occurred_at'      => $command->occurred_at,\n                'component'        => Component::find($command->component_id) ?: null,\n                'component_status' => $command->component_status,\n            ],\n        ]);\n        \n        return $template->render('secondStageLoader', $vars);\n    }\n}\n", "<?php\n\n/*\n * This file is part of Cachet.\n *\n * (c) Alt Three Services Limited\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace CachetHQ\\Cachet\\Bus\\Handlers\\Commands\\Incident;\n\nuse CachetHQ\\Cachet\\Bus\\Commands\\Component\\UpdateComponentCommand;\nuse CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand;\nuse CachetHQ\\Cachet\\Bus\\Events\\Incident\\IncidentWasUpdatedEvent;\nuse CachetHQ\\Cachet\\Bus\\Exceptions\\Incident\\InvalidIncidentTimestampException;\nuse CachetHQ\\Cachet\\Bus\\Handlers\\Traits\\StoresMeta;\nuse CachetHQ\\Cachet\\Models\\Component;\nuse CachetHQ\\Cachet\\Models\\Incident;\nuse CachetHQ\\Cachet\\Models\\IncidentTemplate;\nuse CachetHQ\\Cachet\\Services\\Dates\\DateFactory;\nuse Illuminate\\Contracts\\Auth\\Guard;\nuse Twig\\Environment as Twig_Environment;\nuse Twig\\Loader\\ArrayLoader as Twig_Loader_Array;\n\n/**\n * This is the update incident command handler.\n *\n * @author James Brooks <james@alt-three.com>\n */\nclass UpdateIncidentCommandHandler\n{\n    use StoresMeta;\n\n    /**\n     * The authentication guard instance.\n     *\n     * @var \\Illuminate\\Contracts\\Auth\\Guard\n     */\n    protected $auth;\n\n    /**\n     * The date factory instance.\n     *\n     * @var \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory\n     */\n    protected $dates;\n\n    /**\n     * Twig configuration array.\n     */\n    protected $twigConfig;\n\n    /**\n     * Create a new update incident command handler instance.\n     *\n     * @param \\Illuminate\\Contracts\\Auth\\Guard            $auth\n     * @param \\CachetHQ\\Cachet\\Services\\Dates\\DateFactory $dates\n     *\n     * @return void\n     */\n    public function __construct(Guard $auth, DateFactory $dates)\n    {\n        $this->auth = $auth;\n        $this->dates = $dates;\n\n        $this->twigConfig = $twigConfig = config(\"cachet.twig\");\n    }\n\n    /**\n     * Handle the update incident command.\n     *\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand $command\n     *\n     * @return \\CachetHQ\\Cachet\\Models\\Incident\n     */\n    public function handle(UpdateIncidentCommand $command)\n    {\n        if ($template = IncidentTemplate::where('slug', '=', $command->template)->first()) {\n            $command->message = $this->parseTemplate($template, $command);\n        }\n\n        $incident = $command->incident;\n        $incident->fill($this->filter($command));\n\n        // The incident occurred at a different time.\n        if ($occurredAt = $command->occurred_at) {\n            if ($date = $this->dates->create('Y-m-d H:i', $occurredAt)) {\n                $incident->fill(['occurred_at' => $date]);\n            } else {\n                throw new InvalidIncidentTimestampException(\"Unable to pass timestamp {$occurredAt}\");\n            }\n        }\n\n        // Rather than making lots of updates, just fill and save.\n        $incident->save();\n\n        // Store any meta?\n        if ($meta = $command->meta) {\n            $this->storeMeta($command->meta, 'incidents', $incident->id);\n        }\n\n        // Update the component.\n        if ($component = Component::find($command->component_id)) {\n            execute(new UpdateComponentCommand(\n                Component::find($command->component_id),\n                null,\n                null,\n                $command->component_status,\n                null,\n                null,\n                null,\n                null,\n                null,\n                false\n            ));\n        }\n\n        event(new IncidentWasUpdatedEvent($this->auth->user(), $incident));\n\n        return $incident;\n    }\n\n    /**\n     * Filter the command data.\n     *\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand $command\n     *\n     * @return array\n     */\n    protected function filter(UpdateIncidentCommand $command)\n    {\n        $params = [\n            'name'             => $command->name,\n            'status'           => $command->status,\n            'message'          => $command->message,\n            'visible'          => $command->visible,\n            'stickied'         => $command->stickied,\n            'component_id'     => $command->component_id,\n            'component_status' => $command->component_status,\n            'notify'           => $command->notify,\n        ];\n\n        return array_filter($params, function ($val) {\n            return $val !== null;\n        });\n    }\n\n    protected function sandboxedTwigTemplateData(String $templateData) {\n        $policy = new \\Twig\\Sandbox\\SecurityPolicy($this->twigConfig[\"tags\"], \n        $this->twigConfig[\"filters\"],\n        $this->twigConfig[\"methods\"],\n        $this->twigConfig[\"props\"], \n        $this->twigConfig[\"functions\"]);\n        $sandbox = new \\Twig\\Extension\\SandboxExtension($policy);\n\n        $templateBasicLoader = new \\Twig\\Loader\\ArrayLoader([\n            'firstStageLoader' => $templateData\n        ]);\n\n        $sandBoxBasicLoader = new \\Twig\\Loader\\ArrayLoader([\n            'secondStageLoader' => '{% sandbox %}{% include \"firstStageLoader\" %} {% endsandbox %}'\n        ]);\n\n        $hardenedLoader = new \\Twig\\Loader\\ChainLoader([$templateBasicLoader, $sandBoxBasicLoader]);\n        $twig = new \\Twig\\Environment($hardenedLoader);\n        $twig->addExtension($sandbox);\n        return $twig;\n    }\n\n    /**\n     * Compiles an incident template into an incident message.\n     *\n     * @param \\CachetHQ\\Cachet\\Models\\IncidentTemplate                     $template\n     * @param \\CachetHQ\\Cachet\\Bus\\Commands\\Incident\\UpdateIncidentCommand $command\n     *\n     * @return string\n     */\n    protected function parseTemplate(IncidentTemplate $template, UpdateIncidentCommand $command)\n    {\n        $template = $this->sandboxedTwigTemplateData($template->template);\n\n        $vars = array_merge($command->template_vars, [\n            'incident' => [\n                'name'             => $command->name,\n                'status'           => $command->status,\n                'message'          => $command->message,\n                'visible'          => $command->visible,\n                'notify'           => $command->notify,\n                'stickied'         => $command->stickied,\n                'occurred_at'      => $command->occurred_at,\n                'component'        => Component::find($command->component_id) ?: null,\n                'component_status' => $command->component_status,\n            ],\n        ]);\n        \n        return $template->render('secondStageLoader', $vars);\n    }\n}\n", "{\n    \"name\": \"cachethq/cachet\",\n    \"description\": \"An open source status page system, for everyone.\",\n    \"keywords\": [\n        \"laravel\",\n        \"cachet\",\n        \"alt-three\",\n        \"status\",\n        \"page\"\n    ],\n    \"type\": \"project\",\n    \"license\": \"BSD-3-Clause\",\n    \"authors\": [\n        {\n            \"name\": \"James Brooks\",\n            \"email\": \"james@alt-three.com\"\n        },\n        {\n            \"name\": \"Graham Campbell\",\n            \"email\": \"graham@alt-three.com\"\n        },\n        {\n            \"name\": \"Joseph Cohen\",\n            \"email\": \"joe@alt-three.com\"\n        }\n    ],\n    \"replace\": {\n        \"paragonie/random_compat\": \"*\",\n        \"symfony/polyfill-mbstring\": \"*\"\n    },\n    \"require\": {\n        \"php\": \"^7.1.3\",\n        \"ext-mbstring\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-xml\": \"*\",\n        \"alt-three/bus\": \"^4.1\",\n        \"cachethq/badger\": \"^2.0\",\n        \"cachethq/emoji\": \"^3.0\",\n        \"cachethq/twitter\": \"^3.0\",\n        \"alt-three/validator\": \"^4.1\",\n        \"aws/aws-sdk-php\": \"^3.7\",\n        \"barryvdh/laravel-cors\": \"^0.11.0\",\n        \"bugsnag/bugsnag-laravel\": \"^2.15\",\n        \"chillerlan/php-qrcode\": \"^2.0\",\n        \"doctrine/dbal\": \"2.9.*\",\n        \"fideloper/proxy\": \"^4.0\",\n        \"graham-campbell/binput\": \"^6.0\",\n        \"graham-campbell/exceptions\": \"^11.1\",\n        \"graham-campbell/markdown\": \"^11.2\",\n        \"guzzlehttp/guzzle\": \"^6.3.3\",\n        \"jenssegers/date\": \"^3.4\",\n        \"laravel/framework\": \"5.7.*\",\n        \"laravel/tinker\": \"^1.0\",\n        \"mccool/laravel-auto-presenter\": \"^7.1\",\n        \"nexmo/client\": \"^1.5\",\n        \"pragmarx/google2fa\": \"^5.0\",\n        \"predis/predis\": \"^1.1\",\n        \"twig/twig\": \"^3.0\"\n    },\n    \"require-dev\": {\n        \"ext-sqlite3\": \"*\",\n        \"alt-three/testbench\": \"5.0.x-dev\",\n        \"barryvdh/laravel-debugbar\": \"^3.2\",\n        \"filp/whoops\": \"^2.3\",\n        \"fzaninotto/faker\": \"^1.8\",\n        \"graham-campbell/analyzer\": \"^2.1\",\n        \"mockery/mockery\": \"^1.2\",\n        \"phpunit/phpunit\": \"^7.4\",\n        \"tightenco/mailthief\": \"^0.3.14\"\n    },\n    \"suggest\": {\n        \"ext-apc\": \"APC Support cache driver.\"\n    },\n    \"autoload\": {\n        \"classmap\": [\n            \"database\"\n        ],\n        \"files\": [\n            \"app/helpers.php\"\n        ],\n        \"psr-4\": {\n            \"CachetHQ\\\\Cachet\\\\\": \"app/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"CachetHQ\\\\Tests\\\\Cachet\\\\\": \"tests/\"\n        }\n    },\n    \"scripts\": {\n        \"post-root-package-install\": [\n          \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\n        ],\n        \"post-create-project-cmd\": [\n          \"@php artisan key:generate\"\n        ],\n        \"post-autoload-dump\": [\n          \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\n          \"@php artisan package:discover\"\n        ],\n        \"test\": [\n          \"@php artisan config:clear\",\n          \"vendor/bin/phpunit\"\n        ],\n        \"test-coverage\": [\n          \"@php artisan config:clear\",\n          \"vendor/bin/phpunit --coverage-clover=coverage.xml\"\n        ]\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"7.1.3\"\n        },\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true,\n        \"optimize-autoloader\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"2.4-dev\"\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n", "<?php\n\n/*\n * This file is part of Cachet.\n *\n * (c) Alt Three Services Limited\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Cachet Timezone\n    |--------------------------------------------------------------------------\n    |\n    | The timezone Cachet uses for converting timezones on saving.\n    |\n    */\n\n    'timezone' => 'UTC',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Docker\n    |--------------------------------------------------------------------------\n    |\n    | Is the installation running under a Docker container?\n    |\n    */\n\n    'is_docker' => env('DOCKER', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Beacon\n    |--------------------------------------------------------------------------\n    |\n    | Has the installation agreed to sending us Beacon data?\n    |\n    | Default: true\n    |\n    */\n\n    'beacon' => env('CACHET_BEACON', true),\n\n\n    /*\n    |--------------------------------------------------------------------------\n    | Templates configurations\n    |--------------------------------------------------------------------------\n    |\n    | Security fix: now user can provide information which will be included to the Twig sandbox settings\n    |\n    | Default: Described below\n    |\n    */\n    'twig' => [\n        'methods' => [], \n        'functions' => [],\n        'filters' => ['escape'],\n        'tags' => ['if'],\n        'props' => [],\n    ]\n];\n"], "filenames": ["app/Bus/Handlers/Commands/Incident/CreateIncidentCommandHandler.php", "app/Bus/Handlers/Commands/Incident/UpdateIncidentCommandHandler.php", "composer.json", "config/cachet.php"], "buggy_code_start_loc": [25, 50, 58, 48], "buggy_code_end_loc": [162, 171, 59, 48], "fixing_code_start_loc": [26, 51, 58, 49], "fixing_code_end_loc": [196, 199, 59, 67], "type": "CWE-74", "message": "Cachet, the open-source status page system. Prior to the 2.4 branch, a template functionality which allows users to create templates allows them to execute any code on the server during the bad filtration and old twig version. Commit 6fb043e109d2a262ce3974e863c54e9e5f5e0587 of the 2.4 branch contains a patch for this issue.", "other": {"cve": {"id": "CVE-2023-43661", "sourceIdentifier": "security-advisories@github.com", "published": "2023-10-11T20:15:10.787", "lastModified": "2023-10-18T02:02:20.857", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cachet, the open-source status page system. Prior to the 2.4 branch, a template functionality which allows users to create templates allows them to execute any code on the server during the bad filtration and old twig version. Commit 6fb043e109d2a262ce3974e863c54e9e5f5e0587 of the 2.4 branch contains a patch for this issue."}, {"lang": "es", "value": "Cachet, el sistema de p\u00e1ginas de estado de c\u00f3digo abierto. Antes de la rama 2.4, tiene una funcionalidad de plantilla que permit\u00eda a los usuarios crear plantillas, les permit\u00eda ejecutar cualquier c\u00f3digo en el servidor durante la filtraci\u00f3n incorrecta y la versi\u00f3n antigua de twig. El commit 6fb043e109d2a262ce3974e863c54e9e5f5e0587 de la rama 2.4 contiene un parche para este problema."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.1, "impactScore": 5.3}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-74"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:all-three:cachet:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.4", "matchCriteriaId": "B341A3F1-E791-4688-8C56-DFF77B4E9197"}]}]}], "references": [{"url": "https://github.com/cachethq/cachet/commit/6fb043e109d2a262ce3974e863c54e9e5f5e0587", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/cachethq/cachet/security/advisories/GHSA-hv79-p62r-wg3p", "source": "security-advisories@github.com", "tags": ["Exploit", "Mitigation", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/cachethq/cachet/commit/6fb043e109d2a262ce3974e863c54e9e5f5e0587"}}