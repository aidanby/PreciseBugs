{"buggy_code": ["<?php\n\nnamespace MicroweberPackages\\Helper;\n\nuse voku\\helper\\AntiXSS;\n\nclass XSSClean\n{\n\n\n    public function cleanArray($array)    {\n\n        if (is_array($array)) {\n\n            $cleanedArray = [];\n            foreach ($array as $key => $value) {\n                if (is_string($key)) {\n                    $key = $this->clean($key);\n                }\n\n                if (is_array($value)) {\n                    $cleanedArray[$key] = $this->cleanArray($value);\n                } else {\n                    $cleanedArray[$key] = $this->clean($value);\n                }\n            }\n\n            return $cleanedArray;\n        }\n    }\n\n    public function clean($html)\n    {\n        if(is_array($html)){\n            return $this->cleanArray($html);\n        }\n\n\n        $_preserve_replaced_tags = [];\n        $html = str_ireplace('{SITE_URL}','___mw-site-url-temp-replace-on-clean___', $html);\n//        $tags = [ 'textarea', 'pre','code', 'svg', 'kbd'];\n//\n//        foreach ($tags as $tag) {\n//\n//            //  $script_pattern = \"/<\".$tag.\"[^>]*>(.*)<\\/.$tag.>/Uis\";\n//            $script_pattern = \"/\\<\" . $tag . \"(.*?)?\\>(.|\\s)*?\\<\\/\" . $tag . \"\\>/i\";\n//\n//            preg_match_all($script_pattern, $html, $mw_script_matches);\n//\n//            if (!empty($mw_script_matches)) {\n//                foreach ($mw_script_matches [0] as $key => $value) {\n//                    if ($value != '') {\n//                        $v1 = crc32($value);\n//                        $v1 = 'mw_xss_clean_repeserve_tags_tag_' . $tag . $v1 . '';\n//                        $html = str_replace($value, $v1, $html);\n//                        $_preserve_replaced_tags[$v1] = $value;\n//\n//                    }\n//                }\n//            }\n//\n//        }\n\n\n\n\n\n\n\n\n\n\n         // from https://portswigger.net/web-security/cross-site-scripting/cheat-sheet#ontransitionend\n        $cleanStrings = [\n            'ontransitionstart',\n            'onwebkitanimationend',\n            'onwebkitanimationiteration',\n            'onwebkitanimationstart',\n            'onwebkittransitionend',\n            'ontransitionrun',\n            'onloadedmetadata',\n            'ondurationchange',\n            'oncanplaythrough',\n            'oncuechange',\n            'onbounce',\n            'onbegin',\n            'onbeforeunload',\n            'onbeforescriptexecute',\n            'onbeforeprint',\n            'onanimationstart',\n            'onanimationiteration',\n            'onanimationend',\n            'onanimationcancel',\n            'onafterscriptexecute',\n            'onfocusin',\n            'onhashchange',\n            'onload',\n            'onunload',\n            'onloadend',\n            'onloadstart',\n            'onmessage',\n            'onpageshow',\n            'onloadedmetadata',\n            'onloadeddata',\n            'onplay',\n            'onplaying',\n            'onpopstate',\n            'onprogress',\n            'onrepeat',\n            'onresize',\n            'onscroll',\n            'onstart',\n            'ontimeupdate',\n            'ontoggle',\n            'ontransitionend',\n            'ontransitioncancel',\n            'ontransitionrun',\n            'ontransitionstart',\n            'onafterprint',\n            'onauxclick',\n            'onbeforecopy',\n            'onbeforecut',\n            'onblur',\n            'onchange',\n            'onclick',\n            'onclose',\n            'oncontextmenu',\n            'oncopy',\n            'oncut',\n            'ondblclick',\n            'ondrag',\n            'ondragend',\n            'ondragenter',\n            'ondragleave',\n            'ondragover',\n            'ondragstart',\n            'ondragexit',\n            'ondrop',\n            'onfocusout',\n            'onfullscreenchange',\n            'oninput',\n            'oninvalid',\n            'onkeydown',\n            'onkeypress',\n            'onkeyup',\n            'onmousedown',\n            'onmouseenter',\n            'onmouseleave',\n            'onmousemove',\n            'onmouseout',\n            'onmouseover',\n            'onmouseup',\n            'onmousewheel',\n            'onmozfullscreenchange',\n            'onpagehide',\n            'onpaste',\n            'onpause',\n            'onpointerdown',\n            'onpointerenter',\n            'onpointerleave',\n            'onpointermove',\n            'onpointerout',\n            'onpointerover',\n            'onpointerrawupdate',\n            'onpointerup',\n            'onreset',\n            'onsearch',\n            'onseeked',\n            'onseeking',\n            'onselect',\n            'onselectionchange',\n            'onselectstart',\n            'onshow',\n            'onsubmit',\n            'ontouchend',\n            'ontouchmove',\n            'ontouchstart',\n            'onvolumechange',\n            'onwheel',\n            'onWebkitAnimationEnd',\n            'onWebkitAnimationIteration',\n            'onWebkitAnimationStart',\n            'onWebkitTransitionEnd',\n            'onwebkitTransitionEnd',\n            'onunhandledrejection'\n        ];\n\n        $antiXss = new AntiXSS();\n        $antiXss->addEvilHtmlTags($cleanStrings);\n        $antiXss->addEvilAttributes($cleanStrings);\n        $antiXss->addNeverAllowedOnEventsAfterwards($cleanStrings);\n\n        $allowAttibutes = [\n            'style',\n\n            'href',\n            'alt',\n            'target',\n            'srcset',\n            'sizes',\n            'title',\n            'xlink:href',\n        ];\n        $antiXss->removeEvilAttributes($allowAttibutes);\n\n        $allowTags = [\n            'head',\n            'header',\n            'main',\n            'aside',\n            'img',\n            'form',\n            'svg',\n            'title',\n            'input',\n            'button',\n            'select',\n            'option',\n            'textarea',\n            'picture',\n            'source',\n         ];\n\n        $antiXss->removeEvilHtmlTags($allowTags);\n        $allowRegex = [\n//            '<!--(.*)-->' => '<!--(.*)-->',\n//            '&lt;!--',\n//            '&lt;!--$1--&gt;'\n            '<!--(.*)-->' => '&lt;!--$1--&gt;',\n            '&lt;!--', '&lt;!--$1--&gt;'\n        ];\n\n\n\n        $antiXss->removeNeverAllowedRegex($allowRegex);\n\n        $allowNotClosed= [\n            'li',\n            'ul',\n            'textarea',\n        ];\n        $antiXss->removeDoNotCloseHtmlTags($allowNotClosed);\n\n\n        $html = $antiXss->xss_clean($html);\n        $html_to_return = $html;\n        if ($_preserve_replaced_tags) {\n            foreach ($_preserve_replaced_tags as $key => $value) {\n\n                $html_to_return = str_replace($key, $value, $html_to_return);\n            }\n        }\n\n\n        $html_to_return = str_ireplace('___mw-site-url-temp-replace-on-clean___','{SITE_URL}', $html_to_return);\n\n\n\n\n        return $html_to_return;\n    }\n\n}\n"], "fixing_code": ["<?php\n\nnamespace MicroweberPackages\\Helper;\n\nuse voku\\helper\\AntiXSS;\n\nclass XSSClean\n{\n\n\n    public function cleanArray($array)    {\n\n        if (is_array($array)) {\n\n            $cleanedArray = [];\n            foreach ($array as $key => $value) {\n                if (is_string($key)) {\n                    $key = $this->clean($key);\n                }\n\n                if (is_array($value)) {\n                    $cleanedArray[$key] = $this->cleanArray($value);\n                } else {\n                    $cleanedArray[$key] = $this->clean($value);\n                }\n            }\n\n            return $cleanedArray;\n        }\n    }\n\n    public function clean($html)\n    {\n        if(is_array($html)){\n            return $this->cleanArray($html);\n        }\n\n\n        $_preserve_replaced_tags = [];\n        $html = str_ireplace('{SITE_URL}','___mw-site-url-temp-replace-on-clean___', $html);\n//        $tags = [ 'textarea', 'pre','code', 'svg', 'kbd'];\n//\n//        foreach ($tags as $tag) {\n//\n//            //  $script_pattern = \"/<\".$tag.\"[^>]*>(.*)<\\/.$tag.>/Uis\";\n//            $script_pattern = \"/\\<\" . $tag . \"(.*?)?\\>(.|\\s)*?\\<\\/\" . $tag . \"\\>/i\";\n//\n//            preg_match_all($script_pattern, $html, $mw_script_matches);\n//\n//            if (!empty($mw_script_matches)) {\n//                foreach ($mw_script_matches [0] as $key => $value) {\n//                    if ($value != '') {\n//                        $v1 = crc32($value);\n//                        $v1 = 'mw_xss_clean_repeserve_tags_tag_' . $tag . $v1 . '';\n//                        $html = str_replace($value, $v1, $html);\n//                        $_preserve_replaced_tags[$v1] = $value;\n//\n//                    }\n//                }\n//            }\n//\n//        }\n\n\n\n\n\n\n\n\n\n\n         // from https://portswigger.net/web-security/cross-site-scripting/cheat-sheet#ontransitionend\n        $cleanStrings = [\n            'ontransitionstart',\n            'onwebkitanimationend',\n            'onwebkitanimationiteration',\n            'onwebkitanimationstart',\n            'onwebkittransitionend',\n            'ontransitionrun',\n            'onloadedmetadata',\n            'ondurationchange',\n            'oncanplaythrough',\n            'oncuechange',\n            'onbounce',\n            'onbegin',\n            'onbeforeunload',\n            'onbeforescriptexecute',\n            'onbeforeprint',\n            'onanimationstart',\n            'onanimationiteration',\n            'onanimationend',\n            'onanimationcancel',\n            'onafterscriptexecute',\n            'onfocusin',\n            'onhashchange',\n            'onload',\n            'onunload',\n            'onloadend',\n            'onloadstart',\n            'onmessage',\n            'onpageshow',\n            'onloadedmetadata',\n            'onloadeddata',\n            'onplay',\n            'onplaying',\n            'onpopstate',\n            'onprogress',\n            'onrepeat',\n            'onresize',\n            'onscroll',\n            'onstart',\n            'ontimeupdate',\n            'ontoggle',\n            'ontransitionend',\n            'ontransitioncancel',\n            'ontransitionrun',\n            'ontransitionstart',\n            'onafterprint',\n            'onauxclick',\n            'onbeforecopy',\n            'onbeforecut',\n            'onbeforeinput',\n            'onblur',\n            'onchange',\n            'onclick',\n            'onclose',\n            'oncontextmenu',\n            'oncopy',\n            'oncut',\n            'ondblclick',\n            'ondrag',\n            'ondragend',\n            'ondragenter',\n            'ondragleave',\n            'ondragover',\n            'ondragstart',\n            'ondragexit',\n            'ondrop',\n            'onfocusout',\n            'onfullscreenchange',\n            'oninput',\n            'oninvalid',\n            'onkeydown',\n            'onkeypress',\n            'onkeyup',\n            'onmousedown',\n            'onmouseenter',\n            'onmouseleave',\n            'onmousemove',\n            'onmouseout',\n            'onmouseover',\n            'onmouseup',\n            'onmousewheel',\n            'onmozfullscreenchange',\n            'onpagehide',\n            'onpaste',\n            'onpause',\n            'onpointerdown',\n            'onpointerenter',\n            'onpointerleave',\n            'onpointermove',\n            'onpointerout',\n            'onpointerover',\n            'onpointerrawupdate',\n            'onpointerup',\n            'onreset',\n            'onsearch',\n            'onseeked',\n            'onseeking',\n            'onselect',\n            'onselectionchange',\n            'onselectstart',\n            'onshow',\n            'onsubmit',\n            'ontouchend',\n            'ontouchmove',\n            'ontouchstart',\n            'onvolumechange',\n            'onwheel',\n            'onWebkitAnimationEnd',\n            'onWebkitAnimationIteration',\n            'onWebkitAnimationStart',\n            'onWebkitTransitionEnd',\n            'onwebkitTransitionEnd',\n            'onunhandledrejection'\n        ];\n\n        $antiXss = new AntiXSS();\n        $antiXss->addEvilHtmlTags($cleanStrings);\n        $antiXss->addEvilAttributes($cleanStrings);\n        $antiXss->addNeverAllowedOnEventsAfterwards($cleanStrings);\n\n        $allowAttibutes = [\n            'style',\n\n            'href',\n            'alt',\n            'target',\n            'srcset',\n            'sizes',\n            'title',\n            'xlink:href',\n        ];\n        $antiXss->removeEvilAttributes($allowAttibutes);\n\n        $allowTags = [\n            'head',\n            'header',\n            'main',\n            'aside',\n            'img',\n            'form',\n            'svg',\n            'title',\n            'input',\n            'button',\n            'select',\n            'option',\n            'textarea',\n            'picture',\n            'source',\n         ];\n\n        $antiXss->removeEvilHtmlTags($allowTags);\n        $allowRegex = [\n//            '<!--(.*)-->' => '<!--(.*)-->',\n//            '&lt;!--',\n//            '&lt;!--$1--&gt;'\n            '<!--(.*)-->' => '&lt;!--$1--&gt;',\n            '&lt;!--', '&lt;!--$1--&gt;'\n        ];\n\n\n\n        $antiXss->removeNeverAllowedRegex($allowRegex);\n\n        $allowNotClosed= [\n            'li',\n            'ul',\n            'textarea',\n        ];\n        $antiXss->removeDoNotCloseHtmlTags($allowNotClosed);\n\n\n        $html = $antiXss->xss_clean($html);\n        $html_to_return = $html;\n        if ($_preserve_replaced_tags) {\n            foreach ($_preserve_replaced_tags as $key => $value) {\n\n                $html_to_return = str_replace($key, $value, $html_to_return);\n            }\n        }\n\n\n        $html_to_return = str_ireplace('___mw-site-url-temp-replace-on-clean___','{SITE_URL}', $html_to_return);\n\n\n\n\n        return $html_to_return;\n    }\n\n}\n"], "filenames": ["src/MicroweberPackages/Helper/XSSClean.php"], "buggy_code_start_loc": [122], "buggy_code_end_loc": [122], "fixing_code_start_loc": [123], "fixing_code_end_loc": [124], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository microweber/microweber prior to 1.3.3.", "other": {"cve": {"id": "CVE-2023-1081", "sourceIdentifier": "security@huntr.dev", "published": "2023-02-28T02:15:08.893", "lastModified": "2023-03-04T02:06:16.360", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository microweber/microweber prior to 1.3.3."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:U/C:L/I:L/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "HIGH", "baseScore": 5.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.9, "impactScore": 4.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microweber:microweber:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.3.2", "matchCriteriaId": "F617B71A-57BB-443F-B3A7-7EFF563372F5"}]}]}], "references": [{"url": "https://github.com/microweber/microweber/commit/29d418461d8407688f2720e7b4be915e03fc16c1", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/cf59deed-9d43-4552-acfd-43f38f3aabba", "source": "security@huntr.dev", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/microweber/microweber/commit/29d418461d8407688f2720e7b4be915e03fc16c1"}}