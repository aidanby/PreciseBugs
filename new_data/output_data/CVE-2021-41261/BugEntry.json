{"buggy_code": ["{\n    \"name\": \"galette/galette\",\n    \"description\": \"Galette - web membership management towards non profit organizations\",\n    \"license\": \"GPLv3\",\n    \"type\": \"project\",\n    \"keywords\": [\n        \"membership\",\n        \"web\",\n        \"management\"\n    ],\n    \"homepage\": \"https://galette.eu/\",\n    \"support\": {\n        \"irc\": \"irc://irc.oftc.net/galette\",\n        \"issues\": \"https://bugs.galette.eu/projects/galette\",\n        \"docs\": \"https://doc.galette.eu\"\n    },\n    \"authors\": [\n        {\n            \"name\": \"Johan Cwiklinski\",\n            \"email\": \"trasher@x-tnd.be\",\n            \"homepage\": \"https://galette.eu\"\n        }\n    ],\n    \"autoload\": {\n        \"psr-4\": {\n            \"Galette\\\\\": \"lib/Galette\"\n        }\n    },\n    \"require\": {\n        \"php\": \">=7.3\",\n        \"slim/slim\": \"^3.0\",\n        \"monolog/monolog\": \"^2.1\",\n        \"mathmarques/smarty-view\": \"^1.1\",\n        \"laminas/laminas-db\": \"^2.11\",\n        \"laminas/laminas-stdlib\": \"^3.3\",\n        \"analog/analog\": \"^1.0\",\n        \"phpmailer/phpmailer\": \"^6.1\",\n        \"tecnickcom/tcpdf\": \"^6.3\",\n        \"akrabat/rka-slim-session-middleware\": \"^2.0\",\n        \"laminas/laminas-i18n\": \"^2.11\",\n        \"laminas/laminas-cache\": \"^2.10\",\n        \"soundasleep/html2text\": \"^1.1\",\n        \"aneek/slim-event-dispatcher\": \"^1.0\",\n        \"slim/flash\": \"^0.4.0\",\n        \"league/event\": \"^2.1\",\n        \"smarty/smarty\": \"^3.1\",\n        \"psr/http-message\": \"^1.0\",\n        \"psr/container\": \"^1.0\",\n        \"php-di/slim-bridge\": \"2.0.0\",\n        \"doctrine/annotations\": \"^1.8\",\n        \"laminas/laminas-servicemanager\": \"3.7\",\n        \"symfony/polyfill-php80\": \"^1.23\"\n    },\n    \"require-dev\": {\n        \"atoum/atoum\": \"dev-master\",\n        \"galette/smarty-xgettext\": \"^1.2\",\n        \"squizlabs/php_codesniffer\": \"^3.5\"\n    },\n    \"config\": {\n        \"optimize-autoloader\": true\n    },\n    \"scripts\": {\n        \"post-install-cmd\": [\n            \"patch -d vendor/slim/slim/ -p3 < ../patches/slim-php81.patch\",\n            \"patch -d vendor/smarty/smarty/ -p3 < ../patches/smarty-php81.patch\",\n            \"patch -d vendor/mathmarques/smarty-view/ -p3 < ../patches/smarty-view-php81.patch\",\n            \"patch -d vendor/laminas/ -p2 < ../patches/laminas-php81.patch\"\n        ]\n    }\n}\n", "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"abdb30cee5eeb0dad05c159a1c10880d\",\n    \"packages\": [\n        {\n            \"name\": \"akrabat/rka-slim-session-middleware\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/akrabat/rka-slim-session-middleware.git\",\n                \"reference\": \"e4f8f485f6d52fd4c0a2254d0b12240245629e6a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/akrabat/rka-slim-session-middleware/zipball/e4f8f485f6d52fd4c0a2254d0b12240245629e6a\",\n                \"reference\": \"e4f8f485f6d52fd4c0a2254d0b12240245629e6a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5\"\n            },\n            \"require-dev\": {\n                \"slim/slim\": \"^3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"RKA\\\\\": \"RKA\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Rob Allen\",\n                    \"email\": \"rob@akrabat.com\",\n                    \"homepage\": \"http://akrabat.com\"\n                }\n            ],\n            \"description\": \"Simple session middleware for Slim Framework\",\n            \"homepage\": \"http://github.com/akrabat/rka-slim-session-middleware\",\n            \"keywords\": [\n                \"middleware\",\n                \"session\",\n                \"slim\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/akrabat/rka-slim-session-middleware/issues\",\n                \"source\": \"https://github.com/akrabat/rka-slim-session-middleware/tree/master\"\n            },\n            \"time\": \"2016-04-18T07:52:43+00:00\"\n        },\n        {\n            \"name\": \"analog/analog\",\n            \"version\": \"1.0.18-stable\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/jbroadway/analog.git\",\n                \"reference\": \"d9b5db551ccd91d3ce41a7425da6672d038ee6b1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/jbroadway/analog/zipball/d9b5db551ccd91d3ce41a7425da6672d038ee6b1\",\n                \"reference\": \"d9b5db551ccd91d3ce41a7425da6672d038ee6b1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"psr/log\": \"^1.0.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Analog\": \"lib/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Johnny Broadway\",\n                    \"email\": \"johnny@johnnybroadway.com\",\n                    \"homepage\": \"http://www.johnnybroadway.com/\"\n                }\n            ],\n            \"description\": \"Fast, flexible, easy PSR-3-compatible PHP logging package with dozens of handlers.\",\n            \"homepage\": \"https://github.com/jbroadway/analog\",\n            \"keywords\": [\n                \"PSR3\",\n                \"alerts\",\n                \"amon\",\n                \"apprise\",\n                \"chrome-logger\",\n                \"console\",\n                \"debug\",\n                \"debugging\",\n                \"error\",\n                \"errors\",\n                \"firephp\",\n                \"gelf\",\n                \"log\",\n                \"logger\",\n                \"logging\",\n                \"logs\",\n                \"monitor\",\n                \"monitoring\",\n                \"psr-3\",\n                \"stderr\",\n                \"syslog\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/jbroadway/analog/issues\",\n                \"source\": \"https://github.com/jbroadway/analog/tree/1.0.18-stable\"\n            },\n            \"time\": \"2021-04-06T15:56:20+00:00\"\n        },\n        {\n            \"name\": \"aneek/slim-event-dispatcher\",\n            \"version\": \"1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/aneek/slim-event-dispatcher.git\",\n                \"reference\": \"9b3eb70b0408cc7131337796752df312c19abb99\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/aneek/slim-event-dispatcher/zipball/9b3eb70b0408cc7131337796752df312c19abb99\",\n                \"reference\": \"9b3eb70b0408cc7131337796752df312c19abb99\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"league/event\": \"^2.1\",\n                \"php\": \">= 5.6\",\n                \"slim/slim\": \"^3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"5.7.22\",\n                \"symfony/var-dumper\": \"^3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\Event\\\\\": \"./src/Event\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Aneek Mukhopadhyay\",\n                    \"email\": \"dream.aneek@gmail.com\"\n                }\n            ],\n            \"description\": \"An event dispatcher bridge between League Event and Slim Framework.\",\n            \"keywords\": [\n                \"emitter\",\n                \"event\",\n                \"event-dispatcher\",\n                \"listener\",\n                \"slim framework\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/aneek/slim-event-dispatcher/issues\",\n                \"source\": \"https://github.com/aneek/slim-event-dispatcher/tree/develop\"\n            },\n            \"time\": \"2017-09-27T07:58:29+00:00\"\n        },\n        {\n            \"name\": \"container-interop/container-interop\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/container-interop/container-interop.git\",\n                \"reference\": \"79cbf1341c22ec75643d841642dd5d6acd83bdb8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/container-interop/container-interop/zipball/79cbf1341c22ec75643d841642dd5d6acd83bdb8\",\n                \"reference\": \"79cbf1341c22ec75643d841642dd5d6acd83bdb8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"psr/container\": \"^1.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Interop\\\\Container\\\\\": \"src/Interop/Container/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Promoting the interoperability of container objects (DIC, SL, etc.)\",\n            \"homepage\": \"https://github.com/container-interop/container-interop\",\n            \"support\": {\n                \"issues\": \"https://github.com/container-interop/container-interop/issues\",\n                \"source\": \"https://github.com/container-interop/container-interop/tree/master\"\n            },\n            \"abandoned\": \"psr/container\",\n            \"time\": \"2017-02-14T19:40:03+00:00\"\n        },\n        {\n            \"name\": \"doctrine/annotations\",\n            \"version\": \"1.13.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/annotations.git\",\n                \"reference\": \"5b668aef16090008790395c02c893b1ba13f7e08\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/annotations/zipball/5b668aef16090008790395c02c893b1ba13f7e08\",\n                \"reference\": \"5b668aef16090008790395c02c893b1ba13f7e08\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/lexer\": \"1.*\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \"^7.1 || ^8.0\",\n                \"psr/cache\": \"^1 || ^2 || ^3\"\n            },\n            \"require-dev\": {\n                \"doctrine/cache\": \"^1.11 || ^2.0\",\n                \"doctrine/coding-standard\": \"^6.0 || ^8.1\",\n                \"phpstan/phpstan\": \"^0.12.20\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.0 || ^9.1.5\",\n                \"symfony/cache\": \"^4.4 || ^5.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Annotations\\\\\": \"lib/Doctrine/Common/Annotations\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"Docblock Annotations Parser\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/annotations.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"parser\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/annotations/issues\",\n                \"source\": \"https://github.com/doctrine/annotations/tree/1.13.2\"\n            },\n            \"time\": \"2021-08-05T19:00:23+00:00\"\n        },\n        {\n            \"name\": \"doctrine/lexer\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/lexer.git\",\n                \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/lexer/zipball/e864bbf5904cb8f5bb334f99209b48018522f042\",\n                \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"phpstan/phpstan\": \"^0.11.8\",\n                \"phpunit/phpunit\": \"^8.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Lexer\\\\\": \"lib/Doctrine/Common/Lexer\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/lexer.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"lexer\",\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/lexer/issues\",\n                \"source\": \"https://github.com/doctrine/lexer/tree/1.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Flexer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-05-25T17:44:05+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache\",\n            \"version\": \"2.13.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache.git\",\n                \"reference\": \"566948e32f30881cb903ffbd0e3e20dac00cd83e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache/zipball/566948e32f30881cb903ffbd0e3e20dac00cd83e\",\n                \"reference\": \"566948e32f30881cb903ffbd0e3e20dac00cd83e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-cache-storage-adapter-apc\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-apcu\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-blackhole\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-dba\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-ext-mongodb\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-filesystem\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-memcache\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-memcached\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-memory\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-mongodb\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-redis\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-session\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-wincache\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-xcache\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-zend-server\": \"^1.0\",\n                \"laminas/laminas-eventmanager\": \"^3.3\",\n                \"laminas/laminas-servicemanager\": \"^3.6\",\n                \"laminas/laminas-stdlib\": \"^3.3\",\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.3 || ~8.0.0\",\n                \"psr/cache\": \"^1.0\",\n                \"psr/simple-cache\": \"^1.0\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<5.1\"\n            },\n            \"provide\": {\n                \"psr/cache-implementation\": \"1.0\",\n                \"psr/simple-cache-implementation\": \"1.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-cache\": \"^2.9.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cli\": \"^1.0\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-config-aggregator\": \"^1.5\",\n                \"laminas/laminas-feed\": \"^2.14\",\n                \"laminas/laminas-serializer\": \"^2.6\",\n                \"phpbench/phpbench\": \"^1.0.0-beta2\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.5\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-cli\": \"The laminas-cli binary can be used to consume commands provided by this component\",\n                \"laminas/laminas-serializer\": \"Laminas\\\\Serializer component\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Cache\",\n                    \"config-provider\": \"Laminas\\\\Cache\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"autoload/patternPluginManagerPolyfill.php\"\n                ],\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Caching implementation with a variety of storage options, as well as codified caching strategies for callbacks, classes, and output\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\",\n                \"psr-16\",\n                \"psr-6\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-cache/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-cache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-08-08T10:21:18+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-apc\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc.git\",\n                \"reference\": \"8b375d994f6e67534f6ae6e995249e706faa30c1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-apc/zipball/8b375d994f6e67534f6ae6e995249e706faa30c1\",\n                \"reference\": \"8b375d994f6e67534f6ae6e995249e706faa30c1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"phpunit/phpunit\": \"^5.7.27 || ^6.5.8 || ^7.1.2\"\n            },\n            \"suggest\": {\n                \"ext-apc\": \"APC or compatible extension, to use the APC storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-apc/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:04:12+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-apcu\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu.git\",\n                \"reference\": \"e182aab739d6b03992a9915cc3c7019391a94548\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-apcu/zipball/e182aab739d6b03992a9915cc3c7019391a94548\",\n                \"reference\": \"e182aab739d6b03992a9915cc3c7019391a94548\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"ext-apcu\": \"*\",\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-apcu\": \"APCU >= 5.1.0, to use the APCu storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for apcu\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-apcu/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-05-03T20:41:53+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-blackhole\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole.git\",\n                \"reference\": \"4af1053efd81785a292c2a9442871c075700345a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-blackhole/zipball/4af1053efd81785a292c2a9442871c075700345a\",\n                \"reference\": \"4af1053efd81785a292c2a9442871c075700345a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1.4\",\n                \"squizlabs/php_codesniffer\": \"^3.5.8\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for blackhole\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-blackhole/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-04-29T21:06:24+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-dba\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba.git\",\n                \"reference\": \"ad968d3d8a0350af8e6717be58bb96e5a9e77f3b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-dba/zipball/ad968d3d8a0350af8e6717be58bb96e5a9e77f3b\",\n                \"reference\": \"ad968d3d8a0350af8e6717be58bb96e5a9e77f3b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-dba\": \"DBA, to use the DBA storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for dba\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-dba/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:08:58+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-ext-mongodb\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb.git\",\n                \"reference\": \"72f68589cc8323fa688167a4720b795dd0907f4e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-ext-mongodb/zipball/72f68589cc8323fa688167a4720b795dd0907f4e\",\n                \"reference\": \"72f68589cc8323fa688167a4720b795dd0907f4e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\",\n                \"mongodb/mongodb\": \"<1.8\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.3\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"~2.2.0\",\n                \"laminas/laminas-serializer\": \"^2.10.1\",\n                \"mongodb/mongodb\": \"^1.8.0\",\n                \"psalm/plugin-phpunit\": \"^0.16.1\",\n                \"vimeo/psalm\": \"^4.9\"\n            },\n            \"suggest\": {\n                \"mongodb/mongodb\": \"MongoDB, to use the ExtMongoDb storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for ext-mongodb\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-ext-mongodb/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-08-10T18:17:48+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-filesystem\",\n            \"version\": \"1.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem.git\",\n                \"reference\": \"76fc488c3fa0ad442e4e70f807305c940d1bdcbc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-filesystem/zipball/76fc488c3fa0ad442e4e70f807305c940d1bdcbc\",\n                \"reference\": \"76fc488c3fa0ad442e4e70f807305c940d1bdcbc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-serializer\": \"^2.10\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for filesystem\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-filesystem/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-04-25T00:27:54+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-memcache\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache.git\",\n                \"reference\": \"1d2a74e300a0fd0b8d0e0cb4e379a173ccad0088\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-memcache/zipball/1d2a74e300a0fd0b8d0e0cb4e379a173ccad0088\",\n                \"reference\": \"1d2a74e300a0fd0b8d0e0cb4e379a173ccad0088\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1.4\",\n                \"laminas/laminas-serializer\": \"^2.10.1\",\n                \"squizlabs/php_codesniffer\": \"^3.6.0\"\n            },\n            \"suggest\": {\n                \"ext-memcache\": \"Memcache >= 2.0.0 to use the Memcache storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for memcache\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-memcache/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2021-04-29T19:57:43+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-memcached\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached.git\",\n                \"reference\": \"d05f33e43a352b85c6d0208e9cfbf2a59f02ede3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-memcached/zipball/d05f33e43a352b85c6d0208e9cfbf2a59f02ede3\",\n                \"reference\": \"d05f33e43a352b85c6d0208e9cfbf2a59f02ede3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0.2\",\n                \"laminas/laminas-coding-standard\": \"~2.2.0\",\n                \"phpunit/phpunit\": \"^9.5.8\"\n            },\n            \"suggest\": {\n                \"ext-memcached\": \"Memcached >= 1.0.0 to use the Memcached storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for memcached\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\",\n                \"memcached\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-memcached/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-08-08T14:51:12+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-memory\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory.git\",\n                \"reference\": \"02c7a4a1118bbd47d1c0f0bfe1e8b140af79d2bd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-memory/zipball/02c7a4a1118bbd47d1c0f0bfe1e8b140af79d2bd\",\n                \"reference\": \"02c7a4a1118bbd47d1c0f0bfe1e8b140af79d2bd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1.4\",\n                \"squizlabs/php_codesniffer\": \"^3.5.8\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for memory\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-memory/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-04-28T17:27:13+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-mongodb\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb.git\",\n                \"reference\": \"ef4aa396b55533b8eb3e1d4126c39a78a22e49a6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-mongodb/zipball/ef4aa396b55533b8eb3e1d4126c39a78a22e49a6\",\n                \"reference\": \"ef4aa396b55533b8eb3e1d4126c39a78a22e49a6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for mongodb\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-mongodb/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:19:10+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-redis\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis.git\",\n                \"reference\": \"de8a63d4a0ef1ccead401eb7fb6d75b57fa3f9ee\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-redis/zipball/de8a63d4a0ef1ccead401eb7fb6d75b57fa3f9ee\",\n                \"reference\": \"de8a63d4a0ef1ccead401eb7fb6d75b57fa3f9ee\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\",\n                \"phpunit/phpunit\": \"<6.1.0\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"composer-runtime-api\": \"^2\",\n                \"ext-posix\": \"*\",\n                \"ext-redis\": \"*\",\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1\",\n                \"laminas/laminas-serializer\": \"^2.10\",\n                \"psalm/plugin-phpunit\": \"^0.15.1\",\n                \"vimeo/psalm\": \"^4.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for redis\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-redis/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-06-03T16:14:07+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-session\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-session.git\",\n                \"reference\": \"74a275056cfca2300eb9a67cd1d917f7066b4113\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-session/zipball/74a275056cfca2300eb9a67cd1d917f7066b4113\",\n                \"reference\": \"74a275056cfca2300eb9a67cd1d917f7066b4113\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1\",\n                \"laminas/laminas-session\": \"^2.7.4\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-session\": \"Laminas\\\\Session component\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for session\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-session/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-session/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-session/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-session\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-05-02T13:52:36+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-wincache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache.git\",\n                \"reference\": \"0f54599c5d9aff11b01adadd2742097f923170ba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-wincache/zipball/0f54599c5d9aff11b01adadd2742097f923170ba\",\n                \"reference\": \"0f54599c5d9aff11b01adadd2742097f923170ba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-wincache\": \"WinCache, to use the WinCache storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for wincache\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-wincache/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:22:49+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-xcache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache.git\",\n                \"reference\": \"24049557aa796ec7527bcc8032ed68346232b219\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-xcache/zipball/24049557aa796ec7527bcc8032ed68346232b219\",\n                \"reference\": \"24049557aa796ec7527bcc8032ed68346232b219\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-serializer\": \"^2.9\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-xcache\": \"XCache, to use the XCache storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for xcache\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-xcache/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:23:46+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-zend-server\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server.git\",\n                \"reference\": \"8d0b0d219a048a92472d89a5e527990f3ea2decc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-zend-server/zipball/8d0b0d219a048a92472d89a5e527990f3ea2decc\",\n                \"reference\": \"8d0b0d219a048a92472d89a5e527990f3ea2decc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for zend-server\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-zend-server/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2020-10-12T16:24:25+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-db\",\n            \"version\": \"2.13.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-db.git\",\n                \"reference\": \"cdabb4bfa669c2c0edb0cb4e014c15b41afd3fb1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-db/zipball/cdabb4bfa669c2c0edb0cb4e014c15b41afd3fb1\",\n                \"reference\": \"cdabb4bfa669c2c0edb0cb4e014c15b41afd3fb1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-stdlib\": \"^3.6\",\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-db\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.2.1\",\n                \"laminas/laminas-eventmanager\": \"^3.4\",\n                \"laminas/laminas-hydrator\": \"^3.2 || ^4.3\",\n                \"laminas/laminas-servicemanager\": \"^3.7\",\n                \"phpunit/phpunit\": \"^9.5.5\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-eventmanager\": \"Laminas\\\\EventManager component\",\n                \"laminas/laminas-hydrator\": \"(^3.2 || ^4.3) Laminas\\\\Hydrator component for using HydratingResultSets\",\n                \"laminas/laminas-servicemanager\": \"Laminas\\\\ServiceManager component\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Db\",\n                    \"config-provider\": \"Laminas\\\\Db\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Db\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Database abstraction layer, SQL abstraction, result set abstraction, and RowDataGateway and TableDataGateway implementations\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"db\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-db/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-db/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-db/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-db\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-21T18:59:44+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-eventmanager\",\n            \"version\": \"3.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-eventmanager.git\",\n                \"reference\": \"a93fd278c97b2d41ebbce5ba048a24e3e6f580ba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-eventmanager/zipball/a93fd278c97b2d41ebbce5ba048a24e3e6f580ba\",\n                \"reference\": \"a93fd278c97b2d41ebbce5ba048a24e3e6f580ba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-eventmanager\": \"*\"\n            },\n            \"require-dev\": {\n                \"container-interop/container-interop\": \"^1.1\",\n                \"laminas/laminas-coding-standard\": \"~2.2.1\",\n                \"laminas/laminas-stdlib\": \"^3.6\",\n                \"phpbench/phpbench\": \"^1.1\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.5.5\"\n            },\n            \"suggest\": {\n                \"container-interop/container-interop\": \"^1.1, to use the lazy listeners feature\",\n                \"laminas/laminas-stdlib\": \"^2.7.3 || ^3.0, to use the FilterChain feature\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\EventManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Trigger and listen to events within a PHP application\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"event\",\n                \"eventmanager\",\n                \"events\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-eventmanager/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-eventmanager/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-eventmanager/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-eventmanager\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-07T22:35:32+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-i18n\",\n            \"version\": \"2.11.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-i18n.git\",\n                \"reference\": \"563b1b720ee53f2748473656a250d65911fc4462\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-i18n/zipball/563b1b720ee53f2748473656a250d65911fc4462\",\n                \"reference\": \"563b1b720ee53f2748473656a250d65911fc4462\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-intl\": \"*\",\n                \"laminas/laminas-stdlib\": \"^2.7 || ^3.0\",\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"phpspec/prophecy\": \"<1.9.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-i18n\": \"^2.10.1\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.6.1\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-config\": \"^2.6\",\n                \"laminas/laminas-eventmanager\": \"^2.6.2 || ^3.0\",\n                \"laminas/laminas-filter\": \"^2.6.1\",\n                \"laminas/laminas-servicemanager\": \"^3.2.1\",\n                \"laminas/laminas-validator\": \"^2.6\",\n                \"laminas/laminas-view\": \"^2.6.3\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-cache\": \"You should install this package to cache the translations\",\n                \"laminas/laminas-config\": \"You should install this package to use the INI translation format\",\n                \"laminas/laminas-eventmanager\": \"You should install this package to use the events in the translator\",\n                \"laminas/laminas-filter\": \"You should install this package to use the provided filters\",\n                \"laminas/laminas-i18n-resources\": \"This package provides validator and captcha translations\",\n                \"laminas/laminas-servicemanager\": \"You should install this package to use the translator\",\n                \"laminas/laminas-validator\": \"You should install this package to use the provided validators\",\n                \"laminas/laminas-view\": \"You should install this package to use the provided view helpers\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\I18n\",\n                    \"config-provider\": \"Laminas\\\\I18n\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\I18n\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Provide translations for your application, and filter and validate internationalized values\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"i18n\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-i18n/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-i18n/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-i18n/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-i18n\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-10-13T08:07:28+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-servicemanager\",\n            \"version\": \"3.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-servicemanager.git\",\n                \"reference\": \"2b0aee477fdbd3191af7c302b93dbc5fda0626f4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-servicemanager/zipball/2b0aee477fdbd3191af7c302b93dbc5fda0626f4\",\n                \"reference\": \"2b0aee477fdbd3191af7c302b93dbc5fda0626f4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"container-interop/container-interop\": \"^1.2\",\n                \"laminas/laminas-stdlib\": \"^3.2.1\",\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.3 || ~8.0.0\",\n                \"psr/container\": \"^1.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-code\": \"<3.3.1\",\n                \"zendframework/zend-code\": \"<3.3.1\"\n            },\n            \"provide\": {\n                \"container-interop/container-interop-implementation\": \"^1.2\",\n                \"psr/container-implementation\": \"^1.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-servicemanager\": \"^3.4.0\"\n            },\n            \"require-dev\": {\n                \"composer/package-versions-deprecated\": \"^1.0\",\n                \"laminas/laminas-coding-standard\": \"~2.2.0\",\n                \"laminas/laminas-container-config-test\": \"^0.3\",\n                \"laminas/laminas-dependency-plugin\": \"^2.1.2\",\n                \"mikey179/vfsstream\": \"^1.6.8\",\n                \"ocramius/proxy-manager\": \"^2.2.3\",\n                \"phpbench/phpbench\": \"^1.0.4\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.4\",\n                \"psalm/plugin-phpunit\": \"^0.16.1\",\n                \"vimeo/psalm\": \"^4.8\"\n            },\n            \"suggest\": {\n                \"ocramius/proxy-manager\": \"ProxyManager ^2.1.1 to handle lazy initialization of services\"\n            },\n            \"bin\": [\n                \"bin/generate-deps-for-config-factory\",\n                \"bin/generate-factory-for-class\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\ServiceManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Factory-Driven Dependency Injection Container\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"dependency-injection\",\n                \"di\",\n                \"dic\",\n                \"laminas\",\n                \"service-manager\",\n                \"servicemanager\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-servicemanager/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-servicemanager/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-servicemanager/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-servicemanager\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-07-24T19:33:07+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-stdlib\",\n            \"version\": \"3.6.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-stdlib.git\",\n                \"reference\": \"c53d8537f108fac3fae652677a19735db730ba46\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-stdlib/zipball/c53d8537f108fac3fae652677a19735db730ba46\",\n                \"reference\": \"c53d8537f108fac3fae652677a19735db730ba46\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-stdlib\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.3.0\",\n                \"phpbench/phpbench\": \"^0.17.1\",\n                \"phpunit/phpunit\": \"~9.3.7\",\n                \"psalm/plugin-phpunit\": \"^0.16.0\",\n                \"vimeo/psalm\": \"^4.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Stdlib\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"SPL extensions, array utilities, error handlers, and more\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"stdlib\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-stdlib/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-stdlib/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-stdlib/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-stdlib\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-02T16:11:32+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-zendframework-bridge\",\n            \"version\": \"1.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-zendframework-bridge.git\",\n                \"reference\": \"bf180a382393e7db5c1e8d0f2ec0c4af9c724baf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-zendframework-bridge/zipball/bf180a382393e7db5c1e8d0f2ec0c4af9c724baf\",\n                \"reference\": \"bf180a382393e7db5c1e8d0f2ec0c4af9c724baf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\",\n                \"psalm/plugin-phpunit\": \"^0.15.1\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"vimeo/psalm\": \"^4.6\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"module\": \"Laminas\\\\ZendFrameworkBridge\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/autoload.php\"\n                ],\n                \"psr-4\": {\n                    \"Laminas\\\\ZendFrameworkBridge\\\\\": \"src//\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Alias legacy ZF class names to Laminas Project equivalents.\",\n            \"keywords\": [\n                \"ZendFramework\",\n                \"autoloading\",\n                \"laminas\",\n                \"zf\"\n            ],\n            \"support\": {\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-zendframework-bridge/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-zendframework-bridge/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-zendframework-bridge\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-03T17:53:30+00:00\"\n        },\n        {\n            \"name\": \"league/event\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/event.git\",\n                \"reference\": \"d2cc124cf9a3fab2bb4ff963307f60361ce4d119\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/event/zipball/d2cc124cf9a3fab2bb4ff963307f60361ce4d119\",\n                \"reference\": \"d2cc124cf9a3fab2bb4ff963307f60361ce4d119\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"henrikbjorn/phpspec-code-coverage\": \"~1.0.1\",\n                \"phpspec/phpspec\": \"^2.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Event\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Frank de Jonge\",\n                    \"email\": \"info@frenky.net\"\n                }\n            ],\n            \"description\": \"Event package\",\n            \"keywords\": [\n                \"emitter\",\n                \"event\",\n                \"listener\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/event/issues\",\n                \"source\": \"https://github.com/thephpleague/event/tree/master\"\n            },\n            \"time\": \"2018-11-26T11:52:41+00:00\"\n        },\n        {\n            \"name\": \"mathmarques/smarty-view\",\n            \"version\": \"1.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mathmarques/Smarty-View.git\",\n                \"reference\": \"2ab996e79efcc600cc324b6469c1cdbcd189c9fe\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mathmarques/Smarty-View/zipball/2ab996e79efcc600cc324b6469c1cdbcd189c9fe\",\n                \"reference\": \"2ab996e79efcc600cc324b6469c1cdbcd189c9fe\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5.0\",\n                \"slim/slim\": \"^3.0\",\n                \"smarty/smarty\": \"~3.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\Views\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Matheus Marques\",\n                    \"email\": \"matheusocmarques@gmail.com\",\n                    \"homepage\": \"http://matheusmarques.com\"\n                }\n            ],\n            \"description\": \"Slim Framework 3 view helper built on top of the Smarty templating component\",\n            \"keywords\": [\n                \"framework\",\n                \"slim\",\n                \"slim 3\",\n                \"smarty\",\n                \"template\",\n                \"view\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/mathmarques/Smarty-View/issues\",\n                \"source\": \"https://github.com/mathmarques/Smarty-View/tree/1.1.2\"\n            },\n            \"time\": \"2019-03-31T14:42:41+00:00\"\n        },\n        {\n            \"name\": \"monolog/monolog\",\n            \"version\": \"2.3.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Seldaek/monolog.git\",\n                \"reference\": \"fd4380d6fc37626e2f799f29d91195040137eba9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/fd4380d6fc37626e2f799f29d91195040137eba9\",\n                \"reference\": \"fd4380d6fc37626e2f799f29d91195040137eba9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"psr/log\": \"^1.0.1 || ^2.0 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0.0 || 2.0.0 || 3.0.0\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^2.4.9 || ^3.0\",\n                \"doctrine/couchdb\": \"~1.0@dev\",\n                \"elasticsearch/elasticsearch\": \"^7\",\n                \"graylog2/gelf-php\": \"^1.4.2\",\n                \"mongodb/mongodb\": \"^1.8\",\n                \"php-amqplib/php-amqplib\": \"~2.4 || ^3\",\n                \"php-console/php-console\": \"^3.1.3\",\n                \"phpspec/prophecy\": \"^1.6.1\",\n                \"phpstan/phpstan\": \"^0.12.91\",\n                \"phpunit/phpunit\": \"^8.5\",\n                \"predis/predis\": \"^1.1\",\n                \"rollbar/rollbar\": \"^1.3\",\n                \"ruflin/elastica\": \">=0.90@dev\",\n                \"swiftmailer/swiftmailer\": \"^5.3|^6.0\"\n            },\n            \"suggest\": {\n                \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n                \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n                \"elasticsearch/elasticsearch\": \"Allow sending log messages to an Elasticsearch server via official client\",\n                \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n                \"ext-curl\": \"Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler\",\n                \"ext-mbstring\": \"Allow to work properly with unicode symbols\",\n                \"ext-mongodb\": \"Allow sending log messages to a MongoDB server (via driver)\",\n                \"ext-openssl\": \"Required to send log messages using SSL\",\n                \"ext-sockets\": \"Allow sending log messages to a Syslog server (via UDP driver)\",\n                \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n                \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server (via library)\",\n                \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n                \"php-console/php-console\": \"Allow sending log messages to Google Chrome\",\n                \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n                \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Monolog\\\\\": \"src/Monolog\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"https://seld.be\"\n                }\n            ],\n            \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n            \"homepage\": \"https://github.com/Seldaek/monolog\",\n            \"keywords\": [\n                \"log\",\n                \"logging\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Seldaek/monolog/issues\",\n                \"source\": \"https://github.com/Seldaek/monolog/tree/2.3.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Seldaek\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-01T21:08:31+00:00\"\n        },\n        {\n            \"name\": \"nikic/fast-route\",\n            \"version\": \"v1.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/FastRoute.git\",\n                \"reference\": \"181d480e08d9476e61381e04a71b34dc0432e812\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/FastRoute/zipball/181d480e08d9476e61381e04a71b34dc0432e812\",\n                \"reference\": \"181d480e08d9476e61381e04a71b34dc0432e812\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.35|~5.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"FastRoute\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\",\n                    \"email\": \"nikic@php.net\"\n                }\n            ],\n            \"description\": \"Fast request router for PHP\",\n            \"keywords\": [\n                \"router\",\n                \"routing\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nikic/FastRoute/issues\",\n                \"source\": \"https://github.com/nikic/FastRoute/tree/master\"\n            },\n            \"time\": \"2018-02-13T20:26:39+00:00\"\n        },\n        {\n            \"name\": \"opis/closure\",\n            \"version\": \"3.6.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/opis/closure.git\",\n                \"reference\": \"06e2ebd25f2869e54a306dda991f7db58066f7f6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/opis/closure/zipball/06e2ebd25f2869e54a306dda991f7db58066f7f6\",\n                \"reference\": \"06e2ebd25f2869e54a306dda991f7db58066f7f6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.4 || ^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"jeremeamia/superclosure\": \"^2.0\",\n                \"phpunit/phpunit\": \"^4.0 || ^5.0 || ^6.0 || ^7.0 || ^8.0 || ^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.6.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Opis\\\\Closure\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"functions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marius Sarca\",\n                    \"email\": \"marius.sarca@gmail.com\"\n                },\n                {\n                    \"name\": \"Sorin Sarca\",\n                    \"email\": \"sarca_sorin@hotmail.com\"\n                }\n            ],\n            \"description\": \"A library that can be used to serialize closures (anonymous functions) and arbitrary objects.\",\n            \"homepage\": \"https://opis.io/closure\",\n            \"keywords\": [\n                \"anonymous functions\",\n                \"closure\",\n                \"function\",\n                \"serializable\",\n                \"serialization\",\n                \"serialize\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/opis/closure/issues\",\n                \"source\": \"https://github.com/opis/closure/tree/3.6.2\"\n            },\n            \"time\": \"2021-04-09T13:42:10+00:00\"\n        },\n        {\n            \"name\": \"php-di/invoker\",\n            \"version\": \"2.3.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/Invoker.git\",\n                \"reference\": \"5214cbe5aad066022cd845dbf313f0e47aed928f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/Invoker/zipball/5214cbe5aad066022cd845dbf313f0e47aed928f\",\n                \"reference\": \"5214cbe5aad066022cd845dbf313f0e47aed928f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"psr/container\": \"^1.0|^2.0\"\n            },\n            \"require-dev\": {\n                \"athletic/athletic\": \"~0.1.8\",\n                \"mnapoli/hard-mode\": \"~0.3.0\",\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Invoker\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Generic and extensible callable invoker\",\n            \"homepage\": \"https://github.com/PHP-DI/Invoker\",\n            \"keywords\": [\n                \"callable\",\n                \"dependency\",\n                \"dependency-injection\",\n                \"injection\",\n                \"invoke\",\n                \"invoker\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/Invoker/issues\",\n                \"source\": \"https://github.com/PHP-DI/Invoker/tree/2.3.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/mnapoli\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-07-30T15:05:32+00:00\"\n        },\n        {\n            \"name\": \"php-di/php-di\",\n            \"version\": \"6.3.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/PHP-DI.git\",\n                \"reference\": \"b8126d066ce144765300ee0ab040c1ed6c9ef588\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/PHP-DI/zipball/b8126d066ce144765300ee0ab040c1ed6c9ef588\",\n                \"reference\": \"b8126d066ce144765300ee0ab040c1ed6c9ef588\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"opis/closure\": \"^3.5.5\",\n                \"php\": \">=7.2.0\",\n                \"php-di/invoker\": \"^2.0\",\n                \"php-di/phpdoc-reader\": \"^2.0.1\",\n                \"psr/container\": \"^1.0\"\n            },\n            \"provide\": {\n                \"psr/container-implementation\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.2\",\n                \"friendsofphp/php-cs-fixer\": \"^2.4\",\n                \"mnapoli/phpunit-easymock\": \"^1.2\",\n                \"ocramius/proxy-manager\": \"^2.0.2\",\n                \"phpstan/phpstan\": \"^0.12\",\n                \"phpunit/phpunit\": \"^8.5|^9.0\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"Install it if you want to use annotations (version ~1.2)\",\n                \"ocramius/proxy-manager\": \"Install it if you want to use lazy injection (version ~2.0)\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"DI\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"The dependency injection container for humans\",\n            \"homepage\": \"https://php-di.org/\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interop\",\n                \"dependency injection\",\n                \"di\",\n                \"ioc\",\n                \"psr11\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/PHP-DI/issues\",\n                \"source\": \"https://github.com/PHP-DI/PHP-DI/tree/6.3.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/mnapoli\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/php-di/php-di\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-09-02T09:49:58+00:00\"\n        },\n        {\n            \"name\": \"php-di/phpdoc-reader\",\n            \"version\": \"2.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/PhpDocReader.git\",\n                \"reference\": \"66daff34cbd2627740ffec9469ffbac9f8c8185c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/PhpDocReader/zipball/66daff34cbd2627740ffec9469ffbac9f8c8185c\",\n                \"reference\": \"66daff34cbd2627740ffec9469ffbac9f8c8185c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"require-dev\": {\n                \"mnapoli/hard-mode\": \"~0.3.0\",\n                \"phpunit/phpunit\": \"^8.5|^9.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpDocReader\\\\\": \"src/PhpDocReader\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"PhpDocReader parses @var and @param values in PHP docblocks (supports namespaced class names with the same resolution rules as PHP)\",\n            \"keywords\": [\n                \"phpdoc\",\n                \"reflection\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/PhpDocReader/issues\",\n                \"source\": \"https://github.com/PHP-DI/PhpDocReader/tree/2.2.1\"\n            },\n            \"time\": \"2020-10-12T12:39:22+00:00\"\n        },\n        {\n            \"name\": \"php-di/slim-bridge\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/Slim-Bridge.git\",\n                \"reference\": \"df3c116bedb325c88c01991605380b0fd77b97ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/Slim-Bridge/zipball/df3c116bedb325c88c01991605380b0fd77b97ed\",\n                \"reference\": \"df3c116bedb325c88c01991605380b0fd77b97ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~7.0\",\n                \"php-di/invoker\": \"^2.0.0\",\n                \"php-di/php-di\": \"^6.0.0\",\n                \"slim/slim\": \"^3.9.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~6.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"DI\\\\Bridge\\\\Slim\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"PHP-DI integration in Slim\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/Slim-Bridge/issues\",\n                \"source\": \"https://github.com/PHP-DI/Slim-Bridge/tree/master\"\n            },\n            \"time\": \"2018-02-24T10:54:47+00:00\"\n        },\n        {\n            \"name\": \"phpmailer/phpmailer\",\n            \"version\": \"v6.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPMailer/PHPMailer.git\",\n                \"reference\": \"dd803df5ad7492e1b40637f7ebd258fee5ca7355\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPMailer/PHPMailer/zipball/dd803df5ad7492e1b40637f7ebd258fee5ca7355\",\n                \"reference\": \"dd803df5ad7492e1b40637f7ebd258fee5ca7355\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-filter\": \"*\",\n                \"ext-hash\": \"*\",\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7.0\",\n                \"doctrine/annotations\": \"^1.2\",\n                \"php-parallel-lint/php-console-highlighter\": \"^0.5.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3\",\n                \"phpcompatibility/php-compatibility\": \"^9.3.5\",\n                \"roave/security-advisories\": \"dev-latest\",\n                \"squizlabs/php_codesniffer\": \"^3.6.0\",\n                \"yoast/phpunit-polyfills\": \"^1.0.0\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"Needed to send email in multibyte encoding charset or decode encoded addresses\",\n                \"hayageek/oauth2-yahoo\": \"Needed for Yahoo XOAUTH2 authentication\",\n                \"league/oauth2-google\": \"Needed for Google XOAUTH2 authentication\",\n                \"psr/log\": \"For optional PSR-3 debug logging\",\n                \"stevenmaguire/oauth2-microsoft\": \"Needed for Microsoft XOAUTH2 authentication\",\n                \"symfony/polyfill-mbstring\": \"To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPMailer\\\\PHPMailer\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marcus Bointon\",\n                    \"email\": \"phpmailer@synchromedia.co.uk\"\n                },\n                {\n                    \"name\": \"Jim Jagielski\",\n                    \"email\": \"jimjag@gmail.com\"\n                },\n                {\n                    \"name\": \"Andy Prevost\",\n                    \"email\": \"codeworxtech@users.sourceforge.net\"\n                },\n                {\n                    \"name\": \"Brent R. Matzelle\"\n                }\n            ],\n            \"description\": \"PHPMailer is a full-featured email creation and transfer class for PHP\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHPMailer/PHPMailer/issues\",\n                \"source\": \"https://github.com/PHPMailer/PHPMailer/tree/v6.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Synchro\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-08-18T09:14:16+00:00\"\n        },\n        {\n            \"name\": \"pimple/pimple\",\n            \"version\": \"v3.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/silexphp/Pimple.git\",\n                \"reference\": \"a94b3a4db7fb774b3d78dad2315ddc07629e1bed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/silexphp/Pimple/zipball/a94b3a4db7fb774b3d78dad2315ddc07629e1bed\",\n                \"reference\": \"a94b3a4db7fb774b3d78dad2315ddc07629e1bed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.1 || ^2.0\"\n            },\n            \"require-dev\": {\n                \"symfony/phpunit-bridge\": \"^5.4@dev\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.4.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Pimple\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                }\n            ],\n            \"description\": \"Pimple, a simple Dependency Injection Container\",\n            \"homepage\": \"https://pimple.symfony.com\",\n            \"keywords\": [\n                \"container\",\n                \"dependency injection\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/silexphp/Pimple/tree/v3.5.0\"\n            },\n            \"time\": \"2021-10-28T11:13:42+00:00\"\n        },\n        {\n            \"name\": \"psr/cache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/cache.git\",\n                \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/cache/zipball/d11b50ad223250cf17b86e38383413f5a6764bf8\",\n                \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for caching libraries\",\n            \"keywords\": [\n                \"cache\",\n                \"psr\",\n                \"psr-6\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/cache/tree/master\"\n            },\n            \"time\": \"2016-08-06T20:24:11+00:00\"\n        },\n        {\n            \"name\": \"psr/container\",\n            \"version\": \"1.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/container.git\",\n                \"reference\": \"8622567409010282b7aeebe4bb841fe98b58dcaf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/container/zipball/8622567409010282b7aeebe4bb841fe98b58dcaf\",\n                \"reference\": \"8622567409010282b7aeebe4bb841fe98b58dcaf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Container\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n            \"homepage\": \"https://github.com/php-fig/container\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interface\",\n                \"container-interop\",\n                \"psr\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/container/issues\",\n                \"source\": \"https://github.com/php-fig/container/tree/1.1.1\"\n            },\n            \"time\": \"2021-03-05T17:36:06+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-message/tree/master\"\n            },\n            \"time\": \"2016-08-06T14:39:51+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"1.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"Psr/Log/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/1.1.4\"\n            },\n            \"time\": \"2021-05-03T11:20:27+00:00\"\n        },\n        {\n            \"name\": \"psr/simple-cache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/simple-cache.git\",\n                \"reference\": \"408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/simple-cache/zipball/408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\",\n                \"reference\": \"408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\SimpleCache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for simple caching\",\n            \"keywords\": [\n                \"cache\",\n                \"caching\",\n                \"psr\",\n                \"psr-16\",\n                \"simple-cache\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/simple-cache/tree/master\"\n            },\n            \"time\": \"2017-10-23T01:57:42+00:00\"\n        },\n        {\n            \"name\": \"slim/flash\",\n            \"version\": \"0.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/slimphp/Slim-Flash.git\",\n                \"reference\": \"9aaff5fded3b54f4e519ec3d4ac74d3d1f2cbbbc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/slimphp/Slim-Flash/zipball/9aaff5fded3b54f4e519ec3d4ac74d3d1f2cbbbc\",\n                \"reference\": \"9aaff5fded3b54f4e519ec3d4ac74d3d1f2cbbbc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\Flash\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Josh Lockhart\",\n                    \"email\": \"hello@joshlockhart.com\",\n                    \"homepage\": \"http://joshlockhart.com\"\n                }\n            ],\n            \"description\": \"Slim Framework Flash message service provider\",\n            \"homepage\": \"http://slimframework.com\",\n            \"keywords\": [\n                \"flash\",\n                \"framework\",\n                \"message\",\n                \"provider\",\n                \"slim\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/slimphp/Slim-Flash/issues\",\n                \"source\": \"https://github.com/slimphp/Slim-Flash/tree/master\"\n            },\n            \"time\": \"2017-10-22T10:35:05+00:00\"\n        },\n        {\n            \"name\": \"slim/slim\",\n            \"version\": \"3.12.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/slimphp/Slim.git\",\n                \"reference\": \"1c9318a84ffb890900901136d620b4f03a59da38\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/slimphp/Slim/zipball/1c9318a84ffb890900901136d620b4f03a59da38\",\n                \"reference\": \"1c9318a84ffb890900901136d620b4f03a59da38\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"nikic/fast-route\": \"^1.0\",\n                \"php\": \">=5.5.0\",\n                \"pimple/pimple\": \"^3.0\",\n                \"psr/container\": \"^1.0\",\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"provide\": {\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.0\",\n                \"squizlabs/php_codesniffer\": \"^2.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\\": \"Slim\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Josh Lockhart\",\n                    \"email\": \"hello@joshlockhart.com\",\n                    \"homepage\": \"https://joshlockhart.com\"\n                },\n                {\n                    \"name\": \"Andrew Smith\",\n                    \"email\": \"a.smith@silentworks.co.uk\",\n                    \"homepage\": \"http://silentworks.co.uk\"\n                },\n                {\n                    \"name\": \"Rob Allen\",\n                    \"email\": \"rob@akrabat.com\",\n                    \"homepage\": \"http://akrabat.com\"\n                },\n                {\n                    \"name\": \"Gabriel Manricks\",\n                    \"email\": \"gmanricks@me.com\",\n                    \"homepage\": \"http://gabrielmanricks.com\"\n                }\n            ],\n            \"description\": \"Slim is a PHP micro framework that helps you quickly write simple yet powerful web applications and APIs\",\n            \"homepage\": \"https://slimframework.com\",\n            \"keywords\": [\n                \"api\",\n                \"framework\",\n                \"micro\",\n                \"router\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/slimphp/Slim/issues\",\n                \"source\": \"https://github.com/slimphp/Slim/tree/3.x\"\n            },\n            \"time\": \"2019-11-28T17:40:33+00:00\"\n        },\n        {\n            \"name\": \"smarty/smarty\",\n            \"version\": \"v3.1.40\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/smarty-php/smarty.git\",\n                \"reference\": \"9d4f8309ed49702e0d7152f9983c3a9c4b98eb9d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/smarty-php/smarty/zipball/9d4f8309ed49702e0d7152f9983c3a9c4b98eb9d\",\n                \"reference\": \"9d4f8309ed49702e0d7152f9983c3a9c4b98eb9d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.5 || ^6.5 || ^5.7 || ^4.8\",\n                \"smarty/smarty-lexer\": \"^3.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"libs/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-3.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Monte Ohrt\",\n                    \"email\": \"monte@ohrt.com\"\n                },\n                {\n                    \"name\": \"Uwe Tews\",\n                    \"email\": \"uwe.tews@googlemail.com\"\n                },\n                {\n                    \"name\": \"Rodney Rehm\",\n                    \"email\": \"rodney.rehm@medialize.de\"\n                }\n            ],\n            \"description\": \"Smarty - the compiling PHP template engine\",\n            \"homepage\": \"http://www.smarty.net\",\n            \"keywords\": [\n                \"templating\"\n            ],\n            \"support\": {\n                \"forum\": \"http://www.smarty.net/forums/\",\n                \"irc\": \"irc://irc.freenode.org/smarty\",\n                \"issues\": \"https://github.com/smarty-php/smarty/issues\",\n                \"source\": \"https://github.com/smarty-php/smarty/tree/v3.1.40\"\n            },\n            \"time\": \"2021-10-13T10:04:31+00:00\"\n        },\n        {\n            \"name\": \"soundasleep/html2text\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/soundasleep/html2text.git\",\n                \"reference\": \"3243a7107878a61685d2eccf99918d6479e039fc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/soundasleep/html2text/zipball/3243a7107878a61685d2eccf99918d6479e039fc\",\n                \"reference\": \"3243a7107878a61685d2eccf99918d6479e039fc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~7.0\",\n                \"soundasleep/component-tests\": \"~0.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Soundasleep\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jevon Wright\",\n                    \"homepage\": \"https://jevon.org\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A PHP script to convert HTML into a plain text format\",\n            \"homepage\": \"https://github.com/soundasleep/html2text\",\n            \"keywords\": [\n                \"email\",\n                \"html\",\n                \"php\",\n                \"text\"\n            ],\n            \"support\": {\n                \"email\": \"support@jevon.org\",\n                \"issues\": \"https://github.com/soundasleep/html2text/issues\",\n                \"source\": \"https://github.com/soundasleep/html2text/tree/master\"\n            },\n            \"time\": \"2019-02-15T01:44:54+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php80\",\n            \"version\": \"v1.23.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php80.git\",\n                \"reference\": \"1100343ed1a92e3a38f9ae122fc0eb21602547be\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php80/zipball/1100343ed1a92e3a38f9ae122fc0eb21602547be\",\n                \"reference\": \"1100343ed1a92e3a38f9ae122fc0eb21602547be\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php80\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ion Bazan\",\n                    \"email\": \"ion.bazan@gmail.com\"\n                },\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php80/tree/v1.23.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-07-28T13:41:28+00:00\"\n        },\n        {\n            \"name\": \"tecnickcom/tcpdf\",\n            \"version\": \"6.4.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/tecnickcom/TCPDF.git\",\n                \"reference\": \"172540dcbfdf8dc983bc2fe78feff48ff7ec1c76\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/tecnickcom/TCPDF/zipball/172540dcbfdf8dc983bc2fe78feff48ff7ec1c76\",\n                \"reference\": \"172540dcbfdf8dc983bc2fe78feff48ff7ec1c76\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"config\",\n                    \"include\",\n                    \"tcpdf.php\",\n                    \"tcpdf_parser.php\",\n                    \"tcpdf_import.php\",\n                    \"tcpdf_barcodes_1d.php\",\n                    \"tcpdf_barcodes_2d.php\",\n                    \"include/tcpdf_colors.php\",\n                    \"include/tcpdf_filters.php\",\n                    \"include/tcpdf_font_data.php\",\n                    \"include/tcpdf_fonts.php\",\n                    \"include/tcpdf_images.php\",\n                    \"include/tcpdf_static.php\",\n                    \"include/barcodes/datamatrix.php\",\n                    \"include/barcodes/pdf417.php\",\n                    \"include/barcodes/qrcode.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-3.0-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicola Asuni\",\n                    \"email\": \"info@tecnick.com\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"TCPDF is a PHP class for generating PDF documents and barcodes.\",\n            \"homepage\": \"http://www.tcpdf.org/\",\n            \"keywords\": [\n                \"PDFD32000-2008\",\n                \"TCPDF\",\n                \"barcodes\",\n                \"datamatrix\",\n                \"pdf\",\n                \"pdf417\",\n                \"qrcode\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/tecnickcom/TCPDF/issues\",\n                \"source\": \"https://github.com/tecnickcom/TCPDF/tree/6.4.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&currency_code=GBP&business=paypal@tecnick.com&item_name=donation%20for%20tcpdf%20project\",\n                    \"type\": \"custom\"\n                }\n            ],\n            \"time\": \"2021-07-20T14:43:20+00:00\"\n        }\n    ],\n    \"packages-dev\": [\n        {\n            \"name\": \"atoum/atoum\",\n            \"version\": \"dev-master\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/atoum/atoum.git\",\n                \"reference\": \"0fe4495643f6a529f9e304ea6933d29733253489\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/atoum/atoum/zipball/0fe4495643f6a529f9e304ea6933d29733253489\",\n                \"reference\": \"0fe4495643f6a529f9e304ea6933d29733253489\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-hash\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xml\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"replace\": {\n                \"mageekguy/atoum\": \"*\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^3.2\"\n            },\n            \"suggest\": {\n                \"atoum/stubs\": \"Provides IDE support (like autocompletion) for atoum\",\n                \"ext-mbstring\": \"Provides support for UTF-8 strings\",\n                \"ext-xdebug\": \"Provides code coverage report (>= 2.3)\"\n            },\n            \"default-branch\": true,\n            \"bin\": [\n                \"bin/atoum\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"classes/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fr\u00e9d\u00e9ric Hardy\",\n                    \"email\": \"frederic.hardy@atoum.org\",\n                    \"homepage\": \"http://blog.mageekbox.net\"\n                },\n                {\n                    \"name\": \"Fran\u00e7ois Dussert\",\n                    \"email\": \"francois.dussert@atoum.org\"\n                },\n                {\n                    \"name\": \"G\u00e9rald Croes\",\n                    \"email\": \"gerald.croes@atoum.org\"\n                },\n                {\n                    \"name\": \"Julien Bianchi\",\n                    \"email\": \"julien.bianchi@atoum.org\"\n                },\n                {\n                    \"name\": \"Ludovic Fleury\",\n                    \"email\": \"ludovic.fleury@atoum.org\"\n                }\n            ],\n            \"description\": \"Simple modern and intuitive unit testing framework for PHP 5.3+\",\n            \"homepage\": \"http://www.atoum.org\",\n            \"keywords\": [\n                \"TDD\",\n                \"atoum\",\n                \"test\",\n                \"unit testing\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/atoum/atoum/issues\",\n                \"source\": \"https://github.com/atoum/atoum/tree/4.0.3\"\n            },\n            \"time\": \"2021-10-22T08:10:33+00:00\"\n        },\n        {\n            \"name\": \"galette/smarty-xgettext\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/galette/smarty-xgettext.git\",\n                \"reference\": \"623df2499945bc21b693d017973b048f2ef1a597\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/galette/smarty-xgettext/zipball/623df2499945bc21b693d017973b048f2ef1a597\",\n                \"reference\": \"623df2499945bc21b693d017973b048f2ef1a597\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"geekwright/po\": \"^2.0\",\n                \"php\": \"^7.3 || ^8\",\n                \"smarty/smarty\": \"^3.1\",\n                \"symfony/console\": \"^5.1\",\n                \"symfony/finder\": \"^5.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8 || ^9\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"symfony/var-dumper\": \"^3.3\"\n            },\n            \"bin\": [\n                \"bin/smarty-xgettext\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"SmartyGettext\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Elan Ruusam\u00e4e\",\n                    \"email\": \"glen@pld-linux.org\"\n                },\n                {\n                    \"name\": \"Johan Cwiklinski\",\n                    \"email\": \"trasher@x-tnd.be\"\n                }\n            ],\n            \"description\": \"Smarty xgettext features\",\n            \"homepage\": \"https://github.com/galette/smarty-xgettext\",\n            \"support\": {\n                \"issues\": \"https://github.com/galette/smarty-xgettext/issues\",\n                \"source\": \"https://github.com/galette/smarty-xgettext/tree/1.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://paypal.me/pools/c/8u4dEPpM0q\",\n                    \"type\": \"custom\"\n                }\n            ],\n            \"time\": \"2020-12-19T22:14:28+00:00\"\n        },\n        {\n            \"name\": \"geekwright/po\",\n            \"version\": \"v2.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/geekwright/Po.git\",\n                \"reference\": \"f9222a901d38f2101d22f767099926d945c78db5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/geekwright/Po/zipball/f9222a901d38f2101d22f767099926d945c78db5\",\n                \"reference\": \"f9222a901d38f2101d22f767099926d945c78db5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">7.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.0|^8.0\",\n                \"smarty/smarty\": \"^3.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Geekwright\\\\Po\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-2.0-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Richard Griffith\",\n                    \"email\": \"richard@geekwright.com\"\n                }\n            ],\n            \"description\": \"Objects to assist in reading, manipulating and creating GNU gettext style PO files\",\n            \"homepage\": \"https://github.com/geekwright/Po\",\n            \"keywords\": [\n                \"gettext\",\n                \"i18n\",\n                \"l10n\",\n                \"po\",\n                \"pot\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/geekwright/Po/issues\",\n                \"source\": \"https://github.com/geekwright/Po/tree/v2.0.2\"\n            },\n            \"time\": \"2020-12-30T23:34:48+00:00\"\n        },\n        {\n            \"name\": \"squizlabs/php_codesniffer\",\n            \"version\": \"3.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/squizlabs/PHP_CodeSniffer.git\",\n                \"reference\": \"f268ca40d54617c6e06757f83f699775c9b3ff2e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/f268ca40d54617c6e06757f83f699775c9b3ff2e\",\n                \"reference\": \"f268ca40d54617c6e06757f83f699775c9b3ff2e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-simplexml\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.0 || ^5.0 || ^6.0 || ^7.0\"\n            },\n            \"bin\": [\n                \"bin/phpcs\",\n                \"bin/phpcbf\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Greg Sherwood\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.\",\n            \"homepage\": \"https://github.com/squizlabs/PHP_CodeSniffer\",\n            \"keywords\": [\n                \"phpcs\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/squizlabs/PHP_CodeSniffer/issues\",\n                \"source\": \"https://github.com/squizlabs/PHP_CodeSniffer\",\n                \"wiki\": \"https://github.com/squizlabs/PHP_CodeSniffer/wiki\"\n            },\n            \"time\": \"2021-10-11T04:00:11+00:00\"\n        },\n        {\n            \"name\": \"symfony/console\",\n            \"version\": \"v5.3.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/console.git\",\n                \"reference\": \"d4e409d9fbcfbf71af0e5a940abb7b0b4bad0bd3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/console/zipball/d4e409d9fbcfbf71af0e5a940abb7b0b4bad0bd3\",\n                \"reference\": \"d4e409d9fbcfbf71af0e5a940abb7b0b4bad0bd3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php73\": \"^1.8\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/service-contracts\": \"^1.1|^2\",\n                \"symfony/string\": \"^5.1\"\n            },\n            \"conflict\": {\n                \"psr/log\": \">=3\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/dotenv\": \"<5.1\",\n                \"symfony/event-dispatcher\": \"<4.4\",\n                \"symfony/lock\": \"<4.4\",\n                \"symfony/process\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n                \"symfony/lock\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^4.4|^5.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"For using the console logger\",\n                \"symfony/event-dispatcher\": \"\",\n                \"symfony/lock\": \"\",\n                \"symfony/process\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Eases the creation of beautiful and testable command line interfaces\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"cli\",\n                \"command line\",\n                \"console\",\n                \"terminal\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/console/tree/v5.3.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-26T09:30:15+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v2.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"5f38c8804a9e97d23e0c8d63341088cd8a22d627\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/5f38c8804a9e97d23e0c8d63341088cd8a22d627\",\n                \"reference\": \"5f38c8804a9e97d23e0c8d63341088cd8a22d627\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.4-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v2.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-03-23T23:28:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/finder\",\n            \"version\": \"v5.3.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/finder.git\",\n                \"reference\": \"a10000ada1e600d109a6c7632e9ac42e8bf2fb93\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/finder/zipball/a10000ada1e600d109a6c7632e9ac42e8bf2fb93\",\n                \"reference\": \"a10000ada1e600d109a6c7632e9ac42e8bf2fb93\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Finder\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Finds files and directories via an intuitive fluent interface\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/finder/tree/v5.3.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-08-04T21:20:46+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"46cd95797e9df938fdd2b03693b5fca5e64b01ce\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/46cd95797e9df938fdd2b03693b5fca5e64b01ce\",\n                \"reference\": \"46cd95797e9df938fdd2b03693b5fca5e64b01ce\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.23.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-02-19T12:13:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-grapheme\",\n            \"version\": \"v1.23.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n                \"reference\": \"16880ba9c5ebe3642d1995ab866db29270b36535\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/16880ba9c5ebe3642d1995ab866db29270b36535\",\n                \"reference\": \"16880ba9c5ebe3642d1995ab866db29270b36535\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"grapheme\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.23.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-05-27T12:26:48+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-normalizer\",\n            \"version\": \"v1.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n                \"reference\": \"8590a5f561694770bdcd3f9b5c69dde6945028e8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/8590a5f561694770bdcd3f9b5c69dde6945028e8\",\n                \"reference\": \"8590a5f561694770bdcd3f9b5c69dde6945028e8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"intl\",\n                \"normalizer\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.23.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-02-19T12:13:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-mbstring\",\n            \"version\": \"v1.23.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n                \"reference\": \"9174a3d80210dca8daa7f31fec659150bbeabfc6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9174a3d80210dca8daa7f31fec659150bbeabfc6\",\n                \"reference\": \"9174a3d80210dca8daa7f31fec659150bbeabfc6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Mbstring extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"mbstring\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.23.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-05-27T12:26:48+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php73\",\n            \"version\": \"v1.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php73.git\",\n                \"reference\": \"fba8933c384d6476ab14fb7b8526e5287ca7e010\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php73/zipball/fba8933c384d6476ab14fb7b8526e5287ca7e010\",\n                \"reference\": \"fba8933c384d6476ab14fb7b8526e5287ca7e010\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php73\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 7.3+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php73/tree/v1.23.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-02-19T12:13:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/service-contracts\",\n            \"version\": \"v2.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/service-contracts.git\",\n                \"reference\": \"f040a30e04b57fbcc9c6cbcf4dbaa96bd318b9bb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/f040a30e04b57fbcc9c6cbcf4dbaa96bd318b9bb\",\n                \"reference\": \"f040a30e04b57fbcc9c6cbcf4dbaa96bd318b9bb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.1\"\n            },\n            \"suggest\": {\n                \"symfony/service-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.4-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to writing services\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/service-contracts/tree/v2.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-04-01T10:43:52+00:00\"\n        },\n        {\n            \"name\": \"symfony/string\",\n            \"version\": \"v5.3.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/string.git\",\n                \"reference\": \"d70c35bb20bbca71fc4ab7921e3c6bda1a82a60c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/string/zipball/d70c35bb20bbca71fc4ab7921e3c6bda1a82a60c\",\n                \"reference\": \"d70c35bb20bbca71fc4ab7921e3c6bda1a82a60c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"~1.15\"\n            },\n            \"require-dev\": {\n                \"symfony/error-handler\": \"^4.4|^5.0\",\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/translation-contracts\": \"^1.1|^2\",\n                \"symfony/var-exporter\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\String\\\\\": \"\"\n                },\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"grapheme\",\n                \"i18n\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/string/tree/v5.3.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-27T18:21:46+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": {\n        \"atoum/atoum\": 20\n    },\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=7.3\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"2.1.0\"\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Galette payment types controller\n *\n * PHP version 5\n *\n * Copyright \u00a9 2019-2020 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Controllers\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2019-2020 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.9.4dev - 2019-12-09\n */\n\nnamespace Galette\\Controllers\\Crud;\n\nuse Galette\\Controllers\\CrudController;\nuse Slim\\Http\\Request;\nuse Slim\\Http\\Response;\nuse Galette\\Repository\\PaymentTypes;\nuse Galette\\Entity\\PaymentType;\nuse Analog\\Analog;\n\n/**\n * Galette payment types controller\n *\n * @category  Controllers\n * @name      PaymentTypeController\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2019-2020 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.9.4dev - 2019-12-09\n */\n\nclass PaymentTypeController extends CrudController\n{\n    // CRUD - Create\n\n    /**\n     * Add page\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     *\n     * @return Response\n     */\n    public function add(Request $request, Response $response): Response\n    {\n        //no new page (included on list), just to satisfy inheritance\n    }\n\n    /**\n     * Add action\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     *\n     * @return Response\n     */\n    public function doAdd(Request $request, Response $response): Response\n    {\n        return $this->store($request, $response, null);\n    }\n\n    // /CRUD - Create\n    // CRUD - Read\n\n    /**\n     * List page\n     *\n     * @param Request        $request  PSR Request\n     * @param Response       $response PSR Response\n     * @param string         $option   One of 'page' or 'order'\n     * @param string|integer $value    Value of the option\n     *\n     * @return Response\n     */\n    public function list(Request $request, Response $response, $option = null, $value = null): Response\n    {\n        $ptypes = new PaymentTypes(\n            $this->zdb,\n            $this->preferences,\n            $this->login\n        );\n        $list = $ptypes->getList();\n\n        // display page\n        $this->view->render(\n            $response,\n            'gestion_paymentstypes.tpl',\n            [\n                'page_title'        => _T(\"Payment types management\"),\n                'list'              => $list\n            ]\n        );\n        return $response;\n    }\n\n    /**\n     * Mailings filtering\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     *\n     * @return Response\n     */\n    public function filter(Request $request, Response $response): Response\n    {\n        //no filters\n    }\n\n    // /CRUD - Read\n    // CRUD - Update\n\n    /**\n     * Edit page\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     * @param integer  $id       Type id\n     *\n     * @return Response\n     */\n    public function edit(Request $request, Response $response, int $id): Response\n    {\n        $ptype = new PaymentType($this->zdb, $id);\n\n        // display page\n        $this->view->render(\n            $response,\n            'edit_paymenttype.tpl',\n            [\n                'page_title'    => _T(\"Edit payment type\"),\n                'ptype'         => $ptype\n            ]\n        );\n        return $response;\n    }\n\n    /**\n     * Edit action\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     * @param integer  $id       Type id\n     *\n     * @return Response\n     */\n    public function doEdit(Request $request, Response $response, int $id): Response\n    {\n        return $this->store($request, $response, $id);\n    }\n\n    /**\n     * Store\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     * @param integer  $id       Type id\n     *\n     * @return Response\n     */\n    public function store(Request $request, Response $response, int $id = null): Response\n    {\n        $post = $request->getParsedBody();\n\n        if (isset($post['cancel'])) {\n            return $response\n                ->withStatus(301)\n                ->withHeader('Location', $this->cancelUri($this->getArgs($request)));\n        }\n\n        $ptype = new PaymentType($this->zdb, $id);\n        $ptype->name = $post['name'];\n        $res = $ptype->store();\n        $redirect_uri = $this->redirectUri($this->getArgs($request));\n\n        if (!$res) {\n            if ($id === null) {\n                $this->flash->addMessage(\n                    'error_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->name,\n                        _T(\"Payment type '%s' has not been added!\")\n                    )\n                );\n            } else {\n                $this->flash->addMessage(\n                    'error_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->name,\n                        _T(\"Payment type '%s' has not been modified!\")\n                    )\n                );\n                //redirect to payment type edition\n                $redirect_uri = $this->router->pathFor('editPaymentType', ['id' => $id]);\n            }\n        } else {\n            if ($id === null) {\n                $this->flash->addMessage(\n                    'success_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->name,\n                        _T(\"Payment type '%s' has been successfully added.\")\n                    )\n                );\n            } else {\n                $this->flash->addMessage(\n                    'success_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->name,\n                        _T(\"Payment type '%s' has been successfully modified.\")\n                    )\n                );\n            }\n        }\n\n        $warning_detected = $ptype->getWarnings();\n        if (count($warning_detected)) {\n            foreach ($warning_detected as $warning) {\n                $this->flash->addMessage(\n                    'warning_detected',\n                    $warning\n                );\n            }\n        }\n\n        return $response\n            ->withStatus(301)\n            ->withHeader('Location', $redirect_uri);\n    }\n\n\n    // /CRUD - Update\n    // CRUD - Delete\n\n    /**\n     * Get redirection URI\n     *\n     * @param array $args Route arguments\n     *\n     * @return string\n     */\n    public function redirectUri(array $args)\n    {\n        return $this->router->pathFor('paymentTypes');\n    }\n\n    /**\n     * Get form URI\n     *\n     * @param array $args Route arguments\n     *\n     * @return string\n     */\n    public function formUri(array $args)\n    {\n        return $this->router->pathFor(\n            'doRemovePaymentType',\n            ['id' => $args['id'] ?? null]\n        );\n    }\n\n    /**\n     * Get confirmation removal page title\n     *\n     * @param array $args Route arguments\n     *\n     * @return string\n     */\n    public function confirmRemoveTitle(array $args)\n    {\n        $ptype = new PaymentType($this->zdb, (int)$args['id']);\n        return sprintf(\n            _T('Remove payment type %1$s'),\n            $ptype->getName()\n        );\n    }\n\n    /**\n     * Remove object\n     *\n     * @param array $args Route arguments\n     * @param array $post POST values\n     *\n     * @return boolean\n     */\n    protected function doDelete(array $args, array $post)\n    {\n        $ptype = new PaymentType($this->zdb, (int)$args['id']);\n        return $ptype->remove();\n    }\n\n    // CRUD - Delete\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Preferences handling\n *\n * PHP version 5\n *\n * Copyright \u00a9 2007-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Core\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-14\n */\n\nnamespace Galette\\Core;\n\nuse Galette\\Entity\\PaymentType;\nuse Galette\\Entity\\Social;\nuse Galette\\Features\\Replacements;\nuse Galette\\Features\\Socials;\nuse Throwable;\nuse Analog\\Analog;\nuse Galette\\Entity\\Adherent;\nuse Galette\\Entity\\Status;\nuse Galette\\IO\\PdfMembersCards;\nuse Galette\\Repository\\Members;\n\n/**\n * Preferences for galette\n *\n * @category  Core\n * @name      Preferences\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-14\n *\n * @property string $pref_admin_login Super admin login\n * @property string $pref_admin_pass Super admin password\n * @property string $pref_nom Association name\n * @property string $pref_slogan Association slogan\n * @property string $pref_adresse Address\n * @property string $pref_adresse2 Address continuation\n * @property string $pref_cp Association zipcode\n * @property string $pref_ville Association town\n * @property string $pref_pays Country\n * @property integer $pref_postal_adress Postal adress to use, one of self::POSTAL_ADDRESS*\n * @property integer $pref_postal_staff_member Staff member ID from which retrieve postal address\n * @property string $pref_lang Default instance language\n * @property integer $pref_numrows Default number of rows in lists\n * @property integer $pref_log History, one of self::LOG_*\n * @property integer $pref_statut Default status for new members\n * @property string $pref_email_nom\n * @property string $pref_email\n * @property string $pref_email_newadh\n * @property boolean $pref_bool_mailadh\n * @property boolean $pref_bool_mailowner\n * @property boolean $pref_editor_enabled\n * @property integer $pref_mail_method Mail method, see GaletteMail::METHOD_*\n * @property string $pref_mail_smtp\n * @property string $pref_mail_smtp_host\n * @property boolean $pref_mail_smtp_auth\n * @property boolean $pref_mail_smtp_secure\n * @property integer $pref_mail_smtp_port\n * @property string $pref_mail_smtp_user\n * @property string $pref_mail_smtp_password\n * @property integer $pref_membership_ext\n * @property string $pref_beg_membership\n * @property integer $pref_membership_offermonths\n * @property string $pref_email_reply_to\n * @property string $pref_website\n * @property integer $pref_etiq_marges_v\n * @property string $pref_etiq_marges_h\n * @property string $pref_etiq_hspace\n * @property string $pref_etiq_vspace\n * @property string $pref_etiq_hsize\n * @property string $pref_etiq_vsize\n * @property string $pref_etiq_cols\n * @property string $pref_etiq_rows\n * @property string $pref_etiq_corps\n * @property string $pref_card_abrev\n * @property string $pref_card_strip\n * @property string $pref_card_tcol\n * @property string $pref_card_scol\n * @property string $pref_card_bcol\n * @property string $pref_card_hcol\n * @property string $pref_bool_display_title\n * @property integer $pref_card_address\n * @property string $pref_card_year\n * @property integer $pref_card_marges_v\n * @property integer $pref_card_marges_h\n * @property integer $pref_card_vspace\n * @property integer $pref_card_hspace\n * @property string $pref_card_self\n * @property string $pref_theme Prefered theme\n * @property boolean $pref_bool_publicpages\n * @property integer $pref_publicpages_visibility\n * @property boolean $pref_bool_selfsubscribe\n * @property string $pref_mail_sign\n * @property string $pref_new_contrib_script\n * @property boolean $pref_bool_wrap_mails\n * @property string $pref_rss_url\n * @property boolean $pref_show_id\n * @property string $pref_adhesion_form\n * @property boolean $pref_mail_allow_unsecure\n * @property string $pref_instance_uuid\n * @property string $pref_registration_uuid\n * @property string $pref_telemetry_date\n * @property string $pref_registration_date\n * @property string $pref_footer\n * @property integer $pref_filter_account\n * @property string $pref_galette_url\n * @property integer $pref_redirect_on_create\n * @property integer $pref_password_length\n * @property boolean $pref_password_blacklist\n * @property integer $pref_password_strength\n * @property integer $pref_default_paymenttype\n * @property boolean $pref_bool_create_member\n * @property-read string $vpref_email_newadh Comma separated list of mail senders\n */\nclass Preferences\n{\n    use Replacements;\n    use Socials;\n\n    protected $preferences; //redefined from Replacements feature - avoid circular dependency\n    private $prefs;\n    private $errors = [];\n\n    public const TABLE = 'preferences';\n    public const PK = 'nom_pref';\n\n    /** Postal address will be the one given in the preferences */\n    public const POSTAL_ADDRESS_FROM_PREFS = 0;\n    /** Postal address will be the one of the selected staff member */\n    public const POSTAL_ADDRESS_FROM_STAFF = 1;\n\n    /** Public pages stuff */\n    /** Public pages are publically visibles */\n    public const PUBLIC_PAGES_VISIBILITY_PUBLIC = 0;\n    /** Public pages are visibles for up to date members only */\n    public const PUBLIC_PAGES_VISIBILITY_RESTRICTED = 1;\n    /** Public pages are visibles for admin and staff members only */\n    public const PUBLIC_PAGES_VISIBILITY_PRIVATE = 2;\n\n    public const LOG_DISABLED = 0;\n    public const LOG_ENABLED = 1;\n\n    /** No password strength */\n    public const PWD_NONE = 0;\n    /** Weak password strength */\n    public const PWD_WEAK = 1;\n    /** Medium password strength */\n    public const PWD_MEDIUM = 2;\n    /** Strong password strength */\n    public const PWD_STRONG = 3;\n    /** Very strong password strength */\n    public const PWD_VERY_STRONG = 4;\n\n    private static $fields = array(\n        'nom_pref',\n        'val_pref'\n    );\n\n    private static $defaults = array(\n        'pref_admin_login'    =>    'admin',\n        'pref_admin_pass'    =>    'admin',\n        'pref_nom'        =>    'Galette',\n        'pref_slogan'        =>    '',\n        'pref_adresse'        =>    '-',\n        'pref_adresse2'        =>    '',\n        'pref_cp'        =>    '',\n        'pref_ville'        =>    '',\n        'pref_pays'        =>    '',\n        'pref_postal_adress'  => self::POSTAL_ADDRESS_FROM_PREFS,\n        'pref_postal_staff_member' => '',\n        'pref_lang'        =>    I18n::DEFAULT_LANG,\n        'pref_numrows'        =>    30,\n        'pref_log'        =>    self::LOG_ENABLED,\n        'pref_statut'        =>    Status::DEFAULT_STATUS,\n        /* Preferences for emails */\n        'pref_email_nom'    =>    'Galette',\n        'pref_email'        =>    'mail@domain.com',\n        'pref_email_newadh'    =>    'mail@domain.com',\n        'pref_bool_mailadh'    =>    false,\n        'pref_bool_mailowner' => false,\n        'pref_editor_enabled'    =>    false,\n        'pref_mail_method'    =>    GaletteMail::METHOD_DISABLED,\n        'pref_mail_smtp'    =>    '',\n        'pref_mail_smtp_host'   => '',\n        'pref_mail_smtp_auth'   => false,\n        'pref_mail_smtp_secure' => false,\n        'pref_mail_smtp_port'   => '',\n        'pref_mail_smtp_user'   => '',\n        'pref_mail_smtp_password'   => '',\n        'pref_membership_ext'    =>    12,\n        'pref_beg_membership'    =>    '',\n        'pref_membership_offermonths' => 0,\n        'pref_email_reply_to'    =>    '',\n        'pref_website'        =>    '',\n        /* Preferences for labels */\n        'pref_etiq_marges_v'    =>    10,\n        'pref_etiq_marges_h'    =>    10,\n        'pref_etiq_hspace'    =>    10,\n        'pref_etiq_vspace'    =>    5,\n        'pref_etiq_hsize'    =>    90,\n        'pref_etiq_vsize'    =>    35,\n        'pref_etiq_cols'    =>    2,\n        'pref_etiq_rows'    =>    7,\n        'pref_etiq_corps'    =>    12,\n        /* Preferences for members cards */\n        'pref_card_abrev'    =>    'GALETTE',\n        'pref_card_strip'    =>    'Gestion d\\'Adherents en Ligne Extr\u00eamement Tarabiscot\u00e9e',\n        'pref_card_tcol'    =>    '#FFFFFF',\n        'pref_card_scol'    =>    '#8C2453',\n        'pref_card_bcol'    =>    '#53248C',\n        'pref_card_hcol'    =>    '#248C53',\n        'pref_bool_display_title'    =>    false,\n        'pref_card_address'    =>    1,\n        'pref_card_year'    =>    '',\n        'pref_card_marges_v'    =>    15,\n        'pref_card_marges_h'    =>    20,\n        'pref_card_vspace'    =>    5,\n        'pref_card_hspace'    =>    10,\n        'pref_card_self'    =>    1,\n        'pref_theme'        =>    'default',\n        'pref_bool_publicpages' => true,\n        'pref_publicpages_visibility' => self::PUBLIC_PAGES_VISIBILITY_RESTRICTED,\n        'pref_bool_selfsubscribe' => true,\n        'pref_mail_sign' => \"{ASSO_NAME}\\r\\n\\r\\n{ASSO_WEBSITE}\",\n        /* New contribution script */\n        'pref_new_contrib_script' => '',\n        'pref_bool_wrap_mails' => true,\n        'pref_rss_url' => 'http://galette.eu/dc/index.php/feed/atom',\n        'pref_show_id' => false,\n        'pref_adhesion_form' => '\\Galette\\IO\\PdfAdhesionForm',\n        'pref_mail_allow_unsecure' => false,\n        'pref_instance_uuid' => '',\n        'pref_registration_uuid' => '',\n        'pref_telemetry_date' => '',\n        'pref_registration_date' => '',\n        'pref_footer' => '',\n        'pref_filter_account' => Members::ALL_ACCOUNTS,\n        'pref_galette_url' => '',\n        'pref_redirect_on_create' => Adherent::AFTER_ADD_DEFAULT,\n        /* Security related */\n        'pref_password_length' => 6,\n        'pref_password_blacklist' => false,\n        'pref_password_strength' => self::PWD_NONE,\n        'pref_default_paymenttype' => PaymentType::CHECK,\n        'pref_bool_create_member' => false\n    );\n\n    /** @var Social[] */\n    private $socials;\n\n    // flagging required fields\n    private $required = array(\n        'pref_nom',\n        'pref_lang',\n        'pref_numrows',\n        'pref_log',\n        'pref_etiq_marges_v',\n        'pref_etiq_marges_h',\n        'pref_etiq_hspace',\n        'pref_etiq_vspace',\n        'pref_etiq_hsize',\n        'pref_etiq_vsize',\n        'pref_etiq_cols',\n        'pref_etiq_rows',\n        'pref_etiq_corps',\n        'pref_card_abrev',\n        'pref_card_strip',\n        'pref_card_marges_v',\n        'pref_card_marges_h',\n        'pref_card_hspace',\n        'pref_card_vspace'\n    );\n\n    /**\n     * Default constructor\n     *\n     * @param Db      $zdb  Db instance\n     * @param boolean $load Automatically load preferences on load\n     *\n     * @return void\n     */\n    public function __construct(Db $zdb, $load = true)\n    {\n        $this->zdb = $zdb;\n        if ($load) {\n            $this->load();\n            $this->checkUpdate();\n        }\n    }\n\n    /**\n     * Check if all fields referenced in the default array does exists,\n     * create them if not\n     *\n     * @return void\n     */\n    private function checkUpdate()\n    {\n        $proceed = false;\n        $params = array();\n        foreach (self::$defaults as $k => $v) {\n            if (!isset($this->prefs[$k])) {\n                if ($k == 'pref_admin_pass' && $v == 'admin') {\n                    $v = password_hash($v, PASSWORD_BCRYPT);\n                }\n                $this->prefs[$k] = $v;\n                Analog::log(\n                    'The field `' . $k . '` does not exists, Galette will attempt to create it.',\n                    Analog::INFO\n                );\n                $proceed = true;\n                $params[] = array(\n                    'nom_pref'  => $k,\n                    'val_pref'  => $v\n                );\n            }\n        }\n        if ($proceed !== false) {\n            try {\n                $insert = $this->zdb->insert(self::TABLE);\n                $insert->values(\n                    array(\n                        'nom_pref'  => ':nom_pref',\n                        'val_pref'  => ':val_pref'\n                    )\n                );\n                $stmt = $this->zdb->sql->prepareStatementForSqlObject($insert);\n\n                foreach ($params as $p) {\n                    $stmt->execute(\n                        array(\n                            'nom_pref' => $p['nom_pref'],\n                            'val_pref' => $p['val_pref']\n                        )\n                    );\n                }\n            } catch (Throwable $e) {\n                Analog::log(\n                    'Unable to add missing preferences.' . $e->getMessage(),\n                    Analog::WARNING\n                );\n                return false;\n            }\n\n            Analog::log(\n                'Missing preferences were successfully stored into database.',\n                Analog::INFO\n            );\n        }\n    }\n\n    /**\n     * Load current preferences from database.\n     *\n     * @return boolean\n     */\n    public function load()\n    {\n        $this->prefs = array();\n\n        try {\n            $result = $this->zdb->selectAll(self::TABLE);\n            foreach ($result as $pref) {\n                $this->prefs[$pref->nom_pref] = $pref->val_pref;\n            }\n            $this->socials = Social::getListForMember(null);\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Preferences cannot be loaded. Galette should not work without ' .\n                'preferences. Exiting.',\n                Analog::URGENT\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Set default preferences at install time\n     *\n     * @param string $lang      language selected at install screen\n     * @param string $adm_login admin login entered at install time\n     * @param string $adm_pass  admin password entered at install time\n     *\n     * @return boolean|\\Exception\n     */\n    public function installInit($lang, $adm_login, $adm_pass)\n    {\n        try {\n            //first, we drop all values\n            $delete = $this->zdb->delete(self::TABLE);\n            $this->zdb->execute($delete);\n\n            //we then replace default values with the ones user has selected\n            $values = self::$defaults;\n            $values['pref_lang'] = $lang;\n            $values['pref_admin_login'] = $adm_login;\n            $values['pref_admin_pass'] = $adm_pass;\n            $values['pref_card_year'] = date('Y');\n\n            $insert = $this->zdb->insert(self::TABLE);\n            $insert->values(\n                array(\n                    'nom_pref'  => ':nom_pref',\n                    'val_pref'  => ':val_pref'\n                )\n            );\n            $stmt = $this->zdb->sql->prepareStatementForSqlObject($insert);\n\n            foreach ($values as $k => $v) {\n                $stmt->execute(\n                    array(\n                        'nom_pref' => $k,\n                        'val_pref' => $v\n                    )\n                );\n            }\n\n            Analog::log(\n                'Default preferences were successfully stored into database.',\n                Analog::INFO\n            );\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to initialize default preferences.' . $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Returns all preferences keys\n     *\n     * @return array\n     */\n    public function getFieldsNames()\n    {\n        return array_keys($this->prefs);\n    }\n\n    /**\n     * Check values\n     *\n     * @param array $values Values\n     * @param Login $login  Logged in user\n     *\n     * @return boolean\n     */\n    public function check(array $values, Login $login)\n    {\n        $insert_values = array();\n        if ($login->isSuperAdmin() && GALETTE_MODE !== Galette::MODE_DEMO) {\n            $this->required[] = 'pref_admin_login';\n        }\n\n        // obtain fields\n        foreach ($this->getFieldsNames() as $fieldname) {\n            if (isset($values[$fieldname])) {\n                $value = trim($values[$fieldname]);\n            } else {\n                $value = \"\";\n            }\n\n            $insert_values[$fieldname] = $value;\n        }\n\n        //cleanup fields for demo\n        if (GALETTE_MODE == Galette::MODE_DEMO) {\n            unset(\n                $insert_values['pref_admin_login'],\n                $insert_values['pref_admin_pass'],\n                $insert_values['pref_mail_method']\n            );\n        }\n\n        // missing relations\n        if (\n            GALETTE_MODE !== Galette::MODE_DEMO\n            && isset($insert_values['pref_mail_method'])\n        ) {\n            if ($insert_values['pref_mail_method'] > GaletteMail::METHOD_DISABLED) {\n                if (\n                    !isset($insert_values['pref_email_nom'])\n                    || $insert_values['pref_email_nom'] == ''\n                ) {\n                    $this->errors[] = _T(\"- You must indicate a sender name for emails!\");\n                }\n                if (\n                    !isset($insert_values['pref_email'])\n                    || $insert_values['pref_email'] == ''\n                ) {\n                    $this->errors[] = _T(\"- You must indicate an email address Galette should use to send emails!\");\n                }\n                if ($insert_values['pref_mail_method'] == GaletteMail::METHOD_SMTP) {\n                    if (\n                        !isset($insert_values['pref_mail_smtp_host'])\n                        || $insert_values['pref_mail_smtp_host'] == ''\n                    ) {\n                        $this->errors[] = _T(\"- You must indicate the SMTP server you want to use!\");\n                    }\n                }\n                if (\n                    $insert_values['pref_mail_method'] == GaletteMail::METHOD_GMAIL\n                    || ($insert_values['pref_mail_method'] == GaletteMail::METHOD_SMTP\n                    && $insert_values['pref_mail_smtp_auth'])\n                ) {\n                    if (\n                        !isset($insert_values['pref_mail_smtp_user'])\n                        || trim($insert_values['pref_mail_smtp_user']) == ''\n                    ) {\n                        $this->errors[] = _T(\"- You must provide a login for SMTP authentication.\");\n                    }\n                    if (\n                        !isset($insert_values['pref_mail_smtp_password'])\n                        || ($insert_values['pref_mail_smtp_password']) == ''\n                    ) {\n                        $this->errors[] = _T(\"- You must provide a password for SMTP authentication.\");\n                    }\n                }\n            }\n        }\n\n        if (\n            isset($insert_values['pref_beg_membership'])\n            && $insert_values['pref_beg_membership'] != ''\n            && isset($insert_values['pref_membership_ext'])\n            && $insert_values['pref_membership_ext'] != ''\n        ) {\n            $this->errors[] = _T(\"- Default membership extention and beginning of membership are mutually exclusive.\");\n        }\n\n        if (\n            isset($insert_values['pref_membership_offermonths'])\n            && (int)$insert_values['pref_membership_offermonths'] > 0\n            && isset($insert_values['pref_membership_ext'])\n            && $insert_values['pref_membership_ext'] != ''\n        ) {\n            $this->errors[] = _T(\"- Offering months is only compatible with beginning of membership.\");\n        }\n\n        // missing required fields?\n        foreach ($this->required as $val) {\n            if (!isset($values[$val]) || isset($values[$val]) && trim($values[$val]) == '') {\n                $this->errors[] = str_replace(\n                    '%field',\n                    $val,\n                    _T(\"- Mandatory field %field empty.\")\n                );\n            }\n        }\n\n        if (GALETTE_MODE !== Galette::MODE_DEMO && isset($values['pref_admin_pass_check'])) {\n            // Check passwords. Hash will be done into the Preferences class\n            if (strcmp($insert_values['pref_admin_pass'], $values['pref_admin_pass_check']) != 0) {\n                $this->errors[] = _T(\"Passwords mismatch\");\n            }\n        }\n\n        //postal address\n        if (isset($insert_values['pref_postal_adress'])) {\n            $value = $insert_values['pref_postal_adress'];\n            if ($value == Preferences::POSTAL_ADDRESS_FROM_PREFS) {\n                if (isset($insert_values['pref_postal_staff_member'])) {\n                    unset($insert_values['pref_postal_staff_member']);\n                }\n            } elseif ($value == Preferences::POSTAL_ADDRESS_FROM_STAFF) {\n                if (!isset($value) || $value < 1) {\n                    $this->errors[] = _T(\"You have to select a staff member\");\n                }\n            }\n        }\n\n        // update preferences\n        foreach ($insert_values as $champ => $valeur) {\n            if (\n                $login->isSuperAdmin()\n                || (!$login->isSuperAdmin()\n                && ($champ != 'pref_admin_pass' && $champ != 'pref_admin_login'))\n            ) {\n                if (\n                    ($champ == \"pref_admin_pass\" && $_POST['pref_admin_pass'] != '')\n                    || ($champ != \"pref_admin_pass\")\n                ) {\n                    $this->$champ = $valeur;\n                }\n            }\n        }\n\n        $this->checkSocials($values);\n\n        return 0 === count($this->errors);\n    }\n\n    /**\n     * Validate value of a field\n     *\n     * @param string $fieldname Field name\n     * @param mixed  $value     Value to be set\n     *\n     * @return mixed\n     */\n    public function validateValue($fieldname, $value)\n    {\n        global $login;\n\n        switch ($fieldname) {\n            case 'pref_email':\n            case 'pref_email_newadh':\n            case 'pref_email_reply_to':\n                //check emails validity\n                //may be a comma separated list of valid emails identifiers:\n                //\"The Name <mail@domain.com>,The Other <other@mail.com>\" expect for reply_to.\n                $addresses = [];\n                if (trim($value) != '') {\n                    if ($fieldname == 'pref_email_newadh') {\n                        $addresses = explode(',', $value);\n                    } else {\n                        $addresses = [$value];\n                    }\n                }\n                foreach ($addresses as $address) {\n                    if (!GaletteMail::isValidEmail($address)) {\n                        $msg = str_replace('%s', $address, _T(\"Invalid E-Mail address: %s\"));\n                        Analog::log($msg, Analog::WARNING);\n                        $this->errors[] = $msg;\n                    }\n                }\n                break;\n            case 'pref_admin_login':\n                if (GALETTE_MODE === Galette::MODE_DEMO) {\n                    Analog::log(\n                        'Trying to set superadmin login while in DEMO.',\n                        Analog::WARNING\n                    );\n                } else {\n                    if (strlen($value) < 4) {\n                        $this->errors[] = _T(\"- The username must be composed of at least 4 characters!\");\n                    } else {\n                        //check if login is already taken\n                        if ($login->loginExists($value)) {\n                            $this->errors[] = _T(\"- This username is already used by another member !\");\n                        }\n                    }\n                }\n                break;\n            case 'pref_numrows':\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- The numbers and measures have to be integers!\");\n                }\n                break;\n            case 'pref_etiq_marges_h':\n            case 'pref_etiq_marges_v':\n            case 'pref_etiq_hspace':\n            case 'pref_etiq_vspace':\n            case 'pref_etiq_hsize':\n            case 'pref_etiq_vsize':\n            case 'pref_etiq_cols':\n            case 'pref_etiq_rows':\n            case 'pref_etiq_corps':\n            case 'pref_card_marges_v':\n            case 'pref_card_marges_h':\n            case 'pref_card_hspace':\n            case 'pref_card_vspace':\n                // prevent division by zero\n                if ($fieldname == 'pref_numrows' && $value == '0') {\n                    $value = '10';\n                }\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- The numbers and measures have to be integers!\");\n                }\n                break;\n            case 'pref_card_tcol':\n            case 'pref_card_scol':\n            case 'pref_card_bcol':\n            case 'pref_card_hcol':\n                $matches = [];\n                if (!preg_match(\"/^(#)?([0-9A-F]{6})$/i\", $value, $matches)) {\n                    // Set strip background colors to black or white (for tcol)\n                    $value = ($fieldname == 'pref_card_tcol' ? '#FFFFFF' : '#000000');\n                } else {\n                    $value = '#' . $matches[2];\n                }\n                break;\n            case 'pref_admin_pass':\n                if (GALETTE_MODE == Galette::MODE_DEMO) {\n                    Analog::log(\n                        'Trying to set superadmin pass while in DEMO.',\n                        Analog::WARNING\n                    );\n                } else {\n                    $pwcheck = new \\Galette\\Util\\Password($this);\n                    $pwcheck->addPersonalInformation(['pref_admin_login' => $this->pref_admin_login]);\n                    if (!$pwcheck->isValid($value)) {\n                        $this->errors = array_merge(\n                            $this->errors,\n                            $pwcheck->getErrors()\n                        );\n                    }\n                }\n                break;\n            case 'pref_membership_ext':\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- Invalid number of months of membership extension.\");\n                }\n                break;\n            case 'pref_beg_membership':\n                $beg_membership = explode(\"/\", $value);\n                if (count($beg_membership) != 2) {\n                    $this->errors[] = _T(\"- Invalid format of beginning of membership.\");\n                } else {\n                    $now = getdate();\n                    if (!checkdate($beg_membership[1], $beg_membership[0], $now['year'])) {\n                        $this->errors[] = _T(\"- Invalid date for beginning of membership.\");\n                    }\n                }\n                break;\n            case 'pref_membership_offermonths':\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- Invalid number of offered months.\");\n                }\n                break;\n            case 'pref_card_year':\n                if ($value !== 'DEADLINE' && !preg_match('/^(?:\\d{4}|\\d{2})(\\D?)(?:\\d{4}|\\d{2})$/', $value)) {\n                    $this->errors[] = _T(\"- Invalid year for cards.\");\n                }\n                break;\n        }\n\n        return $value;\n    }\n\n    /**\n     * Will store all preferences in the database\n     *\n     * @return boolean\n     */\n    public function store()\n    {\n        try {\n            $this->zdb->connection->beginTransaction();\n            $update = $this->zdb->update(self::TABLE);\n            $update->set(\n                array(\n                    'val_pref'  => ':val_pref'\n                )\n            )->where->equalTo('nom_pref', ':nom_pref');\n\n            $stmt = $this->zdb->sql->prepareStatementForSqlObject($update);\n\n            foreach (self::$defaults as $k => $v) {\n                if (\n                    GALETTE_MODE == Galette::MODE_DEMO\n                    && in_array($k, ['pref_admin_pass', 'pref_admin_login', 'pref_mail_method'])\n                ) {\n                    continue;\n                }\n                Analog::log('Storing ' . $k, Analog::DEBUG);\n\n                $value = $this->prefs[$k];\n                //do not store pdf_adhesion_form, it's designed to be overriden by plugin\n                if ($k === 'pref_adhesion_form') {\n                    if (trim($v) == '') {\n                        //Reset to default, should not be empty\n                        $v = self::$defaults['pref_adhesion_form'];\n                    }\n                    $value = $v;\n                }\n\n                $stmt->execute(\n                    array(\n                        'val_pref'  => $value,\n                        'nom_pref'  => $k\n                    )\n                );\n            }\n            $this->zdb->connection->commit();\n            Analog::log(\n                'Preferences were successfully stored into database.',\n                Analog::INFO\n            );\n\n            $this->storeSocials(null);\n\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n\n            $messages = array();\n            do {\n                $messages[] = $e->getMessage();\n            } while ($e = $e->getPrevious());\n\n            Analog::log(\n                'Unable to store preferences | ' . print_r($messages, true),\n                Analog::WARNING\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Returns postal address\n     *\n     * @return string postal address\n     */\n    public function getPostalAddress()\n    {\n        $regs = array(\n            '/%name/',\n            '/%complement/',\n            '/%address/',\n            '/%zip/',\n            '/%town/',\n            '/%country/',\n        );\n\n        $replacements = null;\n\n        if ($this->prefs['pref_postal_adress'] == self::POSTAL_ADDRESS_FROM_PREFS) {\n            $_address = $this->prefs['pref_adresse'];\n            if ($this->prefs['pref_adresse2'] && $this->prefs['pref_adresse2'] != '') {\n                $_address .= \"\\n\" . $this->prefs['pref_adresse2'];\n            }\n            $replacements = array(\n                $this->prefs['pref_nom'],\n                \"\\n\",\n                $_address,\n                $this->prefs['pref_cp'],\n                $this->prefs['pref_ville'],\n                $this->prefs['pref_pays']\n            );\n        } else {\n            //get selected staff member address\n            $adh = new Adherent($this->zdb, (int)$this->prefs['pref_postal_staff_member']);\n            $_complement = preg_replace(\n                array('/%name/', '/%status/'),\n                array($this->prefs['pref_nom'], $adh->sstatus),\n                _T(\"%name association's %status\")\n            ) . \"\\n\";\n            $_address = $adh->address;\n            if ($adh->address_continuation && $adh->address_continuation != '') {\n                $_address .= \"\\n\" . $adh->address_continuation;\n            }\n            $replacements = array(\n                $adh->sfullname . \"\\n\",\n                $_complement,\n                $_address,\n                $adh->zipcode,\n                $adh->town,\n                $adh->country\n            );\n        }\n\n        /*FIXME: i18n fails :/ */\n        /*$r = preg_replace(\n            $regs,\n            $replacements,\n            _T(\"%name\\n%complement\\n%address\\n%zip %town - %country\")\n        );*/\n        $r = preg_replace(\n            $regs,\n            $replacements,\n            \"%name%complement%address\\n%zip %town - %country\"\n        );\n        return $r;\n    }\n\n    /**\n     * Are public pages visibles?\n     *\n     * @param Authentication $login Authenticaqtion instance\n     *\n     * @return boolean\n     */\n    public function showPublicPages(Authentication $login)\n    {\n        if ($this->prefs['pref_bool_publicpages']) {\n            //if public pages are actives, let's check if we\n            //display them for curent call\n            switch ($this->prefs['pref_publicpages_visibility']) {\n                case self::PUBLIC_PAGES_VISIBILITY_PUBLIC:\n                    //pages are publically visibles\n                    return true;\n                    break;\n                case self::PUBLIC_PAGES_VISIBILITY_RESTRICTED:\n                    //pages should be displayed only for up to date members\n                    if (\n                        $login->isUp2Date()\n                        || $login->isAdmin()\n                        || $login->isStaff()\n                    ) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                    break;\n                case self::PUBLIC_PAGES_VISIBILITY_PRIVATE:\n                    //pages should be displayed only for staff and admins\n                    if ($login->isAdmin() || $login->isStaff()) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                    break;\n                default:\n                    //should never be there\n                    return false;\n                    break;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Global getter method\n     *\n     * @param string $name name of the property we want to retrive\n     *\n     * @return false|object the called property\n     */\n    public function __get($name)\n    {\n        $forbidden = array('defaults');\n        $virtuals = array('vpref_email_newadh');\n\n        if (!in_array($name, $forbidden) && isset($this->prefs[$name])) {\n            if (\n                GALETTE_MODE === Galette::MODE_DEMO\n                && $name == 'pref_mail_method'\n            ) {\n                return GaletteMail::METHOD_DISABLED;\n            } else {\n                if ($name == 'pref_adhesion_form' && $this->prefs[$name] == '') {\n                    $this->prefs[$name] = self::$defaults['pref_adhesion_form'];\n                }\n                $value = $this->prefs[$name];\n                if (TYPE_DB === \\Galette\\Core\\Db::PGSQL) {\n                    if ($value === 'f') {\n                        $value = false;\n                    }\n                }\n\n                if (in_array($name, ['pref_email_newadh'])) {\n                    $values = explode(',', $value);\n                    $value = $values[0]; //take first as default\n                }\n\n                return $value;\n            }\n        } elseif (in_array($name, $virtuals)) {\n            $virtual = str_replace('vpref_', 'pref_', $name);\n            return explode(',', $this->prefs[$virtual]);\n        } elseif ($name === 'socials') {\n            return $this->socials;\n        } else {\n            Analog::log(\n                'Preference `' . $name . '` is not set or is forbidden',\n                Analog::INFO\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Get default preferences\n     *\n     * @return array\n     */\n    public function getDefaults()\n    {\n        return self::$defaults;\n    }\n\n    /**\n     * Global setter method\n     *\n     * @param string $name  name of the property we want to assign a value to\n     * @param object $value a relevant value for the property\n     *\n     * @return void\n     */\n    public function __set($name, $value)\n    {\n        //does this pref exists ?\n        if (!array_key_exists($name, self::$defaults)) {\n            Analog::log(\n                'Trying to set a preference value which does not seem to exist ('\n                . $name . ')',\n                Analog::WARNING\n            );\n            return false;\n        }\n\n        if (\n            $name == 'pref_email'\n            || $name == 'pref_email_newadh'\n            || $name == 'pref_email_reply_to'\n        ) {\n            if (GALETTE_MODE === Galette::MODE_DEMO) {\n                Analog::log(\n                    'Trying to set pref_email while in DEMO.',\n                    Analog::WARNING\n                );\n                return;\n            }\n        }\n\n        // now, check validity\n        if ($value != '') {\n            $value = $this->validateValue($name, $value);\n        }\n\n        //some values need to be changed (eg. passwords)\n        if ($name == 'pref_admin_pass') {\n            $value = password_hash($value, PASSWORD_BCRYPT);\n        }\n\n        //okay, let's update value\n        $this->prefs[$name] = $value;\n    }\n\n    /**\n     * Get instance URL from configuration (if set) or guessed if not\n     *\n     * @return string\n     */\n    public function getURL()\n    {\n        $url = null;\n        if (isset($this->prefs['pref_galette_url']) && !empty($this->prefs['pref_galette_url'])) {\n            $url = $this->prefs['pref_galette_url'];\n        } else {\n            $url = $this->getDefaultURL();\n        }\n        return $url;\n    }\n\n    /**\n     * Get default URL (when not set by user in preferences)\n     *\n     * @return string\n     */\n    public function getDefaultURL()\n    {\n        $scheme = (isset($_SERVER['HTTPS']) ? 'https' : 'http');\n        $uri = $scheme . '://' . $_SERVER['HTTP_HOST'];\n        return $uri;\n    }\n\n    /**\n     * Get last telemetry date\n     *\n     * @return string\n     */\n    public function getTelemetryDate(): string\n    {\n        $rawdate = $this->prefs['pref_telemetry_date'];\n        if ($rawdate) {\n            $date = new \\DateTime($rawdate);\n            return $date->format(_T('Y-m-d H:i:s'));\n        } else {\n            return _T('Never');\n        }\n    }\n\n    /**\n     * Get last telemetry date\n     *\n     * @return string|null\n     */\n    public function getRegistrationDate()\n    {\n        $rawdate = $this->prefs['pref_registration_date'];\n        if ($rawdate) {\n            $date = new \\DateTime($rawdate);\n            return $date->format(_T('Y-m-d H:i:s'));\n        }\n\n        return null;\n    }\n\n    /**\n     * Check member cards sizes\n     * Always a A4/portrait\n     *\n     * @return array\n     */\n    public function checkCardsSizes()\n    {\n        $warning_detected = [];\n        //check page width\n        $max = 210;\n        //margins\n        $size = $this->pref_card_marges_h * 2;\n        //cards\n        $size += PdfMembersCards::getWidth() * PdfMembersCards::getCols();\n        //spacing\n        $size += $this->pref_card_hspace * (PdfMembersCards::getCols() - 1);\n        if ($size > $max) {\n            $warning_detected[] = _T('Current cards configuration may exceed page width!');\n        }\n\n        $max = 297;\n        //margins\n        $size = $this->pref_card_marges_v * 2;\n        //cards\n        $size += PdfMembersCards::getHeight() * PdfMembersCards::getRows();\n        //spacing\n        $size += $this->pref_card_vspace * (PdfMembersCards::getRows() - 1);\n        if ($size > $max) {\n            $warning_detected[] = _T('Current cards configuration may exceed page height!');\n        }\n\n        return $warning_detected;\n    }\n\n    /**\n     * Get errors\n     *\n     * @return array\n     */\n    public function getErrors()\n    {\n        return $this->errors;\n    }\n\n    /**\n     * Build legend array\n     *\n     * @return array\n     */\n    public function getLegend(): array\n    {\n        $legend = [];\n\n        $legend['main'] = [\n            'title'     => _T('Main information'),\n            'patterns'  => $this->getMainPatterns()\n        ];\n\n        $s_patterns = $this->getSignaturePatterns(false);\n        if (count($s_patterns)) {\n            $legend['socials'] = [\n                'title' => _T('Social networks'),\n                'patterns' => $this->getSignaturePatterns(false)\n            ];\n        }\n\n        return $legend;\n    }\n\n    /**\n     * Get email signature\n     *\n     * @return string\n     */\n    public function getMailSignature(): string\n    {\n        global $router;\n\n        $signature = $this->pref_mail_sign;\n\n        if (trim($signature) == '') {\n            return '';\n        }\n\n        $this->setPreferences($this)->setRouter($router);\n        $this->setPatterns(\n            $this->getMainPatterns() + $this->getSignaturePatterns()\n        );\n        $this\n            ->setMain()\n            ->setSocialReplacements();\n\n        $signature = $this->proceedReplacements($signature);\n\n        return \"\\r\\n-- \\r\\n\" . $signature;\n    }\n\n    /**\n     * Get patterns for mail signature\n     *\n     * @param boolean $legacy Whether to load legacy patterns\n     *\n     * @return array\n     */\n    protected function getSignaturePatterns($legacy = true): array\n    {\n        $s_patterns = [];\n        $social = new Social($this->zdb);\n\n        $types = $this->getCoreRegisteredTypes() + $social->getSystemTypes(false);\n\n        foreach ($types as $type) {\n            $s_patterns['asso_social_' . $type] = [\n                'title' => $social->getSystemType($type),\n                'pattern' => '/{ASSO_SOCIAL_' . strtoupper($type) . '}/'\n            ];\n        }\n\n        if ($legacy === true) {\n            $main = $this->getMainPatterns();\n            $s_patterns['_asso_name'] = [\n                'title'     => $main['asso_name']['title'],\n                'pattern'   => '/{NAME}/'\n            ];\n\n            $s_patterns['_asso_website'] = [\n                'title'     => $main['asso_website']['title'],\n                'pattern'   => '/{WEBSITE}/'\n            ];\n\n            foreach ([Social::FACEBOOK, Social::TWITTER, Social::LINKEDIN, Social::VIADEO] as $legacy_type) {\n                $s_patterns['_asso_social_' . $legacy_type] = [\n                    'title' => $s_patterns['asso_social_' . $legacy_type]['title'],\n                    'pattern' => '/{' . strtoupper($legacy_type) . '}/'\n                ];\n            }\n        }\n\n        return $s_patterns;\n    }\n\n    /**\n     * Set emails replacements\n     *\n     * @return $this\n     */\n    public function setSocialReplacements(): self\n    {\n        $replacements = [];\n\n        $done_replacements = $this->getReplacements();\n        $replacements['_asso_name'] = $done_replacements['asso_name'];\n        $replacements['asso_website'] = $this->pref_website;\n        $replacements['_asso_website'] = $replacements['asso_website'];\n\n        $social = new Social($this->zdb);\n        $types = $this->getCoreRegisteredTypes() + $social->getSystemTypes(false);\n\n        foreach ($types as $type) {\n            $replace_value = null;\n            $socials = Social::getListForMember(null, $type);\n            if (count($socials)) {\n                $replace_value = '';\n                foreach ($socials as $social) {\n                    if ($replace_value != '') {\n                        $replace_value .= ', ';\n                    }\n                    $replace_value .= $social->url;\n                }\n            }\n            $replacements['asso_social_' . strtolower($type)] = $replace_value;\n        }\n\n\n        foreach ([Social::FACEBOOK, Social::TWITTER, Social::LINKEDIN, Social::VIADEO] as $legacy_type) {\n            $replacements['_asso_social_' . $legacy_type] = $replacements['asso_social_' . $legacy_type];\n        }\n\n        $this->setReplacements($replacements);\n\n        return $this;\n    }\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Entitleds handling\n *\n * PHP version 5\n *\n * Copyright \u00a9 2007-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Entity\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-27\n */\n\nnamespace Galette\\Entity;\n\nuse Throwable;\nuse Analog\\Analog;\nuse Laminas\\Db\\Sql\\Expression;\nuse Galette\\Core\\Db;\nuse Galette\\Features\\I18n;\n\n/**\n * Entitled handling. Manage:\n *      - id\n *      - label\n *      - extra (that may differ from one entity to another)\n *\n * @category  Entity\n * @name      Entitled\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-27\n *\n * @property integer $id\n * @property string $label\n * @property string $libelle\n * @property mixed $third\n * @property mixed $extension\n */\n\nabstract class Entitled\n{\n    use I18n;\n\n    public const ID_NOT_EXITS = -1;\n\n    private $zdb;\n    private $table;\n    private $fpk;\n    private $flabel;\n    private $fthird;\n    private $used;\n\n    public static $fields;\n    protected static $defaults;\n\n    /** @var string|false */\n    protected $order_field = false;\n\n    private $id;\n    private $label;\n    private $third;\n\n    private $errors = array();\n\n    /**\n     * Default constructor\n     *\n     * @param Db     $zdb    Database\n     * @param string $table  Table name\n     * @param string $fpk    Primary key field name\n     * @param string $flabel Label fields name\n     * @param string $fthird The third field name\n     * @param string $used   Table name for isUsed function\n     * @param mixed  $args   Either an int or a resultset to load\n     */\n    public function __construct(Db $zdb, $table, $fpk, $flabel, $fthird, $used, $args = null)\n    {\n        $this->zdb = $zdb;\n        $this->table = $table;\n        $this->fpk = $fpk;\n        $this->flabel = $flabel;\n        $this->fthird = $fthird;\n        $this->used = $used;\n        if (is_int($args)) {\n            $this->load($args);\n        } elseif (is_object($args)) {\n            $this->loadFromRS($args);\n        }\n    }\n\n    /**\n     * Loads an entry from its id\n     *\n     * @param int $id Entry ID\n     *\n     * @return boolean true if query succeed, false otherwise\n     */\n    public function load($id)\n    {\n        try {\n            $select = $this->zdb->select($this->table);\n            $select->where([$this->fpk => $id]);\n\n            $results = $this->zdb->execute($select);\n            if ($results->count() > 0) {\n                $result = $results->current();\n                $this->loadFromRS($result);\n\n                return true;\n            } else {\n                Analog::log(\n                    'Unknown ID ' . $id,\n                    Analog::ERROR\n                );\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Cannot load ' . $this->getType() . ' from id `' . $id . '` | ' .\n                $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Populate object from a resultset row\n     *\n     * @param ResultSet $r the resultset row\n     *\n     * @return void\n     */\n    private function loadFromRS($r)\n    {\n        $pk = $this->fpk;\n        $this->id = $r->$pk;\n        $flabel = $this->flabel;\n        $this->label = $r->$flabel;\n        $fthird = $this->fthird;\n        $this->third = $r->$fthird;\n    }\n\n    /**\n     * Set defaults at install time\n     *\n     * @return boolean\n     * @throws Throwable\n     */\n    public function installInit()\n    {\n        $class = get_class($this);\n\n        try {\n            //first, we drop all values\n            $delete = $this->zdb->delete($this->table);\n            $this->zdb->execute($delete);\n\n            $values = array();\n            foreach ($class::$fields as $key => $f) {\n                $values[$f] = ':' . $key;\n            }\n\n            $insert = $this->zdb->insert($this->table);\n            $insert->values($values);\n            $stmt = $this->zdb->sql->prepareStatementForSqlObject($insert);\n\n            $this->zdb->handleSequence(\n                $this->table,\n                count(static::$defaults)\n            );\n\n            $fnames = array_values($values);\n            foreach ($class::$defaults as $d) {\n                $val = null;\n                if (isset($d['priority'])) {\n                    $val = $d['priority'];\n                } else {\n                    $val = $d['extension'];\n                }\n\n                $stmt->execute(\n                    array(\n                        $fnames[0]  => $d['id'],\n                        $fnames[1]  => $d['libelle'],\n                        $fnames[2]  => $val\n                    )\n                );\n            }\n\n            Analog::log(\n                'Defaults (' . $this->getType() .\n                ') were successfully stored into database.',\n                Analog::INFO\n            );\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to initialize defaults (' . $this->getType() . ').' .\n                $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Get list in an array built as:\n     * $array[id] = \"translated label\"\n     *\n     * @param boolean|null $extent Filter on (non) cotisations types\n     *\n     * @return array|false\n     */\n    public function getList(bool $extent = null)\n    {\n        $list = array();\n\n        try {\n            $select = $this->zdb->select($this->table);\n            $fields = array($this->fpk, $this->flabel);\n            if (\n                $this->order_field !== false\n                && $this->order_field !== $this->fpk\n                && $this->order_field !== $this->flabel\n            ) {\n                $fields[] = $this->order_field;\n            }\n            $select->quantifier('DISTINCT');\n            $select->columns($fields);\n\n            if ($this->order_field !== false) {\n                $select->order($this->order_field, $this->fpk);\n            }\n            if ($extent !== null) {\n                if ($extent === true) {\n                    $select->where(array($this->fthird => new Expression('true')));\n                } elseif ($extent === false) {\n                    $select->where(array($this->fthird => new Expression('false')));\n                }\n            }\n\n            $results = $this->zdb->execute($select);\n\n            foreach ($results as $r) {\n                $fpk = $this->fpk;\n                $flabel = $this->flabel;\n                $list[$r->$fpk] = _T($r->$flabel);\n            }\n            return $list;\n        } catch (Throwable $e) {\n            Analog::log(\n                __METHOD__ . ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Complete list\n     *\n     * @return array of all objects if succeeded, false otherwise\n     */\n    public function getCompleteList()\n    {\n        $list = array();\n\n        try {\n            $select = $this->zdb->select($this->table);\n            if ($this->order_field !== false) {\n                $select->order(array($this->order_field, $this->fpk));\n            }\n\n            $results = $this->zdb->execute($select);\n\n            if ($results->count() == 0) {\n                Analog::log(\n                    'No entries (' . $this->getType() . ') defined in database.',\n                    Analog::INFO\n                );\n            } else {\n                $pk = $this->fpk;\n                $flabel = $this->flabel;\n                $fprio = $this->fthird;\n\n                foreach ($results as $r) {\n                    $list[$r->$pk] = array(\n                        'name'  => _T($r->$flabel),\n                        'extra' => $r->$fprio\n                    );\n                }\n            }\n            return $list;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Cannot list entries (' . $this->getType() .\n                ') | ' . $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Get a entry\n     *\n     * @param integer $id Entry ID\n     *\n     * @return mixed|false Row if succeed ; false: no such id\n     */\n    public function get($id)\n    {\n        if (!is_numeric($id)) {\n            $this->errors[] = _T(\"ID must be an integer!\");\n            return false;\n        }\n\n        try {\n            $select = $this->zdb->select($this->table);\n            $select->where([$this->fpk => $id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n\n            if (!$result) {\n                $this->errors[] = _T(\"Label does not exist\");\n                return false;\n            }\n\n            return $result;\n        } catch (Throwable $e) {\n            Analog::log(\n                __METHOD__ . ' | ' . $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Get a label\n     *\n     * @param integer $id         Id\n     * @param boolean $translated Do we want translated or original label?\n     *                            Defaults to true.\n     *\n     * @return string\n     */\n    public function getLabel($id, $translated = true)\n    {\n        $res = $this->get($id);\n        if ($res === false) {\n            //get() already logged\n            return self::ID_NOT_EXITS;\n        };\n        $field = $this->flabel;\n        return ($translated) ? _T($res->$field) : $res->$field;\n    }\n\n    /**\n     * Get an ID from a label\n     *\n     * @param string $label The label\n     *\n     * @return int|false Return id if it exists false otherwise\n     */\n    public function getIdByLabel($label)\n    {\n        try {\n            $pk = $this->fpk;\n            $select = $this->zdb->select($this->table);\n            $select->columns(array($pk))\n                ->where(array($this->flabel => $label));\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            if ($result) {\n                return $result->$pk;\n            } else {\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to retrieve ' . $this->getType() . ' from label `' .\n                $label . '` | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Add a new entry\n     *\n     * @param string  $label The label\n     * @param integer $extra Extra values (priority for statuses,\n     *                       extension for contributions types, ...)\n     *\n     * @return integer id if success ; -1 : DB error ; -2 : label already exists\n     */\n    public function add($label, $extra)\n    {\n        // Avoid duplicates.\n        $ret = $this->getIdByLabel($label);\n\n        if ($ret !== false) {\n            Analog::log(\n                $this->getType() . ' with label `' . $label . '` already exists',\n                Analog::WARNING\n            );\n            return -2;\n        }\n\n        try {\n            $this->zdb->connection->beginTransaction();\n            $values = array(\n                $this->flabel  => $label,\n                $this->fthird  => $extra\n            );\n\n            $insert = $this->zdb->insert($this->table);\n            $insert->values($values);\n\n            $ret = $this->zdb->execute($insert);\n\n            if ($ret->count() > 0) {\n                Analog::log(\n                    'New ' . $this->getType() . ' `' . $label .\n                    '` added successfully.',\n                    Analog::INFO\n                );\n\n                $this->id = $this->zdb->getLastGeneratedValue($this);\n\n                $this->addTranslation($label);\n            } else {\n                throw new \\Exception('New ' . $this->getType() . ' not added.');\n            }\n            $this->zdb->connection->commit();\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Unable to add new entry `' . $label . '` | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Update in database.\n     *\n     * @param integer $id    Entry ID\n     * @param string  $label The label\n     * @param integer $extra Extra values (priority for statuses,\n     *                       extension for contributions types, ...)\n     *\n     * @return ID_NOT_EXITS|boolean\n     */\n    public function update($id, $label, $extra)\n    {\n        $ret = $this->get($id);\n        if (!$ret) {\n            /* get() already logged and set $this->error. */\n            return self::ID_NOT_EXITS;\n        }\n\n        $class = get_class($this);\n\n        try {\n            $oldlabel = $ret->{$this->flabel};\n            $this->zdb->connection->beginTransaction();\n            $values = array(\n                $this->flabel  => $label,\n                $this->fthird  => $extra\n            );\n\n            $update = $this->zdb->update($this->table);\n            $update->set($values);\n            $update->where([$this->fpk => $id]);\n\n            $ret = $this->zdb->execute($update);\n\n            if ($oldlabel != $label) {\n                $this->deleteTranslation($oldlabel);\n                $this->addTranslation($label);\n            }\n\n            Analog::log(\n                $this->getType() . ' #' . $id . ' updated successfully.',\n                Analog::INFO\n            );\n            $this->zdb->connection->commit();\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Unable to update ' . $this->getType() . ' #' . $id . ' | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Delete entry\n     *\n     * @param integer $id Entry ID\n     *\n     * @return ID_NOT_EXITS|boolean\n     */\n    public function delete($id)\n    {\n        $ret = $this->get($id);\n        if (!$ret) {\n            /* get() already logged */\n            return self::ID_NOT_EXITS;\n        }\n\n        if ($this->isUsed($id)) {\n            $this->errors[] = _T(\"Cannot delete this label: it's still used\");\n            return false;\n        }\n\n        try {\n            $this->zdb->connection->beginTransaction();\n            $delete = $this->zdb->delete($this->table);\n            $delete->where([$this->fpk => $id]);\n\n            $this->zdb->execute($delete);\n            $this->deleteTranslation($ret->{$this->flabel});\n\n            Analog::log(\n                $this->getType() . ' ' . $id . ' deleted successfully.',\n                Analog::INFO\n            );\n\n            $this->zdb->connection->commit();\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Unable to delete ' . $this->getType() . ' ' . $id .\n                ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Check if this entry is used.\n     *\n     * @param integer $id Entry ID\n     *\n     * @return boolean\n     */\n    public function isUsed($id)\n    {\n        try {\n            $select = $this->zdb->select($this->used);\n            $select->where([$this->fpk => $id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n\n            if ($result !== null) {\n                return true;\n            } else {\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to check if ' . $this->getType . ' `' . $id .\n                '` is used. | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            //in case of error, we consider that it is used, to avoid errors\n            return true;\n        }\n    }\n\n    /**\n     * Get textual type representation\n     *\n     * @return string\n     */\n    abstract protected function getType();\n\n    /**\n     * Get translated textual representation\n     *\n     * @return string\n     */\n    abstract public function getI18nType();\n\n    /**\n     * Global getter method\n     *\n     * @param string $name name of the property we want to retrive\n     *\n     * @return false|object the called property\n     */\n    public function __get($name)\n    {\n        $forbidden = array();\n        $virtuals = array('extension', 'libelle');\n        if (\n            in_array($name, $virtuals)\n            || !in_array($name, $forbidden)\n            && isset($this->$name)\n        ) {\n            switch ($name) {\n                case 'libelle':\n                    return _T($this->label);\n                    break;\n                case 'extension':\n                    return $this->third;\n                    break;\n                default:\n                    return $this->$name;\n                    break;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Get errors\n     *\n     * @return array\n     */\n    public function getErrors(): array\n    {\n        return $this->errors;\n    }\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Title\n *\n * PHP version 5\n *\n * Copyright \u00a9 2013-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Entity\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2013-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7.4dev - 2013-01-27\n */\n\nnamespace Galette\\Entity;\n\nuse Throwable;\nuse Analog\\Analog;\n\n/**\n * Title\n *\n * @category  Entity\n * @name      Title\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2009-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2009-03-04\n */\n\nclass Title\n{\n    public const TABLE = 'titles';\n    public const PK = 'id_title';\n\n    private $id;\n    private $short;\n    private $long;\n\n    public const MR = 1;\n    public const MRS = 2;\n    public const MISS = 3;\n\n    /**\n     * Main constructor\n     *\n     * @param mixed $args Arguments\n     */\n    public function __construct($args = null)\n    {\n        if (is_int($args)) {\n            $this->load($args);\n        } elseif ($args !== null && is_object($args)) {\n            $this->loadFromRs($args);\n        }\n    }\n\n    /**\n     * Load a title from its identifier\n     *\n     * @param int $id Identifier\n     *\n     * @return void\n     */\n    private function load($id)\n    {\n        global $zdb;\n        try {\n            $select = $zdb->select(self::TABLE);\n            $select->limit(1)->where([self::PK => $id]);\n\n            $results = $zdb->execute($select);\n            $res = $results->current();\n\n            $this->id = $id;\n            $this->short = $res->short_label;\n            $this->long = $res->long_label;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred loading title #' . $id . \"Message:\\n\" .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Load title from a db ResultSet\n     *\n     * @param ResultSet $rs ResultSet\n     *\n     * @return void\n     */\n    private function loadFromRs($rs)\n    {\n        $pk = self::PK;\n        $this->id = $rs->$pk;\n        $this->short = $rs->short_label;\n        if ($rs->long_label === 'NULL') {\n            //mysql's null...\n            $this->long = null;\n        } else {\n            $this->long = $rs->long_label;\n        }\n    }\n\n    /**\n     * Store title in database\n     *\n     * @param Db $zdb Database instance\n     *\n     * @return boolean\n     */\n    public function store($zdb)\n    {\n        $data = array(\n            'short_label'   => $this->short,\n            'long_label'    => $this->long\n        );\n        try {\n            if ($this->id !== null && $this->id > 0) {\n                $update = $zdb->update(self::TABLE);\n                $update->set($data)->where([self::PK => $this->id]);\n                $zdb->execute($update);\n            } else {\n                $insert = $zdb->insert(self::TABLE);\n                $insert->values($data);\n                $add = $zdb->execute($insert);\n                if (!$add->count() > 0) {\n                    Analog::log('Not stored!', Analog::ERROR);\n                    return false;\n                }\n\n                $this->id = $zdb->getLastGeneratedValue($this);\n            }\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred storing title: ' . $e->getMessage() .\n                \"\\n\" . print_r($data, true),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Remove current title\n     *\n     * @param Db $zdb Database instance\n     *\n     * @return boolean\n     */\n    public function remove($zdb)\n    {\n        $id = (int)$this->id;\n        if ($id === self::MR || $id === self::MRS) {\n            throw new \\RuntimeException(_T(\"You cannot delete Mr. or Mrs. titles!\"));\n        }\n\n        try {\n            $delete = $zdb->delete(self::TABLE);\n            $delete->where([self::PK => $id]);\n            $zdb->execute($delete);\n            Analog::log(\n                'Title #' . $id . ' (' . $this->short\n                . ') deleted successfully.',\n                Analog::INFO\n            );\n            return true;\n        } catch (\\RuntimeException $re) {\n            throw $re;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to delete title ' . $id . ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Getter\n     *\n     * @param string $name Property name\n     *\n     * @return mixed\n     */\n    public function __get($name)\n    {\n        global $lang;\n\n        switch ($name) {\n            case 'id':\n                return $this->$name;\n                break;\n            case 'short':\n            case 'long':\n                if (\n                    $name === 'long'\n                    && ($this->long == null || trim($this->long) === '')\n                ) {\n                    $name = 'short';\n                }\n                return $this->$name;\n                break;\n            case 'tshort':\n            case 'tlong':\n                $rname = null;\n                if ($name === 'tshort') {\n                    $rname = 'short';\n                } else {\n                    if ($this->long !== null && trim($this->long) !== '') {\n                        $rname = 'long';\n                    } else {\n                        //switch back to short version if long does not exists\n                        $rname = 'short';\n                    }\n                }\n                if (isset($lang) && isset($lang[$this->$rname])) {\n                    return _T($this->$rname);\n                } else {\n                    return $this->$rname;\n                }\n                break;\n            default:\n                Analog::log(\n                    'Unable to get Title property ' . $name,\n                    Analog::WARNING\n                );\n                break;\n        }\n    }\n\n    /**\n     * Setter\n     *\n     * @param string $name  Property name\n     * @param mixed  $value Property value\n     *\n     * @return void\n     */\n    public function __set($name, $value)\n    {\n        switch ($name) {\n            case 'short':\n            case 'long':\n                if (trim($value) === '') {\n                    Analog::log(\n                        'Trying to set empty value for title' . $name,\n                        Analog::WARNING\n                    );\n                } else {\n                    $this->$name = $value;\n                }\n                break;\n            default:\n                Analog::log(\n                    'Unable to set property ' . $name,\n                    Analog::WARNING\n                );\n                break;\n        }\n    }\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Transaction class for galette\n *\n * PHP version 5\n *\n * Copyright \u00a9 2011-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Entity\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2011-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2011-07-31\n */\n\nnamespace Galette\\Entity;\n\nuse Throwable;\nuse Analog\\Analog;\nuse Laminas\\Db\\Sql\\Expression;\nuse Galette\\Repository\\Contributions;\nuse Galette\\Core\\Db;\nuse Galette\\Core\\History;\nuse Galette\\Core\\Login;\nuse Galette\\Features\\Dynamics;\n\n/**\n * Transaction class for galette\n *\n * @category  Entity\n * @name      Transaction\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2010-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2010-03-11\n *\n * @property integer $id\n * @property date $date\n * @property integer $amount\n * @property string $description\n * @property integer $member\n */\nclass Transaction\n{\n    use Dynamics;\n\n    public const TABLE = 'transactions';\n    public const PK = 'trans_id';\n\n    private $_id;\n    private $_date;\n    private $_amount;\n    private $_description;\n    private $_member;\n\n    //fields list and their translation\n    private $_fields;\n\n    private $zdb;\n    private $login;\n\n    private $errors;\n\n    /**\n     * Default constructor\n     *\n     * @param Db                 $zdb   Database instance\n     * @param Login              $login Login instance\n     * @param null|int|ResultSet $args  Either a ResultSet row or its id for to load\n     *                                  a specific transaction, or null to just\n     *                                  instantiate object\n     */\n    public function __construct(Db $zdb, Login $login, $args = null)\n    {\n        $this->zdb = $zdb;\n        $this->login = $login;\n\n        /*\n         * Fields configuration. Each field is an array and must reflect:\n         * array(\n         *   (string)label,\n         *   (string) propname\n         * )\n         *\n         * I'd prefer a static private variable for this...\n         * But call to the _T function does not seem to be allowed there :/\n         */\n        $this->_fields = array(\n            self::PK            => array(\n                'label'    => null, //not a field in the form\n                'propname' => 'id'\n            ),\n            'trans_date'          => array(\n                'label'    => _T(\"Date:\"), //not a field in the form\n                'propname' => 'date'\n            ),\n            'trans_amount'       => array(\n                'label'    => _T(\"Amount:\"),\n                'propname' => 'amount'\n            ),\n            'trans_desc'          => array(\n                'label'    => _T(\"Description:\"),\n                'propname' => 'description'\n            ),\n            Adherent::PK          => array(\n                'label'    => _T(\"Originator:\"),\n                'propname' => 'member'\n            )\n        );\n        if ($args == null || is_int($args)) {\n            $this->_date = date(\"Y-m-d\");\n\n            if (is_int($args) && $args > 0) {\n                $this->load($args);\n            }\n        } elseif (is_object($args)) {\n            $this->loadFromRS($args);\n        }\n\n        $this->loadDynamicFields();\n    }\n\n    /**\n     * Loads a transaction from its id\n     *\n     * @param int $id the identifier for the transaction to load\n     *\n     * @return bool true if query succeed, false otherwise\n     */\n    public function load($id)\n    {\n        try {\n            $select = $this->zdb->select(self::TABLE, 't');\n            $select->where([self::PK => $id]);\n            $select->join(\n                array('a' => PREFIX_DB . Adherent::TABLE),\n                't.' . Adherent::PK . '=a.' . Adherent::PK,\n                array()\n            );\n\n            //restrict query on current member id if he's not admin nor staff member\n            if (!$this->login->isAdmin() && !$this->login->isStaff() && !$this->login->isGroupManager()) {\n                if (!$this->login->isLogged()) {\n                    Analog::log(\n                        'Non-logged-in users cannot load transaction id `' . $id,\n                        Analog::ERROR\n                    );\n                    return false;\n                }\n                $select->where\n                    ->nest()\n                        ->equalTo('a.' . Adherent::PK, $this->login->id)\n                        ->or\n                        ->equalTo('a.parent_id', $this->login->id)\n                    ->unnest()\n                    ->and\n                    ->equalTo('t.' . self::PK, $id)\n                ;\n            } else {\n                $select->where->equalTo(self::PK, $id);\n            }\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            if ($result) {\n                $this->loadFromRS($result);\n                return true;\n            } else {\n                Analog::log(\n                    'Transaction id `' . $id . '` does not exists',\n                    Analog::WARNING\n                );\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Cannot load transaction form id `' . $id . '` | ' .\n                $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Remove transaction (and all associated contributions) from database\n     *\n     * @param History $hist        History\n     * @param boolean $transaction Activate transaction mode (defaults to true)\n     *\n     * @return boolean\n     */\n    public function remove(History $hist, $transaction = true)\n    {\n        global $emitter;\n\n        try {\n            if ($transaction) {\n                $this->zdb->connection->beginTransaction();\n            }\n\n            //remove associated contributions if needeed\n            if ($this->getDispatchedAmount() > 0) {\n                $c = new Contributions($this->zdb, $this->login);\n                $clist = $c->getListFromTransaction($this->_id);\n                $cids = array();\n                foreach ($clist as $cid) {\n                    $cids[] = $cid->id;\n                }\n                $rem = $c->remove($cids, $hist, false);\n            }\n\n            //remove transaction itself\n            $delete = $this->zdb->delete(self::TABLE);\n            $delete->where([self::PK => $this->_id]);\n            $del = $this->zdb->execute($delete);\n            if ($del->count() > 0) {\n                $this->dynamicsRemove(true);\n            } else {\n                Analog::log(\n                    'Transaction has not been removed!',\n                    Analog::WARNING\n                );\n                return false;\n            }\n\n            if ($transaction) {\n                $this->zdb->connection->commit();\n            }\n\n            $emitter->emit('transaction.remove', $this);\n            return true;\n        } catch (Throwable $e) {\n            if ($transaction) {\n                $this->zdb->connection->rollBack();\n            }\n            Analog::log(\n                'An error occurred trying to remove transaction #' .\n                $this->_id . ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Populate object from a resultset row\n     *\n     * @param ResultSet $r the resultset row\n     *\n     * @return void\n     */\n    private function loadFromRS($r)\n    {\n        $pk = self::PK;\n        $this->_id = $r->$pk;\n        $this->_date = $r->trans_date;\n        $this->_amount = $r->trans_amount;\n        $this->_description = $r->trans_desc;\n        $adhpk = Adherent::PK;\n        $this->_member = (int)$r->$adhpk;\n\n        $this->loadDynamicFields();\n    }\n\n    /**\n     * Check posted values validity\n     *\n     * @param array $values   All values to check, basically the $_POST array\n     *                        after sending the form\n     * @param array $required Array of required fields\n     * @param array $disabled Array of disabled fields\n     *\n     * @return true|array\n     */\n    public function check($values, $required, $disabled)\n    {\n        $this->errors = array();\n\n        $fields = array_keys($this->_fields);\n        foreach ($fields as $key) {\n            //first, let's sanitize values\n            $key = strtolower($key);\n            $prop = '_' . $this->_fields[$key]['propname'];\n\n            if (isset($values[$key])) {\n                $value = trim($values[$key]);\n            } else {\n                $value = '';\n            }\n\n            // if the field is enabled, check it\n            if (!isset($disabled[$key])) {\n                // now, check validity\n                if ($value != '') {\n                    switch ($key) {\n                        // dates\n                        case 'trans_date':\n                            try {\n                                $d = \\DateTime::createFromFormat(__(\"Y-m-d\"), $value);\n                                if ($d === false) {\n                                    throw new \\Exception('Incorrect format');\n                                }\n                                $this->$prop = $d->format('Y-m-d');\n                            } catch (Throwable $e) {\n                                Analog::log(\n                                    'Wrong date format. field: ' . $key .\n                                    ', value: ' . $value . ', expected fmt: ' .\n                                    __(\"Y-m-d\") . ' | ' . $e->getMessage(),\n                                    Analog::INFO\n                                );\n                                $this->errors[] = str_replace(\n                                    array(\n                                        '%date_format',\n                                        '%field'\n                                    ),\n                                    array(\n                                        __(\"Y-m-d\"),\n                                        $this->getFieldLabel($key)\n                                    ),\n                                    _T(\"- Wrong date format (%date_format) for %field!\")\n                                );\n                            }\n                            break;\n                        case Adherent::PK:\n                            $this->_member = (int)$value;\n                            break;\n                        case 'trans_amount':\n                            $this->_amount = $value;\n                            $value = strtr($value, ',', '.');\n                            if (!is_numeric($value)) {\n                                $this->errors[] = _T(\"- The amount must be an integer!\");\n                            }\n                            break;\n                        case 'trans_desc':\n                            /** TODO: retrieve field length from database and check that */\n                            $this->_description = $value;\n                            if (mb_strlen($value) > 150) {\n                                $this->errors[] = _T(\"- Transaction description must be 150 characters long maximum.\");\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n\n        // missing required fields?\n        foreach ($required as $key => $val) {\n            if ($val === 1) {\n                $prop = '_' . $this->_fields[$key]['propname'];\n                if (!isset($disabled[$key]) && !isset($this->$prop)) {\n                    $this->errors[] = str_replace(\n                        '%field',\n                        '<a href=\"#' . $key . '\">' . $this->getFieldLabel($key) . '</a>',\n                        _T(\"- Mandatory field %field empty.\")\n                    );\n                }\n            }\n        }\n\n        if ($this->_id != '') {\n            $dispatched = $this->getDispatchedAmount();\n            if ($dispatched > $this->_amount) {\n                $this->errors[] = _T(\"- Sum of all contributions exceed corresponding transaction amount.\");\n            }\n        }\n\n        $this->dynamicsCheck($values, $required, $disabled);\n\n        if (count($this->errors) > 0) {\n            Analog::log(\n                'Some errors has been thew attempting to edit/store a transaction' .\n                print_r($this->errors, true),\n                Analog::DEBUG\n            );\n            return $this->errors;\n        } else {\n            Analog::log(\n                'Transaction checked successfully.',\n                Analog::DEBUG\n            );\n            return true;\n        }\n    }\n\n    /**\n     * Store the transaction\n     *\n     * @param History $hist History\n     *\n     * @return boolean\n     */\n    public function store(History $hist)\n    {\n        global $emitter;\n\n        $event = null;\n\n        try {\n            $this->zdb->connection->beginTransaction();\n            $values = array();\n            $fields = $this->getDbFields($this->zdb);\n            /** FIXME: quote? */\n            foreach ($fields as $field) {\n                $prop = '_' . $this->_fields[$field]['propname'];\n                $values[$field] = $this->$prop;\n            }\n\n            $success = false;\n            if (!isset($this->_id) || $this->_id == '') {\n                //we're inserting a new transaction\n                unset($values[self::PK]);\n                $insert = $this->zdb->insert(self::TABLE);\n                $insert->values($values);\n                $add = $this->zdb->execute($insert);\n                if ($add->count() > 0) {\n                    $this->_id = $this->zdb->getLastGeneratedValue($this);\n\n                    // logging\n                    $hist->add(\n                        _T(\"Transaction added\"),\n                        Adherent::getSName($this->zdb, $this->_member)\n                    );\n                    $success = true;\n                    $event = 'transaction.add';\n                } else {\n                    $hist->add(_T(\"Fail to add new transaction.\"));\n                    throw new \\RuntimeException(\n                        'An error occurred inserting new transaction!'\n                    );\n                }\n            } else {\n                //we're editing an existing transaction\n                $update = $this->zdb->update(self::TABLE);\n                $update->set($values)->where([self::PK => $this->_id]);\n                $edit = $this->zdb->execute($update);\n                //edit == 0 does not mean there were an error, but that there\n                //were nothing to change\n                if ($edit->count() > 0) {\n                    $hist->add(\n                        _T(\"Transaction updated\"),\n                        Adherent::getSName($this->zdb, $this->_member)\n                    );\n                }\n                $success = true;\n                $event = 'transaction.edit';\n            }\n\n            //dynamic fields\n            if ($success) {\n                $success = $this->dynamicsStore(true);\n            }\n\n            $this->zdb->connection->commit();\n\n            //send event at the end of process, once all has been stored\n            if ($event !== null) {\n                $emitter->emit($event, $this);\n            }\n\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Something went wrong :\\'( | ' . $e->getMessage() . \"\\n\" .\n                $e->getTraceAsString(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Retrieve amount that has already been dispatched into contributions\n     *\n     * @return double\n     */\n    public function getDispatchedAmount(): float\n    {\n        if (empty($this->_id)) {\n            return (double)0;\n        }\n\n        try {\n            $select = $this->zdb->select(Contribution::TABLE);\n            $select->columns(\n                array(\n                    'sum' => new Expression('SUM(montant_cotis)')\n                )\n            )->where([self::PK => $this->_id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            $dispatched_amount = $result->sum;\n            return (double)$dispatched_amount;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred retrieving dispatched amounts | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Retrieve amount that has not yet been dispatched into contributions\n     *\n     * @return double\n     */\n    public function getMissingAmount()\n    {\n        if (empty($this->_id)) {\n            return (double)$this->amount;\n        }\n\n        try {\n            $select = $this->zdb->select(Contribution::TABLE);\n            $select->columns(\n                array(\n                    'sum' => new Expression('SUM(montant_cotis)')\n                )\n            )->where([self::PK => $this->_id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            $dispatched_amount = $result->sum;\n            return (double)$this->_amount - (double)$dispatched_amount;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred retrieving missing amounts | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Retrieve fields from database\n     *\n     * @param Db $zdb Database instance\n     *\n     * @return array\n     */\n    public function getDbFields(Db $zdb)\n    {\n        $columns = $zdb->getColumns(self::TABLE);\n        $fields = array();\n        foreach ($columns as $col) {\n            $fields[] = $col->getName();\n        }\n        return $fields;\n    }\n\n    /**\n     * Get the relevant CSS class for current transaction\n     *\n     * @return string current transaction row class\n     */\n    public function getRowClass()\n    {\n        return ($this->getMissingAmount() == 0) ?\n            'transaction-normal' : 'transaction-uncomplete';\n    }\n\n    /**\n     * Global getter method\n     *\n     * @param string $name name of the property we want to retrive\n     *\n     * @return false|object the called property\n     */\n    public function __get($name)\n    {\n        $forbidden = array();\n\n        $rname = '_' . $name;\n        if (!in_array($name, $forbidden) && property_exists($this, $rname)) {\n            switch ($name) {\n                case 'date':\n                    if ($this->$rname != '') {\n                        try {\n                            $d = new \\DateTime($this->$rname);\n                            return $d->format(__(\"Y-m-d\"));\n                        } catch (Throwable $e) {\n                            //oops, we've got a bad date :/\n                            Analog::log(\n                                'Bad date (' . $this->$rname . ') | ' .\n                                $e->getMessage(),\n                                Analog::INFO\n                            );\n                            return $this->$rname;\n                        }\n                    }\n                    break;\n                case 'id':\n                    if ($this->$rname !== null) {\n                        return (int)$this->$rname;\n                    }\n                    return null;\n                case 'amount':\n                    if ($this->$rname !== null) {\n                        return (double)$this->$rname;\n                    }\n                    return null;\n                default:\n                    return $this->$rname;\n            }\n        } else {\n            Analog::log(\n                sprintf(\n                    'Property %1$s does not exists for transaction',\n                    $name\n                ),\n                Analog::WARNING\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Get field label\n     *\n     * @param string $field Field name\n     *\n     * @return string\n     */\n    public function getFieldLabel($field)\n    {\n        $label = $this->_fields[$field]['label'];\n        //replace \"&nbsp;\"\n        $label = str_replace('&nbsp;', ' ', $label);\n        //remove trailing ':' and then trim\n        $label = trim(trim($label, ':'));\n        return $label;\n    }\n\n    /**\n     * Handle files (dynamics files)\n     *\n     * @param array $files Files sent\n     *\n     * @return array|true\n     */\n    public function handleFiles($files)\n    {\n        $this->errors = [];\n\n        $this->dynamicsFiles($files);\n\n        if (count($this->errors) > 0) {\n            Analog::log(\n                'Some errors has been thew attempting to edit/store a transaction files' . \"\\n\" .\n                print_r($this->errors, true),\n                Analog::ERROR\n            );\n            return $this->errors;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * Can current logged-in user display transaction\n     *\n     * @param Login $login Login instance\n     *\n     * @return boolean\n     */\n    public function canShow(Login $login): bool\n    {\n        //non-logged-in members cannot show contributions\n        if (!$login->isLogged()) {\n            return false;\n        }\n\n        //admin and staff users can edit, as well as member itself\n        if (!$this->id || $this->id && $login->id == $this->_member || $login->isAdmin() || $login->isStaff()) {\n            return true;\n        }\n\n        //parent can see their children transactions\n        $parent = new Adherent($this->zdb);\n        $parent\n            ->disableAllDeps()\n            ->enableDep('children')\n            ->load($this->login->id);\n        if ($parent->hasChildren()) {\n            foreach ($parent->children as $child) {\n                if ($child->id === $this->_member) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        return false;\n    }\n}\n", "    <table class=\"listing\">\n{if $class eq 'Status'}\n        <caption>\n            {_T string=\"Note: members with a status priority lower than %priority are staff members.\" pattern=\"/%priority/\" replace=$non_staff_priority}\n        </caption>\n{/if}\n        <thead>\n            <tr>\n                <th class=\"id_row\">#</th>\n                <th>{_T string=\"Name\"}</th>\n{if $class == 'ContributionsTypes'}\n                <th>{_T string=\"Extends membership?\"}</th>\n{elseif $class == 'Status'}\n                <th>{_T string=\"Priority\"}</th>\n{/if}\n                <th>{_T string=\"Actions\"}</th>\n            </tr>\n        </thead>\n        <tfoot>\n            <tr>\n                <td data-scope=\"row\">\n                    <span class=\"row-title\">\n{if $class eq 'Status'}\n                        {_T string=\"New status\"}\n{else}\n                        {_T string=\"New contribution type\"}\n{/if}\n                    </span>\n                </td>\n                <td class=\"left\" data-title=\"{_T string=\"Name\"}\">\n                    <input size=\"40\" type=\"text\" name=\"{$fields.libelle}\"/>\n                </td>\n                <td class=\"left\" data-title=\"{if $class == 'ContributionsTypes'}{_T string=\"Extends membership?\"}{else}{_T string=\"Priority\"}{/if}\">\n{if $class == 'ContributionsTypes'}\n                    <select name=\"{$fields.third}\">\n                        <option value=\"0\" selected=\"selected\">{_T string=\"No\"}</option>\n                        <option value=\"1\">{_T string=\"Yes\"}</option>\n                    </select>\n{elseif $class == 'Status'}\n                    <input size=\"4\" type=\"text\" name=\"{$fields.third}\" value=\"99\" />\n{/if}\n                </td>\n                <td class=\"center actions_row\">\n                    <input type=\"hidden\" name=\"new\" value=\"1\" />\n                    <input type=\"hidden\" name=\"class\" value=\"{$class}\" />\n                    <button type=\"submit\" name=\"valid\">\n                        <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n                        {_T string=\"Add\"}\n                    </button>\n                </td>\n            </tr>\n        </tfoot>\n        <tbody>\n{foreach from=$entries item=entry key=eid name=allentries}\n            <tr class=\"{if $smarty.foreach.allentries.iteration % 2 eq 0}even{else}odd{/if}\">\n                <td data-scope=\"row\">\n                    {$eid}\n                    <span class=\"row-title\">\n                        <a href=\"{path_for name=\"editEntitled\" data=[\"class\" => $url_class, \"action\" => \"edit\", \"id\" => $eid]}\">\n                            {_T string=\"%s field\" pattern=\"/%s/\" replace=$entry.name}\n                        </a>\n                    </span>\n                </td>\n                <td class=\"left\" data-title=\"{_T string=\"Name\"}\">\n\n                    {if $class == 'Status'}\n                        {if $entry.extra < 30}\n                            <img src=\"{base_url}/{$template_subdir}images/icon-staff.png\" alt=\"{_T string=\"[staff]\"}\" width=\"16\" height=\"16\"/>\n                        {else}\n                            <img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16\" height=\"16\"/>\n                        {/if}\n                    {/if}\n                    {$entry.name|escape}\n                </td>\n                <td data-title=\"{if $class == 'ContributionsTypes'}{_T string=\"Extends membership?\"}{else}{_T string=\"Priority\"}{/if}\">\n    {if $class == 'ContributionsTypes'}\n                    {if $entry.extra eq 1}\n                        {_T string=\"Yes\"}\n                    {else}\n                        {_T string=\"No\"}\n                    {/if}\n    {elseif $class == 'Status'}\n                    {$entry.extra}\n    {/if}\n                </td>\n                <td class=\"center actions_row\">\n                    <a\n                        href=\"{path_for name=\"editEntitled\" data=[\"class\" => $url_class, \"action\" => \"edit\", \"id\" => $eid]}\"\n                        class=\"action tooltip\"\n                    >\n                        <i class=\"fas fa-edit fa-fw\"></i>\n                        <span class=\"sr-only\">{_T string=\"Edit '%s' field\" pattern=\"/%s/\" replace=$entry.name}</span>\n                    </a>\n                    <a\n                        href=\"{path_for name=\"removeEntitled\" data=[\"class\" => $url_class, \"id\" => $eid]}\"\n                        class=\"delete tooltip\"\n                    >\n                        <i class=\"fas fa-trash fa-fw\"></i>\n                        <span class=\"sr-only\">{_T string=\"Delete '%s' field\" pattern=\"/%s/\" replace=$entry.name}</span>\n                    </a>\n                </td>\n            </tr>\n{/foreach}\n        </tbody>\n    </table>\n", "{extends file=\"page.tpl\"}\n\n{block name=\"content\"}\n        <form action=\"{path_for name=\"titles\"}\" method=\"post\" enctype=\"multipart/form-data\">\n                <table class=\"listing\">\n                    <thead>\n                        <tr>\n                            <th class=\"id_row\">#</th>\n                            <th>{_T string=\"Short form\"}</th>\n                            <th>{_T string=\"Long form\"}</th>\n                            <th>{_T string=\"Actions\"}</th>\n                        </tr>\n                    </thead>\n                    <tfoot>\n                        <tr>\n                            <td data-scope=\"row\">\n                                <span class=\"row-title\">\n                                    {_T string=\"Add title\"}\n                                </span>\n                            </td>\n                            <td class=\"left\" data-title=\"{_T string=\"Short form\"}\">\n                                <input size=\"20\" type=\"text\" name=\"short_label\"/>\n                            </td>\n                            <td class=\"left\" data-title=\"{_T string=\"Long form\"}\">\n                                <input size=\"20\" type=\"text\" name=\"long_label\"/>\n                            </td>\n                            <td class=\"center actions_row\">\n                                <input type=\"hidden\" name=\"new\" value=\"1\" />\n                                <button type=\"submit\" name=\"valid\">\n                                    <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n                                    {_T string=\"Add\"}\n                                </button>\n                            </td>\n                        </tr>\n                    </tfoot>\n                    <tbody>\n            {foreach from=$titles_list item=title name=alltitles}\n                        <tr class=\"{if $smarty.foreach.alltitles.iteration % 2 eq 0}even{else}odd{/if}\">\n                            <td data-scope=\"row\">\n    {if $preferences->pref_show_id}\n                                {$title->id}\n    {else}\n                                {$smarty.foreach.alltitles.iteration}\n    {/if}\n                                <span class=\"row-title\">\n                                    <a href=\"{path_for name=\"editTitle\" data=[\"id\" => $title->id]}\">\n                                        {_T string=\"%s title\" pattern=\"/%s/\" replace=$title->short}\n                                    </a>\n                                </span>\n                            </td>\n                            <td class=\"left\" data-title=\"{_T string=\"Short form\"}\">{$title->short}</td>\n                            <td class=\"left\" data-title=\"{_T string=\"Long form\"}\">{$title->long}</td>\n                            <td class=\"center actions_row\">\n                                <a\n                                    href=\"{path_for name=\"editTitle\" data=[\"id\" => $title->id]}\"\n                                    class=\"tooltip action\"\n                                >\n                                    <i class=\"fas fa-edit fa-fw\"></i>\n                                    <span class=\"sr-only\">{_T string=\"Edit '%s' title\" pattern=\"/%s/\" replace=$title->short}</span>\n                                </a>\n                {if $title->id eq 1 or $title->id eq 2}\n                                <img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16px\" height=\"16px\"/>\n                {else}\n                                <a\n                                    href=\"{path_for name=\"removeTitle\" data=[\"id\" => $title->id]}\"\n                                    class=\"delete tooltip\"\n                                >\n                                    <i class=\"fa fa-trash fa-fw\"></i>\n                                    <span class=\"sr-only\">{_T string=\"Delete '%s' title\" pattern=\"/%s/\" replace=$title->short}</span>\n                                </a>\n                {/if}\n                            </td>\n                        </tr>\n            {/foreach}\n                    </tbody>\n                </table>\n        </form>\n{/block}\n\n{block name=\"javascripts\"}\n        <script type=\"text/javascript\">\n            $(function() {\n                {include file=\"js_removal.tpl\"}\n            });\n        </script>\n{/block}\n", "{extends file=\"page.tpl\"}\n{block name=\"content\"}\n        <form action=\"{path_for name=\"payments_filter\" data=[\"type\" => \"transactions\"]}\" method=\"post\" id=\"filtre\">\n        <div id=\"listfilter\">\n            <label for=\"start_date_filter\">{_T string=\"Show transactions since\"}</label>&nbsp;\n            <input type=\"text\" name=\"start_date_filter\" id=\"start_date_filter\" maxlength=\"10\" size=\"10\" value=\"{$filters->start_date_filter}\"/>\n            <label for=\"end_date_filter\">{_T string=\"until\"}</label>&nbsp;\n            <input type=\"text\" name=\"end_date_filter\" id=\"end_date_filter\" maxlength=\"10\" size=\"10\" value=\"{$filters->end_date_filter}\"/>\n            <input type=\"submit\" class=\"inline\" value=\"{_T string=\"Filter\"}\"/>\n            <input type=\"submit\" name=\"clear_filter\" class=\"inline\" value=\"{_T string=\"Clear filter\"}\"/>\n        </div>\n        <table class=\"infoline\">\n            <tr>\n                <td class=\"left nowrap\">\n{if isset($member)}\n    {if $login->isAdmin() or $login->isStaff() or $member->canShow($login)}\n                    <a\n                        href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"member\", \"value\" => \"all\"]}\"\n                        class=\"tooltip\"\n                    >\n                        <i class=\"fas fa-eraser\"></i>\n                        <span class=\"sr-only\">{_T string=\"Show all members transactions\"}</span>\n                    </a>\n    {/if}\n                    <strong>{$member->sname}</strong>\n    {if $login->isAdmin() or $login->isStaff()}\n                    (<a href=\"{path_for name=\"member\" data=[\"id\" => $member->id]}\">{_T string=\"See member profile\"}</a> -\n                    <a href=\"{path_for name=\"addTransaction\"}?id_adh={$member->id}\">{_T string=\"Add a transaction\"}</a>)\n    {/if}\n                    &nbsp;:\n{/if}\n                    {_T string=\"%count transaction\" plural=\"%count transactions\" count=$nb pattern=\"/%count/\" replace=$nb}\n                </td>\n                <td class=\"right\">\n                    <label for=\"nbshow\">{_T string=\"Records per page:\"}</label>\n                    <select name=\"nbshow\" id=\"nbshow\">\n                        {html_options options=$nbshow_options selected=$numrows}\n                    </select>\n                    <noscript> <span><input type=\"submit\" value=\"{_T string=\"Change\"}\" /></span></noscript>\n                </td>\n            </tr>\n        </table>\n        </form>\n        <table class=\"listing\">\n            <thead>\n                <tr>\n                    <th class=\"id_row\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_ID\"|constant]}\">#\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_ID')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                            <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                            <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n                    <th class=\"left date_row\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_DATE\"|constant]}\">{_T string=\"Date\"}\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_DATE')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n                    {if (($login->isAdmin() or $login->isStaff()) and !isset($member)) or isset($pmember)}\n                        <th class=\"left\">\n                            <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_MEMBER\"|constant]}\">{_T string=\"Member\"}\n                                {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_MEMBER')}\n                                    {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                                    {else}\n                                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                                    {/if}\n                                {/if}\n                            </a>\n                        </th>\n                    {/if}\n                    <th class=\"left\">{_T string=\"Description\"}</th>\n{if $login->isAdmin() or $login->isStaff()}\n                    <th class=\"left\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_MEMBER\"|constant]}\">{_T string=\"Originator\"}\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_MEMBER')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n{/if}\n                    <th class=\"left\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_AMOUNT\"|constant]}\">{_T string=\"Amount\"}\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_AMOUNT')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n{if $login->isAdmin() or $login->isStaff()}\n                    <th class=\"actions_row\">{_T string=\"Actions\"}</th>\n{/if}\n                </tr>\n            </thead>\n            <tbody>\n{foreach from=$list item=transaction name=transactions_list key=ordre}\n    {assign var=\"mid\" value=$transaction->member}\n    {assign var=\"cclass\" value=$transaction->getRowClass()}\n                <tr>\n                    <td class=\"{$cclass} nowrap\" data-scope=\"row\">\n    {if $preferences->pref_show_id}\n                        {$transaction->id}\n    {else}\n                        {$ordre+1+($filters->current_page - 1)*$numrows}\n    {/if}\n                        <span class=\"row-title\">\n                            <a href=\"{path_for name=\"editTransaction\" data=[\"id\" => $transaction->id]}\">\n                                {_T string=\"Transaction %id\" pattern=\"/%id/\" replace=$transaction->id}\n                            </a>\n                        </span>\n                    </td>\n                    <td class=\"{$cclass} nowrap\" data-title=\"{_T string=\"Date\"}\">{$transaction->date}</td>\n                    {if (($login->isAdmin() or $login->isStaff()) && !isset($member)) or isset($pmember)}\n                        <td class=\"{$cclass}\" data-title=\"{_T string=\"Member\"}\">\n                            {if isset($member)}\n                                {assign var=\"mname\" value=$member->sname}\n                            {else}\n                                {assign var=\"mname\" value={memberName id=$mid}}\n                            {/if}\n                            {if $filters->filtre_cotis_adh eq \"\"}\n                                <a\n                                        href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"member\", \"value\" => $mid]}\"\n                                        title=\"{_T string=\"Show only '%name' transactions\" pattern=\"/%name/\" replace=$mname}\"\n                                >\n                                    <i class=\"fa fa-filter\"></i>\n                                </a>\n                            {/if}\n                            <a\n                                    href=\"{path_for name=\"member\" data=[\"id\" => $mid]}\"\n                                    title=\"{_T string=\"Show '%name' card\" pattern=\"/%name/\" replace=$mname}\"\n                            >\n                                {if isset($member)}{$member->sname}{else}{memberName id=\"$mid\"}{/if}\n                            </a>\n                        </td>\n                    {/if}\n                    <td class=\"{$cclass} nowrap\" data-title=\"{_T string=\"Description\"}\">{$transaction->description}</td>\n{if $login->isAdmin() or $login->isStaff()}\n                    <td class=\"{$cclass}\" data-title=\"{_T string=\"Originator\"}\">\n    {if $filters->filtre_cotis_adh eq \"\"}\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"member\", \"value\" => $mid]}\">\n                            {if isset($member)}{$member->sname}{else}{memberName id=\"$mid\"}{/if}\n                        </a>\n    {else}\n                        <a href=\"{path_for name=\"member\" data=[\"id\" => $mid]}\">\n                            {if isset($member)}{$member->sname}{else}{memberName id=\"$mid\"}{/if}\n                        </a>\n    {/if}\n                    </td>\n{/if}\n                    <td class=\"{$cclass} nowrap\" data-title=\"{_T string=\"Amount\"}\">{$transaction->amount}</td>\n{if $login->isAdmin() or $login->isStaff()}\n                    <td class=\"{$cclass} center nowrap\">\n                        <a\n                            href=\"{path_for name=\"editTransaction\" data=[\"id\" => $transaction->id]}\"\n                            class=\"tooltip action\"\n                        >\n                            <i class=\"fas fa-edit\"></i>\n                            <span class=\"sr-only\">{_T string=\"Edit transaction #%id\" pattern=\"/%id/\" replace=$transaction->id}</span>\n                        </a>\n                        <a\n                            href=\"{path_for name=\"removeContribution\" data=[\"type\" => \"transactions\", \"id\" => $transaction->id]}\"\n                            class=\"delete tooltip\"\n                        >\n                            <i class=\"fas fa-trash\"></i>\n                            <span class=\"sr-only\">{_T string=\"Remove transaction #%id\" pattern=\"/%id/\" replace=$transaction->id}</span>\n                        </a>\n                    </td>\n{/if}\n                </tr>\n{foreachelse}\n                <tr><td colspan=\"{if $login->isAdmin() or $login->isStaff()}7{else}5{/if}\" class=\"emptylist\">{_T string=\"no transaction\"}</td></tr>\n{/foreach}\n            </tbody>\n        </table>\n{if $nb != 0}\n        <div class=\"center cright\">\n            {_T string=\"Pages:\"}<br/>\n            <ul class=\"pages\">{$pagination}</ul>\n        </div>\n{/if}\n        <div id=\"legende\" title=\"{_T string=\"Legend\"}\">\n            <h1>{_T string=\"Legend\"}</h1>\n            <table>\n                <tr>\n                    <th class=\"transaction-normal color-sample\"><img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16\" height=\"16\"/></th>\n                    <td class=\"back\">{_T string=\"Completely dispatched transaction\"}</td>\n                </tr>\n                <tr>\n                    <th class=\"transaction-uncomplete color-sample\"><img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16\" height=\"16\"/></th>\n                    <td class=\"back\">{_T string=\"Uncomplete dispatched transaction\"}</td>\n                </tr>\n            </table>\n        </div>\n{/block}\n\n{block name=\"javascripts\"}\n        <script type=\"text/javascript\">\n            $(function(){\n                var _checklinks = '<div class=\"checkboxes\"><a href=\"#\" class=\"show_legend fright\">{_T string=\"Show legend\"}</a></div>';\n                $('.listing').before(_checklinks);\n                $('.listing').after(_checklinks);\n\n                //$('#table_footer').parent().before('<td class=\"right\" colspan=\"{if ($login->isAdmin() or $login->isStaff()) && !isset($member)}9{elseif $login->isAdmin() or $login->isStaff()}8{else}7{/if}\"><a href=\"#\" class=\"show_legend\">{_T string=\"Show legend\"}</a></td>');\n\n                _bind_legend();\n\n                $('#start_date_filter, #end_date_filter').datepicker({\n                    changeMonth: true,\n                    changeYear: true,\n                    showOn: 'button',\n                    buttonText: '<i class=\"far fa-calendar-alt\"></i> <span class=\"sr-only\">{_T string=\"Select a date\" escape=\"js\"}</span>'\n                });\n\n                {include file=\"js_removal.tpl\"}\n            });\n        </script>\n{/block}\n"], "fixing_code": ["{\n    \"name\": \"galette/galette\",\n    \"description\": \"Galette - web membership management towards non profit organizations\",\n    \"license\": \"GPLv3\",\n    \"type\": \"project\",\n    \"keywords\": [\n        \"membership\",\n        \"web\",\n        \"management\"\n    ],\n    \"homepage\": \"https://galette.eu/\",\n    \"support\": {\n        \"irc\": \"irc://irc.oftc.net/galette\",\n        \"issues\": \"https://bugs.galette.eu/projects/galette\",\n        \"docs\": \"https://doc.galette.eu\"\n    },\n    \"authors\": [\n        {\n            \"name\": \"Johan Cwiklinski\",\n            \"email\": \"trasher@x-tnd.be\",\n            \"homepage\": \"https://galette.eu\"\n        }\n    ],\n    \"autoload\": {\n        \"psr-4\": {\n            \"Galette\\\\\": \"lib/Galette\"\n        }\n    },\n    \"require\": {\n        \"php\": \">=7.3\",\n        \"slim/slim\": \"^3.0\",\n        \"monolog/monolog\": \"^2.1\",\n        \"mathmarques/smarty-view\": \"^1.1\",\n        \"laminas/laminas-db\": \"^2.11\",\n        \"laminas/laminas-stdlib\": \"^3.3\",\n        \"analog/analog\": \"^1.0\",\n        \"phpmailer/phpmailer\": \"^6.1\",\n        \"tecnickcom/tcpdf\": \"^6.3\",\n        \"akrabat/rka-slim-session-middleware\": \"^2.0\",\n        \"laminas/laminas-i18n\": \"^2.11\",\n        \"laminas/laminas-cache\": \"^2.10\",\n        \"soundasleep/html2text\": \"^1.1\",\n        \"aneek/slim-event-dispatcher\": \"^1.0\",\n        \"slim/flash\": \"^0.4.0\",\n        \"league/event\": \"^2.1\",\n        \"smarty/smarty\": \"^3.1\",\n        \"psr/http-message\": \"^1.0\",\n        \"psr/container\": \"^1.0\",\n        \"php-di/slim-bridge\": \"2.0.0\",\n        \"doctrine/annotations\": \"^1.8\",\n        \"laminas/laminas-servicemanager\": \"3.7\",\n        \"symfony/polyfill-php80\": \"^1.23\",\n        \"ezyang/htmlpurifier\": \"^4.13\"\n    },\n    \"require-dev\": {\n        \"atoum/atoum\": \"dev-master\",\n        \"galette/smarty-xgettext\": \"^1.2\",\n        \"squizlabs/php_codesniffer\": \"^3.5\"\n    },\n    \"config\": {\n        \"optimize-autoloader\": true\n    },\n    \"scripts\": {\n        \"post-install-cmd\": [\n            \"patch -d vendor/slim/slim/ -p3 < ../patches/slim-php81.patch\",\n            \"patch -d vendor/smarty/smarty/ -p3 < ../patches/smarty-php81.patch\",\n            \"patch -d vendor/mathmarques/smarty-view/ -p3 < ../patches/smarty-view-php81.patch\",\n            \"patch -d vendor/laminas/ -p2 < ../patches/laminas-php81.patch\"\n        ]\n    }\n}\n", "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"47d56d47701d9038105bd93cf3b44a02\",\n    \"packages\": [\n        {\n            \"name\": \"akrabat/rka-slim-session-middleware\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/akrabat/rka-slim-session-middleware.git\",\n                \"reference\": \"e4f8f485f6d52fd4c0a2254d0b12240245629e6a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/akrabat/rka-slim-session-middleware/zipball/e4f8f485f6d52fd4c0a2254d0b12240245629e6a\",\n                \"reference\": \"e4f8f485f6d52fd4c0a2254d0b12240245629e6a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5\"\n            },\n            \"require-dev\": {\n                \"slim/slim\": \"^3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"RKA\\\\\": \"RKA\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Rob Allen\",\n                    \"email\": \"rob@akrabat.com\",\n                    \"homepage\": \"http://akrabat.com\"\n                }\n            ],\n            \"description\": \"Simple session middleware for Slim Framework\",\n            \"homepage\": \"http://github.com/akrabat/rka-slim-session-middleware\",\n            \"keywords\": [\n                \"middleware\",\n                \"session\",\n                \"slim\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/akrabat/rka-slim-session-middleware/issues\",\n                \"source\": \"https://github.com/akrabat/rka-slim-session-middleware/tree/master\"\n            },\n            \"time\": \"2016-04-18T07:52:43+00:00\"\n        },\n        {\n            \"name\": \"analog/analog\",\n            \"version\": \"1.0.18-stable\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/jbroadway/analog.git\",\n                \"reference\": \"d9b5db551ccd91d3ce41a7425da6672d038ee6b1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/jbroadway/analog/zipball/d9b5db551ccd91d3ce41a7425da6672d038ee6b1\",\n                \"reference\": \"d9b5db551ccd91d3ce41a7425da6672d038ee6b1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"psr/log\": \"^1.0.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Analog\": \"lib/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Johnny Broadway\",\n                    \"email\": \"johnny@johnnybroadway.com\",\n                    \"homepage\": \"http://www.johnnybroadway.com/\"\n                }\n            ],\n            \"description\": \"Fast, flexible, easy PSR-3-compatible PHP logging package with dozens of handlers.\",\n            \"homepage\": \"https://github.com/jbroadway/analog\",\n            \"keywords\": [\n                \"PSR3\",\n                \"alerts\",\n                \"amon\",\n                \"apprise\",\n                \"chrome-logger\",\n                \"console\",\n                \"debug\",\n                \"debugging\",\n                \"error\",\n                \"errors\",\n                \"firephp\",\n                \"gelf\",\n                \"log\",\n                \"logger\",\n                \"logging\",\n                \"logs\",\n                \"monitor\",\n                \"monitoring\",\n                \"psr-3\",\n                \"stderr\",\n                \"syslog\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/jbroadway/analog/issues\",\n                \"source\": \"https://github.com/jbroadway/analog/tree/1.0.18-stable\"\n            },\n            \"time\": \"2021-04-06T15:56:20+00:00\"\n        },\n        {\n            \"name\": \"aneek/slim-event-dispatcher\",\n            \"version\": \"1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/aneek/slim-event-dispatcher.git\",\n                \"reference\": \"9b3eb70b0408cc7131337796752df312c19abb99\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/aneek/slim-event-dispatcher/zipball/9b3eb70b0408cc7131337796752df312c19abb99\",\n                \"reference\": \"9b3eb70b0408cc7131337796752df312c19abb99\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"league/event\": \"^2.1\",\n                \"php\": \">= 5.6\",\n                \"slim/slim\": \"^3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"5.7.22\",\n                \"symfony/var-dumper\": \"^3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\Event\\\\\": \"./src/Event\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Aneek Mukhopadhyay\",\n                    \"email\": \"dream.aneek@gmail.com\"\n                }\n            ],\n            \"description\": \"An event dispatcher bridge between League Event and Slim Framework.\",\n            \"keywords\": [\n                \"emitter\",\n                \"event\",\n                \"event-dispatcher\",\n                \"listener\",\n                \"slim framework\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/aneek/slim-event-dispatcher/issues\",\n                \"source\": \"https://github.com/aneek/slim-event-dispatcher/tree/develop\"\n            },\n            \"time\": \"2017-09-27T07:58:29+00:00\"\n        },\n        {\n            \"name\": \"container-interop/container-interop\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/container-interop/container-interop.git\",\n                \"reference\": \"79cbf1341c22ec75643d841642dd5d6acd83bdb8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/container-interop/container-interop/zipball/79cbf1341c22ec75643d841642dd5d6acd83bdb8\",\n                \"reference\": \"79cbf1341c22ec75643d841642dd5d6acd83bdb8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"psr/container\": \"^1.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Interop\\\\Container\\\\\": \"src/Interop/Container/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Promoting the interoperability of container objects (DIC, SL, etc.)\",\n            \"homepage\": \"https://github.com/container-interop/container-interop\",\n            \"support\": {\n                \"issues\": \"https://github.com/container-interop/container-interop/issues\",\n                \"source\": \"https://github.com/container-interop/container-interop/tree/master\"\n            },\n            \"abandoned\": \"psr/container\",\n            \"time\": \"2017-02-14T19:40:03+00:00\"\n        },\n        {\n            \"name\": \"doctrine/annotations\",\n            \"version\": \"1.13.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/annotations.git\",\n                \"reference\": \"5b668aef16090008790395c02c893b1ba13f7e08\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/annotations/zipball/5b668aef16090008790395c02c893b1ba13f7e08\",\n                \"reference\": \"5b668aef16090008790395c02c893b1ba13f7e08\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"doctrine/lexer\": \"1.*\",\n                \"ext-tokenizer\": \"*\",\n                \"php\": \"^7.1 || ^8.0\",\n                \"psr/cache\": \"^1 || ^2 || ^3\"\n            },\n            \"require-dev\": {\n                \"doctrine/cache\": \"^1.11 || ^2.0\",\n                \"doctrine/coding-standard\": \"^6.0 || ^8.1\",\n                \"phpstan/phpstan\": \"^0.12.20\",\n                \"phpunit/phpunit\": \"^7.5 || ^8.0 || ^9.1.5\",\n                \"symfony/cache\": \"^4.4 || ^5.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Annotations\\\\\": \"lib/Doctrine/Common/Annotations\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Benjamin Eberlei\",\n                    \"email\": \"kontakt@beberlei.de\"\n                },\n                {\n                    \"name\": \"Jonathan Wage\",\n                    \"email\": \"jonwage@gmail.com\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"Docblock Annotations Parser\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/annotations.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"parser\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/annotations/issues\",\n                \"source\": \"https://github.com/doctrine/annotations/tree/1.13.2\"\n            },\n            \"time\": \"2021-08-05T19:00:23+00:00\"\n        },\n        {\n            \"name\": \"doctrine/lexer\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/doctrine/lexer.git\",\n                \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/doctrine/lexer/zipball/e864bbf5904cb8f5bb334f99209b48018522f042\",\n                \"reference\": \"e864bbf5904cb8f5bb334f99209b48018522f042\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/coding-standard\": \"^6.0\",\n                \"phpstan/phpstan\": \"^0.11.8\",\n                \"phpunit/phpunit\": \"^8.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Doctrine\\\\Common\\\\Lexer\\\\\": \"lib/Doctrine/Common/Lexer\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Guilherme Blanco\",\n                    \"email\": \"guilhermeblanco@gmail.com\"\n                },\n                {\n                    \"name\": \"Roman Borschel\",\n                    \"email\": \"roman@code-factory.org\"\n                },\n                {\n                    \"name\": \"Johannes Schmitt\",\n                    \"email\": \"schmittjoh@gmail.com\"\n                }\n            ],\n            \"description\": \"PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.\",\n            \"homepage\": \"https://www.doctrine-project.org/projects/lexer.html\",\n            \"keywords\": [\n                \"annotations\",\n                \"docblock\",\n                \"lexer\",\n                \"parser\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/doctrine/lexer/issues\",\n                \"source\": \"https://github.com/doctrine/lexer/tree/1.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.doctrine-project.org/sponsorship.html\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://www.patreon.com/phpdoctrine\",\n                    \"type\": \"patreon\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/doctrine%2Flexer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2020-05-25T17:44:05+00:00\"\n        },\n        {\n            \"name\": \"ezyang/htmlpurifier\",\n            \"version\": \"v4.13.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ezyang/htmlpurifier.git\",\n                \"reference\": \"08e27c97e4c6ed02f37c5b2b20488046c8d90d75\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ezyang/htmlpurifier/zipball/08e27c97e4c6ed02f37c5b2b20488046c8d90d75\",\n                \"reference\": \"08e27c97e4c6ed02f37c5b2b20488046c8d90d75\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.2\"\n            },\n            \"require-dev\": {\n                \"simpletest/simpletest\": \"dev-master#72de02a7b80c6bb8864ef9bf66d41d2f58f826bd\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"HTMLPurifier\": \"library/\"\n                },\n                \"files\": [\n                    \"library/HTMLPurifier.composer.php\"\n                ],\n                \"exclude-from-classmap\": [\n                    \"/library/HTMLPurifier/Language/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Edward Z. Yang\",\n                    \"email\": \"admin@htmlpurifier.org\",\n                    \"homepage\": \"http://ezyang.com\"\n                }\n            ],\n            \"description\": \"Standards compliant HTML filter written in PHP\",\n            \"homepage\": \"http://htmlpurifier.org/\",\n            \"keywords\": [\n                \"html\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/ezyang/htmlpurifier/issues\",\n                \"source\": \"https://github.com/ezyang/htmlpurifier/tree/master\"\n            },\n            \"time\": \"2020-06-29T00:56:53+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache\",\n            \"version\": \"2.13.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache.git\",\n                \"reference\": \"566948e32f30881cb903ffbd0e3e20dac00cd83e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache/zipball/566948e32f30881cb903ffbd0e3e20dac00cd83e\",\n                \"reference\": \"566948e32f30881cb903ffbd0e3e20dac00cd83e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-cache-storage-adapter-apc\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-apcu\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-blackhole\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-dba\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-ext-mongodb\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-filesystem\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-memcache\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-memcached\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-memory\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-mongodb\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-redis\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-session\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-wincache\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-xcache\": \"^1.0\",\n                \"laminas/laminas-cache-storage-adapter-zend-server\": \"^1.0\",\n                \"laminas/laminas-eventmanager\": \"^3.3\",\n                \"laminas/laminas-servicemanager\": \"^3.6\",\n                \"laminas/laminas-stdlib\": \"^3.3\",\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.3 || ~8.0.0\",\n                \"psr/cache\": \"^1.0\",\n                \"psr/simple-cache\": \"^1.0\"\n            },\n            \"conflict\": {\n                \"symfony/console\": \"<5.1\"\n            },\n            \"provide\": {\n                \"psr/cache-implementation\": \"1.0\",\n                \"psr/simple-cache-implementation\": \"1.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-cache\": \"^2.9.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cli\": \"^1.0\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-config-aggregator\": \"^1.5\",\n                \"laminas/laminas-feed\": \"^2.14\",\n                \"laminas/laminas-serializer\": \"^2.6\",\n                \"phpbench/phpbench\": \"^1.0.0-beta2\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.5\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-cli\": \"The laminas-cli binary can be used to consume commands provided by this component\",\n                \"laminas/laminas-serializer\": \"Laminas\\\\Serializer component\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Cache\",\n                    \"config-provider\": \"Laminas\\\\Cache\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"autoload/patternPluginManagerPolyfill.php\"\n                ],\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Caching implementation with a variety of storage options, as well as codified caching strategies for callbacks, classes, and output\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\",\n                \"psr-16\",\n                \"psr-6\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-cache/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-cache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-08-08T10:21:18+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-apc\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc.git\",\n                \"reference\": \"8b375d994f6e67534f6ae6e995249e706faa30c1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-apc/zipball/8b375d994f6e67534f6ae6e995249e706faa30c1\",\n                \"reference\": \"8b375d994f6e67534f6ae6e995249e706faa30c1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"phpunit/phpunit\": \"^5.7.27 || ^6.5.8 || ^7.1.2\"\n            },\n            \"suggest\": {\n                \"ext-apc\": \"APC or compatible extension, to use the APC storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-apc/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-apc\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:04:12+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-apcu\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu.git\",\n                \"reference\": \"e182aab739d6b03992a9915cc3c7019391a94548\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-apcu/zipball/e182aab739d6b03992a9915cc3c7019391a94548\",\n                \"reference\": \"e182aab739d6b03992a9915cc3c7019391a94548\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"ext-apcu\": \"*\",\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-apcu\": \"APCU >= 5.1.0, to use the APCu storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for apcu\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-apcu/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-apcu\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-05-03T20:41:53+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-blackhole\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole.git\",\n                \"reference\": \"4af1053efd81785a292c2a9442871c075700345a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-blackhole/zipball/4af1053efd81785a292c2a9442871c075700345a\",\n                \"reference\": \"4af1053efd81785a292c2a9442871c075700345a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1.4\",\n                \"squizlabs/php_codesniffer\": \"^3.5.8\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for blackhole\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-blackhole/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-blackhole\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-04-29T21:06:24+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-dba\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba.git\",\n                \"reference\": \"ad968d3d8a0350af8e6717be58bb96e5a9e77f3b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-dba/zipball/ad968d3d8a0350af8e6717be58bb96e5a9e77f3b\",\n                \"reference\": \"ad968d3d8a0350af8e6717be58bb96e5a9e77f3b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-dba\": \"DBA, to use the DBA storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for dba\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-dba/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-dba\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:08:58+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-ext-mongodb\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb.git\",\n                \"reference\": \"72f68589cc8323fa688167a4720b795dd0907f4e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-ext-mongodb/zipball/72f68589cc8323fa688167a4720b795dd0907f4e\",\n                \"reference\": \"72f68589cc8323fa688167a4720b795dd0907f4e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\",\n                \"mongodb/mongodb\": \"<1.8\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.3\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"~2.2.0\",\n                \"laminas/laminas-serializer\": \"^2.10.1\",\n                \"mongodb/mongodb\": \"^1.8.0\",\n                \"psalm/plugin-phpunit\": \"^0.16.1\",\n                \"vimeo/psalm\": \"^4.9\"\n            },\n            \"suggest\": {\n                \"mongodb/mongodb\": \"MongoDB, to use the ExtMongoDb storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for ext-mongodb\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-ext-mongodb/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-ext-mongodb\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-08-10T18:17:48+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-filesystem\",\n            \"version\": \"1.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem.git\",\n                \"reference\": \"76fc488c3fa0ad442e4e70f807305c940d1bdcbc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-filesystem/zipball/76fc488c3fa0ad442e4e70f807305c940d1bdcbc\",\n                \"reference\": \"76fc488c3fa0ad442e4e70f807305c940d1bdcbc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-serializer\": \"^2.10\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for filesystem\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-filesystem/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-filesystem\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-04-25T00:27:54+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-memcache\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache.git\",\n                \"reference\": \"1d2a74e300a0fd0b8d0e0cb4e379a173ccad0088\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-memcache/zipball/1d2a74e300a0fd0b8d0e0cb4e379a173ccad0088\",\n                \"reference\": \"1d2a74e300a0fd0b8d0e0cb4e379a173ccad0088\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1.4\",\n                \"laminas/laminas-serializer\": \"^2.10.1\",\n                \"squizlabs/php_codesniffer\": \"^3.6.0\"\n            },\n            \"suggest\": {\n                \"ext-memcache\": \"Memcache >= 2.0.0 to use the Memcache storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for memcache\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-memcache/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2021-04-29T19:57:43+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-memcached\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached.git\",\n                \"reference\": \"d05f33e43a352b85c6d0208e9cfbf2a59f02ede3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-memcached/zipball/d05f33e43a352b85c6d0208e9cfbf2a59f02ede3\",\n                \"reference\": \"d05f33e43a352b85c6d0208e9cfbf2a59f02ede3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0.2\",\n                \"laminas/laminas-coding-standard\": \"~2.2.0\",\n                \"phpunit/phpunit\": \"^9.5.8\"\n            },\n            \"suggest\": {\n                \"ext-memcached\": \"Memcached >= 1.0.0 to use the Memcached storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for memcached\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\",\n                \"memcached\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-memcached/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-memcached\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-08-08T14:51:12+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-memory\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory.git\",\n                \"reference\": \"02c7a4a1118bbd47d1c0f0bfe1e8b140af79d2bd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-memory/zipball/02c7a4a1118bbd47d1c0f0bfe1e8b140af79d2bd\",\n                \"reference\": \"02c7a4a1118bbd47d1c0f0bfe1e8b140af79d2bd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10.1\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1.4\",\n                \"squizlabs/php_codesniffer\": \"^3.5.8\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for memory\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-memory/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-memory\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-04-28T17:27:13+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-mongodb\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb.git\",\n                \"reference\": \"ef4aa396b55533b8eb3e1d4126c39a78a22e49a6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-mongodb/zipball/ef4aa396b55533b8eb3e1d4126c39a78a22e49a6\",\n                \"reference\": \"ef4aa396b55533b8eb3e1d4126c39a78a22e49a6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for mongodb\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-mongodb/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-mongodb\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:19:10+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-redis\",\n            \"version\": \"1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis.git\",\n                \"reference\": \"de8a63d4a0ef1ccead401eb7fb6d75b57fa3f9ee\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-redis/zipball/de8a63d4a0ef1ccead401eb7fb6d75b57fa3f9ee\",\n                \"reference\": \"de8a63d4a0ef1ccead401eb7fb6d75b57fa3f9ee\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\",\n                \"phpunit/phpunit\": \"<6.1.0\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"composer-runtime-api\": \"^2\",\n                \"ext-posix\": \"*\",\n                \"ext-redis\": \"*\",\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1\",\n                \"laminas/laminas-serializer\": \"^2.10\",\n                \"psalm/plugin-phpunit\": \"^0.15.1\",\n                \"vimeo/psalm\": \"^4.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for redis\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-redis/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-redis\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-06-03T16:14:07+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-session\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-session.git\",\n                \"reference\": \"74a275056cfca2300eb9a67cd1d917f7066b4113\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-session/zipball/74a275056cfca2300eb9a67cd1d917f7066b4113\",\n                \"reference\": \"74a275056cfca2300eb9a67cd1d917f7066b4113\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.1\",\n                \"laminas/laminas-coding-standard\": \"^2.1\",\n                \"laminas/laminas-session\": \"^2.7.4\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-session\": \"Laminas\\\\Session component\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for session\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-session/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-session/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-session/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-session\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-05-02T13:52:36+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-wincache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache.git\",\n                \"reference\": \"0f54599c5d9aff11b01adadd2742097f923170ba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-wincache/zipball/0f54599c5d9aff11b01adadd2742097f923170ba\",\n                \"reference\": \"0f54599c5d9aff11b01adadd2742097f923170ba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-wincache\": \"WinCache, to use the WinCache storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for wincache\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-wincache/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-wincache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:22:49+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-xcache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache.git\",\n                \"reference\": \"24049557aa796ec7527bcc8032ed68346232b219\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-xcache/zipball/24049557aa796ec7527bcc8032ed68346232b219\",\n                \"reference\": \"24049557aa796ec7527bcc8032ed68346232b219\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-serializer\": \"^2.9\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"suggest\": {\n                \"ext-xcache\": \"XCache, to use the XCache storage adapter\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for xcache\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-xcache/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-xcache\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"abandoned\": true,\n            \"time\": \"2020-10-12T16:23:46+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-cache-storage-adapter-zend-server\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server.git\",\n                \"reference\": \"8d0b0d219a048a92472d89a5e527990f3ea2decc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-cache-storage-adapter-zend-server/zipball/8d0b0d219a048a92472d89a5e527990f3ea2decc\",\n                \"reference\": \"8d0b0d219a048a92472d89a5e527990f3ea2decc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.6 || ^7.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-cache\": \"<2.10\"\n            },\n            \"provide\": {\n                \"laminas/laminas-cache-storage-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.10\",\n                \"laminas/laminas-cache-storage-adapter-test\": \"^1.0@dev\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"squizlabs/php_codesniffer\": \"^2.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Cache\\\\Storage\\\\Adapter\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Laminas cache adapter for zend-server\",\n            \"keywords\": [\n                \"cache\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"docs\": \"https://docs.laminas.dev/laminas-cache-storage-adapter-zend-server/\",\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-cache-storage-adapter-zend-server\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2020-10-12T16:24:25+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-db\",\n            \"version\": \"2.13.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-db.git\",\n                \"reference\": \"cdabb4bfa669c2c0edb0cb4e014c15b41afd3fb1\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-db/zipball/cdabb4bfa669c2c0edb0cb4e014c15b41afd3fb1\",\n                \"reference\": \"cdabb4bfa669c2c0edb0cb4e014c15b41afd3fb1\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"laminas/laminas-stdlib\": \"^3.6\",\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-db\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.2.1\",\n                \"laminas/laminas-eventmanager\": \"^3.4\",\n                \"laminas/laminas-hydrator\": \"^3.2 || ^4.3\",\n                \"laminas/laminas-servicemanager\": \"^3.7\",\n                \"phpunit/phpunit\": \"^9.5.5\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-eventmanager\": \"Laminas\\\\EventManager component\",\n                \"laminas/laminas-hydrator\": \"(^3.2 || ^4.3) Laminas\\\\Hydrator component for using HydratingResultSets\",\n                \"laminas/laminas-servicemanager\": \"Laminas\\\\ServiceManager component\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\Db\",\n                    \"config-provider\": \"Laminas\\\\Db\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Db\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Database abstraction layer, SQL abstraction, result set abstraction, and RowDataGateway and TableDataGateway implementations\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"db\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-db/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-db/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-db/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-db\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-21T18:59:44+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-eventmanager\",\n            \"version\": \"3.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-eventmanager.git\",\n                \"reference\": \"a93fd278c97b2d41ebbce5ba048a24e3e6f580ba\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-eventmanager/zipball/a93fd278c97b2d41ebbce5ba048a24e3e6f580ba\",\n                \"reference\": \"a93fd278c97b2d41ebbce5ba048a24e3e6f580ba\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-eventmanager\": \"*\"\n            },\n            \"require-dev\": {\n                \"container-interop/container-interop\": \"^1.1\",\n                \"laminas/laminas-coding-standard\": \"~2.2.1\",\n                \"laminas/laminas-stdlib\": \"^3.6\",\n                \"phpbench/phpbench\": \"^1.1\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.5.5\"\n            },\n            \"suggest\": {\n                \"container-interop/container-interop\": \"^1.1, to use the lazy listeners feature\",\n                \"laminas/laminas-stdlib\": \"^2.7.3 || ^3.0, to use the FilterChain feature\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\EventManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Trigger and listen to events within a PHP application\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"event\",\n                \"eventmanager\",\n                \"events\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-eventmanager/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-eventmanager/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-eventmanager/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-eventmanager\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-07T22:35:32+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-i18n\",\n            \"version\": \"2.11.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-i18n.git\",\n                \"reference\": \"563b1b720ee53f2748473656a250d65911fc4462\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-i18n/zipball/563b1b720ee53f2748473656a250d65911fc4462\",\n                \"reference\": \"563b1b720ee53f2748473656a250d65911fc4462\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-intl\": \"*\",\n                \"laminas/laminas-stdlib\": \"^2.7 || ^3.0\",\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.3 || ~8.0.0\"\n            },\n            \"conflict\": {\n                \"phpspec/prophecy\": \"<1.9.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-i18n\": \"^2.10.1\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-cache\": \"^2.6.1\",\n                \"laminas/laminas-coding-standard\": \"~1.0.0\",\n                \"laminas/laminas-config\": \"^2.6\",\n                \"laminas/laminas-eventmanager\": \"^2.6.2 || ^3.0\",\n                \"laminas/laminas-filter\": \"^2.6.1\",\n                \"laminas/laminas-servicemanager\": \"^3.2.1\",\n                \"laminas/laminas-validator\": \"^2.6\",\n                \"laminas/laminas-view\": \"^2.6.3\",\n                \"phpunit/phpunit\": \"^9.3\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-cache\": \"You should install this package to cache the translations\",\n                \"laminas/laminas-config\": \"You should install this package to use the INI translation format\",\n                \"laminas/laminas-eventmanager\": \"You should install this package to use the events in the translator\",\n                \"laminas/laminas-filter\": \"You should install this package to use the provided filters\",\n                \"laminas/laminas-i18n-resources\": \"This package provides validator and captcha translations\",\n                \"laminas/laminas-servicemanager\": \"You should install this package to use the translator\",\n                \"laminas/laminas-validator\": \"You should install this package to use the provided validators\",\n                \"laminas/laminas-view\": \"You should install this package to use the provided view helpers\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"component\": \"Laminas\\\\I18n\",\n                    \"config-provider\": \"Laminas\\\\I18n\\\\ConfigProvider\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\I18n\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Provide translations for your application, and filter and validate internationalized values\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"i18n\",\n                \"laminas\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-i18n/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-i18n/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-i18n/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-i18n\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-10-13T08:07:28+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-servicemanager\",\n            \"version\": \"3.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-servicemanager.git\",\n                \"reference\": \"2b0aee477fdbd3191af7c302b93dbc5fda0626f4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-servicemanager/zipball/2b0aee477fdbd3191af7c302b93dbc5fda0626f4\",\n                \"reference\": \"2b0aee477fdbd3191af7c302b93dbc5fda0626f4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"container-interop/container-interop\": \"^1.2\",\n                \"laminas/laminas-stdlib\": \"^3.2.1\",\n                \"laminas/laminas-zendframework-bridge\": \"^1.0\",\n                \"php\": \"^7.3 || ~8.0.0\",\n                \"psr/container\": \"^1.0\"\n            },\n            \"conflict\": {\n                \"laminas/laminas-code\": \"<3.3.1\",\n                \"zendframework/zend-code\": \"<3.3.1\"\n            },\n            \"provide\": {\n                \"container-interop/container-interop-implementation\": \"^1.2\",\n                \"psr/container-implementation\": \"^1.0\"\n            },\n            \"replace\": {\n                \"zendframework/zend-servicemanager\": \"^3.4.0\"\n            },\n            \"require-dev\": {\n                \"composer/package-versions-deprecated\": \"^1.0\",\n                \"laminas/laminas-coding-standard\": \"~2.2.0\",\n                \"laminas/laminas-container-config-test\": \"^0.3\",\n                \"laminas/laminas-dependency-plugin\": \"^2.1.2\",\n                \"mikey179/vfsstream\": \"^1.6.8\",\n                \"ocramius/proxy-manager\": \"^2.2.3\",\n                \"phpbench/phpbench\": \"^1.0.4\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.4\",\n                \"psalm/plugin-phpunit\": \"^0.16.1\",\n                \"vimeo/psalm\": \"^4.8\"\n            },\n            \"suggest\": {\n                \"ocramius/proxy-manager\": \"ProxyManager ^2.1.1 to handle lazy initialization of services\"\n            },\n            \"bin\": [\n                \"bin/generate-deps-for-config-factory\",\n                \"bin/generate-factory-for-class\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\ServiceManager\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Factory-Driven Dependency Injection Container\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"dependency-injection\",\n                \"di\",\n                \"dic\",\n                \"laminas\",\n                \"service-manager\",\n                \"servicemanager\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-servicemanager/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-servicemanager/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-servicemanager/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-servicemanager\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-07-24T19:33:07+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-stdlib\",\n            \"version\": \"3.6.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-stdlib.git\",\n                \"reference\": \"c53d8537f108fac3fae652677a19735db730ba46\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-stdlib/zipball/c53d8537f108fac3fae652677a19735db730ba46\",\n                \"reference\": \"c53d8537f108fac3fae652677a19735db730ba46\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"conflict\": {\n                \"zendframework/zend-stdlib\": \"*\"\n            },\n            \"require-dev\": {\n                \"laminas/laminas-coding-standard\": \"~2.3.0\",\n                \"phpbench/phpbench\": \"^0.17.1\",\n                \"phpunit/phpunit\": \"~9.3.7\",\n                \"psalm/plugin-phpunit\": \"^0.16.0\",\n                \"vimeo/psalm\": \"^4.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Laminas\\\\Stdlib\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"SPL extensions, array utilities, error handlers, and more\",\n            \"homepage\": \"https://laminas.dev\",\n            \"keywords\": [\n                \"laminas\",\n                \"stdlib\"\n            ],\n            \"support\": {\n                \"chat\": \"https://laminas.dev/chat\",\n                \"docs\": \"https://docs.laminas.dev/laminas-stdlib/\",\n                \"forum\": \"https://discourse.laminas.dev\",\n                \"issues\": \"https://github.com/laminas/laminas-stdlib/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-stdlib/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-stdlib\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-02T16:11:32+00:00\"\n        },\n        {\n            \"name\": \"laminas/laminas-zendframework-bridge\",\n            \"version\": \"1.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/laminas/laminas-zendframework-bridge.git\",\n                \"reference\": \"bf180a382393e7db5c1e8d0f2ec0c4af9c724baf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/laminas/laminas-zendframework-bridge/zipball/bf180a382393e7db5c1e8d0f2ec0c4af9c724baf\",\n                \"reference\": \"bf180a382393e7db5c1e8d0f2ec0c4af9c724baf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.3 || ~8.0.0 || ~8.1.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.3\",\n                \"psalm/plugin-phpunit\": \"^0.15.1\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"vimeo/psalm\": \"^4.6\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"laminas\": {\n                    \"module\": \"Laminas\\\\ZendFrameworkBridge\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/autoload.php\"\n                ],\n                \"psr-4\": {\n                    \"Laminas\\\\ZendFrameworkBridge\\\\\": \"src//\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"description\": \"Alias legacy ZF class names to Laminas Project equivalents.\",\n            \"keywords\": [\n                \"ZendFramework\",\n                \"autoloading\",\n                \"laminas\",\n                \"zf\"\n            ],\n            \"support\": {\n                \"forum\": \"https://discourse.laminas.dev/\",\n                \"issues\": \"https://github.com/laminas/laminas-zendframework-bridge/issues\",\n                \"rss\": \"https://github.com/laminas/laminas-zendframework-bridge/releases.atom\",\n                \"source\": \"https://github.com/laminas/laminas-zendframework-bridge\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://funding.communitybridge.org/projects/laminas-project\",\n                    \"type\": \"community_bridge\"\n                }\n            ],\n            \"time\": \"2021-09-03T17:53:30+00:00\"\n        },\n        {\n            \"name\": \"league/event\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/event.git\",\n                \"reference\": \"d2cc124cf9a3fab2bb4ff963307f60361ce4d119\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/event/zipball/d2cc124cf9a3fab2bb4ff963307f60361ce4d119\",\n                \"reference\": \"d2cc124cf9a3fab2bb4ff963307f60361ce4d119\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"henrikbjorn/phpspec-code-coverage\": \"~1.0.1\",\n                \"phpspec/phpspec\": \"^2.2\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.2-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\Event\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Frank de Jonge\",\n                    \"email\": \"info@frenky.net\"\n                }\n            ],\n            \"description\": \"Event package\",\n            \"keywords\": [\n                \"emitter\",\n                \"event\",\n                \"listener\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/event/issues\",\n                \"source\": \"https://github.com/thephpleague/event/tree/master\"\n            },\n            \"time\": \"2018-11-26T11:52:41+00:00\"\n        },\n        {\n            \"name\": \"mathmarques/smarty-view\",\n            \"version\": \"1.1.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/mathmarques/Smarty-View.git\",\n                \"reference\": \"2ab996e79efcc600cc324b6469c1cdbcd189c9fe\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/mathmarques/Smarty-View/zipball/2ab996e79efcc600cc324b6469c1cdbcd189c9fe\",\n                \"reference\": \"2ab996e79efcc600cc324b6469c1cdbcd189c9fe\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5.0\",\n                \"slim/slim\": \"^3.0\",\n                \"smarty/smarty\": \"~3.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\Views\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Matheus Marques\",\n                    \"email\": \"matheusocmarques@gmail.com\",\n                    \"homepage\": \"http://matheusmarques.com\"\n                }\n            ],\n            \"description\": \"Slim Framework 3 view helper built on top of the Smarty templating component\",\n            \"keywords\": [\n                \"framework\",\n                \"slim\",\n                \"slim 3\",\n                \"smarty\",\n                \"template\",\n                \"view\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/mathmarques/Smarty-View/issues\",\n                \"source\": \"https://github.com/mathmarques/Smarty-View/tree/1.1.2\"\n            },\n            \"time\": \"2019-03-31T14:42:41+00:00\"\n        },\n        {\n            \"name\": \"monolog/monolog\",\n            \"version\": \"2.3.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/Seldaek/monolog.git\",\n                \"reference\": \"fd4380d6fc37626e2f799f29d91195040137eba9\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/Seldaek/monolog/zipball/fd4380d6fc37626e2f799f29d91195040137eba9\",\n                \"reference\": \"fd4380d6fc37626e2f799f29d91195040137eba9\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\",\n                \"psr/log\": \"^1.0.1 || ^2.0 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0.0 || 2.0.0 || 3.0.0\"\n            },\n            \"require-dev\": {\n                \"aws/aws-sdk-php\": \"^2.4.9 || ^3.0\",\n                \"doctrine/couchdb\": \"~1.0@dev\",\n                \"elasticsearch/elasticsearch\": \"^7\",\n                \"graylog2/gelf-php\": \"^1.4.2\",\n                \"mongodb/mongodb\": \"^1.8\",\n                \"php-amqplib/php-amqplib\": \"~2.4 || ^3\",\n                \"php-console/php-console\": \"^3.1.3\",\n                \"phpspec/prophecy\": \"^1.6.1\",\n                \"phpstan/phpstan\": \"^0.12.91\",\n                \"phpunit/phpunit\": \"^8.5\",\n                \"predis/predis\": \"^1.1\",\n                \"rollbar/rollbar\": \"^1.3\",\n                \"ruflin/elastica\": \">=0.90@dev\",\n                \"swiftmailer/swiftmailer\": \"^5.3|^6.0\"\n            },\n            \"suggest\": {\n                \"aws/aws-sdk-php\": \"Allow sending log messages to AWS services like DynamoDB\",\n                \"doctrine/couchdb\": \"Allow sending log messages to a CouchDB server\",\n                \"elasticsearch/elasticsearch\": \"Allow sending log messages to an Elasticsearch server via official client\",\n                \"ext-amqp\": \"Allow sending log messages to an AMQP server (1.0+ required)\",\n                \"ext-curl\": \"Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler\",\n                \"ext-mbstring\": \"Allow to work properly with unicode symbols\",\n                \"ext-mongodb\": \"Allow sending log messages to a MongoDB server (via driver)\",\n                \"ext-openssl\": \"Required to send log messages using SSL\",\n                \"ext-sockets\": \"Allow sending log messages to a Syslog server (via UDP driver)\",\n                \"graylog2/gelf-php\": \"Allow sending log messages to a GrayLog2 server\",\n                \"mongodb/mongodb\": \"Allow sending log messages to a MongoDB server (via library)\",\n                \"php-amqplib/php-amqplib\": \"Allow sending log messages to an AMQP server using php-amqplib\",\n                \"php-console/php-console\": \"Allow sending log messages to Google Chrome\",\n                \"rollbar/rollbar\": \"Allow sending log messages to Rollbar\",\n                \"ruflin/elastica\": \"Allow sending log messages to an Elastic Search server\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Monolog\\\\\": \"src/Monolog\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jordi Boggiano\",\n                    \"email\": \"j.boggiano@seld.be\",\n                    \"homepage\": \"https://seld.be\"\n                }\n            ],\n            \"description\": \"Sends your logs to files, sockets, inboxes, databases and various web services\",\n            \"homepage\": \"https://github.com/Seldaek/monolog\",\n            \"keywords\": [\n                \"log\",\n                \"logging\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/Seldaek/monolog/issues\",\n                \"source\": \"https://github.com/Seldaek/monolog/tree/2.3.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Seldaek\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/monolog/monolog\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-01T21:08:31+00:00\"\n        },\n        {\n            \"name\": \"nikic/fast-route\",\n            \"version\": \"v1.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/FastRoute.git\",\n                \"reference\": \"181d480e08d9476e61381e04a71b34dc0432e812\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/FastRoute/zipball/181d480e08d9476e61381e04a71b34dc0432e812\",\n                \"reference\": \"181d480e08d9476e61381e04a71b34dc0432e812\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.8.35|~5.7\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"FastRoute\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\",\n                    \"email\": \"nikic@php.net\"\n                }\n            ],\n            \"description\": \"Fast request router for PHP\",\n            \"keywords\": [\n                \"router\",\n                \"routing\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/nikic/FastRoute/issues\",\n                \"source\": \"https://github.com/nikic/FastRoute/tree/master\"\n            },\n            \"time\": \"2018-02-13T20:26:39+00:00\"\n        },\n        {\n            \"name\": \"opis/closure\",\n            \"version\": \"3.6.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/opis/closure.git\",\n                \"reference\": \"06e2ebd25f2869e54a306dda991f7db58066f7f6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/opis/closure/zipball/06e2ebd25f2869e54a306dda991f7db58066f7f6\",\n                \"reference\": \"06e2ebd25f2869e54a306dda991f7db58066f7f6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^5.4 || ^7.0 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"jeremeamia/superclosure\": \"^2.0\",\n                \"phpunit/phpunit\": \"^4.0 || ^5.0 || ^6.0 || ^7.0 || ^8.0 || ^9.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.6.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Opis\\\\Closure\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"functions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marius Sarca\",\n                    \"email\": \"marius.sarca@gmail.com\"\n                },\n                {\n                    \"name\": \"Sorin Sarca\",\n                    \"email\": \"sarca_sorin@hotmail.com\"\n                }\n            ],\n            \"description\": \"A library that can be used to serialize closures (anonymous functions) and arbitrary objects.\",\n            \"homepage\": \"https://opis.io/closure\",\n            \"keywords\": [\n                \"anonymous functions\",\n                \"closure\",\n                \"function\",\n                \"serializable\",\n                \"serialization\",\n                \"serialize\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/opis/closure/issues\",\n                \"source\": \"https://github.com/opis/closure/tree/3.6.2\"\n            },\n            \"time\": \"2021-04-09T13:42:10+00:00\"\n        },\n        {\n            \"name\": \"php-di/invoker\",\n            \"version\": \"2.3.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/Invoker.git\",\n                \"reference\": \"5214cbe5aad066022cd845dbf313f0e47aed928f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/Invoker/zipball/5214cbe5aad066022cd845dbf313f0e47aed928f\",\n                \"reference\": \"5214cbe5aad066022cd845dbf313f0e47aed928f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\",\n                \"psr/container\": \"^1.0|^2.0\"\n            },\n            \"require-dev\": {\n                \"athletic/athletic\": \"~0.1.8\",\n                \"mnapoli/hard-mode\": \"~0.3.0\",\n                \"phpunit/phpunit\": \"^9.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Invoker\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"Generic and extensible callable invoker\",\n            \"homepage\": \"https://github.com/PHP-DI/Invoker\",\n            \"keywords\": [\n                \"callable\",\n                \"dependency\",\n                \"dependency-injection\",\n                \"injection\",\n                \"invoke\",\n                \"invoker\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/Invoker/issues\",\n                \"source\": \"https://github.com/PHP-DI/Invoker/tree/2.3.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/mnapoli\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-07-30T15:05:32+00:00\"\n        },\n        {\n            \"name\": \"php-di/php-di\",\n            \"version\": \"6.3.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/PHP-DI.git\",\n                \"reference\": \"b8126d066ce144765300ee0ab040c1ed6c9ef588\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/PHP-DI/zipball/b8126d066ce144765300ee0ab040c1ed6c9ef588\",\n                \"reference\": \"b8126d066ce144765300ee0ab040c1ed6c9ef588\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"opis/closure\": \"^3.5.5\",\n                \"php\": \">=7.2.0\",\n                \"php-di/invoker\": \"^2.0\",\n                \"php-di/phpdoc-reader\": \"^2.0.1\",\n                \"psr/container\": \"^1.0\"\n            },\n            \"provide\": {\n                \"psr/container-implementation\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"doctrine/annotations\": \"~1.2\",\n                \"friendsofphp/php-cs-fixer\": \"^2.4\",\n                \"mnapoli/phpunit-easymock\": \"^1.2\",\n                \"ocramius/proxy-manager\": \"^2.0.2\",\n                \"phpstan/phpstan\": \"^0.12\",\n                \"phpunit/phpunit\": \"^8.5|^9.0\"\n            },\n            \"suggest\": {\n                \"doctrine/annotations\": \"Install it if you want to use annotations (version ~1.2)\",\n                \"ocramius/proxy-manager\": \"Install it if you want to use lazy injection (version ~2.0)\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"DI\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"The dependency injection container for humans\",\n            \"homepage\": \"https://php-di.org/\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interop\",\n                \"dependency injection\",\n                \"di\",\n                \"ioc\",\n                \"psr11\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/PHP-DI/issues\",\n                \"source\": \"https://github.com/PHP-DI/PHP-DI/tree/6.3.5\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/mnapoli\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/php-di/php-di\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-09-02T09:49:58+00:00\"\n        },\n        {\n            \"name\": \"php-di/phpdoc-reader\",\n            \"version\": \"2.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/PhpDocReader.git\",\n                \"reference\": \"66daff34cbd2627740ffec9469ffbac9f8c8185c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/PhpDocReader/zipball/66daff34cbd2627740ffec9469ffbac9f8c8185c\",\n                \"reference\": \"66daff34cbd2627740ffec9469ffbac9f8c8185c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"require-dev\": {\n                \"mnapoli/hard-mode\": \"~0.3.0\",\n                \"phpunit/phpunit\": \"^8.5|^9.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpDocReader\\\\\": \"src/PhpDocReader\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"PhpDocReader parses @var and @param values in PHP docblocks (supports namespaced class names with the same resolution rules as PHP)\",\n            \"keywords\": [\n                \"phpdoc\",\n                \"reflection\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/PhpDocReader/issues\",\n                \"source\": \"https://github.com/PHP-DI/PhpDocReader/tree/2.2.1\"\n            },\n            \"time\": \"2020-10-12T12:39:22+00:00\"\n        },\n        {\n            \"name\": \"php-di/slim-bridge\",\n            \"version\": \"2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHP-DI/Slim-Bridge.git\",\n                \"reference\": \"df3c116bedb325c88c01991605380b0fd77b97ed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHP-DI/Slim-Bridge/zipball/df3c116bedb325c88c01991605380b0fd77b97ed\",\n                \"reference\": \"df3c116bedb325c88c01991605380b0fd77b97ed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"~7.0\",\n                \"php-di/invoker\": \"^2.0.0\",\n                \"php-di/php-di\": \"^6.0.0\",\n                \"slim/slim\": \"^3.9.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~6.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"DI\\\\Bridge\\\\Slim\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"description\": \"PHP-DI integration in Slim\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHP-DI/Slim-Bridge/issues\",\n                \"source\": \"https://github.com/PHP-DI/Slim-Bridge/tree/master\"\n            },\n            \"time\": \"2018-02-24T10:54:47+00:00\"\n        },\n        {\n            \"name\": \"phpmailer/phpmailer\",\n            \"version\": \"v6.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPMailer/PHPMailer.git\",\n                \"reference\": \"dd803df5ad7492e1b40637f7ebd258fee5ca7355\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPMailer/PHPMailer/zipball/dd803df5ad7492e1b40637f7ebd258fee5ca7355\",\n                \"reference\": \"dd803df5ad7492e1b40637f7ebd258fee5ca7355\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-filter\": \"*\",\n                \"ext-hash\": \"*\",\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^0.7.0\",\n                \"doctrine/annotations\": \"^1.2\",\n                \"php-parallel-lint/php-console-highlighter\": \"^0.5.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3\",\n                \"phpcompatibility/php-compatibility\": \"^9.3.5\",\n                \"roave/security-advisories\": \"dev-latest\",\n                \"squizlabs/php_codesniffer\": \"^3.6.0\",\n                \"yoast/phpunit-polyfills\": \"^1.0.0\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"Needed to send email in multibyte encoding charset or decode encoded addresses\",\n                \"hayageek/oauth2-yahoo\": \"Needed for Yahoo XOAUTH2 authentication\",\n                \"league/oauth2-google\": \"Needed for Google XOAUTH2 authentication\",\n                \"psr/log\": \"For optional PSR-3 debug logging\",\n                \"stevenmaguire/oauth2-microsoft\": \"Needed for Microsoft XOAUTH2 authentication\",\n                \"symfony/polyfill-mbstring\": \"To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPMailer\\\\PHPMailer\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marcus Bointon\",\n                    \"email\": \"phpmailer@synchromedia.co.uk\"\n                },\n                {\n                    \"name\": \"Jim Jagielski\",\n                    \"email\": \"jimjag@gmail.com\"\n                },\n                {\n                    \"name\": \"Andy Prevost\",\n                    \"email\": \"codeworxtech@users.sourceforge.net\"\n                },\n                {\n                    \"name\": \"Brent R. Matzelle\"\n                }\n            ],\n            \"description\": \"PHPMailer is a full-featured email creation and transfer class for PHP\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHPMailer/PHPMailer/issues\",\n                \"source\": \"https://github.com/PHPMailer/PHPMailer/tree/v6.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Synchro\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2021-08-18T09:14:16+00:00\"\n        },\n        {\n            \"name\": \"pimple/pimple\",\n            \"version\": \"v3.5.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/silexphp/Pimple.git\",\n                \"reference\": \"a94b3a4db7fb774b3d78dad2315ddc07629e1bed\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/silexphp/Pimple/zipball/a94b3a4db7fb774b3d78dad2315ddc07629e1bed\",\n                \"reference\": \"a94b3a4db7fb774b3d78dad2315ddc07629e1bed\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.1 || ^2.0\"\n            },\n            \"require-dev\": {\n                \"symfony/phpunit-bridge\": \"^5.4@dev\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.4.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Pimple\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                }\n            ],\n            \"description\": \"Pimple, a simple Dependency Injection Container\",\n            \"homepage\": \"https://pimple.symfony.com\",\n            \"keywords\": [\n                \"container\",\n                \"dependency injection\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/silexphp/Pimple/tree/v3.5.0\"\n            },\n            \"time\": \"2021-10-28T11:13:42+00:00\"\n        },\n        {\n            \"name\": \"psr/cache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/cache.git\",\n                \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/cache/zipball/d11b50ad223250cf17b86e38383413f5a6764bf8\",\n                \"reference\": \"d11b50ad223250cf17b86e38383413f5a6764bf8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Cache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for caching libraries\",\n            \"keywords\": [\n                \"cache\",\n                \"psr\",\n                \"psr-6\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/cache/tree/master\"\n            },\n            \"time\": \"2016-08-06T20:24:11+00:00\"\n        },\n        {\n            \"name\": \"psr/container\",\n            \"version\": \"1.1.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/container.git\",\n                \"reference\": \"8622567409010282b7aeebe4bb841fe98b58dcaf\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/container/zipball/8622567409010282b7aeebe4bb841fe98b58dcaf\",\n                \"reference\": \"8622567409010282b7aeebe4bb841fe98b58dcaf\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Container\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common Container Interface (PHP FIG PSR-11)\",\n            \"homepage\": \"https://github.com/php-fig/container\",\n            \"keywords\": [\n                \"PSR-11\",\n                \"container\",\n                \"container-interface\",\n                \"container-interop\",\n                \"psr\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-fig/container/issues\",\n                \"source\": \"https://github.com/php-fig/container/tree/1.1.1\"\n            },\n            \"time\": \"2021-03-05T17:36:06+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"reference\": \"f6561bf28d520154e4b0ec72be95418abe6d9363\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-message/tree/master\"\n            },\n            \"time\": \"2016-08-06T14:39:51+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"1.1.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"reference\": \"d49695b909c3b7628b6289db5479a1c204601f11\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"Psr/Log/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/1.1.4\"\n            },\n            \"time\": \"2021-05-03T11:20:27+00:00\"\n        },\n        {\n            \"name\": \"psr/simple-cache\",\n            \"version\": \"1.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/simple-cache.git\",\n                \"reference\": \"408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/simple-cache/zipball/408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\",\n                \"reference\": \"408d5eafb83c57f6365a3ca330ff23aa4a5fa39b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\SimpleCache\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"http://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interfaces for simple caching\",\n            \"keywords\": [\n                \"cache\",\n                \"caching\",\n                \"psr\",\n                \"psr-16\",\n                \"simple-cache\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/simple-cache/tree/master\"\n            },\n            \"time\": \"2017-10-23T01:57:42+00:00\"\n        },\n        {\n            \"name\": \"slim/flash\",\n            \"version\": \"0.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/slimphp/Slim-Flash.git\",\n                \"reference\": \"9aaff5fded3b54f4e519ec3d4ac74d3d1f2cbbbc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/slimphp/Slim-Flash/zipball/9aaff5fded3b54f4e519ec3d4ac74d3d1f2cbbbc\",\n                \"reference\": \"9aaff5fded3b54f4e519ec3d4ac74d3d1f2cbbbc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\Flash\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Josh Lockhart\",\n                    \"email\": \"hello@joshlockhart.com\",\n                    \"homepage\": \"http://joshlockhart.com\"\n                }\n            ],\n            \"description\": \"Slim Framework Flash message service provider\",\n            \"homepage\": \"http://slimframework.com\",\n            \"keywords\": [\n                \"flash\",\n                \"framework\",\n                \"message\",\n                \"provider\",\n                \"slim\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/slimphp/Slim-Flash/issues\",\n                \"source\": \"https://github.com/slimphp/Slim-Flash/tree/master\"\n            },\n            \"time\": \"2017-10-22T10:35:05+00:00\"\n        },\n        {\n            \"name\": \"slim/slim\",\n            \"version\": \"3.12.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/slimphp/Slim.git\",\n                \"reference\": \"1c9318a84ffb890900901136d620b4f03a59da38\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/slimphp/Slim/zipball/1c9318a84ffb890900901136d620b4f03a59da38\",\n                \"reference\": \"1c9318a84ffb890900901136d620b4f03a59da38\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"ext-simplexml\": \"*\",\n                \"nikic/fast-route\": \"^1.0\",\n                \"php\": \">=5.5.0\",\n                \"pimple/pimple\": \"^3.0\",\n                \"psr/container\": \"^1.0\",\n                \"psr/http-message\": \"^1.0\"\n            },\n            \"provide\": {\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.0\",\n                \"squizlabs/php_codesniffer\": \"^2.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Slim\\\\\": \"Slim\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Josh Lockhart\",\n                    \"email\": \"hello@joshlockhart.com\",\n                    \"homepage\": \"https://joshlockhart.com\"\n                },\n                {\n                    \"name\": \"Andrew Smith\",\n                    \"email\": \"a.smith@silentworks.co.uk\",\n                    \"homepage\": \"http://silentworks.co.uk\"\n                },\n                {\n                    \"name\": \"Rob Allen\",\n                    \"email\": \"rob@akrabat.com\",\n                    \"homepage\": \"http://akrabat.com\"\n                },\n                {\n                    \"name\": \"Gabriel Manricks\",\n                    \"email\": \"gmanricks@me.com\",\n                    \"homepage\": \"http://gabrielmanricks.com\"\n                }\n            ],\n            \"description\": \"Slim is a PHP micro framework that helps you quickly write simple yet powerful web applications and APIs\",\n            \"homepage\": \"https://slimframework.com\",\n            \"keywords\": [\n                \"api\",\n                \"framework\",\n                \"micro\",\n                \"router\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/slimphp/Slim/issues\",\n                \"source\": \"https://github.com/slimphp/Slim/tree/3.x\"\n            },\n            \"time\": \"2019-11-28T17:40:33+00:00\"\n        },\n        {\n            \"name\": \"smarty/smarty\",\n            \"version\": \"v3.1.40\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/smarty-php/smarty.git\",\n                \"reference\": \"9d4f8309ed49702e0d7152f9983c3a9c4b98eb9d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/smarty-php/smarty/zipball/9d4f8309ed49702e0d7152f9983c3a9c4b98eb9d\",\n                \"reference\": \"9d4f8309ed49702e0d7152f9983c3a9c4b98eb9d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.5 || ^6.5 || ^5.7 || ^4.8\",\n                \"smarty/smarty-lexer\": \"^3.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.1.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"libs/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-3.0\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Monte Ohrt\",\n                    \"email\": \"monte@ohrt.com\"\n                },\n                {\n                    \"name\": \"Uwe Tews\",\n                    \"email\": \"uwe.tews@googlemail.com\"\n                },\n                {\n                    \"name\": \"Rodney Rehm\",\n                    \"email\": \"rodney.rehm@medialize.de\"\n                }\n            ],\n            \"description\": \"Smarty - the compiling PHP template engine\",\n            \"homepage\": \"http://www.smarty.net\",\n            \"keywords\": [\n                \"templating\"\n            ],\n            \"support\": {\n                \"forum\": \"http://www.smarty.net/forums/\",\n                \"irc\": \"irc://irc.freenode.org/smarty\",\n                \"issues\": \"https://github.com/smarty-php/smarty/issues\",\n                \"source\": \"https://github.com/smarty-php/smarty/tree/v3.1.40\"\n            },\n            \"time\": \"2021-10-13T10:04:31+00:00\"\n        },\n        {\n            \"name\": \"soundasleep/html2text\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/soundasleep/html2text.git\",\n                \"reference\": \"3243a7107878a61685d2eccf99918d6479e039fc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/soundasleep/html2text/zipball/3243a7107878a61685d2eccf99918d6479e039fc\",\n                \"reference\": \"3243a7107878a61685d2eccf99918d6479e039fc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-dom\": \"*\",\n                \"ext-libxml\": \"*\",\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"~7.0\",\n                \"soundasleep/component-tests\": \"~0.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Soundasleep\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jevon Wright\",\n                    \"homepage\": \"https://jevon.org\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A PHP script to convert HTML into a plain text format\",\n            \"homepage\": \"https://github.com/soundasleep/html2text\",\n            \"keywords\": [\n                \"email\",\n                \"html\",\n                \"php\",\n                \"text\"\n            ],\n            \"support\": {\n                \"email\": \"support@jevon.org\",\n                \"issues\": \"https://github.com/soundasleep/html2text/issues\",\n                \"source\": \"https://github.com/soundasleep/html2text/tree/master\"\n            },\n            \"time\": \"2019-02-15T01:44:54+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php80\",\n            \"version\": \"v1.23.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php80.git\",\n                \"reference\": \"1100343ed1a92e3a38f9ae122fc0eb21602547be\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php80/zipball/1100343ed1a92e3a38f9ae122fc0eb21602547be\",\n                \"reference\": \"1100343ed1a92e3a38f9ae122fc0eb21602547be\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php80\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ion Bazan\",\n                    \"email\": \"ion.bazan@gmail.com\"\n                },\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php80/tree/v1.23.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-07-28T13:41:28+00:00\"\n        },\n        {\n            \"name\": \"tecnickcom/tcpdf\",\n            \"version\": \"6.4.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/tecnickcom/TCPDF.git\",\n                \"reference\": \"172540dcbfdf8dc983bc2fe78feff48ff7ec1c76\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/tecnickcom/TCPDF/zipball/172540dcbfdf8dc983bc2fe78feff48ff7ec1c76\",\n                \"reference\": \"172540dcbfdf8dc983bc2fe78feff48ff7ec1c76\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"config\",\n                    \"include\",\n                    \"tcpdf.php\",\n                    \"tcpdf_parser.php\",\n                    \"tcpdf_import.php\",\n                    \"tcpdf_barcodes_1d.php\",\n                    \"tcpdf_barcodes_2d.php\",\n                    \"include/tcpdf_colors.php\",\n                    \"include/tcpdf_filters.php\",\n                    \"include/tcpdf_font_data.php\",\n                    \"include/tcpdf_fonts.php\",\n                    \"include/tcpdf_images.php\",\n                    \"include/tcpdf_static.php\",\n                    \"include/barcodes/datamatrix.php\",\n                    \"include/barcodes/pdf417.php\",\n                    \"include/barcodes/qrcode.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-3.0-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicola Asuni\",\n                    \"email\": \"info@tecnick.com\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"TCPDF is a PHP class for generating PDF documents and barcodes.\",\n            \"homepage\": \"http://www.tcpdf.org/\",\n            \"keywords\": [\n                \"PDFD32000-2008\",\n                \"TCPDF\",\n                \"barcodes\",\n                \"datamatrix\",\n                \"pdf\",\n                \"pdf417\",\n                \"qrcode\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/tecnickcom/TCPDF/issues\",\n                \"source\": \"https://github.com/tecnickcom/TCPDF/tree/6.4.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&currency_code=GBP&business=paypal@tecnick.com&item_name=donation%20for%20tcpdf%20project\",\n                    \"type\": \"custom\"\n                }\n            ],\n            \"time\": \"2021-07-20T14:43:20+00:00\"\n        }\n    ],\n    \"packages-dev\": [\n        {\n            \"name\": \"atoum/atoum\",\n            \"version\": \"dev-master\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/atoum/atoum.git\",\n                \"reference\": \"0fe4495643f6a529f9e304ea6933d29733253489\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/atoum/atoum/zipball/0fe4495643f6a529f9e304ea6933d29733253489\",\n                \"reference\": \"0fe4495643f6a529f9e304ea6933d29733253489\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-hash\": \"*\",\n                \"ext-json\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xml\": \"*\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"replace\": {\n                \"mageekguy/atoum\": \"*\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^3.2\"\n            },\n            \"suggest\": {\n                \"atoum/stubs\": \"Provides IDE support (like autocompletion) for atoum\",\n                \"ext-mbstring\": \"Provides support for UTF-8 strings\",\n                \"ext-xdebug\": \"Provides code coverage report (>= 2.3)\"\n            },\n            \"default-branch\": true,\n            \"bin\": [\n                \"bin/atoum\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"4.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"classmap\": [\n                    \"classes/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fr\u00e9d\u00e9ric Hardy\",\n                    \"email\": \"frederic.hardy@atoum.org\",\n                    \"homepage\": \"http://blog.mageekbox.net\"\n                },\n                {\n                    \"name\": \"Fran\u00e7ois Dussert\",\n                    \"email\": \"francois.dussert@atoum.org\"\n                },\n                {\n                    \"name\": \"G\u00e9rald Croes\",\n                    \"email\": \"gerald.croes@atoum.org\"\n                },\n                {\n                    \"name\": \"Julien Bianchi\",\n                    \"email\": \"julien.bianchi@atoum.org\"\n                },\n                {\n                    \"name\": \"Ludovic Fleury\",\n                    \"email\": \"ludovic.fleury@atoum.org\"\n                }\n            ],\n            \"description\": \"Simple modern and intuitive unit testing framework for PHP 5.3+\",\n            \"homepage\": \"http://www.atoum.org\",\n            \"keywords\": [\n                \"TDD\",\n                \"atoum\",\n                \"test\",\n                \"unit testing\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/atoum/atoum/issues\",\n                \"source\": \"https://github.com/atoum/atoum/tree/4.0.3\"\n            },\n            \"time\": \"2021-10-22T08:10:33+00:00\"\n        },\n        {\n            \"name\": \"galette/smarty-xgettext\",\n            \"version\": \"1.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/galette/smarty-xgettext.git\",\n                \"reference\": \"623df2499945bc21b693d017973b048f2ef1a597\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/galette/smarty-xgettext/zipball/623df2499945bc21b693d017973b048f2ef1a597\",\n                \"reference\": \"623df2499945bc21b693d017973b048f2ef1a597\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"geekwright/po\": \"^2.0\",\n                \"php\": \"^7.3 || ^8\",\n                \"smarty/smarty\": \"^3.1\",\n                \"symfony/console\": \"^5.1\",\n                \"symfony/finder\": \"^5.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8 || ^9\",\n                \"squizlabs/php_codesniffer\": \"^3.5\",\n                \"symfony/var-dumper\": \"^3.3\"\n            },\n            \"bin\": [\n                \"bin/smarty-xgettext\"\n            ],\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"SmartyGettext\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Elan Ruusam\u00e4e\",\n                    \"email\": \"glen@pld-linux.org\"\n                },\n                {\n                    \"name\": \"Johan Cwiklinski\",\n                    \"email\": \"trasher@x-tnd.be\"\n                }\n            ],\n            \"description\": \"Smarty xgettext features\",\n            \"homepage\": \"https://github.com/galette/smarty-xgettext\",\n            \"support\": {\n                \"issues\": \"https://github.com/galette/smarty-xgettext/issues\",\n                \"source\": \"https://github.com/galette/smarty-xgettext/tree/1.2.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://paypal.me/pools/c/8u4dEPpM0q\",\n                    \"type\": \"custom\"\n                }\n            ],\n            \"time\": \"2020-12-19T22:14:28+00:00\"\n        },\n        {\n            \"name\": \"geekwright/po\",\n            \"version\": \"v2.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/geekwright/Po.git\",\n                \"reference\": \"f9222a901d38f2101d22f767099926d945c78db5\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/geekwright/Po/zipball/f9222a901d38f2101d22f767099926d945c78db5\",\n                \"reference\": \"f9222a901d38f2101d22f767099926d945c78db5\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">7.1\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^7.0|^8.0\",\n                \"smarty/smarty\": \"^3.1\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Geekwright\\\\Po\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-2.0-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Richard Griffith\",\n                    \"email\": \"richard@geekwright.com\"\n                }\n            ],\n            \"description\": \"Objects to assist in reading, manipulating and creating GNU gettext style PO files\",\n            \"homepage\": \"https://github.com/geekwright/Po\",\n            \"keywords\": [\n                \"gettext\",\n                \"i18n\",\n                \"l10n\",\n                \"po\",\n                \"pot\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/geekwright/Po/issues\",\n                \"source\": \"https://github.com/geekwright/Po/tree/v2.0.2\"\n            },\n            \"time\": \"2020-12-30T23:34:48+00:00\"\n        },\n        {\n            \"name\": \"squizlabs/php_codesniffer\",\n            \"version\": \"3.6.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/squizlabs/PHP_CodeSniffer.git\",\n                \"reference\": \"f268ca40d54617c6e06757f83f699775c9b3ff2e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/f268ca40d54617c6e06757f83f699775c9b3ff2e\",\n                \"reference\": \"f268ca40d54617c6e06757f83f699775c9b3ff2e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-simplexml\": \"*\",\n                \"ext-tokenizer\": \"*\",\n                \"ext-xmlwriter\": \"*\",\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^4.0 || ^5.0 || ^6.0 || ^7.0\"\n            },\n            \"bin\": [\n                \"bin/phpcs\",\n                \"bin/phpcbf\"\n            ],\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Greg Sherwood\",\n                    \"role\": \"lead\"\n                }\n            ],\n            \"description\": \"PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.\",\n            \"homepage\": \"https://github.com/squizlabs/PHP_CodeSniffer\",\n            \"keywords\": [\n                \"phpcs\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/squizlabs/PHP_CodeSniffer/issues\",\n                \"source\": \"https://github.com/squizlabs/PHP_CodeSniffer\",\n                \"wiki\": \"https://github.com/squizlabs/PHP_CodeSniffer/wiki\"\n            },\n            \"time\": \"2021-10-11T04:00:11+00:00\"\n        },\n        {\n            \"name\": \"symfony/console\",\n            \"version\": \"v5.3.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/console.git\",\n                \"reference\": \"d4e409d9fbcfbf71af0e5a940abb7b0b4bad0bd3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/console/zipball/d4e409d9fbcfbf71af0e5a940abb7b0b4bad0bd3\",\n                \"reference\": \"d4e409d9fbcfbf71af0e5a940abb7b0b4bad0bd3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/deprecation-contracts\": \"^2.1\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php73\": \"^1.8\",\n                \"symfony/polyfill-php80\": \"^1.16\",\n                \"symfony/service-contracts\": \"^1.1|^2\",\n                \"symfony/string\": \"^5.1\"\n            },\n            \"conflict\": {\n                \"psr/log\": \">=3\",\n                \"symfony/dependency-injection\": \"<4.4\",\n                \"symfony/dotenv\": \"<5.1\",\n                \"symfony/event-dispatcher\": \"<4.4\",\n                \"symfony/lock\": \"<4.4\",\n                \"symfony/process\": \"<4.4\"\n            },\n            \"provide\": {\n                \"psr/log-implementation\": \"1.0|2.0\"\n            },\n            \"require-dev\": {\n                \"psr/log\": \"^1|^2\",\n                \"symfony/config\": \"^4.4|^5.0\",\n                \"symfony/dependency-injection\": \"^4.4|^5.0\",\n                \"symfony/event-dispatcher\": \"^4.4|^5.0\",\n                \"symfony/lock\": \"^4.4|^5.0\",\n                \"symfony/process\": \"^4.4|^5.0\",\n                \"symfony/var-dumper\": \"^4.4|^5.0\"\n            },\n            \"suggest\": {\n                \"psr/log\": \"For using the console logger\",\n                \"symfony/event-dispatcher\": \"\",\n                \"symfony/lock\": \"\",\n                \"symfony/process\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Console\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Eases the creation of beautiful and testable command line interfaces\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"cli\",\n                \"command line\",\n                \"console\",\n                \"terminal\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/console/tree/v5.3.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-26T09:30:15+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v2.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"5f38c8804a9e97d23e0c8d63341088cd8a22d627\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/5f38c8804a9e97d23e0c8d63341088cd8a22d627\",\n                \"reference\": \"5f38c8804a9e97d23e0c8d63341088cd8a22d627\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.4-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v2.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-03-23T23:28:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/finder\",\n            \"version\": \"v5.3.7\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/finder.git\",\n                \"reference\": \"a10000ada1e600d109a6c7632e9ac42e8bf2fb93\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/finder/zipball/a10000ada1e600d109a6c7632e9ac42e8bf2fb93\",\n                \"reference\": \"a10000ada1e600d109a6c7632e9ac42e8bf2fb93\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-php80\": \"^1.16\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\Finder\\\\\": \"\"\n                },\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Finds files and directories via an intuitive fluent interface\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/finder/tree/v5.3.7\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-08-04T21:20:46+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-ctype\",\n            \"version\": \"v1.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-ctype.git\",\n                \"reference\": \"46cd95797e9df938fdd2b03693b5fca5e64b01ce\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-ctype/zipball/46cd95797e9df938fdd2b03693b5fca5e64b01ce\",\n                \"reference\": \"46cd95797e9df938fdd2b03693b5fca5e64b01ce\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-ctype\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gert de Pagter\",\n                    \"email\": \"BackEndTea@gmail.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for ctype functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"ctype\",\n                \"polyfill\",\n                \"portable\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-ctype/tree/v1.23.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-02-19T12:13:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-grapheme\",\n            \"version\": \"v1.23.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-grapheme.git\",\n                \"reference\": \"16880ba9c5ebe3642d1995ab866db29270b36535\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/16880ba9c5ebe3642d1995ab866db29270b36535\",\n                \"reference\": \"16880ba9c5ebe3642d1995ab866db29270b36535\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Grapheme\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's grapheme_* functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"grapheme\",\n                \"intl\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-grapheme/tree/v1.23.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-05-27T12:26:48+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-intl-normalizer\",\n            \"version\": \"v1.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-intl-normalizer.git\",\n                \"reference\": \"8590a5f561694770bdcd3f9b5c69dde6945028e8\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/8590a5f561694770bdcd3f9b5c69dde6945028e8\",\n                \"reference\": \"8590a5f561694770bdcd3f9b5c69dde6945028e8\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-intl\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Intl\\\\Normalizer\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for intl's Normalizer class and related functions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"intl\",\n                \"normalizer\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-intl-normalizer/tree/v1.23.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-02-19T12:13:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-mbstring\",\n            \"version\": \"v1.23.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-mbstring.git\",\n                \"reference\": \"9174a3d80210dca8daa7f31fec659150bbeabfc6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-mbstring/zipball/9174a3d80210dca8daa7f31fec659150bbeabfc6\",\n                \"reference\": \"9174a3d80210dca8daa7f31fec659150bbeabfc6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"suggest\": {\n                \"ext-mbstring\": \"For best performance\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Mbstring\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill for the Mbstring extension\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"mbstring\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-mbstring/tree/v1.23.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-05-27T12:26:48+00:00\"\n        },\n        {\n            \"name\": \"symfony/polyfill-php73\",\n            \"version\": \"v1.23.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/polyfill-php73.git\",\n                \"reference\": \"fba8933c384d6476ab14fb7b8526e5287ca7e010\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/polyfill-php73/zipball/fba8933c384d6476ab14fb7b8526e5287ca7e010\",\n                \"reference\": \"fba8933c384d6476ab14fb7b8526e5287ca7e010\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"1.23-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/polyfill\",\n                    \"url\": \"https://github.com/symfony/polyfill\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Polyfill\\\\Php73\\\\\": \"\"\n                },\n                \"files\": [\n                    \"bootstrap.php\"\n                ],\n                \"classmap\": [\n                    \"Resources/stubs\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Symfony polyfill backporting some PHP 7.3+ features to lower PHP versions\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"compatibility\",\n                \"polyfill\",\n                \"portable\",\n                \"shim\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/polyfill-php73/tree/v1.23.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-02-19T12:13:01+00:00\"\n        },\n        {\n            \"name\": \"symfony/service-contracts\",\n            \"version\": \"v2.4.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/service-contracts.git\",\n                \"reference\": \"f040a30e04b57fbcc9c6cbcf4dbaa96bd318b9bb\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/service-contracts/zipball/f040a30e04b57fbcc9c6cbcf4dbaa96bd318b9bb\",\n                \"reference\": \"f040a30e04b57fbcc9c6cbcf4dbaa96bd318b9bb\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"psr/container\": \"^1.1\"\n            },\n            \"suggest\": {\n                \"symfony/service-implementation\": \"\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-main\": \"2.4-dev\"\n                },\n                \"thanks\": {\n                    \"name\": \"symfony/contracts\",\n                    \"url\": \"https://github.com/symfony/contracts\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Contracts\\\\Service\\\\\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Generic abstractions related to writing services\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"abstractions\",\n                \"contracts\",\n                \"decoupling\",\n                \"interfaces\",\n                \"interoperability\",\n                \"standards\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/service-contracts/tree/v2.4.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-04-01T10:43:52+00:00\"\n        },\n        {\n            \"name\": \"symfony/string\",\n            \"version\": \"v5.3.10\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/string.git\",\n                \"reference\": \"d70c35bb20bbca71fc4ab7921e3c6bda1a82a60c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/string/zipball/d70c35bb20bbca71fc4ab7921e3c6bda1a82a60c\",\n                \"reference\": \"d70c35bb20bbca71fc4ab7921e3c6bda1a82a60c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2.5\",\n                \"symfony/polyfill-ctype\": \"~1.8\",\n                \"symfony/polyfill-intl-grapheme\": \"~1.0\",\n                \"symfony/polyfill-intl-normalizer\": \"~1.0\",\n                \"symfony/polyfill-mbstring\": \"~1.0\",\n                \"symfony/polyfill-php80\": \"~1.15\"\n            },\n            \"require-dev\": {\n                \"symfony/error-handler\": \"^4.4|^5.0\",\n                \"symfony/http-client\": \"^4.4|^5.0\",\n                \"symfony/translation-contracts\": \"^1.1|^2\",\n                \"symfony/var-exporter\": \"^4.4|^5.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Symfony\\\\Component\\\\String\\\\\": \"\"\n                },\n                \"files\": [\n                    \"Resources/functions.php\"\n                ],\n                \"exclude-from-classmap\": [\n                    \"/Tests/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way\",\n            \"homepage\": \"https://symfony.com\",\n            \"keywords\": [\n                \"grapheme\",\n                \"i18n\",\n                \"string\",\n                \"unicode\",\n                \"utf-8\",\n                \"utf8\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/symfony/string/tree/v5.3.10\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2021-10-27T18:21:46+00:00\"\n        }\n    ],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": {\n        \"atoum/atoum\": 20\n    },\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=7.3\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"2.1.0\"\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Galette payment types controller\n *\n * PHP version 5\n *\n * Copyright \u00a9 2019-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Controllers\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2019-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.9.4dev - 2019-12-09\n */\n\nnamespace Galette\\Controllers\\Crud;\n\nuse Galette\\Controllers\\CrudController;\nuse Slim\\Http\\Request;\nuse Slim\\Http\\Response;\nuse Galette\\Repository\\PaymentTypes;\nuse Galette\\Entity\\PaymentType;\nuse Analog\\Analog;\n\n/**\n * Galette payment types controller\n *\n * @category  Controllers\n * @name      PaymentTypeController\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2019-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.9.4dev - 2019-12-09\n */\n\nclass PaymentTypeController extends CrudController\n{\n    // CRUD - Create\n\n    /**\n     * Add page\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     *\n     * @return Response\n     */\n    public function add(Request $request, Response $response): Response\n    {\n        //no new page (included on list), just to satisfy inheritance\n    }\n\n    /**\n     * Add action\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     *\n     * @return Response\n     */\n    public function doAdd(Request $request, Response $response): Response\n    {\n        return $this->store($request, $response, null);\n    }\n\n    // /CRUD - Create\n    // CRUD - Read\n\n    /**\n     * List page\n     *\n     * @param Request        $request  PSR Request\n     * @param Response       $response PSR Response\n     * @param string         $option   One of 'page' or 'order'\n     * @param string|integer $value    Value of the option\n     *\n     * @return Response\n     */\n    public function list(Request $request, Response $response, $option = null, $value = null): Response\n    {\n        $ptypes = new PaymentTypes(\n            $this->zdb,\n            $this->preferences,\n            $this->login\n        );\n        $list = $ptypes->getList();\n\n        // display page\n        $this->view->render(\n            $response,\n            'gestion_paymentstypes.tpl',\n            [\n                'page_title'        => _T(\"Payment types management\"),\n                'list'              => $list\n            ]\n        );\n        return $response;\n    }\n\n    /**\n     * Mailings filtering\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     *\n     * @return Response\n     */\n    public function filter(Request $request, Response $response): Response\n    {\n        //no filters\n    }\n\n    // /CRUD - Read\n    // CRUD - Update\n\n    /**\n     * Edit page\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     * @param integer  $id       Type id\n     *\n     * @return Response\n     */\n    public function edit(Request $request, Response $response, int $id): Response\n    {\n        $ptype = new PaymentType($this->zdb, $id);\n\n        // display page\n        $this->view->render(\n            $response,\n            'edit_paymenttype.tpl',\n            [\n                'page_title'    => _T(\"Edit payment type\"),\n                'ptype'         => $ptype\n            ]\n        );\n        return $response;\n    }\n\n    /**\n     * Edit action\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     * @param integer  $id       Type id\n     *\n     * @return Response\n     */\n    public function doEdit(Request $request, Response $response, int $id): Response\n    {\n        return $this->store($request, $response, $id);\n    }\n\n    /**\n     * Store\n     *\n     * @param Request  $request  PSR Request\n     * @param Response $response PSR Response\n     * @param integer  $id       Type id\n     *\n     * @return Response\n     */\n    public function store(Request $request, Response $response, int $id = null): Response\n    {\n        $post = $request->getParsedBody();\n\n        if (isset($post['cancel'])) {\n            return $response\n                ->withStatus(301)\n                ->withHeader('Location', $this->cancelUri($this->getArgs($request)));\n        }\n\n        $ptype = new PaymentType($this->zdb, $id);\n        $ptype->name = $post['name'];\n        $res = $ptype->store();\n        $redirect_uri = $this->redirectUri($this->getArgs($request));\n\n        if (!$res) {\n            if ($id === null) {\n                $this->flash->addMessage(\n                    'error_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->getName(),\n                        _T(\"Payment type '%s' has not been added!\")\n                    )\n                );\n            } else {\n                $this->flash->addMessage(\n                    'error_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->getName(),\n                        _T(\"Payment type '%s' has not been modified!\")\n                    )\n                );\n                //redirect to payment type edition\n                $redirect_uri = $this->router->pathFor('editPaymentType', ['id' => $id]);\n            }\n        } else {\n            if ($id === null) {\n                $this->flash->addMessage(\n                    'success_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->getName(),\n                        _T(\"Payment type '%s' has been successfully added.\")\n                    )\n                );\n            } else {\n                $this->flash->addMessage(\n                    'success_detected',\n                    preg_replace(\n                        '(%s)',\n                        $ptype->getName(),\n                        _T(\"Payment type '%s' has been successfully modified.\")\n                    )\n                );\n            }\n        }\n\n        $warning_detected = $ptype->getWarnings();\n        if (count($warning_detected)) {\n            foreach ($warning_detected as $warning) {\n                $this->flash->addMessage(\n                    'warning_detected',\n                    $warning\n                );\n            }\n        }\n\n        return $response\n            ->withStatus(301)\n            ->withHeader('Location', $redirect_uri);\n    }\n\n\n    // /CRUD - Update\n    // CRUD - Delete\n\n    /**\n     * Get redirection URI\n     *\n     * @param array $args Route arguments\n     *\n     * @return string\n     */\n    public function redirectUri(array $args)\n    {\n        return $this->router->pathFor('paymentTypes');\n    }\n\n    /**\n     * Get form URI\n     *\n     * @param array $args Route arguments\n     *\n     * @return string\n     */\n    public function formUri(array $args)\n    {\n        return $this->router->pathFor(\n            'doRemovePaymentType',\n            ['id' => $args['id'] ?? null]\n        );\n    }\n\n    /**\n     * Get confirmation removal page title\n     *\n     * @param array $args Route arguments\n     *\n     * @return string\n     */\n    public function confirmRemoveTitle(array $args)\n    {\n        $ptype = new PaymentType($this->zdb, (int)$args['id']);\n        return sprintf(\n            _T('Remove payment type %1$s'),\n            $ptype->getName()\n        );\n    }\n\n    /**\n     * Remove object\n     *\n     * @param array $args Route arguments\n     * @param array $post POST values\n     *\n     * @return boolean\n     */\n    protected function doDelete(array $args, array $post)\n    {\n        $ptype = new PaymentType($this->zdb, (int)$args['id']);\n        return $ptype->remove();\n    }\n\n    // CRUD - Delete\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Preferences handling\n *\n * PHP version 5\n *\n * Copyright \u00a9 2007-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Core\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-14\n */\n\nnamespace Galette\\Core;\n\nuse Galette\\Entity\\PaymentType;\nuse Galette\\Entity\\Social;\nuse Galette\\Features\\Replacements;\nuse Galette\\Features\\Socials;\nuse Throwable;\nuse Analog\\Analog;\nuse Galette\\Entity\\Adherent;\nuse Galette\\Entity\\Status;\nuse Galette\\IO\\PdfMembersCards;\nuse Galette\\Repository\\Members;\n\n/**\n * Preferences for galette\n *\n * @category  Core\n * @name      Preferences\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-14\n *\n * @property string $pref_admin_login Super admin login\n * @property string $pref_admin_pass Super admin password\n * @property string $pref_nom Association name\n * @property string $pref_slogan Association slogan\n * @property string $pref_adresse Address\n * @property string $pref_adresse2 Address continuation\n * @property string $pref_cp Association zipcode\n * @property string $pref_ville Association town\n * @property string $pref_pays Country\n * @property integer $pref_postal_adress Postal adress to use, one of self::POSTAL_ADDRESS*\n * @property integer $pref_postal_staff_member Staff member ID from which retrieve postal address\n * @property string $pref_lang Default instance language\n * @property integer $pref_numrows Default number of rows in lists\n * @property integer $pref_log History, one of self::LOG_*\n * @property integer $pref_statut Default status for new members\n * @property string $pref_email_nom\n * @property string $pref_email\n * @property string $pref_email_newadh\n * @property boolean $pref_bool_mailadh\n * @property boolean $pref_bool_mailowner\n * @property boolean $pref_editor_enabled\n * @property integer $pref_mail_method Mail method, see GaletteMail::METHOD_*\n * @property string $pref_mail_smtp\n * @property string $pref_mail_smtp_host\n * @property boolean $pref_mail_smtp_auth\n * @property boolean $pref_mail_smtp_secure\n * @property integer $pref_mail_smtp_port\n * @property string $pref_mail_smtp_user\n * @property string $pref_mail_smtp_password\n * @property integer $pref_membership_ext\n * @property string $pref_beg_membership\n * @property integer $pref_membership_offermonths\n * @property string $pref_email_reply_to\n * @property string $pref_website\n * @property integer $pref_etiq_marges_v\n * @property string $pref_etiq_marges_h\n * @property string $pref_etiq_hspace\n * @property string $pref_etiq_vspace\n * @property string $pref_etiq_hsize\n * @property string $pref_etiq_vsize\n * @property string $pref_etiq_cols\n * @property string $pref_etiq_rows\n * @property string $pref_etiq_corps\n * @property string $pref_card_abrev\n * @property string $pref_card_strip\n * @property string $pref_card_tcol\n * @property string $pref_card_scol\n * @property string $pref_card_bcol\n * @property string $pref_card_hcol\n * @property string $pref_bool_display_title\n * @property integer $pref_card_address\n * @property string $pref_card_year\n * @property integer $pref_card_marges_v\n * @property integer $pref_card_marges_h\n * @property integer $pref_card_vspace\n * @property integer $pref_card_hspace\n * @property string $pref_card_self\n * @property string $pref_theme Prefered theme\n * @property boolean $pref_bool_publicpages\n * @property integer $pref_publicpages_visibility\n * @property boolean $pref_bool_selfsubscribe\n * @property string $pref_mail_sign\n * @property string $pref_new_contrib_script\n * @property boolean $pref_bool_wrap_mails\n * @property string $pref_rss_url\n * @property boolean $pref_show_id\n * @property string $pref_adhesion_form\n * @property boolean $pref_mail_allow_unsecure\n * @property string $pref_instance_uuid\n * @property string $pref_registration_uuid\n * @property string $pref_telemetry_date\n * @property string $pref_registration_date\n * @property string $pref_footer\n * @property integer $pref_filter_account\n * @property string $pref_galette_url\n * @property integer $pref_redirect_on_create\n * @property integer $pref_password_length\n * @property boolean $pref_password_blacklist\n * @property integer $pref_password_strength\n * @property integer $pref_default_paymenttype\n * @property boolean $pref_bool_create_member\n * @property-read string $vpref_email_newadh Comma separated list of mail senders\n */\nclass Preferences\n{\n    use Replacements;\n    use Socials;\n\n    protected $preferences; //redefined from Replacements feature - avoid circular dependency\n    private $prefs;\n    private $errors = [];\n\n    public const TABLE = 'preferences';\n    public const PK = 'nom_pref';\n\n    /** Postal address will be the one given in the preferences */\n    public const POSTAL_ADDRESS_FROM_PREFS = 0;\n    /** Postal address will be the one of the selected staff member */\n    public const POSTAL_ADDRESS_FROM_STAFF = 1;\n\n    /** Public pages stuff */\n    /** Public pages are publically visibles */\n    public const PUBLIC_PAGES_VISIBILITY_PUBLIC = 0;\n    /** Public pages are visibles for up to date members only */\n    public const PUBLIC_PAGES_VISIBILITY_RESTRICTED = 1;\n    /** Public pages are visibles for admin and staff members only */\n    public const PUBLIC_PAGES_VISIBILITY_PRIVATE = 2;\n\n    public const LOG_DISABLED = 0;\n    public const LOG_ENABLED = 1;\n\n    /** No password strength */\n    public const PWD_NONE = 0;\n    /** Weak password strength */\n    public const PWD_WEAK = 1;\n    /** Medium password strength */\n    public const PWD_MEDIUM = 2;\n    /** Strong password strength */\n    public const PWD_STRONG = 3;\n    /** Very strong password strength */\n    public const PWD_VERY_STRONG = 4;\n\n    private static $fields = array(\n        'nom_pref',\n        'val_pref'\n    );\n\n    private static $defaults = array(\n        'pref_admin_login'    =>    'admin',\n        'pref_admin_pass'    =>    'admin',\n        'pref_nom'        =>    'Galette',\n        'pref_slogan'        =>    '',\n        'pref_adresse'        =>    '-',\n        'pref_adresse2'        =>    '',\n        'pref_cp'        =>    '',\n        'pref_ville'        =>    '',\n        'pref_pays'        =>    '',\n        'pref_postal_adress'  => self::POSTAL_ADDRESS_FROM_PREFS,\n        'pref_postal_staff_member' => '',\n        'pref_lang'        =>    I18n::DEFAULT_LANG,\n        'pref_numrows'        =>    30,\n        'pref_log'        =>    self::LOG_ENABLED,\n        'pref_statut'        =>    Status::DEFAULT_STATUS,\n        /* Preferences for emails */\n        'pref_email_nom'    =>    'Galette',\n        'pref_email'        =>    'mail@domain.com',\n        'pref_email_newadh'    =>    'mail@domain.com',\n        'pref_bool_mailadh'    =>    false,\n        'pref_bool_mailowner' => false,\n        'pref_editor_enabled'    =>    false,\n        'pref_mail_method'    =>    GaletteMail::METHOD_DISABLED,\n        'pref_mail_smtp'    =>    '',\n        'pref_mail_smtp_host'   => '',\n        'pref_mail_smtp_auth'   => false,\n        'pref_mail_smtp_secure' => false,\n        'pref_mail_smtp_port'   => '',\n        'pref_mail_smtp_user'   => '',\n        'pref_mail_smtp_password'   => '',\n        'pref_membership_ext'    =>    12,\n        'pref_beg_membership'    =>    '',\n        'pref_membership_offermonths' => 0,\n        'pref_email_reply_to'    =>    '',\n        'pref_website'        =>    '',\n        /* Preferences for labels */\n        'pref_etiq_marges_v'    =>    10,\n        'pref_etiq_marges_h'    =>    10,\n        'pref_etiq_hspace'    =>    10,\n        'pref_etiq_vspace'    =>    5,\n        'pref_etiq_hsize'    =>    90,\n        'pref_etiq_vsize'    =>    35,\n        'pref_etiq_cols'    =>    2,\n        'pref_etiq_rows'    =>    7,\n        'pref_etiq_corps'    =>    12,\n        /* Preferences for members cards */\n        'pref_card_abrev'    =>    'GALETTE',\n        'pref_card_strip'    =>    'Gestion d\\'Adherents en Ligne Extr\u00eamement Tarabiscot\u00e9e',\n        'pref_card_tcol'    =>    '#FFFFFF',\n        'pref_card_scol'    =>    '#8C2453',\n        'pref_card_bcol'    =>    '#53248C',\n        'pref_card_hcol'    =>    '#248C53',\n        'pref_bool_display_title'    =>    false,\n        'pref_card_address'    =>    1,\n        'pref_card_year'    =>    '',\n        'pref_card_marges_v'    =>    15,\n        'pref_card_marges_h'    =>    20,\n        'pref_card_vspace'    =>    5,\n        'pref_card_hspace'    =>    10,\n        'pref_card_self'    =>    1,\n        'pref_theme'        =>    'default',\n        'pref_bool_publicpages' => true,\n        'pref_publicpages_visibility' => self::PUBLIC_PAGES_VISIBILITY_RESTRICTED,\n        'pref_bool_selfsubscribe' => true,\n        'pref_mail_sign' => \"{ASSO_NAME}\\r\\n\\r\\n{ASSO_WEBSITE}\",\n        /* New contribution script */\n        'pref_new_contrib_script' => '',\n        'pref_bool_wrap_mails' => true,\n        'pref_rss_url' => 'http://galette.eu/dc/index.php/feed/atom',\n        'pref_show_id' => false,\n        'pref_adhesion_form' => '\\Galette\\IO\\PdfAdhesionForm',\n        'pref_mail_allow_unsecure' => false,\n        'pref_instance_uuid' => '',\n        'pref_registration_uuid' => '',\n        'pref_telemetry_date' => '',\n        'pref_registration_date' => '',\n        'pref_footer' => '',\n        'pref_filter_account' => Members::ALL_ACCOUNTS,\n        'pref_galette_url' => '',\n        'pref_redirect_on_create' => Adherent::AFTER_ADD_DEFAULT,\n        /* Security related */\n        'pref_password_length' => 6,\n        'pref_password_blacklist' => false,\n        'pref_password_strength' => self::PWD_NONE,\n        'pref_default_paymenttype' => PaymentType::CHECK,\n        'pref_bool_create_member' => false\n    );\n\n    /** @var Social[] */\n    private $socials;\n\n    // flagging required fields\n    private $required = array(\n        'pref_nom',\n        'pref_lang',\n        'pref_numrows',\n        'pref_log',\n        'pref_etiq_marges_v',\n        'pref_etiq_marges_h',\n        'pref_etiq_hspace',\n        'pref_etiq_vspace',\n        'pref_etiq_hsize',\n        'pref_etiq_vsize',\n        'pref_etiq_cols',\n        'pref_etiq_rows',\n        'pref_etiq_corps',\n        'pref_card_abrev',\n        'pref_card_strip',\n        'pref_card_marges_v',\n        'pref_card_marges_h',\n        'pref_card_hspace',\n        'pref_card_vspace'\n    );\n\n    /**\n     * Default constructor\n     *\n     * @param Db      $zdb  Db instance\n     * @param boolean $load Automatically load preferences on load\n     *\n     * @return void\n     */\n    public function __construct(Db $zdb, $load = true)\n    {\n        $this->zdb = $zdb;\n        if ($load) {\n            $this->load();\n            $this->checkUpdate();\n        }\n    }\n\n    /**\n     * Check if all fields referenced in the default array does exists,\n     * create them if not\n     *\n     * @return void\n     */\n    private function checkUpdate()\n    {\n        $proceed = false;\n        $params = array();\n        foreach (self::$defaults as $k => $v) {\n            if (!isset($this->prefs[$k])) {\n                if ($k == 'pref_admin_pass' && $v == 'admin') {\n                    $v = password_hash($v, PASSWORD_BCRYPT);\n                }\n                $this->prefs[$k] = $v;\n                Analog::log(\n                    'The field `' . $k . '` does not exists, Galette will attempt to create it.',\n                    Analog::INFO\n                );\n                $proceed = true;\n                $params[] = array(\n                    'nom_pref'  => $k,\n                    'val_pref'  => $v\n                );\n            }\n        }\n        if ($proceed !== false) {\n            try {\n                $insert = $this->zdb->insert(self::TABLE);\n                $insert->values(\n                    array(\n                        'nom_pref'  => ':nom_pref',\n                        'val_pref'  => ':val_pref'\n                    )\n                );\n                $stmt = $this->zdb->sql->prepareStatementForSqlObject($insert);\n\n                foreach ($params as $p) {\n                    $stmt->execute(\n                        array(\n                            'nom_pref' => $p['nom_pref'],\n                            'val_pref' => $p['val_pref']\n                        )\n                    );\n                }\n            } catch (Throwable $e) {\n                Analog::log(\n                    'Unable to add missing preferences.' . $e->getMessage(),\n                    Analog::WARNING\n                );\n                return false;\n            }\n\n            Analog::log(\n                'Missing preferences were successfully stored into database.',\n                Analog::INFO\n            );\n        }\n    }\n\n    /**\n     * Load current preferences from database.\n     *\n     * @return boolean\n     */\n    public function load()\n    {\n        $this->prefs = array();\n\n        try {\n            $result = $this->zdb->selectAll(self::TABLE);\n            foreach ($result as $pref) {\n                $this->prefs[$pref->nom_pref] = $pref->val_pref;\n            }\n            $this->socials = Social::getListForMember(null);\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Preferences cannot be loaded. Galette should not work without ' .\n                'preferences. Exiting.',\n                Analog::URGENT\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Set default preferences at install time\n     *\n     * @param string $lang      language selected at install screen\n     * @param string $adm_login admin login entered at install time\n     * @param string $adm_pass  admin password entered at install time\n     *\n     * @return boolean|\\Exception\n     */\n    public function installInit($lang, $adm_login, $adm_pass)\n    {\n        try {\n            //first, we drop all values\n            $delete = $this->zdb->delete(self::TABLE);\n            $this->zdb->execute($delete);\n\n            //we then replace default values with the ones user has selected\n            $values = self::$defaults;\n            $values['pref_lang'] = $lang;\n            $values['pref_admin_login'] = $adm_login;\n            $values['pref_admin_pass'] = $adm_pass;\n            $values['pref_card_year'] = date('Y');\n\n            $insert = $this->zdb->insert(self::TABLE);\n            $insert->values(\n                array(\n                    'nom_pref'  => ':nom_pref',\n                    'val_pref'  => ':val_pref'\n                )\n            );\n            $stmt = $this->zdb->sql->prepareStatementForSqlObject($insert);\n\n            foreach ($values as $k => $v) {\n                $stmt->execute(\n                    array(\n                        'nom_pref' => $k,\n                        'val_pref' => $v\n                    )\n                );\n            }\n\n            Analog::log(\n                'Default preferences were successfully stored into database.',\n                Analog::INFO\n            );\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to initialize default preferences.' . $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Returns all preferences keys\n     *\n     * @return array\n     */\n    public function getFieldsNames()\n    {\n        return array_keys($this->prefs);\n    }\n\n    /**\n     * Check values\n     *\n     * @param array $values Values\n     * @param Login $login  Logged in user\n     *\n     * @return boolean\n     */\n    public function check(array $values, Login $login)\n    {\n        $insert_values = array();\n        if ($login->isSuperAdmin() && GALETTE_MODE !== Galette::MODE_DEMO) {\n            $this->required[] = 'pref_admin_login';\n        }\n\n        // obtain fields\n        foreach ($this->getFieldsNames() as $fieldname) {\n            if (isset($values[$fieldname])) {\n                $value = trim($values[$fieldname]);\n            } else {\n                $value = \"\";\n            }\n\n            $insert_values[$fieldname] = $value;\n        }\n\n        //cleanup fields for demo\n        if (GALETTE_MODE == Galette::MODE_DEMO) {\n            unset(\n                $insert_values['pref_admin_login'],\n                $insert_values['pref_admin_pass'],\n                $insert_values['pref_mail_method']\n            );\n        }\n\n        // missing relations\n        if (\n            GALETTE_MODE !== Galette::MODE_DEMO\n            && isset($insert_values['pref_mail_method'])\n        ) {\n            if ($insert_values['pref_mail_method'] > GaletteMail::METHOD_DISABLED) {\n                if (\n                    !isset($insert_values['pref_email_nom'])\n                    || $insert_values['pref_email_nom'] == ''\n                ) {\n                    $this->errors[] = _T(\"- You must indicate a sender name for emails!\");\n                }\n                if (\n                    !isset($insert_values['pref_email'])\n                    || $insert_values['pref_email'] == ''\n                ) {\n                    $this->errors[] = _T(\"- You must indicate an email address Galette should use to send emails!\");\n                }\n                if ($insert_values['pref_mail_method'] == GaletteMail::METHOD_SMTP) {\n                    if (\n                        !isset($insert_values['pref_mail_smtp_host'])\n                        || $insert_values['pref_mail_smtp_host'] == ''\n                    ) {\n                        $this->errors[] = _T(\"- You must indicate the SMTP server you want to use!\");\n                    }\n                }\n                if (\n                    $insert_values['pref_mail_method'] == GaletteMail::METHOD_GMAIL\n                    || ($insert_values['pref_mail_method'] == GaletteMail::METHOD_SMTP\n                    && $insert_values['pref_mail_smtp_auth'])\n                ) {\n                    if (\n                        !isset($insert_values['pref_mail_smtp_user'])\n                        || trim($insert_values['pref_mail_smtp_user']) == ''\n                    ) {\n                        $this->errors[] = _T(\"- You must provide a login for SMTP authentication.\");\n                    }\n                    if (\n                        !isset($insert_values['pref_mail_smtp_password'])\n                        || ($insert_values['pref_mail_smtp_password']) == ''\n                    ) {\n                        $this->errors[] = _T(\"- You must provide a password for SMTP authentication.\");\n                    }\n                }\n            }\n        }\n\n        if (\n            isset($insert_values['pref_beg_membership'])\n            && $insert_values['pref_beg_membership'] != ''\n            && isset($insert_values['pref_membership_ext'])\n            && $insert_values['pref_membership_ext'] != ''\n        ) {\n            $this->errors[] = _T(\"- Default membership extention and beginning of membership are mutually exclusive.\");\n        }\n\n        if (\n            isset($insert_values['pref_membership_offermonths'])\n            && (int)$insert_values['pref_membership_offermonths'] > 0\n            && isset($insert_values['pref_membership_ext'])\n            && $insert_values['pref_membership_ext'] != ''\n        ) {\n            $this->errors[] = _T(\"- Offering months is only compatible with beginning of membership.\");\n        }\n\n        // missing required fields?\n        foreach ($this->required as $val) {\n            if (!isset($values[$val]) || isset($values[$val]) && trim($values[$val]) == '') {\n                $this->errors[] = str_replace(\n                    '%field',\n                    $val,\n                    _T(\"- Mandatory field %field empty.\")\n                );\n            }\n        }\n\n        if (GALETTE_MODE !== Galette::MODE_DEMO && isset($values['pref_admin_pass_check'])) {\n            // Check passwords. Hash will be done into the Preferences class\n            if (strcmp($insert_values['pref_admin_pass'], $values['pref_admin_pass_check']) != 0) {\n                $this->errors[] = _T(\"Passwords mismatch\");\n            }\n        }\n\n        //postal address\n        if (isset($insert_values['pref_postal_adress'])) {\n            $value = $insert_values['pref_postal_adress'];\n            if ($value == Preferences::POSTAL_ADDRESS_FROM_PREFS) {\n                if (isset($insert_values['pref_postal_staff_member'])) {\n                    unset($insert_values['pref_postal_staff_member']);\n                }\n            } elseif ($value == Preferences::POSTAL_ADDRESS_FROM_STAFF) {\n                if (!isset($value) || $value < 1) {\n                    $this->errors[] = _T(\"You have to select a staff member\");\n                }\n            }\n        }\n\n        // update preferences\n        foreach ($insert_values as $champ => $valeur) {\n            if (\n                $login->isSuperAdmin()\n                || (!$login->isSuperAdmin()\n                && ($champ != 'pref_admin_pass' && $champ != 'pref_admin_login'))\n            ) {\n                if (\n                    ($champ == \"pref_admin_pass\" && $_POST['pref_admin_pass'] != '')\n                    || ($champ != \"pref_admin_pass\")\n                ) {\n                    $this->$champ = $valeur;\n                }\n            }\n        }\n\n        $this->checkSocials($values);\n\n        return 0 === count($this->errors);\n    }\n\n    /**\n     * Validate value of a field\n     *\n     * @param string $fieldname Field name\n     * @param mixed  $value     Value to be set\n     *\n     * @return mixed\n     */\n    public function validateValue($fieldname, $value)\n    {\n        global $login;\n\n        switch ($fieldname) {\n            case 'pref_email':\n            case 'pref_email_newadh':\n            case 'pref_email_reply_to':\n                //check emails validity\n                //may be a comma separated list of valid emails identifiers:\n                //\"The Name <mail@domain.com>,The Other <other@mail.com>\" expect for reply_to.\n                $addresses = [];\n                if (trim($value) != '') {\n                    if ($fieldname == 'pref_email_newadh') {\n                        $addresses = explode(',', $value);\n                    } else {\n                        $addresses = [$value];\n                    }\n                }\n                foreach ($addresses as $address) {\n                    if (!GaletteMail::isValidEmail($address)) {\n                        $msg = str_replace('%s', $address, _T(\"Invalid E-Mail address: %s\"));\n                        Analog::log($msg, Analog::WARNING);\n                        $this->errors[] = $msg;\n                    }\n                }\n                break;\n            case 'pref_admin_login':\n                if (GALETTE_MODE === Galette::MODE_DEMO) {\n                    Analog::log(\n                        'Trying to set superadmin login while in DEMO.',\n                        Analog::WARNING\n                    );\n                } else {\n                    if (strlen($value) < 4) {\n                        $this->errors[] = _T(\"- The username must be composed of at least 4 characters!\");\n                    } else {\n                        //check if login is already taken\n                        if ($login->loginExists($value)) {\n                            $this->errors[] = _T(\"- This username is already used by another member !\");\n                        }\n                    }\n                }\n                break;\n            case 'pref_numrows':\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- The numbers and measures have to be integers!\");\n                }\n                break;\n            case 'pref_etiq_marges_h':\n            case 'pref_etiq_marges_v':\n            case 'pref_etiq_hspace':\n            case 'pref_etiq_vspace':\n            case 'pref_etiq_hsize':\n            case 'pref_etiq_vsize':\n            case 'pref_etiq_cols':\n            case 'pref_etiq_rows':\n            case 'pref_etiq_corps':\n            case 'pref_card_marges_v':\n            case 'pref_card_marges_h':\n            case 'pref_card_hspace':\n            case 'pref_card_vspace':\n                // prevent division by zero\n                if ($fieldname == 'pref_numrows' && $value == '0') {\n                    $value = '10';\n                }\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- The numbers and measures have to be integers!\");\n                }\n                break;\n            case 'pref_card_tcol':\n            case 'pref_card_scol':\n            case 'pref_card_bcol':\n            case 'pref_card_hcol':\n                $matches = [];\n                if (!preg_match(\"/^(#)?([0-9A-F]{6})$/i\", $value, $matches)) {\n                    // Set strip background colors to black or white (for tcol)\n                    $value = ($fieldname == 'pref_card_tcol' ? '#FFFFFF' : '#000000');\n                } else {\n                    $value = '#' . $matches[2];\n                }\n                break;\n            case 'pref_admin_pass':\n                if (GALETTE_MODE == Galette::MODE_DEMO) {\n                    Analog::log(\n                        'Trying to set superadmin pass while in DEMO.',\n                        Analog::WARNING\n                    );\n                } else {\n                    $pwcheck = new \\Galette\\Util\\Password($this);\n                    $pwcheck->addPersonalInformation(['pref_admin_login' => $this->pref_admin_login]);\n                    if (!$pwcheck->isValid($value)) {\n                        $this->errors = array_merge(\n                            $this->errors,\n                            $pwcheck->getErrors()\n                        );\n                    }\n                }\n                break;\n            case 'pref_membership_ext':\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- Invalid number of months of membership extension.\");\n                }\n                break;\n            case 'pref_beg_membership':\n                $beg_membership = explode(\"/\", $value);\n                if (count($beg_membership) != 2) {\n                    $this->errors[] = _T(\"- Invalid format of beginning of membership.\");\n                } else {\n                    $now = getdate();\n                    if (!checkdate($beg_membership[1], $beg_membership[0], $now['year'])) {\n                        $this->errors[] = _T(\"- Invalid date for beginning of membership.\");\n                    }\n                }\n                break;\n            case 'pref_membership_offermonths':\n                if (!is_numeric($value) || $value < 0) {\n                    $this->errors[] = _T(\"- Invalid number of offered months.\");\n                }\n                break;\n            case 'pref_card_year':\n                if ($value !== 'DEADLINE' && !preg_match('/^(?:\\d{4}|\\d{2})(\\D?)(?:\\d{4}|\\d{2})$/', $value)) {\n                    $this->errors[] = _T(\"- Invalid year for cards.\");\n                }\n                break;\n            case 'pref_footer':\n                $value = $this->cleanHtmlValue($value);\n                break;\n        }\n\n        return $value;\n    }\n\n    /**\n     * Will store all preferences in the database\n     *\n     * @return boolean\n     */\n    public function store()\n    {\n        try {\n            $this->zdb->connection->beginTransaction();\n            $update = $this->zdb->update(self::TABLE);\n            $update->set(\n                array(\n                    'val_pref'  => ':val_pref'\n                )\n            )->where->equalTo('nom_pref', ':nom_pref');\n\n            $stmt = $this->zdb->sql->prepareStatementForSqlObject($update);\n\n            foreach (self::$defaults as $k => $v) {\n                if (\n                    GALETTE_MODE == Galette::MODE_DEMO\n                    && in_array($k, ['pref_admin_pass', 'pref_admin_login', 'pref_mail_method'])\n                ) {\n                    continue;\n                }\n                Analog::log('Storing ' . $k, Analog::DEBUG);\n\n                $value = $this->prefs[$k];\n                //do not store pdf_adhesion_form, it's designed to be overriden by plugin\n                if ($k === 'pref_adhesion_form') {\n                    if (trim($v) == '') {\n                        //Reset to default, should not be empty\n                        $v = self::$defaults['pref_adhesion_form'];\n                    }\n                    $value = $v;\n                }\n\n                $stmt->execute(\n                    array(\n                        'val_pref'  => $value,\n                        'nom_pref'  => $k\n                    )\n                );\n            }\n            $this->zdb->connection->commit();\n            Analog::log(\n                'Preferences were successfully stored into database.',\n                Analog::INFO\n            );\n\n            $this->storeSocials(null);\n\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n\n            $messages = array();\n            do {\n                $messages[] = $e->getMessage();\n            } while ($e = $e->getPrevious());\n\n            Analog::log(\n                'Unable to store preferences | ' . print_r($messages, true),\n                Analog::WARNING\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Returns postal address\n     *\n     * @return string postal address\n     */\n    public function getPostalAddress()\n    {\n        $regs = array(\n            '/%name/',\n            '/%complement/',\n            '/%address/',\n            '/%zip/',\n            '/%town/',\n            '/%country/',\n        );\n\n        $replacements = null;\n\n        if ($this->prefs['pref_postal_adress'] == self::POSTAL_ADDRESS_FROM_PREFS) {\n            $_address = $this->prefs['pref_adresse'];\n            if ($this->prefs['pref_adresse2'] && $this->prefs['pref_adresse2'] != '') {\n                $_address .= \"\\n\" . $this->prefs['pref_adresse2'];\n            }\n            $replacements = array(\n                $this->prefs['pref_nom'],\n                \"\\n\",\n                $_address,\n                $this->prefs['pref_cp'],\n                $this->prefs['pref_ville'],\n                $this->prefs['pref_pays']\n            );\n        } else {\n            //get selected staff member address\n            $adh = new Adherent($this->zdb, (int)$this->prefs['pref_postal_staff_member']);\n            $_complement = preg_replace(\n                array('/%name/', '/%status/'),\n                array($this->prefs['pref_nom'], $adh->sstatus),\n                _T(\"%name association's %status\")\n            ) . \"\\n\";\n            $_address = $adh->address;\n            if ($adh->address_continuation && $adh->address_continuation != '') {\n                $_address .= \"\\n\" . $adh->address_continuation;\n            }\n            $replacements = array(\n                $adh->sfullname . \"\\n\",\n                $_complement,\n                $_address,\n                $adh->zipcode,\n                $adh->town,\n                $adh->country\n            );\n        }\n\n        /*FIXME: i18n fails :/ */\n        /*$r = preg_replace(\n            $regs,\n            $replacements,\n            _T(\"%name\\n%complement\\n%address\\n%zip %town - %country\")\n        );*/\n        $r = preg_replace(\n            $regs,\n            $replacements,\n            \"%name%complement%address\\n%zip %town - %country\"\n        );\n        return $r;\n    }\n\n    /**\n     * Are public pages visibles?\n     *\n     * @param Authentication $login Authenticaqtion instance\n     *\n     * @return boolean\n     */\n    public function showPublicPages(Authentication $login)\n    {\n        if ($this->prefs['pref_bool_publicpages']) {\n            //if public pages are actives, let's check if we\n            //display them for curent call\n            switch ($this->prefs['pref_publicpages_visibility']) {\n                case self::PUBLIC_PAGES_VISIBILITY_PUBLIC:\n                    //pages are publically visibles\n                    return true;\n                    break;\n                case self::PUBLIC_PAGES_VISIBILITY_RESTRICTED:\n                    //pages should be displayed only for up to date members\n                    if (\n                        $login->isUp2Date()\n                        || $login->isAdmin()\n                        || $login->isStaff()\n                    ) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                    break;\n                case self::PUBLIC_PAGES_VISIBILITY_PRIVATE:\n                    //pages should be displayed only for staff and admins\n                    if ($login->isAdmin() || $login->isStaff()) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                    break;\n                default:\n                    //should never be there\n                    return false;\n                    break;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Global getter method\n     *\n     * @param string $name name of the property we want to retrive\n     *\n     * @return false|object the called property\n     */\n    public function __get($name)\n    {\n        $forbidden = array('defaults');\n        $virtuals = array('vpref_email_newadh');\n\n        if (!in_array($name, $forbidden) && isset($this->prefs[$name])) {\n            if (\n                GALETTE_MODE === Galette::MODE_DEMO\n                && $name == 'pref_mail_method'\n            ) {\n                return GaletteMail::METHOD_DISABLED;\n            } elseif ($name == 'pref_footer') {\n                return $this->cleanHtmlValue($this->prefs[$name]);\n            } else {\n                if ($name == 'pref_adhesion_form' && $this->prefs[$name] == '') {\n                    $this->prefs[$name] = self::$defaults['pref_adhesion_form'];\n                }\n                $value = $this->prefs[$name];\n                if (TYPE_DB === \\Galette\\Core\\Db::PGSQL) {\n                    if ($value === 'f') {\n                        $value = false;\n                    }\n                }\n\n                if (in_array($name, ['pref_email_newadh'])) {\n                    $values = explode(',', $value);\n                    $value = $values[0]; //take first as default\n                }\n\n                return $value;\n            }\n        } elseif (in_array($name, $virtuals)) {\n            $virtual = str_replace('vpref_', 'pref_', $name);\n            return explode(',', $this->prefs[$virtual]);\n        } elseif ($name === 'socials') {\n            return $this->socials;\n        } else {\n            Analog::log(\n                'Preference `' . $name . '` is not set or is forbidden',\n                Analog::INFO\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Get default preferences\n     *\n     * @return array\n     */\n    public function getDefaults()\n    {\n        return self::$defaults;\n    }\n\n    /**\n     * Global setter method\n     *\n     * @param string $name  name of the property we want to assign a value to\n     * @param object $value a relevant value for the property\n     *\n     * @return void\n     */\n    public function __set($name, $value)\n    {\n        //does this pref exists ?\n        if (!array_key_exists($name, self::$defaults)) {\n            Analog::log(\n                'Trying to set a preference value which does not seem to exist ('\n                . $name . ')',\n                Analog::WARNING\n            );\n            return false;\n        }\n\n        if (\n            $name == 'pref_email'\n            || $name == 'pref_email_newadh'\n            || $name == 'pref_email_reply_to'\n        ) {\n            if (GALETTE_MODE === Galette::MODE_DEMO) {\n                Analog::log(\n                    'Trying to set pref_email while in DEMO.',\n                    Analog::WARNING\n                );\n                return;\n            }\n        }\n\n        // now, check validity\n        if ($value != '') {\n            $value = $this->validateValue($name, $value);\n        }\n\n        //some values need to be changed (eg. passwords)\n        if ($name == 'pref_admin_pass') {\n            $value = password_hash($value, PASSWORD_BCRYPT);\n        }\n\n        //okay, let's update value\n        $this->prefs[$name] = $value;\n    }\n\n    /**\n     * Get instance URL from configuration (if set) or guessed if not\n     *\n     * @return string\n     */\n    public function getURL()\n    {\n        $url = null;\n        if (isset($this->prefs['pref_galette_url']) && !empty($this->prefs['pref_galette_url'])) {\n            $url = $this->prefs['pref_galette_url'];\n        } else {\n            $url = $this->getDefaultURL();\n        }\n        return $url;\n    }\n\n    /**\n     * Get default URL (when not set by user in preferences)\n     *\n     * @return string\n     */\n    public function getDefaultURL()\n    {\n        $scheme = (isset($_SERVER['HTTPS']) ? 'https' : 'http');\n        $uri = $scheme . '://' . $_SERVER['HTTP_HOST'];\n        return $uri;\n    }\n\n    /**\n     * Get last telemetry date\n     *\n     * @return string\n     */\n    public function getTelemetryDate(): string\n    {\n        $rawdate = $this->prefs['pref_telemetry_date'];\n        if ($rawdate) {\n            $date = new \\DateTime($rawdate);\n            return $date->format(_T('Y-m-d H:i:s'));\n        } else {\n            return _T('Never');\n        }\n    }\n\n    /**\n     * Get last telemetry date\n     *\n     * @return string|null\n     */\n    public function getRegistrationDate()\n    {\n        $rawdate = $this->prefs['pref_registration_date'];\n        if ($rawdate) {\n            $date = new \\DateTime($rawdate);\n            return $date->format(_T('Y-m-d H:i:s'));\n        }\n\n        return null;\n    }\n\n    /**\n     * Check member cards sizes\n     * Always a A4/portrait\n     *\n     * @return array\n     */\n    public function checkCardsSizes()\n    {\n        $warning_detected = [];\n        //check page width\n        $max = 210;\n        //margins\n        $size = $this->pref_card_marges_h * 2;\n        //cards\n        $size += PdfMembersCards::getWidth() * PdfMembersCards::getCols();\n        //spacing\n        $size += $this->pref_card_hspace * (PdfMembersCards::getCols() - 1);\n        if ($size > $max) {\n            $warning_detected[] = _T('Current cards configuration may exceed page width!');\n        }\n\n        $max = 297;\n        //margins\n        $size = $this->pref_card_marges_v * 2;\n        //cards\n        $size += PdfMembersCards::getHeight() * PdfMembersCards::getRows();\n        //spacing\n        $size += $this->pref_card_vspace * (PdfMembersCards::getRows() - 1);\n        if ($size > $max) {\n            $warning_detected[] = _T('Current cards configuration may exceed page height!');\n        }\n\n        return $warning_detected;\n    }\n\n    /**\n     * Get errors\n     *\n     * @return array\n     */\n    public function getErrors()\n    {\n        return $this->errors;\n    }\n\n    /**\n     * Build legend array\n     *\n     * @return array\n     */\n    public function getLegend(): array\n    {\n        $legend = [];\n\n        $legend['main'] = [\n            'title'     => _T('Main information'),\n            'patterns'  => $this->getMainPatterns()\n        ];\n\n        $s_patterns = $this->getSignaturePatterns(false);\n        if (count($s_patterns)) {\n            $legend['socials'] = [\n                'title' => _T('Social networks'),\n                'patterns' => $this->getSignaturePatterns(false)\n            ];\n        }\n\n        return $legend;\n    }\n\n    /**\n     * Get email signature\n     *\n     * @return string\n     */\n    public function getMailSignature(): string\n    {\n        global $router;\n\n        $signature = $this->pref_mail_sign;\n\n        if (trim($signature) == '') {\n            return '';\n        }\n\n        $this->setPreferences($this)->setRouter($router);\n        $this->setPatterns(\n            $this->getMainPatterns() + $this->getSignaturePatterns()\n        );\n        $this\n            ->setMain()\n            ->setSocialReplacements();\n\n        $signature = $this->proceedReplacements($signature);\n\n        return \"\\r\\n-- \\r\\n\" . $signature;\n    }\n\n    /**\n     * Get patterns for mail signature\n     *\n     * @param boolean $legacy Whether to load legacy patterns\n     *\n     * @return array\n     */\n    protected function getSignaturePatterns($legacy = true): array\n    {\n        $s_patterns = [];\n        $social = new Social($this->zdb);\n\n        $types = $this->getCoreRegisteredTypes() + $social->getSystemTypes(false);\n\n        foreach ($types as $type) {\n            $s_patterns['asso_social_' . $type] = [\n                'title' => $social->getSystemType($type),\n                'pattern' => '/{ASSO_SOCIAL_' . strtoupper($type) . '}/'\n            ];\n        }\n\n        if ($legacy === true) {\n            $main = $this->getMainPatterns();\n            $s_patterns['_asso_name'] = [\n                'title'     => $main['asso_name']['title'],\n                'pattern'   => '/{NAME}/'\n            ];\n\n            $s_patterns['_asso_website'] = [\n                'title'     => $main['asso_website']['title'],\n                'pattern'   => '/{WEBSITE}/'\n            ];\n\n            foreach ([Social::FACEBOOK, Social::TWITTER, Social::LINKEDIN, Social::VIADEO] as $legacy_type) {\n                $s_patterns['_asso_social_' . $legacy_type] = [\n                    'title' => $s_patterns['asso_social_' . $legacy_type]['title'],\n                    'pattern' => '/{' . strtoupper($legacy_type) . '}/'\n                ];\n            }\n        }\n\n        return $s_patterns;\n    }\n\n    /**\n     * Set emails replacements\n     *\n     * @return $this\n     */\n    public function setSocialReplacements(): self\n    {\n        $replacements = [];\n\n        $done_replacements = $this->getReplacements();\n        $replacements['_asso_name'] = $done_replacements['asso_name'];\n        $replacements['asso_website'] = $this->pref_website;\n        $replacements['_asso_website'] = $replacements['asso_website'];\n\n        $social = new Social($this->zdb);\n        $types = $this->getCoreRegisteredTypes() + $social->getSystemTypes(false);\n\n        foreach ($types as $type) {\n            $replace_value = null;\n            $socials = Social::getListForMember(null, $type);\n            if (count($socials)) {\n                $replace_value = '';\n                foreach ($socials as $social) {\n                    if ($replace_value != '') {\n                        $replace_value .= ', ';\n                    }\n                    $replace_value .= $social->url;\n                }\n            }\n            $replacements['asso_social_' . strtolower($type)] = $replace_value;\n        }\n\n\n        foreach ([Social::FACEBOOK, Social::TWITTER, Social::LINKEDIN, Social::VIADEO] as $legacy_type) {\n            $replacements['_asso_social_' . $legacy_type] = $replacements['asso_social_' . $legacy_type];\n        }\n\n        $this->setReplacements($replacements);\n\n        return $this;\n    }\n\n    /**\n     * Purify HTML value\n     *\n     * @param string $value Value to clean\n     *\n     * @return string\n     */\n    public function cleanHtmlValue(string $value): string\n    {\n        $config = \\HTMLPurifier_Config::createDefault();\n        $config->set('Cache.SerializerPath', GALETTE_CACHE_DIR);\n        $purifier = new \\HTMLPurifier($config);\n        return $purifier->purify($value);\n    }\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Entitleds handling\n *\n * PHP version 5\n *\n * Copyright \u00a9 2007-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Entity\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-27\n */\n\nnamespace Galette\\Entity;\n\nuse Throwable;\nuse Analog\\Analog;\nuse Laminas\\Db\\Sql\\Expression;\nuse Galette\\Core\\Db;\nuse Galette\\Features\\I18n;\n\n/**\n * Entitled handling. Manage:\n *      - id\n *      - label\n *      - extra (that may differ from one entity to another)\n *\n * @category  Entity\n * @name      Entitled\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2007-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2007-10-27\n *\n * @property integer $id\n * @property string $label\n * @property string $libelle\n * @property mixed $third\n * @property mixed $extension\n */\n\nabstract class Entitled\n{\n    use I18n;\n\n    public const ID_NOT_EXITS = -1;\n\n    private $zdb;\n    private $table;\n    private $fpk;\n    private $flabel;\n    private $fthird;\n    private $used;\n\n    public static $fields;\n    protected static $defaults;\n\n    /** @var string|false */\n    protected $order_field = false;\n\n    private $id;\n    private $label;\n    private $third;\n\n    private $errors = array();\n\n    /**\n     * Default constructor\n     *\n     * @param Db     $zdb    Database\n     * @param string $table  Table name\n     * @param string $fpk    Primary key field name\n     * @param string $flabel Label fields name\n     * @param string $fthird The third field name\n     * @param string $used   Table name for isUsed function\n     * @param mixed  $args   Either an int or a resultset to load\n     */\n    public function __construct(Db $zdb, $table, $fpk, $flabel, $fthird, $used, $args = null)\n    {\n        $this->zdb = $zdb;\n        $this->table = $table;\n        $this->fpk = $fpk;\n        $this->flabel = $flabel;\n        $this->fthird = $fthird;\n        $this->used = $used;\n        if (is_int($args)) {\n            $this->load($args);\n        } elseif (is_object($args)) {\n            $this->loadFromRS($args);\n        }\n    }\n\n    /**\n     * Loads an entry from its id\n     *\n     * @param int $id Entry ID\n     *\n     * @return boolean true if query succeed, false otherwise\n     */\n    public function load($id)\n    {\n        try {\n            $select = $this->zdb->select($this->table);\n            $select->where([$this->fpk => $id]);\n\n            $results = $this->zdb->execute($select);\n            if ($results->count() > 0) {\n                $result = $results->current();\n                $this->loadFromRS($result);\n\n                return true;\n            } else {\n                Analog::log(\n                    'Unknown ID ' . $id,\n                    Analog::ERROR\n                );\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Cannot load ' . $this->getType() . ' from id `' . $id . '` | ' .\n                $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Populate object from a resultset row\n     *\n     * @param ResultSet $r the resultset row\n     *\n     * @return void\n     */\n    private function loadFromRS($r)\n    {\n        $pk = $this->fpk;\n        $this->id = $r->$pk;\n        $flabel = $this->flabel;\n        $this->label = $r->$flabel;\n        $fthird = $this->fthird;\n        $this->third = $r->$fthird;\n    }\n\n    /**\n     * Set defaults at install time\n     *\n     * @return boolean\n     * @throws Throwable\n     */\n    public function installInit()\n    {\n        $class = get_class($this);\n\n        try {\n            //first, we drop all values\n            $delete = $this->zdb->delete($this->table);\n            $this->zdb->execute($delete);\n\n            $values = array();\n            foreach ($class::$fields as $key => $f) {\n                $values[$f] = ':' . $key;\n            }\n\n            $insert = $this->zdb->insert($this->table);\n            $insert->values($values);\n            $stmt = $this->zdb->sql->prepareStatementForSqlObject($insert);\n\n            $this->zdb->handleSequence(\n                $this->table,\n                count(static::$defaults)\n            );\n\n            $fnames = array_values($values);\n            foreach ($class::$defaults as $d) {\n                $val = null;\n                if (isset($d['priority'])) {\n                    $val = $d['priority'];\n                } else {\n                    $val = $d['extension'];\n                }\n\n                $stmt->execute(\n                    array(\n                        $fnames[0]  => $d['id'],\n                        $fnames[1]  => $d['libelle'],\n                        $fnames[2]  => $val\n                    )\n                );\n            }\n\n            Analog::log(\n                'Defaults (' . $this->getType() .\n                ') were successfully stored into database.',\n                Analog::INFO\n            );\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to initialize defaults (' . $this->getType() . ').' .\n                $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Get list in an array built as:\n     * $array[id] = \"translated label\"\n     *\n     * @param boolean|null $extent Filter on (non) cotisations types\n     *\n     * @return array|false\n     */\n    public function getList(bool $extent = null)\n    {\n        $list = array();\n\n        try {\n            $select = $this->zdb->select($this->table);\n            $fields = array($this->fpk, $this->flabel);\n            if (\n                $this->order_field !== false\n                && $this->order_field !== $this->fpk\n                && $this->order_field !== $this->flabel\n            ) {\n                $fields[] = $this->order_field;\n            }\n            $select->quantifier('DISTINCT');\n            $select->columns($fields);\n\n            if ($this->order_field !== false) {\n                $select->order($this->order_field, $this->fpk);\n            }\n            if ($extent !== null) {\n                if ($extent === true) {\n                    $select->where(array($this->fthird => new Expression('true')));\n                } elseif ($extent === false) {\n                    $select->where(array($this->fthird => new Expression('false')));\n                }\n            }\n\n            $results = $this->zdb->execute($select);\n\n            foreach ($results as $r) {\n                $fpk = $this->fpk;\n                $flabel = $this->flabel;\n                $list[$r->$fpk] = _T($r->$flabel);\n            }\n            return $list;\n        } catch (Throwable $e) {\n            Analog::log(\n                __METHOD__ . ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Complete list\n     *\n     * @return array of all objects if succeeded, false otherwise\n     */\n    public function getCompleteList()\n    {\n        $list = array();\n\n        try {\n            $select = $this->zdb->select($this->table);\n            if ($this->order_field !== false) {\n                $select->order(array($this->order_field, $this->fpk));\n            }\n\n            $results = $this->zdb->execute($select);\n\n            if ($results->count() == 0) {\n                Analog::log(\n                    'No entries (' . $this->getType() . ') defined in database.',\n                    Analog::INFO\n                );\n            } else {\n                $pk = $this->fpk;\n                $flabel = $this->flabel;\n                $fprio = $this->fthird;\n\n                foreach ($results as $r) {\n                    $list[$r->$pk] = array(\n                        'name'  => _T($r->$flabel),\n                        'extra' => $r->$fprio\n                    );\n                }\n            }\n            return $list;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Cannot list entries (' . $this->getType() .\n                ') | ' . $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Get a entry\n     *\n     * @param integer $id Entry ID\n     *\n     * @return mixed|false Row if succeed ; false: no such id\n     */\n    public function get($id)\n    {\n        if (!is_numeric($id)) {\n            $this->errors[] = _T(\"ID must be an integer!\");\n            return false;\n        }\n\n        try {\n            $select = $this->zdb->select($this->table);\n            $select->where([$this->fpk => $id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n\n            if (!$result) {\n                $this->errors[] = _T(\"Label does not exist\");\n                return false;\n            }\n\n            return $result;\n        } catch (Throwable $e) {\n            Analog::log(\n                __METHOD__ . ' | ' . $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Get a label\n     *\n     * @param integer $id         Id\n     * @param boolean $translated Do we want translated or original label?\n     *                            Defaults to true.\n     *\n     * @return string\n     */\n    public function getLabel($id, $translated = true)\n    {\n        $res = $this->get($id);\n        if ($res === false) {\n            //get() already logged\n            return self::ID_NOT_EXITS;\n        };\n        $field = $this->flabel;\n        return ($translated) ? _T($res->$field) : $res->$field;\n    }\n\n    /**\n     * Get an ID from a label\n     *\n     * @param string $label The label\n     *\n     * @return int|false Return id if it exists false otherwise\n     */\n    public function getIdByLabel($label)\n    {\n        try {\n            $pk = $this->fpk;\n            $select = $this->zdb->select($this->table);\n            $select->columns(array($pk))\n                ->where(array($this->flabel => $label));\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            if ($result) {\n                return $result->$pk;\n            } else {\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to retrieve ' . $this->getType() . ' from label `' .\n                $label . '` | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Add a new entry\n     *\n     * @param string  $label The label\n     * @param integer $extra Extra values (priority for statuses,\n     *                       extension for contributions types, ...)\n     *\n     * @return integer id if success ; -1 : DB error ; -2 : label already exists\n     */\n    public function add($label, $extra)\n    {\n        // Avoid duplicates.\n        $label = strip_tags($label);\n        $ret = $this->getIdByLabel($label);\n\n        if ($ret !== false) {\n            Analog::log(\n                $this->getType() . ' with label `' . $label . '` already exists',\n                Analog::WARNING\n            );\n            return -2;\n        }\n\n        try {\n            $this->zdb->connection->beginTransaction();\n            $values = array(\n                $this->flabel  => $label,\n                $this->fthird  => $extra\n            );\n\n            $insert = $this->zdb->insert($this->table);\n            $insert->values($values);\n\n            $ret = $this->zdb->execute($insert);\n\n            if ($ret->count() > 0) {\n                Analog::log(\n                    'New ' . $this->getType() . ' `' . $label .\n                    '` added successfully.',\n                    Analog::INFO\n                );\n\n                $this->id = $this->zdb->getLastGeneratedValue($this);\n\n                $this->addTranslation($label);\n            } else {\n                throw new \\Exception('New ' . $this->getType() . ' not added.');\n            }\n            $this->zdb->connection->commit();\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Unable to add new entry `' . $label . '` | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Update in database.\n     *\n     * @param integer $id    Entry ID\n     * @param string  $label The label\n     * @param integer $extra Extra values (priority for statuses,\n     *                       extension for contributions types, ...)\n     *\n     * @return ID_NOT_EXITS|boolean\n     */\n    public function update($id, $label, $extra)\n    {\n        $label = strip_tags($label);\n        $ret = $this->get($id);\n        if (!$ret) {\n            /* get() already logged and set $this->error. */\n            return self::ID_NOT_EXITS;\n        }\n\n        $class = get_class($this);\n\n        try {\n            $oldlabel = $ret->{$this->flabel};\n            $this->zdb->connection->beginTransaction();\n            $values = array(\n                $this->flabel  => $label,\n                $this->fthird  => $extra\n            );\n\n            $update = $this->zdb->update($this->table);\n            $update->set($values);\n            $update->where([$this->fpk => $id]);\n\n            $ret = $this->zdb->execute($update);\n\n            if ($oldlabel != $label) {\n                $this->deleteTranslation($oldlabel);\n                $this->addTranslation($label);\n            }\n\n            Analog::log(\n                $this->getType() . ' #' . $id . ' updated successfully.',\n                Analog::INFO\n            );\n            $this->zdb->connection->commit();\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Unable to update ' . $this->getType() . ' #' . $id . ' | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Delete entry\n     *\n     * @param integer $id Entry ID\n     *\n     * @return ID_NOT_EXITS|boolean\n     */\n    public function delete($id)\n    {\n        $ret = $this->get($id);\n        if (!$ret) {\n            /* get() already logged */\n            return self::ID_NOT_EXITS;\n        }\n\n        if ($this->isUsed($id)) {\n            $this->errors[] = _T(\"Cannot delete this label: it's still used\");\n            return false;\n        }\n\n        try {\n            $this->zdb->connection->beginTransaction();\n            $delete = $this->zdb->delete($this->table);\n            $delete->where([$this->fpk => $id]);\n\n            $this->zdb->execute($delete);\n            $this->deleteTranslation($ret->{$this->flabel});\n\n            Analog::log(\n                $this->getType() . ' ' . $id . ' deleted successfully.',\n                Analog::INFO\n            );\n\n            $this->zdb->connection->commit();\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Unable to delete ' . $this->getType() . ' ' . $id .\n                ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Check if this entry is used.\n     *\n     * @param integer $id Entry ID\n     *\n     * @return boolean\n     */\n    public function isUsed($id)\n    {\n        try {\n            $select = $this->zdb->select($this->used);\n            $select->where([$this->fpk => $id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n\n            if ($result !== null) {\n                return true;\n            } else {\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to check if ' . $this->getType . ' `' . $id .\n                '` is used. | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            //in case of error, we consider that it is used, to avoid errors\n            return true;\n        }\n    }\n\n    /**\n     * Get textual type representation\n     *\n     * @return string\n     */\n    abstract protected function getType();\n\n    /**\n     * Get translated textual representation\n     *\n     * @return string\n     */\n    abstract public function getI18nType();\n\n    /**\n     * Global getter method\n     *\n     * @param string $name name of the property we want to retrive\n     *\n     * @return false|object the called property\n     */\n    public function __get($name)\n    {\n        $forbidden = array();\n        $virtuals = array('extension', 'libelle');\n        if (\n            in_array($name, $virtuals)\n            || !in_array($name, $forbidden)\n            && isset($this->$name)\n        ) {\n            switch ($name) {\n                case 'libelle':\n                    return _T($this->label);\n                    break;\n                case 'extension':\n                    return $this->third;\n                    break;\n                default:\n                    return $this->$name;\n                    break;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Get errors\n     *\n     * @return array\n     */\n    public function getErrors(): array\n    {\n        return $this->errors;\n    }\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Title\n *\n * PHP version 5\n *\n * Copyright \u00a9 2013-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Entity\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2013-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7.4dev - 2013-01-27\n */\n\nnamespace Galette\\Entity;\n\nuse Throwable;\nuse Analog\\Analog;\n\n/**\n * Title\n *\n * @category  Entity\n * @name      Title\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2009-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2009-03-04\n */\n\nclass Title\n{\n    public const TABLE = 'titles';\n    public const PK = 'id_title';\n\n    private $id;\n    private $short;\n    private $long;\n\n    public const MR = 1;\n    public const MRS = 2;\n    public const MISS = 3;\n\n    /**\n     * Main constructor\n     *\n     * @param mixed $args Arguments\n     */\n    public function __construct($args = null)\n    {\n        if (is_int($args)) {\n            $this->load($args);\n        } elseif ($args !== null && is_object($args)) {\n            $this->loadFromRs($args);\n        }\n    }\n\n    /**\n     * Load a title from its identifier\n     *\n     * @param int $id Identifier\n     *\n     * @return void\n     */\n    private function load($id)\n    {\n        global $zdb;\n        try {\n            $select = $zdb->select(self::TABLE);\n            $select->limit(1)->where([self::PK => $id]);\n\n            $results = $zdb->execute($select);\n            $res = $results->current();\n\n            $this->id = $id;\n            $this->short = $res->short_label;\n            $this->long = $res->long_label;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred loading title #' . $id . \"Message:\\n\" .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Load title from a db ResultSet\n     *\n     * @param ResultSet $rs ResultSet\n     *\n     * @return void\n     */\n    private function loadFromRs($rs)\n    {\n        $pk = self::PK;\n        $this->id = $rs->$pk;\n        $this->short = $rs->short_label;\n        if ($rs->long_label === 'NULL') {\n            //mysql's null...\n            $this->long = null;\n        } else {\n            $this->long = $rs->long_label;\n        }\n    }\n\n    /**\n     * Store title in database\n     *\n     * @param Db $zdb Database instance\n     *\n     * @return boolean\n     */\n    public function store($zdb)\n    {\n        $data = array(\n            'short_label'   => strip_tags($this->short),\n            'long_label'    => strip_tags($this->long)\n        );\n        try {\n            if ($this->id !== null && $this->id > 0) {\n                $update = $zdb->update(self::TABLE);\n                $update->set($data)->where([self::PK => $this->id]);\n                $zdb->execute($update);\n            } else {\n                $insert = $zdb->insert(self::TABLE);\n                $insert->values($data);\n                $add = $zdb->execute($insert);\n                if (!$add->count() > 0) {\n                    Analog::log('Not stored!', Analog::ERROR);\n                    return false;\n                }\n\n                $this->id = $zdb->getLastGeneratedValue($this);\n            }\n            return true;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred storing title: ' . $e->getMessage() .\n                \"\\n\" . print_r($data, true),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Remove current title\n     *\n     * @param Db $zdb Database instance\n     *\n     * @return boolean\n     */\n    public function remove($zdb)\n    {\n        $id = (int)$this->id;\n        if ($id === self::MR || $id === self::MRS) {\n            throw new \\RuntimeException(_T(\"You cannot delete Mr. or Mrs. titles!\"));\n        }\n\n        try {\n            $delete = $zdb->delete(self::TABLE);\n            $delete->where([self::PK => $id]);\n            $zdb->execute($delete);\n            Analog::log(\n                'Title #' . $id . ' (' . $this->short\n                . ') deleted successfully.',\n                Analog::INFO\n            );\n            return true;\n        } catch (\\RuntimeException $re) {\n            throw $re;\n        } catch (Throwable $e) {\n            Analog::log(\n                'Unable to delete title ' . $id . ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Getter\n     *\n     * @param string $name Property name\n     *\n     * @return mixed\n     */\n    public function __get($name)\n    {\n        global $lang;\n\n        switch ($name) {\n            case 'id':\n                return $this->$name;\n                break;\n            case 'short':\n            case 'long':\n                if (\n                    $name === 'long'\n                    && ($this->long == null || trim($this->long) === '')\n                ) {\n                    $name = 'short';\n                }\n                return $this->$name;\n                break;\n            case 'tshort':\n            case 'tlong':\n                $rname = null;\n                if ($name === 'tshort') {\n                    $rname = 'short';\n                } else {\n                    if ($this->long !== null && trim($this->long) !== '') {\n                        $rname = 'long';\n                    } else {\n                        //switch back to short version if long does not exists\n                        $rname = 'short';\n                    }\n                }\n                if (isset($lang) && isset($lang[$this->$rname])) {\n                    return _T($this->$rname);\n                } else {\n                    return $this->$rname;\n                }\n                break;\n            default:\n                Analog::log(\n                    'Unable to get Title property ' . $name,\n                    Analog::WARNING\n                );\n                break;\n        }\n    }\n\n    /**\n     * Setter\n     *\n     * @param string $name  Property name\n     * @param mixed  $value Property value\n     *\n     * @return void\n     */\n    public function __set($name, $value)\n    {\n        switch ($name) {\n            case 'short':\n            case 'long':\n                if (trim($value) === '') {\n                    Analog::log(\n                        'Trying to set empty value for title' . $name,\n                        Analog::WARNING\n                    );\n                } else {\n                    $this->$name = $value;\n                }\n                break;\n            default:\n                Analog::log(\n                    'Unable to set property ' . $name,\n                    Analog::WARNING\n                );\n                break;\n        }\n    }\n}\n", "<?php\n\n/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/**\n * Transaction class for galette\n *\n * PHP version 5\n *\n * Copyright \u00a9 2011-2021 The Galette Team\n *\n * This file is part of Galette (http://galette.tuxfamily.org).\n *\n * Galette is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Galette is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Galette. If not, see <http://www.gnu.org/licenses/>.\n *\n * @category  Entity\n * @package   Galette\n *\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2011-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2011-07-31\n */\n\nnamespace Galette\\Entity;\n\nuse Throwable;\nuse Analog\\Analog;\nuse Laminas\\Db\\Sql\\Expression;\nuse Galette\\Repository\\Contributions;\nuse Galette\\Core\\Db;\nuse Galette\\Core\\History;\nuse Galette\\Core\\Login;\nuse Galette\\Features\\Dynamics;\n\n/**\n * Transaction class for galette\n *\n * @category  Entity\n * @name      Transaction\n * @package   Galette\n * @author    Johan Cwiklinski <johan@x-tnd.be>\n * @copyright 2010-2021 The Galette Team\n * @license   http://www.gnu.org/licenses/gpl-3.0.html GPL License 3.0 or (at your option) any later version\n * @link      http://galette.tuxfamily.org\n * @since     Available since 0.7dev - 2010-03-11\n *\n * @property integer $id\n * @property date $date\n * @property integer $amount\n * @property string $description\n * @property integer $member\n */\nclass Transaction\n{\n    use Dynamics;\n\n    public const TABLE = 'transactions';\n    public const PK = 'trans_id';\n\n    private $_id;\n    private $_date;\n    private $_amount;\n    private $_description;\n    private $_member;\n\n    //fields list and their translation\n    private $_fields;\n\n    private $zdb;\n    private $login;\n\n    private $errors;\n\n    /**\n     * Default constructor\n     *\n     * @param Db                 $zdb   Database instance\n     * @param Login              $login Login instance\n     * @param null|int|ResultSet $args  Either a ResultSet row or its id for to load\n     *                                  a specific transaction, or null to just\n     *                                  instantiate object\n     */\n    public function __construct(Db $zdb, Login $login, $args = null)\n    {\n        $this->zdb = $zdb;\n        $this->login = $login;\n\n        /*\n         * Fields configuration. Each field is an array and must reflect:\n         * array(\n         *   (string)label,\n         *   (string) propname\n         * )\n         *\n         * I'd prefer a static private variable for this...\n         * But call to the _T function does not seem to be allowed there :/\n         */\n        $this->_fields = array(\n            self::PK            => array(\n                'label'    => null, //not a field in the form\n                'propname' => 'id'\n            ),\n            'trans_date'          => array(\n                'label'    => _T(\"Date:\"), //not a field in the form\n                'propname' => 'date'\n            ),\n            'trans_amount'       => array(\n                'label'    => _T(\"Amount:\"),\n                'propname' => 'amount'\n            ),\n            'trans_desc'          => array(\n                'label'    => _T(\"Description:\"),\n                'propname' => 'description'\n            ),\n            Adherent::PK          => array(\n                'label'    => _T(\"Originator:\"),\n                'propname' => 'member'\n            )\n        );\n        if ($args == null || is_int($args)) {\n            $this->_date = date(\"Y-m-d\");\n\n            if (is_int($args) && $args > 0) {\n                $this->load($args);\n            }\n        } elseif (is_object($args)) {\n            $this->loadFromRS($args);\n        }\n\n        $this->loadDynamicFields();\n    }\n\n    /**\n     * Loads a transaction from its id\n     *\n     * @param int $id the identifier for the transaction to load\n     *\n     * @return bool true if query succeed, false otherwise\n     */\n    public function load($id)\n    {\n        try {\n            $select = $this->zdb->select(self::TABLE, 't');\n            $select->where([self::PK => $id]);\n            $select->join(\n                array('a' => PREFIX_DB . Adherent::TABLE),\n                't.' . Adherent::PK . '=a.' . Adherent::PK,\n                array()\n            );\n\n            //restrict query on current member id if he's not admin nor staff member\n            if (!$this->login->isAdmin() && !$this->login->isStaff() && !$this->login->isGroupManager()) {\n                if (!$this->login->isLogged()) {\n                    Analog::log(\n                        'Non-logged-in users cannot load transaction id `' . $id,\n                        Analog::ERROR\n                    );\n                    return false;\n                }\n                $select->where\n                    ->nest()\n                        ->equalTo('a.' . Adherent::PK, $this->login->id)\n                        ->or\n                        ->equalTo('a.parent_id', $this->login->id)\n                    ->unnest()\n                    ->and\n                    ->equalTo('t.' . self::PK, $id)\n                ;\n            } else {\n                $select->where->equalTo(self::PK, $id);\n            }\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            if ($result) {\n                $this->loadFromRS($result);\n                return true;\n            } else {\n                Analog::log(\n                    'Transaction id `' . $id . '` does not exists',\n                    Analog::WARNING\n                );\n                return false;\n            }\n        } catch (Throwable $e) {\n            Analog::log(\n                'Cannot load transaction form id `' . $id . '` | ' .\n                $e->getMessage(),\n                Analog::WARNING\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Remove transaction (and all associated contributions) from database\n     *\n     * @param History $hist        History\n     * @param boolean $transaction Activate transaction mode (defaults to true)\n     *\n     * @return boolean\n     */\n    public function remove(History $hist, $transaction = true)\n    {\n        global $emitter;\n\n        try {\n            if ($transaction) {\n                $this->zdb->connection->beginTransaction();\n            }\n\n            //remove associated contributions if needeed\n            if ($this->getDispatchedAmount() > 0) {\n                $c = new Contributions($this->zdb, $this->login);\n                $clist = $c->getListFromTransaction($this->_id);\n                $cids = array();\n                foreach ($clist as $cid) {\n                    $cids[] = $cid->id;\n                }\n                $rem = $c->remove($cids, $hist, false);\n            }\n\n            //remove transaction itself\n            $delete = $this->zdb->delete(self::TABLE);\n            $delete->where([self::PK => $this->_id]);\n            $del = $this->zdb->execute($delete);\n            if ($del->count() > 0) {\n                $this->dynamicsRemove(true);\n            } else {\n                Analog::log(\n                    'Transaction has not been removed!',\n                    Analog::WARNING\n                );\n                return false;\n            }\n\n            if ($transaction) {\n                $this->zdb->connection->commit();\n            }\n\n            $emitter->emit('transaction.remove', $this);\n            return true;\n        } catch (Throwable $e) {\n            if ($transaction) {\n                $this->zdb->connection->rollBack();\n            }\n            Analog::log(\n                'An error occurred trying to remove transaction #' .\n                $this->_id . ' | ' . $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Populate object from a resultset row\n     *\n     * @param ResultSet $r the resultset row\n     *\n     * @return void\n     */\n    private function loadFromRS($r)\n    {\n        $pk = self::PK;\n        $this->_id = $r->$pk;\n        $this->_date = $r->trans_date;\n        $this->_amount = $r->trans_amount;\n        $this->_description = $r->trans_desc;\n        $adhpk = Adherent::PK;\n        $this->_member = (int)$r->$adhpk;\n\n        $this->loadDynamicFields();\n    }\n\n    /**\n     * Check posted values validity\n     *\n     * @param array $values   All values to check, basically the $_POST array\n     *                        after sending the form\n     * @param array $required Array of required fields\n     * @param array $disabled Array of disabled fields\n     *\n     * @return true|array\n     */\n    public function check($values, $required, $disabled)\n    {\n        $this->errors = array();\n\n        $fields = array_keys($this->_fields);\n        foreach ($fields as $key) {\n            //first, let's sanitize values\n            $key = strtolower($key);\n            $prop = '_' . $this->_fields[$key]['propname'];\n\n            if (isset($values[$key])) {\n                $value = trim($values[$key]);\n            } else {\n                $value = '';\n            }\n\n            // if the field is enabled, check it\n            if (!isset($disabled[$key])) {\n                // now, check validity\n                if ($value != '') {\n                    switch ($key) {\n                        // dates\n                        case 'trans_date':\n                            try {\n                                $d = \\DateTime::createFromFormat(__(\"Y-m-d\"), $value);\n                                if ($d === false) {\n                                    throw new \\Exception('Incorrect format');\n                                }\n                                $this->$prop = $d->format('Y-m-d');\n                            } catch (Throwable $e) {\n                                Analog::log(\n                                    'Wrong date format. field: ' . $key .\n                                    ', value: ' . $value . ', expected fmt: ' .\n                                    __(\"Y-m-d\") . ' | ' . $e->getMessage(),\n                                    Analog::INFO\n                                );\n                                $this->errors[] = str_replace(\n                                    array(\n                                        '%date_format',\n                                        '%field'\n                                    ),\n                                    array(\n                                        __(\"Y-m-d\"),\n                                        $this->getFieldLabel($key)\n                                    ),\n                                    _T(\"- Wrong date format (%date_format) for %field!\")\n                                );\n                            }\n                            break;\n                        case Adherent::PK:\n                            $this->_member = (int)$value;\n                            break;\n                        case 'trans_amount':\n                            $this->_amount = $value;\n                            $value = strtr($value, ',', '.');\n                            if (!is_numeric($value)) {\n                                $this->errors[] = _T(\"- The amount must be an integer!\");\n                            }\n                            break;\n                        case 'trans_desc':\n                            /** TODO: retrieve field length from database and check that */\n                            $this->_description = strip_tags($value);\n                            if (mb_strlen($value) > 150) {\n                                $this->errors[] = _T(\"- Transaction description must be 150 characters long maximum.\");\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n\n        // missing required fields?\n        foreach ($required as $key => $val) {\n            if ($val === 1) {\n                $prop = '_' . $this->_fields[$key]['propname'];\n                if (!isset($disabled[$key]) && !isset($this->$prop)) {\n                    $this->errors[] = str_replace(\n                        '%field',\n                        '<a href=\"#' . $key . '\">' . $this->getFieldLabel($key) . '</a>',\n                        _T(\"- Mandatory field %field empty.\")\n                    );\n                }\n            }\n        }\n\n        if ($this->_id != '') {\n            $dispatched = $this->getDispatchedAmount();\n            if ($dispatched > $this->_amount) {\n                $this->errors[] = _T(\"- Sum of all contributions exceed corresponding transaction amount.\");\n            }\n        }\n\n        $this->dynamicsCheck($values, $required, $disabled);\n\n        if (count($this->errors) > 0) {\n            Analog::log(\n                'Some errors has been thew attempting to edit/store a transaction' .\n                print_r($this->errors, true),\n                Analog::DEBUG\n            );\n            return $this->errors;\n        } else {\n            Analog::log(\n                'Transaction checked successfully.',\n                Analog::DEBUG\n            );\n            return true;\n        }\n    }\n\n    /**\n     * Store the transaction\n     *\n     * @param History $hist History\n     *\n     * @return boolean\n     */\n    public function store(History $hist)\n    {\n        global $emitter;\n\n        $event = null;\n\n        try {\n            $this->zdb->connection->beginTransaction();\n            $values = array();\n            $fields = $this->getDbFields($this->zdb);\n            /** FIXME: quote? */\n            foreach ($fields as $field) {\n                $prop = '_' . $this->_fields[$field]['propname'];\n                $values[$field] = $this->$prop;\n            }\n\n            $success = false;\n            if (!isset($this->_id) || $this->_id == '') {\n                //we're inserting a new transaction\n                unset($values[self::PK]);\n                $insert = $this->zdb->insert(self::TABLE);\n                $insert->values($values);\n                $add = $this->zdb->execute($insert);\n                if ($add->count() > 0) {\n                    $this->_id = $this->zdb->getLastGeneratedValue($this);\n\n                    // logging\n                    $hist->add(\n                        _T(\"Transaction added\"),\n                        Adherent::getSName($this->zdb, $this->_member)\n                    );\n                    $success = true;\n                    $event = 'transaction.add';\n                } else {\n                    $hist->add(_T(\"Fail to add new transaction.\"));\n                    throw new \\RuntimeException(\n                        'An error occurred inserting new transaction!'\n                    );\n                }\n            } else {\n                //we're editing an existing transaction\n                $update = $this->zdb->update(self::TABLE);\n                $update->set($values)->where([self::PK => $this->_id]);\n                $edit = $this->zdb->execute($update);\n                //edit == 0 does not mean there were an error, but that there\n                //were nothing to change\n                if ($edit->count() > 0) {\n                    $hist->add(\n                        _T(\"Transaction updated\"),\n                        Adherent::getSName($this->zdb, $this->_member)\n                    );\n                }\n                $success = true;\n                $event = 'transaction.edit';\n            }\n\n            //dynamic fields\n            if ($success) {\n                $success = $this->dynamicsStore(true);\n            }\n\n            $this->zdb->connection->commit();\n\n            //send event at the end of process, once all has been stored\n            if ($event !== null) {\n                $emitter->emit($event, $this);\n            }\n\n            return true;\n        } catch (Throwable $e) {\n            $this->zdb->connection->rollBack();\n            Analog::log(\n                'Something went wrong :\\'( | ' . $e->getMessage() . \"\\n\" .\n                $e->getTraceAsString(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Retrieve amount that has already been dispatched into contributions\n     *\n     * @return double\n     */\n    public function getDispatchedAmount(): float\n    {\n        if (empty($this->_id)) {\n            return (double)0;\n        }\n\n        try {\n            $select = $this->zdb->select(Contribution::TABLE);\n            $select->columns(\n                array(\n                    'sum' => new Expression('SUM(montant_cotis)')\n                )\n            )->where([self::PK => $this->_id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            $dispatched_amount = $result->sum;\n            return (double)$dispatched_amount;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred retrieving dispatched amounts | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Retrieve amount that has not yet been dispatched into contributions\n     *\n     * @return double\n     */\n    public function getMissingAmount()\n    {\n        if (empty($this->_id)) {\n            return (double)$this->amount;\n        }\n\n        try {\n            $select = $this->zdb->select(Contribution::TABLE);\n            $select->columns(\n                array(\n                    'sum' => new Expression('SUM(montant_cotis)')\n                )\n            )->where([self::PK => $this->_id]);\n\n            $results = $this->zdb->execute($select);\n            $result = $results->current();\n            $dispatched_amount = $result->sum;\n            return (double)$this->_amount - (double)$dispatched_amount;\n        } catch (Throwable $e) {\n            Analog::log(\n                'An error occurred retrieving missing amounts | ' .\n                $e->getMessage(),\n                Analog::ERROR\n            );\n            throw $e;\n        }\n    }\n\n    /**\n     * Retrieve fields from database\n     *\n     * @param Db $zdb Database instance\n     *\n     * @return array\n     */\n    public function getDbFields(Db $zdb)\n    {\n        $columns = $zdb->getColumns(self::TABLE);\n        $fields = array();\n        foreach ($columns as $col) {\n            $fields[] = $col->getName();\n        }\n        return $fields;\n    }\n\n    /**\n     * Get the relevant CSS class for current transaction\n     *\n     * @return string current transaction row class\n     */\n    public function getRowClass()\n    {\n        return ($this->getMissingAmount() == 0) ?\n            'transaction-normal' : 'transaction-uncomplete';\n    }\n\n    /**\n     * Global getter method\n     *\n     * @param string $name name of the property we want to retrive\n     *\n     * @return false|object the called property\n     */\n    public function __get($name)\n    {\n        $forbidden = array();\n\n        $rname = '_' . $name;\n        if (!in_array($name, $forbidden) && property_exists($this, $rname)) {\n            switch ($name) {\n                case 'date':\n                    if ($this->$rname != '') {\n                        try {\n                            $d = new \\DateTime($this->$rname);\n                            return $d->format(__(\"Y-m-d\"));\n                        } catch (Throwable $e) {\n                            //oops, we've got a bad date :/\n                            Analog::log(\n                                'Bad date (' . $this->$rname . ') | ' .\n                                $e->getMessage(),\n                                Analog::INFO\n                            );\n                            return $this->$rname;\n                        }\n                    }\n                    break;\n                case 'id':\n                    if ($this->$rname !== null) {\n                        return (int)$this->$rname;\n                    }\n                    return null;\n                case 'amount':\n                    if ($this->$rname !== null) {\n                        return (double)$this->$rname;\n                    }\n                    return null;\n                default:\n                    return $this->$rname;\n            }\n        } else {\n            Analog::log(\n                sprintf(\n                    'Property %1$s does not exists for transaction',\n                    $name\n                ),\n                Analog::WARNING\n            );\n            return false;\n        }\n    }\n\n    /**\n     * Get field label\n     *\n     * @param string $field Field name\n     *\n     * @return string\n     */\n    public function getFieldLabel($field)\n    {\n        $label = $this->_fields[$field]['label'];\n        //replace \"&nbsp;\"\n        $label = str_replace('&nbsp;', ' ', $label);\n        //remove trailing ':' and then trim\n        $label = trim(trim($label, ':'));\n        return $label;\n    }\n\n    /**\n     * Handle files (dynamics files)\n     *\n     * @param array $files Files sent\n     *\n     * @return array|true\n     */\n    public function handleFiles($files)\n    {\n        $this->errors = [];\n\n        $this->dynamicsFiles($files);\n\n        if (count($this->errors) > 0) {\n            Analog::log(\n                'Some errors has been thew attempting to edit/store a transaction files' . \"\\n\" .\n                print_r($this->errors, true),\n                Analog::ERROR\n            );\n            return $this->errors;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * Can current logged-in user display transaction\n     *\n     * @param Login $login Login instance\n     *\n     * @return boolean\n     */\n    public function canShow(Login $login): bool\n    {\n        //non-logged-in members cannot show contributions\n        if (!$login->isLogged()) {\n            return false;\n        }\n\n        //admin and staff users can edit, as well as member itself\n        if (!$this->id || $this->id && $login->id == $this->_member || $login->isAdmin() || $login->isStaff()) {\n            return true;\n        }\n\n        //parent can see their children transactions\n        $parent = new Adherent($this->zdb);\n        $parent\n            ->disableAllDeps()\n            ->enableDep('children')\n            ->load($this->login->id);\n        if ($parent->hasChildren()) {\n            foreach ($parent->children as $child) {\n                if ($child->id === $this->_member) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        return false;\n    }\n}\n", "    <table class=\"listing\">\n{if $class eq 'Status'}\n        <caption>\n            {_T string=\"Note: members with a status priority lower than %priority are staff members.\" pattern=\"/%priority/\" replace=$non_staff_priority}\n        </caption>\n{/if}\n        <thead>\n            <tr>\n                <th class=\"id_row\">#</th>\n                <th>{_T string=\"Name\"}</th>\n{if $class == 'ContributionsTypes'}\n                <th>{_T string=\"Extends membership?\"}</th>\n{elseif $class == 'Status'}\n                <th>{_T string=\"Priority\"}</th>\n{/if}\n                <th>{_T string=\"Actions\"}</th>\n            </tr>\n        </thead>\n        <tfoot>\n            <tr>\n                <td data-scope=\"row\">\n                    <span class=\"row-title\">\n{if $class eq 'Status'}\n                        {_T string=\"New status\"}\n{else}\n                        {_T string=\"New contribution type\"}\n{/if}\n                    </span>\n                </td>\n                <td class=\"left\" data-title=\"{_T string=\"Name\"}\">\n                    <input size=\"40\" type=\"text\" name=\"{$fields.libelle}\"/>\n                </td>\n                <td class=\"left\" data-title=\"{if $class == 'ContributionsTypes'}{_T string=\"Extends membership?\"}{else}{_T string=\"Priority\"}{/if}\">\n{if $class == 'ContributionsTypes'}\n                    <select name=\"{$fields.third}\">\n                        <option value=\"0\" selected=\"selected\">{_T string=\"No\"}</option>\n                        <option value=\"1\">{_T string=\"Yes\"}</option>\n                    </select>\n{elseif $class == 'Status'}\n                    <input size=\"4\" type=\"text\" name=\"{$fields.third}\" value=\"99\" />\n{/if}\n                </td>\n                <td class=\"center actions_row\">\n                    <input type=\"hidden\" name=\"new\" value=\"1\" />\n                    <input type=\"hidden\" name=\"class\" value=\"{$class}\" />\n                    <button type=\"submit\" name=\"valid\">\n                        <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n                        {_T string=\"Add\"}\n                    </button>\n                </td>\n            </tr>\n        </tfoot>\n        <tbody>\n{foreach from=$entries item=entry key=eid name=allentries}\n            <tr class=\"{if $smarty.foreach.allentries.iteration % 2 eq 0}even{else}odd{/if}\">\n                <td data-scope=\"row\">\n                    {$eid}\n                    <span class=\"row-title\">\n                        <a href=\"{path_for name=\"editEntitled\" data=[\"class\" => $url_class, \"action\" => \"edit\", \"id\" => $eid]}\">\n                            {_T string=\"%s field\" pattern=\"/%s/\" replace=$entry.name|escape}\n                        </a>\n                    </span>\n                </td>\n                <td class=\"left\" data-title=\"{_T string=\"Name\"}\">\n\n                    {if $class == 'Status'}\n                        {if $entry.extra < 30}\n                            <img src=\"{base_url}/{$template_subdir}images/icon-staff.png\" alt=\"{_T string=\"[staff]\"}\" width=\"16\" height=\"16\"/>\n                        {else}\n                            <img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16\" height=\"16\"/>\n                        {/if}\n                    {/if}\n                    {$entry.name|escape}\n                </td>\n                <td data-title=\"{if $class == 'ContributionsTypes'}{_T string=\"Extends membership?\"}{else}{_T string=\"Priority\"}{/if}\">\n    {if $class == 'ContributionsTypes'}\n                    {if $entry.extra eq 1}\n                        {_T string=\"Yes\"}\n                    {else}\n                        {_T string=\"No\"}\n                    {/if}\n    {elseif $class == 'Status'}\n                    {$entry.extra}\n    {/if}\n                </td>\n                <td class=\"center actions_row\">\n                    <a\n                        href=\"{path_for name=\"editEntitled\" data=[\"class\" => $url_class, \"action\" => \"edit\", \"id\" => $eid]}\"\n                        class=\"action tooltip\"\n                    >\n                        <i class=\"fas fa-edit fa-fw\"></i>\n                        <span class=\"sr-only\">{_T string=\"Edit '%s' field\" pattern=\"/%s/\" replace=$entry.name|escape}</span>\n                    </a>\n                    <a\n                        href=\"{path_for name=\"removeEntitled\" data=[\"class\" => $url_class, \"id\" => $eid]}\"\n                        class=\"delete tooltip\"\n                    >\n                        <i class=\"fas fa-trash fa-fw\"></i>\n                        <span class=\"sr-only\">{_T string=\"Delete '%s' field\" pattern=\"/%s/\" replace=$entry.name|escape}</span>\n                    </a>\n                </td>\n            </tr>\n{/foreach}\n        </tbody>\n    </table>\n", "{extends file=\"page.tpl\"}\n\n{block name=\"content\"}\n        <form action=\"{path_for name=\"titles\"}\" method=\"post\" enctype=\"multipart/form-data\">\n                <table class=\"listing\">\n                    <thead>\n                        <tr>\n                            <th class=\"id_row\">#</th>\n                            <th>{_T string=\"Short form\"}</th>\n                            <th>{_T string=\"Long form\"}</th>\n                            <th>{_T string=\"Actions\"}</th>\n                        </tr>\n                    </thead>\n                    <tfoot>\n                        <tr>\n                            <td data-scope=\"row\">\n                                <span class=\"row-title\">\n                                    {_T string=\"Add title\"}\n                                </span>\n                            </td>\n                            <td class=\"left\" data-title=\"{_T string=\"Short form\"}\">\n                                <input size=\"20\" type=\"text\" name=\"short_label\"/>\n                            </td>\n                            <td class=\"left\" data-title=\"{_T string=\"Long form\"}\">\n                                <input size=\"20\" type=\"text\" name=\"long_label\"/>\n                            </td>\n                            <td class=\"center actions_row\">\n                                <input type=\"hidden\" name=\"new\" value=\"1\" />\n                                <button type=\"submit\" name=\"valid\">\n                                    <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n                                    {_T string=\"Add\"}\n                                </button>\n                            </td>\n                        </tr>\n                    </tfoot>\n                    <tbody>\n            {foreach from=$titles_list item=title name=alltitles}\n                        <tr class=\"{if $smarty.foreach.alltitles.iteration % 2 eq 0}even{else}odd{/if}\">\n                            <td data-scope=\"row\">\n    {if $preferences->pref_show_id}\n                                {$title->id}\n    {else}\n                                {$smarty.foreach.alltitles.iteration}\n    {/if}\n                                <span class=\"row-title\">\n                                    <a href=\"{path_for name=\"editTitle\" data=[\"id\" => $title->id]}\">\n                                        {_T string=\"%s title\" pattern=\"/%s/\" replace=$title->short|escape}\n                                    </a>\n                                </span>\n                            </td>\n                            <td class=\"left\" data-title=\"{_T string=\"Short form\"}\">{$title->short|escape}</td>\n                            <td class=\"left\" data-title=\"{_T string=\"Long form\"}\">{$title->long|escape}</td>\n                            <td class=\"center actions_row\">\n                                <a\n                                    href=\"{path_for name=\"editTitle\" data=[\"id\" => $title->id]}\"\n                                    class=\"tooltip action\"\n                                >\n                                    <i class=\"fas fa-edit fa-fw\"></i>\n                                    <span class=\"sr-only\">{_T string=\"Edit '%s' title\" pattern=\"/%s/\" replace=$title->short|escape}</span>\n                                </a>\n                {if $title->id eq 1 or $title->id eq 2}\n                                <img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16px\" height=\"16px\"/>\n                {else}\n                                <a\n                                    href=\"{path_for name=\"removeTitle\" data=[\"id\" => $title->id]}\"\n                                    class=\"delete tooltip\"\n                                >\n                                    <i class=\"fa fa-trash fa-fw\"></i>\n                                    <span class=\"sr-only\">{_T string=\"Delete '%s' title\" pattern=\"/%s/\" replace=$title->short|escape}</span>\n                                </a>\n                {/if}\n                            </td>\n                        </tr>\n            {/foreach}\n                    </tbody>\n                </table>\n        </form>\n{/block}\n\n{block name=\"javascripts\"}\n        <script type=\"text/javascript\">\n            $(function() {\n                {include file=\"js_removal.tpl\"}\n            });\n        </script>\n{/block}\n", "{extends file=\"page.tpl\"}\n{block name=\"content\"}\n        <form action=\"{path_for name=\"payments_filter\" data=[\"type\" => \"transactions\"]}\" method=\"post\" id=\"filtre\">\n        <div id=\"listfilter\">\n            <label for=\"start_date_filter\">{_T string=\"Show transactions since\"}</label>&nbsp;\n            <input type=\"text\" name=\"start_date_filter\" id=\"start_date_filter\" maxlength=\"10\" size=\"10\" value=\"{$filters->start_date_filter}\"/>\n            <label for=\"end_date_filter\">{_T string=\"until\"}</label>&nbsp;\n            <input type=\"text\" name=\"end_date_filter\" id=\"end_date_filter\" maxlength=\"10\" size=\"10\" value=\"{$filters->end_date_filter}\"/>\n            <input type=\"submit\" class=\"inline\" value=\"{_T string=\"Filter\"}\"/>\n            <input type=\"submit\" name=\"clear_filter\" class=\"inline\" value=\"{_T string=\"Clear filter\"}\"/>\n        </div>\n        <table class=\"infoline\">\n            <tr>\n                <td class=\"left nowrap\">\n{if isset($member)}\n    {if $login->isAdmin() or $login->isStaff() or $member->canShow($login)}\n                    <a\n                        href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"member\", \"value\" => \"all\"]}\"\n                        class=\"tooltip\"\n                    >\n                        <i class=\"fas fa-eraser\"></i>\n                        <span class=\"sr-only\">{_T string=\"Show all members transactions\"}</span>\n                    </a>\n    {/if}\n                    <strong>{$member->sname}</strong>\n    {if $login->isAdmin() or $login->isStaff()}\n                    (<a href=\"{path_for name=\"member\" data=[\"id\" => $member->id]}\">{_T string=\"See member profile\"}</a> -\n                    <a href=\"{path_for name=\"addTransaction\"}?id_adh={$member->id}\">{_T string=\"Add a transaction\"}</a>)\n    {/if}\n                    &nbsp;:\n{/if}\n                    {_T string=\"%count transaction\" plural=\"%count transactions\" count=$nb pattern=\"/%count/\" replace=$nb}\n                </td>\n                <td class=\"right\">\n                    <label for=\"nbshow\">{_T string=\"Records per page:\"}</label>\n                    <select name=\"nbshow\" id=\"nbshow\">\n                        {html_options options=$nbshow_options selected=$numrows}\n                    </select>\n                    <noscript> <span><input type=\"submit\" value=\"{_T string=\"Change\"}\" /></span></noscript>\n                </td>\n            </tr>\n        </table>\n        </form>\n        <table class=\"listing\">\n            <thead>\n                <tr>\n                    <th class=\"id_row\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_ID\"|constant]}\">#\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_ID')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                            <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                            <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n                    <th class=\"left date_row\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_DATE\"|constant]}\">{_T string=\"Date\"}\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_DATE')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n                    {if (($login->isAdmin() or $login->isStaff()) and !isset($member)) or isset($pmember)}\n                        <th class=\"left\">\n                            <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_MEMBER\"|constant]}\">{_T string=\"Member\"}\n                                {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_MEMBER')}\n                                    {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                                    {else}\n                                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                                    {/if}\n                                {/if}\n                            </a>\n                        </th>\n                    {/if}\n                    <th class=\"left\">{_T string=\"Description\"}</th>\n{if $login->isAdmin() or $login->isStaff()}\n                    <th class=\"left\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_MEMBER\"|constant]}\">{_T string=\"Originator\"}\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_MEMBER')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n{/if}\n                    <th class=\"left\">\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"order\", \"value\" => \"Galette\\Filters\\TransactionsList::ORDERBY_AMOUNT\"|constant]}\">{_T string=\"Amount\"}\n                        {if $filters->orderby eq constant('Galette\\Filters\\TransactionsList::ORDERBY_AMOUNT')}\n                            {if $filters->ordered eq constant('Galette\\Filters\\TransactionsList::ORDER_ASC')}\n                        <img src=\"{base_url}/{$template_subdir}images/down.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {else}\n                        <img src=\"{base_url}/{$template_subdir}images/up.png\" width=\"10\" height=\"6\" alt=\"\"/>\n                            {/if}\n                        {/if}\n                        </a>\n                    </th>\n{if $login->isAdmin() or $login->isStaff()}\n                    <th class=\"actions_row\">{_T string=\"Actions\"}</th>\n{/if}\n                </tr>\n            </thead>\n            <tbody>\n{foreach from=$list item=transaction name=transactions_list key=ordre}\n    {assign var=\"mid\" value=$transaction->member}\n    {assign var=\"cclass\" value=$transaction->getRowClass()}\n                <tr>\n                    <td class=\"{$cclass} nowrap\" data-scope=\"row\">\n    {if $preferences->pref_show_id}\n                        {$transaction->id}\n    {else}\n                        {$ordre+1+($filters->current_page - 1)*$numrows}\n    {/if}\n                        <span class=\"row-title\">\n                            <a href=\"{path_for name=\"editTransaction\" data=[\"id\" => $transaction->id]}\">\n                                {_T string=\"Transaction %id\" pattern=\"/%id/\" replace=$transaction->id}\n                            </a>\n                        </span>\n                    </td>\n                    <td class=\"{$cclass} nowrap\" data-title=\"{_T string=\"Date\"}\">{$transaction->date}</td>\n                    {if (($login->isAdmin() or $login->isStaff()) && !isset($member)) or isset($pmember)}\n                        <td class=\"{$cclass}\" data-title=\"{_T string=\"Member\"}\">\n                            {if isset($member)}\n                                {assign var=\"mname\" value=$member->sname}\n                            {else}\n                                {assign var=\"mname\" value={memberName id=$mid}}\n                            {/if}\n                            {if $filters->filtre_cotis_adh eq \"\"}\n                                <a\n                                        href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"member\", \"value\" => $mid]}\"\n                                        title=\"{_T string=\"Show only '%name' transactions\" pattern=\"/%name/\" replace=$mname}\"\n                                >\n                                    <i class=\"fa fa-filter\"></i>\n                                </a>\n                            {/if}\n                            <a\n                                    href=\"{path_for name=\"member\" data=[\"id\" => $mid]}\"\n                                    title=\"{_T string=\"Show '%name' card\" pattern=\"/%name/\" replace=$mname}\"\n                            >\n                                {if isset($member)}{$member->sname}{else}{memberName id=\"$mid\"}{/if}\n                            </a>\n                        </td>\n                    {/if}\n                    <td class=\"{$cclass} nowrap\" data-title=\"{_T string=\"Description\"}\">{$transaction->description|escape}</td>\n{if $login->isAdmin() or $login->isStaff()}\n                    <td class=\"{$cclass}\" data-title=\"{_T string=\"Originator\"}\">\n    {if $filters->filtre_cotis_adh eq \"\"}\n                        <a href=\"{path_for name=\"contributions\" data=[\"type\" => \"transactions\", \"option\" => \"member\", \"value\" => $mid]}\">\n                            {if isset($member)}{$member->sname}{else}{memberName id=\"$mid\"}{/if}\n                        </a>\n    {else}\n                        <a href=\"{path_for name=\"member\" data=[\"id\" => $mid]}\">\n                            {if isset($member)}{$member->sname}{else}{memberName id=\"$mid\"}{/if}\n                        </a>\n    {/if}\n                    </td>\n{/if}\n                    <td class=\"{$cclass} nowrap\" data-title=\"{_T string=\"Amount\"}\">{$transaction->amount}</td>\n{if $login->isAdmin() or $login->isStaff()}\n                    <td class=\"{$cclass} center nowrap\">\n                        <a\n                            href=\"{path_for name=\"editTransaction\" data=[\"id\" => $transaction->id]}\"\n                            class=\"tooltip action\"\n                        >\n                            <i class=\"fas fa-edit\"></i>\n                            <span class=\"sr-only\">{_T string=\"Edit transaction #%id\" pattern=\"/%id/\" replace=$transaction->id}</span>\n                        </a>\n                        <a\n                            href=\"{path_for name=\"removeContribution\" data=[\"type\" => \"transactions\", \"id\" => $transaction->id]}\"\n                            class=\"delete tooltip\"\n                        >\n                            <i class=\"fas fa-trash\"></i>\n                            <span class=\"sr-only\">{_T string=\"Remove transaction #%id\" pattern=\"/%id/\" replace=$transaction->id}</span>\n                        </a>\n                    </td>\n{/if}\n                </tr>\n{foreachelse}\n                <tr><td colspan=\"{if $login->isAdmin() or $login->isStaff()}7{else}5{/if}\" class=\"emptylist\">{_T string=\"no transaction\"}</td></tr>\n{/foreach}\n            </tbody>\n        </table>\n{if $nb != 0}\n        <div class=\"center cright\">\n            {_T string=\"Pages:\"}<br/>\n            <ul class=\"pages\">{$pagination}</ul>\n        </div>\n{/if}\n        <div id=\"legende\" title=\"{_T string=\"Legend\"}\">\n            <h1>{_T string=\"Legend\"}</h1>\n            <table>\n                <tr>\n                    <th class=\"transaction-normal color-sample\"><img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16\" height=\"16\"/></th>\n                    <td class=\"back\">{_T string=\"Completely dispatched transaction\"}</td>\n                </tr>\n                <tr>\n                    <th class=\"transaction-uncomplete color-sample\"><img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16\" height=\"16\"/></th>\n                    <td class=\"back\">{_T string=\"Uncomplete dispatched transaction\"}</td>\n                </tr>\n            </table>\n        </div>\n{/block}\n\n{block name=\"javascripts\"}\n        <script type=\"text/javascript\">\n            $(function(){\n                var _checklinks = '<div class=\"checkboxes\"><a href=\"#\" class=\"show_legend fright\">{_T string=\"Show legend\"}</a></div>';\n                $('.listing').before(_checklinks);\n                $('.listing').after(_checklinks);\n\n                //$('#table_footer').parent().before('<td class=\"right\" colspan=\"{if ($login->isAdmin() or $login->isStaff()) && !isset($member)}9{elseif $login->isAdmin() or $login->isStaff()}8{else}7{/if}\"><a href=\"#\" class=\"show_legend\">{_T string=\"Show legend\"}</a></td>');\n\n                _bind_legend();\n\n                $('#start_date_filter, #end_date_filter').datepicker({\n                    changeMonth: true,\n                    changeYear: true,\n                    showOn: 'button',\n                    buttonText: '<i class=\"far fa-calendar-alt\"></i> <span class=\"sr-only\">{_T string=\"Select a date\" escape=\"js\"}</span>'\n                });\n\n                {include file=\"js_removal.tpl\"}\n            });\n        </script>\n{/block}\n"], "filenames": ["galette/composer.json", "galette/composer.lock", "galette/lib/Galette/Controllers/Crud/PaymentTypeController.php", "galette/lib/Galette/Core/Preferences.php", "galette/lib/Galette/Entity/Entitled.php", "galette/lib/Galette/Entity/Title.php", "galette/lib/Galette/Entity/Transaction.php", "galette/templates/default/gestion_intitule_content.tpl", "galette/templates/default/gestion_titres.tpl", "galette/templates/default/gestion_transactions.tpl"], "buggy_code_start_loc": [52, 7, 10, 757, 431, 142, 360, 60, 47, 153], "buggy_code_end_loc": [53, 367, 240, 1296, 491, 144, 361, 100, 70, 154], "fixing_code_start_loc": [52, 7, 10, 758, 432, 142, 360, 60, 47, 153], "fixing_code_end_loc": [54, 422, 240, 1317, 494, 144, 361, 100, 70, 154], "type": "CWE-79", "message": "Galette is a membership management web application built for non profit organizations and released under GPLv3. Versions prior to 0.9.6 are subject to stored cross site scripting attacks via the preferences footer. The preference footer can only be altered by a site admin. This issue has been resolved in the 0.9.6 release and all users are advised to upgrade. There are no known workarounds.", "other": {"cve": {"id": "CVE-2021-41261", "sourceIdentifier": "security-advisories@github.com", "published": "2021-12-16T19:15:08.183", "lastModified": "2021-12-21T18:54:55.827", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Galette is a membership management web application built for non profit organizations and released under GPLv3. Versions prior to 0.9.6 are subject to stored cross site scripting attacks via the preferences footer. The preference footer can only be altered by a site admin. This issue has been resolved in the 0.9.6 release and all users are advised to upgrade. There are no known workarounds."}, {"lang": "es", "value": "Galette es una aplicaci\u00f3n web de administraci\u00f3n de socios creada para organizaciones sin \u00e1nimo de lucro y publicada bajo GPLv3. Las versiones anteriores a 0.9.6, est\u00e1n sujetas a ataques de cross site scripting almacenados por medio del pie de p\u00e1gina de las preferencias. El pie de p\u00e1gina de las preferencias s\u00f3lo puede ser modificado por un administrador del sitio. Este problema ha sido resuelto en versi\u00f3n 0.9.6 y se recomienda a todos los usuarios que se actualicen. No se presentan soluciones conocidas"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.7, "impactScore": 5.8}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:galette:galette:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.9.6", "matchCriteriaId": "98F845B7-F89C-4664-BE48-681C2B16EFE2"}]}]}], "references": [{"url": "https://github.com/galette/galette/commit/0d55bc7f420470e0dbca91ebe7899c592905cbc5", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/galette/galette/security/advisories/GHSA-28fg-cp22-6c33", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/galette/galette/commit/0d55bc7f420470e0dbca91ebe7899c592905cbc5"}}