{"buggy_code": ["// Copyright 2012 Samuel Stauffer. All rights reserved.\n// Use of this source code is governed by a 3-clause BSD\n// license that can be found in the LICENSE file.\n\npackage socks\n\nimport (\n\t\"net\"\n\t\"time\"\n)\n\ntype proxiedConn struct {\n\tconn       net.Conn\n\tremoteAddr *proxiedAddr\n\tboundAddr  *proxiedAddr\n}\n\nfunc (c *proxiedConn) Read(b []byte) (int, error) {\n\treturn c.conn.Read(b)\n}\n\nfunc (c *proxiedConn) Write(b []byte) (int, error) {\n\treturn c.conn.Write(b)\n}\n\nfunc (c *proxiedConn) Close() error {\n\treturn c.conn.Close()\n}\n\nfunc (c *proxiedConn) LocalAddr() net.Addr {\n\tif c.boundAddr != nil {\n\t\treturn c.boundAddr\n\t}\n\treturn c.LocalAddr()\n}\n\nfunc (c *proxiedConn) RemoteAddr() net.Addr {\n\tif c.remoteAddr != nil {\n\t\treturn c.remoteAddr\n\t}\n\treturn c.RemoteAddr()\n}\n\nfunc (c *proxiedConn) SetDeadline(t time.Time) error {\n\treturn c.conn.SetDeadline(t)\n}\n\nfunc (c *proxiedConn) SetReadDeadline(t time.Time) error {\n\treturn c.conn.SetReadDeadline(t)\n}\n\nfunc (c *proxiedConn) SetWriteDeadline(t time.Time) error {\n\treturn c.conn.SetWriteDeadline(t)\n}\n"], "fixing_code": ["// Copyright 2012 Samuel Stauffer. All rights reserved.\n// Use of this source code is governed by a 3-clause BSD\n// license that can be found in the LICENSE file.\n\npackage socks\n\nimport (\n\t\"net\"\n\t\"time\"\n)\n\ntype proxiedConn struct {\n\tconn       net.Conn\n\tremoteAddr *proxiedAddr\n\tboundAddr  *proxiedAddr\n}\n\nfunc (c *proxiedConn) Read(b []byte) (int, error) {\n\treturn c.conn.Read(b)\n}\n\nfunc (c *proxiedConn) Write(b []byte) (int, error) {\n\treturn c.conn.Write(b)\n}\n\nfunc (c *proxiedConn) Close() error {\n\treturn c.conn.Close()\n}\n\nfunc (c *proxiedConn) LocalAddr() net.Addr {\n\tif c.boundAddr != nil {\n\t\treturn c.boundAddr\n\t}\n\treturn c.conn.LocalAddr()\n}\n\nfunc (c *proxiedConn) RemoteAddr() net.Addr {\n\tif c.remoteAddr != nil {\n\t\treturn c.remoteAddr\n\t}\n\treturn c.conn.RemoteAddr()\n}\n\nfunc (c *proxiedConn) SetDeadline(t time.Time) error {\n\treturn c.conn.SetDeadline(t)\n}\n\nfunc (c *proxiedConn) SetReadDeadline(t time.Time) error {\n\treturn c.conn.SetReadDeadline(t)\n}\n\nfunc (c *proxiedConn) SetWriteDeadline(t time.Time) error {\n\treturn c.conn.SetWriteDeadline(t)\n}\n"], "filenames": ["conn.go"], "buggy_code_start_loc": [34], "buggy_code_end_loc": [42], "fixing_code_start_loc": [34], "fixing_code_end_loc": [42], "type": "CWE-835", "message": "The RemoteAddr and LocalAddr methods on the returned net.Conn may call themselves, leading to an infinite loop which will crash the program due to a stack overflow.", "other": {"cve": {"id": "CVE-2013-10005", "sourceIdentifier": "security@golang.org", "published": "2022-12-27T22:15:10.823", "lastModified": "2023-01-06T14:55:31.883", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The RemoteAddr and LocalAddr methods on the returned net.Conn may call themselves, leading to an infinite loop which will crash the program due to a stack overflow."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-835"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:socks5_project:socks5:*:*:*:*:*:go:*:*", "versionEndExcluding": "2013-08-07", "matchCriteriaId": "C0BC2021-1533-40FC-AA93-3B12B489CF8A"}]}]}], "references": [{"url": "https://github.com/btcsuite/go-socks/commit/233bccbb1abe02f05750f7ace66f5bffdb13defc", "source": "security@golang.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://pkg.go.dev/vuln/GO-2020-0024", "source": "security@golang.org", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/btcsuite/go-socks/commit/233bccbb1abe02f05750f7ace66f5bffdb13defc"}}