{"buggy_code": ["<?php\n$entry = false;\n\nif (isset($item['rel_id']) AND !isset($is_entry)) {\n    $entry_params['id'] = $item['rel_id'];\n    $entry = get_contact_entry_by_id($entry_params);\n    $item_id = $item['rel_id'];\n} elseif (isset($item['id']) AND isset($is_entry)) {\n    $entry_params['id'] = $item['id'];\n    $entry = get_contact_entry_by_id($entry_params);\n    $item_id = $item['id'];\n}\n\n\n$form_files = [];\n$form_values = [];\n\n$find_form_values = \\MicroweberPackages\\Form\\Models\\FormDataValue::where('form_data_id', $item_id)->get();\nif ($find_form_values != null) {\n    // seperate uploads from this array\n    $new_form_values = [];\n    foreach ($find_form_values->toArray() as $form_value) {\n\n        if (isset($form_value['field_type']) && $form_value['field_type'] == 'upload') {\n            $form_files[$form_value['field_name']] = $form_value['field_value_json'];\n            continue;\n        }\n\n        if (!empty($form_value['field_value_json'])) {\n            $new_form_values[$form_value['field_name']] = $form_value['field_value_json'];\n        } else {\n            $new_form_values[$form_value['field_name']] = $form_value['field_value'];\n        }\n    }\n    $form_values = $new_form_values;\n}\n\n$form_values_formated = [];\nif ($form_values) {\n    $countArrays = ceil(count($form_values) / 2);\n    $form_values_formated[] = array_slice($form_values, 0, $countArrays);\n    $form_values_formated[] = array_slice($form_values, $countArrays);\n}\n\n\n$created_by = false;\nif (isset($item['created_by'])) {\n    $created_by = get_user_by_id($item['created_by']);\n\n    if (isset($created_by['username'])) {\n        $created_by_username = $created_by['username'];\n    } else {\n        $created_by_username = false;\n    }\n}\n?>\n\n<script>\n    $( document ).ready(function() {\n        $('.collapse', '.js-form-entry-<?php print $item_id ?>').on('shown.bs.collapse', function () {\n            $('.js-form-entry-<?php print $item_id ?>').prop('disabled',true).removeAttr('data-toggle');\n        });\n    });\n</script>\n\n<div class=\"js-form-entry-<?php print $item_id ?> card mb-2 not-collapsed-border collapsed card-message-holder <?php if (!isset($is_entry)): ?>card-bubble<?php endif; ?> <?php if (isset($item['is_read']) AND $item['is_read'] == 0): ?>active<?php endif; ?> bg-silver\" data-toggle=\"collapse\" data-target=\"#notif-entry-item-<?php print $item_id ?>\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n    <div class=\"card-body\">\n        <?php if (isset($params['module']) and $params['module'] == 'admin/notifications'): ?>\n            <div class=\"row align-items-center mb-3\">\n                <div class=\"col text-start text-left\">\n                    <span class=\"text-primary text-break-line-2\"><?php _e(\"New form entry\"); ?></span>\n                </div>\n            </div>\n        <?php endif; ?>\n\n        <div class=\"row align-items-center\" data-toggle=\"collapse\" data-target=\"#notif-entry-item-<?php print $item_id ?>\" >\n            <div class=\"col\" style=\"max-width:55px;\">\n                <i class=\"mdi mdi-email text-primary mdi-24px\"></i>\n            </div>\n            <div class=\"col-10 col-sm item-id\"><span class=\"text-primary\">#<?php echo $entry_params['id']; ?></span></div>\n\n            <div class=\"col-6 col-sm\">\n                <?php print date('M d, Y', strtotime($item['created_at'])); ?>\n                <small class=\"text-muted\"><?php print date('h:s', strtotime($item['created_at'])); ?>h</small>\n            </div>\n\n            <div class=\"col-6 col-sm\"><?php print mw('format')->ago($item['created_at']); ?></div>\n        </div>\n\n        <div class=\"collapse\" id=\"notif-entry-item-<?php print $item_id ?>\">\n            <hr class=\"thin\" />\n            <div class=\"row\">\n\n\n                <?php\n                $iformVr=0;\n                foreach ($form_values_formated as $form_values_row) {\n                ?>\n                <div class=\"col-md-6\">\n                    <?php  if ($iformVr==0){   ?><h6><strong><?php _e(\"Fields\"); ?></strong></h6><?php  } ?>\n\n                    <?php $iformVr++;?>\n\n                    <?php if ($form_values_row){ ?>\n                        <?php foreach ($form_values_row as $key => $val1){ ?>\n                            <?php if (!is_array($val1)){ ?>\n                                <div>\n                                    <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:</small>\n                                    <p><?php print $val1; ?></p>\n                                </div>\n                            <?php } else { ?>\n                                <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:</small>\n                                <?php foreach ($val1 as $val1_1){ ?>\n                                    <p><?php print $val1_1 . '<br />'; ?></p>\n                                <?php }?>\n                            <?php } ?>\n                        <?php } ?>\n                        <?php } ?>\n\n                    <?php\n                    if ($iformVr == count($form_values_formated) && !empty($form_files)) {\n                        ?>\n                        <h6><strong><?php _e(\"Attached files\"); ?></strong></h6>\n                        <?php\n                        foreach ($form_files as $fileNameKey=>$fileSettings){\n                            if(!isset($fileSettings['url'])){\n                                continue;\n                            }\n\n\n                            ?>\n                            <div>\n                                <small class=\"text-muted\"><?php echo $fileNameKey; ?></small> <br />\n                                <a href=\"<?php echo $fileSettings['url']; ?>\" target=\"_blank\">\n                                    <i class=\"mdi mdi-file-check text-primary mdi-18px\"></i> <?php echo str_limit(basename($fileSettings['url']),20); ?>\n                                    (<?php echo app()->format->human_filesize($fileSettings['file_size']) ?>)\n                                </a>\n                            </div>\n                            <?php\n                        }\n                    }\n                    ?>\n\n                </div>\n                <?php\n                }\n                ?>\n\n                <div class=\"col-md-12\">\n                    <script type=\"text/javascript\">\n                        function deleteFormEntry(e, entryId) {\n                            e.stopPropagation();\n                            mw.confirm('<?php _e('Are you sure you want to delete?'); ?>', function () {\n                                $('.js-form-entry-' + entryId).fadeOut();\n\n                                $.post(mw.settings.api_url+'delete_form_entry', {id: entryId}, function(msg) {\n\n                                });\n\n                            });\n                        }\n                    </script>\n                    <button type=\"button\" class=\"btn btn-outline-danger pull-right\" onclick=\"deleteFormEntry(event,<?php echo $item_id; ?>)\"><i class=\"mdi mdi-delete-outline\"></i> <?php _e('Delete'); ?></button>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n</div>\n"], "fixing_code": ["<?php\n$entry = false;\n\nif (isset($item['rel_id']) AND !isset($is_entry)) {\n    $entry_params['id'] = $item['rel_id'];\n    $entry = get_contact_entry_by_id($entry_params);\n    $item_id = $item['rel_id'];\n} elseif (isset($item['id']) AND isset($is_entry)) {\n    $entry_params['id'] = $item['id'];\n    $entry = get_contact_entry_by_id($entry_params);\n    $item_id = $item['id'];\n}\n\n\n$form_files = [];\n$form_values = [];\n\n$find_form_values = \\MicroweberPackages\\Form\\Models\\FormDataValue::where('form_data_id', $item_id)->get();\nif ($find_form_values != null) {\n    // seperate uploads from this array\n    $new_form_values = [];\n    foreach ($find_form_values->toArray() as $form_value) {\n\n        if (isset($form_value['field_type']) && $form_value['field_type'] == 'upload') {\n            $form_files[$form_value['field_name']] = $form_value['field_value_json'];\n            continue;\n        }\n\n        if (!empty($form_value['field_value_json'])) {\n            $new_form_values[$form_value['field_name']] = $form_value['field_value_json'];\n        } else {\n            $new_form_values[$form_value['field_name']] = $form_value['field_value'];\n        }\n    }\n    $form_values = $new_form_values;\n}\n\n$form_values_formated = [];\nif ($form_values) {\n    $countArrays = ceil(count($form_values) / 2);\n    $form_values_formated[] = array_slice($form_values, 0, $countArrays);\n    $form_values_formated[] = array_slice($form_values, $countArrays);\n}\n\n\n$created_by = false;\nif (isset($item['created_by'])) {\n    $created_by = get_user_by_id($item['created_by']);\n\n    if (isset($created_by['username'])) {\n        $created_by_username = $created_by['username'];\n    } else {\n        $created_by_username = false;\n    }\n}\n?>\n\n<script>\n    $( document ).ready(function() {\n        $('.collapse', '.js-form-entry-<?php print $item_id ?>').on('shown.bs.collapse', function () {\n            $('.js-form-entry-<?php print $item_id ?>').prop('disabled',true).removeAttr('data-toggle');\n        });\n    });\n</script>\n\n<div class=\"js-form-entry-<?php print $item_id ?> card mb-2 not-collapsed-border collapsed card-message-holder <?php if (!isset($is_entry)): ?>card-bubble<?php endif; ?> <?php if (isset($item['is_read']) AND $item['is_read'] == 0): ?>active<?php endif; ?> bg-silver\" data-toggle=\"collapse\" data-target=\"#notif-entry-item-<?php print $item_id ?>\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n    <div class=\"card-body\">\n        <?php if (isset($params['module']) and $params['module'] == 'admin/notifications'): ?>\n            <div class=\"row align-items-center mb-3\">\n                <div class=\"col text-start text-left\">\n                    <span class=\"text-primary text-break-line-2\"><?php _e(\"New form entry\"); ?></span>\n                </div>\n            </div>\n        <?php endif; ?>\n\n        <div class=\"row align-items-center\" data-toggle=\"collapse\" data-target=\"#notif-entry-item-<?php print $item_id ?>\" >\n            <div class=\"col\" style=\"max-width:55px;\">\n                <i class=\"mdi mdi-email text-primary mdi-24px\"></i>\n            </div>\n            <div class=\"col-10 col-sm item-id\"><span class=\"text-primary\">#<?php echo $entry_params['id']; ?></span></div>\n\n            <div class=\"col-6 col-sm\">\n                <?php print date('M d, Y', strtotime($item['created_at'])); ?>\n                <small class=\"text-muted\"><?php print date('h:s', strtotime($item['created_at'])); ?>h</small>\n            </div>\n\n            <div class=\"col-6 col-sm\"><?php print mw('format')->ago($item['created_at']); ?></div>\n        </div>\n\n        <div class=\"collapse\" id=\"notif-entry-item-<?php print $item_id ?>\">\n            <hr class=\"thin\" />\n            <div class=\"row\">\n\n                <?php\n                $iformVr=0;\n                foreach ($form_values_formated as $form_values_row) {\n                ?>\n                <div class=\"col-md-6\">\n                    <?php  if ($iformVr==0){   ?><h6><strong><?php _e(\"Fields\"); ?></strong></h6><?php  } ?>\n\n                    <?php $iformVr++;?>\n\n                    <?php if ($form_values_row){ ?>\n                        <?php foreach ($form_values_row as $key => $val1){ ?>\n                            <?php if (!is_array($val1)){ ?>\n                                <div>\n                                    <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:</small>\n                                    <p><?php print htmlentities($val1); ?></p>\n                                </div>\n                            <?php } else { ?>\n                                <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:</small>\n                                <?php foreach ($val1 as $val1_1){ ?>\n                                    <p><?php print htmlentities($val1_1) . '<br />'; ?></p>\n                                <?php }?>\n                            <?php } ?>\n                        <?php } ?>\n                        <?php } ?>\n\n                    <?php\n                    if ($iformVr == count($form_values_formated) && !empty($form_files)) {\n                        ?>\n                        <h6><strong><?php _e(\"Attached files\"); ?></strong></h6>\n                        <?php\n                        foreach ($form_files as $fileNameKey=>$fileSettings){\n                            if(!isset($fileSettings['url'])){\n                                continue;\n                            }\n\n\n                            ?>\n                            <div>\n                                <small class=\"text-muted\"><?php echo $fileNameKey; ?></small> <br />\n                                <a href=\"<?php echo $fileSettings['url']; ?>\" target=\"_blank\">\n                                    <i class=\"mdi mdi-file-check text-primary mdi-18px\"></i> <?php echo str_limit(basename($fileSettings['url']),20); ?>\n                                    (<?php echo app()->format->human_filesize($fileSettings['file_size']) ?>)\n                                </a>\n                            </div>\n                            <?php\n                        }\n                    }\n                    ?>\n\n                </div>\n                <?php\n                }\n                ?>\n\n                <div class=\"col-md-12\">\n                    <script type=\"text/javascript\">\n                        function deleteFormEntry(e, entryId) {\n                            e.stopPropagation();\n                            mw.confirm('<?php _e('Are you sure you want to delete?'); ?>', function () {\n                                $('.js-form-entry-' + entryId).fadeOut();\n\n                                $.post(mw.settings.api_url+'delete_form_entry', {id: entryId}, function(msg) {\n\n                                });\n\n                            });\n                        }\n                    </script>\n                    <button type=\"button\" class=\"btn btn-outline-danger pull-right\" onclick=\"deleteFormEntry(event,<?php echo $item_id; ?>)\"><i class=\"mdi mdi-delete-outline\"></i> <?php _e('Delete'); ?></button>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n</div>\n"], "filenames": ["userfiles/modules/admin/notifications/notif_form_entry.php"], "buggy_code_start_loc": [94], "buggy_code_end_loc": [115], "fixing_code_start_loc": [93], "fixing_code_end_loc": [114], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in Packagist microweber/microweber prior to 1.2.11.", "other": {"cve": {"id": "CVE-2022-0278", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-20T10:15:09.997", "lastModified": "2022-01-26T03:22:09.423", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in Packagist microweber/microweber prior to 1.2.11."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Almacenado en Packagist microweber/microweber versiones anteriores a 1.2.11"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microweber:microweber:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.11", "matchCriteriaId": "52D59B39-B1A3-45D1-B4C4-65BEF86F2D85"}]}]}], "references": [{"url": "https://github.com/microweber/microweber/commit/b64ef574b82dbf89a908e1569d790c7012d1ccd7", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/64495d0f-d5ec-4542-9693-32372c18d030", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/microweber/microweber/commit/b64ef574b82dbf89a908e1569d790c7012d1ccd7"}}